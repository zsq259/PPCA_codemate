{"Answer": "&lt;p&gt;for m in range(3):&lt;/p&gt;\n\n&lt;p&gt;    for n in range(4):&lt;/p&gt;\n\n&lt;p&gt;        print(m,n) #m和n就是内外循环的控制变量&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["编程输出内外循环的循环控制变量的值。", ["内外循环的循环控制变量是什么意思啊？\n(*****************************)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在第一个System上一句加上while&amp;#xff08;true&amp;#xff09;&lt;br /&gt;判断用户输入&amp;#xff0c;比如当输入为-1时退出循环就是&lt;br /&gt;if&amp;#xff08;number&amp;#61;&amp;#61;-1&amp;#xff09;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  break&amp;#xff1b;&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["eclipse怎么加入循环控制？像最下面问题那样？", ["将上述程序，加入一个循环控制，实现能够一次运行，可以进行多次输入整型数据，由用户选择退出结束程序运行。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码放在死循环中&amp;#xff0c;在循环最后判断是否继续。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/458596486746170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["java加一个循环控制实现一次运行，能选择结束退出程序运行该怎么编写？", ["\n", "这是一个判断位数跟回文数的一个java程序，要求加入一个循环控制，实现能够一次运行，可以进行多次输入整型数据，由用户选择退出结束程序运行。我试了好多还是不会改写，可以求大家帮帮忙吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/709976956746122.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;\nletter &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; letter:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;当前遍历\\t&amp;#34;&lt;/span&gt;, i,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;:\n        letter.&lt;span class=\"hljs-built_in\"&gt;remove&lt;/span&gt;(i)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;remove&amp;#34;&lt;/span&gt;, i , &lt;span class=\"hljs-string\"&gt;&amp;#34;\\tafter\\t&amp;#34;&lt;/span&gt;, letter, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;结果&amp;#34;&lt;/span&gt;, letter)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python中for循环控制循环次数", ["for循环控制循环次数，为什么不是选择a。", "为什么第二个D删除后就结束循环"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;改动处见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;please input interal numbers and input 0 to stop:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, b;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;b!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;) &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    {\n         &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%ld&amp;#34;&lt;/span&gt;, &amp;amp;b);\n         &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;){  &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n             a&amp;#43;&amp;#43;;        &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n             &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n         }\n         &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;\\n&amp;#34;);&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;suitable number: %ld\\n&amp;#34;&lt;/span&gt;, a&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言的for循环问题", ["输入一批任意数量的正整数，使用for循环控制统计其中不大于100的数值个数｡这是问题", "#include <stdio.h>", "int main()", "{", "printf(\"please input interal numbers and input 0 to stop:\");", "long int a, b;", "for(a=0;b!=0;a++)", "{", "scanf(\"%ld\", &b);", "if (b<100)", "continue;", "printf(\"\\n\");", "}", "printf(\"suitable number: %d\\n\", a-1);", "}", "错在哪里了，运行不出来啊，帮忙打出来谢谢。加v2元补偿"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; turtle as t\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.right(-&lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;)    #起始顶点绝对角度设为正&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;度\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;):    #画&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;边&amp;#xff0c;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; j in range(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;): \n        &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; j%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.fd(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.pendown()\n        &lt;span class=\"hljs-attribute\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.fd(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.penup()\n               \n    &lt;span class=\"hljs-attribute\"&gt;degree&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;    \n    &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.right(degree)\n&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;.done()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/698491091846189.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["如何用Python双重循环语句绘制菱形", ["用Python双重循环语句，绘制四边等长，每个角度为90度，每边20段虚线的菱形"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,k,i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,t&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n   &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; s&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n   &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n   &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(n--){\n         s &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*t/i;\n         k &amp;#61; i;\n         i &amp;#61; t;\n         t &amp;#43;&amp;#61; k;\n   }\n   &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)s);\n   \n   &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["用for循环求分数数列", ["有一组分数序列：2/1，3/2，5/3…..求出这个数列的前n项之和的整数部分。n值通过键盘给定，且n＜=30。输出只保留整数（不要四舍五入"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解答如下&amp;#xff0c;刚开始学习注意代码格式规范&amp;#xff0c;学会用 &lt;code class=\"language-javascript\"&gt;tab&lt;/code&gt; 键&amp;#xff0c;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, mynum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, yournum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;//count计数 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;srand&lt;/span&gt;((&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;time&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;));    &lt;span class=\"hljs-comment\"&gt;//利用时间设置随机种子&amp;#xff0c;Time(0)是得到当前时间值 &lt;/span&gt;\n    mynum &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;//在1~100之间&lt;/span&gt;\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你猜的数字&amp;gt;&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;yournum);\n        count&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (yournum &amp;#61;&amp;#61; mynum) {    &lt;span class=\"hljs-comment\"&gt;//答对 &lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;猜对了!总共猜了 %d 次&amp;#34;&lt;/span&gt;, count);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {    &lt;span class=\"hljs-comment\"&gt;//答错 &lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (yournum &amp;gt; mynum)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;太大了!\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;太小了!\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/118716392056124.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["while语句循环猜数游戏", ["\n", "请问这个游戏该如何修改，猜数小游戏并输出做的次数。麻烦高人指点，谢谢！！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,n;\n   &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n   {\n      &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-2c&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;);\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n   }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["这个怎么输出ABC这些字符呢", ["c++for循环嵌套循环 不明白要怎么输出ABC这些字符 目前只会输入行数什么的 求解惑"]], "Tag": "程序设计"}
{"Answer": "module led\r\n(\r\n  input       clk,\r\n  input       rst_n,\r\n\r\n  output      led_000,\r\n  output      led_001,\r\n  output      led_010,\r\n  output      led_100,\r\n  output      led_111\r\n);\r\n\r\nparameter  LED_000 = 5'b00001,\r\n           LED_001 = 5'b00010,\r\n           LED_010 = 5'b00100,\r\n           LED_100 = 5'b01000,\r\n           LED_111 = 5'b00010;\r\n\r\nreg  [4:0] cnt;\r\nreg  [4:0] cur_state;\r\nreg  [4:0] nxt_state;\r\n\r\nalways @(posedge clk or negedge rst_n)\r\nbegin\r\n  if(~rst_n)\r\n    cur_state &lt;= LED_000;\r\n  else\r\n    cur_state &lt;= nxt_state;\r\nend\r\n\r\nalways @(*)\r\nbegin\r\n  nxt_state = cur_state;\r\n  case(cur_state)\r\n    LED_000 : if(cnt==5'h1f)\r\n                nxt_state = LED_001;\r\n    LED_001 : if(cnt==5'h1f)\r\n                nxt_state = LED_010;\r\n    LED_010 : if(cnt==5'h1f)\r\n                nxt_state = LED_100;\r\n    LED_100 : if(cnt==5'h1f)\r\n                nxt_state = LED_111;\r\n    LED_111 : if(cnt==5'h1f)\r\n                nxt_state = LED_000;\r\n  endcase\r\nend\r\n\r\nalways @(posedge clk or negedge rst_n)\r\nbegin\r\n  if(~rst_n)\r\n    cnt &lt;= 5'd0;\r\n  else\r\n    cnt &lt;= cnt + 1'd1;\r\nend\r\n\r\nassign  led_000=cur_state[0];\r\nassign  led_001=cur_state[1];\r\nassign  led_010=cur_state[2];\r\nassign  led_100=cur_state[3];\r\nassign  led_111=cur_state[4];\r\n\r\nendmodule", "Konwledge_Point": "循环控制", "Question": ["verilog用状态机实现循环彩灯控制器（含清零功能）", ["用状态机实现循环彩灯控制器(含清零功能)000→001→010→100→010→001→000→111→000→111→（循环）"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;answer&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-variable\"&gt;answer&lt;/span&gt; &amp;#43;&amp;#61;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-variable\"&gt;answer&lt;/span&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;简易解法&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;())&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;*(&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["运用循环控制语句编写一段程序", ["请运用循环控制语句，针对等差数列运算，编写一段程序。要求输入首项、公", "后，计算其N项数值。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf是从键盘输入数据&amp;#xff0c;i从0开始到10结束&amp;#xff0c;是让你输入10次。&lt;br /&gt;scanf  执行读取数据的这个动作。&lt;br /&gt;i 通过 for循环来控制scanf执行的次数。第1&amp;#xff08;i&amp;#61;0&amp;#xff09;次读取的时候&amp;#xff0c;把读取的数据放入a[0]&amp;#xff0c;第2&amp;#xff08;i&amp;#61;1&amp;#xff09;次读取的时候&amp;#xff0c;把读取的数据放入a[1]&amp;#xff0c;以此类推。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["指针下for循环中的scanf", ["for循环已经有从i=0开始了，为什么还要scanf函数输入值，而且还是输入10个数，它们之间的运行顺序是怎样的，为什么可以这样"]], "Tag": "程序设计"}
{"Answer": "你这个错是枚举型没有++操作，可以修改为s=s+1，试试\r\n\r\n你这样用其实不是很符合枚举存在的意义，因为我们定义枚举的时候，其实想用的是他的变量名，而重点不是想用他的值，因为他的值只是一个index。\r\n一般枚举的变量名的意思可以非常直观，比如\r\nenum selfError{\r\n\t\tNO_ERROR,\r\n\t\tINVALED_PARM,\r\n\t\tNULL_PTR,\r\n}\r\n\r\n这样你在使用的时候就可以非常方便地根据变量名本身含义去做逻辑处理\r\n定义一个返回类型为selfError的函数\r\nselfError function1() {\r\n\t\tint err = INVALED_PARM；\r\n\t\t。。。。。。。\r\n\t\treturn err；\r\n}\r\n\r\n然后引用的时候很方便地使用枚举型\r\nint err = function1();\r\nif （err ==NO_ERROR ）{\r\n\t\tprintf(\"调用成功\");\r\n}", "Konwledge_Point": "循环控制", "Question": ["枚举变量能否作为循环控制变量？", ["\n\n", "我在书上看到有把枚举变量当做循环控制变量的，但我在用的时候总是报错，是在vc++6.0中不支持这样做吗，我从网上找的程序也无法正常运行，报错为：E:\\CYUYAN\\练习\\枚举_1.cpp(27) : error C2676: binary '++' : 'enum main::season' does not define this operator or a conversion to a type acceptable to the predefined operator", "\n\n", "#include<stdio.h>\n\nvoid main()\n{ \n    enum season {spring=1,summer,autumn,winter}s;\n\n    for(s=spring; s<=winter; s++)\n        printf(\"%d\\n\",s);\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数n&amp;#61;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, a &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; n; i&amp;#43;&amp;#43;)\n    {\n        a &amp;#43;&amp;#61; i;\n        sum &amp;#43;&amp;#61; a;\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;1 &amp;#43; (1&amp;#43;2) &amp;#43; ... &amp;#43; (1&amp;#43;2&amp;#43;3&amp;#43;...&amp;#43;n) &amp;#61; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["计算1+2+...+（1+2+...+n）", ["为什么这样的两个循环不对呢？计算结果始终为0,不能理解哪错了？应该怎样修改呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;#!/usr/bin/env python\nimport &lt;span class=\"hljs-built_in\"&gt;random&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nmi &amp;#61; &lt;span class=\"hljs-number\"&gt;101&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (n &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) :\n    &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;random&lt;/span&gt;.randint(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(mi &amp;gt; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;):\n        mi &amp;#61; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;\n    n &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;10个数的和为:%d&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;%&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;10个数的最大值为:%d&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;%&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;10个数的最小值为:%d&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;%&lt;/span&gt; mi)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;10个数的平均值为:%.2f&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;%&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/158437260046158.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["循环控制的序列是列表，随机生成10个1~100的整数，求最小值、最大值和平均值。", ["循环控制的序列是列表，随机生成10个1~100的整数，求最小值、最大值和平均值。"]], "Tag": "程序设计"}
{"Answer": "说实话，我对ognl其实没多大感觉，我没有专门单独研究过。。所以不能说出什么来。。\r\n你只要在google上搜索ognl文档或手册的，，还是有很多的参考资料的。", "Konwledge_Point": "循环控制", "Question": ["Struts2.1 中ognl循环控制问题", ["如何用OGNL实现一个效果，类似jstl中：", "/c:forEach", "\n这样的效果，就是循环次数和起始值都是由自己的指定。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;只有条件为真才进入循环&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["while循环当循环控制条件变量在循环体内部时，是先循环再判断吗？", []], "Tag": "程序设计"}
{"Answer": "```\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt; \r\n&lt;meta charset=\"utf-8\"&gt; \r\n&lt;title&gt;video&lt;/title&gt; \r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n\t&lt;video class=\"video\" controls&gt;\r\n\t  &lt;source src=\"视频.mp4\"  type=\"video/mp4\"&gt;\r\n\t&lt;/video&gt;\r\n\t&lt;button class=\"aa_2\" onclick=\"toggleHandle(this)\"&gt;切换&lt;/button&gt;\r\n\r\n&lt;/body&gt;\r\n\t&lt;script&gt;\r\n\t\tvar video = document.getElementsByClassName(\"video\")[0];\r\n\t\tfunction toggleHandle(e) {\r\n\t\t\tif(e.className.indexOf('aa_2') &gt; -1) {\r\n\t\t\t\te.className = 'aa2'\r\n\t\t\t\tvideo.play()\r\n\t\t\t} else {\r\n\t\t\t\te.className = 'aa_2'\r\n\t\t\t\tvideo.pause()\r\n\t\t\t}\r\n\t\t}\r\n\t&lt;/script&gt;\r\n&lt;/html&gt;\r\n```", "Konwledge_Point": "循环控制", "Question": ["video标签 切换并播放或者暂停", ["video标签，如何用javascript实现 当点击（切换）按钮时class会变成='aa2’这时候video播放，再点击（切换）按钮后class会变成\"aa_2 \"且video停止播放。", "\n\n", "\n<input type='button' onclick='qiehuan()' value='切换'class=\"touch_sr-only\"/>\n\n\n<div id='dianji' class='aa_1'>\n <video src=\"/i/movie.ogg\" controls=\"controls\"></video>\n</div>\n\n<script>\n  $(\"#nannsd\").click(function(){\n      var word = $.trim($(\"#nannsq\").val());\n      if (word==\"\") {\n        return false;\n      }\n      window.location.href=\"/search?word=\"+word;\n  })\n\n       function qiehuan(){\n    var divEle= document.getElementById('dianji');\n    divEle.className=(divEle.className=='aa_1'?'bb_2':'aa_1'); \n}\n</script>\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;As I understand - you just want to show a list of all data_auth values in a column related to user. Simplest way is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$SQL = mysql_query(\"SELECT * FROM users ORDER BY data_reg DESC LIMIT $offset, $rowsperpage\");\nwhile($rand = mysql_fetch_assoc($SQL)){\n      $id = $rand['id'];            \n      $user= $rand['user'];\n\n      $SQL2 = mysql_query(\"SELECT data_auth FROM access_log WHERE user = '$user'\");\n\n      ?&amp;gt;\n      &amp;lt;li&amp;gt;&amp;lt;?php echo \"$user\"; ?&amp;gt;&amp;lt;/li&amp;gt;\n      &amp;lt;li&amp;gt;&amp;lt;?php          \n              while($rand2 = mysql_fetch_assoc($SQL2)){\n                       echo $rand2['data_auth'] . '&amp;lt;br/&amp;gt;';\n            }\n          ?&amp;gt;\n      &amp;lt;/li&amp;gt;\n      &amp;lt;?php  \n      }\n      ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Besides, you use of the same variable name in second &lt;code&gt;while&lt;/code&gt; is not safe.&lt;/p&gt;\n\n&lt;p&gt;Or with temporary array:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$SQL = mysql_query(\"SELECT * FROM users ORDER BY data_reg DESC LIMIT $offset, $rowsperpage\");\nwhile($rand = mysql_fetch_assoc($SQL)){\n      $id = $rand['id'];            \n      $user= $rand['user'];\n\n      $SQL2 = mysql_query(\"SELECT data_auth FROM access_log WHERE user = '$user'\");\n      $data_auth = array();\n      while($rand2 = mysql_fetch_assoc($SQL2)){\n                       $data_auth[] = $rand2['data_auth'];\n            }\n      ?&amp;gt;\n      &amp;lt;li&amp;gt;&amp;lt;?php echo \"$user\"; ?&amp;gt;&amp;lt;/li&amp;gt;\n      &amp;lt;li&amp;gt;&amp;lt;?php  foreach($data_auth as $da){\n             echo $da . \"&amp;lt;br/&amp;gt;\";\n           }   \n          ?&amp;gt;\n      &amp;lt;/li&amp;gt;\n      &amp;lt;?php  \n      }\n      ?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["将另一个表中的数据添加到另一个表的循环中", ["\n\n", "I'm trying to add a column from an other table to a while loop from an other table, and I tried something like this but doesn't seems to work. How can I achieve something like this? As far as I understand I need to save the variables from data_auth in a array but how do I echo them withing the loop ?", "\n\n", "$SQL = mysql_query(\"SELECT * FROM users ORDER BY data_reg DESC LIMIT $offset, $rowsperpage\");\nwhile($rand = mysql_fetch_assoc($SQL)){\n      $id = $rand['id'];            \n      $user= $rand['user'];\n\n      $SQL2 = mysql_query(\"SELECT data_auth FROM access_log WHERE user = '$user'\");\n      while($rand = mysql_fetch_assoc($SQL2)){\n            $data_auth = $rand['data_auth'];\n      }\n\n      ?>\n      <li><?php echo \"$user\"; ?></li>\n      <li><?php echo \"$data_auth\"; ?></li>\n      <?php  \n      }\n      ?>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不就是循环n次让i从1到n累加&lt;br /&gt;(2i-1)的平方加(2i)的立方&lt;br /&gt;吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言问题，循环控制（单重循环）", ["【问题描述】", "\n", " •计算下式的值，并显示在屏幕上 ", "\n", "1", "＾", "2", "+", "2", "＾", "3", "+", "3", "＾", "2", "+", "4", "＾", "3", "+", "5", "＾", "2", "+", "6", "＾", "3", "…(", "2", "n)＾", "3", "   \n", "\n", "【输入形式】", "\n", " 输入自然数", "n", "\n", "\n", "【输出形式】", "\n", " 输出和的值\n", "\n", "【样例输入1】", "\n", "2\n", "\n", "【样例输出】", "\n", "   82", "\n", "【样例说明】", "\n", "  当输入2的时候，显示的 82  = 1＾2+2＾3+3＾2+4＾3 = 1 + 8 + 9 + 64", "  使用scanf（\"%d\", &n）进行输入。", "\n", "1. "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;pragma&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;warning&lt;/span&gt;(disable:4996)&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, k;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - i;j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;k &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * i;k&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt;&amp;#61; i;j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - i) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; k &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ; k--) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n        }\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;看成输出两个三角型&lt;br /&gt;前面的for 输出前四行&lt;br /&gt;后面的for 输出后三行&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["打印出以下图案，用循环控制", []], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;The closing tag of a block of PHP code automatically implies a\n  semicolon; you do not need to have a semicolon terminating the last\n  line of a PHP block.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;See &lt;a href=\"http://php.net/manual/en/language.basic-syntax.instruction-separation.php\" rel=\"nofollow\"&gt;PHP Instruction separation&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["为什么在循环控制之后，这个PHP for循环在没有分号的情况下执行？", ["\n\n", "Here is simple PHP code which executes without semicolon:", "\n\n", "<?php\nfor($a=1; $a<=10;Print $a,$a++)\n?>\n", "\n\n", "How this is possible?", "\n    "]], "Tag": "程序设计"}
{"Answer": "create   PROCEDURE [dbo].[exp1002]\r\n(\r\n@n int,\r\n@tsum int output \r\n)\r\nAS\r\nBEGIN\r\n\tset @tsum=@n\r\n\twhile @n-1&gt;=0\r\n\tbegin \r\n\tset @n=@n-1\r\n\tset @tsum=@tsum+@n\r\n\tend\r\n\tprint  '得到的结果是:'+ convert(varchar(10),@tsum)\r\nend\r\n\r\n-- exec exp1002 2,0", "Konwledge_Point": "循环控制", "Question": ["写MSSQL存储过程 输入参数N（1……100之间）的整数，输出1+2+……N的和", ["写MSSQL存储过程 输入参数N（1……100之间）的整数，输出1+2+……N的和。用sql server存储过程怎么写"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在while循环里面加一句&amp;#xff0c;获取一行输入到enter就可以了。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;package &lt;span class=\"hljs-keyword\"&gt;While&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Whiledo {\n\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        // TODO Auto-&lt;span class=\"hljs-keyword\"&gt;generated&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;method&lt;/span&gt; stub\n        Scanner sc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        \n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;是否继续打印&amp;#xff08;按Enter继续打印)&amp;#34;);\n        String enter &amp;#61; sc.nextLine();\n        \n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(enter.length()&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;已打印&amp;#xff01;&amp;#34;);\n            enter &amp;#61; sc.nextLine();\n        }\n    }\n\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/627178989656125.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["循环语句怎样回车控制循环", ["怎样在while循环语句中通过键入回车键控制循环，比如：按一次回车就打印一次的无限循环。", "\n"]], "Tag": "程序设计"}
{"Answer": "首先，你的代码是符合C++语法的，并没有规定不可以用浮点数控制for循环。\r\n之所以一般代码不用浮点数，我能想到的，有两个原因：\r\n1.没必要，性能还低，一般for循环直接控制循环次数，整数作循环计数速度比浮点数要快\r\n2.麻烦。循环判断条件里面，一般不直接用相等或者不等逻辑运算符判断两个浮点数是否相等，因为浮点数存在误差，\r\n一般使用if(x &gt; 9.9999 &amp;&amp; x &lt; 10.00001)这种方式来替代if(x == 10.0)这种方式", "Konwledge_Point": "循环控制", "Question": ["为什么C++中不能用浮点数控制for循环？", ["为什么C++中不能用浮点数控制for循环？", "\n如：", "\nfor (double y = 0.1; y != 1.0; y +=0.1)", "\n        cout << y << endl;", "\n这段代码有什么问题吗？为什么循环会停不下来？", "\n本人大一学生，各位大神，求解？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在Python的循环结构中&amp;#xff0c;如果使用了continue控制符&amp;#xff0c;那么当前正在执行的循环的这一次循环过程会被跳过&amp;#xff0c;直接继续执行下一次循环。也就是说&amp;#xff0c;如果在一个循环结构中使用了continue控制符&amp;#xff0c;那么当前正在执行的这一次循环过程中的代码将不再继续执行&amp;#xff0c;而是直接跳到下一次循环的开始处继续执行代码。最常见的例子是在循环结构中进行条件判断&amp;#xff0c;如果判断结果符合特定条件&amp;#xff0c;就使用continue控制符跳过当前循环过程&amp;#xff0c;避免执行无用的代码。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["在循环结构的基础上，Python提供的两个循环控制符break和continue", ["continue控制符用来结束当前循环的当次循环过程 是什么意思"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;答案是D&lt;br /&gt;i &amp;#61; 1&amp;#xff0c;j是2-6&amp;#xff0c;就是append两次&amp;#xff0c;j &amp;#61; 3 和5&lt;br /&gt;i &amp;#61; 2&amp;#xff0c;j是3-6&amp;#xff0c;就是append两次&amp;#xff0c;j &amp;#61; 3 和5&lt;br /&gt;i &amp;#61; 3&amp;#xff0c;j是4-6&amp;#xff0c;就是append一次&amp;#xff0c;j &amp;#61; 5&lt;br /&gt;i &amp;#61; 4&amp;#xff0c;j是5-6&amp;#xff0c;就是append一次&amp;#xff0c;j &amp;#61; 5&lt;br /&gt;所以&amp;#xff0c;就是【1&amp;#xff0c;1&amp;#xff0c;2&amp;#xff0c;2&amp;#xff0c;3&amp;#xff0c;4】&lt;br /&gt;continue会打断这次循环&amp;#xff0c;进入下一次循环。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["循环控制结构的continue这个代码循环了几次？", ["代码一共循环了几次呀，我知道continue保留字是中断此次循环但不跳出循环，不太懂这个代码思路，是循环了几次啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入0可以结束&amp;#xff0c;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.*;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Test&lt;/span&gt; {\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n\n        &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;flag&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        Scanner cin&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt;(System.in);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(flag){\n            System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;111&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t&amp;#61; cin.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["java死循环如何通过键盘输入控制程序结束？", ["boolean flag = true;", "while(flag){", " 循环程序代码", "}", "一个死循环，想通过键盘输入修改flag的值，然后控制循环结束，怎么实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;font color=\"#fc5531\"&gt;可以有效利用js中数组自带的some函数&lt;/font&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; selectionList &amp;#61; [\n   { &lt;span class=\"hljs-string\"&gt;&amp;#39;assignmentAmount&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; },\n   { &lt;span class=\"hljs-string\"&gt;&amp;#39;assignmentAmount&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; },\n   { &lt;span class=\"hljs-string\"&gt;&amp;#39;assignmentAmount&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; },\n   { &lt;span class=\"hljs-string\"&gt;&amp;#39;assignmentAmount&amp;#39;&lt;/span&gt;: -&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; }\n]\n\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; flag &amp;#61; selectionList.&lt;span class=\"hljs-title function_\"&gt;some&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;(&lt;span class=\"hljs-params\"&gt;item&lt;/span&gt;) &amp;#61;&amp;gt;&lt;/span&gt; item.&lt;span class=\"hljs-property\"&gt;assignmentAmount&lt;/span&gt; &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (flag) { &lt;span class=\"hljs-comment\"&gt;// 存在assignmentAmount小于0的元素&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// ...相关提示&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;\n}\n&lt;span class=\"hljs-comment\"&gt;// ... 继续执行下面代码&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["js 中如何走完循环之后再进行下一步", ["js 中如何走完循环之后再进行下一步，业务场景中有个需要循环判断数组中的一个值，完了再进行下一步，我用foreach 中的index 解决了，我这种写法比较low，有没有看着高大尚一点的写法", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;range()方法的第2个数值要大于1才会开始输出空格&amp;#xff0c;并且需要增加空格数&amp;#xff0c;这样修改&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;for ii in range(1, 11):\n    xx &amp;#61; ii\n    yy &amp;#61; 10\n    for kk in range(1, 12 - ii):\n        print(xx, &amp;#39;&amp;#43;&amp;#39;, yy, &amp;#39;&amp;#61;&amp;#39;, xx &amp;#43; yy, &amp;#39;    &amp;#39;, end&amp;#61;&amp;#39;&amp;#39;)\n        xx &amp;#61; xx &amp;#43; 1\n        yy &amp;#61; yy - 1\n        if kk &amp;#61;&amp;#61; 11 - ii:\n            print()\n            for xl in range(1, ii - 1&amp;#43;2):  #第2个参数加2\n                print(&amp;#39;               &amp;#39;, end&amp;#61;&amp;#39;&amp;#39;)#增加11个空格&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;range(1:X)比较&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;print(&amp;#39;右边参数为0&amp;#xff1a;&amp;#39;)\nfor ii in range(1, 0):print(ii)\nprint(&amp;#39;右边参数为1&amp;#xff1a;&amp;#39;)\nfor ii in range(1, 1):print(ii)  \nprint(&amp;#39;右边参数为2&amp;#xff1a;&amp;#39;)\nfor ii in range(1, 2):print(ii)        \nprint(&amp;#39;右边参数为3&amp;#xff1a;&amp;#39;)\nfor ii in range(1, 3):print(ii)  \n\n\n运行结果&amp;#xff1a;\n右边参数为0&amp;#xff1a;\n右边参数为1&amp;#xff1a;\n右边参数为2&amp;#xff1a;\n1\n右边参数为3&amp;#xff1a;\n1\n2&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["python 循环控制变量 求教", ["\n\n", "\n", "for ii in range(1, 11):\n    xx = ii\n    yy = 10\n    for kk in range(1, 12 - ii):\n        print(xx, '+', yy, '=', xx + yy, '    ', end='')\n        xx = xx + 1\n        yy = yy - 1\n        if kk == 11 - ii:\n            print()\n            for xl in range(1, ii - 1):\n                print('    ', end='')", "\n\n", "我想输出这个图表。但是第二第三行 不会按照设计的在最左先输出若干空格  这是为什么 真心求教"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;print怎么左边双引号&amp;#xff0c;右边单引号......&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["循环控制中format怎么使用", ["不知道哪里出错了，这个format在这里要怎么使用，需要打什么", "\n"]], "Tag": "程序设计"}
{"Answer": "循环的时候从集合里面找个变量当id或name，用id或name隐藏显示就行。", "Konwledge_Point": "循环控制", "Question": ["c:foreach循环出多个div如何控制单个div的显示隐藏", ["<c:forEach items=\"${requestScope.newList}\" var=\"newList\">\n                                <!--消息 -->\n                                <div class=\"s-msg-item s-msg-temp i-msg-downup conceal1\">\n                                    <h6 class=\"s-msg-bar\"><span class=\"s-name\">每日新闻</span></h6>\n                                    <div class=\"s-msg-content i-msg-downup-wrap\">\n                                        <div class=\"i-msg-downup-con\">\n                                            <a class=\"i-markRead\" target=\"_blank\"\n                                               href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                <img src=\"/static/images/${newList.pic}\">\n                                                <p class=\"s-main-content\">\n                                                        ${newList.activityTitle}\n                                                </p>\n                                                <p class=\"s-row s-main-content\">\n                                                    <a href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                        阅读全文 <i class=\"am-icon-angle-right\"></i>\n                                                    </a>\n                                                </p>\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <a class=\"i-btn-forkout conceal\" ref=\"${newList.id}\" href=\"javascript:;\"><i class=\"am-icon-close am-icon-fw\"></i></a>\n                                </div>\n                                </c:forEach>\n\n", "\n\n", "jQuery代码", "\n\n", "\n    $(function () {\n        $(document).ready(function(){\n            $(\".conceal\").click(function(){\n                $(\".conceal1\").hide();\n            });\n        });\n        });\n", "\n\n", "修改后：", "\n\n", "  <c:forEach items=\"${requestScope.newList}\" var=\"newList\">\n                                <!--消息 -->\n                                <div class=\"s-msg-item s-msg-temp i-msg-downup conceal1\" id=\"${newList.id}\" onclick=hide(this)>\n                                    <h6 class=\"s-msg-bar\"><span class=\"s-name\">每日新鲜事</span></h6>\n                                    <div class=\"s-msg-content i-msg-downup-wrap\">\n                                        <div class=\"i-msg-downup-con\">\n                                            <a class=\"i-markRead\" target=\"_blank\"\n                                               href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                <img src=\"/static/images/${newList.pic}\">\n                                                <p class=\"s-main-content\">\n                                                        ${newList.activityTitle}\n                                                </p>\n                                                <p class=\"s-row s-main-content\">\n                                                    <a href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                        阅读全文 <i class=\"am-icon-angle-right\"></i>\n                                                    </a>\n                                                </p>\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <a class=\"i-btn-forkout conceal\" ref=\"${newList.id}\" href=\"javascript:;\"><i class=\"am-icon-close am-icon-fw\"></i></a>\n                                </div>\n                                </c:forEach>\n", "\n\n", "JS", "\n\n", " function hide(obj){\n        $(obj).toggle();\n    }\n", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那下面不就是程序吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["用循环控制实现，打印出以下图案", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;已解决&amp;#xff0c;用的复选框组&amp;#xff0c;获得了自己想要的筛选数据。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&amp;lt;a-checkbox-group v-model:&lt;span class=\"hljs-attribute\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;checkedList&amp;#34;&lt;/span&gt; :&lt;span class=\"hljs-attribute\"&gt;options&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;option&amp;#34;&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-attribute\"&gt;change&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;choose&amp;#34;&lt;/span&gt;/&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; option&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;苹果&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;桃子&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;香蕉&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;西瓜&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;梨&amp;#39;&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; checkedList &amp;#61; &lt;span class=\"hljs-keyword\"&gt;ref&lt;/span&gt;&amp;lt;[]&amp;gt;();\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; choose &amp;#61;()&amp;#61;&amp;gt;{\n  alert(checkedList.&lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;)\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["Vue3怎么用循环控制复选框实现多筛？", ["我想提供多个复选框，当用户选择时向后台请求数据。但数据很多，复选框很多，我想用循环数组给复选框赋值，但是不知道该怎么写。请问这种思路可行吗？该怎么赋值choose1,choose2,checked1,checked2……呢？", "\n", "vue部分", "\n", "   ", "<", "div", " ", "v-for", "=", "\"(arr,index) in params,params.length\"", ">", "\n          ", "<", "a-checkbox", " @", "change", "=", "\"choose[index]\"", " ", "v-model:checked", "=", "\"checked[index]\"", ">", "{{", "arr", "}}", "</", "a-checkbox", ">", "\n      ", "</", "div", ">", "\n", "\n", "js部分", "\n", "const params=", "[", "'苹果'", ",", "'桃子'", ",", "'香蕉'", ",", "'西瓜'", ",", "'梨'", "]", "\n", "for", "(let j in params)", "{\n  const checked", "[j]", "=ref(", "'false'", ")\n}\n", "for", "(let j in params.length)", "{\n  ", "if", "(checked", "[j]", ".value){\n    const choose", "[j]", "=()=>{\n      axios", ".post", "(", "'/api/xx'", ",{\n        ", "content", ": params[j]\n      })\n    }\n  }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-comment\"&gt;/*\n*定时器中断实现每来1s&amp;#xff0c;P1口接的一位共阳极数码管显示数&amp;#43;1&amp;#xff0c;\n*加到9之后再来1s清零并重复上述过程\n*/&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;reg52.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\nsbit SEG &amp;#61; P1^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; code DSY_CODE[] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0xC0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0xF9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0xA4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0xB0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x99&lt;/span&gt;,\n&lt;span class=\"hljs-number\"&gt;0x92&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x82&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0xF8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x80&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0x90&lt;/span&gt;}; &lt;span class=\"hljs-comment\"&gt;//共阳极数码管&lt;/span&gt;\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n  TMOD &amp;amp;&amp;#61;&lt;span class=\"hljs-number\"&gt;0X0F&lt;/span&gt;;\n  TMOD |&amp;#61;&lt;span class=\"hljs-number\"&gt;0x01&lt;/span&gt;;\n  TH0 &amp;#61; (&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;50000&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//高四位初值&lt;/span&gt;\n  TL0 &amp;#61; (&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;50000&lt;/span&gt;)%&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//低四位初值&amp;#xff0c;每隔50ms溢出&lt;/span&gt;\n  EA &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;        &lt;span class=\"hljs-comment\"&gt;//开总中断&lt;/span&gt;\n  ET0 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;       &lt;span class=\"hljs-comment\"&gt;//T1开时定时器溢出&lt;/span&gt;\n  TR0 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;       &lt;span class=\"hljs-comment\"&gt;//开启定时器&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ET0_ISR&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt; interrupt 1       &lt;span class=\"hljs-comment\"&gt;//定时中断&lt;/span&gt;\n&lt;/span&gt;{ \n  &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;       \n  &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  TH0 &amp;#61; (&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-50000&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;;\n  TL0 &amp;#61; (&lt;span class=\"hljs-number\"&gt;65536&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-50000&lt;/span&gt;)%&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;;\n  cnt&amp;#43;&amp;#43;;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(cnt &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)                     &lt;span class=\"hljs-comment\"&gt;//当为1秒时数码管自动&amp;#43;1&lt;/span&gt;\n  {\n    cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    P1 &amp;#61; DSY_CODE[i&amp;#43;&amp;#43;];\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)                        &lt;span class=\"hljs-comment\"&gt;//加到9数码管清零&lt;/span&gt;\n    {\n      i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n  }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["c52单片机将数码管从0-9循环，使用定时器每过1s变一次数字", ["将数码管从0-9循环，使用定时器每过1s变一次数字，通过两个按键控制定时器定时长来改变数字变换时间，如1.5s或0.5s。（使用中断系统控制定时器时间变换）"]], "Tag": "程序设计"}
{"Answer": "string useremail = DBsource.ReturnUserEmail(\"select U.UserEmail from (select UserEmail,ROWNUM RN from tablename where isactive=1) U where RN=\" + rowCount).ToString();\r\n\r\n这个sql是需要优化的\r\n\r\n测试了一下这个sql在表数据为10w级别的时候每次取一条的需要花费0.1秒的时间。\r\n10万数据全取出来大概需要7天时间\r\n如果表数据更大比如1000w级别大概取一条需要3秒，10万数据大概就是1年了。\r\n\r\nstring useremail = DBsource.ReturnUserEmail(\"select U.UserEmail from (select UserEmail,ROWNUM RN from tablename where isactive=1) U where RN &gt;\" + min + \"RN &lt;\" + max ;\r\n\r\nmax - min = 1000 ~ 2000之间，然后在结果集中循环插入给用户发信息。\r\n\r\n每次取1000 ~ 2000 条数据 \r\n在表数据为10w级别的时候需要花费0.7 ~ 1.4秒的时间\r\n10万数据也就是1分多钟就可以取出来了。\r\n\r\n在表数据为10w级别的时候需要花费3 ~ 4秒的时间\r\n10万数据也就是5分多钟就可以取出来了。", "Konwledge_Point": "循环控制", "Question": ["Oracle+for 循环10万数据，卡！", ["int totalCount = Convert.ToInt32(DBsource.ReturnID(\"SELECT count(UserEmail) CategoryID FROM tableName where isactive=1\").ToString());  // [color=red]获取用户列表总行数 totalCount=100000[/color]", "\n            int Count = 0;", "\n            if (totalCount % 1000 == 0)  /* 听说for 循环次数超过5000，就不能运行了。所以进行拆分，让循环", "\n            { Count = totalCount / 1000; }     次数变为1000；", "\n            else", "\n            { ", "\n                Count = totalCount / 1000; ", "\n                Count = Count + 1; ", "\n            }", "\n            int rowCount = 0;", "\n            for (int i = 0; i < Count; i++)[color=red] // 外循环控制循环几个1000；[/color]            {", "\n                for (int j = 0; j < 1000; j++)[color=red] // 内循环空间循环1000次[/color]                {", "\n                    rowCount++;", "\n                    [color=red]//得到用户列表为10万的其中一个用户[/color]                    string useremail = DBsource.ReturnUserEmail(\"select U.UserEmail from (select UserEmail,ROWNUM RN from tablename where isactive=1) U where RN=\" + rowCount).ToString(); ", "\n                    [color=red]//给查询出来的用户发信息[/color]                    mesg = ad.AddMessages(conn, ad.PlusNumber(conn, \"select MAX(MessageID) from tablename\"), this.txtTitle.Text, this.txtContent.Text, useremail, Session[\"adminname\"].ToString(), DateTime.Now.ToString());", "\n                    [color=red]//判断是进行到最后一个1000的 循环[/color]                    if (i == Count - 1)", "\n                    {", "\n                        if (rowCount == totalCount)[color=red] //如果等于总行数，循环完毕跳出循环[/color]                        { break; }", "\n                    }", "\n                }", "\n            }", "\n    现在就是这个代码在程序运行时，直接就卡到那了，不能运行！", "\n[b]问题补充：[/b]", "\n  谢谢您的回答， 准备采用批量从数据库取出用户列表。每次1500条！ 使用OraclePreparedStatement  但是找不到这个类的引用啊？ 请帮助 ", "\n[b]问题补充：[/b]", "\n我用的是。net ! 现在可以从数据库取出全部用户列表。效率也很快！ 现在给用户发信息 就相当于往数据库-表插入10W 行数据！ 我写了存储过程！ 但是还是需要10分钟啊! 存储过程里面是一条一条的插入数据!", "\ncreate or replace procedure addMsg", "\n(", "\n   msgid number,", "\n   msgtitle varchar2,", "\n   msgcontent varchar2,", "\n   useremail user_list,", "\n   sender varchar2,", "\n   sendtime varchar2", "\n)", "\n as", "\nbegin", "\nfor x in 1..useremail.count loop", "\ninsert into T_Messages values(msgid,msgtitle,msgcontent,useremail(x),sender,0,sendtime);", "\nend loop;", "\nend;", "\n/ "]], "Tag": "程序设计"}
{"Answer": "在你的循环里加上\r\nApplication.DoEvents();", "Konwledge_Point": "循环控制", "Question": ["C# 单击第一个按钮进行循环，单击第二个按钮停止循环", ["C#中，我设置了两个按钮，单击第一个按钮进行一个循环，单击第二个按钮停止这个循环，但是不管怎么处理按下第一个按钮以后都成了一个死循环，程序呈现卡死状态，如何能够解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while(~scanf(&amp;#34;%d&amp;#34;, )){&lt;!-- --&gt;&lt;/p&gt;\n&lt;p&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  &amp;#96;&amp;#96;&amp;#96;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["要求用scanf的返回值控制循环次数，该怎么做", ["   写一个程序，它读入一系列整数，最后输出其中最大的两个数（用scanf的返回值控制循环次数）"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;REGX52.H&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;INTRINS.H&amp;gt;&lt;/span&gt;\nvoidDelay500ms()\n&amp;#xff5b;\nunsigned chari,j,k;\nnop();\n&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;4;\n&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;129;\n&lt;span class=\"hljs-attribute\"&gt;k&lt;/span&gt;&amp;#61;119;\n&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n&amp;#xff5b;\n&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n&amp;#xff5b;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(--k);\n&amp;#xff5d;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(--j);\n&amp;#xff5d;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (- i&amp;#xff09;;\n&amp;#xff5d;\nvoid main ()\n&amp;#xff5b;\n char i&amp;#61; 2;\n &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i--){\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;0XFE;\nDelay500ms();\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;0XFD;\nDelay500ms();\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;0XFB;\nDelay500ms();\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;0XF7;\nDelay500ms ();\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;0XEF;\nDelay500ms(&amp;#xff09;&amp;#xff1b;\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;OXDF;\nDelay500ms();\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;0XBE;\nDelay500ms();\n&lt;span class=\"hljs-attribute\"&gt;P1&lt;/span&gt;&amp;#61;0X7F;\nDelay500ms();\n}\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(1){}\n&amp;#xff5d;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["怎么样设置51单片机流水灯的循环次数，我该在这个程序里面改动哪里才能让他循环两次", ["#include<REGX52.H>", "#include<INTRINS.H>", "voidDelay500ms()", "｛", "unsigned chari,j,k;", "nop", "();", "i=4;", "j=129;", "k=119;", "do", "｛", "do", "｛", "while(--k);", "｝while(--j);", "｝while (- i）;", "｝", "voidmain ()", "｛", "P1=0XFE;", "Delay500ms();", "P1=0XFD;", "Delay500ms();", "P1=0XFB;", "Delay500ms();", "P1=0XF7;", "Delay500ms ();", "P1=0XEF;", "Delay500ms(）；", "P1=OXDF;", "Delay500ms();", "P1=0XBE;", "Delay500ms();", "P1=0X7F;", "Delay500ms();", "｝"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;printf()函数的副作用是显示信息&amp;#xff0c;主作用是返回待显示字符的个数&amp;#xff0c;所以printf(&amp;#34;&lt;em&gt;&amp;#34;)这个表达式会返回值1&amp;#xff0c;所以该测试条件一直为真。如果你把if语句删去的话&amp;#xff0c;你运行后就会看到一个不断打印&lt;/em&gt;的死循环。所以&amp;#xff0c;正确的说法是&amp;#xff1a;其中循环控制表达式与1等价。而B选项中&amp;#xff0c;&amp;#39;0&amp;#39;代表的是0字符&amp;#xff0c;它的ASCII码是48&amp;#xff0c;而一切非零数字在C语言中都被看作是“真&amp;#xff08;1&amp;#xff09;”&amp;#xff0c;所以B选项是对的。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["这个问题怎么回答，另外可以讲一讲循环控制表达式的其他情况和意义吗，十分感谢", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;子程序搞个返回值，循环里面判断这个返回值在用break推出就好了。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["循环内中的子程序怎么控制循环退出", ["循环", "\n\n", "｛", "\n\n", "           ActionA（）; //ActionA是子程序,且无返回值", "\n\n", "｝", "\n\n", "function void  ActionA()", "\n\n", "{", "\n\n", "//dosomething......", "\n\n", "//dosomething......", "\n\n", "//dosomething......", "\n\n", "}", "\n\n", "/////////// 想要在子程序执行触发到某条件或者子程序出现异常的时候控制循环退出"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nagent &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;number&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;1001&amp;#39;&lt;/span&gt;,\n         &lt;span class=\"hljs-string\"&gt;&amp;#39;agent_name&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;],\n         &lt;span class=\"hljs-string\"&gt;&amp;#39;agent_city&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;],\n         }\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; na, ci &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; agent.items():\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;isinstance&lt;/span&gt;(ci, &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;# 判断值的类型&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(na.title() &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;, nice to meet you&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; cii &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; ci:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt; &amp;#43; cii)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python for循环怎么控制字典从第二个键开始？", ["这里的for循环主要目的是遍历列表的值，但是第一个键值对的值不是列表，有什么方法可以跳过第一个键，从第二键开始吗？", "\n", "agent = {", "'number'", ": ", "'1001'", ",\n         ", "'agent_name'", ": [", "'one'", ", ", "'two'", ", ", "'three'", "],\n         ", "'agent_city'", ": [", "'x'", ", ", "'y'", ", ", "'z'", "],\n         }\n\n", "for", " na, ci  ", "in", " agent.items():\n    ", "print", "(na.title() + ", "\", nice to meet you\"", ")\n    ", "for", " cii ", "in", " ci:\n        ", "print", "(", "'\\t'", " + cii)\n\n"]], "Tag": "程序设计"}
{"Answer": "楼上说的可能没在点子上，本程序真正出问题的原因应该是：读入a的值的时候由于格式化字符串中的`%u`溢出将N的值破坏了，因为N和a均在栈中管理，N的首地址比a的首地址高2个字节，当向a的首地址放入4个字节的数据时，N的低2字节将被覆盖\r\n改成static int N以后，N将不再在栈中管理，因此就不会和栈中的a冲突，因此改为static后就正常了。\r\n下面看一下N和a均在栈中时的汇编代码：\r\n跟踪到`scanf(\"%d\",&amp;N);`时：\r\n```asm\r\n   0x00401566 &lt;+70&gt;:\tlea    0x58(%esp),%eax\r\n   0x0040156a &lt;+74&gt;:\tmov    %eax,0x4(%esp)\r\n   0x0040156e &lt;+78&gt;:\tmovl   $0x41b000,(%esp)\r\n   0x00401575 &lt;+85&gt;:\tmovl   $0x1,0x20(%esp)\r\n   0x0040157d &lt;+93&gt;:\tcall   0x40b558 &lt;scanf&gt;\r\n```\r\n可见，N的地址为`0x58(%esp)`\r\n跟踪到`scanf(\"%u\",&amp;a);`时：\r\n```asm\r\n   0x00401598 &lt;+120&gt;:\tlea    0x56(%esp),%eax\r\n   0x0040159c &lt;+124&gt;:\tmov    %eax,0x4(%esp)\r\n   0x004015a0 &lt;+128&gt;:\tmovl   $0x41b00b,(%esp)\r\n   0x004015a7 &lt;+135&gt;:\tcall   0x40b558 &lt;scanf&gt;\r\n```\r\n可见，a的地址为`0x56(%esp)`\r\n在执行本次scanf之前，我先扫一下`0x56(%esp)`的地址（此时ESP的值为0x28fe50）：\r\n```\r\n(gdb) x/10bx ($esp+0x56)\r\n0x28fea6:\t0x00\t0x00\t0x0a\t0x00\t0x00\t0x00\t0x00\t0x00\r\n```\r\n可见N位于$esp+0x58处，确实是10（0x0000000a）\r\n下面我们给a读入一个127(0x007f)，看看`0x56(%esp)`的地址变化的情况：\r\n```\r\n(gdb) x/10bx ($esp+0x56)\r\n0x28fea6:\t0x7f\t0x00\t0x00\t0x00\t0x00\t0x00\t0x00\t0x00\r\n```\r\n看到了吗？之前的`0x0a`被覆盖掉了，因为`%u`使得`scanf函数`向`&amp;a`处写入了**4**个字节，假如我们输入一个对于`unsigned short`会溢出的数，比如4294967295(0xffffffff)，你将在屏幕上看到以下输出：\r\n```\r\n10\r\n请输入a\r\n4294967295\r\n我是a=65535\r\n我是i=1\r\n我是N=65535请输入a\r\n（后面的输出省略）\r\n```\r\n看吧！N怎么会等于65535（0xffff）！原来就是因为写入的0xffffffff覆盖掉了N的低16位！此时去扫一下内存，一定会发现N所在的`0x58(%esp)`变为了`0xff 0xff`\r\n\r\n改成static int N以后，N将不再在栈中管理，因此就不会和栈中的a冲突，因此改为static后就正常了。\r\n\r\n个人的一点探讨，如尚未解决您的问题，可追问；若解决了您的问题，请采纳。", "Konwledge_Point": "循环控制", "Question": ["为什么这个变量不能控制循环，变量作用域", ["#include", "\nint main()", "\n{", "\n    int N;", "\n    int i = 0;", "\n    scanf(\"%d\",&N);", "\n    while(i<N)", "\n    {", "\n        unsigned short a,g,d;", "\n        printf(\"请输入a\\n\");", "\n        scanf(\"%u\",&a);", "\n        printf(\"我是a=%u\\n\",a);", "\n        i++;", "\n        printf(\"我是i=%d\\n\",i);", "\n        printf(\"我是N=%d\",N);", "\n    }", "\n\n", "return 0;\n", "\n\n", "}//如题，N不能控制循环，我怀疑是因为变量作用域问题，可是为什么呢，我把N改成static int N,把i改成static int i就又可以了，有没有办法可以不改，求解答，"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)输入的内容不管是什么&amp;#xff0c;存入a都是字符串&amp;#xff0c;所以当你输入数字的时候&amp;#xff0c;要用&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;将a转成数字,即&amp;#xff1a;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; _ &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(a)):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python怎么用input控制循环次数", ["python怎么用input控制循环次数", "\n", "a=input(\"输入循环次数\")", "\n", "for in range(a):", "    print(1)", "\n", " 我想输入一个数字来控制循环次数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义一个bool类型的成员变量, m_bRuning &amp;#61; true.  while (m_bRuning) {} ,  程序退出的时候把变量置为false,  m_bRuning &amp;#61; false. 程序自然就结束了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c#窗体 设置一个线程，里面有while（true）的死循环，如何在该窗体关闭时候结束这个线程", ["试过设置", "thread.IsBackground = true；但是关闭窗体时候线程依旧持续运行", "\n", "不想用Environment.Exit(0);", "虽然没试过，不过应该会干扰其他窗体的线程"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; requests\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; lxml &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; etree\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; xlwt\n\nurls &amp;#61; (&lt;span class=\"hljs-string\"&gt;&amp;#39;9787501586387&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;9787501586448&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;9787544258210&amp;#39;&lt;/span&gt;)\nlist1 &amp;#61; []\n\nbook_info &amp;#61; xlwt.Workbook(encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)           # 创建workbook对象\nbook_sheet &amp;#61; book_info.add_sheet(&lt;span class=\"hljs-string\"&gt;&amp;#39;sheet1&amp;#39;&lt;/span&gt;)            # 通过矩阵坐标指定要输入位置&amp;#xff0c;创建表\n\n# 写入数据&amp;#xff0c;第一行参数表示“行”&amp;#xff0c;第二个参数“列”&amp;#xff0c;第三个参数是内容\nbook_sheet.write(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;书名&amp;#39;&lt;/span&gt;)\nbook_sheet.write(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;作者&amp;#39;&lt;/span&gt;)\nbook_sheet.write(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;出版社&amp;#39;&lt;/span&gt;)\nbook_sheet.write(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;评论总数&amp;#39;&lt;/span&gt;)\nbook_sheet.write(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;简介&amp;#39;&lt;/span&gt;)\nind &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\nheaders &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;User-Agent&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.82 Safari/537.36&amp;#39;&lt;/span&gt;\n}\n\nfor url &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; urls:\n    url0 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;https://search.dangdang.com/?key&amp;#61;{}&amp;#39;&lt;/span&gt;.format(url)\n    print(url0)\n\n    # 获取响应\n    respond &amp;#61; requests.get(url0, headers&amp;#61;headers)\n    # respond.encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;\n    print(respond.status_code)\n    html &amp;#61; respond.text\n    # &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; open(&lt;span class=\"hljs-string\"&gt;&amp;#39;dang.html&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f:\n    #     f.write(respond.text)&lt;span class=\"hljs-number\"&gt;02.&lt;/span&gt;\n\n    htmls &amp;#61; etree.HTML(html)\n    ul &amp;#61; htmls.xpath(&lt;span class=\"hljs-string\"&gt;&amp;#39;//*[&amp;#64;id&amp;#61;&amp;#34;search_nature_rg&amp;#34;]/ul/li[1]&amp;#39;&lt;/span&gt;)  # 获取书单\n    # print(ul)\n    for li &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; ul:\n        book_name &amp;#61; li.xpath(&lt;span class=\"hljs-string\"&gt;&amp;#34;./p[1]/a[1]/&amp;#64;title&amp;#34;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]  # 书名\n        # print(book_name)\n        # book_price &amp;#61; li.xpath(&lt;span class=\"hljs-string\"&gt;&amp;#39;./p[3]/span[1]/text()&amp;#39;&lt;/span&gt;)  # 价格\n        # print(book_price)\n        author &amp;#61; li.xpath(&lt;span class=\"hljs-string\"&gt;&amp;#39;./p[&amp;#64;class&amp;#61;&amp;#34;search_book_author&amp;#34;]/span[1]//text()&amp;#39;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]  # 作者\n        # print(author)\n        press &amp;#61; li.xpath(&lt;span class=\"hljs-string\"&gt;&amp;#34;./p[&amp;#64;class&amp;#61;&amp;#39;search_book_author&amp;#39;]/span[3]/a/text()&amp;#34;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]  # 出版社\n        # print(press)\n        a &amp;#61; li.xpath(&lt;span class=\"hljs-string\"&gt;&amp;#34;p[5]/a&amp;#34;&lt;/span&gt;)  # 评论总数\n        comments &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].xpath(&lt;span class=\"hljs-string\"&gt;&amp;#34;text()&amp;#34;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; len(a)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; else &lt;span class=\"hljs-string\"&gt;&amp;#34;(没有评论)&amp;#34;&lt;/span&gt;\n        introduction &amp;#61; li.xpath(&lt;span class=\"hljs-string\"&gt;&amp;#34;p[2]/text()&amp;#34;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]  # 简介\n        # print(introduction)\n        print(book_name, author, press, comments, introduction)\n\n        # 保存到excel\n\n        #将爬取到的不同字段分别保存到对应格子\n        book_sheet.write(ind, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, book_name)\n        book_sheet.write(ind, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, author)\n        book_sheet.write(ind, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, press)\n        book_sheet.write(ind, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, comments)\n        book_sheet.write(ind, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, introduction)\n        ind &amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\nbook_info.save(&lt;span class=\"hljs-string\"&gt;&amp;#39;book_info.xls&amp;#39;&lt;/span&gt;)           # 保存数据到名为book_info的excel文件里\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "循环控制", "Question": ["Python爬虫# 将url携带的参数写成循环代入，如何将每次不同参数爬取到的结果依次保存到同一张excel", ["礼貌！快来指点指点！零基础自学.附上代码求指点🙏", "\n", "import", " requests\n", "from", " lxml ", "import", " etree\n", "import", " xlwt\n\nurls = (", "'9787501586387'", ", ", "'9787501586448'", ", ", "'9787544258210'", ")\nlist1 = []\nfor url ", "in", " urls:\n    url0 = ", "'https://search.dangdang.com/?key={}'", ".format(url)\n    print(url0)\n\nurl = url0\n\nheaders = {\n    ", "'User-Agent'", ": ", "'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.82 Safari/537.36'", "\n}\n# 获取响应\n\nrespond = requests.get(url, headers=headers)\n# respond.encoding=", "''", "\nprint(respond.status_code)\nhtml = respond.text\n# ", "with", " open(", "'dang.html'", ",", "'w'", ") ", "as", " f:\n#     f.write(respond.text)", "02.", "\n\nhtmls = etree.HTML(html)\nul = htmls.xpath(", "'//*[@id=\"search_nature_rg\"]/ul/li[1]'", ")  # 获取书单\n# print(ul)\nfor li ", "in", " ul:\n    book_name = li.xpath(", "\"./p[1]/a[1]/@title\"", ")  # 书名\n    # print(book_name)\n    # book_price = li.xpath(", "'./p[3]/span[1]/text()'", ")  # 价格\n    # print(book_price)\n    author = li.xpath(", "'./p[@class=\"search_book_author\"]/span[1]//text()'", ")  # 作者\n    # print(author)\n    press = li.xpath(", "\"./p[@class='search_book_author']/span[3]/a/text()\"", ")  # 出版社\n    # print(press)\n    comments = li.xpath(", "\"p[4]/a/text()\"", ")  # 评论总数\n    # print（comments)\n    introduction = li.xpath(", "\"p[2]/text()\"", ")  # 简介\n    # print(introduction)\n    print(book_name, author, press, comments, introduction)\n\n# 保存到excel\n\nbook_info = xlwt.Workbook(encoding=", "'utf-8'", ")           # 创建workbook对象\nbook_sheet = book_info.add_sheet(", "'sheet1'", ")            # 通过矩阵坐标指定要输入位置，创建表\n\n# 写入数据，第一行参数表示“行”，第二个参数“列”，第三个参数是内容\nbook_sheet.write(", "0", ", ", "0", ", ", "'书名'", ")\nbook_sheet.write(", "0", ", ", "1", ", ", "'作者'", ")\nbook_sheet.write(", "0", ", ", "2", ", ", "'出版社'", ")\nbook_sheet.write(", "0", ", ", "3", ", ", "'评论总数'", ")\nbook_sheet.write(", "0", ", ", "4", ", ", "'简介'", ")\n\n#将爬取到的不同字段分别保存到对应格子\nbook_sheet.write(", "1", ", ", "0", ", book_name)\nbook_sheet.write(", "1", ", ", "1", ", author)\nbook_sheet.write(", "1", ", ", "2", ", press)\nbook_sheet.write(", "1", ", ", "3", ", comments)\nbook_sheet.write(", "1", ", ", "4", ", introduction)\n\nbook_info.save(", "'book_info.xls'", ")           # 保存数据到名为book_info的excel文件里\n\n", "\n", "求指点求指点😭"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args) {\n        List list &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new &lt;/span&gt;&lt;span class=\"hljs-class title_\"&gt;ArrayList&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;999&lt;/span&gt;; i&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;valueOf&lt;/span&gt;(i);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;))\n                list.&lt;span class=\"hljs-property\"&gt;add&lt;/span&gt;(i);\n        }\n        System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(list);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;){\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;length&lt;/span&gt;(); i&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;valueOf&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;charAt&lt;/span&gt;(i));\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; Integer.&lt;span class=\"hljs-property\"&gt;valueOf&lt;/span&gt;(j);\n            sum &amp;#43;&amp;#61; k*k*k;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(sum &amp;#61;&amp;#61; Integer.&lt;span class=\"hljs-property\"&gt;valueOf&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;)){\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["Java求水仙花数 利用for循环", ["题目:打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。例如:153是一个“水仙花数”，因为153=1的三次方+ 5的三次方 +3 的三次方。", "程序分析:利用 for循环控制100－999个数，每个数分解出个位，十位，百位。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$resId = 11;\n\n\n$counter = 0;\n$ids=array(17,34,51,68,85,102,119,136,153,170,187,204,221,238,255,272,289,306,323);\n\n$stmt = $pdo-&amp;gt;prepare( 'select * from `lappu` where `resturantid` = :id' );\n$stmt-&amp;gt;bindParam( ':id', $resId );\n$stmt-&amp;gt;execute();\n\n$codes=array();\n\nwhile( $row = $stmt-&amp;gt;fetch( PDO::FETCH_ASSOC ) ) {\n    $codes[ $row['resturantid'] ] = $row['code'];\n    $counter++;\n}\n\n\n\n\n\n\n\n\nfor( $x = 1; $x &amp;lt;= $counter; $x++ ) {\n    if ( in_array( $x, $ids ) ) {\n\n        $code=$codes[ $x ];\n\n        for ( $b = 1; $b &amp;lt;= 16; $b++ ) {\n            echo 'pictures'.'&amp;lt;br&amp;gt;';\n        }\n\n        for ( $b = 1; $b &amp;lt;= 16; $b++ ) {\n            echo $code.'&amp;lt;br&amp;gt;';\n        } \n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["计数while循环，在特定循环时间执行其他操作并继续循环", ["\n\n", "This code print like this. ", "16 times pictures", " then ", "16 times same codes", " again 16 times pictures then 16 times different codes.", "\n\n", "I want that the loop of code ", "load in every loop new code from the database", ". Not the same code. ", "\n\n", "Thanks in advance, I could not find any logic for that. ", "\n\n", "Now it is working.\nThe trick was to insert all the codes to an array. $codes[] = $row['koodi'];", "\n\n", "Then print array. ", "\n\n", "$resturantID = 11; // resturant ID \n\n$counter = 0; // count amount of loop \n\n$stmt = $pdo->prepare(\"SELECT * FROM lappu WHERE resturantID = $resturantID\");\n$stmt->execute();\nwhile ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n    $code = $row['code'];\n    $counter++;\n\n}\n\nfor ($x = 1; $x <= $counter; $x++) {\n\nif (in_array($x, array(17,34,51,68,85,102,119,136,153,170,187,204,221,238,255,272,289,306,323))) {\n                    for ($b = 1; $b <= 16; $b++) {\n                        echo 'pictures'.'<br>';\n                    }\n\n                    for ($b = 1; $b <= 16; $b++) {\n                        echo $code.'<br>';\n                    }\n                }\n\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;送分题啊&amp;#xff0c;考的英语把&amp;#xff0c;loop-&amp;gt; 循环&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["JAVAWeb中，对于结构控制语句,循环语句有哪些？", ["对于结构控制语句,哪个是循环语句？", "which还是loop？case判断算循环吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Fixed it. I was using query builder directly with &lt;code&gt;DB&lt;/code&gt; which is not eloquent.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  $latestanimes = episode::with('item')  //eager loading, thanks lagbox\n            -&amp;gt;where('category', 'anime')\n            -&amp;gt;orderBy('created_at', 'desc')\n            -&amp;gt;take(5)\n            -&amp;gt;get();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and I can access it directly how I wanted in the first place&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{{$episode-&amp;gt;item-&amp;gt;title}}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["Laravel嵌套关系foreach循环", ["\n\n", "I have this ", "relationship", " betwen item and episode", "\n\n", "item:", "\n\n", "public function episodes()\n    {\n        return $this->hasMany(episode::class);\n    }\n", "\n\n", "episodes:", "\n\n", "public function item()\n        {\n            return $this->belongsTo(item::class);\n        }\n", "\n\n", "In controller", "\n\n", "$latestanimes = DB::table('episodes')->where('category', 'anime')\n            ->orderBy('created_at', 'desc')\n            ->take(5)\n            ->get();\n", "\n\n", "What I'm trying to do is get the title of the anime it belongs to of each episode", "\n\n", "                       @foreach($latestanimes as $episode)\n                              <tr>\n                                <td>\n                                    @foreach($episode->item as $parrent)\n                                      {{  $parrent->title; }}\n                                    @endforeach\n                                </td>\n                                <td>{{ $episode->number }}</td>\n                                <td>{{ $episode->category }}</td>\n                            </tr>\n                        @endforeach\n", "\n\n", "This gives me \"Undefined property: stdClass::$item\"", "\n\n", "I tried debugging in routes.php", "\n\n", "Route::get('/dd/{id}', function($id){\n\n        $episode=App\\episode::find($id);\n        echo $episode->name. '<hr>';\n\n        $item=$episode->item;\n        echo $item->title;\n\n    });\n", "\n\n", "And this works ... \nIs there a way to access it directly? like", "\n\n", "{{ $episode->item->title }}\n", "\n\n", "Thanks", " in advance", "\n    "]], "Tag": "程序设计"}
{"Answer": "将方法里面的计数由i变成j即可\r\n //随机div背景颜色\r\n    document.getElementById(\"boxcolor\").onclick=function(){ \r\n        var box=document.getElementsByTagName(\"div\");//获取页面中所有div对象，组成数组box\r\n        for(j=0;j &lt; 5;j++){                 //循环遍历box数组，\r\n            box[j].style.backgroundColor=randomColor();//改变div背景颜色\r\n            console.log(box[j]);   //问题是：在页面中只能给box中第一个对象加上背景颜色，其他对象不行\r\n        }//end for  \r\n        console.log(box);\r\n    }//end function", "Konwledge_Point": "循环控制", "Question": ["关于javascript Dom操作 for循环只循环一次的问题？", ["期望效果：页面中random box按钮可以控制div盒子的背景色彩；", "\nhtml结构代码如下", "\n\n", "<div class='father'>\n        123\n        <div class=\"son\"></div>\n        <div class=\"son\"></div>\n        <div class=\"son\"></div>\n        <div class=\"son\"></div> \n\n    </div>\n    <nav>\n    <button id=\"bodycolor\">random body</button>\n    <button id=\"boxcolor\">random box</button>\n    </nav>\n", "\n\n", "js代码如下", "\n\n", "//随机16进制颜色的函数\n    function randomColor(){\n        var colorList= ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n        var colorStr='#';\n        for(i=0;i < 6;i++){\n            var index=parseInt(Math.random()*16);\n            colorStr+=colorList[index];\n        }//end for\n        return colorStr;\n    }//end function \n\n//随机div背景颜色\n    document.getElementById(\"boxcolor\").onclick=function(){ \n        //获取页面中所有div对象，组成数组box\n        var box=document.getElementsByTagName(\"div\");\n        //循环遍历box数组\n        for(i=0;i < 5;i++){ \n            //改变div背景颜色\n            box[i].style.backgroundColor=randomColor();\n            console.log(box[i]);\n        }//end for  \n        //控制台输出box中的内容\n        console.log(box);\n    }//end function\n", "\n\n", "实际效果：点击按钮只能够随机父级div的背景颜色，子级div无效果", "\n分析：在控制台中可以看出box中获取了页面中所有的div对象，而for 循环中只输出了一次box数组中的元素，如下图：", "\n\n", "\n\n", "所以不明白问题出在哪里，请大牛们解答！", "\n感谢！", "\n本案例全部代码附在下方", "\n\n", "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>随机背景颜色</title>\n    <style>\n        *{\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        body{\n            position: relative;\n             overflow: hidden;\n        }\n        button{\n            width: 100px;\n            height: 200px;\n            font-weight: 700;\n            border: 2px solid #fff;\n            background-color: #ccc;\n            color: #666;\n            outline: none;\n            position: absolute;\n        }\n        nav button:first-child{\n            top:0px;\n            left: 170px;    \n            border-bottom: 1px solid #fff;\n        }\n        nav button:last-child{\n            top: 200px;\n            left: 170px;    \n            border-top: 1px solid #fff; \n        }\n        button:hover{\n            cursor: pointer;\n            background-color: #666;\n            color: #fff;\n\n        }\n        .father{\n            margin: auto;\n            margin-top: 20px;\n            width: 900px;\n            height: 400px;\n            border: 2px solid #fff;\n            border-left: 0;\n        }\n        .son{   \n            margin: 0;\n            width: 100px;\n            height: 100px;\n            border: 0;\n            float: left;\n            border: 1px solid #000;\n        }\n    </style>\n</head>\n<body>\n    <div class='father'>\n        123\n        <div class=\"son\"></div>\n        <div class=\"son\"></div>\n        <div class=\"son\"></div>\n        <div class=\"son\"></div> \n\n    </div>\n    <nav>\n    <button id=\"bodycolor\">random body</button>\n    <button id=\"boxcolor\">random box</button>\n    </nav>\n<script>\n    /*随机16进制颜色的函数*/\n    function randomColor(){\n        var colorList= ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n        var colorStr='#';\n        for(i=0;i < 6;i++){\n            var index=parseInt(Math.random()*16);\n            colorStr+=colorList[index];\n        }//end for\n        return colorStr;\n    }//end function \n\n    /*随机rgba格式颜色的函数*/\n    function randomColorRgba(){\n        var colorStr='rgba(';\n        for(i=0;i<3;i++){\n            colorStr+=(parseInt(Math.random()*(255+1))+', ');\n        }//end for\n        colorStr+=(Math.random()+')');\n        return colorStr;\n    }\n\n    //随机body背景颜色\n    var bd=document.getElementsByTagName(\"body\");\n    bd[0].style.backgroundColor=randomColor();\n    document.getElementById(\"bodycolor\").onclick=function(){\n        bd[0].style.backgroundColor=randomColor();\n    }\n\n\n    //随机div背景颜色\n    document.getElementById(\"boxcolor\").onclick=function(){ \n        var box=document.getElementsByTagName(\"div\");//获取页面中所有div对象，组成数组box\n        for(i=0;i < 5;i++){                 //循环遍历box数组，\n            box[i].style.backgroundColor=randomColor();//改变div背景颜色\n            console.log(box[i]);   //问题是：在页面中只能给box中第一个对象加上背景颜色，其他对象不行\n        }//end for  \n        console.log(box);\n    }//end function\n\n</script>\n</body>\n</html>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; st;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setup&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-built_in\"&gt;pinMode&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;OUTPUT&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//io配置&lt;/span&gt;\n  &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//上电延时发送脉冲&lt;/span&gt;\n  st&amp;#61;&lt;span class=\"hljs-number\"&gt;0x01&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//脉冲发送标志位&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;loop&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(st){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//脉冲发送&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;digitalWrite&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//产生上升沿&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;digitalWrite&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//产生下降沿&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n  }\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["arduino控制42步进电机   通电复位   启动后无线循环。程序怎么写", ["arduino控制42步进电机", "通电后 自动复位", "然后无线单方向循环", "程序怎么写。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;while&lt;/span&gt; i &amp;gt;&lt;span class=\"hljs-number\"&gt;1000000&lt;/span&gt; :\n    &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;*&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d 分钟后会超过100万&amp;#34;&lt;/span&gt;%j)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["Python 流程控制while循环", ["假设有一个细胞每分钟分裂一次，第1次分裂后的总数是2个，第2次分裂后的总数是4个，第3次分裂后的总数是8个，以此类推，每次分裂后的总数是前一次分裂的两倍，请编写一个程序，计算该细胞经过几分钟后，总数会超过100万个"]], "Tag": "程序设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/w451373766/article/details/7091623'&gt;Java中map的循环输出&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/u010355144/article/details/48295721'&gt;Java多线程：用三个线程控制循环输出10次ABC&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/Love_bei/article/details/50454190'&gt;黑马程序员 JAVA循环控制&lt;/a&gt;&lt;br/&gt;----------------------biu~biu~biu~~~在下问答机器人小D，这是我依靠自己的聪明才智给出的答案，如果不正确，你来咬我啊！", "Konwledge_Point": "循环控制", "Question": ["怎么用java输出控制word循环", ["package word;", "\n\n", "import java.io.File;", "\nimport java.io.FileInputStream;", "\nimport java.io.FileNotFoundException;", "\nimport java.io.FileOutputStream;", "\nimport java.io.IOException;", "\nimport java.io.InputStream;", "\nimport java.util.ArrayList;", "\nimport java.util.HashMap;", "\nimport java.util.Iterator;", "\nimport java.util.List;", "\nimport java.util.Map;", "\nimport java.util.Map.Entry;", "\nimport java.util.regex.Matcher;", "\nimport java.util.regex.Pattern;", "\n\n", "import org.apache.poi.POIXMLDocument;", "\nimport org.apache.poi.hwpf.HWPFDocument;", "\nimport org.apache.poi.hwpf.usermodel.Range;", "\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;", "\nimport org.apache.poi.xwpf.usermodel.XWPFParagraph;", "\nimport org.apache.poi.xwpf.usermodel.XWPFRun;", "\nimport org.apache.poi.xwpf.usermodel.XWPFTable;", "\nimport org.apache.poi.xwpf.usermodel.XWPFTableCell;", "\nimport org.apache.poi.xwpf.usermodel.XWPFTableRow;", "\n\n", "/**", "\n\n", "\n", "@author wei.jia", "\n", "\n", "@Created on 2014-10-28", "\n", "\n", "*/", "\npublic class ReplaceVarInWordImpl {", "\n\n", "// 返回Docx中需要替换的特殊字符，没有重复项", "\n// 推荐传入正则表达式参数\"\\$\\{[^{}]+\\}\"", "\npublic ArrayList getReplaceElementsInWord(String filePath,", "\n        String regex) {", "\n    String[] p = filePath.split(\"\\.\");", "\n    if (p.length > 0) {// 判断文件有无扩展名", "\n        // 比较文件扩展名", "\n        if (p[p.length - 1].equalsIgnoreCase(\"doc\")) {", "\n            ArrayList al = new ArrayList();", "\n            File file = new File(filePath);", "\n            HWPFDocument document = null;", "\n            try {", "\n                InputStream is = new FileInputStream(file);", "\n                document = new HWPFDocument(is);", "\n            } catch (FileNotFoundException e) {", "\n                e.printStackTrace();", "\n            } catch (IOException e) {", "\n                e.printStackTrace();", "\n            }", "\n            Range range = document.getRange();", "\n            String rangeText = range.text();", "\n            CharSequence cs = rangeText.subSequence(0, rangeText.length());", "\n            Pattern pattern = Pattern.compile(regex);", "\n            Matcher matcher = pattern.matcher(cs);", "\n            int startPosition = 0;", "\n            while (matcher.find(startPosition)) {", "\n                if (!al.contains(matcher.group())) {", "\n                    al.add(matcher.group());", "\n                }", "\n                startPosition = matcher.end();", "\n            }", "\n            return al;", "\n        } else if (p[p.length - 1].equalsIgnoreCase(\"docx\")) {", "\n            ArrayList al = new ArrayList();", "\n            XWPFDocument document = null;", "\n            try {", "\n                document = new XWPFDocument(", "\n                        POIXMLDocument.openPackage(filePath));", "\n            } catch (IOException e) {", "\n                e.printStackTrace();", "\n            }", "\n            // 遍历段落", "\n            Iterator itPara = document", "\n                    .getParagraphsIterator();", "\n            while (itPara.hasNext()) {", "\n                XWPFParagraph paragraph = (XWPFParagraph) itPara.next();", "\n                String paragraphString = paragraph.getText();", "\n                CharSequence cs = paragraphString.subSequence(0,", "\n                        paragraphString.length());", "\n                Pattern pattern = Pattern.compile(regex);", "\n                Matcher matcher = pattern.matcher(cs);", "\n                int startPosition = 0;", "\n                while (matcher.find(startPosition)) {", "\n                    if (!al.contains(matcher.group())) {", "\n                        al.add(matcher.group());", "\n                    }", "\n                    startPosition = matcher.end();", "\n                }", "\n            }", "\n            // 遍历表", "\n            Iterator itTable = document.getTablesIterator();", "\n            while (itTable.hasNext()) {", "\n                XWPFTable table = (XWPFTable) itTable.next();", "\n                int rcount = table.getNumberOfRows();", "\n                for (int i = 0; i < rcount; i++) {", "\n                    XWPFTableRow row = table.getRow(i);", "\n                    List cells = row.getTableCells();", "\n                    for (XWPFTableCell cell : cells) {", "\n                        String cellText = \"\";", "\n                        cellText = cell.getText();", "\n                        CharSequence cs = cellText.subSequence(0,", "\n                                cellText.length());", "\n                        Pattern pattern = Pattern.compile(regex);", "\n                        Matcher matcher = pattern.matcher(cs);", "\n                        int startPosition = 0;", "\n                        while (matcher.find(startPosition)) {", "\n                            if (!al.contains(matcher.group())) {", "\n                                al.add(matcher.group());", "\n                            }", "\n                            startPosition = matcher.end();", "\n                        }", "\n                    }", "\n                }", "\n            }", "\n            return al;", "\n        } else {", "\n            return null;", "\n        }", "\n    } else {", "\n        return null;", "\n    }", "\n}", "\n\n", "// 替换word中需要替换的特殊字符", "\npublic static boolean replaceAndGenerateWord(String srcPath,", "\n        String destPath, Map map) {", "\n    String[] sp = srcPath.split(\"\\.\");", "\n    String[] dp = destPath.split(\"\\.\");", "\n    if ((sp.length > 0) && (dp.length > 0)) {// 判断文件有无扩展名", "\n        // 比较文件扩展名", "\n        if (sp[sp.length - 1].equalsIgnoreCase(\"docx\")) {", "\n            try {", "\n                XWPFDocument document = new XWPFDocument(", "\n                        POIXMLDocument.openPackage(srcPath));", "\n                // 替换段落中的指定文字", "\n                Iterator itPara = document", "\n                        .getParagraphsIterator();", "\n                while (itPara.hasNext()) {", "\n                    XWPFParagraph paragraph = (XWPFParagraph) itPara.next();", "\n                    List runs = paragraph.getRuns();", "\n                    for (int i = 0; i < runs.size(); i++) {", "\n                        String oneparaString = runs.get(i).getText(", "\n                                runs.get(i).getTextPosition());", "\n                        for (Map.Entry entry : map", "\n                                .entrySet()) {", "\n                            oneparaString = oneparaString.replace(", "\n                                    entry.getKey(), entry.getValue());", "\n                        }", "\n                        runs.get(i).setText(oneparaString, 0);", "\n                    }", "\n                }", "\n\n", "            // 替换表格中的指定文字\n            Iterator<XWPFTable> itTable = document.getTablesIterator();\n            while (itTable.hasNext()) {\n                XWPFTable table = (XWPFTable) itTable.next();\n                int rcount = table.getNumberOfRows();\n                for (int i = 0; i < rcount; i++) {\n                    XWPFTableRow row = table.getRow(i);\n                    List<XWPFTableCell> cells = row.getTableCells();\n                    for (XWPFTableCell cell : cells) {\n                        String cellTextString = cell.getText();\n                        for (Entry<String, String> e : map.entrySet()) {\n                            if (cellTextString.contains(e.getKey()))\n                                cellTextString = cellTextString\n                                        .replace(e.getKey(),\n                                                e.getValue());\n                        }\n                        cell.removeParagraph(0);\n                        cell.setText(cellTextString);\n                    }\n                }\n            }\n            FileOutputStream outStream = null;\n            outStream = new FileOutputStream(destPath);\n            document.write(outStream);\n            outStream.close();\n            return true;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n\n    } else\n    // doc只能生成doc，如果生成docx会出错\n    if ((sp[sp.length - 1].equalsIgnoreCase(\"doc\"))\n            && (dp[dp.length - 1].equalsIgnoreCase(\"doc\"))) {\n        HWPFDocument document = null;\n        try {\n            document = new HWPFDocument(new FileInputStream(srcPath));\n            Range range = document.getRange();\n            for (Map.Entry<String, String> entry : map.entrySet()) {\n                range.replaceText(entry.getKey(), entry.getValue());\n            }\n            FileOutputStream outStream = null;\n            outStream = new FileOutputStream(destPath);\n            document.write(outStream);\n            outStream.close();\n            return true;\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n            return false;\n        } catch (IOException e) {\n            e.printStackTrace();\n            return false;\n        }\n    } else {\n        return false;\n    }\n} else {\n    return false;\n}\n", "\n\n", "}", "\n\n", "public static void main(String[] args) {", "\n    // TODO Auto-generated method stub", "\n    String filepathString = \"e:/Doc1.docx\";", "\n    String destpathString = \"e:/Doc5.docx\";", "\n    Map map = new HashMap();", "\n        map.put(\"${Wenyang}\", \"温飏\");", "\n        System.out.println(replaceAndGenerateWord(filepathString,", "\n            destpathString,map));", "\n}", "\n\n", "}", "\n上面是代码。", "\n    例如：班级学生人数不同要根据人数停止输出内容", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nfor ($i = 0; $i &amp;lt; 10; $i++) {\n?&amp;gt;\n    &amp;lt;div class=\"news\" align=\"center\" style=\"width:900px;height:65px;background-color:#C8C8C8\"&amp;gt;\n    &amp;lt;h3&amp;gt; From: ..... &amp;lt;/h3&amp;gt;&amp;lt;/br&amp;gt;\n    &amp;lt;p1&amp;gt; Message: Thank you for registering... &amp;lt;/p1&amp;gt;\n    &amp;lt;/div&amp;gt;\n&amp;lt;?php\n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Although, as @mc10 stated, &lt;code&gt;&amp;lt;p1&amp;gt;&lt;/code&gt; is not a valid HTML tag.  This code will duplicate that HTML ten times.  To change the number of times it duplicates, change the number in the loop (&lt;code&gt;$i &amp;lt; 10&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;The sample code is a basic for loop, like I used here.  The manual on the &lt;code&gt;for&lt;/code&gt; control structure is here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/for\" rel=\"noreferrer\"&gt;http://php.net/for&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I recommend that you read a tutorial on the basics of PHP.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://devzone.zend.com/article/627\" rel=\"noreferrer\"&gt;http://devzone.zend.com/article/627&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["php循环次数[关闭]", ["\n\n", "I need to loop a html code with php so it will display a list if messages results if it is possible? ", "\n\n", "I found this code on google? i couldnt understand it:", "\n\n", "      $brush_price = 5; \n\n    echo \"<table border=\\\"1\\\" align=\\\"center\\\">\";\n    echo \"<tr><th>Quantity</th>\";\n    echo \"<th>Price</th></tr>\";\n    for ( $counter = 10; $counter <= 100; $counter += 10) {\n        echo \"<tr><td>\";\n        echo $counter;\n        echo \"</td><td>\";\n        echo $brush_price * $counter;\n        echo \"</td></tr>\";\n    echo \"</table>\";\n\n}\n", "\n\n", "I just need it to duplicate a div which is  ", "\n\n", "<div class=\"news\" align=\"center\" style=\"width:900px;height:65px;background-color:#C8C8C8\">\n<h3> From: ..... </h3></br>\n<p1> Message: Thank you for registering... </p1>\n</div>\n", "\n\n", "and i need to loop it for home much messages he has ", "\n    "]], "Tag": "程序设计"}
{"Answer": "整理下你的意思：五个整型数值（1-15），后边的数值依次比前面的大，存在并且只有一组相邻的数值差相等；\r\n简化修正你的代码（for循环，减去不必要的循环；c_b=c-b，你写成了c-a；\r\n因为四个数值差你都定义了变量，的确不符合使用循环，使用循环的话可以定义成数组；这里用相等的个数==1进行判断）\r\nint main()\r\n{\r\n\t\tint a, b, c, d, e, i = 0;\r\n\t\tint b_a, c_b, d_c, e_d=0;\r\n\t\tint equalNum=0;\r\n\t\tfor (a = 1; a &lt;= 11; a++)\r\n\t\tfor (b = a+1; b &lt;= 12; b++)\r\n\t\tfor (c = b+1; c &lt;= 13; c++)\r\n\t\tfor (d = c+1; d &lt;= 14; d++)\r\n\t\tfor (e = d+1; e &lt;= 15; e++)\r\n\t\t{\r\n\t\tb_a=b-a;\r\n\t\tc_b=c-b;\r\n\t\td_c=d-c;\r\n\t\te_d=e-d;\r\n\t\t/*在这里帮我加上一段逻辑控制，用递归算一算下面的6种关系，把6种情况里面的符合条件 的 a，b，c ，d，e的值全部打印出来。比如：b-a=c-b,等等*/\r\n\t\tequalNum=0;\r\n\t\tif(b_a==c_b) equalNum++;\r\n\t\tif(b_a==d_c) equalNum++;\r\n\t\tif(b_a==e_d) equalNum++;\r\n\t\tif(c_b==d_c) equalNum++;\r\n\t\tif(d_c==e_d) equalNum++;\r\n\t\tif(equalNum==1){\r\n\t\t\tprintf(\"A:%2d B:%2d C:%2d D:%2d E:%2d \", a, b, c, d, e);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t\ti++;\r\n\t\t}\r\n\t\t}\r\n\t\tprintf(\"一共%d种\\n\", i);\r\n\t}\r\n\t运行结果如下：\r\n\t![图片说明](https://img-ask.csdn.net/upload/201805/16/1526437228_783681.png)", "Konwledge_Point": "循环控制", "Question": ["用c语言算一个简单的循环判断，或者递归", ["老铁帮我加一段代码。谢谢。", "\n\n", "#include \"stdafx.h\"", "\n#include", "\nint main()", "\n{", "\n    int a, b, c, d, e, i = 0;", "\n    int b_a, c_b, d_c, e_d=0;", "\n    for (a = 1; a <= 15; a++)", "\n        for (b = 1; b <= 15; b++)", "\n            for (c = 1; c <= 15; c++)", "\n                for (d = 1; d <= 15; d++)", "\n                    for (e = 1; e <= 15; e++)", "\nif (b - a > 0 && c - b > 0 && d - c > 0 && e - d > 0)", "\n       {", "\n       b_a=b-a;", "\n             c_b=c-a;", "\n             d_c=d-c;", "\n             e_d=e-d;", "\n       /*在这里帮我加上一段逻辑控制，用递归算一算下面的6种关系，把6种情况里面的符合条件      的  a，b，c   ，d，e的值全部打印出来。比如：b-a=c-b,等等*/", "\n        printf(\"A:%2d B:%2d C:%2d D:%2d E:%2d \", a, b, c, d, e);", "\n        i++;", "\n        if (i % 1 == 0)", "\n        printf(\"\\n\");", "\n                                }", "\n                            }", "\n                        }", "\n}", "\n    printf(\"一共%d种\\n\", i);", "\n    return 0;", "\n}", "\n需要循环控制的6种小逻辑。", "\n1 。b-a=c-b并且d-c≠e-d并且b-a≠d-c并且b-a≠e-d", "\n2。 b-a=e-d并且c-b≠d-c并且b-a≠c-b并且b-a≠d-c", "\n3。 b-a=d-c并且c-b≠e-d并且b-a≠c-b并且b-a≠e-d", "\n4。 c-b=d-c并且b-a≠e-d并且c-b≠b-a并且c-b≠e-d", "\n5。 d-c=e-d并且b-a≠c-b并且d-c≠b-a并且d-c≠c-b", "\n6。 c-b=e-d并且b-a≠d-c并且c-b≠b-a并且c-b≠d-c", "\n\n", "打个比方，有4个球A，B，C，D。从这4个球里面选择2个球，其中A等于B的时候，其他的球B不等于C，B不等于D，C不等于D.", "\n\n", "希望懂的老铁能帮我加一段逻辑控制。把代码添加到这里。", "\n\n", "/*在这里帮我加上一段逻辑控制，用递归算一算下面的6种关系，把6种情况里面的符合条件      的  a，b，c  ，d，e的值全部打印出来。比如：b-a=c-b,等等*/"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当每运行一次第一个for循环时&amp;#xff08;i&amp;#xff09;都会使count&amp;#43;3&amp;#xff0c;当i&amp;#61;6时&amp;#xff0c;产生第6次大循环&amp;#xff0c;此时count &amp;#61; 3*5&amp;#61;15&amp;#xff0c;触发if&amp;#xff08;i &amp;#61;&amp;#61; 6&amp;#xff09;goto stop&amp;#xff1b;执行goto语句&amp;#xff0c;程序跳转到stop:print(&amp;#34;跳转到 stop.i&amp;#61;%d\\n&amp;#34;,i);语句&amp;#xff0c;继续顺序执行程序&lt;br /&gt;程序的最终输入结果应该为&amp;#xff1a;&lt;br /&gt;跳转到stop.i&amp;#61;6&lt;br /&gt;循环次数&amp;#xff1a;15&lt;/p&gt;\n&lt;p&gt;如果问题解决&amp;#xff0c;望采纳&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["循环流程控制  goto语句理解", ["这段代码是什么意思？应该怎么理解。"]], "Tag": "程序设计"}
{"Answer": "http://wenku.baidu.com/link?url=ouE64Rzy8lzY5Sjby-BIvcQk6bPrWFORPAQLOcflbVKnLqEQDvSlbZTn9yLbfKem7y-fNymFWOeEJhDedshUkrDjuhoLQoJhIYqZdKv8ucS", "Konwledge_Point": "循环控制", "Question": ["基于51单片机的分时分区照明控制器的汇编程序", ["（1）具有3种固定的模式，作息模式之间可以根据时间自动转换或手动转换。模式如下：", "\n手动：可以任意管制各个分区的照明。", "\n时间控制：按照学校日常运行模式，6:00~12:00、14:00~18:00启用照明，其他时间关闭，自动切换。", "\n自动模式：在6:00~12:00、14:00~18:00启用照明时间段中，6:00开始启用照明，当室外照度达到一定强度时，关闭B区、C区照明，当室外照度低于一定强度时，重新启用。在此期间，A区采用温度场控制，当该区域温度高于预设的温度时，A区照明暂时关闭；温度稍低时，只有当B区、C区照明没有启用时，A区照明才能启用。", "\n提供一种自定义模式以满足特殊要求的需要，可以通过控制面板设置区域和时间区间。", "\n（2）光源：白炽灯（220V AC 40~60W）", "\n（3）日期、时钟和温度显示，日期和时间可设定，整点报时声光提示。不能使用时钟专用芯片获取日期和时间。", "\n（4）事件记录：在6:00~18:00之间，每个一段时间把分区照明的工作状态信息发到监控器上，如：“mm(月)-dd(日)-hh(小时)-mm(分钟)，A on B off C on D on，temp：xx”", "\n（6）日期、时钟、温度可交替显示。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; tags are for header cells, you should be using &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; data cells.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$types = array();\n\nforeach ($allgemeinxml-&amp;gt;result-&amp;gt;rowset-&amp;gt;row as $type){\n    $types[] = $type{'typeName'};\n}\n\n$type_index = 0;\n\nforeach ($xml-&amp;gt;result-&amp;gt;rowset-&amp;gt;row as $row){\n    if($row{'refTypeID'} == 42){\n        echo '&amp;lt;tr&amp;gt;';\n        echo \"&amp;lt;td&amp;gt;\";\n        echo $row{'date'};\n        echo \"&amp;lt;/td&amp;gt;\";\n        echo \"&amp;lt;td&amp;gt;\";\n        echo '' . $row{'ownerName1'} .'';\n        echo \"&amp;lt;/td&amp;gt;\";\n        echo \"&amp;lt;td&amp;gt;\";\n        echo $types[$type_index];\n        echo \"&amp;lt;/td&amp;gt;\";\n        echo \"&amp;lt;td&amp;gt;\";\n        echo '&amp;lt;p class=\"minus\"&amp;gt;' . $row{'amount'} .' ISK&amp;lt;/p&amp;gt;';\n        echo \"&amp;lt;/td&amp;gt;\";\n        echo \"&amp;lt;td&amp;gt;\";\n        echo '&amp;lt;p class=\"kontostand\"&amp;gt;' . $row{'balance'} . ' ISK&amp;lt;/p&amp;gt;';\n        echo \"&amp;lt;/td&amp;gt;\";\n        echo '&amp;lt;/tr&amp;gt;';\n    }\n    $type_index++;\n}\necho \"&amp;lt;/table&amp;gt;\";\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I don't know exactly what the use of &lt;code&gt;if($row{'refTypeID'} == 42){&lt;/code&gt; is, so you either want &lt;code&gt;$type_index++;&lt;/code&gt; in the place I've put it above, or just above the closing brace &lt;code&gt;}&lt;/code&gt;. For this to work well, &lt;code&gt;$allgemeinxml-&amp;gt;result-&amp;gt;rowset-&amp;gt;row&lt;/code&gt; and &lt;code&gt;$xml-&amp;gt;result-&amp;gt;rowset-&amp;gt;row&lt;/code&gt; need the same number of elements.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["如何使用嵌套循环生成HTML表？", ["\n\n", "I have a table that should look like the following:", "\n\n", "http://hell-rider.de/Fotos/img/beispiel-1.JPG", "\n\n", "I have the following PHP script:", "\n\n", "foreach ($xml->result->rowset->row as $row){\n    if($row{'refTypeID'} == 42){\n        echo '<tr>';\n        echo \"<th>\";\n        echo $row{'date'};\n        echo \"</th>\";\n        echo \"<th>\";\n        echo '' . $row{'ownerName1'} .'';\n        echo \"</th>\";\n        echo \"<th>\";\n        foreach ($allgemeinxml->result->rowset->row as $type){\n            echo '' . $type{'typeName'} .'';\n        }\n        echo \"</th>\";\n        echo \"<th>\";\n        echo '<p class=\"minus\">' . $row{'amount'} .' ISK</p>';\n        echo \"</th>\";\n        echo \"<th>\";\n        echo '<p class=\"kontostand\">' . $row{'balance'} . ' ISK</p>';\n        echo \"</th>\";\n        echo '</tr>';\n    }\n}\necho \"</table>\";\n", "\n\n", "The actual output of my script is the following, however:", "\n\n", "http://hell-rider.de/Fotos/img/beispiel2.JPG", "\n\n", "How do I have to change my script to populate the third column correctly (and not with ", "MetallurgyTradeLaboratory OperationLaboratory OperationLaboratory OperationResearchCybernetics", ")?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;In the view file :\n\n&amp;lt;select class=\"form-control\" id=\"name_{{ $dtListPengikut-&amp;gt;KODE }}\" name=\"name[]\" data-live-search=\"true\" style=\"width:100%\"&amp;gt;\n &amp;lt;option value=\"\"&amp;gt; --Silahkan Pilih-- &amp;lt;/option&amp;gt;\n  @foreach ($getPengikut as $getPeng)\n        &amp;lt;option value=\"{{ $getPeng-&amp;gt;KODE }}\"&amp;gt;{{ $getPeng-&amp;gt;DESKRIPSI }}&amp;lt;/option&amp;gt; \n  @endforeach\n&amp;lt;/select&amp;gt;\n\n\nIn in the controller:\n$html = '&amp;lt;select class=\"form-control\" id=\"name_'.$dtListPengikut-&amp;gt;KODE.'\" name=\"name[]\" data-live-search=\"true\" style=\"width:100%\"&amp;gt;\n    &amp;lt;option value=\"\"&amp;gt; --Silahkan Pilih-- &amp;lt;/option&amp;gt;';\n    foreach($getPengikut as $getPeng):\n        $html .= '&amp;lt;option value=\"'. $getPeng-&amp;gt;KODE.'\"&amp;gt; '.$getPeng-&amp;gt;DESKRIPSI.'&amp;lt;/option&amp;gt;' ;\n    endforeach;\n$html .='&amp;lt;/select&amp;gt;';\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["如何使用laravel将控制器中的foreach选择框调用到刀片视图？", ["\n\n", "I am using laravel 5.2 and I have a field which is a selectbox, and I call it in the controller to show in my view. But The value of the selectbox does not appear. When my code in the controller like this:", "\n\n", "foreach($getDataListPengikut as $dtListPengikut):\n        $msg[\"opt\"] .= '<tr>\n            <td><select class=\"form-control\" id=\"name_{{ $dtListPengikut->KODE }}\" name=\"name[]\" data-live-search=\"true\" style=\"width:100%\">\n                <option value=\"\"> --Silahkan Pilih-- </option>\n                    @foreach ($getPengikut as $getPeng)\n                        <option value=\"{{ $getPeng->KODE }}\">{{ $getPeng->DESKRIPSI }}</option> \n                    @endforeach\n                </select>\n            </td> \n            <td><input type=\"text\" value=\"'.$dtListPengikut->KETERANGAN.'\" id=\"ket_'.$dtListPengikut->KODE.'\" name=\"ket[]\" placeholder=\"Keterangan\" class=\"form-control ket_list\" style=\"text-transform:uppercase\" required=\"false\" />\n            </td>    \n            <td><button type=\"button\" name=\"add\" id=\"add2\" class=\"btn btn-success\"><b>+</b></button>\n            </td>\n        </tr>';\n    $no++;\n    endforeach;\n", "\n\n", "In the inside of my selectbox is  ", "{{ $getPeng->DESKRIPSI }}", "\n\n", "And when I change my code into like this:", "\n\n", "<select class=\"form-control\" id=\"name_'.$dtListPengikut->KODE.'\" name=\"name[]\" data-live-search=\"true\" style=\"width:100%\">\n<option value=\"\"> --Silahkan Pilih-- </option>\n'. foreach($getPengikut as $getPeng) .'\n    <option value=\"'. $getPeng->KODE.'\"> '.$getPeng->DESKRIPSI.' </option> \n'.endforeach.'\n</select>\n", "\n\n", "I got an error :", "\n\n", "\n  ", "syntax error, unexpected 'foreach' (T_FOREACH)", "\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try using this,&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;button class=\"btn btn btn-primary\" data-id=\"{{ $comment-&amp;gt;id }}\" onclick=\"showHide('replycomment-{{ $comment-&amp;gt;id }}');\"&amp;gt;\n    &amp;lt;span class=\"fa fa-reply\"&amp;gt;&amp;lt;/span&amp;gt;\n&amp;lt;/button&amp;gt;\n\n//javascript code\n&amp;lt;script&amp;gt;\n    function showHide(id){\n        $(\"#\"+id).toggle();\n    }\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["显示/隐藏在foreach循环中生成的元素", ["\n\n", "I am looping out forum entries and next to each one i have placed a button to show or hide the reply to comment form, i got this to work using a simple JS script. However because the script is looped out it only works for the top one. presumably because it cannot identify each element using an id because id won't be unique (and class would cause all of them to show/hide). I did think of adding something like {{$comment->id}} to the id so it would be unique but i cannot then use the JS script? can i?", "\n\n", "Below is the relevant code:", "\n\n", "@extends('layout')\n\n@section('head')\n<script>\n$(document).ready(function(){\n    $(\"#showhidereply\").click(function(){\n        $(\"#replycomment\").toggle();\n    });\n});\n</script>\n @stop\n\n@section('content')\n    ...\n    <!-- Comments -->\n          @foreach ($post->comments as $comment)\n              <span class=\"pull-right\">\n                  <div class=\" btn-group\">\n                    <button class=\"btn btn\">\n                        <span class=\"glyphicon glyphicon-picture\"></span> Owner's Name Here\n                    </button>\n                    <button class=\"btn btn btn-primary\" id=\"showhidereply\">\n                      <span class=\"fa fa-reply\"></span>\n                    </button>\n                  </div>\n              </span>\n              <p>{{ $comment->body }}</p>\n            </div>\n\n    <form method=\"POST\" action=\"/forum/{{ $post->id }}/comments/{{ $comment->id }}/newresponse\" id=\"replycomment\">\n                    <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                    <div class=\"input-group\" style=\"padding-top: 5px;\">\n                      <input type=\"text\" name=\"body\" class=\"form-control\"></input>\n                      <div class=\"input-group-btn\">\n                        <button type=\"submit\" class=\"btn btn-primary\">Reply to Comment</button>\n                      </div>\n                    </div>\n                  </form>\n                  </div>\n            </div>\n            </div>\n        </div>\n        </div>\n          @endforeach\n          </div>\n</div>\n@stop\n", "\n\n", "I did have someone make a suggestion of changing to:", "\n\n", "Button", "\n\n", "<button class=\"btn btn btn-primary\" class=\"showhidereply\" data-id=\"{{ $comment->id }}\">\n    <span class=\"fa fa-reply\"></span>\n</button>\n", "\n\n", "Form", "\n\n", "<form method=\"POST\" action=\"/forum/{{ $post->id }}/comments/{{ $comment->id }}/newresponse\" id=\"replycomment-{{ $comment->id }}\">\n", "\n\n", "Script", "\n\n", "<script>\n$(document).ready(function(){\n    // change the selector to use a class\n    $(\".showhidereply\").click(function(){\n        // this will query for the clicked toggle\n        var $toggle = $(this); \n\n        // build the target form id\n        var id = \"#replycomment-\" + $toggle.data('id'); \n\n        $( id ).toggle();\n    });\n});\n</script>\n", "\n\n", "But that still doesn't work but the elements are all now unique.", "\n\n", "Many Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这里第一遍流程flag一直为true&amp;#xff0c;而input的值是怎么获取的呢,如果不能重复赋值,那肯定是一直循环的呢&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["为啥我的这个控制不了循环了？？？", ["为什么flag标签控制不了循环？", "\n", "\n", "        ", "boolean", " flag = ", "true", ";\n        ", "do", " {\n        String input = getString(\"speak\").trim();\n        ", "if", " (\"stop\".equalsIgnoreCase(", "input", ")) {\n            flag = ", "false", ";\n            ", "System", ".", "out", ".println(\"结束循环\");\n        } ", "else", " {\n        pu.println(", "input", ");\n        }\n        } ", "while", " (flag);\n\n"]], "Tag": "程序设计"}
{"Answer": "你可以利用MFC封装好的消息循环，不需要你自己实现，你只用处理对应的事件响应。\r\n\r\nhttp://blog.csdn.net/a_runing_man/article/details/9947343", "Konwledge_Point": "循环控制", "Question": ["MFC 中加入循环的问题", ["小弟需要做个无线控制的上位机 现在的思路是在MFC的主函数中加入循环发送的串口，通过按钮获得控制信息，不知道这样可行么？在网上查的资料说MFC 的主函数是封装的？"]], "Tag": "程序设计"}
{"Answer": "我明白你的意思，就是执行事件的时候，无法操作界面，卡住了\r\n你可以用线程\r\nhttps://stackoverflow.com/questions/2342183/wxpython-application-doevents-equivalent", "Konwledge_Point": "循环控制", "Question": ["wxpython跳出按钮死循环shi'jian", ["在wxpython窗口工具使用中，在一个按钮事件中绑定了死循环事件，现需要可以自由控制跳出循环。", "\n有什么方法可以中断按钮事件或着可控的跳出循环吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可以把具体的题目贴一下&amp;#xff0c;然后看看到底是个什么情况&amp;#xff0c;为什么不能用decimal&amp;#xff0c;因为16位以后除了decimal也没有其他好的办法去控制精确度了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["python循环小数精度问题", ["如图 牛客网刷题：", "\n", "双精度浮点数float64精确到小数点后16位", "而我计算过程中会生成如[0.6666666666666666, 0.3333333333333333]这样的数据导致精度出现问题", "对于这种循环小数如果能0.3333333333333334就好了", "我采取的办法：1. 换算成ndarray数组comple128不行   2. 使用decimal也不行(用到log等函数) 3. 不能先不处理成非小数的形式 如1/3", "有效办法：面向答案编程", "\n", "想要请教如何控制这种精度  感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/433814102846188.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言输出有规律的图形，这里怎么理解", ["题如上，答案代码如下，能不能讲解一下循环为什么要这么写，每一步循环是在干什么，刚刚才开始学习c语言没太懂这个", "\n", "#include \"stdio.h\"", "int main()", "{", "   int i,j;", "   for(i=1; i<=4; i++)", "   {", "     for(j=5−i; j>0; j--)", "       printf(\" \");", "     for(j=1; j<=2*i−1; j++)", "       printf(\"%c\",'A'+i−1);", "     printf(\"\\n\");", "   }", "   for(i=1; i<=3; i++)", "   {", "      for(j=1; j<=i+1; j++)", "       printf(\" \");", "     for(j=7−2*i; j>0; j--)", "       printf(\"%c\",'D'-i);", "     printf(\"\\n\");", "   }", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用的谁家的板子&amp;#xff0c;不同家板子的api不一样&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c#做运动控制卡的线程循环有异常", ["最近遇到个项目是做板卡控制的，接触的不多，和板卡通讯问题不大，但是做流程控制的时候，感觉做的不太对，特此请教下。", "\n", "当我开线程进行自动运行的时候，会根据一些需求信号，给轴卡发运动指令（绝对，相对，JOG，插补等），但是遇到个问题是", "\n", "1.当没有额外反馈信号的时候，我得自己去得板卡轴当前的位置，我是不是得做while（true）死循环去监控位置值，到位后，break出去。", "2.但是当轴正在运行的时候，我程序是一直在while（true）死循环里，一直给板卡发指令，板卡厂商给的意思是，最好不要这样一直给，其他还好，像类似插补这样的，板卡直接会出错，卡死。", "\n", "以上是我纠结的点，希望各位指点迷津！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是用什么开发工具写的&amp;#xff0c;经测试程序运行正常&amp;#xff0c;是不是修改程序后没有重新编译呢&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Java线程输出问题，无限循环运行，无法控制", ["帮我看看一下Java代码，是有关线程的，为什么它是无限循环，而不是输出十个", "\n\n", "class ThreadDemo extends Thread {", "\n\n", "   private String threadName;", "\n\n", "   private int s;", "\n\n", "   ThreadDemo(int s, String name) {", "\n\n", "      threadName = name;", "\n\n", "      this.s=s;", "\n\n", "   }", "\n\n", "   ", "\n\n", "   public void run() {", "\n\n", "      try {", "\n\n", "       for(int i = 0; i <10; i++) {", "\n\n", "          System.out.println(threadName);", "\n\n", "         Thread.sleep(s);", "\n\n", "         }", "\n\n", "      }catch (Exception e) {}", "\n\n", "      } ", "\n\n", "}", "\n\n", "public class YY {", "\n\n", " ", "\n\n", "   public static void main(String args[]) {", "\n\n", "      ThreadDemo T1 = new ThreadDemo(100, \"a\");", "\n\n", "      T1.start();", "\n\n", "      ThreadDemo T2 = new ThreadDemo(200, \"b\");", "\n\n", "      T2.start();", "\n\n", "   }   ", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Linux的信号机制说不定可以满足你的要求&lt;/p&gt;\n&lt;p&gt;int flag &amp;#61; 1;    // 全局变量 &lt;/p&gt;\n&lt;p&gt;void *set_flag_handle(int arg)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        flag &amp;#61; 0;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;\n&lt;p&gt;int main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;注册信号(信号&amp;#xff0c;set_flag_handle);&lt;br /&gt;while(1)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if (flag)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;             do_something();&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        else&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;              break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;}&lt;br /&gt;}&lt;/p&gt;\n&lt;p&gt;大致框架如上&amp;#xff0c;细节你去了解Linux信号机制即可。&lt;br /&gt;如有用&amp;#xff0c;望采纳&amp;#xff0c;感谢&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["外部信号控制循环可能性", ["在不使用中断的情况下，有可能实现外部控制某一参数来控制循环的终止吗？", "即不给信号保持循环一直运作，外部给信号后循环停止"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;答案如下&amp;#xff0c;如有帮助&amp;#xff0c;请采纳&amp;#xff0c;谢谢&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;1C&lt;br /&gt;\n2D&lt;br /&gt;\n3B&lt;br /&gt;\n4C&lt;br /&gt;\n5D&lt;br /&gt;\n6D&lt;br /&gt;\n8A&lt;br /&gt;\n9D&lt;/p&gt;\n\n&lt;p&gt;1代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"hljs\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n\tint sum &amp;#61; 0;\n\tfor (int i &amp;#61; 1; i &amp;lt;&amp;#61; 100;i&amp;#43;&amp;#43;)\n\t{\n\t\tsum &amp;#43;&amp;#61; i;\n\t}\n\tprintf(&amp;#34;sum &amp;#61; %d\\n&amp;#34;,sum);\n\n\tgetchar();\n\tgetchar();\n\treturn 0;\n\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;2题代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"hljs\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n\tfloat fs &amp;#61; 0.0;\n\twhile(1)\n\t{\n\t\tprintf(&amp;#34;请输入分数:&amp;#34;);\n\t\tscanf(&amp;#34;%f&amp;#34;,&amp;amp;fs);\n\t\tif (fs &amp;gt;&amp;#61; 90)\n\t\t{\n\t\t\tprintf(&amp;#34; A\\n&amp;#34;);\n\t\t}else if (fs &amp;gt;&amp;#61;80 &amp;amp;&amp;amp; fs &amp;lt; 90)\n\t\t{\n\t\t\tprintf(&amp;#34; B\\n&amp;#34;);\n\t\t}else if (fs &amp;gt;&amp;#61; 70 &amp;amp;&amp;amp; fs &amp;lt; 80)\n\t\t{\n\t\t\tprintf(&amp;#34; C\\n&amp;#34;);\n\t\t}else if (fs &amp;gt;&amp;#61; 60 &amp;amp;&amp;amp; fs &amp;lt; 70)\n\t\t{\n\t\t\tprintf(&amp;#34; D\\n&amp;#34;);\n\t\t}else if (fs &amp;lt; 60)\n\t\t{\n\t\t\tprintf(&amp;#34; E\\n&amp;#34;);\n\t\t}else\n\t\t\tprintf(&amp;#34; 超出判定范围\\n&amp;#34;);\n\n\t}\n\n\tgetchar();\n\tgetchar();\n\treturn 0;\n\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["2019-2020 C语言考试", ["单选题：", "\n\n", "1, 字符串 字符或字符型变量值的值为3,以下选项中正确的输入语句是(    )", "\n\n", "A. scanf(\"---\",&i,&j,&k);", "\n\n", "B. scanf(\"%d_ %d _%d\", &i, &j,&k); ", "\n\n", "C. scanf(\"%d, %d, %d\", &i, &j, &k);", "\n\n", "D. scanf(\"i=%d,j=%d,k=%d\", &i, &j, &k);", "\n\n", "2、有输入语句: scanf(\"a=%d,b=%d,c=%d\",&a,&b,&c);,为使变量a的值为1,b的值为3,c的值为2,则正确的数据输入方式是(    )", "\n\n", "A.132            ", "\n\n", "B.1,3,2            ", "\n\n", "a=1b=3c=2            ", "D.a=1,b=3,c=2", "\n\n", "3、设 char x=’a’;,则 printf(\"x=%d,y=%c\\n”,x,97);的输出是(    )", "\n\n", "    A.x=a,y=97", "\n\n", "B.x=97,y=a", "\n\n", "C.x=97,y=97 ", "\n\n", "D.x=a,y=a", "\n\n", "4、.能正确表示“当x的取值在[1,10]或[200,300]范围内为真,否则为假”的表达式(    )", "\n\n", "      A.(x>=1)&&(x<=10)&&(x>=200)&&(x<=300)", "\n\n", "B.(x>=1)‖(x<=10)‖(x>=200)‖(x<=300)", "\n\n", "C.(x>=1)&&(x<=10)‖(x>=200)&&(x<=300)", "\n\n", "D.(x>=1)‖(x<=10)&&(x>=200)‖(x<=300)", "\n\n", "5、 逻辑运算符两侧运算对象的数据类型是(    )", "\n\n", "A.只能是0或1", "\n\n", "B.只能是0或非0正数", "\n\n", "C.只能是整型或字符型数据", "\n\n", "D.可以是任何类型的数据   ", "\n\n", "6、为了避免在嵌套的条件语句 if-else中产生二义性,C语言规定:else总是与(    )", "\n\n", "A.缩排位置相同的if", "\n\n", "B.同一行上的if", "\n\n", "C.其之后最近的if", "\n\n", "D.其之前最近的还没有配对的if", "\n\n", "8、C语言中 while和do- while循环的主要区别是(    )", "\n\n", "A.do- while的循环体至少无条件执行一次", "\n\n", "B. while的循环控制条件比 do-while的循环控制条件严格", "\n\n", "C.do- while允许从外部转到循环体内", "\n\n", "D.do- while的循环体不能是复合语句", "\n\n", "9、.下面程序段的循环次数是(    )", "\n\n", "        int k=0; ", "\n\n", "while(k<10 {", "\n\n", "if(k<1)", "\n\n", "    Continue;", "\n\n", "if(k==5)", "\n\n", " break;", "\n\n", "K++;", "\n\n", "}", "\n\n", " ", "\n\n", " A.5              B.6           C.4         D.死循环,不能确定循环次数", "\n\n", "编程题：", "\n\n", "1、计算从1到100的和。", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", "2：编写程序，根据输入的学生成绩，给出相应的等级，90分以上的等级为A，80分到90分之间的为B，70分到80分之间的为C，60分到70分之间的为D，60分以下的为E。", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try &lt;a href=\"http://www.php.net/manual/en/mysqli-result.fetch-all.php\" rel=\"nofollow\"&gt;&lt;code&gt;mysqli_result::fetch_all&lt;/code&gt;&lt;/a&gt; instead&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function userParent(mysqli $con, $username) {\n    $stmt = $con-&amp;gt;prepare('SELECT Username FROM Family WHERE Parent = ? LIMIT 10');\n    if ($stmt === false) {\n        throw new Exception($con-&amp;gt;error, $con-&amp;gt;errno);\n    }\n    $stmt-&amp;gt;bind_param('s', $username);\n    $stmt-&amp;gt;execute();\n    $res = $stmt-&amp;gt;get_result();\n    return $res-&amp;gt;fetch_all(MYSQLI_ASSOC);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then call it like this&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$parents = userParent($mysqli, 'some username');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Read these in case you're not aware of prepared statements and parameter binding&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://www.php.net/manual/en/mysqli.prepare.php\" rel=\"nofollow\"&gt;http://www.php.net/manual/en/mysqli.prepare.php&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.php.net/manual/en/mysqli-stmt.bind-param.php\" rel=\"nofollow\"&gt;http://www.php.net/manual/en/mysqli-stmt.bind-param.php&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Update&lt;/h2&gt;\n\n&lt;p&gt;Apparently (undocumented), the &lt;code&gt;mysqli_stmt::get_result()&lt;/code&gt; method is only available when using the &lt;code&gt;mysqlnd&lt;/code&gt; driver. If you cannot use this driver, try this alternative&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function userParent(mysqli $con, $username) {\n    $stmt = $con-&amp;gt;prepare('SELECT Username FROM Family WHERE Parent = ? LIMIT 10');\n    if ($stmt === false) {\n        throw new Exception($con-&amp;gt;error, $con-&amp;gt;errno);\n    }\n\n    $stmt-&amp;gt;bind_param('s', $username);\n    $stmt-&amp;gt;execute();\n\n    $parent = null;\n    $parents = array();\n    $stmt-&amp;gt;bind_result($parent);\n    while($stmt-&amp;gt;fetch()) {\n        $parents[] = $parent;\n    }\n    return $parents;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["如何在PHP函数中返回while循环变量中的mysqli_fetch_assoc？", ["\n\n", "I have this PHP function : ", "\n\n", "function userParent($Username)\n{\nglobal $con;\n$Result = mysqli_query($con, \"SELECT Username FROM Family WHERE Parent = '$Username' LIMIT 10\");\n$row = mysqli_fetch_assoc($Result);\nreturn $row; \n}\n", "\n\n", "that function should give me 10 rows in array, but why I just have a value in array? I tried to test that codes outside function bracket and try to add WHILE loop like this :", "\n\n", "while ($row = mysqli_fetch_assoc($Result)){\n    print_r($row);\n}\n", "\n\n", "and it works. I got my 10 rows in array format. but it prints the result to the screen. how to make it as variable so it can be returned in function?", "\n\n", "thanks.", "\n\n", "UPDATE : according to Phil's answer, now here's my complete code :", "\n\n", "<?php\nfunction userParent(mysqli $con, $username) {\n    $stmt = $con->prepare('SELECT Username FROM Family WHERE Parent = ? LIMIT 10');\n    $stmt->bind_param('s', $username);\n    $stmt->execute();\n    $res = $stmt->get_result();\n    return $res->fetch_all(MYSQLI_ASSOC);\n}\n\n$DbServer = 'localhost';\n$DbUser = 'username';\n$DbPassword = 'password';\n$DbName = 'dbname';\n$mysqli = new mysqli($DbServer, $DbUser, $DbPassword, $DbName);\n\n$arrayParent = userParent($mysqli, 'root');\nprint_r($arrayParent);\n\n?>\n", "\n\n", "but I got this error message :", "\n\n", "\n  ", "Fatal error: Call to undefined method mysqli_stmt::get_result() in /home/myhome/public_html/test.php on line 6", "\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一般情况是由于安装的软件缺少对应的库文件&amp;#xff0c;这个是由windows的版本决定的&amp;#xff0c;除非有详细日志定位是缺少哪个库文件导致&amp;#xff0c;不然建议你安装个Visual C&amp;#43;&amp;#43;的软件&amp;#xff0c;大部分设计软件所需要的库&amp;#xff0c;都有&amp;#xff0c;Visual C&amp;#43;&amp;#43;本身就是用于做软件设计的&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["安装宇龙机电控制仿真软件时出现的，怎么办", ["其他软件都能正常打开下载或运行，就是下载宇龙仿真的时候不行，这个软件是v5.0没有问题，是别人下载成功下载安装过的"]], "Tag": "程序设计"}
{"Answer": "//帮你简单修改了一下:\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.concurrent.ArrayBlockingQueue;\r\nimport java.util.concurrent.ThreadPoolExecutor;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport javax.swing.*;\r\n\r\npublic class MainFrame2 extends JFrame implements ActionListener {\r\n\r\n\tprivate static final long serialVersionUID = -2980848895240172944L;\r\n\r\n\tpublic boolean isrunning;\r\n\r\n\tBox box = Box.createHorizontalBox();\r\n\r\n\tJButton jb1 = new JButton(\"开关\");\r\n\r\n\tJButton jb2 = new JButton(\"配置\");\r\n\r\n\tJButton jb3 = new JButton(\"使用说明\");\r\n\r\n\t// 页签组件\r\n\tJTabbedPane jtp1 = new JTabbedPane();\r\n\r\n\tJPanel jp1 = new JPanel(); // 实际中应该定义一个继承JPanel类来实现\r\n\r\n\tJTabbedPane jtp2 = new JTabbedPane();\r\n\r\n\tJPanel jp6 = new JPanel();\r\n\r\n\tJTabbedPane jtp3 = new JTabbedPane();\r\n\r\n\tJPanel jp7 = new JPanel();\r\n\r\n\t// 卡片布局\r\n\r\n\tJButton start_btn = new JButton(\"启动\");\r\n\r\n\tJButton stop_btn = new JButton(\"停止\");\r\n\r\n\tCardLayout card = new CardLayout();\r\n\r\n\tJPanel jps = new JPanel();\r\n\r\n\tpublic MainFrame2() {\r\n\t\t// 添加组件\r\n\t\tinit();\r\n\r\n\t\tbox.add(jb1);\r\n\t\tbox.add(jb2);\r\n\t\tbox.add(jb3);\r\n\r\n\t\t// 设置页签组件布局策略，一行显示\r\n\t\tjtp1.add(\"控制开关\", jp6);\r\n\t\tjp6.add(start_btn);\r\n\t\tjp6.add(stop_btn);\r\n\r\n\t\tjtp2.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\r\n\t\tjtp2.add(\"格式化\", jp1);\r\n\r\n\t\tjtp3.add(\"README\", jp7);\r\n\r\n\t\tjps.setLayout(card);\r\n\r\n\t\tjps.add(\"control\", jtp1);\r\n\t\tjps.add(\"config\", jtp2);\r\n\t\tjps.add(\"readme\", jtp3);\r\n\r\n\t\tthis.add(box, BorderLayout.NORTH);\r\n\t\tthis.add(jps, BorderLayout.CENTER);\r\n\r\n\t\tjb1.addActionListener(this);\r\n\t\tjb2.addActionListener(this);\r\n\t\tjb3.addActionListener(this);\r\n\r\n\t\tstart_btn.addActionListener(this);\r\n\t\tstop_btn.addActionListener(this);\r\n\r\n\t\t// 展现\r\n\r\n\t\tthis.setSize(800, 600);\r\n\t\tthis.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\t\tthis.setVisible(true);\r\n\r\n\t}\r\n\r\n\tpublic void actionPerformed(final ActionEvent e) {\r\n\r\n\t\t  Thread worker = new Thread() {\r\n\t          public void run() {\r\n\t        \t  if (e.getSource() == jb1) {\r\n\t      \t\t\tcard.show(jps, \"control\");\r\n\t      \t\t} else if (e.getSource() == jb2) {\r\n\t      \t\t\tcard.show(jps, \"config\");\r\n\r\n\t      \t\t} else if (e.getSource() == jb3) {\r\n\t      \t\t\tcard.show(jps, \"readme\");\r\n\t      \t\t} else if (e.getSource() == start_btn) {\r\n\t      \t\t\tsetIsrunning(true);\r\n\t      \t\t\tstartService();\r\n\r\n\t      \t\t} else if (e.getSource() == stop_btn) {\r\n\t      \t\t\tsetIsrunning(false);\r\n\t      \t\t\tstopService();\r\n\t      \t\t}\r\n\r\n\t          }\r\n\t        };\r\n\r\n\t        worker.start(); // So we don't hold up the dispatch thread.\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tpublic static int POOLSIZE = 20; // 线程池大小\r\n\r\n\tpublic static int TIMEOUT = 10; // 超时时间\r\n\r\n\tpublic static int EXECUTECOUNT = 10; // 线程池中保存的线程数\r\n\r\n\tpublic static int TASKSLEEPTIME = 1000; // 任务间隔时间\r\n\r\n\t/**\r\n\t * 创建线程池\r\n\t */\r\n\r\n\tpublic static ThreadPoolExecutor threadPool;\r\n\r\n\tprivate void createThreadPool() {\r\n\r\n\t\tthreadPool = new ThreadPoolExecutor(EXECUTECOUNT, POOLSIZE, TIMEOUT,\r\n\t\t\t\tTimeUnit.SECONDS, new ArrayBlockingQueue&lt;Runnable&gt;(3),\r\n\t\t\t\tnew ThreadPoolExecutor.CallerRunsPolicy());\r\n\r\n\t}\r\n\r\n\tpublic void stopService() {\r\n\r\n\t\t// 第一阶段，不再接收新任务\r\n\t\tthreadPool.shutdown();\r\n\r\n\t\ttry {\r\n\t\t\t// 等待若干时间给当前已经存在的任务，此处60秒\r\n\t\t\t// 等待全部执行完毕就关闭，或者等待限制时间到来，关闭线程thread.interrupt\r\n\t\t\tif (!threadPool.awaitTermination(60, TimeUnit.SECONDS)) {\r\n\t\t\t\t// 取消当前存在的任务\r\n\r\n\t\t\t\tthreadPool.shutdownNow();\r\n\t\t\t}\r\n\r\n\t\t} catch (InterruptedException e) {\r\n\r\n\t\t\tthreadPool.shutdownNow();\r\n\t\t\t// 保存中断状态\r\n\t\t\tThread.currentThread().interrupt();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void startService() {\r\n\t\tcreateThreadPool();\r\n\t\twhile (true) {\r\n\r\n\t\t\tif (getIsrunning() == true) {\r\n\t\t\t\tthreadPool.execute(new ReadMessageThread());\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tThread.currentThread().sleep(TASKSLEEPTIME);\r\n\t\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void test() {\r\n\r\n\t\tSystem.out.println(\"美女美女美女!\");\r\n\t\tThread.yield();\r\n\t}\r\n\r\n\tclass ReadMessageThread implements Runnable {\r\n\r\n\t\tpublic synchronized void run() {\r\n\r\n\t\t\ttest();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void init() {\r\n\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tnew MainFrame2();\r\n\t}\r\n\r\n\tpublic boolean getIsrunning() {\r\n\t\treturn isrunning;\r\n\t}\r\n\r\n\tpublic void setIsrunning(boolean isrunning) {\r\n\t\tthis.isrunning = isrunning;\r\n\t}\r\n}", "Konwledge_Point": "循环控制", "Question": ["关于AWT死循环监听", ["点了开始按钮后，整个界面好像死掉了一样，其他的按钮均失效，请大家帮忙看下，代码如下：", "\n\n", "import java.awt.*;", "\nimport java.awt.event.ActionEvent;", "\nimport java.awt.event.ActionListener;", "\nimport java.util.concurrent.ArrayBlockingQueue;", "\nimport java.util.concurrent.ThreadPoolExecutor;", "\nimport java.util.concurrent.TimeUnit;", "\n\n", "import javax.swing.*;", "\n\n", "public class MainFrame2 extends JFrame implements ActionListener{", "\n\n", "private static final long serialVersionUID = -2980848895240172944L;\n\npublic boolean isrunning;\n\nBox box = Box.createHorizontalBox(); \nJButton jb1 = new JButton(\"开关\");\nJButton jb2 = new JButton(\"配置\");\nJButton jb3 = new JButton(\"使用说明\");\n\n//页签组件\nJTabbedPane jtp1 = new JTabbedPane();\nJPanel jp1 = new JPanel(); //实际中应该定义一个继承JPanel类来实现\n\nJTabbedPane jtp2 = new JTabbedPane();\nJPanel jp6 = new JPanel();\n\nJTabbedPane jtp3 = new JTabbedPane();\nJPanel jp7 = new JPanel();\n//卡片布局\n\n\nJButton start_btn = new JButton(\"启动\");\nJButton stop_btn = new JButton(\"停止\");\n\nCardLayout card = new CardLayout();\nJPanel jps = new JPanel();\npublic MainFrame2()\n{\n    //添加组件\n    init();\n\n    box.add(jb1);\n    box.add(jb2);\n    box.add(jb3);\n\n    //设置页签组件布局策略，一行显示\n    jtp1.add(\"控制开关\",jp6);\n    jp6.add(start_btn);\n    jp6.add(stop_btn);\n\n    jtp2.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);\n    jtp2.add(\"格式化\",jp1);\n\n    jtp3.add(\"README\",jp7);\n\n    jps.setLayout(card);\n\n    jps.add(\"control\",jtp1);\n    jps.add(\"config\",jtp2);\n    jps.add(\"readme\",jtp3);\n\n    this.add(box,BorderLayout.NORTH);\n    this.add(jps,BorderLayout.CENTER);\n\n    jb1.addActionListener(this);\n    jb2.addActionListener(this);\n    jb3.addActionListener(this);\n\n    start_btn.addActionListener(this);\n    stop_btn.addActionListener(this);\n\n    //展现\n\n    this.setSize(800,600);\n    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    this.setVisible(true);\n\n}\n\npublic void actionPerformed(ActionEvent e) {\n\n    if(e.getSource()==jb1)\n    {\n        card.show(jps, \"control\");\n    }\n    else if(e.getSource()==jb2)\n    {\n        card.show(jps, \"config\");\n\n    }else if(e.getSource()==jb3)\n    {\n        card.show(jps, \"readme\");\n    }else if(e.getSource()==start_btn)\n    {\n        setIsrunning(true);\n        startService();\n\n    }else if(e.getSource()==stop_btn)\n    {\n        setIsrunning(false);\n        stopService();\n    }\n}\n\n\npublic static int POOLSIZE = 20; //线程池大小\npublic static int TIMEOUT = 10; //超时时间\npublic static int EXECUTECOUNT = 10; //线程池中保存的线程数\npublic static int TASKSLEEPTIME = 1000; //任务间隔时间\n\n/**\n * 创建线程池\n */\n\npublic static ThreadPoolExecutor threadPool;\n\nprivate void createThreadPool(){\n\n    threadPool = new ThreadPoolExecutor(EXECUTECOUNT, POOLSIZE, TIMEOUT,\n            TimeUnit.SECONDS, new ArrayBlockingQueue<Runnable>(3),\n            new ThreadPoolExecutor.CallerRunsPolicy());\n\n}\n\npublic void stopService(){\n\n     // 第一阶段，不再接收新任务  \n    threadPool.shutdown();   \n\n    try {   \n        // 等待若干时间给当前已经存在的任务，此处60秒   \n        // 等待全部执行完毕就关闭，或者等待限制时间到来，关闭线程thread.interrupt   \n        if (!threadPool.awaitTermination(60, TimeUnit.SECONDS)) {   \n            // 取消当前存在的任务   \n\n            threadPool.shutdownNow();   \n        }   \n\n    } catch (InterruptedException e) {   \n\n        threadPool.shutdownNow();   \n        // 保存中断状态   \n        Thread.currentThread().interrupt();\n    }   \n}\npublic void startService() {\n    createThreadPool();\n    while(true) {\n\n        if(getIsrunning()==true){\n            threadPool.execute(new ReadMessageThread());\n\n            try {\n                Thread.sleep(TASKSLEEPTIME);\n            } catch (InterruptedException e) {\n            }\n        }\n    }\n}\n\npublic void test(){\n\n    System.out.println(\"美女美女美女!\");\n}\nclass ReadMessageThread implements Runnable {\n\n    public synchronized void run(){\n\n        test();\n    }\n}\n\n\npublic void init(){\n\n\n\n}\n\npublic static void main(String[] args)\n{\n    new MainFrame2();\n}\n\npublic boolean getIsrunning() {\n    return isrunning;\n}\n\npublic void setIsrunning(boolean isrunning) {\n    this.isrunning = isrunning;\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;request.get 是异步的&amp;#xff0c;你一下开启了10个任务&amp;#xff0c;和一个主线任务&amp;#xff0c;可能主线任务先结束&amp;#xff0c;然后10个异步任务才执行&amp;#xff0c;我看看怎么改你看的懂&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; request &amp;#61; &lt;span class=\"hljs-built_in\"&gt;require&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;request&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; querystring &amp;#61; &lt;span class=\"hljs-built_in\"&gt;require&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;querystring&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; fs &amp;#61; &lt;span class=\"hljs-built_in\"&gt;require&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;fs&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; data &amp;#61; fs.&lt;span class=\"hljs-title function_\"&gt;readFileSync&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;input.txt&amp;#39;&lt;/span&gt;);\ndata &amp;#61; data.&lt;span class=\"hljs-title function_\"&gt;toString&lt;/span&gt;();\n\n&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;fun&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) &amp;#61;&amp;gt; &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;time out&amp;#39;&lt;/span&gt;);\n\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;sleep&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;delay&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; start &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;()).&lt;span class=\"hljs-title function_\"&gt;getTime&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; ((&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;()).&lt;span class=\"hljs-title function_\"&gt;getTime&lt;/span&gt;() - start &amp;lt; delay) {\n        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n    }\n}\n\n&lt;span class=\"hljs-title function_\"&gt;sleep&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;);\n\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; obj &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;: data,\n};\n&lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(obj)\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; content;\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; url;\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; control &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n\n&lt;span class=\"hljs-title function_\"&gt;sendFile&lt;/span&gt;()\n\n&lt;span class=\"hljs-keyword\"&gt;async&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;sendFile&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (control--) {\n        data &amp;#61; fs.&lt;span class=\"hljs-title function_\"&gt;readFileSync&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;input.txt&amp;#39;&lt;/span&gt;);\n        data &amp;#61; data.&lt;span class=\"hljs-title function_\"&gt;toString&lt;/span&gt;();\n        obj &amp;#61; {\n            &lt;span class=\"hljs-string\"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;: data,\n        };\n        content &amp;#61; querystring.&lt;span class=\"hljs-title function_\"&gt;stringify&lt;/span&gt;(obj);\n        &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(content)\n        url &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;https://www.example.com/dataRequestServer?&amp;#39;&lt;/span&gt; &amp;#43; content;\n        &lt;span class=\"hljs-keyword\"&gt;await&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Promise&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;(&lt;span class=\"hljs-params\"&gt;resolve, reject&lt;/span&gt;) &amp;#61;&amp;gt;&lt;/span&gt; request.&lt;span class=\"hljs-title function_\"&gt;get&lt;/span&gt;(url, &lt;span class=\"hljs-function\"&gt;(&lt;span class=\"hljs-params\"&gt;error, response, body&lt;/span&gt;) &amp;#61;&amp;gt;&lt;/span&gt; {\n            &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(body)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (error) {\n                &lt;span class=\"hljs-title function_\"&gt;reject&lt;/span&gt;(body)\n            } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-title function_\"&gt;resolve&lt;/span&gt;(body)\n            }\n        }))\n\n\n        &lt;span class=\"hljs-title function_\"&gt;sleep&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["nodejs使用request包在while循环里发送get请求遇到的问题", ["本人想要实现的功能是每隔两秒用nodejs的文件模块读取本地input.txt文本内容，然后在while循环里用request模块通过get请求把文本内容发送到云服务器，原本的代码是把while的循环控制条件写死成true让它一直循环，在云服务器上终端里查看始终接收不到数据，后来测试直接在浏览器里发起单次get请求能接到数据，之后把while循环的控制条件改成循环10次，云服务器终端里查看，在while循环执行的过程中，无法接收到数据，但是10次循环结束后，能够一次性接收10次数据，我的初衷是想让服务器能够实时监控文本数据内容，请问如何改这段代码，本人想应该是同异步请求有关", "\n", "\n", "const", " request=", "require", "(", "'request'", ")\n", "const", " querystring=", "require", "(", "'querystring'", ")\n", "var", " fs = ", "require", "(", "\"fs\"", ");\n", "var", " data = fs.readFileSync(", "'input.txt'", ");\n    data=data.toString();\n    \n", "let", " fun = () => ", "console", ".log(", "'time out'", ");\n", "function", " ", "sleep", "(", "delay", ") ", "{\n    ", "var", " start = (", "new", " ", "Date", "()).getTime();\n    ", "while", " ((", "new", " ", "Date", "()).getTime() - start < delay) {\n      ", "continue", ";\n    }\n}\n \nsleep(", "2000", ");\n    \n    ", "var", " obj={\n        ", "'data'", ":data,\n    };\n", "console", ".log(obj)\n", "var", " content;\n", "var", " ", "url", ";\n", "var", " control=", "10", ";\n", "while", "(control--){\n    data=fs.readFileSync(", "'input.txt'", ");\n    data=data.toString();\n    obj={\n        ", "'data'", ":data,\n    };\n            content=querystring.stringify(obj);\n            ", "console", ".log(content)\n            ", "url", "=", "'https://www.example.com/dataRequestServer?'", "+content;\n         request.get({\n                ", "'url'", ":", "url", ",\n            },(error,response,body)=>{\n                 ", "let", " result=", "JSON", ".parse(body);\n                 result.code=req.query.code;\n                 res.json(result);\n                \n            })\n\n\n        \n     sleep(", "2000", ");\n}\n"]], "Tag": "程序设计"}
{"Answer": "opacity：1和setTimeout这个要放在上面的那个animate完毕的回调里面，要不2个动画基本是同时进行的，并且setTimeout也会同时进行就看不到你要的效果\r\n并且你的count就没有重置为0重新开始\r\n\r\n\r\n\r\n```\r\n &lt;p id=\"p\"&gt;&lt;/p&gt;\r\n&lt;script src=\"http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.4.2.min.js\"&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n    var count = 0;\r\n    var txt = ['I\\'m jack', 'i from china', 'good bye']\r\n    function test1() {\r\n        $('#p').html(txt[count]);\r\n        $('#p').animate({ opacity: .2 }, 1000, function () {\r\n            $('#p').animate({ opacity: 1 }, 1000, function () {\r\n                test1()//不需要计时器了，没什么必要\r\n            })\r\n        })\r\n        count += 1;\r\n        if (count == 3) count = 0;\r\n    }\r\n    test1()\r\n&lt;/script&gt;\r\n```", "Konwledge_Point": "循环控制", "Question": ["关于js特效问题,想让一大串文字按顺序一句出现,然后,再出现下一句循环", ["用数组存储字符串然后", "\nJS循环控制一个标签在中插入文字,动画控制透明度,", "\n但是循环次数大于一时,只会直接显示最后一句,但是加入alert中间,可以看到文字是顺序变化又没问题,不知道是思路错了,还是有其他问题,大神们求指教"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;个位上的数不要放在循环里&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main() {\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; sum, n;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, n%10);\n    sum &amp;#43;&amp;#61; n%10;\n    n /&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (n&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;%d&amp;#34;&lt;/span&gt;, n%10);\n        sum &amp;#43;&amp;#61; n%10;\n        n /&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;%d&amp;#34;&lt;/span&gt;, sum);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言while循环求和", ["如何打出这些＋号，刚刚学习不是很理解，+号最后总是多一个，怎控制刚刚好列出表达式，如1+2+3+4+5+6+7+8+9=45", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I think the question is about Different Forms of For Loop:&lt;br&gt;\nsimple loop variants working sample:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\nfunc main() {\n    //0 1 2 3 4 5 6 7 8 9\n    for i := 0; i &amp;lt; 10; i++ {\n        fmt.Print(i, \" \")\n    }\n    fmt.Println()\n\n    i := 0\n    for ; i &amp;lt; 10; i++ {\n        fmt.Print(i, \" \")\n    }\n    fmt.Println()\n\n    for i := 0; i &amp;lt; 10; {\n        fmt.Print(i, \" \")\n        i++\n    }\n    fmt.Println()\n\n    //2 4 6 8 10 12 14 16 18 20\n    for i := 1; ; i++ {\n        if i&amp;amp;1 == 1 {\n            continue\n        }\n        if i == 22 {\n            break\n        }\n        fmt.Print(i, \" \")\n    }\n    fmt.Println()\n\n    i = 0\n    for {\n        fmt.Print(i, \" \")\n        i++\n        if i == 10 {\n            break\n        }\n\n    }\n    fmt.Println()\n\n    for i, j := 0, 0; i &amp;lt; 5 &amp;amp;&amp;amp; j &amp;lt; 10; i, j = i+1, j+2 {\n        fmt.Println(i, j)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;for array, slice,string, map, channel using range keyword:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\nfunc main() {\n    ary := [5]int{0, 1, 2, 3, 4}\n    for index, value := range ary {\n        fmt.Print(\"ary[\", index, \"] =\", value, \" \")\n    }\n    fmt.Println()\n    for index := range ary {\n        fmt.Print(\"ary[\", index, \"] =\", ary[index], \" \")\n    }\n    fmt.Println()\n    for _, value := range ary {\n        fmt.Print(value, \" \")\n    }\n    fmt.Println()\n\n    slice := []int{20, 21, 22, 23, 24, 25, 26, 27, 28, 29}\n    for index, value := range slice {\n        fmt.Println(\"slice[\", index, \"] =\", value)\n    }\n    fmt.Println()\n\n    str := \"Hello\"\n    for index, value := range str {\n        fmt.Println(\"str[\", index, \"] =\", value)\n    }\n    fmt.Println()\n\n    mp := map[string]int{\"One\": 1, \"Two\": 2, \"Three\": 3}\n    for key, value := range mp {\n        fmt.Println(\"map[\", key, \"] =\", value)\n    }\n    fmt.Println()\n\n    ch := make(chan int, 10)\n    for i := 0; i &amp;lt; 10; i++ {\n        ch &amp;lt;- i\n    }\n    close(ch)\n\n    for i := range ch {\n        fmt.Print(i, \" \")\n    }\n    fmt.Println()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and Label for break Label and continue Label:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\n\nfunc main() {\n    a, b := 1, 1\nLoop1:\n    for {\n        b++\n    Loop2:\n        for {\n            a++\n            switch {\n            case a == 2:\n                fallthrough\n            case a == 3:\n                fmt.Println(3)\n            case a == 4, a == 5:\n                continue\n            case a == 7:\n                continue Loop1\n            case a == 9:\n                break Loop2\n            case a == 10:\n                break Loop1\n            case a == 8:\n                break\n            default:\n                fmt.Println(a, b)\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["Go中以下哪些有效关键字可用于控制循环？", ["\n\n", "I saw this question that for correct answer had 'for and range'.", "\n\n", "But the ", "for", " statement is the only available looping statement in Go,and the range keyword allows you to iterate over items of a list like an array or a map. For understanding it, you could translate the range keyword to ", "for each index of", ".", "\n\n", "//for loop\npackage main\n\nimport \"fmt\"\n\nfunc main() {\nfor i := 0; i < 5; i++ {\n    fmt.Println(\"Value of i is now:\", i)\n    }\n}\n\n //range is used inside a for loop\n\n\na := [...]string{\"a\", \"b\", \"c\", \"d\"}\nfor i := range a {\n    fmt.Println(\"Array item\", i, \"is\", a[i])\n}\ncapitals := map[string] string {\"France\":\"Paris\", \"Italy\":\"Rome\",     \"Japan\":\"Tokyo\" }\nfor key := range capitals {\n    fmt.Println(\"Map item: Capital of\", key, \"is\", capitals[key])\n    }\n\n//range can also return two items, the index/key and the corresponding value \nfor key2, val := range capitals {\n    fmt.Println(\"Map item: Capital of\", key2, \"is\", val)\n    }\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "思路说下：首先把这三位数按个、十、百 分别存入到一个数组中a[0] = 个， a[1] = 十， a[2]= 百， 然后对你猜的数也分成个十百，分两次比较：\r\n第一次：比较该位上的数是否完全匹配，如果完全匹配则返回2，如果没有，则进行第二次比较，如果在数组中都找不到你这个数，则返回0，如果找得到就返回1。", "Konwledge_Point": "循环控制", "Question": ["c++编写猜数字游戏如何控制布尔值不让程序进入死循环？", ["游戏规则：系统随机出一个三位数，例如1.2.3，假设你猜1.3.2，那么系统则给与2,1.2代表数字和位置相对，1代表数字对而位置不对，0代表位置和数字都不对。关键是怎么用布尔值控制0-9这些数字且在比较的时候不让程序进入死循环呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、把线程组的循环次数设置为永远&lt;br /&gt;\n2、把CVS Data Set Config 中 的 Recycle on EOF &amp;#61; False ,Stop thread on EOF &amp;#61; Ture&lt;br /&gt;\n3、防止线程重复执行&amp;#xff1a;线程的最后一个请求下增加BeanShell PostProcessor&amp;#xff0c;脚本写入&amp;#xff1a;prev.setStopTestNow(true);&lt;/p&gt;\n\n&lt;p&gt;详情见&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/SwTesting/article/details/114191708\"&gt;https://blog.csdn.net/SwTesting/article/details/114191708&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Jmeter怎么使while控制器里的CSV参数重置？。", ["\n\n", "我想要在while控制器结束一轮循环后，当第二次重新进入while控制器时，使得里面的“onlyCode参数”重新读取参数。"]], "Tag": "程序设计"}
{"Answer": "是不是你的对象之间有相互引用，或者循环引用，导致一个死环", "Konwledge_Point": "循环控制", "Question": ["springmvc json返回死循环", ["错误描述：两个多对多的实体，他们没有关联的时候，返回没有问题，当关联后，返回第一个实体（已json返回），报死循环错误。", "\n\n", "控制器代码：", "\n\n", "    // 输入框的模糊匹配\n    @ResponseBody\n    @RequestMapping(\"/inputFuzzyQuery\")\n    public List<School> inputFuzzyQuery(String keyword) {\n        List<School> schs = schoolService.fuzzyQueryMaxFive(keyword);//schs有数据\n        for (School sch : schs) {\n            System.out.println(sch.toString());\n        }\n        return schs;\n    }\n", "\n\n", "错误信息", "\n\n", " at org.codehaus.jackson.map.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:150)\n    at org.codehaus.jackson.map.ser.BeanSerializer.serialize(BeanSerializer.java:112)\n    at org.codehaus.jackson.map.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:72)\n    at org.codehaus.jackson.map.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)\n    at org.codehaus.jackson.map.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:86)\n    at org.codehaus.jackson.map.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:446)\n    at org.codehaus.jackson.map.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:150)\n    at org.codehaus.jackson.map.ser.BeanSerializer.serialize(BeanSerializer.java:112)\n    at org.codehaus.jackson.map.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:72)\n    at org.codehaus.jackson.map.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)\n    at org.codehaus.jackson.map.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:86)\n    at org.codehaus.jackson.map.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:446)\n    at org.codehaus.jackson.map.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:150)\n    at org.codehaus.jackson.map.ser.BeanSerializer.serialize(BeanSerializer.java:112)\n    at org.codehaus.jackson.map.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:72)\n    at org.codehaus.jackson.map.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:23)\n    at org.codehaus.jackson.map.ser.std.AsArraySerializerBase.serialize(AsArraySerializerBase.java:86)\n    at org.codehaus.jackson.map.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:446)\n    at org.codehaus.jackson.map.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:150)\n    at org.codehaus.jackson.map.ser.BeanSerializer.serialize(BeanSerializer.java:112)\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use the &lt;code&gt;compact&lt;/code&gt; method as the second argument to &lt;code&gt;view&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function showvalues(Request $request)\n{\n    $name = $request-&amp;gt;get('name');\n    $address = $request-&amp;gt;get('address');\n    $pass = $request-&amp;gt;get('password');\n\n    return view('showvalues', compact('name', 'address', 'pass'));\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The variables will be available in your view file by the same name, you can display them like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{{ $name }}\n{{ $address }}\n{{ $pass }}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "循环控制", "Question": ["如何将数组中的值从控制器传递到视图", ["\n\n", "I m new to Laravel and I am trying to pass values from a controller which I have received from a ", "<form>", " to a view and display the same in text boxes. Although, I have figured out how to do the same using method chaining but I would like to pass the values using an array and show the same into the textboxes in the view.", "\n\n", "What I expect to do?", "\n\n", "In the ", "controller", ", instead of method chaining:", "\n\n", "return view('showvalues')->with(['name'=>$name, 'address'=>$address]);", "\n\n", "Code so far,", "\n\n", "controller", "\n\n", " public function showvalues(Request $request)\n    {\n        $name=$request->get('name');\n        $address=$request->get('address');\n        $pass=$request->get('password');\n        $arr=array(\"$name\",\"$address\",\"$pass\");\n\n        return view('showvalues')->with('name',$name)->with('address',$address);\n    }\n", "\n\n", "Show values in ", "showvalues", " view:", "\n\n", "<html>\n    <head>\n\n    </head>\n    <body>\n        <h1>\n            Show Value Page.\n        </h1>\n        <input type=\"text\" name=\"n1\" value=\"<?php echo $name;?>\" /><br>\n        <input type=\"text\" name=\"n3\" value=\"<?php echo $address;?>\" />\n    </body>\n</html>\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "区别一是scanf(\" %c\",&amp;ch)前面有空格，输入时需要加入空格,而对于scanf(\"%c\",&amp;ch),不需要直接输入先加空格，如果你第一个打的是空格的话那么\r\nch将会被赋值为空格\r\n第二个 没有区别都是不符合条件跳出循环", "Konwledge_Point": "循环控制", "Question": ["scanf()和for循环的两个问题", ["scanf(\"(空格)%c\",&ch)和scanf(\"%c\",&ch)的区别。", "\nfor(;;){if(不符合控制条件)break;}和for(;循环条件;)的区别"]], "Tag": "程序设计"}
{"Answer": "感觉是while循环的问题，你每次遍历while循环都会重新加载一次Cal=data.GetCdata(key)，就会遍历一次for循环；", "Konwledge_Point": "循环控制", "Question": ["java中for循环没有跳出", ["大家好，下面的代码中Cal.size()是1，for循环应该只执行一次，但是有时却执行了多次，System.out.println(\"H是：\"+h);打印多次都是0，循环没有跳出，很奇怪，不明白是什么问题，以下是完整代码，三个for循环是同样的问题", "\n//每五秒钟自动遍历一次数据库，将策略数据发送至指定集中控制器", "\n        Runnable send = new Runnable() {", "\n            @Override", "\n            public void run() {", "\n                Mysend:", "\n                    //for无限循环", "\n                    for(;;)", "\n                    {", "\n                        try{", "\n                            //byte[] cllx={1,2,3};", "\n                            Convertion con=new Convertion();", "\n                            gettacticsdata data=new gettacticsdata();", "\n                            //读取存储在Map中已登录用户ID", "\n                            Map map = Mymap.getChannels();", "\n\n", "                        Iterator<String> it = map.keySet().iterator();\n                        while (it.hasNext()) \n                        {\n                            String key = it.next();\n                            SocketChannel obj = map.get(key);\n                            //判断当前客户是否在线，如果在线就传数据，不在就删除存储在Map中的登录信息\n                            if(obj.isActive()==true)\n                            {\n                                //查询需要下发的策略B数据\n                                ArrayList Bal = new ArrayList();\n                                Bal=data.GetBdata(key);\n                                //判断是否有需要下发的策略\n                                if(Bal.size()>0)\n                                {\n                                    for(int i=0;i<Bal.size();i++)\n                                    {\n                                        System.out.println(\"I是：\"+i);\n                                        tacticsBdata Bl=(tacticsBdata) Bal.get(i);\n                                        byte[] Bdata=con.GetBdata(Bl);\n                                        //SocketChannel obj = map.get(key);\n                                        if(Bdata.length==32)\n                                        {\n                                            ByteBuf Bsend =Unpooled.copiedBuffer(Bdata);\n                                            obj.writeAndFlush(Bsend); \n                                        }\n\n                                    }       \n                                }\n                                //查询需要下发的策略C数据\n                                ArrayList Cal = new ArrayList();\n                               Cal=data.GetCdata(key);\n                                //判断是否有需要下发的策略\n                                if(Cal.size()>0)\n                                {\n                                    for(int h=0;h<Cal.size();h++)\n                                    {\n                                        System.out.println(\"H是：\"+h);\n                                        tacticsCdata Cl=(tacticsCdata) Cal.get(h);\n                                        byte[] Cdata=con.GetCdata(Cl);\n                                        //SocketChannel obj = map.get(key);\n                                        if(Cdata.length==18){\n                                            ByteBuf Csend =Unpooled.copiedBuffer(Cdata);\n                                            obj.writeAndFlush(Csend); \n                                        }\n\n                                    }       \n                                }\n                                //查询需要下发的策略A数据\n                                ArrayList Aal = new ArrayList();\n                                Aal=data.GetAdata(key);\n                                //判断是否有需要下发的策略\n                                if(Aal.size()>0)\n                                {\n                                    for(int j=0;j<Aal.size();j++)\n                                    {\n                                        System.out.println(\"J是：\"+j);\n                                        tacticsAdata Al=(tacticsAdata) Aal.get(j);\n                                        byte[] Adata=con.GetAdata(Al);\n\n                                        if(Adata.length==14){\n                                            ByteBuf Asend =Unpooled.copiedBuffer(Adata);\n                                            obj.writeAndFlush(Asend); \n                                        }\n\n                                    }       \n                                }\n                            }else\n                            {\n                                System.out.println(\"此ChannelID已掉线: \" + obj);\n                                map.remove(key);\n                                obj.close();\n                            }\n                        }\n                    }\n                    catch(Exception e)\n                    {\n                        break Mysend;\n                    }\n                    try {\n                        //线程休眠10秒钟后再次启动\n                        Thread.sleep(10000);\n                    } catch (InterruptedException e) {\n                        //e.printStackTrace();\n                    }\n                }\n        }\n    };\n    new Thread(send).start();\n"]], "Tag": "程序设计"}
{"Answer": "外层for前面直接a: ,不需要 continue a:", "Konwledge_Point": "循环控制", "Question": ["for循环,continue的用法问题?", ["\n我记得在for循环中,可以用continue控制for循环,怎么写忘了...", "\n求大神指教~~~"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;-i; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;-i; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言输入一个图案，必须利用循环语句控制", ["    ", "a", "\n  bbb\n ccccc\n", "\n", "   dddddd", "     ccccc", "       bbb", "         a"]], "Tag": "程序设计"}
{"Answer": "accelerated : Boolean 是否加速\r\n\r\n     autoBuffering : Boolean 是否自动缓冲\r\n\r\n     autoPlay : Boolean 是否自动播放\r\n\r\n     autoPlayNext : Boolean 是否自动播放下一个视频\r\n\r\n     baseUrl : String 视频的基本的url\r\n\r\n     bufferLength : int 缓冲的长度\r\n\r\n     completeUrl : String 完整的URL\r\n\r\n     configuredProviderName : String 配置提供流的名字\r\n\r\n     connectionProvider : String  连接的提供\r\n\r\n     cuepointMultiplier : Number 提示点的乘法\r\n\r\n     cuepoints : Array  提示点\r\n\r\n     currentTime : Number  当前时间点\r\n\r\n     customProperties : Object  通用属性\r\n\r\n     duration : Number 持续的时间\r\n\r\n     durationFromMetadata : Number  持续的帧数\r\n\r\n     endLimit : Number   结束限制点\r\n\r\n     extension : String  延长\r\n\r\n     fadeInSpeed : int  淡入速度\r\n\r\n     fadeOutSpeed : int  淡出速度\r\n\r\n     hasChildren : Boolean 是否有子对象\r\n\r\n     height : int 高度\r\n\r\n     image : Boolean  是否同前面的图片\r\n\r\n     index : int 第一个\r\n\r\n    isCommon : Boolean  是否公用\r\n\r\n     isFlashVideo : Boolean 是否是 FlashVideo\r\n\r\n    isInStream : Boolean  是否是流媒体\r\n\r\n    isMidroll : Boolean  是否可以拖拉\r\n\r\n    isNullClip : Boolean 是否是空的clip\r\n\r\n    isOneShot : Boolean  是否是一个视频\r\n\r\n    isPostroll : Boolean  是否可以后退\r\n\r\n    isPreroll : Boolean  是否可以前进\r\n\r\n     linkUrl : String   连接的URL\r\n\r\n    linkWindow : String 连接的窗体\r\n\r\n    live : Boolean  是否停止工作\r\n\r\n    metaData : Object  媒体\r\n\r\n    originalHeight : int  原始高度\r\n\r\n    originalUrl : String 原始地址\r\n\r\n     originalWidth : int 原始宽度\r\n\r\n    parent : Clip  父类clip\r\n\r\n    parentUrl : String 父类url\r\n\r\n    played : Boolean 是否播放结束\r\n\r\n    playlist : Array  播放列表\r\n\r\n    position : Number  位置\r\n\r\n    postroll : Clip  前一个clip\r\n\r\n    preroll : Clip  下一个clip\r\n\r\n    provider : String 提供流的名字\r\n\r\n    resolvedUrl : String 已解决的URL\r\n\r\n    scaling : MediaSize 缩放\r\n\r\n    scalingStr : String 缩放\r\n\r\n    seekableOnBegin : Boolean 是否开始寻找\r\n\r\n    smoothing : Boolean 是否平滑\r\n\r\n    start : Number 开始时间\r\n\r\n    startDispatched : Boolean 是否开始分发\r\n\r\n    type : ClipType clip的类型\r\n\r\n     typeStr : String 类型的名称\r\n\r\n    url : String  url\r\n\r\n   urlResolverObjects : Array url分解对象\r\n\r\n   urlResolvers : Array url分解\r\n\r\n   width : int 宽度", "Konwledge_Point": "循环控制", "Question": ["Flowplayer列表循环播放", [" ", "\n\n", "如题，怎么控制Folowplayer的播放列表一直重复播放。", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", "<script>\n                    $f(\"a.myPlayer\", \"<%=path %>/flowplayer/flowplayer-3.2.11.swf\", {         \n                        clip : {\n                            scaling: 'fit',\n                            autoPlay: true,\n                            autoBuffering: true\n//                          onStart: function(clip) {\n//                              alert(\"Playing\");\n//                          }\n                        },\n                        playlist: [ //视频播放列表\n                        {\n                             url: '/ad/upload/flv/20120705/20120705094010828.flv',   //视频路径\n                             duration: 1,//视频播放时间\n                             title:'test'    //标题\n                        },\n                        {\n                             url: '/ad/upload/flv/20120705/20120705094052343.flv',   //视频路径\n                             duration: 2,//视频播放时间\n                             title:'test2'   //标题\n                        }\n                        ],\n                        plugins:  {\n                            controls:  {\n                                playlist: true\n                            }\n                        }              \n                    });\n                </script>", "\n\n", "\n 怎么设置？？解答一下。谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;code class=\"language-javascript\"&gt;continu&amp;#61;&amp;#61;&amp;#34;y&amp;#34;&lt;/code&gt; 应该改为 &lt;code class=\"language-javascript\"&gt;&amp;#34;y&amp;#34;.equals(continu)&lt;/code&gt;&amp;#xff0c;在 Java 中 &lt;code class=\"language-javascript\"&gt;&amp;#61;&amp;#61;&lt;/code&gt; 比较的是对象的内存地址是否为同一个&amp;#xff0c;String 的 equals 方法比较的才是字符串的内容是否相同。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["java基础_为什么输入y仍然会跳出循环", ["import java.util.Scanner;\n\npublic ", "class", " PayDemo{    \n    public static void main(String ", "[]", " args){\n        ", "//创建文件扫描器对象，System.in表示的是标准输入，可以从控制台读取数据(装饰者模式)", "\n        Scanner sc = ", "new", " ", "Scanner(System.", "in", ")", ";\n        ", "System", ".", "out.println(", "\"*****************************\"", ");\n        ", "System", ".", "out.println(", "\"请选择购买的商品编号：\"", ");\n        ", "System", ".", "out.println(", "\"1.Tshirt\\t2.网球鞋\\t3.网球拍\"", ");\n        ", "System", ".", "out.println(", "\"*****************************\"", ");\n        \n        double money = ", "0", "; ", "//物品单价", "\n        double oneMoney = ", "0", ";", "//单类物品总价", "\n        double allMoney = ", "0", ";", "//物品总价", "\n        double    discount = ", "0.8", ";", "//折扣", "\n        String good;\n        String continu=", "\"y\"", ";", "//循环控制条件", "\n        boolean flag = ", "true", ";\n        ", "while", " (continu==", "\"y\"", "){\n            ", "System", ".", "out.println(", "\"************\"", "+continu);\n            ", "System", ".", "out.println(", "\"请输入商品编号\"", ");\n            ", "int", " number = sc.next", "Int()", ";\n            ", "System", ".", "out.println(", "\"请输入购买数量\"", ");\n            ", "int", " many = sc.next", "Int()", ";\n            ", "if", " (number", " == ", "1", "){\n                money = ", "245.0", ";\n                good = ", "\"Tshirt\"", ";\n            }\n            ", "else", " ", "if", "(number", " == ", "2", "){\n                money = ", "570.0", ";\n                good = ", "\"网球鞋\"", ";\n            }", "else", "{\n                money = ", "320.0", ";\n                good = ", "\"网球拍\"", ";\n            }\n            oneMoney = many*money;", "//单类物品总价", "\n            ", "System", ".", "out.println(good+", "\"￥:\"", "+money+", "\"\\t数量:\"", "+number+", "\"\\t合计:\"", "+oneMoney);\n            ", "System", ".", "out.println(", "\"是否继续购买?\"", ");\n            sc.next", "Line()", ";", "//把换行符读走", "\n            continu = sc.next", "Line()", ";\n            ", "System", ".", "out.println(", "\"************\"", "+continu);\n            allMoney = allMoney + oneMoney;", "//累加", "\n        }\n        ", "System", ".", "out.println(", "\"折扣:\"", "+discount);\n        ", "System", ".", "out.println(", "\"应支付金额:\"", "+allMoney);\n        ", "System", ".", "out.println(", "\"实付金额:\"", ");\n        ", "while", "(flag){\n            ", "int", " coustom = sc.next", "Int()", ";\n            ", "if", " (allMoney>coustom){\n                ", "System", ".", "out.println(", "\"您输入的金额小于应付金额，请重新输入：\"", ");\n            }\n            ", "else", "{\n                ", "System", ".", "out.println(", "\"找零:\"", "+(coustom-allMoney));\n                break;\n            }   \n        }\n        \n    }\n}\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我想要达到的结果", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,cnt&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) cnt&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,cnt&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["这个用c语言怎么写，求解答！", ["7-2 统计非负整数的个数", "实验四 循环结构程序设计 一、实验目的 1.熟练掌握while、do-while和for三种循环控制语句，掌握循环结构程序设计和调试方法。 2.掌握二重循环结构程序的设计方法。", "\n", "二、实验内容 2.从键盘输入一批整数，统计其中不大于100的非负整数的个数。 实验步骤： (1) 编程提示 由于输入数据个数是不确定的，因此每次执行程序时，循环次数都是不确定的。在进行程序设计时，确定循环控制的方法是本实验的一个关键问题。循环控制条件可以有多种确定方法： ① 使用一个负数作为数据输入结束标志。 ② 输入一个数据后通过进行询问的方式决定是否继续输入下一个数据。", "\n", "输入格式:", "输入一定数量的整数，以负数结束。", "\n", "输出格式:", "输出整数的个数。", "\n", "输入样例:", "在这里给出一组输入。例如：", "\n", "10 15 30 88 -1", "结尾无空行", "输出样例:", "在这里给出相应的输出。例如：", "\n", "7-2 统计非负整数的个数", "实验四 循环结构程序设计 一、实验目的 1.熟练掌握while、do-while和for三种循环控制语句，掌握循环结构程序设计和调试方法。 2.掌握二重循环结构程序的设计方法。", "\n", "二、实验内容 2.从键盘输入一批整数，统计其中不大于100的非负整数的个数。 实验步骤： (1) 编程提示 由于输入数据个数是不确定的，因此每次执行程序时，循环次数都是不确定的。在进行程序设计时，确定循环控制的方法是本实验的一个关键问题。循环控制条件可以有多种确定方法： ① 使用一个负数作为数据输入结束标志。 ② 输入一个数据后通过进行询问的方式决定是否继续输入下一个数据。", "\n", "输入格式:", "输入一定数量的整数，以负数结束。", "\n", "输出格式:", "输出整数的个数。", "\n", "输入样例:", "在这里给出一组输入。例如：", "\n", "10 15 30 88 -1", "结尾无空行", "输出样例:", "在这里给出相应的输出。例如：", "\n", "4"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#61; 0\n&lt;span class=\"hljs-keyword\"&gt;man&lt;/span&gt; &amp;#61; 0\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;((grade &amp;#61; int(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;()))):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (grade &amp;gt; 85):\n        &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; grade\n        &lt;span class=\"hljs-keyword\"&gt;man&lt;/span&gt; &amp;#43;&amp;#61; 1\n\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;format&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; / &lt;span class=\"hljs-keyword\"&gt;man&lt;/span&gt;));\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python题谁帮我一下，yyds帮帮我", ["有三个班级各四名同学参赛，从控制台输入每个班级参赛同学的成绩，要求统计出三个班级所有参赛同学中成绩大于85分的同学的平均分，如何编程实现？", "提示：", "利用二重循环实现。", "外层循环控制班级。", "内层循环控制一个班级中的各个同学。", "在二重循环执行过程中接收键盘输入的各个成绩并求和。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; n 20&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; a[n];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; buf;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s%d&amp;#34;&lt;/span&gt;,a[i].name,&amp;amp;a[i].score);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; &amp;#43;&amp;#43;i)  &lt;span class=\"hljs-comment\"&gt;//比较n-1轮&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i; &amp;#43;&amp;#43;j)  &lt;span class=\"hljs-comment\"&gt;//每轮比较n-1-i次,&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[j].score &amp;lt; a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score)\n            {\n                buf &amp;#61; a[j];\n                a[j] &amp;#61; a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; buf;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s,%d\\n&amp;#34;&lt;/span&gt;,a[i].name,a[i].score);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["键盘输入20个学生的姓名和总分，按总分从大到小的顺序输出这20个学生的姓名和总分。", ["c语言 注：冒泡排序 双循环 外循环控制次数结构体的定义和使用，scanf输入注意 结构体类型中的元素类型为char不加&"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int sum1;&lt;/p&gt;\n\n&lt;p&gt;这里的分号应该是英文的;&lt;/p&gt;\n\n&lt;p&gt;sum&amp;#61;a/b;&lt;/p&gt;\n\n&lt;p&gt;这一句有可能b&amp;#61;0所以会报错&lt;/p&gt;\n\n&lt;p&gt;rand()函数是不是需要把系统时间设置为种子&amp;#xff1f;不然你每次产生的都是相同的式子。&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;下面的代码我在你的代码的基础上修改的&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;#include&amp;lt;iostream&amp;gt;&lt;br /&gt;\n#include&amp;lt;cstring&amp;gt;&lt;br /&gt;\n#include&amp;lt;ctime&amp;gt;&lt;br /&gt;\nusing namespace std;&lt;br /&gt;\nint main()&lt;br /&gt;\n{&lt;!-- --&gt;&lt;br /&gt;\n    int sum;&lt;br /&gt;\n    int number;&lt;br /&gt;\n    int i;&lt;br /&gt;\n    int a, b;&lt;br /&gt;\n    int sum1;&lt;br /&gt;\n    string p &amp;#61; &amp;#34;___&amp;#34;;&lt;br /&gt;\n    cout &amp;lt;&amp;lt; &amp;#34;输入题目数:&amp;#34;;&lt;br /&gt;\n    cin &amp;gt;&amp;gt; number;&lt;br /&gt;\n    cout &amp;lt;&amp;lt; &amp;#34;四则运算题目数:&amp;#34; &amp;lt;&amp;lt; number &amp;lt;&amp;lt; endl;&lt;br /&gt;\n    srand(time(NULL));&lt;br /&gt;\n    for (i &amp;#61; 0; i &amp;lt; number; i&amp;#43;&amp;#43;)//控制程序的题目数&lt;br /&gt;\n    {&lt;!-- --&gt;&lt;br /&gt;\n        a &amp;#61; rand() % 1000;//产生随机数&lt;br /&gt;\n        b &amp;#61; rand() % 10;&lt;br /&gt;\n        /*sum &amp;#61; a / b;&lt;br /&gt;\n        sum1 &amp;#61; a % b;*/&lt;br /&gt;\n        if (a !&amp;#61; 0 &amp;amp;&amp;amp; b !&amp;#61; 0 &amp;amp;&amp;amp; b !&amp;#61; 1 &amp;amp;&amp;amp; a &amp;gt; 40 &amp;amp;&amp;amp; a % b &amp;#61;&amp;#61; 0) {&lt;!-- --&gt;&lt;br /&gt;\n            sum &amp;#61; a / b;&lt;br /&gt;\n            cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &amp;#34;÷&amp;#34; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; &amp;#34;&amp;#61;&amp;#34; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;&lt;br /&gt;\n        }&lt;br /&gt;\n        else i--;//假如不符合要求那么这一次循环就不算&amp;#xff0c;所以i--&amp;#xff0c;这样就保证一定可以输出number个。&lt;/p&gt;\n\n&lt;p&gt;//如果没有i--&amp;#xff0c;可能运气不好&amp;#xff0c;重复number次一个式子都不符合&amp;#xff0c;那就输出不了。&lt;br /&gt;\n        /*if (a &amp;#61;&amp;#61; 0 || b &amp;#61;&amp;#61; 0 || b &amp;#61;&amp;#61; 1 || a &amp;lt;&amp;#61; 40)&lt;br /&gt;\n        {&lt;!-- --&gt;&lt;br /&gt;\n            continue;&lt;br /&gt;\n        }&lt;br /&gt;\n        else if (sum1 &amp;#61;&amp;#61; 0)&lt;br /&gt;\n        {&lt;!-- --&gt;&lt;br /&gt;\n            cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &amp;#34;÷&amp;#34; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; &amp;#34;&amp;#61;&amp;#34; &amp;lt;&amp;lt; sum &amp;lt;&amp;lt; endl;&lt;br /&gt;\n        }&lt;br /&gt;\n        else&lt;br /&gt;\n        {&lt;!-- --&gt;&lt;br /&gt;\n            continue;&lt;br /&gt;\n        }*/&lt;br /&gt;\n    }&lt;br /&gt;\n    return 0;&lt;br /&gt;\n}&lt;/p&gt;\n\n&lt;p&gt;我也是c&amp;#43;&amp;#43;新手&amp;#xff0c;希望我的回答能帮助到你&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["vs2015循环内容不显示", ["本人小白，使用vs2015。用电脑运行一下代码时，无法输出循环的内容，用手机安装的编译器却可以。", "\n\n", "\n\n", "代码：", "\n\n", "#include<iostream>", "\nusing namespace std;", "\nint main()", "\n{", "\n    int sum;", "\n    int number;", "\n    int i;", "\n    int a, b;", "\n    int sum1；", "\n    string p = \"___\";", "\n    cout << \"输入题目数:\";", "\n    cin >> number;", "\n    cout << \"四则运算题目数:\" << number << endl;", "\n    for (i = 0; i<number; i++)//控制程序的题目数", "\n    {", "\n        a = rand() % 1000;//产生随机数", "\n        b = rand() % 10;", "\n        sum = a / b;", "\n        sum1 = a % b;", "\n        if (a == 0 || b == 0 || b == 1 || a <= 40)", "\n        {", "\n            continue;", "\n        }", "\n        else if (sum1 == 0)", "\n        {", "\n            cout << a << \"÷\" << b << \"=\" << sum << endl;", "\n        }", "\n        else", "\n        {", "\n            continue;", "\n        }", "\n    }", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#    方法一&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;打印乘法表&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):  \n &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n   &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%d*%d&amp;#61;%d&amp;#39;&lt;/span&gt;%(j,i,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#方法二&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;打印乘法表&amp;#39;&lt;/span&gt;)\ni &amp;#61; 1\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i &amp;lt;&amp;#61; 9:\n    j &amp;#61; 1\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt;&amp;#61; i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#39;{i}*{j}&amp;#61;{i * j}&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n        j &amp;#43;&amp;#61; 1\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    i &amp;#43;&amp;#61; 1\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["九九乘法表的输出python", ["首先分析问题。打印九九乘法表显然需要用到两层循环嵌套。控制台中的字符是从左到", "右的依次打印的,那么打印的第一行内容就是 1", "1=1,第二行是 1", "2=2和 2", "2=4。 为便", "于直观理解程序，将九九乘法表的被乘数(第一个数)命名为first,乘数(第二个数)命名为", "second。 在每一行中，被乘数依次递增，乘数不变,所以乘数 second 为外层循环控制变量,被", "乘数 first 为内层循环控制变量。", "图 2-3-1中,九九乘法表的每行输出的项数是不一样的，这也使每次内层循环的循环次", "数不一样。第", "一次内层循环打印的是1", "1=1,第二次内层循环打印的是1", "2=2和2", "2=", "4。第三次打印的是1* 3=3、2", "3一6和3", "3一9，以此类推，那么，每次内层循环打印的九九", "乘法表的项数递增，项数与外层循环控制变量 first 的值相同。如果是乘法表的第九行，那被", "乘数就是从1到9,乘数固定为 9。", "每输出乘法表的一项，用一个 Tab键分割。在一次内层循环结束后,输出换行符。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while()里的赋值语句&lt;br /&gt;先执行赋值语句&amp;#xff0c;然后对左值进行判断。如果左值为0&amp;#xff0c;while退出&amp;#xff1b;否则while继续循环&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["一个关于c语言的问题，如何解决？", ["请问这一题为啥是这样？假如在循环体内没有改变t的运算式，那么t岂不是一直等于1，这样一来不就是死循环吗", "这个循环控制表达式是什么意思？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;注意&amp;#xff01;因为不知道你的电机是多少步的&amp;#xff0c;所以是假设步距角3°来编程的。如果转的角度不是180°&amp;#xff0c;请修改  setup 里的 n&amp;#61;60;  。如果大于180°&amp;#xff0c;就把n试着改小&amp;#xff1b;如果小于180°&amp;#xff0c;就把n改大。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nint st;\nint count;\nint count2;\nint n;\nint dir;\nvoid setup() {\n  pinMode(3,OUTPUT);\n  pinMode(4,OUTPUT);\n  pinMode(5,INPUT_PULLUP);\n  &lt;span class=\"hljs-attribute\"&gt;st&lt;/span&gt;&amp;#61;0x00;\n  &lt;span class=\"hljs-attribute\"&gt;count2&lt;/span&gt;&amp;#61;0;\n  &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;60;//修改我&amp;#xff01;\n  &lt;span class=\"hljs-attribute\"&gt;dir&lt;/span&gt;&amp;#61;0;\n}\nvoid loop() {\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!digitalRead(5)){\n    count&amp;#43;&amp;#43;;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n    &lt;span class=\"hljs-attribute\"&gt;count&lt;/span&gt;&amp;#61;0;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;count&lt;/span&gt;&amp;#61;&amp;#61;10){\n    &lt;span class=\"hljs-attribute\"&gt;st&lt;/span&gt;&amp;#61;0x01;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(st){\n    digitalWrite(3,1);\n    delay(1);\n    digitalWrite(3,0);\n    delay(1);\n    count2&amp;#43;&amp;#43;;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n    delay(2);\n  }\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(count2&amp;gt;&amp;#61;n){\n    &lt;span class=\"hljs-attribute\"&gt;count2&lt;/span&gt;&amp;#61;0;\n    dir^&amp;#61;0x01;\n    digitalWrite(4,dir);\n    delay(2000);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["arduino  nano板 控制42步进电机 。", ["arduino控制42步进电机", "①通电复位", "②按键启动", "③正转180度，停两秒", "④正转180度，停两秒", "⑤无线循环。", "请教程序怎么写。", "\n"]], "Tag": "程序设计"}
{"Answer": "&gt; 我把指令放到view单独一个函数中\r\n\r\n这个函数，你可以放在单独的一个线程中，python中使用线程还是蛮简单的。", "Konwledge_Point": "循环控制", "Question": ["django如何前台启动后台while循环脚本", ["django做一个项目，一个后台脚本while循环不断获得下位机数据存入数据库。使用django在view中不断将数据从数据库取出来放到前端。前台用js做一个按钮启动后台脚本，但是在view中调用脚本会进入while死循环，导致下面的代码无法运行。", "\n请问如何从前端开启一个后台进程？并且前端能结束后台进程？", "\n1.我把指令放到view单独一个函数中，会导致httpResponse()永远不能到末尾，结束时服务器容易崩溃", "\n2.后台脚本能够是单独的，可以由前台控制结束的，不影响view函数中代码运行。"]], "Tag": "程序设计"}
{"Answer": "使用命令模式   把命令封成对象  然后不管用Update还是协程 都行  \r\n也可以将行为都做成一个协程  \r\n\r\n下面结构可以参考一下\r\n\r\n```\r\n    public class PlayQueuedSystem {\r\n\r\n        static Dictionary&lt;CoroutineQueued, PlayQueuedSystem&gt; coroutineQueueds;\r\n        /// &lt;summary&gt;\r\n        /// 协程队列组\r\n        /// &lt;/summary&gt;\r\n        public static Dictionary&lt;CoroutineQueued, PlayQueuedSystem&gt; CoroutineQueueds {\r\n            get {\r\n                if (coroutineQueueds == null)\r\n                    coroutineQueueds = new Dictionary&lt;CoroutineQueued, PlayQueuedSystem&gt;();\r\n                return coroutineQueueds;\r\n            }            \r\n        }\r\n        /// &lt;summary&gt;\r\n        /// 所有者\r\n        /// &lt;/summary&gt;\r\n        MonoBehaviour sender;\r\n\r\n\r\n        public Queue&lt;PlayQueueItem&gt; PlayQueue { get; private set; }\r\n\r\n        \r\n        /// &lt;summary&gt;\r\n        /// 是否正在运行\r\n        /// &lt;/summary&gt;\r\n        public bool Runing {\r\n            get { return runing; }\r\n        }\r\n\r\n        private bool runing = false;\r\n\r\n        public PlayQueuedSystem(MonoBehaviour sender, CoroutineQueued queued) {\r\n            PlayQueue = new Queue&lt;PlayQueueItem&gt;();\r\n            this.sender = sender;\r\n            if (!CoroutineQueueds.ContainsKey(queued))\r\n            {\r\n                CoroutineQueueds.Add(queued, this);\r\n            }\r\n            else\r\n                Debug.LogError (\"重复的CoroutineQueued\");\r\n\r\n        }\r\n\r\n        public PlayQueuedSystem(MonoBehaviour sender)\r\n        {\r\n            PlayQueue = new Queue&lt;PlayQueueItem&gt;();\r\n            this.sender = sender;\r\n        }\r\n\r\n        public void AddQueueItem(PlayQueueItem queueItem) {\r\n            if (PlayQueue == null)\r\n                PlayQueue = new Queue&lt;PlayQueueItem&gt;();\r\n            PlayQueue.Enqueue(queueItem);\r\n        }\r\n        /// &lt;summary&gt;\r\n        /// 开始运行协程队列\r\n        /// &lt;/summary&gt;\r\n        public void StartQueue() {\r\n            runing = true;\r\n            IEnumerator queueRuning = QueueRuning();\r\n            MonoTools.AddCoroutines(sender, this, sender.StartCoroutine(queueRuning), queueRuning);\r\n        }\r\n\r\n        /// &lt;summary&gt;\r\n        /// 停止队列执行，不会影响正在实行的内容\r\n        /// &lt;/summary&gt;\r\n        public void StopQueue() {\r\n            runing = false;\r\n        }\r\n        Coroutine nowIEnumerator;\r\n        IEnumerator QueueRuning() {\r\n            while (runing) {\r\n                if (PlayQueue.Count &gt; 0)\r\n                {\r\n                    nowIEnumerator = sender.StartCoroutine(MonoTools.QueueItem(PlayQueue.Dequeue(), null));\r\n                    yield return nowIEnumerator;\r\n                }\r\n                else\r\n                    yield return new WaitForSeconds(0.5f);\r\n            }\r\n        }\r\n        /// &lt;summary&gt;\r\n        /// 略过当前执行协程\r\n        /// &lt;/summary&gt;\r\n        /// &lt;param name=\"nowIEnumerator\"&gt;&lt;/param&gt;\r\n        public void IgnoreNowCoroutine(Coroutine nowIEnumerator) {\r\n            if(nowIEnumerator!=null)\r\n                sender.StopCoroutine(nowIEnumerator);\r\n        }\r\n    }\r\n}\r\n\r\n```", "Konwledge_Point": "循环控制", "Question": ["Unity3D通过指令控制角色", ["作为Unity3D的初学者，在目前学习开发中遇到一个困扰一周的问题。", "\n目前要实现这样一个功能:对物体输入一连串的指令来控制物体移动，物体会按照指令依次执行下去，但是目前想实现一个循环和判断指令，就类似于while和if语句。", "\n没想到一个比较好的处理方法，求指教！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;图何在&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["循环语句控制输出三角形", ["如图所示...............………………"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;经测通用&amp;#xff0c;但我的是32位&amp;#xff0c;64位VBA参数可能要设置长整型&amp;#xff0c;怎么设置百度一下吧&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-vba\"&gt;&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Declare&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; mouse_event &lt;span class=\"hljs-keyword\"&gt;Lib&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;user32&amp;#34;&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;ByVal&lt;/span&gt; dwFlags &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;ByVal&lt;/span&gt; dx &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;ByVal&lt;/span&gt; dy &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;ByVal&lt;/span&gt; cButtons &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;ByVal&lt;/span&gt; dwExtraInfo &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Const&lt;/span&gt; MOUSEEVENTF_ABSOLUTE &amp;#61; &lt;span class=\"hljs-number\"&gt;&amp;amp;H8000&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;&amp;#39;指定鼠标使用绝对坐标系&amp;#xff0c;此时&amp;#xff0c;屏幕在水平和垂直方向上均匀分割成65535×65535个单元&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Const&lt;/span&gt; MOUSEEVENTF_MOVE &amp;#61; &lt;span class=\"hljs-number\"&gt;&amp;amp;H1&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;&amp;#39;移动鼠标&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Const&lt;/span&gt; MOUSEEVENTF_LEFTDOWN &amp;#61; &lt;span class=\"hljs-number\"&gt;&amp;amp;H2&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;&amp;#39;模拟鼠标左键按下&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Const&lt;/span&gt; MOUSEEVENTF_LEFTUP &amp;#61; &lt;span class=\"hljs-number\"&gt;&amp;amp;H4&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;&amp;#39;模拟鼠标左键抬起&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Const&lt;/span&gt; SW &amp;#61; &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Const&lt;/span&gt; SH &amp;#61; &lt;span class=\"hljs-number\"&gt;768&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; Screen_Click(&lt;span class=\"hljs-keyword\"&gt;ByVal&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;ByVal&lt;/span&gt; y &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Long&lt;/span&gt;)\nmw &amp;#61; x / SW * &lt;span class=\"hljs-number\"&gt;65535&lt;/span&gt;\nmh &amp;#61; y / SH * &lt;span class=\"hljs-number\"&gt;65535&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&amp;#39;移动&lt;/span&gt;\nmouse_event MOUSEEVENTF_ABSOLUTE &lt;span class=\"hljs-built_in\"&gt;Or&lt;/span&gt; MOUSEEVENTF_MOVE, mw, mh, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&amp;#39;单击&lt;/span&gt;\nmouse_event MOUSEEVENTF_LEFTDOWN &lt;span class=\"hljs-built_in\"&gt;Or&lt;/span&gt; MOUSEEVENTF_LEFTUP, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; TEST()\nScreen_Click &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["用vbs实现鼠标移动点击的重复操作", ["希望各路专家帮忙写个代码", " 因为不能用按键精灵所以想用vbs实现", "系统是win7专业版64位", "具体操作为：", "鼠标自动左键单点页面的各个位置", "共十次 坐标我可以根据位置自己调整", "最好有绝对坐标系", "以上操作为一组", "设置这组操作无限循环直到手动停止"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;写一个定时器中断&amp;#xff0c;每50ms计数一次&amp;#xff0c;每计数200次就启动蜂鸣器&amp;#xff0c;然后下一次计数就关闭蜂鸣器。&lt;br /&gt;这样就可以达到你想要的效果&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["怎么设置蜂鸣器10秒循环响一次", ["蜂鸣器beep 1后一直响，不知道怎么样才能让他响一下不响了，不知道怎么样设置每十秒响一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看了一下&amp;#xff0c;写得挺好的&amp;#xff0c;没什么问题&amp;#xff0c;如果要改进的话&amp;#xff0c;定义一个变量 len&amp;#61;&amp;#61;2*i-1,循环用len效率会高一些。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["我的代码有什么要需要优化的地方吗？我写的思路是否正确？", ["我的代码有什么要需要优化的地方吗？我写的思路是否正确？", "\n", "/*", "输出九行由*构成的菱形", "外层循环控制行数", "外层循环执行一次代表内层循环已经全部执行了一次。(一行已结束)", "内层循环控制列数", "\n", "循环判断条件", "总行数-当前行数=剩余行数    （是控制空格的输出", " 2", "当前行数-1 (奇数打印:1 3 5 7 9 每行个星号 )（三个都是控制星号的输出", " 2", "当前行数 (偶数打印:2 4 6 8 10 每行个星号)", " 1*当前行数 (打印：1 2 3 4 5 每行个星号（再输出语句里加个空格）)", "*/", "\n", "//--------------------------------------------------------------", "\n", "/*", "   后四行只要将外层循环做改变,循环体代码相同。", "    改变如下", "        for(int i=4;i>=1;i--){...} 此时的i每次递减。每行空格递增，星号递减。", "*/", "\n", "    ", "public", " ", "static", " ", "void", " ", "main", "(", "String[] args", ")", "{\n        ", "//外层循环", "\n        ", "for", "(", "int", " i=", "1", ";i<=", "5", ";i++){\n            ", "//控制空格输出的内层循环", "\n            ", "for", "(", "int", " j=", "1", ";j<=", "5", "-i;j++){\n                System.", "out", ".print(", "\" \"", ");\n            }\n            ", "//控制星号输出的内层循环", "\n            ", "for", "(", "int", " k=", "1", ";k<=", "2", "*i", "-1", ";k++){\n                System.", "out", ".print(", "\"*\"", ");\n            }\n            System.", "out", ".println();\n        }\n        ", "//后四行外层循环", "\n        ", "for", "(", "int", " i=", "4", ";i>=", "1", ";i--){\n            ", "//控制空格的输出", "\n            ", "for", "(", "int", " j=", "1", ";j<=", "5", "-i;j++){\n                System.", "out", ".print(", "\" \"", ");\n            }\n            ", "//控制星号的输出", "\n            ", "for", "(", "int", " k=", "1", ";k<=", "2", "*i", "-1", ";k++){\n                System.", "out", ".print(", "\"*\"", ");\n            }\n            System.", "out", ".println();\n        }\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这跟你几个循环有什么关系&amp;#xff0c;你输出的时候没有输出换行啊&lt;br /&gt;哪怕你只写一重循环&amp;#xff0c;只要判断好每输出5个数就输出一个换行&amp;#xff0c;那就会每行只有5个数据&lt;br /&gt;反之&amp;#xff0c;你写100重循环没有换行&amp;#xff0c;那还不是最后都在一行里&lt;br /&gt;循环可以理解为你自己心算的过程&amp;#xff0c;是你心里想的&lt;br /&gt;只有调用了cout或者print&amp;#xff0c;才是告诉显示器要显示的内容&lt;br /&gt;你想的再花花&amp;#xff0c;不告诉显示器&amp;#xff0c;显示器哪知道要换行啊&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["一个随机生成0和1的二维数组的输出", ["用两个循环控制输出，为什么还是在按行输出，而不是一个矩形，麻烦帮忙看一下"]], "Tag": "程序设计"}
{"Answer": "before", "Konwledge_Point": "循环控制", "Question": ["用AOP处理权限时使用前置通知好还是循环通知", ["有人说循环通知做权限处理好，也有说入股能用前置通知处理的问题最好不使用循环通知，目前我做的东西里是在前置通知里处理权限，，没权限就跳转，大家项目里控制权限一般用哪个啊。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;print(&amp;#34;*&amp;#34;)函数调用的返回值是字符串中字符个数加上结束标识符&amp;#96;\\0’&amp;#xff0c;总共为2&amp;#xff0c;即返回值为2&amp;#xff0c;恒成立;而‘0’的asc 码是48&amp;#xff0c;不等于0&amp;#xff0c;也是恒成立&amp;#xff0c;所以选择B&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["对于代码段，请问哪个是正确的呢", ["对于代码段，请问哪个是正确的呢，与循环控制表达式有关的疑惑，希望有详细的解释。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;按照你现在的接线的基础上&amp;#xff0c;把D5接按钮&amp;#xff0c;按钮接gnd&amp;#xff0c;开机就不停的动。按一下按钮&amp;#xff0c;停&amp;#xff0c;再按&amp;#xff0c;又动。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; st;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setup&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-built_in\"&gt;pinMode&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;OUTPUT&lt;/span&gt;);\n  &lt;span class=\"hljs-built_in\"&gt;pinMode&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;INPUT_PULLUP&lt;/span&gt;);\n  st&amp;#61;&lt;span class=\"hljs-number\"&gt;0x01&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;loop&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!&lt;span class=\"hljs-built_in\"&gt;digitalRead&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)){\n    count&amp;#43;&amp;#43;;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n    count&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(count&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n    st^&amp;#61;&lt;span class=\"hljs-number\"&gt;0x01&lt;/span&gt;;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(st){\n    &lt;span class=\"hljs-built_in\"&gt;digitalWrite&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;digitalWrite&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n  }\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["arduino控制42步进电机 正转无线循环，按键复位。程序怎么写？", ["arduino 控制42步进电机", "要求： 正转无线循环", "             按键后复位", "             按键正转无线循环", "             按键复位.......", "\n", "程序代码怎么写？我现在用的nano板。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;time.h&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;, z, m, k, c, i, f&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;srand&lt;/span&gt;((unsigned)&lt;span class=\"hljs-keyword\"&gt;time&lt;/span&gt;(NULL));\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43; )\n    {\n        z &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % z&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt; &amp;#61; z - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;;\n        m &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#43; %d &amp;#61; &amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;);\n            k &amp;#61; z;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d - %d &amp;#61; &amp;#34;&lt;/span&gt;, z, &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;);\n            k &amp;#61; &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;;\n        }\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;c);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;#61;&amp;#61;k)\n        {\n            f &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;回答正确\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;回答错误\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;得分&amp;#xff1a;%d&amp;#34;&lt;/span&gt;,f);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["一道关于C语言计数控制，条件控制的循环，嵌套循环的题", ["只做出来前三个实在不知道怎么搞了，求求救救孩子"]], "Tag": "程序设计"}
{"Answer": "&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"470\" src=\"http://c.51hei.com/d/forum/202106/01/095814v4gpz1ec144p1x1h.png\" width=\"939\" /&gt;&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"490\" src=\"http://c.51hei.com/d/forum/202106/01/095806reowvxioq6bstizq.gif\" width=\"544\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["单片机流水灯控制，加入两个开关控制，使k1闭合时灯从两头循环亮到中间，k2闭合时反过来 谢谢大佬们！", ["#include< reg52.h>", "\n\n", "#include< intrins.h>", "\n\n", "#define uint unsigned int", "\n\n", "#define uchar unsigned char", "\n\n", "void delay();", "\n\n", "void main()", "\n\n", "{ uchar temp,temp1,temp2,a;", "\n\n", "while(1)", "\n\n", "{ ", "\n\n", "temp1=0xfe;", "\n\n", "temp2=0x7f;", "\n\n", "for(a=8;a>0;a--)", "\n\n", "{", "\n\n", "temp=temp1&temp2;", "\n\n", "P1=temp;", "\n\n", "delay();", "\n\n", "temp1=_crol_(temp1,1);", "\n\n", "temp2=_cror_(temp2,1);", "\n\n", "}", "\n\n", "}", "\n\n", "}", "\n\n", "void delay()", "\n\n", "{ uint a,b;", "\n\n", "for(a=100;a>0;a--)", "\n\n", "for(b=600;b>0;b--);", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码段1、2、3的补全如下&amp;#xff0c;望采纳&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;\n&lt;p&gt;【代码1】应该控制输出行数为Line_num的循环控制。根据题目要求&amp;#xff0c;应把它替换为如下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt; &amp;lt; Line_num; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;&amp;#43;&amp;#43;)\n{\n    // 计算每行的值\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;--)\n    {\n        yh[&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;] &amp;#61; yh[&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#43; yh[&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;];\n    }\n    // 输出每行的值\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;&amp;#43;&amp;#43;)\n    {\n        System.out.&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%5d&amp;#34;&lt;/span&gt;, yh[&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;]);\n    }\n    System.out.println();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;【代码2】控制输出每行前导空格的循环控制&amp;#xff0c;可以替换为如下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; Line_num - &lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n{\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34;     &amp;#34;);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;【代码3】输出下标为col的项的代码&amp;#xff0c;可以替换为如下代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;System.out.&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%5d&amp;#34;&lt;/span&gt;, yh[&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;]);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["如何用一维数组实现杨辉三角形输出，能补齐代码么？(语言-java)", ["    ", "public", " static ", "void", " main(String args[]){\n       ", "int", " Line_num;\n       ", "int", " ", "row", ",col;\n       ", "int", " yh[]=", "new", " ", "int", "[", "20", "];     //不超过", "20", "行\n       Scanner reader=", "new", " Scanner(", "System", ".", "in", ");\n       ", "System", ".", "out", ".print(\"请输入行数:\");\n       Line_num=reader.nextInt();\n       yh[", "0", "]=", "1", ";\n       ", "for", " (【代码", "1", "】){          //控制输出行数为Line_num的循环控制\n          ", "for", " (col=", "row", ";col>", "0", ";col", "--)", "\n             yh[col]=yh[col", "-1", "]+yh[col];\n          ", "for", " (【代码", "2", "】)        //控制输出每行前导空格的循环控制\n              ", "System", ".", "out", ".print(\"     \");\n          ", "for", " (col=", "0", ";col<=", "row", ";col++)\n              【代码", "3", "】          //输出下标为col的项的代码\n          ", "System", ".", "out", ".println(\" \" );\n       }\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考下&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/weixin_43867294/article/details/108825957\"&gt;https://blog.csdn.net/weixin_43867294/article/details/108825957&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["一球从10米高度自由落下", ["一球从10米高度自由落下，每次落地后反跳回原高度的一半；再落下，求它在第5次落地时，共经过多少米？第5次反弹多高？（for in循环控制）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据你输入的内容进行判断&amp;#xff0c;现在读入到变量Exit中了。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;exit&amp;#34;&lt;/span&gt;.equals(Exit)){\n  &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;next&amp;#34;&lt;/span&gt;.equals(Exit)){\n  &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n}\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 这里看需不需要加一个&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;来处理都不是的情况&amp;#xff0c;如果不需要就结束了\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你现在只使用了单层循环&amp;#xff0c;直接一个break关键字就可以了。&lt;br /&gt;有帮助请采纳&amp;#xff0c;还有不懂的可以继续追问~&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["怎样用break和continue语句控制循环", ["获取输入的提示字符时无法退出程序或循环，卡在这里半天，不知道怎么弄", "\n", "/*    \n1. 通过键盘输入用户的月薪，每年是几个月的薪水    \n2. 输出用户的年薪  \n 3. 输出“如果年薪超过十万，恭喜你超越90%的国人水平”，“如果年薪超过20万，恭喜你超过98%的国人水平”   \n 4. 根据提示输入“exit”，则退出程序（使用break退出循环）   \n 5.根据提示输入“next”时，则退出计算，进行下一轮计算\n */", "\npackage Break;\n", "import", " java.util.Scanner;\n", "public", " ", "class", " WorkMoney {    \n   ", "public", " static ", "void", " main(String[] args) {        \nScanner Month = ", "new", " Scanner(", "System", ".", "in", ");        \n", "System", ".", "out", ".println(\"请输入您的月薪：\");       \n ", "int", " Mon = Month.nextInt();        \nScanner year = ", "new", " Scanner(", "System", ".", "in", ");        \n", "System", ".", "out", ".println(\"请输入每年是几个月的薪水：\");        \n", "int", " Months = year.nextInt();       \n ", "out", ":", "while", " (Mon>=", "0", "||Months>=", "0", "){\n            ", "System", ".", "out", ".println(Mon*Months);\n            ", "if", " (Mon * Months > ", "100000", " && Mon * Months<=", "200000", "){\n                ", "System", ".", "out", ".println(\"恭喜你超越90%的国人水平\");\n            } ", "else", " ", "if", " (Mon * Months > ", "200000", ") {\n                ", "System", ".", "out", ".println(\"恭喜你超过98%的国人水平\"); \n           }", "else", " { \n               ", "System", ".", "out", ".println(\"恭喜你收入为一般的国人水平\"); \n           }  \n          Scanner sc = ", "new", " Scanner(", "System", ".", "in", ");            \n", "System", ".", "out", ".println(\"如要退出，请输入exit;如要继续，请输入next\");\n            String ", "Exit", " = sc.nextLine(); \n                   }\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n 在for循环里面加上\r\n\r\n::Sleep(100);\r\nMSG msg;\r\nwhile (PeekMessage(&amp;msg, (HWND)NULL, 0, 0, PM_REMOVE) ) {\r\n    TranslateMessage(&amp;msg);\r\n    DispatchMessage(&amp;msg);\r\n}\r\n... //循环中的其它代码\r\n```", "Konwledge_Point": "循环控制", "Question": ["Windows如何控制刷新间隔时间", ["现在能用画笔画出一个圆，然后知道用for循环改变这个圆的坐标，", "\n但是不知道怎么控制刷新时间，第一天学windows。具体用什么函数怎么用，都不太了解"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在Java中使用print的话是支持转义字符的&amp;#xff0c;或者可以直接拼接一个空格进行打印即可&amp;#xff0c;这里的print和C语言的print是类似的。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;System.out.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["怎么把我这个数组横向输出，且每个数空格隔开", ["刚上大一，所以想请教一下各位", "试过去掉ln但是只会输出一团数字 想要隔开数字", "package 冒泡排序算法;", "import java.util.Scanner;", "public class Text {", "    public static void main(String[] args) {", "        int[] nums = {33,5,16,18,29,77,99,88};//待排序的数列", "\n", "    //外循环控制轮数\n    for(int i=0;i<nums.length-1;i++) {  //比较轮数等于数列的长度-1\n        for(int j=0;j<nums.length-1-i;j++) {\n            if(nums", "[j]", ">nums", "[j+1]", ") {\n                nums", "[j]", "=nums", "[j]", "+nums", "[j+1]", ";\n                nums", "[j+1]", "=nums", "[j]", "-nums", "[j+1]", ";\n                nums", "[j]", "=nums", "[j]", "-nums", "[j+1]", ";\n            \n            }\n        }\n    }\n//输出结果\n    for(int s:nums) {\n        System.out.println(s);\n    }\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;http-equiv&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;IE&amp;#61;edge&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;width&amp;#61;device-width, initial-scale&amp;#61;1.0&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-css\"&gt;\n\n        &lt;span class=\"hljs-selector-tag\"&gt;div&lt;/span&gt;{\n            &lt;span class=\"hljs-comment\"&gt;/* margin-top: 3px; */&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;/* margin-bottom: 3px; */&lt;/span&gt;\n            &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100px&lt;/span&gt;;\n            &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100px&lt;/span&gt;;\n            &lt;span class=\"hljs-attribute\"&gt;border-radius&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;10px&lt;/span&gt;;\n            &lt;span class=\"hljs-attribute\"&gt;background-color&lt;/span&gt;: green;\n            &lt;span class=\"hljs-comment\"&gt;/* line-height:center; */&lt;/span&gt;\n            &lt;span class=\"hljs-attribute\"&gt;position&lt;/span&gt;: absolute; \n            &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: block;\n        }\n        \n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n        &lt;span class=\"hljs-variable language_\"&gt;window&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;onload&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; btn&amp;#61;&lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;btn&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-comment\"&gt;// var div1&amp;#61;document.getElementById(&amp;#34;div1&amp;#34;);&lt;/span&gt;\n\n        }\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; tops&amp;#61;&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,lefts&amp;#61;&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;;\n       &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt;  tooltipPosition&amp;#61;[\n        { &lt;span class=\"hljs-attr\"&gt;top&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;left&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt; },\n        { &lt;span class=\"hljs-attr\"&gt;top&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;left&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;150&lt;/span&gt; },\n        { &lt;span class=\"hljs-attr\"&gt;top&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;150&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;left&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;150&lt;/span&gt; },\n        { &lt;span class=\"hljs-attr\"&gt;top&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;left&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt; }\n      ]\n        &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;move&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; div1&amp;#61;&lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;div1&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;#43;&amp;#43;){\n               div1.&lt;span class=\"hljs-property\"&gt;style&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;top&lt;/span&gt;&amp;#61; tooltipPosition[i][&lt;span class=\"hljs-string\"&gt;&amp;#34;top&amp;#34;&lt;/span&gt;]&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;px&amp;#34;&lt;/span&gt;;\n               div1.&lt;span class=\"hljs-property\"&gt;style&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;left&lt;/span&gt;&amp;#61;tooltipPosition[i][&lt;span class=\"hljs-string\"&gt;&amp;#34;left&amp;#34;&lt;/span&gt;]&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;px&amp;#34;&lt;/span&gt;;\n               &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;){\n                i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n               }           \n               &lt;span class=\"hljs-keyword\"&gt;debugger&lt;/span&gt;;\n            }\n            \n        }\n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;btn&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;onclick&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;move()&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;移动&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;div1&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        \n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["怎么动态控制移动，让来回循环移动", ["请问下，tooltipPosition: [", "        { top: 50, left: 50 },", "        { top: 50, left: 150 },", "        { top: 150, left: 150 },", "        { top: 50, left: 50 }", "      ]", "怎么让一个div的position按照这个数组里面的来循环移动", "@xcLeigh "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ceil&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n - i; j&amp;#43;&amp;#43;)\n           &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;);\n       &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; T, n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt; , &amp;amp;T);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (T--){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;ceil&lt;/span&gt;(n);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["这个是循环嵌套与控制", ["本题有t(t≤100)组数据，第一行输入t，接下来有t行输入，每组第一行n（n小于等于100)，对应每组输入，输出n个数据对应的n阶'x'构成的三角形"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a id=\"textarea_1668733457885_1668733671819_0\"&gt;http://t.csdn.cn/g5FGl&lt;/a&gt;&lt;br /&gt;我这篇链接可能能帮助你&lt;br /&gt;1.舵机抖动的根本原因&amp;#xff0c;一定是届时给了舵机不同的电平&amp;#xff0c;相当于一个‘误操作’&lt;br /&gt;2.从长远来看&amp;#xff0c;最好将定时器计数的个数设置大一些&amp;#xff0c;这样当你设置角度的时候&amp;#xff0c;给舵机的脉冲信号更精准、稳定。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["51单片机控制舵机，一直抖动", ["图是我的控制舵机的代码，舵机是S3010，占空比用多少都是先抖动一会，然后转一下，有时候会停下来，很多时候都是一直这样循环。", "我查到有一种说法是这个舵机控制与占空比无关，与高电平时长有关，我也试了还是抖动。", "电源是接的单片机的5V。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参照这个模式进行循环校验el-form表单项&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"language-xml\"&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-form&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;label-position&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;right&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:model&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;loginInfo&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:inline&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;label-width&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;55px&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:rules&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;rules&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;v-for&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;(item,index) in loginInfo.dataList&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:key&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;index&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-form-item&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;label&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;用户名&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:rules&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;rules.username&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:prop&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#96;dataList.$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{index}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;.username&amp;#96;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;v-model&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;loginInfo.username&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-input&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-form-item&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-form-item&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;label&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;密码&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:rules&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;rules.password&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;:prop&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#96;dataList.$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{index}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;.password&amp;#96;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;v-model&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;loginInfo.password&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-input&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-form-item&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-form-item&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;primary&amp;#34;&lt;/span&gt; &amp;gt;&lt;/span&gt;取消&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;el-button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;primary&amp;#34;&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-attr\"&gt;click&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;doLogin&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;登录&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-form-item&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;el-form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;   data(){\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;{\n            loginInfo: {\n                dataList: [{username:&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;password&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;}]\n            },\n            rules:{\n                username:[{required: &lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;, message: &lt;span class=\"hljs-string\"&gt;&amp;#39;请输入用户名&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;trigger&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;blur&amp;#39;&lt;/span&gt; }],\n                &lt;span class=\"hljs-keyword\"&gt;password&lt;/span&gt;:[{required: &lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;, message: &lt;span class=\"hljs-string\"&gt;&amp;#39;请输入用户名&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;trigger&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;blur&amp;#39;&lt;/span&gt; }],\n            },\n     }\n  }\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt; this.$refs.loginInfo[&lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;validate&lt;/span&gt;((&lt;span class=\"hljs-keyword\"&gt;valid&lt;/span&gt;)&amp;#61;&amp;gt;{\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;valid&lt;/span&gt;){\n                    alert(&lt;span class=\"hljs-string\"&gt;&amp;#39;提交成功&amp;#39;&lt;/span&gt;)\n                }\n            })\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["循环校验el-form表单项", ["我这个el-input可以自定义增添，外层用v-for控制的。我想让el-form的rule来校验每一个el-input。怎么写啊，"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; btn() &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; VB.CommandButton\n\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; Form_Load()\n    size &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;Private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; Command1_Click()\n    allfile &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n    sbuf &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n    size &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n    Open App.Path &amp;amp; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\ok.txt&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; Input &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; #&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;Do&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;While&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Not&lt;/span&gt; EOF(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        Line Input #&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, sbuf\n        &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt; Len(sbuf) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Then&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Exit&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Do&lt;/span&gt;\n        size &amp;#61; size &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        allfile &amp;#61; allfile &amp;amp; sbuf &amp;amp; &lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;Loop&lt;/span&gt;\n    Close #&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;&amp;#39;根据读入条数更改数组大小&lt;/span&gt;\n    size &amp;#61; size - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;ReDim&lt;/span&gt; btn(size) &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; VB.CommandButton\n    \n    sa &amp;#61; Split(allfile, &lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)\n    t &amp;#61; &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;\n    l &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; size\n        has &amp;#61; Dir(App.Path &amp;amp; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\&amp;#34;&lt;/span&gt; &amp;amp; sa(i)) &amp;lt;&amp;gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt; btn(i) &amp;#61; Controls.Add(&lt;span class=\"hljs-string\"&gt;&amp;#34;VB.CommandButton&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;cmd&amp;#34;&lt;/span&gt; &amp;amp; i)\n        &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt; l &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Then&lt;/span&gt;\n            t &amp;#61; t &amp;#43; &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;\n            l &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt;\n        \n        &lt;span class=\"hljs-keyword\"&gt;With&lt;/span&gt; btn(i)\n            \n            .Enabled &amp;#61; has\n            .Tag &amp;#61; sa(i)\n            .Left &amp;#61; l * (.Width &amp;#43; &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;)\n            .Top &amp;#61; t\n            .Caption &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp; &lt;span class=\"hljs-string\"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &amp;amp; sa(i)\n            .Visible &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;With&lt;/span&gt;\n        l &amp;#61; l &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        \n    &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt; i\n    \n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/647073959866137.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["vb根据文本内容控制按钮显示", ["有一个文本ok.txt", "里面内容", "1.txt", "2.txt", "3.txt", "\n", "vb循环读出判断是否有这个文本，", "如果有commad就可以点击，如果没有就显示灰色", "\n", "我想用循环变量来控制commad", "ok内容不固定，commad数量不固定", "commad根据ok.txt内容多少自动变量", "\n", "比如ok.txt第一行，", "对应1.txt，可以设置", "s=s+1", "commad & s ，也就是commad1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/xianfajushi/article/details/102542669?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522163373882216780261956003%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;amp;request_id&amp;#61;163373882216780261956003&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-26-102542669.pc_v2_rank_blog_default&amp;amp;utm_term&amp;#61;51&amp;amp;spm&amp;#61;1018.2226.3001.4450\" id=\"textarea_1633738779903_1633738886819_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/xianfajushi/article/details/102542669?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522163373882216780261956003%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;amp;request_id&amp;#61;163373882216780261956003&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-26-102542669.pc_v2_rank_blog_default&amp;amp;utm_term&amp;#61;51&amp;amp;spm&amp;#61;1018.2226.3001.4450&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["单片机实现1到9循环显示", ["使用单片机端口驱动一位共阳极七段数码管，使数码管上依次显示1,2. 3.8.,9,0,9,8,7,..3,2,1,2,3.如此无限显示，且要求每个数字显示大约持续1秒钟。绘制系统硬件电路并编写控制程序。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;断点跟踪看看是不是触发了事件&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Android studio中的widget和service实现音乐桌面控件", ["appwidget_layout.xml", "\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n", "<", "LinearLayout", " ", "xmlns:android", "=", "\"http://schemas.android.com/apk/res/android\"", "\n    ", "android:layout_width", "=", "\"match_parent\"", "\n    ", "android:layout_height", "=", "\"50dp\"", "\n    ", "android:background", "=", "\"#00BCD4\"", "\n    ", "android:orientation", "=", "\"horizontal\"", " >", "\n\n    ", "<", "ImageView", "\n        ", "android:id", "=", "\"@+id/play\"", "\n        ", "android:layout_width", "=", "\"57dp\"", "\n        ", "android:layout_height", "=", "\"match_parent\"", "\n        ", "android:src", "=", "\"@android:drawable/ic_media_play\"", ">", "</", "ImageView", ">", "\n\n    ", "<", "ImageView", "\n        ", "android:id", "=", "\"@+id/stop\"", "\n        ", "android:layout_width", "=", "\"73dp\"", "\n        ", "android:layout_height", "=", "\"match_parent\"", "\n        ", "android:layout_marginLeft", "=", "\"50dp\"", "\n        ", "android:src", "=", "\"@android:drawable/ic_media_pause\"", ">", "</", "ImageView", ">", "\n\n", "</", "LinearLayout", ">", "\n", "\n", "Appwidget.java", "\n", "package", " com.example.myapplication;\n\n\n", "import", " android.app.PendingIntent;\n", "import", " android.appwidget.AppWidgetManager;\n", "import", " android.appwidget.AppWidgetProvider;\n", "import", " android.content.Context;\n", "import", " android.content.Intent;\n", "import", " android.util.Log;\n", "import", " android.widget.RemoteViews;\n\n", "public", " ", "class", " ", "AppWidget", " ", "extends", " ", "AppWidgetProvider", " {\n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "onReceive", "(Context context, Intent intent)", " {\n        ", "super", ".onReceive(context, intent);\n         Log.d(", "this", ".getClass().getName(), ", "\"onReceive\"", ");\n\n        ", "if", " (intent == ", "null", ")\n            ", "return", ";\n\n        ", "String", " ", "action", " ", "=", " intent.getAction();\n\n        ", "// 停止播放", "\n        ", "if", " (action.equals(Constants.ACTION_STOP)) {\n            ", "Intent", " ", "serviceIntent", " ", "=", " ", "new", " ", "Intent", "(context, MyService.class);\n            context.stopService(serviceIntent);\n        }\n\n        ", "// 点击了按钮，启动一个后台服务播放", "\n        ", "if", " (action.equals(Constants.ACTION_PLAY)) {\n            String TAG=", "\"AAAA\"", ";\n            Log.d(TAG, ", "\"aaaaa \"", ");\n            ", "Intent", " ", "serviceIntent", " ", "=", " ", "new", " ", "Intent", "(context, MyService.class);\n            context.startService(serviceIntent);\n        }\n    }\n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "onUpdate", "(Context context, AppWidgetManager appWidgetManager, ", "int", "[] appWidgetIds)", " {\n        Log.d(", "this", ".getClass().getName(), ", "\"onUpdate\"", ");\n\n        ", "RemoteViews", " ", "remoteViews", " ", "=", " ", "new", " ", "RemoteViews", "(context.getPackageName(), R.layout.appwidget_layout);\n\n        ", "// 播放图片作为按钮，绑定播放事件", "\n        ", "Intent", " ", "intentPlay", " ", "=", " ", "new", " ", "Intent", "(Constants.ACTION_PLAY);\n        ", "PendingIntent", " ", "pendingIntentPlay", " ", "=", " PendingIntent.getBroadcast(context, Constants.REQUEST_CODE_PLAY, intentPlay,\n                PendingIntent.FLAG_UPDATE_CURRENT);\n        remoteViews.setOnClickPendingIntent(R.id.play, pendingIntentPlay);\n\n        ", "// 停止图片作为按钮，绑定停止事件", "\n        ", "Intent", " ", "intentStop", " ", "=", " ", "new", " ", "Intent", "(Constants.ACTION_STOP);\n        ", "PendingIntent", " ", "pendingIntentStop", " ", "=", " PendingIntent.getBroadcast(context, Constants.REQUEST_CODE_STOP, intentStop,\n                PendingIntent.FLAG_UPDATE_CURRENT);\n        remoteViews.setOnClickPendingIntent(R.id.stop, pendingIntentStop);\n\n        ", "// 更新AppWidget", "\n        appWidgetManager.updateAppWidget(appWidgetIds, remoteViews);\n    }\n\n    ", "/**\n     * 删除AppWidget\n     */", "\n    ", "@Override", "\n    ", "public", " ", "void", " ", "onDeleted", "(Context context, ", "int", "[] appWidgetIds)", " {\n        ", "super", ".onDeleted(context, appWidgetIds);\n        Log.d(", "this", ".getClass().getName(), ", "\"onDeleted\"", ");\n    }\n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "onDisabled", "(Context context)", " {\n        ", "super", ".onDisabled(context);\n        Log.d(", "this", ".getClass().getName(), ", "\"onDisabled\"", ");\n    }\n\n    ", "/**\n     * AppWidget首次创建调用\n     */", "\n    ", "@Override", "\n    ", "public", " ", "void", " ", "onEnabled", "(Context context)", " {\n        ", "super", ".onEnabled(context);\n        Log.d(", "this", ".getClass().getName(), ", "\"onEnabled\"", ");\n    }\n}\n", "\n", "MyService.java", "\n", "package", " com.example.myapplication;\n\n", "import", " java.io.File;\n\n", "import", " android.app.Service;\n", "import", " android.content.Intent;\n", "import", " android.media.MediaPlayer;\n", "import", " android.os.Environment;\n", "import", " android.os.IBinder;\n\n", "public", " ", "class", " ", "MyService", " ", "extends", " ", "Service", " {\n\n    ", "// 播放器", "\n    ", "private", " MediaPlayer mMediaPlayer;\n\n    ", "// 音频文件", "\n    File audioFile;\n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "onCreate", "()", " {\n        ", "super", ".onCreate();\n\n        mMediaPlayer = ", "new", " ", "MediaPlayer", "();\n\n        ", "// 根目录", "\n        ", "File", " ", "sdcard", " ", "=", " Environment.getExternalStorageDirectory();\n        audioFile = ", "new", " ", "File", "(sdcard, ", "\"th.mp3\"", ");\n    }\n\n    ", "@Override", "\n    ", "public", " ", "int", " ", "onStartCommand", "(Intent intent, ", "int", " flags, ", "int", " startId)", " {\n        ", "// 重置", "\n        mMediaPlayer.reset();\n\n        ", "// 设置播放器的声音源", "\n        ", "try", " {\n            mMediaPlayer.setDataSource(audioFile.getAbsolutePath());\n        } ", "catch", " (Exception e) {\n            e.printStackTrace();\n        }\n\n        ", "// 也可以从一个静态资源文件中加载音频数据源", "\n         mMediaPlayer.create(", "this", ", R.raw.th);\n\n        ", "if", " (!mMediaPlayer.isPlaying()) {\n            ", "try", " {\n                mMediaPlayer.prepare();\n            } ", "catch", " (Exception e) {\n                e.printStackTrace();\n            }\n\n            mMediaPlayer.start();\n\n            ", "// 如果设置循环true，那么将循环播放", "\n             mMediaPlayer.setLooping(", "true", ");\n        }\n\n        ", "return", " ", "super", ".onStartCommand(intent, flags, startId);\n    }\n\n    ", "@Override", "\n    ", "public", " ", "void", " ", "onDestroy", "()", " {\n        ", "super", ".onDestroy();\n\n        mMediaPlayer.stop();\n        mMediaPlayer.release();\n        mMediaPlayer = ", "null", ";\n    }\n\n    ", "@Override", "\n    ", "public", " IBinder ", "onBind", "(Intent intent)", " {\n        ", "return", " ", "null", ";\n    }\n}\n", "\n", "Constants.java", "\n", "package", " com.example.myapplication;\n\n", "public", " ", "class", " ", "Constants", " {\n    ", "public", " ", "static", " ", "final", " ", "String", " ", "ACTION_PLAY", " ", "=", " ", "\"action_play\"", ";\n    ", "public", " ", "static", " ", "final", " ", "String", " ", "ACTION_STOP", " ", "=", " ", "\"action_stop\"", ";\n    ", "public", " ", "static", " ", "final", " ", "int", " ", "REQUEST_CODE_PLAY", " ", "=", " ", "0xd05", ";\n    ", "public", " ", "static", " ", "final", " ", "int", " ", "REQUEST_CODE_STOP", " ", "=", " ", "0xd06", ";\n}\n", "\n", "AndroidManifest.xml", "\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n", "<", "manifest", " ", "xmlns:android", "=", "\"http://schemas.android.com/apk/res/android\"", "\n    ", "package", "=", "\"com.example.myapplication\"", ">", "\n\n    ", "<", "application", "\n        ", "android:allowBackup", "=", "\"true\"", "\n        ", "android:icon", "=", "\"@mipmap/ic_launcher\"", "\n        ", "android:label", "=", "\"@string/app_name\"", "\n        ", "android:roundIcon", "=", "\"@mipmap/ic_launcher_round\"", "\n        ", "android:supportsRtl", "=", "\"true\"", "\n        ", "android:theme", "=", "\"@style/Theme.MyApplication\"", ">", "\n        ", "<", "receiver", " ", "android:name", "=", "\"com.example.myapplication.AppWidget\"", "\n            ", "android:exported", "=", "\"true\"", ">", "\n\n            ", "<", "intent-filter", ">", "\n                ", "<", "action", " ", "android:name", "=", "\"action_play\"", " />", "\n            ", "</", "intent-filter", ">", "\n\n            ", "<", "intent-filter", ">", "\n                ", "<", "action", " ", "android:name", "=", "\"action_stop\"", " />", "\n            ", "</", "intent-filter", ">", "\n\n            ", "<", "intent-filter", ">", "\n                ", "<", "action", " ", "android:name", "=", "\"android.appwidget.action.APPWIDGET_UPDATE\"", " />", "\n            ", "</", "intent-filter", ">", "\n\n            ", "<", "meta-data", "\n                ", "android:name", "=", "\"android.appwidget.provider\"", "\n                ", "android:resource", "=", "\"@xml/appwidget\"", " />", "\n\n        ", "</", "receiver", ">", "\n        ", "<", "activity", "\n            ", "android:name", "=", "\".MainActivity\"", "\n            ", "android:exported", "=", "\"true\"", ">", "\n            ", "<", "intent-filter", ">", "\n                ", "<", "action", " ", "android:name", "=", "\"android.intent.action.MAIN\"", " />", "\n                ", "<", "category", " ", "android:name", "=", "\"android.intent.category.LAUNCHER\"", " />", "\n            ", "</", "intent-filter", ">", "\n        ", "</", "activity", ">", "\n        ", "<", "service", " ", "android:name", "=", "\"com.example.myapplication.MyService\"", "\n            ", "android:enabled", "=", "\"true\"", "\n            ", "android:exported", "=", "\"true\"", ">", "\n        ", "</", "service", ">", "\n    ", "</", "application", ">", "\n\n", "</", "manifest", ">", "\n", "\n", "但是我的控件点击了没有反应"]], "Tag": "程序设计"}
{"Answer": "问题已经解决了，写个多线程，给logger分配一个线程，然后用boost/filesystem和boost/asio写个实时监视器，每隔100毫秒扫描文件，监视文件大小，文件超过10M，改为ios_base::out，平时用ios_base::app", "Konwledge_Point": "循环控制", "Question": ["boost/log如何写满10M文件自动生成新日志文件覆盖源日志文件", ["1.生成单个日志文件，控制在10M以内，超过10M，则生成新的日志文件**覆盖**源日志文件", "\n\n", "2.若**不满**10M，则在源日志文件后**续写**", "\n\n", "3.每天12点后，生成的新日志都会覆盖前一天的日志"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;手边没电脑用手粗略看了一次代码&amp;#xff0c;&lt;br /&gt;你这个渲染操作只执行了一次啊&amp;#xff0c;那样的话不管控制器怎么动都只显示第一帧&lt;br /&gt;你要在控制器变化的回调里面加渲染&lt;br /&gt;或者在requestframe里加渲染&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["threejs Orbitcontrols没反应", ["threejs Orbitcontrols没反应", "\n", "\n", "\n\n", "import", " * as THREE from ", "\"three\"", ";\n", "import", " { OrbitControls } from ", "\"three/examples/jsm/controls/OrbitControls\"", ";\n\n\n\n\nlet ", "width", " = ", "1920", "\nlet ", "height", " = ", "937", "\n", "// 场景", "\n", "const", " scene = ", "new ", "THREE", ".", "Scene", "()\n", "const", " geometry = ", "new ", "THREE", ".", "BoxGeometry", "(", "40", ", ", "40", ", ", "40", ");\n", "const", " material = ", "new ", "THREE", ".", "MeshLambertMaterial", "({\n    ", "color", ": ", "0x00ffb4", ",\n})\nvar mesh = ", "new ", "THREE", ".", "Mesh", "(geometry, material);\nscene.", "add", "(mesh);\n\n", "// 相机", "\nlet k = ", "width", " / ", "height", "\n", "// 参数一是角度，二是宽高比，三是最小值，四是最大值", "\n", "const", " ", "camera", " = ", "new ", "THREE", ".", "PerspectiveCamera", "(", "45", ", ", "width", " / ", "height", ", ", "1", ", ", "1000", ");\n", "camera", ".", "position", ".", "set", "(", "200", ", ", "300", ", ", "200", "); ", "//设置相机位置", "\n", "camera", ".", "lookAt", "(scene.", "position", "); ", "//设置相机方向(指向的场景对象)", "\n\n", "// 设置光源，并追加到场景 ", "\n", "const", " ", "point", " = ", "new ", "THREE", ".", "PointLight", "(", "0xffffff", ")\n", "point", ".", "position", ".", "set", "(", "200", ", ", "100", ", ", "600", ")\nscene.", "add", "(", "point", ")\n\n\n", "// 渲染", "\n", "const", " renderCtx = ", "new ", "THREE", ".", "WebGLRenderer", "();\nrenderCtx.", "setSize", "(", "width", ", ", "height", ");", "//设置渲染区域尺寸", "\nrenderCtx.", "setClearColor", "(", "0x000000", ", ", "1", "); ", "//设置背景颜色", "\n", "const", " el = renderCtx.", "domElement", "\nel.", "style", ".", "position", " = ", "\"fixed\"", "\nel.", "style", ".", "top", " = ", "\"0\"", "\nel.", "style", ".", "left", " = ", "\"0\"", "\ndocument.", "body", ".", "appendChild", "(renderCtx.", "domElement", "); ", "//body元素中插入canvas对象", "\nrenderCtx.", "render", "(scene, ", "camera", ");", "//执行渲染操", "\n\n", "// 控制器", "\nfunction ", "initControls", "() {\n    console.", "log", "(", "\"el\"", ",el);\n    ", "const", " controls = ", "new ", "OrbitControls", "(", "camera", ", el)\n    controls.", "enableDamping", " = ", "true", ";", "// 使动画循环使用时阻尼或自转 意思是否有惯性 ", "\n    controls.", "enableZoom", " = ", "true", ";", "//是否可以缩放 ", "\n    controls.", "autoRotate", " = ", "true", ";", "//是否自动旋转 ", "\n    controls.", "minDistance", " = ", "200", ";", "//设置相机距离原点的最远距离 ", "\n    controls.", "maxDistance", " = ", "600", ";", "//设置相机距离原点的最远距离 ", "\n    controls.", "enablePan", " = ", "true", ";", "//是否开启右键拖拽 ", "\n    controls.", "update", "();\n    controls.", "addEventListener", "(", "'change'", ", (e) => {\n        console.", "log", "(", "\"改变了\"", ", e);\n    })\n}\n", "initControls", "()\n\n\n", "\n", "没有报错，但移动和缩放没有一点效果", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "对wap网站进行请求和传输数据也一样嘛，都是http请求，那当然是可以的", "Konwledge_Point": "循环控制", "Question": ["java发送http请求的几个问题", ["我曾经问过这方面问题，不过不是很清楚，这次想说的明白点：", "\n1 在java中模拟客户端发送http post或者get请求，session如何处理？", "\n比如google。com打开首页进行登录，登陆成功后返回首页可以点击帐户然后进行其他操作比如进入gmail等，可是在程序中，我可以通过对google。com登陆那个页面open一个connection，然后post过去帐户和密码，然后接下来呢？怎么进行其他针对登陆用户的操作，比如设置，修改密码等？", "\n上面说的类似于网上所谓的淘宝助理等东西，用户通过在软件输入用户和密码，可以控制淘宝上自己店铺的商品，不用通过浏览器访问等等，想知道这个怎么实现的", "\n看网站，就是他们做的东西的原理[url]", "http://www.asoft.cn/soft_shop_taoeditup.aspx[/url]", "\n\n", "2 wap网站", "\njava如何开启和wap网站的连接？他怎么发送数据到服务端？", "\n[b]问题补充：[/b]", "\n[quote]open一个connection，然后post过去帐户和密码,接下来不关闭这个连接， ", "\n\n", "你要[color=red]设置密码的话，你就再发起对修改密码的页面的请求[/color]，把相关的密码信息也发送过去，[/quote]", "\n感谢上面这位童鞋，每次答题速度都很快，言简意赅。", "\n\n", "我想问下 设置密码重新请求，这样不是重新打开连接了么？这样的话2个连接还能共享用户么？", "\n[b]问题补充：[/b]", "\n[quote]用httpclient打开一个连接，再发送多个请求都是共享用户的 [/quote]", "\n恩，好的，这个没问题，我想问下可不可以对wap网站进行请求和传输数据"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一张图是印刷错误&amp;#xff0c;num &amp;#61; num &amp;#43; 1应该缩进&lt;br /&gt;第二张图中的k&amp;#61;k/2不在while循环体内&amp;#xff0c;所以由于while条件始终成立&amp;#xff0c;就成了死循环&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["对while循环的疑问", ["这张图片中，while循环中num在它的的位置起的作用是什么？", "如果是控制变量，为什么下面图片中没缩进，会变成死循环，缩进就可以计算？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;float result &amp;#61; 20, num &amp;#61; 8, count &amp;#61; 0;&lt;br /&gt;while(num &amp;lt; result)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;  count &amp;#43;&amp;#43;;&lt;br /&gt;  num *&amp;#61; 1.25;&lt;br /&gt;}&lt;br /&gt;count就是结果&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["实现任务:某机构2006年培养学员8万人，每年增长25%，请问按此增长速度，到哪一年培训学员 人数将达到20万人?", ["[实训目的 ]", "\n", "熟练掌握上机操作步骤和Java程序开发的过程;", "\n", "掌握循环流程控制结构的while 循环语句;", "\n", "掌握循环流程控制结构的do..while 循环语句;", "\n", "掌握循环流程控制结构的for循环结构。", "\n", "[实训内容]", "\n", "仿照“任务5\" ,实现任务:某机构2006年培养学员8万人，每年增长25%，请问按此增长速度，到哪一年培训学员 人数将达到20万人?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以使用v-if&amp;#61;&amp;#34;item.name!&amp;#61;选择的值&amp;#34;&amp;#xff0c;判断的条件可以是id&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["ElementUI中el-select下拉框选择不同的项控制其他控件(单选控件)的显示和隐藏", ["ElementUI中el-select下拉框选择不同的项，控制其他控件某个值的显示和隐藏，", "其他控件的循环遍历的数据。", "\n", "只有选中下拉框中选的数据，集装箱才会显示。", "\n", "因为单选是遍历出来的数据，所以不太清楚怎么控制某一个数据的显示隐藏。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的循环当KeyNum为12的时候进入&amp;#xff0c;什么时候能退出去呢&amp;#xff1f;while里的if仍然是判断KeyNum为12&amp;#xff0c;本来就是12才能到这一句。而且下边没有能够跳出循环的条件&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["51单片机如何不使用定时器实现长按切换模式功能", ["51，ATC89C52", "不使用定时器功能，实现短按长按按键实现不同功能", "我想着加上个延时函数，利用宕机原理实现长按按键切换功能，然而程序烧录后的现象是：LED1602显示屏没有任何反应（感觉可能是卡死在while循环里了）。我这个程序可以怎么优化，实现功能？", "\n", "请各位朋友不吝赐教！万分感谢！", "附上代码图片：", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import threading\nimport time\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; msvcrt import getch\n&lt;span class=\"hljs-keyword\"&gt;key&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\ndef circle():\n    &lt;span class=\"hljs-keyword\"&gt;global&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;key&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;key&lt;/span&gt; &amp;#61; getch()\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;key&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;&amp;#39;\\x1b&amp;#39;:&lt;/span&gt;\n            break\n        elif &lt;span class=\"hljs-keyword\"&gt;key&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;&amp;#39;q&amp;#39;:&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n        elif &lt;span class=\"hljs-keyword\"&gt;key&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;&amp;#39;s&amp;#39;:&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n\n\ndef test(): # 每隔一秒打印一个加数无限循环\n    i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;key&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;&amp;#39;\\x1b&amp;#39;:&lt;/span&gt;\n            break\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;stop&lt;/span&gt;:\n            i &amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            print(i)\n        time.sleep(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n\nthreading.Thread(target&amp;#61;circle).start()\nthreading.Thread(target&amp;#61;test).start()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "循环控制", "Question": ["对进行中的程序进行按键控制", ["问题遇到的现象和发生背景", "\n", "可以通过什么办法解决正在运行的程序，当接收到按键q就暂停，按键s就恢复，接收到按键ESC就退出程序", "\n", "问题相关代码，请勿粘贴截图", "\n", "def test():  # 每隔一秒打印一个加数无限循环", "    i = 1", "    while True:", "        i = i+1", "        print(i)", "        time.sleep(1)", "test()", "\n", "运行结果及报错内容", "\n", "这是一个无线循环程序，只是一个测试程序，想做到按键对这个程序进行控制", "\n", "我的解答思路和尝试过的方法", "\n", "了解到可能需要pynput库和threading库，但是不知道如何去处理", "\n", "我想要达到的结果", "\n", "当接收到按键q就暂停，按键s就恢复，接收到按键ESC就退出程序"]], "Tag": "程序设计"}
{"Answer": "这个其实和TreePanel没有多少关系\r\n\r\n有关系的是TreeNode节点\r\n\r\n节点有一个childNodes 属性可以获得他的所有子节点\r\n节点又一个eachChild( Function fn, [Object scope], [Array args] ) : void 这样的方法可以遍历当前节点的所有子节点\r\n节点有一个expandChildNodes( [Boolean deep] ) : void方法可以展开子节点包括展开子节点的子节点\r\n节点有一个hasChildNodes() : Boolean方法可以判断他下面还有没有子节点\r\n\r\n这些都可以在api里面找到", "Konwledge_Point": "循环控制", "Question": ["Extjs treePanel的保存", ["如何循环一个treePanel的所有节点，得到各个节点的信息？", "\n我想通过遍历各个节点，把他们保存到DB中，下次可以从库中读取树的机构信息。", "\n\n", "谢谢！"]], "Tag": "程序设计"}
{"Answer": "```\r\n onclick='addTab(e)'改为\r\nonclick='addTab(this)\r\n\r\n\r\nfunciton addTab(a){\r\nalert(a.innerHTML)\r\n//....\r\n}\r\n\r\n```", "Konwledge_Point": "循环控制", "Question": ["获取a标签的值，方法有哪些？？？", ["\n除了获取ID，还有什么方法？我想获取到a标签的“key”值。for循环可能会遍历生成很多个a标签，怎么才能实现点击一个a标签，就能获取到a标签当前的“key”值。求代码！"]], "Tag": "程序设计"}
{"Answer": "应该和c3p0没有关系的吧\r\n\r\n应该还是你的导入程序的问题, 之前做导入数据的时候\r\n也碰到类似的问题的\r\n\r\n当时导入数据是丢到callable里面执行的\r\n如果是这样线程里面错误， 是不提示错误日志也不打印的\r\n像程序停下来似的的\r\n\r\n你可以打断点执行看看是哪里错误", "Konwledge_Point": "循环控制", "Question": ["hibernate+c3p0连接池，插入数据程序运行一会就卡住", ["\n", "程序是一个导入Excel数据的工具，excel中有好几千条数据，但是程序运行一会，每次都是导入24条以后程序就不运行了，程序好像处于挂起状态一样，卡住了，控制台上也不再打印hibernate日志信息，不知道什么原因，有没有会的看一下，谢谢！", "\n", " ", "\n", " ", "\n", " ", "\n", "hibernate.cfg.xml配置如下：", "\n", "<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE hibernate-configuration PUBLIC\n        \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n        \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\">\n\n<hibernate-configuration>\n    <session-factory>\n\n        <!-- Database connection settings -->\n        <property name=\"connection.driver_class\">oracle.jdbc.driver.OracleDriver</property>\n        <property name=\"connection.url\">jdbc:oracle:thin:@127.0.0.1:1521:orcl</property>\n        <property name=\"connection.username\">bps</property>\n        <property name=\"connection.password\">bps</property>\n\n        <!-- SQL dialect -->\n        <property name=\"dialect\">org.hibernate.dialect.OracleDialect</property>\n\n        <!-- Echo all executed SQL to stdout -->\n        <property name=\"show_sql\">true</property>\n\n        <!-- Disable the second-level cache -->\n        <property name=\"cache.provider_class\">org.hibernate.cache.NoCacheProvider</property>\n\n        <!-- C3P0连接池设定 -->\n        <property name=\"hibernate.connection.provider_class\">org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider</property>\n        <property name=\"hibernate.c3p0.max_size\">100</property>\n        <property name=\"hibernate.c3p0.min_size\">30</property>\n        <property name=\"hibernate.c3p0.timeout\">5000</property>\n        <property name=\"hibernate.c3p0.max_statements\">100</property>\n        <property name=\"hibernate.c3p0.idle_test_period\">3000</property>\n        <property name=\"hibernate.c3p0.acquire_increment\">2</property>\n        <property name=\"hibernate.c3p0.validate\">false</property>\n\n        <!-- 映射文件 -->\n        ...\n    </session-factory>\n</hibernate-configuration>", "\n", " ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-constructor\"&gt;$(&amp;#39;#&lt;span class=\"hljs-params\"&gt;fianlatc&lt;/span&gt;&amp;#39;)&lt;/span&gt;.unbind&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;.click(async &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt; {\n        var btns &amp;#61; &lt;span class=\"hljs-constructor\"&gt;$(&amp;#39;#&lt;span class=\"hljs-params\"&gt;finalform&lt;/span&gt; .&lt;span class=\"hljs-params\"&gt;product&lt;/span&gt;-&lt;span class=\"hljs-params\"&gt;boxx&lt;/span&gt;:&lt;span class=\"hljs-params\"&gt;visible&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;input&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;atcbtn&lt;/span&gt;&amp;#39;)&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (var i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; btns.length; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-comment\"&gt;//await控制循序请求&amp;#xff0c;2秒点一个按钮&lt;/span&gt;\n            await click&lt;span class=\"hljs-constructor\"&gt;Button(&lt;span class=\"hljs-params\"&gt;btns&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;eq&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;)&lt;/span&gt;)\n        }\n        window.&lt;span class=\"hljs-keyword\"&gt;open&lt;/span&gt;(&amp;#39;/cart&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;_blank&amp;#39;);&lt;span class=\"hljs-comment\"&gt;///新窗口打开&amp;#xff0c;不过由于是异步操作&amp;#xff0c;可能会被拦击&amp;#xff0c;你试试&lt;/span&gt;\n    })\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["等待await循环结束后自动点击对应按钮", ["按完#fianlatc之后，等待await循环结束后，自动点击#viewcart", "\n", "\n", "<", "div", " ", "class", "=", "\"container\"", "\n     ", "id", "=", "\"finalform\"", "\n     ", "style", "=", "\"\"", ">", "\n", "<", "botton", " ", "id", "=", "\"fianlatc\"", " ", "class", "=", "\"custombtn\"", ">", "Add To Cart", "</", "botton", ">", "\n    ", "<", "div", " ", "class", "=", "\"product-boxx\"", "\n         ", "id", "=", "\"product-laptop\"", "\n         ", "style", "=", "\"\"", ">", "\n        ", "<", "p", " ", "class", "=", "\"producttitle\"", ">", "Laptop", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"productprice\"", ">", "$79.99 USD", "</", "p", ">", "\n  ", "<", "form", " ", "method", "=", "\"post\"", " ", "action", "=", "\"/cart/add\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"hidden\"", " ", "name", "=", "\"id\"", " ", "value", "=", "\"42749446029479\"", " />", "\n    ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"Add to cart\"", " ", "class", "=", "\"atcbtn\"", " />", "\n  ", "</", "form", ">", " \n    ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"product-boxx\"", "\n         ", "id", "=", "\"product-monitor\"", "\n         ", "style", "=", "\"display:none;\"", ">", "\n        ", "<", "p", " ", "class", "=", "\"producttitle\"", ">", "Monitor", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"productprice\"", ">", "$69.99 USD", "</", "p", ">", "\n  ", "<", "form", " ", "method", "=", "\"post\"", " ", "action", "=", "\"/cart/add\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"hidden\"", " ", "name", "=", "\"id\"", " ", "value", "=", "\"42749446029480\"", " />", "\n    ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"Add to cart\"", " ", "class", "=", "\"atcbtn\"", " />", "\n  ", "</", "form", ">", " \n    ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"product-boxx\"", "\n         ", "id", "=", "\"product-lapmon\"", "\n         ", "style", "=", "\"display:none;\"", ">", "\n        ", "<", "p", " ", "class", "=", "\"producttitle\"", ">", "Laptop", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"productprice\"", ">", "$99.99 USD", "</", "p", ">", "\n  ", "<", "form", " ", "method", "=", "\"post\"", " ", "action", "=", "\"/cart/add\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"hidden\"", " ", "name", "=", "\"id\"", " ", "value", "=", "\"42749446029481\"", " />", "\n    ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"Add to cart\"", " ", "class", "=", "\"atcbtn\"", " />", "\n  ", "</", "form", ">", " \n    ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"product-boxx\"", "\n         ", "id", "=", "\"product-monitor2\"", "\n         ", "style", "=", "\"display:none;\"", ">", "\n        ", "<", "p", " ", "class", "=", "\"producttitle\"", ">", "Laptop", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"productprice\"", ">", "$89.99 USD", "</", "p", ">", "\n  ", "<", "form", " ", "method", "=", "\"post\"", " ", "action", "=", "\"/cart/add\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"hidden\"", " ", "name", "=", "\"id\"", " ", "value", "=", "\"42749446029482\"", " />", "\n    ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"Add to cart\"", " ", "class", "=", "\"atcbtn\"", " />", "\n  ", "</", "form", ">", " \n    ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"product-boxx\"", "\n         ", "id", "=", "\"product-light\"", "\n         ", "style", "=", "\"\"", ">", "\n        ", "<", "p", " ", "class", "=", "\"producttitle\"", ">", "Laptop Light", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"productprice\"", ">", "$70.00 USD", "</", "p", ">", "\n  ", "<", "form", " ", "method", "=", "\"post\"", " ", "action", "=", "\"/cart/add\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"hidden\"", " ", "name", "=", "\"id\"", " ", "value", "=", "\"42749446029483\"", " />", "\n    ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"Add to cart\"", " ", "class", "=", "\"atcbtn\"", " />", "\n  ", "</", "form", ">", " \n    ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"product-boxx\"", "\n         ", "id", "=", "\"product-pad\"", "\n         ", "style", "=", "\"\"", ">", "\n        ", "<", "p", " ", "class", "=", "\"producttitle\"", ">", "Laptop pad", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"productprice\"", ">", "$39.99 USD", "</", "p", ">", "\n  ", "<", "form", " ", "method", "=", "\"post\"", " ", "action", "=", "\"/cart/add\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"hidden\"", " ", "name", "=", "\"id\"", " ", "value", "=", "\"42749446029484\"", " />", "\n    ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"Add to cart\"", " ", "class", "=", "\"atcbtn\"", " />", "\n  ", "</", "form", ">", " \n    ", "</", "div", ">", "\n    ", "<", "div", " ", "class", "=", "\"product-boxx\"", "\n         ", "id", "=", "\"product-micro\"", "\n         ", "style", "=", "\"\"", ">", "\n        ", "<", "p", " ", "class", "=", "\"producttitle\"", ">", "Laptop", "</", "p", ">", "\n        ", "<", "p", " ", "class", "=", "\"productprice\"", ">", "$39.99 USD", "</", "p", ">", "\n  ", "<", "form", " ", "method", "=", "\"post\"", " ", "action", "=", "\"/cart/add\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"hidden\"", " ", "name", "=", "\"id\"", " ", "value", "=", "\"42749446029485\"", " />", "\n    ", "<", "input", " ", "type", "=", "\"submit\"", " ", "value", "=", "\"Add to cart\"", " ", "class", "=", "\"atcbtn\"", " />", "\n  ", "</", "form", ">", " \n    ", "</", "div", ">", "\n", "<", "input", " ", "type", "=", "\"number\"", " ", "id", "=", "\"finalprice\"", ">", "\n", "<", "a", " ", "href", "=", "\"/cart\"", " ", "class", "=", "\"custombtn1\"", " ", "id", "=", "\"viewcart\"", " ", "target", "=", "\"_blank\"", ">", "View Carts", "</", "a", ">", "\n", "</", "div", ">", "\n \n \n", "<", "script", ">", "\n      ", "var", " kvLastImg = {\n        ", "laptop", ": {\n            ", "default", ": ", "''", ",\n            ", "lightyon", ": ", "''", ",\n            ", "tabletyon", ": ", "''", ",\n            ", "microyon", ": ", "''", ",\n            ", "lightyontabletyon", ": ", "''", ",\n            ", "lightyonmicroyon", ": ", "''", ",\n            ", "tabletyonmicroyon", ": ", "''", ",\n            ", "lightyontabletyonmicroyon", ": ", "''", "\n        },\n        ", "monitor", ": {\n            ", "default", ": ", "''", ",\n            ", "lightyon", ": ", "''", ",\n            ", "tabletyon", ": ", "''", ",\n            ", "microyon", ": ", "''", ",\n            ", "lightyontabletyon", ": ", "''", ",\n            ", "lightyonmicroyon", ": ", "''", ",\n            ", "tabletyonmicroyon", ": ", "''", ",\n            ", "lightyontabletyonmicroyon", ": ", "''", "\n        },\n        ", "laptopmonitor", ": {\n            ", "default", ": ", "''", ",\n            ", "lightyon", ": ", "''", ",\n            ", "tabletyon", ": ", "''", ",\n            ", "microyon", ": ", "''", ",\n            ", "lightyontabletyon", ": ", "''", ",\n            ", "lightyonmicroyon", ": ", "''", ",\n            ", "tabletyonmicroyon", ": ", "''", ",\n            ", "lightyontabletyonmicroyon", ": ", "''", "\n        },\n        ", "monitormonitor", ": {\n            ", "default", ": ", "''", ",\n            ", "lightyon", ": ", "''", ",\n            ", "tabletyon", ": ", "''", ",\n            ", "microyon", ": ", "''", ",\n            ", "lightyontabletyon", ": ", "''", ",\n            ", "lightyonmicroyon", ": ", "''", ",\n            ", "tabletyonmicroyon", ": ", "''", ",\n            ", "lightyontabletyonmicroyon", ": ", "''", "\n        }\n    }\n \n \n \n    ", "function", " ", "setSum", "(", ") {\n        ", "/////图片设置", "\n        ", "var", " step1option = $(", "\"input[name='equipment']:checked\"", ").", "val", "(), stepId;\n        ", "switch", " (step1option) {\n            ", "case", " ", "'laptop'", ": stepId = ", "'step2-laptop'", "; ", "break", ";\n            ", "case", " ", "'monitor'", ": stepId = ", "'step2-monitor'", "; ", "break", ";\n            ", "case", " ", "'laptopmonitor'", ": stepId = ", "'step2-lapmoni'", "; ", "break", ";\n            ", "case", " ", "'monitormonitor'", ": stepId = ", "'step2-monitor2'", "; ", "break", ";\n        }\n        ", "var", " imgItem = kvLastImg[step1option];", "//新图片节点", "\n        ", "var", " step2Div = $(", "'#'", " + stepId);", "//第二步对应的容器", "\n        ", "var", " addon = step2Div.", "find", "(", "'input.optioninput:checked'", ").", "map", "(", "function", " (", ") { ", "return", " ", "this", ".", "id", " }).", "get", "().", "join", "(", "''", ");", "//选中的addon", "\n        ", "if", " (!addon) addon = ", "'default'", ";\n        ", "var", " src = imgItem[addon];\n        ", "console", ".", "log", "(src)\n        $(", "'#step4img'", ").", "attr", "(", "'src'", ", src)\n      \n \n        ", "/////图片设置", "\n \n \n \n        ", "var", " sum = ", "0", ";\n        $(", "'#finalform .product-boxx:visible p.productprice'", ").", "each", "(", "function", " (", ") {\n            sum += ", "parseFloat", "(", "this", ".", "innerText", ".", "substring", "(", "1", "));\n        });\n        sum = sum.", "toFixed", "(", "2", ");", "//保留2位小数，防止浮点数计算精度丢失", "\n        $(", "'#finalprice'", ").", "val", "(sum)\n \n \n        $(", "'#fianlatc'", ").", "unbind", "().", "click", "(", "async", " ", "function", " (", ") {\n            ", "var", " btns = $(", "'#finalform .product-boxx:visible input.atcbtn'", ");\n            ", "for", " (", "var", " i = ", "0", "; i <btns.", "length", "; i++) {\n                ", "//await控制循序请求，2秒点一个按钮", "\n                ", "await", " ", "clickButton", "(btns.", "eq", "(i))\n            }\n        });\n\n       ", "setTimeout", "(", "function", "(", "){", "Globo", ".", "FormBuilder", ".", "showFloatingForm", "(", "document", ".", "body", ");},", "1000", ");\n    }\n\n    ", "function", " ", "clickButton", "(", "btn", ") {\n       ", "return", " ", "new", " ", "Promise", "(", "(", "resolve, reject", ") =>", " {\n            btn.", "trigger", "(", "'click'", ");\n           ", "setTimeout", "(resolve, ", "1000", ");\n        });\n    }\n  \n", "</", "script", ">", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我最近想了想&amp;#xff0c;退而求其次&amp;#xff0c;写了个用键盘控制鼠标左右移动的程序(根据观察&amp;#xff0c;发现对枪时或者移动时很少鼠标上下移动&amp;#xff0c;绝大部分都是左右移动)&amp;#xff0c;移动固定的值就可以记录鼠标移动了。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["如何通过python记录下在FPS游戏中的鼠标移动数据？", ["我想通过python来记录在csgo中的鼠标移动数据，但是尝试过很多方法，效果不是很好。", "刚开始我用的是win32api.GetCursorPos()写在循环中实时获得鼠标的坐标，csgo用的是Direct3D，在游戏中鼠标的坐标是固定的（或者说移动后会立刻回到屏幕中心），所以我通过以下代码来获取鼠标移动数据：", "\n", "#第一次获得鼠标坐标，即屏幕中心坐标\n\ntarget_pos = win32api", ".GetCursorPos", "()\nwhile True:\n  mouse_pos = win32api", ".GetCursorPos", "()\n  #求差值\n  mouse_moves", ".append", "((mouse_pos", "[0]", " - target_pos", "[0]", ",mouse_pos", "[1]", " - target_pos", "[1]", "))\n", "\n", "通过以上代码就可以获得每一帧鼠标的偏移量，然后反向移动达到回放鼠标移动的效果。", "\n", "for", " mouse_move in mouse_moves: \n  ", "#加上负号反向移动", "\n  ", "win32api", ".mouse_event(win32con.MOUSEEVENTF_MOVE,-mouse_move[", "0", "],-mouse_move[", "1", "],", "0", ",", "0", ")\n", "\n", "然而实际效果与预期严重不符，视角直接旋转了起来，根本无法复原之前的鼠标移动。", "\n", "我想请问一下还有其他办法可以记录鼠标移动吗，或者说这个方法可以改进一下吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while&amp;#43;if else if 就完事了&lt;br /&gt;自己做做试试&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Python在线提问", ["有家电影院不到3岁免费，3—12岁十美元，大于12岁收费15美元。请写一个循环。条件如下：", "\n", "1在while循环中使用条件测试来结束循环", "2在使用变量active来控制循环结束的时机", "3使用break语句来控制循环结束得时机"]], "Tag": "程序设计"}
{"Answer": "原因终于找到了，是自己没有理解清楚线程挂起的概念。第一次执行线程B的时候，会while条件判断进入，然后挂起，并没有执行printer.printB(),当线程A唤醒线程B时，线程B从挂起时刻的代码处继续往后执行（执行printer.printB（），完成之前被挂起的任务），而不是重新开始执行run()，也就是说，不会再进行while条件判断，最后再次进入while循环。", "Konwledge_Point": "循环控制", "Question": ["多线程问题：使用两个线程交替打印A和B，使用最大打印次数控制，详见代码。", ["多线程问题：使用两个线程交替打印A和B，使用最大打印次数控制，详见代码。", "\n出现的问题是：当运行线程B中的run()方法时，程序没有先while()判断，而是直接进入了while循环体。", "\n\n", " /**\n * 共享资源：打印机\n * @author Tangxkun\n *\n */\npublic class Printer {\n\n    //最大打印次数\n    private final int MAX_COUNT = 7;\n    //false表示该打印机未打印A,true表示该打印机正在打印A\n    private boolean printingA = false;\n    private int count = 0;\n\n    public synchronized void printA(){\n        System.out.print(count++);\n        printingA = true;\n        System.out.print(\"A-\");\n        notifyAll();\n    }\n    public synchronized void printB(){\n        System.out.print(count++);\n        printingA = false;\n        System.out.print(\"B-\");\n        notifyAll();\n    }\n    public synchronized void aWaiting() throws InterruptedException{\n        while(printingA == true){\n            wait();\n        }\n    }\n    public synchronized void bWaiting() throws InterruptedException{\n        while(printingA == false){\n            wait();\n        }\n    }\n\n    public int getCount() {\n        return count;\n    }\n    public void setCount(int count) {\n        this.count = count;\n    }\n    public int getMAX_COUNT() {\n        return MAX_COUNT;\n    }\n}\n", "\n\n", " /**\n * 打印A的线程\n * @author Tangxkun\n *\n */\npublic class PrintA implements Runnable{\n\n    private Printer printer;\n\n    public PrintA(Printer printer) {\n        super();\n        this.printer = printer;\n    }\n\n    @Override\n    public void run() {\n        while(printer.getCount() < printer.getMAX_COUNT()){\n\n            printer.printA();\n\n            try {\n                printer.aWaiting();\n            } catch (InterruptedException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n\n        }\n    }\n\n}\n", "\n\n", " /**\n * 打印B的线程\n * @author Tangxkun\n *\n */\npublic class PrintB implements Runnable{\n\n    private Printer printer;\n\n    public PrintB(Printer printer) {\n        super();\n        this.printer = printer;\n    }\n\n    @Override\n    public void run() {\n        while(printer.getCount() < printer.getMAX_COUNT()){\n\n            try {\n                printer.bWaiting();\n            } catch (InterruptedException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            printer.printB();\n\n        }\n    }\n\n}\n", "\n\n", " /**\n * 测试代码\n * @author Tangxkun\n *\n */\npublic class Test {\n\n    public static void main(String[] args) {\n\n        Printer printer = new Printer();\n        PrintA printA = new PrintA(printer);\n        PrintB printB = new PrintB(printer);\n\n        Thread threadA = new Thread(printA,\"A\");\n        Thread threadB = new Thread(printB, \"B\");\n\n        threadA.start();\n        threadB.start();\n\n    }\n}\n", "\n\n", "当设置MAX_COUNT=5时，输出结果为：", "\n\n", "当设置MAX_COUNT=6时，输出结果为：", "\n\n", "当设置MAX_COUNT=7时，输出结果为：", "\n\n", "烧脑了半天还是没有找出端倪，所以来请教一下各位大神！"]], "Tag": "程序设计"}
{"Answer": "用serialport控件，用不着多线程。当数据到达，会触发dataarrived事件，不需要轮询。", "Konwledge_Point": "循环控制", "Question": ["求教c#多线程操作串口的方法", ["需求是这样的。", "\n1.有一个UI的主线程 。里面需要调用 串口通信。往里面发送消息。", "\n2.另一方满我需要循环去取该串口有没有新的消息发送过来。然后将发送过来的消息传递给UI的主线程。", "\nc#新手。请教各位。该怎么实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/Brave_Runer/article/details/106323508?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522165573617916781818788120%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id&amp;#61;165573617916781818788120&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~blog~sobaiduend~default-1-106323508-null-null.nonecase&amp;amp;utm_term&amp;#61;C51&amp;#43;%E4%BA%A4%E9%80%9A%E7%81%AF&amp;amp;spm&amp;#61;1018.2226.3001.4450\" id=\"textarea_1655736201950_1655736237258_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;C51单片机实验-交通灯控制_Jarton Ma的博客-CSDN博客_单片机交通灯控制&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;实验目的&amp;#xff1a;学习模拟交通灯控制的实现方法&amp;#xff1b;掌握Proteus硬件仿真与调试。任务&amp;#xff1a;根据要求编写程序&amp;#xff0c;并写出原理性注释&amp;#xff1b;将检查程序运行的结果&amp;#xff0c;分析一下是否正确&amp;#xff1b;完成所建工程的仿真及调试。实验内容按照电路要求在Protues中设计电路图。编程实现如下功能&amp;#xff1a;用单片机端口作输出口&amp;#xff0c;控制四个方向共12个发光二极管亮灭&amp;#xff0c;模拟交通灯管理。功能描述如下&amp;#xff1a;初始态为四个路口的红灯全亮之后&amp;#xff0c;东西路口的绿灯亮&amp;#xff0c;南北路口的红灯亮&amp;#xff0c;东西路口方向通车&amp;#xff0c;延时一段时间后东西路口的绿灯熄灭&amp;#xff0c;黄灯开始闪烁&amp;#xff0c;闪烁若干次后&amp;#xff0c;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/Brave_Runer/article/details/106323508?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522165573617916781818788120%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id&amp;#61;165573617916781818788120&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~blog~sobaiduend~default-1-106323508-null-null.nonecase&amp;amp;utm_term&amp;#61;C51&amp;#43;%E4%BA%A4%E9%80%9A%E7%81%AF&amp;amp;spm&amp;#61;1018.2226.3001.4450&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c51单片机控制交通灯，不要显示管的", ["当按下开始按钮后交通灯开始工作，东西绿灯亮4秒后闪4秒灭，黄灯亮2秒灭，红灯亮10秒，依此循环。与此同时南北向红灯亮10秒，接着绿灯亮4秒后 灭，黄灯亮2秒，此后依此循环。"]], "Tag": "程序设计"}
{"Answer": "比如：\r\n&lt;html&gt;   \r\n&lt;head&gt;   \r\n&lt;/head&gt;   \r\n  \r\n&lt;body&gt;   \r\n&lt;input type ='button' value = 'test1' onclick =doClick()&gt;&lt;/input&gt;   \r\n&lt;script&gt;   \r\nfunction openwin(){   \r\n    window.open('E:/mytest/check.html','a');   \r\n    window.open('E:/mytest/check.html','b');   \r\n    window.open('E:/mytest/check.html','c');   \r\n}   \r\n&lt;/script&gt;   \r\n&lt;/body&gt;   \r\n&lt;/html&gt;", "Konwledge_Point": "循环控制", "Question": ["js中使用window.open打开多个页面", ["在网上搜一个例子：", "http://www.moon-soft.com/Book/javascripths.htm", "\n\n", "【4、同时弹出2个窗口】", "\n\n", "对源代码稍微改动一下：", "\n\n\n<!--\nfunction openwin() {\nwindow.open (\"page.html\", \"newwindow\", \"height=100, width=100, top=0, left=0,toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no\")\n//写成一行\nwindow.open (\"page2.html\", \"newwindow2\", \"height=100, width=100, top=100, left=100,toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, status=no\")\n//写成一行\n}\n//-->\n", "为避免弹出的2个窗口覆盖，用top和left控制一下弹出的位置不要相互覆盖即可。最后用上面说过的四种方法调用即可。", "\n注意：2个窗口的name(newwindows和newwindow2)不要相同，或者干脆全部为空。 ", "\n\n", "尝试简单修改了一下", "\n\n", "[code=\"java\"]", "\nfunction openwin(){\n    window.open('E:/mytest/check.html');\n    window.open('E:/mytest/check.html');\n    window.open('E:/mytest/check.html');\n}\n", "\n[/code]", "\n\n", "在ie8里却打不开多个页面,只打开了一个。(ie7有些版本能打开，有些版本不能)。也尝试过改为不同的文件名，也只打开头一个页面，后两个就打不开了。为什么会这样？如果要实现这个效果，要程序要怎么写。", "\n向各位高手请教，先谢了～～"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这不都是跳同一个链接吗&amp;#xff0c;只是后面参数不一样&amp;#xff0c;?前面是地址&amp;#xff0c;?后面是参数&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/846313413936175.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["为什么这里的循环链接，所有的链接点进去总是第一个链接？", ["\n", "<", "style", ">", "\n", "html", " ", "body", " {\n    ", "margin", ": ", "0", ";\n    ", "padding", ": ", "0", ";\n}\n", "li", "{\n    ", "list-style", ": none;\n}\n", ".div1", "{\n    ", "width", ": ", "100%", ";\n    ", "height", ": ", "200px", ";\n    ", "margin", ": ", "0px", " auto;\n    ", "position", ": relative;\n    ", "border", ": ", "1px", " solid black;\n\n}\n", ".div1", " ", "img", " {\n    ", "width", ": ", "100%", ";\n    ", "height", ": ", "200px", ";\n    ", "position", ": absolute;\n}\n", ".div1", " ", "ul", "{\n    ", "position", ": absolute;\n    ", "bottom", ": ", "10px", ";\n    ", "z-index", ": ", "10", ";\n}\n", ".div1", " ", "ul", " ", "li", " {\n    ", "width", ": ", "15px", ";\n    ", "height", ": ", "15px", ";\n    ", "line-height", ": ", "15px", ";\n    ", "border-radius", ": ", "50%", ";\n    ", "float", ": left;\n    ", "background-color", ": white;\n    ", "margin-right", ": ", "5px", ";\n    ", "cursor", ": pointer;\n    ", "text-align", ": center;\n}\n", "</", "style", ">", "\n", "<", "table", " ", "width", "=", "\"100%\"", " ", "border", "=", "\"0\"", " ", "cellspacing", "=", "\"0\"", " ", "cellpadding", "=", "\"0\"", ">", "\n              ", "<", "tr", ">", "\n                ", "<", "td", " ", "align", "=", "\"left\"", ">", "\n                ", "<", "div", " ", "class", "=", "\"div1\"", " ", "id", "=", "\"div1\"", ">", "\n                    {foreach from=$toplunbocms item=cms}\n//为什么这里的循环链接，所有的链接点进去总是第一个链接？\n                        ", "<", "a", " ", "href", "=", "\"/show.php?cms_id={$cms.id}&id={$user_id}&{$syurl}\"", ">", "<", "img", " ", "src", "=", "\"{$cms.pic}\"", " />", "</", "a", ">", "\n                    {/foreach}\n                    ", "<", "ul", ">", "\n                        {foreach from=$toplunbocms item=cms}\n                            ", "<", "li", ">", "{$cms.sl}", "</", "li", ">", "\n                        {/foreach}\n                    ", "</", "ul", ">", "\n                ", "</", "div", ">", "\n                ", "<", "SCRIPT", " ", "language", "=", "JavaScript", " ", "src", "=", "\"/js/lunbo_mob.js?v={$suiji_code}\"", ">", "</", "SCRIPT", ">", "\n                ", "</", "td", ">", "\n              ", "</", "tr", ">", "\n            ", "</", "table", ">", "\n", "<", "script", ">", "\n", "var", " div1 = ", "document", ".", "getElementById", "(", "\"div1\"", ");", "//整个区域", "\n    ", "var", " a1 = div1.", "getElementsByTagName", "(", "\"a\"", ");", "//a标签 图片", "\n    ", "var", " li1 = div1.", "getElementsByTagName", "(", "\"li\"", ");", "//右下角按钮", "\n    ", "var", " ab = ", "0", "; ", "//ab的值控制触摸按钮后的下一张图", "\n    ", "//遍历所有图和按钮,页面加载完毕显示第一张图和第一个按钮", "\n    $(", "document", ").", "ready", "(", "function", "(", "){\n        ", "for", " (", "var", " i=", "0", ";i<a1.", "length", ";i++){\n            ", "if", " (i!=", "0", "){\n            a1[i].", "style", ".", "opacity", " = ", "0", ";\n            }", "else", " {\n                li1[i].", "style", ".", "backgroundColor", " = ", "\"green\"", ";\n            }\n        }\n    })\n    ", "//运行函数bb();", "\n    ", "function", " ", "bb", "(", ") {\n     ", "for", " (", "var", " j=", "0", ";j<li1.", "length", ";j++) {\n         ", "//遍历所有的按钮,所有按钮都给绑定一个鼠标移上去的onmouseover事件", "\n         li1[j].", "onmouseover", " = ", "function", " (", ") {\n             ", "//变量index就是当前触摸的按钮的文本-1,此前特意设置按钮文本为数字", "\n             ", "var", " index = ", "this", ".", "innerHTML", " - ", "1", ";\n             ab = index; ", "//ab后面用return返回", "\n             ", "//声明变量b", "\n             ", "for", " (", "var", " b = ", "0", "; b < li1.", "length", "; b++) {\n                 ", "//当b就是被触摸到的按钮的索引号时,设置第b张图片不透明度为100,渐变透明度效果1s,第b个按钮背景色变成green", "\n                 ", "if", " (b == index) {\n                     a1[b].", "style", ".", "opacity", " = ", "100", ";\n                     a1[b].", "style", ".", "transition", " = ", "\"opacity 1s\"", ";\n                     li1[b].", "style", ".", "backgroundColor", " = ", "\"green\"", ";\n                 } ", "else", " { ", "//当b不是被触摸到的按钮的索引号时,就变透明,按钮颜色白色.", "\n                     a1[b].", "style", ".", "opacity", " = ", "0", ";\n                     li1[b].", "style", ".", "backgroundColor", " = ", "\"white\"", ";\n                 }\n             }\n             ", "return", " ab; ", "//返回ab,貌似运用到了闭包?不太了解.", "\n         }\n\n     }\n      ", "setInterval", "(", "function", " ", "ac", "(", ") { ", "//设置2000毫秒重复运行", "\n                ab = ab>li1.", "length", "-", "2", "?", "0", ":++ab; ", "//5张图,当触摸到的按钮索引号大于3时(比如4),那么ab=0(下一张图为第0张),否则++ab;", "\n         ", "//循环遍历下一张图的效果.", "\n                ", "for", " (", "var", " b = ", "0", "; b < li1.", "length", "; b++) {\n                    ", "if", " (b == ab) {\n                        a1[b].", "style", ".", "opacity", " = ", "100", ";\n                        a1[b].", "style", ".", "transition", " = ", "\"opacity 1s\"", ";\n                        li1[b].", "style", ".", "backgroundColor", " = ", "\"green\"", ";\n                    } ", "else", " {\n                        a1[b].", "style", ".", "opacity", " = ", "0", ";\n                        li1[b].", "style", ".", "backgroundColor", " = ", "\"white\"", ";\n                    }\n                }\n            },", "3000", ");\n    }\n    ", "bb", "(); ", "//运行bb()", "\n", "</", "script", ">", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我给另一个例子你看看参考一下吧&amp;#xff0c;是一个实际应用&amp;#xff0c;多线程生成随机4位字符串&amp;#xff0c;然后通过外部输入中断线程&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; threading\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; time\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; random\n\n&lt;span class=\"hljs-keyword\"&gt;loop&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\ndef createStr(n,thread_num):\n    &lt;span class=\"hljs-built_in\"&gt;global&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;loop&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;loop&lt;/span&gt;:\n        str &amp;#61; random.sample(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.ascii_letters &amp;#43; &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.digits, n)\n        print(thread_num,&lt;span class=\"hljs-string\"&gt;&amp;#39;---------&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;(str).lower())\n        time.sleep(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n\ndef stop():\n    &lt;span class=\"hljs-built_in\"&gt;global&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;loop&lt;/span&gt;\n    q &amp;#61; input()\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; q &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;q&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;loop&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n        \nt1 &amp;#61; threading.&lt;span class=\"hljs-keyword\"&gt;Thread&lt;/span&gt;(target&amp;#61;createStr,  args&amp;#61;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,))\nt1.start()\n\nt2 &amp;#61; threading.&lt;span class=\"hljs-keyword\"&gt;Thread&lt;/span&gt;(target&amp;#61;createStr, args&amp;#61;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,))\nt2.start()\n\nt3 &amp;#61; threading.&lt;span class=\"hljs-keyword\"&gt;Thread&lt;/span&gt;(target&amp;#61;stop,  args&amp;#61;())\nt3.start()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python如何在多线程下完成键盘输入", ["我建立了两个无限循环，然后让多线程同时进行这两个循环，如果我要获取键盘输入之类的操作，该怎么进行修改代码呢？下边是我写的内容，但运行结果不对（遇到input后线程1直接被阻塞了……）", "\n", "import threading\nimport ", "time", "\n\ndef circle_1():\n    ", "while", "(True):\n        ", "print", "(", "\"线程_1\"", ")\n        ", "if", "(", "input", "() == ", "0", "):\n            break\n        time.", "sleep", "(", "0.1", ")\n\ndef ", "circle_2", "():\n    ", "while", "(True):\n        ", "print", "(", "\"线程_2\"", ")\n        time.", "sleep", "(", "0.1", ")\n\nthread1 = threading.", "Thread", "(target=circle_1)\nthread1.", "start", "()\nthread2 = threading.", "Thread", "(target=circle_2)\nthread2.", "start", "()\n", "\n", "运行结果如下：", "\n", "\n", "怎么修改才在多线程下完成键盘输入呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;权限信息中三个选中信息时菜单信息的结果&amp;#xff0c;没办法正常显示&lt;/p&gt;\n\n&lt;p&gt;这句话都不明白什么意思。&lt;/p&gt;\n\n&lt;p&gt;角色的权限信息和菜单信息什么关系&amp;#xff0c;交互逻辑是什么&amp;#xff1f;&lt;br /&gt;\n你选中中间的&amp;#xff0c;期望出现什么&amp;#xff0c;没有出现什么&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["elementui<el-tabs>多个tab无法正确获取动态数据", ["\n", "<div class=\"add-form\">\n                <el-dialog title=\"编辑角色\" :visible.sync=\"dialogFormVisible4Edit\">\n                    <template>\n                        <el-tabs v-model=\"activeName\" type=\"card\" @tab-click=\"handleClick\">\n                            <el-tab-pane label=\"基本信息\" name=\"first\">\n                                <el-form label-position=\"right\" label-width=\"100px\">\n                                    <el-row>\n                                        <el-col :span=\"12\">\n                                            <el-form-item label=\"角色名称\">\n                                                <el-input v-model=\"formData.name\"/>\n                                            </el-form-item>\n                                        </el-col>\n                                    </el-row>\n                                    <el-row>\n                                        <el-col :span=\"24\">\n                                            <el-form-item label=\"关键字\">\n                                                <el-input v-model=\"formData.keyWord\" type=\"textarea\"></el-input>\n                                            </el-form-item>\n                                        </el-col>\n                                    </el-row>\n                                    <el-row>\n                                        <el-col :span=\"24\">\n                                            <el-form-item label=\"说明\">\n                                                <el-input v-model=\"formData.description\" type=\"textarea\"></el-input>\n                                            </el-form-item>\n                                        </el-col>\n                                    </el-row>\n                                </el-form>\n                            </el-tab-pane>\n                            <el-tab-pane label=\"权限信息\" name=\"second\">\n                                <div class=\"checkScrol\">\n                                    <table class=\"datatable\">\n                                        <thead>\n                                        <tr>\n                                            <th>选择</th>\n                                            <th>权限名</th>\n                                            <th>关键字</th>\n                                            <th>说明</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr v-for=\"c in permissionData\">\n                                            <td>\n                                                <input :id=\"c.id\" v-model=\"permissions\" type=\"checkbox\" :value=\"c.id\">\n                                            </td>\n                                            <td><label :for=\"c.id\">{{c.name}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.keyWord}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.description}}</label></td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </el-tab-pane>\n                            <el-tab-pane  label=\"菜单信息\" name=\"third\">\n                                <div class=\"checkScrol\">\n                                    <table class=\"datatable\">\n                                        <thead>\n                                        <tr>\n                                            <th>选择</th>\n                                            <th>菜单名</th>\n                                            <th>跳转页面</th>\n                                            <th>path</th>\n                                            <th>同级菜单中的优先级</th>\n                                            <th>父级菜单</th>\n                                            <th>菜单等级</th>\n                                            <th>说明</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        <tr v-for=\"c in menuDate\">\n                                            <td>\n                                                <input :id=\"c.id\" v-model=\"menus\" type=\"checkbox\" :value=\"c.id\">\n                                            </td>\n                                            <td><label :for=\"c.id\">{{c.name}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.linkUrl}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.path}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.priority}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.parentMenuId}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.level}}</label></td>\n                                            <td><label :for=\"c.id\">{{c.description}}</label></td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </el-tab-pane>\n                        </el-tabs>\n                    </template>\n                    <div slot=\"footer\" class=\"dialog-footer\">\n                        <el-button @click=\"dialogFormVisible4Edit = false\">取消</el-button>\n                        <el-button type=\"primary\" @click=\"handleEdit()\">确定</el-button>\n                    </div>\n                </el-dialog>\n            </div>", "\n\n", "请求", "\n\n", "\n", "let vue = new Vue({\n        el: '#app',\n        data: {\n            activeName: 'first',//添加/编辑窗口Tab标签名称\n            dataList: [],//列表数据\n            formData: {},//表单数据\n            permissionData: [],//新增和编辑表单中对应的权限信息列表数据\n            menuDate: [],//新增和编辑表单中对应的菜单信息列表数据\n            permissions: [],//新增和编辑表单中权限对应的复选框，基于双向绑定可以进行回显和数据提交\n            menus: [],//新增和编辑表单中菜单对应的复选框，基于双向绑定可以进行回显和数据提交\n            dialogFormVisible: false,//控制添加窗口显示/隐藏\n            dialogFormVisible4Edit: false//控制编辑窗口显示/隐藏\n        },\n        created() {\n            this.findPage();\n        },\n        methods: {\n            // 弹出编辑窗口\n            handleUpdate(row) {\n                this.dialogFormVisible4Edit = true;\n                this.activeName = \"first\";\n                let id = row.id;\n                //获取权限页面的权限列表\n                axios.get(`/permission/findAllList.do`).then(response => {\n                    if (response.data.flag) {//查询成功\n                        this.permissionData = response.data.data;\n                        //获取角色中包含的权限的列表，用于页面复选框回显List<int>\n                        axios.get(`/roles/findPermissionCheckedList.do?id=${row.id}`).then((response) => {//获取角色中已选择的权限的列表\n                            this.permissions = response.data;\n                        });\n                        console.log(response)\n                    } else {\n                        this.$message.error(response.data.message);\n                    }\n                });\n                //获取菜单页面的菜单列表\n                axios.get(`/menu/findAllList.do`).then(response => {\n                    if (response.data.flag) {//查询成功\n                        this.menuDate = response.data.data;\n                        //获取角色中包含的权限的列表，用于页面复选框回显List<int>\n                        axios.get(`/roles/findMenuCheckedList.do?id=${row.id}`).then((response) => {//获取角色中已选择的权限的列表\n                            this.permissions = response.data;//上表面的方法也可以啊????????????????\n                        });\n\n                    } else {\n                        this.$message.error(response.data.message);\n                    }\n                });\n\n                //获取角色信息，页面回显旧数据\n                axios.get(`/roles/findRoleById.do?id=${id}`).then(response => {\n                    if (response.data.flag) {//查询成功\n                        this.formData = response.data.data;\n                    } else {\n                        this.$message.error(response.data.message)\n                    }\n                })\n\n            }\n        }\n    })", "\n\n", "结果", "\n\n", "\n\n", "\n\n", "权限信息中三个选中信息时菜单信息的结果，没办法正常显示"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;huiwen&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b,c;\n    c &amp;#61; d;\n    b &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n    {\n        a &amp;#61; c%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        b &amp;#61; b*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; a;\n        c &amp;#61; c/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    }&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(c&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d &amp;#61;&amp;#61; b)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    }\n}\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&amp;#xff09;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; a;i&amp;lt;&amp;#61;b;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(huiwen(i) &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n            {\n              cout&amp;lt;&amp;lt;endl;\n              n&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            }\n            cout&amp;lt;&amp;lt;setw(&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;)&amp;lt;&amp;lt;i;\n            n&amp;#43;&amp;#43;;\n        }\n    }&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["循环结构设计（用简单的程序，我刚刚入门，鞠躬god）", ["输入a,b, 寻找并输出a~b之间的回文数m，输出时控制5个数一行。‪‬‪‬‪‬‪‬‪‬‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‬‫‬‬‪‬‪‬‪‬‪‬‪‬‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‬‪‬‬", "回文数的判断方法：10取余的方法，从最低位开始，依次取出该数的各位数字。按反序重新构成新的数，比较与原数是否相等，若相等，则原数为回文。‪‬‪‬‪‬‪‬‪‬‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‬‫‬‬‪‬‪‬‪‬‪‬‪‬‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‬‪‬‬", "输出格式要求：", "cout<<setw(8)<<n;  "]], "Tag": "程序设计"}
{"Answer": "楼主，我亲测了一下，并且温习了java的try-catch 异常机制。从你这个Demo来看：\r\n第一个catch中：\r\n\t\t\t如果有 input.nextLine();，当你输入字符串 a 时，抛出异常并被抓取，程序从\r\n\t\t\tSystem.out.print(\"请输入除数：\");  到  continueInput = false; 都不会执行，而是跳到 第一个catch块中执行System.out.println(\"输入非法，请输入正确的数值\");input.nextLine();后台等待你输入。\r\n\t\t\t如果没有input.nextLine();当你输入 字符串 a 时，程序从\r\n\t\t\t\t\tSystem.out.print(\"请输入除数：\");  到  continueInput = false; 都不会执行，而是跳到 第一个catch块中执行System.out.println(\"输入非法，请输入正确的数值\");i此时 continueInput = true；循环并没有结束，所以只会执行System.out.print(\"请输入被除数：\");  和System.out.println(\"输入非法，请输入正确的数值\");这两句。\r\n第二个catch中：\r\n\t\t\t如果有：input.nextLine(); 此时除数为 0，程序会在 result = num1 / num2;时会抛出异常并被第二个catch块catch；try块后面的不会执行，也就是continueInput = false；不会执行，而跳到catch块执行System.out.println(\"除数不能为0，清重新输入！\"); input.nextLine();并等待你的输入；\r\n\t\t\t如果没有：input.nextLine();跟上面相同，程序会在 result = num1 / num2;时会抛出异常并被第二个catch块catch；try块后面的不会执行，也就是continueInput = false；不会执行，而跳到catch块执行System.out.println(\"除数不能为0，清重新输入！\"); 但此时 continueInput = ture；\r\n\t\t\t循环继续，程序执行System.out.print(\"请输入被除数：\"); num1 = input.nextInt(); 此时后台等待你的输入。", "Konwledge_Point": "循环控制", "Question": ["关于变量放弃当前值的问题，请教一下各位", ["我的问题是，对于第一个catch中，如果不添加input.nextLine()这句，在输入错误如输", "\n入一个a的情况下，程序会死循环而不是正常的进入阻塞待我重新输入，而第二个", "\ncatch则不用添加这句话，我想问一下这是为什么？请教大家，谢谢。", "\n代码如下：", "\npublic class Demo {", "\n    public static void main(String[] args) {", "\n        Scanner input = new Scanner(System.in);", "\n        int num1 = 0;", "\n        int num2 = -1;", "\n        int result = 0;", "\n        boolean continueInput = true;", "\n\n", "    do {\n        try {\n            System.out.print(\"请输入被除数：\");\n            num1 = input.nextInt();\n            System.out.print(\"请输入除数：\");\n            num2 = input.nextInt();\n            result = num1 / num2;\n            continueInput = false;\n        } catch (InputMismatchException ex) {\n            System.out.println(\"输入非法，请输入正确的数值\");\n            input.nextLine();\n        } catch (ArithmeticException ex) {\n            System.out.println(\"除数不能为0，清重新输入！\");\n        }\n    } while (continueInput);\n\n    System.out.println(\"result = \" + result);\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "主要是修改Draw()方法，drawBitmap(...)需要改为drawCircle(...)\r\n以下是修改的代码，仅供参考：\r\n\r\nimport android.app.Activity;\r\n\r\nimport android.content.Context;\r\n\r\nimport android.content.pm.ActivityInfo;\r\n\r\nimport android.graphics.Bitmap;\r\n\r\nimport android.graphics.BitmapFactory;\r\n\r\nimport android.graphics.Canvas;\r\n\r\nimport android.graphics.Color;\r\n\r\nimport android.graphics.Paint;\r\n\r\nimport android.hardware.Sensor;\r\n\r\nimport android.hardware.SensorEvent;\r\n\r\nimport android.hardware.SensorEventListener;\r\n\r\nimport android.hardware.SensorManager;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport android.view.SurfaceHolder;\r\n\r\nimport android.view.SurfaceView;\r\n\r\nimport android.view.Window;\r\n\r\nimport android.view.WindowManager;\r\n\r\nimport android.view.SurfaceHolder.Callback;\r\n\r\npublic class SurfaceViewAcitvity extends Activity {\r\n        MyView mAnimView = null;\r\n\r\n        @Override\r\n        public void onCreate(Bundle savedInstanceState) {\r\n            super.onCreate(savedInstanceState);\r\n// 全屏显示窗口\r\n            requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,\r\n                    WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n//强制横屏\r\n            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\r\n\r\n// 显示自定义的游戏View\r\n            mAnimView = new MyView(this);\r\n            setContentView(mAnimView);\r\n        }\r\n\r\n        public class MyView extends SurfaceView implements Callback,Runnable ,SensorEventListener{\r\n\r\n            /**每50帧刷新一次屏幕**/\r\n            public static final int TIME_IN_FRAME = 50;\r\n\r\n            /** 游戏画笔 **/\r\n            Paint mPaint = null;\r\n            Paint mTextPaint = null;\r\n            SurfaceHolder mSurfaceHolder = null;\r\n\r\n            /** 控制游戏更新循环 **/\r\n            boolean mRunning = false;\r\n\r\n            /** 游戏画布 **/\r\n            Canvas mCanvas = null;\r\n\r\n            /**控制游戏循环**/\r\n            boolean mIsRunning = false;\r\n\r\n            /**SensorManager管理器**/\r\n            private SensorManager mSensorMgr = null;\r\n            Sensor mSensor = null;\r\n\r\n            /**手机屏幕宽高**/\r\n            int mScreenWidth = 0;\r\n            int mScreenHeight = 0;\r\n\r\n            /**小球资源文件越界区域**/\r\n            private int mScreenBallWidth = 0;\r\n            private int mScreenBallHeight = 0;\r\n\r\n            /**游戏背景文件**/\r\n            //private Bitmap mbitmapBg;\r\n\r\n            private int mCircleRadius = 48;\r\n\r\n            private int mCircleColor = Color.CYAN;\r\n            private Paint mCirclePaint = new Paint();\r\n\r\n            private int mBackgroundColor = Color.DKGRAY;\r\n\r\n            /**小球资源文件**/\r\n           // private Bitmap mbitmapBall;\r\n\r\n            /**小球的坐标位置**/\r\n            private float mPosX = 200;\r\n            private float mPosY = 0;\r\n\r\n            /**重力感应X轴 Y轴 Z轴的重力值**/\r\n            private float mGX = 0;\r\n            private float mGY = 0;\r\n            private float mGZ = 0;\r\n\r\n\r\n\r\n            public MyView(Context context) {\r\n                super(context);\r\n                /** 设置当前View拥有控制焦点 **/\r\n                this.setFocusable(true);\r\n                /** 设置当前View拥有触摸事件 **/\r\n                this.setFocusableInTouchMode(true);\r\n                /** 拿到SurfaceHolder对象 **/\r\n                mSurfaceHolder = this.getHolder();\r\n                /** 将mSurfaceHolder添加到Callback回调函数中 **/\r\n                mSurfaceHolder.addCallback(this);\r\n                /** 创建画布 **/\r\n                mCanvas = new Canvas();\r\n                /** 创建曲线画笔 **/\r\n                mPaint = new Paint();\r\n                mPaint.setColor(Color.WHITE);\r\n\r\n                mCirclePaint.setColor(mCircleColor);\r\n                /**加载小球资源**/\r\n                //mbitmapBall = BitmapFactory.decodeResource(this.getResources(), R.mipmap.ic_launcher);\r\n                /**加载游戏背景**/\r\n               // mbitmapBg = BitmapFactory.decodeResource(this.getResources(),  R.drawable.switch_thumb_pressed_holo_light);\r\n\r\n                /**得到SensorManager对象**/\r\n                mSensorMgr = (SensorManager) getSystemService(SENSOR_SERVICE);\r\n                mSensor = mSensorMgr.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\r\n                // 注册listener，第三个参数是检测的精确度\r\n                //SENSOR_DELAY_FASTEST 最灵敏 因为太快了没必要使用\r\n                //SENSOR_DELAY_GAME    游戏开发中使用\r\n                //SENSOR_DELAY_NORMAL  正常速度\r\n                //SENSOR_DELAY_UI          最慢的速度\r\n                mSensorMgr.registerListener(this, mSensor, SensorManager.SENSOR_DELAY_GAME);\r\n            }\r\n\r\n            private void Draw() {\r\n\r\n                /**绘制游戏背景**/\r\n                //mCanvas.drawBitmap(mbitmapBg,0,0, mPaint);\r\n                mCanvas.drawColor(mBackgroundColor);\r\n                /**绘制小球**/\r\n                mCanvas.drawCircle(mPosX,mPosY,mCircleRadius,mCirclePaint);\r\n                //mCanvas.drawBitmap(mbitmapBall, mPosX,mPosY, mPaint);\r\n                /**X轴 Y轴 Z轴的重力值**/\r\n                mCanvas.drawText(\"X轴重力值 ：\" + mGX, 0, 20, mPaint);\r\n                mCanvas.drawText(\"Y轴重力值 ：\" + mGY, 0, 40, mPaint);\r\n                mCanvas.drawText(\"Z轴重力值 ：\" + mGZ, 0, 60, mPaint);\r\n            }\r\n\r\n            @Override\r\n            public void surfaceChanged(SurfaceHolder holder, int format, int width,\r\n                                       int height) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void surfaceCreated(SurfaceHolder holder) {\r\n                /**开始游戏主循环线程**/\r\n                mIsRunning = true;\r\n                new Thread(this).start();\r\n                /**得到当前屏幕宽高**/\r\n                mScreenWidth = this.getWidth();\r\n                mScreenHeight = this.getHeight();\r\n\r\n                /**得到小球越界区域**/\r\n/*                mScreenBallWidth = mScreenWidth - mbitmapBall.getWidth();\r\n                mScreenBallHeight = mScreenHeight - mbitmapBall.getHeight();*/\r\n                mScreenBallWidth = mScreenWidth -   mCircleRadius;\r\n                mScreenBallHeight = mScreenHeight -   mCircleRadius;\r\n            }\r\n\r\n            @Override\r\n            public void surfaceDestroyed(SurfaceHolder holder) {\r\n                mIsRunning = false;\r\n            }\r\n\r\n            @Override\r\n            public void run() {\r\n                while (mIsRunning) {\r\n\r\n                    /** 取得更新游戏之前的时间 **/\r\n                    long startTime = System.currentTimeMillis();\r\n\r\n                    /** 在这里加上线程安全锁 **/\r\n                    synchronized (mSurfaceHolder) {\r\n                        /** 拿到当前画布 然后锁定 **/\r\n                        mCanvas = mSurfaceHolder.lockCanvas();\r\n                        Draw();\r\n                        /** 绘制结束后解锁显示在屏幕上 **/\r\n                        mSurfaceHolder.unlockCanvasAndPost(mCanvas);\r\n                    }\r\n\r\n                    /** 取得更新游戏结束的时间 **/\r\n                    long endTime = System.currentTimeMillis();\r\n\r\n                    /** 计算出游戏一次更新的毫秒数 **/\r\n                    int diffTime = (int) (endTime - startTime);\r\n\r\n                    /** 确保每次更新时间为50帧 **/\r\n                    while (diffTime &lt;= TIME_IN_FRAME) {\r\n                        diffTime = (int) (System.currentTimeMillis() - startTime);\r\n                        /** 线程等待 **/\r\n                        Thread.yield();\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onAccuracyChanged(Sensor arg0, int arg1) {\r\n                // TODO Auto-generated method stub\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onSensorChanged(SensorEvent event) {\r\n                mGX = event.values[SensorManager.DATA_X];\r\n                mGY= event.values[SensorManager.DATA_Y];\r\n                mGZ = event.values[SensorManager.DATA_Z];\r\n\r\n                //这里乘以2是为了让小球移动的更快\r\n                mPosX -= mGX * 2;\r\n                mPosY += mGY * 2;\r\n\r\n                //检测小球是否超出边界\r\n                if (mPosX &lt; mCircleRadius) {\r\n                    mPosX = mCircleRadius;\r\n                } else if (mPosX &gt; mScreenBallWidth) {\r\n                    mPosX = mScreenBallWidth;\r\n                }\r\n                if (mPosY &lt; mCircleRadius) {\r\n                    mPosY = mCircleRadius;\r\n                } else if (mPosY &gt; mScreenBallHeight) {\r\n                    mPosY = mScreenBallHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n```\r\n \r\n```", "Konwledge_Point": "循环控制", "Question": ["重力感应控制画布小球问题", ["import android.app.Activity;", "\nimport android.content.Context;", "\nimport android.content.pm.ActivityInfo;", "\nimport android.graphics.Bitmap;", "\nimport android.graphics.BitmapFactory;", "\nimport android.graphics.Canvas;", "\nimport android.graphics.Color;", "\nimport android.graphics.Paint;", "\nimport android.hardware.Sensor;", "\nimport android.hardware.SensorEvent;", "\nimport android.hardware.SensorEventListener;", "\nimport android.hardware.SensorManager;", "\nimport android.os.Bundle;", "\nimport android.view.SurfaceHolder;", "\nimport android.view.SurfaceView;", "\nimport android.view.Window;", "\nimport android.view.WindowManager;", "\nimport android.view.SurfaceHolder.Callback;  ", "\n\n", "public class SurfaceViewAcitvity extends Activity {  ", "\n\n", "MyView mAnimView = null;  \n\n@Override  \npublic void onCreate(Bundle savedInstanceState) {  \nsuper.onCreate(savedInstanceState);  \n// 全屏显示窗口  \nrequestWindowFeature(Window.FEATURE_NO_TITLE);  \ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,  \n    WindowManager.LayoutParams.FLAG_FULLSCREEN);  \n//强制横屏   \nsetRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);  \n\n// 显示自定义的游戏View  \nmAnimView = new MyView(this);  \nsetContentView(mAnimView);  \n}  \n\npublic class MyView extends SurfaceView implements Callback,Runnable ,SensorEventListener{  \n\n /**每50帧刷新一次屏幕**/    \npublic static final int TIME_IN_FRAME = 50;   \n\n/** 游戏画笔 **/  \nPaint mPaint = null;  \nPaint mTextPaint = null;  \nSurfaceHolder mSurfaceHolder = null;  \n\n/** 控制游戏更新循环 **/  \nboolean mRunning = false;  \n\n/** 游戏画布 **/  \nCanvas mCanvas = null;  \n\n/**控制游戏循环**/  \nboolean mIsRunning = false;  \n\n/**SensorManager管理器**/  \nprivate SensorManager mSensorMgr = null;      \nSensor mSensor = null;      \n\n/**手机屏幕宽高**/  \nint mScreenWidth = 0;  \nint mScreenHeight = 0;  \n\n/**小球资源文件越界区域**/  \nprivate int mScreenBallWidth = 0;  \nprivate int mScreenBallHeight = 0;  \n\n/**游戏背景文件**/  \nprivate Bitmap mbitmapBg;  \n\n/**小球资源文件**/  \nprivate Bitmap mbitmapBall;  \n\n/**小球的坐标位置**/  \nprivate float mPosX = 200;  \nprivate float mPosY = 0;  \n\n/**重力感应X轴 Y轴 Z轴的重力值**/  \nprivate float mGX = 0;  \nprivate float mGY = 0;  \nprivate float mGZ = 0;  \n\npublic MyView(Context context) {  \n    super(context);  \n    /** 设置当前View拥有控制焦点 **/  \n    this.setFocusable(true);  \n    /** 设置当前View拥有触摸事件 **/  \n    this.setFocusableInTouchMode(true);  \n    /** 拿到SurfaceHolder对象 **/  \n    mSurfaceHolder = this.getHolder();  \n    /** 将mSurfaceHolder添加到Callback回调函数中 **/  \n    mSurfaceHolder.addCallback(this);  \n    /** 创建画布 **/  \n    mCanvas = new Canvas();  \n    /** 创建曲线画笔 **/  \n    mPaint = new Paint();  \n    mPaint.setColor(Color.WHITE);  \n    /**加载小球资源**/  \n    mbitmapBall = BitmapFactory.decodeResource(this.getResources(), R.drawable.ball);  \n    /**加载游戏背景**/  \n    mbitmapBg = BitmapFactory.decodeResource(this.getResources(), R.drawable.bg);  \n\n    /**得到SensorManager对象**/  \n    mSensorMgr = (SensorManager) getSystemService(SENSOR_SERVICE);     \n    mSensor = mSensorMgr.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);     \n    // 注册listener，第三个参数是检测的精确度    \n        //SENSOR_DELAY_FASTEST 最灵敏 因为太快了没必要使用  \n        //SENSOR_DELAY_GAME    游戏开发中使用  \n        //SENSOR_DELAY_NORMAL  正常速度  \n        //SENSOR_DELAY_UI          最慢的速度  \n    mSensorMgr.registerListener(this, mSensor, SensorManager.SENSOR_DELAY_GAME);    \n}  \n\nprivate void Draw() {  \n\n    /**绘制游戏背景**/  \n    mCanvas.drawBitmap(mbitmapBg,0,0, mPaint);  \n    /**绘制小球**/  \n    mCanvas.drawBitmap(mbitmapBall, mPosX,mPosY, mPaint);  \n    /**X轴 Y轴 Z轴的重力值**/  \n    mCanvas.drawText(\"X轴重力值 ：\" + mGX, 0, 20, mPaint);  \n    mCanvas.drawText(\"Y轴重力值 ：\" + mGY, 0, 40, mPaint);  \n    mCanvas.drawText(\"Z轴重力值 ：\" + mGZ, 0, 60, mPaint);  \n}  \n\n@Override  \npublic void surfaceChanged(SurfaceHolder holder, int format, int width,  \n    int height) {  \n\n}  \n\n@Override  \npublic void surfaceCreated(SurfaceHolder holder) {  \n    /**开始游戏主循环线程**/  \n    mIsRunning = true;  \n    new Thread(this).start();  \n    /**得到当前屏幕宽高**/  \n    mScreenWidth = this.getWidth();  \n    mScreenHeight = this.getHeight();  \n\n    /**得到小球越界区域**/  \n    mScreenBallWidth = mScreenWidth - mbitmapBall.getWidth();  \n    mScreenBallHeight = mScreenHeight - mbitmapBall.getHeight();  \n}  \n\n@Override  \npublic void surfaceDestroyed(SurfaceHolder holder) {  \n    mIsRunning = false;  \n}  \n\n@Override  \npublic void run() {  \n    while (mIsRunning) {  \n\n    /** 取得更新游戏之前的时间 **/  \n    long startTime = System.currentTimeMillis();  \n\n    /** 在这里加上线程安全锁 **/  \n    synchronized (mSurfaceHolder) {  \n        /** 拿到当前画布 然后锁定 **/  \n        mCanvas = mSurfaceHolder.lockCanvas();  \n        Draw();  \n        /** 绘制结束后解锁显示在屏幕上 **/  \n        mSurfaceHolder.unlockCanvasAndPost(mCanvas);  \n    }  \n\n    /** 取得更新游戏结束的时间 **/  \n    long endTime = System.currentTimeMillis();  \n\n    /** 计算出游戏一次更新的毫秒数 **/  \n    int diffTime = (int) (endTime - startTime);  \n\n    /** 确保每次更新时间为50帧 **/  \n    while (diffTime <= TIME_IN_FRAME) {  \n        diffTime = (int) (System.currentTimeMillis() - startTime);  \n        /** 线程等待 **/  \n        Thread.yield();  \n    }  \n\n    }  \n\n}  \n\n@Override  \npublic void onAccuracyChanged(Sensor arg0, int arg1) {  \n    // TODO Auto-generated method stub  \n\n}  \n\n@Override  \npublic void onSensorChanged(SensorEvent event) {  \n    mGX = event.values[SensorManager.DATA_X];  \n    mGY= event.values[SensorManager.DATA_Y];  \n    mGZ = event.values[SensorManager.DATA_Z];  \n\n    //这里乘以2是为了让小球移动的更快  \n    mPosX -= mGX * 2;  \n    mPosY += mGY * 2;  \n\n    //检测小球是否超出边界  \n    if (mPosX < 0) {  \n    mPosX = 0;  \n    } else if (mPosX > mScreenBallWidth) {  \n    mPosX = mScreenBallWidth;  \n    }  \n    if (mPosY < 0) {  \n    mPosY = 0;  \n    } else if (mPosY > mScreenBallHeight) {  \n    mPosY = mScreenBallHeight;  \n    }  \n}  \n}  \n", "\n\n", "}  ", "\n\n", "这时用重力感应器控制小球移动的一个demo，但是现在我想自己画一个圆充当小球，而不是用图片替代，我该怎么改这段代码？求指教！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;兄弟我建议将代码贴上来&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["单片机定时器控制时间出错", ["我想实现的是led灯循环亮一秒熄灭一秒，但是我的代码没有报错，我也没检查出错误😢。它是过很久亮而且亮一会又灭一会那种。这个根本不止1s啊，求友友帮助🥰", "\n", "\n", "#", "include", " ", "<REGX52.H>", "\n", "void", " ", "Timer0_Init", "()", "\n", "{\n    TMOD &= ", "0xF0", ";        \n    TMOD |= ", "0x01", ";         \n    TL0 = ", "0xCD", ";        \n    TH0 = ", "0xD4", ";        \n    TF0 = ", "0", ";        \n    TR0 = ", "1", ";        \n    ET0=", "1", ";\n    EA=", "1", ";\n    PT0=", "0", ";\n}\n", "void", " ", "main", "()", "\n", "{\n    ", "Timer0_Init", "();\n    ", "while", "(", "1", ")\n    {\n         \n    }\n}\n", "unsigned", " ", "int", " T0Count;\n", "void", " ", "Timer0_Routine", "()", " interrupt 1\n", "{\n    TL0 = ", "0xCD", ";    \n    TH0 = ", "0xD4", ";\n    T0Count++;\n    ", "if", "(T0Count>=", "1000", ")\n    {\n        T0Count=", "0", ";\n        P2_0=~P2_0;\n    }\n}\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;哈哈哈&amp;#xff0c;为什么不是这样的?&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/637190716936128.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["运动控制轨迹坐标提取求代劳", ["python项目需求:用圆刷把板面刷遍，已经起止坐标的直线插补代码，只需轨迹坐标就可以实现，板面的最小外接矩形已提取到，圆刷的半径100，已经得到最小外接矩形缩小100的矩形，并且得到这个矩形的左极点坐标，现在需要写一个while循环，从缩小的最小外接矩形的点集坐标中提取从左到右弓形的转弯点坐标。怎么写这个定位坐标的循环，求代劳。", "\n", "contours", ", hierarchy =cv2.findContours(img_bin,cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)  # 轮廓检测函数\n", "# 4.获取最小外接矩形", "\n", "min_rect", " =cv2.minAreaRect(contours[", "0", "])\n        ", "rect_points", " = cv2.boxPoints(min_rect)\n        ", "#轮廓缩放，缩小尺寸是钢丝刷的半径大小100个像素点", "\n        ", "rect_points1", " = scale(rect_points,-", "100", ")\n        ", "rect_points2", " = np.int0(rect_points1)\n        ", "#缩小后轮廓的左极点", "\n        ", "left_most", " =tuple(rect_points2[rect_points2[:,", "0", "].argmin()])\n        ", "cv2", ".circle(self.image_bj,left_most,", "15", ",(", "0", ",", "255", ",", "0", "),-", "1", ", cv2.LINE_AA)\n        ", "# 5.绘制最小外接矩形", "\n        ", "cv2", ".drawContours(self.image_bj, rect_points, ", "0", ", (", "255", ", ", "0", ", ", "255", "), ", "10", ")\n        ", "cv2", ".drawContours(self.image_bj, contours, -", "1", ",  (", "255", ", ", "0", ", ", "255", "), ", "15", ") \n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\ntotal &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n    &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; int(&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#61;&amp;#34;&lt;/span&gt;))\n    total&amp;#43;&amp;#61;&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;总和是&amp;#xff1a;&amp;#34;&lt;/span&gt;,total)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;均值是&amp;#xff1a;&amp;#34;&lt;/span&gt;, total/&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["键盘上输入5个数，统计并输出它们的和及平均值。", ["Python中运用for循环", "用循环变量i控制次数 变量a保存每次输入", "for i in range(5):", "   a＝＝input (）这只是部分代码"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加个循环是为了让单片机反复执行&amp;#xff0c;如果不加循环&amp;#xff0c;单片机执行完你这些程序后&amp;#xff0c;还会继续往后面跑的&amp;#xff0c;但后面的空闲的flash里的内容按指令执行的话&amp;#xff0c;往往都是不会产生什么外部输出&amp;#xff0c;也不影响程序执行流程的指令&amp;#xff0c;虽然也有几十K&amp;#xff0c;但是以单片机的工作频率&amp;#xff0c;单片机在毫秒级的时间内就会执行完&amp;#xff0c;执行完成后&amp;#xff0c;硬件逻辑会让单片机重头开始执行&amp;#xff0c;所以看上去效果也是在循环&amp;#xff0c;和加个while循环差不多。&lt;br /&gt;但是后面的空闲flash的内容有一定的不确定性&amp;#xff0c;所以实际做产品的时候不要这么干。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["关于c51单片机的一个疑惑", ["请问这个独立按键控制led灯的程序为什么要加while循环？去掉while循环之后我发现单片机还是能正常运行的。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个不对吗&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) \n    {\n      &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;&amp;#43;&amp;#43;;\n    } \n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n   {\n      &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["如何返回一个正确值，控制一个数字范围", ["if（i<10）", "i++", "else", "i=0", "\n", "我想表达的意思是i不大于10就递增，到了10又变成0,无限循环，但是编译起来报错。有点弄不懂，最后一个数的时候报错，有解决方案么？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nn &amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;())\nlist1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;().split() &lt;span class=\"hljs-meta\"&gt;#这个可以连续输入&amp;#xff0c;不限制类型、数量&amp;#xff0c;默认空格隔开&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x in list1:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(x, &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-meta\"&gt;#输出 空格隔开&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n\ns &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(n):&lt;span class=\"hljs-comment\"&gt;#这种是换行输入&amp;#xff0c;可以控制输入多少行&lt;/span&gt;\n    s &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(s)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python怎么第一行输入一个数字n，确保第二行能恰好输入n个字符且连续啊", ["不知道用不用循环，用循环不知道怎么控制输入之间的间距，必须恰好n个数，因为是刚学，所以想了一天了"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c#\"&gt;&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; System.Diagnostics;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; System.Runtime.InteropServices;\n\n[&lt;span class=\"hljs-meta\"&gt;DllImport(&lt;span class=\"hljs-string\"&gt;&amp;#34;kernel32.dll&amp;#34;&lt;/span&gt;)&lt;/span&gt;]\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; IntPtr &lt;span class=\"hljs-title\"&gt;GetConsoleWindow&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;;\n[&lt;span class=\"hljs-meta\"&gt;DllImport(&lt;span class=\"hljs-string\"&gt;&amp;#34;user32.dll&amp;#34;&lt;/span&gt;)&lt;/span&gt;]\n &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SetForegroundWindow&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;IntPtr hWnd&lt;/span&gt;)&lt;/span&gt;;\n[&lt;span class=\"hljs-meta\"&gt;DllImport(&lt;span class=\"hljs-string\"&gt;&amp;#34;user32.dll&amp;#34;&lt;/span&gt;)&lt;/span&gt;]\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ShowWindow&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;IntPtr hWnd, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; nCmdShow&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//获取控制台窗体句柄&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; handle &amp;#61; GetConsoleWindow();\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;)\n{\n    Console.WriteLine(&lt;span class=\"hljs-string\"&gt;&amp;#34;提示&amp;#xff1a;请输入&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-comment\"&gt;//重新设置窗体显示为Normal&lt;/span&gt;\n    ShowWindow(handle, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n   &lt;span class=\"hljs-comment\"&gt;//将窗体带回前台激活&lt;/span&gt;\n    SetForegroundWindow(handle);\n\n    &lt;span class=\"hljs-keyword\"&gt;await&lt;/span&gt; Task.Delay(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);\n}\n\nConsole.ReadKey();\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["c#控制台程序怎么在运行完一段等待输入时弹出？", ["在循环开头写了个readkey 回车来控制每一次重复循环，有没有办法在运行到那的时候让控制台主动转移焦点？谢谢各位了"]], "Tag": "程序设计"}
{"Answer": "程序很长，基本没人会给你调试找错误的。会花费很长时间。\r\n建议你自己学会调试程序，掌握设置断点，查看变量，单步执行等手段。\r\n怀疑是哪里出了问题，就单步执行去试试。", "Konwledge_Point": "循环控制", "Question": ["c语言扫雷算法有问题求助", ["自己写了个控制台的扫雷", "\n输入坐标然后显示地图", "\n但是输入某些坐标的时候卡住不动了 不知道是陷入死循环还是什么问题", "\n求大神解答         已考虑无雷区自动翻开的死循环  可能是双击时陷入死循环 但看不出是不是这个问题 不知道怎么修改代码", "\n\n", "#include ", "\n#include ", "\n#include ", "\n#include ", "\n\n", "#define len 20                          //边数", "\nint mine[len+2][len+2] = {0};                 //+2是为了在计算周围一圈雷数时不必分四周顶点边界区域，不越界", "\nint dispMine[len+2][len+2] = {0};          //记录当前格子状态：0为未点开、1为已点开、2为双击、3为插旗、4为周围一圈无雷自动翻开", "\nint endindex = 0;                     //点击到地雷的结束标志", "\nint mines = 0;                       //记录已排除的地雷数", "\n\n", "void SetMine(int n)        //布雷", "\n{", "\n    srand(time(0));", "\n    int k, row, col;", "\n    if(n == 1)             //初级难度", "\n        k = 25;", "\n    else if(n == 2)         //中级难度", "\n        k = 50;", "\n    else                   //高级难度", "\n        k = 75;", "\n    mines = k;", "\n    while(k)", "\n    {", "\n        row = rand() % len + 1;              //+1是为了将地雷分布在除四边以外的区域     显示地图时实际只显示中间部分 不显示四周", "\n        col = rand() % len + 1;", "\n        if(!mine[row][col])", "\n        {", "\n            mine[row][col] = 9;", "\n            k--;", "\n        }", "\n    }", "\n}", "\n\n", "void round(int mine[][len+2], int x, int y)", "\n{", "\n    int k = 0;   //地雷数", "\n    if(mine[x][y] == 9 && dispMine[x][y] != 3)  //点击到地雷", "\n        endindex++;", "\n    else ", "\n    {", "\n        if(mine[x][y+1] == 9)             //计算周围一圈是否有雷", "\n            k++;", "\n        if(mine[x+1][y+1] == 9)", "\n            k++;", "\n        if(mine[x+1][y] == 9)", "\n            k++;", "\n        if(mine[x+1][y-1] == 9)", "\n            k++;", "\n        if(mine[x][y-1] == 9)", "\n            k++;", "\n        if(mine[x-1][y-1] == 9)", "\n            k++;", "\n        if(mine[x-1][y] == 9)", "\n            k++;", "\n        if(mine[x-1][y+1] == 9)", "\n            k++;", "\n        mine[x][y] = k;                  //记录当前位置地雷数", "\n    }", "\n\n", "}", "\n\n", "void open(int mine[][len+2], int x, int y)           //翻开", "\n{", "\n    if(mine[x][y] == 9)                          //点击到雷直接返回", "\n        return;", "\n    if(dispMine[x][y] == 3)                //输入坐标位置为插旗的位置", "\n        return;", "\n    if(mine[x][y] == 0)                    //无雷区自动翻开", "\n    { ", "\n        dispMine[x][y] = 4;                 //无雷区标志为4", "\n        if(x != 1 && y != 1)                //考虑各个特殊位置的坐标", "\n        {", "\n            round(mine, x-1, y-1);", "\n            if(!mine[x-1][y-1] && dispMine[x-1][y-1] != 4)            //若无雷自动翻开区域里又有无雷区 继续自动翻开 为了防止死循环", "\n                open(mine, x-1, y-1);                                                                          //要标志已翻开的", "\n            else if(mine[x-1][y-1] && !dispMine[x-1][y-1])       //若是周围一周有雷的，则直接显示，标志为1", "\n                dispMine[x-1][y-1] = 1;", "\n        }", "\n        if(x != 1 && y != len)", "\n        {", "\n            round(mine, x-1, y+1);", "\n            if(!mine[x-1][y+1] && dispMine[x-1][y+1] != 4)", "\n                open(mine, x-1, y+1);", "\n            else if(mine[x-1][y+1] && !dispMine[x-1][y+1])", "\n                dispMine[x-1][y+1] = 1;", "\n        }", "\n        if(x != len && y != 1)", "\n        {", "\n            round(mine, x+1, y-1); ", "\n            if(!mine[x+1][y-1] && dispMine[x+1][y-1] != 4)", "\n                open(mine, x+1, y-1);", "\n            else if(mine[x+1][y-1] && !dispMine[x+1][y-1])", "\n                dispMine[x+1][y-1] = 1;", "\n        }", "\n        if(x != len && y != len)", "\n        {", "\n            round(mine, x+1, y+1);", "\n            if(!mine[x+1][y+1] && dispMine[x+1][y+1] != 4)", "\n                open(mine, x+1, y+1);", "\n            else if(mine[x+1][y+1] && !dispMine[x+1][y+1])", "\n                dispMine[x+1][y+1] = 1;", "\n        }", "\n        if(x != 1)", "\n        {", "\n            round(mine, x-1, y);", "\n            if(!mine[x-1][y] && dispMine[x-1][y] != 4)", "\n                open(mine, x-1, y);", "\n            else if(mine[x-1][y] && !dispMine[x-1][y])", "\n                dispMine[x-1][y] = 1;", "\n        }", "\n        if(x != len)", "\n        {", "\n            round(mine, x+1, y);", "\n            if(!mine[x+1][y] && dispMine[x+1][y] != 4)", "\n                open(mine, x+1, y);", "\n            else if(mine[x+1][y] && !dispMine[x+1][y])", "\n                dispMine[x+1][y] = 1;", "\n        }", "\n        if(y != 1)", "\n        {", "\n            round(mine, x, y-1);", "\n            if(!mine[x][y-1] && dispMine[x][y-1] != 4)", "\n                open(mine, x, y-1);", "\n            else if(mine[x][y-1] && !dispMine[x][y-1])", "\n                dispMine[x][y-1] = 1;", "\n        }", "\n        if(y != len)", "\n        {", "\n            round(mine, x, y+1);", "\n            if(!mine[x][y+1] && dispMine[x][y+1] != 4)", "\n                open(mine, x, y+1);", "\n            else if(mine[x][y+1] && !dispMine[x][y+1])", "\n                dispMine[x][y+1] = 1;", "\n        }", "\n    }", "\n    if(dispMine[x][y] = 2)           //如果双击", "\n    {", "\n        dispMine[x][y] = 1;             //置为已点击防止死循环", "\n        int flag = 0;                  //记录周围一周插旗数", "\n        if(dispMine[x-1][y] == 3)            //若周围有旗子，flag++", "\n            flag++;", "\n        if(dispMine[x-1][y+1] == 3)", "\n            flag++;", "\n        if(dispMine[x][y+1] == 3)", "\n            flag++;", "\n        if(dispMine[x+1][y+1] == 3)", "\n            flag++;", "\n        if(dispMine[x+1][y] == 3)", "\n            flag++;", "\n        if(dispMine[x+1][y-1] == 3)", "\n            flag++;", "\n        if(dispMine[x][y-1] == 3)", "\n            flag++;", "\n        if(dispMine[x-1][y-1] == 3)", "\n            flag++;", "\n        if(mine[x][y] == flag)            //双击的当前位置插旗数与该位置地雷数相同时自动翻开周围一圈未点击的位置", "\n        {", "\n            if(y != len && dispMine[x][y+1] == 0)        //考虑各个特殊位置防止越界以及是否为未翻开位置", "\n            {", "\n                round(mine, x, y+1);", "\n                dispMine[x][y+1] = 1;", "\n                if(!mine[x][y+1])                  //若翻开为无雷区则递归调用", "\n                    open(mine, x, y+1);", "\n            }", "\n            if(x != len && y != len && dispMine[x+1][y+1] == 0)", "\n            {", "\n                round(mine, x+1, y+1);", "\n                dispMine[x+1][y+1] = 1;", "\n                if(!mine[x+1][y+1])", "\n                    open(mine, x+1, y+1);", "\n            }", "\n            if(x != len && dispMine[x+1][y] == 0)", "\n            {", "\n                round(mine, x+1, y);", "\n                dispMine[x+1][y] = 1;", "\n                if(!mine[x+1][y])", "\n                    open(mine, x+1, y);", "\n            }", "\n            if(x != len && y != 1 && dispMine[x+1][y-1] == 0)", "\n            {", "\n                round(mine, x+1, y-1); ", "\n                dispMine[x+1][y-1] = 1;", "\n                if(!mine[x+1][y-1])", "\n                    open(mine, x+1, y-1);", "\n            }", "\n            if(y != 1 && dispMine[x][y-1] == 0)", "\n            {", "\n                round(mine, x, y-1);", "\n                dispMine[x][y-1] = 1;", "\n                if(!mine[x][y-1])", "\n                    open(mine, x, y-1);", "\n            }", "\n            if(x != 1 && y != 1 && dispMine[x-1][y-1] == 0)", "\n            {", "\n                round(mine, x-1, y-1);", "\n                dispMine[x-1][y-1] = 1;", "\n                if(!mine[x-1][y-1])", "\n                    open(mine, x-1, y-1);", "\n            }", "\n            if(x != 1 && dispMine[x-1][y] == 0)", "\n            {", "\n                round(mine, x-1, y);", "\n                dispMine[x-1][y] = 1;", "\n                if(!mine[x-1][y])", "\n                    open(mine, x-1, y);", "\n            }", "\n            if(x != 1 && y != len && dispMine[x-1][y+1] == 0)", "\n            {", "\n                round(mine, x-1, y+1);", "\n                dispMine[x-1][y+1] = 1;", "\n                if(!mine[x-1][y+1])", "\n                    open(mine, x-1, y+1);", "\n            }", "\n        }", "\n    }", "\n\n", "}", "\n\n", "void chaqi(int x, int y)           //插旗", "\n{", "\n    if(dispMine[x][y] == 3)      //已经插旗的位置再次插旗视为取消插旗", "\n    {", "\n        dispMine[x][y] = 0;       //置为0表示未点击区域", "\n        return;", "\n    }", "\n    else if(dispMine[x][y])        //若该位置已点开则不改变", "\n        return;", "\n    dispMine[x][y] = 3;     //插旗标志为3", "\n\n", "}", "\n\n", "void disp(int x, int y)           //显示地图", "\n{", "\n    cout<<\"  \";", "\n    for(int k = 1; k < len+1; k++)", "\n        cout<<setw(2)<<k;", "\n    cout<<endl;", "\n    if(mine[x][y] == 9 && dispMine[x][y] != 3)           //如果点到地雷", "\n    {", "\n        for(int i = 1; i < len+1; i++)", "\n        {", "\n            cout<<setw(2)<<i;", "\n            for(int j = 1; j < len+1; j++)", "\n            {", "\n                if(dispMine[i][j] == 3)              //插旗的地方显示为■", "\n                    cout<<\"■\";", "\n                else if(mine[i][j] == 9)             //有雷的地方显示为*", "\n                    cout<<\" *\";", "\n                else if(dispMine[i][j])            //无雷区显示数字", "\n                    cout<<\" \"<<mine[i][j];", "\n                else                                  //未翻开的地方显示为□", "\n                    cout<<\"□\";", "\n            }", "\n            cout<<endl;", "\n        }", "\n        return;", "\n    }", "\n\n", "for(int i = 1; i < len+1; i++)           //没有点击到地雷\n{   \n    cout<<setw(2)<<i;\n    for(int j = 1; j < len+1; j++)\n    {\n        if(dispMine[i][j] == 3)\n            cout<<\"■\";\n        else if(dispMine[i][j])\n            cout<<\" \"<<mine[i][j];\n        else\n            cout<<\"□\";\n    }\n    cout<<endl;\n}\nreturn;\n", "\n\n", "}", "\n\n", "bool win(int mines)            //判断胜利条件", "\n{ ", "\n    bool win = false;      //默认为没有取得胜利", "\n    int noFlag = 0, yesFlag = 0, halfFlag = 0;        //noFlag记录未翻开的格子数 yesFlag、halfFlag记录插旗数且该位置有雷  noClip", "\n    for(int i = 1; i < len+1; i++)", "\n        for(int j = 1; j < len+1; j++)", "\n        {", "\n\n", "        if(dispMine[i][j] == 0 )         //未翻开位置\n            noFlag++;\n        if(dispMine[i][j] == 3 && mine[i][j] == 9)        //插旗位置正确\n        {\n            yesFlag++;\n            halfFlag++;\n        }\n    }\nif(noFlag == mines || (yesFlag == mines && !noFlag) || halfFlag == len*len - noFlag) //未翻开的格子数等于地雷数 插旗数等于地雷数 \n    win = true;                                                                //插旗与未翻开格子数等于地雷数\nreturn win;   \n", "\n\n", "}", "\nvoid main()", "\n{", "\n    int x = 0, y = 0;", "\n    cout<<\"请选择游戏难度,1.初级 2.中级 3.高级:\";", "\n    int rank = 0;", "\n    while(1)", "\n    {", "\n        cin>>rank;", "\n        if(rank < 1 || rank > 3)", "\n            cout<<\"输入有误，请重新输入：\";", "\n        else", "\n        {", "\n            system(\"CLS\");", "\n            break;", "\n        }", "\n    }", "\n    SetMine(rank);", "\n    disp(x, y);", "\n    while(1)", "\n    {", "\n        cout<<\"1.点击  2.插旗  3.双击\"<\n        cout\n        int n;", "\n        while(1)", "\n        {", "\n            cin>>n;", "\n            cin>>x>>y;", "\n            if(n < 1 || n > 3)", "\n            {", "\n                cout<<\"输入有误，请重新输入：\";", "\n                continue;", "\n            }", "\n            else if(x < 1 || x > 20 || y < 1 || y > 20)", "\n            {", "\n                cout<<\"输入有误，请重新输入：\";", "\n                continue;", "\n            }", "\n            break;", "\n        }", "\n\n", "    if(n == 1 || n == 3)\n    {\n        if(n == 3 && dispMine[x][y] == 3)\n            continue;\n        round(mine, x, y);\n        if(dispMine[x][y] < 2)\n            dispMine[x][y]++;       \n        open(mine, x, y);\n\n    }\n    else if(n == 2)\n        chaqi(x, y);\n\n    system(\"CLS\");\n    disp(x, y);\n    if(endindex)\n    {\n        cout<<\"你输了！\"<<endl;\n        break;\n    }   \n    if(win(mines))\n    {\n        cout<<\"你赢了！\"<<endl;\n        break;\n    }\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种吗&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/458517926556154.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; random\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;random_num_with_fix_total&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;maxValue, num&lt;/span&gt;):\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;生成总和固定的整数序列\n    maxvalue: 序列总和\n    num&amp;#xff1a;要生成的整数个数&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;\n    a &amp;#61; random.sample(&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;), k&amp;#61;num-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;# 在1~99之间&amp;#xff0c;采集20个数据&lt;/span&gt;\n    a.append(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)   &lt;span class=\"hljs-comment\"&gt;# 加上数据开头&lt;/span&gt;\n    a.append(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n    a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sorted&lt;/span&gt;(a)\n    b &amp;#61; [ a[i]-a[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(a)) ] &lt;span class=\"hljs-comment\"&gt;# 列表推导式&amp;#xff0c;计算列表中每两个数之间的间隔&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(b)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(b))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;( &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(b))\n\nrandom_num_with_fix_total(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python random 拓展方法", ["需要循环打印一个随机的整数", "\n", "import random", "\n", "slsj = random.randint(1,5)", "\n", "但是总合控制不住  想要让他 用for 循环打印 然后总和 等于 100"]], "Tag": "程序设计"}
{"Answer": "常见的原因是你的数组没有初始化。Objective C这种情况不会报出异常，相反，系统会无视添加的调用。当获取items结束时会返回空值。 \r\n\r\n添加这行到```viewDidLoad方法```中:\r\n\r\n    _buttons = [NSMutableArray array];\r\n\r\n应该就能解决了", "Konwledge_Point": "循环控制", "Question": ["怎么给编程添加的控制保存关联", ["在我的view中有3个Button，然后把按钮添加到数组中，这样就可以获取：", "\n\n", "for (i = 0; i < 3; i++)\n{\n  UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];\n  [view addSubview:button];\n  [_buttons addObject:button];\n}\n", "\n\n", "如果在数组中关联按钮，修改按钮图片，屏幕上的按钮背景并没有改变：", "\n\n", "UIButton* button = [_buttons objectAtIndex: 0];\n[button setImage:thumb forState:UIControlStateNormal];\n", "\n\n", "后来我在subview中用loop循环实现了修改按钮图片，不知道有没有更好的方法？", "\n\n", "for (UIView* subView in ((UIView*)[self.view.subviews objectAtIndex:0]).subviews){\n    if ([subView isKindOfClass:[UIButton class]]){\n        UIButton *button = (UIButton*)subView;\n        if (button.tag == self.selected){\n            [button setImage:thumb forState:UIControlStateNormal];\n        }\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "2 * sizeof(record[i].wzName)\r\n这么写越界了，因为sizeof获取的是字节大小，而不是数组长度。", "Konwledge_Point": "循环控制", "Question": ["C++控制台下printf函数异常报错", ["当执行到printf(\"Could not\");会报错：", "\n\n", "\n\n", "但是，修改以下两个位置中的任一个，都可以解决。我不明白为什么？请指导。", "\n一、在程序的开始位置加上一句 printf(\"Could not\");此时这句是可以打印出来的，并且下面的printf以及__tprintf 都可以打印出来", "\n二、将for循环注释掉。", "\n\n", "#include \"pch.h\"\n#include <stdio.h>\n#include <windows.h>\n#include <tchar.h>\n\nint _tmain()\n{\n    //printf(\"Could not\");\n    struct PBRecord\n    {   //  bt_addr btAddr;\n        WCHAR wzName[32];\n        WCHAR wzNumber[64];\n    };\n\n    PBRecord *record = new PBRecord[3];\n    for (int i = 0; i < 3; i++)\n    {\n        ZeroMemory(record[i].wzName, 2 * sizeof(record[i].wzName));\n        ZeroMemory(record[i].wzNumber, 2 * sizeof(record[i].wzNumber));\n    }\n\n    printf(\"Could not\");\n    _tprintf(TEXT(\"Could not open file mapping object (%d).\\n\"), GetLastError());\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "经过多次测试，我发现同步读取也能解决问题。将单片机内的程序设置一个定时发送，刷新串口接收程序；\r\n将串口超时设定得更短\r\n```\r\n\tCOMMTIMEOUTS TimeOuts;//设定读超时    \r\n\tTimeOuts.ReadIntervalTimeout = 2;\r\n\tTimeOuts.ReadTotalTimeoutMultiplier = 0;\r\n\tTimeOuts.ReadTotalTimeoutConstant = 0;\r\n```\r\n这样就可以同时实现读串口数据判断与检测键盘输入的目的\r\n![图片说明](https://img-ask.csdn.net/upload/201905/02/1556770960_403302.png)\r\n\r\n\r\n主要是不会用多线程，一个只学了C++编程皮毛的咸鱼≡(▔﹏▔)≡。\r\n\r\n感谢@操作员马善福（贵阳专业挖机）大佬的回复！！！给您添蘑菇了", "Konwledge_Point": "循环控制", "Question": ["ReadFile异步读取串口", ["这里是用ReaFile函数辨别单片机串口来的信号，因为要同时响应键盘的输入所以ReadFile用的是异步方式，键盘输入用的是非阻塞函数kbhit可以让程序在这个while里面循环检测，有输入就跳出。", "\n       现在的问题是串口发出的信号不能被程序的判别信号触发。求大佬解惑！！希望提供解决办法", "\n\n", "    DWORD wCount = 256;//读取的字节数\n    DWORD wCount1 = 0;  \n    unsigned char str[256];\n    OVERLAPPED ov;\n    ov.Offset = 0;\n    ov.OffsetHigh = 0;\n    do\n    {\n        while (!i)\n        {\n            ReadFile(hCom, str, wCount, &wCount1, &ov);\n            GetOverlappedResult(hCom, &ov, &wCount1, INFINITE);\n                for (int i1 = 0; i1 < wCount1; i1++)\n                {\n                    if (str[i1] == 0xAA)\n                    {\n                        a = 1;\n                    }\n                    if (str[i1] == 0xBB)\n                        c = 1;\n                }\n            if (z == 1 && a == 1 && c == 1)\n            {\n                cout << \"入库成功！！！\" << endl;\n                a = 0;\n                c = 0;\n                z = 0;\n            }\n            if (z == 2 && a == 1 && c == 1)\n            {\n                cout << \"出库成功！！！\" << endl;\n                a = 0;\n                c = 0;\n                z = 0;\n            }\n            if (z == 0 && a == 1 && c == 1)\n            {\n                cout << \"警告！！！！！！源未经登记！！！！！！\" << endl;\n                a = 0;\n                c = 0;\n                z = 0;\n            }\n            flag = 0;\n            if (_kbhit())\n                cin >> str1;\n            i = str1.length();\n        }\n        switch (i)\n        {\n", "\n\n", "串口的初始化程序", "\n\n", "void Initialization1()\n{\n    CloseHandle(hCom);\n    bool flag1 = 0;\n    cout << \"正在链接单片机！！！（  请右键开始键>>  设备管理器  >>  端口（COM和LPT）， 找到单片机的串口号并输入。）\" << endl;\n    cout << \"请输入串口号（例如：COM1)    ：\";\n    do\n    {\n        std::string m_csFileName;\n        cin >> m_csFileName;\n        LPCSTR lpFileName = m_csFileName.c_str();\n        hCom = CreateFile(lpFileName, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, 0, NULL);\n        if (INVALID_HANDLE_VALUE == hCom)\n        {\n            cout << \"打开COM失败！！！！请重新输入！！\\n\";\n            cout << \"请输入串口号（例如：COM1)    ：\";\n        }\n        else\n        {\n            cout << (\"COM打开成功！\\n\");\n            flag1 = 1;\n        }\n    } while (flag1 == 0);\n    SetupComm(hCom, 20480, 20480);//输入缓冲区和输出缓冲区的大小都是1024\n\n    COMMTIMEOUTS TimeOuts;//设定读超时    \n    TimeOuts.ReadIntervalTimeout = 100;\n    TimeOuts.ReadTotalTimeoutMultiplier = 500;\n    TimeOuts.ReadTotalTimeoutConstant = 5000;\n    TimeOuts.WriteTotalTimeoutMultiplier = 500;//设定写超时\n    TimeOuts.WriteTotalTimeoutConstant = 2000;\n    SetCommTimeouts(hCom, &TimeOuts);//设置超时\n\n    DCB dcb1;\n    GetCommState(hCom, &dcb1);\n    dcb1.BaudRate = 9600;//波特率为9600\n    dcb1.ByteSize = 8;//每个字节有8位\n    dcb1.Parity = NOPARITY;//无奇偶校验位\n    dcb1.StopBits = ONESTOPBIT;//一个停止位\n    dcb1.fParity = FALSE;\n    dcb1.fNull = FALSE;\n    SetCommState(hCom, &dcb1);\n    PurgeComm(hCom, PURGE_TXCLEAR | PURGE_RXCLEAR);//清空缓冲区\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;为了让LED在按一次按键后闪烁&amp;#xff0c;再按一次按键后停止闪烁&amp;#xff0c;您可以在代码中添加一个变量来跟踪LED的状态。每次按下按键时&amp;#xff0c;您可以在代码中使用这个变量来切换LED的状态。在while循环中加入if语句来检测按键是否按下&amp;#xff0c;如果按键按下&amp;#xff0c;切换LED的状态&amp;#xff0c;如果LED当前是灭的&amp;#xff0c;就让它亮&amp;#xff0c;如果LED当前是亮的&amp;#xff0c;就让它灭。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; led_state &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!(GPIOC-&amp;gt;IDR &amp;amp; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; BUTTON_PIN))){\n        led_state &amp;#61; !led_state;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!(GPIOC-&amp;gt;IDR &amp;amp; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; BUTTON_PIN)));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(led_state){\n        GPIOA-&amp;gt;ODR |&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; LED_PIN;   &lt;span class=\"hljs-comment\"&gt;//led亮&lt;/span&gt;\n        delayMs(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// Call the delay function&lt;/span&gt;\n        GPIOA-&amp;gt;ODR &amp;amp;&amp;#61; ~(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; LED_PIN);  &lt;span class=\"hljs-comment\"&gt;//led 灭&lt;/span&gt;\n        delayMs(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// Call the delay function&lt;/span&gt;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样就可以实现按键控制LED闪烁。&lt;br /&gt;另外&amp;#xff0c;如果您想要在按键按下时立即停止闪烁&amp;#xff0c;可以在if语句中将LED状态立即设置为灭&amp;#xff0c;而不是等待下一个while循环迭代。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; led_state &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!(GPIOC-&amp;gt;IDR &amp;amp; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; BUTTON_PIN))){\n        led_state &amp;#61; !led_state;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(led_state){\n            GPIOA-&amp;gt;ODR |&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; LED_PIN;   &lt;span class=\"hljs-comment\"&gt;//led亮&lt;/span&gt;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            GPIOA-&amp;gt;ODR &amp;amp;&amp;#61; ~(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; LED_PIN);  &lt;span class=\"hljs-comment\"&gt;//led 灭&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!(GPIOC-&amp;gt;IDR &amp;amp; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; BUTTON_PIN)));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(led_state){\n        delayMs(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// Call the delay function&lt;/span&gt;\n        GPIOA-&amp;gt;ODR ^&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; LED_PIN;   &lt;span class=\"hljs-comment\"&gt;//led状态取反&lt;/span&gt;\n        delayMs(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// Call the delay function&lt;/span&gt;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样就可以实现按键控制LED闪烁。&lt;br /&gt;如果您还有其他问题&amp;#xff0c;请随时告诉我。&lt;br /&gt;望采纳。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["stmSTM32L476 按键控制led闪烁", ["下面的代码：", "按一下按键，led一直保持闪烁。", "怎样才能改成，按一下按键，led保持闪烁，然后再按一下，led停止闪烁。以此类推", "我试过在while(1)里面加上一个另外一个while(GPIOC->IDR & (1 << BUTTON_PIN)); 去检测按键是否按下，但是没有按上述要求工作", "谢谢", "\n", "while", "(", "1", "){\n        GPIOA->ODR |= ", "1", " << LED_PIN;   ", "//", "led亮\n        delayMs(", "50", "); ", "//", " Call the delay ", "function", "\n        GPIOA->ODR &= ~(", "1", " << LED_PIN);  ", "//", "led 灭\n        delayMs(", "50", "); ", "//", " Call the delay ", "function", "\n        ", "while", "(GPIOC->IDR & (", "1", " << BUTTON_PIN)); \n        GPIOA->ODR &= ~(", "1", " << LED_PIN);   ", "//", "led灭\n    }\n\n", "\n", "下面是按一下键可以让led循环闪烁", "\n", "#include \"stm32L476xx.h\"", "\n\n", "#define LED_PIN 5 ", "\n", "#define BUTTON_PIN 13", "\n\n", "void", " delayMs(", "int", " n);\n\n", "void", " toggleLed();\n\n", "int", " main(", "void", ") {\n    ", "//enable clock for GPIOA and GPIOC", "\n    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOAEN; \n    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOCEN;    \n\n    ", "// Configure LED2 pin as output", "\n    GPIOA->MODER &= ~(", "3", "UL << (", "2", " * LED_PIN)); \n    GPIOA->MODER |=  (", "1", "UL << (", "2", " * LED_PIN)); \n\n    ", "// Configure button pin as input", "\n    GPIOC->MODER &= ~(", "3", "UL << (", "2", " * BUTTON_PIN)); \n\n    ", "// Configure button with no pull-up or pull-down", "\n    GPIOC->PUPDR &= ~(", "3", "UL << (", "2", " * BUTTON_PIN))；\n    \n        \n    ", "while", "(GPIOC->IDR & (", "1", " << BUTTON_PIN)); ", "//wait for button press", "\n    ", "while", "(", "1", "){\n        GPIOA->ODR |= ", "1", " << LED_PIN;\n        delayMs(", "50", "); ", "// Call the delay function", "\n        GPIOA->ODR &= ~(", "1", " << LED_PIN);\n        delayMs(", "50", "); ", "// Call the delay function", "\n    }\n}\n\n        \n\n\n", "/* 16 MHz SYSCLK */", "\n", "void", " delayMs(", "int", " n) {\n    ", "int", " i;\n    ", "for", " (; n > ", "0", "; n--)\n        ", "for", " (i = ", "0", "; i < ", "3195", "; i++);\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "jsp页面没有显示什么结果   你可以测试一下  list是不是为空  不为空的话 应该就很容易显示吧", "Konwledge_Point": "循环控制", "Question": ["一个JSP界面有多个按钮 对应一个servlet  其中一个按钮实现多表查询并显示出查询数据 ", ["一个JSP界面有多个按钮 对应一个servlet  其中一个按钮实现多表查询并显示出查询数据 跳转到JSP界面没有显示出任何结果", "\npublic void doPost(HttpServletRequest request, HttpServletResponse response)", "\n                throws ServletException, IOException {", "\n            request.setCharacterEncoding(\"utf-8\");", "\n            response.setContentType(\"text/html\");", "\n            System.out.println(\"111111111\");", "\n            PrintWriter out = response.getWriter();", "\n            String value=(String)request.getParameter(\"btnType\");", "\n            if(value.equals(\"账单\")){", "\n                User user = (User)request.getSession().getAttribute(\"userNow\");", "\n                String name = user.getUser();//获取房东ID", "\n               AccountCheck ac = new AccountCheck();", "\n               request.setAttribute( \"ValueA\",ac.getAllAccount(name));", "\n               response.sendRedirect(\"zhangdan.jsp\");", "\n               //request.getRequestDispatcher(\"zhangdan.jsp\").forward(request,response);    ", "\n\n", "        }\n        if(value.equals(\"闲置房号\")){\n\n        }\n        if(value.equals(\"即将到期的租客\")){\n\n        }\n    }\n        数据库操作：\n        //查询所有账单的方法\n    public List getAllAccount(String name){\n        List list=new ArrayList();\n        try {\n            url=\"jdbc:sqlserver://localhost:1433;DatabaseName=rh\";\n            Class.forName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");//加载驱动\n            Connection con = DriverManager.getConnection(url, \"rh\", \"123\");//获得连接对象\n          //查询语句\n         String sql=\"select 姓名,house.地址,租金,起始日期,终止日期 from house,renthouse,userinfro where house.代号=renthouse.代号 and renthouse.身份证号码=userinfro.身份证号码 and renthouse='\"+name+\"'\";\n         //stmt.setString(1, name);\n         stmt = con.prepareStatement(sql);\n         System.out.println(sql);\n        ResultSet rs = stmt.executeQuery(sql);\n            //循环结果集，存储在list里面\n            while(rs.next()){\n                list.add(rs.getString(\"1\"));\n                list.add(rs.getString(\"2\"));\n                list.add(rs.getString(\"3\"));\n                list.add(rs.getString(\"4\"));\n                list.add(rs.getString(\"5\"));\n                for(int i = 0;i<list.size();i++){\n                  System.out.println(list.get(i));\n                }\n            }\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n        //返回List\n        return list;    \n    }\n", "\n\n", "}", "\nfrom提交", "\n", "\n", "\n", "<br><br>\n   <input type='submit' btnType=\"action4\"   value=租客信息 style=\"width:80px;height:40px;background-color:#FFFFFF\" onclick=\"document.getElementById('btnType').value=this.type;this.from.submint()\"> <br><br> \n</div>\n", "\n\n", "\n显示查询结果的JSP界面", "\n\n", "\n", "\n", "租客姓名", "\n            ", "地址", "\n            ", "租金", "\n            ", "租房日期", "\n            ", "租房截至日期", "\n          ", "\"+(String)list.get(i)+\"", "\"+(String)list.get(i+1)+\"", "\"+(String)list.get(i+1)+\"", "\"+(String)list.get(i+1)+\"", "\n", "\"+(String)list.get(i+1)+\"", "\n", "\"+(String)list.get(i+1)+\"", "/tr>\");\n     %>     \n               \n", "\n", "在线等 ", "\n"]], "Tag": "程序设计"}
{"Answer": "这不是face++的问题，是wx.request不能直接循环调用，不然会堆积在一起向外部请求api，把循环改成递归的形式就可以了", "Konwledge_Point": "循环控制", "Question": ["关于微信小程序调用face++人脸识别api并发数限制的问题", ["我要循环调用wx.request，有什么办法？直接用for循环是不行的，会把所有的请求都堆积在一起在发送出去", "\n\n", "第一个回答太不用心了，face++不会帮你解决技术问题的，只会问你要不要买产品，我自己用递归解决了。", "\n\n", "有没有小程序界面的样式模板，随便发个过来我把币送出去"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;搞清楚了&amp;#xff0c;是用错变量了&amp;#xff0c;用GetLastKey()代替Waitkey()就可以了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["按键精灵，Call Plugin.Msg.ShowScrTXT在接受按键信息时只能显示一帧", ["代码如下，按 *（106） 复位0，按 +（107）、- （109）控制显示的数字。", "目前情况是每次按下控制键，屏幕只输出1帧后就消失（像素刷新就没了）。而不是无限循环输出。", "如果对Call Plugin.Msg.ShowScrTXT进行单独高频For循环，可以任意实现在屏幕上持续输出。但是在循环结束前，代码不能接受新的按键控制。", "\n", "求问：", "REM-GOTO本身就是无限循环的，只要输入了*（106），Call Plugin.Msg.ShowScrTXT应该是持续输出的，为什么不能？", "怎么写才能不影响代码接受按键又能持续输出在屏幕上。", "\n", "\nRem T", "\n\nAJ = WaitKey()\n", "If", " AJ = ", "106", " Then\n    i = ", "0", "\nElseIf AJ = ", "107", " Then\n    i = i+", "1", "\nElseIf AJ = ", "109", " Then\n    i = i-", "1", "\nEnd ", "If", "\n\nTracePrint i\n", "Call", " Plugin.Msg.ShowScrTXT(", "20", ", ", "20", ", ", "1024", ", ", "768", ", i, \"", "0000", "FF\")\n\n", "Goto", " T\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;防止地址越界的吧&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["这个q的作用是什么？", ["while(q>p)", "     {", "         ", "q=", "(q-1);", "         q--;", "     }", "这个while循环的控制条件是什么意思？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;http-equiv&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;IE&amp;#61;edge&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;width&amp;#61;device-width, initial-scale&amp;#61;1.0&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;ul&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;sm_list&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;sm_Item&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;sm_Item&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;sm_Item&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;sm_Item&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; div &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;createElement&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;div&amp;#34;&lt;/span&gt;);\n    div.&lt;span class=\"hljs-property\"&gt;innerText&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;hi&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; random &amp;#61; &lt;span class=\"hljs-title class_\"&gt;Math&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;floor&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;Math&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;random&lt;/span&gt;() * &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; items &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;querySelectorAll&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.sm_Item&amp;#39;&lt;/span&gt;);\n    &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;querySelector&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.sm_list&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-title function_\"&gt;insertBefore&lt;/span&gt;(div, items[random]);\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["如何利用js的控制在其中ul下的li标签中插入一个div", ["\n\n```html\n<ul ", "class", "=\"", "sm_list", "\">\n            <", "li", " ", "class", "  =\"", "sm_Item", "\">", "1", "</", "li", ">\n            <", "li", " ", "class", "=\"", "sm_Item", "\">", "1", "</", "li", ">\n            <", "li", " ", "class", "=\"", "sm_Item", "\">", "1", "</", "li", ">\n            <", "li", " ", "class", "=\"", "sm_Item", "\">", "1", "</", "li", ">\n        </", "ul", ">\n\n", "\n", "我想在", "ul", "下的", "li", "标签循环下，随机指定位置插入一块", "div", "，请问有很好的方法吗？\n\n", "\n", "<ul ", "class", "=\"", "sm_list", "\">\n            <", "li", " ", "class", "=\"", "sm_Item", "\">", "1", "</", "li", ">\n            <", "li", " ", "class", "=\"", "sm_Item", "\">", "1", "</", "li", ">\n            <", "li", " ", "class", "=\"", "sm_Item", "\">", "1", "</", "li", ">\n            <", "div", " ", "class", "=\"", "sm_Itemads", "\">\n                <", "img", " ", "src", "=\"\" ", "alt", "=\"\">\n            </", "div", ">\n            <", "li", " ", "class", "=\"", "sm_Item", "\">", "1", "</", "li", ">\n        </", "ul", ">\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;python中不存在私有变量&amp;#xff0c;如果类中有属性需要保护&amp;#xff0c;那么可以在属性前面加两个下划线&amp;#xff0c;属性实际名字会被隐藏&amp;#xff08;当然只是被重命名了&amp;#xff0c;还是有办法能访问到&amp;#xff0c;但至少IDE里不直接显示它&amp;#xff0c;你不特意用不会误用&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["_ 在python中的运用场景有哪些", ["1000_000_000 分割数字，让人快速看清有多少位数", "用于for 循环", "for i in range(1000)与 for _ in range(1000)，如果只从控制循环而后面不使用变量i的角度来讲，用_是否效率更高。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;检测到指令后设置一个全局标志&amp;#xff0c;在点阵屏驱动里判断这个标志来控制亮灭&amp;#xff0c;不要在检测的地方直接控制&amp;#xff0c;这会造成结构上的混乱。&lt;br /&gt;另外&amp;#xff0c;串口接收那里有点问题&amp;#xff0c;37 38两次读了SBUF&amp;#xff0c;SBUF是带FIFO的&amp;#xff0c;连续读两次&amp;#xff0c;如果缓冲里有多个数据&amp;#xff0c;那就是读走了两个数据。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["51单片机串口通信接受字符控制LED点阵屏亮灭", ["各位大佛好，想解决的题目是", "\n", "通过串口通信，电脑发送给单片机on时，led点阵屏显示图案；发送off时点阵图案消失", "之前实现了接受on、off使led亮灭，但现在不知道怎么让点阵屏亮灭。下面代码只实现了1*8led亮灭", "\n", "\n", "#", "include", " ", "\"reg52.h\"", "\n\n", "typedef", " ", "unsigned", " ", "int", " u16;    \n", "typedef", " ", "unsigned", " ", "char", " u8;\n\n\n\n", "void", " ", "uart_init", "(u8 baud)", "\n", "{\n    TMOD|=", "0X20", ";    \n    SCON=", "0X50", ";    \n    PCON=", "0X80", ";    \n    TH1=baud;    \n    TL1=baud;\n    ES=", "1", ";        \n    EA=", "1", ";        \n    TR1=", "1", ";        \n}\n\n\n", "void", " ", "main", "()", "\n", "{    \n    ", "uart_init", "(", "0XFA", ");", "//²¨ÌØÂÊÎª9600", "\n\n    ", "while", "(", "1", ")\n    {            \n                            \n    }        \n}\n\n", "void", " ", "uart", "()", " interrupt 4 \n", "{\n    ", "int", " array[", "100", "];\n    u8 rec_data;\n    ", "static", " ", "int", " i=", "2", ";\n    RI = ", "0", ";            \n    rec_data=SBUF;    \n    array[i]=SBUF;\n    ", "if", "((array[i", "-2", "] == ", "'O'", ")&&(array[i", "-1", "] == ", "'N'", "))\n    {\n        P2=", "0x00", ";\n    }\n    ", "else", " ", "if", "((array[i", "-2", "] == ", "'O'", ")&&(array[i", "-1", "] == ", "'F'", ")&&(array[i] == ", "'F'", ")) \n    {\n        P2=", "0xff", ";\n    }\n        i++;\n    SBUF=rec_data;    \n    ", "while", "(!TI);        \n    TI=", "0", ";                    \n}    \n", "\n", "我不清楚的是怎么让led点阵在循环点亮时退出，来读取我下一个字符，请问如何解决呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;楼上的修改一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; ; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n - i; &amp;#43;&amp;#43;j)\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; ( &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ; j &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &amp;#43;&amp;#43;j )\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (num &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n                num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; num&amp;#43;&amp;#43;;\n        }\n        cout &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/733977363056192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["一个c语言的问题 请各位专家解答", ["使用c语言循环语句中的for语句和if条件语句输出如图所示以上程序 应该使用哪个语句控制数字的输出"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; space &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; k&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( m &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; m &amp;lt; space; m&amp;#43;&amp;#43;)\n                &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;);\n\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(m&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; m &amp;lt; count; m&amp;#43;&amp;#43;) {\n                        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, i);\n                        i &amp;#61; i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; ? &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; : i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                }\n                count &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( m &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; m &amp;lt; space; m&amp;#43;&amp;#43;)\n                &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;);\n                space--;\n                &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["关于#c语言#的问题，请各位专家解答！", ["使用c语言循环语句中的for语句和if条件语句输出如图所示以上程序 应该使用哪个语句控制数字的输出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我知道&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c语问题，求解，刚学，㝳解", ["如何控制循环输入？在学习程序设计过程中，大多数情况下，问题会告知我们输入n个数据,那么循环n次可以完成输入。但有的.问题没有具体给出输入多少个数据,需要不断输入数据，直到没有输入数据后，再进行下.一步的数据处理。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你输入数字10,就会打印10行语句,第一行语句打印了一个元素,第二行语句打印了两个元素,第三行语句打印了三个数字,因此可以发现每次需要打印&lt;strong&gt;当前行次数&lt;/strong&gt;,而外层for循环中i变量代表当前行,因此只需要在内层for循环写个条件,使得循环i次,而内存for循环从0开始,因此j&amp;lt;i&amp;#43;1或者j&amp;lt;&amp;#61;i&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言。打印数字金字塔。", ["c语言。打印数字金字塔。", "for循环中为什么是j < i+1 呢？以及如何判断这里的控制变量到底是与n有关还是与循环变量i有关呢？ 需要详细的解答", "\n", "\n", "#", "include", "<stdio.h>", "\n", "void", " ", "pinrtTriangle", "(", "int", " n)", "\n", "{\n    ", "int", " num = ", "1", ";            ", "//输入的内容", "\n    ", "for", "(", "int", " i = ", "0", ";i < n;i++)\n    {\n        ", "for", "(", "int", " j = ", "0", ";j < i+", "1", ";j++)      ", "//为什么是j < i+1 呢？以及如何判断这里的控制变量到底是与n有关还是与循环变量i有关呢？ 需要详细的解答", "\n            ", "printf", "(", "\"%d\"", ",num++);\n        ", "printf", "(", "\"\\n\"", ");\n    }\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "pinrtTriangle", "(n);\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你参考 一下  。其实从算出 平年和闰年 的时候就 可以 用 if判断 用 if  else或者switch都行 。这样会好理解且麻烦 需要 12个分支语句 。&lt;br /&gt;我是直接 乘出来的 你可以&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n  &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; day &amp;#61; countYearDay(&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;);\n  &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(day)\n  &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;countYearDay&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;month, date&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; big &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; small &amp;#61; [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n\n\n    &lt;span class=\"hljs-comment\"&gt;//获取年份 判断 平闰 年&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; day &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Date&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; year &amp;#61; day.getFullYear(); &lt;span class=\"hljs-comment\"&gt;//获取完整的年份(4位)&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// var year &amp;#61; 2000; //获取完整的年份(4位)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; isyear &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (year % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; year % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || year % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;//闰年&lt;/span&gt;\n      isyear &amp;#61; &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;;\n    } &lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; {\n      isyear &amp;#61; &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//平年&lt;/span&gt;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//合法值校验&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; || month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n      &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的月份不合法&amp;#34;&lt;/span&gt;)\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;)) {\n      &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的日期不合法&amp;#34;&lt;/span&gt;)\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; || &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n      &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的日期不合法&amp;#34;&lt;/span&gt;)\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;\n    }\n\n\n    &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; b &amp;#61; [];\n    &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; s &amp;#61; [];\n    &lt;span class=\"hljs-comment\"&gt;//根据 月份 确认 大小月 并计算 第几天&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(b, s)\n    big.map((item, index) &amp;#61;&amp;gt; {\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (item &amp;lt; month) {\n        b.push(item);\n      }\n    })\n\n    small.map((item, index) &amp;#61;&amp;gt; {\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (item &amp;lt; month) {\n        s.push(item);\n      }\n    })\n    &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(b, s)\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;//2月特殊处理&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b.length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; s.length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;//一月的话 就直接输出&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;;\n    } &lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; {\n      &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(b.length * &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;, s.length * &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, isyear, &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;)\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (b.length * &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;) &amp;#43; (s.length * &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;) &amp;#43; isyear &amp;#43; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;;\n    }\n  }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个是简化版本  你把后面的月份补全就行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;countYearDay&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;month, date&lt;/span&gt;) &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; big &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; small &amp;#61; [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n\n\n    &lt;span class=\"hljs-comment\"&gt;//获取年份 判断 平闰 年&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; day &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Date&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; year &amp;#61; day.getFullYear(); &lt;span class=\"hljs-comment\"&gt;//获取完整的年份(4位)&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// var year &amp;#61; 2000; //获取完整的年份(4位)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; isyear &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (year % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; year % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || year % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;//闰年&lt;/span&gt;\n      isyear &amp;#61; &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;;\n    } &lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; {\n      isyear &amp;#61; &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//平年&lt;/span&gt;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//合法值校验&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; || month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n      &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的月份不合法&amp;#34;&lt;/span&gt;)\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;)) {\n      &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的日期不合法&amp;#34;&lt;/span&gt;)\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; || &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n      &lt;span class=\"hljs-built_in\"&gt;console&lt;/span&gt;.log(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入的日期不合法&amp;#34;&lt;/span&gt;)\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;\n    } &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//也就是 1月31 &amp;#43; 当天&lt;/span&gt;\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (month &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) {\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;31&lt;/span&gt; &amp;#43; isyear &amp;#43; &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//也就是 1月 31 天&amp;#43; 2月 &amp;#43;3月的天数 &lt;/span&gt;\n    }\n  }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["JS基础题，要求基础做法，计算题", ["利用流程控制分枝语句或者用for循环做出来一道题。题目：给出月份和日期，算出是当年的第几天。一定要基础做法"]], "Tag": "程序设计"}
{"Answer": "参考这个案例： http://blog.csdn.net/wang4978/article/details/7192584", "Konwledge_Point": "循环控制", "Question": [" 怎么在<%%>中获取绑定的数据源的某个字段的值", ["我后台页面上给前台的一个DataList 绑定了数据源", "\n前台用DataList 循环了一个列表", "\n现在我想做一个根据每次循环出来的一个字段  来控制列表中每次都循环的一些Html代码是否显示", "\n现在遇到的问题是  我申明了变量来接收这个字段的值，但是不知道用什么方式来取出这个值（我的变量赋值是写在<%%>里面的），有没有什么更好的解决方法呢？", "\n\n"]], "Tag": "程序设计"}
{"Answer": "只有一次连接,但是是做了100次的插入后提交事务(与批处理不同,批处理是一次插入100条).", "Konwledge_Point": "循环控制", "Question": ["spring 数据库连接疑惑", ["[code=\"java\"]", "\n ServiceA{", "\n   batchInsert(){", "\n      for(int i=0;i<100;i++){", "\n         aDAO.insert();", "\n      }", "\n   } ", "\n}", "\n[/code]", "\n\n", "用到的框架是spring + ibatis，事务控制采用了spring的声明式事务控制", "\n问题：", "\n    在ServiceA中，batchInsert方法循环执行了100次插入数据库操作，数据库连接是怎么控制的？ 是每调用一次aDAO.insert()就开闭一次，还是在调用batchInsert()的时候就打开连接，打开事务，在batchInsert()方法执行结束时关闭事务，关闭连接。", "\n[b]问题补充：[/b]", "\n这里问的是Connection问题，就是循环执行100次 aDAO.insert()时，数据库连接是怎样的", "\n是连接开闭了100次，", "\n还是只开闭了1次"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;\n\nint main(){\n    int x,i,max&amp;#61;0,min&amp;#61;0;\n    double sum&amp;#61;0,ave&amp;#61;0;\n    int a[10];\n    for(i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;){\n        scanf(&amp;#34;%d&amp;#34;,&amp;amp;a[i]);\n        sum&amp;#43;&amp;#61;a[i];\n        if(max&amp;lt;a[i])\n            max&amp;#61;a[i];\n        if(min&amp;gt;a[i])\n            min&amp;#61;a[i];\n    }\n    ave&amp;#61;sum/10;\n    for(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;)\n        printf(&amp;#34;%d &amp;#34;,a[i]);\n     printf(&amp;#34;\\n&amp;#34;);\n    for(i&amp;#61;5;i&amp;lt;10;i&amp;#43;&amp;#43;)\n        printf(&amp;#34;%d &amp;#34;,a[i]);\n    printf(&amp;#34;平均成绩%f,最高分%d,最低分%d &amp;#34;,ave,max,min);\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["不会敲代码 救命 ！ ！！", ["一个班有10个同学，通过键盘输入成绩，\n并打印输出，每行输出5个同学的成绩。并求出平均成绩，最高分、最低分并输出。算法分析：\n(1)定义一个数组用来存放10个成绩数据。\n(2)用循环结构实现成绩输入；\n(3)用循环结构实现成绩输出,并控制换行；\n(4)使用循环结构求平均成绩、最高分、最低分并输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码说明如下&amp;#xff0c;请查看&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;module&lt;/span&gt; cd2_6 (CLK,CLR,EN,S1,S2,LED); &lt;span class=\"hljs-comment\"&gt;//定义模块名和输入、输出、使能、控制端口&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; CLK,CLR,EN,S1,S2;  &lt;span class=\"hljs-comment\"&gt;//输入端口说明&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;output&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] LED;   &lt;span class=\"hljs-comment\"&gt;//输出端口说明&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; temp;                     &lt;span class=\"hljs-comment\"&gt;//在always中被赋值的要定义为reg类型&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; c;                         &lt;span class=\"hljs-comment\"&gt;//同上一条&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;initial&lt;/span&gt;\n    LED&amp;#61;&lt;span class=\"hljs-number\"&gt;&amp;#39;b000000000001&lt;/span&gt;;   &lt;span class=\"hljs-comment\"&gt;//初始化LED状态为1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; CLK) &lt;span class=\"hljs-comment\"&gt;//posedge CLK表示always语句对CLK信号上升沿敏感&amp;#xff0c;每次上升沿到来就执行always语句块&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;                 &lt;span class=\"hljs-comment\"&gt;//begin 和end搭配&amp;#xff0c;相当于括号&amp;#xff08;&amp;#xff09;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(EN&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)          &lt;span class=\"hljs-comment\"&gt;//使能端口EN&amp;#61;&amp;#61;0&amp;#xff0c;就执行下面的begin end之内的指令&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt;({S1,S2})      &lt;span class=\"hljs-comment\"&gt;//S1、S2为控制端&amp;#xff0c;{}为位拼接运算符&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;&amp;#39;b00&lt;/span&gt;:                     &lt;span class=\"hljs-comment\"&gt;//S1&amp;#61;0、S2&amp;#61;0时&amp;#xff0c;执行下方的begin-end之间语句&amp;#xff0c;为循环移位功能&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt; \n       c&amp;#61;c&amp;#43;&lt;span class=\"hljs-number\"&gt;&amp;#39;b1&lt;/span&gt;;        &lt;span class=\"hljs-comment\"&gt;//c&amp;#43;1,因为c是1位二进制数&amp;#xff0c;所以c要么等于0&amp;#xff0c;要么等于1&amp;#xff08;超过1的部分被舍弃&amp;#xff09;&lt;/span&gt;\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;&amp;#39;b1&lt;/span&gt;) LED&amp;#61;&lt;span class=\"hljs-number\"&gt;&amp;#39;b100100100100&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 部分LED亮&amp;#xff0c;部分灭&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;       LED&amp;#61;&lt;span class=\"hljs-number\"&gt;&amp;#39;b011011011011&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 上次亮的&amp;#xff0c;这次灭&amp;#xff1b;上次灭的&amp;#xff0c;这次亮&amp;#xff1b;&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n   &lt;span class=\"hljs-number\"&gt;&amp;#39;b01&lt;/span&gt;:   &lt;span class=\"hljs-comment\"&gt;//S1&amp;#61;0、S2&amp;#61;1时&amp;#xff0c;执行闪烁功能&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        c&amp;#61;c&amp;#43;&lt;span class=\"hljs-number\"&gt;&amp;#39;b1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;&amp;#39;b1&lt;/span&gt;) LED&amp;#61;&lt;span class=\"hljs-number\"&gt;&amp;#39;b000000000000&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//LED全灭&amp;#xff08;或全亮&amp;#xff09;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;       LED&amp;#61;&lt;span class=\"hljs-number\"&gt;&amp;#39;b111111111111&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//LED全亮&amp;#xff08;或全灭&amp;#xff09;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;&amp;#39;b10&lt;/span&gt;:   &lt;span class=\"hljs-comment\"&gt;//S1&amp;#61;1、S2&amp;#61;0时&amp;#xff0c;执行右移功能&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        temp&amp;#61;LED[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];   &lt;span class=\"hljs-comment\"&gt;//因为要实现首尾状态互换&amp;#xff0c;所以用temp作为中间变量&lt;/span&gt;\n        LED&amp;#61;LED&amp;gt;&amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;//右移&lt;/span&gt;\n        LED[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;]&amp;#61;temp;  &lt;span class=\"hljs-comment\"&gt;//最后一位&amp;#61;首位&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//例如&amp;#xff1a;1010,temp&amp;#61;0&amp;#xff0c;移位后x101&amp;#xff0c;在对最后一位赋值&amp;#xff0c;x&amp;#61;temp&amp;#61;0&amp;#xff0c;所以&amp;#xff1a;1010-&amp;gt;0101&amp;#xff0c;实现循环移位&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;&amp;#39;b11&lt;/span&gt;:   &lt;span class=\"hljs-comment\"&gt;//S1&amp;#61;1、S2&amp;#61;1时&amp;#xff0c;执行左移功能&amp;#xff0c;原理同右移&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        temp&amp;#61;LED[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;];\n        LED&amp;#61;LED&amp;lt;&amp;lt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        LED[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;temp;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;  \n   &lt;span class=\"hljs-keyword\"&gt;endcase&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (CLR&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) LED&amp;#61;&lt;span class=\"hljs-number\"&gt;000000000001&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//如果复位信号CLR&amp;#61;&amp;#61;1&amp;#xff0c;LEN复位为初始状态&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt; \n&lt;span class=\"hljs-keyword\"&gt;endmodule&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["verliog语言代码注解，代码已完成。（尽量详细，最好每一步都有）", ["1、用FPGA实现彩灯控制电路的设计。", "2、彩灯控制电路具有1个复位按钮，当按钮按下后开始彩灯控制电路的工作。", "3、彩灯控制电路至少有4种以上的控制模式，如左移、右移、循环移位和闪烁等，彩灯控制电", "路开始工作后，各工作模式能自动切换。", "4、用12只发光二极管（LED）显示彩灯控制电路的工作模式。", "\n", "fpq是一个20MHZ的分频器，将仪器提供的频率为20MHZ时钟转换成1HZ的时钟，然后输出到有需要的端口，触发模块起作用。", "cd2-6是彩灯控制程序，用来控制彩灯的四种模式。CLK是时钟控制信号，CLR是复位信号，EN是使能端，S1,S2是可以改变LED灯的，如左移、右移和循环移位等。", "程序", "（1）module fpq(clkin,clkout);", "input clkin;", "output reg clkout;", "reg[24:0] temp;", "always ", "@(posedge ", "clkin)", "begin", "   if(temp<20000000) temp=temp+'b1;", "    else temp=0;", "endalways ", "@(posedge ", "clkin)", "begin", "      if(temp<10000000) clkout='b0;", "    else clkout='b1;", "end", "endmodule", "彩灯程序", "（2）module cd2_6 (CLK,CLR,EN,S1,S2,LED);", "input CLK,CLR,EN,S1,S2;", "  output reg [11:0] LED;", "  reg temp;", " reg c;", " initial", "  LED='b000000000001;", "   always ", "@(posedge ", "CLK)", "   begin", "  if(EN==0)", "   begin", " case({S1,S2})", "       'b00:begin", "           c=c+'b1;", "          if(c=='b1)", "          LED='b100100100100;", "          else", "         LED='b011011011011;", "        end", "      'b01:begin", "       c=c+'b1;", "        if(c=='b1)", "           LED='b000000000000;", "           else", "           LED='b111111111111;", "          end", "     'b10:begin", "      temp=LED[0];", "          LED=LED>>1;", "           LED[11]=temp;", "          end", "      'b11:begin", "             temp=LED[11];", "            LED=LED<<1;", "               LED[0]=temp;", "           end", "   endcase", "  end", "  if (CLR==1) LED=000000000001;", "  end endmodule"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,n;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入1-9之间的数字:&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i;j&amp;lt;n;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i;j&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j--){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,j);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,j);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;putchar&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n} \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/523555518176151.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["输出下图数字1在中间的三角形", ["提示用户输入一个1-9之间的整数，控制金字塔的行数，显示金字塔的形状的图案，请使用双重循环完成", "我只能写出一半", "这是我写的代码"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/Bozh/archive/2012/04/21/2461074.html", "Konwledge_Point": "循环控制", "Question": ["进程池实现的多进程服务器问题", ["main函数中先实现进程池。主进程创建pipe管道，fork出一个子进程，作为控制进程，在控制进程中fork多个子进程作为业务处理进程，全部阻塞。", "\n接着主进程开始socket一系列操作，在accept阻塞。", "\nwhile(1){", "\n    connect_socket = accepet();", "\n    ...", "\n    kill(control_pid,SIGUSR1);", "\n}", "\n现在我把connect_socket描述符通过pipe管道传给控制进程，通过控制进程去调度业务进程处理业务。", "\n那么问题来了，我用signal SIGSUR1去通知控制进程任务到来。现在多个客户端几乎同时连接服务端，该如何实现控制进程接受任务取得pipe中的连接套接字而不重入导致部分任务被忽略？", "\n\n", "我之前的做法是定义一个全局原子变量count，信号处理函数中++count，在控制进程中通过判断count与上次循环的值做比较判断任务是否到来。但是信号处理函数返回后如果立刻又接受到信号会导致任务忽略。", "\n求大牛们帮忙给个更好的处理方案，原则是pipe管道的通信方式不变，因为通过共享内存实现的话我不需要控制进程调度业务进程了，主进程完全可以实现调度，现在需要解决的就是如何实现给控制进程发送信号无论什么情况下他都不会遗漏接收连接套字并且传输给业务进程通知处理。谢谢", "\n\n", "不知道在算法层面能否解决这个问题，如果能解决的话更好了"]], "Tag": "程序设计"}
{"Answer": "这个要看你是通过什么了，如果你只是一个单机版的小工具的话，那用swing写个简单的界面，然后用一个Button按钮，写一个这个按钮的监听，就可以实现了，参考代码如下：\r\nJFrame是这种swing程序的父类，继承他，然后实现ActionListener就能继承一个监听方法了\r\npublic class MenuDemo extends JFrame implements ActionListener {\r\nprivate JButton jbtAdd;\r\npublic MenuDemo(){\r\nJPanel p1 = new JPanel(new FlowLayout());\r\n p1.add(new JLabel(\"me\"));\r\n p1.add(add = new JButton(\"Add\"));\r\n getContentPane().add(p1, BorderLayout.CENTER);\r\n add.addActionListener(this);\r\n\r\n//上面这个代码就是完成给名字叫Add的那个Button添加事件\r\n}\r\n\r\n//线面这个方法是必须要的，其中他的参数就是来得到你的事件的，具体得到事件以后要做什么就根据你自己来定了\r\npublic void actionPerformed(ActionEvent e) {\r\n        String actionCommand = e.getActionCommand();\r\n\r\n        // Handle button events\r\n        if (e.getSource() instanceof JButton) {\r\n            if (\"Add\".equals(actionCommand))\r\n\r\n}\r\n\r\n}\r\n\r\n上面是一些主要代码，如果你要同过页面来控制，那就要写另一种了。", "Konwledge_Point": "循环控制", "Question": ["多线程问题", ["我想问一下  怎么能用鼠标控制多线程的开始和结束。。。", "\n\n", "比如在多线程循环执行的时候点下鼠标就停止  在点一下重新开始。。 ", "\n\n", "知道的 告诉下吧 。。   谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stm32f10x.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;led.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;key.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\nu8 num;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{    \n      &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n      {    \n        &lt;span class=\"hljs-built_in\"&gt;init&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;initconfig&lt;/span&gt;();\n        num&amp;#61;&lt;span class=\"hljs-built_in\"&gt;ReadKeyDown&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(num)\n        {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: \n            &lt;span class=\"hljs-built_in\"&gt;f0&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: \n            &lt;span class=\"hljs-built_in\"&gt;f1&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: \n            &lt;span class=\"hljs-built_in\"&gt;f2&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: \n            &lt;span class=\"hljs-built_in\"&gt;f3&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;f4&lt;/span&gt;(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;Delay&lt;/span&gt;(delay);\n      } \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stm32f10x.h&amp;#34;&lt;/span&gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;key.h&amp;#34;&lt;/span&gt;\nvoid initconfig&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;\n{\n     GPIO_InitTypeDef GPIO_InitStructure;\n\n  &lt;span class=\"hljs-comment\"&gt;/* Configure KEY1 Button */&lt;/span&gt;\n  &lt;span class=\"hljs-constructor\"&gt;RCC_APB2PeriphClockCmd(RCC_KEY1, ENABLE)&lt;/span&gt;;\n\n  GPIO_InitStructure.GPIO_Mode &amp;#61; GPIO_Mode_IPU;\n  GPIO_InitStructure.GPIO_Pin &amp;#61; GPIO_KEY1;\n  &lt;span class=\"hljs-constructor\"&gt;GPIO_Init(GPIO_KEY1_PORT, &amp;amp;GPIO_InitStructure)&lt;/span&gt;;\n\n  &lt;span class=\"hljs-comment\"&gt;/* Configure KEY2 Button */&lt;/span&gt;\n  &lt;span class=\"hljs-constructor\"&gt;RCC_APB2PeriphClockCmd(RCC_KEY2, ENABLE)&lt;/span&gt;;\n\n  GPIO_InitStructure.GPIO_Mode &amp;#61; GPIO_Mode_IPU;\n  GPIO_InitStructure.GPIO_Pin &amp;#61; GPIO_KEY2;\n  &lt;span class=\"hljs-constructor\"&gt;GPIO_Init(GPIO_KEY2_PORT, &amp;amp;GPIO_InitStructure)&lt;/span&gt;;\n\n  &lt;span class=\"hljs-comment\"&gt;/* Configure KEY3 Button */&lt;/span&gt;\n  &lt;span class=\"hljs-constructor\"&gt;RCC_APB2PeriphClockCmd(RCC_KEY3, ENABLE)&lt;/span&gt;;\n\n  GPIO_InitStructure.GPIO_Mode &amp;#61; GPIO_Mode_IPU;\n  GPIO_InitStructure.GPIO_Pin &amp;#61; GPIO_KEY3;\n  &lt;span class=\"hljs-constructor\"&gt;GPIO_Init(GPIO_KEY3_PORT, &amp;amp;GPIO_InitStructure)&lt;/span&gt;;  \n\n  &lt;span class=\"hljs-comment\"&gt;/* Configure KEY4 Button */&lt;/span&gt;\n  &lt;span class=\"hljs-constructor\"&gt;RCC_APB2PeriphClockCmd(RCC_KEY4, ENABLE)&lt;/span&gt;;\n\n  GPIO_InitStructure.GPIO_Mode &amp;#61; GPIO_Mode_IPU;\n  GPIO_InitStructure.GPIO_Pin &amp;#61; GPIO_KEY4;\n  &lt;span class=\"hljs-constructor\"&gt;GPIO_Init(GPIO_KEY4_PORT, &amp;amp;GPIO_InitStructure)&lt;/span&gt;;\n}\nu8 &lt;span class=\"hljs-constructor\"&gt;ReadKeyDown(&lt;span class=\"hljs-params\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n{\n  &lt;span class=\"hljs-comment\"&gt;/* 1 key is pressed */&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!&lt;span class=\"hljs-constructor\"&gt;GPIO_ReadInputDataBit(GPIO_KEY1_PORT, GPIO_KEY1)&lt;/span&gt;)\n  {\n    return KEY1; \n  }    \n  &lt;span class=\"hljs-comment\"&gt;/* 2 key is pressed */&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!&lt;span class=\"hljs-constructor\"&gt;GPIO_ReadInputDataBit(GPIO_KEY2_PORT, GPIO_KEY2)&lt;/span&gt;)\n  {\n    return KEY2; \n  }\n  &lt;span class=\"hljs-comment\"&gt;/* 3 key is pressed */&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!&lt;span class=\"hljs-constructor\"&gt;GPIO_ReadInputDataBit(GPIO_KEY3_PORT, GPIO_KEY3)&lt;/span&gt;)\n  {\n    return KEY3; \n  }\n  &lt;span class=\"hljs-comment\"&gt;/* 4 key is pressed */&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!&lt;span class=\"hljs-constructor\"&gt;GPIO_ReadInputDataBit(GPIO_KEY4_PORT, GPIO_KEY4)&lt;/span&gt;)\n  {\n    return KEY4; \n  }\n  &lt;span class=\"hljs-comment\"&gt;/* No key is pressed */&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n  {\n    return NOKEY;\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#include &lt;span class=\"hljs-string\"&gt;&amp;#34;stm32f10x.h&amp;#34;&lt;/span&gt;\n#include &lt;span class=\"hljs-string\"&gt;&amp;#34;led.h&amp;#34;&lt;/span&gt;\n#include &lt;span class=\"hljs-string\"&gt;&amp;#34;key.h&amp;#34;&lt;/span&gt;\nu8 n;\nvoid init()\n{\n     GPIO_InitTypeDef GPIO_InitStructure;       /* 配置LED灯使用的GPIO管脚模式*/\n      RCC_APB2PeriphClockCmd(RCC_GPIO_LED, ENABLE); /*使能LED灯使用的GPIO时钟*/\n       GPIO_InitStructure.GPIO_Pin &amp;#61; LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;; \n      GPIO_InitStructure.GPIO_Mode &amp;#61; GPIO_Mode_Out_PP;\n      GPIO_InitStructure.GPIO_Speed &amp;#61; GPIO_Speed_50MHz;\n      GPIO_Init(GPIO_LED, &amp;amp;GPIO_InitStructure);  /*使用的LED灯相关的GPIO口初始化*/\n      GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);/*关闭所有的LED指示灯*/\n}\nvoid Delay(vu32 nCount)\n{\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(; nCount !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; nCount--);\n}\nvoid f1()\n{   \n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD4_PIN|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD3_PIN|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD2_PIN|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    n&amp;#61;ReadKeyDown();\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)f1();\n}\nvoid f2()\n{\n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n     GPIO_SetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;);    Delay(delay);\n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD2_PIN|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    n&amp;#61;ReadKeyDown();\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)f2();\n}\nvoid f3()\n{\n    GPIO_SetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);       Delay(delay);\n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD2_PIN|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;);       Delay(delay);\n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD3_PIN|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;);       Delay(delay);\n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD4_PIN|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;);       Delay(delay);\n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    n&amp;#61;ReadKeyDown();\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)f3();\n}\nvoid f0()\n{   \n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n}\nvoid f4()\n{   \n    GPIO_ResetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD3_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD5_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD7_PIN&lt;/span&gt;|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD1_PIN|&lt;span class=\"hljs-type\"&gt;LD2_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD3_PIN|&lt;span class=\"hljs-type\"&gt;LD4_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD5_PIN|&lt;span class=\"hljs-type\"&gt;LD6_PIN&lt;/span&gt;);      Delay(delay);\n    GPIO_SetBits(GPIO_LED,LD7_PIN|&lt;span class=\"hljs-type\"&gt;LD8_PIN&lt;/span&gt;);      Delay(delay);\n    n&amp;#61;ReadKeyDown();\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)f4();\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["请问f1的程序怎么写", ["项目一、花样流水灯的制作1", "利用STM32单片机的8个IO口实现花样流水灯。上电后，间隔点亮每四个LED灯，如图所示：灭开灭开——开灭开灭间隔时间为0.5s.", "项目二、花样流水灯的制作2", "利用STM32单片机的8个IO口实现花样流水灯。上电后，循环点亮每一个LED灯，间隔时间为0.5s。当k1按下时，控制流水灯在全亮和全熄灭之间循环，间隔时间为0.5s；当k2按下时，控制一个LED灯闪烁，间隔时间为0.5s；当任何按键松开时，恢复循环初始状态。", "项目三、LED数码管定时器的制作", "利用2位LED数码管制作一个1分钟定时器，最小计时单位为“1秒”，计时显示范围为：0~59。上电时数码管显示“00”，按键K1按下时，定时器开始计时并在数码管上显示；第一次按键K2时，定时器暂停计时，第二次按下K2时，清零。"]], "Tag": "程序设计"}
{"Answer": "用公式计算\r\n\r\n\r\n\r\n```\r\n j = (1+n)*n/2\r\n```", "Konwledge_Point": "循环控制", "Question": ["大佬们，怎么把这个程序算非常大的数时 计算用的时间更短 ？", ["#include", "\nint main()", "\n{", "\n    int n,i;//n存放输入的数值，i控制循环", "\n    long j;//j存放每次循环的累加值", "\n    j=0;", "\n    scanf(\"%d\",&n);", "\n    if(1<=n<=1000000000)//n的取值范围", "\n    {", "\n        for(i=1; i<=n; i++)", "\n        {", "\n            j=j+i;", "\n        }", "\n        printf(\"%I64d\",j);", "\n    }", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果是字符&amp;#xff0c;可以直接写文件&amp;#xff0c;数字的话可以先把数字转成字符&amp;#xff0c;然后在写文件。&lt;br /&gt;itoa函数可以实现int转字符串。也可以使用fprintf写入。&lt;br /&gt;如有帮助&amp;#xff0c;请帮忙采纳一下&amp;#xff0c;谢谢。&lt;br /&gt;代码参考如下&amp;#xff1a;&lt;br /&gt;效果图及写文件情况如下&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/897427131536173.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    FILE* fp;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; op;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1.以文本形式保存到文件\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2.以二进制形式保存到文件\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择打开文件方式:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;op);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61; op)\n    {\n        fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;aaa.txt&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//以文本形式打开文件&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(fp&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a);\n        &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        fp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;bbb.txt&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;wb&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//以二进制形式打开文件&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(fp&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;fwrite&lt;/span&gt;(&amp;amp;a,&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,fp);\n        &lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n    }\n    &lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["所有数据以文本或二进制文件保存", ["1.所有数据要以文本或二进制文件保存的代码怎么写", "2.采用友好的字符界面，实现一个功能控制菜单。", "每次操作都从该菜单选择，利用循环结构使得一次运行程序可进行多次操作"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个a[i]&amp;#61;0&lt;br /&gt;那个sum加加也会执行&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["C语言鲁智深吃馒头问题", ["\n", "为什么第一张图中sum++所在的位置会出现这种结果，每次嵌套循环后，a[i]的值都会变，以至sum++位于那两个位置时，它们的值的变化是一致的，为何第一种情况在控制台上无法打出?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;java 控制循环条件 只需要是一个全局的变量就行了 &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["java程序信号捕获问题", ["现在想实现一个功能，java程序内部有一个while循环，while的条件怎么在程序外部控制？", "\n", "例while(flag)，程序收到kill信号，让这个flag变为false", "\n", "有什么便捷的方法吗 Signal能实现嘛？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;&amp;lt;script language&amp;#61;&amp;#34;JavaScript&amp;#34;&amp;gt;\n     //九九乘法表\n     //行      \n     for(var i&amp;#61;1;i&amp;lt;&amp;#61;9;i&amp;#43;&amp;#43;){\n        // 列     \n         for(var j&amp;#61;1;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n         \t\n         \tif(j&amp;lt;&amp;#61;i){             \t\t\n         \t\tdocument.write( &amp;#34;&amp;lt;div &amp;gt;&amp;#34;);\n         \t\tdocument.write(i&amp;#43;&amp;#34;*&amp;#34;&amp;#43;j&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;i*j);             \t\t\n         \t\tdocument.write(&amp;#34;&amp;lt;/div&amp;gt;&amp;#34;);\n         \t}    \n         }  \n     \n     document.write(&amp;#34;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#34;);\n}\n    \n\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code&gt;&amp;lt;style type&amp;#61;&amp;#34;text/css&amp;#34;&amp;gt;\n    \n  div{\n    background: #ADD8E6;\n    border: solid 1px #AAC9CE;\n    color: #B6B4C2;      \n    width: 100px;\n    float: left;\n    text-align: center;\n    border-radius: 5px;\n    margin: 3px;\n    }\n    \n&amp;lt;/style&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"433\" src=\"https://img-ask.csdnimg.cn/upload/1624179420054.png\" width=\"1231\" /&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["利用JavaScript和css设计九九乘法表", ["利用for循环表述九九乘法表，但做出来的表格是按钮的模式，点击（例如1x1=1点击这个按钮后答案可以显示或隐藏），在表格后面有显示和清除的按钮可以控制整个九九乘法表(T ^ T)"]], "Tag": "程序设计"}
{"Answer": "下面提到了免费版本跟全屏的关系：\r\n[quote] if you downloaded a free copy, than you wont be able to maximize to full. as stupid as it seems you have to purchase a copy to get the movies to be full screen. [/quote]\r\n来自：http://forums.techguy.org/multimedia/283441-quicktime-fullscreen.html\r\n===============分割线=============================\r\n下面提到了全屏的问题。可以小试其中的代码。不能保证100%有帮助。\r\nhttp://topic.csdn.net/t/20040629/13/3131043.html", "Konwledge_Point": "循环控制", "Question": ["请教在网页中嵌入视频播放器进行视频播放的问题", ["通过GG和BD了解到，目前在网页中嵌入视频播放器（Media player或quicktime）方法都比较简单，都主要是下载到本地进行播放。", "\n  但是一直没有搞懂如何基于RTP协议做到边下载边播放，服务器是不是只用tomcat还不行？是否一定还要安装个流媒体服务器呢？", "\n  谁有quicktime播放器的控制参数啊（自动播放，显示边框，进度条，推拉控制）？网上大部分都是Media player的参数。 quicktime是否不能设置多次或循环播放呢？", "\n\n", "第一次提问，如果没有说清楚请将就一下。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;showTriangle&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;showRectangle&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;showSquare&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-------图形打印------\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1.直角三角形\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2.长  方  形\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3.正  方  形\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4.退      出\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n)\n        {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;showTriangle&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;showRectangle&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;showSquare&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["如何使用c++完成下列图片所属内容", ["如何用if语句循环", "这是我打的代码第一段，后面就不会了", "#include <stdio.h>", "int main()", "{", "int i,j;n", "printf(\"\")", "for (i=0;i<4;i++) //i<3 or i<=4;第一个for语句是控制几行，第二个是控制几列；", "   {", "    for(j=0;j<8;j++)", "    printf(\"", "\"); //或printf（“", " ”）相差一个空格", "    printf(\"\\n\");", "    }"]], "Tag": "程序设计"}
{"Answer": "jQuery(function(){ \r\n\tjQuery('#play').click(function(){ \r\n\t      var video = jQuery(\"#example\")[0];\r\n\t      if (video.paused) {\r\n\t\tvideo.play();\r\n\t      }\r\n\t}); \r\n\tjQuery('#stop').click(function(){ \r\n\t      var video = jQuery(\"#example\")[0];\r\n\t      if (!video.paused) {\r\n\t\tvideo.pause(); // 暂停\r\n\t      }\r\n\t}); \r\n});", "Konwledge_Point": "循环控制", "Question": ["html5的 video标签", ["自己用html5 的标签写了一个视频播放的页面，我想用js来控制播放 停止 循环播放", "您的浏览器不支持HTML5  video  标签", "\n\n", "点播放的时候我想给video标签增加了自动播放的属性，可是没有自动播放，怎么回事啊？\njQuery(function(){\n             jQuery('#play').click(function(){\n                  jQuery(\"#example\").attr('autoplay','true');\n             });\n    });\n怎么通过js来控制这个视频的播放情况啊？ \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这里给你推荐一个函数&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;SetConsoleTextAttribute(HANDLE hConsoleOutput,WORD wAttributes)&lt;/strong&gt;&lt;br /&gt;这个函数可以修改输出的字符的颜色&lt;br /&gt;HANDLE hConsoleOutput &amp;#xff1a; 窗口标准输出句柄&amp;#xff0c;填入GetStdHandle(STD_OUTPUT_HANDLE)&lt;br /&gt;WORD wAttributes &amp;#xff1a;填入颜色号&lt;br /&gt;颜色表如下&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/339179805336187.PNG\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["用C++进行字符彩绘", ["题目是：用cout加格式控制，并从ASCII码表中挑选合适的显示字符，绘画出一幅画。", "画高大于等于20行，画宽大于等于40。", "\n", "采用的字符：输出格式控制符、函数或单个字符。代码中不能从字符串中一眼就看出最终的运行结果，要找字符串中字符的规律。", "画法分析：先确定好各点坐标，转化成循环，条件等语句，然后输出。", "\n", "救命啊零基础大一新生，老师什么都没讲就让自学，我去哪查资料都查不到，我想弄下面的图", "\n", "主要还是想搞懂代码怎么打，拜托大家帮帮忙！！"]], "Tag": "程序设计"}
{"Answer": "1.windrows下可以用conio.h里的getch ()来实现，用if来判断有没有输入", "Konwledge_Point": "循环控制", "Question": ["C语言如何实现读取键盘信息，如果一段时间检测键盘没有输入，就跳过，执行下面的代码？", ["在做一个C语言的大球吃小球的游戏，通过键盘WASD来控制大球移动，在大球移动的同时小球也移动，在一个大循环里，我试了getch（），可是如果没有键盘输入就会卡住，有没有方法可以在比较短时间内检测，如果没有的话就不再等待了，执行下面的步骤。不用多线程的方法怎么实现啊？谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问了好多人 结果发现是一个很简单的问题  我的意思是想 循环了两个大盒子 大盒子中都有一个小盒子 我想通过这个数据中爱马仕这个字段 来判断 小盒子的隐藏显示    结果是我写复杂了 直接在小盒子里面v-if&amp;#61;item。productName就好了  &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["vue项目如何获取数组对象的某个值", [" ", "data", "() {\n    ", "return", " {\n      Name1: ", "false", ",\n      ", "data", ": [\n        {\n          Name: ", "\"糖糖\"", ",\n          productName: ", "\"爱马仕\"", ",\n        },\n        {\n          Name: ", "\"华华\"", ",\n        },\n      ],\n    };\n  },\n  created() {\n    ", "this", ".Name();\n  },\n  methods: {\n    Name() {\n      ", "this", ".", "data", ".map((item) => {\n        ", "if", " (item.productName === ", "\"爱马仕\"", ") {\n          ", "this", ".Name1 = ", "true", ";\n        }\n      });\n    },\n\n", "\n", "下面是结构代码", "\n", " <", "div", " ", "class", "=", "\"box-wrap\"", ">\n      <", "div", "\n        ", "class", "=", "\"box\"", "\n        v-", "for", "=", "\"(item, index) in data\"", "\n        :key=", "\"index\"", "\n      >\n        <", "div", " ", "class", "=", "\"box-title\"", ">\n          <", "div", " ", "class", "=", "\"product-name\"", " v-", "if", "=", "\"Name1\"", ">\n            {{ ", "item", ".productName }}\n          </", "div", ">\n        </", "div", ">\n      </", "div", ">\n    </", "div", ">\n\n", "\n", "根据这两个数组对象的数据来 循环了两个div盒子  然后这两个盒子中有个class=product-name的小盒子 想通过productName这个字段来判断这个小盒子的显示 隐藏  即想要循环的两个大盒子中 一个有小盒子 一个没有小盒子", "想用name1 的布尔值来控制   但是获取不到 对应的‘爱马仕’这个字段 不知道哪里写错了"]], "Tag": "程序设计"}
{"Answer": "这不是典型的服务器 MASTER SLAVE 主从式的设计。例子不要太多啊...hadoop 就是活生生的例子。JobTracker 与 taskTracker 这些，master 的 Hmaster 与 HRegoin。。。按楼主意思，格局貌似很小，有一种pool的概念，注册插件的意思？ 是不是要用master专门做监控的呢？ 欢迎讨论，先给我分。", "Konwledge_Point": "循环控制", "Question": ["master worker模式", ["最近我在设计一套系统，初步想法是利用一个master来控制所有的worker（执行实际操作），通过配置可以增加或减少worker的数量，并且可以监测worker的存活性，但不使用master来为worker分配“工作”。", "\n\n", "worker可以看做是个线程，不断循环执行的线程。", "\n\n", "不知大家是否有类似的框架或者实现，请提出您的意见，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;从图上看&amp;#xff0c;就是个列表&amp;#xff0c;&lt;br /&gt;head &amp;#61; [非province_id部分]&lt;br /&gt;prov &amp;#61; [f&amp;#39;province_id_{i}&amp;#39; for i in range(1,31)]&lt;br /&gt;reg_data1[head &amp;#43; prov] 这样就行了吧&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["【python】便捷表示从1-30的组内相同数据", ["如图，红色部分有大量重复的province_id_i，编码从1到30，由于是函数部数据，我一个个敲了，现在要做城市的控制，300多个id，有没有专业人员知道不破坏上下函数关系的情况怎么便捷表示1到300个数据；", "ps：我想过for循环，但是怕破坏函数内部关系，很苦恼。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以调用pygame中的mixer&amp;#xff0c;支持MP3&lt;br /&gt;pygame.mixer.music.load()加载音乐&lt;br /&gt;pygame.mixer.music.play()播放音乐&lt;br /&gt;pygame.mixer.music.pause()暂停音乐&lt;br /&gt;pygame.mixer.music.set_volume(value)设置音量范围是0.0&amp;#xff0d;1.0&lt;br /&gt;pygame.mixer.music.get_volume()获取音量大小&lt;/p&gt;\n&lt;p&gt;pygame.mixer.music.get_pos()    获取播放时长&amp;#xff0c;单位为毫秒&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["求Python可以播放音乐的库！（急 用！）", ["本人在做一个音乐播放器，但苦于找不到合适的播放音乐的库。", "需要功能：", "1、支持 Python3，Windows7", "2、可以从本地导入播放wma，最好也可以播放mp3", "3、可以开始、暂停、继续等，能获取、控制播放进度，", "！重要！", "4、操作简单，不需要安装大量冗杂库（如FFmpeg）", "5、不进入消息或事件循环（会影响tkinter）", "谢 谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;pygame,需要下载pip install pygame&lt;br /&gt;pygame.mixer库专门用来放音效&amp;#xff0c;音乐&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["求在Python3播放音乐的库？", ["本人在做一个音乐播放器，但苦于找不到合适的播放音乐的库。", "需要功能：", "1、支持 Python3，Windows7", "2、可以从本地导入播放wma，最好也可以播放mp3", "3、可以开始、暂停、继续等，能获取、控制播放进度，", "！重要！", "4、操作简单，不需要安装大量冗杂库（如FFmpeg）", "5、不进入消息或事件循环（会影响tkinter）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.docin.com/p-338422194.html\"&gt;https://www.docin.com/p-338422194.html&lt;/a&gt;&lt;br /&gt;看看这个&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["大二微机原理接口设计专题报告", ["接口设计专题题目一", "1，流水灯显示接口设计并编写程序，使8255的A口和B口均为输出，数据灯D7～D0由左向右，每次仅点亮一个灯，循环显示，D15～D8与D7～D0正相反，由右向左，每次仅点亮一个灯，循环显示。", "接口设计专题题目二", "某8086CPU的微机系统中使用了一块8253芯片，其通道端口地址为608H,60AH,60CH,控制口地址为60EH,3个通道使用同一个输入时钟，频率为1MHz,要求完成如下功能:", "  ——利用计数器0采用硬件触发，输出宽度等于时钟周期的单脉冲，定时常数为40H；", "  ——利用计数器1输出频率为2KHz的对称方波；", "  ——利用计数器2产生宽度为0.6ms的单脉冲，", "\n", "  设定该定时系统并编写初始化程序。"]], "Tag": "程序设计"}
{"Answer": "你是想从一堆单词中找出 回文词？比如 wow deed 这种？压根不需要这么多循环啊！", "Konwledge_Point": "循环控制", "Question": ["【c语言】希望实现一个5x5方格里面不管横着读还是竖着读都是一个英文单词，不知道哪里错了", ["\n结果就是这样一直不动了", "\n注：txt文档里已经是筛选好的大英词典里所有5个字母的单词", "\n\n", "#include <stdio.h>\n#include<string.h>\nint main()\n{\nFILE *fp;\nint i,j,k,a,b,c,d,e,a1=0,b1=0,c1=0,d1=0,e1=0;\nchar words[10000][21],zi[5][6],jie[5][6];//最多读100个单词，每个单词不超过20个字符\nfp=fopen(\"D:\\\\5.txt\",\"r\");\nif (fp==NULL)\n{\nprintf(\"open file error\\n\");\nreturn -1;\n}\nfor(i=0;i<10000;i++)//循环读取，控制不超过100个\n{\nif(fscanf(fp,\"%20s\",words[i])!=1)//控制每个单词不超过20个\nbreak;\n}\nfclose(fp);\nfor(a=0;a<i;a++)//反向输出各单词\n{\n    for(b=0;b<i;b++)\n    {\n        for(c=0;c<i;c++)\n        {\n            for(d=0;d<i;d++)\n            {\n                for(e=0;e<i;e++)\n                {\nstrcpy(zi[0],words[a]);\nstrcpy(zi[1],words[b]);\nstrcpy(zi[2],words[c]);\nstrcpy(zi[3],words[d]);\nstrcpy(zi[4],words[e]);\nfor(j=0;j<5;j++)\n{\n    for(k=0;k<5;k++)\n    {\n        jie[j][k]=zi[k][j];\n    }\n}\nfor(j=0;j<5;j++)\n{\n    jie[j][5]='\\0';\n}\na1=0,b1=0,c1=0,d1=0,e1=0;\nfor(j=0;j<i;j++)\n{\n    if(strcmp(jie[0],words[j])==0)\n    {a1++;continue;}\n}\nfor(j=0;j<i;j++)\n{\n    if(strcmp(jie[1],words[j])==0)\n    {b1++;continue;}\n}\nfor(j=0;j<i;j++)\n{\n    if(strcmp(jie[2],words[j])==0)\n    {c1++;continue;}\n}\nfor(j=0;j<i;j++)\n{\n    if(strcmp(jie[3],words[j])==0)\n    {d1++;continue;}\n}\nfor(j=0;j<i;j++)\n{\n    if(strcmp(jie[4],words[j])==0)\n    {e1++;continue;}\n}\nif(a1&&b1&&c1&&d1&&e1)\nprintf(\"ssss\");\n\n\n                }\n            }\n        }\n    }\n}\nreturn 0;\n}\n", "\n\n", "现在程序运行不报错，但程序结果什么也没有（就是一片空白，回车也不会结束），不知道哪里错了，请大家指点一二，感激不尽！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入是按空格分开&amp;#xff0c;要是逗号你可以加一个getchar()&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *p &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;j&amp;#43;&amp;#43;,p&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,p);\n        }\n    }\n    p &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入m n&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;m,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,*(p&amp;#43;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*m&amp;#43;n));\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["C语言，指针和数组的问题", ["定义一个int a[3][4]，定义一个行指针*p，指针指向第0行，通过两次循环，往这个二维数组中赋值（通过操作p指针来控制地址），1,2,3,4,5,6,7,8,9,10,11,12。最后，通过键盘输入两个值mm，n，通过指针输出a[m][n]的值。"]], "Tag": "程序设计"}
{"Answer": "Recordset-&gt;RecordCount的值是-1\r\n是的，对于一些类型的游标，不支持这个属性，以GetCount()为准。", "Konwledge_Point": "循环控制", "Question": ["Command指针返回Recordedset指针怎么不能输出RecordCount？", ["在Win32控制台下，学习ADO连接数据库，做查询功能时候，用Command指针执行SQL语句，返回的记录集赋给一个Recordset指针，打印Recordset指针里的数据的时候，发现数据没有打印出来，调试后发现是打印的for循环语句里Recordset->RecordCount的值是-1。但Recordset->Feilds->GetCount()的值又正常。", "\n为什么无法得到RecordCount的值呢？难道Command指针返回的Recordset无法得到这个值？"]], "Tag": "程序设计"}
{"Answer": "把定时器写在服务器端   到四天之后从服务器推送过来消息 ，这样刷新页面就不会有上面影响\r\n而不是在客户端js中写这个东西", "Konwledge_Point": "循环控制", "Question": ["定时任务sleep在刷新页面后不执行", ["也是个客户的奇葩需求，需要在php中搞一个定时任务，在N天后执行，我在网上找到的方法是用while循环，里面用sleep（）控制任务启动时间，但是问题在于到启动时间之前页面不能跳转，如果我把跳转写到sleep（）之前的话，sleep就不执行了", "\n其实最头痛的问题主要是在sleep执行的时候客户不能做别的事情了，而且客户需要定时的时间很长，差不多4天的样子，所以想问问有没有别的办法"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;e3;\n&lt;span class=\"hljs-attribute\"&gt;z_arr&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;arr&lt;/span&gt;&amp;#61;[];\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;-&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt;&amp;#61;transpose(-&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;r&lt;/span&gt;&amp;#61;sqrt(x.*x&amp;#43;y.*y);\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; z&amp;#61;z_arr\n    &lt;span class=\"hljs-attribute\"&gt;R&lt;/span&gt;&amp;#61;sqrt(r.*r&amp;#43;z*z);\n    &lt;span class=\"hljs-attribute\"&gt;sigma&lt;/span&gt;&amp;#61;-&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*p*z^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;./&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;./pi./R.^&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-attribute\"&gt;figure&lt;/span&gt;(z*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;surf&lt;/span&gt;(x,y,sigma)\n    &lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;([&amp;#39;z&amp;#61;&amp;#39;,num2str(z)])\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/72918475417614.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["matlab三维曲面", ["本菜菜学生自学了matlab，想尝试拿别人文章反向写出代码", "这是公式，意义是，当集中力作用在地面某一点，以该点为中心，x，y轴为半径r=4的范围内，地面z米深处所受的力。", "\n", "p=200KN，z=[1,1.5,2,3],我尝试的用for语句控制r，for r=-4：2：4，但最后得的sigma是最后一次循环变量值而不是一个矩阵，", "不会用surf函数。", "先行谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;while(P3_0&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;//消抖后再次判断是否松开&amp;#xff0c;关键在于此循环&amp;#xff0c;如果将此程序删去&amp;#xff0c;代码正运行。&lt;/span&gt;\n if(LEDNum&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)//移到&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#xff0c;再移&amp;#xff0c;相当于反向移&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n        LEDNum&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    else\n        LEDNum--&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt; 如果加上循环语句&amp;#xff0c;我复制的这一段为一条语句&amp;#xff0c;表示的含义是只要不松手&amp;#xff0c;就不停做if语句&amp;#xff0c;但if语句之后的内容不会执行&amp;#xff0c;LED的状态改变语句未执行&amp;#xff0c;因此没有发生亮灭改变&amp;#xff0c;可以加花括号&amp;#xff0c;把亮灭改变也包含在内&amp;#xff0c;试试效果&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["C语言很基础的问题，但是搞不懂。两个IF函数，其中一个IF满足条件执行后，另一个IF永远不进入（即使条件满足），请问是什么原因。", ["问题遇到的现象和发生背景", "\n", "单片机入门，用独立按键控制LED灯左右亮灭两个IF函数，其中一个IF满足条件执行后，另一个IF永远不进入（即使条件满足）。现象为，复位后，要么按了左移按键后，LED可以左移，但再按右移按键不能右移(左移仍功能正常)。要么按了右移按键后，LED可以右移，但再按左移按键没反应,同样右移功能仍然正常。", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include <REGX52.H>", "//下面是51单片机按独立按键LED灯左右移的代码", "void Delay(unsigned int xms)        //消抖用延时函数", "    //", "@12.000MHz ", " unsigned int--Ҥ`э xms--ҤĻؖ", "{", "    while(xms--)//xms--表示执行一次后xms-1返回", "    {", "        unsigned char i, j;", "\n", "i", " ", "=", " ", "2", ";", "\n", "j", " ", "=", " ", "239", ";", "\ndo\n{\n    while (--j)", ";", "\n} while (--i)", ";", "\n    \n}\n", "\n", "}", "void main()", "{", "\n", "unsigned char LEDNum=", "0", ";", "//", "声明变量LEDNum\n\nP2=~", "0", "x01;", "//", "P2是LED灯寄存器\n\n", "while", "(", "1", ")\n{\n    \n\n    ", "if", "(P3_1==", "0", ")", "//", "P3_1左按键寄存器，按下为", "0", "\n    {\n        Delay(", "20", ");", "//", "消抖延迟", "20", "ms\n        ", "while", "(P3_1==", "0", ");\n        Delay(", "20", ");", "//", "松开消抖，防止没安紧还没松开就开灯\n        ", "while", "(P3_1==", "1", ");", "//", "消抖后再次判断是否松开，关键在于此循环，如果将此程序删去，代码正运行。\n        \n        LEDNum++;", "//", "\n        \n        ", "if", "(LEDNum>=", "8", ")", "//", "移", "8", "相当于不移\n        {LEDNum=", "0", ";\n        }\n        P2=~(", "0", "x01<<LEDNum);\n    }\n    \n    \n    ", "if", "(P3_0==", "0", ")", "//", "P3_0右按键寄存器，按下为", "0", "\n    {\n        Delay(", "20", ");", "//", "消抖延迟", "20", "ms\n        ", "while", "(P3_0==", "0", ");\n        Delay(", "20", ");", "//", "松开消抖，防止没安紧还没松开就开灯\n        ", "while", "(P3_0==", "1", ");", "//", "消抖后再次判断是否松开，关键在于此循环，如果将此程序删去，代码正运行。\n    \n\n        ", "if", "(LEDNum==", "0", ")", "//", "移到", "0", "，再移，相当于反向移", "7", "\n            LEDNum=", "7", ";\n        ", "else", "\n            LEDNum--;\n\n        P2=~(", "0", "x01<<LEDNum);", "//", " 计算顺序", "0000", " ", "0001", " 先左移LEDNum位，再取反，再赋值\n    }\n    \n}\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "\n", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "while", "(P3_1==1)", ";", "while", "(P3_0==1)", ";写此循环的用意是可以在延时消抖后，再次确认按钮的状态是否松开。删除这两个循环后代码正常工作，影响", "if", "函数的原因是什么？\n", "\n", "我想要达到的结果", "\n", "用独立按键控制LED亮灭左右移动"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看不懂这个问题。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;俺想接拓展板后来一个按键控制的外部中断&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;Arduino 装一个按键&amp;#xff0c;然后 Arduino 会收到中断&amp;#xff1f; -&amp;gt; 这个应该有参考例子。&lt;br /&gt;还是是扩展板装一个按键&amp;#xff0c;然后 Arduino 会收到中断&amp;#xff1f;&lt;br /&gt;这个需要读展板规格有没有这样的功能&amp;#xff0c;以及如何触发 arduino 的中断。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["arduino uno 接拓展板+外部中断", ["######RT，俺想接拓展板后来一个按键控制的外部中断", "接线都是正确的，经过自己排除问题后发现是接了拓展板以后arduino自身检测到的2引脚电平始终为高电平（已拉高)", "附上拓展板链接", "https://openjumper.cn/sensors-shield/", " ", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", " ", "<Wire.h>", "//调用Arduino自带库", "\n", "int", " n = ", "0", ";\n", "int", " B = ", "2", ";\n", "void", " ", "setup", "()", " ", "{\n  ", "Serial", ".", "begin", "(", "9600", ");\n\n  ", "pinMode", "(B, ", "INPUT_PULLUP", ");\n\n  ", "attachInterrupt", "(", "0", ", button, CHANGE);\n}\n\n", "void", " ", "loop", "()", "\n", "{\n  ", "Serial", ".", "println", "(", "digitalRead", "(B));\n  ", "Serial", ".", "println", "(n);\n  ", "delay", "(", "500", ");\n  \n\n}\n\n", "void", " ", "button", "()", "\n", "{ ", "delay", "(", "40", ");\n  ", "if", " (", "digitalRead", "(B) == ", "0", ")\n  {\n    n++;\n  }\n\n} \n", "\n", "运行结果及报错内容", "\n", "未接拓展板结果正常", "接了拓展板后，始终报1、0循环 ", "\n", "我想要达到的结果", "\n", "有没有办法能使接上拓展板后实现按键控制的外部中断？"]], "Tag": "程序设计"}
{"Answer": "你的问题有两个：1、出现的位置不允许再出现\r\n\t\t\t\t\t\t\t\t\t\t\t\t2、当所有的位置都为1的时候，程序完成（地鼠已经去过所有的地洞，而且没有重复）。\r\n如果你的问题是这样的话，答案如下：\r\n\t整个的思路：有一个地鼠类，地鼠类里面有一个创造位置的方法（跑的位置），方法是这样实现的：\r\n\t地鼠跑到一个位置的时候，将其位置赋给burrows数组且将值赋1，如果随机产生的位置是重复的话，那么就要检查burrows数组里的值是否都\r\n为1（地鼠跑过）。当然在检查的过程中，有地鼠没有跑过的（值为0），那么就要把值赋给rowIndex和colIndex，这是整个说明。\r\n\r\n注意事项：里面安全性还需自己验证\r\n\r\n\r\npackage action;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Suslik {\r\n\t\r\n\t/**\r\n\t * 随机跑到位置\r\n\t * @param row 跑的范围的横坐标\r\n\t * @param col 跑的范围的纵坐标\r\n\t */\r\n\tpublic void createPosition(int row,int col){\r\n\t\t\r\n\t\tint [][] burrows  = new int[row][col];\r\n\t\t\r\n\t\tRandom creatNum = new Random();\r\n\t\t//横坐标\r\n\t\tint rowIndex;\r\n\t\t//纵坐标\r\n\t\tint colIndex;\r\n\t\t\r\n\t\tboolean index = false;\r\n\t\twhile(!index){\r\n\t\t\trowIndex = creatNum.nextInt(row);\r\n\t\t\tcolIndex = creatNum.nextInt(col);\r\n\t\t\tint sum = 0;\r\n\t\t\tif(burrows[rowIndex][colIndex] != 0){\r\n\t\t\t\tfor(int m = 0;m&lt;row;m++){\r\n\t\t\t\t\tfor(int n = 0;n&lt;col;n++){\r\n\t\t\t\t\t\tif(burrows[m][n] == 0){\r\n\t\t\t\t\t\t\tsum = ++sum;\r\n\t\t\t\t\t\t\trowIndex = m;\r\n\t\t\t\t\t\t\tcolIndex = n;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tindex = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(sum !=0){\r\n\t\t\t\t\t\tindex = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tburrows[rowIndex][colIndex] = 1;\r\n\t\t\tSystem.out.println(\"row:\"+rowIndex+\" ,col:\"+colIndex);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String [] args){\r\n\t\tnew Suslik().createPosition(4, 4);\r\n\t}\r\n}", "Konwledge_Point": "循环控制", "Question": ["关于java数组的问题，想来这边问一下", ["首先是这样子的，我们作业时是一个打地鼠的小程序，模拟地鼠出现的样子。", "\n我是先设定一个4x4的数组Array[4][4]，数组默认值全部设定为0. ", "\n然后设定两个随机变量row和col，范围都在0-3之间", "\n然后把Array[row][col]的值从设定为1，以表示地鼠出现的位置。", "\n那接下来就是我想要问的地方；", "\n如何把出现过的位置舍弃，就是希望接下来随机的row和col不要再重复出现同样的数字？", "\n\n", "下面是代码片段", "\n      int i = new Random().nextInt(4);", "\n            int j = new Random().nextInt(4);", "\n      GameArray[i][j] = 1; //Susliks appears", "\n            。", "\n            。", "\n            。", "\n      for (int index = 0; index < 4; index++){", "\n                for (int index2 = 0; index2 < 4; index2++){", "\n                    if ( GameArray[index][index2] == 1){", "\n                        System.out.print(\"o \");", "\n                    }else{", "\n                        System.out.print(\"x \");", "\n                    }", "\n                }", "\n                times++;", "\n                System.out.println();", "\n            }", "\n因为要求是所有的位置都出现过1就结束程序。而我这样子每次循环都要上百次才能结束，所以我想问有没有什么办法可以控制循环次数在一定的范围内？比方说就是已经出现过的数组索引值就不再使用（比如说GameArray[3][3] = 1,那么接下来希望的随机不要再出现[3][3]这样子，如果出现了就跳出index的 for循环体，重新下一次随机）有没有什么办法可以实现？我刚接触java的，好多都还不清楚"]], "Tag": "程序设计"}
{"Answer": "&lt;h5&gt;如果我的回答对你有帮助&amp;#xff0c;请点击采纳按钮&amp;#xff0c;谢谢&lt;/h5&gt;\n&lt;p&gt;因为你这是字符串赋值&amp;#xff0c;&lt;br /&gt;并且-1是两个字符组成的字符串&lt;br /&gt;&amp;#xff08;‘-’&amp;#43;‘1’&amp;#61;“-1”&amp;#xff09;&lt;br /&gt;所以赋值的时候&lt;br /&gt;要把你的代码的71行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;[n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].next &amp;#61; &amp;#39;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#39;;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;改为&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;a[n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].next &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;才行&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["为什么字符串赋值是错的？", ["请问为什么字符串不能直接赋值，编译过了，运行是错的", "\n", "\n", "#include <iostream>", "\n", "using", " ", "namespace", " ", "std", ";\n", "void", " ", "swap", "(", "struct", " List &a,", "struct", "  List &b", ")", ";\n", "#include <string>", "\n", "#include<cstring> ", "\n\n", "//            00100 6 4        ", "\n", "//00100 1 12309    00000 4 33218", "\n", "//12309 2 33218    33218 3 12309", "\n", "//33218 3 00000    12309 2 00100", "\n", "//00000 4 99999    00100 1 99999", "\n", "//99999 5 68237    99999 5 68237", "\n", "//68237 6 -1    68237 6 -1", "\n\n", "struct", " List{\n    ", "string", " ", "add", ";\n    ", "int", " ", "value", ";\n    ", "string", " next;\n};\n\n", "int", " ", "main", "(", ")", "\n{\n    ", "string", " headadd;\n    ", "int", " n,node;\n    cin>>headadd>>n>>node;\n    List a[n];\n    ", "for", "(", "int", " i=", "0", ";i<n;i++)\n    {\n        cin>>a[i].", "add", ">>a[i].", "value", ">>a[i].next;\n    }\n    ", "for", "(", "int", " j=", "1", ";j<n;j++)\n    {\n        ", "for", "(", "int", " k=j;k<n;k++)\n        {\n            ", "if", "(a[k].", "add", " == headadd)\n            {\n                swap(a[k],a[", "0", "]);\n            }\n        }\n    }\n    ", "for", "(", "int", " j=", "0", ";j<n;j++)\n    {\n        ", "for", "(", "int", " k=j+", "1", ";k<n;k++)\n        {\n            ", "if", "(a[k].", "add", " == a[j].next)\n            {\n                swap(a[k],a[j+", "1", "]);\n            }\n        }\n    }\n    ", "for", "(", "int", " i=", "0", ";i<n;i++)\n    {\n        cout<<a[i].", "value", "<<endl;\n    }\n    cout<<", "\"here:\"", "<<endl;\n    ", "//node=4,n=6", "\n    ", "for", "(", "int", " cnt=", "0", ";cnt<n/node;)", "//控制有几次循环 ", "\n    {\n        ", "for", "(", "int", " jud=cnt;jud<node/", "2", ";jud++)", "//控制每次循环的开始位置以及循环次数 ", "\n        {\n            swap(a[jud],a[node-jud", "-1", "]);\n        }\n        cnt += node;\n    }\n    \n    ", "for", "(", "int", " i=", "0", ";i<n;i++)", "//遍历链表并将链表的下一个地址改变 ", "\n    {\n        a[i].next = a[i+", "1", "].", "add", ";\n    }\n    a[n", "-1", "].next = ", "'-1'", ";    \n    ", "for", "(", "int", " i=", "0", ";i<n;i++)\n    {\n        cout<<a[i].", "add", "<<", "\" \"", "<<a[i].", "value", "<<", "\" \"", "<<a[i].next<<endl;\n    }\n}\n\n", "void", " ", "swap", "(", "struct", " List &a,", "struct", "  List &b", ")", "\n{\n    ", "struct", " List L;\n    L.", "add", " = a.", "add", ";\n    L.", "value", " = a.", "value", ";\n    L.next = a.next;\n    a.", "add", " = b.", "add", ";\n    a.", "value", " = b.", "value", ";\n    a.next =b.next;\n    b.", "add", " = L.", "add", ";\n    b.", "value", " = L.", "value", "; \n    b.next = L.next;    \n    \n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这不是数组初始化的问题&amp;#xff0c;而是声明的问题&amp;#xff0c;因为你的int i,j是未初始化的变量&amp;#xff0c;值是系统自动分配的&amp;#xff0c;而你声明a的时候使用了变量i,j&amp;#xff0c;导致你的数组的长和宽变成了随机的数值&amp;#xff0c;运行结果也就和这种随机有关&amp;#xff0c;我试验了一下&amp;#xff0c;当i被分配到一个大数字的时候&amp;#xff0c;j被分配到0的时候就会出现你这样的错误&amp;#xff1b;而在我的电脑上跑的时候分配到0&amp;#xff0c;j分配到了一个大数字&amp;#xff0c;结果是根本运行不来&amp;#xff0c;会产生段错误。&lt;/p&gt;\n\n&lt;p&gt;int a[20][20]是一个数组声明&amp;#xff0c;而下面的循环才是数组初始化&amp;#xff0c;事实上你的想法是对的&amp;#xff0c;不经过初始化的也是可以使用的&amp;#xff0c;但你的声明却用到了未初始化的整型变量&amp;#xff0c;如果你直接使用a[20][20]结果就正确了。&lt;/p&gt;\n\n&lt;p&gt;事实上直接使用20是一种预先分配的思想&amp;#xff0c;但是不足以应对变化&amp;#xff0c;你可以通过输入的行数精确计算出需要的数组长宽然后再进行声明&amp;#xff0c;这样就不会出现当数组某一维度超过20而能产生的越界异常。当然&amp;#xff0c;你也可以预先定义成100000这样一个较大的数字&amp;#xff0c;一般情况也足以满足使用。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["在C语言中用二维数组输出直角杨辉三角形，数组的初始化与否为何会影响数组的输出结果？", ["大神们好！！", "\n\n", "问题如题所示。", "\n\n", "首先，可以正确输出数组结果的代码如下：", "\n\t", "\n", "#include<stdio.h>\nint main(void)\n{\n        int m,n;\n        int a[20][20];                          //数组初始化\n        for(m=0;m<20;m++){\n                for(n=0;n<20;n++){\n                        a[m][n]=0;\n                }\n        }\n        \n        int row;\n        printf(\"please input row number:\");\n        scanf(\"%d\",&row);                       //通过输入指定输出的三角形行数\n\n        int i,j;                                //声明行、列下表变量\n        for(i=0;i<row;i++){                     //外循环，控制行\n                for(j=0;j<=i;j++){              //内循环，控制列，循环条件为元素的列下标小于等于元素的行下标\n                        if(j==0||i==j){         //垂直边和斜边为1的条件\n                                a[i][j]=1;\n                        }else{\n                                a[i][j]=a[i-1][j-1]+a[i-1][j];//除了垂直边和斜边的元素\n                        }\n                printf(\"%4d\",a[i][j]);          //输出\n                }\n        printf(\"\\n\");\n        }\n\n        return 0;\n}\n", "\n\t", "正确的输出结果", "\n\t", "\n\n\t", " ", "\n\t", "然后我把数组初始化的这一部分代码删掉，只定义二维数组：", "\n\t", "\n", "#include<stdio.h>\nint main(void)\n{\n\n        int row;\n        printf(\"please input row number:\");\n        scanf(\"%d\",&row);                       //通过输入指定输出的三角形行数\n\n        int i,j;                                //声明行、列下表变量\n        int a[i][j];                            //定义二维数组\n        for(i=0;i<row;i++){                     //外循环，控制行\n                for(j=0;j<=i;j++){              //内循环，控制列，循环条件为元素的列下标小于等于元素的行下标\n                        if(j==0||i==j){         //垂直边和斜边为1的条件\n                                a[i][j]=1;\n                        }else{\n                                a[i][j]=a[i-1][j-1]+a[i-1][j];//除了垂直边和斜边的元素\n                        }\n                printf(\"%4d\",a[i][j]);          //输出\n                }\n        printf(\"\\n\");\n        }\n\n        return 0;\n}\n", "\n\t", "然后问题来了! TT：", "\n\n", "      为何从第4行开始，每行的第3个元素到斜边之间元素都是a[i][j]=a[i+1][j-1]+a[i+1][j]?（正确的应该是a[i][j]=a[i-1][j-1]+a[i][j-1])", "\n\n", "本人初学小白，望大神们指点，感激不尽！ TT"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201907/10/1562724688_919761.gif)\r\n\r\n使用方法，编辑names文件，每个名字1行\r\n注意，需要抽取的人，名字后面加上一个空格\r\n不希望抽取的人，不要加\r\n则程序滚动的时候，所有人都参与滚动，停止的时候，有空格的才会出来\r\n\r\n\r\n```\r\nOption Explicit\r\n\r\nPrivate isRunning As Boolean\r\nDim names() As String\r\n\r\nPrivate Sub CommandButton1_Click()\r\n    CommandButton1.Enabled = False\r\n    Dim filecontent As String\r\n    Open \"names.txt\" For Binary As #1\r\n        filecontent = Input(LOF(1), #1)\r\n    Close #1\r\n    names = Split(filecontent, vbCrLf)\r\n    Randomize\r\n    isRunning = True\r\n    While isRunning\r\n        TextBox1.Text = RndName(False)\r\n        DoEvents\r\n    Wend\r\n    TextBox1.Text = RndName(True)\r\n    If TextBox1.Text = \"\" Then CommandButton1.Enabled = True: Exit Sub\r\n    If Me.Application.ActivePresentation.Slides(2).Shapes(6).TextFrame.TextRange.Text &lt;&gt; \"\" Then Me.Application.ActivePresentation.Slides(2).Shapes(6).TextFrame.TextRange.Text = Me.Application.ActivePresentation.Slides(2).Shapes(6).TextFrame.TextRange.Text &amp; \",\"\r\n    Me.Application.ActivePresentation.Slides(2).Shapes(6).TextFrame.TextRange.Text = Me.Application.ActivePresentation.Slides(2).Shapes(6).TextFrame.TextRange.Text &amp; TextBox1.Text\r\n    CommandButton1.Enabled = True\r\nEnd Sub\r\n\r\nPrivate Function RndName(isSpec As Boolean) As String\r\n    Dim cnt As Long\r\n    cnt = 1\r\n    Dim idx As Long\r\n    Do\r\n        cnt = cnt + 1\r\n        If cnt &gt; 99999 Then\r\n            RndName = \"\"\r\n            Exit Function\r\n        End If\r\n        idx = Int(Rnd * (UBound(names) - LBound(names) + 1)) + LBound(names)\r\n        If Not IsExist(names(idx)) Then\r\n            If isSpec Then\r\n                If (names(idx) &lt;&gt; Trim(names(idx))) Then\r\n                    RndName = Trim(names(idx))\r\n                    Exit Do\r\n                End If\r\n            Else\r\n                RndName = Trim(names(idx))\r\n                Exit Do\r\n            End If\r\n        End If\r\n    Loop\r\nEnd Function\r\n\r\nPrivate Function IsExist(name As String) As Boolean\r\n    Dim arr() As String\r\n    arr = Split(Me.Application.ActivePresentation.Slides(2).Shapes(6).TextFrame.TextRange.Text, \",\")\r\n    Dim i As Long\r\n    For i = LBound(arr) To UBound(arr)\r\n        If Trim(name) = Trim(arr(i)) Then\r\n            IsExist = True\r\n            Exit Function\r\n        End If\r\n    Next\r\n    IsExist = False\r\nEnd Function\r\n\r\nPrivate Sub CommandButton2_Click()\r\n    isRunning = False\r\nEnd Sub\r\n\r\n```\r\n其他人如果也需要：https://download.csdn.net/download/caozhy/11311604", "Konwledge_Point": "循环控制", "Question": ["如何实现人员抽点的时候抽到指定人员，而不是随机人员。", ["\n", "单位有个竞赛活动，然后用PPT做了个人员抽点的小程序，需要最后控制人员抽点的顺序，抽到特定的人员，但是不知道怎么实现这个效果，现求助大佬。", "\n", "\n\n", "Dim flag As Integer '全局变量用于查询是否按下停止键\n\n\nSub delay(T As Single)\n  Dim time1 As Single\n  time1 = Timer\n  Do\n     DoEvents\n  Loop While Timer - time1 < T\nEnd Sub\n\n\nPrivate Sub 开始_Click()\n\nflag = 0\n\n'Dim StuData(500) As Person\n'StuData() = 0\nDim StuData(500) As String\nDim buf As String\nDim i As Integer\ni = 0\n\n\n\nOpen \"E:\\人员名册.txt\" For Input As #1\n'Open \"E:\\output.txt\" For Output As #2\n\nDo While Not EOF(1)\n    Line Input #1, buf\n    'Write #2, buf\n    StuData(i) = buf\n    i = i + 1\n\n    '在循环中将姓名输入数组\n\nLoop\n\n'Close #1\n'Close #2\nDim index As Integer\nDim tims As Integer\ntimes = 0\n\n'循环显示姓名1\nDo Until (times > 65534 Or flag <> 0)\n\nindex = Int((i * Rnd) + 0)\nLabel1.Caption = StuData(index)\ntimes = times + 1\ndelay (0.05)\n\nLoop\n\nClose #1\n\nEnd Sub\n\nPrivate Sub 停止_Click()\nflag = 1\n\nEnd Sub\n\n", "\n\n", "用到的代码就是以上代码"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;每次L1&amp;#61;L是在更新为当前最新的&amp;#xff0c;再进入下一次循环&lt;br /&gt;n&amp;#61;5已经输出10行了&amp;#xff0c;他是输出到10行退出&amp;#xff0c;不是n&amp;#61;10退出&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["python生成器中的generator函数理解", ["python的生成器，通过生成器生成杨辉三角。看到其中一个同学评论区的答案，有些地方不能理解（他写的没有注释，难为大家了）", "\n", "def triangles():\n    L=[1]\n    yield L\n    ", "L1", "=L\n    ", "n", "=1\n    ", "while", " ", "True", ":\n        L = []\n        L.append(1)\n        ", "for", " i ", "in", " range(1,n):\n            L.append(L1[i-1]+L1[i])\n        L.append(1)\n        yield L\n        ", "L1", "=L\n        ", "n", "=n+1\n    return ", "'done'", "\n\n", "for", " i ", "in", " triangles(5)\n    ", "print", "(i)\n", "\n", "问题1：L1=L 这个赋值有意义吗？", "问题2：对于generator函数的理解，如以下代码：", "\n", "def", " ", "triangel", "(", "n", "):\n    L=[", "1", "]                                                                 ", "#定义一个list[1]", "\n    ", "while", " ", "True", ":\n        ", "yield", " L                                                           ", "#打印出该list", "\n        L=[L[x]+L[x+", "1", "] ", "for", " x ", "in", " ", "range", "(", "len", "(L)-", "1", ")]        ", "#计算下一行中间的值（除去两边的1）", "\n        L.insert(", "0", ",", "1", ")                                                 ", "#在开头插入1", "\n        L.append(", "1", ")                                                 ", "#在结尾添加1", "\n        ", "if", " ", "len", "(L)>", "10", ":                                                 ", "#仅输出10行", "\n            ", "break", "\n\n", "for", " i ", "in", " triangel(", "5", "):\n    ", "print", "(i)\n", "\n", "函数里面有一个 while true 想要break 需要len(L)>10,但是我们输入n=5，同样可以退出循环。", "因为本人对generator函数比较浅，只知道在generator函数里，遇到yield 会像return返回，下次执行再从yield下面执行。", "那么这个n=5是怎么限制while true继续执行呢？（已解决）", "若第八行改成 if len(L)>n 可以去控制while true 退出循环，那么第一个代码怎么控制的呢？", "\n", "谢谢大家，函数理解不够。比较困惑。"]], "Tag": "程序设计"}
{"Answer": "你说的模型过于简单化了。比如说c语言malloc，这种运行的过程中动态分配内存的，显然不能直接在进程运行一开始就知道要分配多少。\r\n操作系统内存管理，包括段、页、虚拟内存、交换，这些书上都有的，不需要“猜”。看看就知道了。\r\n\r\n程序切换的时候，天哪，可不能“释放内存空间”，要不切换回来，内存都没了怎么继续运行。程序切换的时候，操作系统要做的，是把当前进程的状态（一般来说是cpu寄存器的值）保存下来\r\n内存不能动它。除非内存不够，内存不够需要交换。在另一个进程执行完后，切换回来。", "Konwledge_Point": "循环控制", "Question": ["这是一个关于操作系统的相关问题", ["操作系统可以负责对进程分配内存，我猜过程是这样", "\n\n", "1首先分出一部分内存，放置若干进程控制块PCB，放在三个队列中，就绪，阻塞，执行。然后根据调度算法，找到将要执行进程相应进程块，计算进程所需进程块大小，然后分配。如果还以剩余内存，也不会占用，毕竟cpu一次只能执行一个程序嘛\n", "\n\n", "2CPU并发操作，就因为时间片方法执行嘛，当一个程序执行一段时间，就释放内存空间，相对应PCB块进阻塞队列，这么样，CPU循环分配个进程各种资源", "\n请问我对操作系统执行进程分配的功能理解有错误吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;esp32　应该只能驱动 3.3V io&amp;#xff0c;你可以通过三极管做电压变换。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["esp32的高电平和低电平可以指定吗？", ["现在有这么个情况，我家门禁被按响后，信号线会输入6.2v，0.8ma的电流，三秒后变成8.2v，1.2ma的电流，三秒后再恢复为6.2v，如是循环三次后自动断电。我想把门禁的信号线接到esp32上，达到让它电压超过7.2v就算高电平，低于7.23v就算低电平，以此标准来控制继电器通断得目的。但是查了下资料，没有找到设定高电平和低电平分界电压的方法，貌似默认3.3v以上都是高电平，3.3v以下（也有说2v以下）都是低电平，这个标准是不是无法更改的？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;for( &lt;span class=\"hljs-name\"&gt;i&amp;#61;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;/span&gt;\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-symbol\"&gt;&amp;amp;a&lt;/span&gt;[i])&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    for( &lt;span class=\"hljs-name\"&gt;j&amp;#61;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; j&amp;lt;m; j&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;/span&gt;\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-symbol\"&gt;&amp;amp;a&lt;/span&gt;[j])&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;改成&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;fgets&lt;/span&gt;(a, &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;, stdin);\n&lt;span class=\"hljs-attribute\"&gt;fgets&lt;/span&gt;(b, &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;, stdin);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["如何使用2个数组（60个字符）存放2行字符串，分别统计出其中的英文字母、数字、空格及其他字符的个数？(语言-c语言)", ["使用2个数组（60个字符）存放2行字符串，分别统计出其中的英文字母、数字、空格及其他字符的个数。", "\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " num1=", "0", ",num2=", "0", ",num3=", "0", ",num4=", "0", "; ", "//英文字母 数字 空格 其他字符", "\n    ", "int", " n=", "60", ";\n    ", "int", " m=", "60", ";\n    ", "int", " i,j;\n    ", "char", " str1;\n    ", "char", " str2;\n    ", "char", " a[", "60", "];\n    ", "char", " b[", "60", "];\n    \n    ", "for", "( i=", "0", "; i<n; i++){\n        ", "scanf", "(", "\"%c\"", ",&a[i]);\n    }\n    ", "for", "( j=", "0", "; j<m; j++){\n        ", "scanf", "(", "\"%c\"", ",&a[j]);\n    }\n\n    ", "while", "((str1 = ", "getchar", "(a)) != ", "'\\n'", "){\n        ", "if", " (str1 >= ", "'a'", " && str1 <=", "'z'", " || str1 >= ", "'A'", " && str1 <= ", "'Z'", "){\n            num1++;\n        } ", "else", " ", "if", "(str1 >= ", "'0'", " && str1 <= ", "'9'", " ) {\n            num2++;\n        } ", "else", " ", "if", "(str1 == ", "' '", ") {\n            num3++;\n        } ", "else", " {\n            num4++;\n        }\n    }\n    ", "printf", "(", "\"字母的数量：%d\\n\"", ",num1);\n    ", "printf", "(", "\"数字的数量：%d\\n\"", ", num2);\n    ", "printf", "(", "\"空格的数量：%d\\n\"", ", num3);\n    ", "printf", "(", "\"其他：%d\\n\"", ",num4);\n\n    num1 = num2 = num3 = num4 = ", "0", ";\n    ", "while", "((str2 = ", "getchar", "(b)) != ", "'\\n'", "){\n        ", "if", " (str2 >= ", "'a'", " && str2 <=", "'z'", " || str2>= ", "'A'", " && str2 <= ", "'Z'", "){\n            num1++;\n        } ", "else", " ", "if", "(str2 >= ", "'0'", " && str2 <= ", "'9'", " ) {\n            num2++;\n        } ", "else", " ", "if", "(str2 == ", "' '", ") {\n            num3++;\n        } ", "else", " {\n            num4++;\n        }\n    }\n    ", "printf", "(", "\"字母的数量：%d\\n\"", ",num1);\n    ", "printf", "(", "\"数字的数量：%d\\n\"", ", num2);\n    ", "printf", "(", "\"空格的数量：%d\\n\"", ", num3);\n    ", "printf", "(", "\"其他：%d\\n\"", ",num4);\n    \n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n\n    \n}\n\n", "\n", "         运行结果及报错内容 无法控制读入的字符数量为60（好像输入的字符根本没存到数组里面或者根本没从数组里面读字符）\n", "\n", "         思路 先用for循环将字符存到数组里面再用getchar函数(不知到怎么用getchar读取数组中的字符)或者for循环读入数组中的字符判断各种字符类型的个数；\n", "\n", "        问题：1.如何将字符存到数组当中以及如何用gtechar读取数组中的字符\n                    2.如果用循环来读入数组中的字符那么跳出循环的条件是什么（自己想的是用一个计数器每次循环后加一 直到加到60为止 好笨的方法qwq）", "\n", "\n", "本人全靠自学 希望有人指点一二 感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;就是检查一趟循环是否发生数字交换&amp;#xff0c;没有交换则表示已经排好序&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 10&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[N],i,j,t&amp;#xff0c;flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;){\n     flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;N-i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;j&amp;#43;&amp;#43;){\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[j]&amp;gt;a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]){\n        t&amp;#61;a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n        a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;a[j];\n        a[j]&amp;#61;t;\n        flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n}\n}\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;)\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;,a[i]);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["冒泡排序希望变得完整", ["冒泡排序升序,如何加一个控制语句，如果给出的数据已经是升序的，则直接跳出循环并输出", "\n", "\n", "#include<stdio.h>", "\n", "#define N 10", "\nint main()\n{\nint a[N],i,j,t;\n", "for", "(", "i", "=0;i<N;i++)\n    scanf(", "\"%d\"", ",&a[i]);\n", "for", "(", "i", "=0;i<N;i++){\n    ", "for", "(", "j", "=0;j<N-i;j++){\n    ", "if", "(a[j]>a[j+1]){\n        ", "t", "=a[j+1];\n        a[j+1]=a[j];\n        a[j]=t;\n    }\n}\n}\n", "for", "(", "i", "=0;i<N;i++)\nprintf(", "\"%d\\t\"", ",a[i]);\nreturn 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据代码的编译逻辑和你的代码来说&amp;#xff0c;你的这个checkevent 必须在调用之前就得定义。就是说&amp;#xff0c;你把while放在updatescreen后面应该就行了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["飞机大战项目拆分辅助方法失败", ["飞机大战项目 按照从入门到实践这本书上的代码敲的,结果到拆分辅助方法这一步出错了", "\n", "\n", "import", " sys\n", "import", " pygame\n", "from", " settings ", "import", " Settings\n", "from", " ship ", "import", " Ship\n\n\n", "class", " ", "AlienInvasion", ":\n    ", "\"\"\"管理游戏资源和行为的类\"\"\"", "\n\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "\"\"\"初始化游戏并创建游戏资源\"\"\"", "\n        pygame.init()  ", "# 初始化背景设置", "\n        self.settings = Settings()  ", "# 创建Setting类实例并赋值給self.settings", "\n        self.screen = pygame.display.set_mode(self.settings.window_size)  ", "# 创建一个显示窗口", "\n        pygame.display.set_caption(", "\"飞机大战\"", ")  ", "# 设置名称", "\n        ", "# 设置背景颜色", "\n        self.bg_color = self.settings.bg_color\n        self.ship = Ship(self)  ", "# 创建实例 self表示当前项目实例", "\n\n    ", "def", " ", "run_game", "(", "self", "):  ", "# 控制游戏方法", "\n        ", "\"\"\"开始游戏主循环\"\"\"", "\n        ", "while", " ", "True", ":\n            self._check_events()\n            self._update_screen()\n\n        ", "def", " ", "_check_events", "(", "self", "):\n            ", "# 监视键盘鼠标的输入 事件循环, 响应输入操作", "\n            ", "for", " event ", "in", " pygame.event.get():  ", "# 返回一个它在上一次被调用后所有键鼠操作事件的列表", "\n                ", "if", " event.", "type", " == pygame.QUIT:  ", "# 若点击关闭按钮", "\n                    sys.exit()  ", "# 退出游戏", "\n\n        ", "def", " ", "_update_screen", "(", "self", "):\n            ", "# 让背景色填充屏幕 并在每次循环后重绘", "\n            self.screen.fill(self.bg_color)  ", "# fill 只接受一个实参:一种颜色", "\n            self.ship.blitme()  ", "# 绘制飞船 是飞船出现在背景图层上", "\n            ", "# 让最近绘制的屏幕可见 擦去旧屏幕 绘制新屏幕", "\n            pygame.display.flip()\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    ", "# 创建游戏实例并运行游戏", "\n    ai = AlienInvasion()\n    ai.run_game()\n", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;自己的作业自己写&lt;br /&gt;有什么问题你就问问题&amp;#xff0c;不要一股脑的把作业整个丢出来&amp;#xff0c;然后坐等白嫖&lt;br /&gt;简单代码还行&lt;br /&gt;这么复杂&amp;#xff0c;没个200块钱谁会白给你干活&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["现在有一个给6岁小孩出数学题的程序", ["出题的函数", "判断输入答案正确与否的函数", "主函数，用于控制游戏流程", "进一步的，更完整的程序可能还需要哪些函数", "难度、题量的设定函数", "欢迎函数，用于致欢迎辞", "订正函数", "统计答题情况、时间计算函数", "\n", "欢迎函数，用于致欢迎辞", "\n", "定义函数 致欢迎辞参数变量——包含题目数量、难度、", "    输出游戏设定包含题目数量、难度、的欢迎词", "难度、题量的设定函数", "定义函数 设定函数题目数量、难度、", "    调取 致欢迎辞题目数量、难度、", "    问玩家是否要更改设定，更改就继续，不更改就跳过下面的更改代码", "        请玩家依次输入需要的——题目数量、难度", "        完成设定，并调取 致欢迎辞（题目数量、难度", "    返回 出题的函数(题目数量、难度、", "\n", "主函数，用于控制游戏流程", "出题的函数", "定义函数 出题的函数(题目数量、难度", "    循环 题目数量 次   #假定题目数是10", "        设定几个列表，第一个用于随机产生操作符", "        第二个列表用于产生操作数", "\n", "返回 包含所有题目的列表\n", "\n", "判断输入答案正确与否的函数", "定义函数 判断输入答案正确与否的函数(要判断的题):", "    判断题目正确与否——eval", "    返回 正确与否（True 或 False）", "\n", "订正函数", "定义函数 订正函数(订正题目列表)", "    从订正题目列表里面依次抽取题目给玩家做", "        对不对 = 判断输入答案正确与否的函数(当前的题)", "        不对就把该题加入订正题目列表，返回上面继续答题", "        对就继续下一次", "    如果最终还有订正题目(订正列表不为空)，就调取 订正函数——这个叫做递归", "\n", "统计答题情况、时间计算函数", "定义函数 主函数()", "    所有的题目 = 设定函数(100、4)", "    从 所有的题目中 依次循环抽取题目", "        屏幕上输出当前题目", "        玩家答题", "        对不对 = 判断输入答案正确与否的函数(当前的题)", "            不对就把该题加入订正题目列表，返回上面继续答题", "            对就继续下一次", "\n", "调取 订正函数", "(订正题目列表)", "\n调取 统计答题情况、时间计算函数\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;company &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;聚美优品,京东,亚马逊中国,当当网,唯品会,考拉严选,天猫&amp;#39;&lt;/span&gt;\nsales &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;58,12945,391,357,728,116,21086&amp;#39;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;clist&lt;/span&gt; &amp;#61; company.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\nslist &amp;#61; &lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;,sales.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)))\ndic &amp;#61; dict(zip(&lt;span class=\"hljs-keyword\"&gt;clist&lt;/span&gt;,slist))\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; key,value in dic.&lt;span class=\"hljs-built_in\"&gt;items&lt;/span&gt;():\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; value&amp;gt;&lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(key)\n\n输出&amp;#xff1a;\n京东\n亚马逊中国\n当当网\n唯品会\n天猫\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["python书上的一道练习", ["正在试着自学python，但是学到“流程控制语句”这里有道例题，实在不会写，特此来咨询", "\n", "问题是这样：“编写一个python程序，将销售额超过300亿元的企业输出。", "\n", "聚美优品", "京东", "亚马逊中国", "当当网", "唯品会", "考拉严选", "天猫", "58亿", "12945亿", "391亿", "357亿", "728亿", "116亿", "21086亿", "\n", "在学校有过一点点的C的基础，我就想用，string字符串来写，但是我还是不行啊/(ㄒoㄒ)/~~", "\n", "\n", "我本来想的是，名字和销售额之间有一个联系，然后对销售额进行判断，如果超过300亿，就把名字输出，但是这样的话怎么进行循环呢？求各位指点┭┮﹏┭┮"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&lt;/p&gt;\n&lt;p&gt;下面的示例代码实现了随机生成 20 个圆的圆心和半径&amp;#xff0c;并使用 turtle 库绘制这些圆。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; turtle\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; random\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; math\n\n&lt;span class=\"hljs-comment\"&gt;# 设定图形窗口大小为 800x600&amp;#xff0c;位于屏幕中心&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;turtle&lt;/span&gt;.setup(&lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;600&lt;/span&gt;)\n\n&lt;span class=\"hljs-comment\"&gt;# 定义函数 Addc&amp;#xff0c;用于生成新的圆&amp;#xff0c;并检查它是否与已有圆重叠或超出图形边界&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; Addc(circles):\n    &lt;span class=\"hljs-comment\"&gt;# 随机生成圆的圆心坐标和半径&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &amp;#61; random.uniform(-&lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; random.uniform(-&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;)\n    &lt;span class=\"hljs-attribute\"&gt;r&lt;/span&gt; &amp;#61; random.uniform(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n\n    &lt;span class=\"hljs-comment\"&gt;# 检查新圆是否与已有圆重叠&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; circle in circles:\n        &lt;span class=\"hljs-comment\"&gt;# 计算两圆圆心之间的距离&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;distance&lt;/span&gt; &amp;#61; math.sqrt((x - circle[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (y - circle[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        &lt;span class=\"hljs-comment\"&gt;# 如果两圆圆心距离小于等于两圆半径之和&amp;#xff0c;则两圆重叠&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; distance &amp;lt;&amp;#61; r &amp;#43; circle[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]:\n            &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; False\n\n    &lt;span class=\"hljs-comment\"&gt;# 检查新圆是否超出图形边界&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; x &amp;#43; r &amp;gt; &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt; or x - r &amp;lt; -&lt;span class=\"hljs-number\"&gt;300&lt;/span&gt; or y &amp;#43; r &amp;gt; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt; or y - r &amp;lt; -&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; False\n\n    &lt;span class=\"hljs-comment\"&gt;# 将新圆加入列表&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;circles&lt;/span&gt;.append((x, y, r))\n    &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; True\n\n&lt;span class=\"hljs-comment\"&gt;# 用于存储圆的列表&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;circles&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-meta\"&gt; []&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 生成 20 个圆&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;):\n    &lt;span class=\"hljs-comment\"&gt;# 循环直到生成一个合法的圆为止&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;while&lt;/span&gt; not Addc(circles):\n        &lt;span class=\"hljs-attribute\"&gt;pass&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 使用 turtle 绘制圆&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;turtle&lt;/span&gt;.up()\n\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; circle in circles:\n    &lt;span class=\"hljs-attribute\"&gt;turtle&lt;/span&gt;.goto(circle[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], circle[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n    &lt;span class=\"hljs-attribute\"&gt;turtle&lt;/span&gt;.down()\n    &lt;span class=\"hljs-attribute\"&gt;turtle&lt;/span&gt;.circle(circle[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["绘制随机分布的圆Python", ["任务描述:", "在图形界面内，每个圆的圆心和半径随机生成，而且不能重叠，需要把每个圆的数据放入列表，新生成的圆要与已有的圆进行比对，即两个圆的圆心的举例必须大于两个圆的半径之和，而又不能超过图形边界。请编写程序，实现随机分布的圆的绘制。", "\n", "输出:", "\n", "20个随机分布，半径为2~20的圆。", "\n", "分析:", "\n", "利用turtle库中的图形绘制函数来完成圆的绘制。并且利用random库和math库中的函数，实现圆的圆心和半径的随机生成。每次新生成的圆的圆心坐标和半径都放入列表中", "\n", "首先设定图形窗口为800*600，位于屏幕中心，如stup(800，600)。", "假定生成20个圆", "定义函数Addc(c),控制新生成的圆不与原有圆发生重叠，且不超出图形边界。", "\n", "通过循环，在图形边界内，随机生成20个圆的圆心坐标，产生20个半径为2~20的随机圆，放置在列表c", "\n", "最后通过turtle库中的up(), down(), goto(), crcl()函 数实现圆的绘制。", "\n", "重要知识点:", "（1) turtle 绘图基本操作相关函数的用法: up), down(), goto(), forward(), pencolor(), pensze), hideturtl(),done()等。", "（2) 随机函数的用法。", "  (3) 循环结构在绘图中的运用。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你说的是单片机没连接上IAR软件&amp;#xff0c;还是烧写完程序接上灯没反应&amp;#xff1b;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["用IAR连接单片机做跑马灯失败了", ["为什么连接到msp430单片机的时候单片机没有反应？求解答，初学者阶段😭代码是在IAR敲的", "\n", "//", "跑马灯要实现", "8", "个LED发光二极管按一定时间间隔顺序点亮\n", "//", "8", "个LED发光\n", "//", "二极管接到MSP430单片机的", "8", "个I/O端口上,\n", "//", "通过一个", "8", "位的二进制数来控制", "8", "个I/", "0", "端口的输出。\n", "//", "由于图", "1.44", "中发光二极管是I/O端口输出低电平时点亮，\n", "//", "一个循环周期分为", "8", "个时间段,每一时间段送至I/O端口中的数据如表", "1", "-", "2", "所示,\n", "//", "实现", "8", "个LED 发光二极管依次点亮的效果。\n", "//", "表", "1", "-", "2", "中“", "0", "”表示I/O端口输出低电平,发光二极管点亮;\n", "//", "“", "1", "”表示I/O端口输出高电平,发光二极管熄灭。\n", "#include <msp430f149.h>", "\nvoid main( void )\n{\n  unsigned int i;\n  char j,k;\n  ", "//", " Stop watchdog timer to prevent time out reset\n  WDTCTL = WDTPW + WDTHOLD;\n  P4DIR=", "0", "xff;", "//", "设置P4端口为输出\n  ", "while", "(", "1", ")\n  {\n    k=", "1", ";\n    ", "for", "(j=", "0", ";j<", "8", ";j++)", "//", "循环八次，即D1~D8轮流点亮\n    {\n      P4OUT=~k;", "//", "反向输出，低电平有效\n      ", "for", "(i=", "65535", ";i>", "0", ";i--);", "//", "延时？为什么是", "65535", "\n      k=k<<", "1", ";", "//", "左移一位\n    }\n  }\n\n  \n}\n\n"]], "Tag": "程序设计"}
{"Answer": "你这需求似乎没有必要重新new线程吧！\r\n假设线程ChatControl有如下状态：初始态、运行态、结束态。\r\n当触发刷新的时候，直接将线程ChatControl状态由运行态回退\r\n为初始态并重新进入运行态不就得了", "Konwledge_Point": "循环控制", "Question": ["多线程，保证用户只存在一个线程。困扰很久，实在没有办法", ["servlet，用户请求的地址。当用户请求之后，会调用control.start();进入一个耗时的操作，循环等待。直到超时或者是打断循环退出继续执行。问题出在else语句块，原来意思是如果是刷新，结束该用户的上一个等待线程，该次请求挂起，这样保证了一个用户只存在一个线程。执行顺序应该是先结束上一个线程再new一个新线程。但执行的接是先new一个线程再结束上一个进程。结束线程我也用线程来控制，但还是不行。希望大家能帮我解决一下、谢谢。这个问题困扰很久了。[code=\"java\"]PrintWriter out = response.getWriter();", "\n            HttpSession session = request.getSession();", "\n            String receiver = String.valueOf(session.getAttribute(\"User\"));", "\n\n", "        ChatControl control = null;\n        if (ChatListener.threadMap.get(receiver) == null) {\n            System.out.println(\"============================ threadMap.get(receiver) == null\");\n            control= new ChatControl();\n            ChatListener.threadMap.put(receiver , control);//线程对象塞进map\n            control.start();//启用线程\n", "\n\n", "//              control.join();", "\n                ChatListener.threadMap.remove(receiver);", "\n            }else {", "\n                System.out.println(\"============================ threadMap.get(receiver) != null\");", "\n                //如果是刷新,结束上一个长连接，此连接挂起", "\n                StopThreadControl stopThread = new StopThreadControl();", "\n                stopThread.setPriority(Thread.NORM_PRIORITY+2);", "\n                stopThread.setUser(receiver);", "\n                stopThread.start();", "\n                stopThread.join();//等待停止线程之后再执行new新的线程，但程序没有按照这样执行", "\n                /*", "\n                control = new ChatControl();", "\n                control.update(receiver);//有可能抢cpu资源引起的，无法控制", "\n                control = null;", "\n                */", "\n                //挂起", "\n                ChatControl control2 = new ChatControl();", "\n                ChatListener.threadMap.put(receiver, control2);", "\n                control2.start();", "\n//              control2.join();", "\n                ChatListener.threadMap.remove(receiver);", "\n            }", "\n            ChatHelper.updateChatToReceived(receiver);//更新到已收到[/code]", "\n\n", "ChatControl.java 继承 Thread，run是一个耗时的操作。用户请求会进入此等待 ", "\n[code=\"java\"]public void run() ", "\n    {   String threadName = Thread.currentThread().getName();", "\n        log.info(\"当前启动线程是：\"+threadName);", "\n        Date newDate = DateUtil.getNowDateAndTime();", "\n        int i = 0;", "\n        while(!done){", "\n            try {", "\n                System.out.println(\"循环ing。。。。\"+i++);", "\n                //睡眠1秒继续等待", "\n                sleep(1*1000); ", "\n                //5分钟返回一次,避免资源一直在占用", "\n                if(DateUtil.getTwoTimeSub(DateUtil.getNowDateAndTime(), newDate) >= 5){", "\n                    break ;", "\n                }", "\n            } catch (Exception e) {", "\n                log.error(Constants.getExceptionString(\"run()\", ChatControl.class));", "\n                break;//退出", "\n            }", "\n        }", "\n        log.info(\"当前结束线程：\"+threadName);", "\n    }[/code]", "\n\n", "StopThreadControl 继承Thread， 让上一个线程退出循环，结束进程", "\n[code=\"java\"]   String user;", "\n    public void run() {", "\n        System.out.println(\"进入StopThreadControl..........................\");", "\n        ChatControl control= (ChatControl) ChatListener.threadMap.get(user);", "\n        ChatListener.threadMap.remove(user);", "\n        if (control != null ) {", "\n            control.breakThread();", "\n            System.out.println(\"打断循环.........................................\");", "\n        }", "\n        return ;", "\n    }[/code]", "\n\n", "[code=\"java\"]public class ChatListener {", "\n      static public Map threadMap = new HashMap() ;//保存线程", "\n\n", "}[/code]", "\n\n", "我查了很多关于多线程编程的资料，但还是不会很好运用。还有多线程异步调用。需要使用内部类吗？希望大家能帮我解决一下，指出代码的问题所在，谢谢、"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Flask 的路由机制是基于请求的&amp;#xff0c;当一个请求到达 Flask 时&amp;#xff0c;它会匹配该请求的 URL 和已注册的路由&amp;#xff0c;如果匹配成功&amp;#xff0c;就会调用对应的函数进行处理。在您的代码中&amp;#xff0c;您在 index() 函数中使用了一个无限循环&amp;#xff0c;这会导致该函数无法继续处理其他请求&amp;#xff0c;从而导致网页无法正常访问。&lt;br /&gt;解决方案&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;使用 JavaScript 来实现网页的实时镜像。您可以在页面上使用 JavaScript 定时发送请求来获取最新的页面内容&amp;#xff0c;并进行更新。&lt;br /&gt;使用 WebSockets 来实现实时通信。您可以使用 WebSockets 在服务器端和客户端之间建立一个双向的连接&amp;#xff0c;这样就可以在服务器端检测到网页的变动&amp;#xff0c;并将变动通知到客户端进行更新。&lt;br /&gt;Django 是一个强大的 Web 框架&amp;#xff0c;它可以帮助您快速构建高质量的 Web 应用程序。Django 提供了一系列功能&amp;#xff0c;如路由系统、模板系统、数据库支持等&amp;#xff0c;使得开发 Web 应用变得更加容易。&lt;br /&gt;可以用 Django 实现实时镜像网站&amp;#xff0c;但是实现方式和 Flask 不同。可以使用 Django 提供的 Channels 框架来实现 WebSocket 通信&amp;#xff0c;这样就可以在服务器端检测到网页的变动&amp;#xff0c;并将变动通知到客户端进行更新。&lt;/p&gt;\n&lt;p&gt;此外&amp;#xff0c;Django 也有一个类似于 Flask 的框架 Django-REST-framework&amp;#xff0c;可以用来做API的开发&amp;#xff0c;与前端进行交互。&lt;br /&gt;可以借助它来实现实时镜像网站。&lt;/p&gt;\n&lt;p&gt;Flask和Django都可以实现实时镜像网站&amp;#xff0c;两者实现方式不同&amp;#xff0c;Flask可以使用 JavaScript 和 WebSockets 两种方式&amp;#xff0c;Django可以使用 Channels 和 Django-REST-framework 两种方式。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["flask，django，前后端交互问题", ["一般我们用flask或django都是开发网站，我就想用flask或django搞一个实时镜像网站。", "\n", "后来我发现，flask严重依赖网址，导致跳转时就会失去控制", "\n", "\n", " #main.py\n ", "from", " flask import Flask,render_template,request,redirect\n import ree\n url = input()\n ree.", "get", "(url)\n app = Flask(__name__)\n\n @app.route(", "'/'", ")\n def index():\n    global url\n    ", "while", " ", "True", ":\n        ", "if", "(url+request.full_path!=url ", "and", " request.full_path!=", "\"/?\"", "):\n            url = request.full_path\n            ", "get", "(url)\n            return render_template(", "'index.html'", ")\n        ", "else", ":\n            return render_template(", "'index.html'", ")\n  app.", "run", "(", "host", "=", "'0.0.0.0'", ", ", "port", "=5000, ", "debug", " = ", "True", ")\n", "#ree.py", "\nimport requests\n\nimport time\nimport os\ndef ", "get", "(url):\n    head = {\n        ", "\"User-Agent\"", ": ", "\"Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11\"", "\n    }\n    res = requests.", "get", "(url, ", "headers", "=head)\n    with open(", "\"templates/index.html\"", ", ", "\"w\"", ", ", "encoding", "=", "\"UTF-8\"", ") as file:#将爬到的html保存，供flask使用\n        file.write(res.text)\n", "\n", "见上述代码，我想用循环的方式检测网址变动，重新爬取。但是失败了，循环没有成功，导致丢失网站。", "\n", "\n", "这里提两个问题，1.我发现在flask在运行过程中有输出变动后网页，只是代码无法捕捉，是否有一些方法可以捕捉？", "\n", "2.网上说django更强大，是否可以用django实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把if判断句后面的分号去掉试下&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["统计字符串中数字字符出现次数", ["问题具体信息如下：", "\n", "\n", "\n", "下面是一份标准答案", "\n", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "/*********Begin*********/", "\n       ", "char", " s[", "100", "];\n       ", "int", " n;\n       ", "scanf", "(", "\"%d\"", ",&n);\n       ", "while", "(n--)\n       {\n           ", "int", " count=", "0", ";\n           ", "scanf", "(", "\"%s\"", ",s);\n           ", "for", "(", "int", " i=", "0", ";s[i]!=", "'\\0'", ";i++)\n           {\n               ", "if", "(s[i]>=", "'0'", "&& s[i]<=", "'9'", ") count=count+", "1", ";\n           }\n           ", "printf", "(", "\"%d\\n\"", ",count);\n       }\n    ", "/*********End**********/", "\n    ", "return", " ", "0", ";\n}\n", "\n", "运行结果：", "\n", "\n", "我的代码如下：", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<string.h>", "\n", "int", " ", "main", "()", "{\n    ", "int", " n,i,j;\n    ", "char", " s[", "100", "];\n    \n    ", "printf", "(", "\"你要输入几行字符串：\\n\"", ");\n    ", "scanf", "(", "\"%d\"", ",&n);\n    \n    ", "for", "(i=", "0", ";i<n;i++){\n        ", "int", " count=", "0", ";\n        ", "scanf", "(", "\"%s\"", ",s);\n\n            ", "for", "(j=", "0", ";s[j]!=", "'\\0'", ";j++){\n            ", "if", "(s[j]>=", "'0'", "&& s[j]<=", "'9'", ") ;\n            count++;\n            }\n        ", "printf", "(", "\"%d\"", ",count);\n    }\n    \n}\n\n", "\n", "运行结果及报错内容 ：", "\n", "然后我的代码算出来的是，我每行输入了多少字符：", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我的思路是，外面的大循环是用来控制输入的行数，里面的循环是对每行每个字符依次遍历，如果是数字字符，那么变量count就加一。", "求各位指点"]], "Tag": "程序设计"}
{"Answer": "给你改一下。 \r\n\r\n \r\n\r\n     -(void)checkAllSegments\r\n        {   BOOL alertShown;\r\n            alertShown = NO;\r\n            for (UISegmentedControl *swItem in allSegmentControlOutlet) {\r\n                int selectedSegment = swItem.selectedSegmentIndex;\r\n                swItem.segmentedControlStyle = UISegmentedControlStyleBar;\r\n        //didPass = YES;\r\n                if (selectedSegment == -1) {\r\n                    alertShown=YES;\r\n                    break;  /////如果有一个没有被选择，直接退出for循环\r\n                }\r\n            }\r\n            if (alertShown) {\r\n                  UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@\"Fill in all forms\"\r\n                                             message:@\"Please go back and fill in missing info\"\r\n                                             delegate:nil\r\n                                             cancelButtonTitle:@\"OK\"\r\n                                             otherButtonTitles:nil];\r\n            }else {\r\n               [self performSegueWithIdentifier:@\"ToHiring\" sender:self];\r\n            }\r\n           \r\n        }", "Konwledge_Point": "循环控制", "Question": ["检测outletcollection中所有项目", ["在进入下一个视图中需要确保当前的控制段都被选中了", "\n\n", "-(void)checkAllSegments\n{   BOOL alertShown;\n    alertShown = NO;\n    for (UISegmentedControl *swItem in allSegmentControlOutlet) {\n        int selectedSegment = swItem.selectedSegmentIndex;\n        swItem.segmentedControlStyle = UISegmentedControlStyleBar;\n//didPass = YES;\n        if (selectedSegment == -1) {\n            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@\"Fill in all forms\"\n                                                            message:@\"Please go back and fill in missing info\"\n                                                           delegate:nil\n                                                  cancelButtonTitle:@\"OK\"                                                  otherButtonTitles:nil];\n\n           // [swItem setTintColor:[UIColor redColor]];\n            if (!alertShown) {\n                [alert show];\n                alertShown = YES;\n                didPass = NO;\n                return;\n            }\n        }\n    }\n    if (didPass) {\n        [self performSegueWithIdentifier:@\"ToHiring\" sender:self];\n        }\n}\n", "\n\n", "但是我不知道应该将 ", "didPass = YES;", "放到哪，这句代码所在的位置会被注释掉。除非最后一条循环完成。有没有更好的方法解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一个for循环里面&amp;#xff0c;用;   不是逗号&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Visual Studio 2022", ["我这边是正在看C语言，编译器用的是Visual Studio 2022，全程是根据教程进行来的，和教程没有一点错误，但就是报错，也查了百度但是运行出来的结果要么是死循环，要么是和教程中的不一致，请问这个应该这么改呀。图片中的报错的第一条和第二条是代码中的第四行，报错中的第三条和第四条是代码中的第五行。", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " i, j, k;                            ", "// 定义变量i,j,k为基本整形", "\n    ", "for", " (i = ", "1", ", i <= ", "5", ", i++)                ", "// 控制行数", "\n    {\n        ", "for", " (j = ", "1", "; j <= ", "5", " - i; j++)        ", "// 空格数", "\n            ", "printf", "(", "\" \"", ");\n        ", "for", " (k = ", "1", "; k <= ", "2", " * i - ", "1", "; k++)    ", "// 显示*号的数量", "\n            ", "printf", "(", "\"*\"", ");\n        ", "printf", "(", "\"\\n\"", ");\n    }\n    ", "return", " ", "0", ";\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "方法如下：\r\n\r\n\r\n\r\n```\r\n .............. //其它代码\r\n \r\nconst \r\n  TopMargin=4; //设置上边距，根据情况调整\r\n \r\n .............. //其它代码\r\n \r\nbegin\r\nif printdialog1.execute then \r\n\t for i:=0 to TopMargin-1 do //先打印若干个空行，相当于出来一个上边距\r\n\t\t\tbegin\r\n\t\t\t\tWrite(PrintText,#10);  //#10 代表换行 \r\n\t\t\tend;\r\n...............//其它代码\r\n```\r\n基本逻辑就是这样，你可以结合其它代码使用。\r\n\r\n**用心回答每个问题，如果对您有帮助，请采纳答案好吗，谢谢。**", "Konwledge_Point": "循环控制", "Question": ["delphi printdialog1的打印上边距，打印出来的东西往下一点？", ["delphi printdialog1的打印怎么设置上边距，打印出来的东西往下一点？", "\n\n", "网上抄的代码", "\nprocedure TForm3.Button1Click(Sender: TObject);", "\nvar", "\nline:integer; //定义一个line变量，用于下面控制打印各行内容", "\nfiles:system.text; //告诉系统说files是文本文件，是要打印机打印的文件", "\nbegin", "\nif printdialog1.execute then //当printdialog1执行后", "\nbegin", "\nassignprn(files); //通过assignprn函数将要打印的文件交给打印机", "\nrewrite(files); //让打印机打开文件准备打印", "\nprinter.Canvas.font:=memo1.font;            //canvas是打印机的画板，用来打印文件的，直接设置字体", "\nfor line:=0 to memo1.lines.count-1 do //以下是循环memo1的每个行", "\nbegin", "\nwriteln(files,memo1.lines[line]); //打印每行内容 writeln(文件名,文本的某个行);", "\nend;", "\nsystem.close(files); //打印完了就关闭要打印的文件", "\nend;", "\nend;"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;goto 无条件跳转&amp;#xff0c;跳到cmd_fail处继续执行。也就是执行下面的i2c_Stop();并返回0&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;cmd_fail: &lt;span class=\"hljs-regexp\"&gt;/* 命令执行失败后&amp;#xff0c;切记发送停止信号&amp;#xff0c;避免影响I2C总线上其他设备 /&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;/ 发送I2C总线停止信号 */&lt;/span&gt;\ni2c_Stop();\nreturn &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["cmd_fail;这句有什么作用", ["问题遇到的现象和发生背景", "\n", " cmd_fail;    /* EEPROM器件无应答 */这句是什么作用，有人知道吗？", "\n", "问题相关代码，请勿粘贴截图", "\n", "uint8_t ee_ReadBytes(uint8_t *_pReadBuf, uint16_t _usAddress, uint16_t _usSize)", "{", "    uint16_t i;", "\n", "/* 采用串行EEPROM随即读取指令序列，连续读取若干字节 */", "\n\n", "/* 第1步：发起I2C总线启动信号 */", "\ni2c_Start();\n\n", "/* 第2步：发起控制字节，高7bit是地址，bit0是读写控制位，0表示写，1表示读 */", "\ni2c_SendByte(EEPROM_DEV_ADDR | EEPROM_I2C_WR);    ", "/* 此处是写指令 */", "\n \n", "/* 第3步：等待ACK */", "\n", "if", " (i2c_WaitAck() != ", "0", ")\n{\n    goto cmd_fail;    ", "/* EEPROM器件无应答 */", "\n}\n\n", "/* 第4步：发送字节地址，24C02只有256字节，因此1个字节就够了，如果是24C04以上，那么此处需要连发多个地址 */", "\ni2c_SendByte((uint8_t)_usAddress);\n\n", "/* 第5步：等待ACK */", "\n", "if", " (i2c_WaitAck() != ", "0", ")\n{\n", "\n", "#include \"stm32f10x.h\"                  // Device header", "        goto cmd_fail;    /* EEPROM器件无应答 */", "    }", "\n", "/* 第6步：重新启动I2C总线。前面的代码的目的向EEPROM传送地址，下面开始读取数据 */", "\ni2c_Start();\n\n", "/* 第7步：发起控制字节，高7bit是地址，bit0是读写控制位，0表示写，1表示读 */", "\ni2c_SendByte(EEPROM_DEV_ADDR | EEPROM_I2C_RD);    ", "/* 此处是读指令 */", "\n\n", "/* 第8步：发送ACK */", "\n", "if", " (i2c_WaitAck() != ", "0", ")\n{\n    goto cmd_fail;    ", "/* EEPROM器件无应答 */", "\n}    \n\n", "/* 第9步：循环读取数据 */", "\n", "for", " (i = ", "0", "; i < _usSize; i++)\n{\n    _pReadBuf[i] = i2c_ReadByte();    ", "/* 读1个字节 */", "\n    \n    ", "/* 每读完1个字节后，需要发送Ack， 最后一个字节不需要Ack，发Nack */", "\n    ", "if", " (i != _usSize - ", "1", ")\n    {\n        i2c_Ack();    ", "/* 中间字节读完后，CPU产生ACK信号(驱动SDA = 0) */", "\n    }\n    ", "else", "\n    {\n        i2c_NAck();    ", "/* 最后1个字节读完后，CPU产生NACK信号(驱动SDA = 1) */", "\n    }\n}\n", "/* 发送I2C总线停止信号 */", "\ni2c_Stop();\nreturn ", "1", ";    ", "/* 执行成功 */", "\n", "\n", "cmd_fail: /* 命令执行失败后，切记发送停止信号，避免影响I2C总线上其他设备 ", "/", "    /", " 发送I2C总线停止信号 */", "    i2c_Stop();", "    return 0;", "}", "\n", "运行结果及报错内容", "\n", "cmd_fail;这句有什么作用"]], "Tag": "程序设计"}
{"Answer": "有两个问题：\r\n1、之所以只看到一个线程的输出信息，setName 使用的是同一个 MyThread ，每次都覆盖上次的值，最后只有一个 5 的时候生效了，把 new MyThread 挪到内部。\r\n2、同步的逻辑有问题，购票的票数应该是所有线程共享的，应该设置为静态变量，所有线程用同一个锁，保证票数一致。\r\n调整代码如下：\r\n\r\n```\r\n\r\nimport java.util.Scanner;\r\n\r\nclass MyThread implements Runnable {\r\n\tprivate static int ticket; // 票数\r\n\tprivate String name; // 线程名称\r\n\r\n\tpublic MyThread() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic MyThread(int ticket, String name) {\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic int getTicket() {\r\n\t\treturn ticket;\r\n\t}\r\n\r\n\tpublic static void setTicket(int ticket) {\r\n\t\tMyThread.ticket = ticket;\r\n\t}\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void run() { // 控制线程输出\r\n\t\twhile(ticket&gt;0) {\r\n\t\t\tsynchronized (MyThread.class) { // 同步线程\r\n\t\t\t\tSystem.out.println(this.name + \",当前余票是：\" + (ticket - 1) + \".售出票号是：\" + ticket);\r\n\t\t\t\tticket--;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tThread.sleep(100);\r\n\t\t\t} catch (InterruptedException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tScanner in = new Scanner(System.in);\r\n\t\tSystem.out.println(\"请输入总的票数：\");\r\n\t\tint ticketNum = in.nextInt();\r\n\t\tSystem.out.println(\"请输入窗口数目：\");\r\n\t\tint num = in.nextInt();\r\n\t\tMyThread.setTicket(ticketNum);\r\n\t\tfor (int i = 1; i &lt;= num; i++) {\r\n\t\t\tMyThread mt = new MyThread();\r\n\t\t\tmt.setName(\"售票窗口\" + i + \"正在售票\");\r\n\t\t\tnew Thread(mt).start();\r\n\t\t}\r\n\t\tin.close();\r\n\t}\r\n}\r\n\r\n```\r\n这样就就正常了，有需要可以关注我的Java并发编程专栏，里面有解释这类常见问题。", "Konwledge_Point": "循环控制", "Question": ["java实现同步多线程的问题", ["卖票的代码，无法实现完整的多线程，只有一两个线程会输出。", "\nimport java.util.Scanner;", "\n\n", "class MyThread implements Runnable{", "\n    private int ticket;   //票数", "\n    private String name;  //线程名称", "\n\n", "public MyThread() {\n    super();\n}\n\n\npublic MyThread(int ticket,String name) {\n    super();\n    this.ticket = ticket;\n    this.name = name;\n}\n\npublic int getTicket() {\n    return ticket;\n}\n\n\npublic void setTicket(int ticket) {\n    this.ticket = ticket;\n}\n\n\npublic String getName() {\n    return name;\n}\n\n\npublic void setName(String name) {\n    this.name = name;\n}\n@Override\npublic void run() {  //控制线程输出\n    int t = this.ticket;\n    synchronized(this){   //同步线程\n        for(int i = 1;i<=t;i++) {\n        if(this.ticket>0) {\n            System.out.println(this.name+\",当前余票是：\"+(this.ticket-1)+\".售出票号是：\"+i);\n        }\n        this.ticket--;\n\n    }\n    }\n}\n", "\n\n", "}", "\npublic class Main {", "\n\n", "public static void main(String[] args) {\n    Scanner in = new Scanner(System.in);\n    System.out.println(\"请输入总的票数：\");\n    int ticketNum = in.nextInt();\n    System.out.println(\"请输入窗口数目：\");\n    int num = in.nextInt();\n    MyThread mt = new MyThread();\n       for(int i = 1;i<=num;i++) {\n           mt.setName(\"售票窗口\"+i+\"正在售票\"); \n           mt.setTicket(ticketNum);\n           new Thread(mt).start();\n       }\n}\n", "\n\n", "}", "\n以下为代码运行结果：", "\n麻烦大佬们解答一下，谢谢！", "\nps：为什么在主方法的设置多线程for循环那里，将创建和实例化对象放入for循环中，就无法实现同步线程呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我实在没理解的逻辑。我写了一个&amp;#xff0c;带有详细注释&amp;#xff0c;供您参考。如果有用望采纳。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main() {\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; m, n;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;, &amp;amp;n, &amp;amp;m); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; n人数&amp;#xff0c;m是报数\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || n &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数据不合法\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a[n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        a[i] &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    a[n] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 表示最先从编号为&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;的人开始数&amp;#xff0c;&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;表示当前数到的人的序号\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;                     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 表示当前数到第几个&amp;#xff0c;因为第一个已数过&amp;#xff0c;故cnt&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;] !&amp;#61; &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;) {   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]!&amp;#61;&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt; 说明下一个不是自己本身&amp;#xff0c;即人数&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;个&amp;#xff0c;游戏继续\n        cnt&amp;#43;&amp;#43;;                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 数的人加&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff0c;即将序号为a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]的人已经数过\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cnt &amp;#61;&amp;#61; m) {             &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 当cnt&amp;#61;n时&amp;#xff0c;说明该人要出圈\n            a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;] &amp;#61; a[a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;将&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;位的直接后继(a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]) 改为 a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]位的直接后继(a[a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]])\n            &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt; &amp;#61; a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;];         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;继续向后数&amp;#xff0c;当前数到的是序号为更新后的a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]的&amp;#xff0c;cnt计数为&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt; &amp;#61; a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如何不是第n个&amp;#xff0c;继续往后数&amp;#xff0c;将&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;向后移动\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最终留下%d号\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["有n个人围成一圈报数问题", ["问题：有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。", "为什么我这个代码运行不出结果呀？", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", "  ", "main", "()", "\n", "{\n    ", "int", " n;", "//最开始的总人数 ", "\n    ", "int", " i;", "//控制变量 ", "\n    cout<<", "\"请输入有多少人参加游戏\"", "<<", "'\\n'", ";\n    cin>>n; \n    ", "int", " s[", "100", "];", "//定义一个数组 ", "\n    ", "int", " j=", "0", ";", "//总共退圈人数 ", "\n    ", "int", " y;", "// 每轮退圈人的号码 ", "\n    ", "int", " cout=", "0", ";", "//每轮报号累加数 ", "\n    ", "for", "(i=", "0", ";i<n;i++)\n    {\n        s[i]=", "1", ";", "//1在圈内，0在圈外，所有人都在圈外时停止循环 ", "\n    }\n    ", "while", "(j<n)\n    {\n        ", "for", "(i=", "0", ";i<n;i++)\n        {\n            ", "if", "(s[i]==", "1", ")\n            {\n                cout++;\n                ", "if", "(cout%", "3", "==", "0", ")\n                {\n                    s[i]=", "0", ";\n                    j++;\n                    y=i+", "1", ";\n                }\n            }\n        }\n    }\n    cout<<y<<", "'\\n'", ";\n            ", "return", " ", "0", ";\n} \n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;冒泡排序代码如下&amp;#xff0c;如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string.h&amp;gt;\nvoid sort(char*name[],int n)\n{\n\tint i,j;\n\tchar* tmp;\n\tfor (i &amp;#61; 0; i &amp;lt; n-1;i&amp;#43;&amp;#43;)\n\t{\n\t\tfor (j &amp;#61; 0; j &amp;lt; n-1-i;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tif (strcmp(name[j] , name[j&amp;#43;1]) &amp;gt; 0)\n\t\t\t{\n\t\t\t\ttmp &amp;#61; name[j];\n\t\t\t\tname[j] &amp;#61; name[j&amp;#43;1];\n\t\t\t\tname[j&amp;#43;1] &amp;#61; tmp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid main()\n{\n\tchar*name[5]&amp;#61;{&amp;#34;BASIC&amp;#34;,&amp;#34;FORTRAN&amp;#34;,&amp;#34;PASCAL&amp;#34;,&amp;#34;C&amp;#34;,&amp;#34;FoxBASE&amp;#34;};\n\tint i;\n\tsort(name,5);\n\tfor(i&amp;#61;0;i&amp;lt;5;i&amp;#43;&amp;#43;)\n\t\tprintf(&amp;#34;%s\\n&amp;#34;,name[i]);/*输出排序结果*/\n\t\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["这个题不太会，自己的有问题，想看一下改用冒泡法的正确代码", ["3.有若干图书，按字母顺序从小到大输出书名。voidsort(char*name[],intn){char*temp;inti,j,min;/*使用选择法排序*/for(i=0;i<n-1;i++)/*外循环：控制选择次数*/{min=i;/*预置本次最小串的位置*/for(j=i+1;j<n;j++)/*内循环：选出本次最小串*/if(strcmp(name[min],name[j])>0)/*请分析说明，写出该句的作用？*/min=j;/*存在更小的串保存之*/if(min!=i)/*存在更小的串，交换位置*/{temp=name[i];name[i]=name[min];name[min]=temp;}}}#include\"stdio.hvoidmain(){char*name[5]={\"BASIC\",\"FORTRAN\",\"PASCAL\",\"C\",\"FoxBASE\"};inti;sort(name,5);for(i=0;i<5;i++)printf(\"%s\\n\",name[i]);/*输出排序结果*/}//请“冒泡法”重新试做本题，并调试运行。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你也太不仔细了&amp;#xff0c;有发帖的时间再多看5分钟&amp;#xff0c;我不信你看不出来&lt;br /&gt;%d和&amp;amp;d能一样&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["学c又是懵逼的一天，自以为没错，求有缘人指点迷津。注释什么的都很清楚。", ["\n", "# ", "include", " ", "<stdio.h>", "\n", "float", " i=", "1", ";                             ", "//定义全局变量求平均值，最大值，最小值", "\n", "int", " j=", "1", ",k=", "1", ";\n", "int", " ", "main", " ", "()", "\n", "{\n        ", "void", " ", "change", "(", "int", " array[],", "int", " n)", ";   ", "//声明函数", "\n\n        ", "int", " a[", "5", "]={", "55", ",", "60", ",", "45", ",", "45", ",", "50", "};         ", "//定义数组，给定数据", "\n       ", "change", "(a,", "5", ");\n       ", "printf", "(", "\"平均值为%f\\n最大值为&d\\n最小值为%d\\n\"", ",i,j,k);\n\n\n\n\n\n\n\n\n\n\n    ", "return", " ", "0", ";\n}\n\n\n    ", "void", " ", "change", "(", "int", " array[],", "int", " n)", "\n    ", "{\n    \n\n        ", "int", " f;                 ", "//设置局部变量，控制循环", "\n        i=k=j=array[", "0", "];\n    \n        ", "for", "(f=", "1", ";f<n;++f)\n        {\n            \n            ", "if", "(array[f]>j)              ", "//把更大的数塞进j里", "\n            {     \n                j=array[f];        \n            }\n            ", "else", " ", "if", "(array[f]<k)        ", "//把更小的数塞进k里", "\n            {\n                ", "printf", "(", "\"A\\n\"", "); \n                k=array[f];\n            }\n\n            i=i+array[f];                   ", "//求和", "\n                \n        }\n        i=i/n;                        ", "//求平均值", "\n\n        \n\n        \n    }\n\n\n\n\n", "/*\nA\n平均值为51.000000\n最大值为&d\n最小值为60\nPress any key to continue\n*/", "\n"]], "Tag": "程序设计"}
{"Answer": "关于这种级联问题，首先跟你说明，需要多次查询，但是可以一次返回，不用访问多次\r\npublic class CtItems(){\r\nList provList;\r\nList cityList;\r\nList zoneList;\r\n//getter...\r\n//setter...自己实现getter和setter\r\n}\r\npublic class searchAction(){\r\nCtItems citems=new CtItems();\r\npublic List findProvList(){//具体自己去实现};\r\npublic List findCityList(int pid){//具体自己去实现\r\nList\r\n};\r\npublic List findZoneList(int cid){//具体自己去实现};\r\n先查询出\r\n\r\npublic ActionForward doExecute(){\r\ncitems.setProvList(findProvList());\r\nint fpid=;//取Prov第一条里面的ID\r\ncitems.setCityList(findCityList(fpid));\r\nint fcid=;//取City第一条里面的ID\r\ncitems.setfindZoneList(findZoneList(fcid));\r\n}\r\n}\r\n按照这样来整的话，你只需要返回一个citems就可以了，这样做很简单吧", "Konwledge_Point": "循环控制", "Question": ["Java前辈们，帮我解决个开发上的问题", ["界面上省市区下拉框的value值是数字，存到加盟申请表里的provid，cityid，zoneid字段(Number)。真正的名称是在Area这个行区表里。 ", "\n当我们查询加盟申请表并以表格显示一行行输出的时候，不希望显示出来的是provid，cityid，zoneid，这些数字.我要的是真正的省市区名称显示出来。 ", "\n请问你们是怎么做的？ ", "\n难道是循环Hibernater对加盟申请表查过来的List集合？再根据集合里每条记录的provid，cityid，zoneid去行区表里把相应的名称查过来，组装好后再一条条记录塞回List。最后再返回List到界面用标签输出？？？？ ", "\n感觉这样子好像很不好。我觉得应该是用其他方式做的吧。具体怎么做的，能告诉一下吗。谢谢。。。", "\n外界Java开发普遍是用什么方式来处理这个情况的？？？ ", "\n据说用pojo封装来做，但是查询到记录后到底怎么使用这个pojo来替换数据呢？谁能大概说明一下，非常感谢。", "\n\n", "要说明一下的是我们的所有表都不设外键，全部通过程序控制的，所以在加盟申请表里没有AREA对象属性的。否则的话问题就好办了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;自己已解决&amp;#xff0c;和编码毫无关系&amp;#xff0c;纯粹是自己自以为“没错”的流程有一些细节但是重大的代码被我增加了&amp;#xff0c;发一次&amp;#xff0c;我就多余得清一次包&amp;#xff0c;所以导致数据一直错误&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["qt 客户端传输Ansi文件内容，数据一直出错，毫无头绪。", ["我制作一个用来对设备进行控制的QT客户端，但是近来碰上一个对于我这种新人极其不友好的难题卡了一个月，求各位大佬帮忙。", "\n\n", "流程描述：", "\n\n", "       我在Qt Creator5.12将一个", "ANSI", "编码的rom二进制文件，用", "（unsigned char）", "类型读取出来解密，然后将解密后的数据强转", "（char *）", "，之后将强转后的数据经由VS制作的C库", "TCP函数传输数据", "给设备。", "\n\n", "出错描述：", "\n\n", "       设备反馈说数据错误，不知道是不是因为强转导致的乱码，但我用qDebug打印出来的很多都是", "“？”", "\n\n", "前提描述：", "\n\n", "       同样流程，MFC（GB2312）写的成功了，甚至是同段代码照抄，QT的也失败了。所以我有些怀疑是编码问题。", "\n\n", "尝试描述：", "\n\n", "\n", "    QTextCodec *codec = QTextCodec::codecForName(\"GBK\");\n    QString tempQString = codec->toUnicode(surplusData);\n    codec = QTextCodec::codecForName(\"UTF-8\");\n    surplusData = codec->fromUnicode(tempQString);", "\n\n", "       我是用上面的代码将数据转编码的，先将unsigned char的数据通过for循环一 一赋值到QByteArray ", "surplusData", "，然后转编码，依然出错。", "\n\n", " ", "\n\n", "求助各位大佬，我都不知道哪里出的问题，Ansi编码是GBK的。"]], "Tag": "程序设计"}
{"Answer": "一条查询语句是搞不定的。有两个方法：在程序中逻辑控制、使用数据库的存储过程。\r\n\r\n见http://www.iteye.com/problems/22151详细回答。", "Konwledge_Point": "循环控制", "Question": ["关于一段SQL权限查询", ["最近用JDBC+Oracle做一个权限部分 其中存节点的表function 字段有 ID,PID,TEXT,URL,TYPE", "\npid 就是此节点的父ID  text为其名称， type分为sys和org 问题就出在这个org上了 org表示这个节点是", "\n一个机构 不同于sys的是org对于其父org只能看到text不能有url 其他都一样 因为本人实在新手 对于SQL语句掌握甚少，", "\n这样的查询实在没有思路，于是就做了个程序来控制 具体思路就是 查询某用户的所有权限并查询该用户的下属机构，然后用循环比较下属机构与其所有权限，将其中type为org为其上级org的进行setUrl（\"\"）处理，", "\n以下是部分代码", "\n[code=\"java\"]", "\n        UserDao udao=new UserDao();", "\n        Collection funs=udao.getFuns(rid);", "\n        ArrayList orgs=(ArrayList) udao.queryOrg(oid);", "\n        if (rid!=1) {", "\n            for (Function f : funs) {", "\n                if (f.getType().equals(\"org\")) {", "\n                    boolean clo = false;", "\n                    for (int org : orgs) {", "\n                        if (org ==f.getId()) {", "\n                            clo=true;", "\n                            break;", "\n                        }", "\n                    }", "\n                    if(!clo)f.setUrl(\"\");", "\n                }", "\n            }", "\n        }", "\n[/code]", "\n这样感觉是多于", "\n我想应该 如果用SQl直接查询出来结果才符合常理，但不知道怎么写，希望大家能给出能直接查询出来的结果的sql"]], "Tag": "程序设计"}
{"Answer": "```\r\n using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace ConsoleApplication1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int[] arr = { 15, 25, 30, 35, 45, 50, 55, 70, 80, 100 };\r\n            int sum = 150;\r\n            foreach (var item in Solve(arr, sum))\r\n            {\r\n                Console.WriteLine(string.Join(\", \", item.Skip(1)));\r\n            }\r\n        }\r\n        static IEnumerable&lt;IEnumerable&lt;int&gt;&gt; Solve(int[] arr, int sum, IEnumerable&lt;int&gt; feed = null)\r\n        {\r\n            if (feed == null) feed = new List&lt;int&gt;() { 0 };\r\n            if (feed.Sum() == sum) yield return feed;\r\n            foreach (int n in arr.Where(x =&gt; x + feed.Sum() &lt;= sum))\r\n            {\r\n                foreach (var item in Solve(arr, sum, feed.Concat(new int[] { n }))) yield return item;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```", "Konwledge_Point": "循环控制", "Question": ["求一组int类型数组中，任意数相加等于一个定值的高性能算法", ["如有数组{15， 25， 30， 35， 45，50， 55， 70， 80， 100}", "\n，求任意数（n个元素）相加，和等于150的所有组合（组合的元素个数可进行手动控制）。", "\n\n", "单个元素在组合中可以重复出现，", "\n出现的结果可能有：", "\n15+35+45+55", "\n50+70+80", "\n50+100", "\n50+50+50", "\n\n", "现在有一个这样一个方法，但是计算出来的最终结果只能满足部分条件，而且当元素的个数偏多的时候会造成溢出的情况。请各位大牛指点一下，如果有更好的算法请指教", "\n        private List SeveralCut(List prodWides, double mateWide, double addValue)", "\n        {", "\n            List planList = new List();", "\n\n", "        if (prodWides.Count <= 0)\n        {\n            return planList;\n        }\n\n        for (int  i = 1; i < 1 << prodWides.Count; i++)//从1循环到2^N\n        {\n            double  sum = 0;\n            string planStr = string.Empty;\n            for (int j = 0; j < prodWides.Count; j++)\n            {\n                if ((i & 1 << j) != 0)//用i与2^j进行位与运算，若结果不为0,则表示第j位不为0,从数组中取出第j个数\n                {\n                    sum += prodWides[j];\n                    planStr += prodWides[j] + \"+\";\n                }\n            }\n\n            if (sum == mateWide -addValue)\n            {\n                Console.WriteLine(planStr.TrimEnd('+'));//如果和为所求，则输出\n                planList.Add(planStr.TrimEnd('+'));\n            }\n        }\n\n        return planList;\n    }\n"]], "Tag": "程序设计"}
{"Answer": "求各位大佬帮忙检查一下", "Konwledge_Point": "循环控制", "Question": ["26行fclose(fp)显示错误expected constructor destructor or type", ["#include", "\n#include", "\n#include", "\n#include", "\ntypedef struct pnode          //结构体定义 用于存放学生信息的节点", "\n{", "\n    char name [10];           //姓名", "\n    char num[16];             //学号", "\n    char dor[30];             //房号", "\n    char group[20];           //班级", "\n}student;", "\nchar filename[20];            //文件名", "\nFILE ", "fp;                     //指向文件的指针", "\nvoid creat()                  // 创建一个二进制文件   用于存放学生数据", "\n{   student *person;", "\n    person=(student *)malloc(sizeof(student));   //为节点分配内存", "\n    printf(\"\\n 请您输入文件名:\\n\");", "\n    scanf(\"%s\",filename);", "\n    if((fp=fopen(filename,\"w+\"))==NULL)", "\n    {printf(\"\\n 您没有输入文件名 不能找到文件\");exit(0);}", "\nprintf(\"\\n请输入学生的姓名 学号 房号 班级 用空格隔开 以#结束\\n\");", "\n    scanf(\"%s\",person->name);", "\n    while(strcmp(person->name,\"#\"))    //该循环用于控制学生信息的录入 遇#结束  {  scanf(\"%s %s %s\",person->num,person->dor,person->group);", "\n    fprintf(fp,\"%-10s%-10s%-10s%-10s\\n\",person->name,person->num,person->dor,person->group);scanf(\"%s\",person->name);", "\n    }", "\n    fclose(fp);", "\n}", "\nvoid readfile()                             //文件读取函数", "\n{   printf(\"\\n请输入文件名:\\n\");", "\n    scanf(\"%s\",filename);                   //此处输入为文件的路径", "\n    if((fp=fopen(filename,\"r+\"))==NULL)", "\n    {printf(\"\\n无法打开该文件:\\n\");exit(0);}", "\n    fclose(fp);", "\n}", "\nvoid  output()                            //输出函数 用于输出文件的全部信息", "\n{   student *person;", "\n    long offset1,offset2;", "\n    char name1[10],name2[10],name3[10];", "\n    char num1[16],num2[16],num3[16];", "\n    char dor1[30],dor2[30],dor3[30];", "\n    char group1[20],group2[20],group3[20];", "\n    person=(student *)malloc(sizeof(student));", "\n    if((fp=fopen(filename,\"r\"))==NULL)", "\n    {printf(\"\\n 无法打开该文件\");exit(0);}", "\n    while(!feof(fp))     //此循环用于对文件数据中关键字学号进行从小到大冒泡排序", "\n    {   int a,b,c,d;    //a为循环结束判定变量  b，c，d用于起泡排序学号交换的替换", "\n        if((fp=fopen(filename,\"r+\"))==NULL)         //冒泡排序", "\n        {printf(\"\\n 无法打开该文件\");exit(0);}", "\n        while(!feof(fp))                           // 外部循环", "\n             {", "\n                 while(!feof(fp))                  //内部循环", "\n                 {", "\n                     offset1=ftell(fp);            //获取文件内部当前指针位置fscanf(fp,\"%s%s%s%s\\n\",person->name,person->num,person->dor,person->group);", "\n                     strcpy(name1,person->name);", "\n                     strcpy (num1,person->num);", "\n                     strcpy(dor1,person->dor);", "\n                     strcpy(group1,person->group);", "\n                     if(feof(fp))", "\n                         break;                   //文件结束 跳出循环", "\n                     offset2=ftell(fp);           //获取文件内部下一指针位置fscanf(fp,\"%s%s%s%s\\n\",person->name,person->num,person->dor,person->group);", "\n                     strcpy (name2,person->name);", "\n                     strcpy(num2,person->num);", "\n                     strcpy(dor2,person->dor);", "\n                     strcpy(group2,person->group);", "\n                     b=strlen(num1);", "\n                     c=strlen(num2);", "\n                     d=strcmp(num1,num2);", "\n                     if(b==c&&d>0)  //如果 学号1大于等于学号2 则交换全部数据", "\n                     {   strcpy(name3,name1);", "\n                         strcpy(name1,name2);", "\n                         strcpy(name2,name3);", "\n                         strcpy(num3,num1);", "\n                         strcpy(num1,num2);", "\n                         strcpy(num2,num3);", "\n                          strcpy(dor3,dor1);", "\n                         strcpy(dor1,dor2);", "\n                         strcpy(dor2,dor3);", "\n                         strcpy(group3,group1);", "\n                         strcpy(group1,group2);", "\n                         strcpy(group2,group3);", "\n                         fseek(fp,offset1,SEEK_SET);  //将指针移动offset1个字节", "\n                         strcpy(person->name,name1);", "\n                         strcpy(person->num,num1);", "\n                         strcpy(person->dor,dor1);", "\n                         strcpy(person->group,group1);", "\nfprintf(fp,\"%-10s%-10s%-10s%-10s\\n\",", "\nperson->name,person->num,person->dor,person->group);  //排序后写入文件", "\n                         strcpy(person->name,name2);", "\n                         strcpy(person->num,num2);", "\n                         strcpy( person->dor,dor2);", "\n                         strcpy(person->group,group2);", "\nfprintf(fp,\"%-10s%-10s%-10s%-10s\\n\",person->name,person->num,person->dor,person->group);//排序后写入文件", "\n                     }", "\n                     fseek(fp,offset2,SEEK_SET);", "\n//将文件位置指针从文件头向前移动offset2个字节", "\n                 }", "\n                 rewind(fp);        //指向头文件", "\n                 while(!feof(fp))   //此循环用于判断学号是否有序", "\n                 {   offset1=ftell(fp);", "\nfscanf(fp,\"%s%s%s%s\\n\",person->name,person->num,person->dor,person->group);", "\n                     strcpy (num1,person->num);", "\n                     if(feof(fp))", "\n                     {a=1;break;}", "\n                     offset2=ftell(fp);", "\nfscanf(fp,\"%s%s%s%s\\n\",person->name,person->num,person->dor,person->group);", "\n                     strcpy(num2,person->num);", "\n                     b=strlen(num1);", "\n                     c=strlen(num2);", "\n                     d=strcmp(num1,num2);", "\n                     if(b==c&&d<=0) ", "\n                         a=1;    //若a为1 则有序", "\n                     else", "\n                     {   a=0;    //a为0则无序", "\n                         break;}", "\n                     fseek(fp,offset2,SEEK_SET);", "\n                 }", "\n                 if(a==1)", "\n                     break;   //a为1 说明学号已经有序 跳出循环", "\n                 rewind(fp);", "\n             }", "\n             if(a) break;    //若a为1，则学号已有序排列，跳出总循环，输出文件", "\n    }", "\n    rewind(fp);", "\nprintf(\"\\n", "***************************************************************\\n\");", "\n    printf(\"%40s\\n\",\"输出的记录如下(已按学号排序)\\n\");", "\n    printf(\"%-20s%-20s%-20s%-20s\\n\",\"姓名\",\"学号\",\"房号\",\"班级\");", "\n    while(!feof(fp))                            //次循环用于输出文件", "\n    {", "\nfscanf(fp,\"%s%s%s%s\\n\",person->name,person->num,person->dor,person->group);", "\nprintf(\"%-20s%-20s%-20s%-20s\\n\",", "\nperson->name,person->num,person->dor,person->group);", "\n    }", "\n    fclose(fp);", "\n    printf(\"************************************************************\\n\\n\");", "\n}", "\nvoid namesearch()                              // 按姓名搜索函数", "\n{   int k=0;", "\n    char namekey[10];", "\n    student *person;", "\n    person=(student *)malloc(sizeof(student));", "\n    printf(\"\\n 请输入您要查找的姓名:\");", "\n    scanf(\"%s\",namekey);", "\n    if((fp=fopen(filename,\"rb\"))==NULL)", "\n    {printf(\"\\n 无法打开文件\");exit(0);}", "\n    while(!feof(fp))", "\n    {", "\nfscanf(fp,\"%s %s %s %s\\n\",person->name,person->num,person->dor,person->group);", "\nif(!strcmp(namekey,person->name))", "\n        {   printf(\"\\n\\n 已经为您找到 以下是记录:\\n\\n\");", "\n            printf(\"%-20s%-20s%-20s%-20s\\n\",\"姓名\",\"学号\",\"房号\",\"班级\");", "\nprintf(\"%-20s%-20s%-20s%-20s\\n\",person->name,person->num,person->dor,person->group);", "\n            k=1;", "\n        }", "\n    }", "\n    if(!k)", "\n        printf(\"\\n\\n 没有关于此姓名的任何信息！ \\n\");", "\n        fclose(fp);", "\n}", "\nvoid numsearch()                                     //按学号搜索函数", "\n{   int k=0;", "\n    char xhkey[16];", "\n    student *person;", "\n    person=(student *)malloc(sizeof(student));", "\n    printf(\"\\n 请您输入需要查找的学号：\");", "\n    scanf(\"%s\",xhkey);", "\n    if((fp=fopen(filename,\"rb\"))==NULL)", "\n    {", "\n        printf(\"\\n 无法打开文件 \");", "\n        exit(0);", "\n    }", "\n    while(!feof(fp))", "\n    {", "\nfscanf(fp,\"%s %s %s %s\\n\",person->name,person->num,person->dor,person->group);", "\n        if(!strcmp(xhkey,person->num))", "\n        {   printf(\"\\n\\n 已经为您找到 以下是记录：\\n\\n\"); ", "\n            printf(\"%-20s%-20s%-20s%-20s\\n\",\"姓名\",\"学号\",\"房号\",\"班级\");", "\nprintf(\"%-20s%-20s%-20s%-20s\\n\",person->name,person->num,person->dor,person->group);", "\n            k=1;", "\n        }", "\n    }", "\n    if(!k) ", "\n        printf(\"\\n\\n 没有关于该学号的任何信息\\n\");", "\n        fclose(fp);", "\n}", "\nvoid dorsearch ()                                     //按房号搜索函数", "\n{   int k=0;", "\n    char fhkey[30];", "\n    student *person;", "\n    person=(student *)malloc(sizeof(student));", "\n    printf(\"\\n 请您输入想要查找的房号\");", "\n    scanf(\"%s\",fhkey);", "\n    if((fp=fopen(filename,\"rb\"))==NULL)", "\n    {   printf(\"\\n 无法打开文件\");", "\n        exit(0);", "\n    }", "\n    while(!feof(fp))", "\n    {", "\nfscanf(fp,\"%s %s %s %s\\n\",person->name,person->num,person->dor,person->group);", "\n       if(!strcmp(fhkey,person->dor))", "\n       {   printf(\"\\n\\n 已经为您找到 以下是记录:\\n\\n\");", "\n           printf(\"%-20s%-20s%-20s%-20s\\n\",\"姓名\",\"学号\",\"房号\",\"班级\");", "\nprintf(\"%-20s%-20s%-20s%-20s\\n\",person->name,person->num,person->dor,person->group);", "\n           k=1;", "\n       }", "\n    }", "\n    if(!k) ", "\n        printf(\"\\n\\n 没有关于此房号的任何信息\\n\");", "\n        fclose(fp);", "\n}", "\nvoid  add()                //插入函数  用于像已有文件插入一条新的学生信息记录", "\n{   student *person;", "\n    person=(student *)malloc(sizeof(student));", "\n    if((fp=fopen(filename,\"a\"))==NULL)", "\n    { printf(\"\\n 无法打开文件\");exit(0);}", "\n    printf(\"\\n 请您输入学生姓名 学号 房号 班级 \\n\");", "\n    scanf(\"%s %s %s %s\",person->name,person->num,person->dor,person->group);", "\nfprintf(fp,\"%-10s%-10s%-10s%-10s\\n\",person->name,person->num,person->dor,person->group);", "\n    fclose(fp);", "\n}", "\nvoid modify()             //更新函数 用于修改指定学生姓名的记录", "\n{   int k=0;", "\n    long offset;", "\n    char namekey[10];", "\n    student *person;", "\n    person=(student *)malloc(sizeof(student));", "\n    printf(\"\\n 请您输入想要更改的学生的姓名 :\");", "\n    scanf(\"%s\",namekey);", "\n    if((fp=fopen(filename,\"r+\"))==NULL)", "\n    {  printf(\"\\n 无法打开文件\"); exit(0);}", "\n    while(!feof(fp))", "\n    {   offset=ftell(fp);", "\nfscanf(fp,\"%s %s %s %s\\n\",person->name,person->num,person->dor,person->group);", "\n        if(!strcmp(namekey,person->name))    //比较是否相同 如", "\n        {k=1; break;}", "\n    }", "\n    if(k)                   //相同 输出记录并进行修改", "\n    {   printf(\"\\n 记录输出如下：\\n\\n\"); ", "\n        printf(\"%-20s%-20s%-20s%-20s\\n\",\"姓名\",\"学号\",\"房号\",\"班级\");", "\nprintf(\"%-20s%-20s%-20s%-20s\\n\",person->name,person->num,person->dor,person->group);", "\n        printf(\"\\n 请您输入新的学生姓名 学号 房号 班级：\\n\");", "\n        scanf(\"%s %s %s %s\",person->name,person->num,person->dor,person->group);", "\n        fseek(fp,offset,SEEK_SET);", "\nfprintf(fp,\"%-10s%-10s%-10s%-10s\\n\",person->name,person->num,person->dor,person->group);", "\n    }", "\n    else", "\n        printf(\"\\n 没有关于该姓名的任何记录\\n\");", "\n        fclose(fp);", "\n}", "\nvoid deleted()                      //删除函数 用于删除指定学生姓名的记录", "\n{", "\n    int k=0;", "\n    char m;", "\n    long offset;", "\n    char namekey[10];", "\n    student *person;", "\n    person=(student *)malloc(sizeof(student));", "\n    printf(\"\\n请您输入想要删除的姓名：\");", "\n    scanf(\"%s\",namekey);", "\n    if((fp=fopen(filename,\"r+\"))==NULL)", "\n    {", "\n        printf(\"\\n 无法打开文件 \");", "\n        exit(0);", "\n    }", "\n    while(!feof(fp))                   //此循环遍历整个文件 查找需要删除的记录", "\n    { ", "\n        offset=ftell(fp);", "\nfscanf(fp,\"%s %s %s %s\\n\",person->name,person->num,person->dor,person->group);", "\n        if(!strcmp(namekey,person->name))", "\n        {   k=1; break; }", "\n    }", "\n    if(k)", "\n    {   printf(\"\\n 记录输出如下：\\n\\n\");", "\n        printf(\"%-20s%-20s%-20s%-20s\\n\",\"姓名\",\"学号\",\"房号\",\"班级\");", "\nprintf(\"%-20s%-20s%-20s%-20s\\n\",person->name,person->num,person->dor,person->group); printf(\"\\n  您真的确定要删除?y/n?\");", "\n        scanf(\"%s\",&m);", "\n        if(m=='y')       //删除确认按钮 ", "\n        {   fseek(fp,offset,SEEK_SET);   //删除记录", "\n            fprintf(fp,\"%-10s%-10s%-10s%-10s\\n\",\"\",\"\",\"\",\"\");", "\n        }", "\n       else rewind(fp);", "\n    }", "\n    else printf(\"\\n 没有关于该姓名的任何记录\\n\");", "\n    fclose(fp);", "\n}", "\nvoid main()  //主函数 ", "\n{   int m,flag=1;             // m用于控制菜单的选择项     flag用于控制菜单弹出", "\n    while(flag)", "\n    {", "\n        printf(\"%40s\\n\",\"海南大学宿舍管理系统\");", "\nprintf(\"--------------------------------------------------------------------------------\\n\")", "\n            printf(\"\\t\\t0 ------------  创建文件\\n\");", "\n            printf(\"\\t\\t1 ------------  打开文件\\n\");", "\n            printf(\"\\t\\t2 ------------  姓名查询\\n\");", "\n            printf(\"\\t\\t3 ------------  学号查询\\n\");", "\n            printf(\"\\t\\t4 ------------  房号查询\\n\");", "\n            printf(\"\\t\\t5 ------------  修改记录\\n\");", "\n            printf(\"\\t\\t6 ------------  删除记录\\n\");", "\n            printf(\"\\t\\t7 ------------  增加纪录\\n\");", "\n            printf(\"\\t\\t8 ------------  输出记录\\n\");", "\n            printf(\"\\t\\t9 ------------  退出\\n\");", "\nprintf(\"--------------------------------------------------------------------------------\\n\");", "\n       printf(\"\\t 请输入0-9选择您的操作：\\n\");", "\n       scanf(\"%d\",&m);", "\n       switch(m)", "\n       { ", "\n       case 0:creat(); ", "\n           break;", "\n       case 1:readfile(); ", "\n           break;", "\n       case 2:namesearch ();", "\n           break;", "\n       case 3:numsearch(); ", "\n           break;", "\n       case 4:dorsearch();", "\n           break;", "\n       case 5:modify();", "\n           break;", "\n       case 6: deleted(); ", "\n           break;", "\n       case 7:add();", "\n           break;", "\n       case 8:output();", "\n           break;", "\n       case 9:exit(0);", "\n       default:break;", "\n       }", "\n    }", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;仅供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;windows.h&amp;gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\n\nvoid &lt;span class=\"hljs-constructor\"&gt;ConPrint(&lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;CharBuffer, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;len&lt;/span&gt;)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;ConPrintAt(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;CharBuffer, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;len&lt;/span&gt;)&lt;/span&gt;;\nvoid goto&lt;span class=\"hljs-constructor\"&gt;XY(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;ClearConsole(&lt;span class=\"hljs-params\"&gt;void&lt;/span&gt;)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;ClearConsoleToColors(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; ForgC, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; BackC)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;SetColorAndBackground(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; ForgC, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; BackC)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;SetColor(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; ForgC)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;HideTheCursor(&lt;span class=\"hljs-params\"&gt;void&lt;/span&gt;)&lt;/span&gt;;\nvoid &lt;span class=\"hljs-constructor\"&gt;ShowTheCursor(&lt;span class=\"hljs-params\"&gt;void&lt;/span&gt;)&lt;/span&gt;;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; argc, &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt;* argv&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt;)\n{\n   &lt;span class=\"hljs-constructor\"&gt;HideTheCursor()&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;ClearConsoleToColors(15, 1)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;ClearConsole()&lt;/span&gt;;\n   goto&lt;span class=\"hljs-constructor\"&gt;XY(1, 1)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;SetColor(14)&lt;/span&gt;;\n   printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;This is a test...\\n&amp;#34;&lt;/span&gt;);\n   &lt;span class=\"hljs-constructor\"&gt;Sleep(5000)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;ShowTheCursor()&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;SetColorAndBackground(15, 12)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;ConPrint(&lt;span class=\"hljs-string\"&gt;&amp;#34;This is also a test...\\n&amp;#34;&lt;/span&gt;, 23)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;SetColorAndBackground(1, 7)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;ConPrintAt(22, 15, &lt;span class=\"hljs-string\"&gt;&amp;#34;This is also a test...\\n&amp;#34;&lt;/span&gt;, 23)&lt;/span&gt;;\n   goto&lt;span class=\"hljs-constructor\"&gt;XY(0, 24)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;SetColorAndBackground(7, 1)&lt;/span&gt;;\n   return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//This will clear the console while setting the forground and&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//background colors.&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;ClearConsoleToColors(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; ForgC, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; BackC)&lt;/span&gt;\n{\n   WORD wColor &amp;#61; ((BackC &amp;amp; &lt;span class=\"hljs-number\"&gt;0x0F&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#43; (ForgC &amp;amp; &lt;span class=\"hljs-number\"&gt;0x0F&lt;/span&gt;);\n   &lt;span class=\"hljs-comment\"&gt;//Get the handle to the current output buffer...&lt;/span&gt;\n   HANDLE hStdOut &amp;#61; &lt;span class=\"hljs-constructor\"&gt;GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;;\n   &lt;span class=\"hljs-comment\"&gt;//This is used to reset the carat/cursor to the top left.&lt;/span&gt;\n   COORD coord &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n   &lt;span class=\"hljs-comment\"&gt;//A return value... indicating how many chars were written&lt;/span&gt;\n   &lt;span class=\"hljs-comment\"&gt;//not used but we need to capture this since it will be&lt;/span&gt;\n   &lt;span class=\"hljs-comment\"&gt;//written anyway (passing NULL causes an access violation).&lt;/span&gt;\n   DWORD count;\n\n   &lt;span class=\"hljs-comment\"&gt;//This is a structure containing all of the console info&lt;/span&gt;\n   &lt;span class=\"hljs-comment\"&gt;// it is used here to find the size of the console.&lt;/span&gt;\n   CONSOLE_SCREEN_BUFFER_INFO csbi;\n   &lt;span class=\"hljs-comment\"&gt;//Here we will set the current color&lt;/span&gt;\n   &lt;span class=\"hljs-constructor\"&gt;SetConsoleTextAttribute(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;wColor&lt;/span&gt;)&lt;/span&gt;;\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-constructor\"&gt;GetConsoleScreenBufferInfo(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;)&lt;/span&gt;)\n   {\n      &lt;span class=\"hljs-comment\"&gt;//This fills the buffer with a given character (in this case 32&amp;#61;space).&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;FillConsoleOutputCharacter(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, (TCHAR)&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;, csbi.dwSize.X&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;csbi.dwSize.Y, coord, &amp;amp;count);\n\n      &lt;span class=\"hljs-constructor\"&gt;FillConsoleOutputAttribute(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;wAttributes&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;dwSize&lt;/span&gt;.X &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;dwSize&lt;/span&gt;.Y, &lt;span class=\"hljs-params\"&gt;coord&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;count&lt;/span&gt;)&lt;/span&gt;;\n      &lt;span class=\"hljs-comment\"&gt;//This will set our cursor position for the next print statement.&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;SetConsoleCursorPosition(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;coord&lt;/span&gt;)&lt;/span&gt;;\n   }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//This will clear the console.&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;ClearConsole()&lt;/span&gt;\n{\n   &lt;span class=\"hljs-comment\"&gt;//Get the handle to the current output buffer...&lt;/span&gt;\n   HANDLE hStdOut &amp;#61; &lt;span class=\"hljs-constructor\"&gt;GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;;\n   &lt;span class=\"hljs-comment\"&gt;//This is used to reset the carat/cursor to the top left.&lt;/span&gt;\n   COORD coord &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n   &lt;span class=\"hljs-comment\"&gt;//A return value... indicating how many chars were written&lt;/span&gt;\n   &lt;span class=\"hljs-comment\"&gt;//   not used but we need to capture this since it will be&lt;/span&gt;\n   &lt;span class=\"hljs-comment\"&gt;//   written anyway (passing NULL causes an access violation).&lt;/span&gt;\n   DWORD count;\n   &lt;span class=\"hljs-comment\"&gt;//This is a structure containing all of the console info&lt;/span&gt;\n   &lt;span class=\"hljs-comment\"&gt;// it is used here to find the size of the console.&lt;/span&gt;\n   CONSOLE_SCREEN_BUFFER_INFO csbi;\n   &lt;span class=\"hljs-comment\"&gt;//Here we will set the current color&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-constructor\"&gt;GetConsoleScreenBufferInfo(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;)&lt;/span&gt;)\n   {\n      &lt;span class=\"hljs-comment\"&gt;//This fills the buffer with a given character (in this case 32&amp;#61;space).&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;FillConsoleOutputCharacter(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, (TCHAR)&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;, csbi.dwSize.X&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;csbi.dwSize.Y, coord, &amp;amp;count);\n      &lt;span class=\"hljs-constructor\"&gt;FillConsoleOutputAttribute(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;wAttributes&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;dwSize&lt;/span&gt;.X &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;dwSize&lt;/span&gt;.Y, &lt;span class=\"hljs-params\"&gt;coord&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;count&lt;/span&gt;)&lt;/span&gt;;\n      &lt;span class=\"hljs-comment\"&gt;//This will set our cursor position for the next print statement.&lt;/span&gt;\n      &lt;span class=\"hljs-constructor\"&gt;SetConsoleCursorPosition(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;coord&lt;/span&gt;)&lt;/span&gt;;\n   }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//This will set the position of the cursor&lt;/span&gt;\nvoid goto&lt;span class=\"hljs-constructor\"&gt;XY(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;)&lt;/span&gt;\n{\n   &lt;span class=\"hljs-comment\"&gt;//Initialize the coordinates&lt;/span&gt;\n   COORD coord &amp;#61; {x, y};\n   &lt;span class=\"hljs-comment\"&gt;//Set the position&lt;/span&gt;\n   &lt;span class=\"hljs-constructor\"&gt;SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;, coord);\n}\n\n&lt;span class=\"hljs-comment\"&gt;//This will set the forground color for printing in a console window.&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;SetColor(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; ForgC)&lt;/span&gt;\n{\n   WORD wColor;\n   &lt;span class=\"hljs-comment\"&gt;//We will need this handle to get the current background attribute&lt;/span&gt;\n   HANDLE hStdOut &amp;#61; &lt;span class=\"hljs-constructor\"&gt;GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;;\n   CONSOLE_SCREEN_BUFFER_INFO csbi;\n\n   &lt;span class=\"hljs-comment\"&gt;//We use csbi for the wAttributes word.&lt;/span&gt;\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-constructor\"&gt;GetConsoleScreenBufferInfo(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;csbi&lt;/span&gt;)&lt;/span&gt;)\n   {\n      &lt;span class=\"hljs-comment\"&gt;//Mask out all but the background attribute, and add in the forgournd color&lt;/span&gt;\n      wColor &amp;#61; (csbi.wAttributes &amp;amp; &lt;span class=\"hljs-number\"&gt;0xF0&lt;/span&gt;) &amp;#43; (ForgC &amp;amp; &lt;span class=\"hljs-number\"&gt;0x0F&lt;/span&gt;);\n      &lt;span class=\"hljs-constructor\"&gt;SetConsoleTextAttribute(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;wColor&lt;/span&gt;)&lt;/span&gt;;\n   }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//This will set the forground and background color for printing in a console window.&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;SetColorAndBackground(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; ForgC, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; BackC)&lt;/span&gt;\n{\n   WORD wColor &amp;#61; ((BackC &amp;amp; &lt;span class=\"hljs-number\"&gt;0x0F&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#43; (ForgC &amp;amp; &lt;span class=\"hljs-number\"&gt;0x0F&lt;/span&gt;);;\n   &lt;span class=\"hljs-constructor\"&gt;SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;, wColor);\n}\n\n&lt;span class=\"hljs-comment\"&gt;//Direct console output&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;ConPrint(&lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;CharBuffer, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;len&lt;/span&gt;)&lt;/span&gt;\n{\n   DWORD count;\n   &lt;span class=\"hljs-constructor\"&gt;WriteConsole(GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;, CharBuffer, len, &amp;amp;count, NULL);\n}\n\n&lt;span class=\"hljs-comment\"&gt;//Direct Console output at a particular coordinate.&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;ConPrintAt(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;CharBuffer, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;len&lt;/span&gt;)&lt;/span&gt;\n{\n   DWORD count;\n   COORD coord &amp;#61; {x, y};\n   HANDLE hStdOut &amp;#61; &lt;span class=\"hljs-constructor\"&gt;GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;SetConsoleCursorPosition(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;coord&lt;/span&gt;)&lt;/span&gt;;\n   &lt;span class=\"hljs-constructor\"&gt;WriteConsole(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, CharBuffer, &lt;span class=\"hljs-params\"&gt;len&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;count&lt;/span&gt;, NULL)&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//Hides the console cursor&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;HideTheCursor()&lt;/span&gt;\n{\n   CONSOLE_CURSOR_INFO cciCursor;\n   HANDLE hStdOut &amp;#61; &lt;span class=\"hljs-constructor\"&gt;GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;;\n\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-constructor\"&gt;GetConsoleCursorInfo(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;cciCursor&lt;/span&gt;)&lt;/span&gt;)\n   {\n      cciCursor.bVisible &amp;#61; FALSE;\n      &lt;span class=\"hljs-constructor\"&gt;SetConsoleCursorInfo(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;,    &amp;amp;&lt;span class=\"hljs-params\"&gt;cciCursor&lt;/span&gt;)&lt;/span&gt;;\n   }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//Shows the console cursor&lt;/span&gt;\nvoid &lt;span class=\"hljs-constructor\"&gt;ShowTheCursor()&lt;/span&gt;\n{\n   CONSOLE_CURSOR_INFO cciCursor;\n   HANDLE hStdOut &amp;#61; &lt;span class=\"hljs-constructor\"&gt;GetStdHandle(STD_OUTPUT_HANDLE)&lt;/span&gt;;\n\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-constructor\"&gt;GetConsoleCursorInfo(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;cciCursor&lt;/span&gt;)&lt;/span&gt;)\n   {\n      cciCursor.bVisible &amp;#61; TRUE;\n      &lt;span class=\"hljs-constructor\"&gt;SetConsoleCursorInfo(&lt;span class=\"hljs-params\"&gt;hStdOut&lt;/span&gt;,    &amp;amp;&lt;span class=\"hljs-params\"&gt;cciCursor&lt;/span&gt;)&lt;/span&gt;;\n   }\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["为什么加了system（“cls\")后矩阵图形会变？", ["\n", "问题相关代码，请勿粘贴截图", "\n", "#include<stdio.h>", "#include <windows.h>", "char a[50][50];", "void tuxing1()", "{", "    int i,j;", "    //右上", "    for(i=6;i<=10;i++)", "     for(j=1;j<=5;j++)", "       {", "           if(j<=5-(i-5))", "           a[i][j]=' ';", "        else", "           a[i][j]='1';", "       }", "    for(i=6;i<=10;i++)", "     for(j=6;j<=10;j++)", "      a[i][j]='1';", "\n", "//左上 \nfor(i=", "1", ";i<=", "5", ";i++)\n for(j=", "11", ";j<=", "10", "+i;j++)\n   a[i][j]=", "'2'", ";\nfor(i=", "6", ";i<=", "10", ";i++)\n for(j=", "11", ";j<=", "15", ";j++)\n  a[i][j]=", "'2'", ";\n\n //左下 \n for(i=", "16", ";i<=", "20", ";i++)\n for(j=", "6", ";j<=", "10", ";j++)\n   {\n       if(j<=(i", "-10", "))\n        a[i][j]=", "' '", ";\n        else a[i][j]=", "'2'", ";\n   }\nfor(i=", "11", ";i<=", "15", ";i++)\n for(j=", "6", ";j<=", "10", ";j++)\n  a[i][j]=", "'2'", ";\n\n //右下 \n for(i=", "11", ";i<=", "15", ";i++)\n for(j=", "16", ";j<=", "31", "-i;j++)\n   {\n        \n         a[i][j]=", "'1'", ";\n   }  \nfor(i=", "11", ";i<=", "15", ";i++)\n for(j=", "11", ";j<=", "15", ";j++)\n  a[i][j]=", "'1'", ";\nfor(i=", "1", ";i<=", "20", ";i++)\n {\n     for(j=", "1", ";j<=", "20", ";j++)\n {\n     printf(", "\"%c\"", ",a[i][j]);\n  } \n  printf(", "\"\\n\"", ");\n }\n", "\n", "}", "void tuxing2()", "{", "\n", "int i,j;\n//右上 \nfor(i=", "6", ";i<=", "10", ";i++)\n for(j=", "1", ";j<=", "5", ";j++)\n   {\n       if(j<=", "5", "-(i", "-5", "))\n       a[i][j]=", "' '", ";\n    else\n       a[i][j]=", "'2'", ";\n   }\nfor(i=", "6", ";i<=", "10", ";i++)\n for(j=", "6", ";j<=", "10", ";j++)\n  a[i][j]=", "'2'", ";\n\n//左上 \nfor(i=", "1", ";i<=", "5", ";i++)\n for(j=", "11", ";j<=", "10", "+i;j++)\n   a[i][j]=", "'1'", ";\nfor(i=", "6", ";i<=", "10", ";i++)\n for(j=", "11", ";j<=", "15", ";j++)\n  a[i][j]=", "'1'", ";\n\n //左下 \n for(i=", "16", ";i<=", "20", ";i++)\n for(j=", "6", ";j<=", "10", ";j++)\n   {\n       if(j<=(i", "-10", "))\n        a[i][j]=", "' '", ";\n        else a[i][j]=", "'1'", ";\n   }\nfor(i=", "11", ";i<=", "15", ";i++)\n for(j=", "6", ";j<=", "10", ";j++)\n  a[i][j]=", "'1'", "; \n //右下 \n for(i=", "11", ";i<=", "15", ";i++)\n for(j=", "16", ";j<=", "31", "-i;j++)\n   {\n        \n         a[i][j]=", "'2'", ";\n   }  \nfor(i=", "11", ";i<=", "15", ";i++)\n for(j=", "11", ";j<=", "15", ";j++)\n  a[i][j]=", "'2'", ";\nfor(i=", "1", ";i<=", "20", ";i++)\n {\n     for(j=", "1", ";j<=", "20", ";j++)\n {\n     printf(", "\"%c\"", ",a[i][j]);\n  } \n  printf(", "\"\\n\"", ");\n }\n", "\n", "}", "int main(){  //主函数入口", "    int k=1;", "    tuxing1();", "while(1){", "    system(\"cls\");", "    if(k%2==0){", "        tuxing2();", "        Sleep(400); //控制停顿时间", "    }else{", "        tuxing1();", "        Sleep(400); //控制停顿时间", "        }", "    k++;", "}", "    return 0;", "}", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "删除system（”cls“）", "\n", "\n", "我想要达到的结果", "\n", "虽然删除清屏的代码后 ，所显示的矩阵图形是对的，但是实现不了只在一个界面，会一直循环出现，本意是想让其循环但只出现一个图形而非一直循环出现图形。", "有点绕"]], "Tag": "程序设计"}
{"Answer": "。。。。。。好蠢的问题.,回头看了下开线程的方法错了", "Konwledge_Point": "循环控制", "Question": ["关于java多线程的问题", ["本人写一个小测试，构想是开一条主线程不断循环扫数据库中的任务，每拿到一条任务开2个子线程分发给500个用户，", "\n我的想法是在子线程的构造参数里面把所有用户传入，然后run方法里面加同步块来控制用户的减少，每发送一个用户就把该用户移除，但是现在不会同步这一块，求助，贴上代码：", "\nMainThread", "\npublic class ScanDB implements Runnable{", "\n    public void run() {", "\n            List list1=new ArrayList();", "\n            List list2=new ArrayList();", "\n            for(int t=0;t<3;t++){", "\n                for (int j=0;j<10;j++){", "\n                    list2.add(\"用户\"+(t*10+j));", "\n                }", "\n                list1.addAll(list2);", "\n            }", "\n            childThread childThread=new childThread(list1,1);", "\n            childThread childThread2=new childThread(list1,1);", "\n            Thread t1=new Thread(childThread);", "\n            t1.setName(\"Thread1\");", "\n            t1.start();", "\n            Thread t2=new Thread(childThread2);", "\n            t2.setName(\"Thread2\");", "\n            t2.start();", "\n    }", "\n}", "\n\n", "ChildThread：", "\npublic class childThread implements Runnable{", "\n    private List users;", "\n    private int schdule;", "\n    private int count;", "\n\n", "public childThread(List<String> users, int schdule) {\n    this.users = users;\n    this.schdule = schdule;\n    this.count=users.size();\n}\n\n\npublic void run() {\n    while (count>0) {\n        sendMail();\n    }\n}\n private  void  sendMail(){\n    //求助部分\n            count--；\n     }\n }\n"]], "Tag": "程序设计"}
{"Answer": "那是因为该变量的值发生变化的时候，另一个线程并没有立即得到最新的值，就是并发编程中的数据失效问题。\r\n把它定义为 public volatile boolan 类型的就可以了，它可以保证变量值立即被其他线程知晓。", "Konwledge_Point": "循环控制", "Question": ["关于自定义中断标记问题", ["MyRunnable2.java", "\n\n", "public class MyRunnable2 implements Runnable{\n    public boolean flag = true;\n    int i = 0;\n    public MyRunnable2() {\n        flag = true;\n    }\n    @Override\n    public void run() {\n        while(flag) {\n            System.out.println(Thread.currentThread().getName() +\"==\"+(i++) + flag);\n\n            try {\n                Thread.sleep(300);\n            } catch (InterruptedException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n        }\n\n\n    }\n\n}\n", "\n\n", "\nTest4.java", "\n\n", "public class Test4 {\n    public static void main(String[] args) {\n        MyRunnable2 mr2 = new MyRunnable2();\n        Thread t = new Thread(mr2);\n\n        t.start();\n\n        for (int i = 0; i < 50; i++) {\n            System.out.println(Thread.currentThread().getName()+\"-\"+i);\n\n            try {\n                Thread.sleep(300);\n            } catch (InterruptedException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            }\n            if (i ==20) {\n                mr2.flag = false;\n\n            }\n\n        }\n    }\n\n}\n\n", "\n\n", "在Test4.java中，主线程for循环到i为20的时候 mr2.flag设置为false，这样就可以控制t进程不再进行", "但是它运行了，而且flag还是false，虽然后面t进程被中断了。", "\n我想问的是：为什么flag为flase它还可以运行一次"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;转数组shuffle打乱不行吗&amp;#xff1f;randrange直选选其中一个&amp;#xff0c;可能会出现重复值&amp;#xff0c;代码有问题。&lt;/p&gt;\n&lt;p&gt;不转数组只能是replace从字符串中去掉了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; random\nidioms &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;无与伦比&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;始终如一&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;一如既往&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;忍辱负重&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;一无是处&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;心心念念&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;水深火热&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;人来人往&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;成家立业&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;古今中外&amp;#39;&lt;/span&gt;]\n&lt;span class=\"hljs-comment\"&gt;#print(rule)&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎参加猜成语游戏!\\n请把乱序后的字词组成一个成语\\n&amp;#34;&lt;/span&gt;)\ncotinue &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;# 第二次进入游戏时默认选择为Y&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; cotinue &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;y&amp;#34;&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;# 控制循环的按键&lt;/span&gt;\n    idiom &amp;#61; random.choice(idioms) &lt;span class=\"hljs-comment\"&gt;# 在idioms中随机选择一个成语&lt;/span&gt;\n    answer &amp;#61; idiom &lt;span class=\"hljs-comment\"&gt;# 保存成语&lt;/span&gt;\n    jumble &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;# 将选出的成语进行乱序&lt;/span&gt;\n   \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(idiom):&lt;span class=\"hljs-comment\"&gt;#还有没随机的字符继续&lt;/span&gt;\n        position &amp;#61; random.randrange(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(idiom))\n        jumble &amp;#43;&amp;#61; idiom[position]\n        idiom&amp;#61;idiom.replace( idiom[position],&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#从字符串移除&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;乱序后的成语&amp;#xff1a;&amp;#34;&lt;/span&gt;, jumble)\n    &lt;span class=\"hljs-comment\"&gt;# 接受玩家猜的成语&lt;/span&gt;\n    guess &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你猜测的结果&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n    count &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; guess !&amp;#61; answer:\n        guess &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;猜错了&amp;#xff0c;再猜&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n        count &amp;#61; count &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;# 计数累加&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; count &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;三次机会用完了&amp;#34;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;# 退出&lt;/span&gt;\n    cotinue &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否继续&amp;#xff1f;(继续游戏按&amp;#xff1a;Y&amp;#xff0c;退出按任意键)&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;谢谢参与&amp;#xff0c;欢迎下次再玩&amp;#xff01;&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["设计一个猜成语小游戏", ["import random", "规则", "1.词库中有10个成语", "2.随机显示被打乱成语", "3.用户有三次机会，用户将正确顺序打出来则为成功", "idioms = ['无与伦比', '始终如一', '一如既往', '忍辱负重', '一无是处', '心心念念', '水深火热', '人来人往', '成家立业', '古今中外']", "print(rule)", "print(\"欢迎参加猜成语游戏!\\n请把乱序后的字词组成一个成语\\n\")", "cotinue = \"Y\"  # 第二次进入游戏时默认选择为Y", "while cotinue in (\"Y\", \"y\"):  # 控制循环的按键", "    idiom = random.choice(idioms)  # 在idioms中随机选择一个成语", "    answer = idiom  # 保存成语", "    jumble = \"\"  # 将选出的成语进行乱序", "    for i in idiom:", "        # 随机抽取一个位置的字词放入乱序jumble中，并从原idiom中删除该字", "        position = random.randrange(len(idiom))  # position 为不大于被选中字词的个数的随机数，len测试字符长度", "        jumble += idiom[position]  # 两个值相加，返回给 符号左侧的变量", "    print(\"乱序后的成语：\", jumble)", "    # 接受玩家猜的成语", "    guess = input(\"请输入你猜测的结果：\")", "    count = 1", "    while guess != answer:", "        guess = input(\"猜错了，再猜：\")", "        count = count + 1  # 计数累加", "        if count >= 3:", "            print(\"三次机会用完了\")", "            break  # 退出", "    cotinue = input(\"是否继续？(继续游戏按：Y，退出按任意键)\")", "\n", "print(\"谢谢参与，欢迎下次再玩！\")", "\n", "\n", "\n", "修改部分代码，只需要让成语四个字乱序，不需要列表的切片化"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;涉及到的都是寄存器操作&amp;#xff0c;对照着参考手册看就容易明白了。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["野火STM32代码看了5遍不懂", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);是什么意思", "        pos = pinpos << 2;这句代码是什么意思，左移pinpos位吗？", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)\n{\n  uint32_t currentmode = ", "0", "x00, currentpin = ", "0", "x00, pinpos = ", "0", "x00, pos = ", "0", "x00;\n  uint32_t tmpreg = ", "0", "x00, pinmask = ", "0", "x00;\n  \n", "/*---------------------- GPIO 模式配置 --------------------------*/", "\n  ", "//", " 把输入参数GPIO_Mode的低四位暂存在currentmode\n  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)", "0", "x0F);\n    \n  ", "//", " bit4是", "1", "表示输出，bit4是", "0", "则是输入 \n  ", "//", " 判断bit4是", "1", "还是", "0", "，即首选判断是输入还是输出模式\n  ", "if", " ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)", "0", "x10)) != ", "0", "x00)\n  { \n    ", "//", " 输出模式则要设置输出速度\n    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;\n  }\n", "/*-------------GPIO CRL 寄存器配置 CRL寄存器控制着低8位IO- -------*/", "\n  ", "//", " 配置端口低", "8", "位，即Pin0~Pin7\n  ", "if", " (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)", "0", "x00FF)) != ", "0", "x00)\n  {\n    ", "//", " 先备份CRL寄存器的值\n    tmpreg = GPIOx->CRL;\n        \n    ", "//", " 循环，从Pin0开始配对，找出具体的Pin\n    ", "for", " (pinpos = ", "0", "x00; pinpos < ", "0", "x08; pinpos++)\n    {\n     ", "//", " pos的值为", "1", "左移pinpos位\n      pos = ((uint32_t)", "0", "x01) << pinpos;\n      \n      ", "//", " 令pos与输入参数GPIO_PIN作位与运算，为下面的判断作准备\n      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;\n            \n      ", "//", "若currentpin=pos,则找到使用的引脚\n      ", "if", " (currentpin == pos)\n      {\n        ", "//", " pinpos的值左移两位（乘以", "4", "），因为寄存器中", "4", "个寄存器位配置一个引脚\n        pos = pinpos << ", "2", ";\n       ", "//", "把控制这个引脚的", "4", "个寄存器位清零，其它寄存器位不变\n        pinmask = ((uint32_t)", "0", "x0F) << pos;\n        tmpreg &= ~pinmask;\n                \n        ", "//", " 向寄存器写入将要配置的引脚的模式\n        tmpreg |= (currentmode << pos);  \n                \n        ", "//", " 判断是否为下拉输入模式\n        ", "if", " (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)\n        {\n          ", "//", " 下拉输入模式，引脚默认置", "0", "，对BRR寄存器写", "1", "可对引脚置", "0", "\n          GPIOx->BRR = (((uint32_t)", "0", "x01) << pinpos);\n        }                \n        ", "else", "\n        {\n          ", "//", " 判断是否为上拉输入模式\n          ", "if", " (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)\n          {\n            ", "//", " 上拉输入模式，引脚默认值为", "1", "，对BSRR寄存器写", "1", "可对引脚置", "1", "\n            GPIOx->BSRR = (((uint32_t)", "0", "x01) << pinpos);\n          }\n        }\n      }\n    }\n        ", "//", " 把前面处理后的暂存值写入到CRL寄存器之中\n    GPIOx->CRL = tmpreg;\n  }\n", "/*-------------GPIO CRH 寄存器配置 CRH寄存器控制着高8位IO- -----------*/", "\n  ", "//", " 配置端口高", "8", "位，即Pin8~Pin15\n  ", "if", " (GPIO_InitStruct->GPIO_Pin > ", "0", "x00FF)\n  {\n        ", "//", " ", "//", " 先备份CRH寄存器的值\n    tmpreg = GPIOx->CRH;\n        \n    ", "//", " 循环，从Pin8开始配对，找出具体的Pin\n    ", "for", " (pinpos = ", "0", "x00; pinpos < ", "0", "x08; pinpos++)\n    {\n      pos = (((uint32_t)", "0", "x01) << (pinpos + ", "0", "x08));\n            \n      ", "//", " pos与输入参数GPIO_PIN作位与运算\n      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);\n            \n     ", "//", "若currentpin=pos,则找到使用的引脚\n      ", "if", " (currentpin == pos)\n      {\n        ", "//", "pinpos的值左移两位（乘以", "4", "），因为寄存器中", "4", "个寄存器位配置一个引脚\n        pos = pinpos << ", "2", ";\n        \n        ", "//", "把控制这个引脚的", "4", "个寄存器位清零，其它寄存器位不变\n        pinmask = ((uint32_t)", "0", "x0F) << pos;\n        tmpreg &= ~pinmask;\n                \n        ", "//", " 向寄存器写入将要配置的引脚的模式\n        tmpreg |= (currentmode << pos);\n        \n        ", "//", " 判断是否为下拉输入模式\n        ", "if", " (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)\n        {\n          ", "//", " 下拉输入模式，引脚默认置", "0", "，对BRR寄存器写", "1", "可对引脚置", "0", "\n          GPIOx->BRR = (((uint32_t)", "0", "x01) << (pinpos + ", "0", "x08));\n        }\n         ", "//", " 判断是否为上拉输入模式\n        ", "if", " (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)\n        {\n          ", "//", " 上拉输入模式，引脚默认值为", "1", "，对BSRR寄存器写", "1", "可对引脚置", "1", "\n          GPIOx->BSRR = (((uint32_t)", "0", "x01) << (pinpos + ", "0", "x08));\n        }\n      }\n    }\n    ", "//", " 把前面处理后的暂存值写入到CRH寄存器之中\n    GPIOx->CRH = tmpreg;\n  }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "static 就是静态关键字，有就是静态，没有肯定不是静态(即非静态)。\r\n关于总结的1和2来说，在同类中，所有的方法都可以直接调用静态方法。但是静态方法不能直接调用非静态方法，必须new对象之后才可以通过对象名.方法名来调用。\r\n在非同类中，我的静态方法(public 的)，任何非同类都可以直接类名.方法名来调用，不需要new我的对象。所以，不管我的类是不是静态的，我都可以使用静态和非静态方法。\r\n方法中的内容为方法实现。就和main方法里面的一样，你想让方法体里面实现什么都是可以的。实际上你可以在一个方法里面把你这一个类的实现都写出来。当然这个是不推荐的。拆分出方法主要是为了一个方法(method)只用来做一件事。拆分出类(class)是为了一个类做一类事。比如Math类。里面大部分都是静态的，我们平时使用都是Math.method();Math就是用来处理数学这一方面的事情的。\r\n还有就是类里面的属性。属性是抽象出来的这个类所描述的东西共有的一些概念。比如我定义一个Human(人类)的类，那么我就可以定义两个属性，name，age，因为姓名和年龄是所有人类都有的一个概念。这个就是属性。\r\n来说一说类里面的变量。变量分为成员变量和局部变量。定义在方法外层，类里层的变量称之为成员变量，定义在方法内部的变量为局部变量。局部变量里面的变量名称是可以和成员变量一致的。但是同一个类的成员变量里面不能有重复的变量名称，同一个方法内的局部变量也一样。如果局部变量和成员变量一致，那么方法调用就是调用的局部变量，如果不一致，方法调用的是对应的局部变量或成员变量。例如\r\n\r\n```\r\n public class Human{\r\n\t private int age;//成员变量\r\n\t public int getAge(){\r\n\t\treturn age;//此处为成员变量;\r\n\t }\r\n\t \r\n\t public int getAge1(){\r\n\t\tint age=1;//定义一个局部变量\r\n\t\treturn age;//这个地方返回的是局部变量\r\n\t }\r\n\t \r\n\t public int getAge2(){\r\n\t\tint age=1;//定义一个局部变量\r\n\t\treturn this.age;//此处返回的是成员变量。this代表我这个类。\r\n\t }\r\n\t \r\n }\r\n```\r\n希望以上能对你有帮助", "Konwledge_Point": "循环控制", "Question": ["java中关于包、类和方法有几个问题不懂，请高手指点下", ["这是我写的一段代码，package对应的是包名，class对应的是类名，那main方法中写的那些东西算是什么呢，有没有一个具体的名称来描述，比如for循环，当初学的时候成为流程控制，但是我觉得这个名很怪，方法中的那些代码总不能称为语句块吧，虽然现在我就是这么用的", "\n我在学习中，通过实验的出了如下结论，但是书上找不到总结，请问正确吗", "\n 1、非静态类中不能使用静态方法", "\n 2、静态类中可以使用非静态方法", "\n 3、静态方法可以直接调用静态类中的方法", "\n 4、静态方法不能直接调用非静态类中的方法", "\n如何区分是不是静态类\\方法，仅仅从static判断吗，如果没有static，是否说明一定是非静态类\\方法", "\n请高手指点下迷津", "\n\n", " package study;\n\npublic class Q01 {\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n\n        char []a = new char[] {'a','b','c'};\n        char []x = new char[] {'x','y','z'};\nfor (int i = 0;i<3;i++){\n    for(char ch : x){\n        if(!(a[i] == 'a'&& ch =='x'||a[i]=='c'&& (ch == 'x'|| ch == 'z'))){\n        {System.out.println(\"比赛组合为a队\"+a[i]+\"对x队\"+ch);}\n        }\n    }\n    }\n}\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;QQ现在已经技术变更很多次了&amp;#xff0c;保护层一层又一层。已经不是以前的随便一个查看窗口的工具就可以提取到信息的那个QQ了。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["java获取句柄后，如何获取窗体内对应的数据", ["请问java通过jna获取对应窗体句柄后，如何获取该窗体内对应信息。例如获取qq的个性签名", "\n", "\n", "  public static void main(String", "[]", " args) {\n        WinDef.HWND hwnd = User32.INSTANCE.", "FindWindow(", "null", ", ", "\"qq\"", ")", "; ", "// 第一个参数是Windows窗体的窗体类，第二个参数是窗体的标题。不熟悉windows编程的需要先找一些Windows窗体数据结构的知识来看看，还有windows消息循环处理，其他的东西不用看太多。", "\n        ", "if", "(hwnd ==null){\n            ", "System", ".", "out.println(", "\"QQ is not running\"", ");\n        }\n        ", "else", "{\n            User32.INSTANCE.", "ShowWindow(", "hwnd", ", 9)", ";        ", "// SW_RESTORE", "\n            User32.INSTANCE.", "SetForegroundWindow(", "hwnd", ")", ";   ", "// bring to front", "\n\n            ", "//User32.INSTANCE.GetForegroundWindow() //获取现在前台窗口", "\n            WinDef.RECT qqwin_rect = ", "new", " WinDef.", "RECT()", ";\n            User32.INSTANCE.", "GetWindowRect(", "hwnd", ", ", "qqwin_rect", ")", ";\n            ", "int", " qqwin_width = qqwin_rect.right - qqwin_rect.left;\n            ", "int", " qqwin_height = qqwin_rect.bottom - qqwin_rect.top;\n\n            User32.INSTANCE.", "MoveWindow(", "hwnd", ", 700, 100, ", "qqwin_width", ", ", "qqwin_height", ", ", "true", ")", ";\n            ", "for", " (", "int", " i = ", "700", "; i > ", "100", "; i -= ", "10", ") {\n                User32.INSTANCE.", "MoveWindow(", "hwnd", ", ", "i", ", 100, ", "qqwin_width", ", ", "qqwin_height", ", ", "true", ")", ";   ", "// bring to front", "\n                ", "try", " {\n                    ", "Thread", ".", "sleep(", "80", ");\n                } catch (Exception e) {\n                }\n            }\n            ", "//User32.INSTANCE.PostMessage(hwnd, WinUser.WM_CLOSE, null, null);  // can be WM_QUIT in some occasio", "\n        }\n", "\n", "就比如我现在已经可以通过java控制qq从右向左移动，但是不知道该如何写获取个性签名的代码"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;源程序如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;#判断是否是素数\ndef isPrime(n):\n    for i in range(2,n-1):\n        if n % i &amp;#61;&amp;#61; 0:\n            return False\n    else:\n        return True\n\nn &amp;#61; int(input(&amp;#34;请输入一个大于4的偶数:&amp;#34;))\nfor i in range(2,n//2):\n    if (isPrime(i) and isPrime(n-i)):\n        print(&amp;#34;%d&amp;#61;%d&amp;#43;%d\\n&amp;#34;%(n,i,n-i))&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;运行结果&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;请输入一个大于4的偶数:60\n60&amp;#61;7&amp;#43;53\n\n60&amp;#61;13&amp;#43;47\n\n60&amp;#61;17&amp;#43;43\n\n60&amp;#61;19&amp;#43;41\n\n60&amp;#61;23&amp;#43;37\n\n60&amp;#61;29&amp;#43;31&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["python利用该函数验证哥德巴赫猜想", ["设计判断素数的函数prime，若是素数返回True，否则返回False。利用该函数验证哥德巴赫猜想：任意大于等于4的偶数，可以用两个素数之和表示。输出某大于等于4的偶数的所有素数对之和。 如：", "\n\n", "                  实例1           ", "\n\n", "      输入一个大于等于4的偶数60", "\n\n", "      60=7+53", "\n\n", "      60=13+47", "\n\n", "      60=17+43", "\n\n", "      60=19+41", "\n\n", "      60=23+37", "\n\n", "      60=29+31", "\n\n", "注意：标点符号都用英文符号，严格按照上述实例的输入输出方式设计程序，运行达到所需效果。", "\n\n", "提示：将输入的整数拆成x=a+b两个数之和，只要控制a的变化范围即可，a的取值范围为[2, x/2]。当循环遍历到一个a，则b=x-a，若a和b都是素数，则按要求输出这两个数。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/517498037846178.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["C语言链表删除问题求解", ["\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "struct", " ", "People", "\n{\n    ", "char", " Name[", "40", "];\n    ", "int", " Number;\n    ", "struct", " ", "People", " *pNext;\n};\n", "int", " iCount;\n", "struct", " ", "People", " *", "Create", "()\n{\n    ", "struct", " ", "People", " *pHead=", "NULL", ";\n    ", "struct", " ", "People", " *pEnd,*pNew;\n    iCount=", "0", ";\n    ", "printf", "(", "\"Please Enter Name and Number:\\n\"", ");\n    pEnd=pNew=(", "struct", " People*)", "malloc", "(", "sizeof", "(", "struct", " People));\n    ", "scanf", "(", "\"%s\"", ",&pNew->Name);\n    ", "scanf", "(", "\"%d\"", ",&pNew->Number);\n    ", "while", "(pNew->Number!=", "0", ")\n    {\n        iCount++;\n        ", "if", "(iCount==", "1", ")\n        {\n            pNew->pNext=pHead;\n            pEnd=pNew;\n            pHead=pNew;\n        }\n        ", "else", "\n        {\n            pNew->pNext=", "NULL", ";\n            pEnd->pNext=pNew;\n            pEnd=pNew;\n        }\n        pNew=(", "struct", " People*)", "malloc", "(", "sizeof", "(", "struct", " People));\n        ", "scanf", "(", "\"%s\"", ",&pNew->Name);\n        ", "scanf", "(", "\"%d\"", ",&pNew->Number);\n    }\n    ", "free", "(pNew);\n    ", "return", " pHead;\n}\n\n", "void", " ", "Print", "(", "struct", " People *pHead)", "\n", "{\n    ", "struct", " ", "People", " *pTemp;\n    ", "int", " iIndex;\n    ", "printf", "(", "\"----------The Information Has %d----------\\n\"", ",iCount);\n    pTemp=pHead;\n    iIndex=", "0", ";\n    ", "while", "(pTemp!=", "NULL", ")\n    {\n        iIndex++;\n        ", "printf", "(", "\"The NO%d is: \\n\"", ",iIndex);\n        ", "printf", "(", "\"The Name is:%s\\n\"", ",pTemp->Name);\n        ", "printf", "(", "\"The Number is %d\\n\"", ",pTemp->Number);\n        pTemp=pTemp->pNext;\n        \n    }\n}\n\n", "struct", " ", "People", " *", "Insert", "(", "struct", " People *pHead)\n{\n    ", "struct", " ", "People", " *pNew;\n    ", "printf", "(", "\"Insert mumber at first\\n\"", ");\n    pNew=(", "struct", " People*)", "malloc", "(", "sizeof", "(", "struct", " People));\n    ", "scanf", "(", "\"%s\"", ",&pNew->Name);\n    ", "scanf", "(", "\"%d\"", ",&pNew->Number);\n    pNew->pNext=pHead;", "//新节点指向头节点 ", "\n    pHead=pNew;", "//头指针指向新节点 ", "\n    iCount++;\n    ", "return", " pHead;\n}\n\n", "//下面是删除代码 ", "\n", "void", " ", "Delete", "(", "struct", " People *pHead,", "int", " iTndex)", "//pHead 表示头结点，iTndex 表示要删除的节点 ", "\n", "{\n    ", "int", " i;", "//控制循环变量 ", "\n    ", "struct", " ", "People", "* pTemp;", "//临时指针 ", "\n    ", "struct", " ", "People", "* pPre;", "//表示要删除节点前的节点 ", "\n    pTemp=pHead;", "//得到头节点 ", "\n    pPre=pTemp;\n    ", "printf", "(", "\"---delete NO%d mumber---\"", ",iIndex);\n    ", "for", "(i=", "1", ";i<iIndex;i++)", "//循环，让pTemp指向要删除的节点 ", "\n    {\n        pPre=pTemp;\n        pTemp=pTemp->pNext;\n    }\n    pPre->pNext=pTemp->pNext;", "//连接删除后两边的节点 ", "\n    ", "free", "(pTemp);\n    iCount--;\n     \n}\n", "//NEW", "\n\n", "int", " ", "main", "()", "\n", "{\n    ", "struct", " ", "People", " *pHead;\n    pHead=", "Create", "();\n    pHead=", "Insert", "(pHead);\n    ", "Delete", "(pHead,", "2", ");\n    ", "Print", "(pHead);\n    ", "return", " ", "0", ";\n}\n", "\n", "把删除代码去掉后，运行正常，", "但是加上以后就不正常了。", "\n", "\n", "//i", "Index  应该是与上下两个操作不违背的吧，所以不晓得问题出在哪。\n\n"]], "Tag": "程序设计"}
{"Answer": "界面不卡死才怪，你在UI线程里面那么多地方用了Thread.Sleep函数，这个函数你真的理解吗？windows系统是基于消息机制的，一旦你调用Thread.Sleep函数当前线程就会处于“假死”状态，不会处理任何鼠标键盘以及界面需要重绘的消息，所以永远不要在UI线程里面频繁的去调用Thead.Sleep函数，你按钮点击之后connect—open（）函数大可以去开新的线程去处理，然后用invoke函数来处理跨线程调用UI控件的问题，还有我发现你在程序很多地方都用了死循环，而且有的地方连没有调用Thread.Sleep函数，这样的话你的cpu真的吃得消吗？总结来说两个问题：一：把你所有耗时的操作丢到子线程去处理，然后子线程如果要更新UI线程的界面就调用invoke函数实现，二：所有的死循环必须加上Thread.Sleep函数，让你的cpu“喘口气儿”", "Konwledge_Point": "循环控制", "Question": ["C# PLC和电脑上软件以太网通讯问题", ["如题", "\n\n", "所用工具：", "\n\n", "            1，第三方拍摄软件EasyInspector 简称EI。\n            2，自己写的软件Checksoft。\n            3，基恩士PLC CPU模块KV-NC32T\n", "\n\n", "描述下软件功能", "\n\n", "            1.EI 可以通过SOCKET的方法进行通讯，即控制什么时候开始拍照检测，并将检测的数据\n            返回。\n            2，利用上述的SOCKET方法(EI 带的例程)，写了一个软件：一方面和PLC通讯，另一方面和EI软件通讯。\n            3，跟PLC通讯方面，checksoft作为伺服器，PLC作为客服端，我们便让checksoft 不断读取PLC某一软原件（备注：软元件相当于一个变量16BIT 或者32bit，这里是16bit的某一位，如MR402），当该位变成true，则置位标志位，通过该标志位让EI开始拍照，并且将结果回传给PLC。\n", "\n\n", "软件结构", "\n\n", "\n##存在问题", "\n                现如今存在的问题是，checksoft在不断访问的过程中会出现UI界面卡死，出现未响应的情况。而且卡死在不同的地方，线程里有一个时钟一样的东西，有时候也会停止。", "\n\n", "所做的解决措施", "\n\n", "            1，利用文字记录在死循环中不断记录，看下是在哪个地方卡死，结果就是在卡死在了线程里面，也没有在EI软件通讯上。\n            2，利用另一个线程监视该线程，但是我能力不够，不太成功，我上传的程序代码中，ControlUpdateAction中就是监视线程，可能我不太会用多线程。\n            3，UI界面卡死，因此把所有的在软件显示数值的函数都注释了，客户用过还是会出现卡死的情况。\n            4，EMI的问题考虑过，在网线上加了滤波磁环也不行\n", "\n\n", "如若有不明白的地方，欢迎向我提问，QQ329917892", "\n\n", "我会上传checksoft的源代码，和EI软件的安装包。望各位大侠慷慨解囊，各出奇招，帮帮小弟。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这串行都跑不了吧。local_M 没有值&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["MPI运行时进程报错？", ["写MPI-openMP的时候报错，显示进程执行出问题。如下图：", "\n", "\n", "请问各位大lao是啥子原因哦", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<math.h>", "\n", "#", "include", "<mpi.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<omp.h>", "\n", "//int M,N;", "\n", "//int myid;", "\n", "int", " main(", "int", " argc,", "char", "* argv[])\n{\n    ", "int", " M = ", "1000", ",N = ", "1000", ";\n    ", "int", " i,j,ii;", "//用来控制循环", "\n    ", "int", " tem;", "//暂时存储", "\n    ", "int", " myid;", "//存放MPI进程等级", "\n    ", "int", " local_result[M*N];", "//存放每一个线程的矩阵", "\n    ", "int", " local_Matrix_one[M*N];\n    ", "int", " result_Matrix[M][N];\n    ", "int", " Matrix_one[M*N];\n    ", "int", " Matrix_two[M*N];\n    ", "int", " local_M;\n    ", "//nem an matrix", "\n    ", "for", "(i = ", "0", ";i<M;i++)\n        ", "for", "(j = ", "0", ";j<N;j++)\n            Matrix_one[i*N+j] = rand()%", "10", ";\n    ", "for", " (j = ", "0", ";j<N;j++)\n        ", "for", "(i = ", "0", ";i<M;i++)\n            Matrix_two[i*N+j] = rand()%", "10", ";\n    ", "//    ", "\n    ", "//MPI_Init(&argc,&argv);", "\n    ", "//MPI_Comm_rank(MPI_COMM_WORLD,&myid);", "\n    \n    ", "//散播操作,将进程0的mtrix——one分割给", "\n    ", "MPI_Scatter", "(Matrix_one,local_M*N,", "MPI_INT", ",local_Matrix_one,local_M*N,", "MPI_INT", ",", "0", ",", "MPI_COMM_WORLD", ");\n    ", "//广播原语", "\n    ", "MPI_Bcast", "(Matrix_two,M*N,", "MPI_INT", ",", "0", ",", "MPI_COMM_WORLD", ");\n    \n    \n    ", "//OpenMP的计算部分", "\n    \n    ", "#", "pragma", " omp parallel", "\n    {\n        ", "int", " kk;\n        ", "#", "pragma", " omp for", "\n        ", "for", "(ii = ", "0", ";ii<local_M;ii++)\n        {\n            ", "for", "(", "int", " jj = ", "0", ";jj<M;jj++)\n            {\n                tem = ", "0", ";\n                ", "//int kk;", "\n                ", "for", "(kk = ", "0", ";kk<N;kk++)\n                    tem += local_Matrix_one[ii*M+kk]*Matrix_two[jj*M+kk];\n                local_result[ii*M+kk] = tem;\n            }\n        }\n    }\n    \n    \n    ", "//MPI聚集结果", "\n    ", "MPI_Gather", "(local_result,local_M*N,", "MPI_INT", ",result_Matrix,local_M*N,", "MPI_INT", ",", "0", ",", "MPI_COMM_WORLD", ");\n    ", "if", "(myid == ", "0", ")\n    {\n        printf(", "\"Process 0 gather from other Process:\\n\"", ");\n        ", "for", "(i = ", "0", ";i<M;i++)\n        {\n            ", "for", "(j = ", "0", ";j<N;j++)\n                printf(", "\"%d\\t\"", ",result_Matrix[i][j]);\n            \n            printf(", "\"\\n\"", ");\n        }\n    }\n    \n    ", "MPI_Finalize", "();\n    ", "return", " ", "0", ";\n    \n    \n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/375663240656186.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["关于c语言贪吃蛇的问题", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <conio.h>\n#include <", "time", ".h>\n#include <windows.h>\nvoid welcome();   \nvoid HideCursor();              ", "//光标隐藏", "\nvoid gotoxy(int x, int y);      ", "//光标定位", "\n\ntypedef struct snake\n{\n    int x;\n    int y;\n    struct snake* next;\n}snake;\n\n#define WIDTH ", "100", "           ", "//控制台窗口宽度", "\n#define HEIGHT ", "30", "           ", "//控制台窗口高度", "\n#define SNAKEN ", "4", "            ", "//贪吃蛇初始长度", "\n#define LIFE ", "3", "              ", "//初始生命次数", "\n#define SPEED ", "200", "           ", "//游戏速度、循环休眠时间", "\n#define U ", "1", "                 ", "//使用宏代替需要数字代替的蛇的行动方向", "\n#define D ", "2", "                 ", "//宏名含义是各方向英文单词首字母", "\n#define L ", "3", "                 ", "//蛇的状态，U：上 ；D：下；L:左 R：右", "\n#define R ", "4", "                 \n\n\n \n\nvoid dtxxcsh()              ", "//输出地图", "\n{\n\n    ", "for", " (int i = ", "1", "; i < WIDTH-", "1", "; i++)        ", "//输出上下面墙", "\n    {\n        gotoxy(i, ", "26", ");\n        printf(", "\"-\"", ");\n        gotoxy(i, ", "0", ");\n        printf(", "\"-\"", ");\n    }\n    ", "for", " (int i = ", "0", "; i < HEIGHT-", "3", "; i++)    ", "//输出左右两面墙", "\n    {\n        gotoxy(", "0", ", i);\n        printf(", "\"|\"", ");\n        gotoxy(", "99", ", i);\n        printf(", "\"|\"", ");\n    }\n    gotoxy(", "24", ", ", "28", ");\n    printf(", "\"得分：  0           生命：  %d           时间：  0           \"", ",LIFE);   \n    ", "//xy 30,28可用得分数值      14个空格", "\n}\n\n\nint foodx, foody;           ", "//食物位置坐标", "\n\nvoid sjcsswhs()             ", "//随机产生一个食物", "\n{\n    srand(", "time", "(NULL));      \n\n    foodx = rand() % (WIDTH - ", "4", ") + ", "2", ";       ", "//使用宏运算随机数最大值需要加括号", "\n\n    ", "while", " (foodx % ", "2", ")                       ", "//如果食物的x坐标不是偶数，再获取一个x坐标", "\n    {\n        foodx = rand() % (WIDTH - ", "4", ") + ", "2", ";   ", "//宽度", "\n    }\n\n    foody = rand() % (HEIGHT - ", "7", ") + ", "3", ";      ", "//高度", "\n\n    gotoxy(foodx, foody);\n    printf(", "\"★\"", ");\n}\n\nsnake* head;                ", "//蛇头指针", "\n\nvoid cshs()                 ", "//初始化蛇的位置", "\n{   \n    snake *tail;            ", "//蛇尾指针", "\n    int i;\n\n    tail = (snake*)malloc(sizeof(snake));\n    ", "tail", "->", "next = NULL;\n    ", "tail", "->", "x = HEIGHT-", "6", ";\n    ", "tail", "->", "y = ", "8", ";\n\n    ", "//贪吃蛇初始长度5  SNAKEN", "\n    ", "for", " (i = ", "1", "; i <= SNAKEN; i++)               ", "//在蛇尾处创建链表", "\n    {\n        head = (snake*)malloc(sizeof(snake));\n        ", "head", "->", "next = tail;\n\n        ", "head", "->", "x", " = 24 + i * 2;                   //head->", "x这个数必须为偶数，和食物坐标偶数对应\n        ", "head", "->", "y = ", "8", ";\n        tail = head;                            ", "//此时蛇尾指针指向蛇头", "\n    }\n\n    ", "while", " (tail)\n    {\n        ", "gotoxy", "(tail->", "x", ", tail->", "y);\n        printf(", "\"■\"", ");\n        ", "tail", " = tail->", "next;\n    }\n}\n\nint status = R;            ", "//蛇前进状态", "\n\nsnake* p = NULL;        ", "//工作指针", "\nsnake* nexthead;        ", "//下一个蛇头", "\nint score = ", "0", ";          ", "//得分", "\n\nvoid snakemove()        ", "//蛇前进,上U,下D,左L,右R", "\n{\n    nexthead = (snake*)malloc(sizeof(snake));\n\n    ", "if", " (status == U)\n    {\n        ", "nexthead", "->", "y", " = head->", "y - ", "1", ";  ", "//确定新蛇头的下一个坐标  x,y", "\n        ", "nexthead", "->", "x", " = head->", "x;\n    }\n    ", "if", " (status == D)                ", "//下", "\n    {\n        ", "nexthead", "->", "y", " = head->", "y + ", "1", ";\n        ", "nexthead", "->", "x", " = head->", "x;\n    }\n    ", "if", " (status == L)                ", "//左", "\n    {\n        ", "nexthead", "->", "x", " = head->", "x - ", "2", ";\n        ", "nexthead", "->", "y", " = head->", "y;\n    }\n    ", "if", " (status == R)                ", "//右", "\n    {\n        ", "nexthead", "->", "x", " = head->", "x + ", "2", ";\n        ", "nexthead", "->", "y", " = head->", "y;\n    }\n    ", "nexthead", "->", "next = head;\n    head = nexthead;\n    p = head;\n\n    ", "if", " (p->", "x", " == foodx && p->", "y == foody) ", "//判断蛇头的位置是否和食物的位置重合", "\n    {\n        ", "while", " (p)                       ", "//输出尾结点", "\n        {\n            ", "gotoxy", "(p->", "x", ", p->", "y);\n            ", "if", " (p == head)\n                printf(", "\"●\"", ");\n            ", "else", "\n                printf(", "\"■\"", ");\n            ", "p", " = p->", "next;                ", "//因为每次运动都是新创建一个头结点再删除一个尾结点，", "\n        }                               ", "//所以要增加一节身体，只需要这次循环不释放尾结点，并输出一次尾结点就好了", "\n        \n        ", "//sjcsswhs();                   //碰到食物则再产生一个食物", "\n\n        score++;\n        gotoxy(", "32", ", ", "28", ");\n        printf(", "\"%d\"", ", score);\n    }\n    ", "else", "\n    {\n        ", "while", " (p->", "next", "->", "next)           ", "//不输出尾结点", "\n        {\n            ", "gotoxy", "(p->", "x", ", p->", "y);\n            ", "if", " (p == head)\n                printf(", "\"●\"", ");\n            ", "else", "\n                printf(", "\"■\"", ");\n            ", "p", " = p->", "next;\n        }\n\n        ", "gotoxy", "(p->", "next", "->", "x", ", p->", "next", "->", "y);\n        printf(", "\"  \"", ");\n        ", "free", "(p->", "next);\n        ", "p", "->", "next = NULL;\n    }\n\n    p = head;\n    ", "while", " (p)                       ", "//如果食物的坐标刷新到了蛇身上则再产生一个食物 *", "\n    {\n        ", "if", " (p->", "x", " == foodx && p->", "y == foody)\n            sjcsswhs();\n        ", "p", " = p->", "next;\n    }\n}\n\nvoid czfxhs()                   ", "//操作方向函数，接收从键盘输入的按键，控制贪吃蛇行进方向", "\n{\n    char ch = _getch();\n    switch (ch)\n    {\n        case ", "'w'", ": \n            ", "if", "(status != D)\n                status = U; break;\n        case ", "'s'", ": \n            ", "if", " (status != U)\n                status = D; break;\n        case ", "'a'", ": \n            ", "if", " (status != R)\n                status = L; break;\n        case ", "'d'", ": \n            ", "if", " (status != L)\n                status = R; break;\n        case ", "' '", ": \n            _getch(); break;        ", "//空格暂停", "\n    }\n}\n\nint yxjstjjsmz_1()                  ", "//生命掉落条件1咬自己", "\n{\n    ", "snake", "* self = head->", "next;       ", "//self为蛇身上的一个结点", "\n    ", "while", " (self)\n    {\n        ", "if", " (self->", "x", " == head->", "x", " && self->", "y", " == head->", "y) ", "//head和self的成员作比较，蛇头一直存在，这里遍历的是蛇身", "\n        {\n            return ", "1", ";\n        }\n        ", "self", " = self->", "next;\n    }\n    return ", "0", ";【 \n}\n\nint yxjstjjsmz_2()                  ", "//生命掉落条件2碰墙", "\n{\n    ", "if", " (head->", "x", " <= 1 || head->", "x", " >= 98 || head->", "y", " <= 0 || head->", "y >= ", "26", ")\n        return ", "1", ";\n    \n    return ", "0", ";\n}\n\nint i = LIFE - ", "1", ";                   ", "//变量存储生命次数", "\n\nvoid qcsytmslbhs()                  ", "//清除并释放上一条蛇留下来的痕迹，更新生命信息", "\n{\n    p = head;\n    ", "int", " _x_ = p->", "x;                 ", "//用于保存死掉的蛇的蛇头处的位置，用于输出被蛇头顶掉的墙壁", "\n    ", "int", " _y_ = p->", "y;\n    ", "while", " (head)\n    {\n        ", "gotoxy", "(head->", "x", ", head->", "y);\n        printf(", "\"  \"", ");\n        ", "head", " = head->", "next;\n        free(p);\n        p = head;\n    }\n    gotoxy(", "52", ", ", "28", ");                 ", "//更新生命信息", "\n    printf(", "\"%d\"", ", i);\n\n    ", "if", " (_y_ == ", "0", " || _y_ == HEIGHT - ", "4", ")      ", "//用于在蛇死掉后，蛇头的位置输出被清除蛇头顶替掉的墙壁", "\n    {\n        gotoxy(_x_, _y_);\n        printf(", "\"--\"", ");\n    }\n    ", "else", " ", "if", " (_x_ == WIDTH - ", "2", ")\n    {\n        gotoxy(_x_+", "1", ", _y_);\n        printf(", "\"|\"", ");\n    }\n    ", "else", " ", "if", "(_x_ == ", "0", ")\n    {\n        gotoxy(_x_, _y_);\n        printf(", "\"|\"", ");\n    }\n}\n\nvoid sbjsjmhs()                     ", "//失败结束界面", "\n{\n    p = head;                       ", "//释放内存", "\n    ", "while", " (head)\n    {\n        ", "head", " = head->", "next;\n        free(p);\n        p = head;\n    }\n\n    system(", "\"cls\"", ");\n    gotoxy(", "45", ", ", "12", ");\n    printf(", "\"游戏结束！\"", ");\n    gotoxy(", "44", ", ", "14", ");\n    printf(", "\"最终得分：%d\"", ", score);\n    gotoxy(", "0", ",", "28", ");\n}\n\nint updatetime()                        ", "//获取一次电脑现在的时间", "\n{\n    int now;\n    SYSTEMTIME system_time;             \n    GetLocalTime(&system_time);\n    now = system_time.wMinute * ", "60", " + system_time.wSecond;   \n    return now;\n}\n\nint time_1 = updatetime();                  ", "//保存游戏刚开始的时间", "\n\nvoid gametime()                             ", "//写在每次循环之内", "\n{\n    int time_2 = updatetime() - time_1;     ", "//更新游戏开始后时间，用现在的时间减去刚开始的时间", "\n    gotoxy(", "72", ", ", "28", ");\n    printf(", "\"%d s\"", ", time_2);\n}\n\nint main()", "//主函数", "\n{\n    system(", "\"mode con cols=100 lines=30\"", ");   ", "//设置控制台大小", "\n    system(", "\"title 贪吃蛇游戏\"", ");             ", "//设置标题", "\n    HideCursor();                           ", "//隐藏光标", "\n\n    sjcsswhs();                             ", "//初始化随机产生一个食物", "\n    dtxxcsh();                              ", "//初始化地图、信息", "\n\n    ", "for", " (; i >= ", "0", "; i--)                         ", "//生命", "\n    {\n        cshs();                                 ", "//初始化蛇的位置", "\n        status = R;                             ", "//初始化运动方向", "\n\n        ", "while", " (", "1", ")\n        {\n            snakemove();                        ", "//蛇行动动画，方向被控制变量控制", "\n\n            ", "if", " (_kbhit())\n            {\n                czfxhs();                       ", "//接收键盘按键，控制控制变量", "\n            }\n            \n            ", "if", " (yxjstjjsmz_1() || yxjstjjsmz_2())", "//两个掉落生命的条件", "\n                break;\n\n            gametime();                         ", "//更新游戏时间", "\n\n            Sleep(SPEED);\n        }\n        qcsytmslbhs();                          ", "//清除上一条蛇留下来的痕迹，更新生命信息", "\n    }\n\n    sbjsjmhs();                                 ", "//失败结束界面", "\n\n    return ", "0", ";\n}\n\nvoid HideCursor()\n{\n    CONSOLE_CURSOR_INFO cursor_info = { ", "1", ", ", "0", " };\n    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursor_info);\n}\n\nvoid gotoxy(int x, int y)\n{\n    COORD pos = { x,y };\n    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;错误提示&amp;#xff0c;是 2410lib.h 这个头文件没找到。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["这段嵌入式代码有错误，如何修改？", ["问题是：1、LED+蜂鸣器：", "    初始化设备（4个灯全灭），1s后蜂鸣器连续响起三次（间隔1s以下），然后进行一次跑马灯（LED1-LED4，LED4-LED1逐个亮起）", "\n", "/*\n    1、LED+蜂鸣器：\n    初始化设备（4个灯全灭），1s后蜂鸣器连续响起三次（间隔1s以下），然后进行一次跑马灯（LED1-LED4，LED4-LED1逐个亮起）。\n*/", "\n\n", "#", "include", " ", "\"2410lib.h\"", "\n", "#", "include", " ", "\"2410addr.h\"", "\n", "#", "include", " ", "\"def.h\"", "\n\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<fcntl.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n", "#", "include", " ", "<sys/types.h>", "\n", "#", "include", " ", "<sys/stat.h>", "\n\n\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<signal.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "<syslog.h>", "\n", "#", "include", " ", "<errno.h>", "\n", "#", "include", " ", "<linux/input.h>", "\n\n", "#", "include", " ", "<fcntl.h>", "\n", "#", "include", " ", "<sys/types.h>", "\n", "#", "include", " ", "<sys/stat.h>", "\n", "#", "include", " ", "<sys/mman.h>", "\n", "#", "include", " ", "<stdbool.h>", "\n\n", "#", "include", " ", "<linux/fb.h>", "\n", "#", "include", " ", "<sys/mman.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n  \n", "#", "include", " ", "<string.h>", " ", "\n\n", "#", "define", " TEST_MAGIC ", "'x'", "                           ", "\n", "#", "define", " TEST_MAX_NR 4                            ", "\n\n", "#", "define", " LED1 _IO(TEST_MAGIC, 0)              ", "\n", "#", "define", " LED2 _IO(TEST_MAGIC, 1)", "\n", "#", "define", " LED3 _IO(TEST_MAGIC, 2)", "\n", "#", "define", " LED4 _IO(TEST_MAGIC, 3)", "\n", "#", "define", " LED(i) _IO(TEST_MAGIC, i)", "//做循环用", "\n\n", "//控制灯开关", "\n", "int", " ", "openorcloseLed", "()", ";", "//控制灯全开或全关 ,正常返回1，错误返回-1 ", "\n", "int", " ", "openorcloseLed", "(", "int", " arg)", "{\n    \n    ", "int", " fd;\n    fd = ", "open", "(", "\"/dev/Led\"", ",O_RDWR);\n    ", "if", "(fd<", "0", ")\n    {\n        ", "printf", "(", "\"打开驱动文件失败，请检查是否有该驱动或者路径是否正确\\n\"", ");\n        ", "return", " ", "-1", ";\n    }\n    ", "for", "(", "int", " i=", "0", ";i<", "4", ";i++){\n        ", "ioctl", "(fd, ", "LED", "(i), arg);\n    }\n    ", "return", " ", "1", ";\n}\n\n\n\n", "//---------------------------------------------------------------------------", "\n", "int", " ", "main", "()", "\n", "{\n    ", "/*\n    1、LED+蜂鸣器：\n    初始化设备（4个灯全灭），1s后蜂鸣器连续响起三次（间隔1s以下），然后进行一次跑马灯（LED1-LED4，LED4-LED1逐个亮起）。）\n    */", "    \n    \n    ", "openorcloseLed", "(", "1", ");", "//LED全灭", "\n    \n", "//--------------------------------------------------------------------", "\n    \n            ", "for", "(", "int", " i=", "0", ";i<=", "3", ";i++){\n    rGPBCON= rGPBCON& ", "0Xfffffc", " | ", "1", ";\n    rGPBDAT &=", "0xFFFFFE", ";\n    rGPBDAT | =", "1", ";\n    ", "sleep", "(", "1", ");\n       }\n\n    ", "ioctl", "(fd,LED1,", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "ioctl", "(fd,LED1,", "1", ");\n    ", "ioctl", "(fd,LED2,", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "ioctl", "(fd,LED2,", "1", ");\n    ", "ioctl", "(fd,LED3,", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "ioctl", "(fd,LED3,", "1", ");\n    ", "ioctl", "(fd,LED4,", "0", ");\n    ", "return", " ", "0", "; \n}\n\n", "\n", "编译出现如图错误，如何修改呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你定义了个lock变量&amp;#xff0c;然后在哪用了&amp;#xff0c;哪里也没用啊&lt;br /&gt;你需要这样&lt;br /&gt;with lock:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    #do something&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Python异步(asyncio)请求--同步的问题错误", ["问题遇到的现象和发生背景", "\n", "使用asyncio、aiohttp提取一些链接时，过程中解析那里出现问题", "\n", "问题相关代码，请勿粘贴截图", "\n", "from", " pyquery ", "import", " PyQuery\n", "import", " os\n", "import", " asyncio\n", "import", " aiohttp\n", "import", " warnings\n\n\nwarnings.filterwarnings(", "\"ignore\"", ", category=DeprecationWarning)\n", "# 并发量设置", "\nsemaphore = asyncio.Semaphore(", "5", ")\n\n", "# 获取一个请求里的所有img页面详情链接", "\n", "async", " ", "def", " ", "url_pages", "(", "page", "):\n    ", "# async with semaphore:", "\n    ", "print", "(", "\"开始下载第{}页...\"", ".", "format", "(page))\n    _url = ", "'https://wallhaven.cc/toplist?page={}'", ".", "format", "(page)\n    ", "async", " ", "with", " session.get(_url) ", "as", " response:\n        ", "async", " ", "with", " lock:\n            result = ", "await", " response.text()\n            ", "for", " _item ", "in", " PyQuery(result)(", "'.thumb-listing-page li'", ").items():\n                img_url.append(_item(", "'.preview'", ").attr(", "'href'", "))\n            ", "# for i in range(24):", "\n            ", "#     img_url.append(i)", "\n\n            ", "print", "(", "\"{}.....\"", ".", "format", "(page))\n            ", "print", "(", "len", "(img_url))\n\n", "# 主方法", "\n", "async", " ", "def", " ", "scrape_main", "():\n    ", "global", " session\n    session = aiohttp.ClientSession()\n    scrape_index_tasks = [asyncio.ensure_future(url_pages(page)) ", "for", " page ", "in", " ", "range", "(", "1", ", pages+", "1", ")]\n    ", "await", " asyncio.wait(scrape_index_tasks)\n    ", "await", " session.close()\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    pages = ", "30", "\n    img_url = []\n    session = ", "None", "\n    lock = asyncio.Lock()\n    asyncio.get_event_loop().run_until_complete(scrape_main())\n", "\n", "运行结果及报错内容", "\n", "就是为什么中间那部分解析的内容没有添加都列表，而用普通的for循环却可以。", "表示很懵！", "正常应该是720的，结果就只添加了528.", "\n", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "并发量控制尝试过，Lock也尝试过，还是解决不了", "\n", "我想要达到的结果", "\n", "30页的内容，没页解析出24条数据，一共720条数据才对，现在的问题就是，中间有些内容解析的数据没有添加成功，请解惑o(╥﹏╥)o"]], "Tag": "程序设计"}
{"Answer": "讲真，我觉得找Bug总是枯燥无味的。别强求别人啦。发链接都是说明别人已经以前做了相关的工作，然后叫你直接去看哇，这样多省事。\r\n[前段是时间做的一个QT计算器](http://blog.csdn.net/a19990412/article/details/78160169 \"\") \r\n还有，我在我一篇文章中写了我顺带做了一个图形界面,用的是QT，你进去之后自己再看看吧。\r\n每个人都是在这样的压力下慢慢成长哇，别好像是别人求着教你一样哇，说到这个，你不会还是个高中生吧？\r\n此外，你那个通过三个两个的例子真没什么好说的emmm，一般遇到这种情况，没有AC，那就是很大的问题嘛。可能只是测试数据刚刚好而已。\r\n多出来的那个0 0 是很正常哇，你的代码就是这么写的哇，你写的代码，在最后那个循环结束的时候，就是会进行一次输出 0 0 哇。还有 0 0 其实是在链表的长度为1的时候，才考虑的，哥~ \r\n没事没事，我以前也是经常犯这种问题，多看看，多学学，就慢慢好了。加油哦！", "Konwledge_Point": "循环控制", "Question": ["我的调教程序错在哪里？求指点", ["程序的功能是实现计算多项式的导数。", "\n输入格式：以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。", "\n\n", "输出格式：以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是0，但是表示为“0 0”。", "\n\n", "输入样例：", "\n3 4 -5 2 6 1 -2 0", "\n输出样例：", "\n12 3 -10 1 6 0", "\n提交代码", "\n\n", "我的代码如下：", "\n\n", " #include<stdio.h>\n#include<stdlib.h>\ntypedef struct poly{\n    int coef;    //系数 \n    int expon;   //指数 \n    struct poly *next;\n}Poly; \n\nint main(void)\n{\n    Poly *head = (Poly *)malloc(sizeof(Poly));\n    head->next = NULL;\n    Poly *prev = head;\n\n    //输入多项式信息 \n    while(1)\n    {\n        Poly *p =  (Poly *)malloc(sizeof(Poly));\n        scanf(\"%d%d\",&p->coef,&p->expon);\n        p->next = NULL;\n        prev->next = p;\n        prev = p;\n\n        char c = getchar();\n        if(c == '\\n')\n            break;\n    }\n    Poly *t = head;head = head->next;free(t);\n\n    //求导数并输出\n    prev = head;\n    int flag = 0;  //flag用于控制输出格式顺序 \n    while(prev)\n    {\n        prev->coef *= prev->expon;\n        prev->expon--; \n\n        if(!flag)\n            flag = 1;\n        else\n            printf(\" \"); \n\n        if(!prev->coef)\n            printf(\"0 0\");\n        else\n            printf(\"%d %d\",prev->coef,prev->expon);\n\n        prev = prev->next;\n    } \n\n    return 0;\n}\n\n", "\n\n", "测试用例一共有5个，以上答案提交后可以通过两个，题目给的例子中，在输出6 0 后，还会再多输出一个0 0.而如果将最后一个while循环改成prev->next,则能通过之前没有通过的三个用例。而之前那两个没有通过。希望能有高手解答，谢谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那个指针有问题&amp;#xff0c;main里没用到这些指针啊&amp;#xff0c;去掉试试&amp;#xff0c;main括号里什么都不填&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["请问这段嵌入式代码如何修改呢？", ["问题是：LED+LCD：", "    初始化设备（4个灯全灭），屏幕刷绿色，然后四个灯全部亮起闪烁三次，结束后屏幕刷成红色。", "\n", "/*初始化设备（4个灯全灭），屏幕刷绿色，然后四个灯全部亮起闪烁三次，结束后屏幕刷成红色。\n*/", "\n\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<fcntl.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n", "#", "include", " ", "<sys/types.h>", "\n", "#", "include", " ", "<sys/stat.h>", "\n", "#", "include", " ", "<fcntl.h>", "\n\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<signal.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "<syslog.h>", "\n", "#", "include", " ", "<errno.h>", "\n", "#", "include", " ", "<linux/input.h>", "\n\n", "#", "include", " ", "<fcntl.h>", "\n", "#", "include", " ", "<sys/types.h>", "\n", "#", "include", " ", "<sys/stat.h>", "\n", "#", "include", " ", "<sys/mman.h>", "\n", "#", "include", " ", "<stdbool.h>", "\n\n", "#", "include", " ", "<linux/fb.h>", "\n", "#", "include", " ", "<sys/mman.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n  \n", "#", "include", " ", "<string.h>", " ", "\n\n", "#", "define", " TEST_MAGIC ", "'x'", "                           ", "\n", "#", "define", " TEST_MAX_NR 4                            ", "\n\n", "#", "define", " LED1 _IO(TEST_MAGIC, 0)              ", "\n", "#", "define", " LED2 _IO(TEST_MAGIC, 1)", "\n", "#", "define", " LED3 _IO(TEST_MAGIC, 2)", "\n", "#", "define", " LED4 _IO(TEST_MAGIC, 3)", "\n", "#", "define", " LED(i) _IO(TEST_MAGIC, i)", "//做循环用", "\n\n", "//控制灯开关", "\n", "int", " ", "openorcloseLed", "()", ";", "//控制灯全开或全关 ,正常返回1，错误返回-1 ", "\n", "int", " ", "openorcloseLed", "(", "int", " arg)", "{\n    \n    ", "int", " fd;\n    fd = ", "open", "(", "\"/dev/Led\"", ",O_RDWR);\n    ", "if", "(fd<", "0", ")\n    {\n        ", "printf", "(", "\"打开驱动文件失败，请检查是否有该驱动或者路径是否正确\\n\"", ");\n        ", "return", " ", "-1", ";\n    }\n    ", "for", "(", "int", " i=", "0", ";i<", "4", ";i++){\n        ", "ioctl", "(fd, ", "LED", "(i), arg);\n    }\n    ", "return", " ", "1", ";\n}\n\n", "int", " ", "pmsx", "(", "long", " a)", "\n", "{\n    ", "int", " fd=", "open", "(", "\"/dev/fb0\"", ",O_RDWR);\n    ", "unsigned", " ", "char", " *FB=", "mmap", "(", "NULL", ",", "800", "*", "480", "*", "4", ",PROT_READ|PROT_WRITE,MAP_SHARED,fd,", "0", ");\n    ", "//blue point", "\n    ", "long", " red =a;\n    ", "int", " i,j;\n    ", "for", "(j=", "0", ";j<", "480", ";j++)\n    {\n        ", "for", "(i=", "0", ";i<", "800", ";i++)\n        {\n            ", "memcpy", "(FB+", "4", "*i+", "800", "*", "4", "*j,&red,", "4", ");\n        }  \n    }\n        ", "munmap", "(FB,", "800", "*", "480", "*", "4", ");\n        ", "close", "(fd);\n    ", "return", " ", "0", ";\n}\n\n", "//---------------------------------------------------------------------------", "\n", "int", " ", "main", "(", "int", " argc, ", "char", " **argv[])", "\n", "{\n    ", "/*    LED+LCD：\n        初始化设备（4个灯全灭），屏幕刷绿色，然后四个灯全部亮起闪烁三次，结束后屏幕刷成红色。\n    */", "    \n    \n    ", "openorcloseLed", "(", "1", ");", "//LED全灭", "\n    \n", "//--------------------------------------------------------------------", "\n    \n    ", "pmsx", "(", "0x0000FF00", ");      ", "//屏幕刷成绿色", "\n\n    ", "openorcloseLed", "(", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "openorcloseLed", "(", "1", ");\n    ", "sleep", "(", "1", ");\n    ", "openorcloseLed", "(", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "openorcloseLed", "(", "1", ");\n    ", "sleep", "(", "1", ");\n    ", "openorcloseLed", "(", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "openorcloseLed", "(", "1", ");\n    ", "sleep", "(", "1", ");\n    \n    ", "pmsx", "(", "0x00FF0000", ");      ", "//屏幕刷成红色", "\n    ", "return", " ", "0", "; \n}\n\n\n", "\n", "出现这个错误，应该如何修改代码呢？"]], "Tag": "程序设计"}
{"Answer": "搞明白了，其实就是字符串传参的事，我重构下程序，没问题了\r\n\r\n```\r\ndef ky(iuy,f2):\r\n\tq1='(?&lt;='\r\n\tq2=')\\s*\\d*\\.\\d*'\r\n\tq=q1+iuy+q2\r\n\tp = re.compile(q)\r\n\ta=list(map(float,p.findall(f2)))\r\n\tif a!=[]:\r\n\t\tprint(iuy,a)\r\n\r\n\r\ndef trans_dict(file):\r\n\tfiles = open(file,encoding='utf-8')\r\n\tfiles_content = files.readlines() #读取数据,返回一个list，每一行 为一个字符串\r\n\tresult_list = [] #创建一个空列表\r\n \r\n\tfor data_lines in files_content:  #遍历列表，取出每一行字符串\r\n\t\tresult_dict = {} # 创建一个空字典\r\n\r\n\t\t# try:\r\n\t\tdata_lines=str(data_lines.strip('\\n').replace(' ','').replace('│',''))\r\n\t\tfor dingzhi_a in dingzhi:\r\n\t\t\tky(dingzhi_a,data_lines)\r\n\r\n\tfiles.close()\r\n```", "Konwledge_Point": "循环控制", "Question": ["python，如何在零宽断言中的表达式exp使用变量来搜索匹配？", ["我尝试用python编写个程序，主要目的是在test.txt中提取多个特定字段后的浮点数值。尝试用了零宽断言来提取特定字段后的数值，因为特定字段是多个的，便用了for循环，当在零宽断言中的表达式exp用变量时会报错“SyntaxError: invalid syntax”。上网查下零宽断言的用法，表达式exp好像是要用定长字符，我该如何实行我的目的。", "\n\n", "encoding='utf-8'\nencoding='gb18030'\nimport re\ndingzhi=[ '失灵低电流', '重合闸控制字', '失灵零序电流', '突变量启动定值', '负序电流', '零序电流启动定值', '低功率因数', '不一致零序电流', '低功率因数过流', '不一致负序电流', '延时联跳延时', '三相不一致延时', '失灵保护延时', '充电段电流', '死区电流', '死区保护延时', '充电零序过流', '检同期角度', '充电段延时', '单重延时', '三重延时', '充电零序延时', '后合时间差', '失灵高电流', '后合跳闸延时']\n\ndef trans_dict(file):\n    files = open(file,encoding='utf-8')\n    files_content = files.readlines() #读取数据,返回一个list，每一行 为一个字符串\n    result_list = [] #创建一个空列表\n\n    for data_lines in files_content:  #遍历列表，取出每一行字符串\n\n        # try:\n        data_lines=str(data_lines.strip('\\n').replace(' ','').replace('│','')) #处理数据删掉换行、空格和表格符号\n        for dingzhi_a in dingzhi:\n            p = re.compile('(?<='dingzhi_a')\\s*\\d*\\.\\d*')\n            a=list(map(float,p.findall(data_lines)))\n            print(a)\n\n        # except :\n        #   pass\n        # else:\n            # if a!=[]:\n            #   print(a)\n\n    files.close()\n\ntrans_dict('test.txt')\n", "\n\n", "test.txt是这样的"]], "Tag": "程序设计"}
{"Answer": "我调了下你的程序，只是把if ((fp = fopen (\"StudentInformation.txt\", \"a\") == NULL))里的fp = fopen()放到了外边，可以出结果的呀。txt存到数据了", "Konwledge_Point": "循环控制", "Question": ["关于C语言文本类型输入", ["要做一个学生学籍管理系统，但是到文本输入的时候输进去了，txt文件也创建好了，打开文件就是一片空白，请各位帮帮忙，这是我的那一部分代码", "\n\n", "#include ", "\n#include ", "\n\n", "typedef struct Student{", "\n    long StudentID; //学生学号", "\n    char StudentName[4]; //学生名字", "\n    char StudentSex; //学生性别", "\n    int StudentScore; //学生成绩", "\n}STUDENT;", "\n\n", "FILE *fp;\nint find = 0; // 用于控制循环\nchar ch;//用于储存命令\nSTUDENT student;//定义一个结构体变量\nif ((fp = fopen (\"StudentInformation.txt\", \"a\") == NULL))\n{\n    printf (\"Failure to open student.txt\\n\");\n    exit(0);\n}\nelse\n{\n    // 录入数据\n    while (find == 0)\n    {\n        do {\n            printf (\"请输入学生学号（9位数字，例：161110500）：\\n\");\n            scanf (\"%ld\", &student.StudentID);\n            getchar();\n            printf (\"请输入学生姓名：（4个字以内）\\n\");\n            gets(&student.StudentName);\n            printf (\"请输入学生性别（男或女）：\\n\");\n            scanf (\" %c\", &student.StudentSex);\n            getchar();\n            printf (\"请输入学生成绩：\\n\");\n            scanf (\"%d\", &student.StudentScore);\n\n            printf (\"是否输入正确？（按Y正确，按N重输）\\n\");\n            ch = getch();\n            system(\"cls\");\n        } while (ch == 'N' || ch == 'n');\n        fprintf (fp, \"%ld\", student.StudentID);\n        fprintf (fp, \"%s\", student.StudentName);\n        fprintf (fp, \"%c\", student.StudentSex);\n        fprintf (fp, \"%d\", student.StudentScore);\n        printf (\"是否继续输入下一个学生成绩？（按Y继续，按N返回）\\n\");\n        ch = getch();\n        if (ch == 'Y' || ch == 'y')\n        {\n            find = 0;\n        }\n        else if (ch == 'N' || ch == 'n')\n        {\n            find = 1;\n        }\n        else\n        {\n            printf (\"输入错误，即将返回\\n\");\n            find = 1;\n        }\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是触发反爬机制了,  改一下请求的代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;response &amp;#61; requests.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;url&lt;/span&gt;&amp;#61;url, &lt;span class=\"hljs-attribute\"&gt;headers&lt;/span&gt;&amp;#61;headers)\ntry:\n    json_data &amp;#61; response.json()\nexcept:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#34;err data: &amp;#34;&lt;/span&gt;, response.text)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;看一下返回的是啥, 大概率是错误页的html;&lt;br /&gt;解决办法: 1. 在每次请求后sleep一下, 或者换换header头ip啥的, 2. 直接跳过爬下一页;&lt;/p&gt;\n&lt;p&gt;有用记得点个采纳&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["爬取某东json评论，JSONDecodeError: Expecting value: line 1 column 1 (char 0)坐等解决方法", ["报错显示：JSONDecodeError: Expecting value: line 1 column 1 (char 0)，具体报错行和报错请看下文，谢谢", "还望告知解决方法，不胜感激", "代码如下", "\n", "import", " requests\n", "import", " re\n\n", "#伪装请求头(电商有反爬机制)搞个user_agent", "\nheaders={", "'User-Agent'", ": \n         ", "'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36'", "}\n\n", "#在url里去掉callback=fetchJSON_comment98，获取json格式数据，json为键值对的数据，方便后续操", "\n", "for", " page ", "in", " ", "range", "(", "0", ",", "51", "):\n    ", "print", "(", "f'-------------------------------正在爬取第", "{page}", "页------------------------------------------'", ")\n    url=", "f'https://club.jd.com/comment/productPageComments.action?&productId=10027847648122&score=3&sortType=5&page=", "{page}", "pageSize=10&isShadowSku=0&fold=1'", "\n    response=requests.get(url=url,headers=headers)\n    json_data=response.json()\n    **", "'''**\n\n    ## 报错行👆\n\n    **'''", "**\n    comments_list=json_data[", "'comments'", "]\n        ", "#for 循环提取数据", "\n    ", "for", " commnet ", "in", " comments_list:\n        content=commnet[", "'content'", "]                ", "#评论内容", "\n        content=re.sub(", "r'[\\t\\n]'", ",", "''", ",content)     ", "#把评论的换行给删除", "\n        creationTime=commnet[", "'creationTime'", "]      ", "#创建时间", "\n        productColor=commnet[", "'productColor'", "]      ", "#产品款式", "\n        productSize=commnet[", "'productSize'", "]        ", "#产品尺寸", "\n        nickname=commnet[", "'nickname'", "]              ", "#用户名称", "\n        replyCount=commnet[", "'replyCount'", "]          ", "#评论人数", "\n        score=commnet[", "'score'", "]                    ", "#评分", "\n        usefulVoteCount=commnet[", "'usefulVoteCount'", "]", "#点赞数", "\n    ", "#print(nickname,content,creationTime,score)", "\n        csv_writer.writerow([nickname,content,creationTime,productColor,productSize,replyCount,score,usefulVoteCount])\n    ", "#控制延迟，防止反爬", "\n    time.sleep(random.randint(", "3", ",", "5", "))\n\n", "\n", "报错", "\n", "JSONDecodeError                           Traceback (most recent call last)\n<ipython-input-4-ddb784a6b86d> in <module>\n     ", " 4 ", "    url=f'https://club.jd.com/comment/productPageComments.action?&productId=10027847648122&score=3&sortType=5&page={page}pageSize=10&isShadowSku=0&fold=1'\n     ", " 5 ", "    response=requests.get(url=url,headers=headers)\n---->", " 6 ", "    json_data=response.json()\n     ", " 7 ", "    comments_list=json_data['comments']\n     ", " 8 ", "        ", "#for 循环提取数据", "\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\requests\\models.py in json(self, **kwargs)\n   ", " 895 ", "                    ", "# used.", "\n   ", " 896 ", "                    pass\n-->", " 897 ", "        return complexjson.loads(self.text, **kwargs)\n   ", " 898 ", "\n   ", " 899 ", "    @property\n\nC:\\ProgramData\\Anaconda3\\lib\\json\\__init__.py in loads(s, encoding, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\n   ", " 346 ", "            parse_int is None and parse_float is None and\n   ", " 347 ", "            parse_constant is None and object_pairs_hook is None and not kw):\n-->", " 348 ", "        return _default_decoder.decode(s)\n   ", " 349 ", "    if cls is None:\n   ", " 350 ", "        cls = JSONDecoder\n\nC:\\ProgramData\\Anaconda3\\lib\\json\\decoder.py in decode(self, s, _w)\n   ", " 335 ", "\n   ", " 336 ", "        \"\"\"\n-->", " 337 ", "        obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n   ", " 338 ", "        end = _w(s, end).end()\n   ", " 339 ", "        if end != len(s):\n\nC:\\ProgramData\\Anaconda3\\lib\\json\\decoder.py in raw_decode(self, s, idx)\n   ", " 353 ", "            obj, end = self.scan_once(s, idx)\n   ", " 354 ", "        except StopIteration as err:\n-->", " 355 ", "            raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n   ", " 356 ", "        return obj, end\n\nJSONDecodeError: Expecting value: line", " 1 ", "column", " 1 ", "(char 0)\n```python\n\n\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有这两个函数&amp;#xff0c;你看看是不是函数名写错了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Embedded编写出现错误还有两个警告，", ["Error[Pe247]: function \"main\" has already been defined (at line 18)", "Warning[Pe223]: function \"InitIO\" declared implicitly", "Warning[Pe223]: function \"InitKeyINT\" declared implicitly", "一个cc2530的程序编写 是不是main赋值过多", "需要两个循环该怎么办", "怎么能终止其中一个达到下一个", "\n", "#", "include", " ", "<ioCC2530.h>", "    ", "\n", "#", "define", " LED1    P1_0      ", "//P1.0端口控制LED1发光二极管    ", "\n", "#", "define", " LED2    P1_1     ", "//P1.1端口控制LED2发光二极管 ", "\n", "#", "define", " SW1     P1_2  ", "//P1.2端口与按键SW1相连", "\n", "char", " ", "KeyScan", "(", "void", ")", ";            ", "//按键扫描函数声明", "\n", "char", " Keyvalue = ", "0", " ;                ", "//定义变量记录按键动作", "\n", "int", "  KeyTouchtimes = ", "0", " ; \n", "void", " ", "Delay", "(", "int", ")", ";", "//延时函数声明", "\n", "void", " ", "Initial", "(", "void", ")", ";     ", "//初始化函数声明", "\n", "void", " ", "InitKey", "(", "void", ")", ";\n", "void", " ", "delay", "(", "unsigned", " ", "int", " i)", "    \n", "{   ", "unsigned", " ", "int", " j,k;    \n    ", "for", "(k=", "0", ";k<i;k++)    \n    {   \n       ", "for", "(j=", "0", ";j<", "500", ";j++);      \n    }  \n}     \n", "void", " ", "main", "(", "void", ")", "    \n", "{  \n\nP1SEL &= ~", "0x03", ";              ", "//设置P1.0和P1.1为GPIO    ", "\n    P1DIR |= ", "0x03", ";          ", "//定义P1.0和P1.1端口为输出    ", "\n   P1 &=  ~", "0x03", ";            ", "//关闭LED1和LED2    ", "\n   ", "while", "(", "1", ")    \n   {    \n       LED1 = ", "0", ";                ", "//点亮LED1    ", "\n       LED2 = ", "1", ";            ", "//关闭LED2    ", "\n       ", "delay", "(", "5500", ");         ", "//延时    ", "\n       LED1 = ", "1", ";            ", "//关闭LED1    ", "\n       LED2 = ", "0", ";            ", "//点亮LED2    ", "\n       ", "delay", "(", "5500", ");         ", "//延时          ", "\n  }  \n}   \n\n", "void", " ", "initial_gpio", "()", "  \n", "{   P1SEL &= ~", "0x07", ";         ", "//设置P1.0 P1.1 P1.2为GPIO  ", "\n    P1DIR |= ", "0X03", ";          ", "//设置P1.0 P1.1端口为输出  ", "\n    P1DIR &= ~", "0X04", ";         ", "//设置P1.2端口为输入  ", "\n    P1=", "0X00", ";                ", "//关闭LED灯          ", "\n    P1INP &= ~", "0X04", ";         ", "//P1.2端口为“上拉/下拉”模式  ", "\n    P2INP &= ~", "0X40", ";         ", "//对所有P1端口设置为“上拉”    ", "\n }  ", "//**********************************************************************************  ", "\n", "#", "pragma", " vector = P0INT_VECTOR", "\n\n ", "__interrupt ", "void", " ", "P0_ISR", "(", "void", ")", "\n\n ", "{\n\n        ", "if", "(P0IFG>", "0", ")            ", "//按键中断", "\n\n        {\n\n          P0IFG = ", "0", ";\n\n          ", "delay", "(", "100", ");\n\n          ", "if", "(P0IFG==", "0", ")         ", "//按键中断", "\n\n        {\n\n          ", "delay", "(", "100", ");\n\n          KeyTouchtimes = KeyTouchtimes+", "1", ";  ", "//每次中断发生时记录按键次数加1", "\n\n        }\n\n        }\n\n        P0IF = ", "0", ";             ", "//清中断标志", "\n\n }\n", "void", " ", "main", "(", "void", ")", "\n\n", "{\n\n", "InitIO", "();  \n", "InitKeyINT", "();               ", "//调用初始化函数", "\n\n           \n\n        ", "while", "(", "1", ")\n\n        {\n\n            ", "if", "(KeyTouchtimes ==", "1", ")        ", "//第一次按下按键设置LED1灯亮", "\n\n               {\n\n           LED1= ", "1", ";\n\n           LED2= ", "0", ";\n\n\n              }\n\n         ", "if", "(KeyTouchtimes == ", "2", ") ", "//第二次按下按键设置为LED3,LED2,LED1倒                               序流水闪烁", "\n\n               {\n\n           LED1 = !LED1;\n\n           ", "Delay", "(", "20000", ");\n\n           LED2 = !LED2;\n\n           ", "Delay", "(", "20000", ");\n\n\n \n\n               }\n\n          ", "if", "(KeyTouchtimes == ", "3", ")  ", "//第三次按下按键设置为LED1,LED2,LED3                                  顺序流水闪烁", "\n\n               {\n\n           LED1 = !LED1;\n\n           ", "Delay", "(", "20000", ");\n\n           LED2 = !LED2;\n\n           ", "Delay", "(", "20000", ");\n\n\n\n                }\n\n         ", "if", "(KeyTouchtimes == ", "4", ") ", "//第四次按下按键设置为LED1,LED2,LED3全                               部关闭", "\n\n               {\n\n           LED1 = ", "0", ";\n\n           LED2 = ", "0", ";\n                ", "//关闭所有LED", "\n\n           KeyTouchtimes =", "0", ";           ", "//重置按键次数记录变量", "\n\n                }\n\n        }\n\n        }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;从描述看已经采取了排除法排除了电机与L298N&amp;#xff0c;但是没看到排除单片机引脚输出&amp;#xff0c;可用LED灯观察IO输出高低电平时亮熄状态判断。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["51寻迹小车一侧车轮突然无法驱动", ["本人初学者，在制作寻迹小车时遇到的问题，用51单片机最小模块为主体，L298N驱动电机，本来程序已经测试正常开始调试寻迹速度了，但是在改动了寻迹部分的代码，增加了几种检测情况之后，右侧两电机突然不驱动了，测试发现左侧两车轮完全正常，最小模块，L298N，寻迹模块指示灯也都正常反应，直接在L298N右侧两OUT口接电源右侧电机也均正常工作，判断电机应该没有问题。", "怀疑L298N或者与最小模块间的连线有问题，但是更换尝试了3个模块均是一样的结果，左侧完全正常，右侧没法驱动，只用最简单的测试代码驱动（去除寻迹仅指令OUT口输出）也是一样的结果， 排查了一下午还是想不通怎么回事，想请教各位，万分感谢。", "以下为主程序：", "\n", "#include <REGX52.H>", "\n\nsbit ", "IN1=P3^2;", "\nsbit ", "IN2=P3^3;", "\nsbit ", "ENA=P1^7;", "\nsbit ", "IN3=P1^0;", "\nsbit ", "IN4=P1^1;", "\nsbit ", "ENB=P3^6;", "\nsbit ", "LEFT1=P2^4;", "\nsbit ", "LEFT2=P2^3;", "\nsbit ", "RIGHT2=P2^2;", "\nsbit ", "RIGHT1=P2^1;", "\n//连接电机与单片机,定义传感器接口\nunsigned char ", "PWM_RIGHT=0;", "\n    unsigned char ", "PWM_LEFT=0;", "\n    unsigned int ", "time=0;//定义PWM变量", "\n\nvoid timer0()\n{\n    TMOD |=", "0", "x01;        //设置定时器", "0", "模式,工作方式", "1", "，仅用TR0打开启动\n    ", "TH0=(65536-10)/256;//时间基准0.01ms", "\n    ", "TL0=(65536-10)&256;", "\n    ", "EA", " = ", "1", ";\n    ", "ET0", " = ", "1", ";\n    ", "TF0", " = ", "0", ";        //清除TF0标志\n    ", "TR0", " = ", "1", ";        //定时器", "0", "开始计时\n}\n\n\n\nvoid go()//IN1.IN2控制左侧电机，IN3,IN4控制右侧电机，ENA为左侧，ENB为右侧\n{  \n    ", "IN1=1;", "\n    ", "IN2=0;//in1=1,in2=0时左电机正转", "\n    ", "IN3=1;", "\n    ", "IN4=0;//in3=1,in4=0时右电机正转", "\n    ", "PWM_LEFT=10;//以8为正常行驶，15为慢行驶，17为拐弯驱动轮/待测试", "\n    ", "PWM_RIGHT=10;", "\n}\nvoid left1()//直角转弯\n{\n    ", "IN1=0;", "\n    ", "IN2=1;", "\n    ", "IN3=1;", "\n    ", "IN4=0;", "\n    ", "PWM_LEFT=15;", "\n    ", "PWM_RIGHT=17;", "\n}\nvoid right1()//直角转弯\n    {\n    ", "IN1=1;", "\n    ", "IN2=0;", "\n    ", "IN3=0;", "\n    ", "IN4=1;", "\n", "PWM_LEFT=17;", "\n    ", "PWM_RIGHT=15;", "\n}\n    void right2()//右平滑转\n    {\n        ", "IN1=1;", "\n    ", "IN2=0;", "\n    ", "IN3=1;", "\n    ", "IN4=0;", "\n        ", "PWM_LEFT=17;", "\n    ", "PWM_RIGHT=10;", "\n    }\n        void left2()//左平滑转\n        {\n            ", "IN1=1;", "\n    ", "IN2=0;", "\n    ", "IN3=1;", "\n    ", "IN4=0;", "\n            ", "PWM_LEFT=10;", "\n    ", "PWM_RIGHT=17;", "\n        }\n    \nvoid stop()//配置直行，转弯，停止的电机参数\n    {\n    ", "IN1=0;", "\n    ", "IN2=0;", "\n    ", "IN3=0;", "\n    ", "IN4=0;", "\n", "PWM_LEFT=0;", "\n    ", "PWM_RIGHT=0;", "\n}\nvoid xingshi()\n{\n", "if", "(", "LEFT1==0&&LEFT2==0&&RIGHT1==0&&RIGHT2==0)//全部未检测到黑线", "\n    go();\n", "else", " ", "if", "(", "LEFT1==0&&LEFT2==1&&RIGHT1==0&&RIGHT2==1)//中央双检测到黑线", "\n    go();\n", "else", " ", "if", "(", "LEFT1==1&&LEFT2==1&&RIGHT1==1&&RIGHT2==1)//停车，全部检测到黑线", "\nstop();\n", "else", " ", "if", "(", "LEFT1==0&&LEFT2==1&&RIGHT1==0&&RIGHT2==0)//左侧平滑小弯，中央左侧检测到黑线", "\n    left2();\n", "else", " ", "if", "(", "LEFT1==1&&LEFT2==0&&RIGHT1==0&&RIGHT2==0)//左侧检测到黑线", "\n    left2();\n", "else", " ", "if", "(", "LEFT1==1&&LEFT2==1&&RIGHT1==0&&RIGHT2==0)//左侧直角，左侧双检测到黑线", "\n    left1();\n", "else", " ", "if", "(", "LEFT1==1&&LEFT2==1&&RIGHT1==0&&RIGHT2==1)//左侧直角，左侧，中央左侧检测到黑线", "\n    left1();\n", "else", " ", "if", "(", "LEFT1==0&&LEFT2==0&&RIGHT1==0&&RIGHT2==1)//右侧平滑小弯，中央右侧检测到黑线", "\n    right2();\n", "else", " ", "if", "(", "LEFT1==0&&LEFT2==0&&RIGHT1==1&&RIGHT2==0)//右侧检测到黑线", "\n    right1();\n", "else", " ", "if", "(", "LEFT1==0&&LEFT2==0&&RIGHT1==1&&RIGHT2==1)//右侧直角，右侧均检测到黑线", "\n    right1();\n", "else", " ", "if", "(", "LEFT1==0&&LEFT2==1&&RIGHT1==1&&RIGHT2==1)//右侧直角，中央右侧，右侧均检测到黑线", "\n    right1();\n}\nvoid main()\n{\n    \n    timer0();\n    while(", "1", ")\n    {\n    xingshi();\n    }\n\n\n}\n\nvoid time1() interrupt ", "1", " \n{\n", "TH0=(65536-10)/256;//时间基准0.01ms,循环100次，此时频率1khz", "\n    ", "TL0=(65536-10)&256;", "\n    time++;\n    ", "if", "(time>", "100", "){\n        ", "time=0;", "\n    }\n    ", "if", "(time<=PWM_RIGHT)//配置右侧电机\n    {\n", "ENB=1;", "    \n    }\n    ", "else", "{\n        ", "ENB=0;", "\n        }\n    ", "if", "(time<=PWM_LEFT)//配置左侧电机\n    {\n    ", "ENA=1;", "\n    }\n    ", "else", "{\n    ", "ENA=0;", "\n    }\n}\n    \n\n", "\n", "以下为测试时使用的简单驱动代码，因为之前也测试过别的部分所以有部分定义是多余的，使用该段代码测试时结果依然是左侧正常，右侧没反应。", "\n", "#include <REGX52.H>", "\n\nsbit ", "IN1=P3^2;", "\nsbit ", "IN2=P3^3;", "\nsbit ", "ENA=P1^7;", "\nsbit ", "IN3=P1^0;", "\nsbit ", "IN4=P1^1;", "\nsbit ", "ENB=P3^6;", "\nsbit ", "LEFT1=P2^4;", "\nsbit ", "LEFT2=P2^3;", "\nsbit ", "RIGHT2=P2^2;", "\nsbit ", "RIGHT1=P2^1;", "\n//连接电机与单片机,定义传感器接口\nunsigned char ", "PWM_RIGHT=0;", "\n    unsigned char ", "PWM_LEFT=0;", "\n    unsigned int ", "time=0;//定义PWM变量", "\n\nvoid timer0()\n{\n    TMOD |=", "0", "x01;        //设置定时器", "0", "模式,工作方式", "1", "，仅用TR0打开启动\n    ", "TH0=(65536-10)/256;//时间基准0.01ms", "\n    ", "TL0=(65536-10)&256;", "\n    ", "EA", " = ", "1", ";\n    ", "ET0", " = ", "1", ";\n    ", "TF0", " = ", "0", ";        //清除TF0标志\n    ", "TR0", " = ", "1", ";        //定时器", "0", "开始计时\n}\n\n\nvoid time1() interrupt ", "1", " \n{\n", "TH0=(65536-10)/256;//时间基准0.01ms,循环100次，此时频率1khz", "\n    ", "TL0=(65536-10)&256;", "\n    time++;\n    ", "if", "(time>", "100", "){\n        ", "time=0;", "\n    }\n    ", "if", "(time<=PWM_RIGHT)//配置右侧电机\n    {\n", "ENB=1;", "    \n    }\n    ", "else", "{\n        ", "ENB=0;", "\n        }\n    ", "if", "(time<=PWM_LEFT)//配置左侧电机\n    {\n    ", "ENA=1;", "\n    }\n    ", "else", "{\n    ", "ENA=0;", "\n    }\n}\n    void stop()//配置直行，转弯，停止的电机参数\n    {\n    ", "IN1=0;", "\n    ", "IN2=0;", "\n    ", "IN3=0;", "\n    ", "IN4=0;", "\n", "PWM_LEFT=0;", "\n    ", "PWM_RIGHT=0;}", "\nvoid go()//IN1.IN2控制左侧电机，IN3,IN4控制右侧电机，ENA为左侧，ENB为右侧\n{  \n    ", "IN1=1;", "\n    ", "IN2=0;//in1=1,in2=0时左电机正转", "\n    ", "IN3=1;", "\n    ", "IN4=0;//in3=1,in4=0时右电机正转", "\n    ", "PWM_LEFT=10;//以13为正常行驶，9为慢行驶，", "\n    ", "PWM_RIGHT=10;", "\n}\nvoid main()\n{\n    \n    \n timer0();\n    while(", "1", ")\n    {\n        ", "PWM_RIGHT=10;", "\n        ", "IN3=1;", "\n        ", "IN4=0;", "\n        ", "PWM_LEFT=10;", "\n        ", "IN1=1;", "\n        ", "IN2=0;", "\n        \n    }\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "你的根节点是不是有 state='closed' 属性？\r\n\r\n【update】 \r\n\r\n    &lt;root&gt;\r\n    \t&lt;item id=\"root_1\" parent_id=\"0\" state=\"closed\"&gt;\r\n    \t\t&lt;content&gt;\r\n    \t\t\t&lt;name&gt;&lt;![CDATA[Node 1]]&gt;&lt;/name&gt;\r\n    \t\t&lt;/content&gt;\r\n    \t&lt;/item&gt;\r\n    &lt;/root&gt;\r\n\r\n去掉那个state=\"closed\"（注意，改成open是不行的），否则这个节点会被视为还有子节点，jstree会再次调用你的ajax配置的url以加载子节点的数据。 你也可以修改你的url的服务器实现，根据父节点的id返回不同的元素以实现逐级打开的效果。 并设置correct_state标志以实现节点状态的自动更正。", "Konwledge_Point": "循环控制", "Question": ["jsTree的问题，请大神指点。", ["我的jsp代码", "\n\n", "\n\n", "js代码", "\n$(function _tree() {", "\n    $.ajaxSetup({cache:false});//缓存区清理", "\n        $(\"#treeDiv\")", "\n            .bind(\"select_node.jstree\", function(event, data){", "\n                if($(\"#treeDiv\").jstree(\"is_closed\")) {", "\n                    $(\"#treeDiv\").jstree(\"open_node\");", "\n                } else {", "\n                    $(\"#treeDiv\").jstree(\"close_node\");", "\n                }", "\n            })", "\n        .jstree({", "\n            \"xml_data\" : {", "\n                \"ajax\" : {", "\n                    \"url\" : 'url',", "\n                    \"error\" : function(){", "\n                        $(\"#treeDiv\").html(", "\n                            \"", "\" +", "\n                            \"初始化失败，", "请刷新重试...\" +", "\n                            \"", "\"", "\n                        );", "\n                    }", "\n                },", "\n                \"xsl\" : \"flat\"", "\n            },", "\n            \"plugins\" : [ \"themes\",\"ui\", \"xml_data\"]", "\n        })", "\n});\n\n", "后台查出来的数据在控制台的：", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n\n", "<![CDATA[外系统资源]]>", "\n也就是说，只有一个根节点。所以前面页面呈现下图：", "\n\n", "但是当我点击那个‘-’号的时候，就会出现下面的情况：", "\n\n", "它会无线循环下去，我的初步想法是去掉那个虚线的图标，或者在虚线那个“+”和“-”上加个控制事件，但是，这个办法行不通，首先这个符号是个ins，和下面展开的ins用个同一个class，试了不少办法，JSTREE的API也不全，所以没办法了。求助大神指点。"]], "Tag": "程序设计"}
{"Answer": "第一种写法是错误的啊\r\n\r\ndiv.style.visibility=\"hidden\";   //这样写才正确\r\n\r\ndiv.style是一个对象，不是字符串值\r\n\r\n也可以这样写\r\ndiv.style.cssText=\"visibility:hidden\";", "Konwledge_Point": "循环控制", "Question": ["关于设置div的属性值的问题", ["我在一个jsp页面通过一个按钮添加一个div,这个按钮的onclick方法执行一段js代码:", "\n\n", " ", "\n\n", " var temparray=new Array(\"行程:\",\"吃:\",\"住:\");", "    var div=document.createElement(\"div\");", "  var table=document.createElement(\"table\");", "  for(var i=0;i<3;i++){", "    var tr=document.createElement(\"tr\");", " var td1=document.createElement(\"td\");", " td1.innerHTML=temparray[i];", " var td2=document.createElement(\"td\");", " td2.innerHTML=\"<textarea  ></textarea>\";", " tr.insertBefore(td1,null);", " tr.insertBefore(td2,null);", "   table.insertBefore(tr,null);", "  }", "  div.insertBefore(table,null);", "  div.style=\"visibility:hidden\";      //第一种写法", " // div.setAttribute(\"style\",\"visibility:hidden\");   //第二种写法", "  document.body.insertBefore(div,null);", "\n\n", " ", "\n\n", "使用第一种写法时不能将div加进来,使用第二种写法却可以加进来,这两种写法有什么区别?", "\n\n", "请哪位大哥指教.......谢谢..急用.", "\n\n", " ", "问题补充：", " 还有一个问题", "我在jsp页面用visibility这个属性控制不同的div显示出现问题,用display这个属性却可以,但我在html页面用visibility却可以", "我用一个for循环把几个div隐藏 用visibility这个属性,最后单击不同的按钮要这几个div中指定的一个显示,无法正常显示,换成display这个属性就可以了  .同样的效果在html页面两 个属性都可以.这有什么区别吗?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;提示很清楚  fd 没有定义啊&amp;#xff0c;把55行 int fd&amp;#61;0&amp;#xff1b;改成全局的&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["嵌入式代码编译出错，请问如何修改？", ["问题是：3、LED+图片加载:", "    初始化设备（4个灯全灭），1s后，进行跑马灯三次，最后加载一张图片（800*480像素，24位bmp格式）。", "\n", "/*\n    3、LED+图片加载:\n    初始化设备（4个灯全灭），1s后，进行跑马灯三次，最后加载一张图片（800*480像素，24位bmp格式）。\n\n*/", "\n\n\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<fcntl.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n", "#", "include", " ", "<sys/types.h>", "\n", "#", "include", " ", "<sys/stat.h>", "\n", "#", "include", " ", "<fcntl.h>", "\n\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<signal.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<unistd.h>", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "<syslog.h>", "\n", "#", "include", " ", "<errno.h>", "\n", "#", "include", " ", "<linux/input.h>", "\n\n", "#", "include", " ", "<fcntl.h>", "\n", "#", "include", " ", "<sys/types.h>", "\n", "#", "include", " ", "<sys/stat.h>", "\n", "#", "include", " ", "<sys/mman.h>", "\n", "#", "include", " ", "<stdbool.h>", "\n\n", "#", "include", " ", "<linux/fb.h>", "\n", "#", "include", " ", "<sys/mman.h>", "\n", "#", "include", " ", "<sys/ioctl.h>", "\n  \n", "#", "include", " ", "<string.h>", " ", "\n\n", "#", "define", " TEST_MAGIC ", "'x'", "                           ", "\n", "#", "define", " TEST_MAX_NR 4                            ", "\n\n", "#", "define", " LED1 _IO(TEST_MAGIC, 0)              ", "\n", "#", "define", " LED2 _IO(TEST_MAGIC, 1)", "\n", "#", "define", " LED3 _IO(TEST_MAGIC, 2)", "\n", "#", "define", " LED4 _IO(TEST_MAGIC, 3)", "\n", "#", "define", " LED(i) _IO(TEST_MAGIC, i)", "//做循环用", "\n\n", "//控制灯开关", "\n", "int", " ", "openorcloseLed", "()", ";", "//控制灯全开或全关 ,正常返回1，错误返回-1 ", "\n", "int", " ", "openorcloseLed", "(", "int", " arg)", "{\n    \n    ", "int", " fd;\n    fd = ", "open", "(", "\"/dev/Led\"", ",O_RDWR);\n    ", "if", "(fd<", "0", ")\n    {\n        ", "printf", "(", "\"打开驱动文件失败，请检查是否有该驱动或者路径是否正确\\n\"", ");\n        ", "return", " ", "-1", ";\n    }\n    ", "for", "(", "int", " i=", "0", ";i<", "4", ";i++){\n        ", "ioctl", "(fd, ", "LED", "(i), arg);\n    }\n    ", "return", " ", "1", ";\n}\n\n\n\n", "int", " ", "tpdk", "()", "{\n    ", "int", " lcd = ", "open", "(", "\"/dev/fb0\"", ",O_RDWR);\n        ", "int", " open_bmp = ", "open", "(", "\"./c.bmp\"", ",O_RDWR);\n        ", "char", " bmp24_buf[", "800", "*", "480", "*", "3", "]={", "0", "};\n    ", "char", " bmp32_buf[", "800", "*", "480", "*", "4", "]={", "0", "};\n\n    ", "lseek", "(open_bmp,", "54", ",SEEK_SET);\n\n    ", "int", " i,j;\n    ", "read", "(open_bmp,bmp24_buf,", "800", "*", "480", "*", "3", ");\n    ", "for", "(i=", "0", ",j=", "0", ";i<", "800", "*", "480", "*", "4", ";i+=", "4", ",j+=", "3", ")\n    {\n            bmp32_buf[i+", "2", "] = bmp24_buf[j+", "2", "];\n            bmp32_buf[i+", "1", "] = bmp24_buf[j+", "1", "];\n            bmp32_buf[i+", "0", "] = bmp24_buf[j+", "0", "];\n    }\n    ", "write", "(lcd,bmp32_buf,", "800", "*", "480", "*", "4", ");\n    ", "close", "(lcd);\n    ", "return", " ", "1", ";\n}\n\n\n", "//---------------------------------------------------------------------------", "\n", "int", " ", "main", "()", "\n", "{\n    ", "/*\n    3、LED+图片加载:\n    初始化设备（4个灯全灭），1s后，进行跑马灯三次，最后加载一张图片（800*480像素，24位bmp格式）。    \n\n    */", "    \n    \n    ", "openorcloseLed", "(", "1", ");", "//LED全灭", "\n    ", "sleep", "(", "1", ");\n    \n", "//--------------------------------------------------------------------", "\n    ", "for", "(", "int", " i=", "0", ";i<", "5", ";i++){\n    ", "ioctl", "(fd,LED1,", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "ioctl", "(fd,LED1,", "1", ");\n    ", "ioctl", "(fd,LED2,", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "ioctl", "(fd,LED2,", "1", ");\n    ", "ioctl", "(fd,LED3,", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "ioctl", "(fd,LED3,", "1", ");\n    ", "ioctl", "(fd,LED4,", "0", ");\n    ", "sleep", "(", "1", ");\n    ", "ioctl", "(fd,LED4,", "1", ");\n    ", "sleep", "(", "1", ");\n    }\n\n    ", "tpdk", "();\n    ", "return", " ", "0", "; \n}\n\n", "\n", "编译出现如图所示的错误，请问如何修改代码呢？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题解决了&amp;#xff1a;权限我就说都启用SYSTEM用户了&amp;#xff0c;也设置访问权限了&amp;#xff0c;不可能有问题&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;自 Visual Studio 2012 起&amp;#xff0c;C# 应用程序项目默认为“任何首选 CPU 32 位”。如果在 64 位 Windows 操作系统上运行此类可执行文件&amp;#xff0c;则它将作为 32 位进程启动&amp;#xff0c;并受 WOW64 文件系统重定向的影响。&lt;/p&gt;\n&lt;p&gt;当 64 位 Windows 上的 32 位进程尝试访问“C&amp;#xff1a;\\Windows\\System32”时&amp;#xff0c;WOW64 会将其重定向到“C&amp;#xff1a;\\Windows\\SysWOW64”。有几种方法可以访问真正的“C&amp;#xff1a;\\Windows\\System32”目录&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;使用“C&amp;#xff1a;\\Windows\\SysNative”&amp;#xff0c;WOW64将其重定向到“C&amp;#xff1a;\\Windows\\System32”&amp;#xff0c;即使它没有出现在目录列表中。这是一种简单的方法&amp;#xff0c;不太可能引起问题。&lt;br /&gt;使用 Wow64DisableWow64FsRedirection 和 Wow64RevertWow64FsRedirection。&lt;br /&gt;使用 64 位进程。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["C# 因权限原因找不到文件夹，如何解决？", ["问题遇到的现象和发生背景", "\n", "最近在做一个纯HWID的激活项目：", "https://github.com/MIAIONE/SPPClient", "其中KeyManager.cs重写了部分slmgr.vbs，就是通过WMI直接实现了，因为cscript获取输出和执行process类都不太好控制", "其中我重写了slmgr中循环遍历文件夹来安装xrm-ms的代码", "系统环境：WIN11，VS2022，.NET6 SDK", "\n", "问题相关代码，请勿粘贴截图", "\n", "slmgr源实现方法代码：", "\n", "\n", "Private", " ", "Sub", " InstallLicenseFiles (strParentDirectory, fso)\n    ", "Dim", " file, files, folder, subFolder\n\n    ", "Set", " folder = fso.GetFolder(strParentDirectory)\n    ", "Set", " files = folder.Files\n\n    ", "' Install all license files in folder", "\n    ", "For", " ", "Each", " file ", "In", " files\n        ", "If", " ", "Right", "(file.Name, ", "7", ") = ", "\".xrm-ms\"", " ", "Then", "\n            InstallLicense strParentDirectory & ", "\"\\\"", " & file.Name\n        ", "End", " ", "If", "\n    ", "Next", "\n\n    ", "For", " ", "Each", " subFolder ", "in", " folder.SubFolders\n        InstallLicenseFiles subFolder, fso\n    ", "Next", "\n", "End", " ", "Sub", "\n\n", "Private", " ", "Sub", " ReinstallLicenses()\n    ", "Dim", " shell, fso, strOemFolder\n    ", "Dim", " strSppTokensFolder, folder, subFolder\n    ", "Set", " shell = WScript.", "CreateObject", "(", "\"WScript.Shell\"", ")\n    ", "Set", " fso = ", "CreateObject", "(", "\"Scripting.FileSystemObject\"", ")\n\n    strOemFolder = shell.ExpandEnvironmentStrings(", "\"%SystemRoot%\"", ") & ", "\"\\system32\\oem\"", "\n    strSppTokensFolder = shell.ExpandEnvironmentStrings(", "\"%SystemRoot%\"", ") & ", "\"\\system32\\spp\\tokens\"", "\n\n    LineOut GetResource(", "\"L_MsgReinstallingLicenses\"", ")\n\n    ", "Set", " folder = fso.GetFolder(strSppTokensFolder)\n\n    ", "For", " ", "Each", " subFolder ", "in", " folder.SubFolders\n        InstallLicenseFiles subFolder, fso\n    ", "Next", "\n\n    ", "If", " (fso.FolderExists(strOemFolder)) ", "Then", "\n        InstallLicenseFiles strOemFolder, fso\n    ", "End", " ", "If", "\n\n    LineOut GetResource(", "\"L_MsgLicensesReinstalled\"", ")\n", "End", " ", "Sub", "\n\n", "\n", "C#实现（核心遍历文件的代码）：", "\n", "\n", "private", " static List<", "string", "> ", "GetAllXrmMSFiles(", "string", " ", "rootPath", ")", "\n        {\n            return Directory.", "EnumerateFiles(", "rootPath", ", ", "\"*.xrm-ms\"", ", SearchOption.AllDirectories)", ".", "ToList()", ";\n        }\n", "\n", "运行结果及报错内容", "\n", "注意这两个目录：", "  strOemFolder = shell.ExpandEnvironmentStrings(\"%SystemRoot%\") & \"\\system32\\oem\"", "    strSppTokensFolder = shell.ExpandEnvironmentStrings(\"%SystemRoot%\") & \"\\system32\\spp\\tokens\"", "oem基本上不是品牌机不会有，spp\\tokens肯定会有", "有人试过了，WIN10可以通过管理员CMD 用xcopy复制出来strSppTokensFolder", "WIN11资源管理器也可以右键复制出来，只不过要先改文件夹安全设置", "\n", "C#既然遍历不出来，强制直接new 一个已知存在的路径，用NSUDO用SYSTEM账户+所有权限开启+C#提前添加账户获得完全控制试过了", "但是，都直接报 NotFoundDirectory", "错误信息：", "Unhandled exception. System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Windows\\System32\\spp\\tokens\\issuance'.", "   at System.IO.Enumeration.FileSystemEnumerator", "1.CreateDirectoryHandle(String path, Boolean ignoreNotFound)    at System.IO.Enumeration.FileSystemEnumerator", "1.Init()", "   at System.IO.Enumeration.FileSystemEnumerator", "1..ctor(String directory, Boolean isNormalized, EnumerationOptions options)    at System.IO.Enumeration.FileSystemEnumerable", "1..ctor(String directory, FindTransform transform, EnumerationOptions options, Boolean isNormalized)", "   at System.IO.Enumeration.FileSystemEnumerableFactory.FileInfos(String directory, String expression, EnumerationOptions options, Boolean isNormalized)", "   at System.IO.DirectoryInfo.InternalEnumerateInfos(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options)", "   at System.IO.DirectoryInfo.GetFiles(String searchPattern, EnumerationOptions enumerationOptions)", "   at System.IO.DirectoryInfo.GetFiles()", "   at SPPClient.Program.Main(String[] args) in D:", ".NET_6\\SPPClient\\Program.cs:line 384", "\n", "而且不是完全遍历不了，里面C:\\Windows\\System32\\spp\\tokens\\skus\\csvlk-pack是可以的，但就只有这一个文件夹和pkeyconfig、legacy可以，其他文件夹当不存在就跳过去了", "\n", "我的解答思路和尝试过的方法", "\n", "我用了NSUDO的API和DM模式，这个DM模式我试过，连 System Volume Information 都能遍历，今天却不灵了", "首先上面简写自动递归的方法是很好用的，我已经试过手写递归方法了，不行", "而且根据这位老哥", "https://www.cnblogs.com/OpenCoder/p/10482974.html", "\n", "我想要达到的结果", "\n", "其实最终目的就是读取所有xrm-ms里面的内容，也就是说，复制出来再读取也可以，我想在C#里完全实现，直接用slmgr肯定是不行的，这样没有事件驱动，看异常应该可以通过直接引用win32api，如果有纯C#解决办法就更好了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;请问是按学号查不到吗&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["为什么添加信息过后查询不到", ["\n", "/**\n * ", "@Title", ":StudentMenu\n * ", "@author", ":LJJ\n * ", "@version", ":2.0\n * ", "@date", ":2021/12/10\n */", "\n", "package", " com.tomato.www;\n\n", "import", " java.util.Scanner;\n\n", "public", " ", "class", " ", "StudentMenu", " {\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        zero();\n        studentmenu();\n    }\n\n    ", "// 定义一个数组", "\n    ", "static", " String[][] stu = ", "new", " ", "String", "[", "10", "][", "4", "];\n    ", "private", " ", "static", " String stunum;\n\n    ", "// 初始化数组", "\n    ", "private", " ", "static", " ", "void", " ", "zero", "()", " {\n        stu[", "0", "] = ", "new", " ", "String", "[] { ", "\"001\"", ", ", "\"张三\"", ", ", "\"21级1班\"", ", ", "\"软件技术\"", " };\n        stu[", "1", "] = ", "new", " ", "String", "[] { ", "\"002\"", ", ", "\"李四\"", ", ", "\"21级1班\"", ", ", "\"软件技术\"", " };\n        stu[", "2", "] = ", "new", " ", "String", "[] { ", "\"003\"", ", ", "\"王五\"", ", ", "\"21级1班\"", ", ", "\"软件技术\"", " };\n    }\n\n    ", "// 显示所有学生信息", "\n    ", "private", " ", "static", " ", "void", " ", "showstudent", "()", " {\n        System.out.println(", "\"学号\"", " + ", "\"\\t\"", " + ", "\"姓名\"", " + ", "\"\\t\"", " + ", "\"班级\"", " + ", "\"\\t\"", " + ", "\"专业\"", ");\n        ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < stu.length; i++) {\n            ", "for", " (", "int", " ", "j", " ", "=", " ", "0", "; j < stu[i].length; j++) {\n                ", "if", " (stu[i][j] != ", "null", ") {", "// 如果数组元素不为空，则打印出来", "\n                    System.out.print(stu[i][j] + ", "\"\\t\"", ");\n                }\n            }\n            ", "// 使用println()方法控制外层循环进行换行", "\n            System.out.println(", "\"\"", ");\n        }\n    }\n\n    ", "// 选择菜单", "\n    ", "private", " ", "static", " ", "void", " ", "studentmenu", "()", " {\n        System.out.println(", "\"学生信息管理系统\"", ");\n        System.out.println(", "\"---------------------\"", ");\n        System.out.println(", "\"1、新增学生信息\"", ");\n        System.out.println(", "\"2、删除学生信息\"", ");\n        System.out.println(", "\"3、修改学生信息\"", ");\n        System.out.println(", "\"4、查询学生信息\"", ");\n        System.out.println(", "\"请您输入编号，进行选择\"", ");\n        ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "String", " ", "input", " ", "=", " scanner.nextLine();\n        ", "// 选择结构语句switch语句，进行选择", "\n        ", "switch", " (input) {\n        ", "case", " ", "\"1\"", ":\n            addstudent();\n            ", "break", ";\n        ", "case", " ", "\"2\"", ":\n            deletestudent();\n            ", "break", ";\n        ", "case", " ", "\"3\"", ":\n            editstudent();\n            ", "break", ";\n        ", "case", " ", "\"4\"", ":\n            searchstudent();\n            ", "break", ";\n        ", "default", ":\n            System.out.println(", "\"您输入的编号错误，请重新输入\"", ");\n            studentmenu();\n            ", "break", ";\n        }\n    }\n\n    ", "// 添加学生信息的菜单", "\n    ", "private", " ", "static", " ", "void", " ", "addstudent", "()", " {\n        ", "int", " ", "rowIndex", " ", "=", " selectstudent();\n        ", "// 输入学生信息", "\n        ", "if", " (rowIndex < ", "0", ") {\n            ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n            System.out.println(", "\"请输入添加的姓名\"", ");\n            ", "String", " ", "stuname", " ", "=", " scanner.nextLine();\n            System.out.println(", "\"请输入添加的班级\"", ");\n            ", "String", " ", "stuclass", " ", "=", " scanner.nextLine();\n            System.out.println(", "\"请输入添加的专业\"", ");\n            ", "String", " ", "major", " ", "=", " scanner.nextLine();\n            ", "// 用循环与条件增加信息", "\n            ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < stu.length; i++) {\n                ", "if", " (stu[i][", "0", "] == ", "null", ") {\n                    stu[i][", "0", "] = stunum;\n                    stu[i][", "1", "] = stuname;\n                    stu[i][", "2", "] = stuclass;\n                    stu[i][", "3", "] = major;\n                    System.out.println(", "\"添加成功！！！\"", ");\n                    ", "break", ";\n                }\n            }\n        } ", "else", " {\n            System.out.println(", "\"学生学号已经存在，请重新输入！\"", ");\n            studentmenu();\n        }\n        studentmenu();\n    }\n\n    ", "// 删除学生信息的菜单", "\n    ", "private", " ", "static", " ", "void", " ", "deletestudent", "()", " {\n        ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "int", " ", "i", " ", "=", " selectstudent();\n        ", "// 如果i>大于-1，代表学号在查询范围之内", "\n        ", "if", " (i > -", "1", ") {\n            System.out.println(", "\"请确认是否删除，输入Y/N\"", ");\n            ", "String", " ", "choice", " ", "=", " scanner.nextLine();\n            ", "if", " (choice.equals(", "\"Y\"", ") || choice.equals(", "\"y\"", ")) {\n                ", "for", " (", "int", " ", "j", " ", "=", " ", "0", "; j < stu[i].length; j++) {\n                    stu[i][j] = ", "null", ";", "// 令查询的学号学生信息设为空", "\n                }\n                System.out.println(", "\"删除成功！\"", ");\n            }\n        } ", "else", " {\n            System.out.println(", "\"输入的学号不存在\"", ");", "// 输入的学号不匹配，执行", "\n            studentmenu();\n        }\n        studentmenu();\n    }\n\n    ", "// 修改学生信息的菜单", "\n    ", "private", " ", "static", " ", "void", " ", "editstudent", "()", " {\n        ", "// 定义一个flag为布尔类型的变量", "\n        ", "boolean", " ", "flag", " ", "=", " ", "false", ";\n        System.out.println(", "\"请输入学号\"", ");\n        ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "String", " ", "stunum", " ", "=", " scanner.nextLine();\n        ", "// 用循环与条件查找信息", "\n        ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < stu.length; i++) {\n            ", "if", " (stu[i][", "0", "] != ", "null", ") {\n                ", "if", " (stu[i][", "0", "].equals(stunum.trim())) {\n                    flag = ", "true", ";", "// 如果为flag=true，代表学号存在，即可修改", "\n                    System.out.println(stu[i][", "0", "] + ", "\"\\t\"", " + stu[i][", "1", "] + ", "\"\\t\"", " + stu[i][", "2", "] + ", "\"\\t\"", " + stu[i][", "3", "]);\n                    editTwo(i);\n                }\n            }\n        }\n        ", "// 如果为flag=flase，代表学号不存在，即不可修改", "\n        ", "if", " (!flag) {\n            System.out.println(", "\"输入的学号不存在\"", ");\n            studentmenu();\n        }\n    }\n\n    ", "// 修改学生信息的主菜单", "\n    ", "private", " ", "static", " ", "void", " ", "editTwo", "(", "int", " i)", " {\n        ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        System.out.println(", "\"1、姓名\"", ");\n        System.out.println(", "\"2、班级\"", ");\n        System.out.println(", "\"3、专业\"", ");\n        System.out.println(", "\"请您输入编号，进行修改\"", ");\n        ", "String", " ", "editIndex", " ", "=", " scanner.nextLine();\n        ", "// 选择结构语句switch语句，进行选择", "\n        ", "switch", " (editIndex) {\n        ", "case", " ", "\"1\"", ": {\n            editOne(i, ", "1", ");\n            ", "break", ";\n        }\n        ", "case", " ", "\"2\"", ": {\n            editOne(i, ", "2", ");\n            ", "break", ";\n        }\n        ", "case", " ", "\"3\"", ": {\n            editOne(i, ", "3", ");\n            ", "break", ";\n        }\n        ", "default", ":\n            System.out.println(", "\"输入的修改编号不存在，请重新输入！\"", ");\n            studentmenu();\n            ", "break", ";\n        }\n    }\n\n    ", "// 修改学生信息菜单中定义rowIndex与columnIndex", "\n    ", "private", " ", "static", " ", "void", " ", "editOne", "(", "int", " rowIndex, ", "int", " columnIndex)", " {\n        System.out.println(", "\"请输入要修改的内容\"", ");\n        ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "String", " ", "editContent", " ", "=", " scanner.nextLine();\n        ", "// 修改学生信息菜单中将输入修改的内容赋值到数组中", "\n        stu[rowIndex][columnIndex] = editContent;\n        System.out.println(", "\"修改成功！\"", ");\n        studentmenu();\n    }\n\n    ", "// 查询学生信息菜单", "\n    ", "private", " ", "static", " ", "void", " ", "searchstudent", "()", " {\n        ", "int", " ", "i", " ", "=", " selectstudent();\n        ", "// 如果i>大于-1，代表学号在查询范围之内", "\n        ", "if", " (i > -", "1", ") {\n            System.out.print(stu[i][", "0", "] + ", "\"\\t\"", " + stu[i][", "1", "] + ", "\"\\t\"", " + stu[i][", "2", "] + ", "\"\\t\"", " + stu[i][", "3", "] + ", "\"\\t\"", ");\n        } ", "else", " {\n            System.out.println(", "\"输入的学号不存在\"", ");", "// 输入的学号不匹配，执行", "\n        }\n        studentmenu();\n    }\n\n    ", "// 输入学生学号查询", "\n    ", "private", " ", "static", " ", "int", " ", "selectstudent", "()", " {\n        ", "// 定义rowIndex为-1，代表没有数据", "\n        ", "int", " ", "rowIndex", " ", "=", " -", "1", ";\n        System.out.println(", "\"请输入学生的学号\"", ");\n        ", "Scanner", " ", "scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "String", " ", "stunum", " ", "=", " scanner.nextLine();\n        ", "// 用循环与条件查找信息", "\n        ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < stu.length; i++) {\n            ", "if", " (stu[i][", "0", "] != ", "null", ") {\n                ", "if", " (stu[i][", "0", "].equals(stunum.trim())) {\n                    rowIndex = i;\n                }\n            }\n        }\n        ", "return", " rowIndex;\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "[quote]我们那几台机器上的weblogic虽然配置都一样，但都是彼此独立的，我想知道的其实是，为什么我这里出错，会连累到他们。他们的server上虽然也有与送信模块相关的基础配置，但并没有发布和运行我的测试程序。我现在想有可能是数据库的原因，因为我们使用的数据库是一个，难道我在发信的时候，程序向数据库插入了数据，然后启动server的时候，发信模块会首先检索数据库，以至于我们每次启动server，每个人都会出异常。但我看代码也没发现发信模块与数据库有关联，还得继续调查。[/quote]\r\n先把与数据库配置相关的应用先停掉。只跑JMS相关的。请再试试！ \r\n[quote]如果跟数据库没有关系的话，为什么JMS会一直发那？它是在哪里记录有发送失败的消息的？因为重启server时它还是会重发消息。[/quote]\r\nJMS肯定要做persistence的，以保证Message不会丢失。至于是持久化到数据库还是文件，曾经见过两种方式都有。这就是为何要重发的原因。怎么设置重发间隔，还是Weblogic的参考说明吧！", "Konwledge_Point": "循环控制", "Question": ["关于JMS的一个怪异的问题（高分求教）", ["最近项目里有一个邮件模块，过程基本上就是通过JMS调用EJB来发信。", "\n工程是发布到weblogic8.1上，MailSession，JMS和EJB都配好了。", "\n开始时没有问题，但有一次我写了一个测试程序来发信，那封信的各个项目（发信人收信人等等）都是乱填的。", "\n结果信没法出去，程序出现异常，weblogic控制台开始不停的输出异常信息，然后我就把weblogic给停了。", "\n第二天，我再启动weblogic，控制台上又开始疯狂的输出异常，感觉就像死循环。", "\n因为我们要进行单体测试，所以我们小组里的每个人的机器上都有一份weblogic服务器的拷贝，基础配置都是一样的，以便在自己的机器上发布程序来测试，避免互相影响。", "\n现在最奇怪的地方就在这里，自从我这边server发疯之后，其他人的server启动时也都开始发疯，最后没有办法，只好把发布的EJB给删掉，服务器才启动起来。", "\n个人感觉是JMS的问题，信息发送失败，JMS会不停地继续尝试吗？如何关闭？", "\n\n", "不知谁能给解释一下，或给一个解决方案，不胜感激。", "\n[b]问题补充：[/b]", "\nto lewhwa：", "\n\n", "我们那几台机器上的weblogic虽然配置都一样，但都是彼此独立的，我想知道的其实是，为什么我这里出错，会连累到他们。他们的server上虽然也有与送信模块相关的基础配置，但并没有发布和运行我的测试程序。我现在想有可能是数据库的原因，因为我们使用的数据库是一个，难道我在发信的时候，程序向数据库插入了数据，然后启动server的时候，发信模块会首先检索数据库，以至于我们每次启动server，每个人都会出异常。但我看代码也没发现发信模块与数据库有关联，还得继续调查。", "\n\n", "如果跟数据库没有关系的话，为什么JMS会一直发那？它是在哪里记录有发送失败的消息的？因为重启server时它还是会重发消息。", "\n\n", "[b]问题补充：[/b]", "\n找到问题的症结所在了。共享一下：", "\nWeblogic确实会将将JMS发送信息记录下来，有数据库和文件系统两种方式。", "\n我这边是记录在数据库中，在配置JMS的时候，会建立JMSStore，weblogic会要求输入一个数据库连接池名。然后，weblogic会自动的在数据库中建立", "\nmyserverjmsstore", "\njms_storewlstore", "\nmyserverjmsstore", "\n三张表，来存储JMS信息。", "\n（我是照着环境构筑书构筑的环境，根本就没看这些配置是啥意思，哎！）", "\n\n", "这样的话，上面怪异现象的原因就不难解释了。", "\n\n", "to：lewhwa", "\n感谢你的回答，在Weblogic 的JMS设置里确实找到了重发设置，我那里面默认被设置成了-1，意思是无限重发，结果server就疯了，呵呵。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;去掉了下标&amp;#xff0c;全用指针。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\nvoid  fun( char *a, char *h, char *p)\n{\n    //--ksstart&amp;#xff08;注释不能删除&amp;#xff09;—\n    //考生代码从此开始编写\n    // 跳过尾部的星号\n    while (p &amp;gt; h &amp;amp;&amp;amp; *p &amp;#61;&amp;#61; &amp;#39;*&amp;#39;)\n        --p;\n\n    while (h &amp;lt; p){\n        if (*h &amp;#61;&amp;#61; &amp;#39;*&amp;#39;) {\n            //当数组中间出现*时&amp;#xff0c;删除后要产生如下三种变化 \n            //一·数据末尾指针p向前移动一位 \n            p--;\n            \n            //二·所有数据向前移动一位 \n            for (char* q &amp;#61; h; *q !&amp;#61; &amp;#39;\\0&amp;#39;; &amp;#43;&amp;#43;q){\n                *q &amp;#61; *(q &amp;#43; 1);\n            }\n        }\n        else {\n            //三·控制操作的循环数\n            &amp;#43;&amp;#43;h;\n        }\n    }\n//--ksend---\n}\n\nint main()\n{ \n    //自己编写main()\n    char a[] &amp;#61; {&amp;#34;***a*bc***d*ef****&amp;#34;};\n    char *h, *p;\n    h &amp;#61; &amp;amp;a[3];\n    p &amp;#61; &amp;amp;a[13];\n    fun(a, h, p);\n    printf(&amp;#34;%s\\n&amp;#34;, a);\n    \n    char b[] &amp;#61; {&amp;#34;***a*f****&amp;#34;};\n    h &amp;#61; &amp;amp;b[3];\n    p &amp;#61; &amp;amp;b[5];\n    fun(b, h, p);\n    printf(&amp;#34;%s\\n&amp;#34;, b);\n    \n    return 0; \n}\n\n// Output\n***abcdef****\n***af****\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言 一个指针相关问题", ["学校的一个习题，我自己验证无误，但过不了学校的考试系统。", "\n\n", "题目如下：", "\n\n", "假定输入的字符串中只包含字母和号。请编写函数fun，它的功能是: 除了字符串前导和尾部的号之外, 将串中其他*号全部删除。形参h已指向字符串中第一个字母，形参p已指向字符串中最后一个字母。在编写函数时，不得使用C语言提供的字符串函数。", "\n\n", "在编写函数时，不得使用C语言提供的字符串函数。", "\n\n", "注意: 部分源程序在文件PROG1.C文件中。", "\n\n", "主函数可任意改动，仅在函数fun的花括号中填入你编写的若干语句。", "\n\n", "\n", "#include <stdio.h>\n#include <conio.h>\nvoid  fun( char *a, char *h,char *p )\n{\n//--ksstart（注释不能删除）—\n//考生代码从此开始编写\n    int i=0,j;\n    while(h[i]!=p[0]){\n        if(h[i]=='*'){\n        \t//当数组中间出现*时，删除后要产生如下三种变化 \n            j=i;\n            p--;\n            //一·数据末尾指针p向前移动一位 \n            while(h[j]!='\\0'){\n            \th[j]=h[j+1];\n            \t//二·所有数据向前移动一位 \n            \tj++;\n\t\t\t\t}\n        }\n        else{\n        \ti++;\n        \t//三·控制操作的循环数i需要不变\n\t\t\t\t\t//即只有h[i]!='*'时，i才正常进位 \n\t\t\t\t}\n    }\n//--ksend---\n}\nint main()\n{ \n\t//自己编写main()\n\tchar a[]={\"***a*bc***d*ef****\"};\n\tchar *h,*p;\n\th = &a[3];\n\tp = &a[13];\n\tfun(a,h,p);\n\tprintf(\"%s\",a);\n\treturn 0; \n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有间隔是正常的现象&amp;#xff0c;如果要完全消除&amp;#xff0c;可以用&lt;br /&gt;winforms程序&amp;#xff0c;自己绘制&amp;#xff0c;不要用控制台。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["C#推箱子小游戏地图空行问题", ["怎么解决c#推箱子游戏行与行之间有空行的问题，源码如下：        ** 急", "\n", "\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace 推箱子小游戏\n{\n    internal class Program\n    {\n        static void Main(string[] args)\n        {\n            int[,] map = new int[", "12", ", ", "13", "]\n            {\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "2", ",", "2", ",", "0", ",", "1", ",", "0", "},\n                {", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "2", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "1", ",", "4", ",", "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", "},\n                {", "1", ",", "4", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", "},\n                {", "1", ",", "4", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", "},\n                {", "1", ",", "4", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", "},\n                {", "1", ",", "4", ",", "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", "},\n                {", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "2", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "3", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", "}\n            };\n            int[,] map0 = new int[", "12", ", ", "13", "]\n            {\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "1", ",", "4", ",", "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", "},\n                {", "1", ",", "4", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", "},\n                {", "1", ",", "4", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "},\n                {", "1", ",", "4", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", "},\n                {", "1", ",", "4", ",", "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", "},\n                {", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", "},\n                {", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", "}\n            };\n            ", "//", "小人的初始坐标\n            int y = ", "10", ", x = ", "7", ", k = ", "0", ";\n            ", "//", "让小人动起来（用方向键↑↓←→控制）,即改变小人的坐标位置,与下一个坐标内容互换,如果指定方向的下一个坐标是", "1", "（即面对墙）,小人坐标不变（", "if", "进行判断）\n            ", "//", "for", "循环中控制,清屏后打印新位置\n            ", "while", " (k < ", "9", ")\n            {\n                ", "//", "打印新地图\n                ", "for", " (int i = ", "0", "; i < ", "12", "; i++)\n                {\n                    ", "for", " (int j = ", "0", "; j < ", "13", "; j++)\n                    {\n                        ", "if", " (map[i,j] == ", "0", ")\n                        {\n                            Console.Write(", "\" \"", ");\n                        }\n                        ", "if", " (map[i, j] == ", "1", ")\n                        {\n                            Console.Write(", "\"■\"", ");\n                        }\n                        ", "if", " (map[i, j] == ", "2", ")\n                        {\n                            Console.Write(", "\"□\"", ");\n                        }\n                        ", "if", " (map[i, j] == ", "3", ")\n                        {\n                            Console.Write(", "\"♀\"", ");\n                        }\n                        ", "if", " (map[i, j] == ", "4", ")\n                        {\n                            Console.Write(", "\"☆\"", ");\n                        }\n                        ", "if", " (map[i, j] == ", "5", ")\n                        {\n                            Console.Write(", "\"★\"", ");\n                        }\n                       \n                    }\n                    Console.WriteLine();\n                }\n                \n                ", "//", "接收输入的按键\n                ConsoleKeyInfo aj = Console.ReadKey();\n                ", "//", "清屏\n                Console.Clear();\n                ", "//", "向上移动\n                ", "if", " (aj.Key.ToString() == ", "\"UpArrow\"", ")\n                {\n                    ", "if", " (map[y - ", "1", ", x] == ", "0", " || map[y - ", "1", ", x] == ", "4", ")", "//", "小人的下一个坐标为空地,进行移动\n                    {\n                        ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                        {\n                            map[y - ", "1", ", x] = ", "3", ";\n                            map[y, x] = ", "4", ";\n                            y--;\n                        }\n                        ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                        {\n                            map[y - ", "1", ", x] = ", "3", ";\n                            map[y, x] = ", "0", ";\n                            y--;\n                        }\n                    }\n\n                    ", "else", " ", "if", " (map[y - ", "1", ", x] == ", "1", ")", "//", "小人的下一个坐标为墙,跳过此次循环\n                    { ", "continue", "; }\n\n                    ", "else", " ", "if", " (map[y - ", "1", ", x] == ", "2", " || map[y - ", "1", ", x] == ", "5", ")", "//", "小人的下一个坐标为未到达目标的箱子或到达目标的箱子\n                    {\n                        ", "if", " (map[y - ", "2", ", x] == ", "1", " || map[y - ", "2", ", x] == ", "2", " || map[y - ", "2", ", x] == ", "5", ")", "//", "箱子的下一个目标为墙或空箱子或到达目标的箱子\n                        { ", "continue", "; }\n                        ", "else", " ", "if", " (map[y - ", "2", ", x] == ", "0", ")", "//", "箱子的下一个目标为空地\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y - ", "2", ", x] = ", "2", ";\n                                map[y - ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                y--;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y - ", "2", ", x] = ", "2", ";\n                                map[y - ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                y--;\n                            }\n                        }\n                        ", "else", " ", "if", " (map[y - ", "2", ", x] == ", "4", ")", "//", "箱子的下一个目标为目标点\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y - ", "2", ", x] = ", "5", ";\n                                map[y - ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                y--;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y - ", "2", ", x] = ", "5", ";\n                                map[y - ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                y--;\n                            }\n                        }\n                    }\n                }\n                ", "//", "向下移动\n                ", "if", " (aj.Key.ToString() == ", "\"DownArrow\"", ")\n                {\n                    ", "if", " (map[y + ", "1", ", x] == ", "0", " || map[y + ", "1", ", x] == ", "4", ")", "//", "小人的下一个坐标为空地,进行移动\n                    {\n                        ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                        {\n                            map[y + ", "1", ", x] = ", "3", ";\n                            map[y, x] = ", "4", ";\n                            y++;\n                        }\n                        ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                        {\n                            map[y + ", "1", ", x] = ", "3", ";\n                            map[y, x] = ", "0", ";\n                            y++;\n                        }\n                    }\n\n                    ", "else", " ", "if", " (map[y + ", "1", ", x] == ", "1", ")", "//", "小人的下一个坐标为墙,跳过此次循环\n                    { ", "continue", "; }\n\n                    ", "else", " ", "if", " (map[y + ", "1", ", x] == ", "2", " || map[y + ", "1", ", x] == ", "5", ")", "//", "小人的下一个坐标为未到达目标的箱子或到达目标的箱子\n                    {\n                        ", "if", " (map[y + ", "2", ", x] == ", "1", " || map[y + ", "2", ", x] == ", "2", " || map[y + ", "2", ", x] == ", "5", ")", "//", "箱子的下一个目标为墙或空箱子或到达目标的箱子\n                        { ", "continue", "; }\n                        ", "else", " ", "if", " (map[y + ", "2", ", x] == ", "0", ")", "//", "箱子的下一个目标为空地\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y + ", "2", ", x] = ", "2", ";\n                                map[y + ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                y++;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y + ", "2", ", x] = ", "2", ";\n                                map[y + ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                y++;\n                            }\n                        }\n                        ", "else", " ", "if", " (map[y + ", "2", ", x] == ", "4", ")", "//", "箱子的下一个目标为目标点\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y + ", "2", ", x] = ", "5", ";\n                                map[y + ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                y++;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y + ", "2", ", x] = ", "5", ";\n                                map[y + ", "1", ", x] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                y++;\n                            }\n                        }\n                    }\n                }\n                ", "//", "向左移动\n                ", "if", " (aj.Key.ToString() == ", "\"LeftArrow\"", ")\n                {\n                    ", "if", " (map[y, x - ", "1", "] == ", "0", " || map[y, x - ", "1", "] == ", "4", ")", "//", "小人的下一个坐标为空地,进行移动\n                    {\n                        ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                        {\n                            map[y, x - ", "1", "] = ", "3", ";\n                            map[y, x] = ", "4", ";\n                            x--;\n                        }\n                        ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                        {\n                            map[y, x - ", "1", "] = ", "3", ";\n                            map[y, x] = ", "0", ";\n                            x--;\n                        }\n                    }\n\n                    ", "else", " ", "if", " (map[y, x - ", "1", "] == ", "1", ")", "//", "小人的下一个坐标为墙,跳过此次循环\n                    { ", "continue", "; }\n\n                    ", "else", " ", "if", " (map[y, x - ", "1", "] == ", "2", " || map[y, x - ", "1", "] == ", "5", ")", "//", "小人的下一个坐标为未到达目标的箱子或到达目标的箱子\n                    {\n                        ", "if", " (map[y, x - ", "2", "] == ", "1", " || map[y, x - ", "2", "] == ", "2", " || map[y, x - ", "2", "] == ", "5", ")", "//", "箱子的下一个目标为墙或空箱子或到达目标的箱子\n                        { ", "continue", "; }\n                        ", "else", " ", "if", " (map[y, x - ", "2", "] == ", "0", ")", "//", "箱子的下一个目标为空地\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y, x - ", "2", "] = ", "2", ";\n                                map[y, x - ", "1", "] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                x--;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y, x - ", "2", "] = ", "2", ";\n                                map[y, x - ", "1", "] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                x--;\n                            }\n                        }\n                        ", "else", " ", "if", " (map[y, x - ", "2", "] == ", "4", ")", "//", "箱子的下一个目标为目标点\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y, x - ", "2", "] = ", "5", ";\n                                map[y, x - ", "1", "] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                x--;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y, x - ", "2", "] = ", "5", ";\n                                map[y, x - ", "1", "] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                x--;\n                            }\n                        }\n                    }\n                }\n                ", "//", "向右移动\n                ", "if", " (aj.Key.ToString() == ", "\"RightArrow\"", ")\n                {\n                    ", "if", " (map[y, x + ", "1", "] == ", "0", " || map[y, x + ", "1", "] == ", "4", ")", "//", "小人的下一个坐标为空地,进行移动\n                    {\n                        ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                        {\n                            map[y, x + ", "1", "] = ", "3", ";\n                            map[y, x] = ", "4", ";\n                            x++;\n                        }\n                        ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                        {\n                            map[y, x + ", "1", "] = ", "3", ";\n                            map[y, x] = ", "0", ";\n                            x++;\n                        }\n                    }\n\n                    ", "else", " ", "if", " (map[y, x + ", "1", "] == ", "1", ")", "//", "小人的下一个坐标为墙,跳过此次循环\n                    { ", "continue", "; }\n\n                    ", "else", " ", "if", " (map[y, x + ", "1", "] == ", "2", " || map[y, x + ", "1", "] == ", "5", ")", "//", "小人的下一个坐标为未到达目标的箱子或到达目标的箱子\n                    {\n                        ", "if", " (map[y, x + ", "2", "] == ", "1", " || map[y, x + ", "2", "] == ", "2", " || map[y, x + ", "2", "] == ", "5", ")", "//", "箱子的下一个目标为墙或空箱子或到达目标的箱子\n                        { ", "continue", "; }\n                        ", "else", " ", "if", " (map[y, x + ", "2", "] == ", "0", ")", "//", "箱子的下一个目标为空地\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y, x + ", "2", "] = ", "2", ";\n                                map[y, x + ", "1", "] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                x++;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y, x + ", "2", "] = ", "2", ";\n                                map[y, x + ", "1", "] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                x++;\n                            }\n                        }\n                        ", "else", " ", "if", " (map[y, x + ", "2", "] == ", "4", ")", "//", "箱子的下一个目标为目标点\n                        {\n                            ", "if", " (map0[y, x] == ", "4", ")", "//", "如果小人现在的坐标是目标点的坐标\n                            {\n                                map[y, x + ", "2", "] = ", "5", ";\n                                map[y, x + ", "1", "] = ", "3", ";\n                                map[y, x] = ", "4", ";\n                                x++;\n                            }\n                            ", "else", "//", "如果小人现在的坐标不是目标点的坐标\n                            {\n                                map[y, x + ", "2", "] = ", "5", ";\n                                map[y, x + ", "1", "] = ", "3", ";\n                                map[y, x] = ", "0", ";\n                                x++;\n                            }\n                        }\n                    }\n                }\n                int xx = ", "0", ", yy = ", "0", ";\n                ", "for", " (yy = ", "0", "; yy < ", "12", "; yy++)\n                    ", "for", " (xx = ", "0", "; xx < ", "13", "; xx++)\n                    {\n                        ", "if", " (map[yy, xx] == ", "5", ")\n                            k++;\n                    }\n            }\n            Console.ReadLine();\n        }\n        \n    }\n}\n\n\n\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "这个问题很简单，　首先，　你操作数据库的时候，　\r\n\r\nＶector／Hashtable 你不要用了，　用Concurrent包\r\n\r\n如果说，　你需要整个替换数据，　那么我建议你，　把数据库读入的时候，　放在一个新的Ｖector／Hashtable.然后，　lock 老的　Ｖector／Hashtable　对象，　把新的对象 [b]assgin[/b]过去. 这样，　你就不需要使用同步了。\r\n\r\n不过，　我建议你使用Concurrent包。　直接把新数据写进去.", "Konwledge_Point": "循环控制", "Question": ["用java容器实现缓存", ["有这么个问题: ", "\n 应用程序定时的读取数据库,并将数据写入缓存.", "\n为避免用户读缓存时,程序更新缓存,使用户读到错误数据,使用了java的同步容器Hashtable和Vector实现.", "\n根据数据库字段值的不同,将数据分别放到几个不同的Vector.", "\n类似这样", "\n[code=\"java\"]Vector v1 = new Vector();", "\n..", "\nfor(数据){", "\nif (数据i.属性 == \"name\")", "\n v1.add(数据i)", "\n}", "\n..", "\nstatic h.add(\"name\",v1);[/code]", "\n..", "\n像这样的代码没什么扩展性,而且很依赖数据库数据.但是它有个好处,就是线程安全.用户读到的数据都是有效的.", "\n\n", "如果根据数据库数据动态生成Vector,像这样", "\n[code=\"java\"]for(数据){", "\nVector v = null;", "\nif(hash.containsKey(属性)){", "\n v = hash.get(属性)", "\n v.add(数据i)", "\n}else{", "\n v = new Vector();", "\n v.add(数据i);", "\n hash.add(v);", "\n}", "\n}[/code]", "\n也有问题,就是Vector里新写入的对象会和原来的重复.", "\n\n", "如果先清理缓存hash.clear();则可能此时用户正在读数据,结果读不到任何数据.或者任何时候在Vector写入新数据都要删除原数据,正样都有可能使用户读不到数据..", "\n\n", "有什么办法,即可以让用户读到有效数据,又能保留程序灵活性", "\n[b]问题补充：[/b]", "\n不知道我的描述是否清楚，", "\n\n", "业务需求是在更新数据的时候进行同步控制,", "\n用new Vector这种方式,相当于vector.add(数据)的时候,用户依然可以读之前存在hashtable中的数据,只是最后在hash.add(Vector)的时候才进行同步,这个时间是很短的,因为只有几个Vector(Vector里面的数据会很多)被加入到hashtable.", "\n\n", "如果不考虑容器,而是手动在更新缓存的前后加锁,解锁,那么这个时间会比较长,可能达不到上一种实现的性能.", "\n\n", "用Concurrent包,能达到甚至超过上一种实现的性能吗.", "\n[b]问题补充：[/b]", "\nconcurrent是不错,可惜解决不了我的问题.", "\n测试了一下,", "\nhashtable.add(\"\",vector)只有几个vector,在毫秒级别上耗时为0.", "\n用concurrent把更新缓存的过程锁定,其间循环一万条数据并添加到ArrayList,然后添加到hashmap,耗时约16毫秒,还是很有差距...", "\n[b]问题补充：[/b]", "\n你们的答案都类似，分数只能给一个人。", "\n\n", "Concurrent不太了解，我的问题是要求锁定的时间尽可能短，即便concurrent有同步的list,我还是要清空list，然后把新数据写入,list要装的数据量是很大的,这样可能会让用户等待时间比较长.", "\n\n", "我现在的做法，是把数据写入新的list,这过程不需要同步，最后把list写入hashtable，这个过程需同步，可list数量很少，所以这个过程时间很短。代价就是牺牲了一些可维护性和扩展性。"]], "Tag": "程序设计"}
{"Answer": "用户只要请求了线程就不要结束，一直存在！然后结合线程编号和用户信息保存这个线程！要保存用户最后一次请求事件，和是否执行！\r\n至于线程的结束，应该有一个线程单独处理这件事！任务线程根据保存的信息是否执行来做判断是否继续执行，然后单独线程根据最后请求时间判断用户是否超时，超时之后立马标记不执行，线程则自然直接结束！", "Konwledge_Point": "循环控制", "Question": ["http长连接如何保证一个用户只有一个长连接（一个线程）", ["一下代码不能实现", "\nservlet。用于等待数据返回", "\n[code=\"java\"]ChatControl control = null;", "\n            if (ChatListener.threadMap.get(receiver) == null) {", "\n                control= new ChatControl();//新建一个线程", "\n                ChatListener.threadMap.put(receiver , control);//线程塞进map", "\n                control.run();", "\n                ChatListener.threadMap.remove(receiver);", "\n            }else {", "\n                //如果是刷新,结束上一个长连接，此连接挂起", "\n                control= (ChatControl) ChatListener.threadMap.get(receiver);", "\n                control.breakThread();", "\n                control.interrupt();", "\n                ChatListener.threadMap.remove(receiver);", "\n                control = null;", "\n                //挂起", "\n                control = new ChatControl();", "\n                ChatListener.threadMap.put(receiver, control);", "\n                control.run();", "\n                ChatListener.threadMap.remove(receiver);", "\n            }[/code]", "\nChatControl类，继承线程，控制等待", "\n[code=\"java\"]public class ChatControl extends Thread  {", "\n    private static Logger log = Logger.getLogger(ChatControl.class);", "\n//  private boolean isSuspend = true;//挂起标志", "\n    private boolean done = false;//线程停止标志", "\n\n", "//测试内存使用情况\npublic static long getMemory() {\n       return Runtime.getRuntime().freeMemory();\n    }\n\n/**\n * 线程的主运行方法\n * 主要是挂起，使得http连接保持一段时间\n * 当有人发送聊天数据，修改接受人的线程结束标志done 结束线程 使得数据能返回\n * 如果发起聊天，则5分钟返回一次。\n * 使用阻塞 这里会很消耗资源。每个用户到这里都会被挂起，一直在等待。（考虑更优化的实现）\n * ！！目前可以使用负载均衡解决\n *优点：但可以避免不断创建连接的过程，介绍握手的次数。返回时间会更短\n */\npublic void run() \n{\n    Date newDate = DateUtil.getNowDateAndTime();\n    int i = 0;\n    while(!done){\n        try {\n            System.out.println(\"循环ing。。。。\"+i++);\n            //睡眠2秒继续等待\n            sleep(2*1000); \n            //5分钟返回一次,避免资源一直在占用\n            if(DateUtil.getTwoTimeSub(DateUtil.getNowDateAndTime(), newDate) >= 5){\n                break ;\n            }\n        } catch (Exception e) {\n            log.error(Constants.getExceptionString(\"sleep()\", ChatControl.class));\n            System.out.println(\"被打断退出。。。。\");\n            break;//退出\n        }\n    }\n\n}\n\npublic void update(String user) {\n    ChatControl control= (ChatControl) ChatListener.threadMap.get(user);\n    ChatListener.threadMap.remove(user);\n    if (control != null ) {\n        control.breakThread();\n    }\n\n  }\n\n/**\n * 继续执行\n */\npublic void breakThread() {\n    done = true;\n}\n/**\n * 等待线程\n */\npublic void waitThread() {\n    done = false;\n}\n", "\n\n", "}[/code]", "\n一个保存用户线程的类", "\n[code=\"java\"]public class ChatListener {", "\n\n", "  static public Map threadMap = new HashMap() ;//保存线程\n", "\n\n", "}[/code]", "\n\n", "当用户刷新的时候，线程会更加、", "\n如何确保一个用户只有一个线程（一个长连接）", "\n我的思路就是，如果用户刷新，终止上一个线程，该线程进入等待状态。上servlet的代码不能实现。"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;&lt;p&gt;先看看播放器的js有没有引入&lt;br /&gt;摁下F12&amp;#xff0c;在网络中&amp;#xff08;network&amp;#xff09;查看&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;可以尝试在public文件夹中的index.html中引入&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&amp;lt;script &lt;span class=\"hljs-attribute\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;https://g.alicdn.com/de/prismplayer/2.9.17/aliplayer-min.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["VUE中，阿里云播放器报错：Aliplayer is not defined。", ["#卡了一整天了...大佬们帮忙看看....顶不住了", "\n", "<!-- 阿里云视频播放器脚本 -->", "\n", "<", "script", " ", "type", "=", "\"text/javascript\"", " ", "charset", "=", "\"utf-8\"", " ", "src", "=", "\"https://g.alicdn.com/de/prismplayer/2.9.17/aliplayer-min.js\"", ">", "</", "script", ">", "\n", "<", "template", ">", "\n  ", "<", "div", ">", "\n\n    ", "<", "video-play-header", " ", ":videoInfo", "=", "\"episodeInfo\"", ">", " ", "</", "video-play-header", ">", "\n    ", "<!-- 阿里云视频播放器样式 -->", "\n     ", "<", "link", " ", "rel", "=", "\"stylesheet\"", " ", "href", "=", "\"https://g.alicdn.com/de/prismplayer/2.9.17/skins/default/aliplayer-min.css\"", " />", "\n     \n    \n    ", "<!-- 定义播放器dom -->", "\n    ", "<", "div", " ", "id", "=", "\"J_prismPlayer\"", " ", "class", "=", "\"prism-player\"", " >", "</", "div", ">", "\n\n    ", "</", "div", ">", "\n\n", "</", "template", ">", "\n \n", "<", "script", ">", "\n", "import", " ", "VideoPlayHeader", " ", "from", " ", "\"../CourseDetail/Component/Header.vue\"", ";\n", "import", " { getEpisodeById } ", "from", " ", "'@/api/getData.js'", "\n", "export", " ", "default", " {\n  ", "components", ": {\n    ", "VideoPlayHeader", ",\n  },\n  ", "data", "(", ") {\n    ", "return", " {\n      ", "episodeInfo", ": {},\n      ", "videoInfo", ":{},\n      ", "chapterList", ":{},\n      ", "vsid", ":", "\"\"", "\n    };\n  },\n  ", "methods", ":{\n        ", "//异步函数(async)", "\n        ", "async", " ", "getEpisode", "(", "vid", "){\n            ", "try", "{\n                ", "const", " result= ", "await", " ", "getEpisodeById", "(vid)\n                ", "if", "(result.", "data", ".", "code", "==", "0", "){\n                    ", "this", ".", "episodeInfo", "=result.", "data", ".", "data", ";\n                    ", "const", " rs=result.", "data", ".", "data", ".", "video_source_id", "\n                    ", "this", ".", "vsid", "=rs\n                    ", "console", ".", "log", "(", "this", ".", "episodeInfo", ")\n                }\n                \n            }", "catch", "(error){\n                ", "console", ".", "log", "(error)\n            }\n        },\n        ", "start", "(", "){\n          ", "try", "{\n ", "var", " player = ", "new", " ", "Aliplayer", "({\n            ", "id", ": ", "'J_prismPlayer'", ",\n\n            ", "vid", ": ", "'c01e6e530c8641ca851573a3ae3d1d16'", ", ", "// 视频id", "\n            ", "playauth", ": ", "'eyJTZWN1cml0eVRva2VuIjoiQ0FJU2h3TjFxNkZ0NUIyeWZTaklyNWJmR2VuaHY0MTVobzZTYTJPSG9HNEZhcnRMdXJmTnBqejJJSHBOZTNocUIrMGZzUGt3bEdsVTZmZ2Nsck1xRmNRWUd4S1VQSlF2dHNnS3JWL3hKcExGc3QySjZyOEpqc1VPdklnOWpsbXBzdlhKYXNEVkVmbDJFNVhFTWlJUi8wMGU2TC8rY2lyWXBUWEhWYlNDbFo5Z2FQa09Rd0M4ZGtBb0xkeEtKd3hrMnQxNFVtWFdPYVNDUHdMU2htUEJMVXhtdldnR2wyUnp1NHV5M3ZPZDVoZlpwMXI4eE80YXhlTDBQb1AyVjgxbExacGxlc3FwM0k0U2M3YmFnaFpVNGdscjhxbHg3c3BCNVN5Vmt0eVdHVWhKL3phTElvaXQ3TnBqZmlCMGVvUUFQb3BGcC9YNmp2QWF3UExVbTliWXhncGhCOFIrWGo3RFpZYXV4N0d6ZW9XVE84MCthS3p3TmxuVXo5bUxMZU9WaVE0L1ptOEJQdzQ0RUxoSWFGMElVRTF4Rm11Q2QvWDRvQXlhTzF2NkdwTG9pdjltamNCSHFIeno1c2VQS2xTMVJMR1U3RDBWSUpkVWJUbHpiVWRKakRhL0wvWllMbE1jS2c4NFdlaVBNYXgzYlFGRHI1M3ZzVGJiWHpaYjBtcHR1UG56ZHhBS0RqK2FxMUdVR29BQkhKWFprdXBxZkgrYjQvWHJjaExlUUJKS2NjOWNNWU9zRmtVdlArWFk1N0FDYnkvbElMY1hJejlIMmJqazI2aGpjaDVCNERtMjNVRGZFTldHeWZnLy9RellOUEtKcVA4R0JJTWtVQWdFSUJTclJ6VjBHZ2Z2RVZzUUkvTzY4U3ZaazA3eVhXd096Z1JGcnhTNmc4NFNuTWUwdE5PVkJleUxwZDFIZzViRXJZND0iLCJBdXRoSW5mbyI6IntcIkNJXCI6XCJaajhld0hSU2hsNTVnREVCbkJjWmU4c2I0TlZLMmoxQkVtNXRTQTc4cm5oVENMcGlUanhJdk04Y3dsYnlhRW9lXCIsXCJDYWxsZXJcIjpcIjY0UW5TdXVuWXJiQmdPQWZ4WlJ0aWZTOWFuSHMzZk81TXFRenkzYUNNcGc9XCIsXCJFeHBpcmVUaW1lXCI6XCIyMDIyLTAyLTA4VDA4OjU2OjQ5WlwiLFwiTWVkaWFJZFwiOlwiYzAxZTZlNTMwYzg2NDFjYTg1MTU3M2EzYWUzZDFkMTZcIixcIlNpZ25hdHVyZVwiOlwiL1JqbisyUXo4VVpFY05tL2dhL3d1bS9jUmRvPVwifSIsIlZpZGVvTWV0YSI6eyJTdGF0dXMiOiJOb3JtYWwiLCJWaWRlb0lkIjoiYzAxZTZlNTMwYzg2NDFjYTg1MTU3M2EzYWUzZDFkMTYiLCJUaXRsZSI6IuaciOS6rua5vi5tcDQiLCJDb3ZlclVSTCI6Imh0dHA6Ly9vdXRpbi05NzM0MzM3MTU5NTcxMWVjYTY2NTAwMTYzZTFhNjViNi5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL2MwMWU2ZTUzMGM4NjQxY2E4NTE1NzNhM2FlM2QxZDE2L3NuYXBzaG90cy9jMmRiNDI0YmNkYmQ0MzYyODNiOGNjMzQ0NDgzMmNjOC0wMDAwMS5qcGc/RXhwaXJlcz0xNjQ0MzE0MTA5Jk9TU0FjY2Vzc0tleUlkPUxUQUlWVmZZeDZEMEhlTDImU2lnbmF0dXJlPVI4OUJBd0lPclpmSSUyRkYyYUxYakslMkJHSjM0QVklM0QiLCJEdXJhdGlvbiI6MTQuNTQ1fSwiQWNjZXNzS2V5SWQiOiJTVFMuTlVqUlNVUlJYMUx5aUU2RG5QZjRnVXJmRCIsIkFjY2Vzc0tleVNlY3JldCI6IjJQSkV2ZXZVcTJTMloyU3JSa0JIZ2ZCRlF0TEVqMUxTVHVON0w2RmUzcmdVIiwiUmVnaW9uIjoiY24tc2hhbmdoYWkiLCJDdXN0b21lcklkIjoxNjM1NjY4OTc3MDQ1NDQ4fQ=='", ", ", "// 播放凭证", "\n            ", "// source:this.vsid,", "\n            ", "// encryptType: '1', // 如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项", "\n            ", "width", ": ", "'100%'", ",\n            ", "height", ": ", "'500px'", ",\n            ", "// 以下可选设置", "\n            ", "cover", ": ", "'http://guli.shop/photo/banner/1525939573202.jpg'", ", ", "// 封面", "\n            ", "// qualitySort: 'asc', // 清晰度排序", "\n\n            ", "mediaType", ": ", "'video'", ", ", "// 返回音频还是视频", "\n            ", "autoplay", ": ", "false", ", ", "// 自动播放", "\n            ", "isLive", ": ", "false", ", ", "// 直播", "\n            ", "rePlay", ": ", "false", ", ", "// 循环播放", "\n            ", "preload", ": ", "true", ",\n            ", "controlBarVisibility", ": ", "'hover'", ", ", "// 控制条的显示方式：鼠标悬停", "\n            ", "useH5Prism", ": ", "true", ", ", "// 播放器类型：html5", "\n        }, ", "function", "(", "player", ") {\n            ", "console", ".", "log", "(", "'播放器创建成功'", ")\n        })\n          }", "catch", "(error){\n", "console", ".", "log", "(error)\n          }\n        }\n    },\n    \n    ", "mounted", "(", "){\n      ", "//渲染完后拿数据", "\n      ", "this", ".", "getEpisode", "(", "this", ".", "$route", ".", "query", ".", "episode_id", ");\n      ", "this", ".", "start", "();\n        \n        \n        \n    }\n    \n};\n", "</", "script", ">", "\n\n", "<", "style", " ", "lang", "=", "\"scss\"", " ", "scoped", ">", "\n", "</", "style", ">", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while改成当count&amp;gt;10时显示10条否则全部显示&amp;#xff0c;换页的时候根据当前页动态修改 i 的值&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["jsp分页页码该如何实现每次只显示10个", ["遇到个问题，使用while循环时不知道该如何控制界面上只显示10个页码数，每次都是输出全部的页码，想实现当页码是第10页时，界面上的页码数显示10~20页以此类推。连接数据库是用Javabean。", "\n", "\n", "<%\nint pagesize=", "1", ";//每页显示几条数据\nint id=", "1", ";//当前页\nint pages=", "1", ";//页码\nString pPages=", "\"\"", ";\nString nPages=", "\"\"", ";\nint rowcount=", "0", ";//页面总数\nint pagecount=", "0", ";\nString path=", "\"\"", ";\n", "if", "(", "request", ".getParameter(", "\"id\"", ")!=", "null", "){\n    try{\n        id=Integer.parse", "Int", "(", "request", ".getParameter(", "\"id\"", "));\n    }\n    catch(Exception e){\n        id=", "1", ";\n    }\n}\nResultSet rs =", "null", ";\nString sql=", "\"SELECT count(*)FROM guestbook \"", ";//获得总页数\nrs=bb.getResult(sql);\nrs.", "next", "();\nrowcount=rs.", "get", "Int", "(", "1", ");\n", "if", "(rowcount % pagesize==", "0", "){\n    pagecount=rowcount/ pagesize;\n}", "else", "{\n    pagecount=rowcount/ pagesize+", "1", ";\n}\npages=id;\n", "if", "(pages>pagecount){\n    pages=pagecount;\n}\n", "if", "(pages<", "0", "){\n    pages=", "1", ";\n}\n \nsql=", "\"select *  from guestbook  order by time desc limit \"", "+(pages", "-1", ")*pagesize+", "\",\"", "+pagesize+", "\"\"", ";\nrs=bb.getResult(sql);\n%>", "\n", "<", "table", " ", "class", "=", "\"table2\"", " ", "cellspacing", "=", "\"0\"", ">", "\n                ", "<", "tr", " ", "style", "=", "\"text-align: center;\"", ">", "\n                    ", "<", "td", " ", "style", "=", "\"width: 260;border-right:1px solid black;\"", ">", "时间", "</", "td", ">", "\n                    ", "<", "td", " ", "style", "=", "\"width: 130;border-right:1px solid black;\"", ">", "姓名", "</", "td", ">", "\n                    ", "<", "td", " ", "width", "=", "600px;", ">", "内容", "</", "td", ">", "\n                \n                ", "</", "tr", ">", "\n\n                ", "<% ", "while", "(rs.", "next", "()){ %>", "\n                ", "<", "tr", ">", "\n                    ", "<", "td", " ", "style", "=", "\"width: 260;border-right:1px solid black;\"", ">", "<%=rs.", "get", "String", "(", "\"time\"", ") %>", "</", "td", ">", "\n                    ", "<", "td", " ", "style", "=", "\"width: 130;border-right:1px solid black;text-align: center;\"", ">", "<%=rs.", "get", "String", "(", "\"name\"", ") %>", "</", "td", ">", "\n                    ", "<", "td", ">", "<%=rs.", "get", "String", "(", "\"text\"", ") %>", "</", "td", ">", "\n                    \n                    \n\n                ", "</", "tr", ">", "\n                ", "<% } rs.close();\n        bb.Release();%>", "\n\n            ", "</", "table", ">", "\n            \n            ", "<%", "if", "(id==", "1", "){ %>", "\n                ", "<", "span", ">", "首页", "</", "span", ">", "\n                ", "<", "span", ">", "上一页", "</", "span", ">", "\n                ", "<%}", "else", "{ %>", "\n                ", "<", "a", " ", "href", "=", "\"?id=", "<%=", "1", "%>", "\"", ">", "首页", "</", "a", ">", "\n                ", "<", "a", " ", "href", "=", "\"?id=", "<%=(id", "-1", ")%>", "\"", ">", "上一页", "</", "a", ">", "\n                ", "<%}\n            int i=", "1", ";\n            \n            ", "while", "(i<=pagecount){\n                %>", "\n                ", "<", "a", " ", "href", "=", "\"?id=", "<%=i%>", "\"", ">", "<%=i%>", "</", "a", ">", "\n                ", "<%i++;\n                \n            }\n                ", "if", "(id>=pagecount){%>", "\n                ", "<", "span", ">", "下一页", "</", "span", ">", "\n                ", "<", "span", ">", "尾页", "</", "span", ">", "<", "br", ">", "\n                ", "<%}", "else", "{%>", "\n                ", "<", "a", " ", "href", "=", "\"?id=", "<%=(id+", "1", ")%>", "\"", ">", "下一页", "</", "a", ">", "\n                ", "<", "a", " ", "href", "=", "\"?id=", "<%=pagecount%>", "\"", ">", "尾页", "</", "a", ">", "\n                ", "<%} %>", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;……哪行看不懂&amp;#xff1f;注释不是很全了吗&amp;#xff1f;&lt;br /&gt;openorcloseLed(1); 利用ioctl对每个关闭LED&lt;br /&gt;loadbmp()&amp;#xff1b;打开bmp文件&amp;#xff0c;跳过文件头&amp;#xff0c;读取了三通道数据&amp;#xff0c;放到四通道的结构体里面。然后做一个翻转操作&amp;#xff0c;最后写道lcd中。&lt;br /&gt;flashLed()&amp;#xff1b;控制led先亮后灭&amp;#xff0c;输入数字控制闪烁次数。&lt;br /&gt;brushLcd(lcd, xxxxx)&amp;#xff1b;将xxxxx记录的寄存器值&amp;#xff0c;写到lcd中以控制颜色。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["请问这个嵌入式的代码如何理解呢？", ["请问这个嵌入式的代码如何理解呢？我看得不是很懂，希望大家帮忙逐行帮注释一下和分析一下，非常感谢大家！", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<fcntl.h>", "\n", "#", "include", "<unistd.h>", "\n", "#", "include", "<sys/ioctl.h>", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<unistd.h>", "\n", "#", "include", "<sys/ioctl.h>", "\n", "#", "include", "<sys/types.h>", "\n", "#", "include", "<sys/stat.h>", "\n", "#", "include", "<fcntl.h>", "\n\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<signal.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<unistd.h>", "\n", "#", "include", "<string.h>", "\n", "#", "include", "<syslog.h>", "\n", "#", "include", "<errno.h>", "\n", "#", "include", "<linux/input.h>", "\n\n", "#", "include", "<fcntl.h>", "\n", "#", "include", "<sys/types.h>", "\n", "#", "include", "<sys/stat.h>", "\n", "#", "include", "<sys/mman.h>", "\n", "#", "include", "<stdbool.h>", "\n\n", "#", "include", "<linux/fb.h>", "\n", "#", "include", "<sys/mman.h>", "\n", "#", "include", "<sys/ioctl.h>", "\n\n", "#", "define", " TEST_MAGIC ", "'x'", "\n", "#", "define", " TEST_MAX_NR 4", "\n\n", "#", "define", " LED1 _IO(TEST_MAGIC,0)", "\n", "#", "define", " LED2 _IO(TEST_MAGIC,1)", "\n", "#", "define", " LED3 _IO(TEST_MAGIC,2)", "\n", "#", "define", " LED4 _IO(TEST_MAGIC,3)", "\n", "#", "define", " LED(i) _IO(TEST_MAGIC,i)", "//做循环用", "\n\n", "//控制开关", "\n", "int", " ", "openorcloseLed", "()", ";", "//控制灯全开或全关，正常返回1，错误返回-1", "\n", "int", " ", "openorcloseLed", "(", "int", " arg)", " ", "{\n    ", "int", " fd;\n    fd = ", "open", "(", "\"/dev/Led\"", ", O_RDWR)\n    ", "if", " (fd < ", "0", ")\n    {\n               ", "printf", "(", "\"打开驱动文件失败，请检查是否有该驱动或者路径是否正确\\n\"", ");\n               ", "return", " ", "-1", ";\n    }\n    ", "for", " (", "int", " i = ", "0", "; i < ", "4", "; i++) {\n         ", "ioctl", "(fd, ", "LED", "(i), arg);\n    }\n    ", "return", " ", "1", ";\n}\n", "void", " ", "loadbmp", "()", ";\n", "void", " ", "loadbmp", "(", "int", " bmp_begin)", " ", "{\n    ", "int", " lcd = ", "open", "(", "\"/dev/fb0\"", ", O_RDWR);\n    ", "char", " bmp24_buf[", "800", "*", "480", "*", "3", "]={", "0", "};\n    ", "char", " bmp32_buf[", "800", "*", "480", "*", "4", "]={", "0", "};\n    ", "char", " show_buf[", "800", "*", "480", "*", "4", "]={", "0", "};\n    ", "lseek", "(bmp_begin, ", "54", ", SEEK_SET);\n    ", "read", "(bmp_begin, bmp24_buf, ", "800", "*", "480", "*", "3", ");\n    ", "for", " (", "int", " i = ", "0", ", j = ", "0", "; i < ", "800", " * ", "480", " * ", "4", "; i += ", "4", ", j += ", "3", ") {\n        bmp32_buf[i + ", "2", "] = bmp24_buf[j + ", "2", "];\n        bmp32_buf[i + ", "1", "] = bmp24_buf[j + ", "1", "];\n        bmp32_buf[i] = bmp24_buf[j];\n    }\n    ", "for", "(", "int", " y=", "0", ";y<", "480", ";y++){\n        ", "for", " (", "int", " x = ", "0", "; x < ", "800", "*", "4", "; x++) {\n            show_buf[", "800", " * ", "4", " * y + x] = bmp32_buf[", "800", " * ", "4", " * (", "479", " - y) + x];\n        }\n    }\n    ", "write", "(lcd, show_buf, ", "800", "*", "480", "*", "4", ");\n}\n", "void", " ", "flashLed", "()", ";\n", "void", " ", "flashLed", "(", "int", " s)", " ", "{\n", "int", " fd;\n        fd = ", "open", "(", "\"/dev/Led\"", ",O_RDWR);\n        ", "for", " (", "int", " i = ", "0", "; i < s; i++) {\n            ", "ioctl", "(fd, LED1, ", "0", ");\n            ", "ioctl", "(fd, LED2, ", "0", ");\n            ", "ioctl", "(fd, LED1, ", "0", ");\n            ", "ioctl", "(fd, LED3, ", "0", ");\n            ", "ioctl", "(fd, LED4, ", "0", ");\n            ", "sleep", "(", "1", ");\n            ", "ioctl", "(fd, LED1, ", "1", ");\n            ", "ioctl", "(fd, LED2, ", "1", ");\n            ", "ioctl", "(fd, LED3, ", "1", ");\n            ", "ioctl", "(fd, LED4, ", "1", ");\n            ", "sleep", "(", "1", ");\n        }\n}\n", "void", " ", "brushLcd", "()", ";\n", "void", " ", "brushLcd", "(", "int", " lcd, ", "long", " color)", " ", "{\n    ", "unsigned", " ", "char", "* FB = ", "mmap", "(", "NULL", ", ", "800", "*", "480", "*", "4", ", PROT_READ|PROT_WRITE, MAP_SHARED, lcd, ", "0", ");\n    ", "//添加我们的RGB逻辑代码", "\n\n    ", "for", " (", "int", " i=", "0", "; i<", "480", "; i++){\n             ", "for", "(", "int", " j=", "0", ";j<", "800", ";j++){\n                 ", "memcpy", "(FB+ ", "4", "*j+", "800", "*", "4", "*i,&color,", "4", ");\n             }\n    }\n    ", "munmap", "(FB,", "800", "*", "480", "*", "4", ");\n}\n\n", "int", " ", "main", "(", "int", " argc, ", "char", "* argv[])", " ", "{\n        \n    ", "int", " fd;\n    fd = ", "open", "(", "\"/dev/Led\"", ", O_RDWR);\n    ", "int", " lcd = ", "open", "(", "\"/dev/fb0\"", ", O_RDWR);\n    ", "int", " open_bmp=", "open", "(", "\"./1/bmp\"", ", O_RDWR);\n    ", "long", " red=", "0xFF0000", ", green=", "0x008000", ",yellow=", "0xFFFF00", ";\n\n    ", "/*      初始化所有设备（LED全灭、LCD屏幕加载一张图片（画板自己画一张），写上开始标识）\n    */", "\n    ", "openorcloseLed", "(", "1", ");\n    ", "loadbmp", "(open_bmp);\n    ", "//四个灯一起闪烁3次: （亮-灭） *3", "\n    ", "flashLed", "(", "3", ");\n\n", "/*当闪烁完毕后，屏幕刷成绿色，同时灯常亮5秒*/", "\n        ", "brushLcd", "(lcd, green);\n        ", "openorcloseLed", "(", "0", ");\n        ", "sleep", "(", "5", ");\n\n        ", "/*当常亮5s结束后，屏幕刷成黄色，同时开始闪烁5次。*/", "\n        ", "brushLcd", "(lcd,yellow);\n        ", "flashLed", "(", "5", ");\n        ", "/*当闪烁完毕后，屏幕刷成红色，灯全灭。等待3s*/", "\n        ", "brushLcd", "(lcd, red);\n        ", "openorcloseLed", "(", "1", ");\n        ", "sleep", "(", "3", ");\n        ", "/*等待结束后加装一张图片，写上结束标识\n        */", "\n        ", "printf", "(", "\"%d\"", ",lcd);\n        ", "loadbmp", "(open_bmp);\n        ", "printf", "(", "\"%d\"", ",lcd);\n        ", "openorcloseLed", "(", "1", ");", "//LED全灭", "\n        ", "//sleep/usleep;", "\n        ", "close", "(lcd);\n        ", "close", "(fd);\n        ", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "问题一：java不保证线程的运行次序，要由程序员自己维护。\r\n问题二：sleep的时候被踢出cpu了\r\n问题三：让线程等待，wait，直到被notify。", "Konwledge_Point": "循环控制", "Question": ["Java中线程执行的疑问", ["大家好，我是学习java的新手，下面关于线程的问题有点搞不明白", "\n\n", "下面是我的一个小程序，但是我每次运行出来的结果却不一样？这是为什么呢？", "\n\n", "问题2：如果线程1占有了cpu，执行了run（）方法，不是会一直循环到ticket=0才停止的么?", "\n\n", "如果是这样的话，那线程2，线程3，线程4不是没有机会调用run（）方法运行了？", "\n\n", "问题3：如果这么随机运行的话，我们通过什么来控制多线程按我们想要的方式运行呢？", "\n\n", "先谢谢大家帮忙，谢谢了", "\n\n", "public class TicketSystem {", " public static void main(String[] args) {", "  SellTicket st=new SellTicket();", "  new Thread(st).start();//线程1", "  new Thread(st).start();//线程2", "  new Thread(st).start();//线程3", "  new Thread(st).start();//线程4", " }", "\n\n", "}", "class SellTicket implements Runnable", "{", " int ticket=20;", " public void run()", " {", "  while(true)", "  {", "   if(ticket>0)", "   {", "    try{", "     Thread.sleep(100);", "    }", "   catch(Exception e)", "    {", "     e.printStackTrace();", "    }", "    System.out.println(Thread.currentThread().getName()+\"Have sold tickets \"+ticket);", "    ticket--;", "   }", "  }", " }", " ", "}", "\n\n", "我的运行结果如下：", "\n\n", "Thread-1Have sold tickets 20", "Thread-0Have sold tickets 20", "Thread-2Have sold tickets 20", "Thread-3Have sold tickets 17", "Thread-1Have sold tickets 16", "Thread-2Have sold tickets 16", "Thread-0Have sold tickets 16", "Thread-3Have sold tickets 13", "Thread-2Have sold tickets 12", "Thread-0Have sold tickets 11", "Thread-1Have sold tickets 10", "Thread-3Have sold tickets 9", "Thread-0Have sold tickets 8", "Thread-1Have sold tickets 8", "Thread-2Have sold tickets 8", "Thread-3Have sold tickets 5", "Thread-0Have sold tickets 4", "Thread-1Have sold tickets 4", "Thread-2Have sold tickets 4", "Thread-3Have sold tickets 1", "Thread-0Have sold tickets 0", "Thread-1Have sold tickets -1", "Thread-2Have sold tickets -2"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的输入参数填的是什么啊&amp;#xff1f;x&amp;#xff0c;t&amp;#xff0c;u&amp;#xff0c;flag都填的是啥&amp;#xff1f;光给了个函数脚本怎么看额&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["flag = 1 (derivatives), at time 0.0.索引超出数组元素的数目(2)", ["\nfunction [sys,x0,str,ts]= NDO(t,x,u,flag)\n", "switch", " flag,\n", "case", " ", "0", ",\n    [sys,x0,str,ts]=mdlInitializeSizes;\n", "case", " ", "1", ",\n    sys=mdlDerivatives(t,x,u);\n", "case", " ", "3", ",\n    sys=mdlOutputs(t,x,u);\n", "case", " {", "2", ", ", "4", ", ", "9", " }\n    sys = [];\notherwise\n    ", "error", "([", "'Unhandled flag = '", ",num2str(flag)]);\nend\nfunction [sys,x0,str,ts]=mdlInitializeSizes\nsizes = simsizes;\nsizes.NumContStates  = ", "6", ";\nsizes.NumDiscStates  = ", "0", ";\nsizes.NumOutputs     = ", "6", ";          %输出", "6", "个观测值；\nsizes.NumInputs      = ", "6", ";            %输入", "2", "个控制输入+", "4", "个实际q1、q2及其导数输出；\nsizes.DirFeedthrough = ", "1", ";\nsizes.NumSampleTimes = ", "0", ";\nsys=simsizes(sizes);\nx0=[", "0", " ", "0", " ", "0", " ", "0", " ", "0", " ", "0", "];       %观测器初始值；\nstr=[];\nts=[];\nfunction sys=mdlDerivatives(t,x,u)\ntol=[u(", "1", ");u(", "2", ")];     %%控制力矩\nth=[u(", "3", ");u(", "5", ")];      %%实际位置；\ndth=[u(", "4", ");u(", "6", ")];      %%实际速度；\n\nwzgj_1=x(", "1", ");    %%q1位置估计\nsdgj_1=x(", "2", ");    %%q1速度估计\nf1=x(", "3", ");        %%扰动", "1", "\nwzgj_2=x(", "4", ");    %%q2位置估计\nsdgj_2=x(", "5", ");    %%q2速度估计\nf2=x(", "6", ");        %%扰动", "2", "\n\n\nH1=", "0.4", ";W2=", "0.2", ";    %动力学方程；\nJ1=", "5", ";J2=", "5", ";\nm1=", "1", ";m2=", "1", ";\ng=", "9.8", ";\n\na11=(m1+m2)*H1^", "2", "+m2*W2^", "2", "+", "2", "*m2*H1*W2*", "cos", "(th(", "2", "))+J1;\na12=m2*W2^", "2", "+m2*H1*W2*", "cos", "(th(", "2", "));\na22=m2*W2^", "2", "+J2;\nb12=m2*H1*W2*", "sin", "(th(", "2", "));\n\ngama1=(m1*W2+m2*H1)*", "cos", "(th(", "1", "))+m2*W2*", "cos", "(th(", "1", ")+th(", "2", "));\ngama2=m2*W2*", "cos", "(th(", "1", ")+th(", "2", "));\n\nM0=[a11 a12;a12 a22];\nC0=[-b12*dth(", "2", ") -b12*(dth(", "1", ")+dth(", "2", "));-b12*dth(", "1", ") ", "0", "];\ng0=[gama1*g;gama2*g];\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%FXESO参数\nEp_1=[", "4", " ", "0", ";", "0", " ", "4", "];Ep_2=[", "15", " ", "0", ";", "0", " ", "15", "];Ep_3=[", "40", " ", "0", ";", "0", " ", "40", "];\nphi_1=[", "15", " ", "0", ";", "0", " ", "15", "];phi_2=[", "25", " ", "0", ";", "0", " ", "25", "];phi_3=[", "60", " ", "0", ";", "0", " ", "60", "];\nh_1=", "0.8", ";h_2=", "0.6", ";h_3=", "0.4", ";\nlam_1=", "1.2", ";lam_2=", "1.4", ";lam_3=", "1.6", ";\nk=[", "1", " ", "0", ";", "0", " ", "1", "];\n\n%%%%%%观测器误差", "1", "%%%%%%观测器误差", "2", "\ne1=th(", "1", ")-wzgj_1;\ne2=th(", "4", ")-wzgj_2;\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%fal循环\n delta1=", "0.6", ";delta2=", "0.01", ";            \n alfa1=", "0.02", ";alfa2=", "0.5", ";\n ", "if", " ", "abs", "(e1)>delta1\n       fal1=", "abs", "(e1)^alfa1*", "sign", "(e1);\n ", "else", "\n     fal1=e1/(delta1^(", "1", "-alfa1));\n end\n %%%%%%%%%%%%%%%%%%%\n ", "if", " ", "abs", "(e2)>delta2\n       fal2=", "abs", "(e2)^alfa2*", "sign", "(e2);\n ", "else", "\n     fal2=e2/(delta2^(", "1", "-alfa2));\n end\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%控制器涉及的矩阵\nz11_1=(", "abs", "(e1))^(", "0.8", ")*", "sign", "(e1);  \nz12_1=(", "abs", "(e1))^(", "1.2", ")*", "sign", "(e1); \nz21_1=(", "abs", "(e1))^(", "0.6", ")*", "sign", "(e1);  \nz22_1=(", "abs", "(e1))^(", "1.4", ")*", "sign", "(e1);\nz31_1=(", "abs", "(e1))^(", "0.4", ")*", "sign", "(e1);  \nz32_1=(", "abs", "(e1))^(", "1.6", ")*", "sign", "(e1);\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%第二组\nz11_2=(", "abs", "(e2))^(", "0.8", ")*", "sign", "(e2);  \nz12_2=(", "abs", "(e2))^(", "1.2", ")*", "sign", "(e2); \nz21_2=(", "abs", "(e2))^(", "0.6", ")*", "sign", "(e2);  \nz22_2=(", "abs", "(e2))^(", "1.4", ")*", "sign", "(e2);\nz31_2=(", "abs", "(e2))^(", "0.4", ")*", "sign", "(e2);  \nz32_2=(", "abs", "(e2))^(", "1.6", ")*", "sign", "(e2);\n\ntao0=inv(M0)*(tol-C0*dth-g0);\n\nsys(", "1", ")=sdgj_1+Ep_1*z11_1+phi_1*z12_1;  %%%观测q1位置\nsys(", "2", ")=f1+Ep_2*z21_1+phi_2*z22_1+tao0;   %%%%观测q1速度\nsys(", "3", ")=Ep_3*z31_1+phi_3*z32_1+", "1", "*fal1(e1);  %%%%观测f1扰动\n\nsys(", "4", ")=sdgj_2+Ep_1*z11_2+phi_1*z12_2;      %%%%观测q2位置\nsys(", "5", ")=f2+Ep_2*z21_2+phi_2*z22_2+tao0;     %%%%%观测q2速度\nsys(", "6", ")=Ep_3*z31_2+phi_3*z32_2+k*fal2(e2);   %%%%观测f2扰动 \nfunction sys=mdlOutputs(t,x,u)\nsys(", "1", ")=x(", "1", ");              %q1位置估计\nsys(", "2", ")=x(", "2", ");              %q1速度估计\nsys(", "3", ")=x(", "3", ");              %f1估计\n\nsys(", "4", ")=x(", "4", ");              %q2位置估计\nsys(", "5", ")=x(", "5", ");              %q2速度估计\nsys(", "6", ")=x(", "6", ");              %f2估计\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;        &lt;span class=\"hljs-string\"&gt;switch&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;(n)//防止向反方向移动&lt;/span&gt;\n        {\n        &lt;span class=\"hljs-attr\"&gt;case UP:&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;case DOWN:&lt;/span&gt;\n            &lt;span class=\"hljs-string\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;(tmp&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;LEFT&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;tmp&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;RIGHT)&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-string\"&gt;n&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;tmp;&lt;/span&gt;\n            }\n            &lt;span class=\"hljs-string\"&gt;break;&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;case LEFT:&lt;/span&gt;\n        &lt;span class=\"hljs-attr\"&gt;case RIGHT:&lt;/span&gt;\n            &lt;span class=\"hljs-string\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;(tmp&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;UP&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;tmp&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;!&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;DOWN)&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-string\"&gt;n&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;tmp;&lt;/span&gt;\n                &lt;span class=\"hljs-string\"&gt;break;&lt;/span&gt;\n            }\n        &lt;span class=\"hljs-attr\"&gt;first:&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;大括号写错了&amp;#xff0c;switch (n)的右大括号应在first上面。然后删掉first下面对应的右大括号就好了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["第一次做“贪吃蛇”项目无法正常运行，求解惑。", ["学C不久，在网上看见“贪吃蛇”的教程，感觉有意思跟着做了一下。", "目前程序可以运行，但是当我用“a”“s”“d”“w”控制蛇的方向时，", "蛇就不动，对着教程看了好几遍还是看不出哪里错了，求帮忙解答，", "已经折腾一天了。", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<time.h>", "\n", "#", "include", "<Windows.h>", "\n", "#", "include", "<conio.h>", "\n\n\n", "#", "define", " ROW 22", "\n", "#", "define", " COL 42", "\n", "#", "define", " KONG 0", "\n", "#", "define", " WALL 1", "\n", "#", "define", " FOOD 2", "\n", "#", "define", " HEAD 3", "\n", "#", "define", " BODY 4", "\n", "#", "define", " UP ", "'w'", "\n", "#", "define", " DOWN ", "'s'", "\n", "#", "define", " LEFT ", "'a'", "\n", "#", "define", " RIGHT ", "'d'", "\n", "#", "define", " SPACE 32", "\n", "#", "define", " ESC 27", "\n\n", "struct", " ", "Snake", "\n{\n    ", "int", " len;\n    ", "int", " x;\n    ", "int", " y;\n}snake;\n\n", "struct", " ", "body", "{\n    ", "int", " x;\n    ", "int", " y;\n}body[ROW*COL];\n\n", "int", " face[ROW][COL];\n\n", "void", " ", "HideCursor", "()", ";\n", "void", " ", "CursorJump", "(", "int", " x, ", "int", " y)", ";\n", "void", " ", "InitInterface", "()", ";\n", "void", " ", "color", "(", "int", " c)", ";\n", "void", " ", "ReadGrade", "()", ";\n", "void", " ", "WriteGrade", "()", ";\n", "void", " ", "InitSnake", "()", ";\n", "void", " ", "RandFood", "()", ";\n", "void", " ", "JudgFunc", "(", "int", " x, ", "int", " y)", ";\n", "void", " ", "DrawSnake", "(", "int", " flag)", ";\n", "void", " ", "MoveSnake", "(", "int", " x, ", "int", " y)", ";\n", "void", " ", "run", "(", "int", " x, ", "int", " y)", ";\n", "void", " ", "Game", "()", ";\n\n", "int", " max,grade;\n", "int", " ", "main", "()", "\n", "{\n", "#", "pragma", " ", "warning", " (disable:4996)", "\n    max = ", "0", ", grade = ", "0", ";\n    ", "system", "(", "\"title 贪吃蛇\"", ");\n    ", "system", "(", "\"mode con cols=84 lines=23\"", ");\n    ", "HideCursor", "();\n    ", "ReadGrade", "();\n    ", "InitInterface", "();\n    ", "InitSnake", "();\n    ", "srand", "((", "unsigned", " ", "int", ")", "time", "(", "NULL", "));\n    ", "RandFood", "();\n    ", "DrawSnake", "(", "1", ");\n    ", "Game", "();\n    ", "return", " ", "0", ";\n}\n", "void", " ", "HideCursor", "()", "//隐藏光标", "\n", "{\n    CONSOLE_CURSOR_INFO curInfo;\n    curInfo.dwSize = ", "1", ";\n    curInfo.bVisible = FALSE;\n    HANDLE handle = ", "GetStdHandle", "(STD_OUTPUT_HANDLE);\n    ", "SetConsoleCursorInfo", "(handle, &curInfo);\n}\n\n", "void", " ", "CursorJump", "(", "int", " x,", "int", " y)", "//定位光标", "\n", "{\n    COORD pos;\n    pos.X = x;\n    pos.Y = y;\n    HANDLE handle = ", "GetStdHandle", "(STD_OUTPUT_HANDLE);\n    ", "SetConsoleCursorPosition", "(handle, pos);\n}\n\n", "void", " ", "color", "(", "int", " c)", "//颜色", "\n", "{\n    ", "SetConsoleTextAttribute", "(", "GetStdHandle", "(STD_OUTPUT_HANDLE), c);\n}\n\n", "void", " ", "InitInterface", "()", "//构建框架", "\n", "{\n    ", "color", "(", "6", ");\n    ", "for", " (", "int", " i = ", "0", "; i < ROW; i++)\n    {\n        ", "for", " (", "int", " j = ", "0", "; j < COL; j++)\n        {\n            ", "if", " (j == ", "0", " || j == COL - ", "1", ")\n            {\n                face[i][j] = WALL;\n                ", "CursorJump", "(", "2", "*j, i);\n                ", "printf", "(", "\"回\"", ");\n            }\n            ", "else", " ", "if", " (i == ", "0", " || i == ROW - ", "1", ")\n            {\n                face[i][j] = WALL;\n                ", "printf", "(", "\"回\"", ");\n            }\n            ", "else", "\n            {\n                face[i][j] = KONG;\n            }\n        }\n    }\n    ", "color", "(", "7", ");\n    ", "CursorJump", "(", "0", ", ROW);\n    ", "printf", "(", "\"当前得分:%d\"", ", grade);\n    ", "CursorJump", "(COL, ROW);\n    ", "printf", "(", "\"历史最高分:%d\"", ", max);\n}\n\n", "void", " ", "InitSnake", "()", "\n", "{\n    snake.len = ", "2", ";\n    snake.x = COL / ", "2", ";\n    snake.y = ROW / ", "2", ";\n    body[", "0", "].x = COL / ", "2", " - ", "1", ";\n    body[", "0", "].y = ROW / ", "2", ";\n    body[", "1", "].x = COL / ", "2", " - ", "2", ";\n    body[", "1", "].y = ROW / ", "2", ";\n    face[snake.y][snake.x] = HEAD;\n    face[body[", "0", "].y][body[", "0", "].x] = BODY;\n    face[body[", "1", "].y][body[", "1", "].x] = BODY;\n}\n\n    \n", "void", " ", "ReadGrade", "()", "//读入文件中的最高纪录或生成文件", "\n", "{\n    FILE* pf = ", "fopen", "(", "\"贪吃蛇最高得分记录.txt\"", ", ", "\"r\"", ");\n    ", "if", " (pf == ", "NULL", ")\n    {\n        pf = ", "fopen", "(", "\"贪吃蛇最高得分记录.txt\"", ", ", "\"w\"", ");\n        ", "fwrite", "(&max, ", "sizeof", "(", "int", "),", "1", ",pf);\n    }\n    ", "fseek", "(pf, ", "0", ", SEEK_SET);\n    ", "fread", "(&max, ", "sizeof", "(", "int", "), ", "1", ", pf);\n    ", "fclose", "(pf);\n    pf = ", "NULL", ";\n}\n\n", "void", " ", "WriteGrade", "()", "\n", "{\n    FILE* pf = ", "fopen", "(", "\"贪吃蛇最高得分记录.txt\"", ", ", "\"w\"", ");\n    ", "if", " (pf == ", "NULL", ")\n    {\n        ", "printf", "(", "\"保存最高得分记录失败\\n\"", ");\n        ", "exit", "(", "0", ");\n    }\n}\n\n", "void", " ", "RandFood", "()", "//随机生成食物", "\n", "{\n    ", "int", " i, j;\n    ", "do", "\n    {\n        i = ", "rand", "() % ROW;\n        j = ", "rand", "() % COL;\n    } ", "while", " (face[i][j] != KONG);\n    face[i][j] = FOOD;\n    ", "color", "(", "12", ");\n    ", "CursorJump", "(", "2", " * j, i);\n    ", "printf", "(", "\"@\"", ");\n}\n\n", "void", " ", "DrawSnake", "(", "int", " flag)", "//打印蛇", "\n", "{\n    ", "if", " (flag == ", "1", ")\n    {\n        ", "color", "(", "10", ");\n        ", "CursorJump", "(", "2", " * snake.x, snake.y);\n        ", "printf", "(", "\"Q\"", ");\n        ", "for", " (", "int", " i = ", "0", "; i < snake.len; i++)\n        {\n            ", "CursorJump", "(", "2", " * body[i].x, body[i].y);\n            ", "printf", "(", "\"O\"", ");\n        }\n    }\n    ", "else", "\n    {\n        ", "if", " (body[snake.len - ", "1", "].x != ", "0", ")\n        {\n            ", "CursorJump", "(", "2", " * body[snake.len - ", "1", "].x, body[snake.len - ", "1", "].y);\n            ", "printf", "(", "\" \"", ");\n        }\n    }\n}\n    \n\n", "void", " ", "MoveSnake", "(", "int", " x, ", "int", " y)", "//移动蛇", "\n", "{\n    ", "DrawSnake", "(", "0", ");\n    face[body[snake.len - ", "1", "].y][ body[snake.len - ", "1", "].x ] = KONG;\n\n    ", "for", " (", "int", " i = snake.len - ", "1", "; i > ", "0", "; i--)\n    {\n        body[i].x = body[i - ", "1", "].x;\n        body[i].y = body[i - ", "1", "].y;\n    }\n    body[", "0", "].x = snake.x;\n    body[", "0", "].y = snake.y;\n    snake.x = snake.x + x;\n    snake.y = snake.y + y;\n    ", "DrawSnake", "(", "1", ");\n}\n\n", "void", " ", "run", "(", "int", " x, ", "int", " y)", "//使蛇能够自动向前移动", "\n", "{\n    ", "int", " t = ", "0", ";\n    ", "while", " (", "1", ")\n    {\n        ", "if", " (t == ", "0", ")\n            t = ", "30000", ";\n        ", "while", " (--t)\n        {    \n                ", "if", " (", "kbhit", "() != ", "0", ")", "//如果按下键盘，跳出此循环，感觉这里有点问题", "\n                {\n                ", "break", ";\n            }\n        }\n        ", "if", " (t == ", "0", ")", "//如果没有接收任何指令，则向原来方向移动，反之跳出循环离开函数。", "\n        {\n            ", "JudgFunc", "(x, y);", "//检查蛇头状态", "\n            ", "MoveSnake", "(x, y);", "//使蛇进行下一步动作", "\n        }\n        ", "else", "\n        {\n            ", "break", ";\n        }\n    }\n}\n\n", "void", " ", "Game", "()", "\n", "{\n    ", "int", " n = RIGHT;\n    ", "int", " tmp = ", "0", ";\n    ", "goto", " first;", "//默认开始向右移动", "\n    ", "while", " (", "1", ")\n    {\n        n = ", "getch", "();", "//跳出run函数后读取输入", "\n        ", "switch", " (n)", "//防止向反方向移动", "\n        {\n        ", "case", " UP:\n        ", "case", " DOWN:\n            ", "if", " (tmp != LEFT && tmp != RIGHT)\n            {\n                n = tmp;\n            }\n            ", "break", ";\n        ", "case", " LEFT:\n        ", "case", " RIGHT:\n            ", "if", " (tmp != UP && tmp != DOWN)\n            {\n                n = tmp;\n                ", "break", ";\n            }\n        first:\n            ", "switch", " (n)\n            {\n            ", "case", " UP:\n                ", "run", "(", "0", ", ", "-1", ");\n                tmp = UP;\n                ", "break", ";\n            ", "case", " DOWN:\n                ", "run", "(", "0", ", ", "1", ");\n                tmp = DOWN;\n                ", "break", ";\n            ", "case", " LEFT:\n                ", "run", "(", "-1", ", ", "0", ");\n                tmp = LEFT;\n                ", "break", ";\n            ", "case", " RIGHT:\n                ", "run", "(", "1", ", ", "0", ");\n                tmp = RIGHT;\n                ", "break", ";\n            ", "case", " SPACE:\n                ", "system", "(", "\"pause>nul\"", ");\n                ", "break", ";\n            ", "case", " ESC:\n                ", "system", "(", "\"cls\"", ");\n                ", "color", "(", "7", ");\n                ", "CursorJump", "(COL - ", "8", ", ROW / ", "2", ");\n                ", "printf", "(", "\" 游戏结束 \"", ");\n                ", "CursorJump", "(COL - ", "8", ", ROW / ", "2", " + ", "2", ");\n            ", "case", "'", "r", "'", ":\n            ", "case", "'", "R", "'", ":\n                ", "system", "(", "\"cls\"", ");\n                ", "main", "();\n            }\n        }\n    }\n}\n    \n", "void", " ", "JudgFunc", "(", "int", " x, ", "int", " y)", "//检查蛇头状态", "\n", "{\n    ", "if", " (face[snake.y + y][snake.x + x ] == FOOD)", "//吃到食物长度加一", "\n    {\n        snake.len++;\n        grade += ", "10", ";\n        ", "color", "(", "7", ");\n        ", "CursorJump", "(", "0", ", ROW);\n        ", "printf", "(", "\"当前得分：%d\"", ", grade);\n        ", "RandFood", "();\n    }\n    ", "else", " ", "if", " (face[snake.y + y][snake.x + x] == WALL || face[snake.y + y][snake.x + x] == BODY)", "//撞身/墙游戏结束", "\n    {\n        ", "Sleep", "(", "1000", ");\n        ", "system", "(", "\"cls\"", ");\n        ", "color", "(", "7", ");\n        ", "CursorJump", "(", "2", " * (COL / ", "3", "), ROW / ", "2", " - ", "3", ");\n        ", "if", " (grade > max)\n        {\n            ", "printf", "(", "\"恭喜你打破记录，最高记录更新为%d\"", ", grade);\n            ", "WriteGrade", "();\n        }\n        ", "else", " ", "if", " (grade == max)\n        {\n            ", "printf", "(", "\"与最高记录持平，加油再创佳绩\"", ", grade);\n        }\n        ", "else", "\n        {\n            ", "printf", "(", "\"请继续加油，当前与最高记录相差%d\"", ", max - grade);\n        }\n        ", "CursorJump", "(", "2", " * (COL / ", "3", "), ROW / ", "2", ");\n        ", "printf", "(", "\"GAME OVER\"", ");\n        ", "while", " (", "1", ")", "//询问是否继续游戏", "\n        {\n            ", "char", " ch;\n            ", "CursorJump", "(", "2", " * (COL / ", "3", "), ROW / ", "2", " + ", "3", ");\n            ", "printf", "(", "\"再来一局?(y/n):\"", ");\n            ", "scanf", "(", "\"%c\"", ", &ch);\n            ", "if", " (ch == ", "'y'", " || ch == ", "'Y'", ")\n            {\n                ", "system", "(", "\"cls\"", ");\n                ", "main", "();\n            }\n            ", "else", " ", "if", " (ch == ", "'n'", " || ch == ", "'N'", ")\n            {\n                ", "CursorJump", "(", "2", " * (COL / ", "3", "), ROW / ", "2", " + ", "5", ");\n                ", "exit", "(", "0", ");\n            }\n            ", "else", "\n            {\n                ", "CursorJump", "(", "2", " * (COL / ", "3", "), ROW / ", "2", " + ", "5", ");\n                ", "printf", "(", "\"选择错误，请再次选择\"", ");\n            }\n        }\n    }\n}\n\n\n", "\n", "感觉问题就在这两个函数里", "\n", "\n\nvoid ", "run", "(", "int", " x, ", "int", " y)", "//使蛇能够自动向前移动", "\n{\n    ", "int", " t = ", "0", ";", "\n    ", "while", " (", "1", ")\n    {\n        ", "if", " (t == ", "0", ")\n            t = ", "30000", ";", "\n        ", "while", " (--t)\n        {    \n                ", "if", " (kbhit() != ", "0", ")", "//如果按下键盘，跳出此循环，感觉这里有点问题", "\n                {\n                ", "break", ";", "\n            }\n        }\n        ", "if", " (t == ", "0", ")", "//如果没有接收任何指令，则向原来方向移动，反之跳出循环离开函数。", "\n        {\n            JudgFunc(x, y)", ";//检查蛇头状态", "\n            MoveSnake(x, y)", ";//使蛇进行下一步动作", "\n        }\n        ", "else", "\n        {\n            ", "break", ";", "\n        }\n    }\n}\n\nvoid Game()\n{\n    ", "int", " n = RIGHT", ";", "\n    ", "int", " tmp = ", "0", ";", "\n    ", "goto", " first", ";//默认开始向右移动", "\n    ", "while", " (", "1", ")\n    {\n        n = getch()", ";//跳出run函数后读取输入", "\n        ", "switch", " (n)", "//防止向反方向移动", "\n        {\n        ", "case", " UP:\n        ", "case", " DOWN:\n            ", "if", " (tmp != LEFT && tmp != RIGHT)\n            {\n                n = tmp", ";", "\n            }\n            ", "break", ";", "\n        ", "case", " LEFT:\n        ", "case", " RIGHT:\n            ", "if", " (tmp != UP && tmp != DOWN)\n            {\n                n = tmp", ";", "\n                ", "break", ";", "\n            }\n        first:\n            ", "switch", " (n)\n            {\n            ", "case", " UP:\n                ", "run", "(", "0", ", ", "-1", ")", ";", "\n                tmp = UP", ";", "\n                ", "break", ";", "\n            ", "case", " DOWN:\n                ", "run", "(", "0", ", ", "1", ")", ";", "\n                tmp = DOWN", ";", "\n                ", "break", ";", "\n            ", "case", " LEFT:\n                ", "run", "(", "-1", ", ", "0", ")", ";", "\n                tmp = LEFT", ";", "\n                ", "break", ";", "\n            ", "case", " RIGHT:\n                ", "run", "(", "1", ", ", "0", ")", ";", "\n                tmp = RIGHT", ";", "\n                ", "break", ";", "\n            ", "case", " SPACE:\n                ", "system", "(", "\"pause>nul\"", ")", ";", "\n                ", "break", ";", "\n            ", "case", " ESC:\n                ", "system", "(", "\"cls\"", ")", ";", "\n                ", "color", "(", "7", ")", ";", "\n                CursorJump(COL - ", "8", ", ROW / ", "2", ")", ";", "\n                printf(", "\" 游戏结束 \"", ")", ";", "\n                CursorJump(COL - ", "8", ", ROW / ", "2", " + ", "2", ")", ";", "\n            ", "case", "'r'", ":\n            ", "case", "'R'", ":\n                ", "system", "(", "\"cls\"", ")", ";", "\n                main()", ";", "\n            }\n        }\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "给你个思路\r\n\t\t1、如果你后端要用数组接的话，那么就把 table 同一列的input元素name数据值写成一样，后端就可以数组接收\r\n\t\t2、也可以后端接收字符串的json格式数据，然后转成Map，  前台构建json对象的数据用JSON.stringify(List) 转成字符串作为参数值给后端", "Konwledge_Point": "循环控制", "Question": ["怎么把前台页面的table里面的值封装成list 传入到后台   table的值是js动态赋值的", ["项目采用框架spring springmvc mybatis", "\n数据库 mybatis", "\n\n", "js部分", "\n\n", " var arrVZ=eval(json[index].listVX);//arrVZ是一个数组\n                        var str=\"\";\n                        for (var i = 0; i< arrVZ.length; i++) {\n                            alert(arrVZ[i].xiangmu_name);\n                            alert(\"项目id:\"+arrVZ[i].id);\n                            str +=\"<tr>\";\n                            str +=\"<td colspan=\\\"5\\\">\";\n                            str +=\"<div style=\\\"margin-left: 148px;\\\" id=\\\"visceraXiangmus\\\">\";\n                            str +=\"<div style=\\\"float: left;\\\">\";\n                            str +=\"<input type=\\\"hidden\\\" name=\\\"id2\\\" id=\\\"id2\\\" value=\\\"\"+arrVZ[i].id+\"\\\"/>\";\n                            str +=\"<textarea style=\\\"width: 50px;\\\" id=\\\"xiangmu_code\\\" name=\\\"xiangmu_code\\\" >\"+arrVZ[i].xiangmu_code+\"</textarea>\";\n                            str +=\"<textarea style=\\\"width: 100px;margin-left: 13px;\\\" id=\\\"value\\\" name=\\\"value\\\">\"+arrVZ[i].value+\"</textarea>\";\n                            str +=\"<textarea style=\\\"width: 120px;margin-left: 14px;\\\" id=\\\"xiangmu_name\\\" name=\\\"xiangmu_name\\\">\"+arrVZ[i].xiangmu_name+\"</textarea>\";\n                            str +=\"<textarea style=\\\"width: 360px; margin-left: 14px;\\\" id=\\\"content\\\" name=\\\"content\\\">\"+arrVZ[i].content+\"</textarea>\";\n                            str +=\"</div>\";\n                            str +=\"<div >\";\n                            str +=\" <input type=\\\"button\\\" onclick=\\\"delRow(this)\\\" value=\\\"删除\\\" id=\\\"deleteXiangmu\\\" name=\\\"deleteXiangmu\\\" style=\\\"float: left; margin-left: 10px; margin-top: 5px;\\\">\";\n                            str +=\"</div>\";\n                            str +=\"</div>\";\n                            str +=\"</td>\";                      \n                            str +=\"</tr>\";\n                            $(\"#tbody\").html(str);\n\n                        }                       \n", "\n\n", "jsp页面部分", "\n\n", " <!--  脏腑项目开始 -->\n                                        <!--  脏腑项目开始 -->\n                                    <div id=\"middle\">\n                                       <!-- <button style=\"float: right; margin-right: 95px;\">添加</button> -->\n                                       <input type=\"button\" onclick=\"addRow()\" value=\"添加项目\"id=\"saveXiangmu\" name=\"saveXiangmu\" style=\"float: right; margin-right: 95px;\">\n                                      <table border=\"0\" cellpadding=\"2\" cellspacing=\"1\" style=\"width: 100%\" id=\"rowTable\">\n                                       <thead>\n                                          <th></th>\n                                       <tr>\n                                         <td colspan=\"5\" style=\"line-height: 40px;\">\n                                            <label style=\"margin-left:148px\">项目编号</label>\n                                            <label style=\"margin-left:20px\">项目分值</label>\n                                            <label style=\"margin-left:68px\">项目名称</label>\n                                            <label style=\"margin-left:88px\">项目说明</label>\n                                         </td>\n                                       </tr>\n\n                                       </thead>\n                                  <!-- tbody里面是动态添加的内容 -->\n                                       <tbody id=\"tbody\">\n\n\n                                       </tbody>                             \n                                     </table>                                   \n                                    </div>\n\n                                    <hr style=\"width: 80%;margin-top: 30px;margin-bottom:30px\">\n                                    <!--  脏腑项目结束 -->\n", "\n\n", "控制器部分", "\n\n", "        List<VisceraXiangmu> listVX=jingluoDetectionService.findVisceraXiangmuByZangfuId(zangfu_id1);\n                if(listVX.size()!=0){\n                    for (int i = 0; i < listVX.size(); i++) {\n                        System.out.println(listVX.get(i).getXiangmu_name());\n                        String id2 = request.getParameter(\"id2\") == null ? \"\" : request.getParameter(\"id2\");// 脏腑项目表id的值\n\n                        String xiangmu_code = request.getParameter(\"xiangmu_code\") == null ? \"\" : request.getParameter(\"xiangmu_code\");\n                        String xiangmu_name = request.getParameter(\"xiangmu_name\") == null ? \"\" : request.getParameter(\"xiangmu_name\");\n                        String main = request.getParameter(\"main\") == null ? \"\" : request.getParameter(\"main\");\n                        String gender = request.getParameter(\"gender\") == null ? \"\" : request.getParameter(\"gender\");\n                        String content = request.getParameter(\"content\") == null ? \"\" : request.getParameter(\"content\");\n                        String value = request.getParameter(\"value\") == null ? \"\" : request.getParameter(\"value\");\n                        int main1=Integer.parseInt(main+\"1\");\n                        int id3=Integer.parseInt(id2);\n                        jingluoDetectionService.updateVisceraXiangmu(id3, zangfu_id1, xiangmu_code, xiangmu_name, main1, gender, content, value);\n                    }\n", "\n\n", "页面展示", "\n\n", "\n\n", "怎么实现保存以后 循环批量修改页面显示的值", "\n\n", "后台的控制类 改怎么取接收动态的table的参数值来就行update"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你不断地重画背景图&amp;#xff0c;再画新内容&amp;#xff0c;每次画两遍不同内容&amp;#xff0c;肯定闪啊。就得用双缓存&amp;#xff0c;先在内存DC里画好再帖出来&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["vs c语言绘制图像不断闪烁", ["\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<Windows.h>", "\n", "#", "include", " ", "<easyx.h>", "\n", "#", "include", " ", "<conio.h>", "\n", "#", "include", " ", "<time.h>", "\n", "#", "include", " ", "<graphics.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", "<mmsystem.h>", "\n", "#", "include", "<math.h>", "\nIMAGE img_player;\nIMAGE img_player1;\nIMAGE img_monster1;\nIMAGE img_monster2;\nIMAGE img_food1;\nIMAGE img_food2;\nIMAGE img_food3;\nIMAGE img_food4;\nIMAGE img_food5;\nIMAGE img_map;\n", "struct", " ", "Player", " {\n    ", "int", " x;\n    ", "int", " y;    ", "//位置", "\n    ", "int", " dirx;\n    ", "int", " diry;     ", "//移动方向", "\n    ", "unsigned", " ", "long", " t1, t2, dt;       ", "//控制速度", "\n};\n", "struct", " ", "Player", " player, player1;\n\n", "//定义敌人", "\n", "struct", " ", "Enemy", " {\n    ", "int", " x;\n    ", "int", " y;\n    ", "int", " dirx;\n    ", "int", " diry;\n    ", "unsigned", " ", "long", " t1, t2, dt;\n};\n", "struct", " ", "Enemy", " monster1, monster2;\n\n", "//定义豆子", "\n", "struct", " ", "Food", " {\n    ", "int", " x;\n    ", "int", " y;\n    ", "bool", " isexist;\n    ", "//用于判断豆子是否被吃", "\n};\n", "struct", " ", "Food", " food1, food2, food3, food4, food5;\n", "void", " ", "wanjia", "()", "\n", "{\n    ", "BeginBatchDraw", "();\n    ", "loadimage", "(&img_player, _T(", "\"D:\\\\wanjia1.png\"", "), ", "50", ", ", "50", "); ", "//关键", "\n    ", "putimage", "(player.x, player.y, &img_player);\n    ", "loadimage", "(&img_player1, _T(", "\"D:\\\\wanjia1.png\"", "), ", "50", ", ", "50", "); ", "//关键", "\n    ", "putimage", "(player1.x, player1.y, &img_player1);\n    ", "EndBatchDraw", "();\n}\n\n", "void", " ", "diren", "()", "\n", "{\n    ", "BeginBatchDraw", "();\n    ", "loadimage", "(&img_monster1, _T(", "\"D:\\\\5.png\"", "), ", "50", ", ", "50", "); ", "//关键", "\n    ", "putimage", "(monster1.x, monster1.y, &img_monster1);\n    ", "loadimage", "(&img_monster2, _T(", "\"D:\\\\5.png\"", "), ", "50", ", ", "50", "); ", "//关键", "\n    ", "putimage", "(monster2.x, monster2.y, &img_monster2);\n    ", "EndBatchDraw", "();\n}\n\n", "void", " ", "douzi1", "()", "\n", "{\n    ", "BeginBatchDraw", "();\n    ", "loadimage", "(&img_food1, _T(", "\"D:\\\\food.png\"", "), ", "30", ", ", "30", "); ", "//关键", "\n    ", "putimage", "(", "800", ", ", "50", ", &img_food1);\n    ", "EndBatchDraw", "();\n}\n\n", "void", " ", "douzi2", "()", " ", "{\n    ", "BeginBatchDraw", "();\n    ", "loadimage", "(&img_food2, _T(", "\"D:\\\\food.png\"", "), ", "30", ", ", "30", "); ", "//关键", "\n    ", "putimage", "(", "270", ", ", "250", ", &img_food2);\n    ", "EndBatchDraw", "();\n}\n\n", "void", " ", "douzi3", "()", " ", "{\n    ", "BeginBatchDraw", "();\n    ", "loadimage", "(&img_food3, _T(", "\"D:\\\\food.png\"", "), ", "30", ", ", "30", "); ", "//关键", "\n    ", "putimage", "(", "285", ", ", "400", ", &img_food3);\n    ", "EndBatchDraw", "();\n}\n\n", "void", " ", "douzi4", "()", " ", "{\n    ", "BeginBatchDraw", "();\n    ", "loadimage", "(&img_food4, _T(", "\"D:\\\\food.png\"", "), ", "30", ", ", "30", "); ", "//关键", "\n    ", "putimage", "(", "750", ", ", "550", ", &img_food4);\n    ", "EndBatchDraw", "();\n}\n\n", "void", " ", "douzi5", "()", " ", "{\n    ", "BeginBatchDraw", "();\n    ", "loadimage", "(&img_food5, _T(", "\"D:\\\\food.png\"", "), ", "30", ", ", "30", "); ", "//关键", "\n    ", "putimage", "(", "700", ", ", "400", ", &img_food5);\n    ", "EndBatchDraw", "();\n}\n", "//3.显示程序", "\n", "void", " ", "GameDraw", "()", "\n", "{\n    ", "//开始绘制", "\n    ", "BeginBatchDraw", "();\n\n    ", "wanjia", "();\n\n    ", "//绘制敌人", "\n    ", "diren", "();\n    ", "//绘制豆子", "\n    ", "douzi1", "();\n    ", "douzi2", "();\n    ", "douzi3", "();\n    ", "douzi4", "();\n    ", "douzi5", "();\n\n    ", "//结束绘制", "\n    ", "EndBatchDraw", "();\n}\n", "int", "  ", "main", "()", " ", "{        ", "//显示菜单，并且获取用户输入的命令选项", "\n\n    ", "initgraph", "(", "900", ", ", "600", ");\n    ", "void", " ", "GameInit", "()", ";\n\n    \n    ", "cleardevice", "();\n    ", "while", " (", "1", ") {     ", "//游戏的每一个画面都在不断绘制，用循环", "\n        ", "BeginBatchDraw", "();\n        ", "loadimage", "(&img_map, _T(", "\"D:\\\\map2.jpg\"", "), ", "900", ", ", "600", "); ", "//关键", "\n        ", "putimage", "(", "0", ", ", "0", ", &img_map);\n        ", "GameDraw", "();\n        ", "FlushBatchDraw", "();\n        ", "EndBatchDraw", "();\n    }\n    ", "closegraph", "();\n}\n\n\n", "\n", "使用vs C语言绘制图片，并加入了", "BeginBatchDraw();", "FlushBatchDraw();", " EndBatchDraw();但仍然无法解决图像不断闪烁的问题。请问怎么办？（除了采用双缓冲的技术）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我自己找到了&amp;#xff0c;原因是判断输赢条件里&amp;#xff0c;return board没有设置具体坐标&amp;#xff0c;导致返回值不知道返回了些啥&amp;#xff0c;所以最后判断该打印什么的时候都是else平局&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["c语言写个三子棋，遇到个小问题", ["第一个问题：为啥我的scanf里没有空格，但我输入的时候输入11没反应，非得输入1空格1才行", "第二个问题：我把第一行输满，为啥显示平局，我知道这么多if有点麻烦，我也知道有更简便的方法，但我就是想知道哪里错了", "\n", "#", "include", " ", "\"自定义函数声明.h\"", "//引用库函数用的是<>，引用自建的头文件用的是\"\"", "\n\n", "void", " ", "menu", "()", "//三子棋登录页面", "\n", "{\n    ", "printf", "(", "\"**************************\\n\"", ");\n    ", "printf", "(", "\"**********三子棋**********\\n\"", ");\n    ", "printf", "(", "\"**************************\\n\"", ");\n    ", "printf", "(", "\"***  1.play    0.exit  ***\\n\"", ");\n    ", "printf", "(", "\"**************************\\n\"", ");\n}\n\n", "void", " ", "game", "()", "//三子棋游戏//%3意思是取余0-2,因为3%3=1", "\n", "{\n    ", "char", " board[ROW][COL] = {", "0", "};", "//设定一个二维数组", "\n    ", "char", " comeback = ", "0", ";\n    ", "InitBoard", "(board, ROW, COL);", "//初始化函数，清空面板", "\n    ", "Displayboard", "(board, ROW, COL);", "//打印棋盘函数，使棋盘可视化", "\n    ", "while", " (", "1", ")", "//永远为真，一直下，直到一方赢了break", "\n    {\n        ", "PlayerMove", "(board,ROW,COL);", "//玩家走", "\n        ", "Displayboard", "(board, ROW, COL);", "//打印棋盘", "\n        comeback = ", "IsWin", "(board, ROW, COL);\n        ", "if", " (comeback != ", "'C'", ")\n        {\n            ", "break", ";\n        }\n        ", "ComputerMove", "(board, ROW, COL);", "//电脑走", "\n        ", "Displayboard", "(board, ROW, COL);", "//打印棋盘", "\n        comeback = ", "IsWin", "(board, ROW, COL);\n        ", "if", " (comeback != ", "'C'", ")\n        {\n            ", "break", ";\n        }\n    }\n    ", "if", " (comeback == ", "'*'", ")\n    {\n        ", "printf", "(", "\"玩家获胜！\"", ");\n    }\n    ", "else", " ", "if", " (comeback == ", "'#'", ")\n    {\n        ", "printf", "(", "\"电脑获胜！\"", ");\n    }\n    ", "else", "\n    {\n        ", "printf", "(", "\"平局！\"", ");\n    }\n}\n\n", "void", " ", "test", "()", "//三子棋登录程序", "\n", "{\n    ", "int", " input = ", "0", ";", "//接收输出内容", "\n    ", "srand", "((", "unsigned", " ", "int", ")", "time", "(", "NULL", "));\n    ", "do", "//游戏至少要先进来，所以do while", "\n    {\n        ", "menu", "();", "//一进来是登录页面", "\n        ", "printf", "(", "\"choice>>>\"", ");\n        ", "scanf", "(", "\"%d\"", ", &input);\n        ", "switch", " (input)", "//根据输入内容来确定分支", "\n        {\n        ", "case", " ", "1", ":\n            ", "game", "();", "//1的话进入游戏，game程序结束后直接跳出循环，退出游戏", "\n            ", "break", ";\n        ", "case", " ", "0", ":\n            ", "printf", "(", "\"退出游戏！\\n\"", ");\n            ", "break", ";", "//0的话直接就是退出游戏", "\n        ", "default", ":\n            ", "printf", "(", "\"输入有误，请重新输入！\\n\"", ");", "//1和0以外的，提示重新输入", "\n            ", "break", ";\n        }\n    } \n    ", "while", " (input);", "//一进来输入1的话进入游戏，输入0的话退出游戏，输入非0，也就是真，再循环一次", "\n}", "//这样每个输入得数都有正确的路", "\n\n", "int", " ", "main", "()", "//三子棋游戏，设立主程序，里面的没个子程序都单独拿出来写，为了好区分", "\n", "{\n    ", "test", "();\n    ", "return", " ", "0", ";\n}\n", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS 1", "\n", "#", "include", " ", "<string.h>", "\n", "#", "include", " ", "<Windows.h>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<math.h>", "\n", "#", "include", " ", "<time.h>", "\n\n", "#", "ifndef", " __自定义函数声明_H_", "//n是not，意思是如果没有引用这个文件的话，就将下列的函数包含进去，如果引用过了，就不包含", "\n", "#", "define", " __自定义函数声明_H_", "\n", "#", "define", " ROW 3", "//控制棋盘的行", "\n", "#", "define", " COL 3", "//控制棋盘的列", "\n", "void", " ", "InitBoard", "(", "char", " board[ROW][COL],", "int", " row,", "int", " col)", ";\n", "void", " ", "Displayboard", "(", "char", " board[ROW][COL], ", "int", " row, ", "int", " col)", ";\n", "int", " ", "SuM", "(", "int", " x, ", "int", " y)", ";\n", "void", " ", "PlayerMove", "(", "char", " board[ROW][COL], ", "int", " row, ", "int", " col)", ";\n", "void", " ", "ComputerMove", "(", "char", " board[ROW][COL], ", "int", " row, ", "int", " col)", ";\n", "char", " ", "IsWin", "(", "char", " board[ROW][COL],", "int", " row, ", "int", " col)", ";\n\n", "#", "endif", "//函数声明结束", "\n", "\n", "#define ", "_CRT_SECURE_NO_WARNINGS", " ", "1", "//这个文件里写函数的内容\n#include ", "\"自定义函数声明.h\"", "\n\nvoid ", "InitBoard", "(char board[", "ROW", "][", "COL", "], int row, int col)//初始化函数，每次游戏之后清空面板//三子棋\n{\n    int i = ", "0", ";\n    int j = ", "0", ";\n    for (i = ", "0", "; i < row; i++)\n    {\n        for (j = ", "0", "; j < col; j++)\n        {\n            board[i][j] = ", "' '", ";\n        }\n    }\n}\n\nvoid ", "Displayboard", "(char board[", "ROW", "][", "COL", "], int row, int col)\n{\n    int i = ", "0", ";\n    int j = ", "0", ";\n    for (i = ", "0", "; i < row; i++)\n    {\n        for (j = ", "0", "; j < col; j++)//先打印一行\n        {\n            printf(", "\" %c \"", ", board[i][j]);\n            if (j < col - ", "1", ")//", "-1", "是为了避免最后多一次打印\n            {\n                printf(", "\"|\"", ");\n            }\n        }\n        printf(", "\"\\n\"", ");\n        if (i < row - ", "1", ")\n        {\n            for (j = ", "0", "; j < col; j++)\n            {\n                printf(", "\"---\"", ");\n                if (j < col - ", "1", ")\n                {\n                    printf(", "\"|\"", ");\n                }\n            }\n            printf(", "\"\\n\"", ");\n        }\n    }\n}\n\nvoid ", "PlayerMove", "(char board[", "ROW", "][", "COL", "], int row, int col)\n{\n    int x = ", "0", ";\n    int y = ", "0", ";\n    while (", "1", ")\n    {\n        printf(", "\"玩家走，请输入坐标>>\\n\"", ");\n        scanf(", "\"%d%d\"", ", &x, &y);\n        if (x >= ", "1", " && x <= ", "ROW", " && y >= ", "1", " && y <= ", "COL", ")\n        {\n            if (board[x - ", "1", "][y - ", "1", "] == ", "' '", ")\n            {\n                board[x - ", "1", "][y - ", "1", "] = ", "'*'", ";\n                break;\n            }\n            else\n            {\n                printf(", "\"该点已被占用\\n\"", ");\n            }\n        }\n        else\n        {\n            printf(", "\"输入坐标位于棋盘外\\n\"", ");\n        }\n    }\n}\n\nvoid ", "ComputerMove", "(char board[", "ROW", "][", "COL", "], int row, int col)\n{\n    int x = ", "0", ";\n    int y = ", "0", ";\n    printf(", "\"电脑走\\n\"", ");\n    while (", "1", ")\n    {\n        x = rand() ", "% 3;", "\n        y = rand() ", "% 3;", "\n        if (x >= ", "1", " && x <= ", "ROW", " && y >= ", "1", " && y <= ", "COL", ")\n        {\n            if (board[x][y] == ", "' '", ")\n            {\n                board[x][y] = ", "'#'", ";\n                break;\n            }\n        }\n\n    }\n}\n\nint ", "IsFull", "(char board[", "ROW", "][", "COL", "], int row, int col)//返回", "1", "表示棋盘满了，返回", "0", "表示棋盘没满\n{\n    for (int i = ", "0", "; i < row; i++)\n    {\n        for (int j = ", "0", "; j < col; j++)\n        {\n            if (board[i][j] == ", "' '", ")//只要有一个空格，就表示没满，直接返回", "0", "\n            {\n                return ", "0", ";\n            }\n        }\n    }\n    return ", "1", ";//循环完了没有返回", "0", "就来到这返回", "1", "，表示满了，平局\n}\n\nchar ", "IsWin", "(char board[", "ROW", "][", "COL", "], int row, int col)//自写判断输赢条件，缺点是数量大时不能一个一个写，先验证一下\n{\n    char x = ", "0", ";\n    //if (board[row][col] != ", "' '", " && board[", "0", "][", "0", "] == board[", "0", "][", "1", "] == board[", "0", "][", "2", "] == ", "'*'", " || board[", "1", "][", "0", "] == board[", "1", "][", "1", "] == board[", "1", "][", "2", "] == ", "'*'", " || board[", "2", "][", "0", "] == board[", "2", "][", "1", "] == board[", "2", "][", "2", "] == ", "'*'", " || board[", "0", "][", "0", "] == board[", "1", "][", "0", "] == board[", "2", "][", "0", "] == ", "'*'", " || board[", "1", "][", "0", "] == board[", "1", "][", "1", "] == board[", "1", "][", "2", "] == ", "'*'", " || board[", "2", "][", "0", "] == board[", "2", "][", "1", "] == board[", "2", "][", "2", "] == ", "'*'", " || board[", "0", "][", "0", "] == board[", "1", "][", "1", "] == board[", "2", "][", "2", "] == ", "'*'", " || board[", "0", "][", "2", "] == board[", "2", "][", "1", "] == board[", "2", "][", "0", "] == ", "'*'", ")\n    //{//不等于 空格 是因为一开始肯定有三个相等的空格，此时不能判断谁输谁赢\n    //    return board[row][col];//这里直接返回值，接收值在game函数里\n    //}\n    if (board[", "0", "][", "0", "] != ", "' '", " && board[", "0", "][", "1", "] != ", "' '", " && board[", "0", "][", "2", "] != ", "' '", " && board[", "0", "][", "0", "] == board[", "0", "][", "1", "] && board[", "0", "][", "1", "] == board[", "0", "][", "2", "])//行", "1", "\n    {\n        x=board[row][col];\n        return x;\n    }\n    if (board[", "1", "][", "0", "] != ", "' '", " && board[", "1", "][", "1", "] != ", "' '", " && board[", "1", "][", "2", "] != ", "' '", " && board[", "1", "][", "0", "] == board[", "1", "][", "1", "] && board[", "1", "][", "1", "] == board[", "1", "][", "2", "])//行", "2", "\n    {\n        return board[row][col];\n    }\n    if (board[", "2", "][", "0", "] != ", "' '", " && board[", "2", "][", "1", "] != ", "' '", " && board[", "2", "][", "2", "] != ", "' '", " && board[", "2", "][", "0", "] == board[", "2", "][", "1", "] && board[", "2", "][", "1", "] == board[", "2", "][", "2", "])//行", "3", "\n    {\n        return board[row][col];\n    }\n    if (board[", "0", "][", "0", "] != ", "' '", " && board[", "1", "][", "0", "] != ", "' '", " && board[", "2", "][", "0", "] != ", "' '", " && board[", "0", "][", "0", "] == board[", "1", "][", "0", "] && board[", "1", "][", "0", "] == board[", "2", "][", "0", "])//列", "1", "\n    {\n        return board[row][col];\n    }\n    if (board[", "0", "][", "1", "] != ", "' '", " && board[", "1", "][", "1", "] != ", "' '", " && board[", "2", "][", "1", "] != ", "' '", " && board[", "0", "][", "1", "] == board[", "1", "][", "1", "] && board[", "1", "][", "1", "] == board[", "2", "][", "1", "])//列", "2", "\n    {\n        return board[row][col];\n    }\n    if (board[", "0", "][", "2", "] != ", "' '", " && board[", "1", "][", "2", "] != ", "' '", " && board[", "2", "][", "2", "] != ", "' '", " && board[", "0", "][", "2", "] == board[", "1", "][", "2", "] && board[", "1", "][", "2", "] == board[", "2", "][", "2", "])//列", "3", "\n    {\n        return board[row][col];\n    }\n    if (board[", "0", "][", "0", "] != ", "' '", " && board[", "1", "][", "1", "] != ", "' '", " && board[", "2", "][", "2", "] != ", "' '", " && board[", "0", "][", "0", "] == board[", "1", "][", "1", "] && board[", "1", "][", "1", "] == board[", "2", "][", "2", "])//    \\    //\n    {\n        return board[row][col];\n    }\n    if (board[", "2", "][", "0", "] != ", "' '", " && board[", "1", "][", "1", "] != ", "' '", " && board[", "0", "][", "2", "] != ", "' '", " && board[", "2", "][", "0", "] == board[", "1", "][", "1", "] && board[", "1", "][", "1", "] == board[", "0", "][", "2", "])//    /    //\n    {\n        return board[row][col];\n    }\n    if (", "1", " == ", "IsFull", "(board,", "ROW", ",", "COL", "))\n    {\n        return ", "'Q'", ";\n    }\n    return ", "'C'", ";\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "kaishi.setOnClickListener(new Button.OnClickListener(){\r\n            public void onClick(View v){\r\n                DisplayMetrics dm = new DisplayMetrics();\r\n                getWindowManager().getDefaultDisplay().getMetrics(dm);\r\n                screenWidth = dm.widthPixels;\r\n                screenHeight = dm.heightPixels;             \r\n                setTitle(\"宽\"+screenWidth+\"  高\"+screenHeight);\r\n                requestWindowFeature(Window.FEATURE_NO_TITLE); \r\n                getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN); \r\n                    `myview = new BallView(this);`    //错误在这里 \r\n                setContentView(myview);\r\n            }\r\n\r\n这里面的这个`myview = new BallView(dazhuankuaiActivity.this);", "Konwledge_Point": "循环控制", "Question": ["所做Android打砖块代码其中 出错 求教", ["下面是代码  可其中出现了一个错误（做了标记），不知道怎么解决，可否有高手帮我看看，能不能稍作修改一下，做成正确的。", "\n就是这句错了  myview = new BallView(this);", "\n\n", "package sen.tan;\n\n\nimport android.app.Activity;\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.util.DisplayMetrics;\nimport android.view.KeyEvent;\nimport android.view.MotionEvent;\nimport android.view.View;\nimport android.view.Window;\nimport android.view.WindowManager;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\npublic class dazhuankuaiActivity extends Activity {\n    BallView myview;\n    public static  int screenWidth ;\n    public static  int screenHeight;\n    private TextView textview;\n    Button kaishi,jieshu,guanyu;\n    ImageView image;\n    /** Called when the activity is first created. */\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        String string = \"欢迎进入疯狂打砖块游戏\";\n        image = (ImageView) this.findViewById(R.id.image);\n        image.setImageResource(R.drawable.img1);\n        textview =(TextView) this.findViewById(R.id.textview);\n        textview.setTextSize(20);\n        textview.setTextColor(Color.GREEN);\n        textview.setBackgroundColor(Color.RED);\n        textview.setText(string);\n        kaishi=(Button)findViewById(R.id.button1);\n        guanyu=(Button)findViewById(R.id.button2);\n        jieshu=(Button)findViewById(R.id.button3);\n        kaishi.setWidth(250);\n        guanyu.setWidth(200);\n        jieshu.setWidth(150);\n        kaishi.setTextSize(35);\n        guanyu.setTextSize(29);\n        jieshu.setTextSize(24);\n\n\n        jieshu.setOnClickListener(new Button.OnClickListener(){\n            public void onClick(View v)\n            {\n                dazhuankuaiActivity.this.finish();\n            }\n\n\n        });\n        guanyu.setOnClickListener(new Button.OnClickListener(){\n            public void onClick(View v){\n                textview.setText(\"本游戏由xxx制作，此游戏控制左右按键，来回移动挡板，不让小球掉落，当小球把上方砖块全部打完时，游戏胜利\");\n            }\n        });\n        kaishi.setOnClickListener(new Button.OnClickListener(){\n            public void onClick(View v){\n                DisplayMetrics dm = new DisplayMetrics();\n                getWindowManager().getDefaultDisplay().getMetrics(dm);\n                screenWidth = dm.widthPixels;\n                screenHeight = dm.heightPixels;             \n                setTitle(\"宽\"+screenWidth+\"  高\"+screenHeight);\n                requestWindowFeature(Window.FEATURE_NO_TITLE); \n                getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN); \n                    `myview = new BallView(this);`    //错误在这里 \n                setContentView(myview);\n            }\n\n            public boolean onKeyDown(int keyCode, KeyEvent event)\n            {\n\n            switch (keyCode)\n                {\n        case KeyEvent.KEYCODE_MENU:\n            myview.resetGame();\n            break;\n            case KeyEvent.KEYCODE_DPAD_CENTER:\n            myview.ball_isRun = !myview.ball_isRun;\n               break;\n            case KeyEvent.KEYCODE_DPAD_LEFT:\n\n                    if(myview.ball_isRun){\n\n                if(myview.board_left<=myview.board_x_move)\n\n                    {\n\n            myview.board_left=0;\n\n                myview.board_right=myview.board_length;\n\n                }else{\n\n                myview.board_left-=myview.board_x_move;\n\n                        myview.board_right-=myview.board_x_move;}\n        }\n\n                         break;\n            case KeyEvent.KEYCODE_DPAD_RIGHT:\n        if(myview.ball_isRun){\n\n                if(screenWidth-myview.board_right<=myview.board_x_move )\n\n        {\n                            myview.board_left=screenWidth-myview.board_length;\n\n                                            myview.board_right=screenWidth;\n\n            }else{\n                            myview.board_left+=myview.board_x_move;\n\n                                                myview.board_right+=myview.board_x_move;\n\n                    }\n                    }\n\n                    break;\n                 case KeyEvent.KEYCODE_DPAD_UP:\n\n                if(myview.ball_isRun){\n\n                if( myview.board_alterable_top==myview.board_default_top)\n        {\n\n                myview.board_alterable_top-=myview.boardYadd;\n\n                        myview.board_alterable_bottom-=myview.boardYadd;\n                        }\n                    }\n\n                    break;  \n                 case KeyEvent.KEYCODE_DPAD_DOWN:\n\n            if(myview.ball_isRun){\n\n            if( myview.board_alterable_top==myview.board_default_top-myview.boardYadd )\n\n            {\n                            myview.board_alterable_top=myview.board_default_top;\n\n            myview.board_alterable_bottom=myview.board_alterable_top+myview.board_thickness;\n                        }\n                    }\n\n            break;  \n\n            case KeyEvent.KEYCODE_BACK:\n\n            dazhuankuaiActivity.this.finish();\n\n            break;  \n\n        }//end switch\n            return false;\n            }\n\n            //按键弹起事件\n\n        }\n        );\n        }\n}\npackage sen.tan;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.graphics.RadialGradient;\nimport android.graphics.Shader;\nimport android.util.Log;\nimport android.view.SurfaceHolder;\nimport android.view.SurfaceView;\n\npublic class BallView extends SurfaceView implements\n        SurfaceHolder.Callback, Runnable {\n\n    //线程延时控制 \n    final int ball_sleep=1;//毫秒，延时越大，球速越慢\n    final int ball_r= 8;//小球半径\n    final float ball2_r= 8;//底下滚珠小球半径\n    final int ballXorYadd = 4;//小球的基本位移。测试可行值：2，4\n\n    //获取屏幕宽度和高度\n    int screen_width;//320;\n    int screen_height;//480;\n\n    //砖的属性\n    int brick_width;//每块砖宽\n    int brick_height;//每块砖高\n    boolean brick_exist[];//砖是否存在\n    int k ;// 列//到for循环里才初始化\n    int j ;// 行\n    int brick_left = brick_width*(k-1);//到判断语句才初始化\n    int brick_right = brick_width*k;\n    int brick_top = brick_height*j;\n    int brick_bottom = brick_height*(j+1);\n\n    //挡板的属性\n    int board_length;//挡板长度:80比较合适，可以随意修改,但别超过screen_width\n    final int boardYadd = 16;//按上下键时挡板y方向位移量。经验证4、8、16可以，12不行\n    final int board_x_move = 30;//挡板x方向位移量:可以随意自定义\n    int board_left;//挡板左侧（可变）\n    int board_right;//挡板右侧（可变）\n    int board_thickness;//挡板厚度\n    int board_default_top;//即435,挡板的top面初始位置\n    int board_alterable_top;//挡板上侧（可变）\n    int board_alterable_bottom;//挡板下侧（可变）\n\n    int ball_default_x;//球的初始x坐标\n    int ball_default_y;//球的初始y坐标\n    //球的即时坐标（可变）：\n    int ball_x;//球心横坐标\n    int ball_y;//球心纵坐标\n    //球的前一步的y坐标\n    int ball_previous_y;\n    int ball_x_speed;//球的横向偏移量//可变\n    int ball_y_speed;//球的纵向偏移量//可变\n    boolean ball_isRun;//球是否在动\n    // 控制循环\n    boolean mbLoop;\n    // 定义SurfaceHolder对象\n    SurfaceHolder mSurfaceHolder = null;\n    //获得分数\n    int score;\n    /* 唤醒渐变渲染 */\n    Shader mRadialGradient = null;\n\n\n//------------------------------------------------------------------------------------------------------//\n    public BallView(Context context) {\n        super(context);\n        // 实例化SurfaceHolder\n        mSurfaceHolder = this.getHolder();\n        // 添加回调\n        mSurfaceHolder.addCallback(this);\n        this.setFocusable(true);\n\n        //获取屏幕宽度和高度\n        screen_width = dazhuankuaiActivity.screenWidth;//320\n        screen_height = dazhuankuaiActivity.screenHeight;//480\n\n        //砖的属性\n        brick_width = screen_width/5;//每块砖宽64\n        brick_height = screen_height/15;//每块砖高32\n\n        //挡板的属性\n        board_length = screen_width/4;//挡板长度:80比较合适，可以随意修改,但别超过screen_width\n        board_left = (screen_width-board_length)/2;//挡板左侧（可变）\n        board_right = (screen_width+board_length)/2;//挡板右侧（可变）\n        board_thickness = 5;//挡板厚度\n        board_default_top = 13*screen_height/15;//即435,挡板的top面初始位置\n        board_alterable_top = board_default_top;//挡板上侧（可变）\n        board_alterable_bottom = board_alterable_top+board_thickness;//挡板下侧（可变）\n\n        ball_default_x = screen_width/2;//球的初始x坐标\n        ball_default_y = board_default_top - ball_r;//球的初始y坐标\n        //球的即时坐标（可变）：\n        ball_x = ball_default_x;\n        ball_y = ball_default_y;\n        //球的前一步的y坐标\n        ball_previous_y = 0;\n        ball_x_speed = ballXorYadd;//球的横向偏移量\n        ball_y_speed = ballXorYadd;//球的纵向偏移量\n\n        mbLoop = true;\n        ball_isRun = false;\n        score=0;\n\n        brick_exist = new boolean[25];\n        for (int i = 0; i < 25; i++) {\n            brick_exist[i] = true;\n        }\n        /* 构建RadialGradient对象，设置半径的属性 */\n        mRadialGradient = new RadialGradient(ball_x, ball_y, ball_r,//球中心坐标x,y,半径r\n                new int[]{Color.WHITE,Color.BLUE,Color.GREEN,Color.RED,Color.YELLOW},//颜色数组\n                null,//颜色数组中每一种颜色对应的相对位置，为空的话就是平均分布，由中心向外排布\n                Shader.TileMode.REPEAT);//渲染模式：重复\n    }\n\n    public void resetGame(){\n        ball_isRun = false;\n        score =0;//分数\n        ball_x_speed = ballXorYadd;//球的横向偏移量\n        ball_y_speed = ballXorYadd;//球的纵向偏移量\n        ball_x = screen_width/2;//球心起始横坐标\n        ball_y = board_default_top - ball_r;//球心起始纵坐标\n        board_left = (screen_width-board_length)/2;//挡板左侧\n        board_right = (screen_width+board_length)/2;//挡板右侧\n        board_alterable_top = board_default_top;//挡板上侧\n        board_alterable_bottom = board_alterable_top+board_thickness;//挡板下侧\n        for (int i = 0; i < 25; i++) {\n            brick_exist[i] = true;\n        }\n    }\n\n    //---------------------------------绘图循环开始----------------------------------\n    public void run() {\n\n        while (mbLoop&&!Thread.currentThread().isInterrupted()) {\n            try {\n                Thread.sleep(ball_sleep);\n            }\n            catch (InterruptedException e) {\n                Thread.currentThread().interrupt();\n            }\n            //球的前一步y坐标\n            ball_previous_y = ball_y;\n\n            if (ball_isRun) {\n                ballRunning();// 让小球移动\n                boardPositionCheck();//检测挡板是否处于“中线”位置，是就随小球上升一步，直至到“上线”\n                hitWallCheck();//墙壁碰撞检测\n                hitBoardCheck();//挡板碰撞检测\n                hitBrickCheck();//砖块碰撞检测\n            }\n            synchronized (mSurfaceHolder) \n            {\n                Draw();\n            }\n        }\n    }\n    //---------------------------------绘图循环结束----------------------------------\n    //------------------------------------------------------------------------------\n\n    //让小球移动\n    public void ballRunning() {\n        ball_x += ball_x_speed;\n        ball_y -= ball_y_speed;\n    }\n    //朝左或朝右碰撞后小球水平方向逆向\n    public void ballLeftOrRightHit() {\n        ball_x_speed *= -1;\n    }\n    //朝上或朝下碰撞后小球竖直方向逆向\n    public void ballUpOrDownHit() {\n        ball_y_speed *= -1;\n    }\n\n    public void ballcornerHit() {\n        ball_x_speed *= -1;\n        ball_y_speed *= -1;\n    }\n\n    public void ballStraightUp() {//功能没实现，这是多余代码\n        ball_x_speed = 0;//注意在其他地方恢复\n        ball_y_speed *= -1;\n    }\n\n    //-------------------墙壁碰撞检测开始-------------------------------------\n    public void hitWallCheck() {\n        // 左碰墙\n        if (ball_x <= ball_r && \n            ball_y >= ball_r && ball_y <= screen_height) \n        {\n            ballLeftOrRightHit();\n        // 右碰墙\n        }\n        if (ball_x >= screen_width - ball_r && //不能写为 else if,因为可能恰好碰到角落。\n                   ball_y >= ball_r && ball_y <= screen_height) \n        {\n            ballLeftOrRightHit();\n        }\n        // 上碰墙\n        if (ball_x >= ball_r && ball_x <= screen_width - ball_r && \n                 ball_y <= ball_r + brick_height) //、、、、、、、、、、、、、、、25号修改\n        {\n            ballUpOrDownHit();\n        }\n        // 下碰墙\n        if (ball_x >= ball_r && ball_x <= screen_width - ball_r && \n                 ball_y >= screen_height-ball_r) \n        {\n            ballUpOrDownHit();\n            if(score<=10){\n                score = 0;\n            }\n            else score-=10;\n        }\n    }\n    //-------------------墙壁碰撞检测结束-------------------------------------\n\n    //-----------------------------挡板碰撞检测开始---------------------------\n    public void hitBoardCheck() {\n        // 下碰挡板正面\n        if (ball_x >= ball_r && ball_x <= screen_width - ball_r && //在屏幕内，起码条件\n            ball_x >= board_left && ball_x <= board_right && //在挡板X域上方\n            ball_y == board_alterable_top - ball_r &&//球面与挡板相切\n            ball_previous_y <= board_alterable_top - ball_r  //确定球是从上方下落\n            )\n        {\n            if(board_alterable_top==board_default_top-boardYadd ){//如果弹簧伸张，挡板位于上线\n                ballHitBoardlower();//作用：ball_y_move减小；挡板被打下;小球Y向运动反向\n            }\n            else if(board_alterable_top==board_default_top){//如果弹簧压缩，挡板位于下线\n                boardHitBallHigher();//作用：ball_y_move增加；挡板弹上;小球Y向运动反向\n            }\n        }\n        //斜碰挡板右上角//经验证有效\n        else if(Math.pow(board_right-ball_x, 2)+Math.pow(board_alterable_top-ball_y,2)<=Math.pow(ball_r, 2)&&\n                ball_x>board_right && ball_y<board_alterable_top)\n        {\n            ballcornerHit();\n        }\n        //斜碰挡板的左上角//经验证有效\n        else if(Math.pow(board_left-ball_x, 2)+Math.pow(board_alterable_top-ball_y,2)<=Math.pow(ball_r, 2)&&\n                ball_x<board_left && ball_y<board_alterable_top)\n        {\n            ballcornerHit();\n        }\n    }\n    //-----------------------------挡板碰撞检测结束--------------------------\n\n    private void boardHitBallHigher() {//增强\n        ballUpOrDownHit();//小球Y方向反向,ball_y_speed变为正数\n        if(ball_y_speed == ballXorYadd ){\n            ball_y_speed += ballXorYadd;//离开挡板后小球Y方向速度增强\n        }\n        if( boardYadd > ball_y_speed ){//在线程这一轮，小球上升多少，挡板就上升多少。\n            board_alterable_top = board_default_top - ball_y_speed;\n            board_alterable_bottom= board_alterable_top+board_thickness;//挡板下层面\n        }\n    }\n\n    //检测挡板是否处于“中线”位置，是就随小球上升一步，直至到“上线”\n    private void boardPositionCheck() {//还可直接利用球的位置刷新，board_top与球心相差ball_r\n        if(board_alterable_top < board_default_top && board_alterable_top > board_default_top-boardYadd){\n            //挡板随球上升\n            if(board_alterable_top - ball_y_speed >= board_default_top-boardYadd){\n                board_alterable_top -= ball_y_speed;//挡板上层面\n                board_alterable_bottom= board_alterable_top+board_thickness;//挡板下层面\n            }\n            else{\n                board_alterable_top = board_default_top-boardYadd;//挡板上层面\n                board_alterable_bottom= board_alterable_top+board_thickness;//挡板下层面\n            }\n        }\n    }\n\n    private void ballHitBoardlower() {//减弱\n        board_alterable_top=board_default_top;\n        board_alterable_bottom=board_default_top+board_thickness;//挡板被打退\n        ballUpOrDownHit();//小球Y方向反向\n        if(ball_y_speed==2*ballXorYadd){\n            ball_y_speed -= ballXorYadd;//小球Y方向速度减弱\n        }\n    }\n\n    //砖块碰撞检测开始-----------------------------------------------------------\n    public void hitBrickCheck() {\n        for (int i = 0; i <25 ; i++) {\n        if (brick_exist[i]) {\n            k = i % 5+1;// 1,2,3,4,5循环\n            j = i / 5+1;// 1,1,1,1,1;2,2,2,2,2,;...;5,5,5,5,5\n            brick_left = brick_width*(k-1);\n            brick_right = brick_width*k;\n            brick_top = brick_height*j;\n            brick_bottom = brick_height*(j+1);\n            //朝下碰砖的top面 AAAAAAAAAAAAAAAAAAAAA\n            if(ball_x >= brick_left && ball_x <= brick_right &&\n               ball_y >= brick_top-ball_r && ball_y < brick_top) \n            {\n                ballUpOrDownHit();\n                brick_exist[i] = false;\n                score+=4;\n                //朝下正碰2砖中间，i砖右上角检测\n                if(k!=5 && ball_x == brick_right)//如果不是第5列砖的右侧边\n                {\n                    //如果砖[i+1]存在\n                    if(brick_exist[i+1]){\n                        brick_exist[i+1] = false;\n                        score+=4;\n                    }\n                }\n                //朝下正碰2砖中间，i砖左上角检测\n                else if(k!=1 && ball_x == brick_left)//如果不是第1列砖的左侧边\n                {\n                    //如果砖[i-1]存在\n                    if(brick_exist[i-1]){\n                        brick_exist[i-1] = false;\n                        score+=4;\n                    }\n                }\n            }\n            //朝上碰砖的bottom面 BBBBBBBBBBBBBBBBB\n            else if(ball_x >= brick_left && ball_x <= brick_right &&\n                    ball_y > brick_bottom&& ball_y <= brick_bottom + ball_r )\n            {\n                ballUpOrDownHit();\n                brick_exist[i] = false;\n                score+=4;\n                //朝上正碰2块砖中间--i砖的右下角检测\n                if(k!=5 && ball_x == brick_right) //如果不是第5列砖的右侧边\n                {\n                    if(brick_exist[i+1]){//如果砖[i+1]存在\n                        brick_exist[i+1] = false;\n                        score+=4;\n                    }\n                }\n                //朝上正碰2块砖中间--i砖的左下角检测\n                else if(k!=1 && ball_x == brick_left) //如果不是第1列砖的左侧边\n                {\n                    if(brick_exist[i-1]){//如果砖[i-1]存在\n                        brick_exist[i-1] = false;\n                        score+=4;\n                    }\n                }\n            }\n            //朝右碰砖的left面CCCCCCCCCCCCCCCCC\n            else if(ball_x >= brick_left -ball_r&&ball_x < brick_left&&\n               ball_y >= brick_top && ball_y <= brick_bottom)\n            {\n                ballLeftOrRightHit();\n                brick_exist[i] = false;\n                score+=4;\n                //朝右正碰2块砖中间，左下角检测\n                if(j!=5 && ball_y == brick_bottom)//如果不是第5行砖的下侧边\n                {\n                    if(brick_exist[i+5]){//如果砖[i+5]存在\n                        brick_exist[i+5] = false;\n                        score+=4;\n                    }\n                }\n                //朝右正碰2块砖中间，左上角检测\n                else if(j!=1 && ball_y == brick_top)//如果不是第1行砖的上侧边\n                {\n                    if(brick_exist[i-5]){//如果砖[i-5]存在\n                        brick_exist[i-5] = false;\n                        score+=4;\n                    }\n                }\n            }\n            //朝左碰砖的right面DDDDDDDDDDDDDDDDDD\n            else if(ball_x >= brick_right && ball_x <= brick_right+ball_r&&\n               ball_y >= brick_top && ball_y <= brick_bottom)\n            {\n                ballLeftOrRightHit();\n                brick_exist[i] = false;\n                score+=4;\n                //朝左正碰2块砖中间，右下角检测\n                if(j!=5 && ball_y == brick_bottom )//如果不是第5行砖的下侧边\n                {\n                    if(brick_exist[i+5]){//如果砖[i+5]存在\n                        brick_exist[i+5] = false;\n                        score+=4;\n                    }\n                } \n                //朝左正碰2块砖中间，右上角检测\n                else if(j!=1 && ball_y == brick_top )//如果不是第1行砖上侧边\n                {\n                    if(brick_exist[i-5]){//如果砖[i-5]存在\n                        brick_exist[i-5] = false;\n                        score+=4;\n                    }\n                }\n            }\n            /////////////////////////////////////////\n            //斜碰i砖的左下角EEEEEEEEEEEEEEEEEEEEEEEE\n            else if(( i-1<0||(i-1>=0&&!brick_exist[i-1]) ) &&\n                    (i+5>=25||(i+5<25&&!brick_exist[i+5]) )&&\n                    Math.pow(brick_left-ball_x, 2)+Math.pow(brick_bottom-ball_y,2)<=Math.pow(ball_r, 2)&&\n                    ball_x>brick_left-ball_r && ball_x<brick_left && \n                    ball_y>brick_bottom && ball_y<brick_bottom+ball_r )\n            {\n                ballcornerHit();\n                brick_exist[i] = false;\n                score+=4;\n            }\n            //斜碰i砖的右下角FFFFFFFFFFFFFFFFFFFFFFFFFF\n            else if( (i+1>=25||(i+1<25&&!brick_exist[i+1]) )&&\n                     (i+5>=25||(i+5<25&&!brick_exist[i+5]) )&&\n                    Math.pow(brick_right-ball_x, 2)+Math.pow(brick_bottom-ball_y,2)<=Math.pow(ball_r, 2)&&\n                    ball_x>brick_right&&ball_x<brick_right+ball_r&&\n                    ball_y>brick_bottom&&ball_y<brick_bottom+ball_r )\n            {\n                Log.v(\"----------\", \"right bottom hit\"+i+\":\"+brick_exist[i]);\n                ballcornerHit(); \n                brick_exist[i] = false;\n                score+=4;\n            }\n            //斜碰i砖的右上角GGGGGGGGGGGGGGGGGGGGGGGG\n            else if( (i+1>=25||(i+1<25&&!brick_exist[i+1]) )&&\n                    (i-5<0||(i-5>0&&!brick_exist[i-5]) )&&\n                    Math.pow(brick_right-ball_x, 2)+Math.pow(brick_top-ball_y,2)<=Math.pow(ball_r, 2)&&\n                    ball_x>brick_right && ball_x<brick_right+ball_r&&\n                    ball_y>brick_top-ball_r && ball_y<brick_top)          \n            {\n                ballcornerHit();\n                brick_exist[i] = false;\n                score+=4;\n            }\n            //斜碰i砖的左上角HHHHHHHHHHHHHHHHHHHHHHHHHH\n            else if((i-1<0||(i-1>=0&&!brick_exist[i-1])) &&\n                    (i-5<0||(i-5>=0&&!brick_exist[i-5])) &&\n                    Math.pow(brick_left-ball_x, 2)+Math.pow(brick_top-ball_y,2)<=Math.pow(ball_r, 2)&&\n                    ball_x>brick_left-ball_x && ball_x<brick_left &&\n                    ball_y>brick_top-ball_r && ball_y<brick_top )\n            {\n                ballcornerHit();\n                brick_exist[i] = false;\n                score+=4;\n            }\n        }//end if\n        }//end for  \n    }//end hitBrickCheck()\n    //砖块碰撞检测结束-----------------------------------------------------------\n\n    //------------------------------------------\n    public boolean gameOver(){\n        int count = 0;\n        for(boolean s:brick_exist){\n            if(!s){\n                count++;\n            }\n        }\n        if(count == 25){\n            return true;\n        }else{\n            return false;\n        }\n\n    }\n    //------------------------------------------\n\n    //---------------绘图方法开始------------------------\n    public void Draw() {\n        // 锁定画布，得到canvas\n        Canvas canvas = mSurfaceHolder.lockCanvas();\n        if (mSurfaceHolder == null || canvas == null) {\n            return;\n        }\n        // 绘图\n        Paint mPaint = new Paint();\n        // 设置取消锯齿效果\n        mPaint.setAntiAlias(true);\n\n        mPaint.setColor(Color.BLACK);\n        // 绘制矩形--背景\n        canvas.drawRect(0, 0, screen_width, brick_height-2, mPaint);\n\n        mPaint.setColor(Color.GREEN);\n        // 绘制矩形--背景\n        canvas.drawRect(0, brick_height-2, screen_width, screen_height, mPaint);\n\n        mPaint.setColor(Color.RED);//设置字体颜色\n        mPaint.setTextSize(brick_height-7);//设置字体大小\n        canvas.drawText(\"得分：\"+score, 0, brick_height-7, mPaint);\n\n        // 绘制顶层挡板````````````````````````````````````````````````````````25号修改\n        mPaint.setColor(Color.BLACK);//设置颜色 \n        mPaint.setStrokeWidth(4);//设置粗细\n        canvas.drawLine(0, brick_height-2, screen_width, brick_height-2, mPaint);\n\n        for (int i = 0; i <25 ; i++) {\n            if (brick_exist[i]) {\n                k = i % 5+1;// 1,2,3,4,5循环\n                j = i / 5+1;// 1,1,1,1,1;2,2,2,2,2,;...;5,5,5,5,5\n                brick_left = brick_width*(k-1);\n                brick_right = brick_width*k;\n                brick_top = brick_height*j;\n                brick_bottom = brick_height*(j+1);\n\n                mPaint.setStyle(Paint.Style.FILL);// 设置实心画笔\n                mPaint.setColor(Color.YELLOW);\n                canvas.drawRect(brick_left+1, brick_top+1, brick_right-1,brick_bottom-1, mPaint);\n\n                mPaint.setStyle(Paint.Style.STROKE);// 设置空心画笔\n                mPaint.setStrokeWidth(2);//设置粗细\n                mPaint.setColor(Color.BLUE);\n                canvas.drawRect(brick_left+3, brick_top+3, brick_right-3,brick_bottom-3, mPaint);\n            }\n        }\n        // 设置实心画笔\n        mPaint.setStyle(Paint.Style.FILL);\n        {\n            mPaint.setShader(mRadialGradient);\n            canvas.drawCircle(ball_x, ball_y, ball_r, mPaint);\n        }   \n\n        Paint mPaint2 = new Paint();\n            // 设置取消锯齿效果\n        mPaint2.setAntiAlias(true); \n        // 设置实心画笔\n        mPaint2.setStyle(Paint.Style.FILL);\n        {   \n        mPaint2.setColor(Color.BLACK);\n        /* 绘制矩形挡板 */\n        canvas.drawRect(board_left, board_alterable_top, board_right, board_alterable_bottom,mPaint2);\n        float board2_bottom = screen_height - 2*ball2_r;//164\n        float board2_top = board2_bottom - 4;//160\n        //线段端点坐标数组\n        float x0 = board_left+(board_right-board_left)/4;\n        float y0 = board_alterable_bottom;//440或者444\n        float springAdd = (board2_top- board_alterable_bottom)/8;//即2.5或者2：弹簧小线段的y向长度\n        float springWidth = 5.0f;//弹簧小线段的x向长度\n        float x1 = x0 - springWidth;\n        float y1 = y0 + springAdd;\n        float x2 = x0 + springWidth;\n        float y2 = y0 + 3*springAdd;\n        float x3 = x1 ;\n        float y3 = y0 + 5*springAdd;\n        float x4 = x2;\n        float y4 = y0 + 7*springAdd;\n        float x5 = x0 ;\n        float y5 = board2_top;//即460 \n        float between_spring = (board_right-board_left)/2;\n        float pts[] = { x0,y0,x1,y1,\n                        x1,y1,x2,y2,\n                        x2,y2,x3,y3,\n                        x3,y3,x4,y4,\n                        x4,y4,x5,y5};\n        float pts2[] = {x0+between_spring,y0, x1+between_spring,y1,\n                        x1+between_spring,y1, x2+between_spring,y2,\n                        x2+between_spring,y2, x3+between_spring,y3,\n                        x3+between_spring,y3, x4+between_spring,y4,\n                        x4+between_spring,y4, x5+between_spring,y5};\n        mPaint2.setStrokeWidth(2);//设置弹簧粗细\n        //绘制2个弹簧\n        canvas.drawLines(pts, mPaint2);\n        canvas.drawLines(pts2, mPaint2);\n        //绘制下层挡板\n        canvas.drawRect(board_left, board2_top, board_right, board2_bottom,mPaint2);\n        mPaint2.setColor(Color.BLACK);//\n        // 绘制最下面的两个“轮子”(圆心x,圆心y,半径r,p) \n        canvas.drawCircle(board_left+ball2_r, screen_height-ball2_r, ball2_r, mPaint2);//圆\n        canvas.drawCircle(board_right-ball2_r, screen_height-ball2_r, ball2_r, mPaint2);\n        mPaint2.setColor(Color.WHITE);//\n        canvas.drawPoint(board_left+ball2_r, screen_height-ball2_r, mPaint2);//绘制左轮轮心\n        canvas.drawPoint(board_right-ball2_r, screen_height-ball2_r, mPaint2);//绘制右轮轮心\n\n        }//实心画笔mPaint2结束\n\n        if(gameOver()){ \n//          mbLoop = false;//注释掉的话GAME OVER后也可重启\n            ball_isRun = false;\n            mPaint2.setColor(Color.BLACK);//设置字体颜色\n            mPaint2.setTextSize(40.0f);//设置字体大小\n            canvas.drawText(\"GAME OVER\", screen_width/32+40, screen_height/16*9-70, mPaint2);\n            mPaint2.setTextSize(20.0f);//设置字体大小\n            canvas.drawText(\"Press \\\"MENU\\\" button to restart,\", \n                            screen_width/32, //320/32=10\n                            screen_height/16*9, //480/16=30,30*9=270\n                            mPaint2);\n            canvas.drawText(\"Press \\\"BACK\\\" button to exit.\", \n                    screen_width/32, //320/32=10\n                    screen_height/16*10, //480/16=30,30*10=300\n                    mPaint2);\n        }\n        // 绘制后解锁，绘制后必须解锁才能显示\n        mSurfaceHolder.unlockCanvasAndPost(canvas);\n    }// end of Draw()\n    //---------------------绘图方法结束-----------------------------------------------\n\n    // 在surface的大小发生改变时激发\n    public void surfaceChanged(SurfaceHolder holder, int format, int width,\n            int height) {\n    }\n\n    // 在surface创建时激发\n    public void surfaceCreated(SurfaceHolder holder) {\n        new Thread(this).start();// 开启绘图线程\n    }\n\n    // 在surface销毁时激发\n    public void surfaceDestroyed(SurfaceHolder holder) {\n        // 停止循环\n        mbLoop = false;\n    }\n}\n\n\n\n下个界面的代码是  \npackage ab.cc;\n\nimport android.app.Activity;\n\nimport android.os.Bundle;\n\nimport android.util.DisplayMetrics;\n\nimport android.view.KeyEvent;\n\nimport android.view.MotionEvent;\n\nimport android.view.Window;\nimport android.view.WindowManager;\n\n\npublic class BaomingActivity extends Activity\n{\n\nBallView myView;\n\nstatic int  screenWidth;\n\nstatic int screenHeight;\n\n/** Called when the activity is first created. */\n    @Override\n\n    public void onCreate(Bundle savedInstanceState)\n    {\n\n    super.onCreate(savedInstanceState);\n\n    /* 定义DisplayMetrics对象 */\n\nDisplayMetrics dm = new DisplayMetrics();\n\n    /* 取得窗口属性 */\n\ngetWindowManager().getDefaultDisplay().getMetrics(dm);\n\n    /* 窗口的宽度 */\n\nscreenWidth = dm.widthPixels;\n\n        /* 窗口的高度 */\n\nscreenHeight = dm.heightPixels;\n//      \nsetTitle(\"宽\"+screenWidth+\"  高\"+screenHeight);\n\n\n        /* 设置为无标题栏 */\n\nrequestWindowFeature(Window.FEATURE_NO_TITLE); \n\n    /* 设置为全屏模式 */ \n\ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN); \n\n\n\nmyView = new BallView(this);\n\n       //设置显示GameSurfaceView视图\n\nsetContentView(myView);\n    }//end of onCreate()\n\n\n       //触笔事件\n\npublic boolean onTouchEvent(MotionEvent event)\n    {\n\n    return true;\n    }\n\n\n       //按键按下事件\n\n public boolean onKeyDown(int keyCode, KeyEvent event)\n    {\n\n    switch (keyCode)\n        {\n\n    //菜单按键-设为初始菜单\n\ncase KeyEvent.KEYCODE_MENU:\n\n    myView.resetGame();\n        //重新开始\n\n    break;\n\n    //中间按键\n\n    case KeyEvent.KEYCODE_DPAD_CENTER:\n\n    myView.ball_isRun = !myView.ball_isRun;//开始//暂停\n\n        break;\n\n\n//左方向键  \n\ncase KeyEvent.KEYCODE_DPAD_LEFT:\n\n            if(myView.ball_isRun){\n\n        if(myView.board_left<=myView.board_x_move)\n\n            {\n\n    myView.board_left=0;\n\n        myView.board_right=myView.board_length;\n\n        }else{\n\n        myView.board_left-=myView.board_x_move;\n\n                myView.board_right-=myView.board_x_move;}\n}\n\n                 break;\n\n\n//右方向键\n\ncase KeyEvent.KEYCODE_DPAD_RIGHT:\nif(myView.ball_isRun){\n\n        if(screenWidth-myView.board_right<=myView.board_x_move )\n\n{\n                    myView.board_left=screenWidth-myView.board_length;\n\n                                    myView.board_right=screenWidth;\n\n    }else{\n                    myView.board_left+=myView.board_x_move;\n\n                                        myView.board_right+=myView.board_x_move;\n\n            }\n            }\n\n            break;\n\n            //上方向键\n\n    case KeyEvent.KEYCODE_DPAD_UP:\n\n        if(myView.ball_isRun){\n\n        if( myView.board_alterable_top==myView.board_default_top)\n{\n\n        myView.board_alterable_top-=myView.boardYadd;\n\n                myView.board_alterable_bottom-=myView.boardYadd;\n                }\n            }\n\n            break;  \n        //下方向键\n\n       case KeyEvent.KEYCODE_DPAD_DOWN:\n\n    if(myView.ball_isRun){\n\n    if( myView.board_alterable_top==myView.board_default_top-myView.boardYadd )\n\n    {\n                    myView.board_alterable_top=myView.board_default_top;\n\n    myView.board_alterable_bottom=myView.board_alterable_top+myView.board_thickness;\n                }\n            }\n\n    break;  \n\n//返回键\n        case KeyEvent.KEYCODE_BACK:\n\n    this.finish();\n\n    break;  \n\n}//end switch\n    return false;\n    }\n\n    //按键弹起事件\n\npublic boolean onKeyUp(int keyCode, KeyEvent event)\n    {\n\n        return true;\n    }\n\n\npublic boolean onKeyMultiple(int keyCode, int repeatCount, KeyEvent event)\n    {\n\n    return true;\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "给你分享一下我用过的函数，输入一个rgb或gbr的图片矩阵及其宽高，输出一个转换后的灰度图：\r\n\r\n\r\n```\r\n // BAYER GRBG\r\n// Y = 0.299R + 0.587G + 0.114B\r\ndouble g_RGB2YUV_RTable[] = \r\n{ \r\n0.000,0.299,0.598,0.897,1.196,1.495,1.794,2.093,2.392,2.691,2.990,3.289,3.588,3.887,4.186,4.485,4.784,5.083,5.382,5.681,5.980,6.279,6.578,6.877,7.176,7.475,\r\n7.774,8.073,8.372,8.671,8.970,9.269,9.568,9.867,10.166,10.465,10.764,11.063,11.362,11.661,11.960,12.259,12.558,12.857,13.156,13.455,13.754,14.053,14.352,14.651,14.950,\r\n15.249,15.548,15.847,16.146,16.445,16.744,17.043,17.342,17.641,17.940,18.239,18.538,18.837,19.136,19.435,19.734,20.033,20.332,20.631,20.930,21.229,21.528,21.827,22.126,22.425,\r\n22.724,23.023,23.322,23.621,23.920,24.219,24.518,24.817,25.116,25.415,25.714,26.013,26.312,26.611,26.910,27.209,27.508,27.807,28.106,28.405,28.704,29.003,29.302,29.601,29.900,\r\n30.199,30.498,30.797,31.096,31.395,31.694,31.993,32.292,32.591,32.890,33.189,33.488,33.787,34.086,34.385,34.684,34.983,35.282,35.581,35.880,36.179,36.478,36.777,37.076,37.375,\r\n37.674,37.973,38.272,38.571,38.870,39.169,39.468,39.767,40.066,40.365,40.664,40.963,41.262,41.561,41.860,42.159,42.458,42.757,43.056,43.355,43.654,43.953,44.252,44.551,44.850,\r\n45.149,45.448,45.747,46.046,46.345,46.644,46.943,47.242,47.541,47.840,48.139,48.438,48.737,49.036,49.335,49.634,49.933,50.232,50.531,50.830,51.129,51.428,51.727,52.026,52.325,\r\n52.624,52.923,53.222,53.521,53.820,54.119,54.418,54.717,55.016,55.315,55.614,55.913,56.212,56.511,56.810,57.109,57.408,57.707,58.006,58.305,58.604,58.903,59.202,59.501,59.800,\r\n60.099,60.398,60.697,60.996,61.295,61.594,61.893,62.192,62.491,62.790,63.089,63.388,63.687,63.986,64.285,64.584,64.883,65.182,65.481,65.780,66.079,66.378,66.677,66.976,67.275,\r\n67.574,67.873,68.172,68.471,68.770,69.069,69.368,69.667,69.966,70.265,70.564,70.863,71.162,71.461,71.760,72.059,72.358,72.657,72.956,73.255,73.554,73.853,74.152,74.451,74.750,\r\n75.049,75.348,75.647,75.946,76.245\r\n};\r\n\r\ndouble g_RGB2YUV_GTable[] = \r\n{\r\n0.000,0.587,1.174,1.761,2.348,2.935,3.522,4.109,4.696,5.283,5.870,6.457,7.044,7.631,8.218,8.805,9.392,9.979,10.566,11.153,11.740,12.327,12.914,13.501,14.088,14.675,\r\n15.262,15.849,16.436,17.023,17.610,18.197,18.784,19.371,19.958,20.545,21.132,21.719,22.306,22.893,23.480,24.067,24.654,25.241,25.828,26.415,27.002,27.589,28.176,28.763,29.350,\r\n29.937,30.524,31.111,31.698,32.285,32.872,33.459,34.046,34.633,35.220,35.807,36.394,36.981,37.568,38.155,38.742,39.329,39.916,40.503,41.090,41.677,42.264,42.851,43.438,44.025,\r\n44.612,45.199,45.786,46.373,46.960,47.547,48.134,48.721,49.308,49.895,50.482,51.069,51.656,52.243,52.830,53.417,54.004,54.591,55.178,55.765,56.352,56.939,57.526,58.113,58.700,\r\n59.287,59.874,60.461,61.048,61.635,62.222,62.809,63.396,63.983,64.570,65.157,65.744,66.331,66.918,67.505,68.092,68.679,69.266,69.853,70.440,71.027,71.614,72.201,72.788,73.375,\r\n73.962,74.549,75.136,75.723,76.310,76.897,77.484,78.071,78.658,79.245,79.832,80.419,81.006,81.593,82.180,82.767,83.354,83.941,84.528,85.115,85.702,86.289,86.876,87.463,88.050,\r\n88.637,89.224,89.811,90.398,90.985,91.572,92.159,92.746,93.333,93.920,94.507,95.094,95.681,96.268,96.855,97.442,98.029,98.616,99.203,99.790,100.377,100.964,101.551,102.138,102.725,\r\n103.312,103.899,104.486,105.073,105.660,106.247,106.834,107.421,108.008,108.595,109.182,109.769,110.356,110.943,111.530,112.117,112.704,113.291,113.878,114.465,115.052,115.639,116.226,116.813,117.400,\r\n117.987,118.574,119.161,119.748,120.335,120.922,121.509,122.096,122.683,123.270,123.857,124.444,125.031,125.618,126.205,126.792,127.379,127.966,128.553,129.140,129.727,130.314,130.901,131.488,132.075,\r\n132.662,133.249,133.836,134.423,135.010,135.597,136.184,136.771,137.358,137.945,138.532,139.119,139.706,140.293,140.880,141.467,142.054,142.641,143.228,143.815,144.402,144.989,145.576,146.163,146.750,\r\n147.337,147.924,148.511,149.098,149.685\r\n};\r\n\r\ndouble g_RGB2YUV_BTable[] = \r\n{\r\n0.000,0.114,0.228,0.342,0.456,0.570,0.684,0.798,0.912,1.026,1.140,1.254,1.368,1.482,1.596,1.710,1.824,1.938,2.052,2.166,2.280,2.394,2.508,2.622,2.736,2.850,\r\n2.964,3.078,3.192,3.306,3.420,3.534,3.648,3.762,3.876,3.990,4.104,4.218,4.332,4.446,4.560,4.674,4.788,4.902,5.016,5.130,5.244,5.358,5.472,5.586,5.700,\r\n5.814,5.928,6.042,6.156,6.270,6.384,6.498,6.612,6.726,6.840,6.954,7.068,7.182,7.296,7.410,7.524,7.638,7.752,7.866,7.980,8.094,8.208,8.322,8.436,8.550,\r\n8.664,8.778,8.892,9.006,9.120,9.234,9.348,9.462,9.576,9.690,9.804,9.918,10.032,10.146,10.260,10.374,10.488,10.602,10.716,10.830,10.944,11.058,11.172,11.286,11.400,\r\n11.514,11.628,11.742,11.856,11.970,12.084,12.198,12.312,12.426,12.540,12.654,12.768,12.882,12.996,13.110,13.224,13.338,13.452,13.566,13.680,13.794,13.908,14.022,14.136,14.250,\r\n14.364,14.478,14.592,14.706,14.820,14.934,15.048,15.162,15.276,15.390,15.504,15.618,15.732,15.846,15.960,16.074,16.188,16.302,16.416,16.530,16.644,16.758,16.872,16.986,17.100,\r\n17.214,17.328,17.442,17.556,17.670,17.784,17.898,18.012,18.126,18.240,18.354,18.468,18.582,18.696,18.810,18.924,19.038,19.152,19.266,19.380,19.494,19.608,19.722,19.836,19.950,\r\n20.064,20.178,20.292,20.406,20.520,20.634,20.748,20.862,20.976,21.090,21.204,21.318,21.432,21.546,21.660,21.774,21.888,22.002,22.116,22.230,22.344,22.458,22.572,22.686,22.800,\r\n22.914,23.028,23.142,23.256,23.370,23.484,23.598,23.712,23.826,23.940,24.054,24.168,24.282,24.396,24.510,24.624,24.738,24.852,24.966,25.080,25.194,25.308,25.422,25.536,25.650,\r\n25.764,25.878,25.992,26.106,26.220,26.334,26.448,26.562,26.676,26.790,26.904,27.018,27.132,27.246,27.360,27.474,27.588,27.702,27.816,27.930,28.044,28.158,28.272,28.386,28.500,\r\n28.614,28.728,28.842,28.956,29.070\r\n};\r\n\r\n// RGB\r\nint RgbToY(unsigned char *pRgb, int nWidth, int nHeight, unsigned char *pY)\r\n{\r\n\tunsigned char *pRgbTmp = pRgb;\r\n\tint nWidthBytes = nWidth * 3;\r\n\tfor (int i = 0; i &lt; nHeight; i++)\r\n\t{\r\n\t\tpRgbTmp = pRgb + i * nWidthBytes;\r\n\t\tfor (int j = 0; j &lt; nWidth; j++)\r\n\t\t{\r\n\t\t\t*pY = (int)(g_RGB2YUV_RTable[*pRgbTmp] + g_RGB2YUV_GTable[*(pRgbTmp + 1)] + g_RGB2YUV_BTable[*(pRgbTmp + 2)]);\r\n\r\n\t\t\tpRgbTmp += 3;\r\n\t\t\tpY++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\nint RgbToY_Flip(unsigned char *pRgb, int nWidth, int nHeight, unsigned char *pY)\r\n{\r\n\tunsigned char *pRgbTmp = pRgb;\r\n\tint nWidthBytes = nWidth * 3;\r\n\tfor (int i = 0; i &lt; nHeight; i++)\r\n\t{\r\n\t\tpRgbTmp = pRgb + (nHeight - i - 1)* nWidthBytes;\r\n\t\tfor (int j = 0; j &lt; nWidth; j++)\r\n\t\t{\r\n\t\t\t*pY = (int)(g_RGB2YUV_RTable[*pRgbTmp] + g_RGB2YUV_GTable[*(pRgbTmp + 1)] + g_RGB2YUV_BTable[*(pRgbTmp + 2)]);\r\n\r\n\t\t\tpRgbTmp += 3;\r\n\t\t\tpY++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n// BGR\r\nint BgrToY( unsigned char *pRgb, int nWidth, int nHeight, unsigned char *pY )\r\n{ \r\n\tunsigned char *pRgbTmp = pRgb;\r\n\tint nWidthBytes = nWidth * 3;\r\n\tfor (int i = 0; i &lt; nHeight; i++)\r\n\t{\r\n\t\tpRgbTmp = pRgb + i * nWidthBytes;\r\n\t\tfor (int j = 0; j &lt; nWidth; j++)\r\n\t\t{\r\n\t\t\t*pY = (int)(g_RGB2YUV_RTable[*(pRgbTmp + 2)] + g_RGB2YUV_GTable[*(pRgbTmp + 1)] + g_RGB2YUV_BTable[*pRgbTmp]);\r\n\r\n\t\t\tpRgbTmp += 3;\r\n\t\t\tpY++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\nint BgrToY_Flip(unsigned char *pRgb, int nWidth, int nHeight, unsigned char *pY)\r\n{\r\n\tunsigned char *pRgbTmp = pRgb;\r\n\tint nWidthBytes = nWidth * 3;\r\n\tfor (int i = 0; i &lt; nHeight; i++)\r\n\t{\r\n\t\tpRgbTmp = pRgb + (nHeight - i - 1)* nWidthBytes;\r\n\t\tfor (int j = 0; j &lt; nWidth; j++)\r\n\t\t{\r\n\t\t\t*pY = (int)(g_RGB2YUV_RTable[*(pRgbTmp + 2)] + g_RGB2YUV_GTable[*(pRgbTmp + 1)] + g_RGB2YUV_BTable[*pRgbTmp]);\r\n\r\n\t\t\tpRgbTmp += 3;\r\n\t\t\tpY++;\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n```", "Konwledge_Point": "循环控制", "Question": ["我在网上找了个bmp转YUV的程序进行修改，但读不出数据，不知什么问题，有谁懂的请帮忙看下，谢谢了", ["#include ", "\n#include ", "\n#include \"bmp2rgb.h\"", "\n\n", "u_int8_t BMP2RGB(BITMAPFILEHEADER file_header,BITMAPINFOHEADER info_header, FILE* bmpFile,  u_int8_t* rgbBuf);//24bit RGB", "\nu_int8_t RGB24ToYUV420(int Width,int Height,u_int8_t* rgbBuf,u_int8_t*YuvBuffer);", "\n\n", "#define max(a,b) (((a)>(b))?(a):(b))", "\n#define min(a,b) (((a) < (b)) ? (a) : (b))", "\n\n", "int main(int argc, char** argv)", "\n{", "\n\n", "//设置命令行参数\nargv[1]= \"boot_logo.bmp\";\nargv[2]=\"boot_logo.yuv\";    //相当于设置文件名\nchar* bmpFileName = argv[1];\nchar* yuvFileName = argv[2];\n\n//打开文件\nFILE* bmpFile = fopen(bmpFileName, \"rb\");\nif (bmpFile == NULL)\n{\n    printf(\" Open the BMP file.\\n\");\n    exit(1);\n}\nelse\n{\n    printf(\"The BMP file is %s\\n\", bmpFileName);\n}\n\n\nFILE* yuvFile = fopen(yuvFileName, \"wb\");\nif (yuvFile == NULL)\n{\n    printf(\"Cannot open the YUV file.\\n\");\n    exit(1);\n}\nelse\n{\n    printf(\"The YUV file is %s\\n\", yuvFileName);\n}\n\n//读取BMP文件头，信息头，读取错误时的处理代码\nBITMAPFILEHEADER file_header;\nBITMAPINFOHEADER info_header;\nif (fread(&file_header, sizeof(BITMAPFILEHEADER), 1, bmpFile) != 1)\n    if (file_header.bfType != 0x4D42)\n    {\n        printf(\"Not BMP file.\\n\");\n        exit(1);\n    }\nif (fread(&info_header, sizeof(BITMAPINFOHEADER), 1, bmpFile) != 1)\n{\n    printf(\"read info header error!\");\n    exit(1);\n}//结束读取BMP文件头\n\n//读取图像尺寸\nint width = info_header.biWidth;\nint height = info_header.biHeight;\n\n//开辟缓冲区 buf\nu_int8_t* yBuf = (u_int8_t*)malloc(height*width);\nu_int8_t* uBuf = (u_int8_t*)malloc(height*width / 4);\nu_int8_t* vBuf = (u_int8_t*)malloc(height*width / 4);\nu_int8_t* rgbBuf = (u_int8_t*)malloc(height*width * 3);\nu_int8_t*YuvBuffer =(u_int8_t*)malloc(height*width * 5);\nif (yBuf == NULL || uBuf == NULL || vBuf == NULL || rgbBuf == NULL || YuvBuffer==NULL)\n{\n    printf(\"Not enough memory\\n\");\n    exit(1);\n}\n\n//BMP与RGB的转换，得到RGB数据\nif (BMP2RGB(file_header, info_header, bmpFile, rgbBuf))\n{\n    printf(\"BMP2RGB error\\n\");\n    exit(1);\n}\n//RGB与YUV的转换，得到YUV数据\n", "\n\n", "//  int flip = 0;", "\n    /*读取到的图像数据是倒序存放的，flip=0保证了RGB2YUV可以正确地对其转换*/", "\n  /*  if (RGB2YUV(width, height, rgbBuf, yBuf, uBuf, vBuf, flip))", "\n        {", "\n            printf(\"RGB2YUV error\\n\");", "\n            exit(1);", "\n        }", "\n\n", "//将yuv按顺序写入yuvfile文件\nfwrite(yBuf, 1, width * height, yuvFile);\nfwrite(uBuf, 1, (width * height) / 4, yuvFile);\nfwrite(vBuf, 1, (width * height) / 4, yuvFile);*/\nif( RGB24ToYUV420( width, height, rgbBuf,YuvBuffer))\n{\n    printf(\"RGB24ToYUV420 error\\n\");\n  exit(1);\n}\nint len=0;\nlen= fwrite(YuvBuffer, 1,sizeof(YuvBuffer), yuvFile);\n\nprintf(\"len ==%d byte\\n\",len);\n//打印宽高，方便yuv观看程序打开\nprintf(\"width is %d\", width);\nprintf(\"\\n\");\nprintf(\"height is %d\", height); \nprintf(\"\\n\");\n//清理内存\nfree(rgbBuf);\nfree(YuvBuffer); \nfree(yBuf); free(uBuf); free(vBuf);  \nfclose(bmpFile);\nfclose(yuvFile);\n\nreturn 0;\n", "\n\n", "}", "\n\n", "u_int8_t BMP2RGB(BITMAPFILEHEADER file_header,BITMAPINFOHEADER info_header, FILE* bmpFile,  u_int8_t* rgbBuf)", "\n{", "\n      BITMAPFILEHEADER file_h=file_header;", "\n      BITMAPINFOHEADER info_h=info_header;", "\n      FILE* pFile =bmpFile;", "\n      int w=0,h=0;", "\n    //确定像素的实际点阵数", "\n    w = (info_h.biWidth*info_h.biBitCount + 31) / 32 * 4;//w为实际一行的字节数", "\n    h = info_h.biHeight;//h为列数", "\n   // printf(\"w==%d,h==%d\\n\",w,h);", "\n    //开辟实际字节数量的缓冲区，读数据，一次读取一个字节", "\n    u_int8_t* dataBuf = (u_int8_t*)malloc(w*h);", "\n    /*使用文件头的字节偏移属性bfOffBits", "\n    直接把文件指针定位到像素值数据的起始 ", "/", "\n    fseek(pFile, file_h.bfOffBits, 0);", "\n    fread(dataBuf, 1, w*h, pFile);", "\n    unsigned char", " data = dataBuf;", "\n    u_int8_t* rgb = rgbBuf;", "\n\n", "//开始写入rgb\nint i, j;\nfor (j = 0; j < h; j++)//j控制行循环\n{\n    for (i = 0; i < w; i += 3)//i控制列循环\n    {\n        *rgb = data[i + w*j];//B\n        *(rgb + 1) = data[i + w*j + 1];//G\n        *(rgb + 2) = data[i + w*j + 2];//R\n        rgb += 3;\n    }\n}\n//释放内存\nfree(dataBuf);\nreturn 0;\n", "\n\n", "}", "\n/***************************************************************************************************************/", "\n\n", "u_int8_t RGB24ToYUV420(int Width,int Height,u_int8_t* rgbBuf,u_int8_t*YuvBuffer)", "\n{", "\n    u_int8_t* yuvBuf=YuvBuffer;//YUV空间", "\n    int nWidth=Width;", "\n    int nHeight=Height;", "\n    /////////////////////下面转换算法是网上查到的", "\n    int i, j;", "\n    u_int8_t*bufY = yuvBuf;", "\n    u_int8_t*bufU = yuvBuf + nWidth * nHeight;", "\n    u_int8_t*bufV = bufU + (nWidth* nHeight* 1/4);", "\n    u_int8_t*Y=bufY;", "\n    u_int8_t*U=bufU;", "\n    u_int8_t*V=bufV;  ", "\n\n", "u_int8_t*bufRGB;  \nunsigned char y, u, v, r, g, b;  \nif (NULL==rgbBuf)  \n{  \n     printf(\"NULL==rgbBuf\\n\");\n   return 1 ;  \n}  \nfor (j = 0; j<nHeight;j++)  \n{  \n    bufRGB = rgbBuf + nWidth * (nHeight - 1-j) * 3 ;   \n    for (i = 0;i<nWidth;i++)  \n    {  \n        int pos = nWidth * i + j;  \n        r= *(bufRGB++);  \n        g = *(bufRGB++);  \n        b = *(bufRGB++);  \n        y =(unsigned char)(( 66 * r + 129 * g +  25 * b + 128) >>8) + 16;//16  \n        v = (unsigned char)((-38 * r -  74 * g + 112 * b + 128) >>8) +128  ; //128            \n        u = (unsigned char)((112 * r -  94 * g -  18 * b + 128) >> 8) + 128 ;  \n        *(bufY++)=max(0,min(y, 255 ));  \n\n        if (j%2==0&&i%2 ==0)  \n        {  \n            if (u>255)  \n            {  \n                u=255;  \n            }  \n            if (u<0)  \n            {  \n                u = 0;  \n            }  \n            *(bufU++) =u;  \n            //存u分量  \n        }  \n        else  \n        {  \n            //存v分量  \n            if (i%2==0)  \n            {  \n                if (v>255)  \n                {  \n                    v = 255;  \n                }  \n                if (v<0)  \n                {  \n                    v = 0;  \n                }  \n                *(bufV++) =v;  \n            }  \n        }  \n    }  \n}\nreturn 0;  \n", "\n\n", "}  ", "\n\n", "\n#include <stdio.h>\n#include \"sys/types.h\"\n#include <stdlib.h>\ntypedef unsigned long  DWORD;//32bit\ntypedef unsigned short WORD;//16bit\ntypedef unsigned long  LONG; //32bit\n\ntypedef struct tagBITMAPFILEHEADER {\n    //0x00~0x01,说明文件的类型\n    WORD bfType; \n    //0x02~0x05,说明文件的大小，用字节B为单位\n    DWORD bfSize;\n    //0x06~0x07,保留，设置为0\n    WORD bfReserved1;\n    //0x08~0x09,保留，设置为0\n    WORD bfReserved2;\n    //0x0a~0x0d,说明从BITMAP_FILE_HEADER结构开始到实际的图像数据之间的字节偏移量\n    DWORD bfOffBits;\n} BITMAPFILEHEADER;\n\ntypedef struct tagBITMAPINFOHEADER {\n    //0x0e~0x11,说明当前结构体所需字节数\n    DWORD biSize;\n    //0x12~0x15,以像素为单位说明图像的宽度\n    LONG biWidth;\n    //0x16~0x19,以像素为单位说明图像的高度\n    LONG biHeight;\n    //0x1a~0x1b,说明位面数，必须为1\n    WORD biPlanes;\n    //0x1c~0x1d,说明图像的位深度\n    WORD biBitCount;\n    //0x1e~0x21,说明图像是否压缩及压缩类型\n    DWORD biCompression;\n    //0x22~0x25,以字节为单位说明图像大小，必须是4的整数倍\n    DWORD biSizeImage;\n    //0x26~0x29,目标设备的水平分辨率，像素/米 \n    LONG biXPelsPerMeter;\n    //0x2a~0x2d,目标设备的垂直分辨率，像素/米\n    LONG biYPelsPerMeter;\n    //0x2e~0x31,说明图像实际用到的颜色数，如果为0，则颜色数为2的biBitCount次方\n    DWORD biClrUsed;\n    //0x32~0x35,说明对图像显示有重要影响的颜色索引的数目，如果是0，表示都重要。\n    DWORD biClrImportant;\n} BITMAPINFOHEADER;\n\n\n\n", "\n\n", "运行环境linux，bmp图片24位", "\n\n", "运行结果：", "\nThe BMP file is boot_logo.bmp", "\nThe YUV file is boot_logo.yuv", "\nlen ==8 byte", "\nwidth is 185729024", "\nheight is 0"]], "Tag": "程序设计"}
{"Answer": "谢谢大家，已经解决了", "Konwledge_Point": "循环控制", "Question": ["用tensorflow做机器翻译时训练代码有问题", ["# -*- coding:UTF-8 -*-\nimport tensorflow as tf\n\n\nsrc_path = 'D:/Python37/untitled1/train.tags.en-zh.en.deletehtml'\ntrg_path = 'D:/Python37/untitled1/train.tags.en-zh.zh.deletehtml'\n\nSRC_TRAIN_DATA = 'D:/Python37/untitled1/train.tags.en-zh.en.deletehtml.segment'  # 源语言输入文件\nTRG_TRAIN_DATA = 'D:/Python37/untitled1/train.tags.en-zh.zh.deletehtml.segment'  # 目标语言输入文件\nCHECKPOINT_PATH = './model/seq2seq_ckpt'  # checkpoint保存路径\nHIDDEN_SIZE = 1024                  # LSTM的隐藏层规模\nNUM_LAYERS = 2                      # 深层循环神经网络中LSTM结构的层数\nSRC_VOCAB_SIZE = 10000              # 源语言词汇表大小\nTRG_VOCAB_SIZE = 4000               # 目标语言词汇表大小\nBATCH_SIZE = 100                    # 训练数据batch的大小\nNUM_EPOCH = 5                       # 使用训练数据的轮数\nKEEP_PROB = 0.8                     # 节点不被dropout的概率\nMAX_GRAD_NORM = 5                   # 用于控制梯度膨胀的梯度大小上限\nSHARE_EMB_AND_SOFTMAX = True        # 在softmax层和词向量层之间共享参数\nMAX_LEN = 50                        # 限定句子的最大单词数量\nSOS_ID = 1                          # 目标语言词汇表中<sos>的ID\n\n\n\"\"\"\nfunction: 数据batching,产生最后输入数据格式\nParameters:\n    file_path-数据路径\nReturns:\n    dataset-　每个句子－对应的长度组成的TextLineDataset类的数据集对应的张量\n\"\"\"\ndef MakeDataset(file_path):\n    dataset = tf.data.TextLineDataset(file_path)\n\n    # map(function, sequence[, sequence, ...]) -> list\n    # 通过定义可以看到，这个函数的第一个参数是一个函数，剩下的参数是一个或多个序列，返回值是一个集合。\n    # function可以理解为是一个一对一或多对一函数，map的作用是以参数序列中的每一个元素调用function函数，返回包含每次function函数返回值的list。\n    # lambda argument_list: expression\n    # 其中lambda是Python预留的关键字,argument_list和expression由用户自定义\n    # argument_list参数列表, expression 为函数表达式\n    # 根据空格将单词编号切分开并放入一个一维向量\n    dataset = dataset.map(lambda string: tf.string_split([string]).values)\n    # 将字符串形式的单词编号转化为整数\n    dataset = dataset.map(lambda string: tf.string_to_number(string, tf.int32))\n    # 统计每个句子的单词数量，并与句子内容一起放入Dataset\n    dataset = dataset.map(lambda x: (x, tf.size(x)))\n    return dataset\n\n\"\"\"\nfunction: 从源语言文件src_path和目标语言文件trg_path中分别读取数据，并进行填充和batching操作\nParameters:\n    src_path-源语言，即被翻译的语言,英语.\n    trg_path-目标语言，翻译之后的语言,汉语.\n    batch_size-batch的大小\nReturns:\n    dataset-　每个句子－对应的长度　组成的TextLineDataset类的数据集\n\"\"\"\ndef MakeSrcTrgDataset(src_path, trg_path, batch_size):\n    # 首先分别读取源语言数据和目标语言数据\n    src_data = MakeDataset(src_path)\n    trg_data = MakeDataset(trg_path)\n    # 通过zip操作将两个Dataset合并为一个Dataset，现在每个Dataset中每一项数据ds由4个张量组成\n    # ds[0][0]是源句子\n    # ds[0][1]是源句子长度\n    # ds[1][0]是目标句子\n    # ds[1][1]是目标句子长度\n    #https://blog.csdn.net/qq_32458499/article/details/78856530这篇博客看一下可以细致了解一下Dataset这个库，以及.map和.zip的用法\n    dataset = tf.data.Dataset.zip((src_data, trg_data))\n\n    # 删除内容为空(只包含<eos>)的句子和长度过长的句子\n    def FilterLength(src_tuple, trg_tuple):\n        ((src_input, src_len), (trg_label, trg_len)) = (src_tuple, trg_tuple)\n        # tf.logical_and 相当于集合中的and做法，后面两个都为true最终结果才会为true，否则为false\n        # tf.greater Returns the truth value of (x > y),所以以下所说的是句子长度必须得大于一也就是不能为空的句子\n        # tf.less_equal Returns the truth value of (x <= y),所以所说的是长度要小于最长长度\n        src_len_ok = tf.logical_and(tf.greater(src_len, 1), tf.less_equal(src_len, MAX_LEN))\n        trg_len_ok = tf.logical_and(tf.greater(trg_len, 1), tf.less_equal(trg_len, MAX_LEN))\n        return tf.logical_and(src_len_ok, trg_len_ok) #两个都满足才返回true\n\n    # filter接收一个函数Func并将该函数作用于dataset的每个元素，根据返回值True或False保留或丢弃该元素，True保留该元素，False丢弃该元素\n    # 最后得到的就是去掉空句子和过长的句子的数据集\n    dataset = dataset.filter(FilterLength)\n\n    # 解码器需要两种格式的目标句子：\n    # 1.解码器的输入(trg_input), 形式如同'<sos> X Y Z'\n    # 2.解码器的目标输出(trg_label), 形式如同'X Y Z <eos>'\n    # 上面从文件中读到的目标句子是'X Y Z <eos>'的形式，我们需要从中生成'<sos> X Y Z'形式并加入到Dataset\n    # 编码器只有输入,没有输出,而解码器有输入也有输出，输入为<sos>＋(除去最后一位eos的label列表)\n    # 例如train.en最后都为2,ｉｄ为２就是eos\n    def MakeTrgInput(src_tuple, trg_tuple):\n        ((src_input, src_len), (trg_label, trg_len)) = (src_tuple, trg_tuple)\n        # tf.concat用法 https://blog.csdn.net/qq_33431368/article/details/79429295\n        trg_input = tf.concat([[SOS_ID], trg_label[:-1]], axis=0)\n        return ((src_input, src_len), (trg_input, trg_label, trg_len))\n    dataset = dataset.map(MakeTrgInput)\n\n    # 随机打乱训练数据\n    dataset = dataset.shuffle(10000)\n\n    # 规定填充后的输出的数据维度\n    padded_shapes = (\n        (tf.TensorShape([None]),    # 源句子是长度未知的向量\n         tf.TensorShape([])),       # 源句子长度是单个数字\n        (tf.TensorShape([None]),    # 目标句子(解码器输入)是长度未知的向量\n         tf.TensorShape([None]),    # 目标句子(解码器目标输出)是长度未知的向量\n         tf.TensorShape([]))        # 目标句子长度(输出)是单个数字\n    )\n    # 调用padded_batch方法进行padding 和　batching操作\n    batched_dataset = dataset.padded_batch(batch_size, padded_shapes)\n\n    return batched_dataset\n\n\"\"\"\nfunction: seq2seq模型\nParameters:\nReturns:\n\"\"\"\nclass NMTModel(object):\n    \"\"\"\n    function: 模型初始化\n    Parameters:\n    Returns:\n\n    \"\"\"\n    def __init__(self):\n\n        # 定义编码器和解码器所使用的LSTM结构\n        self.enc_cell = tf.nn.rnn_cell.MultiRNNCell(\n            [tf.nn.rnn_cell.LSTMCell(HIDDEN_SIZE) for _ in range(NUM_LAYERS)])\n        self.dec_cell = tf.nn.rnn_cell.MultiRNNCell(\n            [tf.nn.rnn_cell.LSTMCell(HIDDEN_SIZE) for _ in range(NUM_LAYERS)])\n        # 为源语言和目标语言分别定义词向量\n        self.src_embedding = tf.get_variable('src_emb', [SRC_VOCAB_SIZE, HIDDEN_SIZE])\n        self.trg_embedding = tf.get_variable('trg_emb', [TRG_VOCAB_SIZE, HIDDEN_SIZE])\n        # 定义softmax层的变量\n        if SHARE_EMB_AND_SOFTMAX:\n            self.softmax_weight = tf.transpose(self.trg_embedding)\n        else:\n            self.softmax_weight = tf.get_variable('weight', [HIDDEN_SIZE, TRG_VOCAB_SIZE])\n        self.softmax_bias = tf.get_variable('softmax_loss', [TRG_VOCAB_SIZE])\n\n    \"\"\"\n    function: 在forward函数中定义模型的前向计算图\n    Parameters:\n    　　MakeSrcTrgDataset函数产生的五种张量如下（全部为张量）\n        src_input: 编码器输入（源数据）\n        src_size : 输入大小\n        trg_input：解码器输入（目标数据）\n        trg_label：解码器输出（目标数据）\n        trg_size：　输出大小\n    Returns:\n    \"\"\"\n    def forward(self, src_input, src_size, trg_input, trg_label, trg_size):\n        batch_size = tf.shape(src_input)[0]\n        # 将输入和输出单词转为词向量（rnn中输入数据都要转换成词向量）\n        # 相当于input中的每个id对应的embedding中的向量转换\n        src_emb = tf.nn.embedding_lookup(self.src_embedding, src_input)\n        trg_emb = tf.nn.embedding_lookup(self.trg_embedding, trg_input)\n        # 在词向量上进行dropout\n        src_emb = tf.nn.dropout(src_emb, KEEP_PROB)\n        trg_emb = tf.nn.dropout(trg_emb, KEEP_PROB)\n        # 使用dynamic_rnn构造编码器\n        # 编码器读取源句子每个位置的词向量，输出最后一步的隐藏状态enc_state\n        # 因为编码器是一个双层LSTM，因此enc_state是一个包含两个LSTMStateTuple类的tuple，\n        # 每个LSTMStateTuple对应编码器中一层的状态\n        # enc_outputs是顶层LSTM在每一步的输出，它的维度是[batch_size, max_time, HIDDEN_SIZE]\n        # seq2seq模型中不需要用到enc_outputs,而attention模型会用到它\n        with tf.variable_scope('encoder'):\n            enc_outputs, enc_state = tf.nn.dynamic_rnn(self.enc_cell, src_emb, src_size, dtype=tf.float32)\n        # 使用dynamic_rnn构造解码器\n        # 解码器读取目标句子每个位置的词向量，输出的dec_outputs为每一步顶层LSTM的输出\n        # dec_outputs的维度是[batch_size, max_time, HIDDEN_SIZE]\n        # initial_state=enc_state表示用编码器的输出来初始化第一步的隐藏状态\n        # 编码器最后编码结束最后的状态为解码器初始化的状态\n        with tf.variable_scope('decoder'):\n            dec_outputs, _ = tf.nn.dynamic_rnn(self.dec_cell, trg_emb, trg_size, initial_state=enc_state)\n        # 计算解码器每一步的log perplexity\n        #　输出重新转换成shape为[,HIDDEN_SIZE]\n        output = tf.reshape(dec_outputs, [-1, HIDDEN_SIZE])\n        #  计算解码器每一步的softmax概率值\n        logits = tf.matmul(output, self.softmax_weight) + self.softmax_bias\n        #  交叉熵损失函数，算loss\n        loss = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=tf.reshape(trg_label, [-1]), logits=logits)\n        # 在计算平均损失时，需要将填充位置的权重设置为0，以避免无效位置的预测干扰模型的训练\n        label_weights = tf.sequence_mask(trg_size, maxlen=tf.shape(trg_label)[1], dtype=tf.float32)\n        label_weights = tf.reshape(label_weights, [-1])\n        cost = tf.reduce_sum(loss * label_weights)\n        cost_per_token = cost / tf.reduce_sum(label_weights)\n        # 定义反向传播操作\n        trainable_variables = tf.trainable_variables()\n        # 控制梯度大小，定义优化方法和训练步骤\n        # 算出每个需要更新的值的梯度，并对其进行控制\n        grads = tf.gradients(cost / tf.to_float(batch_size), trainable_variables)\n        grads, _ = tf.clip_by_global_norm(grads, MAX_GRAD_NORM)\n        # 利用梯度下降优化算法进行优化.学习率为1.0\n        optimizer = tf.train.GradientDescentOptimizer(learning_rate=1.0)\n        # 相当于minimize的第二步，正常来讲所得到的list[grads,vars]由compute_gradients得到，返回的是执行对应变量的更新梯度操作的op\n        train_op = optimizer.apply_gradients(zip(grads, trainable_variables))\n        return cost_per_token, train_op\n\n\"\"\"\nfunction: 使用给定的模型model上训练一个epoch，并返回全局步数，每训练200步便保存一个checkpoint\nParameters:\n    session :  会议\n    cost_op :  计算loss的操作op\n    train_op：　训练的操作op\n    saver：　　保存model的类\n    step：　　　训练步数\nReturns:\n\"\"\"\ndef run_epoch(session, cost_op, train_op, saver, step):\n    # 训练一个epoch\n    # 重复训练步骤直至遍历完Dataset中所有数据\n    while True:\n        try:\n            # 运行train_op并计算cost_op的结果也就是损失值，训练数据在main()函数中以Dataset方式提供\n            cost, _ = session.run([cost_op, train_op])\n            # 步数为１０的倍数进行打印\n            if step % 10 == 0:\n                print('After %d steps, per token cost is %.3f' % (step, cost))\n            # 每200步保存一个checkpoint\n            if step % 200 == 0:\n                saver.save(session, CHECKPOINT_PATH, global_step=step)\n            step += 1\n        except tf.errors.OutOfRangeError:\n            break\n    return step\n\n\"\"\"\nfunction: 主函数\nParameters:\nReturns:\n\"\"\"\ndef main():\n    # 定义初始化函数\n    initializer = tf.random_uniform_initializer(-0.05, 0.05)\n    # 定义训练用的循环神经网络模型\n    with tf.variable_scope('nmt_model', reuse=None, initializer=initializer):\n        train_model = NMTModel()\n    # 定义输入数据\n    data = MakeSrcTrgDataset(SRC_TRAIN_DATA, TRG_TRAIN_DATA, BATCH_SIZE)\n    iterator = data.make_initializable_iterator()\n    (src, src_size), (trg_input, trg_label, trg_size) = iterator.get_next()\n    # 定义前向计算图，输入数据以张量形式提供给forward函数\n    cost_op, train_op = train_model.forward(src, src_size, trg_input, trg_label, trg_size)\n    # 训练模型\n    # 保存模型\n    saver = tf.train.Saver()\n    step = 0\n    with tf.Session() as sess:\n        # 初始化全部变量\n        tf.global_variables_initializer().run()\n        # 进行NUM_EPOCH轮数\n        for i in range(NUM_EPOCH):\n            print('In iteration: %d' % (i + 1))\n            sess.run(iterator.initializer)\n            step = run_epoch(sess, cost_op, train_op, saver, step)\n\n\nif __name__ == '__main__':\n    main()\n\n", "\n\n", "问题如下，不知道怎么解决，谢谢！", "\nTraceback (most recent call last):", "\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1334, in _do_call", "\n    return fn(*args)", "\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1319, in _run_fn", "\n    options, feed_dict, fetch_list, target_list, run_metadata)", "\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1407, in _call_tf_sessionrun", "\n    run_metadata)", "\ntensorflow.python.framework.errors_impl.InvalidArgumentError: StringToNumberOp could not correctly convert string: This", "\n     [[{{node StringToNumber}}]]", "\n     [[{{node IteratorGetNext}}]]", "\n\n", "During handling of the above exception, another exception occurred:", "\n\n", "Traceback (most recent call last):", "\n  File \"D:/Python37/untitled1/train_model.py\", line 277, in ", "\n    main()", "\n  File \"D:/Python37/untitled1/train_model.py\", line 273, in main", "\n    step = run_epoch(sess, cost_op, train_op, saver, step)", "\n  File \"D:/Python37/untitled1/train_model.py\", line 231, in run_epoch", "\n    cost, _ = session.run([cost_op, train_op])", "\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 929, in run", "\n    run_metadata_ptr)", "\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1152, in _run", "\n    feed_dict_tensor, options, run_metadata)", "\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1328, in _do_run", "\n    run_metadata)", "\n  File \"D:\\Anaconda\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1348, in _do_call", "\n    raise type(e)(node_def, op, message)", "\ntensorflow.python.framework.errors_impl.InvalidArgumentError: StringToNumberOp could not correctly convert string: This", "\n     [[{{node StringToNumber}}]]", "\n     [[node IteratorGetNext (defined at D:/Python37/untitled1/train_model.py:259) ]]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;昨天查了很多方法&amp;#xff0c;结果用转义就可以了&amp;#xff0c;文件是有的&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["python小游戏问题", ["import pygame  # 将pygame库导入到python程序中", "\n\n", "from pygame.locals import *  # 导入pygame中的常量", "\n\n", " ", "\n\n", "SCREENWIDTH = 822  # 窗口宽度", "\n\n", "SCREENHEIGHT = 260  # 窗口高度", "\n\n", "FPS = 30  # 更新画面的时间", "\n\n", "\n ", "\n\n", "# 定义一个滚动地图类", "\n\n", "class MyMap():", "\n\n", " ", "\n\n", "    def __init__(self, x, y):", "\n\n", "        # 加载背景图片", "\n\n", "        self.bg = pygame.image.load(\"image/bg.png\").convert_alpha()", "\n\n", "        self.x = x", "\n\n", "        self.y = y", "\n\n", " ", "\n\n", "    def map_rolling(self):", "\n\n", "        if self.x < -790:  # 小于-790说明地图已经完全移动完毕", "\n\n", "            self.x = 800  # 给地图一个新的坐标点", "\n\n", "        else:", "\n\n", "            self.x -= 5  # 5个像素向左移动", "\n\n", " ", "\n\n", "    def map_update(self):", "\n\n", "        SCREEN.blit(self.bg, (self.x, self.y))", "\n\n", "\n ", "\n\n", "from itertools import cycle  # 导入迭代工具", "\n\n", "\n ", "\n\n", "# 恐龙类", "\n\n", "class Dinosaur():", "\n\n", "    def __init__(self):", "\n\n", "        # 初始化小恐龙矩形", "\n\n", "        self.rect = pygame.Rect(0, 0, 0, 0)", "\n\n", "        self.jumpState = False  # 跳跃的状态", "\n\n", "        self.jumpHeight = 130  # 跳跃的高度", "\n\n", "        self.lowest_y = 140  # 最低坐标", "\n\n", "        self.jumpValue = 0  # 跳跃增变量", "\n\n", "        # 小恐龙动图索引", "\n\n", "        self.dinosaurIndex = 0", "\n\n", "        self.dinosaurIndexGen = cycle([0, 1, 2])", "\n\n", "        # 加载小恐龙图片", "\n\n", "        self.dinosaur_img = (", "\n\n", "            pygame.image.load(\"image/dinosaur1.png\").convert_alpha(),", "\n\n", "            pygame.image.load(\"image/dinosaur2.png\").convert_alpha(),", "\n\n", "            pygame.image.load(\"image/dinosaur3.png\").convert_alpha(),", "\n\n", "        )", "\n\n", "        self.jump_audio = pygame.mixer.Sound('audio/jump.wav')  # 跳", "\n\n", "        self.rect.size = self.dinosaur_img[0].get_size()", "\n\n", "        self.x = 50;  # 绘制恐龙的X坐标", "\n\n", "        self.y = self.lowest_y;  # 绘制恐龙的Y坐标", "\n\n", "        self.rect.topleft = (self.x, self.y)", "\n\n", " ", "\n\n", "    # 跳状态", "\n\n", "    def jump(self):", "\n\n", "        self.jumpState = True", "\n\n", " ", "\n\n", "    # 小恐龙移动", "\n\n", "    def move(self):", "\n\n", "        if self.jumpState:  # 当起跳的时候", "\n\n", "            if self.rect.y >= self.lowest_y:  # 如果站在地上", "\n\n", "                self.jumpValue = -5  # 以5个像素值向上移动", "\n\n", "            if self.rect.y <= self.lowest_y - self.jumpHeight:  # 恐龙到达顶部回落", "\n\n", "                self.jumpValue = 5  # 以5个像素值向下移动", "\n\n", "            self.rect.y += self.jumpValue  # 通过循环改变恐龙的Y坐标", "\n\n", "            if self.rect.y >= self.lowest_y:  # 如果恐龙回到地面", "\n\n", "                self.jumpState = False  # 关闭跳跃状态", "\n\n", " ", "\n\n", "    # 绘制恐龙", "\n\n", "    def draw_dinosaur(self):", "\n\n", "        # 匹配恐龙动图", "\n\n", "        dinosaurIndex = next(self.dinosaurIndexGen)", "\n\n", "        # 绘制小恐龙", "\n\n", "        SCREEN.blit(self.dinosaur_img[dinosaurIndex],", "\n\n", "                    (self.x, self.rect.y))", "\n\n", "import random  # 随机数", "\n\n", "# 障碍物类", "\n\n", "class Obstacle():", "\n\n", "    score = 1  # 分数", "\n\n", "    def __init__(self):", "\n\n", "        # 初始化障碍物矩形", "\n\n", "        self.rect = pygame.Rect(0, 0, 0, 0)", "\n\n", "        # 加载障碍物图片", "\n\n", "        self.stone = pygame.image.load(\"image/stone.png\").convert_alpha()", "\n\n", "        self.cacti = pygame.image.load(\"image/cacti.png\").convert_alpha()", "\n\n", "        # 加载分数图片", "\n\n", "        self.numbers = (pygame.image.load('image/0.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/1.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/2.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/3.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/4.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/5.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/6.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/7.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/8.png').convert_alpha(),", "\n\n", "                        pygame.image.load('image/9.png').convert_alpha())", "\n\n", "        # 加载加分音效", "\n\n", "        self.score_audio = pygame.mixer.Sound('audio/score.wav')  # 加分", "\n\n", "        # 0和1随机数", "\n\n", "        r = random.randint(0, 1)", "\n\n", "        if r == 0:  # 如果随机数为0显示石头障碍物相反显示仙人掌", "\n\n", "            self.image = self.stone", "\n\n", "        else:", "\n\n", "            self.image = self.cacti", "\n\n", "        # 根据障碍物位图的宽高来设置矩形", "\n\n", "        self.rect.size = self.image.get_size()", "\n\n", "        # 获取位图宽高", "\n\n", "        self.width, self.height = self.rect.size", "\n\n", "        # 障碍物绘制坐标", "\n\n", "        self.x = 800;", "\n\n", "        self.y = 200 - (self.height / 2)", "\n\n", "        self.rect.center = (self.x, self.y)", "\n\n", " ", "\n\n", "    # 障碍物移动", "\n\n", "    def obstacle_move(self):", "\n\n", "        self.rect.x -= 5", "\n\n", " ", "\n\n", "    # 绘制障碍物", "\n\n", "    def draw_obstacle(self):", "\n\n", "        SCREEN.blit(self.image, (self.rect.x, self.rect.y))", "\n\n", " ", "\n\n", "    # 获取分数", "\n\n", "    def getScore(self):", "\n\n", "        self.score", "\n\n", "        tmp = self.score;", "\n\n", "        if tmp == 1:", "\n\n", "            self.score_audio.play()  # 播放加分音乐", "\n\n", "        self.score = 0;", "\n\n", "        return tmp;", "\n\n", " ", "\n\n", "    # 显示分数", "\n\n", "    def showScore(self, score):", "\n\n", "        \"\"\"在窗体顶部中间的位置显示分数\"\"\"", "\n\n", "        self.scoreDigits = [int(x) for x in list(str(score))]", "\n\n", "        totalWidth = 0  # 要显示的所有数字的总宽度", "\n\n", "        for digit in self.scoreDigits:", "\n\n", "            # 获取积分图片的宽度", "\n\n", "            totalWidth += self.numbers[digit].get_width()", "\n\n", "        # 分数横向位置", "\n\n", "        Xoffset = (SCREENWIDTH - totalWidth) / 2", "\n\n", "        for digit in self.scoreDigits:", "\n\n", "            # 绘制分数", "\n\n", "            SCREEN.blit(self.numbers[digit], (Xoffset, SCREENHEIGHT * 0.1))", "\n\n", "            # 随着数字增加改变位置", "\n\n", "            Xoffset += self.numbers[digit].get_width()", "\n\n", "# 游戏结束的方法", "\n\n", "def game_over():", "\n\n", "    bump_audio = pygame.mixer.Sound('audio/bump.wav')  # 撞击", "\n\n", "    bump_audio.play()  # 播放撞击音效", "\n\n", "    # 获取窗体宽、高", "\n\n", "    screen_w = pygame.display.Info().current_w", "\n\n", "    screen_h = pygame.display.Info().current_h", "\n\n", "    # 加载游戏结束的图片", "\n\n", "    over_img = pygame.image.load('image/gameover.png').convert_alpha()", "\n\n", "    # 将游戏结束的图片绘制在窗体的中间位置", "\n\n", "    SCREEN.blit(over_img, ((screen_w - over_img.get_width()) / 2,", "\n\n", "                                       (screen_h - over_img.get_height()) / 2))", "\n\n", "\n ", "\n\n", "def mainGame():", "\n\n", "    score = 0  # 得分", "\n\n", "    over = False", "\n\n", "    global SCREEN, FPSCLOCK", "\n\n", "    pygame.init()  # 经过初始化以后我们就可以尽情地使用pygame了。", "\n\n", " ", "\n\n", "    # 使用Pygame时钟之前，必须先创建Clock对象的一个实例，", "\n\n", "    # 控制每个循环多长时间运行一次。", "\n\n", "    FPSCLOCK = pygame.time.Clock()", "\n\n", "    SCREEN = pygame.display.set_mode((SCREENWIDTH, SCREENHEIGHT))  # 通常来说我们需要先创建一个窗口，方便我们与程序的交互。", "\n\n", "    pygame.display.set_caption('小恐龙')  # 设置窗口标题", "\n\n", " ", "\n\n", "    # 创建地图对象", "\n\n", "    bg1 = MyMap(0, 0)", "\n\n", "    bg2 = MyMap(800, 0)", "\n\n", "    # 创建恐龙对象", "\n\n", "    dinosaur = Dinosaur()", "\n\n", "    addObstacleTimer = 0  # 添加障碍物的时间", "\n\n", "    list = []  # 障碍物对象列表", "\n\n", " ", "\n\n", "    while True:", "\n\n", "        # 判断是否单击了关闭窗口", "\n\n", "        for event in pygame.event.get():", "\n\n", "            # 如果单击了关闭窗口就将窗口关闭", "\n\n", "            if event.type == QUIT:", "\n\n", "                exit()  # 关闭窗口", "\n\n", "            # 单击键盘空格键，开启跳的状态", "\n\n", "            if event.type == KEYDOWN and event.key == K_SPACE:", "\n\n", "                if dinosaur.rect.y >= dinosaur.lowest_y:  # 如果恐龙在地面上", "\n\n", "                    dinosaur.jump()  # 开启恐龙跳的状态", "\n\n", "                    dinosaur.jump_audio.play()  # 播放小恐龙跳跃音效", "\n\n", "                if over == True:  # 判断游戏结束的开关是否开启", "\n\n", "                    mainGame()  # 如果开启将调用mainGame方法重新启动游戏", "\n\n", " ", "\n\n", "        if over == False:", "\n\n", "            # 绘制地图起到更新地图的作用", "\n\n", "            bg1.map_update()", "\n\n", "            # 地图移动", "\n\n", "            bg1.map_rolling()", "\n\n", "            bg2.map_update()", "\n\n", "            bg2.map_rolling()", "\n\n", "            # 恐龙移动", "\n\n", "            dinosaur.move()", "\n\n", "            # 绘制恐龙", "\n\n", "            dinosaur.draw_dinosaur()", "\n\n", "            # 计算障碍物间隔时间", "\n\n", "            if addObstacleTimer >= 1300:", "\n\n", "                r = random.randint(0, 100)", "\n\n", "                if r > 40:", "\n\n", "                    # 创建障碍物对象", "\n\n", "                    obstacle = Obstacle()", "\n\n", "                    # 将障碍物对象添加到列表中", "\n\n", "                    list.append(obstacle)", "\n\n", "                # 重置添加障碍物时间", "\n\n", "                addObstacleTimer = 0", "\n\n", "            # 循环遍历障碍物", "\n\n", "            for i in range(len(list)):", "\n\n", "                # 障碍物移动", "\n\n", "                list[i].obstacle_move()", "\n\n", "                # 绘制障碍物", "\n\n", "                list[i].draw_obstacle()", "\n\n", "                # 判断恐龙与障碍物是否碰撞", "\n\n", "                if pygame.sprite.collide_rect(dinosaur, list[i]):", "\n\n", "                    over = True  # 碰撞后开启结束开关", "\n\n", "                    game_over()  # 调用游戏结束的方法", "\n\n", "                else:", "\n\n", "                    # 判断小恐龙是否跃过了障碍物", "\n\n", "                    if (list[i].rect.x + list[i].rect.width) < dinosaur.rect.x:", "\n\n", "                        # 加分", "\n\n", "                        score += list[i].getScore()", "\n\n", "                # 显示分数", "\n\n", "                list[i].showScore(score)", "\n\n", " ", "\n\n", "        addObstacleTimer += 20  # 增加障碍物时间", "\n\n", "        pygame.display.update()  # 更新整个窗口", "\n\n", "        FPSCLOCK.tick(FPS)  # 循环应该多长时间运行一次", "\n\n", "\n ", "\n\n", "if __name__ == '__main__':", "\n\n", "    mainGame()", "\n\n", "错误显示，为什么说一直没有这文件。 求解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第95行&amp;#xff1a; scanf(&amp;#34;%c&amp;#34;, a);   变量a前面少了 ‘&amp;amp;’ 符&amp;#xff0c;修改为&amp;#xff1a; scanf(&amp;#34;%c&amp;#34;, &amp;amp;a);&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["自定义函数的返回值怎么返回", ["求大shen指点", "程序描述：", "先选择工资等级，在输入工作时间，程序将打印工资总额，税金，净收入", "1，基本工资：money1美元/小时", "2，加班（超过四十小时） = 1.5 * money1美元/小时", "3，税率：前300美元   15%", "                续150美元    20%", "                余下的          25%", "\n", "问题描述：", "自定义函数switch1()的的返回值（在程序的最下面），无法应用到原函数，求大shen指点一下，这个程序到底那里出了问题？输入之后直接就没有在执行结果了，switch1()后面的printf也没有打印", "\n", "\n", "检验的数据", "（能返回到主函数应该就没有问题， 主要想问返回值的问题）", "选3", "普通工资10/hr", "加班工资15/hr", "输入100", "输出", "The all money is $ 1500.00.", "The less money is $ 337.50.", "The last money is $ 1162.50.", "\n", "#", "include", "<stdio.h>", "\n", "//#define money1 10.0            //每小时工资10$ ", "\n", "//#define money2 15.0            //每小时工资15$ ", "\n\n", "#", "define", " j_time 40                ", "//时间界点 ", "\n\n", "#", "define", " s_money1 0.15            ", "//税率1 ", "\n", "#", "define", " s_money2 0.2            ", "//税率2 ", "\n", "#", "define", " s_money3 0.25            ", "//税率3 ", "\n\n", "#", "define", " j_money1 300            ", "//税率1所对应的最大金额 300 ", "\n", "#", "define", " j_money2 150            ", "//税率2所对应的最大金额 150 ", "\n\n", "void", " ", "show_menu", "(", "void", ")", ";             ", "//打印菜单函数原型 ", "\n", "float", " ", "switch1", "(", "void", ")", ";                ", "//选中将选中的金额转换到主函数中 ", "\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "float", " time;                    ", "//用户输入的工作时间 ", "\n    ", "float", " z_money;                ", "//税前工资 ", "\n    ", "float", " shui = ", "0", ";                ", "//税收金额         ", "\n    ", "float", " jie;                    ", "//税后工资", "\n    ", "float", " money1;                ", "//每小时工资1 ", "\n    ", "float", " money2;                ", "//每小时工资2,是1的1.5 倍", "\n    \n    ", "show_menu", "();                ", "//打印菜单 ", "\n    \n    money1 = ", "switch1", "();            ", "//导出所需要计算的金额 ", "\n    \n    money2 = ", "1.5", " * money1;\n    \n    ", "printf", "(", "\"\\nEnter your works' time:\"", "); \n    \n    ", "scanf", "(", "\"%f\"", ", &time);\n    \n    ", "//时间 ", "\n    ", "if", "(money1 != ", "0", ")\n    {\n        ", "if", "(time <= j_time)                ", "//控制40小时上下的不同工资 ", "\n            z_money = time * money1;\n        ", "else", "\n            z_money = time * money2;\n    \n        ", "//金钱 ", "\n        ", "if", "(z_money <= j_money1)\n        {\n            shui += (z_money * s_money1);            ", "//300美元以内的税金 ", "\n            jie = z_money - shui;                    ", "//税前工资 - 税金 ", "\n        }\n        ", "else", " ", "if", "(z_money <= (j_money1 + j_money2)) \n        {\n            shui += j_money1 * s_money1;                ", "//300美元整的税金 ", "\n            shui += (z_money - j_money1) * s_money2;    ", "//300美元整的税金加上续150美元以内的税金 ", "\n            jie = z_money - shui;                        ", "//税前工资 - 税金 ", "\n        }\n        ", "else", "\n        {\n            shui += j_money1 * s_money1;                                ", "//300美元整的税金 ", "\n            shui += j_money2 * s_money2;                                ", "//续150美元整的税金 ", "\n            shui += ((z_money - (j_money1 + j_money2)) * s_money3);        ", "//余下工资的税金 ", "\n            jie = z_money - shui;                                        ", "//税前工资 - 税金 ", "\n        }\n        \n        ", "printf", "(", "\"The all money is $ %0.2f.\\n\"", ", z_money); \n        ", "printf", "(", "\"The less money is $ %0.2f.\\n\"", ", shui);\n        ", "printf", "(", "\"The last money is $ %0.2f.\\n\"", ", jie);\n    }\n    \n    ", "printf", "(", "\"Bye!\\n\"", ");\n    \n    ", "return", " ", "0", ";\n}  \n\n", "void", " ", "show_menu", "(", "void", ")", "                ", "//打印选择菜单 ", "\n", "{\n    ", "char", " s1[] = ", "\"1) $8.75/hr\"", ";\n    ", "char", " s2[] = ", "\"2) $9.33/hr\"", ";\n    ", "char", " s3[] = ", "\"3) $10.00/hr\"", ";\n    ", "char", " s4[] = ", "\"4) $11.20/hr\"", ";\n    ", "char", " s5[] = ", "\"5) Quit!\"", ";\n    \n    ", "printf", "(", "\"************************************************************\\n\"", "); \n    ", "printf", "(", "\"%-40s\"", ", s1);\n    ", "printf", "(", "\"%-40s\\n\"", ", s2);\n    ", "printf", "(", "\"%-40s\"", ", s3);\n    ", "printf", "(", "\"%-40s\\n\"", ", s4);\n    ", "printf", "(", "\"%-40s\\n\"", ", s5);\n    ", "printf", "(", "\"************************************************************\\n\"", "); \n} \n\n", "float", " ", "switch1", "(", "void", ")", "                ", "//根据菜单数值，赋相应的数值到b，返回主函数到money1 ", "\n", "{\n    ", "char", " a;\n    ", "float", " b;\n    \n    ", "scanf", "(", "\"%c\"", ", a);\n    \n    ", "switch", "(a)\n    {\n        ", "case", " ", "'1'", ":\n        {\n            ", "printf", "(", "\"Hello, you select $8.75/hr.\\n\"", ");\n            b = ", "8.75", ";\n            ", "break", ";\n        }\n        ", "case", " ", "'2'", ":\n        {\n            ", "printf", "(", "\"Hello, you select $9.33/hr.\\n\"", ");\n            b = ", "9.33", ";\n            ", "break", ";\n        }\n        ", "case", " ", "'3'", ":\n        {\n            ", "printf", "(", "\"Hello, you select $10.00/hr.\\n\"", ");\n            b = ", "10.00", ";\n            ", "break", ";\n        }\n        ", "case", " ", "'4'", ":\n        {\n            ", "printf", "(", "\"Hello, you select $11.20/hr.\\n\"", ");\n            b = ", "11.20", ";\n            ", "break", ";\n        }\n        ", "case", " ", "'5'", ":\n        {\n            b = ", "0", ";                        ", "//想法：输入0为了让主函数的程序跳过循环 ", "\n            ", "break", ";\n        }\n    } \n    \n    ", "return", " b;                            ", "//返回数值，但是主函数无法识别到 ", "\n} \n\n"]], "Tag": "程序设计"}
{"Answer": "https://www.cnblogs.com/weiweictgu/p/5848805.html", "Konwledge_Point": "循环控制", "Question": ["log4net 生成环境不自动保存日志文件", ["描述问题：", "\n在开发环境下。log4net运行正常，每分钟产生一个日志文件", "\n部署后，每次启动IIS会自动保存上一次的日志文件并生成txt文件，", "\n\n", "log4net 配置文件", "\n\n", "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<configuration>\n  <configSections>\n    <section name=\"log4net\" type=\"log4net.Config.Log4NetConfigurationSectionHandler,log4net\"/>\n  </configSections>\n\n  <log4net>\n    <!--定义输出到一个固定文件中-->\n    <appender name=\"FileAppender\" type=\"log4net.Appender.FileAppender\">\n      <file value=\"log/log.txt\" />\n      <appendToFile value=\"true\" />\n      <layout type=\"log4net.Layout.PatternLayout\">\n        <!--每条日志末尾的文字说明-->\n        <header value=\"&#13;&#10;[============================应用程序日志开始============================ ]&#13;&#10;\" />\n        <footer value=\"&#13;&#10;[ ===========================应用程序日志结束=============================]&#13;&#10;\" />\n        <!--输出格式-->\n        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->\n        <conversionPattern value=\"%newline%newline记录时间：%date 线程ID:[%thread] 日志级别：%-5level 类名或程序集名：%logger  %newline   property:[%property{NDC}] - 描述：%message%newline\" />\n      </layout>\n    </appender>\n\n    <!--定义输出到文件中,循环创建日志文件，以日期命名-->\n    <appender name=\"RollingFileAppender\" type=\"log4net.Appender.RollingFileAppender\">\n      <!--定义文件存放位置      保存当前日期的日志,当第二天新日志产生时会把当前日期的日志保存备份-->\n      <file value=\"log/log\" />\n      <!--禁止覆盖原有文件,true：覆盖原有文件-->\n      <appendToFile value=\"false\" />\n      <rollingStyle value=\"Date\" />\n      <!--以天为单位进行日志滚动,保存过去日期的日志-->\n      <datePattern value=\"yyyy-MM-dd-HHmm&quot;.txt&quot;\" />\n      <layout type=\"log4net.Layout.PatternLayout\">\n        <!--每条日志末尾的文字说明-->\n        <header value=\"&#13;&#10;[============================应用程序日志开始============================ ]&#13;&#10;\" />\n        <footer value=\"&#13;&#10;[ ===========================应用程序日志结束=============================]&#13;&#10;\" />\n        <!--输出格式-->\n        <!--样例：2008-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->\n        <conversionPattern value=\"%newline%newline记录时间：%date 线程ID:[%thread] 日志级别：%-5level 类名或程序集名：%logger  %newline   property:[%property{NDC}] - 描述：%message%newline\" />\n      </layout>\n    </appender>\n\n    <!--定义输出到控制台命令行中-->\n    <appender name=\"ConsoleAppender\" type=\"log4net.Appender.ConsoleAppender\">\n      <layout type=\"log4net.Layout.PatternLayout\">\n        <!--输出格式-->\n        <conversionPattern value=\"%newline时间：%date 线程ID：[%thread] 日志级别：%-5level 类名或程序集名：%logger  %newline property:[%property{NDC}] - 描述：%message%newline\" />\n      </layout>\n    </appender>\n\n    <!--定义以不同颜色输出到控制台-->\n    <appender name=\"ManagedColoredConsoleAppender\" type=\"log4net.Appender.ManagedColoredConsoleAppender\">\n      <mapping>\n        <level value=\"ERROR\" />\n        <foreColor value=\"DarkRed\" />\n      </mapping>\n      <mapping>\n        <level value=\"WARN\" />\n        <foreColor value=\"Yellow\" />\n      </mapping>\n      <mapping>\n        <level value=\"INFO\" />\n        <foreColor value=\"DarkGray\" />\n      </mapping>\n      <mapping>\n        <level value=\"DEBUG\" />\n        <foreColor value=\"DarkGreen\" />\n      </mapping>\n\n      <layout type=\"log4net.Layout.PatternLayout\">\n        <!--输出格式-->\n        <conversionPattern value=\"%newline时间：%date 线程ID：[%thread] 日志级别：%-5level 类名或程序集名：%logger  %newline property:[%property{NDC}] - 描述：%message%newline\" />\n      </layout>\n    </appender>\n\n    <!--定义输出到数据库中，这里举例输出到Access数据库中，数据库为log4net.mdb（可以自定义路径）-->\n    <appender name=\"AdoNetAppender_Access\" type=\"log4net.Appender.AdoNetAppender\">\n      <connectionString value=\"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=logDB/log4net.mdb\" />\n      <commandText value=\"INSERT INTO LogDetails ([LogDate],[Thread],[Level],[Logger],[Message]) VALUES (@logDate, @thread, @logLevel, @logger,@message)\" />\n      <!--定义各个参数-->\n      <parameter>\n        <parameterName value=\"@logDate\" />\n        <dbType value=\"String\" />\n        <size value=\"240\" />\n        <layout type=\"log4net.Layout.PatternLayout\">\n          <conversionPattern value=\"%date\" />\n        </layout>\n      </parameter>\n      <parameter>\n        <parameterName value=\"@thread\" />\n        <dbType value=\"String\" />\n        <size value=\"240\" />\n        <layout type=\"log4net.Layout.PatternLayout\">\n          <conversionPattern value=\"%thread\" />\n        </layout>\n      </parameter>\n      <parameter>\n        <parameterName value=\"@logLevel\" />\n        <dbType value=\"String\" />\n        <size value=\"240\" />\n        <layout type=\"log4net.Layout.PatternLayout\">\n          <conversionPattern value=\"%level\" />\n        </layout>\n      </parameter>\n      <parameter>\n        <parameterName value=\"@logger\" />\n        <dbType value=\"String\" />\n        <size value=\"240\" />\n        <layout type=\"log4net.Layout.PatternLayout\">\n          <conversionPattern value=\"%logger\" />\n        </layout>\n      </parameter>\n      <parameter>\n        <parameterName value=\"@message\" />\n        <dbType value=\"String\" />\n        <size value=\"240\" />\n        <layout type=\"log4net.Layout.PatternLayout\">\n          <conversionPattern value=\"%message\" />\n        </layout>\n      </parameter>\n    </appender>\n    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->\n\n    <root>\n      <!--控制级别，由低到高: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF\n      比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录\n      如果没有定义LEVEL的值，则缺省为DEBUG-->\n      <level value=\"ALL\"/>\n      <!--文件形式记录日志-->\n      <appender-ref ref=\"RollingFileAppender\" />\n      <!--控制台控制显示日志-->\n      <appender-ref ref=\"ConsoleAppender\" />\n      <!--控制台以不同颜色显示日志-->\n      <appender-ref ref=\"ManagedColoredConsoleAppender\" />\n      <!--定义输出到数据库中。 如果不启用相应的日志记录，可以通过这种方式注释掉-->\n      <!--<appender-ref ref=\"AdoNetAppender_Access\" />-->\n    </root>\n  </log4net>\n</configuration>\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;pygame.mixer.init()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;初始化一下&amp;#xff0c;再运行&amp;#xff0c;注意连接上音频设备&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["python抱错pygame.error: mixer not initialized！急急急", ["1.python抱错", "\n\n", "Exception in Tkinter callback", "\nTraceback (most recent call last):", "\n  File \"C:\\Python34\\requests-master\\lib\\tkinter\\__init__.py\", line 1538, in __call__", "\n    return self.func(*args)", "\n  File \"C:\\Python34\\requests-master\\mp3 play.py\", line 198, in control_voice", "\n    pygame.mixer.music.set_volume(float(value))", "\npygame.error: mixer not initialized", "\n\n", "我的代码", "\n\n", "\n", "import os\nimport tkinter\nimport tkinter.filedialog\nimport time\nimport threading\nimport pygame #实现音频播放\n \n#第一步：搭建界面\n \nroot = tkinter.Tk()\nroot.title('音乐播放器v1.0')\n#设置窗口大小和屏幕绝对位置\nroot.geometry('460x600+500+100')\n#固定窗口大小，设置窗口不可拉伸\nroot.resizable(False,False)\n \nfolder = ''\t# 接收文件路径 默认为空\nres=[]\t\t# \nnum=0\nnow_music = ''\n \n \n#第二步：实现功能\n \ndef buttonChooseClick():\n\t#添加文件函数\n \n\tglobal folder\n\tglobal res\n\t#如果folder不为空，则····\n\tif not folder:\n\t\tfolder = tkinter.filedialog.askdirectory() #选择目录，返回目录名\n\t\tmusics = [folder + '\\\\' + music\n\t\t\t\tfor music in os.listdir(folder)\\\n\t\t\t\t\t\t\\\n\t\t\t\tif music.endswith(('.mp3','.m4a','.wav','.ogg'))\t]\n \n \n\t\tret = []\n\t\tfor i in musics:\n\t\t\tret.append(i.split('\\\\')[1:])\n\t\t\tres.append(i.replace(\"\\\\\",'/'))\n \n\t\tvar2 = tkinter.StringVar()\n\t\tvar2.set(ret)\n\t\tlb = tkinter.Listbox(root,listvariable=var2)\n\t\tlb.place(x=50,y=220,width=260,height=300)\n \n\tif not folder:\n\t\treturn\n\tglobal playing\n\tplaying = True\n \n \n\t#根据情况禁用或启用相应按钮\n \n\tbottonPlay['state'] = 'normal'\n\tbottonStop['state'] = 'normal'\n \n\t#buttonPause['state'] = 'normal'\n \n\tpause_resume.set('播放')\n \n \n#播放音乐函数\ndef play():\n\t\n\t#初始化混响设备\n \n\tif len(res):\n\t\tpygame.mixer.init()\n\t\tglobal num\n\t\twhile playing:\n\t\t\tif not pygame.mixer.music.get_busy():\n\t\t\t\t#随机播放\n\t\t\t\tnextMusci = res[num]\n\t\t\t\tprint(nextMusci)\n\t\t\t\tprint(num)\n\t\t\t\tpygame.mixer.music.load(nextMusci.encode())\n\t\t\t\t#播放一次\n\t\t\t\tpygame.mixer.music.play(1)\n\t\t\t\t#print(len(res)-1)\n\t\t\t\tif len(res) - 1 ==num:\n\t\t\t\t\tnum=0\n\t\t\t\telse:\n\t\t\t\t\tnum +=1\n\t\t\t\tnextMusci = nextMusci.split(\"\\\\\")[1:]\n\t\t\t\tmusicName.set('playing....'+''.join(nextMusci))\n\t\t\telse:\n\t\t\t\ttime.sleep(0.1)\n \n \n#点击播放函数\ndef bottonPlayClik():\n\tbottonNext['state']='normal'\n\tbottonPrev['state']='normal'\n \n\t#选择要播放的音乐文件夹\n\tif pause_resume.get() == '播放':\n\t\tpause_resume.set('暂停')\n\t\tglobal folder\n \n\t\tif not folder:\n\t\t\t#选择目录，返回目录名\n\t\t\tfolder = tkinter.filedialog.askdirectory()\n \n\t\tif not folder:\n\t\t\treturn\n \n\t\tglobal playing\n \n\t\tplaying = True\n \n\t\t#创建一个进程来播放音乐，当前主进程用来接收用户操作\n \n\t\tt = threading.Thread(target=play)\n \n\t\tt.start()\n \n\telif pause_resume.get() == '暂停':\n \n\t\tpygame.mixer.music.pause()\n\t\tpause_resume.set('继续')\n \n\telif pause_resume.get()=='继续':\n\t\tpygame.mixer.music.unpause()\n \n\t\tpause_resume.set('暂停')\n \n \n#停止播放函数\ndef bottonStopClik():\n\tglobal playing\n \n\tplaying = False\n \n\tpygame.mixer.music.stop()\n \n#下一首函数\ndef bottonNextClik():\n\tglobal playing\n \n\tplaying = False\n \n\tpygame.mixer.music.stop()\n \n\tglobal num \n \n\tif len(res) == num:\n\t\tnum=0\n\tplaying = True\n\tglobal t\n\tt = threading.Thread(target=play)\n \n\tt.start()\n \n#上一首函数\ndef bottonPrevClik():\n\tglobal playing\n \n\tplaying=False\n \n\tpygame.mixer.music.stop()\n \n\tglobal num\n \n\tif num==0:\n\t\tnum=len(res)-2\n \n\telif num ==len(res)-1:\n\t\tnum-=2\n\telse:\n\t\tnum-=2\n\tprint(num)\n \n\tplaying = True\n\tglobal t\n\tt.threading.Thread(target=play)\n \n\tt.start()\n#关闭窗口函数\ndef closeWindows():\n\tglobal playing\n\tplaying=False\n\ttime.sleep(0.3)\n \n\ttry:\n\t\tpygame.mixer.music.stop()\n\t\tpygame.mixer.quit()\n \n\texcept:\n\t\tpass\n\troot.destroy()\n \n \n#声音控制函数\ndef control_voice(value=0.5):\n\tpygame.mixer.music.set_volume(float(value))\n \n \n \n \n#添加按钮\nbottonChoose=tkinter.Button(root,text='添加',command=buttonChooseClick)\n#按钮布局\nbottonChoose.place(x=50,y=50,width=50,height=20)\n \n#播放按钮\t跟踪变量值的变化\npause_resume=tkinter.StringVar(root,value='播放')\nbottonPlay=tkinter.Button(root,textvariable=pause_resume,command=bottonPlayClik)\n#按钮布局\nbottonPlay.place(x=120,y=50,width=50,height=20)\nbottonPlay['state'] = 'disabled'\t#未添加文件（刚启动）时禁用\n \n#停止播放\nbottonStop = tkinter.Button(root,text='停止')\n#按钮布局\nbottonStop.place(x=50,y=130,width=50,height=20)\n \n#下一首\nbottonNext = tkinter.Button(root,text='下一首',command=bottonNextClik)\n#按钮布局\nbottonNext.place(x=50,y=100,width=50,height=20)\nbottonNext['state']='disabled'\n \n#上一首\nbottonPrev = tkinter.Button(root,text='上一首',command=bottonPrevClik)\n#按钮布局\nbottonPrev.place(x=120,y=100,width=50,height=20)\nbottonPrev['state']='disabled'\n \n#显示内容--播放状态\nmusicName = tkinter.StringVar(root,value='暂时没有播放音乐...')\nlabelName = tkinter.Label(root,textvariable=musicName)\nlabelName.place(x=10,y=20,width=260,height=20)\n \n#显示内容--音量调节\ns = tkinter.Scale(root,label='音量',from_=0,to=1,orient=tkinter.HORIZONTAL,length=240,\n\t\tshowvalue=0,tickinterval=2,resolution=0.1,command=control_voice)\ns.place(x=50,y=150,width=200)\n \n#关闭窗口\nroot.protocol(\"WM_DELETE_WINDOW\",closeWindows)\n \n \n \n \n \n#启用消息循环:显示出上一步创建的画板对象\nroot.mainloop()\n\n", "\n\n", "有谁知道怎么办"]], "Tag": "程序设计"}
{"Answer": "哦哦。。。原来是HighCharts\n官方声称是有解决内存泄漏问题，但关键是。。。它指的泄漏是关闭浏览器仍不释放的泄漏，而非运行中释放\n\n基本上，想要解决难度很大，几乎底层代码都要过一遍，加上清理事件、解除Dom引用的逻辑。\n好像excanvas也需要一同改进\n\nHighCharts代码不便放出（就算放出也没用，版本低，改动大），但还是能做到将近0增长的。\n\nP.S. 推荐使用sIEve查看IE下Dom节点释放情况，JS本身的GC是很完善的，但与Dom循环引用就无能为力了。所以查看Dom节点的释放情况就知道是哪里有泄漏了。", "Konwledge_Point": "循环控制", "Question": ["JQuery插件-HighCharts 一个令我蛋疼的事 求教、、", ["引用", "\n", "  最近在做一个监控系统，需要制作两个图形，一个度盘，一个波形图，最先开始使用了JFreeChart绘制图形，但是在服务器端绘制图形鸭梨很大，占用带宽多，浏览图形不畅快，抛弃之。 ", "    然后觉得可以使用Java Applet在客户端绘制图形，但是这个要求JRE环境，于是也被无情的抛弃了。 ", "    然后在网上找了会，发现一个HighCharts类库，一个JQuery插件，使用这个绘制出来的图形挺好看的，效果也令人满意，但是目前跟AJAX结合之后，highcharts制造出来的内存一直没有删除，PF使用率以每秒3MB的速度网上猛涨，令人大感鸭梨、、、（波形图现在困到这一个内存问题了） ", "   最后的度盘，在刚开始采用的Highcharts画的饼图，弄的一块一块的 效果也差，所以在GOOGLE了把JS绘图技术，搜出了 令我大感兴奋的矢量绘图技术，SVG AND VML，SVG支持除ＩＥ外大部分的浏览器，ＶＭＬ仅支持IE5以上的浏览器器，所以采用了SVG+VML结合在浏览器中绘图，图形不错，最后结合AJAX也没有发现内存问题。 ", "   所以现在在这想跟大家讨论一下HighCharts的使用、、请各位发表意见 ", "\n", "自己要做一个实时的监控数据的图形，但是跟AJAX结合的时候，内存增长的速度 比较快，谁能帮我看看怎么回事，谢谢了！", "\nwaveLineImage = {", "\n    chart: { ", "\n        renderTo: 'waveImage',    //绘制到DIV容器中，根据ID", "\n        defaultSeriesType: 'line',   //绘制类型 目前是曲线", "\n        plotBorderWidth: 1,", "\n        plotBorderColor: '#99CC99',", "\n        marginRight: 12,", "\n        showAxes: true", "\n    },", "\n    title: {", "\n        text: '',", "\n        x: -20 //center", "\n    },", "\n    xAxis: {", "\n        tickWidth: 0,", "\n        tickInterval: 5,", "\n        gridLineWidth: 1,", "\n        gridLineColor: '#99CC99',", "\n        categories: []", "\n    },", "\n    yAxis: {", "\n        title: {", "\n            text: ''", "\n        },", "\n        min: -1,", "\n        tickInterval: 5,", "\n        gridLineWidth: 1,", "\n        gridLineColor: '#99CC99'", "\n    },", "\n    plotOptions: {", "\n        series: {", "\n            animation: false,", "\n            marker: {", "\n                enabled: false", "\n            }", "\n        }", "\n    },", "\n    tooltip: {", "\n        enabled:false,", "\n        formatter: function(){", "\n            return null;", "\n        }", "\n    },", "\n    legend: {", "\n        enabled: false", "\n    },", "\n    exporting: {", "\n        enabled: false", "\n    },", "\n    series: [{", "\n        name: \"monitor\",", "\n        data: []", "\n    }, {", "\n        name: \"temp\",", "\n        data: []", "\n    }]", "\n}", "上面是 初始化曲线图的实例", "\nvar tempArray = null;\n\n", "function drawOscillogram(waveData){", "\n    if (waveData) {   //传输过来的JSON数据", "\n        var dataArray = new Array();", "\n        var array = null, point = null, num = null,item = null;", "\n        var waveDataLength = waveData.length;", "\n        for (var i = 0; i < waveDataLength; i++) {", "\n            array = waveData[i].split(\",\");", "\n            point = 1 / array.length;", "\n            for (var j = 0; j < array.length; j++) {", "\n                num = i + Math.round((point * j) * 10) / 10;", "\n                item = parseFloat(array[j]);", "\n                dataArray.push([num, item]);", "\n                num = null;", "\n            }", "\n            array = null;  item = null;  point = null;", "\n        }", "\n\n", "    if (waveDataLength &lt; 60) {   //当不足60个点时，创建一个临时的数据，绑定到temp当中\n        if (tempArray == null) {\n            tempArray = new Array();\n            for (var i = 0; i &lt; 61; i++) {\n                tempArray.push([i, -6]);\n            }\n        }\n        if(!waveLineImage.series[1])  waveLineImage.addSeries(\"\",true,false);\n        waveLineImage.series[1].data = tempArray;\n    }\n    else {\n        tempArray = null;\n        waveLineImage.series[1].remove();\n    }\n    waveLineImage.series[0].data = dataArray;    \n    dataArray = null; waveDataLength = null;\n\n\nwaveLineImage.redraw();   //重新绘制HighCharts图形\n     new Highcharts.Chart(waveLineImage);        //绘制HIghcharts图形，这一句会生成大内\n", "\n\n", "//存，想直接调用redraw重绘方法，完成绘图，这样不用重新刷新区域，而是在旧的基础上绘制，会减少内存，但", "\n//是曲线什么都显示不出来", "\n    }", "\n}", "\n\n", "waveData 是 传过来的 数据，把他绑定到图形中 ，内存长的飞快，每秒3MB，怎么修改，怀疑是//new Highcharts.Chart(waveLineImage);这句话增长的内存，然后调用 highCharts 的redraw 方法，重画，可是没有效果出来 求高手 提错！！！！", "问题补充", "上面有做出来的效果图，可以下载出来看一下、、", "另外HighCharts有一个redraw重绘方法，但是应该怎么调用呢，我调用无效！", "问题补充", "主要就是内存的方面了，也看了好多的JavaScript方面性能问题，内存释放问题，但是都不太理想，", "问题补充", "\n", "怎么没人回复啊 泪奔、、", "\n", "太遗憾了吧", "\n", "问题补充", "引用", "\n", "用不用我加点注释 、、 汗", "\n", "哪一点有问题啊 泪奔中、、", "\n", "不回复也得顶起来啊 呜呜、", "\n", "大家都来探讨一下啊 呵呵", "\n", "大家在客户端都用什么方法绘制图表呢", "\n", "问题补充", " ", " ", " ", " ", " ", " ", " ", " ", " ", "问题补充", "引用", "\n", "咱么是顶起呢？还是顶起呢？呵呵", "\n", "咱么是顶起呢？还是顶起呢？呵呵", "\n", "顶顶顶 力压千钧", "\n", "虽说晚上不上班 也不至于吧", "\n", "有哪一点会是不好的 大大们都去哪了", "\n", "问题补充", "奥义之舞 写道", "\n", "引用", "\n", "\n", "咱么是顶起呢？还是顶起呢？呵呵", "\n", "看帖不回帖 很不给力啊", "\n", "顶顶顶 力压千钧", "\n", "虽说晚上不上班 也不至于吧", "\n", "有哪一点会是不好的 大大们都去哪了", "\n", "\n", "+1", "问题补充", "引用", "在highcharts官网", "http://www.highcharts.com/ref/#chart-object查了很久，经过测试，发现一个方法可行，很给力的时刻，修改了点代码，现在使用这种代码之后，可以保持在120KB/s左右的增长率", "\n", "修改后的代码：", "waveLineImage = new Highcharts.Chart({", "\n    chart: { ", "\n        renderTo: 'waveImage',    //绘制到DIV容器中，根据ID", "\n        defaultSeriesType: 'line',   //绘制类型 目前是曲线", "\n        plotBorderWidth: 1,", "\n        plotBorderColor: '#99CC99',", "\n        marginRight: 12,", "\n        showAxes: true", "\n    },", "\n    title: {", "\n        text: '',", "\n        x: -20 //center", "\n    },", "\n    xAxis: {", "\n        tickWidth: 0,", "\n        tickInterval: 5,", "\n        gridLineWidth: 1,", "\n        gridLineColor: '#99CC99',", "\n        categories: []", "\n    },", "\n    yAxis: {", "\n        title: {", "\n            text: ''", "\n        },", "\n        min: -1,", "\n        tickInterval: 5,", "\n        gridLineWidth: 1,", "\n        gridLineColor: '#99CC99'", "\n    },", "\n    plotOptions: {", "\n        series: {", "\n            animation: false,", "\n            marker: {", "\n                enabled: false", "\n            }", "\n        }", "\n    },", "\n    tooltip: {", "\n        enabled:false,", "\n        formatter: function(){", "\n            return null;", "\n        }", "\n    },", "\n    legend: {", "\n        enabled: false", "\n    },", "\n    exporting: {", "\n        enabled: false", "\n    },", "\n    series: [{", "\n        name: \"monitor\",", "\n        data: []", "\n    }, {", "\n        name: \"temp\",", "\n        data: []", "\n    }]", "\n});", " 直接实例化绘图对象", "\nvar tempArray = null;", "\nfunction drawOscillogram(waveData){\n\n", "if (waveData) {   //传输过来的JSON数据\n    var dataArray = new Array();\n    var array = null, point = null, num = null,item = null;\n    var waveDataLength = waveData.length;\n    for (var i = 0; i &lt; waveDataLength; i++) {\n        array = waveData[i].split(\",\");\n        point = 1 / array.length;\n        for (var j = 0; j &lt; array.length; j++) {\n            num = i + Math.round((point * j) * 10) / 10;\n            item = parseFloat(array[j]);\n            dataArray.push([num, item]);\n            num = null;item=null;\n        }\n        array = null;  item = null;  point = null;\n    }\n    array = null;  item = null;  point = null; num = null; item=null;\n    if (waveDataLength &lt; 60) {   //当不足60个点时，创建一个临时的数据，绑定到temp当中\n        if (tempArray == null) {\n            tempArray = new Array();\n            for (var i = 0; i &lt; 61; i++) {\n                tempArray.push([i, -6]);\n            }\n        }\n        if(!waveLineImage.series[1])  waveLineImage.addSeries(\"\",true,false);\n        waveLineImage.series[1].setData(tempArray);\n    }\n    else {\n        tempArray = null;\n        waveLineImage.series[1].remove();\n    }\n    waveLineImage.series[0].setData(dataArray);     //在这里通过setData方法设置数据\n    dataArray = null; waveDataLength = null;\n    waveLineImage.redraw();   //这样调用图例对象的重绘方法可以找的到数据，以前数\n", "\n\n", "//据是设置到JSON里面了，这个对象的数据应该没有更新", "\n    }", "\n}", "不过这种现在仍然有100多KB的增长率，对于一个长期停留在页面中不刷新的局面，仍然是一个问题，各位老大们，有没有一个很好的意见提出来，让我继续改进，thank you", "问题补充", "tanqimin 写道", "这个图表真的很蛋痛！", "哥们这个图表怎么了，很好看啊 呵呵 就是性能有点扯淡，不过性能是决定页面技术的优先选择、、", "很惆怅 ", "问题补充", "夜之son 写道", "想让大家说什么呢，图太少，不给力。", "ok 上图 ", "问题补充", "另外这个是VML画的度盘，跟AJAX结合 也不卡，很给力啊 呵呵 推荐 SVG + VML 结合 一秒 10多KB的增长量", "问题补充", "发现看英文文档狠让人蛋疼的事，有木有，中文帮助文档在哪里 呜呜", "引用", "\n", "希望对我的循环提出哪里可以优化点在、、感觉这里面也会浪费点性能", "希望最后能把PF增长率 控制在 10KB以内", "希望告我一个 JS代码 控制页面刷新的 代码", "这样我可以再内存增长到一定程度的时候 刷新释放内存", "\n", "问题补充", "hyj1254 写道", "highChart我也在用，倒是没深究内存增长的问题。它也是vml+svg。内存不释放跟js代码和浏览器自身实现方式都有关系，有些情况你是无法有效释放内存的：比如在ie中，希望刷新释放内存是无法实现的，你可以到taobao、google地图等网站验证下，它默认将所有的页面元素都缓存起来，因此即使js完全没有问题它所占的内存也会越来越大。但chrome就好得多，每次刷新都显著地释放一些内存。至于highChart你可以到官网上反映下，看是否是内存泄露导致的。", "+1", "引用", "用的浏览器 IE 和 火狐的 ，谷歌到没有看，不过同事通过谷歌浏览器访问了一下，正常，内存这块到没有看，这个浏览器的问题一直在关注， IE 和 FireFox的 掐架 一直没有停止 、、、", "引用", "\n", "   另外JS代码构造对象和释放对象之间，这个度由于刚开始关注性能问题，也没能做的很好，大家看到哪一点可以优化的，可以提出来、、", "over ", " ", " ", "\n", "问题补充", "clue 写道", "哦哦。。。原来是HighCharts", "官方声称是有解决内存泄漏问题，但关键是。。。它指的泄漏是关闭浏览器仍不释放的泄漏，而非运行中释放", "基本上，想要解决难度很大，几乎底层代码都要过一遍，加上清理事件、解除Dom引用的逻辑。", "好像excanvas也需要一同改进", "HighCharts代码不便放出（就算放出也没用，版本低，改动大），但还是能做到将近0增长的。", "P.S. 推荐使用sIEve查看IE下Dom节点释放情况，JS本身的GC是很完善的，但与Dom循环引用就无能为力了。所以查看Dom节点的释放情况就知道是哪里有泄漏了。", "高手、、那按照你这样说，我要想做到内存0增长或近0增长，必须修改highcharts的源代码是么？", "期待回答///", "对于上SIEVE这个软件，下载了也是用了 ，还有一个 火狐里面可以查看内存的软件，也使用了，但是 但是很头疼，", "还没有找到解决的办法、", "还是经验少啊", "问题补充", "纪红玉 写道", "JavaEye/ItEye ", "1号群 现招人 QQ 群号：39211996", "女程序员群7736086", "发完帖子我的号就没了，哎！", "\n", "找女程序员群，貌似很难吧，估计你这个也是新创的、", "问题补充", "yintingbird 写道", "我建议你用FusionCharts，你可以在网上搜一下，他的图表显示就很好，我用的就是这个，很简单的，你可以再往上找一个破解版的，但是破解版的柯南找的时候有点不好找。", "这个项目 已经基本完成了，这时候在动这个技术不太可可能，有可能到最后的时候 换成 ＳＶＧ　＋　ＶＭＬ了，", "觉得这个　可以　控制，但是　ＡＪＡＸ　刷新时，内存也是嗖嗖的网上长啊，一秒１０几KB 这还只是 小图形。", "不过应该比当年用DIV时候强吧、、", "问题补充", "很奇怪，为什么要投隐呢，难道我发的板块不对 晕、、", "问题补充", "偷偷的用 到时候 还得改 先拿着个练练手啊！", "问题补充", "conanca 写道", "\n", "奥义之舞 写道", "\n", "\n", "yintingbird 写道", "\n", "我建议你用FusionCharts，你可以在网上搜一下，他的图表显示就很好，我用的就是这个，很简单的，你可以再往上找一个破解版的，但是破解版的柯南找的时候有点不好找。", "\n", "这个项目 已经基本完成了，这时候在动这个技术不太可可能，有可能到最后的时候 换成 ＳＶＧ　＋　ＶＭＬ了，", "觉得这个　可以　控制，但是　ＡＪＡＸ　刷新时，内存也是嗖嗖的网上长啊，一秒１０几KB 这还只是 小图形。", "不过应该比当年用DIV时候强吧、、", "\n", "\n", "HighCharts 商业用的话要收费吧。", "你们买了授权还是做的是国内项目？", "先拿这个练手，到时候重新换一个 ", "准备用raphael 谁用过这个，这个性能怎么样呢，封装的SVG+ＶＭＬ", "问题补充", "红四团 写道", "HighCharts所renderer出来的每个Element都是可以destroy的，每个element都有destroy方法。HighCharts封装了VML和SVG，基本上能够跨浏览器。", "这个还真不知道，只知道总的有个释放的对象，结果一 释放，悲剧的事情发生了，整个图形都没有了", "另外想知道 highcharts商用要上交多少money啊", "问题补充", "sunofsummer 写道", "我以前和你遇到过同样的问题，amcharts可以解决。", "性能方面可以解决么，内存长的快不，和AJAX交互怎么样，", "问题补充", "kiven 写道", "\n", "http://www.open-lib.com/Type/164-1.jsp", "这里面或许有你要找的。大家都共享一下自己项目用的图标组件吧。", "thank you ", "不知道who用过Flex么 他生成的swf文件是在客户端生成的，还是服务器生成之后传输过来的呢，如果我要对他进行定时刷新，速度怎么样", "问题补充", "ahzzhen2 写道", "用过Flex as3脚本写过一个监控的，内存占用是用仪表盘形式做的。也试过用pushlet+highchart写过（不是很理想，抛弃）", "貌似没理解我的意思，我说的是Flex监控 实时刷新 内存部分长的块么， 是在客户端 或者 服务器端绘图，绘制出来的图形传递速度怎么样，占用带宽多么", "问题补充", "sunofsummer 写道", "\n", "奥义之舞 写道", "\n", "\n", "sunofsummer 写道", "\n", "我以前和你遇到过同样的问题，amcharts可以解决。", "\n", "性能方面可以解决么，内存长的快不，和AJAX交互怎么样，", "\n", "amcharts是基于flash实现的 如果网页游戏不存在内存问题的话 它也不会有的。", "\n", "额 这种的是不是刚开始都要进行加载等待一下啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;出现什么错误了&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["我想在屏幕上随机生成不同方向的Enemy，本来我是想用字典存储图片，再用random随机调用图片，但试了一下不行", ["我想在屏幕上随机生成不同方向的Enemy，本来我是想用字典存储图片，再用random随机调用图片，但试了一下不行", "main模块", "\n", "import", " pygame\n", "from", " tank_sprite ", "import", " *\n\n", "class", " ", "TankGame", "(", "object", "):\n\n\n    ", "#游戏初始化", "\n    ", "def", " ", "__init__", "(", "self", "):\n\n        ", "#设置游戏窗口", "\n        self.screen=pygame.display.set_mode(SCREEN_SIZE.size)\n\n        ", "#创建窗口标题", "\n        pygame.display.set_caption(", "'坦克大战'", ")\n        ", "#创建游戏时钟", "\n        self.clock=pygame.time.Clock()\n\n        ", "#创建精灵组", "\n        self.__create_sprites()\n        ", "#敌机刷新时间  10s", "\n        pygame.time.set_timer(ENEMY_SHOW_TIME,", "1000", ")\n\n\n    ", "#开始游戏", "\n    ", "def", " ", "star_game", "(", "self", "):\n        ", "#游戏循环", "\n        ", "while", " ", "True", ":\n\n            self.screen.fill(BG_COLOR)\n            ", "#设置刷新时间", "\n            self.clock.tick(GAME_TIME)\n            ", "#调用事件监听", "\n\n            self.__event()\n            ", "#调用碰撞检测", "\n            self.__check_collide()\n            ", "#调用update", "\n            self.__update_sprites()\n\n            ", "#更新屏幕显示", "\n            pygame.display.update()\n\n\n    ", "#事件监听", "\n    ", "def", " ", "__event", "(", "self", "):\n        self.image_left =pygame.image.load(", "'./images/me1_left.png'", ")\n        self.image_right = pygame.image.load(", "'./images/me1_right.png'", ")\n        self.image_up = pygame.image.load(", "'./images/me1.png'", ")\n        self.image_down = pygame.image.load(", "'./images/me1_down.png'", ")\n\n        ", "for", " event ", "in", " pygame.event.get():\n            ", "if", " event.", "type", "==pygame.QUIT:\n                self.__end_game()\n            ", "elif", " event.", "type", "==ENEMY_SHOW_TIME:\n                enemy=Enemy()\n                self.enemy_group.add(enemy)\n        key_group=pygame.key.get_pressed()\n        ", "if", " key_group[pygame.K_LEFT]:\n            self.hreo.image=self.image_left\n            self.hreo.rect.x += -HERO_SPEED\n\n        ", "elif", " key_group[pygame.K_RIGHT]:\n            self.hreo.image = self.image_right\n            self.hreo.rect.x += HERO_SPEED\n        ", "elif", " key_group[pygame.K_UP]:\n            self.hreo.image = self.image_up\n            self.hreo.rect.y -= HERO_SPEED\n        ", "elif", " key_group[pygame.K_DOWN]:\n            self.hreo.image = self.image_down\n            self.hreo.rect.y += HERO_SPEED\n\n\n\n\n\n    ", "#碰撞检测", "\n    ", "def", " ", "__check_collide", "(", "self", "):\n        ", "pass", "\n    ", "# 创建精灵和精灵组", "\n    ", "def", " ", "__create_sprites", "(", "self", "):\n        ", "#创建背景精灵组", "\n        ", "#创建英雄", "\n        self.hreo=Hreo()\n        self.hreo_group=pygame.sprite.Group(self.hreo)\n        ", "#创建敌人", "\n        self.enemy=Enemy()\n        self.enemy_group=pygame.sprite.Group(self.enemy)\n    ", "#更新绘制精灵组", "\n    ", "def", " ", "__update_sprites", "(", "self", "):\n        self.hreo_group.update()\n        self.hreo_group.draw(self.screen)\n        self.enemy_group.update()\n        self.enemy_group.draw(self.screen)\n\n\n    ", "#游戏结束", "\n    ", "def", " ", "__end_game", "(", "self", "):\n        quit()\n        exit()\n\n\n\n", "if", " __name__==", "'__main__'", ":\n    TankGame().__init__()\n    TankGame().star_game()\n\n\n", "\n", "sprite模块", "\n", "import", " random\n\n", "import", " pygame\n", "from", " tank_main ", "import", " *\n", "#屏幕尺寸颜色", "\nSCREEN_SIZE=pygame.Rect(", "0", ",", "0", ",", "1400", ",", "700", ")\nBG_COLOR=(", "248", ",", "223", ",", "114", ")\n", "#游戏时钟", "\nGAME_TIME=", "60", "\n", "#控制英雄移动速度", "\nHERO_SPEED=", "10", "\n", "#敌机出现", "\nENEMY_SHOW_TIME=pygame.USEREVENT\n\n", "class", " ", "GameSprite", "(pygame.sprite.Sprite):\n    ", "def", " ", "__init__", "(", "self,image_name,speed=", "1", "):\n        ", "#调用父类初始化", "\n        ", "super", "().__init__()\n        ", "#加载图片", "\n        self.image=pygame.image.load(image_name)\n        ", "#获取图片大小", "\n        self.rect=self.image.get_rect()\n        self.speed=speed\n    ", "def", " ", "update", "(", "self", "):\n        ", "pass", "\n\n\n\n\n\n\n\n", "#我方坦克", "\n", "class", " ", "Hreo", "(", "GameSprite", "):\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "().__init__(", "'./images/me1.png'", ")\n\n        ", "#设置初始位置", "\n        self.rect.centerx=SCREEN_SIZE.centerx\n        self.rect.centery=SCREEN_SIZE.centery+", "260", "\n        ", "#设置初始速度为0", "\n        self.speed=", "0", "\n\n    ", "def", " ", "update", "(", "self", "):\n        ", "#判断是否移除屏幕", "\n        ", "if", " self.rect.x>=SCREEN_SIZE.width-self.rect.height:\n            self.rect.x=SCREEN_SIZE.width-self.rect.height\n        ", "elif", " self.rect.x<=SCREEN_SIZE.left:\n            self.rect.x=SCREEN_SIZE.left\n        ", "elif", " self.rect.y>=SCREEN_SIZE.height-self.rect.height:\n            self.rect.y=SCREEN_SIZE.height-self.rect.height\n        ", "elif", " self.rect.y<=", "0", ":\n            self.rect.y=", "0", "\n\n\n\n\n", "#敌方坦克", "\n", "class", " ", "Enemy", "(", "GameSprite", "):\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "# super().__init__('./images2/enemyTank/enemy_1_1L(1).png')", "\n\n        self.iamges={", "'L'", ":pygame.image.load(", "'./images2/enemyTank/enemy_1_1L(1).png'", "),\n                      ", "'R'", ":pygame.image.load(", "'./images2/enemyTank/enemy_1_1r(1).png'", "),\n                      ", "'U'", ":pygame.image.load(", "'./images2/enemyTank/enemy_1_1u(1).png'", "),\n                      ", "'D'", ":pygame.image.load(", "'./images2/enemyTank/enemy_1_1d(1).png'", ")}\n        ", "#根据方向获取图片", "\n        self.image1=self.iamges[self.suiji()]\n        self.rect=self.image1.get_rect()\n        self.rect.x = random.randint(", "50", ", SCREEN_SIZE.width- ", "50", ")\n        self.rect.y = random.randint(", "50", ", SCREEN_SIZE.height- ", "50", ")\n\n    ", "def", " ", "suiji", "(", "self", "):\n        ", "# 方向，随机生成", "\n        num = random.randint(", "1", ", ", "4", ")\n        ", "if", " num == ", "1", ":\n            self.iamges = ", "'U'", "\n        ", "elif", " num == ", "2", ":\n            self.iamges = ", "'L'", "\n        ", "elif", " num == ", "3", ":\n            self.iamges = ", "'D'", "\n        ", "elif", " num == ", "4", ":\n            self.iamges = ", "'R'", "\n\n\n    ", "def", " ", "update", "(", "self", "):\n\n        self.rect.x+=random.randint(", "1", ", ", "3", ")\n\n\n        ", "#判断是否移除屏幕", "\n        ", "if", " self.rect.x >= SCREEN_SIZE.width - self.rect.height:\n           self.rect.x = SCREEN_SIZE.width - self.rect.height\n        ", "elif", " self.rect.x <= SCREEN_SIZE.left:\n           self.rect.x = SCREEN_SIZE.left\n        ", "elif", " self.rect.y >= SCREEN_SIZE.height - self.rect.height:\n           self.rect.y = SCREEN_SIZE.height - self.rect.height\n        ", "elif", " self.rect.y <= ", "0", ":\n           self.rect.y = ", "0", "\n\n\n", "#子弹精灵", "\n", "class", " ", "Bullets", "(", "GameSprite", "):\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "().__init__(", "'./images/bullet2.png'", ")\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你在排序函数的外层循环最后调用display()应该就可以了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["java排序算法怎么输出排序过程", ["[ package 排序;", "\n", "public class SqList {", "    public RecordNode[] r; // 顺序表记录结点数组", "        public int curlen; // 顺序表长度,即记录个数", "        public SqList() { }// 顺序表的构造方法，构造一个存储空间容量为 maxSize 的顺序表", "    public SqList(int maxSize) {", "        this.r = new RecordNode[maxSize]; // 为顺序表分配 maxSize 个存储单元", "        this.curlen = 0; // 置顺序表的当前长度为 0", "}", "// 求顺序表中的数据元素个数并由函数返回其值", "    public int length() {", "            return curlen; // 返回顺序表的当前长度", "        }// 在当前顺序表的第 i 个结点之前插入一个 RecordNode 类型的结点 x", "    public void insert(int i, RecordNode x) throws Exception {", "        if (curlen == r.length) { // 判断顺序表是否已满", "        throw new Exception(\"顺序表已满\");", "    }", "    if (i < 0 || i > curlen) { // i 小于 0 或者大于表长", "    throw new Exception(\"插入位置不合理\");", "    }", "    for (int j = curlen; j > i; j--) {", "    r[j] = r[j - 1]; // 插入位置及之后的元素后移", "    }", "    r[i] = x; // 插入 x", "    this.curlen++; // 表长度增 1", "    }", "    public void display() { // 输出顺序表元素", "    for (int i = 0; i < this.curlen; i++) {", "    System.out.print(\" \" + r[i].toString());", "        }", "        System.out.println();", "    }", "    // 不带监视哨的直接插入排序算法", "    public void insertSort() {", "        RecordNode temp;", "        int i, j;", "        for (i = 1; i < this.curlen; i++) {// n-1趟扫描", "            temp = r[i]; // 将待插入的第i条记录暂存在temp中", "            for (j = i - 1; j >= 0 && temp.getKey()<r[j].getKey(); j--) { // 将前面比r[i]大的记录向后移动", "                r[j + 1] = r[j];", "            }", "            r[j + 1] = temp;", "        }", "    }", "             // r[i]插入到第j+1个位置", "\n", "// 希尔排序算法", "public void shellSort(int[] d) { // d[]为增量数组", "     RecordNode temp;", "        int i, j;", "        System.out.println(\"希尔排序\");", "        // 控制增量，增量减半，若干趟扫描", "        for (int k = 0; k < d.length; k++) {", "        // 一趟中若干子表，每个记录在自己所属子表内进行直接插入排序", "        int dk = d[k];", "        for (i = dk; i < this.curlen; i++) {", "            temp = r[i];", "            for (j = i - dk; j >= 0    &&", "                temp.getKey()<r[j].getKey(); j -= dk) {", "            r[j + dk] = r[j];", "            }", "            r[j + dk] = temp;", "        }", "        }", "    }", "\n", "// 冒泡排序算法", "public void bubbleSort() {", "    RecordNode temp; // 辅助结点", "    boolean flag = true; // 是否交换的标记", "    for (int i = 1; i < this.curlen && flag; i++) {", "         // 有交换时再进行下一趟，最多n-1趟", "flag = false; // 假定元素未交换", "for (int j = 0; j < this.curlen - i; j++) { // 一次比较、交换", "     if (r[j].getKey()>r[j + 1].getKey()) { // 逆序时，交换", "    temp = r[j];", "    r[j] = r[j + 1];", "    r[j + 1] = temp;", "    flag = true;", "      }", "}", "// System.out.print(\"第\" + i + \"趟: \"); display();", "   }", "}", "\n", "// 一趟快速排序", "// 交换排序表 r[i..j]的记录，使支点记录到位，并返回其所在位置", "// 此时，在支点之前(后)的记录关键字均不大于(小于)它", "public int Partition(int i, int j) {", "    RecordNode pivot = r[i]; // 将第1个记录作为枢轴", "    while (i<j) {", "        while(i<j&& r[j].getKey ()>=pivot.getKey ())", "            -- j;      // 从右向左搜索", "        if (i<j)  {    r[i] = r[j];  i++;}", "        while (i<j && r[i] .getKey ()<=pivot.getKey ())", "            ++ i;      // 从左向右搜索", "        if (i<j)  {r[j] = r[i];   j--;}", "          }", "    r[i] =pivot;", "    return i;", "}", "// 递归形式的快速排序算法", "// 对子表 r[low..high]快速排序", "public void qSort(int low, int high) {", "    if (low < high) {", "        int pivotloc = Partition (low, high);", "          //一趟排序，将排序表分为两部分", "        qSort(low, pivotloc - 1);", "          //低子表递归排序", "        qSort( pivotloc + 1, high);", "         //高子表递归排序", "    }", "\n", "}", "// 顺序表快速排序算法", "public void quickSort() {", "     qSort(0, curlen-1);", "\n", "}", "//直接选择排序", "public void selectSort() {", "    RecordNode temp; // 辅助结点", "    for (int i = 0; i < this.curlen - 1; i++) {// n-1趟排序", "    // 每趟在从r[i]开始的子序列中寻找最小元素", "        int min = i; // 设第i条记录的关键字最小", "        for (int j = i + 1; j < this.curlen; j++) {", "              // 在子序列中选择关键字最小的记录", "       if (r[j].getKey()<r[min].getKey()) {", "            min = j; // 记住关键字最小记录的下标", "        }", "         }", "        if (min != i) { // 将本趟关键字最小的记录与第i条记录交换", "        temp = r[i];", "        r[i] = r[min];", "        r[min] = temp;", "    }// System.out.print(\"第\" + (i + 1) + \"趟: \"); display();", "    }", "\n", "}", "//将以筛选法调整堆算法", "// 将以 low 为根的子树调整成小顶堆，low、high 是序列下界和上界", "public void sift(int low, int high) {", "    int i = low; // 子树的根", "    int j = 2 * i + 1; // j为i结点的左chil", "    RecordNode temp = r[i];", "    while (j < high) { // 沿较小值chil结点向下筛选", "    if (j < high - 1 && r[j].getKey()>r[j + 1].getKey()) {", "        j++; // 数组元素比较,j为左右chil的较小者", "    }", "    if (temp.getKey()>r[j].getKey()) { // 若父母结点值较大", "        r[i] = r[j]; // chil结点中的较小值上移", "        i = j;", "        j = 2 * i + 1;", "    } else {", "            j = high + 1; } // 退出循环", "    }", "    r[i] = temp; // 当前子树的原根值调整后的位置", "\n", "}", "//堆排序算法", "public void heapSort() {", "    int n = this.curlen;", "    RecordNode temp;", "    for (int i = n / 2 - 1; i >= 0; i--)   //创建堆", "        sift (i, n);    //算法7.1", "  //每趟将最小关键字值交换到后面，再调整成堆", "    for (int i = n - 1; i > 0; i--){", "                temp = r[0];", "                r[0] = r[i];", "                r[i] = temp;", "                sift(0, i);", "            }", "}", "}", "]", "每个算法输出排序过程", "我想要把这个排序的中间的过程，把它输出来"]], "Tag": "程序设计"}
{"Answer": "fseek(fp,0,SEEK_END);\r\nint file_size=ftell(fp);//计算文件的大小\r\nfseek(fp,0,SEEK_SET);\r\nchar *str=NULL;//不知道有没有分配内存\r\nstr=(char*)malloc(sizeof(*fp));//分配一个\r\n\r\n这地方错了，可以按照需要的内存量分配，文件不大的话，\r\n分配file_size 个字节（或者多一个）的就可以了\r\nsizeof(*fp) 分配的内存，为何要和流指针 占用空间有关?", "Konwledge_Point": "循环控制", "Question": ["关于C语言读入文件后 管理存储字符串的问题（问题未确定）", ["vs2010报错是“Windows 已在 公交查询系统.exe 中触发一个断点。", "\n\n", "其原因可能是堆被损坏，这说明 公交查询系统.exe 中或它所加载的任何 DLL 中有 Bug。", "\n\n", "原因也可能是用户在 公交查询系统.exe 具有焦点时按下了 F12。”", "\n代码如下：", "\n#define _CRT_SECURE_NO_WARNINGS", "\n#include ", "\n#include", "\n#include", "\n#include", "\n#include", "\nlong long a;", "\n#define stop system(\"pause\");", "\n\n", "#define home(x) printf(\"%p\\n\",x);", "\nint j;//控制项目数组", "\nstruct item", "\n{", "\n    int number;", "\n    char*Item;", "\n};", "\n\n", "int main(int argc,char *argv[])", "\n{", "\n    system(\"color f9\");", "\n    system(\"title 公交查询系统\");", "\n    FILE *fp;", "\n    int i;//线路选择", "\n    char c;", "\n    c=(char)malloc(sizeof(char));", "\n    printf(\"字符变量的地址是：\");", "\n    home(c);", "\n    int amount=0;//交通线路的数量", "\n\n", "fp=fopen(\"file.txt\",\"rb+\");\nif(fp==NULL)\n{\n    printf(\"获取失败╮(╯▽╰)╭\\n\");\n    system(\"pause\");\n    return 0;\n}\nprintf(\"文件指针的地址是：%p\\n\",fp);//确保文件指针分配到了内存\nfseek(fp,0,SEEK_END);\nint file_size=ftell(fp);//计算文件的大小\nfseek(fp,0,SEEK_SET);\nchar *str=NULL;//不知道有没有分配内存\nstr=(char*)malloc(sizeof(*fp));//分配一个文件大小的内存给指针\nprintf(\"指针str的地址是：\");\nhome(str);//用C语言宏 确认str指针分配到了地址\nstr[file_size]='\\0';//用空字符结尾 防止字符串乱码\nfread((void*)str,file_size,1,fp);//把文件内容读给str\nprintf(\"文件大小：%d\\n\",file_size);//确认文件大小正确 不为零\nint seek=0;//设置循环变量\nwhile(seek<file_size)\n{\n    if(str[seek]=='.')//检索项 用数组运算符 遇到'.'分为一项\n    {\n        amount++;//amount是项目数\n        static char*one=NULL;//静态变量 作为str的副本╮(╯▽╰)╭\n        one=(char*)malloc(sizeof(*fp));\n        static int one_1=1;\n        static int seek_1=seek;\n        while(one_1<=seek)\n         {\n            sprintf(one,\"%c\",str[one_1]);\n         }\n\n    }\n    seek++;\n}\nif((c=getc(fp))!=NULL)\n{\n    printf(\"读入到文件尾！\\n\");\n}\nputs(str);//检查文件内容是否不存在\nstd::cout<<amount<<std::endl;\nfclose(fp);\nfp=NULL;\nstruct item ch[5];\n    {//使自动变量在代码块结尾 退出堆\nint i=1;\nchar*ch_1=NULL;//存储项的内容\nch_1=(char*)malloc(sizeof(char*));\nprintf(\"临时字符串的地址：%p\\n\",ch_1);//确保字符串分配到了地址\nstop;//C语言宏 system(\"pause\");\nwhile(i<amount)\n{\n    do{\n        c=str[a];\n       sprintf(ch_1,\"%c\",c,'\\0');\n    }while(a==1);\n\n    std::cout<<ch_1<<\"\\n\"<<c<<\"\\n\";//确保临时字符串有内容\n    ch[j].Item=NULL;\n    ch[j].Item=(char*)malloc(sizeof(*fp));\n        printf(\"项目的地址：%p\\n\",ch[j].Item);//确保存储项的结构数组中的指针分配到了内存\n        std::cout<<j<<\"\\n\";//确保下标未越界\n        stop;\n    while(ch_1!=\"。\")\n    {\n        ch[j].number=i;//此时 第一项 用number标识这是第几项\n        strcat(ch[j].Item,ch_1);//把ch_1的内容给连接在指针的末尾\n\n\n        if(c==0)\n        {\n            std::cout<<\"读取失败\\n\";\n            stop;\n            std::cout<<ch[j].Item<<\"\\n\";\n            stop;\n        }\n        c=str[a];//继续获取文件内容\n        sprintf(ch_1,\"%c\",c);\n        a++;\n    }\n    strcat(ch[j].Item,\"。\");\nj++;\ni++;\n}\nfree(ch_1);\n    }\nprintf(\"1.数据维护（增加项、删除项）\\n2.查询\\n3.退出\\n\");\nscanf(\"%d\",&i);\nswitch(i)\n{\ncase 1:\n    int a;\n         printf(\"你真的做决定了吗？如果你确定的话请选择:\\n1.增加项\\n2.退出\\n\");\n         scanf(\"%d\",&a);\n         if(a==1)\n         {\n        fp=fopen(\"file.txt\",\"w+\");//以读模式来覆盖文本 方便添加项目\n        char*add_1=(char*)malloc(sizeof(*fp));\n        sprintf(add_1,\"%d.\",++amount);//add_1存储文件的序号 如当前有5项\n        char*add_2=(char*)malloc(sizeof(*fp));//add_2是要添加的文本\n        printf(\"在此处添上你要添加的文本\\n\");\n        scanf(\"%s\",add_2);\n        strcat(add_1,add_2);\n        strcat(add_1,\"。\");\n        strcat(str,add_1);//把文本添加到末尾\n        puts(str);\n        stop;\n        fprintf(fp,\"\\n\");\n        fprintf(fp,str);//确认添加成功\n        fclose(fp);\n        fp=NULL;\n        add_1=add_2=NULL;\n        free(add_1);\n        free(add_2);\n         }\n    else if(a==2)\n    {\n        fp=fopen(\"file.txt\",\"w+\");\n        int d;\n        printf(\"请选择你要删除第几项\\n\");\n        scanf(\"%d\",&d);\n        ch[d].Item=\"\";\n        str=\"\";\n        for(j=1;;j++)\n        {\n            strcat(str,ch[j].Item);\n        }\n        fprintf(fp,str);\n        fclose(fp);\n        fp=NULL;\n        for(seek=0;seek<amount;seek++)\n        {\n            free(ch[seek].Item);\n        }\n    }\n    break;\ncase 2:\nputs(str);\nbreak;\ncase 3:\nsystem(\"pause\");\nreturn 0;\nbreak;\ndefault:\n    break;\n}\nstr=NULL;\nfree(str);\nsystem(\"pause\");\nreturn 0;\n", "\n\n", "}", "\n运行结果在附属的图片中", "\n还请帮忙看看是什么地方出了错误.."]], "Tag": "程序设计"}
{"Answer": "第一种方法,你可以用一个线程去更新table的model\r\n第二种方法,可以添加个刷新按钮,或者刷新方法,在每次执行其他用到table数据的方法时去刷新一次.\r\n第三种方法,如果数据的变动能由你的程序来控制就行了", "Konwledge_Point": "循环控制", "Question": ["swing表格", ["需求：我要用swing做一个表格显示数据库中的部分数据，数据库中的数据是在不停变化的，我需要界面显示的数据和数据库中的数据同步，请问以前做过的给个思路最好贴点关键代码，拜托了！！！", "\n\n", "代码：这是我的部分代码，定时器方法循环执行6次，程序就死了，不知道是为什么，请大家也帮忙看下", "\npackage com.rfid.view;", "\n\n", "import javax.swing.JDesktopPane;", "\nimport javax.swing.JButton;", "\nimport javax.swing.ListSelectionModel;", "\nimport javax.swing.Timer;", "\nimport java.awt.Rectangle;", "\nimport java.awt.event.ActionEvent;", "\nimport java.awt.event.ActionListener;", "\nimport java.awt.event.MouseAdapter;", "\nimport java.awt.event.MouseEvent;", "\nimport java.util.HashMap;", "\nimport java.util.List;", "\nimport com.rfid.rw.RReader;", "\nimport com.rfid.rw.RfidDAO;", "\nimport javax.swing.JScrollPane;", "\nimport javax.swing.JTable;", "\nimport javax.swing.table.DefaultTableModel;", "\nimport javax.swing.table.TableModel;", "\n\n", "public class RfidConsole extends JDesktopPane implements ActionListener {", "\n\n", "private static final long serialVersionUID = 1L;\nprivate JButton jButton = null;\nprivate JButton jButton2 = null;\nprivate JScrollPane jScrollPane = null;\nprivate JTable jTable = null;\nprivate JButton jButton1 = null;\nprivate static HashMap<String, RReader> hashmap = new HashMap<String, RReader>();\nprivate RfidDAO dao;\nprivate TableModel tableModel; // @jve:decl-index=0:\n\n// [color=red]定时器方法[/color]   public void actionPerformed(ActionEvent e) {\n    // 更新表格模型中的数据\n    tableModel = getTableModel();\n    jTable.repaint();\n    System.out.println(\"run\");\n}\n\n// 默认构造函数\npublic RfidConsole() {\n    this.dao = new RfidDAO();\n    initialize();\n    Timer timer = new Timer(3000, this);\n    timer.start();\n}\n\n// 默认初始化方法\nprivate void initialize() {\n    setSize(404, 301);\n    add(getJButton(), null);\n    add(getJButton2(), null);\n    getJButton().setEnabled(false);\n    getJButton2().setEnabled(false);\n\n    List<RReader> list = dao.getRfids();\n    for (int i = 0; i < list.size(); i++) {\n        RReader rfid = (RReader) list.get(i);\n        rfid.setPort(49380);\n        rfid.setConsle(this);\n        /*\n         * if (rfid.startR()) { RfidConsole.hashmap.put(rfid.getId(), rfid);\n         * dao.updateFlag(rfid.getId(), 1); } else {\n         * dao.updateFlag(rfid.getId(), 3); }\n         */\n    }\n    // getJTable(getTableModel());\n    add(getJTable(getTableModel()), null);\n    add(getJScrollPane(), null);\n    this.add(getJButton1(), null);\n}\n\n/**\n * This method initializes jButton 启动按钮\n * \n * @return javax.swing.JButton\n */\nprivate JButton getJButton() {\n    if (jButton == null) {\n        jButton = new JButton();\n        jButton.setBounds(new Rectangle(29, 19, 60, 28));\n        jButton.setText(\"启动\");\n        jButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent evt) {\n                int srow = jTable.getSelectedRow();\n                if (srow != -1) {\n                    String id = (String) jTable.getValueAt(srow, 1);\n                    RReader rfid = RfidConsole.hashmap.get(id);\n                    // rfid.startR();\n                    RfidConsole.hashmap.put(id, rfid);\n                    dao.updateFlag(id, 1);\n                    System.out.println(\"启动了:\" + rfid.getName());\n                    buttonControl(1, srow);\n                }\n            }\n        });\n    }\n    return jButton;\n}\n\n/**\n * This method initializes jButton2 停止按钮\n * \n * @return javax.swing.JButton\n */\nprivate JButton getJButton2() {\n    if (jButton2 == null) {\n        jButton2 = new JButton();\n        jButton2.setBounds(new Rectangle(106, 17, 61, 30));\n        jButton2.setText(\"停止\");\n        jButton2.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent evt) {\n                int srow = jTable.getSelectedRow();\n                if (srow != -1) {\n                    String id = (String) jTable.getValueAt(srow, 1);\n                    RReader rfid = RfidConsole.hashmap.get(id);\n                    dao.updateFlag(id, 0);\n                    System.out.println(\"关闭了:\" + rfid.getName());\n                    buttonControl(0, srow);\n                    // rfid.stopR();\n                }\n            }\n        });\n    }\n\n    return jButton2;\n}\n\n/**\n * This method initializes jScrollPane 存放table的pane\n * \n * @return javax.swing.JScrollPane\n */\nprivate JScrollPane getJScrollPane() {\n    if (jScrollPane == null) {\n        jScrollPane = new JScrollPane();\n        jScrollPane.setBounds(new Rectangle(26, 60, 355, 178));\n        jScrollPane.setViewportView(jTable);\n    }\n    return jScrollPane;\n}\n\n/**\n * This method initializes jTable 表格数据\n * \n * @return javax.swing.JTable\n */\npublic TableModel getTableModel() {\n    List list = dao.getRfids();\n    int size = list.size();\n    String[] column_names = { \"序号\", \"编号\", \"名称\", \"IP\", \"状态\", \"信号\" };\n    tableModel = new DefaultTableModel(column_names, size);\n    for (int i = 0; i < size; i++) {\n        RReader rfid = (RReader) list.get(i);\n        tableModel.setValueAt(i + 1, i, 0);\n        tableModel.setValueAt(rfid.getId(), i, 1);\n        tableModel.setValueAt(rfid.getName(), i, 2);\n        tableModel.setValueAt(rfid.getIp(), i, 3);\n        if (1 == rfid.getFlg()) {\n            tableModel.setValueAt(\"已启动\", i, 4);\n        } else if (0 == rfid.getFlg()) {\n            tableModel.setValueAt(\"已停止\", i, 4);\n        } else {\n            tableModel.setValueAt(\"设备未连接\", i, 4);\n        }\n    }\n    return tableModel;\n}\n\n/** 表格 */\npublic JTable getJTable(TableModel tablemodel) {\n    if (jTable == null) {\n        jTable = new JTable(tablemodel);\n        jTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n        jTable.addMouseListener(new MouseAdapter() {\n            public void mouseReleased(MouseEvent e) {\n                if (!e.isShiftDown()) {\n                    int srow = jTable.getSelectedRow();\n                    String id = (String) jTable.getValueAt(srow, 1);\n                    RReader rfid = dao.getRfid(id);\n                    int flag = rfid.getFlg();\n                    buttonControl(flag, srow);\n                }\n            }\n        });\n\n    }\n    return jTable;\n}\n\npublic JTable getJTable() {\n    return jTable;\n}\n\n/**\n * 控制界面按钮 0：启动按钮可用 1：关闭按钮可用 其它:启动关闭按钮都不可用\n * */\npublic void buttonControl(int flag, int row) {\n    TableModel tablemodel = jTable.getModel();\n    if (flag == 0) {\n        jButton.setEnabled(true);\n        jButton2.setEnabled(false);\n        tablemodel.setValueAt(\"已关闭\", row, 4);\n\n    } else if (flag == 1) {\n        jButton.setEnabled(false);\n        jButton2.setEnabled(true);\n        tablemodel.setValueAt(\"已启动\", row, 4);\n    } else {\n        jButton.setEnabled(false);\n        jButton2.setEnabled(false);\n    }\n}\n\n/**\n * This method initializes jButton1\n * \n * @return javax.swing.JButton\n */\npublic JButton getJButton1() {\n    if (jButton1 == null) {\n        jButton1 = new JButton();\n        jButton1.setBounds(new Rectangle(345, 29, 17, 16));\n    }\n    return jButton1;\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "在web.xml配置\r\n\r\n\t&lt;filter&gt;\r\n\t\t&lt;filter-name&gt;lazyLoadingFilter&lt;/filter-name&gt;\r\n\t\t&lt;filter-class&gt;\r\n\t\t\torg.springframework.orm.hibernate4.support.OpenSessionInViewFilter&lt;/filter-class&gt;\r\n\t\t&lt;init-param&gt;\r\n\t\t\t&lt;param-name&gt;singleSession&lt;/param-name&gt;\r\n\t\t\t&lt;param-value&gt;true&lt;/param-value&gt;\r\n\t\t&lt;/init-param&gt;\r\n\t\t&lt;init-param&gt;\r\n\t\t\t&lt;param-name&gt;flushMode&lt;/param-name&gt;\r\n\t\t\t&lt;param-value&gt;AUTO&lt;/param-value&gt;\r\n\t\t&lt;/init-param&gt;\r\n\t&lt;/filter&gt;\r\n\r\n\t&lt;filter-mapping&gt;\r\n\t\t&lt;filter-name&gt;lazyLoadingFilter&lt;/filter-name&gt;\r\n\t\t&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\r\n\t&lt;/filter-mapping&gt;", "Konwledge_Point": "循环控制", "Question": ["spring3与hibernate4整合session问题", ["[color=red][b]问题描述：[/b][/color]", "\n整合spring3与hibernate4时，发生错误：[u]nested exception is org.hibernate.HibernateException: No Session found for current thread[/u]", "\n\n", "之后查找资料，添加[u]：thread[/u]属性，报错：org.hibernate.HibernateException: createQuery is not valid without active transaction，", "\n查找资料说，删除上面我添加的那个属性，我被陷入死循环了。", "\n[color=red][b]代码如下[/b][/color]", "\n\n", "[b]配置文件：[/b]", "\n[code=\"java\"]", "\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "\n    xmlns=\"http://www.springframework.org/schema/beans\"", "\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "\n    xmlns:tx=\"http://www.springframework.org/schema/tx\"", "\n    xmlns:aop=\"http://www.springframework.org/schema/aop\" ", "\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans ", "\n    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd ", "\n    http://www.springframework.org/schema/aop", "\n    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  ", "\n    http://www.springframework.org/schema/tx ", "\n    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd\">", "\n\n", "<bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n    <property name=\"locations\">\n        <list>\n            <value>classpath:config/jdbc.properties</value>\n        </list>\n    </property>\n</bean>\n\n<!--数据源-->\n<bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\" destroy-method=\"close\">  \n    <property name=\"driverClass\">  \n        <value>${mysql.driver}</value>\n    </property> \n    <property name=\"jdbcUrl\">  \n        <value>${mysql.url}</value>  \n    </property>\n    <property name=\"user\">\n        <value>${mysql.userName}</value>\n    </property>  \n    <property name=\"password\">\n        <value>${mysql.password}</value>\n    </property>\n    <property name=\"acquireIncrement\">\n        <value>${c3p0.acquireIncrement}</value>\n    </property>    \n    <property name=\"initialPoolSize\">\n        <value>${c3p0.initialPoolSize}</value>\n    </property>\n    <property name=\"minPoolSize\">\n        <value>${c3p0.minPoolSize}</value>\n    </property>\n    <property name=\"maxPoolSize\">\n        <value>${c3p0.maxPoolSize}</value>\n    </property>\n    <property name=\"maxIdleTime\">\n        <value>${c3p0.maxIdleTime}</value>\n    </property>\n    <property name=\"idleConnectionTestPeriod\">\n        <value>${c3p0.idleConnectionTestPeriod}</value>\n    </property>\n    <property name=\"maxStatements\">\n        <value>${c3p0.maxStatements}</value>\n    </property>\n    <property name=\"numHelperThreads\">\n        <value>${c3p0.numHelperThreads}</value>\n    </property>\n    <property name=\"testConnectionOnCheckout\">\n        <value>${c3p0.testConnectionOnCheckout}</value>\n    </property>\n    <property name=\"preferredTestQuery\">\n        <value>${c3p0.preferredTestQuery}</value>\n    </property>\n</bean>\n\n<!-- Session 工厂配置 -->\n<bean id=\"sessionFactory\" class=\"org.springframework.orm.hibernate4.LocalSessionFactoryBean\">\n    <property name=\"dataSource\" ref=\"dataSource\" />     \n    <property name=\"packagesToScan\">\n        <list>  \n            <value>com..entity</value>  \n        </list> \n    </property>  \n    <property name=\"hibernateProperties\">         \n        <props>          \n            <prop key=\"hibernate.dialect\">org.hibernate.dialect.MySQLDialect</prop>          \n            <prop key=\"hibernate.show_sql\">true</prop>  \n            <!-- 解决no session found -->\n            <prop key=\"hibernate.current_session_context_class\">thread</prop> \n        </props>     \n    </property> \n</bean>\n\n<!-- 配置事务管理器 -->\n<bean id=\"transactionManager\" class=\"org.springframework.orm.hibernate4.HibernateTransactionManager\">  \n    <property name=\"sessionFactory\" ref=\"sessionFactory\"/>  \n</bean> \n\n<!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->\n<tx:annotation-driven transaction-manager=\"transactionManager\" />\n\n<tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">  \n    <tx:attributes>  \n        <!-- 方法对应的传播属性 -->  \n        <tx:method name=\"save*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"add*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"create*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"insert*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"update*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"merge*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"del*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"remove*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"put*\" propagation=\"REQUIRED\" />  \n        <tx:method name=\"use*\" propagation=\"REQUIRED\"/>  \n        <tx:method name=\"get*\" propagation=\"REQUIRED\" read-only=\"true\" />  \n        <tx:method name=\"count*\" propagation=\"REQUIRED\" read-only=\"true\" />  \n        <tx:method name=\"find*\" propagation=\"REQUIRED\" read-only=\"true\" />  \n        <tx:method name=\"list*\" propagation=\"REQUIRED\" read-only=\"true\" />  \n        <tx:method name=\"*\" read-only=\"true\" />  \n    </tx:attributes>  \n</tx:advice>  \n\n<!-- 事务控制位置，一般在业务层service -->  \n<aop:config>  \n    <aop:pointcut id=\"txPointcut\" expression=\"execution(* com..service..*.*(..))\" />  \n    <aop:advisor advice-ref=\"txAdvice\" pointcut-ref=\"txPointcut\"/>  \n</aop:config>\n", "\n\n", "\n\n", "[/code]", "\n\n", "[b]DAO[/b]", "\n[code=\"java\"]", "\npackage com.test;", "\n\n", "import org.hibernate.Session;", "\nimport org.hibernate.SessionFactory;", "\nimport org.springframework.beans.factory.annotation.Autowired;", "\n\n", "public class BaseDao {", "\n    @Autowired", "\n    private SessionFactory sessionFactory;", "\n\n", "public Session getCurrentSession() {\n    return sessionFactory.getCurrentSession();\n}\n", "\n\n", "}", "\n\n", "[/code]", "\n\n", "[code=\"java\"]", "\npackage com.test.dao.impl;", "\n\n", "import java.util.List;", "\n\n", "import org.hibernate.Query;", "\nimport org.springframework.stereotype.Repository;", "\n\n", "import com.test.BaseDao;", "\nimport com.test.dao.IUserDao;", "\nimport com.test.entity.User;", "\n\n", "@Repository", "\npublic class UserDaoImpl extends BaseDao implements IUserDao{", "\n\n", "@SuppressWarnings(\"unchecked\")\n@Override\npublic List<User> findAllUsers() {\n    String hql = \"FROM User\"; \n    Query query = getCurrentSession().createQuery(hql);  \n    return query.list();  \n}\n", "\n\n", "}", "\n[/code]", "\n\n", "各层次的ioc都OK的，问题出在哪里，或者解答下原因也可以，我自己查找资料，谢谢了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我没有看你的代码&amp;#xff0c;但我知道你问题出在哪&lt;br /&gt;你小球的函数只应该规定小球出现在哪&amp;#xff0c;而不应该有任何绘制的代码&lt;br /&gt;绘制应该是根据人物的位置、视野、视野里能看到的东西&amp;#xff0c;统一进行绘制&amp;#xff0c;而不是每个函数绘制自己的东西&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["一个程序被新加入的函数图层覆盖了怎么办", ["呃，鄙人想做一个迷宫小程序，但觉得单纯的迷宫没有什么意思，想在程序中加入一个弹射的小球ghost，使游戏角色碰到产生一定的效果，问题就是我写好ghost函数之后整个游戏画面会被覆盖掉，而不是共存，所以想来请教一下各位。", "\n", "这是本来的程序：", "\n", "这是加了ghost后：", "\n", "\n", "源码：", "\n", "//1.程序与处理包括加载头文件，定义常量和函数，进行初始化工作", "\n", "#", "undef", " UNICODE", "\n", "#", "undef", " _UNICODE", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", " ", "<graphics.h>", "\n", "#", "include", " ", "<stack>", "\n", "#", "include", " ", "<vector>", "\n", "#", "include", " ", "<fstream>", "\n", "#", "include", "<stdio.h>", "//*music", "\n", "#", "include", "<windows.h>", "\n", "#", "include", "<mmsystem.h>", "\n", "#", "include", "<time.h>", "\n", "#", "include", "<conio.h>", "\n", "#", "pragma", " comment(lib,", "\"Winmm.lib\"", ")", "\n", "using", " std::stack;            ", "// 使用STL的栈的声明", "\n", "using", " std::vector;            ", "// 使用STL的数组容器封装动态大小数组的序列容器；", "\n\n\n", "// 游戏信息（每一行每一列宽度为32像素）", "\n", "#", "define", " WIN_WIDTH    900    ", "// 窗口的宽度(单位：像素)", "\n", "#", "define", " WIN_HEIGHT    500        ", "// 窗口的高度(单位：像素)", "\n", "// !!注：由于随机生成算法的原因，地图宽高只能为奇数https://zhuanlan.zhihu.com/p/30724817", "\n\n", "#", "define", " GAME_WIDTH    41        ", "// 地图的宽度(单位：块)", "\n", "#", "define", " GAME_HEIGHT    31    ", "// 地图的高度(单位：块)", "\n\n", "#", "define", " WALL        1            ", "// 墙壁的数字标记，用于判断", "\n", "#", "define", " GROUND        0            ", "// 地面的数字标记，用于判断", "\n", "#", "define", " FILLSTATE    2            ", "// 加油站的数字标记，用于判断", "\n", "#", "define", " ENDPOS        3            ", "// 终点的数字标记，用于判断", "\n\n", "#", "define", " MAXVIEW        8.0            ", "// 最大的视野", "\n", "#", "define", " MINVIEW        1            ", "// 最小的视野", "\n", "#", "define", " FILLNUM        10            ", "// 加油站的数量", "\n", "#", "define", " DARKTIME    12            ", "// 视野下降1图块所需的时间", "\n\n", "// 全局变量列表", "\n", "int", "        g_BlockSize;            ", "// 块大小", "\n", "int", "        g_GameMap[GAME_HEIGHT][GAME_WIDTH];    ", "// 地图(宽高单位为块)", "\nPOINT    g_EndPos;                ", "// 终点位置", "\nPOINT   g_PlayerPos;            ", "// 玩家在地图上的位置", "\nPOINT    g_CameraPos;            ", "// 摄像机(屏幕左上角)在地图上的位置", "\nIMAGE    g_MapImage;                ", "// 地图的图片(由于地图是固定的，在不改变缩放的情况下只需要绘制一次)", "\n", "double", "    g_ViewArray;            ", "// 视野", "\nUINT    g_BeginTime;            ", "// 游戏开始时的时间", "\nUINT    g_LastFillTime;            ", "// 上次为油灯加油的时间", "\n\n\n", "// 函数列表", "\n", "void", " ", "initGame", "()", ";                ", "// 初始化游戏", "\n", "void", " ", "endGame", "()", ";                    ", "// 结束游戏", "\n", "void", " ", "draw", "()", ";                    ", "// 绘制函数", "\n", "bool", " ", "upDate", "()", ";                    ", "// 数据更新函数", "\n", "void", " ", "absDelay", "(", "int", " delay)", ";        ", "// 绝对延迟", "\n\n", "bool", " ", "canMove", "(POINT pos)", ";        ", "// 判断某个位置是否可以移动", "\n", "void", " ", "computeCameraPos", "()", ";        ", "// 计算摄像机在地图上的位置", "\n", "void", " ", "rePaintMap", "()", ";                ", "// 重绘地图", "\n\n", "void", " ", "drawWall", "(POINT pos)", ";        ", "// 绘制墙壁图块的函数", "\n", "void", " ", "drawGround", "(POINT pos)", ";        ", "// 绘制地面图块的函数", "\n", "void", " ", "drawFillState", "(POINT pos)", ";    ", "// 绘制油灯图块的函数", "\n", "void", " ", "drawEndPos", "(POINT pos)", ";        ", "// 绘制终点", "\n", "void", " ", "drawPlayer", "()", ";                ", "// 绘制人物的函数", "\n", "void", " ", "drawView", "()", ";                ", "// 绘制视野", "\n", "void", " ", "bgm", "()", ";                     ", "//背景音乐", "\n", "void", " ", "jiaobu", "()", ";                  ", "//脚步声", "\n\n", "void", " ", "welcome", "()", ";\n", "void", " ", "ghost", "()", ";\n\n", "//滚轮控制放大缩小", "\n", "//2.主函数，main执行", "\n", "int", " ", "main", "()", "//主函数", "\n", "{\n    ", "welcome", "();\n    ", "initGame", "();\n        \n    ", "bgm", "();\n    \n    ", "while", " (", "1", ")\n    {\n        \n        ", "if", " (!", "upDate", "()) ", "break", ";    ", "// 更新", "\n        \n        ", "draw", "();                    ", "// 绘制", "\n        \n        ", "absDelay", "(", "16", ");            ", "// 绝对延迟 16 毫秒，控制每秒 60 帧", "\n        \n    }\n    \n    ", "endGame", "();\n    ", "return", " ", "0", ";\n}\n", "//3.初始化游戏，定义开局视野，随机生成地图，这个算法是先生成了一个点 ，根据这个点去找别的点的位置该模块还引用了其他函数进行初始化游戏：标记终点，确定终点位置，计算摄像机的位置，初始化人的位置，初始化画布等，在main中被引用", "\n", "void", " ", "initGame", "()", "// 初始化游戏", "\n", "{\n    g_BlockSize = ", "32", ";            ", "// 初始图块大小为 32 个像素,这个数越大，人物越小，需要走的路程更多", "\n    ", "srand", "(", "GetTickCount", "());        ", "// 标准库中初始化随机数生成的函数", "\n\n    ", "// 初始化间隔室", "\n    ", "for", " (", "int", " i = ", "0", "; i < GAME_HEIGHT; i++)\n    {\n        ", "for", " (", "int", " j = ", "0", "; j < GAME_WIDTH; j++)\n        {\n            ", "if", " (i % ", "2", " == ", "0", " || j % ", "2", " == ", "0", ")", "//奇数行奇数列设为墙壁    ", "\n                g_GameMap[i][j] = WALL;\n            ", "else", "\n                g_GameMap[i][j] = GROUND;", "//偶数行偶数列为地面", "\n        }\n    }\n\n    ", "// 随机生成地图(使用深度优先遍历:先输出当前结点，在根据一定的次序去递归查找孩子)", "\n    stack<POINT> stepStack;        ", "// 步骤栈", "\n    vector<POINT>  stepPoint;    ", "// 四周的点", "\n    POINT nowPoint;                ", "// 当前步的所在点", "\n    stepStack.", "push", "({ ", "1", ",", "1", " });    ", "// 写入初始点 (1,1) 作为起点", "\n    nowPoint = { ", "1", ",", "1", " };\n    g_GameMap[", "1", "][", "1", "] = ", "0xFFFF", ";    ", "// 标记这个点", "\n    ", "while", " (!stepStack.", "empty", "())    ", "// 只要步骤栈不空就继续循环", "\n    {\n        ", "// 得到四周的点", "\n        POINT tempPoint;\n        ", "for", " (", "int", " i = ", "-1", "; i <= ", "1", "; i += ", "2", ")\n        {\n            tempPoint = { nowPoint.x,nowPoint.y + i * ", "2", " };    ", "// 计算点", "\n            ", "// 判断坐标是否合法", "\n            ", "if", " (tempPoint.x >= ", "0", " && tempPoint.x <= GAME_WIDTH - ", "1", " &&\n                tempPoint.y >= ", "0", " && tempPoint.y <= GAME_HEIGHT - ", "1", " &&\n                g_GameMap[tempPoint.y][tempPoint.x] != ", "0xFFFF", ")", "//0xffff=-1", "\n            {\n                stepPoint.", "push_back", "(tempPoint);\n            }\n            tempPoint = { nowPoint.x + i * ", "2", " ,nowPoint.y };    ", "// 计算点", "\n            ", "// 判断坐标是否合法", "\n            ", "if", " (tempPoint.x >= ", "0", " && tempPoint.x <= GAME_WIDTH - ", "1", " &&\n                tempPoint.y >= ", "0", " && tempPoint.y <= GAME_HEIGHT - ", "1", " &&\n                g_GameMap[tempPoint.y][tempPoint.x] != ", "0xFFFF", ")\n            {\n                stepPoint.", "push_back", "(tempPoint);\n            }\n        }\n\n        ", "// 根据周围点的量选择操作", "\n        ", "if", " (stepPoint.", "empty", "())                ", "// 如果周围点都被遍历过了", "\n        {\n            stepStack.", "pop", "();                ", "// 出栈当前点", "\n            ", "if", " (!stepStack.", "empty", "())\n                nowPoint = stepStack.", "top", "();    ", "// 更新当前点", "\n        }\n        ", "else", "\n        {\n            stepStack.", "push", "(stepPoint[", "rand", "() % stepPoint.", "size", "()]);    ", "// 入栈当前点,rand()生成随机数", "\n            g_GameMap[(nowPoint.y + stepStack.", "top", "().y) / ", "2", "][(nowPoint.x + stepStack.", "top", "().x) / ", "2", "] = ", "0", ";    ", "// 打通墙壁", "\n            nowPoint = stepStack.", "top", "();        ", "// 更新当前点", "\n            g_GameMap[nowPoint.y][nowPoint.x] = ", "0xFFFF", ";                ", "// 标记当前点", "\n        }\n        stepPoint.", "clear", "();                    ", "// 清空周围点以便下一次循环", "\n    }\n    \n    ", "// 清洗标记点", "\n    ", "for", " (", "int", " i = ", "0", "; i < GAME_HEIGHT; i++)\n    {\n        ", "for", " (", "int", " j = ", "0", "; j < GAME_WIDTH; j++)\n        {\n            ", "if", " (g_GameMap[i][j] == ", "0xFFFF", ")\n                g_GameMap[i][j] = ", "0", ";\n        }\n    }\n\n    ", "// 随机生成加油站的位置", "\n    ", "for", " (", "int", " i = ", "0", "; i < FILLNUM; i++)\n    {\n        POINT fillPoint = { ", "rand", "() % GAME_WIDTH,", "rand", "() % GAME_HEIGHT };\n        ", "// 保证在空地生成加油站", "\n        ", "while", " (g_GameMap[fillPoint.y][fillPoint.x] != GROUND)\n            fillPoint = { ", "rand", "() % GAME_WIDTH,", "rand", "() % GAME_HEIGHT };\n        ", "// 标记油灯", "\n        g_GameMap[fillPoint.y][fillPoint.x] = FILLSTATE;\n    }\n    \n    g_GameMap[GAME_HEIGHT - ", "2", "][GAME_WIDTH - ", "2", "] = ENDPOS;        ", "// 标记终点", "\n    g_EndPos = { GAME_WIDTH - ", "2", ",GAME_HEIGHT - ", "2", " };                ", "// 确定终点位置", "\n    g_ViewArray = MAXVIEW;                ", "// 初始视野是最大的", "\n    g_BeginTime = ", "GetTickCount", "();        ", "// 开始计时", "\n    g_LastFillTime = ", "GetTickCount", "();    ", "// 油灯加油的时间", "\n    ", "rePaintMap", "();                        ", "// 绘制地图", "\n    g_PlayerPos = { g_BlockSize * ", "3", " / ", "2", ",g_BlockSize * ", "3", " / ", "2", " };    ", "// 初始化人的位置", "\n    ", "computeCameraPos", "();                    ", "// 计算摄像机的位置", "\n    ", "initgraph", "(WIN_WIDTH, WIN_HEIGHT);    ", "// 初始化画布", "\n    ", "setbkmode", "(TRANSPARENT);                ", "// 设置背景为透明", "\n    ", "BeginBatchDraw", "();                    ", "// 开始缓冲绘制", "\n    \n}\n\n\n", "//4. 该模块把绘制视野，人物，时间融合到一个draw里面，在main函数中被引用", "\n\n", "void", " ", "draw", "()", "//绘图", "\n", "{\n    \n    ", "// 清空设备", "\n    ", "cleardevice", "();\n    ", "// 绘制视野", "\n    ", "drawView", "();\n    ", "// 绘制人", "\n    ", "drawPlayer", "();\n    ", "// 绘制时间", "\n    \n    TCHAR timeStr[", "256", "];\n    ", "int", " loseTime = ", "GetTickCount", "() - g_BeginTime;    ", "// 计算流失的时间", "\n    _stprintf_s(timeStr, _T(", "\"游戏时间:%02d:%02d\"", "), loseTime / ", "1000", " / ", "60", ", loseTime / ", "1000", " % ", "60", ");\n    ", "settextcolor", "(", "RGB", "(", "140", ", ", "140", ", ", "140", "));\n    ", "outtextxy", "((WIN_WIDTH - ", "textwidth", "(timeStr)) / ", "2", ", ", "3", ", timeStr);\n    \n\n    ", "FlushBatchDraw", "();    ", "// 刷新屏幕", "\n}\n", "//5.update意为更新，这里的函数用来计算人物移动合法性和路过油灯视野更新，以及鼠标滚轮放大缩小的重新定位", "\n", "bool", " ", "upDate", "()", "//计算，更新位置", "\n", "{\n    POINT nextPos = g_PlayerPos;        ", "// 下一个位置", "\n\n    ", "// 计算下一个位置", "\n    ", "if", "         (", "GetKeyState", "(VK_UP) & ", "0x8000", ")    nextPos.y -= ", "2", ";", "//GetKeyState(VK_UP) & 0x8000)判断是否有按↑键", "\n    \n    \n    ", "if", " (", "GetKeyState", "(VK_DOWN) & ", "0x8000", ")    nextPos.y += ", "2", ";", "//GetKeyState(VK_UP) & 0x8000)判断是否有按↓键", "\n    \n    ", "if", " (", "GetKeyState", "(VK_LEFT) & ", "0x8000", ")    nextPos.x -= ", "2", ";", "//GetKeyState(VK_UP) & 0x8000)判断是否有按←键", "\n    \n    ", "if", " (", "GetKeyState", "(VK_RIGHT) & ", "0x8000", ")    nextPos.x += ", "2", ";", "//GetKeyState(VK_UP) & 0x8000)判断是否有按→键", "\n    \n\n    ", "// 如果下一个位置不合法", "\n    ", "if", " (!", "canMove", "(nextPos))\n    {\n        ", "if", " (", "canMove", "({ g_PlayerPos.x, nextPos.y }))        ", "// y 轴移动合法", "\n            nextPos = { g_PlayerPos.x, nextPos.y };\n        ", "else", " ", "if", " (", "canMove", "({ nextPos.x, g_PlayerPos.y }))    ", "// x 轴移动合法", "\n            nextPos = { nextPos.x, g_PlayerPos.y };\n        ", "else", "                                            ", "// 都不合法", "\n            nextPos = g_PlayerPos;\n    }\n\n    ", "// 如果是油灯则更新时间", "\n    ", "if", " (g_GameMap[nextPos.y / g_BlockSize][nextPos.x / g_BlockSize] == FILLSTATE)\n        g_LastFillTime = ", "GetTickCount", "();\n    ", "// 如果是终点则通关", "\n    ", "else", " ", "if", " (g_GameMap[nextPos.y / g_BlockSize][nextPos.x / g_BlockSize] == ENDPOS)\n    {\n        ", "outtextxy", "(WIN_WIDTH / ", "2", " - ", "40", ", WIN_HEIGHT / ", "2", " - ", "12", ", _T(", "\"恭喜过关！\"", "));", "//字体大小", "\n        ", "FlushBatchDraw", "();\n        ", "Sleep", "(", "5000", ");\n        ", "return", " ", "false", ";\n    }\n    g_PlayerPos = nextPos;                        ", "// 更新位置", "\n    ", "computeCameraPos", "();                            ", "// 计算摄像机的位置", "\n\n    ", "// 根据时间缩减视野", "\n    ", "static", " ", "unsigned", " ", "int", " lastTime = ", "GetTickCount", "();\n    ", "int", " loseTime = ", "GetTickCount", "() - g_LastFillTime;            ", "// 计算流失的时间", "\n    g_ViewArray = MAXVIEW - loseTime / ", "1000.0", " / DARKTIME;    ", "// 每一段时间油灯的照明力会下降一个图块", "\n    ", "if", " (g_ViewArray < MINVIEW) g_ViewArray = MINVIEW;\n\n    ", "// 处理鼠标消息", "\n    MOUSEMSG mouseMsg;                            ", "// 鼠标信息", "\n    ", "int", " lastBlockSize = g_BlockSize;            ", "// 保存原本的大小", "\n    ", "while", " (", "MouseHit", "())\n    {\n        mouseMsg = ", "GetMouseMsg", "();\n        ", "if", " (mouseMsg.uMsg = WM_MOUSEWHEEL)        ", "// 滚轮消息", "\n        {\n            g_BlockSize += mouseMsg.wheel / ", "120", ";\n        }\n    }\n\n    ", "// 如果没有滚轮消息就退出", "\n    ", "if", " (lastBlockSize == g_BlockSize) ", "return", " ", "true", ";\n    ", "// 处理滚轮消息", "\n    ", "if", " (g_BlockSize >= ", "10", " && g_BlockSize <= ", "50", ")    ", "// 块大小没有达到极限值", "\n    {\n        ", "// 保证缩放后的地图不会比窗口小", "\n        ", "if", " (GAME_WIDTH * g_BlockSize < WIN_WIDTH ||\n            GAME_HEIGHT * g_BlockSize < WIN_HEIGHT)\n            g_BlockSize = lastBlockSize;\n        ", "rePaintMap", "();                            ", "// 重绘地图", "\n        ", "// 重新计算玩家在地图上的位置", "\n        POINT mapPos = { g_PlayerPos.x / lastBlockSize,g_PlayerPos.y / lastBlockSize };    ", "// 计算在地图上的位置", "\n        g_PlayerPos.x = mapPos.x * g_BlockSize + g_BlockSize / ", "2", ";    ", "// 计算映射后的位置", "\n        g_PlayerPos.y = mapPos.y * g_BlockSize + g_BlockSize / ", "2", ";    ", "// 计算映射后的位置", "\n        ", "computeCameraPos", "();                        ", "// 重新计算摄像机位置", "\n    }\n    ", "// 保证图块不会过大和过小", "\n    ", "if", " (g_BlockSize < ", "10", ") g_BlockSize = ", "10", ";\n    ", "if", " (g_BlockSize > ", "50", ") g_BlockSize = ", "50", ";\n\n    ", "return", " ", "true", ";\n}\n", "//6.absdelay和帧率有关，人物移速也有关", "\n", "void", " ", "absDelay", "(", "int", " delay)", "// 绝对延迟指每隔指定的时间（参数：滴答值），执行一次调用vTaskDelayUntil()函数的任务。//和帧率有关", "\n", "{\n    ", "static", " ", "int", " curtime = ", "GetTickCount", "();", "//GetTickCount是一种函数。GetTickCount返回（retrieve）从操作系统启动所经过（elapsed）的毫秒数，它的返回值是DWORD。", "\n    ", "static", " ", "int", " pretime = ", "GetTickCount", "();\n    ", "while", " (curtime - pretime < delay)\n    {\n        curtime = ", "GetTickCount", "();\n        ", "Sleep", "(", "1", ");\n    }\n    pretime = curtime;\n}\n", "//7. //判断地图合法模块//在上面update模块中引用", "\n\n", "bool", " ", "canMove", "(POINT pos)", "//判断合法模块//在上面update模块中引用", "\n", "{\n    ", "// 只要外接矩形的四个顶点不在墙壁内就必定合法", "\n    ", "return", "    g_GameMap[(pos.y - ", "3", ") / g_BlockSize][(pos.x - ", "3", ") / g_BlockSize] != WALL &&\n        g_GameMap[(pos.y + ", "3", ") / g_BlockSize][(pos.x + ", "3", ") / g_BlockSize] != WALL &&\n        g_GameMap[(pos.y - ", "3", ") / g_BlockSize][(pos.x + ", "3", ") / g_BlockSize] != WALL &&\n        g_GameMap[(pos.y + ", "3", ") / g_BlockSize][(pos.x - ", "3", ") / g_BlockSize] != WALL;\n}\n", "//8.计算摄像机位置和防止摄像机越界在上面的bool upDate()被引用", "\n", "void", " ", "computeCameraPos", "()", "//判断合法模块//在上面的bool upDate()被引用", "\n", "{\n    ", "// 以人物位置为中心计算摄像机的理论位置", "\n    g_CameraPos.x = g_PlayerPos.x - WIN_WIDTH / ", "2", ";\n    g_CameraPos.y = g_PlayerPos.y - WIN_HEIGHT / ", "2", ";\n    \n    ", "// 防止摄像机越界", "\n    ", "if", " (g_CameraPos.x < ", "0", ")                                        g_CameraPos.x = ", "0", ";", "//摄像机位置的最左端", "\n    ", "if", " (g_CameraPos.y < ", "0", ")                                        g_CameraPos.y = ", "0", ";", "//摄像机位置的最上端", "\n    ", "if", " (g_CameraPos.x > GAME_WIDTH * g_BlockSize - WIN_WIDTH)    g_CameraPos.x = GAME_WIDTH * g_BlockSize - WIN_WIDTH;", "//摄像机位置的最右端", "\n    ", "if", " (g_CameraPos.y > GAME_HEIGHT * g_BlockSize - WIN_HEIGHT)    g_CameraPos.y = GAME_HEIGHT * g_BlockSize - WIN_HEIGHT;", "//摄像机位置的最下端", "\n}\n", "//9. 地图元素绘制如墙壁，加油站，终点，地面", "\n", "void", " ", "rePaintMap", "()", "//地图元素绘制模块", "\n", "{\n    g_MapImage.", "Resize", "(GAME_WIDTH * g_BlockSize, GAME_HEIGHT * g_BlockSize);    ", "// 重置地图图片大小", "\n    ", "SetWorkingImage", "(&g_MapImage);                                ", "// 设置地图图片为当前工作图片", "\n    ", "for", " (", "int", " i = ", "0", "; i < GAME_HEIGHT; i++)\n    {\n        ", "for", " (", "int", " j = ", "0", "; j < GAME_WIDTH; j++)\n        {\n            ", "switch", " (g_GameMap[i][j])\n            {\n            ", "case", " WALL:\n                ", "drawWall", "({ j * g_BlockSize,i * g_BlockSize });        ", "// 绘制墙壁", "\n                ", "break", ";\n            ", "case", " FILLSTATE:\n                ", "drawFillState", "({ j * g_BlockSize,i * g_BlockSize });    ", "// 绘制加油站", "\n                ", "break", ";\n            ", "case", " GROUND:\n                ", "drawGround", "({ j * g_BlockSize,i * g_BlockSize });    ", "// 绘制地面", "\n                ", "break", ";\n            ", "case", " ENDPOS:\n                ", "drawEndPos", "({ j * g_BlockSize,i * g_BlockSize });   ", "//终点", "\n                ", "break", ";\n            }\n        }\n    }\n    ", "SetWorkingImage", "();    ", "// 复位工作图片", "\n}\n", "//10.如下在上面的rePaintMap()被引用", "\n\n\n", "void", " ", "drawWall", "(POINT pos)", "//地图绘制模块//墙壁初始化// 绘制墙壁图块的函数//在上面的rePaintMap()被引用", "\n", "{\n    ", "setfillcolor", "(", "RGB", "(", "166", ", ", "210", ", ", "19", "));", "//填充颜色", "\n    ", "solidrectangle", "(pos.x, pos.y, pos.x + g_BlockSize, pos.y + g_BlockSize);", "//solidrectangle用于画无边框的填充矩形", "\n}\n", "//11.如下，在上面的rePaintMap()被引用", "\n\n", "void", " ", "drawGround", "(POINT pos)", "//地图绘制模块// 绘制地面图块的函数//在上面的rePaintMap()被引用", "\n", "{\n    ", "setfillcolor", "(", "RGB", "(", "255", ", ", "255", ", ", "255", "));\n    ", "solidrectangle", "(pos.x, pos.y, pos.x + g_BlockSize, pos.y + g_BlockSize);\n}\n", "//12. 在上面的rePaintMap()被引用", "\n", "void", " ", "drawFillState", "(POINT pos)", "//在上面的rePaintMap()被引用", "\n", "{\n    ", "drawGround", "(pos);\n\n    ", "// 绘制圆角矩形", "\n    pos.x += g_BlockSize / ", "5", ";\n    pos.y += g_BlockSize / ", "5", ";\n    ", "setfillcolor", "(", "RGB", "(", "252", ", ", "213", ", ", "11", "));\n    ", "solidroundrect", "(pos.x, pos.y, pos.x + g_BlockSize / ", "5", " * ", "3", ", pos.y + g_BlockSize / ", "5", " * ", "3", ", g_BlockSize / ", "8", ", g_BlockSize / ", "8", ");\n}\n\n", "void", " ", "drawEndPos", "(POINT pos)", "//终点//在上面的rePaintMap()被引用", "\n", "{\n    ", "drawGround", "(pos);\n\n    ", "// 绘制圆角矩形", "\n    pos.x += g_BlockSize / ", "5", ";\n    pos.y += g_BlockSize / ", "5", ";\n    ", "setfillcolor", "(", "RGB", "(", "87", ", ", "116", ", ", "48", "));\n    ", "solidroundrect", "(pos.x, pos.y, pos.x + g_BlockSize / ", "5", " * ", "3", ", pos.y + g_BlockSize / ", "5", " * ", "3", ", g_BlockSize / ", "8", ", g_BlockSize / ", "8", ");\n}\n\n", "void", " ", "drawPlayer", "()", "//在上面的draw中引用", "\n", "{\n    ", "setfillcolor", "(", "RGB", "(", "252", ", ", "213", ", ", "11", "));\n    ", "solidcircle", "(g_PlayerPos.x - g_CameraPos.x, g_PlayerPos.y - g_CameraPos.y, ", "3", ");\n    \n}\n\n", "void", " ", "drawView", "()", "//在上面的draw中引用", "\n", "{\n    ", "// 锁定视野", "\n    HRGN viewArr;\n    ", "int", " r = ", "int", "(g_BlockSize * g_ViewArray + ", "0.5", ");    ", "// 计算视野半径", "\n    POINT orgin = g_PlayerPos;\n    orgin.x -= g_CameraPos.x;                        ", "// 计算在屏幕上的位置", "\n    orgin.y -= g_CameraPos.y;                        ", "// 计算在屏幕上的位置", "\n    viewArr = ", "CreateEllipticRgn", "(orgin.x - r, orgin.y - r, orgin.x + r, orgin.y + r);    ", "// 创建一个圆形的区域", "\n    ", "setcliprgn", "(viewArr);                            ", "// 锁定区域", "\n\n    ", "// 绘制地图", "\n    ", "putimage", "(", "0", ", ", "0", ", WIN_WIDTH, WIN_HEIGHT, &g_MapImage, g_CameraPos.x, g_CameraPos.y);\n\n    ", "// 删除区域", "\n    ", "DeleteObject", "(viewArr);\n    ", "// 消除区域", "\n    ", "setcliprgn", "(", "NULL", ");\n}\n\n", "void", " ", "endGame", "()", "// 结束游戏", "\n", "{\n    ", "EndBatchDraw", "();                        ", "// 这个函数用于结束批量绘制，并执行未完成的绘制任务，即结束缓冲绘制", "\n    ", "closegraph", "();                        ", "// 关闭画布", "\n}\n", "void", " ", "bgm", "()", "\n", "{\n    ", "PlaySound", "(", "TEXT", "(", "\"bgm.wav\"", "), ", "NULL", ", SND_FILENAME | SND_ASYNC | SND_LOOP);\n}\n", "void", " ", "jiaobu", "()", "\n", "{\n    ", "PlaySound", "(", "TEXT", "(", "\"jiaobu.wav\"", "), SND_SYNC, SND_FILENAME | SND_ASYNC | ", "NULL", ");\n}\n", "void", " ", "gotoxy", "(", "int", " x, ", "int", " y)", " ", "{\n    COORD pos = { x,y };\n    HANDLE hOut = ", "GetStdHandle", "(STD_OUTPUT_HANDLE);", "// 获取标准输出设备句柄", "\n    ", "SetConsoleCursorPosition", "(hOut, pos);", "//两个参数分别是指定哪个窗体，具体位置", "\n}\n\n", "void", " ", "welcome", "()", " ", "{\n    ", "gotoxy", "(", "15", ", ", "6", ");  ", "printf", "(", "\"欢迎来到  熄灯迷宫小游戏 ! \\n\"", ");\n    ", "gotoxy", "(", "15", ", ", "8", ");  ", "printf", "(", "\"  玩法介绍：                                         \\n\"", ");\n    ", "gotoxy", "(", "15", ", ", "10", "); ", "printf", "(", "\"    本游戏使用方向键操控，和传统迷宫一样需要迅速找到出口，但人物视野会逐渐降低              \\n\"", ");\n    ", "gotoxy", "(", "15", ", ", "12", "); ", "printf", "(", "\"                            路上黄色方块即为“加油站”踩到可以获得最大视野，绿色方块即为终点                                     \\n\"", ");\n    ", "gotoxy", "(", "15", ", ", "20", "); ", "printf", "(", "\"                                                                                        祝你玩得开心\\n\\n\\n\\n\\n\\n\"", ");\n    ", "system", "(", "\"pause\"", "); ", "system", "(", "\"cls\"", ");", "//清除屏幕", "\n    \n}\n", "void", " ", "ghost", "()", "\n", "{\n    ", "int", " ball_x, ball_y;        ", "//小球位置坐标", "\n    ", "int", " ball_vx = ", "1", ";            ", "//小球X轴与Y轴的速度", "\n    ", "int", " ball_vy = ", "1", ";\n    ", "//随机生成小球初始位置", "\n    ", "srand", "((", "unsigned", ")", "time", "(", "NULL", "));\n    ball_x = ", "rand", "() % ", "860", " + ", "20", ";\n    ball_y = ", "rand", "() % ", "460", " + ", "20", ";\n    ", "initgraph", "(", "900", ", ", "500", ");", "//900+500", "\n    \n    ", "while", " (", "1", ")\n    {\n        ", "setcolor", "(YELLOW);\n        ", "setfillcolor", "(GREEN);\n        ", "fillcircle", "(ball_x, ball_y, ", "20", ");\n        ", "Sleep", "(", "2", ");\n        ", "FlushBatchDraw", "();        ", "//将之前的绘图输出，这个函数用于执行未完成的绘图人物。", "\n        \n        ", "setcolor", "(WHITE);\n        ", "setfillcolor", "(WHITE);\n        \n        ", "fillcircle", "(ball_x, ball_y, ", "20", ");\n        ball_x = ball_x + ball_vx;\n        ball_y = ball_y + ball_vy;\n        ", "//当小球表面接触墙壁时发生碰撞反弹", "\n        ", "if", " (ball_x <= ", "20", " || ball_x >= ", "900", ")\n            ball_vx = -ball_vx;\n        ", "if", " (ball_y <= ", "20", " || ball_y >= ", "500", ")\n            ball_vy = -ball_vy;\n        \n    }\n    ", "EndBatchDraw", "();        ", "//结束批量绘制，并执行未完成的绘图任务", "\n    ", "closegraph", "();\n    \n}\n\n\n\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是用结构体作为存储结构的。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["有几个数据结构模拟停车场管理的问题想请教各位，请各位看看这篇吧", ["这是本人答辩的问题，由于自己的原因基础蛮差的，所以对答辩问题无从下手，请各位大佬帮忙解决一下。", "1.停车场和便道是用什么存储结构实现的", "2.停车场出车如何实现", "3.停车场计费如何实现", "#include \"stdio.h\"", "#include \"stdlib.h\"", "#define A 5                /* 停车单价 ", "/", "#define TRUE 1", "#define FALSE 0", "#define NULL 0", "#define Stack_Size 2  /", " 车库容量 ", "/", "typedef struct", "{", "    int elem1[Stack_Size];", "    int elem2[Stack_Size];", "    int elem3[Stack_Size];", "    int elem4[Stack_Size];", "    int top;", "}SeqStack;                /", " 定义栈的结构体 */", "typedef struct Node", "{", "    int date;", "    int num;", "    int hour;", "    int minute;", "    struct Node ", "next;", "}LinkQueueNode;            /", " 定义链队列结点的结构体 */", "typedef struct", "{", "    LinkQueueNode ", "front;", "    LinkQueueNode ", "rear;", "}LinkQueue;                /", " 定义链队列的结构体", "/", "InitQueue(LinkQueue ", "Q) /", " 初始化链队列函数 */", "{", "    Q->front=(LinkQueueNode *)malloc(sizeof(LinkQueueNode));", "    if(Q->front!=NULL)", "    {", "        Q->rear=Q->front;", "        Q->front->next=NULL;", "        return(TRUE);", "    }", "    else return(FALSE);", "}", "EnterQueue(LinkQueue ", "Q,int x,int y,int z,int w) /", " 入链队列函数 */", "{", "    LinkQueueNode *NewNode;", "    NewNode=(LinkQueueNode *)malloc(sizeof(LinkQueueNode));", "    if(NewNode!=NULL)", "    {", "        NewNode->num=x;", "        NewNode->date=y;", "        NewNode->hour=z;", "        NewNode->minute=w;", "        NewNode->next=NULL;", "        Q->rear->next=NewNode;", "        Q->rear=NewNode;", "        return(TRUE);", "    }", "    else return(FALSE);", "}", "DeleteQueue(LinkQueue *Q,int *x,int *y,int *z,int ", "w) /", " 删除链队列结点函数 */", "{", "    LinkQueueNode *p;", "    if(Q->front==Q->rear)", "    {", "        return(FALSE);", "    }", "    p=Q->front->next;", "    Q->front->next=p->next;", "    if(Q->rear==p)", "    {", "        Q->rear=Q->front;", "    }", "    *x=p->num;", "    *y=p->date;", "    *z=p->hour;", "    *w=p->minute;", "    free(p);", "    return(TRUE);", "}", "void InitStack(SeqStack ", "S)            /", " 初始化栈 */", "{", "    S->top=-1;", "}", "int Push(SeqStack ", "S,int x,int y,int z,int w)    /", " 栈插入函数 */", "{", "\n", "S->elem1[S->", "top", "]=x;\nS->elem2[S->", "top", "]=y;\nS->elem3[S->", "top", "]=z;\nS->elem4[S->", "top", "]=w;\nS->", "top", "++;\n", "return", "(TRUE);\n", "\n", "}", "int Pop(SeqStack *S,int *x,int *y,int *z,int ", "w)    /", " 栈删除函数 */", "{", "    if(S->top==-1)", "    {", "        return(FALSE);", "    }", "    else {", "          S->top--;", "          *x=S->elem1[S->top];", "          *y=S->elem2[S->top];", "       *z=S->elem3[S->top];", "       *w=S->elem4[S->top];", "\n", "    ", "return", "(", "TRUE", ");\n}\n", "\n", "}", "int IsFull(SeqStack ", "S) /", " 判断栈满函数 */", "{", "    return(S->top==Stack_Size-1?TRUE:FALSE);", "}", "int IsEmpty(SeqStack ", "S) /", " 判断栈满函数 ", "/", "{", "    return(S->top==-1?TRUE:FALSE);", "}", "int choose() /", " 选择函数 ", "/", "{", "    int m;", "    printf(\" 请选择:1. 停车; 2. 停车场出车; 3. 便道出车;4.退出  \");", "    scanf(\"%d\",&m);", "    if(m==1||m==2||m==3)", "    {", "        return(m);", "    }", "    if(m==4)", "    {", "        exit(0); /", " 整个程序由此结束 ", "/", "    }", "    else", "    {", "        printf(\"选择错误!\");", "        exit(1);", "    }", "}", "void main()", "{", "    int m,num,pp=1,k=0,p=0,x,y,z,w,t ,date,hour,minute;", "    LinkQueue ", "Q=(LinkQueue", ")malloc(sizeof(LinkQueue));", "    SeqStack ", "S=(SeqStack", ")malloc(sizeof(SeqStack)),", "R=(SeqStack", ")malloc(sizeof(SeqStack));", "    InitQueue(Q);", "    InitStack(R);", "    InitStack(S);", "    while(pp!=0)                        /", " 控制程序一直循环 ", "/", "    {", "        m=choose();                        /", " 整个程序由此进 ", "/", "        printf(\"请输入汽车号码: \");", "        scanf(\"%d\",&num);", "        printf(\"请输入时间:例:20,7:35表示某月20日7:35停车或出车 \");", "        scanf(\"%d,%d:%d\",&date,&hour,&minute);", "        if(m==1)", "        {", "            printf(\"No.%d 号汽车停在 \",num);", "            if(IsFull(S))                        /", " 先判断车库是否满了 ", "/", "            {", "                EnterQueue(Q,num,date,hour,minute);            /", " 如果满了,则放入便道里(链队列) ", "/", "                k++;                            /", " 便道里的位置计数器 ", "/", "                printf(\"便道中的第 %d 号位置. \",k);", "            }", "            else", "            {", "                Push(S,num,date,hour,minute);                /", " 如果不满,则放入车库里(顺序栈) ", "/", "                p++;                            /", " 车库里的位置计数器 ", "/", "                printf(\"停车场的第 %d 号位置! \",p);", "            }", "        }", "        if(m==2)", "        {", "            if(IsEmpty(S))                        /", " 判断车库还有车吗,其作用为防止非法输入 ", "/", "            {", "                printf(\"车库为空,No.%d 不在!\",num);", "                exit(2);", "            }", "            while(num!=S->elem1[S->top]) /", " 寻找所要出的车 ", "/", "            {", "                Pop(S,&x,&y,&z,&w);            /", " 车库最外辆车出库 ", "/", "                while(p>0)", "                {", "                    p--;                /", " 出车则减一个数 ", "/", "                }", "                Push(R,x,y,z,w);            /", " 将刚出的车入临时车库(顺序栈) ", "/", "            }", "            Pop(S,&x,&y,&z,&w);                /", " 找到车后将其弹出 ", "/", "            p--;                        /", " 出车则减一个数 */", "            t=(date-y)", "1440+(hour-z)", "60+minute-w;                    /", " 计算其停车时间 ", "/", "            printf(\"No.%d 的车在车库停了 %d 分钟.$:%d \",num,t,t", "A);", "            while(!IsEmpty(R))", "            {", "                Pop(R,&x,&y,&z,&w);", "                Push(S,x,y,z,w);", "                p++;", "            }                            /", " 将临时车库的车全部转到车库 ", "/", "            if(Q->front!=Q->rear)        /", " 判断便道是否有车 ", "/", "            { DeleteQueue(Q,&x,&y,&z,&w);        /", " 如果有则出便道 ", "/", "                Push(S,x,y,z,w);            /", " 进车库 ", "/", "                p++;                    /", " 车库计数器加1 ", "/", "                k--;                    /", " 便道计数器减1 */", "            }", "        }", "        if(m==3)", "        {", "\n", "         DeleteQueue(Q,&x,&y,&z,&w);\n          k--;\n          ", "t", "=(", "date", "-y)*", "1440", "+(", "hour", "-z)*", "60", "+", "minute", "-w;\n          printf(", "\"No.%d 的车在便道停了 %d 分钟.\"", ",num,", "t", ");\n        \n    }\n}   \n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;source &amp;#61; fopen(&amp;#34;ch&amp;#34;, &amp;#34;r&amp;#34;) 其中的ch不要加引号&lt;br /&gt;source &amp;#61; fopen(ch, &amp;#34;r&amp;#34;)&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["vs2022无法打开文件", ["\n \n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", " ", "<stdio.h>", "  ", "/* printf, scanf, NULL */", "\n", "#", "include", " ", "<stdlib.h>", "  ", "/* malloc, free, rand, system */", "\n", "#", "include", " ", "<stdbool.h>", "\n", "//坐标点类 ", "\n", "struct", " ", "Point", " {\n    ", "int", " x;\n    ", "int", " y;\n    ", "int", " c;\n};\n", "//自定义队列 建议自己输入大小", "\n", "struct", " ", "que", "\n{\n    ", "int", " x, y, s, f;", "//分别存储横、纵、已走过的路程、上一步坐标", "\n}node[", "250", "];\n", "//构造坐标点 ", "\n", "struct", " ", "Point", " ", "buildPoint", "(", "int", " x, ", "int", " y,", "int", " c)", "/////////", "\n{\n    ", "struct", " ", "Point", " p;\n    p.x = x;\n    p.y = y;\n    p.c = c;\n    ", "return", " p;\n}\n \n", "//节点 ", "\n", "struct", " ", "Node", " {\n    ", "struct", " ", "Point", " data;\n    ", "struct", " ", "Node", "* next;\n};\n \n \n", "//自定义堆栈 ", "\n", "struct", " ", "stack", " {\n    ", "struct", " ", "Node", "* head;", "//头节点，之后采用头插法插入节点 ", "\n \n    ", "void", " (*pop)(", "struct", " stack* s);", "//出栈 ", "\n \n    ", "void", " (*push)(", "struct", " stack* s, ", "struct", " Point x);", "//入栈", "\n \n    ", "struct", " ", "Point", "(*top)(", "struct", " stack* s);", "//返回栈顶元素 ", "\n \n    ", "int", " (*empty)(", "struct", " stack* s);", "//栈是否为空 ", "\n};\n \n", "void", " ", "pop", "(", "struct", " stack* s)", "//出栈 ", "\n", "{\n    ", "if", " (!s->head->next)\n        ", "return", ";\n    ", "struct", " ", "Node", "* t = s->head->next;", "//", "\n    s->head->next = s->head->next->next;\n    ", "free", "(t);\n}\n \n", "void", " ", "push", "(", "struct", " stack* s, ", "struct", " Point x)", "//入栈", "\n", "{\n    ", "struct", " ", "Node", "* t = (", "struct", " Node*)", "malloc", "(", "1", ");\n    t->data = x;\n    t->next = s->head->next;", "//", "\n    s->head->next = t;\n}\n \n", "struct", " ", "Point", " ", "top", "(", "struct", " stack* s)", "//返回栈顶元素 ", "\n{\n    ", "return", " s->head->next->data;\n}\n \n", "int", " ", "empty", "(", "struct", " stack* s)", "//栈是否为空 ", "\n", "{\n    ", "return", " s->head->next ? ", "0", " : ", "1", ";\n}\n \n", "//构造堆栈 ", "\n", "struct", " ", "stack", " ", "buildStack", "()\n{\n    ", "struct", " ", "Node", "* head = (", "struct", " Node*)", "malloc", "(", "1", ");\n    head->next = ", "NULL", ";\n    ", "struct", " ", "stack", " s = { head,pop,push,top,empty };\n    ", "return", " s;\n}\n \n", "void", " ", "testStack", "()", "\n", "{\n    \n    ", "struct", " ", "Point", " p1 = ", "buildPoint", "(", "1", ", ", "1", ",", "0", ");\n    ", "struct", " ", "Point", " p2 = ", "buildPoint", "(", "1", ", ", "1", ", ", "0", ");\n    ", "struct", " ", "Point", " p3 = ", "buildPoint", "(", "1", ", ", "1", ", ", "0", ");\n    ", "struct", " ", "stack", " s = ", "buildStack", "();\n    s.", "push", "(&s, p1);\n    s.", "push", "(&s, p2);\n    s.", "push", "(&s, p3);\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        ", "struct", " ", "Point", " p = s.", "top", "(&s);\n        s.", "pop", "(&s);", "//", "\n        ", "printf", "(", "\"(%d,%d)\\n\"", ", p.x, p.y);\n    }\n}\n \n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "struct", " ", "stack", " s = ", "buildStack", "();\n    ", "struct", " ", "Point", " p1;\n    FILE* source;\n    ", "char", " ch[", "250", "];\n    ", "int", " head = ", "1", ";\n    ", "int", " tail = ", "1", ";\n    ", "int", " final_x, final_y;\n    ", "int", " start_x, start_y;\n    ", "int", " tx, ty;", "//下一步位置", "\n    ", "bool", " flag = ", "false", ";", "//用于结束双层循环", "\n    ", "printf", "(", "\"Enter the name of file:\\n\"", ");\n    ", "scanf", "(", "\"%s\"", ", &ch);\n    ", "if", " ((source = ", "fopen", "(", "\"ch\"", ", ", "\"r\"", ")) == ", "NULL", ")", "//检测文件打开", "\n    {\n        ", "fprintf", "(stderr, ", "\"Can't open file %s\"", ", ch);\n![img](https:", "//img-mid.csdnimg.cn/release/static/image/mid/ask/724640312566170.png \"#left\")", "\n\n        ", "exit", "(", "1", ");\n    }\n    ", "printf", "(", "\"Enter the start of file:\\n\"", ");\n    ", "fseek", "(source, ", "0L", ", SEEK_SET);", "//定位到文件开始位", "\n    ", "//读取文件至链表", "\n    ", "int", " n;\n    ", "int", " i = ", "0", ";\n    ", "int", " j = ", "0", ";\n    n = ", "getc", "(source);\n    ", "while", " (n != ", "'\\0'", ")\n    {\n        ", "if", " (n == ", "'\\n'", ")\n        {\n            i++;\n            j = ", "0", ";\n        }\n        p1 = ", "buildPoint", "(i, j,n);\n        j++;\n        s.", "push", "(&s, p1); \n        n = ", "getc", "(source);\n    }\n    ", "//得到大小", "\n    ", "int", " size_x, size_y;\n    size_y = i + ", "1", ";\n    size_x = j + ", "1", ";\n    ", "printf", "(", "\"\\tsize_x:%d \\tsize_y:%d\\n\"", ", size_x, size_y);\n    ", "//得到出口和入口", "\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        ", "struct", " Point p = s.", "top", "(&s);\n        s.", "pop", "(&s);\n        ", "if", " (p.c == ", "0", ")\n        {\n            ", "if", " (p.x == ", "0", " || p.y == ", "0", "||p.x == size_y || p.y == size_x)\n            {\n                final_x = p.x;\n                final_y = p.y;\n                ", "break", ";\n            }\n \n        }\n    }\n    ", "printf", "(", "\"Enter the start of file:\\n\"", ");\n    ", "scanf", "(", "\"%d %d\"", ", &start_x, &start_y);\n    ", "//释放内存", "\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        ", "struct", " Point p = s.", "top", "(&s);\n        s.", "pop", "(&s);\n    }\n    ", "//存储地图(变长数组）建议自行修改代码输入", "\n    ", "int", " fill[", "255", "][", "255", "];\n    ", "//存储使用状态 建议自行修改代码输入", "\n    ", "int", " book[", "255", "][", "255", "];\n    ", "//将数据读入二维数组", "\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        \n        ", "struct", " Point p = s.", "top", "(&s);\n        s.", "pop", "(&s);", "//", "\n        fill[p.x][p.y] == p.c;\n    }\n    ", "//初始化使用状态", "\n    ", "for", " (i = ", "0", "; i < size_x; i++)\n    {\n        ", "for", " (j = ", "0", "; j < size_y; j++)\n        {\n            book[i][j] == ", "0", ";\n        }\n    }\n        ", "//初始化迷宫入口", "\n        book[start_x][start_y] = ", "1", ";\n        node[tail].y = start_y;\n        node[tail].x = start_x;\n        node[tail].f = ", "0", ";\n        node[tail].s = ", "0", ";\n        tail++;\n        ", "while", " (head < tail)\n        {\n            ", "//控制下一步行走方向", "\n            ", "for", " (", "int", " ctrl = ", "0", "; ctrl < ", "4", "; ctrl++)\n            {\n                ", "switch", " (ctrl)\n                {\n                ", "case", " ", "0", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y;\n                    ", "break", ";\n                ", "case", " ", "1", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y;\n                    ", "break", ";\n                ", "case", " ", "2", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y;\n                    ", "break", ";\n                ", "case", " ", "3", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y - ", "1", ";\n                    ", "break", ";\n                }\n                ", "//方格可走条件；0、未走过、非终点", "\n                ", "if", " (tx < ", "0", " || tx > size_x - ", "1", " || ty < ", "0", " || ty > size_y - ", "1", ")\n                    ", "continue", ";\n                ", "if", " (fill[ty][tx] == ", "0", " && book[ty][tx] == ", "0", ")\n                {\n                    node[tail].s = node[head].s + ", "1", ";\n                    node[tail].x = tx;\n                    node[tail].y = tx;\n                    node[tail].f = tx;\n                    book[ty][tx] = ", "1", ";\n                    tail++;\n                }\n                ", "if", " (tx == final_x && ty == final_y)\n                {\n                    flag = ", "true", ";\n                    ", "break", ";\n                }\n                ", "if", " (flag)\n                    ", "break", ";\n                head++;\n            }\n        }\n        \n    ", "//打印路程和位置坐标", "\n        ", "printf", "(", "\"%d\\n\"", ", node[tail - ", "1", "].s);\n        ", "printf", "(", "\"(%d , %d)\\n\"", ", final_x,final_y);\n        ", "for", " (i = ", "0", "; i < node[tail - ", "1", "].s; i++)\n        {\n            ", "printf", "(", "\"%d\"", ", node[tail - ", "1", "].s);\n \n        }\n        ", "int", " temp = node[tail - ", "1", "].f;\n            ", "while", " (temp != ", "0", ")\n            {\n                ", "printf", "(", "\"(%d , %d)\\n\"", ", node[temp].x, node[temp].y);\n                fill[node[temp].x][node[temp].y] = ", "2", ";\n                temp = node[temp].f;\n            }\n            ", "//打印小地图", "\n        fill[final_x][final_y] = ", "2", ";\n        ", "int", " x, y;\n        ", "for", " ( x = ", "0", "; x < size_x; x++)\n        {\n            ", "for", " (y = ", "0", "; y < size_y; y++)\n                ", "printf", "(", "\"%d\\n\"", ", fill[x][y]);\n        }\n        ", "//关闭文件", "\n    ", "fseek", "(source, ", "0L", ", SEEK_SET);\n    ", "if", " (", "fclose", "(source) != ", "0", ")\n    {\n        ", "fprintf", "(stderr, ", "\"Can't close file %s\"", ", source);\n        ", "exit", "(", "1", ");\n    }\n    ", "return", " ", "0", ";\n}\n", "\n", "尝试过移动文件的位置，但还是这样"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char ch是char字符&amp;#xff0c;能用来存储%s字符串&amp;#xff1f;ch改成ch[260]才对。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["Vs2022打开文件后就这样了求解决", ["\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", " ", "<stdio.h>", "  ", "/* printf, scanf, NULL */", "\n", "#", "include", " ", "<stdlib.h>", "  ", "/* malloc, free, rand, system */", "\n", "#", "include", " ", "<stdbool.h>", "\n", "//坐标点类 ", "\n", "struct", " ", "Point", " {\n    ", "int", " x;\n    ", "int", " y;\n    ", "int", " c;\n};\n", "//自定义队列 建议自己输入大小", "\n", "struct", " ", "que", "\n{\n    ", "int", " x, y, s, f;", "//分别存储横、纵、已走过的路程、上一步坐标", "\n}node[", "250", "];\n", "//构造坐标点 ", "\n", "struct", " ", "Point", " ", "buildPoint", "(", "int", " x, ", "int", " y,", "int", " c)", "/////////", "\n{\n    ", "struct", " ", "Point", " p;\n    p.x = x;\n    p.y = y;\n    p.c = c;\n    ", "return", " p;\n}\n\n", "//节点 ", "\n", "struct", " ", "Node", " {\n    ", "struct", " ", "Point", " data;\n    ", "struct", " ", "Node", "* next;\n};\n\n\n", "//自定义堆栈 ", "\n", "struct", " ", "stack", " {\n    ", "struct", " ", "Node", "* head;", "//头节点，之后采用头插法插入节点 ", "\n\n    ", "void", " (*pop)(", "struct", " stack* s);", "//出栈 ", "\n\n    ", "void", " (*push)(", "struct", " stack* s, ", "struct", " Point x);", "//入栈", "\n\n    ", "struct", " ", "Point", "(*top)(", "struct", " stack* s);", "//返回栈顶元素 ", "\n\n    ", "int", " (*empty)(", "struct", " stack* s);", "//栈是否为空 ", "\n};\n\n", "void", " ", "pop", "(", "struct", " stack* s)", "//出栈 ", "\n", "{\n    ", "if", " (!s->head->next)\n        ", "return", ";\n    ", "struct", " ", "Node", "* t = s->head->next;", "//", "\n    s->head->next = s->head->next->next;\n    ", "free", "(t);\n}\n\n", "void", " ", "push", "(", "struct", " stack* s, ", "struct", " Point x)", "//入栈", "\n", "{\n    ", "struct", " ", "Node", "* t = (", "struct", " Node*)", "malloc", "(", "1", ");\n    t->data = x;\n    t->next = s->head->next;", "//", "\n    s->head->next = t;\n}\n\n", "struct", " ", "Point", " ", "top", "(", "struct", " stack* s)", "//返回栈顶元素 ", "\n{\n    ", "return", " s->head->next->data;\n}\n\n", "int", " ", "empty", "(", "struct", " stack* s)", "//栈是否为空 ", "\n", "{\n    ", "return", " s->head->next ? ", "0", " : ", "1", ";\n}\n\n", "//构造堆栈 ", "\n", "struct", " ", "stack", " ", "buildStack", "()\n{\n    ", "struct", " ", "Node", "* head = (", "struct", " Node*)", "malloc", "(", "1", ");\n    head->next = ", "NULL", ";\n    ", "struct", " ", "stack", " s = { head,pop,push,top,empty };\n    ", "return", " s;\n}\n\n", "void", " ", "testStack", "()", "\n", "{\n    \n    ", "struct", " ", "Point", " p1 = ", "buildPoint", "(", "1", ", ", "1", ",", "0", ");\n    ", "struct", " ", "Point", " p2 = ", "buildPoint", "(", "1", ", ", "1", ", ", "0", ");\n    ", "struct", " ", "Point", " p3 = ", "buildPoint", "(", "1", ", ", "1", ", ", "0", ");\n    ", "struct", " ", "stack", " s = ", "buildStack", "();\n    s.", "push", "(&s, p1);\n    s.", "push", "(&s, p2);\n    s.", "push", "(&s, p3);\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        ", "struct", " ", "Point", " p = s.", "top", "(&s);\n        s.", "pop", "(&s);", "//", "\n        ", "printf", "(", "\"(%d,%d)\\n\"", ", p.x, p.y);\n    }\n}\n\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "struct", " ", "stack", " s = ", "buildStack", "();\n    ", "struct", " ", "Point", " p1;\n    FILE* source;\n    ", "char", " ch;\n    ", "int", " head = ", "1", ";\n    ", "int", " tail = ", "1", ";\n    ", "int", " final_x, final_y;\n    ", "int", " start_x, start_y;\n    ", "int", " tx, ty;", "//下一步位置", "\n    ", "bool", " flag = ", "false", ";", "//用于结束双层循环", "\n    ", "printf", "(", "\"Enter the name of file:\\n\"", ");\n    ", "scanf", "(", "\"%s\"", ", &ch);\n    ", "if", " ((source = ", "fopen", "(", "\"ch\"", ", ", "\"r\"", ")) == ", "NULL", ")", "//检测文件打开", "\n    {\n        ", "fprintf", "(stderr, ", "\"Can't open file %s\"", ", ch);\n        ", "exit", "(", "1", ");\n    }\n    ", "printf", "(", "\"Enter the start of file:\\n\"", ");\n    ", "fseek", "(source, ", "0L", ", SEEK_SET);", "//定位到文件开始位", "\n    ", "//读取文件至链表", "\n    ", "int", " n;\n    ", "int", " i = ", "0", ";\n    ", "int", " j = ", "0", ";\n    n = ", "getc", "(source);\n    ", "while", " (n != ", "'\\0'", ")\n    {\n        ", "if", " (n == ", "'\\n'", ")\n        {\n            i++;\n            j = ", "0", ";\n        }\n        p1 = ", "buildPoint", "(i, j,n);\n        j++;\n        s.", "push", "(&s, p1); \n        n = ", "getc", "(source);\n    }\n    ", "//得到大小", "\n    ", "int", " size_x, size_y;\n    size_y = i + ", "1", ";\n    size_x = j + ", "1", ";\n    ", "printf", "(", "\"\\tsize_x:%d \\tsize_y:%d\\n\"", ", size_x, size_y);\n    ", "//得到出口和入口", "\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        ", "struct", " ", "Point", " p = s.", "top", "(&s);\n        s.", "pop", "(&s);\n        ", "if", " (p.c == ", "0", ")\n        {\n            ", "if", " (p.x == ", "0", " || p.y == ", "0", "||p.x == size_y || p.y == size_x)\n            {\n                final_x = p.x;\n                final_y = p.y;\n                ", "break", ";\n            }\n\n        }\n    }\n    ", "printf", "(", "\"Enter the start of file:\\n\"", ");\n    ", "scanf", "(", "\"%d %d\"", ", &start_x, &start_y);\n    ", "//释放内存", "\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        ", "struct", " ", "Point", " p = s.", "top", "(&s);\n        s.", "pop", "(&s);\n    }\n    ", "//存储地图(变长数组）建议自行修改代码输入", "\n    ", "int", " fill[", "255", "][", "255", "];\n    ", "//存储使用状态 建议自行修改代码输入", "\n    ", "int", " book[", "255", "][", "255", "];\n    ", "//将数据读入二维数组", "\n    ", "while", " (!s.", "empty", "(&s))\n    {\n        \n        ", "struct", " ", "Point", " p = s.", "top", "(&s);\n        s.", "pop", "(&s);", "//", "\n        fill[p.x][p.y] == p.c;\n    }\n    ", "//初始化使用状态", "\n    ", "for", " (i = ", "0", "; i < size_x; i++)\n    {\n        ", "for", " (j = ", "0", "; j < size_y; j++)\n        {\n            book[i][j] == ", "0", ";\n        }\n    }\n        ", "//初始化迷宫入口", "\n        book[start_x][start_y] = ", "1", ";\n        node[tail].y = start_y;\n        node[tail].x = start_x;\n        node[tail].f = ", "0", ";\n        node[tail].s = ", "0", ";\n        tail++;\n        ", "while", " (head < tail)\n        {\n            ", "//控制下一步行走方向", "\n            ", "for", " (", "int", " ctrl = ", "0", "; ctrl < ", "4", "; ctrl++)\n            {\n                ", "switch", " (ctrl)\n                {\n                ", "case", " ", "0", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y;\n                    ", "break", ";\n                ", "case", " ", "1", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y;\n                    ", "break", ";\n                ", "case", " ", "2", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y;\n                    ", "break", ";\n                ", "case", " ", "3", ":\n                    tx = node[head].x + ", "1", ";\n                    ty = node[head].y - ", "1", ";\n                    ", "break", ";\n                }\n                ", "//方格可走条件；0、未走过、非终点", "\n                ", "if", " (tx < ", "0", " || tx > size_x - ", "1", " || ty < ", "0", " || ty > size_y - ", "1", ")\n                    ", "continue", ";\n                ", "if", " (fill[ty][tx] == ", "0", " && book[ty][tx] == ", "0", ")\n                {\n                    node[tail].s = node[head].s + ", "1", ";\n                    node[tail].x = tx;\n                    node[tail].y = tx;\n                    node[tail].f = tx;\n                    book[ty][tx] = ", "1", ";\n                    tail++;\n                }\n                ", "if", " (tx == final_x && ty == final_y)\n                {\n                    flag = ", "true", ";\n                    ", "break", ";\n                }\n                ", "if", " (flag)\n                    ", "break", ";\n                head++;\n            }\n        }\n        \n    ", "//打印路程和位置坐标", "\n        ", "printf", "(", "\"%d\\n\"", ", node[tail - ", "1", "].s);\n        ", "printf", "(", "\"(%d , %d)\\n\"", ", final_x,final_y);\n        ", "for", " (i = ", "0", "; i < node[tail - ", "1", "].s; i++)\n        {\n            ", "printf", "(", "\"%d\"", ", node[tail - ", "1", "].s);\n\n        }\n        ", "int", " temp = node[tail - ", "1", "].f;\n            ", "while", " (temp != ", "0", ")\n            {\n                ", "printf", "(", "\"(%d , %d)\\n\"", ", node[temp].x, node[temp].y);\n                fill[node[temp].x][node[temp].y] = ", "2", ";\n                temp = node[temp].f;\n            }\n            ", "//打印小地图", "\n        fill[final_x][final_y] = ", "2", ";\n        ", "int", " x, y;\n        ", "for", " ( x = ", "0", "; x < size_x; x++)\n        {\n            ", "for", " (y = ", "0", "; y < size_y; y++)\n                ", "printf", "(", "\"%d\\n\"", ", fill[x][y]);\n        }\n        ", "//关闭文件", "\n    ", "fseek", "(source, ", "0L", ", SEEK_SET);\n    ", "if", " (", "fclose", "(source) != ", "0", ")\n    {\n        ", "fprintf", "(stderr, ", "\"Can't close file %s\"", ", source);\n        ", "exit", "(", "1", ");\n    }\n    ", "return", " ", "0", ";\n}\n", "\n", "将exe与txt放一个文件夹也还是这样", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;struct player * player在整个项目的所有.h/.cpp中定义了两次&lt;br /&gt;struct card * card也在整个项目的所有.h/.cpp中定义了两次&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["21点纸牌游戏c++ LNK2005 LNK1169报错", ["21点游戏c++编程", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "#", "include", "<iostream>", "\n", "#", "include", " ", "\"blackjack.h\"", "\n", "#", "include", " ", "\"card_and_player.h\"", "\n\n", "using", " ", "namespace", " std;\n\n\n", "char", " face[", "4", "] = { ", "3", ",", "4", ",", "5", ",", "6", " };            ", "//扑克牌花色ASCII码", "\n", "char", " num[", "13", "] = { ", "'A'", ",", "'2'", ",", "'3'", ",", "'4'", ",", "'5'", ",", "'6'", ",", "'7'", ",", "'8'", ",", "'9'", ",", "'T'", ",", "'J'", ",", "'Q'", ",", "'K'", " };", "//扑克牌点数", "\n\nblackjack::", "blackjack", "()\n{\n\n\n\n}\n\nblackjack::~", "blackjack", "()\n{\n\n\n\n\n}\n\n\n", "//生成牌的函数", "\n", "void", " ", "blackjack::start", "()", "\n", "{\n    ", "int", " j = ", "0", ", k = ", "0", ";      ", "//j控制花色，k控制点数", "\n\n    ", "for", " (", "int", " i = ", "0", "; i < ", "52", "; i++)\n    {\n        ", "if", " (i % ", "4", " == ", "0", ")\n            j = ", "0", ";\n        ", "if", " (i % ", "13", " == ", "0", ")\n            k = ", "0", ";\n        ", "while", " (j < ", "4", " && k < ", "13", ")\n        {\n            card[i].face = face[j]; ", "//花色", "\n            card[i].num = num[k];   ", "//点数", "\n            j++;\n            k++;\n            ", "break", ";\n        }\n    }\n\n}\n\n", "//洗牌函数", "\n", "void", " ", "blackjack::wash_card", "()", "\n", "{\n    ", "srand", "((", "unsigned", " ", "int", ")", "time", "(", "0", "));\n    ", "int", " j = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i < ", "52", "; i++)\n    {\n        j = ", "rand", "() % ", "52", ";   ", "//生成0~51随机数", "\n\n        ", "struct", " ", "card", " temp;\n        temp = card[i];\n        card[i] = card[j];\n        card[j] = temp;\n    }\n\n    ", "for", " (", "int", " i = ", "0", "; i < ", "52", "; i++)\n    {\n        ", "printf", "(", "\"%c%c \"", ", card[i].face, card[i].num);\n        ", "if", " ((i + ", "1", ") % ", "13", " == ", "0", ")\n        {\n            ", "printf", "(", "\"\\n\"", ");\n        }\n    }\n\n}\n\n", "//发牌函数", "\n", "void", " ", "blackjack::send_card", "()", "\n", "{\n    ", "for", " (", "int", " i = ", "0", "; i < ", "2", "; i++)\n    {\n        ", "struct", " ", "player", "* pa = &player[i];\n        ", "if", " (pa->flag)    ", "//代表他还要牌", "\n        {\n            pa->my_card[pa->num_of_card] = card[", "52", " - left_card];\n\n            pa->num_of_card++;\n            left_card--;\n        }\n        ", "else", "\n            ", "continue", ";\n    }\n}\n\n\n", "//计算点数", "\n", "void", " ", "blackjack::sum", "()", "\n", "{\n    ", "for", " (", "int", " i = ", "0", "; i < ", "2", "; i++)\n    {\n        ", "int", " sum = ", "0", ";\n        ", "struct", " ", "player", "* pb = &player[i];\n        ", "struct", " ", "card", "* temp = pb->my_card;\n        ", "for", " (", "int", " i = ", "0", "; i < pb->num_of_card; i++)\n        {\n\n            ", "if", " (temp->num == ", "'T'", " || temp->num == ", "'J'", " || temp->num == ", "'Q'", " || temp->num == ", "'K'", ")\n            {\n                sum = sum + ", "10", ";\n            }\n            ", "else", " ", "if", " (temp->num == ", "'A'", ")\n            {\n                ", "if", " (sum + ", "1", " == ", "21", ")\n                    sum = sum + ", "1", ";\n                ", "if", " (sum + ", "11", " == ", "21", ")\n                    sum = sum + ", "11", ";\n                ", "if", " (sum + ", "11", " > ", "21", ")\n                    sum = sum + ", "1", ";\n                ", "if", " (sum + ", "11", " < ", "21", ")\n                    sum = sum + ", "11", ";\n            }\n            ", "else", "\n            {\n                sum = sum + (temp->num) - ", "48", ";\n            }\n\n            temp++;\n        }\n        cout<<", "\"    i + 1号玩家 的点数和为sum \"", "<< endl;\n\n        ", "printf", "(", "\"\\n\"", ");\n        pb->SUM = sum;\n\n    }\n    ", "printf", "(", "\"\\n\"", ");\n\n}\n\n\n", "//统计并展示 单局结果", "\n", "void", " ", "blackjack::show", "()", "\n", "{\n    ", "if", " (player[", "0", "].SUM <= ", "21", " && player[", "1", "].SUM <= ", "21", ")                   ", "//都没爆", "\n    {\n        ", "if", " ((", "21", " - player[", "0", "].SUM) < (", "21", " - player[", "1", "].SUM))\n        {\n            cout << ", "\"1号玩家获胜！\"", " << endl;\n            player[", "0", "].score++;\n        }\n        ", "if", " ((", "21", " - player[", "0", "].SUM) > (", "21", " - player[", "1", "].SUM))\n        {\n            cout << ", "\"2号玩家获胜！\"", " << endl;\n            player[", "1", "].score++;\n        }\n        ", "if", " ((", "21", " - player[", "0", "].SUM) == (", "21", " - player[", "1", "].SUM))\n            cout << ", "\"平局！\"", " << endl;\n\n    }\n    ", "if", " (player[", "0", "].SUM > ", "21", " && player[", "1", "].SUM > ", "21", ")                    ", "//都爆了", "\n    {\n        ", "if", " ((player[", "0", "].SUM - ", "21", ") < (player[", "1", "].SUM - ", "21", "))\n        {\n            cout << ", "\"都爆了！1号玩家获胜！\"", " << endl;\n            player[", "0", "].score++;\n        }\n\n        ", "if", " ((player[", "0", "].SUM - ", "21", ") > (player[", "1", "].SUM - ", "21", "))\n        {\n            cout << ", "\"都爆了！2号玩家获胜！\"", " << endl;\n            player[", "1", "].score++;\n        }\n        ", "if", " ((player[", "0", "].SUM - ", "21", ") == (player[", "1", "].SUM - ", "21", "))\n            cout << ", "\"都爆了！平局！\"", " << endl;\n    }\n    ", "if", " (player[", "0", "].SUM > ", "21", " && player[", "1", "].SUM <= ", "21", ")               ", "// 1号玩家爆了", "\n    {\n        cout << ", "\"2号玩家获胜！\"", " << endl;\n        player[", "1", "].score++;\n    }\n    ", "if", " (player[", "0", "].SUM <= ", "21", " && player[", "1", "].SUM > ", "21", ")                ", "//2号玩家爆了", "\n    {\n        cout << ", "\"1号玩家获胜！\"", " << endl;\n        player[", "0", "].score++;\n    }\n\n    ", "if", " (player[", "0", "].SUM == ", "21", " && player[", "1", "].SUM == ", "21", ")         ", "//俩人都刚好21", "\n        cout << ", "\"都是21，平局！\"", " << endl;\n\n    cout << ", "\"1号玩家 和 2号玩家 比分为 player[0].score:player[1].score\"", " << endl;\n\n}\n\n\n", "\n", "main函数是这么写的", "\n", "#", "include", "<iostream>", "\n", "#", "include", "\"blackjack.h\"", "\n", "#", "include", "\"card_and_player.h\"", "\n\nusing namespace std;\n\n\nint main()\n{\n    blackjack game;\n    cout << ", "\"*************************\"", " << ", "endl", ";\n    cout << ", "\"！！ 欢迎游玩21点游戏 ！！\"", " << ", "endl", ";\n    cout << ", "\"*************************\"", " << ", "endl", ";\n    printf(", "\"\\n\"", ");\n    cout << ", "\"请输入y开始新的游戏\"", " << ", "endl", ";\n\n    char text1 = ", "'0'", ";\n    cin >> text1;\n    getchar();\n    ", "if", " (text1 == ", "'y'", " || text1 == ", "'Y'", ")\n    {\n        game.start();\n        game.wash_card();\n\n\n\n\n\n\n        ", "for", " (int i = ", "0", ";; i++)\n        {\n\n            printf(", "\"\\n\"", ");\n            cout << ", "\"***************第 i+1 局游戏***************\"", " << ", "endl", ";\n\n            printf(", "\"\\n\"", ");\n\n            ", "//每小局开始把flag的初值设置成1，保证都有两张底牌", "\n        \n            ", "player", "[", "0", "].", "flag", " = ", "1", ";\n            ", "player", "[", "1", "].", "flag", " = ", "1", ";\n\n\n            game.send_card();\n            game.send_card();\n            game.sum();\n\n\n            ", "//发牌循环", "\n            ", "for", " (;;)\n            {\n                ", "//发完两张底牌可能就会爆，就会分胜负，所以在这里加了几条判断！！！！！！！！！！！！！！！！！！！！！！！", "\n\n                ", "if", " (", "player", "[", "0", "].SUM > ", "21", " && ", "player", "[", "1", "].SUM <= ", "21", ")               ", "//刚发完牌 1号爆了", "\n                {\n                    cout << ", "\"可惜~~刚发完牌 一号玩家就爆了！\"", " << ", "endl", ";\n\n                    ", "player", "[", "1", "].", "score", "++;\n                    cout << ", "\"1号玩家 和 2号玩家 比分为 player[0].score:player[1].score\"", " << ", "endl", ";\n                    ", "break", ";\n                }\n                ", "if", " (", "player", "[", "0", "].SUM <= ", "21", " && ", "player", "[", "1", "].SUM > ", "21", ")                ", "//刚发完牌 2号爆了", "\n                {\n                    cout << ", "\"可惜~~刚发完牌 二号玩家就爆了！\"", " << ", "endl", ";\n                    ", "player", "[", "0", "].", "score", "++;\n                    cout << ", "\"1号玩家 和 2号玩家 比分为 player[0].score:player[1].score\"", " << ", "endl", ";\n                    ", "break", ";\n\n                }\n                ", "if", " (", "player", "[", "0", "].SUM > ", "21", " && ", "player", "[", "1", "].SUM > ", "21", ")                ", "//刚发完牌 都爆了", "\n                {\n                    ", "if", " ((", "player", "[", "0", "].SUM - ", "21", ") < (", "player", "[", "0", "].SUM - ", "21", "))\n                    {\n                        cout << ", "\"可惜~~刚发完牌 两位玩家都爆了！\"", " << ", "endl", ";\n                        ", "player", "[", "0", "].", "score", "++;\n                        cout << ", "\"1号玩家 和 2号玩家 比分为 player[0].score:player[1].score\"", " << ", "endl", ";\n                        ", "break", ";\n\n                    }\n\n                    ", "if", " ((", "player", "[", "0", "].SUM - ", "21", ") > (", "player", "[", "0", "].SUM - ", "21", "))\n                    {\n                        cout << ", "\"可惜~~刚发完牌 两位玩家都爆了！\"", " << ", "endl", ";\n                        ", "player", "[", "1", "].", "score", "++;\n                        cout << ", "\"1号玩家 和 2号玩家 比分为 player[0].score:player[1].score\"", " << ", "endl", ";\n                        ", "break", ";\n\n                    }\n                    ", "if", " ((", "player", "[", "0", "].SUM - ", "21", ") == (", "player", "[", "0", "].SUM - ", "21", "))\n                    {\n                        cout << ", "\"可惜~~刚发完牌 两位玩家都爆了！最终平局！\"", " << ", "endl", ";\n                        cout << ", "\"1号玩家 和 2号玩家 比分为 player[0].score:player[1].score\"", " << ", "endl", ";\n                        ", "break", ";\n\n                    }\n\n                }\n\n\n\n                ", "if", " (", "player", "[", "0", "].", "flag", ")\n                {\n                    cout << ", "\"->1号玩家是否继续要牌？\"", " << ", "endl", ";\n\n                    char text2 = ", "'0'", ";\n                    cin >> text2;\n                    getchar();\n\n                    ", "if", " (text2 == ", "'y'", " || text2 == ", "'Y'", ")\n                        ", "player", "[", "0", "].", "flag", " = ", "1", ";\n                    ", "else", "\n                        ", "player", "[", "0", "].", "flag", " = ", "0", ";\n                }\n\n\n\n                ", "if", " (", "player", "[", "1", "].", "flag", ")\n                {\n                    cout << ", "\"->2号玩家是否继续要牌？\"", " << ", "endl", ";\n                    char text3 = ", "'0'", ";\n                    scanf_s(", "\"%c\"", ", &text3, ", "1", ");\n                    getchar();\n\n                    ", "if", " (text3 == ", "'y'", " || text3 == ", "'Y'", ")\n                        ", "player", "[", "1", "].", "flag", " = ", "1", ";\n                    ", "else", "\n                        ", "player", "[", "1", "].", "flag", " = ", "0", ";\n                }\n\n\n                game.send_card();\n                game.sum();\n\n                ", "//可能给发完牌，牌就没有了", "\n                ", "if", " (game.left_card == ", "0", ")      ", "//没有牌了，自动退出", "\n                {\n                    printf(", "\"\\n\"", ");\n                    printf(", "\"-------------------------------------------------\\n\"", ");\n                    printf(", "\"| 剩余牌数为0 已自动退出游戏！  最终比分如下    |\\n\"", ");\n                    printf(", "\"| 1号玩家 和 2号玩家 比分为 %d:%d                 |\\n\"", ", ", "player", "[", "0", "].", "score", ", ", "player", "[", "1", "].", "score", ");\n                    printf(", "\"------------------------------------------------\\n\"", ");\n                    printf(", "\"\\n\"", ");\n\n                    return ", "0", ";\n                }\n\n\n                ", "if", " (", "player", "[", "0", "].num_of_card == ", "5", " || ", "player", "[", "1", "].num_of_card == ", "5", ")\n                {\n                    game.show();\n                    ", "break", ";\n                }\n                ", "if", " (", "player", "[", "0", "].", "flag", " == ", "0", " && ", "player", "[", "1", "].", "flag", " == ", "0", ")\n                {\n                    game.show();\n                    ", "break", ";\n                }\n                ", "if", " (", "player", "[", "0", "].SUM > ", "21", " && ", "player", "[", "1", "].SUM > ", "21", ")\n                {\n                    game.show();\n                    ", "break", ";\n                }\n                ", "if", " (", "player", "[", "0", "].SUM > ", "21", " && ", "player", "[", "1", "].SUM <= ", "21", ")\n                {\n                    cout << ", "\"一号玩家爆了！\"", " << ", "endl", ";\n\n                    game.show();\n                    ", "break", ";\n                }\n                ", "if", " (", "player", "[", "0", "].SUM <= ", "21", " && ", "player", "[", "1", "].SUM > ", "21", ")\n                {\n                    cout << ", "\"二号玩家爆了！\"", " << ", "endl", ";\n                    game.show();\n                    ", "break", ";\n                }\n\n            }\n\n            printf(", "\"\\n\"", ");\n            cout << ", "\"一号玩家的牌依次为：\"", ";\n\n            ", "for", " (int i = ", "0", "; i < ", "player", "[", "0", "].num_of_card; i++)\n            {\n                printf(", "\" %c%c \"", ", ", "player", "[", "0", "].my_card[i].", "face", ", ", "player", "[", "0", "].my_card[i].num);\n            }\n            printf(", "\"\\n\"", ");\n\n            cout << ", "\"二号玩家的牌依次为：\"", ";\n            ", "for", " (int i = ", "0", "; i < ", "player", "[", "1", "].num_of_card; i++)\n            {\n                printf(", "\" %c%c \"", ", ", "player", "[", "1", "].my_card[i].", "face", ", ", "player", "[", "1", "].my_card[i].num);\n            }\n            printf(", "\"\\n\"", ");\n\n\n\n\n\n            printf(", "\"\\n\"", ");\n            ", "if", " (game.left_card < ", "4", ")      ", "//剩余牌不够发下一回合的底牌，自动退出", "\n            {\n                printf(", "\"------------------------------------------------------------\\n\"", ");\n                printf(", "\"| 剩余牌数为不足下一回合底牌 已自动退出游戏！ 最终比分如下 |\\n\"", ");\n                printf(", "\"| 1号玩家 和 2号玩家 比分为 %d:%d                            |\\n\"", ", ", "player", "[", "0", "].", "score", ", ", "player", "[", "1", "].", "score", ");\n                printf(", "\"------------------------------------------------------------\\n\"", ");\n\n                printf(", "\"\\n\"", ");\n\n                return ", "0", ";\n            }\n\n\n            cout << ", "\"***是否继续进行下一局游戏？（剩余 game.left_card 张牌）\"", " << ", "endl", ";\n\n            char text4 = ", "'0'", ";\n            scanf_s(", "\"%c\"", ", &text4, ", "1", ");\n            getchar();\n\n            ", "if", " (text4 == ", "'y'", " || text4 == ", "'Y'", ")\n            {\n                ", "for", " (int i = ", "0", "; i < ", "2", "; i++)          ", "//玩家数据再次初始化 ", "\n                {\n                    struct ", "player", "* pc = &", "player", "[i];\n                    pc->num_of_card = ", "0", ";\n                    pc->SUM = ", "0", ";\n                    ", "player", "[i].my_card[", "5", "].num = ", "'0'", ";\n                    ", "player", "[i].my_card[", "5", "].", "face", " = ", "'0'", ";\n                }\n            }\n\n            ", "else", "\n            {\n                cout << ", "\"已退出游戏！\"", " << ", "endl", ";\n\n                ", "break", ";\n            }\n\n        }\n\n\n    }\n\n    return ", "0", ";\n}\n\n\n", "\n", "运行结果及详细报错内容", "\n", "头文件里创建了blackjack类 和玩家以及牌两个结构体", "\n", "报错内容如下：", "\n", "严重性    代码    说明    项目    文件    行    禁止显示状态", "错误    LNK2005    \"struct player * player\" (?player", "@@3PAU0@A) ", "已经在 main.obj 中定义    21点c++    D:\\ConsoleApplication1\\21点c++\\21点c++\\函数.obj    1     ", "\n", "严重性    代码    说明    项目    文件    行    禁止显示状态", "错误    LNK2005    \"struct card * card\" (?card", "@@3PAU0@A) ", "已经在 main.obj 中定义    21点c++    D:\\ConsoleApplication1\\21点c++\\21点c++\\函数.obj    1    ", "\n", "严重性    代码    说明    项目    文件    行    禁止显示状态", "错误    LNK1169    找到一个或多个多重定义的符号    21点c++    D:\\ConsoleApplication1\\21点c++\\x64\\Debug\\21点c++.exe    1    ", "\n", "我的解答思路和尝试过的方法", "\n", "我一开始以为是结构体指针名字都叫p,就改成了pa pb pc。但还是不可以"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;错误指向哪一行啊&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["学生管理系统，错误显示是将一个无效参数传递给另一个无效参数，请问应该怎么修改", ["\n", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<string>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", " ", "<fstream>", "\n", "#", "include", " ", "<iomanip>", "      ", "//包含setw函数", "\n", "#", "include", "<vector>", "        ", "//运用vector创建数组对象", "\n", "const", " ", "int", " N = ", "1000", ";     ", "//学生的人数", "\n", "static", " ", "int", " n = ", "0", ";               ", "//n为学生总人数，t控制循环", "\n", "int", " t = ", "1", ";               \n", "using", " ", "namespace", " std;\n", "class", " ", "Student", " {                    ", "//创建学生类", "\n    ", "public", ":\n        string name;                    ", "//姓名", "\n        string gender;                    ", "//性别", "\n        string num;                        ", "//学号", "\n        ", "int", " grade;                        ", "//年级", "\n        string college;                    ", "//学院", "\n        string system;                    ", "//系", "\n        ", "int", " stuclass;                    ", "//班级", "\n        ", "int", " dorm;                        ", "//宿舍", "\n        ", "int", " English;                    ", "//英语成绩", "\n        ", "int", " Maths;                        ", "//数学成绩", "\n        ", "int", " Program;                    ", "//编程成绩", "\n        ", "Student", "()\n        {\n\n        }\n        ", "Student", "(string name, string gender, string num, ", "int", " grade, string college, string system, ", "int", " stuclass, ", "int", " dorm,", "int", " English, ", "int", " Maths,", "int", " Program)\n        {\n            ", "this", "->name = name;\n            ", "this", "->gender = gender;\n            ", "this", "->num = num;\n            ", "this", "->grade = grade;\n            ", "this", "->college = college;\n            ", "this", "->system = system;\n            ", "this", "->stuclass = stuclass;\n            ", "this", "->dorm = dorm;\n            ", "this", "->English = English;\n            ", "this", "->Maths = Maths;\n            ", "this", "->Program = Program;\n        }\n        ~", "Student", "()\n        {}\n        ", "void", " ", "show1", "()", "              ", "//输出信息", "\n        ", "{\n            cout << left << ", "setw", "(", "10", ") << name;\n            cout << left << ", "setw", "(", "6", ") << gender;\n            cout << left << ", "setw", "(", "12", ") << num;\n            cout << left << ", "setw", "(", "6", ") << grade;\n            cout << left << ", "setw", "(", "6", ") << college;\n            cout << left << ", "setw", "(", "6", ") << system;\n            cout << left << ", "setw", "(", "6", ") << stuclass;\n            cout << left << ", "setw", "(", "6", ") << dorm;\n            cout << left << ", "setw", "(", "6", ") << English;\n            cout << left << ", "setw", "(", "6", ") << Maths;\n            cout << left << ", "setw", "(", "6", ") << Program;\n        }\n        \n        ", "static", " ", "void", " ", "show2", "()", "    ", "//输出信息的名称", "\n        ", "{\n            cout << left << ", "setw", "(", "10", ") << ", "\"姓名\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"性别\"", ";\n            cout << left << ", "setw", "(", "12", ") << ", "\"学号\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"年级\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"院校\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"系\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"班级\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"英语\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"数学\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"编程\"", ";\n        }\n};\n\n", "void", " ", "menu", "()", "                        ", "//输出菜单", "\n", "{\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"---------------->>学生信息管理系统<<-----------------\\n\"", ");\n    ", "printf", "(", "\"--------------------->>主菜单<<----------------------\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"*     1、增加学生信息     *    2、显示学生信息      *\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"**    3、修改学生信息   *     4、查询学生信息      **\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"**    5、删除学生信息   *     6、排序学生信息      **\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"**    7、退出系统       *                          **\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n}\n\n\n", "void", " ", "writeFile", "(vector<Student> &stu)", "                            ", "//写入学生信息", "\n", "{\n    ofstream ofs;\n    ofs.", "open", "(", "\"D:\\\\林再\\\\学习\\\\大二\\\\面向对象的程序设计课程实践\\\\学生管理系统\\\\学生信息.txt\"", ", ios::out);\n    ", "for", " (", "int", " i = n; i <= stu.", "size", "()+n; i++)\n    {\n        \n        ofs << stu[i].name << ", "\" \"", " << stu[i].gender << ", "\" \"", " << stu[i].num << ", "\" \"", "\n            << stu[i].grade << ", "\" \"", " << stu[i].college << ", "\" \"", " << stu[i].system << ", "\" \"", "\n            << stu[i].dorm << ", "\" \"", " << stu[i].English << stu[i].Maths << stu[i].Program << endl;\n    }\n    ofs.", "close", "();\n}\n", "void", " ", "readFile", "(vector<Student> &stu)", "                             ", "//读取学生信息", "\n", "{\n    ifstream ifs;                                               ", "//创建流对象", "\n    ifs.", "open", "(", "\"学生信息.txt\"", ", ios::in);                          ", "//打开文件", "\n    ", "if", " (!ifs.", "is_open", "())                                         ", "//判断文件是否打开成功", "\n    {\n        cout << ", "\"文件打开失败\"", " << endl;\n        ", "return", ";\n    }\n    ", "for", " (", "int", " i = ", "0", "; i < stu.", "size", "(); i++)\n    {\n        ifs >> stu[i].name >> stu[i].gender >> stu[i].num >> stu[i].grade >> stu[i].college\n            >> stu[i].system >> stu[i].dorm >> stu[i].English >> stu[i].Maths >> stu[i].Program;\n    }\n    ifs.", "close", "();\n}\n\n", "void", " ", "increase", "()", "                    ", "//增加学生信息", "\n", "{\n    cout << ", "\"----------------欢迎来到增加学生信息-----------------\"", " << endl;\n    cout << ", "\"请输入待添加的学生人数：\"", " << endl;\n    ", "int", " x;                      ", "//等待添加的学生人数", "\n    cin >> x;\n    ", "int", " flag, i = n, j;\n    vector <Student> ", "stu", "(x);\n    ", "if", " (x > ", "0", ")\n    {\n        ", "do", "\n        {\n            flag = ", "1", ";\n            ", "while", " (flag != ", "0", ")    ", "//判断学号是否重复", "\n            {\n                flag = ", "0", ";\n                ", "printf", "(", "\"请输入第%d位学生的学号：\\n\"", ", i + ", "1", ");\n                cin >> stu[i].num;\n                ", "for", " (j = ", "0", "; j < i; j++)\n                {\n                    ", "if", " (stu[i].num == stu[j].num)\n                    {\n                        cout << ", "\"该学号已经存在，请重新输入！\"", " << endl;\n                        flag = ", "1", ";\n                        ", "break", ";\n                    }\n                }\n                ", "printf", "(", "\"请输入第%d位学生姓名  性别  学号  年级  学院  系  班级  宿舍  英语成绩  数学成绩  编程成绩：\\n\"", ", i + ", "1", ");\n                cin >> stu[i].name >> stu[i].gender >> stu[i].num >> stu[i].grade >> stu[i].college\n                    >> stu[i].system >> stu[i].dorm >> stu[i].English >> stu[i].Maths >> stu[i].Program;\n                ", "writeFile", "(stu);\n                i++;\n            }\n            n += x;\n            cout << ", "\"添加成功！\"", " << endl;\n            ", "system", "(", "\"pause\"", ");\n        } ", "while", " (i < x + n);\n    }\n}\n\n", "//主函数", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " number;\n    ", "while", " (", "1", ")\n    {\n        ", "menu", "();\n        ", "printf", "(", "\"请输入菜单编号：\"", ");\n        cin >> number;\n        ", "switch", " (number)\n        {\n            \n            ", "case", " ", "1", ":", "increase", "(); ", "break", ";    ", "//增加学生信息", "\n            ", "//case 2:display(); break;    //显示当前信息", "\n            ", "//case 3:modify(); break;    //修改学生信息", "\n            ", "//case 4:search(); break;    //查询学生信息", "\n            ", "//case 5:dele(); break;    //删除学生信息", "\n            ", "//case 6:sort(); break;    //排序学生信息", "\n            ", "//case 7:exit(0); break;    //退出", "\n            ", "default", ":", "printf", "(", "\"输入有误！\"", ");\n        }\n\n    }\n    ", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的一堆cin中&amp;#xff0c;少了stu[i].stuclass 啊。提示输入11项&amp;#xff0c;实际cin只有10项&amp;#xff0c;导致按照提示就多输入了一项&amp;#xff0c;这一项就被下一个编号接收了&amp;#xff0c;所以149行不用再输入了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["学生管理系统，我选择输入三个学生，输入第一个学生是正常的，再输入第二个学生时，第148行输出之后，系统直接输出第161行，我无法输入第149行，请问这是为什么", ["\n", "\n", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<string>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", " ", "<fstream>", "\n", "#", "include", " ", "<iomanip>", "      ", "//包含setw函数", "\n", "#", "include", "<vector>", "        ", "//运用vector创建数组对象", "\n", "const", " ", "int", " N = ", "1000", ";     ", "//学生的人数", "\n/", "7", "oid ", "menu", "()", ";                        ", "//输出菜单", "\n/", "7", "oid ", "writeFile", "()", ";                            ", "//写入学生信息", "\n/", "7", "oid ", "readFile", "()", ";                             ", "//读取学生信息", "\n/", "7", "oid ", "increase", "()", ";                    ", "//增加学生信息", "\n/", "7", "oid ", "display", "()", ";                    ", "//显示学生信息", "\n/", "7", "oid ", "modify", "()", ";                    ", "//修改学生信息", "\n/", "7", "oid ", "search", "()", ";                    ", "//查询学生信息", "\n/", "7", "oid ", "dele", "()", ";                    ", "//删除学生信息", "\n/", "7", "oid ", "sort", "()", ";                    ", "//排序学生信息", "\n/", "7", "oid ", "exit", "()", ";                    ", "//退出", "\n", "static", " ", "int", " n = ", "0", ";               ", "//n为学生总人数，t控制循环", "\n", "int", " t = ", "1", ";               \n", "using", " ", "namespace", " std;\n", "class", " ", "Student", " {                    ", "//创建学生类", "\n    ", "public", ":\n        string name;                    ", "//姓名", "\n        string gender;                    ", "//性别", "\n        string num;                        ", "//学号", "\n        ", "int", " grade;                        ", "//年级", "\n        string college;                    ", "//学院", "\n        string system;                    ", "//系", "\n        string stuclass;                    ", "//班级", "\n        string dorm;                        ", "//宿舍", "\n        string English;                    ", "//英语成绩", "\n        string Maths;                        ", "//数学成绩", "\n        string Program;                    ", "//编程成绩", "\n        ", "Student", "()\n        {\n\n        }\n        ", "Student", "(string name, string gender, string num, ", "int", " grade, string college, string system, ", "int", " stuclass, ", "int", " dorm,", "int", " English, ", "int", " Maths,", "int", " Program)\n        {\n            ", "this", "->name = name;\n            ", "this", "->gender = gender;\n            ", "this", "->num = num;\n            ", "this", "->grade = grade;\n            ", "this", "->college = college;\n            ", "this", "->system = system;\n            ", "this", "->stuclass = stuclass;\n            ", "this", "->dorm = dorm;\n            ", "this", "->English = English;\n            ", "this", "->Maths = Maths;\n            ", "this", "->Program = Program;\n        }\n        ~", "Student", "()\n        {}\n        ", "void", " ", "show1", "()", "              ", "//输出信息", "\n        ", "{\n            cout << left << ", "setw", "(", "10", ") << name;\n            cout << left << ", "setw", "(", "6", ") << gender;\n            cout << left << ", "setw", "(", "12", ") << num;\n            cout << left << ", "setw", "(", "6", ") << grade;\n            cout << left << ", "setw", "(", "6", ") << college;\n            cout << left << ", "setw", "(", "6", ") << system;\n            cout << left << ", "setw", "(", "6", ") << stuclass;\n            cout << left << ", "setw", "(", "6", ") << dorm;\n            cout << left << ", "setw", "(", "6", ") << English;\n            cout << left << ", "setw", "(", "6", ") << Maths;\n            cout << left << ", "setw", "(", "6", ") << Program;\n        }\n        \n        ", "static", " ", "void", " ", "show2", "()", "    ", "//输出信息的名称", "\n        ", "{\n            cout << left << ", "setw", "(", "10", ") << ", "\"姓名\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"性别\"", ";\n            cout << left << ", "setw", "(", "12", ") << ", "\"学号\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"年级\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"院校\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"系\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"班级\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"英语\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"数学\"", ";\n            cout << left << ", "setw", "(", "6", ") << ", "\"编程\"", ";\n        }\n};\n\n", "void", " ", "menu", "()", "                        ", "//输出菜单", "\n", "{\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"---------------->>学生信息管理系统<<-----------------\\n\"", ");\n    ", "printf", "(", "\"--------------------->>主菜单<<----------------------\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"*     1、增加学生信息     *    2、显示学生信息      *\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"**    3、修改学生信息   *     4、查询学生信息      **\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"**    5、删除学生信息   *     6、排序学生信息      **\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n    ", "printf", "(", "\"**    7、退出系统       *                          **\\n\"", ");\n    ", "printf", "(", "\"-----------------------------------------------------\\n\"", ");\n}\n\n\n", "void", " ", "writeFile", "(vector<Student> &stu)", "                            ", "//写入学生信息", "\n", "{\n    ofstream ofs;\n    ofs.", "open", "(", "\"D:\\\\王晴\\\\学习\\\\大二\\\\面向对象的程序设计课程实践\\\\学生管理系统\\\\学生信息.txt\"", ", ios::out);\n    ", "for", " (", "int", " i = n; i < stu.", "size", "()+n; i++)\n    {\n        \n        ofs << stu[i].name << ", "\" \"", " << stu[i].gender << ", "\" \"", " << stu[i].num << ", "\" \"", "\n            << stu[i].grade << ", "\" \"", " << stu[i].college << ", "\" \"", " << stu[i].system << ", "\" \"", "\n            << stu[i].dorm << ", "\" \"", " << stu[i].English << stu[i].Maths << stu[i].Program << endl;\n    }\n    ofs.", "close", "();\n}\n", "void", " ", "readFile", "(vector<Student> &stu)", "                             ", "//读取学生信息", "\n", "{\n    ifstream ifs;                                               ", "//创建流对象", "\n    ifs.", "open", "(", "\"学生信息.txt\"", ", ios::in);                          ", "//打开文件", "\n    ", "if", " (!ifs.", "is_open", "())                                         ", "//判断文件是否打开成功", "\n    {\n        cout << ", "\"文件打开失败\"", " << endl;\n        ", "return", ";\n    }\n    ", "for", " (", "int", " i = ", "0", "; i < stu.", "size", "(); i++)\n    {\n        ifs >> stu[i].name >> stu[i].gender >> stu[i].num >> stu[i].grade >> stu[i].college\n            >> stu[i].system >> stu[i].dorm >> stu[i].English >> stu[i].Maths >> stu[i].Program;\n    }\n    ifs.", "close", "();\n}\n\n", "void", " ", "increase", "()", "                    ", "//增加学生信息", "\n", "{\n    cout << ", "\"----------------欢迎来到增加学生信息-----------------\"", " << endl;\n    cout << ", "\"请输入待添加的学生人数：\"", " << endl;\n    ", "int", " x;                      ", "//等待添加的学生人数", "\n    cin >> x;\n    ", "int", " flag, i = n, j;\n    vector <Student> ", "stu", "(x);\n    ", "if", " (x > ", "0", ")\n    {\n        ", "do", "\n        {\n            flag = ", "1", ";\n            ", "while", " (flag==", "1", ")    ", "//判断学号是否重复", "\n            {\n                flag = ", "0", ";\n                ", "printf", "(", "\"请输入第%d位学生的学号：\\n\"", ", i + ", "1", ");\n                cin >> stu[i].num;\n                ", "for", " (j = ", "0", "; j < i; j++)\n                {\n                    ", "if", " (stu[i].num == stu[j].num)\n                    {\n                        cout << ", "\"该学号已经存在，请重新输入！\"", " << endl;\n                        flag = ", "1", ";\n                        ", "break", ";\n                    }\n                }\n               \n            }\n            ", "printf", "(", "\"请输入第%d位学生姓名  性别  学号  年级  学院  系  班级  宿舍  英语成绩  数学成绩  编程成绩：\\n\"", ", i + ", "1", ");\n                cin >> stu[i].name >> stu[i].gender >> stu[i].num >> stu[i].grade >> stu[i].college\n                    >> stu[i].system >> stu[i].dorm >> stu[i].English >> stu[i].Maths >> stu[i].Program;\n                i++;\n        } ", "while", " (i < x + n);\n        \n        ", "writeFile", "(stu);\n        n += x;\n        cout << ", "\"添加成功！\"", " << endl;\n        ", "system", "(", "\"pause\"", ");\n    }\n\n}\n/", "7", "oid ", "display", "()", ";                    ", "//显示学生信息", "\n", "//", "\n/", "7", "oid ", "modify", "()", ";                    ", "//修改学生信息", "\n/", "7", "oid ", "search", "()", ";                    ", "//查询学生信息", "\n/", "7", "oid ", "dele", "()", ";                    ", "//删除学生信息", "\n/", "7", "oid ", "sort", "()", ";                    ", "//排序学生信息", "\n/", "7", "oid ", "exit", "()", ";                    ", "//退出", "\n\n", "//主函数", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " number;\n\n    \n        ", "menu", "();\n        ", "printf", "(", "\"请输入菜单编号：\"", ");\n        cin >> number;\n        ", "switch", " (number)\n        {\n            \n            ", "case", " ", "1", ":", "increase", "(); ", "break", ";    ", "//增加学生信息", "\n            ", "//case 2:display(); break;    //显示当前信息", "\n            ", "//case 3:modify(); break;    //修改学生信息", "\n            ", "//case 4:search(); break;    //查询学生信息", "\n            ", "//case 5:dele(); break;    //删除学生信息", "\n            ", "//case 6:sort(); break;    //排序学生信息", "\n            ", "//case 7:exit(0); break;    //退出", "\n            ", "default", ":", "printf", "(", "\"输入有误！\"", ");\n        }\n\n    \n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;啥叫失败了&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["学生管理系统，在修改学生信息这个函数，我试图用要修改的学生学号“p”与原有的stu[h].num学生学号做对比，但是失败了，请问要怎么修改", ["\n", "我在所有函数的外面定义了一个，vectorstu(N)，然后想把它用在“修改学生信息”的函数中，不知道可以可以，但是编译之后有问题。", "\n", "\n", "#include <iostream>", "\n", "#include <string>", "\n", "#include<stdlib.h>", "\n", "#include <fstream>", "\n", "#include <iomanip>      //包含setw函数", "\n", "#include<vector>        //运用vector创建数组对象", "\nconst int N = ", "1000", ";     ", "//", "学生的人数\n", "//", "void menu();                        ", "//", "输出菜单\n", "//", "void writeFile();                            ", "//", "写入学生信息\n", "//", "void readFile();                             ", "//", "读取学生信息\n", "//", "void increase();                    ", "//", "增加学生信息\n", "//", "void display();                    ", "//", "显示学生信息\n", "//", "void modify();                    ", "//", "修改学生信息\n", "//", "void search();                    ", "//", "查询学生信息\n", "//", "void dele();                    ", "//", "删除学生信息\n", "//", "void sort();                    ", "//", "排序学生信息\n", "//", "void ", "exit", "();                    ", "//", "退出\nstatic int n = ", "0", ";               ", "//", "n为学生总人数，t控制循环\nint t = ", "1", ";               \nusing namespace std;\nclass Student {                    ", "//", "创建学生类\n    public:\n        string name;                    ", "//", "姓名\n        string gender;                    ", "//", "性别\n        string num;                        ", "//", "学号\n        int grade;                        ", "//", "年级\n        string college;                    ", "//", "学院\n        string system;                    ", "//", "系\n        string stuclass;                    ", "//", "班级\n        string dorm;                        ", "//", "宿舍\n        string home;                      ", "//", "籍贯\n        string phonenumber;                    ", "//", "电话号码\n        string English;                    ", "//", "英语成绩\n        string Maths;                        ", "//", "数学成绩\n        string Program;                    ", "//", "编程成绩\n        Student()\n        {\n\n        }\n  ", "//", "      Student(string name, string gender, string num, int grade, string college, string system, string stuclass, string dorm，string home, string phonenumber, int English, int Maths, int Program)\n        ", "//", "{\n        ", "//", "    this->name = name;\n        ", "//", "    this->gender = gender;\n        ", "//", "    this->num = num;\n        ", "//", "    this->grade = grade;\n        ", "//", "    this->college = college;\n        ", "//", "    this->system = system;\n        ", "//", "    this->stuclass = stuclass;\n        ", "//", "    this->dorm = dorm;\n  ", "//", "          this->home= home;\n  ", "//", "          this->phonenumber = phonenumber;\n  ", "//", "          this->English = English;\n  ", "//", "          this->Maths = Maths;\n  ", "//", "          this->Program = Program;\n        ", "//", "}\n        ~Student()\n        {}\n        void show1()              ", "//", "输出信息\n        {\n            cout << left << setw(", "10", ") << name;\n            cout << left << setw(", "6", ") << gender;\n            cout << left << setw(", "12", ") << num;\n            cout << left << setw(", "6", ") << grade;\n            cout << left << setw(", "6", ") << college;\n            cout << left << setw(", "6", ") << system;\n            cout << left << setw(", "6", ") << stuclass;\n            cout << left << setw(", "6", ") << dorm;\n            cout << left << setw(", "6", ") << home;\n            cout << left << setw(", "20", ") << phonenumber;\n            cout << left << setw(", "6", ") << English;\n            cout << left << setw(", "6", ") << Maths;\n            cout << left << setw(", "6", ") << Program;\n        }\n        \n        static void show2()    ", "//", "输出信息的名称\n        {\n            cout << left << setw(", "10", ") << ", "\"姓名\"", ";\n            cout << left << setw(", "6", ") << ", "\"性别\"", ";\n            cout << left << setw(", "12", ") << ", "\"学号\"", ";\n            cout << left << setw(", "6", ") << ", "\"年级\"", ";\n            cout << left << setw(", "6", ") << ", "\"院校\"", ";\n            cout << left << setw(", "6", ") << ", "\"系\"", ";\n            cout << left << setw(", "6", ") << ", "\"班级\"", ";\n            cout << left << setw(", "6", ") << ", "\"籍贯\"", ";\n            cout << left << setw(", "6", ") << ", "\"电话\"", ";\n            cout << left << setw(", "6", ") << ", "\"英语\"", ";\n            cout << left << setw(", "6", ") << ", "\"数学\"", ";\n            cout << left << setw(", "6", ") << ", "\"编程\"", ";\n        }\n};\nvector<Student>stu(N);                                  ", "//", "在所有函数的外面定义了\nvoid menu()                        ", "//", "输出菜单\n{\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"---------------->>学生信息管理系统<<-----------------\\n\"", ");\n    printf(", "\"--------------------->>主菜单<<----------------------\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"*     1、增加学生信息     *    2、显示学生信息      *\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"**    3、修改学生信息   *     4、查询学生信息      **\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"**    5、删除学生信息   *     6、排序学生信息      **\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n    printf(", "\"**    7、退出系统       *                          **\\n\"", ");\n    printf(", "\"-----------------------------------------------------\\n\"", ");\n}\n\n\nvoid writeFile(vector<Student> &stu)                            ", "//", "写入学生信息\n{\n    ofstream ofs;\n    ofs.open(", "\"D:\\\\王晴\\\\学习\\\\大二\\\\面向对象的程序设计课程实践\\\\学生管理系统\\\\学生信息.txt\"", ", ios::out);\n    ", "for", " (int i = n; i < stu.size()+n; i++)\n    {\n        \n        ofs << stu[i].name << ", "\" \"", " << stu[i].gender << ", "\" \"", " << stu[i].num << ", "\" \"", "\n            << stu[i].grade << ", "\" \"", " << stu[i].college << ", "\" \"", " << stu[i].system << ", "\" \"", "<<stu[i].stuclass<<", "\" \"", "\n            << stu[i].dorm << ", "\" \"", " << stu[i].English << stu[i].Maths << stu[i].Program << endl;\n    }\n    ofs.close();\n}\n\nvoid readFile(vector<Student> &stu)                             ", "//", "读取学生信息\n{\n    ifstream ifs;                                               ", "//", "创建流对象\n    ifs.open(", "\"D:\\\\王晴\\\\学习\\\\大二\\\\面向对象的程序设计课程实践\\\\学生管理系统\\\\学生信息.txt\"", ", ios::", "in", ");                          ", "//", "打开文件\n    ", "if", " (!ifs.is_open())                                         ", "//", "判断文件是否打开成功\n    {\n        cout << ", "\"文件打开失败\"", " << endl;\n        return;\n    }\n    char c;\n    ", "while", " ((c = ifs.get())!= EOF)\n    {\n        cout << c;\n    }\n\n    ifs.close();\n}\n\nvoid increase()                    ", "//", "增加学生信息\n{\n    cout << ", "\"----------------欢迎来到增加学生信息-----------------\"", " << endl;\n    cout << ", "\"请输入待添加的学生人数：\"", " << endl;\n    int x;                      ", "//", "等待添加的学生人数\n    cin >> x;\n    int flag, i = n, j;\n    vector <Student> stu(x);\n    ", "if", " (x > ", "0", ")\n    {\n        ", "do", "\n        {\n            flag = ", "1", ";\n            ", "while", " (flag==", "1", ")    ", "//", "判断学号是否重复\n            {\n                flag = ", "0", ";\n                printf(", "\"请输入第%d位学生的学号：\\n\"", ", i + ", "1", ");\n                cin >> stu[i].num;\n                ", "for", " (j = ", "0", "; j < i; j++)\n                {\n                    ", "if", " (stu[i].num == stu[j].num)\n                    {\n                        cout << ", "\"该学号已经存在，请重新输入！\"", " << endl;\n                        flag = ", "1", ";\n                        ", "break", ";\n                    }\n                }\n               \n            }\n            printf(", "\"请输入第%d位学生姓名  性别  学号  年级  学院  系  班级  宿舍  籍贯  电话  英语成绩  数学成绩  编程成绩：\\n\"", ", i + ", "1", ");\n                cin >> stu[i].name >> stu[i].gender >> stu[i].num >> stu[i].grade >> stu[i].college\n                    >> stu[i].system >>stu[i].stuclass >> stu[i].dorm >>stu[i].home>>stu[i].phonenumber\n                    >> stu[i].English >> stu[i].Maths >> stu[i].Program;\n                i++;\n        } ", "while", " (i < x + n);\n        \n        writeFile(stu);\n        n += x;\n        cout << ", "\"添加成功！\"", " << endl;\n        system(", "\"pause\"", ");\n    }\n\n}\nvoid display()                    ", "//", "显示学生信息\n{\n\n    ", "if", " (n == ", "0", ")\n        printf(", "\"您好，现在暂无学生信息，请先添加学生信息！\\n\"", ");\n    ", "else", "\n    {\n        printf(", "\"现在共有%d名学生\\n\"", ", n);\n        vector<Student>stu(n);\n        readFile(stu);\n    }\n}\nvoid modify()                    ", "//", "修改学生信息\n{\n    string p;                   ", "//", "要修改的学生学号\n    int h;\n    cout << ", "\"请输入需要修改的学生学号：\"", " << endl;\n    cin >> p;\n    ofstream ofs;\n    ofs.open(", "\"D:\\\\王晴\\\\学习\\\\大二\\\\面向对象的程序设计课程实践\\\\学生管理系统\\\\学生信息.txt\"", ", ios::out);\n    ", "for", " (h = ", "0", "; h < n; h++)\n    {\n        ", "if", " (p == stu[h].num)\n        {\n            cout << ", "\"请输入修改后的信息:\"", " << endl;\n            cin >> stu[h].name >> stu[h].gender >> stu[h].num >> stu[h].grade >> stu[h].college\n                >> stu[h].system >> stu[h].stuclass >> stu[h].dorm >> stu[h].home >> stu[h].phonenumber\n                >> stu[h].English >> stu[h].Maths >> stu[h].Program;\n       \n        ofs << stu[h].name << ", "\" \"", " << stu[h].gender << ", "\" \"", " << stu[h].num << ", "\" \"", "\n            << stu[h].grade << ", "\" \"", " << stu[h].college << ", "\" \"", " << stu[h].system << ", "\" \"", " << stu[h].stuclass << ", "\" \"", "\n            << stu[h].dorm << ", "\" \"", " << stu[h].English << stu[h].Maths << stu[h].Program << endl;\n        ofs.close();\n        }\n        ", "break", ";\n    }\n}\n", "//", "void search();                    ", "//", "查询学生信息\n", "//", "void dele();                    ", "//", "删除学生信息\n", "//", "void sort();                    ", "//", "排序学生信息\n", "//", "void ", "exit", "();                    ", "//", "退出\n\n", "//", "主函数\nint main()\n{\n    int number;\n\n    ", "while", " (", "1", ")\n    {\n        menu();\n        printf(", "\"请输入菜单编号：\"", ");\n        cin >> number;\n        switch (number)\n        {\n            \n            case ", "1", ":increase(); ", "break", ";    ", "//", "增加学生信息\n            case ", "2", ":display(); ", "break", ";    ", "//", "显示当前信息\n            case ", "3", ":modify(); ", "break", ";    ", "//", "修改学生信息\n            ", "//", "case ", "4", ":search(); ", "break", ";    ", "//", "查询学生信息\n            ", "//", "case ", "5", ":dele(); ", "break", ";    ", "//", "删除学生信息\n            ", "//", "case ", "6", ":sort(); ", "break", ";    ", "//", "排序学生信息\n            ", "//", "case ", "7", ":", "exit", "(", "0", "); ", "break", ";    ", "//", "退出\n            default:printf(", "\"输入有误！\"", ");\n        }\n    }\n\n}\n\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是不是我方坦克一爆炸就提示?因为那个判断相撞的语句是一直在判断的&amp;#xff0c;我方坦克一旦爆炸他那个值就没有了&amp;#xff0c;所以会报错&amp;#xff0c;在判断相撞的前面加一个条If语句判断我方坦克是否存在就行了&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["用pagame写坦克大战报  AttributeError: 'NoneType' object has no attribute 'rect' 白兔了彦祖们", ["import pygame,time,random", "_display = pygame.display", "COLOR_BLACK = pygame.Color(0, 0, 0)", "COLOR_RED = pygame.Color(255,0,0)", "version = \"v1.25\"", "class MainGame():", "    #游戏主窗口", "    window = None", "    SCREEN_HEIGHT = 650", "    SCREEN_WIDTH = 1000", "    #创建我方坦克", "    TANK_P1 = None", "    #存储所有敌方坦克", "    EnemyTank_list = []", "    #要创建的敌方坦克的数量", "    EnemTank_count = 5", "    #存储我方子弹的子弹的列表", "    Bullet_list = []", "    #存储敌方子弹的列表", "    Enemy_bullet_list = []", "    #增加爆炸效果列表", "    Explode_List = []", "    #墙壁列表", "    Wall_list = []", "    #开始游戏方法", "    def startGame(self):", "        _display.init()", "        #创建窗口加载窗口(借鉴官方文档)", "        MainGame.window = _display.set_mode([MainGame.SCREEN_WIDTH,MainGame.SCREEN_HEIGHT])", "        self.creatMyTank()", "        #？创建敌方坦克", "        self.creatEnemyTank()", "        self.cteatWalls()", "        #设置一下游戏标题", "        _display.set_caption(\"坦克大战\"+version)", "        #让窗口持续刷新操作", "        while True:", "            #给窗口完成一个填充颜色", "            MainGame.window.fill(COLOR_BLACK)", "            #在循环中持续完成事件的获取", "            self.getEvent()", "            #将绘制文字得到的小画布，粘贴到窗口中", "            MainGame.window.blit(self.getTextSurface(\"剩余敌方坦克%d辆\"%len(MainGame.EnemyTank_list),),(5,5))", "            #调用展示墙壁的方法", "            self.blitWalls()", "            if MainGame.TANK_P1 and MainGame.TANK_P1.live:", "                # 将我方坦克加入到窗口中", "                MainGame.TANK_P1.displayTank()", "            else:", "                del MainGame.TANK_P1", "                MainGame.TANK_P1 = None", "\n", "        ", "#循环展示敌方坦克", "\n        self.blitEnemyTank()\n        ", "#根据坦克的开关状态调用坦克的移动方法", "\n        ", "if", " MainGame.TANK_P1 ", "and", " ", "not", " MainGame.TANK_P1.stop:\n            MainGame.TANK_P1.move()\n            ", "#调用碰撞墙壁的方法", "\n            MainGame.TANK_P1.hitWalls()\n            MainGame.TANK_P1.hitEnemyTank()\n        ", "#调用渲染子弹列表的一个方法", "\n        self.blitBullet()\n        ", "#调用渲染敌方子弹得到一个方法", "\n        self.blitEnemyBullet()\n        ", "#调用展示爆炸效果的方法", "\n        self.displayExplodes()\n\n        time.sleep(", "0.02", ")\n        ", "#窗口的刷新", "\n        _display.update()\n", "#创建我方坦克", "\n", "def", " ", "creatMyTank", "(", "self", "):\n    ", "# 创建我方坦克", "\n    MainGame.TANK_P1 = MyTank(", "300", ", ", "500", ")\n    ", "#创建音乐对象", "\n    music = Music(", "'img/start.wav'", ")\n    ", "#调用播发音乐方法", "\n    music.play()\n", "#创建敌方坦克", "\n", "def", " ", "creatEnemyTank", "(", "self", "):\n    top = ", "100", "\n    ", "for", " i ", "in", " ", "range", "(MainGame.EnemTank_count):\n        speed = random.randint(", "3", ", ", "6", ")\n        ", "#每次都随机生成一个laft值", "\n        left = random.randint(", "1", ", ", "9", ")\n        eTank = EnemyTank(left*", "100", ",top,speed)\n        MainGame.EnemyTank_list.append(eTank)\n", "#创建墙壁的方法", "\n", "def", " ", "cteatWalls", "(", "self", "):\n    ", "for", " i ", "in", " ", "range", "(", "7", "):\n        wall = Wall(", "140", "*i,", "325", ")\n        MainGame.Wall_list.append(wall)\n", "def", " ", "blitWalls", "(", "self", "):\n    ", "for", " wall ", "in", " MainGame.Wall_list:\n        ", "if", " wall.live:\n            wall.displayWall()\n        ", "else", ":\n            MainGame.Wall_list.remove(wall)\n", "#将敌方坦克加入到窗口中", "\n", "def", " ", "blitEnemyTank", "(", "self", "):\n    ", "for", " eTank ", "in", " MainGame.EnemyTank_list:\n        ", "if", " eTank.live:\n            eTank.displayTank()\n            ", "# 坦克的移动方法", "\n            eTank.randMove()\n            ", "#调用敌方坦克于墙壁的碰撞方法", "\n            eTank.hitWalls()\n            ", "#敌方坦克是否撞到我方坦克", "\n            eTank.hitMyTank()\n            ", "# 调用敌方坦克的射击", "\n            eBullet = eTank.shot()\n            ", "# 将存储到敌方子弹列表", "\n            ", "# 如果子弹为None，不加如到列表", "\n            ", "if", " eBullet:\n                ", "#将子弹存储到敌方子弹列表", "\n                MainGame.Enemy_bullet_list.append(eBullet)\n        ", "else", ":\n            MainGame.EnemyTank_list.remove(eTank)\n", "#将我方子弹加入到窗口中", "\n", "def", " ", "blitBullet", "(", "self", "):\n    ", "for", " bullet ", "in", " MainGame.Bullet_list:\n        ", "#如果子弹还活着，绘制出来，否则，直接从列表中移除改子弹", "\n        ", "if", " bullet.live:\n            bullet.displayBullet()\n            ", "# 让子弹移动", "\n            bullet.bulletMove()\n            ", "#调用我方子弹于敌方坦克的碰撞方法", "\n            bullet.hitEnemyTank()\n            ", "#调用判断我方子弹是否碰撞到墙壁的方法", "\n            bullet.hitWalls()\n        ", "else", ":\n            MainGame.Bullet_list.remove(bullet)\n", "#将敌方子弹加入到窗口中", "\n", "def", " ", "blitEnemyBullet", "(", "self", "):\n    ", "for", " eBuller ", "in", " MainGame.Enemy_bullet_list:\n        ", "#如果子弹还活着，绘制出来，否则，直接从列表中移除改子弹", "\n        ", "if", " eBuller.live:\n            eBuller.displayBullet()\n            ", "# 让子弹移动", "\n            eBuller.bulletMove()\n            ", "#调用是否碰撞到墙壁的一个方法", "\n            eBuller.hitWalls()\n            ", "if", " MainGame.TANK_P1 ", "and", " MainGame.TANK_P1.live:\n                eBuller.hitMyTank()\n\n        ", "else", ":\n            MainGame.Enemy_bullet_list.remove(eBuller)\n\n", "#新增方法：展示爆炸效果列表", "\n", "def", " ", "displayExplodes", "(", "self", "):\n    ", "for", " explode ", "in", " MainGame.Explode_List:\n        ", "if", " explode.live:\n            explode.displayExplode()\n        ", "else", ":\n            MainGame.Explode_List.remove(explode)\n\n", "#获取程序期间所有事件(鼠标事件，键盘事件)", "\n", "def", " ", "getEvent", "(", "self", "):\n    ", "#1.获取所有事件", "\n    eventLIst = pygame.event.get()\n    ", "#2.对事件进行判断处理(1.点击关闭按钮2.按下键盘上的某个按键)", "\n    ", "for", " event ", "in", " eventLIst:\n        ", "#判断event.type是否QUIT，如果时退出的话，直接调用程序结束方法", "\n        ", "if", " event.", "type", " == pygame.QUIT:\n            self.endGame()\n        ", "#判断事件类型是否为按键按下，如果是，继续判断按建时哪一个按键，来进行对应的处理", "\n        ", "if", " event.", "type", " == pygame.KEYDOWN:\n            ", "#点击ESC按键让我方坦克重生", "\n            ", "if", " event.key == pygame.K_ESCAPE ", "and", " ", "not", " MainGame.TANK_P1:\n                ", "#调用创建我方坦克的方法", "\n                self.creatMyTank()\n\n            ", "if", " MainGame.TANK_P1 ", "and", " MainGame.TANK_P1.live:\n                ", "# 具体是哪一个按键的处理", "\n                ", "if", " event.key == pygame.K_LEFT:\n                    ", "print", "(", "\"坦克向左调头，移动\"", ")\n                    ", "# 修改坦克方向", "\n                    MainGame.TANK_P1.direction = ", "'L'", "\n                    MainGame.TANK_P1.stop = ", "False", "\n                ", "elif", " event.key == pygame.K_RIGHT:\n                    ", "print", "(", "\"坦克向右调头，移动\"", ")\n                    ", "# 修改坦克方向", "\n                    MainGame.TANK_P1.direction = ", "'R'", "\n                    MainGame.TANK_P1.stop = ", "False", "\n                ", "elif", " event.key == pygame.K_UP:\n                    ", "print", "(", "\"坦克向上调头，移动\"", ")\n                    ", "# 修改坦克方向", "\n                    MainGame.TANK_P1.direction = ", "'U'", "\n                    MainGame.TANK_P1.stop = ", "False", "\n                ", "elif", " event.key == pygame.K_DOWN:\n                    ", "print", "(", "\"坦克向下调头，移动\"", ")\n                    ", "# 修改坦克方向", "\n                    MainGame.TANK_P1.direction = ", "'D'", "\n                    MainGame.TANK_P1.stop = ", "False", "\n                ", "elif", " event.key == pygame.K_SPACE:\n                    ", "print", "(", "\"发射子弹\"", ")\n                    ", "if", " ", "len", "(MainGame.Bullet_list) < ", "3", ":\n                        ", "# 产生一颗子弹", "\n                        m = Bullet(MainGame.TANK_P1)\n                        ", "# 将子弹加入到子弹列表", "\n                        MainGame.Bullet_list.append(m)\n                        music = Music(", "'img/fire.wav'", ")\n                        music.play()\n                    ", "else", ":\n                        ", "print", "(", "\"子弹数量不足\"", ")\n                    ", "print", "(", "\"当前屏幕中子弹数量为:%d\"", " % ", "len", "(MainGame.Bullet_list))\n        ", "#结束游戏方法", "\n        ", "if", " event.", "type", " == pygame.KEYUP:\n            ", "#松开的如果是方向建，才更改移动状态", "\n            ", "if", " event.key == pygame.K_LEFT ", "or", " event.key == pygame.K_RIGHT ", "or", "\\\n                    event.key == pygame.K_UP ", "or", " event.key == pygame.K_DOWN:\n                ", "if", " MainGame.TANK_P1 ", "and", " MainGame.TANK_P1.live:\n                    ", "# 修改坦克的移动状态", "\n                    MainGame.TANK_P1.stop = ", "True", "\n\n", "#左上角文字绘制的功能", "\n", "def", " ", "getTextSurface", "(", "self,text", "):\n    ", "#初始化模块", "\n    pygame.font.init()\n    ", "#查看系统支持的所有字体", "\n    ", "#fontList = pygame.font.get_fonts()", "\n    ", "#print(fontList)", "\n    ", "#选中一个合适的字体", "\n    font = pygame.font.SysFont(", "'kaiti'", ",", "18", ")\n    ", "#使用对应的字体完成相关内容的绘制", "\n    testSurface = font.render(text,", "True", ",COLOR_RED)\n    ", "return", " testSurface\n", "#结束游戏方法", "\n", "def", " ", "endGame", "(", "self", "):\n    ", "print", "(", "\"谢谢使用\"", ")\n    ", "#结束python解释器", "\n    exit()\n", "\n", "class BaseItem(pygame.sprite.Sprite):", "    def ", "init", "(self):", "        pygame.sprite.Sprite.", "init", "(self)", "class Tank(BaseItem):", "    def ", "init", "(self,left,top):", "        self.images = {", "            'U':pygame.image.load('img\\P1_U.png'),", "            'D':pygame.image.load('img\\P1_D.png'),", "            'L':pygame.image.load('img\\P1_L.png'),", "            'R':pygame.image.load('img\\P1_R.png')", "        }", "        self.direction = 'U'", "        self.image = self.images[self.direction]", "        #坦克所在的区域  Rect->", "        self.rect = self.image.get_rect()", "        #指定坦克初始化位置，分别距x,y轴的位置", "        self.rect.left = left", "        self.rect.top = top", "        #新增速度属性", "        self.speed = 5", "        #新增属性：坦克的移动开关", "        self.stop = True", "        #新增属性  live用来记录，坦克是否活着", "        self.live = True", "        #新增属性：用来记录坦克移动之前的坐标(用于坐标还原时使用)", "        self.oldLeft = self.rect.left", "        self.oldTop = self.rect.top", "\n", "#坦克的移动方法", "\n", "def", " ", "move", "(", "self", "):\n    ", "#先记录移动之前的坐标", "\n    self.oldLeft = self.rect.left\n    self.oldTop = self.rect.top\n    ", "if", " self.direction == ", "'L'", ":\n        ", "if", " self.rect.left > ", "0", ":\n            self.rect.left -= self.speed\n    ", "elif", " self.direction == ", "'R'", ":\n        ", "if", " self.rect.left + self.rect.height < MainGame.SCREEN_WIDTH:\n            self.rect.left += self.speed\n    ", "elif", " self.direction == ", "'U'", ":\n        ", "if", " self.rect.top >", "0", ":\n            self.rect.top -= self.speed\n    ", "elif", " self.direction == ", "'D'", ":\n       ", "if", " self.rect.top + self.rect.height < MainGame.SCREEN_HEIGHT:\n           self.rect.top += self.speed\n", "def", " ", "stay", "(", "self", "):\n    self.rect.left = self.oldLeft\n    self.rect.top = self.oldTop\n", "#新增碰撞墙壁的方法", "\n", "def", " ", "hitWalls", "(", "self", "):\n    ", "for", " wall ", "in", " MainGame.Wall_list:\n        ", "if", " pygame.sprite.collide_rect(wall,self):\n            self.stay()\n", "#射击方法", "\n", "def", " ", "shot", "(", "self", "):\n    ", "return", " Bullet(self)\n", "#展示坦克(将坦克这个surface绘制到窗口中  blit())", "\n", "def", " ", "displayTank", "(", "self", "):\n    ", "#1.重新设置坦克的图片", "\n    self.image = self.images[self.direction]\n    ", "#2.将坦克加入到窗口中", "\n    MainGame.window.blit(self.image,self.rect)\n", "\n", "class MyTank(Tank):    #我方坦克", "    def ", "init", "(self,left,top):", "        super(MyTank, self).", "init", "(left,top)", "    #新增主动碰撞到敌方坦克的方法", "    def hitEnemyTank(self):", "        for eTank in MainGame.EnemyTank_list:", "            if pygame.sprite.collide_rect(eTank,self):", "                self.stay()", "\n", "class EnemyTank(Tank):   #敌方坦克", "    def ", "init", "(self,left,top,speed):", "        super(EnemyTank,self).", "init", "(left,top)", "        #self.live = True", "        self.images = {", "            'U': pygame.image.load('img/enemy2U.gif'),", "            'D': pygame.image.load('img/enemy2R.gif'),", "            'L': pygame.image.load('img/enemy2L.gif'),", "            'R': pygame.image.load('img/enemy2D.gif')", "        }", "        self.direction = self.randDirection()", "        self.image = self.images[self.direction]", "        # 坦克所在的区域  Rect->", "        self.rect = self.image.get_rect()", "        # 指定坦克初始化位置，分别距x,y轴的位置", "        self.rect.left = left", "        self.rect.top = top", "        # 新增速度属性", "        self.speed = speed", "        self.stop = True", "        #新增步数属性，用来控制敌方坦克随机移动", "        self.step = 50", "\n", "def", " ", "randDirection", "(", "self", "):\n    num = random.randint(", "1", ",", "4", ")\n    ", "if", " num == ", "1", ":\n       ", "return", "  ", "'U'", "\n    ", "elif", " num == ", "2", ":\n        ", "return", " ", "'D'", "\n    ", "elif", " num == ", "3", ":\n        ", "return", " ", "'L'", "\n    ", "elif", " num == ", "4", ":\n        ", "return", " ", "'R'", "\n", "#def displayEnemtTank(self):", "\n    ", "#super().displayTank()", "\n", "#随机移动", "\n", "def", " ", "randMove", "(", "self", "):\n    ", "if", " self.step <= ", "0", ":\n        self.direction = self.randDirection()\n        self.step = ", "50", "\n    ", "else", ":\n        self.move()\n        self.step -= ", "1", "\n", "def", " ", "shot", "(", "self", "):\n    num = random.randint(", "1", ",", "1000", ")\n    ", "if", " num <= ", "15", ":\n        ", "return", " Bullet(self)\n", "def", " ", "hitMyTank", "(", "self", "):\n    ", "if", " pygame.sprite.collide_rect(self,MainGame.TANK_P1):\n        ", "#让敌方坦克听下来 stay()", "\n        self.stay()\n", "\n", "class Bullet(BaseItem):", "    def ", "init", "(self,tank,):", "        #图片", "        self.image = pygame.image.load('img/enemymissile.gif')", "        #方向(坦克方向)", "        self.direction = tank.direction", "        #位置", "        self.rect = self.image.get_rect()", "        if self.direction == 'U':", "            self.rect.left = tank.rect.left + tank.rect.width/2 - self.rect.width/2", "            self.rect.top = tank.rect.top - self.rect.height", "        elif self.direction == 'D':", "            self.rect.left = tank.rect.left + tank.rect.width / 2 - self.rect.width / 2", "            self.rect.top = tank.rect.top + tank.rect.height", "        elif self.direction == \"L\":", "            self.rect.left = tank.rect.left - self.rect.width / 2 - self.rect.width / 2", "            self.rect.top = tank.rect.top + tank.rect.width / 2 - self.rect.width / 2", "        elif self.direction == 'R':", "            self.rect.left = tank.rect.left + tank.rect .width", "            self.rect.top = tank.rect.top + tank.rect.width / 2 - self.rect.width / 2", "\n", "    ", "#速度", "\n    self.speed = ", "7", "\n    ", "#用来记录子弹是否碰撞", "\n    self.live = ", "True", "\n", "#子弹的移动方法", "\n", "def", " ", "bulletMove", "(", "self", "):\n    ", "if", " self.direction == ", "'U'", ":\n        ", "if", " self.rect.top > ", "0", ":\n            self.rect.top -= self.speed\n        ", "else", ":\n            ", "#修改状态值", "\n            self.live = ", "False", "\n    ", "elif", " self.direction == ", "'D'", ":\n        ", "if", " self.rect.top < MainGame.SCREEN_HEIGHT - self.rect.height:\n            self.rect.top += self.speed\n        ", "else", ":\n            ", "# 修改状态值", "\n            self.live = ", "False", "\n    ", "elif", " self.direction == ", "'L'", ":\n        ", "if", " self.rect.left > ", "0", ":\n            self.rect.left -= self.speed\n        ", "else", ":\n            ", "# 修改状态值", "\n            self.live = ", "False", "\n    ", "elif", " self.direction == ", "'R'", ":\n        ", "if", " self.rect.left < MainGame.SCREEN_WIDTH - self.rect.width:\n            self.rect.left += self.speed\n        ", "else", ":\n            ", "# 修改状态值", "\n            self.live = ", "False", "\n", "#展示子弹的方法", "\n", "def", " ", "displayBullet", "(", "self", "):\n    MainGame.window.blit(self.image,self.rect)\n", "#新增我方子弹碰撞敌方坦克的方法", "\n", "def", " ", "hitEnemyTank", "(", "self", "):\n    ", "for", " eTank ", "in", " MainGame.EnemyTank_list:\n        ", "if", " pygame.sprite.collide_rect(eTank,self):\n            ", "#产生一个爆炸效果", "\n            explpde = Explode(eTank)\n            ", "#将爆炸效果加入到爆炸列表中", "\n            MainGame.Explode_List.append(explpde)\n            self.live = ", "False", "\n            eTank.live = ", "False", "\n", "#新增敌方子弹于我方坦克的碰撞方法", "\n", "def", " ", "hitMyTank", "(", "self", "):\n    ", "if", " pygame.sprite.collide_rect(self,MainGame.TANK_P1):\n        ", "#产生爆炸效果，并加入到爆炸效果列表中", "\n        explode = Explode(MainGame.TANK_P1)\n        MainGame.Explode_List.append(explode)\n        ", "#修改子弹状态", "\n        self.live = ", "False", "\n        ", "#修改我方坦克状态", "\n        MainGame.TANK_P1.live = ", "False", "\n", "#新增子弹于墙壁的碰撞", "\n", "def", " ", "hitWalls", "(", "self", "):\n    ", "for", " wall ", "in", " MainGame.Wall_list:\n        ", "if", " pygame.sprite.collide_rect(wall,self):\n            ", "#修改子弹的live属性", "\n            self.live = ", "False", "\n            wall.hp -= ", "1", "\n            ", "if", " wall.hp <= ", "0", ":\n                wall.live = ", "False", "\n", "\n", "class Explode():", "    def ", "init", "(self,tank):", "        self.rect = tank.rect", "        self.step = 1", "        self.images = [", "            pygame.image.load('img/blast1.gif'),", "            pygame.image.load('img/blast2.gif'),", "            pygame.image.load('img/blast3.gif'),", "            pygame.image.load('img/blast4.gif'),", "            pygame.image.load('img/blast5.gif')", "        ]", "        self.image = self.images[self.step]", "        self.live = True", "    #展示爆炸效果", "    def displayExplode(self):", "        if self.step < len(self.images):", "            MainGame.window.blit(self.image, self.rect)", "            self.image = self.images[self.step]", "            self.step += 1", "        else:", "            self.live = False", "            self.step = 0", "class Wall():", "    def ", "init", "(self,left,top):", "        self.image = pygame.image.load('img/steels.gif')", "        self.rect = self.image.get_rect()", "        self.rect.left = left", "        self.rect.top = top", "        #用来判断墙壁是否应该在窗口中展示", "        self.live = True", "        #用来记录墙壁的生命值", "        self.hp = 3", "    #展示墙壁的方法", "    def displayWall(self):", "        MainGame.window.blit(self.image,self.rect)", "#我方坦克出生", "class Music():", "    def ", "init", "(self,fileName):", "        self.fileName = fileName", "        #先初始化混音器", "        pygame.mixer.init()", "        pygame.mixer.music.load(self.fileName)", "    #开始播放音乐", "    def play(self):", "        pygame.mixer.music.play()", "MainGame().startGame()", "\n", "这是源码"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;82行的         JTextField txfResult &amp;#61; new JTextField(&amp;#34;0&amp;#34;);&lt;br /&gt;改成 this.txfResult &amp;#61; new JTextField(&amp;#34;0&amp;#34;);&lt;br /&gt;87行的         JTextArea textArea &amp;#61; new JTextArea();&lt;br /&gt;改成 this.textArea &amp;#61; new JTextArea();&lt;br /&gt;你这是在构造函数了定义了局部变量&amp;#xff0c;且名字跟成员属性重名&amp;#xff0c;导致成员属性没有初始化&amp;#xff0c;抛的空指针&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["在计算器运行中，总是得不到结果", ["\n\n\n```package cal;\n\npublic ", "class", " panel {\n     public static void main(String", "[]", " args) {\n            Calculation cal=", "new", " ", "Calculation()", ";\n        }\n}\ncalculation.Java:\npackage cal;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.*;\nimport java.util.EventListener;\nimport javax.swing.*;\nimport javax.swing.text.JTextComponent;\nimport java.lang.*;\npublic ", "class", " Calculation extends JFrame implements ActionListener{\n    public JTextField txfResult;", "//显示操作结果的文本框", "\n    public JTextField textField1;\n    public JTextField textField;\n    public JTextField textField2;\n    public JTextArea textArea;\n    JTextField txfM;", "//显示记忆的索引值的文本框", "\n    Double dM=", "0", "d;", "//存储数据", "\n    public ", "Calculation()", " {\n        super(", "\"swing 计算器实例\"", ");\n        ", "/*设置用于显示的文本框*/", "\n        textField =", "new", " ", "JTextField(", "\"0\"", ",13)", ";", "//初始文本显示0  最大列数30", "\n        textField.set", "Background(Color.WHITE)", ";\n        textField.set", "HorizontalAlignment(JTextField.RIGHT)", ";", "//数字在文本框中靠右显示", "\n        textField.set", "Editable(", "false", ")", ";", "//文本框不可编辑  即为readOnly只读属性", "\n        textField1 =", "new", " ", "JTextField(", "\"0\"", ",6)", ";", "//初始文本显示0  最大列数30", "\n        textField1.set", "Background(Color.WHITE)", ";\n        textField1.set", "HorizontalAlignment(JTextField.RIGHT)", ";", "//数字在文本框中靠右显示", "\n        textField1.set", "Editable(", "false", ")", ";", "//文本框不可编辑  即为readOnly只读属性", "\n        textField2 =", "new", " ", "JTextField(", "\"0\"", ",13)", ";", "//初始文本显示0  最大列数30", "\n        textField2.set", "Background(Color.WHITE)", ";\n        textField2.set", "HorizontalAlignment(JTextField.RIGHT)", ";", "//数字在文本框中靠右显示", "\n        textField2.set", "Editable(", "false", ")", ";", "//文本框不可编辑  即为readOnly只读属性", "\n        JPanel viewPanel=", "new", " ", "JPanel()", ";\n        viewPanel.add(textField);\n        viewPanel.add(textField1);\n        viewPanel.add(textField2);\n        ", "/*设置用于控制数字的键与显示记忆索引值的文本框*/", "\n        txfM=", "new", " ", "JTextField(2)", ";", "//最长2列", "\n        JPanel panel=", "new", " ", "JPanel()", ";\n        ", "/*数字和运算符键*/", "\n        String", "[]", "[]", " names = {{", "\"1\"", ", ", "\"2\"", ", ", "\"3\"", ", ", "\"/\"", ", ", "\"c\"", "}, {", "\"4\"", ", ", "\"5\"", ", ", "\"6\"", ", ", "\"*\"", ", ", "\"退格\"", "}, {", "\"7\"", ", ", "\"8\"", ", ", "\"9\"", ", ", "\"-\"", ", ", "\"sqrt\"", "}, {", "\"0\"", ", ", "\"+/-\"", ", ", "\".\"", ", ", "\"+\"", ", ", "\"=\"", "}};\n        JPanel buttonPanel =", "new", " ", "JPanel()", ";", "//数字和运算符的面板", "\n        JButton", "[]", "[]", " buttons = ", "new", " JButton", "[", "4", "]", "[", "5", "]", ";\n        final GridLayout gridLayout = ", "new", " ", "GridLayout(4, 0)", ";\n        gridLayout.set", "Hgap(10)", ";\n        gridLayout.set", "Vgap(10)", ";\n        buttonPanel.set", "Layout(", "gridLayout", ")", ";\n        ", "//一个 循环放好所有数字和运算符组件", "\n        ", "for", " (", "int", " row = ", "0", "; row < names.length; row++) {\n            ", "for", " (", "int", " col = ", "0", "; col < names.length + ", "1", "; col++) {\n                buttons", "[", "row", "]", "[", "col", "]", " = ", "new", " ", "JButton(", "names", "[", "row", "][", "col", "])", ";\n                buttonPanel.add(buttons", "[", "row", "]", "[", "col", "]", ");\n                buttons", "[", "row", "]", "[", "col", "]", ".add", "ActionListener(", "this", ")", ";\n            }\n        }\n        panel.set", "Layout(", "new", " BorderLayout()", ");\n        panel.add(viewPanel,BorderLayout.NORTH);\n        panel.add(buttonPanel,BorderLayout.CENTER);\n        final JLabel leftLabel = ", "new", " ", "JLabel()", ";\n        leftLabel.set", "PreferredSize(", "new", " Dimension(10, 0)", ");\n        panel.add(leftLabel, BorderLayout.WEST);\n        final JLabel rightLabel = ", "new", " ", "JLabel()", ";\n        rightLabel.set", "PreferredSize(", "new", " Dimension(10, 0)", ");\n        panel.add(rightLabel, BorderLayout.EAST);\n        get", "ContentPane()", ".add(panel, BorderLayout.WEST);\n        final JPanel panelx = ", "new", " ", "JPanel()", ";\n        panelx.set", "Layout(", "new", " BorderLayout()", ");\n        get", "ContentPane()", ".add(panelx, BorderLayout.CENTER);\n        final JPanel viewPanel1 = ", "new", " ", "JPanel()", ";\n        panelx.add(viewPanel1, BorderLayout.NORTH);\n        JTextField txfResult = ", "new", " ", "JTextField(", "\"0\"", ")", ";\n        txfResult.set", "Editable(", "false", ")", ";\n        txfResult.set", "HorizontalAlignment(SwingConstants.CENTER)", ";\n        txfResult.set", "Columns(18)", ";\n        viewPanel1.add(txfResult);\n        JTextArea textArea = ", "new", " ", "JTextArea()", ";\n        textArea.set", "Columns(15)", ";\n        textArea.set", "Rows(4)", ";\n        textArea.set", "LineWrap(", "true", ")", ";\n        final JScrollPane scrollPane = ", "new", " ", "JScrollPane()", ";\n        scrollPane.set", "ViewportView(", "textArea", ")", ";\n        panelx.add(scrollPane, BorderLayout.CENTER);\n        final JPanel buttonPanel1 = ", "new", " ", "JPanel()", ";\n        panelx.add(buttonPanel1, BorderLayout.SOUTH);\n        final JButton aButton = ", "new", " ", "JButton()", ";\n        aButton.set", "Text(", "\"保存\"", ")", ";\n        aButton.add", "ActionListener(", "this", ")", ";\n        buttonPanel1.add(aButton);\n        final JButton bButton = ", "new", " ", "JButton()", ";\n        bButton.set", "Text(", "\"查看\"", ")", ";\n        bButton.add", "ActionListener(", "this", ")", ";\n        buttonPanel1.add(bButton);\n        final JButton cButton = ", "new", " ", "JButton()", ";\n        cButton.set", "Text(", "\"清除\"", ")", ";\n        cButton.add", "ActionListener(", "this", ")", ";\n        buttonPanel1.add(cButton);\n       pack", "()", ";\n        set", "Visible(", "true", ")", ";\n        set", "Resizable(", "false", ")", ";", "//禁止最大化", "\n        set", "LocationRelativeTo(", "null", ")", ";", "//居中显示", "\n        set", "DefaultCloseOperation(JFrame.EXIT_ON_CLOSE)", ";     \n    }\n   \n        ", "// TODO Auto-generated method stub", "\n        public boolean newDigital=", "true", ";", "//类内全局boolean变量 用于表示是否是输入数的标志", "\n        public String operation=", "\"\"", ";", "//表示运算符的字符串", "\n        public double d1;", "//二元运算前操数", "\n        public double d2;", "//二元运算后操作数", "\n        public ", "int", " optionValue;", "//区别加减乘除运算符的变量", "\n        ", "/*监听方法*/", "\n        @Override\n        public void action", "Performed(ActionEvent ", "e", ")", " {\n            String s=(e.get", "ActionCommand()", ");", "//返回与此动作相关的命令字符串  就是button上显示的字", "\n            JButton str=(JButton)e.get", "Source()", ";\n            ", "/*后退键*/", "\n            ", "if", "(s.equals(", "\"退格\"", ")) {\n                ", "if", " (textField2.get", "Text()", ".equals(", "\"\"", "))\n                    press", "Backspace1()", ";\n                ", "else", " press", "Backspace2()", ";\n            }\n            ", "/*清0键*/", "\n            ", "if", "(s.equals(", "\"C\"", ")) {\n                txfResult.set", "Text(", "\"0\"", ")", ";\n                textField.set", "Text(", "\"0\"", ")", ";\n                textField1.set", "Text(", "\"0\"", ")", ";\n                textField2.set", "Text(", "\"0\"", ")", ";\n                optionValue=", "0", ";", "//表示运算符的变量设置为0", "\n                newDigital=", "true", ";", "//表示是否新输入的数的标志设置为true", "\n            }\n            ", "/*数字键*/", "\n            ", "if", "(", "\"0123456789.\"", ".contains(s)) {\n                ", "if", "(textField1.get", "Text()", ".equals(", "\"0\"", ")) {\n                    ", "if", "(newDigital) {\n                        textField.set", "Text(", "s", ")", ";\n                    }", "else", " ", "if", "(s.equals(", "\".\"", ")&&(!textField.get", "Text()", ".contains(", "\".\"", "))) {\n                        textField.set", "Text(", "textField", ".", "getText", "()", "+", "\".\"", ");\n                    }", "else", " ", "if", "(!s.equals(", "\".\"", ")) {\n                        textField.set", "Text(", "textField", ".", "getText", "()", "+s);\n                    }\n                    newDigital=", "false", ";\n                }    \n                ", "else", " {\n                    ", "if", "(newDigital) {\n                        textField2.set", "Text(", "s", ")", ";\n                    }", "else", " ", "if", "(s.equals(", "\".\"", ")&&(!textField2.get", "Text()", ".contains(", "\".\"", "))) {\n                        textField2.set", "Text(", "textField2", ".", "getText", "()", "+", "\".\"", ");\n                    }", "else", " ", "if", "(!s.equals(", "\".\"", ")) {\n                        textField2.set", "Text(", "textField2", ".", "getText", "()", "+s);\n                    }\n                    newDigital=", "false", ";\n                }\n            }\n            ", "/* 表示数字正负符号+/- */", "\n            ", "if", "(s.equals(", "\"+/-\"", ")) {\n                double d=", "Double", ".", "parse", "Double(", "s", ".", "trim", "()", ");", "//获取输入的数字", "\n                txfResult.set", "Text(String.", "valueOf", "(-", "d", ")", ");", "//取得获取输入数字的相反数", "\n                return;\n            }\n            ", "//////////////////////////////////////////////////////加减乘除运算的实现/////////////////////////////////////////////////////////  ", "\n            ", "if", "(s.equals(", "\"+\"", ")) {\n                d1=", "Double", ".", "value", "Of(", "textField", ".", "getText", "()", ");", "//立刻获取前操作数的值", "\n                textField1.set", "Text(", "\"+\"", ")", ";\n                optionValue=", "1", ";", "//设置运算符标志", "\n            }\n            ", "if", "(s.equals(", "\"-\"", ")) {\n                d1=", "Double", ".", "parse", "Double(", "textField", ".", "getText", "()", ");\n                textField1.set", "Text(", "\"-\"", ")", ";\n                optionValue=", "2", ";\n            }\n            ", "if", "(s.equals(", "\"*\"", ")) {\n                d1=", "Double", ".", "parse", "Double(", "textField", ".", "getText", "()", ");\n                textField1.set", "Text(", "\"*\"", ")", ";\n                optionValue=", "3", ";\n            }\n            ", "if", "(s.equals(", "\"/\"", ")) {\n                d1=", "Double", ".", "parse", "Double(", "textField", ".", "getText", "()", ");\n                textField1.set", "Text(", "\"/\"", ")", ";\n                optionValue=", "4", ";\n            }\n            ", "if", "(s.equals(", "\"=\"", ")) {\n                d2=", "Double", ".", "value", "Of(", "textField2", ".", "getText", "()", ");", "//获取后操作数的值", "\n                Double num=", "0.0", ";\n                txfResult.set", "Text(", "\"0\"", ")", ";\n                ", "/*根据运算符标志的不同值确定计算结果*/", "\n                switch(optionValue) {\n                case ", "1", ":\n                    num=d1+d2;\n                    break;\n                case ", "2", ":\n                    txfResult.set", "Text(String.", "valueOf", "(", "d1", "-", "d2", ")", ");\n                    break;\n                case ", "3", ":\n                    txfResult.set", "Text(String.", "valueOf", "(", "d1", "*", "d2", ")", ");\n                    break;\n                case ", "4", ":\n                    ", "if", "(d2!=", "0", ") {\n                        txfResult.set", "Text(String.", "valueOf", "(", "d1", "/", "d2", ")", ");\n                    }", "else", " {\n                        txfResult.set", "Text(", "\"除数不能为0\"", ")", ";\n                        return;\n                    }\n                    break;              \n                }\n                operation=", "\"\"", ";", "//运算结束 清空运算符", "\n                txfResult.set", "Text(", "txfResult", ".", "getText", "()", "+num.", "to", "String()", ");\n            } \n            String str1=textField.get", "Text()", "+textField1.get", "Text()", "+textField2.get", "Text()", "+", "\"=\"", "+txfResult.get", "Text()", ";\n            textArea.set", "Text(", "str1", "+", "textArea", ".", "getText", "()", ");\n            ", "////////////////////////////////求平方根 倒数 百分比运算/////////////////////////////////", "\n            ", "if", "(s.equals(", "\"sqrt\"", ")) {\n                double d=", "Double", ".", "parse", "Double(", "textField", ".", "getText", "()", ".trim", "()", ");", "//获取操作数的值", "\n                ", "if", "(d>", "0", ") {\n                    txfResult.set", "Text(String.", "valueOf", "(Math.", "sqrt", "(", "d", ")", "));", "//计算该值的平方根", "\n                }", "else", " {\n                    txfResult.set", "Text(", "\"负数不能计算平方根\"", ")", ";\n                }\n            }\n            ", "///////////////////////////////////////////实现数据的记忆功能///////////////////////////////////", "\n            ", "if", "(s.equals(", "\"清除\"", ")) {", "//清空存储数据", "\n                txfResult.set", "Text(", "\"\"", ")", ";\n                dM=", "0", "d;\n                newDigital=", "true", ";\n            }\n            ", "if", "(s.equals(", "\"保存\"", ")) {\n                ", "if", "(txfM.get", "Text()", ".trim", "()", "!=", "\"\"", ") {\n                    txfResult.set", "Text(", "\"\"", "+", "dM", ")", ";", "//显示存储数字当前值", "\n                }\n            }\n            ", "if", "(s.equals(", "\"查看\"", ")) {\n                dM=", "Double", ".", "parse", "Double(", "txfResult", ".", "getText", "()", ".trim", "()", ");\n                    txfM.set", "Text(", "\"M\"", ")", ";", "//存储区显示M", "\n            }    \n        }\n        \n```java\n\n\n", "\n", "    ", "public", " ", "void", " pressBackspace1() {//处理当按下C键时，第一个文本框输入的数字回退一位//\n        String ", "text", "=textField.getText();\n        ", "int", " i=", "text", ".length();\n        ", "if", "(i>", "0", ") {\n            ", "text", "=", "text", ".substring(", "0", ", i", "-1", ");\n            ", "if", "(", "text", ".length()==", "0", ") {\n                textField.setText(\"\");\n                newDigital=", "true", ";\n            }", "else", " textField.setText(", "text", ");\n        }\n    }\n    ", "public", " ", "void", " pressBackspace2() {//处理当按下C键时，第二个文本框输入的数字回退一位//\n        String ", "text", "=textField2.getText();\n        ", "int", " i=", "text", ".length();\n        ", "if", "(i>", "0", ") {\n            ", "text", "=", "text", ".substring(", "0", ", i", "-1", ");\n            ", "if", "(", "text", ".length()==", "0", ") {\n                textField2.setText(\"\");\n                newDigital=", "true", ";\n            }", "else", " textField.setText(", "text", ");\n        }\n}\n", "\n", "}", "这是报错信息：", "Exception in thread \"AWT-EventQueue-0\" java.lang.NullPointerException: Cannot invoke \"javax.swing.JTextField.getText()\" because \"this.txfResult\" is null", "    at cal.Calculation.actionPerformed(Calculation.java:207)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;需要排序的列添加&amp;lt;th&lt;u&gt;&lt;strong&gt; class&amp;#61;&amp;#34;thsort&amp;#34;&lt;/strong&gt;&lt;/u&gt;&amp;gt;缴费状态&amp;lt;/th&amp;gt;就行了&amp;#xff0c;帮助到你可以点击&lt;u&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/u&gt;支持下哦&amp;#xff0c;谢谢~~&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" src=\"https://img-ask.csdnimg.cn/upload/1622707895583.gif\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-html\"&gt;&amp;lt;table id&amp;#61;&amp;#34;MyTable&amp;#34; class&amp;#61;&amp;#34;table table-hover&amp;#34;&amp;gt;\n    &amp;lt;tr&amp;gt;\n        &amp;lt;th&amp;gt;学生姓名&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;联系电话&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;联系人姓名&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;联系人称谓&amp;lt;/th&amp;gt;\n        &amp;lt;th class&amp;#61;&amp;#34;thsort&amp;#34;&amp;gt;缴费状态&amp;lt;/th&amp;gt;\n        &amp;lt;th class&amp;#61;&amp;#34;thsort&amp;#34;&amp;gt;星级&amp;lt;/th&amp;gt;\n        &amp;lt;th class&amp;#61;&amp;#34;thsort&amp;#34;&amp;gt;提醒&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;项目&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;项目类别&amp;lt;/th&amp;gt;\n        &amp;lt;th&amp;gt;信息录入人&amp;lt;/th&amp;gt;\n    &amp;lt;/tr&amp;gt;\n    &amp;lt;tbody id&amp;#61;&amp;#34;adminTbody&amp;#34;&amp;gt;\n        &amp;lt;tr&amp;gt;\n            &amp;lt;td&amp;gt;学生1&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;联系电话1&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;家长1&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;本人1&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;尚未录取&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;1级&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;需要1&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目1&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目类别1&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;超级管理员&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;\n                &amp;lt;a href&amp;#61;&amp;#34;{&lt;!-- --&gt;{ $obj-&amp;gt;id }}/detail&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-primary&amp;#34;&amp;gt;详细/修改&amp;lt;/a&amp;gt;\n                &amp;lt;a&amp;gt;\n                    &amp;lt;button type&amp;#61;&amp;#34;button&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-danger&amp;#34; data-toggle&amp;#61;&amp;#34;modal&amp;#34; data-target&amp;#61;&amp;#34;#modal-danger&amp;#34;&amp;gt;\n                        删除\n                    &amp;lt;/button&amp;gt;\n                &amp;lt;/a&amp;gt;\n            &amp;lt;/td&amp;gt;\n        &amp;lt;/tr&amp;gt;\n        &amp;lt;tr&amp;gt;\n            &amp;lt;td&amp;gt;学生2&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;联系电话2&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;家长2&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;本人2&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;已缴费报名&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;2级&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;需要2&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目2&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目类别2&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;超级管理员&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;\n                &amp;lt;a href&amp;#61;&amp;#34;{&lt;!-- --&gt;{ $obj-&amp;gt;id }}/detail&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-primary&amp;#34;&amp;gt;详细/修改&amp;lt;/a&amp;gt;\n                &amp;lt;a&amp;gt;\n                    &amp;lt;button type&amp;#61;&amp;#34;button&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-danger&amp;#34; data-toggle&amp;#61;&amp;#34;modal&amp;#34; data-target&amp;#61;&amp;#34;#modal-danger&amp;#34;&amp;gt;\n                        删除\n                    &amp;lt;/button&amp;gt;\n                &amp;lt;/a&amp;gt;\n            &amp;lt;/td&amp;gt;\n        &amp;lt;/tr&amp;gt;\n        &amp;lt;tr&amp;gt;\n            &amp;lt;td&amp;gt;学生3&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;联系电话3&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;家长3&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;本人3&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;尚未录取&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;3级&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;需要3&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目3&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目类别3&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;超级管理员&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;\n                &amp;lt;a href&amp;#61;&amp;#34;{&lt;!-- --&gt;{ $obj-&amp;gt;id }}/detail&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-primary&amp;#34;&amp;gt;详细/修改&amp;lt;/a&amp;gt;\n                &amp;lt;a&amp;gt;\n                    &amp;lt;button type&amp;#61;&amp;#34;button&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-danger&amp;#34; data-toggle&amp;#61;&amp;#34;modal&amp;#34; data-target&amp;#61;&amp;#34;#modal-danger&amp;#34;&amp;gt;\n                        删除\n                    &amp;lt;/button&amp;gt;\n                &amp;lt;/a&amp;gt;\n            &amp;lt;/td&amp;gt;\n        &amp;lt;/tr&amp;gt;\n        &amp;lt;tr&amp;gt;\n            &amp;lt;td&amp;gt;学生4&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;联系电话4&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;家长4&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;本人4&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;已缴费报名&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;4级&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;需要4&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目4&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;项目类别4&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;超级管理员&amp;lt;/td&amp;gt;\n            &amp;lt;td&amp;gt;\n                &amp;lt;a href&amp;#61;&amp;#34;{&lt;!-- --&gt;{ $obj-&amp;gt;id }}/detail&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-primary&amp;#34;&amp;gt;详细/修改&amp;lt;/a&amp;gt;\n                &amp;lt;a&amp;gt;\n                    &amp;lt;button type&amp;#61;&amp;#34;button&amp;#34; class&amp;#61;&amp;#34;btn btn-xs btn-danger&amp;#34; data-toggle&amp;#61;&amp;#34;modal&amp;#34; data-target&amp;#61;&amp;#34;#modal-danger&amp;#34;&amp;gt;\n                        删除\n                    &amp;lt;/button&amp;gt;\n                &amp;lt;/a&amp;gt;\n            &amp;lt;/td&amp;gt;\n        &amp;lt;/tr&amp;gt;\n    &amp;lt;/tbody&amp;gt;\n&amp;lt;/table&amp;gt;\n&amp;lt;style&amp;gt;.thsort{user-select:none;cursor:pointer}&amp;lt;/style&amp;gt;\n&amp;lt;script&amp;gt;\n    function trim(v) { return v.replace(/^\\s*|\\s*/g, &amp;#39;&amp;#39;); }\n    function sortByThis(e) {\n        var cell &amp;#61; this,index &amp;#61; cell.cellIndex, toDesc &amp;#61; cell.getAttribute(&amp;#39;sort&amp;#39;) &amp;#61;&amp;#61; &amp;#39;asc&amp;#39;;\n        cell.setAttribute(&amp;#39;sort&amp;#39;, toDesc ? &amp;#39;desc&amp;#39; : &amp;#39;asc&amp;#39;);\n        var adminTbody &amp;#61; document.getElementById(&amp;#39;adminTbody&amp;#39;), tds &amp;#61; Array.from(adminTbody.querySelectorAll(&amp;#39;tr td:nth-child(&amp;#39; &amp;#43; (index &amp;#43; 1) &amp;#43; &amp;#39;)&amp;#39;));\n        tds.sort((a, b) &amp;#61;&amp;gt; {\n            return trim((toDesc ? b : a).innerText).localeCompare(trim((toDesc ? a : b).innerText))\n        });\n        for (var td of tds) {\n            adminTbody.appendChild(td.parentNode);\n        }\n    }\n    document.querySelectorAll(&amp;#39;#MyTable .thsort&amp;#39;).forEach(th &amp;#61;&amp;gt; { th.onclick &amp;#61; sortByThis })\n&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["js实现的点击表格th属性 下方的td排序问题", ["  新手提问，感谢大神的解答。 目前的一个table属性下的th表头以及td数据的循环，但是td属性多为汉字的文字串 ， 请问有何办法能实现点击表头，下方相同的文字串集合道一起的排序效果。下方目前情况.", "\n\n", " ", "\n\n", "控制器内代码省略", "\n\n", " ", "\n\n", "js:", "\n\n", "\n\n", " ", "\n\n", "html:", "\n\n", "\n@extends('layout', ['nav' => '招生管理'])\n\n@section('title','学生详细')\n\n@section('content')\n\n    <script src=\"{{ asset('js/script2.js') }}\"></script>\n\n{{--    --}}{{--搜索表单,默认为get请求--}}\n{{--    <form>--}}\n{{--        <input type=\"text\" name=\"keyword\" value=\"{{Request::input('keyword')}}\">--}}\n{{--        <span>--}}\n{{--            <button type=\"submit\">搜索</button>--}}\n{{--   </span>--}}\n{{--    </form>--}}\n\n\n    {{--已录入信息,搜索--}}\n<style>\n    .draft {margin-left: 20px;margin-bottom: 5px}\n</style>\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"box\">\n                <div class=\"box-header\">\n\n                    <h3 class=\"box-title\">已录入信息</h3>\n                        <a href=\"draft/index\"><button type=\"submit\" name=\"action\" value=\"draft\" class=\"btn btn-xs btn-github draft\">我的草稿</button></a>\n                <form action=\"\" method=\"get\" class=\"box-tools\">\n                    <div class=\"box-tools\">\n                        <div class=\"input-group input-group-sm hidden-xs\" style=\"width: 750px;\">\n                            <input  type=\"text\" name=\"table_search\" id=\"MyInput\" placeholder=\"姓名\" onkeydown=\"if(event.keyCode==13){return false;}\" onkeyup=\"myFunction()\" value=\"{{ request()->get('table_search','') }}\" class=\"form-control pull-right\" placeholder=\"Search\">\n\n{{--                            <div class=\"input-group-btn\">--}}\n{{--                                <button type=\"submit\" class=\"btn btn-default\"><i class=\"fa fa-search\"></i></button>--}}\n{{--                            </div>--}}\n                        </div>\n                    </div>\n                </form>\n                </div>\n                <div onLoad=\"goPage(1,10);\">\n                <div class=\"box-body table-responsive no-padding\">\n                    <table id=\"MyTable\" class=\"table table-hover\">\n                        <tr>\n                            <th>学生姓名</th>\n                            <th>联系电话</th>\n                            <th>联系人姓名</th>\n                            <th>联系人称谓</th>\n                            <th>缴费状态</th>\n                            <th>星级</th>\n                            <th>提醒</th>\n                            <th>项目</th>\n                            <th>项目类别</th>\n                            <th>信息录入人</th>\n                        </tr>\n                       @foreach($data as $obj)\n                            <tbody id=\"adminTbody\">\n                            <tr>\n                            <input type=\"hidden\"  name=\"student_id\" value=\"{{ $obj->id }}\">\n                            <td>{{ $obj->name }}</td>\n                            <td>{{ $obj->tel }}</td>\n                            <td>{{ $obj->contact_name }}</td>\n                            <td>{{ $obj->contact_relation }}</td>\n                            <td>{{ $obj->get_payment_name($obj->id) }}</td>\n                            <td>{{ $obj->star_lv.'级' }}</td>\n                            <td> @if($obj->notification == '1')\n                                    {{ '需要' }}\n                                 @elseif($obj->notification == '0')\n                                     {{ '不需要' }}\n                                 @endif\n                            </td>\n                            <td>{{ $obj->get_projects($obj->id) }}</td>\n                            <td>{{ $obj->get_project_type_name($obj->id) }}</td>\n                            <td>{{ $obj->get_user_name($obj->id) }}</td>\n                            <td>\n                                <a href=\"{{ $obj->id }}/detail\" class=\"btn btn-xs btn-primary\">详细/修改</a>\n                                <a><button type=\"button\" class=\"btn btn-xs btn-danger\" data-toggle=\"modal\" data-target=\"#modal-danger\">\n                                        删除</button></a>\n\n                                <div class=\"modal modal-danger fade\" id=\"modal-danger\">\n                                    <div class=\"modal-dialog\">\n                                        <div class=\"modal-content\">\n                                            <div class=\"modal-header\">\n                                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                    <span aria-hidden=\"true\">&times;</span></button>\n                                                <h4 class=\"modal-title\">警告</h4>\n                                            </div>\n                                            <div class=\"modal-body\">\n                                                <p>是否确认删除？</p>\n                                            </div>\n                                            <div class=\"modal-footer\">\n                                                <button type=\"button\" class=\"btn btn-outline pull-left\" data-dismiss=\"modal\">取消</button>\n                                                <a href=\"{{ $obj->id }}/delete\"><button type=\"button\" class=\"btn btn-outline\">确定</button></a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                            </tbody>\n                        @endforeach\n                    </table>\n                </div>\n                </div>\n                </div>\n            </div>\n        </div>\n\n\n<div class=\"box-footer clearfix\">\n    <ul class=\"pagination pagination-sm no-margin pull-right\">\n        <li><a href=\"{{ $data->withQueryString()->previousPageUrl() }}\"><</a></li>\n        @for($p = 1; $p <= ceil($data->total() / $data->perpage()); $p++)\n            <li><a href=\"{{ $data->withQueryString()->url($p) }}\">{{ $p }}</a></li>\n        @endfor\n        <li><a href=\"{{ $data->withQueryString()->nextPageUrl() }}\">></a></li>\n    </ul>\n</div>      {{-- 此处为paginate分页，貌似需改为js--}}\n\n\n\n\n\n@endsection\n", "\n\n", "实际显示:", "\n\n", " ", "\n\n", "谢谢~！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;此问题已经解决&amp;#xff0c;使用checkbutton的command命令承载button的normal或diasbled功能即可。&lt;br /&gt;不在时间线程判断button状态。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["tkinter判断button状态偶尔报错？", ["\n\n# -*- coding: utf-", "8", " -*-\n", "\"\"", "\"", "\n#导入库\nimport tkinter ", "as", " tk \nimport os\nimport time\nimport serial.tools.list_ports\nimport threading\n\ndef Selection():\n    pass\ndef Savefile(dd):\n    OutputText.", "delete", "(", "1.0", ",tk.END)\n    OutputText.", "insert", "(tk.END, dd)\n    filepath = filePath.", "get", "()\n    filename = time.", "strftime", "(", "\"%Y-%m-%d\"", ", time.", "localtime", "())\n    wholename = os.path.", "join", "(filepath, filename) #完整的路径+文件名(无后缀)\n    ", "if", " os.path.", "exists", "(filepath) == False:\n        os.", "mkdir", "(filepath) \n    with ", "open", "(wholename+", "'.txt'", ", ", "'a'", ") ", "as", " f1:\n        ", "ls", " = dd +", "' '", "+ time.", "strftime", "(", "\"%Y-%m-%d %H:%M:%S\"", ", time.", "localtime", "()) +", "'\\n'", "#\\t表示", "4", "个空格\n        f1.writelines(", "ls", ")\n\ndef Readser1():\n    #global data1 作为参数传给savefile函数，savefile函数不调用data1了，所以不用声明全局变量了\n    ", "while", " t1_flag:\n        ", "try", ":\n            data1=ser1.readline()#readall如果", "sleep", "时间太短可能会发生数据截断，使用readline按行读取用初始化的timeout控制读取时限\n            #ser1.flushInput()缓冲区清理基本用不上\n            data1 = data1.decode(", "'ASCII'", ")\n            ", "if", " ", "len", "(data1)>", "0", ":\n                Savefile(data1.rstrip())\n                ddaa=[]\n                data=data1.", "split", "(", "' '", ")\n                ", "for", " i in data:\n                    ", "if", " ", "len", "(i)>", "0", ":\n                        ddaa.", "append", "(i)\n                \n                labelyali1.configure(text=ddaa[", "len", "(ddaa)-", "3", "])#原始数据后边空格接了回车符，多了一个", "len", "数，所以减去", "2", "和", "3", "\n                labeljieguo1.configure(text=ddaa[", "len", "(ddaa)-", "2", "])\n            time.", "sleep", "(", "0.5", ")\n        except Exception ", "as", " ", "e", ":\n            ", "print", "(", "\"错误: \"", ", ", "e", ")\ndef Readser2():\n    #global data2\n    ", "while", " t2_flag:\n        ", "try", ":\n            data2=ser2.readline()\n            #ser2.flushInput()\n            data2 = data2.decode(", "'ASCII'", ")\n            ", "if", " ", "len", "(data2)>", "0", ":\n                Savefile(data2.rstrip())\n                ddaa=[]\n                data=data2.", "split", "(", "' '", ")\n                ", "for", " i in data:\n                    ", "if", " ", "len", "(i)>", "0", ":\n                        ddaa.", "append", "(i)\n                labelyali2.configure(text=ddaa[", "len", "(ddaa)-", "3", "])\n                labeljieguo2.configure(text=ddaa[", "len", "(ddaa)-", "2", "])\n            time.", "sleep", "(", "0.5", ")\n        except Exception ", "as", " ", "e", ":\n            ", "print", "(", "\"错误: \"", ", ", "e", ")\ndef Start():\n    ", "global", " t1_flag\n    t1_flag=True\n    ", "global", " t2_flag\n    t2_flag=True\n    \n    l1.config(state=", "'disable'", ")\n    l2.config(state=", "'disable'", ")\n    l3.config(state=", "'disable'", ")\n    btnStop[", "'state'", "]= ", "'normal'", "\n    btnStart[", "'state'", "] = ", "'disabled'", "\n    entryfilePath.configure(state = ", "'disabled'", ")\n    Serlist()\n    ", "if", " plcflag.", "get", "() == ", "1", ":   \n            ", "print", "(", "'plc'", ")\n    ", "if", " serflag_1.", "get", "() == ", "1", ":#串口初始化并启动串口线程\n        ", "try", ":#防止串口报错退出主程序，使用", "try", "结构忽略报错\n            ser1.port = ", "'COM12'", "   #端口号\n            ser1.baudrate = ", "9600", "  #波特率\n            ser1.bytesize=serial.EIGHTBITS\n            ser1.timeout = ", "3", "     #超时设置，", "1", "s未读取到数据则返回结果\n            ser1.stopbits=serial.STOPBITS_ONE#", "1", "停止位\n            ser1.parity=serial.PARITY_NONE#无校验\n            ser1.", "open", "()   #打开串口\n        except Exception ", "as", " ", "e", ":\n            ", "print", "(", "\"错误: \"", ", ", "e", ")\n        t1=threading.Thread(target=Readser1)#线程指向readser1\n        t1.start()\n        \n    ", "if", " serflag_2.", "get", "() == ", "1", ":  \n        ", "try", ":\n            \n            ser2.port = ", "'COM12'", "   #端口号\n            ser2.baudrate = ", "9600", "  #波特率\n            ser2.bytesize=serial.EIGHTBITS\n            ser2.timeout = ", "3", "     #超时设置，", "1", "s未读取到数据则返回结果\n            ser2.stopbits=serial.STOPBITS_ONE#", "1", "停止位\n            ser2.parity=serial.PARITY_NONE#无校验\n            ser2.", "open", "()   #打开串口   \n        except Exception ", "as", " ", "e", ":\n            ", "print", "(", "\"错误: \"", ", ", "e", ")\n        t2=threading.Thread(target=Readser2)\n        t2.start()\n    \ndef Stop():\n    ", "global", " t1_flag\n    ", "global", " t2_flag\n    l1.config(state=", "'normal'", ")\n    l2.config(state=", "'normal'", ")\n    l3.config(state=", "'normal'", ")\n    btnStop[", "'state'", "] =", "'disabled'", "\n    btnStart[", "'state'", "] = ", "'normal'", "\n    ", "if", " serflag_1.", "get", "() == ", "1", ":\n        t1_flag=False\n        ", "if", " ser1.is_open:\n            ser1.", "close", "()\n    ", "if", " serflag_2.", "get", "() == ", "1", ": \n        t2_flag=False\n        ", "if", " ser2.is_open:\n            ser2.", "close", "()\n    ", "print", "(", "'lllllllllllllllllllllllllllllllllllllll'", ")\n    \ndef Serlist():\n    port_list = ", "list", "(serial.tools.list_ports.comports())\n    port_serial = []\n\n        #*******提取COM口的端口号*******\n    ", "if", " ", "len", "(port_list) <= ", "0", ":\n        RunInf.", "set", "(", "\"未找到端口！\"", ")    \n    ", "else", ":\n        ", "for", " i in ", "range", "(", "len", "(port_list)):\n            port_serial.", "append", "(", "list", "(port_list[i])[", "0", "])\n        \n        RunInf.", "set", "(port_serial)\n        #btnStart[", "'state'", "] = ", "'normal'", "\n    \n\ndef Showtime():\n        ", "while", " time_flag:\n            tt=time.", "strftime", "(", "\"%Y-%m-%d \\n %H:%M:%S\"", ", time.", "localtime", "())\n            labeltime.configure(text=tt)\n            ", "if", " btnStop[", "'state'", "] == ", "'disabled'", ":\n                ", "if", " plcflag.", "get", "() == ", "0", " ", "and", " serflag_1.", "get", "() == ", "0", " ", "and", " serflag_2.", "get", "() == ", "0", ":\n                    btnStart[", "'state'", "] = ", "'disabled'", "\n                ", "else", ":\n                    btnStart[", "'state'", "] = ", "'normal'", "\n            time.", "sleep", "(", "0.2", ")\n\nwindow = tk.Tk()#窗体变量定义\nwindow.title(", "'试漏工控机'", ")#定义窗体名称\nwindow.geometry(", "'900x600'", ")#定义主窗体尺寸\n \n", "l", " = tk.Label(window, width=", "15", ",bg=", "'red'", ",text=", "'实验室'", ",font = (", "'楷体'", ", ", "20", "))\n", "l", ".place(", "x", "=", "400", ",", "y", "=", "0", ",width=", "200", ",heigh=", "40", ")\n         \nplcflag = tk.IntVar()  # 定义plcflag和serflag_1整型变量用来存放选择行为返回值", "0", "或者", "1", "\nserflag_1 = tk.IntVar()\nserflag_2 = tk.IntVar()\n\nplcflag.", "set", "(", "0", ")  # 设置三个复选框的默认状态，", "1", "为选中，", "0", "为未选中\nserflag_1.", "set", "(", "1", ")\nserflag_2.", "set", "(", "0", ")\n\nl1 = tk.Checkbutton(window, text=", "'PLC抓取零件号'", ",font = (", "'楷体'", ", ", "12", "),variable=plcflag)   \nl1.place(", "x", "=", "10", ",", "y", "=", "60", ",width=", "130", ",heigh=", "20", ")\nl1.config(state=", "'normal'", ")\nl2 = tk.Checkbutton(window, text=", "'串口1抓取测量数据'", ",font = (", "'楷体'", ", ", "12", "),variable=serflag_1)\nl2.place(", "x", "=", "10", ",", "y", "=", "90", ",width=", "160", ",heigh=", "20", ")\nl2.config(state=", "'normal'", ")\nl3 = tk.Checkbutton(window, text=", "'串口2抓取测量数据'", ",font = (", "'楷体'", ", ", "12", "),variable=serflag_2)\nl3.place(", "x", "=", "10", ",", "y", "=", "120", ",width=", "160", ",heigh=", "20", ")\nl3.config(state=", "'normal'", ")\n\nbtnStart = tk.Button(window, text = ", "\"开始采集\"", ", ", "command", " = Start)\nbtnStart.place(", "x", "=", "10", ",", "y", "=", "200", ",width=", "80", ",heigh=", "30", ")\nbtnStop = tk.Button(window, text = ", "\"停止采集\"", ", state = ", "'disabled'", ",", "command", " = Stop)\nbtnStop.place(", "x", "=", "110", ",", "y", "=", "200", ",width=", "80", ",heigh=", "30", ")\n\n\nfilePath = tk.StringVar(value = os.", "getcwd", "())\nlabelfilePath = tk.Label(window,text = ", "'保存路径：'", ")\nlabelfilePath.place(", "x", "=", "10", ",", "y", "=", "500", ",width=", "80", ",heigh=", "20", ")\nentryfilePath = tk.Entry(window,width = ", "35", ", textvariable = filePath)\nentryfilePath.place(", "x", "=", "100", ",", "y", "=", "500", ",width=", "300", ",heigh=", "20", ")\n\nlabelRunInf = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text=", "\"串口列表：\"", ")\nRunInf = tk.StringVar(value = ", "'请勾选通信方式'", ")   #定义TK字符变量，储存提示信息\nlabelInf = tk.Label(window,font = (", "'楷体'", ", ", "15", "),textvariable = RunInf)\nlabelRunInf.place(", "x", "=", "0", ",", "y", "=", "10", ",width=", "100", ",heigh=", "20", ")\nlabelInf.place(", "x", "=", "100", ",", "y", "=", "10", ",width=", "150", ",heigh=", "20", ")\nlabeloil = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'油道(串口1)'", ")\nlabeloil.place(", "x", "=", "10", ",", "y", "=", "340", ",width=", "120", ",heigh=", "30", ")\nlabelwater = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'水道(串口2)'", ")\nlabelwater.place(", "x", "=", "10", ",", "y", "=", "380", ",width=", "120", ",heigh=", "30", ")\nlabelyali = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'测试压力'", ")\nlabelyali.place(", "x", "=", "350", ",", "y", "=", "300", ",width=", "120", ",heigh=", "30", ")\nlabeljieguo = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'测量结果'", ")\nlabeljieguo.place(", "x", "=", "550", ",", "y", "=", "300", ",width=", "120", ",heigh=", "30", ")\nlabelyali1=tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'测试压力'", ")\nlabelyali1.place(", "x", "=", "350", ",", "y", "=", "340", ",width=", "120", ",heigh=", "30", ")\nlabelyali2 = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'测试压力'", ")\nlabelyali2.place(", "x", "=", "350", ",", "y", "=", "380", ",width=", "120", ",heigh=", "30", ")\nlabeljieguo1 = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'测量结果'", ")\nlabeljieguo1.place(", "x", "=", "550", ",", "y", "=", "340", ",width=", "120", ",heigh=", "30", ")\nlabeljieguo2 = tk.Label(window,font = (", "'楷体'", ", ", "15", "), text = ", "'测量结果'", ")\nlabeljieguo2.place(", "x", "=", "550", ",", "y", "=", "380", ",width=", "120", ",heigh=", "30", ")\nOutputText = tk.Text(window, wrap = tk.WORD, width = ", "800", ", height = ", "40", ", font = (", "'TimesNewRoman'", ",", "10", "))\nOutputText.place(", "x", "=", "10", ",", "y", "=", "540", ",width=", "800", ",heigh=", "40", ")\n\nser1 = serial.Serial()#定义两个串口变量\nser2 = serial.Serial()\n\nlabeltime = tk.Label(window,text = ", "''", ")#定义时间标签\nlabeltime.place(", "x", "=", "800", ",", "y", "=", "0", ",width=", "100", ",heigh=", "40", ")#定义时间标签位置\n\ntime_flag=True#时间显示随窗口初始化就产生了，所以定义在主线程里面\nt=threading.Thread(target=Showtime)#定义时间线程\nt.start()#启动时间线程\n\ndef S_time(event):\n    ", "print", "(btnStop[", "'state'", "])\ndef Killtime(event):\n    ", "global", " time_flag#如果函数内部 修改 外部变量必须先声明为全局变量\n    ", "global", " t1_flag\n    ", "global", " t2_flag\n    t1_flag=False#这里发生修改动作，如果只是引用外部变量就不用声明全局变量\n    t2_flag=False\n    time_flag = False\nwindow.bind(", "'<Button-3>'", ",S_time)#在tk窗口绑定鼠标右键激发事件s-time\n\nwindow.bind(", "'<Destroy>'", ",Killtime)#在tk窗口绑定鼠标右键激发事件killtime\nwindow.mainloop()#窗体呈现，需要注意的是窗体循环执行的只有关键事件，例如按钮变量等等\n", "\n", "程序运行时偶尔会报错如下：", "\n", "Exception", " ", "in", " thread Thread", "-26", ":\nTraceback (most recent ", "call", " last):\n  File \"C:\\Users\\ni799\\AppData\\Local\\Continuum\\anaconda3\\lib\\threading.py\", ", "line", " ", "926", ", ", "in", " _bootstrap_inner\n    self.run()\n  File \"C:\\Users\\ni799\\AppData\\Local\\Continuum\\anaconda3\\lib\\threading.py\", ", "line", " ", "870", ", ", "in", " run\n    self._target(*self._args, **self._kwargs)\n  File \"C:/Users/ni799/.spyder-py3/tongxun.py\", ", "line", " ", "148", ", ", "in", " Showtime\n    ", "if", " btnStop[", "'state'", "] == ", "'disabled'", ":\n  File \"C:\\Users\\ni799\\AppData\\Local\\Continuum\\anaconda3\\lib\\tkinter\\__init__.py\", ", "line", " ", "1489", ", ", "in", " cget\n    ", "return", " self.tk.", "call", "(self._w, ", "'cget'", ", ", "'-'", " + key)\n_tkinter.TclError: invalid command ", "name", " \".!button2\"\n", "\n", "如果屏蔽对按钮状态的判断则不会报错，请问哪里有错误？请帮忙指正，十分感谢！", "屏蔽如下字段程序则不会报错：", "\n", "if btnStop['", "state", "'] == 'disabled':\n   if plcflag.get() == ", "0", " and serflag_1.get() == ", "0", " and serflag_2.get() == ", "0", ":\n        btnStart['", "state", "'] = 'disabled'\n   else:\n        btnStart['", "state", "'] = 'normal'\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case &amp;#39;3&amp;#39;://3、查询配对&lt;br /&gt;dancer.Chaxun();&lt;br /&gt;是指这个吗&amp;#xff1f;那Chaxun函数代码在哪&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["求看看代码有什么问题c++", ["\n", "#include <iostream>  ", "\n", "#include <fstream>   ", "\nusing namespace std;\n", "#include <stdio.h>", "\n", "#include <string.h>", "\n", "#include <stdlib.h>", "\n", "#include <ctype.h>", "\nconst int Msize_Person=", "100", ";  ", "//", "学生人数上限\nconst int Msize_Music=", "100", ";   ", "//", "歌曲数目上限\nconst int Msize_End=", "1000", ";  ", "//", "配对上限\nstruct Person  ", "//", "学生\n{\n    char name_p[", "30", "];  ", "//", "姓名\n    int num_p;  ", "//", "学生编号\n    char sex[", "6", "];  ", "//", "性别b", "/g(男/", "女)\n};\n\nstruct Music ", "//", "音乐\n{\n    int number_m;", "//", "歌曲编号\n    int order;", "//", "歌序号\n    char name_m[", "30", "];", "//", "歌曲名\n    char singer[", "30", "];", "//", "歌手名\n};\n\nstruct MatchList", "//", "配对列表\n{\n    int num_b;", "//", "男编号\n    int num_g;", "//", "女编号\n    char name_b[", "30", "];", "//", "男姓名\n    char name_g[", "30", "];", "//", "女姓名\n    char sex_b[", "6", "];", "//", "男性别\n    char sex_g[", "6", "];", "//", "女性别\n    char neme_me[", "30", "];", "//", "歌名\n    char singer_e[", "30", "];", "//", "歌手\n    int number_me;", "//", "歌编号\n    int order_e;", "//", "歌曲序号\n};\n\nclass Dance  ", "//", "舞伴类\n{\npublic:\n    Dance(); ", "//", "构造函数\n    void Menu();  ", "//", "主界面\n    void Display_e();", "//", "2", "、显示每曲配对\n    void Chaxun(); ", "//", "3", "、查询配对\n    void Add();", "//", "4", "、添加信息\n    void Reset(); ", "//", "配对列表重置\n    void Match(); ", "//", "自动配\n    void Add_P();", "//", "添加学生\n    void Add_M();", "//", "添加歌曲\n    void Display_p();", "//", "显示学生\n    void Display_m();", "//", "显示歌曲\n    void Menu_c();", "//", "查询配对\n    void Menu_xinximo();", "//", "音乐录入\n    void Menu_xinxipo();", "//", "学生录入\n    void Menu_add();", "//", "添加信息主界面\nprivate:\n    int front_b,rear_b;", "//", "队头，队尾\n    int front_g,rear_g;\n    int front_m,rear_m;\n    int front_e,rear_e;\n    int Num_B; \n    int Num_G; \n    int Num_M;\n    int Min;", "//", "较少队列人数\n    int count;", "//", "学生总人数 用于学生编号\n    int FLOG;", "//", "\n    Person Que_Boy[Msize_Person]; ", "//", "1", " 男生队列\n    Person Que_Girl[Msize_Person]; ", "//", "2", " 女生队列\n    Music Que_Music[Msize_Music]; ", "//", "3", " 歌曲队列\n    MatchList Que_End[Msize_End]; ", "//", "4", " 配对队列\n};\n\nDance::Dance() \n{\n    Num_B=Num_G=Num_M=count=", "0", ";", "//", "男女生、歌曲数初始化为", "0", "\n    front_b=rear_b=Msize_Person-", "1", ";", "//", "初始化队列\n    front_g=rear_g=Msize_Person-", "1", ";\n    front_m=rear_m=Msize_Music-", "1", ";\n    front_e=rear_e=Msize_End-", "1", ";\n}\n\nvoid Dance::Menu()  ", "//", "主界面 *\n{\n    cout<<", "\"\\t\\t-----------------------------------------\"", "<<endl;\n    cout<<", "\"\\t\\t---        欢迎进入舞池配对系统       ---\"", "<<endl;\n    cout<<", "\"\\t\\t---   1、添加信息       2、每曲配对   ---\"", "<<endl;\n    cout<<", "\"\\t\\t---   3、查询信息       4、退出系统   ---\"", "<<endl;\n    cout<<", "\"\\t\\t-----------------------------------------\"", "<<endl;\n}\n\n\nvoid Dance::Menu_xinximo()", "//", "手动录入歌曲 *\n{\n    cout<<", "\"\\t\\t*************************************\"", "<<endl;\n    cout<<", "\"\\t\\t*****    歌曲信息已保存至系统   *****\"", "<<endl;\n    cout<<", "\"\\t\\t*****    请选择您的操作         *****\"", "<<endl;\n    cout<<", "\"\\t\\t*****    1、继续添加            *****\"", "<<endl;\n    cout<<", "\"\\t\\t*****    2、返回上一级          *****\"", "<<endl;\n    cout<<", "\"\\t\\t*************************************\"", "<<endl;\n}\n\nvoid Dance::Menu_xinxipo()", "//", "手动录入学生 *\n{\n    cout<<", "\"\\t\\t*************************************\"", "<<endl;\n    cout<<", "\"\\t\\t*****    学生信息已保存至系统   *****\"", "<<endl;\n    cout<<", "\"\\t\\t*****    请选择您的操作         *****\"", "<<endl;\n    cout<<", "\"\\t\\t*****    1、继续添加            *****\"", "<<endl;\n    cout<<", "\"\\t\\t*****    2、返回上一级          *****\"", "<<endl;\n    cout<<", "\"\\t\\t*************************************\"", "<<endl;\n}\n\nvoid Dance::Add_P()", "//", "添加学生\n{\n    int flog_p1,flog_po,i,n_p;\n    char sel_po;\n    flog_p1=", "1", ";\n    ", "while", "(flog_p1)\n    {", "//", "_\n        cout<<", "\"请输入添加人数：\"", "<<endl;\n        cin>>n_p;\n        ", "if", "(n_p>", "0", ")\n            cout<<", "\"姓名\\t性别(b/g)\"", "<<endl;  ", "//", "录入信息完成\n        ", "for", "(i=", "0", ";i<n_p;i++) ", "//", "添加学生信息\n        {", "//", "+\n            char name_i[", "30", "],sex_i[", "6", "];\n            cin>>name_i>>sex_i;\n            ", "if", "((strcmp(sex_i,", "\"b\"", "))==", "0", ")", "//", "男生入队\n            {\n                int rear_ab;\n                rear_ab=(rear_b+", "1", ")%Msize_Person;\n                rear_b=(rear_b+", "1", ")%Msize_Person;\n                ", "if", "(front_b!=rear_b)\n                {\n                    strcpy(Que_Boy[rear_b].name_p,name_i);\n                    strcpy(Que_Boy[rear_b].sex,sex_i);\n                    Que_Boy[rear_b].num_p=count+", "1", ";", "//", "从", "1", "开始编号\n                    Num_B=Num_B+", "1", ";", "//", "男队人数加一\n                    count++;\n                    ofstream outfile(", "\"student1.txt\"", ",ios::app);", "//", "男生写入文件\n                    ", "if", "(!outfile)\n                    {cout<<", "\"open error!\"", "<<endl;    ", "exit", "(", "1", ");    \n                    }\n                    ", "else", "//", "写入到文件\n                    {\n                        outfile.write((char*)&Que_Boy[rear_ab],sizeof(Que_Boy));\n                    }\n                }\n                ", "else", "{cout<<", "\"\\t队列已满\"", "<<endl;}\n            }\n            ", "else", " ", "if", "((strcmp(sex_i,", "\"g\"", "))==", "0", ")", "//", "女生入队\n            {\n                int rear_ag;\n                rear_ag=(rear_g+", "1", ")%Msize_Person;\n                rear_g=(rear_g+", "1", ")%Msize_Person;\n                ", "if", "(front_b!=rear_b)\n                {\n                    strcpy(Que_Girl[rear_g].name_p,name_i);\n                    strcpy(Que_Girl[rear_g].sex,sex_i);\n                    Que_Girl[rear_g].num_p=count+", "1", ";", "//", "从", "1", "开始编号\n                    Num_G=Num_G+", "1", ";", "//", "加一\n                    count++;", "//", "女队人数\n                    ofstream outfile(", "\"student1.txt\"", ",ios::app);", "//", "女生写入文件\n                    ", "if", "(!outfile)\n                    {cout<<", "\"open error!\"", "<<endl;    ", "exit", "(", "1", ");\n                    }\n                    ", "else", "//", "写入到文件\n                    {\n                        outfile.write((char*)&Que_Girl[rear_ag],sizeof(Que_Girl));\n                    }\n                }\n                ", "else", "{cout<<", "\"\\t队列已满\"", "<<endl;}\n            }\n            ", "else", "\n            {\n                cout<<", "\"\\t信息录入错误，请重新输入学生信息\"", "<<endl;\n                i--;\n            }\n        }", "//", "+\n        Min=(Num_G<=Num_B)?Num_G:Num_B;", "//", "较少队列人数\n        flog_po=", "1", ";\n        ", "while", "(flog_po)\n        {", "//", "=\n            Menu_xinxipo();", "//", "是否继续添加菜单\n            cin>>sel_po;\n            switch(sel_po)\n            {\n            case ", "'1'", ":", "//", "继续添加\n                flog_po=", "0", ";\n                ", "break", ";\n            case ", "'2'", ":", "//", "返回上一级  学生录入\n                flog_p1=", "0", ";", "//", "退出手动录入\n                flog_po=", "0", ";", "//", "返回上一级\n                ", "break", ";\n            default:\n                cout<<", "\"输入错误，请重新输入\"", "<<endl;\n                ", "break", ";\n            }\n        }", "//", "=\n    }", "//", "_\n}\n\nvoid Dance::Add_M()", "//", "添加歌曲\n{\n    int j;\n    int flog_m1,flog_mo,n_m;\n    char sel_mo;\n    flog_m1=", "1", ";\n    ", "while", "(flog_m1)\n    {\n        cout<<", "\"输入歌曲数目\"", "<<endl;\n        cin>>n_m;\n        char name_mi[", "30", "],singeri[", "30", "];\n        ", "if", "(n_m>", "0", ")\n            cout<<", "\"歌名\"", "<<", "\"\\t歌手\"", "<<endl;\n        ", "for", "(j=", "0", ";j<n_m;j++)\n        {\n            int rear_am;\n            rear_am=(rear_m+", "1", ")%Msize_Music;\n            cin>>name_mi>>singeri;\n            rear_m=(rear_m+", "1", ")%Msize_Music;\n            ", "if", "(rear_m!=front_m)\n            {\n                strcpy(Que_Music[rear_m].name_m,name_mi);\n                strcpy(Que_Music[rear_m].singer,singeri);\n                Que_Music[rear_m].number_m=", "1", "+Num_M;", "//", "歌曲从", "1", "编号\n                Que_Music[rear_m].order=Num_M=Num_M+", "1", ";", "//", "歌曲序号\n                ofstream outfile(", "\"music1.txt\"", ",ios::app);", "//", "歌曲写入文件\n                ", "if", "(!outfile)\n                {\n                    cout<<", "\"open error!\"", "<<endl;\n                    ", "//", "exit", "(", "1", ");\n                }\n                ", "else", "//", "写入到文件\n                {\n                    outfile.write((char*)&Que_Music[rear_am],sizeof(Que_Music));\n                }\n            }\n            ", "else", "\n            {cout<<", "\"\\t队列已满\"", "<<endl;}\n        }\n        flog_mo=", "1", ";\n        ", "while", "(flog_mo)\n        {\n            Menu_xinximo();\n            cin>>sel_mo;\n            switch(sel_mo)\n            {\n            case ", "'1'", ":", "//", "继续添加\n                flog_mo=", "0", ";\n                ", "break", ";\n            case ", "'2'", ":", "//", "返回上一级  歌曲录入\n                flog_m1=", "0", ";", "//", "退出手动录入\n                flog_mo=", "0", ";", "//", "返回上一级\n                ", "break", ";\n            default:\n                cout<<", "\"输入错误，请重新输入\"", "<<endl;\n                ", "break", ";\n            }\n        }\n    }\n}\n\nvoid Dance::Menu_add()", "//", "4", "、添加信息 *\n{\n    cout<<", "\"\\t\\t*********************************\"", "<<endl;\n    cout<<", "\"\\t\\t****       添加信息类别      ****\"", "<<endl;\n    cout<<", "\"\\t\\t****    1、添加歌曲信息      ****\"", "<<endl;", "//", "系统提供\n    cout<<", "\"\\t\\t****    2、添加学生信息      ****\"", "<<endl;\n    cout<<", "\"\\t\\t****    3、返回上一级菜单    ****\"", "<<endl;\n    cout<<", "\"\\t\\t*********************************\"", "<<endl;\n}\n\nvoid Dance::Add()", "//", "4", "、添加信息\n{\n    char sel_a;\n    int flog_a=", "1", ";\n    ", "while", "(flog_a==", "1", ")\n    {\n        Menu_add();\n        cin>>sel_a;\n        switch(sel_a)\n        {\n        case ", "'1'", ":", "//", "添加歌曲\n            Add_M();\n            ", "break", ";\n        case ", "'2'", ":", "//", "添加学生\n            Add_P();\n            ", "break", ";\n        case ", "'3'", ":", "//", "返回上一级\n            flog_a=", "0", ";\n            ", "break", ";\n        default:\n            cout<<", "\"\\t输入错误，请重新输入\"", "<<endl;\n            ", "break", ";\n        }\n    }\n}\n\nvoid Dance::Reset() ", "//", "匹配列表重置*\n{\n    front_e=rear_e=Msize_End-", "1", ";\n}\n\nvoid Dance::Display_e()", "//", "2", "、显示每曲配对信息\n{\n    int p,q;\n    int f_d,min_d;\n    min_d=Min;\n    f_d=(front_e+", "1", ")%Msize_End;\n    ", "if", "(FLOG!=", "0", ")\n    {\n        Match();", "//", "匹配\n        ", "for", "(q=f_d;q<=rear_e;q=(q+min_d)%Msize_End)\n        {\n            cout<<", "\"\\t**********************************************************************\"", "<<endl;\n            cout<<", "\"\\t\\t\\t\\t歌序号\\t歌名\\t演唱者                              \"", "<<endl;\n            cout<<", "\"\\t\\t\\t\\t\"", "<<Que_End[q].number_me<<", "\"\\t\"", "<<Que_End[q].neme_me<<", "\"\\t\"", "<<Que_End[q].singer_e<<endl;", "//", "cout<<", "\"\\t\\t男生\\t\\t女生\"", "<<endl;\n            cout<<", "\"\\t----------------------------------------------------------------------\"", "<<endl;\n            cout<<", "\"\\t编号\\t\\t姓名\\t性别\\t\\t编号\\t\\t姓名\\t性别                  \"", "<<endl;\n            ", "for", "(p=f_d;p<min_d+f_d;p=(p+", "1", ")%Msize_End)\n                cout<<", "\"\\t\"", "<<Que_End[p].num_b<<", "\"\\t\"", "<<Que_End[p].name_b<<", "\"\\t\"", "<<Que_End[p].sex_b<<", "\"\\t\\t\"", "<<Que_End[p].num_g<<", "\"\\t\"", "<<Que_End[p].name_g<<", "\"\\t\"", "<<Que_End[p].sex_g<<endl;\n            cout<<", "\"\\t**********************************************************************\"", "<<endl;\n            f_d=(f_d+min_d)%Msize_End;\n        }\n        Reset();", "//", "匹配队列归零\n    }\n    ", "else", "\n    {\n        ", "if", "(Num_B==", "0", ")\n            cout<<", "\"\\t\\t男生列表为空!\"", "<<endl;\n        ", "if", "(Num_G==", "0", ")\n            cout<<", "\"\\t\\t女生列表为空!\"", "<<endl;\n        ", "if", "(Num_M==", "0", ")\n            cout<<", "\"\\t\\t音乐列表为空!\"", "<<endl;\n        cout<<", "\"\\t\\t无法进行配对!\"", "<<endl;\n    }\n}\n\nvoid Dance::Menu_c()", "//", "//", "3", "、查询配对主界面 *\n{\n    cout<<", "\"\\t\\t*************************************\"", "<<endl;\n    cout<<", "\"\\t\\t****     选择查询信息            ****\"", "<<endl;\n    cout<<", "\"\\t\\t****   1、第K曲配对              ****\"", "<<endl;\n    cout<<", "\"\\t\\t****   2、男女配对情况           ****\"", "<<endl;\n    cout<<", "\"\\t\\t****   3、学生信息               ****\"", "<<endl;\n    cout<<", "\"\\t\\t****   4、歌曲信息               ****\"", "<<endl;\n    cout<<", "\"\\t\\t****   5、返回上一级             ****\"", "<<endl;\n    cout<<", "\"\\t\\t*************************************\"", "<<endl;\n    \n}\n\nvoid Dance::Display_m()", "//", "显示歌曲列表\n{\n    int m,i;", "//", ",x;\n    m=(front_m+", "1", ")%Msize_Music;\n    ", "if", "(Num_M==", "0", ")\n        cout<<", "\"\\t歌曲列表为空\"", "<<endl;\n    ", "else", "\n    {\n        cout<<", "\"歌曲列表\"", "<<endl;\n        ", "for", "(i=", "0", ";i<Num_M;i++)\n        {\n            cout<<", "\"\\t\\t歌名\"", "<<", "\"\\t\\t歌手\"", "<<", "\"\\t\\t编号\"", "<<endl;\n            cout<<", "\"\\t\\t\"", "<<Que_Music[m].name_m<<", "\"\\t\\t\"", "<<Que_Music[m].singer<<", "\"\\t\\t\"", "<<Que_Music[m].number_m<<endl;\n            m=(m+", "1", ")%Msize_Music;\n        }\n    }\n}\n\nvoid Dance::Display_p()", "//", "显示学生信息\n{\n    int m,x,i;\n    m=(front_b+", "1", ")%Msize_Person;\n    x=(front_g+", "1", ")%Msize_Person;\n    ", "if", "(Num_B==", "0", ")\n        cout<<", "\"\\t男生列表为空\"", "<<endl;\n    ", "else", "\n    {\n        cout<<", "\"\\t\\t男生名单\"", "<<endl;\n        ", "for", "(i=", "0", ";i<Num_B;i++)\n        {\n            cout<<", "\"\\t\\t编号\\t\\t姓名\\t性别\"", "<<endl;\n            cout<<", "\"\\t\\t\"", "<<Que_Boy[m].num_p<<", "\"\\t\"", "<<Que_Boy[m].name_p<<", "\"\\t\"", "<<Que_Boy[m].sex<<endl;\n            m=(m+", "1", ")%Msize_Person;\n        }\n    }\n    ", "if", "(Num_G==", "0", ")\n        cout<<", "\"\\t女生列表为空\"", "<<endl;\n    ", "else", "\n    {\n        cout<<", "\"\\t\\t女生名单\"", "<<endl;\n        ", "for", "(i=", "0", ";i<Num_G;i++)\n        {\n            cout<<", "\"\\t\\t编号\\t\\t姓名\\t性别\"", "<<endl;\n            cout<<", "\"\\t\\t\"", "<<Que_Girl[x].num_p<<", "\"\\t\"", "<<Que_Girl[x].name_p<<", "\"\\t\"", "<<Que_Girl[x].sex<<endl;\n            x=(x+", "1", ")%Msize_Person;\n        }\n    }\n}\n\nvoid Dance::Chaxun() ", "//", "3", "、查询信息 *\n{\n    char sel_c;\n    int flog_c,flog_k,k1,k,x,y;\n    int i,p;", "//", "j,,q;\n    flog_c=", "1", ";\n    Match();", "//", "注：每次配对都需要对配对队列清零\n    ", "while", "(flog_c==", "1", ")\n    {\n        Menu_c();\n        cin>>sel_c;\n        switch(sel_c)\n        {\n        case ", "'1'", ":", "//", "第K曲配对情况\n            cout<<", "\"输入k:\"", ";", "//", "<<endl;\n            cin>>k1;\n            int n_k;\n            n_k=k1;\n            ", "if", "(k1>Num_M)\n                cout<<", "\"找不到该歌曲，可能是超出已有歌曲范围，请重新输入\"", "<<endl;\n            ", "else", "\n            {\n                flog_k=", "0", ";\n                ", "for", "(i=(front_e+", "1", ")%Msize_End;i<=rear_e;i=(i++)%Msize_End)\n                    ", "if", "(k1==Que_End[i].order_e)\n                    {\n                        flog_k=", "1", ";\n                        k1=i;\n                        ", "break", ";\n                    }\n                    ", "if", "(flog_k==", "1", ")\n                    {\n                        cout<<", "\"\\t**********************************************************************\"", "<<endl;\n                        cout<<", "\"\\t\\t\\t\\t第\"", "<<n_k<<", "\"曲配对情况如下：                                \"", "<<endl;\n                        cout<<", "\"\\t\\t\\t\\t歌编号\\t歌序号\\t歌名\\t演唱者                        \"", "<<endl;\n                        cout<<", "\"\\t\\t\\t\\t\"", "<<Que_End[k1].number_me<<", "\"\\t\"", "<<Que_End[k1].order_e<<", "\"\\t\"", "<<Que_End[k1].neme_me<<", "\"\\t\"", "<<Que_End[k1].singer_e<<endl;", "//", "cout<<", "\"\\t\\t男生\\t\\t女生\"", "<<endl;\n                        cout<<", "\"\\t----------------------------------------------------------------------\"", "<<endl;\n                        cout<<", "\"\\t编号\\t\\t姓名\\t性别\\t\\t编号\\t\\t姓名\\t性别                  \"", "<<endl;\n                        ", "for", "(p=k1;p<(k1+Min)%Msize_End;p=(p+", "1", ")%Msize_End)\n                            cout<<", "\"\\t\"", "<<Que_End[p].num_b<<", "\"\\t\"", "<<Que_End[p].name_b<<", "\"\\t\"", "<<Que_End[p].sex_b<<", "\"\\t\\t\"", "<<Que_End[p].num_g<<", "\"\\t\"", "<<Que_End[p].name_g<<", "\"\\t\"", "<<Que_End[p].sex_g<<endl;\n                        cout<<", "\"\\t**********************************************************************\"", "<<endl;\n                    }\n                    \n                    ", "else", "\n                        cout<<", "\"\\t未找到第k曲配对信息\"", "<<endl;\n            }\n            ", "break", ";\n        case ", "'2'", ":", "//", "男生(编号X)任意女生(编号Y), 在第K曲配对跳舞的情况\n            int count_c,k_b,k_g,k_m,n;\n            count_c=", "0", ";\n            cout<<", "\"输入男(x)女(y)生及歌曲(k)编号\"", "<<endl;\n            cin>>x>>y>>k;\n            n=k;\n            k_g=k_b=k_m=", "0", ";\n            ", "for", "(i=(front_e+", "1", ")%Msize_End;i<=rear_e;i=(i++)%Msize_End)\n                ", "if", "(k==Que_End[i].order_e)\n                {\n                    k=i;\n                    k_m=", "1", ";\n                    ", "break", ";\n                }\n                ", "for", "(i=(front_e+", "1", ")%Msize_End;i<=rear_e;i=(i++)%Msize_End)\n                {\n                    ", "if", "(x==Que_End[i].num_b)\n                        k_b=", "1", ";\n                    ", "if", "(y==Que_End[i].num_g)\n                        k_g=", "1", ";\n                }\n                ", "if", "(k_b!=", "1", ")\n                    cout<<", "\"找不到该男生，可能是超出范围\"", "<<endl;\n                ", "if", "(k_g!=", "1", ")\n                    cout<<", "\"找不到该女生，可能是超出范围\"", "<<endl;\n                ", "if", "(k_m!=", "1", ")\n                    cout<<", "\"找不到该歌曲，可能是超出范围\"", "<<endl;\n                ", "if", "(k_g==", "1", "&&k_b==", "1", "&&k_m==", "1", ")\n                {\n                    ", "for", "(i=k;i<(k+Min)%Msize_End;i=(i++)%Msize_End)\n                        ", "if", "(Que_End[i].num_b==x&&Que_End[i].num_g==y)\n                            count_c=", "1", ";\n                        ", "if", "(count_c==", "1", ")\n                            cout<<", "\"编号为\"", "<<x<<", "\"的男生与\"", "<<", "\"编号为\"", "<<y<<", "\"的女生在第\"", "<<n<<", "\"曲中为一对舞伴\"", "<<endl;\n                        ", "else", "\n                            cout<<", "\"编号为\"", "<<x<<", "\"的男生与\"", "<<", "\"编号为\"", "<<y<<", "\"的女生不能在第\"", "<<n<<", "\"曲中结成舞伴跳舞\"", "<<endl;\n                }\n                ", "break", ";\n        case ", "'3'", ":", "//", "学生信息\n            Display_p();\n            ", "break", ";\n        case ", "'4'", ":", "//", "歌曲信息\n            Display_m();\n            ", "break", ";\n        case ", "'5'", ":", "//", "返回上一级\n            flog_c=", "0", ";\n            ", "break", ";\n        default:\n            cout<<", "\"\\t输入错误，请重新输入\"", "<<endl;\n            ", "break", ";\n        }\n    }\n    Reset();", "//", "注：每次配对都需要对配对队列清零\n}\n\nvoid Dance::Match() ", "//", "自动配对\n{\n    int i,j,flog_e;", "//", "flog_e传出配对队列队尾\n    int f_b,f_g,f_m;", "//", ",f_e;", "//", "临时变量 男", "/女/", "歌队头\n    int min,n_m;", "//", ",max;", "//", "n_m临时歌曲数\n    int front_bl,rear_bl;\n    int front_gl,rear_gl;", "//i", "nt flog_lb,flog_lg;", "//", "控制将数据传入临时队列\n    f_b=front_b;\n    f_g=front_g;\n    f_m=front_m;\n    n_m=Num_M;", "//", "歌曲数\n    front_bl=rear_bl=Msize_Person-", "1", ";", "//", "临时队列初始化\n    front_gl=rear_gl=Msize_Person-", "1", ";", "//", "\n    Person Qb_lin[Msize_Person]; ", "//", "1", " 临时男队列\n    Person Qg_lin[Msize_Person]; ", "//", "2", " 临时女队列\n    ", "if", "(Num_G!=", "0", "&&Num_B!=", "0", "&&Num_M!=", "0", ")", "//", "如果一方信息为空，中止操作\n    {\n        FLOG=", "1", ";", "//", "没有列表为空\n        ", "while", "(f_b!=rear_b)", "//", "复制男生信息到临时队列\n        {\n            rear_bl=(rear_bl+", "1", ")%Msize_Person;\n            f_b=(f_b+", "1", ")%Msize_Person;\n            strcpy(Qb_lin[rear_bl].name_p,Que_Boy[f_b].name_p);\n            strcpy(Qb_lin[rear_bl].sex,Que_Boy[f_b].sex);\n            Qb_lin[rear_bl].num_p=Que_Boy[f_b].num_p;\n        }\n        ", "while", "(f_g!=rear_g)", "//", "复制女生信息到临时队列\n        {\n            rear_gl=(rear_gl+", "1", ")%Msize_Person;\n            f_g=(f_g+", "1", ")%Msize_Person;\n            strcpy(Qg_lin[rear_gl].name_p,Que_Girl[f_g].name_p);\n            strcpy(Qg_lin[rear_gl].sex,Que_Girl[f_g].sex);\n            Qg_lin[rear_gl].num_p=Que_Girl[f_g].num_p;\n        }\n        f_b=front_bl;", "//", "f_b/f_g重新赋初值\n        f_g=front_gl;\n        ", "for", "(j=", "0", ";j<Num_M;j++)\n        {\n            min=Min;", "//", "较少队人数\n            int rear_p;\n            rear_p=(f_m+", "1", ")%Msize_Music;\n            f_m=(f_m+", "1", ")%Msize_Music;\n            ", "for", "(i=", "0", ";i<min;i++)", "//", "配对，未完成\n            {\n                rear_e=(rear_e+", "1", ")%Msize_End;", "//", "配对循环加一\n                strcpy(Que_End[rear_e].neme_me,Que_Music[f_m].name_m);", "//", "歌曲", "//", "cout<<", "\"歌曲：\"", "<<Que_End[rear_e].neme_me<<endl;\n                strcpy(Que_End[rear_e].singer_e,Que_Music[f_m].singer);", "//", "歌手", "//", "cout<<", "\"歌手：\"", "<<Que_End[rear_e].singer_e<<endl;\n                Que_End[rear_e].number_me=Que_Music[f_m].number_m;", "//", "歌曲编号======\n                Que_End[rear_e].order_e=Que_Music[f_m].order;\n                front_bl=(front_bl+", "1", ")%Msize_Person;", "//", "男、女“出队”  临时男女队列\n                front_gl=(front_gl+", "1", ")%Msize_Person;", "//", "\n                rear_bl=(rear_bl+", "1", ")%Msize_Person;", "//", "匹配完毕 入临时队列\n                rear_gl=(rear_gl+", "1", ")%Msize_Person;", "//", "0", "=", "0", "=", "0", "=", "0", "=", "0", "=", "0", "=", "0", "=\n                strcpy(Que_End[rear_e].name_b,Qb_lin[front_bl].name_p);", "//", "配对 男---------\n                strcpy(Que_End[rear_e].sex_b,Qb_lin[front_bl].sex);\n                Que_End[rear_e].num_b=Qb_lin[front_bl].num_p;\n                strcpy(Que_End[rear_e].name_g,Qg_lin[front_gl].name_p);", "//", "女\n                strcpy(Que_End[rear_e].sex_g,Qg_lin[front_gl].sex);\n                Que_End[rear_e].num_g=Qg_lin[front_gl].num_p;", "//", "配对完毕-------------\n                strcpy(Qb_lin[rear_bl].name_p,Qb_lin[front_bl].name_p);", "//", "入队++++++++\n                strcpy(Qb_lin[rear_bl].sex,Qb_lin[front_bl].sex);\n                Qb_lin[rear_bl].num_p=Qb_lin[front_bl].num_p;\n                strcpy(Qg_lin[rear_gl].name_p,Qg_lin[front_gl].name_p);\n                strcpy(Qg_lin[rear_gl].sex,Qg_lin[front_gl].sex);\n                Qg_lin[rear_gl].num_p=Qg_lin[front_gl].num_p;", "//", "++++++++++\n                flog_e=rear_e;", "//", "配对 队尾\n                ofstream outfile(", "\"match.txt\"", ",ios::app);\n                ", "if", "(!outfile)\n                {\n                    cout<<", "\"学生文件打开失败!\"", "<<endl;", "//", "exit", "(", "1", ");\n                }\n                ", "else", "\n                {\n                    outfile.write((char*)&Qg_lin[rear_p],sizeof(Qg_lin));", "//", "二进制保存\n                }\n                outfile.close();\n            }\n        }\n    }\n    ", "else", "\n        FLOG=", "0", ";", "//", "有空列表\n}\n\nint main()\n{\n    int flog;\n    char selection;\n    flog=", "1", ";\n    Dance dancer;\n    ", "while", "(flog)\n    {\n        dancer.Menu();\n        cin>>selection;\n        switch(selection)\n        {\n        case ", "'1'", ":", "//", "1", "、信息录入\n            dancer.Add();\n            ", "break", ";\n        case ", "'2'", ":", "//", "2", "、显示配对信息\n            dancer.Display_e();\n            ", "break", ";\n        case ", "'3'", ":", "//", "3", "、查询配对\n            dancer.Chaxun();\n            ", "break", ";\n        case ", "'4'", ":", "//", "退出\n            cout<<", "\"谢谢使用系统界面，按任意键退出系统……\"", "<<endl;\n            flog=", "0", ";\n            ", "break", ";\n        default:\n            cout<<", "\"\\t输入错误，请重新输入\"", "<<endl;\n            ", "break", ";\n        }\n    }\n    return ", "0", ";\n}\n\n", "\n", "为什么查询男女配对这个部分我无法运行 输入编号之后按回车程序没有反应 也退出不了"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;replace_NA_with_sample &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;df&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n  &lt;span class=\"hljs-comment\"&gt;# 创建一个新的数据框&amp;#xff0c;用于存储替换缺失值后的结果&lt;/span&gt;\n  df2 &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  \n  &lt;span class=\"hljs-comment\"&gt;# 遍历每一列&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;col_name &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; colnames&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;df&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;# 提取当前列的向量&lt;/span&gt;\n    col_vec &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; df&lt;span class=\"hljs-punctuation\"&gt;[[&lt;/span&gt;col_name&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;# 判断当前列是否存在缺失值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;is.na&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;col_vec&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n      &lt;span class=\"hljs-comment\"&gt;# 抽样非缺失值&amp;#xff0c;并用抽样值替换缺失值&lt;/span&gt;\n      col_vec&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;is.na&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;col_vec&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; sample&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;col_vec&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;!&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;is.na&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;col_vec&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;is.na&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;col_vec&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; replace &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;TRUE&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n    &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;# 将当前列添加到新数据框中&lt;/span&gt;\n    df2&lt;span class=\"hljs-punctuation\"&gt;[[&lt;/span&gt;col_name&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; col_vec\n  &lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n  \n  &lt;span class=\"hljs-comment\"&gt;# 返回替换缺失值后的数据框&lt;/span&gt;\n  &lt;span class=\"hljs-built_in\"&gt;return&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;df2&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "循环控制", "Question": ["r语言编写一个函数满足条件", ["如图所示", "\n", "我先说一下我对这个问题的理解", "首先要提取列向量", "然后再用for循环结构和if控制结构判断每个向量是否=NA，等于就替换，不等直接+1判断下一个向量", "想法很美好，但不知道怎么搞…"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有其他部分的代码&amp;#xff0c;只能猜&amp;#xff0c;试试 gw.repaint();  或者 gw.Invalidate() . &lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/810512164976160.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["java调用repaint()方法，不会自动刷新", ["在尝试做一个贪吃蛇游戏，在做到蛇的移动的时候，需要一直不停地绘制蛇的最新位置，", "\n", "窗口的lunch方法：", "\n", " public void lunch", "()", "{\n        GameWin gw = ", "new", " ", "GameWin()", ";\n        ", "//窗口是否可见", "\n        gw.set", "Visible(", "true", ")", ";\n        ", "//设置窗口的大小", "\n        gw.set", "Size(600,600)", ";\n        ", "//设置窗口的位置在屏幕中央", "\n        gw.set", "LocationRelativeTo(", "null", ")", ";\n        ", "//设置窗口的标题", "\n        gw.set", "Title(", "\"贪吃蛇\"", ")", ";\n\n        ", "//添加while循环，使得蛇不停运动", "\n        ", "while", "(", "true", "){\n\n            repaint", "()", ";\n\n            ", "try", " {\n                ", "Thread", ".", "sleep(", "200", ");\n            } catch (InterruptedException e) {\n                e.print", "StackTrace()", ";\n            }\n        }\n    }\n\n", "\n", "\n绘制：\n```java\n public void paint(Graphics g) {\n        ", "//绘制灰色背景", "\n        g.set", "Color(Color.", "gray", ")", ";\n        ", "//绘制矩形", "\n        g.fill", "Rect(0,0,600,600)", ";\n        ", "//绘制网格,网格颜色和背景色不一样", "\n        g.set", "Color(Color.BLACK)", ";\n        ", "for", " (", "int", " i = ", "0", "; i < ", "20", "; i++) {\n            ", "//横线", "\n            g.draw", "Line(0,", "i", " ", "*", " 30,600,", "i", " ", "*", " 30)", ";\n            ", "//竖线", "\n            g.draw", "Line(", "i", " ", "*", " 30,0,", "i", " ", "*", " 30,600)", ";\n        }\n\n        ", "//绘制蛇头", "\n        ho.paint", "Self(", "g", ")", ";\n    }\n\n", "\n", "ho.paintSelf()方法：", "\n", "\n```", "java\n ", "public", " ", "void", " ", "paintSelf", "(Graphics g)", " ", "{\n        ", "move", "();\n        super.", "paintSelf", "(g);\n\n    }\n\n    ", "//控制蛇移动的方法", "\n    ", "public", " ", "void", " ", "move", "()", "{\n        ", "//先对蛇头的方向判断", "\n        ", "switch", " (direction) {\n            ", "case", " ", "\"up\"", " -> y -= height;\n            ", "case", " ", "\"down\"", " -> y += height;\n            ", "case", " ", "\"left\"", " -> x -= width;\n            ", "case", " ", "\"right\"", " -> x += width;\n            ", "default", " -> {\n            }\n        }\n    }\n\n", "\n", "但是运行起来时，蛇不会自己移动，只有不停地使窗口最小化和切换到前台才能看到蛇在动，不点击蛇就不会动。请问哪里出问题了？", "\n", "示意图gif"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;发送窗口只收到了Ack0&amp;#xff0c;但是Ack1&amp;#xff0c;Ack2&amp;#xff0c;Ack3丢失。&lt;br /&gt;接收方&amp;#xff0c;检测到3错误&amp;#xff0c;等待重传。&lt;br /&gt;所以发送方认为已经发送&amp;#xff1a;&lt;strong&gt;0123456&lt;/strong&gt;&lt;br /&gt;接收方3号帧错误&amp;#xff0c;所以认为已经收到&amp;#xff1a;&lt;strong&gt;0123456012&lt;/strong&gt;&lt;br /&gt;。。。&lt;br /&gt;最终发方认为自己只正确发送了7个帧&amp;#xff0c;而接收方却认为正确接收了10个帧&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["滑动窗口协议出现差错问题", ["设滑动窗口协议的收发窗口都为5（个），帧序号为0～6循环，双方在传输过程中发现了差错，使用选择性重传并进行了控制，为什么最终发方认为自己只正确发送了7个帧，而接收方却认为正确接收了10个帧。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看看你传入的 string code是哪里来的。我就没看到你view里有传过去的代码&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["MVC .net 表格删除数据时，总删除第一行", ["我在ASP.NET MVC中，使用foreach循环展示了数据库表格，在表格每行后面增加一个删除按钮，但是，我每次点击别的行的删除，她就一定会删掉第一行的数据 求帮忙，虚心请教", "View视图：", "\n", "\n", "Conctrollers控制器："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在代码中&amp;#xff0c;我发现 while(beats--) 循环中对 beats 的判断是通过减一的方式实现的&amp;#xff0c;这个方式在理论上是可以实现电机转动两圈的功能的。但是&amp;#xff0c;由于这个循环执行的次数非常大&amp;#xff0c;如果电机转动的速度过快&amp;#xff0c;就有可能出现循环次数过多&amp;#xff0c;导致电机无法正常转动的情况。&lt;/p&gt;\n&lt;p&gt;可以尝试在循环中添加延时等待电机转动完成&amp;#xff0c;以确保电机能够转动到指定角度。&lt;/p&gt;", "Konwledge_Point": "循环控制", "Question": ["无法实现电机转动两周的功能", ["电机没有转动", "\n", "C语言 单片机", "\n", "无", "\n", "电机转动两周停止", "\n", "#", "include", "<reg52.h>", "\n", "unsigned", " ", "long", " beats=", "0", ";\n", "void", " ", "TurnMotor", "(", "unsigned", " ", "long", " angle)", ";    ", "//函数声明", "\n", "void", " ", "main", "()", "\n", "{\n    EA=", "1", ";                                ", "//使能总中断", "\n    TMOD=", "0x01", ";                            ", "//设置T0模式", "\n    TH0=", "0xF8", ";                            ", "//高低位初值（2ms）", "\n    TL0=", "0xCD", ";                            \n    TR0=", "1", ";                                ", "//计数器to启动", "\n    ET0=", "1", ";                                ", "//T0中断开关", "\n    ", "TurnMotor", "(", "360", "*", "2", ");                    ", "//转动2圈，传入角度", "\n    ", "while", "(", "1", ");\n}\n\n", "void", " ", "TurnMotor", "(", "unsigned", " ", "long", " angle)", "                ", "//计算所需要的拍数", "\n", "{\n    \n    EA=", "0", ";\n    beats=(angle*", "4076", ")/", "360", ";                    ", "//计算所需要的拍数", "\n    EA=", "1", ";\n}\n", "/*中断服务函数*/", "\n", "void", " ", "interrupttimer0", "()", " interrupt 1\n", "{\n    ", "unsigned", " ", "char", " tmp;\n    ", "static", " ", "unsigned", " ", "char", " index=", "0", ";\n    ", "unsigned", " ", "char", " code BeatCode[", "8", "]={        ", "//步进电机节拍对应的io控制代码", "\n    ", "0xE", ",", "0xC", ",", "0xD", ",", "0x9", ",", "0xB", ",", "0x3", ",", "0x7", ",", "0x6", "\n    };\n    TH0=", "0xF8", ";                                ", "//重新赋初值", "\n    TL0=", "0xCD", ";\n    ", "while", "(beats--)                            ", "//拍数结束循环结束", "\n    {\n        tmp=P1;\n        tmp=tmp&", "0xF0", ";\n        tmp=tmp | BeatCode[index];           ", "//节拍低四位赋值", "\n        P1=tmp;\n        index++;\n        index=index&", "0x07", ";                    ", "//到8置0", "\n        \n    }\n    P1=P1|", "0x0F", ";                                   ", "//电机停止工作", "\n    \n}\n\n"]], "Tag": "程序设计"}
