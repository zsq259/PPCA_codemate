{"Answer": "&lt;p&gt;参考一下读文件的代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt; FILE * fp; //定义一个文件指针fp\n    fp &amp;#61; fopen(&amp;#34;students.txt&amp;#34;, &amp;#34;rt&amp;#34;); //以&amp;#34;读取的&amp;#34; 方式打开students文本文件\n    system(&amp;#34;cls&amp;#34;); //清屏//\n    getchar();\n    printf(&amp;#34;|#学号\\t姓名\\t语文\\t数学\\t英语\\t总成绩\\t平均分\\t#|\\n&amp;#34;);\n    do {\n        for (i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        {\n            fread(&amp;amp;student[i], sizeof(struct students), 1, fp);\n            printf(&amp;#34; %d &amp;#34;, student[i].num);\n            printf(&amp;#34; %s &amp;#34;, student[i].name);\n            printf(&amp;#34; %d &amp;#34;, student[i].chinese);\n            printf(&amp;#34; %d &amp;#34;, student[i].math);\n            printf(&amp;#34; %d &amp;#34;, student[i].english);\n            printf(&amp;#34; %d &amp;#34;, student[i].sum);\n            printf(&amp;#34; %d \\n&amp;#34;, student[i].ave);\n        }&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言中将文件中的数据输出到显示器上", ["将结构体类型的数据输入到文件中，怎么将文件中的数据输出出来"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,20&amp;#43;1):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{:&amp;gt;8}&amp;#34;&lt;/span&gt;.format(fibo(i)), &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i % 5 &amp;#61;&amp;#61; 0:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["用递归函数fibo求斐波拉且数列的第n项。程序中输出斐波拉且数列的前20项，要求每行输出5个数据，每个数据输出宽度为8并在宽度内右对齐。", ["def fibo(n):", "    if n==1 or n==2:", "        return 1", "    else:", "        return (fibo(n-1)+fibo(n-2))", "for i in range(1,20+1):", "    print(\"{:>8}\".format(fibo(i)), end=\" \",)", "\n", "我已经完成上面的代码了，但是不清楚如何每行输出五个", "效果图如下：", "\n", "   ", "1", "       ", "1", "       ", "2", "       ", "3", "       ", "5", "\n   ", "8", "      ", "13", "      ", "21", "      ", "34", "      ", "55", "\n  ", "89", "     ", "144", "     ", "233", "     ", "377", "     ", "610", "\n ", "987", "    ", "1597", "    ", "2584", "    ", "4181", "    ", "6765", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n $sql=\"XXXXXX\";  \r\n $query=mysql_query($sql);\r\nwhile($rs=mysql_fetch_array($query)){\r\n$res[]=$rs;\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["新手求教 php查询 遍历数据库 多条符合条件数据输出的记录只有一条", ["($result  = 0;//搜索结果默认值（不搜索） 1=正确搜索到结果,2=搜索到结果但非第一次,3=没搜索到结果,4=系统提示)", "\n\n", " if($msg0 == 1){\n        ///号信息\n       $sql=\"select * from tgs_code where bianhao='$bianhao'\";     //sql语句在数据库查询可返回多条记录\n       ///echo $sql;\n       $res=mysql_query($sql);\n       if(mysql_num_rows($res)>0){\n           $arr = mysql_fetch_array($res);\n           $bianhao  =  $arr[\"bianhao\"];//\n           $riqi     =  $arr[\"riqi\"];//日期\n           $product  =  $arr[\"product\"];//\n           $zd1      =  $arr[\"zd1\"];//\n           $zd2      =  $arr[\"zd2\"];//\n           $query_time  = $arr[\"query_time\"];//查询时间\n           $hits        = $arr['hits']; //查询次数     \n           $results     = 1;//查询结果为1，查询到正确的值\n           $msg1        = str_replace(\"{{product}}\",$product,unstrreplace($cf['notice_1']));//输出查询结果为notice1，notice1为第一次查询输出的结果模板\n           if($_SESSION['s_query_time']==\"\"){\n             $_SESSION['s_query_time'] = $query_time;\n           }           \n           if($hits>0){////假如查询次数不为0，非第一次查询           \n               $results = 2;//查询结果为2，输出非第一次查询的结果模板\n               $msg1        = str_replace(\"{{product}}\",$product,unstrreplace($cf['notice_2']));\n           }\n            $msg1        = str_replace(\"{{bianhao}}\",$bianhao,$msg1);//此处新增bianhao输出标签\n            $msg1        = str_replace(\"{{riqi}}\",$riqi,$msg1);\n            $msg1        = str_replace(\"{{zd1}}\",$zd1,$msg1);\n            $msg1        = str_replace(\"{{zd2}}\",$zd2,$msg1);\n            $msg1        = str_replace(\"{{hits}}\",$hits+1,$msg1);\n            $msg1        = str_replace(\"{{query_time}}\",$_SESSION['s_query_time'],$msg1);      \n          mysql_query(\"update tgs_code set hits=hits+1,query_time='\".$GLOBALS['tgs']['cur_time'].\"' where bianhao='\".$bianhao.\"'\"); \n          $msg0 = 1;\n       }\n       else\n       {\n         $results = 3;  //查询结果为3，输出查询结果为空时的查询结果模板    \n         $msg1   = str_replace(\"{{bianhao}}\",$bianhao,unstrreplace($cf['notice_3']));\n       }\n          ///保存查询记录\n        $sql = \"insert into tgs_history set keyword='\".$bianhao.\"',results='\".$results.\"',addtime='\".$GLOBALS['tgs']['cur_time'].\"',addip='\".$GLOBALS['tgs']['cur_ip'].\"'\";\n        mysql_query($sql);\n        //$msg1 = eregi_replace(\"[\\]\",'',$msg1);\n     }  \n    }else{\n        $msg1 = \"请输入号\";\n    }\necho $msg0.\"|\".$msg1;\n\n", "\n\n", "现在输出的结果只有一条记录，我想把符合条件的记录全部都输出处理，请问大侠们错在哪里了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,flg&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) flg &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        i&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (flg)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ERROR&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["这个问题该怎么解决啊？", ["输入描述：输入10个整型数据", "输出描述：若输入的10个整型数据都大于等于0，则输出OK，若数据中出现负数，则输出ERROR。", "\n", "输入样例1", "18 9 6 -5 25 27 34 18 7 16", "输出样例1", "ERROR", "\n", "输入样例2", "2 11 3 4 5 0 6 7 8 15", "输出样例2", "OK"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;测试类加上注解&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;SpringBootTest(classes&amp;#61;&amp;#34;springboot启动类名.class&amp;#34;)&lt;/a&gt;&lt;br /&gt;这样才能由spring去管理相关类;&lt;/p&gt;\n&lt;p&gt;欢迎采纳!&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["idea数据库连接正常，但是在Test中没有输出对应数据，如何解决？(语言-java)", ["idea数据库连接正常，但是在Test中没有输出对应数据，如何解决？", "debug和直接和直接运行结果一致", "数据库连接正常", "请问哪一步可以进行修改", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "status List_Init(SqList L)\r\n{\r\nL.elem = (int *)malloc(LIST_INIT_SIZE*sizeof(int));\r\nif(!L.elem) exit(OVERFLOW);\r\nL.length = 0;\r\nL.listsize = LIST_INIT_SIZE;\r\nprint(\"%d\",L.length);\r\nreturn OK;\r\n}\r\n\r\n把初始化的参数修改为指针试试，估计是这块有问题。", "Konwledge_Point": "数据的输出", "Question": ["线性表有个数据输出有错", ["status List_Insert(SqList *L,int List_Size)", "\n{", "\n    int i=0,j=0;", "\n    for(i=0;i\n    {", "\n        scanf(\"%d\",&j);", "\n        L->list[i] = j;", "\n        ++L->length;    1", "\n    }", "\n    //L->length = List_Size;    2", "\n    printf(\"%d\",L->length);", "\n    }", "\n    这是线性表中的插入操作，我想问的是那个L->length,当使用2号语句显而易见L->length直接被赋值了已知的线性表长度，输出正常，", "\n    然而当我使用1号语句时输出就会异常，应该是直接输出了L->length的内存地址，这是为什么？？求解"]], "Tag": "程序设计"}
{"Answer": "你写成struct LNode next，next是什么？链表的话应该是struct LNode *next，用指针来遍历", "Konwledge_Point": "数据的输出", "Question": ["求解,为什么没有输出???", ["/*Q4638.(10分)创建单向链表 要求：自定义函数create()，实现创建一个链表，", "\n将此函数定义为指针类型，使其返回值为指针值，返回值指向一个struct LNode类型数据，实际上是返回链表的头指针。", "\n在main()函数中调用自定义函数create()，实现创建一个链表，并将链表中的数据输出。", "\n最后别忘了释放链表内存。这里使用malloc()函数实现动态开辟存储单元。 ", "\n声明struct LNode类型，代码如下： ", "\nstruct LNode ", "\n{ ", "\n    int data; ", "\n    struct LNode ", "next; ", "\n}; ", "\n程序运行结果示例： ", "\n输入： ", "\n输入你想创建的结点个数:3 ", "\n输入整数: 1 2 3 ", "\n输出： ", "\n结果是: 1 2 3 ", "\n输入提示：\"输入你想创建的结点个数:\" ", "\n输入格式：\"%d\" ", "\n输入提示：\"输入整数:\\n\" ", "\n输入格式：\"%d\" ", "\n输出提示：\"结果是:\\n\" ", "\n输出格式：\"%d \"", "/", "\n\n", "#include", "\n#include", "\nstruct LNode", "\n{", "\n\n", "        int data;\n        struct LNode *next;\n", "\n\n", "}D;", "\n\n", "struct LNode*create()", "\n{", "\n    int n,i;", "\n\n", "struct LNode*pHead=NULL,*pNew,*pTail;\n\nprintf(\"输入你想创建的结点个数:\");\n\nscanf(\"%d\",&n);\n\nprintf(\"输入整数:\\n\");\n\nfor(i=0;i<n;i++)\n{\n\n            pNew=(struct LNode*)malloc(sizeof(struct LNode*));\n            scanf(\"%d\",&pNew->data);\n            if(pHead==NULL) pHead=pNew=pTail;\n    else\n    {\n        pTail->next=pNew;\n        pTail=pNew;\n    }       \n}\n    return pHead;\n", "\n\n", "}", "\n\n", "void List(LNode *pHead)", "\n{", "\n    struct LNode *p=pHead;", "\n\n", "while(p!=NULL)\n{\n    printf(\"%d\",p->data);\n    p=p->next;\n}\nreturn;\n", "\n\n", "}", "\n\n", "int main()", "\n{", "\n\n", "LNode *p=NULL;\np=create();\nprintf(\"结果是:\\n\");\nList(p);\nvoid free(LNode *p);\nreturn 0;\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/usernameforcsdn/article/details/48400611，可以参考一下。", "Konwledge_Point": "数据的输出", "Question": ["数据库读取数据 输出数组 转为json输出", [" header('Content-type: application/json;charset=utf-8');\nrequire 'conn.php';\n\n//读取数据\n$sql_notice = mysql_query('SELECT id,user_name FROM user limit 0,4');\n\n\n//$jobj[] = mysql_fetch_array($sql_notice,MYSQL_ASSOC);  //第一行\n\n\n//打印所有行 数组数据\nwhile ($jobj[] = mysql_fetch_array($sql_notice,MYSQL_ASSOC)){\n   $jobj;\n}\nvar_dump($jobj);\necho \"<br>\";\n\n\n$data = json_encode($jobj);\n\necho $data;//打印编码后的json字符串\n", "\n\n", "是准备做APP接口  但没经验 不知道是不是这样", "\n\n", "现在的问题是 读出4条数据 但只显示3条   数组的第四条是[4]=> bool(false) ", "\n另外json显示出来的是一横排 查看源代码也是 怎样让它按json那样的格式去排呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的插入方式有问题&amp;#xff0c;下面是我给你改好的代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;void input(stu*R) //输入学生信息 \n{\n\tstu *p &amp;#61; New_node; //p作为新节点存放p的数据 \n\tprintf(&amp;#34;\\n请输入十位数的学号&amp;#xff1a;\\n&amp;#34;);\n\tscanf_s(&amp;#34;%d&amp;#34;, &amp;amp;p-&amp;gt;Student_ID);\n\n\twhile (R-&amp;gt;next) R &amp;#61; R-&amp;gt;next;\t// 找到最后一个节点\n\n\tp-&amp;gt;next &amp;#61; NULL;\n\tR-&amp;gt;next &amp;#61; p;\n\t//R &amp;#61; p;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"647\" src=\"https://img-ask.csdnimg.cn/upload/1615959174095.png\" width=\"1239\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["想知道我这个代码执行output之后为什么不会输出所有节点的数据？", ["软件：dev c++", "\n\n", "方法：每次选择1后，输入学生学号信息，并输出已写入学号信息的所有学生的学号信息。", "\n\n", "\n", "#include<stdio.h>\n#include<malloc.h>\n#include<stdlib.h>\n#define New_node (stu*)malloc(sizeof(stu))\ntypedef struct student\n{\n\tint Student_ID;\n\tstruct student *next;\n\n}stu;\nvoid input(stu*R) //输入学生信息 \n{\n\tstu *p=New_node; //p作为新节点存放p的数据 \n\tprintf(\"\\n请输入十位数的学号：\\n\");\n\tscanf(\"%d\",&p->Student_ID);\n\tp->next=NULL;\n\tR->next=p;\n\tR=p;\n}\nvoid output(stu *L)\n{\n\tstu *p;\n\tp=L->next;\n\twhile(p!=NULL)\n\t{\n\t\tprintf(\"%d\\n\",p->Student_ID);\n\t\tp=p->next;\n\t}\n\t\n}\nmain()\n{\n\tstu *L=New_node;   \n\tL->next=NULL;     //建立头节点\n\tstu *R=L;         //尾指针指向头节点 \n\twhile(1)\n\t{\n\t\tint i;\n\t\tprintf(\"请输入选择\\n\"); \n\t\tscanf(\"%d\",&i);\n\t\tswitch(i)\n\t\t{\n\t\t\tcase 1:input(R);\n\t\t    case 2:output(L);\n\t\t}\n\t\t\n\t}\n\t\n}"]], "Tag": "程序设计"}
{"Answer": "个人认为你第一题的代码符合要求，能够完成题目所要求的功能；但是第二题就不符合要求了，题目要求使用读取的数据计算平方和和平方根，而你的代码使用了自己的for循环进行输出，这是不符合要求的。也就是说你根本没有使用读取的数据。\r\n\r\n考虑到第二题的解决方案，建议你第一题也做相应的修改，即没输出一个数据就换行，然后第二题中使用BufferedReader.readLine()方法来读取每一行的数据，这样就可以直接使用了读取的数据了。使用FileReader时读取的是每一个char，需要对数字进行判断，不好用。下面是两道题目的我的答案，请参考：\r\n\r\n题一：\r\n\r\n\r\n\r\n```\r\nimport java.io.*;\r\n\r\npublic class Question1 {\r\n\tpublic static void main(String[] args) {\r\n\t\t// TODO 自动生成的方法存根\r\n\r\n\t\ttry {\r\n\t\t\tFileWriter fw = new FileWriter(\"./src/a.txt\", true);\r\n\t\t\tfor (int i = 1; i &lt;= 100; i++) {\r\n\t\t\t\tfw.write(i + \"\\r\\n\");\r\n\t\t\t}\r\n\t\t\tfw.close();\r\n\t\t\tSystem.out.println(\"写入文件成功\");\r\n\t\t} catch (IOException e) {\r\n\t\t\t// TODO 自动生成的 catch 块\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```\r\n\r\n题二\r\n\r\n\r\n\r\n```\r\nimport java.io.*;\r\n\r\npublic class Question2 {\r\n\tpublic static void main(String[] args) {\r\n\t\t// TODO 自动生成的方法存根\r\n\t\ttry {\r\n\t\t\tFileWriter fw = new FileWriter(\"src/b.txt\", true);\r\n\t\t\tBufferedReader br = new BufferedReader(new FileReader(\"src/a.txt\"));\r\n\t\t\tString result = br.readLine();\r\n\t\t\tSystem.out.println(\"读取文件的内容如下：\");\r\n\t\t\tint readValue = 0;\r\n\t\t\twhile (result != null) {\r\n\t\t\t\tSystem.out.println(result);\r\n\t\t\t\treadValue = Integer.valueOf(result);\r\n\t\t\t\tfw.write(readValue * readValue + \"\\t\" + Math.sqrt(readValue)\r\n\t\t\t\t\t\t+ \"\\r\\n\");\r\n\t\t\t\tresult = br.readLine();\r\n\r\n\t\t\t}\r\n\t\t\tSystem.out.println(\"写入文件成功\");\r\n\t\t\tfw.close();\r\n\t\t\tbr.close();\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\t// TODO 自动生成的 catch 块\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\t// TODO 自动生成的 catch 块\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["题二的代码对吗？谢谢", ["题一、编写程序，创建一个数据文件a.txt，并通过FileWrite对象向其中输出整数1~100", "\npackage demo1;", "\nimport java.io.*;", "\n\n", "public class 题一 {", "\n\n", "public static void main(String[] args) {\n    // TODO 自动生成的方法存根\n\n\n    try {\n        FileWriter fw=new FileWriter(\"./src/a.txt\",true);\n        for(int i=1;i<=100;i++){\n            fw.write(i+\"  \");\n        }\n        fw.close();\n        System.out.println(\"写入文件成功\");\n    } catch (IOException e) {\n        // TODO 自动生成的 catch 块\n        e.printStackTrace();\n    }\n}\n", "\n\n", "}", "\n\n", "题二、从上一题生成的数据文件a.txt中读取数据，每读一个数据计算它的平方和平方根，然后把这些数据输出到一个新数据文件b.txt", "\npackage demo1;", "\nimport java.io.*;", "\npublic class 题二 {", "\n\n", "public static void main(String[] args){\n    // TODO 自动生成的方法存根\n    try {\n        FileWriter fw=new FileWriter(\"src/b.txt\",true);\n        FileReader fr=new FileReader(\"src/a.txt\");\n        int result=fr.read();\n        System.out.println(\"读取文件的内容如下：\");\n        while(result!=-1){\n            System.out.print((String.valueOf((char)result)));\n            result=fr.read();\n\n        }\n        for(int i=1;i<=100;i++){\n            fw.write(i*i+\"  \"+Math.sqrt(i));\n        }\n        fw.close();\n        System.out.println(\"写入文件成功\");\n        fr.close();\n    } catch (FileNotFoundException e) {\n        // TODO 自动生成的 catch 块\n        e.printStackTrace();\n    }catch (IOException e) {\n        // TODO 自动生成的 catch 块\n        e.printStackTrace();\n    }\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;完整代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\npackage com.test;\n\n/**\n * &amp;#64;author 杨俊\n * &amp;#64;create 2021-03-27-11:14\n */\npublic class Student {\n    public String stuNo;\n    public String stuname;\n    public int age;\n\n    public Student(String stuNo,String stuname,int age){\n        this.stuNo&amp;#61;stuNo;\n        this.stuname&amp;#61;stuname;\n        this.age&amp;#61;age;\n    }\n\n    public static void printStudent(Student stu){\n        System.out.println(&amp;#34;学号&amp;#xff1a;&amp;#34;&amp;#43;stu.getStuNo());\n        System.out.println(&amp;#34;姓名&amp;#xff1a;&amp;#34;&amp;#43;stu.getStuname());\n        System.out.println(&amp;#34;年龄&amp;#xff1a;&amp;#34;&amp;#43;stu.getAge());\n    }\n\n    public static void main(String[] args) {\n        Student stu &amp;#61; new Student(&amp;#34;101&amp;#34;,&amp;#34;杨俊&amp;#34;,28);\n        printStudent(stu);\n    }\n\n    public String getStuNo() {\n        return stuNo;\n    }\n\n    public void setStuNo(String stuNo) {\n        this.stuNo &amp;#61; stuNo;\n    }\n\n    public String getStuname() {\n        return stuname;\n    }\n\n    public void setStuname(String stuname) {\n        this.stuname &amp;#61; stuname;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age &amp;#61; age;\n    }\n}&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;运行截图&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"174\" src=\"https://img-ask.csdnimg.cn/upload/1616815782705.png\" width=\"573\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["定义一个学生类，其中有学号、姓名、年龄3个数据成员，以及若干成员函数。", ["同时编写主函数使用这个类，实现对学生数据的赋值和输出。要求：使用构造函数实现对数据的初始化，使用成员函数实现对数据的输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;n&amp;#61;int(&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;())\nl&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(n):\n    d &amp;#61; eval(&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;())\n    l&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(d)\ns1&amp;#61;s2&amp;#61;s3&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; l:\n    s1&amp;#43;&amp;#61;&lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(i[&lt;span class=\"hljs-string\"&gt;&amp;#39;语文&amp;#39;&lt;/span&gt;])\n    s2&amp;#43;&amp;#61;&lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(i[&lt;span class=\"hljs-string\"&gt;&amp;#39;数学&amp;#39;&lt;/span&gt;])\n    s3&amp;#43;&amp;#61;&lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(i[&lt;span class=\"hljs-string\"&gt;&amp;#39;英语&amp;#39;&lt;/span&gt;])\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;语文:%.2f&amp;#39;&lt;/span&gt;%(s1/n)&lt;/span&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;数学:%.2f&amp;#39;&lt;/span&gt;%(s2/n)&lt;/span&gt;&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;英语:%.2f&amp;#39;&lt;/span&gt;%(s3/n)&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt; 觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["成绩统计各位看看怎么做", ["输入一个正整数n(n>=1)，然后输入n行数据，表示的是某班各位同学的各科成绩（每位同学的考试科目都相同），请统计出各门课程的平均分(保留2位小数)。", "\n", "输入格式:", "先一个正整数n(n>=1),然后输入n行数据", "\n", "输出格式:", "输出各门课程的平均分", "\n", "输入样例:", "2", "{'语文':95,'数学':82,'英语':75}", "{'语文':98,'数学':72,'英语':85}", "结尾无空行", "输出样例:", "语文:96.50", "数学:77.00", "英语:80.00", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "你的编译器不允许变量作为初始化数组大小。你可以改成\r\n```\r\nint a[n]={};\r\n--》\r\nint *a = (int*)malloc(sizeof(int)*n);\r\n然后底下改成对指针操作。\r\n```", "Konwledge_Point": "数据的输出", "Question": ["用冒泡法排序，让一个长度为n的整型数组内数据由小到大排列。n由键盘输入，排序后将数组元素依次输出。", ["```#include ", "\nint main(int argc, char *argv[])", "\n{", "\n    int n,i,t;", "\n    scanf(\"%d\\n\",&n);", "\n    int a[n]={};", "\n    for(i=0;i<n;i++)", "\n        scanf(\"%d\",&a[i]); ", "\n    for(i=0;i<n;i++)", "\n    {", "\n        if(a[i+1]<a[i])", "\n        {", "\n            t=a[i];", "\n            a[i]=a[i+1];", "\n            a[i+1]=t; ", "\n        }", "\n    }", "\n    for(i=0;i<n;i++)", "\n    printf(\"%d \",a[i]); ", "\n    return 0;", "\n有一个错误求大佬帮助解答"]], "Tag": "程序设计"}
{"Answer": "因为所有的类继承Object类，所以单独输出一个对象的时候，它会调用Object.toString(当然 你没有重写同String的话)，打印出来的就是一串表达地址的字符串。![图片说明](https://img-ask.csdn.net/upload/201707/23/1500779517_782452.png)\r\n![图片说明](https://img-ask.csdn.net/upload/201707/23/1500779539_592559.png)\r\n![图片说明](https://img-ask.csdn.net/upload/201707/23/1500779552_433890.png)\r\n就是这样，也就是最后调用了toString().\r\n然而我们的String类里重写了toString(),它返回的是String自己，String是什么呢，String其实就是字符数组（它内部封装 了一个字符数组），所以打印字符串，其实就是打印字符数组，而不是地址。![图片说明](https://img-ask.csdn.net/upload/201707/23/1500779933_49714.png)\r\n可以看下源码更好理解", "Konwledge_Point": "数据的输出", "Question": ["打印String对象为什么输出的不是地址啊", ["String s = new String(\"abc\");", "\nSystem.out.println(s);", "\n这输出是s的内容，这明明是对象的引用啊，是地址啊", "\n如果这样 ", "\nStudent student =new Student();", "\nSystem.out.println(student);却打印地址"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;格式有问题&amp;#xff0c;if语句的格式是&lt;br /&gt;if (判断条件) {&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  执行语句&lt;/span&gt;&lt;br /&gt;}&lt;br /&gt;你看你的花括号写的位置是不对的&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么测试数据输出时会有一大串问号？(语言-c语言)", ["仅用if语句判断成绩等级", "为什么测试数据输出时会有一大串问号？请问要怎么修改？", "\n"]], "Tag": "程序设计"}
{"Answer": "好像有问题，你这个统计后的日期具体到了天没有意义了，你之前的表是同一个月id是一样的么？如果同一个月的数据id是一样的话\r\n你试试这个\r\nselect id,sum(B) 值 ,CONVERT(varchar(7), date, 120 )  rqfrom 表 group by id", "Konwledge_Point": "数据的输出", "Question": ["sql统计每天的数据汇总成一条数据按月显示", ["日期   （A）    ID    值(B)", "\n2006-06-06      1      2", "\n2006-06-07      1      2", "\n2005-05-05      2      2", "\n2005-05-06      2      2", "\n\n", "显示为 ：", "\nID  值    日期", "\n1    4     2006-06-07", "\n2   4       2005-05-06", "\n\n", "日期格式类型为Varchar（50）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/507727629666136.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这里提示&amp;#xff1a; Field &amp;#39;remarks&amp;#39; doesn&amp;#39;t have a default value&lt;br /&gt;没有填入默认值的地方&amp;#xff0c;没有插入元素&lt;br /&gt;你把这个字段&amp;#39;remarks&amp;#39;需要插入值&amp;#xff0c;或者你修改一下&amp;#39;remarks&amp;#39;默认值&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["kettle输出数据一直报这个错误，怎么百度都查不明白", ["2022/10/25 18:29:30 - dwd表输出本地mysql.0 - ERROR (version 8.2.0.0-342, build 8.2.0.0-342 from 2018-11-14 10.30.55 by buildguy) : Because of an error, this step can't continue:", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - ERROR (version 8.2.0.0-342, build 8.2.0.0-342 from 2018-11-14 10.30.55 by buildguy) : org.pentaho.di.core.exception.KettleException:", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - Error batch inserting rows into table [dwd_f_index_date].", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - Errors encountered (first 10):", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - Error updating batch", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - Field 'remarks' doesn't have a default value", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -     at org.pentaho.di.trans.steps.tableoutput.TableOutput.writeToTable(TableOutput.java:348)", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -     at org.pentaho.di.trans.steps.tableoutput.TableOutput.processRow(TableOutput.java:125)", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -     at org.pentaho.di.trans.step.RunThread.run(RunThread.java:62)", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 -     at java.lang.Thread.run(Thread.java:748)", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - Caused by: org.pentaho.di.core.exception.KettleDatabaseBatchException:", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - Error updating batch", "2022/10/25 18:29:30 - dwd表输出本地mysql.0 - Field 'remarks' doesn't have a default value", "2022/10/25 18:", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n\n#include &amp;lt;stdio.h&amp;gt;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; m,&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;power&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; b);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;m,&amp;amp;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;power&lt;/span&gt;(m,&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;));\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;power&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; b)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt;(b&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;&amp;#61;a;\n    else\n    &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;&amp;#61;a*&lt;span class=\"hljs-built_in\"&gt;power&lt;/span&gt;(a,b-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    return(&lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言计算m的n次方依次输出", ["键盘输入正整数m和n,然后求出m的0次方一直到m的 n次方，", "\n", "输入", "两个整数，逗号分隔，分别给 变量m和n", "\n", "输出", "共n行，每行一个乘方公式，从0次方到n次方", "\n", "输入:", "5,3", "输出", "pow(5,0)=1", "pow(5,1)=5", "pow(5,2)=25", "pow(5,3)=125"]], "Tag": "程序设计"}
{"Answer": "float按照十进制看，只有6~7位有效数字。你认真看书了么？", "Konwledge_Point": "数据的输出", "Question": ["C语言 为什么输入一个数再输出就变了", ["\n\n", "新手刚学   第二行不应该是12345.234560吗  为什么变了  ", "\n\n", "那这种变化会导致以后编程过程中应该注意怎样避免呢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;df&lt;/span&gt;&amp;#61;pd.DataFrame({&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;数据&amp;#39;&lt;/span&gt;:[&lt;span class=\"hljs-string\"&gt;&amp;#39;哈哈-呵呵&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;AB-CD&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-string\"&gt;&amp;#39;什么&amp;#39;&lt;/span&gt;:[1,2]})\n&lt;span class=\"hljs-attribute\"&gt;df3&lt;/span&gt;&amp;#61;pd.concat([df,df[&lt;span class=\"hljs-string\"&gt;&amp;#39;数据&amp;#39;&lt;/span&gt;].str.split(&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;expand&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;),axis&amp;#61;1).drop([&lt;span class=\"hljs-string\"&gt;&amp;#39;数据&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-attribute\"&gt;axis&lt;/span&gt;&amp;#61;1).rename({0:&lt;span class=\"hljs-string\"&gt;&amp;#39;数据1&amp;#39;&lt;/span&gt;,1:&lt;span class=\"hljs-string\"&gt;&amp;#39;数据2&amp;#39;&lt;/span&gt;},&lt;span class=\"hljs-attribute\"&gt;axis&lt;/span&gt;&amp;#61;1).reindex([&lt;span class=\"hljs-string\"&gt;&amp;#39;数据1&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;数据2&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;什么&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-attribute\"&gt;axis&lt;/span&gt;&amp;#61;1)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(df3)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["想要实现pandas数据分列，并进行分列命名", ["数据源：", "\n", "结果输出：（想要最后的展示内容如图，相当于在源数据的基础上插入一列）", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\nvoid ShowList(LinkList L)\r\n{\r\nLinkList p;\r\np=L-&gt;next;\r\ncout&lt;&lt;\"链表为：\";\r\nwhile(p!=NULL)\r\n{\r\ncout&lt;data&lt;&lt;\" \";\r\np=p-&gt;next;\r\n}\r\ncout&lt;&lt;endl;\r\n}\r\n这里就不对\r\nvoid ShowList(LinkList L)\r\n{\r\nLinkList p;\r\np=L-&gt;next;\r\ncout&lt;&lt;\"链表为：\";\r\nwhile(p!=NULL)\r\n{\r\ncout&lt;&lt;p-&gt;data&lt;&lt;\" \";\r\np=p-&gt;next;\r\n}\r\ncout&lt;&lt;endl;\r\n}\r\n```\r\nLinkList CreatList_H(LinkList &amp;L,int n)\r\n这里你到底是通过直接修改L来初始化，还是通过返回初始化，两者矛盾\r\n\r\n\r\n```\r\nfor(i=0;i &lt; n; i++) { //这里你也没写出来\r\nLNode *p = new LNode; //这里要初始化\r\ncin&gt;&gt;p-&gt;data;\r\np-&gt;next=L-&gt;next;\r\nL-&gt;next=p;\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["关于数据结构中的单链表的输出问题。", ["调试之后，输入没有问题，但是不明白怎么才能正确地输出。", "\n#include", "\n#include", "\nusing namespace std;", "\n\n", "typedef struct LNode", "\n{", "\n    int data;", "\n    struct LNode *next;", "\n}LNode,*LinkList;", "\n\n", "LinkList InitList(LinkList &L);", "\nLinkList CreatList_H(LinkList &L,int n);", "\nvoid ShowList(LinkList L);", "\n\n", "LinkList InitList(LinkList &L)", "\n{", "\n    L=new LNode;", "\n    L->next=NULL;", "\n    if(!L)", "\n    {", "\n        cout<<\"创建失败！\"<<endl;", "\n        return 0;", "\n    }", "\n    cout<<\"创建成功！\"<<endl;", "\n    return L;", "\n}", "\n\n", "LinkList CreatList_H(LinkList &L,int n)", "\n{", "\n    L=new LNode;", "\n    L->next=NULL;", "\n    int i;", "\n    cout<<\"请输入链表中的元素：\";", "\n    for(i=0;i\n    {", "\n        LNode *p;", "\n        cin>>p->data;", "\n        p->next=L->next;", "\n        L->next=p;", "\n    }", "\n    return L;", "\n}", "\n\n", "void ShowList(LinkList L)", "\n{", "\n    LinkList p;", "\n    p=L->next;", "\n    cout<<\"链表为：\";", "\n    while(p!=NULL)", "\n    {", "\n        cout<data<<\" \";", "\n        p=p->next;", "\n    }", "\n    cout<<endl;", "\n}", "\n\n", "int main()", "\n{", "\n    LinkList L;", "\n    int n,i;", "\n    L=InitList(L);", "\n    cout<<\"请输入元素个数：\";", "\n    cin>>n;", "\n    CreatList_H(L,n);", "\n    ShowList(L);", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "https://www.cnblogs.com/hezixiansheng8/p/3676697.html", "Konwledge_Point": "数据的输出", "Question": ["Vote                              ", ["Problem Description", "\n美国大选是按各州的投票结果来确定最终的结果的，如果得到超过一半的州的支持就可以当选，而每个州的投票结果又是由该州选民投票产生的，如果某个州超过一半的选民支持希拉里，则她将赢得该州的支持。现在给出每个州的选民人数，请问希拉里至少需要赢得多少选民的支持才能当选？", "\n\n", "Input", "\n多组输入数据", "\n每组数据的第一行包括一个整数N（1<=N<=101）,表示美国的州数，N=0表示输入结束", "\n接下来一行包括N个正整数，分别表示每个州的选民数，每个州的选民数不超过100", "\n\n", "Output", "\n对于每组数据输出一行，表示希拉里至少需要赢得支持的选民数", "\n\n", "Sample Input", "\n3", "\n5 7 5", "\n0", "\n\n", "Sample Output", "\n6"]], "Tag": "程序设计"}
{"Answer": "问题弄清楚了，经过厂家的技术人员解决了问题，在中央监护系统上设置服务器IP和端口，自动输出到服务器指定端口", "Konwledge_Point": "数据的输出", "Question": ["飞利浦中央监护系统数据输出后如何获取输出的数据？？", ["\n\n", "MP5监护仪通过网络把数据传输到中央监护站，中央监护站把数据通过网卡2导出，如何获取到中央监护站导出的数据？？有大神做过吗？？可以有偿服务。"]], "Tag": "程序设计"}
{"Answer": "需要获取对话框指针等 .然后通过它来传递数据", "Konwledge_Point": "数据的输出", "Question": ["如何将VC++ FormView 界面中的编辑框内的数据显示到另一MFC对话框的List表格中去", ["我在MFC对话框中通过按钮显示数据ok,但在FormView中使用相同代码时却无法将编辑框中数据显示到对话框的List中去，请高人指教，谢谢！", "\nvoid CXianWeiFormView::OnBnClickedPring()", "\n{", "\n    // TODO: 在此添加控件通知处理程序代码", "\n    CAddXianDanDlg Dlg;", "\n\n", "UpdateData();\nCString strIncount;\nDlg.m_ctrList.InsertItem(0, Si_Name);\nDlg.m_ctrList.SetItemText(0, 1, Si_Pi);\nstrIncount.Format(\"%d\", m_count1);\nDlg.m_ctrList.SetItemText(0, 2, Si_Si);\nDlg.m_ctrList.SetItemText(0, 3, Si_Al);\nUpdateData(FALSE);\n\nDlg.DoModal();\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;尝试用了write函数&amp;#xff0c;但是最终txt文件中只有最后一行数据&lt;br /&gt;你这里已经很接近了&lt;br /&gt;比如说&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;save.txt&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f1:    \n  f1.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;你要写入的数据&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;即可&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python从txt中提取关键字所在行，并删除重复项后生成新的txt", ["问题遇到的现象和发生背景", "\n", "根据关键字从多个txt中提取所在行数据，去除重复项并生成新的txt文件", "\n", "问题相关代码，请勿粘贴截图", "\n", "import os", "\n", "path = \"D:\\Jupyter\\银联数据\\测试数据\"# 文件夹目录", "files = os.listdir(path)     # 得到文件夹下的所有文件名称", "for file in files:  # 遍历文件", "    f = open(path+\"", "\\\"+file).read()  # 将打开的文件内容保存到变量f", "    log = open(path+\"", "\\\"+'合成.txt', 'a+')  # 以追加模式打开文件", "    log.write(f)                     # 写入文件", "    #print('已经合并：' + file)", "#从合并文件中根据关键字提取数据", "h = open('D:\\Jupyter\\银联数据\\测试数据\\合成.txt','r')", "lines = h.readlines()", "for lines in lines:", "    if \"总计\" in lines:", "     print(lines)", "\n", "运行结果及报错内容", "\n", "到这一步已经提取出了想要的数据，但是无法生成txt文件", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "尝试用了write函数，但是最终txt文件中只有最后一行数据", "\n", "我想要达到的结果", "\n", "所有在jupyter print出来的数据用txt输出"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n        Scanner sc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        Scanner sc1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        n &amp;#61; sc.nextInt();\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[] a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[n];\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n:&amp;#34; &amp;#43; n);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n            a[i] &amp;#61; sc1.nextFloat();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;lt; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;) {\n                m&amp;#43;&amp;#43;;\n            }\n            k &amp;#61; k &amp;#43; a[i];\n        }\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.printf(&amp;#34;%.2f&amp;#34;,k/n);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(m);\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["输入一组成绩数据，编程输出此组数据的平均值(要求此组数据定义为数组)，并统计和输出不及格人数。想问一下为什么输出是一堆乱码呢", ["【问题描述】", "\n", "输入一组成绩数据，编程输出此组数据的平均值(要求此组数据定义为数组)，并统计和输出不及格人数。", "\n", "【输入形式】", "\n", "先从标准输入数组元素的个数，然后依次输入数组元素，各元素之间以空格分隔。", "\n", "【输出形式】", "\n", "在标准输出上输出数组元素的平均值和不及格人数。", "\n", "【样例输入】", "\n", "6", "\n", "78.5 56 88.5 43 94.5 98", "\n", "【样例输出】", "\n", "76.42", "\n", "2", "\n", "\n", "import", " java.util.Scanner;\n", "public", " ", "class", " c {\n    ", "public", " static ", "void", " main(String[] args) {\n        ", "int", " n;\n        Scanner sc = ", "new", " Scanner(", "System", ".", "in", ");\n        n = sc.nextInt();\n        ", "float", "[] a = ", "new", " ", "float", "[n];\n        ", "int", " i;\n        ", "int", " m = ", "0", ";\n        ", "float", " k = ", "0", ";\n        ", "for", " (i = ", "0", "; i < n; i++) {\n            a[i] = sc.nextFloat();\n        }\n        ", "for", " (i = ", "1", "; i <= n; i++) {\n            ", "if", " (a[i] < ", "60", ") {\n                m++;\n            }\n            ", "for", " (i = ", "1", "; i <= n; i++) {\n                k = (k + a[i]) / i;\n            }\n\n        }\n        ", "System", ".", "out", ".printf(\"%.2f\",k);\n        ", "System", ".", "out", ".println(m);\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "看一下这个 https://github.com/bottod/emq_server_sets/tree/master/ShowDemo/iot\r\n主要就是js文件夹下的bottod文件夹 和php文件夹和index.html\r\nsql语句有人贴了，这是自己之前做得一个比较大的项目了，可以参考下，不懂问我", "Konwledge_Point": "数据的输出", "Question": ["php获取数据库指定表最大ID那一行全部数据输出在html上", ["php获取数据库指定表最大ID那一行全部数据输出在html上", "\n\n", "数据库", "\n\n", "hots:127.0.0.1", "\n\n", "user:root", "\n\n", "pwd:root", "\n\n", "dbname:sql", "\n\n", "sql数据库中有个user的表 ID作为主建自递增", "\n\n", "需要获取这个ID最大数", "\n\n", "列如通过后台添加数据ID为ID8前台读取ID8", "\n\n", "后天在添加ID为ID9前台读取ID9", "\n\n", "小白求打扰解答或者给个demo", "\n\n", "\n\n", "每次后台新添加数据ID为自增，需要读取最大ID如ID12 输出他的三列数据到前端"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;将学生信息写成dataframe&amp;#xff0c;然后用df.to_excel写入excel即可。在代码中功能项第5项中&amp;#xff0c;将获取到的每条学生信息&amp;#xff08;字典&amp;#xff09;添加进一个列表 然后用类似下面的代码操作即可&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;import pandas as pd \n\nlst&amp;#61;[{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;:123,&lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;wang&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;score&amp;#39;&lt;/span&gt;:80},{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;:124,&lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;li&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;score&amp;#39;&lt;/span&gt;:88}]\n&lt;span class=\"hljs-attribute\"&gt;d&lt;/span&gt;&amp;#61;pd.DataFrame(lst)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(d)\nd.to_excel(&lt;span class=\"hljs-string\"&gt;&amp;#39;stuinfo.xlsx&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;index&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["将Python中输出的数据导出到excel", []], "Tag": "程序设计"}
{"Answer": "python的open打开文件，然后按照你文件的格式读取对应的数据，然后再存入矩阵的一个个元素", "Konwledge_Point": "数据的输出", "Question": ["怎样用python把txt文件转化成矩阵", ["怎样用python把txt文件读入并（多列数据）转化成矩阵，并读取某一列全部数据按大小排序？谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我的电脑上能全部出来&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;1 1 1 1 1 1 1\n2 2 2 2 2 2 2\n&lt;span class=\"hljs-section\"&gt;3 3 3 3 3 3 3\n--------------------------------&lt;/span&gt;\nProcess exited after 1.504 seconds with return value 0\n请按任意键继续. . .\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你把头文件换成以下一行&amp;#xff0c;试试&amp;#xff1a;&lt;br /&gt;#include&amp;lt;iostream&amp;gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c++ 读文件的问题 多行数据输出", ["c++ 读文件的问问题", "要求是必须一个一个字符或数据依次输出 不能直接输出整行", "这是我的代码", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " c;\n    ", "ifstream ", "fp", "(", "\"data.txt\"", ",ios::in)", ";\n    ", "while", " ((c = fp.", "get", "()) != EOF)", "//要求逐个输出，不可直接输出整行", "\n    {\n        cout << c;\n    }\n}\n", "\n", "下面是我data.txt里的内容", "\n", "1 ", "1", " ", "1", " ", "1", " ", "1", " ", "1", " ", "1", "\n", "2 ", "2", " ", "2", " ", "2", " ", "2", " ", "2", " ", "2", "\n", "3 ", "3", " ", "3", " ", "3", " ", "3", " ", "3", " ", "3", "\n", "\n", "最后的输出结果是只输出了第一行1 1 1 1 1 1 1", "剩下两行都没有输出", "怎么才能让每行都输出出来呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;写入电子表格的特定工作表和范围&lt;br /&gt;将混合文本和数值数据写入 Excel® 文件&amp;#xff0c;从 Sheet2 的 E1 开始写入。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-attribute\"&gt;filename&lt;/span&gt; &amp;#61; &amp;#39;testdata.xlsx&amp;#39;;\n&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &amp;#61; {&amp;#39;Time&amp;#39;,&amp;#39;Temperature&amp;#39;; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;97&lt;/span&gt;};\n&lt;span class=\"hljs-attribute\"&gt;sheet&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;xlRange&lt;/span&gt; &amp;#61; &amp;#39;E1&amp;#39;;\n&lt;span class=\"hljs-attribute\"&gt;xlswrite&lt;/span&gt;(filename,A,sheet,xlRange)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/801734671176135.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["救！如何将matlab中的多组数据输出到同一个Excel中？", ["\n", "我用的xlswrite，不管怎么调整，他最多只能输出两个参数，有没有uu帮帮我🔊"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main(){\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;99999&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i/&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;&amp;#61;&amp;#61;i%10&amp;amp;&amp;amp;i/&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;%10&amp;#61;&amp;#61;i%100/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,i);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言，输出10000～99999里面的所有的回文数，即个位与万位相同，十位与千位相同", ["输出10000～99999里面的所有的回文数，即个位与万位相同，十位与千位相同"]], "Tag": "程序设计"}
{"Answer": "比如：\r\n![图片说明](https://img-ask.csdn.net/upload/201711/17/1510912319_768027.png)\r\n输出：87391427179357143040.00", "Konwledge_Point": "数据的输出", "Question": ["C++ 中怎样控制数据输出精度？", ["代码很简单如下：", "\n\n", "ofstream outfile(\"C:\\\\Users\\\\Song\\\\Desktop\\\\20171106\\\\final.txt\", ios::in | ios::out | ios::binary);\n\n    for (int b = 1; b < 257; b++)\n    {\n        outfile  << y[b] << \"\";\n    }\n    outfile.close();\n", "\n\n", "我的问题是：", "\n数组y内显示8.7391425897412365e19,输出到TXT文件内以后变成了8.73914e-019，想问一下怎样才能控制输出到tXT的精度？"]], "Tag": "程序设计"}
{"Answer": "http://zhidao.baidu.com/link?url=yUOoaVftMmbtTOa2CLBledLggSd-MarBEREtZmcMgVspNwP3g4jdjP6yvO7iCm2o6bhBXBm08wVfapTBlOXsiWMmNhxxXt6mgKaEjLwq42W", "Konwledge_Point": "数据的输出", "Question": ["C++ OLE操作EXCEL，使用指定的数据生成折线图", ["请教示例外码，最好能带注释的，还有就是数据并不确定能有多少个，我先做的事把数据写进EXCEL表格中，然后生成折线图，所以请教大神如何生成折线图"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/martinue/p/5490518.html", "Konwledge_Point": "数据的输出", "Question": ["最大子矩阵                         ", ["Problem Description", "\n给你一个m×n的整数矩阵，在上面找一个x×y的子矩阵，使子矩阵中所有元素的和最大。", "\n\n", "Input", "\n输入数据的第一行为一个正整数T，表示有T组测试数据。每一组测试数据的第一行为四个正整数m,n,x,y（0<m,n<1000 AND 0<x<=m AND 0<y<=n），表示给定的矩形有m行n列。接下来这个矩阵，有m行，每行有n个不大于1000的正整数。", "\n\n", "Output", "\n对于每组数据，输出一个整数，表示子矩阵的最大和。", "\n\n", "Sample Input", "\n1", "\n4 5 2 2", "\n3 361 649 676 588", "\n992 762 156 993 169", "\n662 34 638 89 543", "\n525 165 254 809 280", "\n\n", "Sample Output", "\n2474"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这题目都是错的啊&amp;#xff0c;哪有puthar这个东西呢&amp;#xff1f;这都啥质量的书啊&lt;br /&gt;由此可见&amp;#xff0c;答案是错的也不稀奇&amp;#xff0c;应该选B 啊&lt;br /&gt;赶紧换本书吧&amp;#xff0c;别越学越坏了&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言数据的输出，单项选择", ["答案是A单个字符", "putchar不是显示单个字符吗，选择多个字符吗，为什吗选择单个字符，求解释。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int main()&lt;/p&gt;\n\n&lt;p&gt;{&lt;!-- --&gt;&lt;/p&gt;\n\n&lt;p&gt;    int a[10] &amp;#61; {0,1,2,3,4,5,6,7,8,9};&lt;/p&gt;\n\n&lt;p&gt;    for(int i&amp;#61;0; i&amp;lt;10;i&amp;#43;&amp;#43;)&lt;/p&gt;\n\n&lt;p&gt;{&lt;!-- --&gt;&lt;/p&gt;\n\n&lt;p&gt;    if(i%3&amp;#61;&amp;#61;0)&lt;/p&gt;\n\n&lt;p&gt;printf(&amp;#34;%d\\n&amp;#34;,a[i]);&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;\n\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言：定义一个数组长度为10的数组并赋值，输出所有下标是3的倍数的值。\n大哥这个怎么做，速度等", ["C语言：定义一个数组长度为10的数组并赋值，输出所有下标是3的倍数的值。\n大哥这个怎么做，速度等"]], "Tag": "程序设计"}
{"Answer": "```\r\nCategory这个类没有重写toString方法\r\n在Category类里面加上\r\n@override\r\npublic String toString(){\r\n\t\t return getCid() +\",\" + getCname() + ...; //你要输出的内容，不是字符串的话，加上一个转换。\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["为什么数据库查询结果打印出来是内存地址而不是具体数值？", ["这是打印结果", "\nmain", "\n查询的代码", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#include &lt;span class=\"hljs-string\"&gt;&amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n\nint main(){\n\n    int a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;];\n    int i,j;\n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;a[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],&amp;amp;a[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],&amp;amp;a[i][&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],&amp;amp;a[i][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]);\n    }\n    //输出\n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        for(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;,&amp;amp;a[i][j]);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);    \n    }\n   \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["定义一个3行4列整数的二维数组a，初始化以后，将其输出。", ["定义一个3行4列整数的二维数组a，初始化以后，将其输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可能跟注册有关&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/387182819046183.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Vue  前端  echarts中formatter获取不到data", ["问题遇到的现象和发生背景", "\n", "控制台打印data为", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "先获取数据，再获取地图。", "\n", "结果还是一样，是哪里出了问题"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n\nint main()\n{\n    int n,m;\n    scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);\n    if(n&amp;lt;1||n&amp;gt;10){\n       printf(&amp;#34;1≤n≤10&amp;#34;);\n       return 0;\n    }\n    int *a &amp;#61; (int*)malloc(sizeof(int)*n);\n    for(int i&amp;#61;n-1; i&amp;gt;&amp;#61;0; i-- ){\n        scanf(&amp;#34;%d&amp;#34;,&amp;amp;a[i]);\n    }\n    scanf(&amp;#34;%d&amp;#34;,&amp;amp;m);\n    if(m&amp;lt;0||m&amp;gt;&amp;#61;n){\n       printf(&amp;#34;0≤m&amp;lt;n&amp;#34;);\n       return 0;\n    }\n    printf(&amp;#34;%d&amp;#34;,a[m]);  \n    return 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["逆序存放数组中的数据，并输出指定元素", ["本题要求编写程序，将给定的n个整数存入数组中，将数组中的这n个数逆序存放，再按要求输出指定的数组元素。", "\n\n", "输入格式:", "\n\n", "在第一行中给出一个正整数n（1≤n≤10）。第二行输入n个整数，用空格分开。第三行输入一个非负整数m（m<n）。", "\n\n", "输出格式:", "\n\n", "在一行中输出逆序存放后下标为m的数组元素。行末无空格。", "\n\n", "输入样例:", "\n\n", "\n", "6\n10 8 1 2 3 4\n2", "\n\n", "输出样例:", "\n\n", "\n", "2"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; day,i,s;    &lt;span class=\"hljs-comment\"&gt;/*定义 day、i、s 3 个变董为基本整型*/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;day) !&amp;#61; EOF){\n        s &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;day;i&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;//因为到第day天还剩一个&amp;#xff0c;所以循环day次&lt;/span&gt;\n        {\n            s&amp;#61;(s&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//倒序求出每天的数量&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,s);    &lt;span class=\"hljs-comment\"&gt;/* 输出桃子的总数*/&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出为&amp;#xff1a;&lt;br /&gt;46&lt;br /&gt;1534&lt;br /&gt;393214&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/493887080546167.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["程序输入多组数据时发生错误", ["问题遇到的现象和发生背景", "\n", "猴子第一天摘下若干桃子，当即吃了一半，还觉不过瘾，又多吃了一个；第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天天早上都吃了前一天剩下的一半零一个。到第n(n<=20)天早上想再吃时，见只剩一个桃子了。求第一天共摘了多少桃子。", "输入格式:", "测试数据有多组，处理到文件尾。每组输入天数n。", "\n", "输出格式:", "每组输出第一天摘的桃子数(结果保证在int型范围)。", "输入样例:", "在这里给出一组输入。例如：", "\n", "5", "10", "18", "输出样例:", "在这里给出相应的输出。例如：", "\n", "46", "1534", "393214", "\n", "问题相关代码，请勿粘贴截图", "\n", "int", " ", "n", ",", "sum", "=", "1", ",i;\nwhile(scanf(", "\"%d\"", ",&", "n", ") != EOF)//这是我认为的输入多组数据的方法\n{\nwhile(", "n", ")\n{\n", "sum", "=(", "sum", "+", "1", ")*", "2", ";\n", "n", "--;\n}\n", "if", "(", "n", "==", "0", ")\n   {\n    i=", "sum", "/", "2", "-", "1", ";\n   printf(", "\"%d\\n\"", ",i);\n   }\n }\n", "\n", "运行结果及报错内容", "\n", "5", "10", "18", "结果", "46", "49150", "-2", "以上是输入和运行结果", "\n", "我的解答思路和尝试过的方法", "\n", "用这串代码可以解决输入一组数据并运行正确结果", "但是输入一组数据时就不行了", "\n", "我想要达到的结果", "\n", "46", "1534", "393214"]], "Tag": "程序设计"}
{"Answer": "http://www.2cto.com/kf/201306/222126.html", "Konwledge_Point": "数据的输出", "Question": ["2、从键盘输入n（>2），计算斐波那契数列的前n项并按每行10个数据输出。", ["2、从键盘输入n（>2），计算斐波那契数列的前n项并按每行10个数据输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没什么错误&amp;#xff0c;int judge(int n) 函数里把 i 定义移到函数开始处&amp;#xff0c;试试&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;judge&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;        &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n         &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i*i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){ &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n             &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n         }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t,n; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;t);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(t--){\n          &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n          &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;judge&lt;/span&gt;(n)) &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;         &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;no&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["判断素数 这样写为什么会编译错误", ["问题描述", "素数是只能被1和自己整除的整数。例如2，3，5和7是素数，4，6，8，9不是素数。给定一个正整数，判定该整数是否为素数。", "\n", "输入", "第一行一个正整数T，表示有T组测试数据。以下有T行，每行有一个正整数a(a<10000)。", "\n", "输出", "每组测试数据输出一行，如果输入的正整数是素数，输出yes，否则输出no。", "\n", "输入样列", "3", "2", "7", "9", "\n", "输出样例", "yes", "yes", "no", "#include<stdio.h>", "int judge(int n)", "{", "    if(n<=1) return 0;", "    else{", "        for(int i=2;i*i<=n;i++){", "            if(n%i==0) return 0;", "        }", "    }", "    return 1;", "}", "int main()", "{", "    int t,i,n;", "    scanf(\"%d\",&t);", "    while(t--){", "        scanf(\"%d\",&n);", "        if(judge(n)) puts(\"yes\");", "        else puts(\"no\");", "    }", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义个变量看看&amp;#xff0c;比如&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    float a&amp;#61; 0.0,b&amp;#61;0.0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;%f\\n&amp;#34;,a/b);&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["vs运行不出来结果结果应该是//inf -inf nan应该如何解决", ["vs运行不出来结果", "结果应该是//inf -inf nan", "应该如何解决？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;简单的排序&amp;#xff0c;从大到小排序&amp;#xff0c;输出第m高的数。&lt;br /&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;\nusing namespace std;\n\nconst &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; maxn &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n,m,T,a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;maxn&lt;/span&gt;]&lt;/span&gt;; \n\n&lt;span class=\"hljs-comment\"&gt;//bool cmp(int x,int y){&lt;!-- --&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    return x&amp;gt;y;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//}&lt;/span&gt;\n\nvoid quick&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(left &amp;gt;&amp;#61; right) &lt;span class=\"hljs-comment\"&gt;//递归边界条件&lt;/span&gt;\n        return;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, j, tmp;\n    i &amp;#61; left, j &amp;#61; right;\n    tmp &amp;#61; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;left&lt;/span&gt;]&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//取最左边的数为基准数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt; j){\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;lt;&amp;#61; tmp&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;i &amp;lt; j)\n            j--;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt; &amp;gt;&amp;#61; tmp&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;i &amp;lt; j)\n            i&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i &amp;lt; j){\n            swap(a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;,a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//如果前一个数比后一个数小&amp;#xff0c;交换两数 &lt;/span&gt;\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;//基准数归位&lt;/span&gt;\n    a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;left&lt;/span&gt;]&lt;/span&gt; &amp;#61; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;;\n    a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt; &amp;#61; tmp;\n    quick&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;left&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; - 1)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//递归左边&lt;/span&gt;\n    quick&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1, &lt;span class=\"hljs-params\"&gt;right&lt;/span&gt;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//递归右边&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;{\n    cin&amp;gt;&amp;gt;T;\n    cin&amp;gt;&amp;gt;n&amp;gt;&amp;gt;m;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){\n        cin&amp;gt;&amp;gt;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//sort(a&amp;#43;1,a&amp;#43;n&amp;#43;1,cmp); STL库&amp;#xff0c;与前面cmp函数一起用。 &lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//表示对a数组从大到小进行排序。&amp;#xff08;简便&amp;#xff09; &lt;/span&gt;\n    \n    quick&lt;span class=\"hljs-constructor\"&gt;Sort(0,&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;)&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;m&lt;/span&gt;]&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;此处用到快速排序&amp;#xff0c;也提及sort。当然也可以用其他的排序算法。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["运用C语言解答，最好有注释", ["Sid有一只兔子叫Bunny。Bunny有n个萝卜，每个萝卜高h_i。Sid想知道第m高的萝卜有多高。", "\n", "Input", "第一行一个组数T", "每组数据第一行两个整数n, m。1 <= m <= n <= 100", "每组数据第二行有n个整数h_1, h_2, ~, h_n。1 <= h_i <= 1000000000", "\n", "Output", "每组数据输出一个整数表示第m高的萝卜高度。", "\n", "SampleInput", "1", "2 1", "1 2", "SampleOutput", "2"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;关于kettle读取excel的网上应该有很多&amp;#xff0c;可以详细了解下。这里简单示例。&lt;br /&gt;kettle有个输入为&amp;#xff1a;excel输入用来读取excel&lt;br /&gt;示例如下&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;1.excel数据如下&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"excel数据.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/531698501926198.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;2.修改excel文件信息&lt;/strong&gt;&lt;br /&gt;&lt;img title=\"excel输入.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/44590060192616.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"excel文件信息.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/562220601926148.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;3.选择工作表sheet页&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"sheet页.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/887050601926178.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;4.设置sheet页起始行列&lt;/strong&gt;&lt;br /&gt;&lt;img title=\"sheet页起始行列.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/125960601926163.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;5.选择字段&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"选择全部字段.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/632831601926135.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;此时预览数据为三列&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"预览全部数据.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/434361601926162.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;也可以选择只读取部分字段&amp;#xff1a;比如去掉birthday&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"选择部分字段.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/770491601926138.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;此时预览数据为两列&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"预览部分数据.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/705212601926124.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;注意&amp;#xff1a;这里示例时只选择了两个字段。去除的字段&amp;#xff1a;birthday位于最后。&lt;br /&gt;如果要去除的数据位于前面。比如user_id或user_name&amp;#xff0c;需要同步更改sheet页配置的起始行列&amp;#xff0c;否则会出现问题。&lt;br /&gt;更好的解决办法是&amp;#xff1a;这里将excel中所有字段读取&amp;#xff0c;再添加一个步骤&amp;#xff1a;转换-字段选择 进行字段删选&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"步骤-字段选择.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/47664260192612.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;字段选择中去除user_id字段&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"字段选择-去除字段.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/793762601926167.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;此时流中的数据就只有两个字段了&amp;#xff1a;user_name,birthday。&lt;br /&gt;示例完整步骤&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"完整步骤.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/621582601926120.png\" /&gt;&lt;br /&gt;excle输入获取全部字段&amp;#xff0c;字段选择移除user_id字段。&lt;br /&gt;文件输出如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"输出.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/354503601926169.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;这里示例只演示了如何读取excel字段&amp;#xff0c;及简单的筛选。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何用kettle把EXCEL表指定的一列导入数据库表的某一列？", ["如何用kettle把EXCEL表指定的一列导入数据库表的某一列？"]], "Tag": "程序设计"}
{"Answer": "先说通过OKhttp请求数据，你先要了解RXjava，这个你需要好好看一下，不是一句话能说清楚的\r\n对于返回数据的要求，回传数据都是一个json字符创，除了图片，视频，等文件格式，你需要通过gjson进行数据的解析生成一个javabean对象，然后通过get，set方法获取数据，注意服务器传递过来的数据不仅格式要和你的javabean格式嵌套一样，而且也需要字段名，类型都必须相同，除了id，会自动转换int类型", "Konwledge_Point": "数据的输出", "Question": ["Android通过OKhttp从服务器端获取数据", ["大家好，有个问题咨询一下，我以前是做网站的，刚开始学Android开发，现在我要使用Android studio通过okhttp来连接服务器，将之前网站服务器上的信息，显示到手机上，比如登陆来说，从手机端输入用户名和密码，通过okhttp提交到服务器端，", "\n那么是提交到服务器端的某个webService文件上还是提交到某一个网页文件上做判断?Android端的提交代码又该如何去写，用最笨的方法，能看懂的，简单点？", "\n服务器端代码我有网站基础会写，但有没有需要注意的地方，比如查询到登陆信息后，返回值的数据有没有要求？", "\n希望各位大侠、前辈指点！感谢......"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;双重循环判断数据重复就删除&lt;br /&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;del&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[] ,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *pos,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; m; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[j]&amp;#61;&amp;#61;a[i])\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&amp;#61;&amp;#61;m)\n            a[m&amp;#43;&amp;#43;] &amp;#61; a[i];\n    }\n    *pos &amp;#61; m;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i,m;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入n&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; n;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;n&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;个数&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n        cin &amp;gt;&amp;gt; a[i];\n    &lt;span class=\"hljs-built_in\"&gt;del&lt;/span&gt;(a,&amp;amp;m,n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;)\n        cout &amp;lt;&amp;lt; a[i] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "数据的输出", "Question": ["从键盘输入n个数据（含重复数据），要求删除重复数据，输出去重后的数据序列。", ["1)主函数功能：输入数据n（n<20）的值，输入n个有重复的数据，调用子函数删除n个数据中的重复数据，输出无重复的结果数据。", "2)子函数功能：删除重复数据。子函数头要求为void del(int a[] ,int *pos,int n)，其中pos为指针变量，指向存放去重之后数据个数的变量。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while 只要加上判断及退出的条件&amp;#xff0c;其它都一样&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;s&amp;#61;[9,7,8,3,2,1,55,6]\n \n&lt;span class=\"hljs-attribute\"&gt;s_count&lt;/span&gt;&amp;#61;0\n&lt;span class=\"hljs-attribute\"&gt;s_max&lt;/span&gt;&amp;#61;s[0]\n&lt;span class=\"hljs-attribute\"&gt;s_min&lt;/span&gt;&amp;#61;s[0]\n&lt;span class=\"hljs-attribute\"&gt;s_sum&lt;/span&gt;&amp;#61;s[0]\n&lt;span class=\"hljs-attribute\"&gt;s_ave&lt;/span&gt;&amp;#61;s[0]\n\ntmp &amp;#61; s[::-1]\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; tmp:  #tmp非空就循环继续\n    i &amp;#61; tmp.pop() #不断减少列表元素\n    &lt;span class=\"hljs-attribute\"&gt;s_count&lt;/span&gt;&amp;#61;s_count&amp;#43;1\n    &lt;span class=\"hljs-attribute\"&gt;s_sum&lt;/span&gt;&amp;#61;s_sum&amp;#43;i\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &amp;gt; s_max:\n        &lt;span class=\"hljs-attribute\"&gt;s_max&lt;/span&gt;&amp;#61;i\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &amp;lt; s_min:\n        &lt;span class=\"hljs-attribute\"&gt;s_min&lt;/span&gt;&amp;#61;i\n&lt;span class=\"hljs-attribute\"&gt;s_ave&lt;/span&gt;&amp;#61;s_sum/s_count\n \n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;count:&amp;#34;&lt;/span&gt;,s_count)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;sum:&amp;#34;&lt;/span&gt;,s_sum)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;max:&amp;#34;&lt;/span&gt;,s_max)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ave:&amp;#34;&lt;/span&gt;,s_ave)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;min:&amp;#34;&lt;/span&gt;,s_min)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["while循环求最大最小值问题", ["编程求列表s=[9,7,8,3,2,1,55,6]中的元素个数、最大值、最小值、元素之和、平均值。要求：不能使用max(x) , min(x) , sum(x)这几个函数。分别用for和while实现，保存为74a.py和74b.py。", "while循环用得很少，不知道该怎么去写，"]], "Tag": "程序设计"}
{"Answer": "不明白你要干什么 “联北1101分支线1号开关” 如果是固定的长度， 你直接substring就可以了。 如果你有规律类似的， 要把规律写明白， 比如\r\n\r\n联北11011分支线1号开关\r\n联北11015分支线11号开关\r\n联北1101435分支线111号开关\r\n联北11013分支线13号开关\r\n联北110134分支线15号开关\r\n\r\n这样也是能做到的， 你可以使用正则表达式获得这个substring.\r\n(联北[\\d]{1,}分支线[\\d]{1,}号开关)\r\n\r\n你最好提问要明白自己要干么。。也要对别人说清楚。：）", "Konwledge_Point": "数据的输出", "Question": ["求一个匹配", ["联北1101分支线1号开关A相避雷器 ", "\n联北1101分支线1号开关B相避雷器", "\n\n", "从以上这些字符串中获取 联北1101分支线1号开关 怎么写 谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;img alt=\"\" height=\"132\" src=\"https://img-ask.csdnimg.cn/upload/1621748046460.png\" width=\"537\" /&gt;我复制了这段代码运行&amp;#xff0c;但他给我这个报错&amp;#xff0c;请问是什么原因&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["有关simulink输出结果问题", ["模块output8的图像如图1，证明是有数据的，但通过工作区的yout查询却发现，结果是如图2，请问是怎么回事？"]], "Tag": "程序设计"}
{"Answer": "SaleManager::OutputWage()你调用的是Manager::getW() \r\n而Manager类继承的Staff类的basicSal，prize，rateOfAttend成员都是没有初始化过的。\r\n单步类的实例“构造”或“复制”或“作为函数参数”或“作为函数返回值返回”或“参加各种运算”或“退出作用域”的语句对应的汇编代码几步后，就会来到该类的“构造函数”或“复制构造函数”或“运算符重载”或“析构函数”对应的C/C++源代码处。", "Konwledge_Point": "数据的输出", "Question": ["C++继承，最后一个输出不对", [" #include <iostream>\n#include <string>\nusing namespace std;\n\nclass Staff//员工\n{\npublic:\nStaff(){};\nStaff(int n,const string& na,double ra,double ba,double pr):\n  num(n),name(na),rateOfAttend(ra),basicSal(ba),prize(pr){}\nvoid Output();\nvoid OutputWage();\nint getW()const{return basicSal+prize*rateOfAttend;}\nprotected:\nint num ;//编号\nstring name;//姓名\ndouble rateOfAttend;//出勤率\ndouble basicSal;//基本工资\ndouble prize;//奖金\n};\n\nclass Saleman:public Staff//销售员\n{\npublic:\nSaleman(int n,const string& na,double ra,double ba,double pr,double de,\nint pe):Staff(n,na,ra,ba,pr),deductRate(de),personAmount(pe){}\nvoid Output();\nvoid OutputWage();\nprotected:\ndouble deductRate;//提成比例\nint personAmount;//个人销售额\n};\n\nclass Manager:public Staff//经理\n{\npublic:\nManager(double to,double tot):totalDeductRate(to),totalAmount(tot){}\nManager(int n,const string& na,double ra,double ba,double pr,double to,\nint tot):Staff(n,na,ra,ba,pr),totalDeductRate(to),totalAmount(tot){}\nvoid Output();\nvoid OutputWage();\nprotected:\ndouble totalDeductRate;//经理提成比例\nint totalAmount;//总销售额\n};\n\nclass SaleManager:public Saleman,public Manager\n{\npublic:\nSaleManager(int n,const string& na,double ra,double ba,double pr,double de,\nint pe,double to,double tot):Saleman(n,na,ra,ba,pr,de,pe),Manager(to,tot){}\nvoid Output();\nvoid OutputWage();\n};\n\nvoid Staff::OutputWage()\n{\ncout << \"实际工资:\" << basicSal+prize*rateOfAttend << endl;\n}\n\nvoid Staff::Output()\n{\ncout << \"编号:\" << num << \" 姓名:\" << name << \" 出勤率:\"\n<< rateOfAttend << \" 基本工资:\" << basicSal << \" 奖金:\" << prize << endl;\n}\n\nvoid Saleman::OutputWage()\n{\ncout << \"销售员实际工资:\" << basicSal+prize*rateOfAttend + personAmount*deductRate << endl;\n}\n\nvoid Saleman::Output()\n{\nStaff::Output();\ncout << \"提成比例:\" << deductRate << \"个人销售额:\" << personAmount << endl;\n}\n\nvoid Manager::OutputWage()\n{\ncout << \"经理实发工资:\" << Staff::getW() + totalAmount*totalDeductRate << endl ;\n}\n\nvoid Manager::Output()\n{\nStaff::Output() ;\ncout << \"提成比例:\" << totalDeductRate << \"总销售额:\" << totalAmount << endl ;\n}\n\nvoid SaleManager::OutputWage()\n{\ncout << \"销售经理实发工资:\" << Manager::getW() + totalAmount*totalDeductRate+ personAmount*deductRate<< endl ;\n}\n\nvoid SaleManager::Output()\n{\nSaleman::Output() ;\ncout << \"提成比例:\" << totalDeductRate << \"总销售额:\" << totalAmount << endl ;\n}\n\nint main()\n{\nStaff a(1,\"小a\",1,3000,1000);\nSaleman b(2,\"小b\",1,3000,1000,0.2,1000);\nManager c(3,\"小c\",1,3000,1000,0.3,1000);\nSaleManager d(4,\"小d\",1,3000,1000,0.2,500,0.3,500);\na.Output();\na.OutputWage();\nb.Output();\nb.OutputWage();\nc.Output();\nc.OutputWage();\nd.Output();\nd.OutputWage();\nreturn 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "缺省就是默认的意思，不加负号，就按默认情况处理，即右对齐。\r\n\r\n\r\n\r\n```\r\n (\"%5d\",123)    &lt;space&gt;&lt;space&gt;123\r\n(\"%-5d\",123)    123&lt;space&gt;&lt;space&gt;\r\n```", "Konwledge_Point": "数据的输出", "Question": ["关于c语言格式化输出，标志-（负号）的作用？", ["我的c语言教科书上写的：", "\n标志 -", "\n输出结果左对齐，右边填空格；**缺省时则输出结果右对齐，左边填空格。**", "\n\n", "我加粗部分这个缺省是指的哪种情况？？可以举例吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第一次循环输出1&amp;#xff0c;x值为1&amp;#xff0c;然后while处理先--x使得x变为0&amp;#xff0c;!0是成立的&amp;#xff0c;所以继续循环&amp;#xff0c;输出-2&amp;#xff0c;此时--x为-3&amp;#xff0c;!(-3)不成立&amp;#xff0c;结束&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["这里输出的结果是 1-2;为什么不是1", ["\n", "#", "include", " ", "<stdio.h>", "\n\n", "int", " ", "main", "()", " ", "{\n    ", "int", " x = ", "3", ";\n    ", "do", " {\n\n        ", "printf", "(", "\"%d\"", ", x -= ", "2", ");\n    } ", "while", " (!(--x));\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;h3&gt;Writing to a file:&lt;/h3&gt;\n\n&lt;p&gt;You could use &lt;a href=\"http://php.net/manual/en/function.file-put-contents.php\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;file_put_contents()&lt;/code&gt;&lt;/a&gt; to create the file with your output. This function will accept a string, or an array, which releases you of the burden to convert your array into a writable-format.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;file_put_contents(\"myget.txt\", $_GET);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As stated in the comments, this option isn't ideal for multidimensional arrays. However, the next solution is.&lt;/p&gt;\n\n&lt;h3&gt;Maintaining format:&lt;/h3&gt;\n\n&lt;p&gt;If you'd like to maintain the &lt;code&gt;print_r()&lt;/code&gt; formatting, simply set the second parameter to &lt;code&gt;true&lt;/code&gt; to return the value into a variable rather than outputting it immediately:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$output = print_r($_GET, true);\nfile_put_contents(\"myget.txt\", $output);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["使用php将所有数组值输出到文件", ["\n\n", "Im working with a foreign API and im trying to get a fix on what all its sending to my file with the GET method.", "\n\n", "How can i output something like ", "print_r($_GET)", " to a file so i can read what all its sending?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;eval(input())\nans&amp;#61;[]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,n&amp;#43;1):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; n%&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;&amp;#61;0:\n        ans.append(i)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(ans)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["怎么使一行数据输出在同一行，中间逗号隔开，最后加括号", ["怎么使数据输出在同一行时，各数据之间有逗号隔开，但括号只加在首尾"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;long long int Number[M] &amp;#61; {N};只是将第一个元素设置为N&amp;#xff0c;后面的全是0&lt;br /&gt;printf(&amp;#34;%d&amp;#34;,Add);  long long int类型输出用%lld&lt;/p&gt;\n&lt;p&gt;如果还是不够&amp;#xff0c;那就用double类型&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["整数太大数据输出不对怎么办", ["#include<stdio.h>", "#define N 1", "#define M 20", "\n", "int main()", "{", "    int Sn, i;", "    long long int Add = 0;", "\n", "long", " ", "long", " ", "int", " Number[M] = {N};\n", "for", "(i = ", "1", "; i < M; i++)\n    Number[i] =(", "long", " ", "long", " ", "int", ") Number[i", "-1", "] * (i + ", "1", ");\n\n", "scanf", "(", "\"%d\"", ", &Sn);\n\n", "for", "(i = ", "0", "; i < Sn; i++)\n    Add += Number[i];\n\n", "printf", "(", "\"%d\"", ",Add);\n\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "嘻嘻，针对你的代码来看吧：你select * from city 对吧，你可以把city弄成个javabean啊，然后city类中实现toString 方法。这样你就可以把rs.getXXX都\r\n放在一个个city类的实例中去，再把这些实例放到集合里去吧(if you may)。最后不就是遍历集合中每个元素，调用toString()，并且追加到一个StringBuffer 的对象里去(不如就把变量名定为buffer吧)，**finally｛textarea.setText(buffer.toString())｝** 。\r\n代码的话，我想你可以这样\r\n\r\n```\r\n\t\tResultSet rs = stmt.executeQuery(\"select * from city\");\r\n\t\tList&lt;City&gt; citys = new ArrayList&lt;City&gt;();\r\n\t\t while (rs.next()) {\r\n\t\t\t\t\t\tCity city = new city;\r\n\t\t\t\t\t\tcity.setName(rs.getString(\"name\"));\r\n\t\t\t\t\t\tcitys.add(city)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tStringBuffer sb = new StringBuffer();\r\n\t\t\tfor(City temp: citys){\r\n\t\t\t\tsb.append(temp.toString());\r\n\t\t\t｝\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t//关键的来了\r\n\t\t\ttextarea.setText(sb.toString());\r\n\t\t\t\r\n```\r\n别问我City类怎么写，不然跳楼了啊...\r\n\r\n\r\n```\r\n\t Class cit｛\r\n\t\tprivate String name;\r\n\t\t\r\n\t\tpublic setName(){...};\r\n\t\t\r\n\t\tpublic getName(){...};\r\n\t\t\r\n\t\tpublic String toString(){\r\n\t\t\t\treturn \"name:\"+this.name+\"\\n\";\r\n\t\t｝\r\n\t ｝\r\n```\r\n其实重点就一个，textarea.setText（），我简直就是话痨啊....", "Konwledge_Point": "数据的输出", "Question": ["java如何将输出在控制台的数据输出在textarea中", ["编写了一个用户界面程序 ", "想实现点击查询按钮能够在textarea中显示数据库中内容的功能，关于数据库输出已经编写完成，代码如下", "\n\n", "```public class mysql {", "\n        public void input(String databasename,String username,String password) {", "\n            try {", "\n              Class.forName(\"com.mysql.jdbc.Driver\");     //加载MYSQL JDBC驱动程序", "\n              //Class.forName(\"org.gjt.mm.mysql.Driver\");", "\n             System.out.println(\"Success loading Mysql Driver!\");", "\n            }", "\n            catch (Exception e) {", "\n              System.out.print(\"Error loading Mysql Driver!\");", "\n              e.printStackTrace();", "\n            }", "\n            try {", "\n              Connection connect = DriverManager.getConnection(", "\n                  \"jdbc:mysql://localhost:3306/\"+databasename,username,password);", "\n                   //连接URL为   jdbc:mysql//服务器地址/数据库名  ，后面的2个参数分别是登陆用户名和密码", "\n\n", "          System.out.println(\"Success connect Mysql server!\");\n          Statement stmt = connect.createStatement();\n          ResultSet rs = stmt.executeQuery(\"select * from city\");\n                                                                  //user 为你表的名称\n    while (rs.next()) {\n            System.out.println(rs.getString(\"name\"));\n          }\n        }\n        catch (Exception e) {\n          System.out.print(\"get data error!\");\n          e.printStackTrace();\n        }\n      }\n}\n", "\n\n", "应该怎么做，求大神指导一下 谢谢大家\n"]], "Tag": "程序设计"}
{"Answer": "参考:\r\n\r\n```\r\n #include &lt;iostream&gt;\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    float a[] = {23.23,4325.23523,234,2.35,234.};\r\n    int i = sizeof(a)/sizeof(float);\r\n    for (; i &gt;= 0; i--)\r\n        cout &lt;&lt; a[i] &lt;&lt; endl;\r\n    return 0;\r\n}\r\n```\r\n可直接将map作为一个float型数组，按数组方式遍历即可。", "Konwledge_Point": "数据的输出", "Question": ["c++如何用mmap()映射浮点型数，然后将原数据输出？", ["把一个包含浮点型数的文件用mmap()映射到内存中，如果需要把其中的数据输出出来（比如cout)", "\n\n", "float *map = (float *)mmap(NULL, FILESIZE, PROT_READ, MAP_SHARED, fd, 0);", "\n\n", "如何用 map 指针把fd描述的文件中的浮点数打印出来"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/787162118946195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;最简单的int数组打印代码&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["确定排序数的个数，并输入对应数据，打印原始数据，然后将数据倒序输出。", ["确定排序数的个数，并输入对应数据，打印原始数据，然后将数据倒序输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["从键盘输入12个数据保存在一维数组中，并以每行4个数据的形式输出。", ["从键盘输入12个数据保存在一维数组中，并以每行4个数据的形式输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;else没加括号呗&amp;#xff0c;不加括号实际上只有后边第一句属于else内的 比如 下边&amp;#xff0c;后边语句还是会执行的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\nb&amp;#61;a/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\nc&amp;#61;a%100;\n&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d-%2d&amp;#34;&lt;/span&gt;,b,c);\n相当于\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\nb&amp;#61;a/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n}\nc&amp;#61;a%100;\n&lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d-%2d&amp;#34;&lt;/span&gt;,b,c);\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么会多输出数据，半天想不明白", ["#include <stdio.h>", "int main()", "{", "    int a,b,c;", "    scanf(\"%d\",&a);", "    if(a<10000)", "    {", "\n", "    ", "if", "(a/", "100", ">=", "22", ")\n    c=", "1900", "+a/", "100", ";\n    ", "else", "\n    c=", "2000", "+a/", "100", ";\n", "printf", "(", "\"%d-%2d\"", ",c,a%100);\n}\n", "else", "\nb=a/", "100", ";\nc=a%100;\n", "printf", "(", "\"%d-%2d\"", ",b,c);\n", "return", " ", "0", ";\n", "\n", " }", "9808", "1998-080-08", "为啥会有080这个数据输出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当10:14:51的数据来之前&amp;#xff0c;流中最大的事件时间 &amp;gt;&amp;#61; 10:24:50(窗口结束时间) &amp;#43; watermark延迟时间 &amp;#43; 允许延迟时间 &amp;#xff0c;导致当前waterMark 的值更新为 这个最大的事件时间&amp;#xff1b;导致 10:14:50-10:24:50 的这个窗口关闭。当10:14:51的数据来的时候&amp;#xff0c;因为窗口关闭了&amp;#xff0c;不能放到窗口进行计算了&amp;#xff0c;只能放到侧输出流进行输出了&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Flink处理乱序数据，关于侧输出流的问题", ["现在需要使用Flink处理一批乱序数据，设置了一个十分钟的窗口从10:14:50-10:24:50，但是为什么10:14:51的数据会输出到侧输出流中？", "\n", "val", " aggStream = dataStream\n      .filter(", "_", ".", "method", " == ", "\"GET\"", ")\n      .key", "By(", "_", ".", "url", ")", "\n      .time", "Window(Time.", "minutes", "(10)", ", ", "Time", ".", "seconds(", "5", "))\n        .allowed", "Lateness(Time.", "minutes", "(1)", ") ", "//允许延迟", "\n        .side", "OutputLateData(", "new", " OutputTag[ApacheLogEvent](", "\"late\"", ")", ")\n      .aggregate(", "new", " ", "PageCountAgg()", ", ", "new", " ", "PageViewCountWindowResult()", ")\n\n", "\n", "希望可以有朋友帮忙解决一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://img-blog.csdnimg.cn/6053e48051d240cfac8559e6cf311526.gif\" id=\"textarea_1637561918174_1637561992911_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://img-blog.csdnimg.cn/6053e48051d240cfac8559e6cf311526.gif&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何用74LS151实现数据的并串转换?例将并行 数据“101010”转为串行输出数据“101010”，设计 并仿真实现", ["如何用74LS151实现数据的并串转换?例将并行 数据“101010”转为串行输出数据“101010”，设计 并仿真实现"]], "Tag": "程序设计"}
{"Answer": "使用xml path\r\n\r\n```\r\n select name,adminid,(select Content from 资源跟踪表 where adminid=资源表.adminid from FOR XML PATH('')) Content from 资源表\r\n```", "Konwledge_Point": "数据的输出", "Question": ["SqlServer 2008 R2  如何多行数据输出为一行", ["大虾们，我这边现在有这样的一个需求，要从网页上导出数据，即从数据库里面找寻出数据再导出，两张表分别有AdminID关联，表里面的数据如图：", "\n\n", "请问这样的能实现吗？求语句如何实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题挺多的。代码重写了一下&amp;#xff0c;代码里加了注释&amp;#xff0c;具体如下&amp;#xff0c;ruyo如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"hljs\"&gt;#include &amp;lt;iostream&amp;gt;\n\nusing namespace std;\n\nclass Student\n{\npublic:\n\tvoid fun1(int xh,int cj);\n\tvoid fun2();\n\n\tint mxh;\n\tint mcj;\n};\n\n\nvoid Student::fun1(int xh,int cj)\n{\n\tmxh &amp;#61; xh;\n\tmcj &amp;#61; cj;\n}\n\nvoid Student::fun2()\n{\n\tcout &amp;lt;&amp;lt; mxh &amp;lt;&amp;lt; &amp;#34;,&amp;#34; &amp;lt;&amp;lt; mcj;\n}\n\n\nint main()\n{\n\tStudent s[4];\n\tStudent* p;\n\n\ts[0].fun1(21,90);\n\ts[1].fun1(45,89);\n\ts[2].fun1(1,70);\n\ts[3].fun1(34,92);\n\t//s[4].fun1(67,75);//注意&amp;#xff0c;前面只申请了4个原始&amp;#xff0c;从0-3已经够4个了&amp;#xff0c;这里就越界了\n\n\tp &amp;#61; &amp;amp;s[0];\n\n\tcout &amp;lt;&amp;lt; (*p).mxh &amp;lt;&amp;lt;&amp;#34;,&amp;#34; &amp;lt;&amp;lt; (*p).mcj &amp;lt;&amp;lt;endl;\n\tcout &amp;lt;&amp;lt; (p&amp;#43;2)-&amp;gt;mxh &amp;lt;&amp;lt;&amp;#34;,&amp;#34; &amp;lt;&amp;lt; (p&amp;#43;2)-&amp;gt;mcj &amp;lt;&amp;lt;endl;\n\t//cout &amp;lt;&amp;lt; (p&amp;#43;4)-&amp;gt;mxh &amp;lt;&amp;lt;&amp;#34;,&amp;#34; &amp;lt;&amp;lt; (p&amp;#43;4)-&amp;gt;mcj &amp;lt;&amp;lt;endl; //这个越界了\n\n\tgetchar();\n\tgetchar();\n\treturn 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["题目：建立一个对象数组，内放5个学生的数据(学号，成绩) ，用指针指向数组首元素，输出第1、3、5个", ["题目：建立一个对象数组，内放5个学生的数据(学号，成绩) ，用指针指向数组首元素，输出第1、3、5个学生的数据。\n\n有大佬知道是哪里出了问题嘛？非常感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种一般就是对返回的数据直接操作造成的&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["输出的数据跟后台返回的数据不一致 vue 2.5.2 axios 0.18", ["vue 2.5.2    axios 0.18", "输出的数据跟后台返回的数据不一致，不知是vue的问题还是axios的问题", "\n", "created", "(", ") {\n        ", "this", ".", "$http", ".", "interceptors", ".", "response", ".", "use", "(", "(", "res", ") =>", " {\n            ", "console", ".", "log", "(", "'拦截返回'", ", res)\n            ", "return", " res;\n        },\n        ", "(", "error", ") =>", " {\n            ", "return", " ", "Promise", ".", "reject", "(error);\n        });\n}\n", "\n", "如图所示", "代码里，axios拦截器输出的数据", "\n", "浏览器接收到的数据"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;void Print(struct node *head)\n{\n    struct node *&lt;span class=\"hljs-built_in\"&gt;ptr&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (head !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;ptr&lt;/span&gt; &amp;#61; head&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; \n        {\n            printf (&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;ptr&lt;/span&gt;-&amp;gt;data)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;ptr&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;ptr&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["函数Print (head)的功能是将头指针为 head的链表中各结点的数据依次输出。", ["void Print(struct node *head)", "{", "    struct node *ptr;", "\n", "if", " ", "(head", " ", "!=", " ", "NULL", "){", "\n    ", "2", " ", "分", "\n", "\n", ";", "        do {", "            printf (\"%d\\n\", ptr->data);", "            2 分", ";", "        } while ( 2 分", ");", "    }", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是将数据放在一个列表里&amp;#xff0c;如list&amp;#xff0c;然后页面定义一个listview把数据通过适配器传进去&amp;#xff0c;你现在的写法就是循环把所有数据写在同一个控件上&amp;#xff0c;导致数据覆盖只能显示最后一条&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["安卓如何输出数据库的数据到屏幕上", ["数据库里本有四个username和name等等，想要将数据库里所有username和name还有direction都输出到屏幕上，但是如图的while循环只能输出最后一行的数据，，求各位da佬帮助！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可以先测试一下&amp;#xff0c;用pandas,如果数据太大&amp;#xff0c;你还可以先切一部分数据出来看看&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import pandas as pd\n&lt;span class=\"hljs-attribute\"&gt;dd&lt;/span&gt;&amp;#61;pd.read_csv(&amp;#39;大文件.csv&amp;#39;)\n&lt;span class=\"hljs-comment\"&gt;#数据切片&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;df&lt;/span&gt;&amp;#61;dd[0:100]\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(df)\n&lt;span class=\"hljs-attribute\"&gt;data&lt;/span&gt;&amp;#61;dd[dd.iloc[:,0]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;cg00000292&amp;#39;&lt;/span&gt;]\n&lt;span class=\"hljs-comment\"&gt;#如果知道第一列表头&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;data&lt;/span&gt;&amp;#61;dd[dd[&lt;span class=\"hljs-string\"&gt;&amp;#39;列名&amp;#39;&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;cg00000292&amp;#39;&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["python处理超大（12.3GB）CSV文件，获取指定关键词所在行的数据输出为新CSV文件", ["筛选一个12.3GB的EXCEL文件中的关键词所在行的数据，太大了打不开。关键词由一个小文件决定，小文件（20.6MB）显示如下：", "\n", "\n", "\n", "前七行无用，第八行是表头，从第九行开始往后就是数据，其第一列的cg00000292、cg00002426...就是关键词。", "已知大文件数据的第一列也是cg+编号，大文件和小文件该列数据是有重合cg编号的。根据小文件中存在的cg序号所在行，提取大文件中的有对应cg序号所在行的数据，输出新的文件。", "我是通过csv显示的大文件：", "\n", "import", " csv\n", "with", " ", "open", "(", "'大文件.csv'", ", ", "'r'", ") ", "as", " f:\n    reader = csv.reader(f)\n    ", "print", "(", "type", "(reader))\n    ", "for", " row ", "in", " reader:\n        ", "print", "(row)\n\n", "\n", "显示结果为：", "\n", "\n", "但我看不到像小文件截图中显示的，类似小文件的前七行和后几行这样的信息。可以确定cg所在行的数据的开头也是是cg+编号，所以可以因此筛选。", "\n", "举个例子说明一下问题：假设大文件是这样的话：", "\n", "\n", "而只有cg00000292也出现在小文件的第一列cg编号中，所以筛选大文件输出的新文件为：", "\n", "\n", "我一开始的思路：①用一段代码先：获得大文件中每个cg编号的所在行数②去和小文件对应，获得重复cg编号有哪些，根据其在大文件中对应的行数，输出大文件这些行获得新excel文件实现筛选。", "\n", "但是文件实在太大了，处理不周到昂。"]], "Tag": "程序设计"}
{"Answer": "如果数据有多条，可以用 **num_rows()** 函数获取数据长度，并用 **fetch_assoc()**函数将多条记录存放在数组中，\r\n然后用While循环此数组即可全部输出。\r\n\r\n下面是一个范例：\r\n\r\n\r\n\r\n\r\n```\r\n &lt;?php\r\n$servername = \"localhost\";\r\n$username = \"username\";\r\n$password = \"password\";\r\n$dbname = \"myDB\";\r\n\r\n// Create connection\r\n$conn = new mysqli($servername, $username, $password, $dbname);\r\n// Check connection\r\nif ($conn-&gt;connect_error) {\r\n    die(\"Connection failed: \" . $conn-&gt;connect_error);\r\n} \r\n\r\n$sql = \"SELECT id, firstname, lastname FROM MyGuests\";\r\n$result = $conn-&gt;query($sql);\r\n\r\nif ($result-&gt;num_rows &gt; 0) {\r\n    // output data of each row\r\n    while($row = $result-&gt;fetch_assoc()) {\r\n        echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"firstname\"]. \" \" . $row[\"lastname\"]. \"&lt;br&gt;\";\r\n    }\r\n} else {\r\n    echo \"0 results\";\r\n}\r\n$conn-&gt;close();\r\n?&gt;\r\n```", "Konwledge_Point": "数据的输出", "Question": ["php查找MySQL中的数据，如何全部输出？", ["php查找MySQL中的数据条目，如果数据有多条，如何全部输出？用for循环可否，如果可以，如何判断获取到的数据长度？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;panduan&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; key, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[])&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;panduan&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; key, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; low &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, high &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, mid, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];  &lt;span class=\"hljs-comment\"&gt;//int b[n];&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (low &amp;lt; high) &lt;span class=\"hljs-comment\"&gt;//(low &amp;lt;&amp;#61; high)&lt;/span&gt;\n    {\n        mid &amp;#61; (low &amp;#43; high) / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        b[j] &amp;#61; a[mid];   &lt;span class=\"hljs-comment\"&gt;//b[j] &amp;#61; mid;&lt;/span&gt;\n        j&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (key &amp;#61;&amp;#61; a[mid]) {\n            i &amp;#61; mid;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;      &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (key &amp;lt; a[mid])\n            high &amp;#61; mid - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n            low &amp;#61; mid &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[mid] &amp;#61;&amp;#61; key)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, i);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;no\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; j; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;lt; j - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,&amp;#34;&lt;/span&gt;, b[i]);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, b[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, i, key;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,&amp;#34;&lt;/span&gt;, &amp;amp;a[i]);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i]);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;key);\n    &lt;span class=\"hljs-built_in\"&gt;panduan&lt;/span&gt;(n, key, a);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["[数据结构]为什么输出不了", ["题目，给定一个按值有序（升序）的N元整数数组A，采用折半查找法查找关键值k的位置，并给出查找的过程", "【输入形式】", "\n", "第一行：N", "\n", "第二行：A[0], A[1], ... , A[N-1]", "\n", "第三行：k", "【输出形式】", "\n", "第一行：k的位置（索引），若不存在则输出'no'", "\n", "第二行：查找的过程，每一次折半的中间（mid）位置的值，以逗号分隔。例如，1 2 3 4 5的中间位置为3，1 2 3 4的中间位置为2。", "【样例输入1】", "\n", "11", "2,5,8,11,15,16,22,24,27,35,50", "22", "【样例输出1】", "\n", "6", "16,27,22", "【样例输入2】", "\n", "11", "2,5,8,11,15,16,22,24,27,35,50", "10", "【样例输出2】", "\n", "no", "16,8,11", "【样例说明】", "【评分标准】", "\n", "必须使用折半法，其他方法不能得分。", "#include<stdio.h>", "int panduan(int n,int key,int a[]);", "int panduan(int n,int key,int a[])", "{     int low=0,high=n-1,mid,i=0;", "    int b[n];", "    int j=0;", "while(low<=high)", "{      mid=(low+high)/2;", "     b[j]=mid;", "          j++;", "         if(key==a[mid])i=mid;", "     else if(key<a[mid])high=mid-1;", "     else low=mid+1;     }", "if(a[mid]==key)printf(\"%d\\n\",i);", "    else printf(\"no\\n\");", "    for(i=0;i<j;i++)", "    {     if(i<j-1)printf(\"%d,\",b[i]);", "              else printf(\"%d\",b[i]);     }", "           return 0; }", "int main(){", "    int n,i,key;", "scanf(\"%d\",&n);  ", "\n", "int a[100];", "for (i=0;i<n;i++)", "    {    if(i<n-1)scanf(\"%d,\",&a[i]);", "    else scanf(\"%d\",&a[i]);    }", "scanf(\"%d\",&key);", "    panduan(n,key,a);", "            return 0; }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码中for 循环&amp;#xff0c;每次给A赋值&amp;#xff0c;循环结束后只保留最后一行结果。要将所有数据添加进去&amp;#xff0c;需要构建一个空数据框&amp;#xff0c;在循环中添加。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;A&amp;#61;pd.DataFrame()\nfor B in bz[&amp;#39;地址&amp;#39;]:\n    A &amp;#61; A.append(pr[pr[&amp;#39;收件地址&amp;#39;].str.contains(B)],ignore_index&amp;#61;True)\n    #print(A)#看输出结果\nA.to_excel(&amp;#39;E:\\范国强\\python\\指派\\指派.xlsx&amp;#39;,index &amp;#61; False)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["pandas中for遍历输出的数据被最后一个数据覆盖，导致写入excel时为空", ["\n", "import pandas as pd\nimport numpy as np\nimport os\n#读取数据源\npr = pd.read_excel('E:\\范国强\\python\\指派\\预到达运单信息.xlsx',usecols=['运单号','收件地址'])\nbz = pd.read_excel('E:\\范国强\\python\\指派\\地址库.xlsx',index_col=0)\npr['收件地址'] = pr['收件地址'].astype('string')\nbz['地址'] = bz['地址'].astype('string')\n#遍历，在‘收件地址’中找出包含B的数据，并写入名字为“指派”的excel文件\nfor B in bz['地址']:\n    A = pr[pr['收件地址'].str.contains(B)]\n    print(A)#看输出结果\n    A.to_excel('E:\\范国强\\python\\指派\\指派.xlsx',index = False)\n\n", "\n\n", "A输出的结果，4组数据，后面两组是没有在收件地址找到匹配数据", "\n\n", "\n\n", "最后输出文件的结果", "\n\n", "\n\n", "问：为什么会最后一组数据把前面的数据覆盖了。怎么能把A的结果全部写入excle，并且空白数据组不显示（或不写入）？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for(i&amp;#61;0;i&amp;lt;20;i&amp;#43;&amp;#43;)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    cout&amp;lt;&amp;lt;a[i]&amp;lt;&amp;lt;&amp;#34;    &amp;#34;;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    if((i&amp;#43;1)%4&amp;#61;&amp;#61;0)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        cout&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C++数据输出格式问题", ["问题如下，不知道怎么规整输出的数据，分行分列是否要用哪一个函数，谢谢！", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;void InsertList(Sqlist* L) 向顺序表中输入元素函数中&amp;#xff0c;scanf(&amp;#34;%c&amp;#34;,&amp;amp;(L-&amp;gt;elem[i])); 修改为&amp;#xff1a;scanf(&amp;#34; %c&amp;#34;,&amp;amp;(L-&amp;gt;elem[i]));   “ %c” %c前面加一空格。修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; maxsize 100&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; OK 1&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; ERROR 0&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; OVERFLOW -2&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ElemType;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;\n{\n    ElemType* elem;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; length;\n}Sqlist;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;InitList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Sqlist* L)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// 初始化顺序表&lt;/span&gt;\n&lt;/span&gt;{\n    L-&amp;gt;elem &amp;#61; (ElemType*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(ElemType));\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (L-&amp;gt;elem &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;分配失败&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OVERFLOW;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        L-&amp;gt;length &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;InsertList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Sqlist* L)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// 向顺序表中输入元素&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, num;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入几个元素以及元素值&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num);\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();            &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    L-&amp;gt;length &amp;#61; num;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; num; i&amp;#43;&amp;#43;)&lt;span class=\"hljs-comment\"&gt;//向顺序表中输入元素&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %c&amp;#34;&lt;/span&gt;, &amp;amp;L-&amp;gt;elem[i]);  &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;PrintList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Sqlist L)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// 输出顺序表中的元素&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; L.length; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c &amp;#34;&lt;/span&gt;, L.elem[i]);  &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Sqlist L;\n    &lt;span class=\"hljs-comment\"&gt;//cout &amp;lt;&amp;lt; &amp;#34;(1)初始化顺序表L&amp;#34; &amp;lt;&amp;lt; endl;&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;初始化\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;InitList&lt;/span&gt;(&amp;amp;L); &lt;span class=\"hljs-comment\"&gt;// 初始化 /&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入元素\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;InsertList&lt;/span&gt;(&amp;amp;L); &lt;span class=\"hljs-comment\"&gt;// 输入元素 /&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输出顺序表\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;PrintList&lt;/span&gt;(L); &lt;span class=\"hljs-comment\"&gt;// 输出元素 /&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["数据结构，顺序表输出数据错误，", ["在数据表中输入了5元素，但在打印输出时，只出来了2个。", "#define _CRT_SECURE_NO_WARNINGS", "#include <stdio.h>", "#include <stdlib.h>", "#define maxsize 100", "#define OK 1", "#define ERROR 0", "#define OVERFLOW -2", "typedef char ElemType;", "typedef struct", "{", "    char* elem;", "    int length;", "}Sqlist;", "char InitList(Sqlist* L)/", "初始化顺序表", "/", "{", "    L->elem = (char*)malloc(10", "sizeof(char));", "    if (L->elem == NULL)", "    {", "        printf(\"分配失败\");", "        return OVERFLOW;", "    }", "    else", "        L->length = 0;", "    return OK;", "}", "void InsertList(Sqlist", " L)/", "向顺序表中输入元素", "/", "{", "    int i, num;", "    printf(\"输入几个元素以及元素值：\\n\");", "    scanf(\"%d\",&num);", "    L->length = num;", "    for (i = 0; i <num; i++)/*向顺序表中输入元素*/", "        scanf(\"%c\",&(L->elem[i]));", "\n", "}", "void PrintList(Sqlist L)/", "输出顺序表中的元素", "/", "{", "    int i;", "    for (i = 0; i <L.length; i++)", "        printf(\"%c\",L.elem[i]);", "}", "int main()", "{", "    Sqlist L;", "    //cout << \"(1)初始化顺序表L\" << endl;", "    printf(\"初始化\\n\");", "    InitList(&L);/", "初始化", "/", "    printf(\"输入元素\\n\");", "    InsertList(&L);/", "输入元素", "/", "    printf(\"输出顺序表\\n\");", "    PrintList(L);/", "输出元素", "/", "    return 0;", "}", "输出结果："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;void PrintList(Linklist L){&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  LinkList tmp &amp;#61; L-&amp;gt;next;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  while(tmp !&amp;#61; NULL){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;%d \\n&amp;#34;, tmp-&amp;gt;a);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    tmp &amp;#61; tmp-&amp;gt;next;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  }&lt;/span&gt;&lt;br /&gt;}&lt;br /&gt;你没有给出链表结构 只能说下大概格式就这样子&amp;#xff0c;具体的输出打印 需要根据你链表的结构去打印&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何输出带头结点的单链表L中各数据元素的值", ["void PrintList(Linklist L)", "如何输出带头结点的单链表L中各数据元素的值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.cnblogs.com/dddddd/p/6680536.html\" id=\"textarea_1633418178382_1633418199298_0\"&gt;https://www.cnblogs.com/dddddd/p/6680536.html&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["多组测试数据求最大值", ["题目描述：", "输入一些整数，求最大值", "输入：", "多组测试数据 首先输入1个整数n表示测试组数 然后每行首先输入1个整数m,再输入m个整数", "输出：", "对于每组测试数据输出1行，内容为m个整数的最大值"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;后台有什么日志吗&amp;#xff1f;执行了sql语句没&amp;#xff1f;建议把代码贴出来比较好&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["script中数据输出", ["数据库通过SQL可以正常查出数据，且成功连接数据，不报错。但SSM项目页面该字段的值却显示不出来，为什么", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;遍历迭代输出即可。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/389037594456171.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, n,j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* p;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    p &amp;#61; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(n * &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;));\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;p[i]);\n    &lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, p[(i &amp;#43; j) % n]);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d \\n&amp;#34;&lt;/span&gt;, p[(i &amp;#43; j) % n]);\n        }\n    }\n        \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["7-4 一维数组按规律输出", ["从键盘输入n个整数，将这n个整数按给定的规律输出。建议一维数组实现。", "\n", "输入格式:", "先输入n的值。再另起一行输入n个元素，空格分隔。", "\n", "输出格式:", "输出n行数据。数据的规律见输出样例。", "（ 共n行。第i行，从所给定数据的第i个开始，顺序输出给定的所有数据。", "输出到最后一个数据后，再从头一个继续。注意：输出的每个数据后都有个空格）", "\n", "输入样例:", "6", "1 2 3 4 5 6", "输出样例:", "1 2 3 4 5 6", "2 3 4 5 6 1", "3 4 5 6 1 2", "4 5 6 1 2 3", "5 6 1 2 3 4", "6 1 2 3 4 5", "代码长度限制", "16 KB", "时间限制", "400 ms", "内存限制", "64 MB"]], "Tag": "程序设计"}
{"Answer": "打印出221\r\n```\r\n Obj obj1; //会调用构造，所以i++了(变为1了)\r\n\tf();        //调用函数f(),在函数内定义了一个对象，也会调用构造,i++了(变为2了)，打印出第一个数字2,\r\n\t           //打印完以后，f()函数结束了，obj2离开了作用域，调用析构i--了(变为1了)\r\n\tObj *obj3 = new Obj;//会调用构造，所以i++了(变为2了)\r\n\tcout &lt;&lt; obj3-&gt;getVal();//打印出2\r\n\tdelete obj3;//调用析构，i--(变为1了)\r\n\tcout &lt;&lt; Obj::getVal();//打印出1\r\n```\r\n注：\r\n静态数据成员是所有对象所公有的，因此，对多个对象来说，静态数据成员只存储一处，供所有对象共用。静态数据成员的值对每个对象都是一样，但它的值是可以更新的。只要对静态数据成员的值更新一次，保证所有对象存取更新后的相同的值，这样可以提高时间效率。", "Konwledge_Point": "数据的输出", "Question": ["c++关于静态数据成员的问题，看以下程序，会输出什么数字，过程是什么", []], "Tag": "程序设计"}
{"Answer": "你就创建了一行HSSFRow row = sheet.createRow((int) 0);，下面都是对着一行操作的，肯定只有一组数据咯，而且应该是最后一组。因为你每次都是createCell的", "Konwledge_Point": "数据的输出", "Question": ["输出的表格 只有一组数据.怎么修改？", ["public boolean toOutList(List billList) throws IOException  {", "\n          // 第一步，创建一个webbook，对应一个Excel文件", "\n        HSSFWorkbook wb = new HSSFWorkbook();", "\n        // 第二步，在webbook中添加一个sheet,对应Excel文件中的sheet", "\n        HSSFSheet sheet = wb.createSheet(\"订单\");", "\n        // 第三步，在sheet中添加表头第0行,注意老版本poi对Excel的行数列数有限制short", "\n        HSSFRow row = sheet.createRow((int) 0);", "\n        // 第四步，创建单元格，并设置值表头 设置表头居中", "\n        HSSFCellStyle style = wb.createCellStyle();", "\n        style.setAlignment(HSSFCellStyle.ALIGN_CENTER); // 创建一个居中格式  ", "\n\n", "    HSSFCell cell = row.createCell(0);  \n\n    cell.setCellValue(\"订单编码\");  \n    cell.setCellStyle(style);  \n    cell = row.createCell( 1);  \n    cell.setCellValue(\"患者姓名\");  \n    cell.setCellStyle(style);  \n    cell = row.createCell( 2);  \n    cell.setCellValue(\"医护姓名\");  \n    cell.setCellStyle(style);  \n    cell = row.createCell( 3);  \n    cell.setCellValue(\"账单金额\");  \n    cell.setCellStyle(style);  \n\n    // 第五步，写入实体数据，  \n    int x=billList.size();\n    for (int i = 0; i < x; i++){  \n        Bill b= billList.get(i);  \n        // 第四步，创建单元格，并设置值  \n        row.createCell(0).setCellValue( b.getOrderNum());  \n        row.createCell(1).setCellValue(b.getPaName());  \n        row.createCell(2).setCellValue(b.getYihuName());  \n        row.createCell(3).setCellValue(b.getBillMoney());  \nSystem.out.println(b);\n    }  \n\n    FileOutputStream fout = new FileOutputStream(\"F:/students.xls\");  \n    wb.write(fout);\n    fout.flush();\n    fout.close();  \n    return true;\n}\n", "\n\n", "}", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; d;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; bs[&lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; b[&lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *p;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; e[&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *t;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; ex;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag;\n\n    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Input a float point number or 0xXXXXXXXX or 0xXXXXXXXXXXXXXXXX:&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-built_in\"&gt;fflush&lt;/span&gt;(stdout);\n        &lt;span class=\"hljs-built_in\"&gt;rewind&lt;/span&gt;(stdin);\n        &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(s,&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;,stdin);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;&amp;#61;&amp;#61;s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(s,&lt;span class=\"hljs-string\"&gt;&amp;#34;0x%16I64X&amp;#34;&lt;/span&gt;,(__int64 *)&amp;amp;d) &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s)&amp;gt;&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;) {flag&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(s,&lt;span class=\"hljs-string\"&gt;&amp;#34;0x%8X&amp;#34;&lt;/span&gt;    ,(  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;   *)&amp;amp;f))                 {flag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(s,&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;       ,           &amp;amp;f)\n         &amp;amp;&amp;amp; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(s,&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;      ,           &amp;amp;d))                 {flag&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (flag&amp;amp;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;f&amp;#61;%g\\n&amp;#34;&lt;/span&gt;,f);\n        p&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *)&amp;amp;f;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;hex&amp;#61;%02X %02X %02X %02X\\n&amp;#34;&lt;/span&gt;,p[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n        &lt;span class=\"hljs-built_in\"&gt;ltoa&lt;/span&gt;(*(&lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; *)&amp;amp;f,b,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;sprintf&lt;/span&gt;(bs,&lt;span class=\"hljs-string\"&gt;&amp;#34;%032s&amp;#34;&lt;/span&gt;,b);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;bin&amp;#61;%s\\n&amp;#34;&lt;/span&gt;,bs);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;bin&amp;#61;%.1s %.8s   %s\\n&amp;#34;&lt;/span&gt;,bs,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;strncpy&lt;/span&gt;(e,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;);e[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        ex&amp;#61;&lt;span class=\"hljs-built_in\"&gt;strtol&lt;/span&gt;(e,&amp;amp;t,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    %c %-4d-127 1.%s\\n&amp;#34;&lt;/span&gt;,(bs[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)?&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;,ex,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;);\n        ex-&amp;#61;&lt;span class=\"hljs-number\"&gt;127&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    %c %-8d 1.%s\\n&amp;#34;&lt;/span&gt;,(bs[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)?&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;,ex,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (flag&amp;amp;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\nd&amp;#61;%lg\\n&amp;#34;&lt;/span&gt;,d);\n        p&amp;#61;(&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *)&amp;amp;d;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;hex&amp;#61;%02X %02X %02X %02X %02X %02X %02X %02X\\n&amp;#34;&lt;/span&gt;,p[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],p[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n        _i64toa(*(__int64 *)&amp;amp;d,b,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;sprintf&lt;/span&gt;(bs,&lt;span class=\"hljs-string\"&gt;&amp;#34;%064s&amp;#34;&lt;/span&gt;,b);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;bin&amp;#61;%s\\n&amp;#34;&lt;/span&gt;,bs);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;bin&amp;#61;%.1s %.11s   %s\\n&amp;#34;&lt;/span&gt;,bs,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;strncpy&lt;/span&gt;(e,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;);e[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        ex&amp;#61;&lt;span class=\"hljs-built_in\"&gt;strtol&lt;/span&gt;(e,&amp;amp;t,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    %c %-6d-1023 1.%s\\n&amp;#34;&lt;/span&gt;,(bs[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)?&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;,ex,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;);\n        ex-&amp;#61;&lt;span class=\"hljs-number\"&gt;1023&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    %c %-11d 1.%s\\n&amp;#34;&lt;/span&gt;,(bs[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)?&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;,ex,bs&amp;#43;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-comment\"&gt;//Input a float point number or 0xXXXXXXXX or 0xXXXXXXXXXXXXX&lt;span class=\"hljs-doctag\"&gt;XXX:&lt;/span&gt;0x3FC0000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//d&amp;#61;0.125&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//hex&amp;#61;3F C0 00 00 00 00 00 00&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;0011111111000000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;0 01111111100   0000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; 1020  -1023 1.0000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; -3          1.0000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//Input a float point number or 0xXXXXXXXX or 0xXXXXXXXXXXXXX&lt;span class=\"hljs-doctag\"&gt;XXX:&lt;/span&gt;0x3E000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//f&amp;#61;0.125&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//hex&amp;#61;3E 00 00 00&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;00111110000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;0 01111100   00000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; 124 -127 1.00000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; -3       1.00000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//Input a float point number or 0xXXXXXXXX or 0xXXXXXXXXXXXXX&lt;span class=\"hljs-doctag\"&gt;XXX:&lt;/span&gt;0.125&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//f&amp;#61;0.125&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//hex&amp;#61;3E 00 00 00&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;00111110000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;0 01111100   00000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; 124 -127 1.00000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; -3       1.00000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//d&amp;#61;0.125&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//hex&amp;#61;3F C0 00 00 00 00 00 00&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;0011111111000000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//bin&amp;#61;0 01111111100   0000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; 1020  -1023 1.0000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &amp;#43; -3          1.0000000000000000000000000000000000000000000000000000&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//Input a float point number or 0xXXXXXXXX or 0xXXXXXXXXXXXXX&lt;span class=\"hljs-doctag\"&gt;XXX:&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于数据类型、数据输出的疑问", ["这段代码的第一个输出为什么后面两位出现了设定值中没有的值啊", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "main", "()\n{\n    ", "float", " x=", "1234.567", ";\n    ", "double", " y=", "1234.5678", ";\n    ", "printf", "(", "\"x=%f,y=%f\\n\"", ",x,y);\n    ", "printf", "(", "\"x=%6.3f,y=%10.3f\\n\"", ",x,y);\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;printf(&amp;#34;\\n&amp;#34;);&lt;br /&gt;输出空行。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言怎么隔行输出，输出是两行数据，但是两行之间有空一行", ["c语言怎么隔一行输出就比如输出1 2 3", "\n", "                                                  ", "4", " ", "5", " ", "6", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考如下&amp;#xff0c;欢迎采纳&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;prime&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(x); i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; flag;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, count&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (n &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; n &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;; n&amp;#43;&amp;#43;) \n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;prime&lt;/span&gt;(n)) \n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-5d&amp;#34;&lt;/span&gt;, n);\n            count&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (count % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["求1~300间的全部素数并输出。  输出数据采用“%-5d”的格式间隔，并且每行10个数据。", ["不会敲这个程序 我们规定只能用c语言里面的知识点 没学其他的 希望有人帮我解答一下，谢谢啦。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不考虑重置、寄存器x态传递的情况下提供一种思路&amp;#xff0c;也可以使用状态机实现&amp;#xff0c;更容易思考&lt;/p&gt;\n&lt;p&gt;整体思路是ram的数据是顺序输出的情况下&amp;#xff0c;需要读7拍将ram的数据全部取出&amp;#xff0c;每次取出需要赋值给输出的不同位宽。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-verilog\"&gt;&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]      raddr;&lt;span class=\"hljs-comment\"&gt;//addr read addr&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;223&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]  dout;&lt;span class=\"hljs-comment\"&gt;//data out&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]      width_32;\n\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]   ram_dout;&lt;span class=\"hljs-comment\"&gt;//ram读取的数据&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;             read_flag;&lt;span class=\"hljs-comment\"&gt;//允许读的指示位&amp;#xff08;高电平指示&amp;#xff09;&amp;#xff0c;需要你前面的RTL指定好&amp;#xff0c;什么时候7个数据已经存好了&amp;#xff0c;允许读取&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;             ram_dout_valid;&lt;span class=\"hljs-comment\"&gt;//ram读数据有效指示位&amp;#xff0c;这里假设ram读数据只延迟一个clk&amp;#xff0c;所以对read_flag打一拍&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;             dout_valid;&lt;span class=\"hljs-comment\"&gt;//指示拼接好的数据有效&amp;#xff0c;这里指示位只持续了一个时钟&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; clk) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    ram_dout_valid &amp;lt;&amp;#61; read_flag;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; clk) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (read_flag) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        raddr &amp;lt;&amp;#61; raddr &amp;#43; &lt;span class=\"hljs-number\"&gt;1&amp;#39;d1&lt;/span&gt;;        \n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        raddr &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&amp;#39;d0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; clk) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ram_dout_valid) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        width_32 &amp;lt;&amp;#61; width_32 &amp;#43; &lt;span class=\"hljs-number\"&gt;5&amp;#39;d32&lt;/span&gt;;        \n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        width_32 &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;8&amp;#39;d0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; clk) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;  (ram_dout_valid) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        dout[wdith_32 &amp;#43; &lt;span class=\"hljs-number\"&gt;5&amp;#39;d31&lt;/span&gt;: width_32] &amp;lt;&amp;#61; ram_dout;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; clk) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ram_dout_valid &amp;amp;&amp;amp; !read_flag) &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        dout_valid &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&amp;#39;d1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["verilog如何实现同一变量在不同时序下的值组合成一条数据输出？", ["vivado IP核调用了一个位数为32位，深度为7的伪双口RAM,请问各位怎么把7个不同时序读出的7个32位数据组合输出成一个234位的数据并输出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输出的TXT文件编码的默认格式格式与c语言的默认格式不一致&amp;#xff0c;导致乱码&amp;#xff0c;用记事本打开时可以换一种编码方式即可&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言文本输出乱码问题", ["\n", "c语言文本输出，运行结果正确，但是输出的文本确实乱码，请问是个什么情况？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include&amp;lt;iostream&amp;gt;&lt;br /&gt;\n#include&amp;lt;fstream&amp;gt;&lt;br /&gt;\n#include&amp;lt;string&amp;gt;&lt;br /&gt;\nusing namespace std;&lt;br /&gt;\nstruct student&lt;br /&gt;\n{&lt;!-- --&gt;&lt;br /&gt;\n    int num;&lt;br /&gt;\n    string name;&lt;br /&gt;\n    float Mscore;&lt;br /&gt;\n    float Cscore;&lt;br /&gt;\n};&lt;br /&gt;\nvoid main()&lt;br /&gt;\n{&lt;!-- --&gt;&lt;br /&gt;\n    student text[8] &amp;#61; { 0 };&lt;br /&gt;\n    ofstream OutFile(&amp;#34;f:\\\\result.txt&amp;#34;);&lt;br /&gt;\n    ifstream readFile(&amp;#34;f:\\\\score.dat&amp;#34;,ios::in);&lt;br /&gt;\n    for (int i &amp;#61; 0; i &amp;lt; 8; i&amp;#43;&amp;#43;)&lt;br /&gt;\n    {&lt;!-- --&gt;&lt;br /&gt;\n        readFile &amp;gt;&amp;gt; text[i].num;&lt;br /&gt;\n        readFile &amp;gt;&amp;gt; text[i].name;&lt;br /&gt;\n        readFile &amp;gt;&amp;gt; text[i].Mscore;&lt;br /&gt;\n        readFile &amp;gt;&amp;gt; text[i].Cscore;&lt;br /&gt;\n    }&lt;br /&gt;\n    for (int i &amp;#61; 0; i &amp;lt; 8; i&amp;#43;&amp;#43;)&lt;br /&gt;\n    {&lt;!-- --&gt;&lt;br /&gt;\n        OutFile &amp;lt;&amp;lt; text[i].num &amp;lt;&amp;lt; &amp;#39; &amp;#39;;&lt;br /&gt;\n        OutFile &amp;lt;&amp;lt; text[i].name &amp;lt;&amp;lt; &amp;#39; &amp;#39;;&lt;br /&gt;\n        OutFile &amp;lt;&amp;lt; text[i].Mscore &amp;#43; text[i].Cscore &amp;lt;&amp;lt; endl;&lt;br /&gt;\n    }&lt;br /&gt;\n    readFile.close();&lt;br /&gt;\n    OutFile.close();&lt;br /&gt;\n}&lt;/p&gt;\n\n&lt;p&gt;有用的话麻烦点个赞&amp;#xff0c;谢谢小兄弟&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C++读取data文件中的多类型数据存入数组并计算输出", ["每个学生的信息包括：学号（整型）、姓名（字符串）、数学成绩（浮点数）、语文成绩（浮点数），保存在文件score.dat。从文件读取学生信息，存入学生数组，计算每人的总成绩，然后再保存到文件，输出文件存储格式：学号、姓名、总成绩。要求上传代码和输出文件。", "\n\n", "刚学俩月，救救孩子……", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个n变量当成两个值用了啊&lt;br /&gt;先输入n表示总共有多少个节点&amp;#xff0c;可在循环里你又输入n作为节点值&lt;br /&gt;你就不能再定义一个新变量来表示节点输入值么&lt;br /&gt;循环内重新输入n值&amp;#xff0c;等于for循环结束条件就变了啊&lt;br /&gt;你不会第一个输入的节点值就是1吧&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["单链表建立后，却不能输出所有的data数据", ["各位，本人在利用尾结点建立单链表后，设置的display函数只能展示一个链表data，请问为什么会这样呢？", "#include<stdio.h>", "#include<stdlib.h>", "typedef struct lnode", "{", "    int data;", "    struct lnode *next;", "}lnode,*linklist;", "void creatlist(linklist &L)", "{", "    lnode *p,*s;", "    L=(linklist)malloc(sizeof(lnode));", "    p=L;", "    int i,n;", "    scanf_s(\"%d\",&n);", "    for(i=0;i<n;i++)", "    {", "        s=(lnode *)malloc(sizeof(lnode));", "        scanf_s(\"%d\",&n);", "        s->data=n;", "        p->next=s;", "        p=s;", "        p->next=NULL;", "    }", "}", "void display(linklist L)", "{", "    lnode *p=L->next;", "    while(p!=NULL)", "    {", "        printf(\"%d\\n\",p->data);", "    p=p->next;", "    }", "}", "int main()", "{", "    linklist L;", "    creatlist(L);", "    display(L);", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;br /&gt;\n希望对您有帮助&amp;#xff1a;https://blog.csdn.net/it_xiangqiang/category_10581430.html&lt;br /&gt;\n希望对您有帮助&amp;#xff1a;https://blog.csdn.net/it_xiangqiang/category_10768339.html&lt;br /&gt;\n &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言用scanf输入数据，输出计算结果时要求有文字说明，取小数点后2位数字。求圆。", ["用scanf输入数据，输出计算结果时要求有文字说明，取小数点后2位数字。求圆周长、圆面积、圆球表面积、圆球体积、圆柱体积。\n#include\nint main()\n{\n\tfloat r,h,c,s,s1,v,vw;\n\tfloat PI=3.1415926;\n\tprintf(\"请输入r,h\\n\");\n    scanf(\"%f,%f \",&r,&h);\n\tc=2*PI*r;\n\ts=PI*r*r;\n\ts1=4*PI*r*r;\n\tv=4.0/3.0*PI*r*r*r;\n\tvw=PI*r*r*h;\n\tprintf(\"圆周长是%6.2f\\n,圆面积是%6.2f\\n,圆球表面积是%6.2f\\n,圆球体积是%6.2f\\n,圆柱体积是%6.2f\\n\",c,s,s1,v,vw);\n\treturn 0;\n}\n请问哪里错了，后面两个不对"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用while每次输入天数&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["输出格式怎么使多组数据输出", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;实现代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; M 100&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 100&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,n,m,c[M][M];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;m);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (m--)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n                &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;c[i][j]);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, c[j][i]);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/65927228525618.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["给出一个n*n的矩阵，输出它的转置矩阵，即行列互换后输出。", ["/", "Description", "给出一个n", "n的矩阵，输出它的转置矩阵，即行列互换后输出。", "Input", "测试数据有多组，第一行的整数T表示测试数据的组数，后跟T组测试数据。", "每组的第一行是一个正整数n（1<n<10），后面有一个n", "n的矩阵。所有数据之间", "用空格分隔，都是整数。", "Output", "对于每组测试数据，输出对应的转置矩阵，输出时按n", "n的格式，数据之间用一个", "空格分隔。", "Sample Input", "2", "3", "1 2 3", "4 5 6", "7 8 9", "2", "1 2", "3 4", "Sample Output", "1 4 7", "2 5 8", "3 6 9", "1 3", "2 4*"]], "Tag": "程序设计"}
{"Answer": "&lt;h2 id=\"int类型整数累加用long类型啊&amp;#xff0c;没必要用浮点型&amp;#xff0c;怕溢出用long-long也可以呀。\"&gt;int类型整数累加用long类型啊&amp;#xff0c;没必要用浮点型&amp;#xff0c;怕溢出用long long也可以呀。&lt;/h2&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt;  &lt;span class=\"hljs-title\"&gt;sum&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; m)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt;  s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; n; i &amp;lt;&amp;#61;m; i&amp;#43;&amp;#43;)\n    {\n        s&amp;#43;&amp;#61; i;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; s;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, m &amp;#61; &lt;span class=\"hljs-number\"&gt;1000000&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt;  r &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(n, m);\n    std::cout &amp;lt;&amp;lt; r &amp;lt;&amp;lt; std::endl;\n    std::cin&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于数据的定义（输出数与预计数不相同）", ["预期输出数字已经和输出数字很像了，但是就是没有办法做到了一样", "\n", "改用了Long double 以后还是这样的"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;n &amp;#61; input(&amp;#39;输入数字&amp;#xff0c;数字之间用空格隔开&amp;#xff1a;&amp;#39;).split(&amp;#39; &amp;#39;)\nn &amp;#61; [int(i) for i in n]   # 列表\nprint(&amp;#39;最大值:&amp;#39;, max(n))\nmax_index &amp;#61; n.index(max(n))\nif max_index&amp;#61;&amp;#61;0:\n    print(&amp;#39;右侧相邻元素&amp;#xff1a;&amp;#39;, n[max_index&amp;#43;1])\nelif max_index&amp;#61;&amp;#61;len(n)-1:\n    print(&amp;#39;左侧相邻元素&amp;#xff1a;&amp;#39;, n[max_index-1])\nelse:\n    print(&amp;#39;左右两侧相邻元素&amp;#xff1a;&amp;#39;, n[max_index-1], n[max_index&amp;#43;1])&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["请问在Python中如何使用任意数目的整数创建列表并且输出其中的最大值以及相邻元素？", ["在下Python小白，老师布置的实验作业，我只能实现输出固定数字的最大值，无法达到题目要求，请各位大佬指点一下全部代码，谢谢。", "\n\n", "从键盘输入任意数目的整数n（n>=3），使用这些数据创建列表，输出其中的最大值以及相邻元素。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a-(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)a;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,c;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf%lf%lf&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c);\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; sum&amp;#61;a&amp;#43;b&amp;#43;c;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(sum&amp;gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)a&amp;#43;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)b&amp;#43;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)c);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(a)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(b)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(c));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["输入三个double类型数据，计算他们的和，如果和大于10.0，就输出他们整数部分的和，如果和小于10.0，就输出他们小数部分的和", ["输入三个double类型数据，计算他们的和，如果和大于10.0，就输出他们整数部分的和，如果和小于10.0，就输出他们小数部分的和。"]], "Tag": "程序设计"}
{"Answer": "没有代码，但是一般来说，svm_predict(你的数据集)，返回的是一个数组，代表预测的结果\r\n你拿数据集的标签（实际的结果）和这个数组结果的比较，用zip函数之类的，就可以知道是否正确。", "Konwledge_Point": "数据的输出", "Question": ["如何输出svm_predict预测错误的数据？", ["。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;reg [ 47 : 0 ] mem [ 0 : 255 ]&amp;#xff1b;&lt;br /&gt;问题1&amp;#xff1a;[ 47 : 0 ] 是不是可以理解为每一个地址可以存储一个位宽为48bits的数据&amp;#xff1f;    回答正确&lt;br /&gt;问题2&amp;#xff1a;[ 0&amp;#xff1a;255 ] 是不是可以理解为一共有256个地址可以用来存储数据&amp;#xff1f;                回答正确&lt;br /&gt;问题3&amp;#xff1a;请问图片里的描述正确吗&amp;#xff1f;    图片描述正确&lt;/p&gt;\n&lt;p&gt;问题4&amp;#xff1a;地址本身也要用一组二进制数来表示&amp;#xff0c;那表示地址本身的二进制数的位宽该如何表示呢&amp;#xff1f;&lt;br /&gt;reg [ 47 : 0 ] mem [ 0 : 255 ]&amp;#xff1b; //比如这个&amp;#xff0c;地址深度是 256&amp;#xff0c;地址位宽可以是 8&lt;br /&gt;reg    [7:0] mem_addr;&lt;br /&gt;reg    [47:0] mem_dat;&lt;br /&gt;assign    mem_dat &amp;#61; mem[mem_addr];&lt;/p&gt;\n&lt;p&gt;reg [ 21 : 0 ] mem [ 0 : 99 ]&amp;#xff1b; //比如这个&amp;#xff0c;地址深度是 100&amp;#xff0c;地址位宽可以是 7 ,数据宽度是 22&lt;br /&gt;reg    [6:0] mem_addr;&lt;br /&gt;reg    [21:0] mem_dat;&lt;br /&gt;assign    mem_dat &amp;#61; mem[mem_addr];&lt;/p&gt;\n&lt;p&gt;问题5&amp;#xff1a;地址位宽和数据位宽之间有关联吗&amp;#xff1f;如果二者有关联的话&amp;#xff0c;在设计电路的时候应该注意些什么&amp;#xff1f;&lt;br /&gt;没啥关系。(大多数用 2 的指数次方来描述数据位宽和地址位宽&amp;#xff0c;用别的数也不奇怪)&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于RAM地址位宽和数据位宽的问题", ["刚开始接触RAM的设计，对输入输出数据、地址及位宽的概念与关系的理解有点混乱", "part 1", "从书中看到Verilog定义一个存储器的语法格式为 reg [ 47 : 0 ] mem [ 0 : 255 ]；", "问题1：[ 47 : 0 ]   是不是可以理解为每一个地址可以存储一个位宽为48bits的数据？", "问题2：[ 0：255 ] 是不是可以理解为一共有256个地址可以用来存储数据？", "问题3：请问图片里的描述正确吗？", "问题4：地址本身也要用一组二进制数来表示，那表示地址本身的二进制数的位宽该如何表示呢？", "问题5：地址位宽和数据位宽之间有关联吗？如果二者有关联的话，在设计电路的时候应该注意些什么？"]], "Tag": "程序设计"}
{"Answer": "如果强调实时性 应该是都需要的 只不过字节流的缓冲区小\r\n\r\n服务器通过输出流向客户端响应了一个300字节的信息，但是，这时的输出流有一个1024字节的缓冲区。所以，输出流就一直等着WEB服务器继续向客户端响应信 息，当WEB服务器的响应信息把输出流中的缓冲区填满时，这时，输出流才向WEB客户端响应消息。\r\n  为了解决这种尴尬的局面，flush()方法出现了。flush()方法可以强迫输出流(或缓冲的流)发送数据，即使此时缓冲区还没有填满，以此来打破这种死锁的状态。\r\n  当我们使用输出流发送数据时，当数据不能填满输出流的缓冲区时，这时，数据就会被存储在输出流的缓冲区中。如果，我们这个时候调用关闭(close)输出流，存储在输出流的缓冲区中的数据就会丢失。所以说，关闭(close)输出流时，应先刷新(flush)换冲的输出流，话句话说就是：“迫使所有缓冲的输出数据被写出到底层输出流中”", "Konwledge_Point": "数据的输出", "Question": ["java IO流的输出字节流为什么在写入数据后不用刷新", ["java IO流的输出字符流在写入操作后，需要刷新，为什么输出字节流中在写入数据后不用刷新？"]], "Tag": "程序设计"}
{"Answer": "字符串长度需要比你实际用到的长度+1\r\n比如你char num[12]，学号只能11位，否则会把结尾的\\\\0冲掉，导致和后面的姓名连成一个字符串。", "Konwledge_Point": "数据的输出", "Question": ["C语言 输出时多显示了一个数据", ["\n第一步输入完数据后  然后退出进行第五步输出数据时  学号输出的时候还附带了姓名（就是本来应该只输出学号却还多输出了名字）   不知道为什么？", "\n\n", "源代码如下", "\n#include", "\n#include", "\n#include", "\n#include", "\n\n", "int bExit = 0;", "\nint total = 0;", "\n#define Create(the_one) the_one=(Stu *)malloc(sizeof(Stu))", "\ntypedef", "\nstruct Student", "\n{", "\n\n", "char num[12];      // 数字学号\nchar name[20]; // 姓名\nchar sex[5];     // 性别\nchar telnum[11];    // 电话号码\nstruct Student *next;\n", "\n\n", "}Stu;", "\nStu *the_one, *h, *pr,*last, *end;", "\n\n", "//1.添加学生函数", "\nvoid ADD()", "\n{", "\n    int Four = 0;", "\n    printf(\"================================\\n\");", "\n\n", "Create(the_one);\nthe_one->next = NULL;\n end = last;          //end指向倒数第二个结点\n\nlast->next = the_one;//将the_one放在链表的 最后\nlast = the_one;      //last指向倒数第一个结点 \n\n\n\n//输入学号\nprintf(\"输入学生信息：\\n12位学号：\");\n\nwhile (!Four)\n{\n    gets(the_one->num);\n    if (strlen(the_one->num) != 12)\n        printf(\"输入非法：学号必须是12位，请重新输入!\\n学号：\");\n    else\n        Four = 1;\n}\n\n\n//输入姓名\nprintf(\"学生姓名：\");\ngets(the_one->name);\n//输入电话号码\nprintf(\"学生电话号码(11位）：\");\n gets(the_one->telnum);\n //请输入性别\n printf(\"请输入性别(填写男或女)： \");\n gets(the_one->sex);\n\n//总数+1\ntotal++;\n printf(\"================================\\n\");\n", "\n\n", "}", "\n\n", "//2.查询学生函数", "\nvoid CHECK()", "\n{", "\n    Stu *target, *p;", "\n    int fond = 0;", "\n    printf(\"================================\\n\");", "\n    printf(\"输入要查找学生的学号：\\n学号：\");", "\n    Create(target);", "\n    gets(target->num);", "\n    for (p = h->next; p; p = p->next)", "\n    {", "\n        if (!strcmp(p->num, target->num))", "\n        {", "\n            printf(\"学号为%s的学生信息：姓名（%s）,性别（%s）,电话号码（%s）\\n\", p->num, p->name,p->sex, p->telnum);", "\n            free(target);", "\n            fond = 1;", "\n        }", "\n    }", "\n    if (!fond)", "\n        printf(\"Wrong Student NO.!\\n\");", "\n    printf(\"================================\\n\");", "\n}", "\n//3.编辑学生", "\nvoid EDIT()", "\n{", "\n    Stu *target, *p;", "\n    int fond = 0;", "\n    printf(\"================================\\n\");", "\n    printf(\"输入要编辑学生的学号：\\n学号：\");", "\n    Create(target);", "\n    gets(target->num);", "\n    for (p = h->next; p; p = p->next)", "\n    {", "\n        if (!strcmp(p->num, target->num))", "\n        {", "\n            printf(\"学号为%s的学生信息：姓名（%s）,性别（%s）,电话号码（%s）\\n\", p->num, p->name,p->sex, p->telnum);", "\n            printf(\"请选择修改项目：\\n1：姓名\\n2：电话号码\\n\");", "\n            char c;", "\n            c = getch();", "\n            switch (c)", "\n            {", "\n            case '1':", "\n                printf(\"输入正确的姓名：\");", "\n                gets(p->name);", "\n                break;", "\n            case '2':", "\n                printf(\"输入最新电话号码：\");", "\n                gets(p->telnum);", "\n                break;", "\n            }", "\n            printf(\"学号为%s的学生最新信息：姓名（%s）,性别（%s）,电话号码（%s）\\n\", p->num, p->name,p->sex, p->telnum);", "\n\n", "        free(target);               // ？？\n        fond = 1;\n    }\n}\nif (!fond)\n    printf(\"Not Exit This NO.!\\n\");\nprintf(\"================================\\n\");\n", "\n\n", "}", "\n//4.删除学生", "\nvoid DELETE1()", "\n{", "\n    void PRINALL();", "\n    PRINALL();", "\n    Stu *target, *p, *pr;", "\n    int fond = 0;", "\n    printf(\"================================\\n\");", "\n    printf(\"输入要删除学生的学号：（如果删除所有学生信息，请输入0000）\\n学号：\");", "\n    Create(target);", "\n    gets(target->num);", "\n\n", "//  char *zero=&\"0000\";\n\nif (!strcmp(target->num, \"0000\"))\n{\n    h->next = NULL;\n    total = 0;\n}\nelse\n{\n\n    for (pr = h, p = h->next; p; pr = pr->next, p = p->next)\n    {\n        if (!strcmp(p->num, target->num))\n        {\n            printf(\"学号为%s的学生信息已删除\\n\", p->num);\n            free(target);\n            pr->next = p->next;\n            p->next = NULL;\n            //               free(p);此句报错\n            fond = 1;\n            total--;\n        }\n    }\n    if (!fond)\n        printf(\"没有找到学号为%s的学生，请确认学号输入是否正确\\n\");\n}\nprintf(\"================================\\n\");\n", "\n\n", "}", "\n//5.打印全部", "\nvoid PRINALL()", "\n{", "\n    int amounts = 1;", "\n    Stu *ap;", "\n    printf(\"================================\\n\");", "\n    printf(\"所有学生信息：\\n\");", "\n    for (ap = h->next; ap; ap = ap->next)", "\n        printf(\"%d,%s,%s,%s,%s\\n\",amounts++,ap->name,ap->num,ap->sex,ap->telnum);", "\n    printf(\"================================\\n\");", "\n}", "\n//6.总人数", "\nvoid TOTAL()", "\n{", "\n    printf(\"================================\\n\");", "\n    printf(\"学生总人数：%d\\n\", total);", "\n    printf(\"================================\\n\");", "\n}", "\n\n", "//菜单函数", "\nvoid Menu()", "\n{", "\n    char order;", "\n    printf(\"================================\\n\");", "\n    printf(\"|     1.添加学生.              |\\n\");", "\n    printf(\"|     2.查询学生.              |\\n\");", "\n    printf(\"|     3.编辑学生.              |\\n\");", "\n    printf(\"|     4.删除学生.              |\\n\");", "\n    printf(\"|     5.打印全部.              |\\n\");", "\n    printf(\"|     6.总人数.                |\\n\");", "\n    printf(\"|     7.退出.                  |\\n\");", "\n    printf(\"================================\\n\");", "\n\n", "order = getch();\nsystem(\"cls\");\n\n\nswitch (order)\n{\ncase '1':\n    ADD();\n    break;\ncase '2':\n    CHECK();\n    break;\ncase '3':\n    EDIT();\n    break;\ncase '4':\n    DELETE1();\n    break;\ncase '5':\n    PRINALL();\n    break;\ncase '6':\n    TOTAL();\n    break;\ncase '7':\n    bExit = 1;\n    break;\n}\nwhile (!bExit)\n{\n    getch();\n    system(\"cls\");\n    Menu();\n}\n", "\n\n", "}", "\nvoid main()", "\n{", "\n    //创建链表头", "\n    Create(h);", "\n   pr = last = end = the_one = h;", "\n   the_one->next = NULL;", "\n\n", "Menu();\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;你可以看下这个问题的回答&lt;a href=\"https://ask.csdn.net/questions/7574645\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7574645&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "数据的输出", "Question": ["多组数据判断素数，如果是，输出YES ,否则输出NO，当输入-1时结束", ["有谁可以告诉我问题在那里吗？", "\n", "#include <stdio.h>", "#include <stdlib.h>", "\n", "int main()", "{", "    int a,b;", "    scanf(\"%d\",&a);", "    while(a!=-1){", "        if(a<-1||a==0||a==1){", "            printf(\"NO\\n\");", "        }", "        for(b=2;b<=sqrt(a);b++)", "            if(a%b==0)break;", "        if(b>sqrt(a))", "            printf(\"YES\\n\");", "        else printf(\"NO\\n\");", "         scanf(\"%d\",&a);", "    }", "\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;控制台也没有报错&amp;#xff0c;特别无语。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/844927228846168.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["layui数据表格数据不显示，但接口数据加载成功的", ["这是html中layui定义的表格的数据格式：", "\n", "\n", "这是接口返回的数据", "\n", "\n", "这是结果", "\n", "\n", "疑问", "\n", "已经确保了接口格式正确，为啥还是无法渲染出数据。"]], "Tag": "程序设计"}
{"Answer": "设置输出的宽度\r\n\r\n```\r\n data = pd.Series(['a', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaa', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'])\r\n\r\npd.set_option('display.max_colwidth',1000)\r\n\r\n```", "Konwledge_Point": "数据的输出", "Question": ["pandas如何显示全部数据而不是省略号", ["现用pandas读取数据并选取其中一行想要输出，但是输出过程中数据并未全部显示，中间的部分用省略号代替了，如何能让其显示全部数据？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main(){\n\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d      &amp;#34;&lt;/span&gt;,n);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;n平方      &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;n立方\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d      &amp;#34;&lt;/span&gt;,n);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d          &amp;#34;&lt;/span&gt;,n*n);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,n*n*n);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言中怎么将不同的输出按列排列", ["c语言中怎么将不同输出结果按列排列，用三个打印语句表示了三个不同的输出量，但怎么将他们按如图所示的按列排列"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;\nusing namespace std;\nstruct list&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;创建一个简单的链表节点 \n{\n    char ch;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;只是存储一个数 \n    list *&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;指向下一个节点的指针&amp;#xff0c;链表的关键 \n};\nint main()\n{\n    list *head&amp;#61;NULL,*chain&amp;#61;NULL,*data&amp;#61;NULL;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;头指针用来记录这个链表的位置&amp;#xff0c;另外两个指针用来推进节点的创建和连接\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;链表数据的输入 \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        data&amp;#61;new list;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;首先分配一块内存 \n        cin&amp;gt;&amp;gt;data-&amp;gt;ch;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;读入数据并存储 \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(head&amp;#61;&amp;#61;NULL)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果是第一个&amp;#xff0c;那么要让头指针指向它 \n        head&amp;#61;data;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果不是第一个&amp;#xff0c;那么就让上一个节点的指针成员指向它 \n        chain-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;&amp;#61;data;\n        chain&amp;#61;data;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;让这个节点成为上一个节点 \n        data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;&amp;#61;NULL;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;表示尾节点 \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(getchar()&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果按下回车就不读了&amp;#xff0c;不然就一直装 \n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;链表数据的输出 \n    data&amp;#61;head;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;找到链表的位置 \n    int i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(data)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#43;&amp;#43;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        cout&amp;lt;&amp;lt;data-&amp;gt;ch&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n        data&amp;#61;data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;推进 \n    }\n    data&amp;#61;head;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;找到链表的位置 \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(data)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(data-&amp;gt;ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;)\n        cout&amp;lt;&amp;lt;data-&amp;gt;ch&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n        data&amp;#61;data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;推进 \n    }\n    data&amp;#61;head;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;找到链表的位置\n    i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(data)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#43;&amp;#43;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n        chain&amp;#61;data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n        data&amp;#61;data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;推进 \n    }\n    data&amp;#61;head;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;找到链表的位置 \n    i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(data)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#43;&amp;#43;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;&amp;#61;chain;\n        data&amp;#61;data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;推进 \n    }\n    data&amp;#61;head;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;找到链表的位置 \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(data)\n    {\n        cout&amp;lt;&amp;lt;data-&amp;gt;ch&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n        data&amp;#61;data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;推进 \n    }    \n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;链表内存释放 \n    data&amp;#61;head;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;找到链表位置 \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(data)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;如果不是到尾了&amp;#xff0c;那就继续释放 \n    {\n        chain&amp;#61;data-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;先推进&amp;#xff0c;不然先释放的话&amp;#xff0c;后面的就找不到了 \n        &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; data;\n        data&amp;#61;chain;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言单链表的应用，该如何在单链表上通过插入A~E建立非空单链表并输出？", ["如何创建空单链表，并在单链表上通过插入A~E建立非空单链表并输出，且取第3个数据元素并输出，并在已有单链表里查找B，并输出查找结果，最后删除单链表里的第4个数据元素并输出删除后的单链表。 在devc++环境中运行。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, m;\n    m &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; ( i; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; i % &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            m &amp;#61; m &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m % &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;; \n            }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c＋＋：求1000以内可以同时被9和10整除的所有数，要求一行输出5个数据", ["#include", "using namespace std;", "int main()", "{", "    int i=1, m;", "    m = 0;", "\n", "for", " ", "( i; i < ", "1000", "; i++)", "\n{\n    ", "if", "\n        ", "(i ", "% 9 == 0 && i % 11 == 0)", "\n        \n        break;\n    m = m + ", "1", ";\n    ", "if", " (m ", "% 5 == 0)", "\n        cout << m << ", "end", "l;\n    ", "\n", "\n", "}", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "只用纯C++的话是不太可能满足可移植性的，因为这很大程度上依赖于所使用的终端，其中终端连接了stdin（通常是行缓冲）。但是你可以使用某些库来完成这个功能：\r\n\r\n1.Windows  编译器下可用 conio。使用 _getch() 函数让你不用等待回车输入就能得到字符。我不经常使用Windows来进行开发，但是我见过我同学仅仅包含头文件 conio.h 就可以使用了。你可以在维基百科找到 conio.h 。上面列出了 getch() ，在 Visual C++ 中声明为 deprecated（不赞成使用的）。\r\n\r\n2.Linux 中可以使用 curses，在 Windows 中也可以使用兼容的 curses 实现。相比于 conio 它也有一个 getch() 函数。（可通过 man getch  来查看它的 manpage）。同样你也可以在维基百科中找到 Curses。\r\n\r\n如果你打算让你的程序跨平台运行的话，我推荐你使用 curses。然而我相信有一些你能用来关掉行缓冲的函数（我相信那应该叫做“原始模式”，与“加工模式”，详细可以在 man stty 中查看）。Curses 可以在跨平台跨终端的环境中帮你处理好这个。", "Konwledge_Point": "数据的输出", "Question": ["c语言输入数据，输出结果不换行问题", ["scanf输入，回车后结果显示在下一行中了。用什么可以将输入和输出结果显示在同一行呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; 具有两个互补输出端,同相输出端Y和反相输出端Y&amp;#39;  同相&amp;#xff1a;输出信号与输入信号逻辑相同 反相 则相反。而 8选1数据选择器是多路数据选择器的一种&amp;#xff0c;该种数据选择器可以根据需要从8路数据传送中选出一路电路进行信号切换。  既然说是互补输出端&amp;#xff0c;推测应该&amp;#xff1a;如果是互补的&amp;#xff0c;可能更易于该功能的实现&amp;#xff0c;因为仅有一个输出端的话&amp;#xff0c;结果没有对照。&lt;br /&gt;&lt;strong&gt;希望对题主有所帮助&amp;#xff0c;望采纳&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["8选1数据选择器为什么要设置互补输出端，这个互补输出端有什么用", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;time没有初始化为0&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/047321759866166.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["数据输出有问题，错在哪？", ["\n", "我的问题：time次数统计错误，也没有打印出任何一个num（但是我找不到错在哪）", "\n", "题目：找到并输出具有以下特性的十进制的千位数及统计个数：", "\n", "具体特性：该数字十进制时四位数字的和等于该数字以16进制表示时的四位数字的和，同时也等于这个数以12进制表示时的四位数字的和。"]], "Tag": "程序设计"}
{"Answer": "```\r\n if(scan.hasNext()) {\r\n　　　　　　System.out.println(scan.nextLine());\r\n　　　　}\r\n\t\t照你的意思是不是应该是while,而不是if\r\n\t\twhile(scan.hasNext()) {\r\n　　　　　　System.out.println(scan.nextLine());\r\n　　　　}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["java网络编程中IO数据输入输出阻塞", ["服务端代码如下：", "\npublic class Server {", "\n　　public static void main(String[] args) throws IOException {", "\n　　　　ServerSocket ss = new ServerSocket(30000);", "\n　　　　Socket socket = ss.accept();", "\n　　　　PrintStream ps = new PrintStream(socket.getOutputStream());", "\n　　　　ps.println(\"服务器第一行数据\"); //1", "\n　　　　ps.println(\"服务器第二行数据\"); //2", "\n　　　　ocket.shutdownOutput(); //3", "\n　　　　//下面语句将输出false", "\n　　　　System.out.println(socket.isClosed());", "\n　　　　Scanner scan = new Scanner(socket.getInputStream());", "\n　　　　BufferedReader br = new BufferedReader(new 　　　　InputStreamReader(socket.getInputStream()));", "\n　　　　//为什么只得到客户端第一条数据", "\n　　　　if(scan.hasNext()) {", "\n　　　　　　System.out.println(scan.nextLine());", "\n　　　　}", "\n　　　　//为什么此处得不到数据", "\n　　　　　while(br.readLine() != null) {", "\n　　　　　　System.out.println(br.readLine());", "\n　　　　}", "\n　　　　scan.close();", "\n　　　　br.close();", "\n　　　　socket.close();", "\n　　　　ss.close();", "\n　　　　}", "\n}", "\n客户端代码如下：", "\npublic class Client {", "\n　　public static void main(String[] args) throws IOException {", "\n　　　　Socket s = new Socket(\"localhost\", 30000);", "\n　　　　Scanner scan = new Scanner(s.getInputStream());", "\n　　　　// 为什么只能得到服务端第一条数据", "\n　　　　if (scan.hasNextLine()) {", "\n　　　　　　System.out.println(scan.nextLine());", "\n　　　　}", "\n　　　　PrintStream ps = new PrintStream(s.getOutputStream());", "\n　　　　ps.println(\"客户端的第一行数据\");", "\n　　　　ps.println(\"客户端的第二行数据\");", "\n　　　　ps.close();", "\n　　　　scan.close();", "\n　　　　s.close();", "\n　　}", "\n}", "\n服务端运行结果：", "\nfalse", "\n客户端的第一行数据", "\n客户端运行结果：", "\n服务器第一行数据", "\n如上述所示，服务端在 //1,//2处已经将数据输出到socket输出流了，在//3处才关闭输出功能，为什在客户端得到的数据只能显示一条", "\n同样，客户端输出了两条数据，在服务端关闭输出，输入功能应该不收影响，为什么也只能得到一条数据。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最后看到这篇文章&amp;#xff0c;解决了&amp;#xff0c;非常感谢原作者&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_37281984/article/details/122279342\" id=\"textarea_1659247779965_1659248425013_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_37281984/article/details/122279342&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Arduino 读取串口数据并拆分", ["Arduino串口读取传感器发来的数据时，用以下代码读取，在VS Code的串口上显示乱码，但在串口调试助手里，用16进制显示，看上去数据似乎没问题；", "\n", "需要请教的地方是，怎么把这一窜数据拆分，获取各个部分的数据，如CO2浓度，TVOC浓度", "\n", "代码如下：", "\n", "#include <Arduino.h>", "\n\nunsigned ", "int", " i;\n", "char", " ", "temp", ";\n\n", "void", " read_uart()\n{\n  i = ", "Serial2", ".available();  //返回目前串口接收区内的已经接受的数据量\n  ", "if", "(i != ", "0", ")\n  {\n    ", "while", "(i", "--)", "\n    {\n      ", "temp", "= ", "Serial2", ".", "read", "();   //读取一个数据并且将它从缓存区删除\n      ", "Serial", ".print(", "temp", ");\n    }\n    ", "Serial", ".println(\"\");\n  }\n  ", "else", "\n    ", "Serial", ".println(\"串口接收区的缓存为空 !\");\n}\n", "\n", "在VS Code的串口调试窗口里，如下图乱码：", "\n", "这个传感器的通讯协议如下：", "\n", "但如果在串口调试助手里，勾上16进制显示后，数据看上去和协议是对应的，如下图：", "\n", "需要请教的是，怎样拆分这组数据，获得各个传感器数据？", "先表示感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/weixin_45092204/article/details/119045759\"&gt;https://blog.csdn.net/weixin_45092204/article/details/119045759&lt;/a&gt;&lt;br /&gt;可以参考这个哦&amp;#xff0c;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于python中的pyecharts遇到没有数据问题", ["\n", "\n", "输出a和b的类型都是为列表,输出的data_pair也是k对v。为什么输入B时图没有数据"]], "Tag": "程序设计"}
{"Answer": "if (digit!=-1)这个写错了，应该是while (digit!=-1)", "Konwledge_Point": "数据的输出", "Question": ["程序输出读到的数据中的奇数和偶数的个数。", ["题目内容：", "\n你的程序要读入一系列正整数数据，输入-1表示输入结束，-1本身不是输入的数据。程序输出读到的数据中的奇数和偶数的个数。", "\n\n", "输入格式:", "\n一系列正整数，整数的范围是（0,100000）。如果输入-1则表示输入结束。", "\n\n", "输出格式：", "\n两个整数，第一个整数表示读入数据中的奇数的个数，第二个整数表示读入数据中的偶数的个数。两个整数之间以空格分隔。", "\n\n", "输入样例：", "\n9 3 4 2 5 7 -1 ", "\n\n", "输出样例：", "\n4 2", "\n#include", "\n\n", "int main(void)", "\n{", "\n    //输出偶数奇数个数，遇到-1结束", "\n    int odd,even,digit;", "\n    odd=0,even=0;", "\n    scanf(\"%d\",&digit);", "\n    if(digit!=-1){", "\n        if(digit%2==0){", "\n            even++;", "\n        }else odd++;", "\n       scanf(\"%d\",&digit);", "\n    }", "\n    printf(\"%d %d\",odd,even);", "\n\n", "return 0;\n", "\n\n", "}", "\n\n", "为啥输入结果不对呀？"]], "Tag": "程序设计"}
{"Answer": "#include &lt;iostream&gt;\r\n#include &lt;cstring&gt;\r\n#include &lt;cstdio&gt;\r\n#include &lt;string&gt;\r\n#include &lt;map&gt;\r\n#include &lt;queue&gt;\r\n#include &lt;set&gt;\r\n#include &lt;math.h&gt;\r\n#include &lt;algorithm&gt;\r\n#define LL long long\r\n#define INF 0x7fffffff\r\n#define MAX 200010\r\nusing namespace std;\r\nint t;\r\nint main()\r\n{\r\n    char a[100];\r\n    int t;\r\n    scanf(\"%d\\n\",&amp;t);\r\n    while(t--)\r\n    {\r\n        gets(a);\r\n        if(!isalpha(a[0])&amp;&amp;a[0]!='_')\r\n        {\r\n            printf(\"no\\n\");\r\n            continue;\r\n        }\r\n        int flag=1;\r\n        int l=strlen(a);\r\n        for(int i=1;i&lt;l;i++)\r\n        {\r\n            if(a[i]!='_'&amp;&amp;!isalnum(a[i]) &amp;&amp; !(a[i]&gt;='0' &amp;&amp; a[i]&lt;='9'))\r\n            {\r\n                flag=0;\r\n                break;\r\n            }\r\n            else\r\n            {\r\n                flag=1;\r\n            }\r\n        }\r\n        if(flag==1)\r\n        {\r\n            printf(\"yes\\n\");\r\n        }\r\n        else if(flag==0)\r\n        {\r\n            printf(\"no\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n我以前自己写的，大致看着差不多", "Konwledge_Point": "数据的输出", "Question": ["C语言合法标识符                 ", ["Problem Description", "\n输入一个字符串，判断其是否是C的合法标识符。", "\n\n", "Input", "\n输入数据包含多个测试实例，数据的第一行是一个整数n,表示测试实例的个数，然后是n行输入数据，每行是一个长度不超过50的字符串。", "\n\n", "Output", "\n对于每组输入数据，输出一行。如果输入数据是C的合法标识符，则输出\"yes\"，否则，输出“no”。", "\n\n", "Sample Input", "\n3", "\n12ajf", "\nfi8x_a", "\nff  ai_2", "\n\n", "Sample Output", "\nno", "\nyes", "\nno"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为后面的两个都是字符串&amp;#xff0c;不能用&amp;#61;&amp;#61;判断。要用strcmp函数来判断相等&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["我向文件里输入了几组数据，但只能通过判断每组数据中的第一个数据输出该组数据，为什么其它的不行啊，家人们", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码&amp;#xff08;C&amp;#43;&amp;#43;&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;\nusing namespace std&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main() {\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入线性表的整数个数n&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    cin &amp;gt;&amp;gt; n&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; *a &amp;#61; new &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;[n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;顺序表初始化完成\\n请输入线性表的各个元素&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n; &amp;#43;&amp;#43;i) {&lt;!-- --&gt;&lt;/span&gt;\n        cin &amp;gt;&amp;gt; a[i]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;原始线性表如下&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n; &amp;#43;&amp;#43;i) {&lt;!-- --&gt;&lt;/span&gt;\n        cout &amp;lt;&amp;lt; a[i] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入要插入的元素及其插的位置&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; k, &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    cin &amp;gt;&amp;gt; k &amp;gt;&amp;gt; &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; n&lt;span class=\"hljs-comment\"&gt;; i &amp;gt;&amp;#61; pos; --i) {&lt;!-- --&gt;&lt;/span&gt;\n        a[i] &amp;#61; a[i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; k&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &amp;#43;&amp;#43;n&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;插入之后的数组&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n; &amp;#43;&amp;#43;i) {&lt;!-- --&gt;&lt;/span&gt;\n        cout &amp;lt;&amp;lt; a[i] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入要删除的元素的位置&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    cin &amp;gt;&amp;gt; &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt;&amp;#61; n; &amp;#43;&amp;#43;i) {&lt;!-- --&gt;&lt;/span&gt;\n        a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; a[&lt;span class=\"hljs-keyword\"&gt;pos&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    --n&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;删除之后的数组&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt; n; &amp;#43;&amp;#43;i) {&lt;!-- --&gt;&lt;/span&gt;\n        cout &amp;lt;&amp;lt; a[i] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n03 张三\\n&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;我只是个小学蒟蒻&amp;#xff0c;有不清楚的地方可以私信。&lt;br /&gt;回答问题不易&amp;#xff0c;望采纳哦~thanks&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["编制C/C++程序，利用顺序存储方式实现下列功能", ["1、    编制C/C++程序，利用顺序存储方式实现下列功能：从键盘输入数据建立一个线性表（整数），并输出该线性表；然后根据屏幕提示，进行数据的插入或删除等操作，并在插入或删除数据后输出线性表。如图所示：", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y, m;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;, &amp;amp;y, &amp;amp;m);&lt;span class=\"hljs-comment\"&gt;//获得年月输入&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果是大月&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;31\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//31天&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;||m&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果是小月&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;30\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//30&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//如果是2月&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((y % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; y % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) || y % &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果是闰年&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;29\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//29&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//如果不是闰年&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;28\\n&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//28&lt;/span&gt;\n        }\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言多组数据实现多组输出", ["能被4整除但不能被100整除或者能被400整除的年份是闰年。", "\n", "输入格式:", "测试数据有多组，处理到文件尾。对于每组测试，输入两个整数，表示年份year和月份month。", "\n", "输出格式:", "对于每组测试，输出对应年月的天数。", "\n", "输入样例:", "2020 2", "2020 4", "输出样例:", "29", "30"]], "Tag": "程序设计"}
{"Answer": "```\r\nlst = []\r\nsum = 0\r\nfor i in range(6):\r\n\tx = int(input())\r\n\tsum = sum + x\r\n\tlst.append(x)\r\nlst.sort(reverse=True)\r\nprint(lst)\r\nprint(sum)\r\nprint(\"%.2f\"%(sum / 6.0))\r\n```", "Konwledge_Point": "数据的输出", "Question": ["从键盘读取6个整数，存入列表，对6个数据进行降序排列后输出，同时计算列表所有元素的和与平均值（保留2位小数），并输出。", ["从键盘读取6个整数，存入列表，对6个数据进行降序排列后输出，同时计算列表所有元素的和与平均值（保留2位小数），并输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-comment\"&gt;# -*- coding:utf-8 -*-&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; requests\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; csv,re\n\nurl1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;http://category.dangdang.com/&amp;#39;&lt;/span&gt;\n\nurl2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;cp01.58.03.00.00.00.html&amp;#39;&lt;/span&gt;\n\nurl3 &amp;#61; url1 &amp;#43; url2\nf &amp;#61; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;book.csv&amp;#39;&lt;/span&gt;, mode&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)\ncsvwriter &amp;#61; csv.writer(f)\nresp &amp;#61; requests.get(url3)\nobj &amp;#61; re.&lt;span class=\"hljs-built_in\"&gt;compile&lt;/span&gt;(\n    &lt;span class=\"hljs-string\"&gt;r&amp;#39;&amp;lt;/div&amp;gt;.*?单品标题&amp;#34; target&amp;#61;&amp;#34;_blank&amp;#34; &amp;gt; (?P&amp;lt;name&amp;gt;.*?)&amp;lt;/a&amp;gt;.*?target&amp;#61;&amp;#34;_blank&amp;#34; title&amp;#61;&amp;#34;(?P&amp;lt;chinapublisher&amp;gt;.*?)&amp;#34;&amp;gt;.*?p&amp;#34;&amp;gt;(?P&amp;lt;commentnum&amp;gt;.*?)&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;.*?单品出版社(?P&amp;lt;foreignpublisher&amp;gt;.*?)&amp;gt;&amp;#39;&lt;/span&gt;,\n    re.S)\nresult &amp;#61; obj.finditer(resp.text)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(result)\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; it &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; result:\n    &lt;span class=\"hljs-comment\"&gt;# print(it)&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(it.group(&lt;span class=\"hljs-string\"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(it.group(&lt;span class=\"hljs-string\"&gt;&amp;#34;chinapublisher&amp;#34;&lt;/span&gt;))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(it.group(&lt;span class=\"hljs-string\"&gt;&amp;#34;commentnum&amp;#34;&lt;/span&gt;))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(it.group(&lt;span class=\"hljs-string\"&gt;&amp;#34;foreignpublisher&amp;#34;&lt;/span&gt;))\n    dic &amp;#61; it.groupdict()\n    csvwriter.writerow(dic.values())              &lt;span class=\"hljs-comment\"&gt;#你上面代码是这个位置问题&amp;#xff0c;改成这样就好了&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;over!&amp;#39;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["爬虫爬出的数据，print输出可以全部输出，但是写入CSV文件时只能写最后一行", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "import", " requests\n", "import", " csv\nurl1 = ", "'http://category.dangdang.com/'", "\n\nurl2 = ", "'cp01.58.03.00.00.00.html'", "\n\nurl3 = url1 + url2\nf = ", "open", "(", "'book.csv'", ", mode=", "'w'", ",encoding=", "'utf-8'", ")\ncsvwriter = csv.writer(f)\nresp = requests.get(url3)\nobj = re.", "compile", "(", "r'</div>.*?单品标题\" target=\"_blank\" > (?P<name>.*?)</a>.*?target=\"_blank\" title=\"(?P<chinapublisher>.*?)\">.*?p\">(?P<commentnum>.*?)</a></p>.*?单品出版社(?P<foreignpublisher>.*?)>'", ", re.S)\nresult = obj.finditer(resp.text)\n", "for", " it ", "in", " result:\n    ", "print", "(it.group(", "\"name\"", "))\n    ", "print", "(it.group(", "\"chinapublisher\"", "))\n    ", "print", "(it.group(", "\"commentnum\"", "))\n    ", "print", "(it.group(", "\"foreignpublisher\"", "))\n    dic = it.groupdict()\ncsvwriter.writerow(dic.values())\n", "print", "(", "'over!'", ")\n\n"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/weixin_41789607/article/details/79825856", "Konwledge_Point": "数据的输出", "Question": ["一个用C语言进行偶数求和的复习题，对于每组输入数据，输出一个平均值序列，每组输出占一行。", ["Problem Description", "\n有一个长度为n(n<=100)的数列，该数列定义为从2开始的递增有序偶数，现在要求你按照顺序每m个数求出一个平均值，如果最后不足m个，则以实际数量求平均值。编程输出该平均值序列。", "\n\n", "Input", "\n输入数据有多组，每组占一行，包含两个正整数n和m，n和m的含义如上所述。", "\n\n", "Output", "\n对于每组输入数据，输出一个平均值序列，每组输出占一行。", "\n\n", "Sample Input", "\n3 2", "\n4 2", "\n\n", "Sample Output", "\n3 6", "\n3 7"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-sql\"&gt;select A.day1,B.day2 from\n(\n    select day day1 from hr.ee where day&amp;gt;100\n) as A\nfull outer join\n(\n    select day day1 from hr.ee where day&amp;lt;&amp;#61;100\n) as B;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["SQL如何同时对一列数据用不同的查询条件输出为两列？", ["例如hr.ee中有一列数据day，day的范围是1-200", "\n\n", "我想在一次查询下，同时输出两列查询结果，第一列是>100的，列名取为day1，第二列是<=100的，列名取day2", "\n\n", "我写的是:", "\n\n", "select day \"day1\" from hr.ee", "\n\n", "where day>100", "\n\n", "union", "\n\n", "select day \"day2\" from hr.ee", "\n\n", "where day<=100;", "\n\n", " ", "\n\n", "但是运行后只输出了一列day1，且这一列中包含了全部的day数据"]], "Tag": "程序设计"}
{"Answer": "我倒腾了一下发下我fopen是用“rb”模式打开\r\nWindows环境中，文本模式下换行符会被看作\\n，而二进制模式下换行符会被看作\\r\\n，这导致我在后来替换换行符的时候只替换了\\n，留下了\\r，于是光标又回到了开头，因此输出的时候就会被覆盖\r\n解决办法要么把“rb”改成“r”，要么在替换的时候\\r\\n一起替换", "Konwledge_Point": "数据的输出", "Question": ["C语言输出的时候为什么会覆盖之前的输出？", ["代码如下", "\n\n", "\n\n", "这代码在输出line2的时候会覆盖line1，这是为什么呢…", "\n\n", "输出结果是这样的：", "\n\n", "\n\n", "fp1指向1.txt，fp2指向2.txt。1.txt文件中第一行的末尾是end1，2.txt文件中第一行的末尾是end2，可以看到输出的时候line2的内容会覆盖掉line1的内容，这是为什么啊？", "\n\n", "1.txt文件内容如下：", "\n\n", "\n\n", "2.txt文件内容如下：", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;简单示例如下&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/920362491846113.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;using System;\nusing System.Data.OleDb;\nnamespace ConsoleApp3\n{\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Program\n    {\n        static void &lt;span class=\"hljs-constructor\"&gt;Main(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt;[] &lt;span class=\"hljs-params\"&gt;args&lt;/span&gt;)&lt;/span&gt;\n        {\n            var conn &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;OleDbConnection(&amp;#64;&lt;span class=\"hljs-string\"&gt;&amp;#34;provider&amp;#61;microsoft.ace.oledb.12.0;data source&amp;#61;F:\\CSharp\\ConsoleApp\\ConsoleApp3\\data.accdb&amp;#34;&lt;/span&gt;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//注意修改数据库路径&lt;/span&gt;\n            var cmd &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;OleDbCommand(&lt;span class=\"hljs-string\"&gt;&amp;#34;select * from users&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;conn&lt;/span&gt;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//注意修改表名称&lt;/span&gt;\n            conn.&lt;span class=\"hljs-constructor\"&gt;Open()&lt;/span&gt;;\n            var dr &amp;#61; cmd.&lt;span class=\"hljs-constructor\"&gt;ExecuteReader()&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (dr.&lt;span class=\"hljs-constructor\"&gt;Read()&lt;/span&gt;)\n            {\n                Console.&lt;span class=\"hljs-constructor\"&gt;WriteLine(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0}\\t{1}&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;dr&lt;/span&gt;[0].ToString()&lt;/span&gt;,dr&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;.&lt;span class=\"hljs-constructor\"&gt;ToString()&lt;/span&gt;);\n            }\n            dr.&lt;span class=\"hljs-constructor\"&gt;Close()&lt;/span&gt;;\n            conn.&lt;span class=\"hljs-constructor\"&gt;Close()&lt;/span&gt;;\n            Console.&lt;span class=\"hljs-constructor\"&gt;ReadKey()&lt;/span&gt;;\n        }\n    }\n\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241394005546146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["控制台如何编写，查询Access数据库数据，输出最新数据到控制台(语言-c#)", ["对性能要求挺高的，因为要实时读取,需要用到哪个第三方控件呢?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用两级 FIFO 最简单&lt;br /&gt;一级FIFO 写32位&amp;#xff0c;读 4 位(最大8:1)&lt;br /&gt;二级FIFO 写4位&amp;#xff0c;读 1 位&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Verilog如何实现连续32bit位宽数据转为1bit位宽数据?", ["问题遇到的现象和发生背景", "\n", "Verilog如何实现连续32bit位宽数据转为1bit位宽数据?", "\n", "我的解答思路和尝试过的方法", "\n", "数据如图所示，每个数据都是11110000111100001111000011110000，且为一个时钟周期，想要将其转变为32个1bit数据，依次输出。", "实现：", "1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0", "每个0和1为一个时钟周期", "\n", "\n", "我想要达到的结果", "\n", "目前已经实现236个32bit数据的连续输出，但是想要将每个32bit数据转变为1bit，最后输出1bit*7552个数据。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;直接return true;了&lt;br /&gt;当然还有一些其他问题&amp;#xff0c;大概修改如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt; \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;linknode&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;linknode&lt;/span&gt; *next;\n}*listack;\n \n&lt;span class=\"hljs-function\"&gt;listack &lt;span class=\"hljs-title\"&gt;stack_headinsert&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//头插法建立链栈 &lt;/span&gt;\n    listack s;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;\n    listack L;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;e);\n    L&amp;#61;(listack)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(listack));\n    L-&amp;gt;data&amp;#61;e;\n    L-&amp;gt;next&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(x!&amp;#61;&lt;span class=\"hljs-number\"&gt;9999&lt;/span&gt;){\n        s&amp;#61;(listack)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(listack));\n        s-&amp;gt;data&amp;#61;x;\n        s-&amp;gt;next&amp;#61;L-&amp;gt;next;\n        L-&amp;gt;next&amp;#61;s;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; L;\n}\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;insteadstack&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(listack L,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;{\n    listack p&amp;#61;L;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(L&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        L-&amp;gt;data&amp;#61;x;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;栈顶数据元素%d&amp;#34;&lt;/span&gt;,L-&amp;gt;data);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n \n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    listack L; \n    L &amp;#61; &lt;span class=\"hljs-built_in\"&gt;stack_headinsert&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;insteadstack&lt;/span&gt;(L,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["数据结构链表输出无内容", ["先用头插法建立链表，再修改栈顶的数据元素，没有报错，但printf无法输出内容", "\n", "\n", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n\n", "typedef", " ", "struct", " ", "linknode", "{\n    ", "int", " data;\n    ", "struct", " ", "linknode", " *next;\n}*listack;\n\n", "listack ", "stack_headinsert", "(listack &L)", "{", "//头插法 ", "\n    listack s;", "int", " e;", "int", " x;\n    ", "scanf", "(", "\"%d\"", ",&e);\n    L=(listack)", "malloc", "(", "sizeof", "(listack));\n    L->data=e;\n    L->next=", "NULL", ";\n    ", "scanf", "(", "\"%d\"", ",&x);\n    ", "while", "(x!=", "9999", "){\n        s=(listack)", "malloc", "(", "sizeof", "(listack));\n        s->data=x;\n        s->next=L->next;\n        L->next=s;\n        ", "scanf", "(", "\"%d\"", ",&x);\n    }\n    ", "return", " L;\n\n", "bool", " ", "insteadstack", "(listack &L,", "int", " x)", "{\n    listack p=L;\n    ", "if", "(L==", "NULL", ") ", "return", " ", "false", ";\n    ", "else", " L->data=x;\n    ", "return", " ", "true", ";\n    ", "printf", "(", "\"栈顶数据元素%d\"", ",L->data);\n}\n\n\n", "int", " ", "main", "()", "{\n    listack L; \n    ", "stack_headinsert", "(L);\n    ", "insteadstack", "(L,", "6", ");\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入格式啥样&amp;#xff1f;&lt;br /&gt;strlen(s[i])遇到空格就结束了&lt;br /&gt;例如你输入 1001 Make 86&lt;br /&gt;strlen只能计算出1001的长度&amp;#xff0c;遇到空格就停止了&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["有n个学生，每个学生的数据包括学号、姓名和成绩，要求输出成绩优秀（大于等于90分）学生的信息（包括学号、姓名和整型成绩）。如果没有符合条件的，则输出“No”。评测程序说代码格式错误，请求支援", ["\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " i,j,k=", "0", ",n;\n    ", "char", " s[", "20", "][", "100", "];\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "getchar", "();\n    ", "for", "(i=", "0", ";i<n;i++) {\n        ", "gets", "(s[i]);\n        ", "if", "(s[i][", "strlen", "(s[i])", "-2", "]>=", "'9'", ")\n            {\n                k++;\n                ", "puts", "(s[i]);\n            }\n    }\n    ", "if", "(k==", "0", ")\n    ", "printf", "(", "\"No\"", ");\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/605064318946117.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;加上这个参数&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["yolov5用官方detect.py检测只有图片输出无txt输出", ["使用detect.py检测图片，可以输出有框的图片：", "\n", "\n", "因为框太多，想要直接看检测到的目标个数，但是没有生成txt文件", "运行detect.py的过程如下：", "\n", "detect: ", "weights", "=fruit.pt, ", "source", "=static, imgsz=[640, 640], ", "conf_thres", "=0.25, ", "iou_thres", "=0.45, ", "max_det", "=1000, ", "device", "=, ", "view_img", "=", "False", ", ", "save_txt", "=", "False", ", ", "save_conf", "=", "False", ", ", "save_crop", "=", "False", ", ", "nosave", "=", "False", ", ", "classes", "=None, ", "agnostic_nms", "=", "False", ", ", "augment", "=", "False", ", ", "visualize", "=", "False", ", ", "update", "=", "False", ", ", "project", "=runs/detect, ", "name", "=exp, ", "exist_ok", "=", "False", ", ", "line_thickness", "=3, ", "hide_labels", "=", "False", ", ", "hide_conf", "=", "False", ", ", "half", "=", "False", "\nCSU -- Object Detection 2021-10-19 torch 1.10.1+cu102 CUDA:0 (NVIDIA GeForce GTX 1050 Ti, 4095.875MB)\nFusing layers", "..", ". \nD:\\Anaconda\\lib\\site-packages\\torch\\functional.py:445: UserWarning: torch.meshgrid: ", "in", " an upcoming release, it will be required ", "to", " pass the indexing argument. (Triggered internally at  ", "..", "\\aten\\src\\ATen\\native\\TensorShape.cpp:2157.)\n  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]\nModel Summary: 392 layers, 46605951 parameters, 0 gradients, 114.1 GFLOPs\nModel(", "..", ".\n         输出模型，这里省略掉\n\n          ", "..", ".）\nimage 1/1 D:\\PycharmProject\\yolov5_flask\\static\\11111.jpg: 448x640 68 oranges, 1 sweet_orange, Done. (4.425s)\nSpeed: 686.5ms pre-process, 4424.9ms inference, 6498.7ms NMS per image at shape (1, 3, 640, 640)\nResults saved ", "to", " runs\\detect\\exp6\n\n", "\n", "我使用的detect.py代码如该链接的：", "     ", "https://blog.csdn.net/qq_38253797/article/details/119382661", "\n", "输出检测目标个数的代码如下：", "\n", "\n", "（感觉这段代码没有运行到）", "\n", "\n", "也没有labels文件夹（上图结果中的labels文件夹是我自己建的）和txt文件生成", "\n", "\n", "这是怎么回事啊，感觉代码也没什么要改的啊，图片也成功显示出来了，但是为什么会没有txt生成呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;冒泡排序算法那里出错了&amp;#xff0c;你每次冒泡把最小的数放在数组最后面&amp;#xff0c;但是你里面的循环次数是 0 到 count - i&amp;#xff0c;这样在第一次冒泡排序时&amp;#xff08;i&amp;#61;0&amp;#xff09;实际的循环次数就是count次&amp;#xff0c;这样就会访问到c数组后面未被赋值的值&amp;#xff0c;就会出现奇怪的数字。&lt;br /&gt;把 for (j&amp;#61;0;j&amp;lt;count-i;j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;br /&gt;改成 for (j&amp;#61;0;j&amp;lt;count-1-i;j&amp;#43;&amp;#43;) { 就好&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["输出数组时，中间某一项输出一串奇怪的数字", ["问题：输出数组时，中间某一项输出一串奇怪的数字", "\n", "程序功能：降序输出两组整数的并集（A∪B）。", "（1）从键盘输入A和B两组整数，每组均为5个整数（假设同一组内的各个整数互不重复）。", "（2）求两组整数的并集（A∪B），即合并两组整数，且两组都出现的整数在并集中只出现一次。", "（3）将并集按从大到小顺序输出。", "说明：先输入数据A组数据，后输入B组数据。", "\n", "输入格式:", "在一行中输入5个A组互不重复整数，在下一行中输入5个B组互不重复整数，以空格分隔。", "\n", "输出格式:", "在一行中以从大到小的顺序输出并集结果，以空格分隔。", "\n", "输入样例1:", "1 2 3 4 5", "1 2 6 7 8", "\n", "输出样例1:", "8 7 6 5 4 3 2 1 ", "\n", "输入样例2:", "1 2 3 4 5", "6 7 5 4 0", "\n", "输出样例2:", "7 6 5 4 3 2 1 0 ", "\n", "代码如下：", "\n", "#include<stdio.h>", "\nint main()\n{\n    int a[5],b[5],c[10],", "count", "=5,i,j,t,flag=0;\n    ", "for", " (", "i", "=0;i<5;i++) {\n        scanf(", "\"%d\"", ",&a[i]);\n    }\n    ", "for", " (", "i", "=0;i<5;i++) {\n        scanf(", "\"%d\"", ",&b[i]);\n    }\n    ", "for", " (", "i", "=0;i<5;i++) {\n        c[i]=a[i];\n    }\n    ", "for", " (", "i", "=0;i<5;i++) {\n        ", "flag", "=0;\n        ", "for", " (", "j", "=0;j<5;j++) {\n            ", "if", " (c[j]==b[i]) {\n                flag++;\n            }\n        }\n        ", "if", " (", "flag", "==0) {\n            c[count]=b[i];\n            count++;\n        }\n    }\n    ", "for", " (", "i", "=0;i<count-1;i++) {\n        ", "for", " (", "j", "=0;j<count-i;j++) {\n            ", "if", " (c[j]<c[j+1]) {\n                ", "t", "=c[j];\n                c[j]=c[j+1];\n                c[j+1]=t;\n            }\n        }\n    }\n    ", "for", " (", "i", "=0;i<count;i++) {\n        printf(", "\"%d \"", ",c[i]);\n    }\n    return 0;\n}\n", "\n", "运行结果：8 4202960 7 6 5 4 3 2", "不知道为什么会输出这串4202960奇怪的数字", "\n", "解题思路：将a组的数先放入到数组c中，将数组b中的数与之逐一比较，如果都不相同，则说明该数不在数组a中，可以加到数组c中。最后，对于数组c进行冒泡排序，从大到小。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题目中说类的成员函数包括构造函数和输出函数&amp;#xff0c;所以成员变量都用public声明就可以了&amp;#xff0c;否则还得添加get和set方法来获取和设置成员变量的值。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;date&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mYear,mMon,mDay;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;date&lt;/span&gt;(){}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; mYear&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;mMon&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;mDay&amp;lt;&amp;lt;endl;\n    }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;person&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    string mName;\n    string mSex;\n    date mBirth;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;person&lt;/span&gt;(){}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;mName &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,性别&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;mSex &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#xff0c;出生日期&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n        mBirth.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;();\n    }\n};\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;student&lt;/span&gt; :&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; person\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mId; &lt;span class=\"hljs-comment\"&gt;//学号&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;(){}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;学号&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; mId;\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;mName &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;,性别&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;mSex &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#xff0c;出生日期&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    }\n};\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    date dt;\n    dt.mYear &amp;#61; &lt;span class=\"hljs-number\"&gt;2022&lt;/span&gt;;\n    dt.mMon &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n    dt.mDay &amp;#61; &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;;\n    dt.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//显示日期&lt;/span&gt;\n    person ps;\n    ps.mName &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;;\n    ps.mSex &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;男&amp;#34;&lt;/span&gt;;\n    ps.mBirth &amp;#61; dt;\n    ps.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//显示person信息&lt;/span&gt;\n    student stu;\n    stu.mId &amp;#61; &lt;span class=\"hljs-number\"&gt;1001&lt;/span&gt;;\n    stu.mName &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;李四&amp;#34;&lt;/span&gt;;\n    stu.mSex &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;男&amp;#34;&lt;/span&gt;;\n    stu.mBirth &amp;#61; dt;\n    stu.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["C++程序设计， 设计一个date类，数据成员有年、月和日；成员函数有构造函数和一个输出函数。", ["设计一个date类，数据成员有年、月和日；成员函数有构造函数和一个输出函数。设计一个person类，数据成员有：姓名，性别，出生年月日；成员函数有：构造函数和一个将数据成语输出的函数。设计一个student类，该类是person类的派生类，增加一个数据成员：学号，成员函数包含一个构造函数和一个输出函数。在main函数中测试所设计的类。"]], "Tag": "程序设计"}
{"Answer": "if not rs.eof Then\r\nResponse.Write \",\"\r\nend if\r\n这个条件在遇到最后一条记录的时候也满足，也会输出逗号。\r\n\r\ndim firstrec\r\nfirstrec = true\r\nWhile Not rs.EOF\r\nName = rs(\"Name\") \r\nuserid = rs(\"userid\") \r\nif firstrec = true then\r\nfirstrec = false\r\nelse\r\nResponse.Write \",\"\r\nend if\r\nresponse.write \"{\"\"Name\"\":\"\"\"&amp;Name&amp;\"\"\",\"\"userid\"\":\"&amp;userid&amp;\"}\"\r\nrs.MoveNext\r\nWend\r\n\r\n这样写", "Konwledge_Point": "数据的输出", "Question": ["ASP从数据库直接输出json", ["ASP从数据库直接输出json 以，区分多行在最后一行去掉,", "\n\n", "([<%\ndim conn,connstr,rs,sql\nset conn = Server.CreateObject(\"Adodb.Connection\")\nconnstr = \"Provider=SQLOLEDB;data source=127.0.0.1;initial catalog=数据库;uid=数据库用户;pwd=数据库密码\"\nconn.open connstr\nset rs = Server.CreateObject(\"Adodb.RecordSet\")\nsql = \"select Name,userid from user\"\nrs.open sql,conn,1,1\nWhile Not rs.EOF\nName = rs(\"Name\") \nuserid = rs(\"userid\") \nresponse.write \"{\"\"Name\"\":\"\"\"&Name&\"\"\",\"\"userid\"\":\"&userid&\"}\"\nif not rs.eof Then\nResponse.Write \",\"\nend if\nrs.MoveNext\nWend\nrs.close\nconn.close\nset conn=nothing \n%>])\n", "\n\n", "怎么都是一直多加一个,号", "\n输出的结果为：([{\"Name\":\"用户\",\"userid\":1},{\"Name\":\"用户\",\"userid\":1}]) ", "\n\n", "想要的输出结果([{\"Name\":\"用户\",\"userid\":1},{\"Name\":\"用户\",\"userid\":1}])"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include &lt;stdio.h&gt; \r\n#define N 100\r\nint main()\r\n{\r\n    int i,j,a[N][N],n;\r\n    scanf(\"%d\",&amp;n);\r\n    for(i=0;i&lt;n;i++)\r\n       for(j=0;j&lt;n;j++)\r\n       {\r\n        scanf(\"%d\",&amp;a[i][j]);\r\n       }\r\n    for(i=0;i&lt;n;i++)\r\n\t{\r\n       for(j=0;j&lt;n;j++)\r\n        printf(\"%d \",a[j][i]);\r\n\t    printf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n# 问题解决的话，请点一下采纳", "Konwledge_Point": "数据的输出", "Question": ["输入N*N的矩阵，输出它的转置矩阵?", ["样例输入 ", "\n\n", "2", "\n1 2", "\n1 2", "\n\n", "样例输出 ", "\n\n", "1 1", "\n2 2", "\n\n", "我的代码如下：", "\n\n", "#include <stdio.h> \n#define N 100\nint main()\n{\n    int i,j,a[N][N],n;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n       for(j=0;j<n;j++)\n       {\n        scanf(\"%d\",&a[i][j]);\n       }\n    for(i=0;i<n;i++)\n       for(j=0;j<n;j++)\n       {\n        printf(\"%d \",a[j][i]);\n        printf(\"\\n\");\n        return 0;\n       }\n\n}\n", "\n\n", "我的输出都成一行了。", "\n麻烦帮我调试修改一下，谢谢大佬！"]], "Tag": "程序设计"}
{"Answer": "```\r\n var str = '';\r\nfor(var i = 0;i &lt; cus.length; i++){\r\n\tstr += '&lt;label class=\"cusname\"&gt;' + cus[i].name + '&lt;/label&gt;';\r\n\tstr += '&lt;input class=\"cusform\" type=\"text\" name=\"cus\" placeholder=\"'+ cus[i].tips +'\"&gt;';\r\n}\r\n$('formcus').append(str);\r\n```\r\n\r\n\r\n\r\n\r\n这样就行了", "Konwledge_Point": "数据的输出", "Question": ["循环输出数组的值到html", ["\n                怎么把第一张图片中的数组输出到", "\n                formcus里", "\n                lable的值为数组的name", "\n                input的值为数组的tips，如果数组中不止一组则再添加一组lable和input"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为第一个是头节点&amp;#xff0c;你从来没写过值&amp;#xff0c;会是一个随机值&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么创建链表、再输出链表后会多出一串数字？", ["写了个创建链表的函数，然后用main函数输出了一下，但是输出的第一个数字总是一个很大的数", "\n", "代码如下：", "\n", "#", "include", " ", "<stdio.h>", "\n\n", "struct", " ", "student", " {\n    ", "int", " num;\n    ", "struct", " ", "student", "* next;\n};\n", "typedef", " ", "struct", " ", "student", " stu;\n\n", "stu* ", "listCreate", "(", "int", " n)", "{\n    stu *head,*node,*end;\n    head = (stu*)", "malloc", "(", "sizeof", "(stu));\n    end = head;\n    ", "for", "(", "int", " i=", "0", ";i<n;i++){\n        node = (stu*)", "malloc", "(", "sizeof", "(stu));\n        ", "scanf", "(", "\"%d\"", ",&node->num);\n        end->next = node;\n        end = node;\n    }\n    end->next = ", "NULL", ";\n    ", "return", " head;\n}\n\n", "int", " ", "main", "()", "\n", "{\n    stu* n = ", "listCreate", "(", "5", ");\n    ", "while", "(", "1", "){\n        ", "printf", "(", "\"%d \"", ",n->num);\n        ", "if", " (n->num != ", "NULL", ")\n        {\n            n = n->next;\n        }", "else", "\n        {\n            ", "break", ";\n        }\n        \n    }   \n    \n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果如下：（第一行为输入，第二行为输出）", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;101&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; i % &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; and i % &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(i)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;font style=\"color:#f00\"&gt;有帮助请采纳,有问题继续交流,你的采纳是对我回答的最大的肯定和动力&lt;/font&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "数据的输出", "Question": ["python输出1-100之间能被3整除不能被5整除的数", ["python输出1-100之间能被3整除不能被5整除的数"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;v&lt;/span&gt;-&lt;span class=\"hljs-literal\"&gt;on&lt;/span&gt;:click&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;count&amp;#43;&amp;#43;;console.log(count)&amp;#34;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["VUE可以使用console.log输出在控制台吗？", ["\n", "这是VUE官网里面的案例，实现了点击按钮counter加一，然后现在是储存在counter中，怎么使用console,log()输出count"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;my_list &amp;#61; &lt;span class=\"hljs-comment\"&gt;[\n    &lt;span class=\"hljs-comment\"&gt;[1,2]&lt;/span&gt;,\n    &lt;span class=\"hljs-comment\"&gt;[3,4]&lt;/span&gt;,\n    &lt;span class=\"hljs-comment\"&gt;[5,6]&lt;/span&gt;,]&lt;/span&gt;\n            \nfor i in my_list:\n    for j in range(len(i)):\n        print(i&lt;span class=\"hljs-comment\"&gt;[j]&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;第二种&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;my_list &amp;#61; &lt;span class=\"hljs-comment\"&gt;[\n    &lt;span class=\"hljs-comment\"&gt;[1,2]&lt;/span&gt;,\n    &lt;span class=\"hljs-comment\"&gt;[3,4]&lt;/span&gt;,\n    &lt;span class=\"hljs-comment\"&gt;[5,6]&lt;/span&gt;,]&lt;/span&gt;\n            \nfor i in range(len(my_list)):\n    for j in range(len(my_list&lt;span class=\"hljs-comment\"&gt;[i]&lt;/span&gt;)):\n        print(my_list&lt;span class=\"hljs-comment\"&gt;[i]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;[j]&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;1.如上代码&lt;br /&gt;2.使用嵌套for循环&amp;#xff0c;第一层&amp;#xff0c;每轮的数据是二维数组的每一行&amp;#xff0c;第二层&amp;#xff0c;每轮的数据就是从每一行中逐个取出元素&amp;#xff0c;如输出的结果&lt;br /&gt;3.长度不同&amp;#xff0c;此代码仍然可以遍历输出&amp;#xff0c;因为循环次数是根据数组大小获取&amp;#xff0c;数组多大&amp;#xff0c;循环多少次&amp;#xff0c;因为有&lt;code class=\"language-javascript\"&gt;len()&lt;/code&gt;函数&amp;#xff0c;返回数组长度&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python中将二维列表中一维列表的每一个元素输出", ["代码如下", "\n", "my_list = ", "[\n    ", "[1,2]", ",\n    ", "[3,4]", ",\n    ", "[5,6]", ",\n            ]", "\nfor i in my_list:\n    for o in range(1):\n        print(", "[i]", ")\n\n", "\n", "需要输出结果为", "1", "2", "3", "4", "5", "6", "(我尝试用range循环两次列表来完成这个目标不知道如何完成。且面对二维列表中单个列表长度不一致时无解决办法)", "故构成3问", "1.完成输出结果的代码（ 最好能用range）", "2.代码运行方式是怎样的（为什么能做到这样的结果）？", "3.面对长度不同的代码处理方式"]], "Tag": "程序设计"}
{"Answer": "#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n#include&lt;string.h&gt;\r\nint main()\r\n{\r\nFILE *fp=fopen(\"./hello.txt\",\"w\");\r\nif(fp==NULL)\r\n{\r\nprintf(\"创建文件失败\\n\");\r\nreturn 0;\r\n}\r\nfprintf(fp,\"Hello,World1!\\n\");\r\nfprintf(fp,\"Hello,World2!\\n\");\r\nfprintf(fp,\"Hello,World3!\\n\");\r\nfclose(fp);\r\nreturn 0;\r\n}", "Konwledge_Point": "数据的输出", "Question": ["c语言程序，屏幕输出的所有结果保存到txt文档", ["#include ", "\n int main()", "\n{", "\n    printf(\"Hello, World1! \\n\");", "\n         printf(\"Hello, World2! \\n\");", "\n         printf(\"Hello, World3! \\n\");", "\n    return 0;", "\n}", "\n\n", "该程序运行之后会在屏幕上输出", "\nHello, World1！", "\nHello, World2！", "\nHello, World3！", "\n如何将这个输出的结果自动保存到一个txt的文档中？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;具体的关键在于save方法&amp;#xff0c;改造这个方法捕获异常&amp;#xff0c;然后继续处理下一条就可以了&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["EasyExcel导入校验返回错误信息，不影响正确信息读入", ["问题需求", "\n", "从excel导入批量数据插入数据库，校验格式后将有错误的信息返回，正确无误的数据插入数据库。", "\n", "问题相关代码", "\n", "实体DO", "\n", "public", " ", "class", " ", "ToolStockDO", " ", "implements", " ", "Serializable", " ", "{\n    ", "private", " static ", "final", " long serialVersionUID = ", "1L", ";\n    ", "/**\n     * 工器具id\n     */", "\n    ", "@ExcelIgnore", "\n    ", "@TableId(type = IdType.AUTO)", "\n    ", "@ApiModelProperty(value = ", "\"工器具id\"", ")", "\n    ", "private", " ", "Long", " toolId;\n    ", "/**\n     * 所属仓库id\n     */", "\n    ", "@ExcelIgnore", "\n    ", "@ApiModelProperty(value = ", "\"所属仓库id\"", ")", "\n    ", "private", " ", "Long", " warehouseId;\n    ", "/**\n     * 所属仓库名称\n     */", "\n    ", "@ExcelIgnore", "\n    ", "@ApiModelProperty(value = ", "\"所属仓库名称\"", ")", "\n    ", "@NotBlank(message=", "\"仓库名称不能为空\"", ")", "\n    ", "private", " String warehouseName;\n}\n\n", "\n", "业务service", "\n", "public", " Result upload(MultipartFile file,", "Long", " warehouseId){\n        Result result = Result.ok();\n        ", "try", " {\n            List<ToolStockDO> list = ExcelUtil.syncReadModel(file.getInputStream(), ToolStockDO.", "class", ", ", "0", ", ", "1", ");\n            ", "try", "{\n                result = ", "this", ".save(list,warehouseId);\n            }", "catch", " (Exception e){\n                e.printStackTrace();\n                ", "return", " Result.error(", "\"存入数据库失败\"", ");\n            }\n        } ", "catch", " (Exception e) {\n            e.printStackTrace();\n            ", "return", " Result.error(", "\"校验失败(数据格式错误)\"", ");\n        }\n        ", "return", " result;\n    }\n", "\n", "运行结果", "\n", "这种方式在遇到校验不合格的数据会停止导入，不能继续读取合格的数据。"]], "Tag": "程序设计"}
{"Answer": "double精度不够，看这里：\r\nhttps://blog.csdn.net/u013553804/article/details/51175388\r\nhttps://blog.csdn.net/luxuejuncarl/article/details/1568369", "Konwledge_Point": "数据的输出", "Question": ["C语言输出20位有效数字以上", ["\n                正确结果应该为   1124000727777611309520", "\n                但是程序从3后面全部保留0了 各位大佬还有什么打一点的数据类型嘛"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int [][] arr &amp;#61; new int [3][2];初始化时会在内存中创建一个数组对象然后通过一个指针来指向这个数组对象。输出就是这个指针的地址。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;    public static String toString(int[] a) {\n        if (a &amp;#61;&amp;#61; null)\n            return &amp;#34;null&amp;#34;;\n        int iMax &amp;#61; a.length - 1;\n        if (iMax &amp;#61;&amp;#61; -1)\n            return &amp;#34;[]&amp;#34;;\n\n        StringBuilder b &amp;#61; new StringBuilder();\n        b.append(&amp;#39;[&amp;#39;);\n        for (int i &amp;#61; 0; ; i&amp;#43;&amp;#43;) {\n            b.append(a[i]);\n            if (i &amp;#61;&amp;#61; iMax)\n                return b.append(&amp;#39;]&amp;#39;).toString();\n            b.append(&amp;#34;, &amp;#34;);\n        }\n    }&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Arrays.toString方法输出的是一个字符串&amp;#xff0c;两者输出的是不同的。&lt;/p&gt;\n\n&lt;p&gt;而未初始化的数组在内存中指针是默认NULL指针。&lt;/p&gt;\n\n&lt;p&gt;总结就是&lt;/p&gt;\n\n&lt;p&gt;第一个输出的是创建好的指针地址&lt;/p&gt;\n\n&lt;p&gt;第二个输出的是字符串&lt;/p&gt;\n\n&lt;p&gt;第三个输出的null默认值&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["java里关于数组输出地址的问题", ["\n", "//已初始化：\t\t\n\t\tint [][] arr = new int [3][2];\n\t\tSystem.out.println(arr[0]);//输出[I@6d06d69c\n\t\tSystem.out.println(Arrays.toString(arr[1]));//输出[0, 0]\n//未初始化：\t\t\n\t\tint [][] arr1 = new int [3][];\n\t\tSystem.out.println(arr1[0]);//输出null", "\n\n", "为什么已初始化后的数组直接输出是输出一个地址，只有使用Arrays方法后才输出默认值？而未初始化的数组直接调用就输出了默认值？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;例如可参万年历输出&lt;a href=\"https://blog.csdn.net/xianfajushi/article/details/103925143?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522161674418716780265482332%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;amp;request_id&amp;#61;161674418716780265482332&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-1-103925143.nonecase&amp;amp;utm_term&amp;#61;%E4%B8%87%E5%B9%B4&amp;amp;spm&amp;#61;1018.2226.3001.4450\"&gt;https://blog.csdn.net/xianfajushi/article/details/103925143?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522161674418716780265482332%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;amp;request_id&amp;#61;161674418716780265482332&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-1-103925143.nonecase&amp;amp;utm_term&amp;#61;%E4%B8%87%E5%B9%B4&amp;amp;spm&amp;#61;1018.2226.3001.4450&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["求大佬告诉我每行输出相同数量的数据并且对齐排列怎么弄？要c++的代码！", ["求大佬告诉我每行输出相同数量的数据并且对齐排列怎么弄？要c++的代码！"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;stdio.h&gt;\r\nint main()\r\n{int x,y,n;\r\n\tprintf(\"请输入总人数，不及格人数和输出宽度：\\n\");\r\n\tscanf(\"%d%d%d\",&amp;x,&amp;y,&amp;n);\r\n\tprintf(\"%*d\\n%*d\\n%5.2f%%\",n,x-y,n,x,(x-y)/(float)x*100);\r\n\treturn 0;\r\n } \r\n```\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201810/04/1538657492_971570.png)\r\n\r\n新手，如果有用的话希望采纳或点个赞", "Konwledge_Point": "数据的输出", "Question": ["怎么从键盘输入一个数n使其成为其他数据输出后的最小宽度", ["中间输入n成为最小宽度这个实在想不起来      ", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;editForm的属性与SysResourceVo 的属性是一致的吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["vue 控制台打印的数据 与后端实际接收的数据不一致", [" 前端代码", "\n", "\nasync editResource(){\n      ", "this", ".$refs.editFormRef.validate(async valid => {\n        ", "const", " _this = ", "this", "\n        ", "if", " (!valid) ", "return", "\n        ", "if", "(", "this", ".editForm.parentId === ", "''", ") ", "this", ".editForm.parentId = ", "0", "\n        \n        ", "//为什么这里打印的与后台接收的不一样", "\n        console.log(_this.editForm)\n        ", "const", " {", "data", " : res} =await role.editResource(_this.editForm)\n        \n        ", "if", "(res.code !== ", "20000", ") ", "return", " ", "this", ".$message.error(res.message)\n\n        ", "this", ".editDialogVisible = ", "false", "\n        await ", "this", ".getResourceList()\n        ", "this", ".$message.success(", "'修改资源信息成功！'", ")\n      })\n    }\n", "\n", "后端代码", "\n", "@PutMapping", "(", "\"update\"", ")\n    public R update(", "@RequestBody", " SysResourceVo sysResourceVo){\n        ", "System", ".out", ".println", "(", "\"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<,\"", ");\n        ", "System", ".out", ".println", "(sysResourceVo);\n        ", "return", " ", "getResult", "(resourceService.updateResource(sysResourceVo));\n    }\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你输入的数据没有保存在列表里呀&amp;#xff0c;而且你保存excel的代码也放在循环里了&amp;#xff0c;所以就相当于一次次都被覆盖掉了&amp;#xff0c;而且循环一次&amp;#xff0c;excel文件就被关了。&lt;br /&gt;试试这样改&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import xlsxwriter\nworkbook &amp;#61; xlsxwriter&lt;span class=\"hljs-selector-class\"&gt;.Workbook&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;health4.xlsx&amp;#39;&lt;/span&gt;)\nworksheet &amp;#61; workbook&lt;span class=\"hljs-selector-class\"&gt;.add_worksheet&lt;/span&gt;()\nheadings&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;weigh&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;BMI&amp;#39;&lt;/span&gt;]&lt;/span&gt;\ntemp &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一组身高h&amp;#xff1a;&amp;#39;&lt;/span&gt;)\nh &amp;#61; &lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(temp)\ntemp1 &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一组体重w&amp;#xff1a;&amp;#39;&lt;/span&gt;)\nw &amp;#61; &lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(temp1)\n&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[h]&lt;/span&gt;\nj &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[w]&lt;/span&gt;\nk &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[h/(w*w)]&lt;/span&gt;\nwhile h!&amp;#61;&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;:\n    temp &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一组身高h&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n    h &amp;#61; &lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(temp)\n    temp1 &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入一组体重w&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n    w &amp;#61; &lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt;(temp1)\n    &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(h)\n    j&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(w)\n    k&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(h/(w*w))\ndata &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[i, j, k]&lt;/span&gt;\nworksheet&lt;span class=\"hljs-selector-class\"&gt;.write_row&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;A1&amp;#39;&lt;/span&gt;,headings)\nworksheet&lt;span class=\"hljs-selector-class\"&gt;.write_column&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;A2&amp;#39;&lt;/span&gt;, data&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;)\nworksheet&lt;span class=\"hljs-selector-class\"&gt;.write_column&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;B2&amp;#39;&lt;/span&gt;, data&lt;span class=\"hljs-selector-attr\"&gt;[1]&lt;/span&gt;)\nworksheet&lt;span class=\"hljs-selector-class\"&gt;.write_column&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;C2&amp;#39;&lt;/span&gt;, data&lt;span class=\"hljs-selector-attr\"&gt;[2]&lt;/span&gt;)\nworkbook&lt;span class=\"hljs-selector-class\"&gt;.close&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["Python循环怎么让数据多次输出", ["\n", "现在只能输出最后一组数据，改了大半天了，作为new hand，实在想不出来了，怎么才能使输入的数据多一点哇😭"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/weixin_41274723/article/details/89530525", "Konwledge_Point": "数据的输出", "Question": ["绝对值排序，采用C语言实现，对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开", ["Problem Description", "\n输入n(n<=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。", "\n\n", "Input", "\n输入数据有多组，每组占一行，每行的第一个数字为n,接着是n个整数，n=0表示输入数据的结束，不做处理。 ", "\n\n", "Output", "\n对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。", "\n\n", "Sample Input", "\n3 3 -4 2", "\n4 0 1 2 -3", "\n0", "\n\n", "Sample Output", "\n-4 3 2", "\n-3 2 1 0"]], "Tag": "程序设计"}
{"Answer": "Move_Odd_Even 算法不对，具体不看了，你可以参考：\r\nhttps://blog.csdn.net/u010817474/article/details/48498139", "Konwledge_Point": "数据的输出", "Question": ["请问为什么数据域为2的结点最后输出的是指针？", ["#include", "\n#include", "\n\n", "typedef int DataType; //定义单链表的数据类型为整型", "\nstruct Node {", "\n    DataType      data;  //数据域", "\n    struct Node*  next;  //指针域", "\n};", "\ntypedef struct Node  *PNode;      //定义指向结构体的PNode类型", "\ntypedef struct Node  *LinkList;   //定义链表类型", "\n\n", "LinkList CreateList_Tail_loop( )// 尾插法建立单循环链表", "\n{", "\n    LinkList head=(LinkList)malloc(sizeof(struct Node));", "\n    PNode cur=NULL;", "\n    PNode tail=head;", "\n    DataType data;", "\n    scanf(\"%d\",&data);", "\n    while(data != -1)", "\n    {   //分配空间，赋值", "\n        cur=(struct Node*)malloc(sizeof(struct Node));", "\n        cur->data=data;", "\n        tail->next=cur;", "\n        tail = cur;", "\n        scanf(\"%d\",&data);", "\n    }", "\n    tail->next=head;", "\n    return tail;", "\n}", "\n\n", "void print(LinkList tail)    //输出单链表", "\n{", "\n    PNode head=tail->next;", "\n    PNode p=head->next;", "\n    while(p!=head)", "\n    {", "\n        printf(\"%d\\n\", p->data);", "\n        p=p->next;", "\n    }", "\n}", "\n\n", "void DestoryList_Link(LinkList tail)//释放单链表", "\n{", "\n    PNode pre = tail;", "\n    PNode p = tail->next;", "\n    while (p!=tail)", "\n    {", "\n        free(p);", "\n        p = p->next;", "\n    }", "\n    free(tail);", "\n}", "\n\n", "void  Move_Odd_Even(LinkList tail)", "\n{", "\n    PNode head=tail->next;", "\n    PNode p,q,m;", "\n    PNode pre;", "\n    p=head->next;", "\n    pre=head;", "\n    while(p->data%2!=0)", "\n    {", "\n        pre=p;", "\n        p=p->next;", "\n    }", "\n    m=p;", "\n    q=p;", "\n    p=p->next;", "\n    pre->next=q->next;", "\n    tail->next=q;", "\n    q->next=head;", "\n    tail=q;", "\n    while(p!=m)", "\n    {", "\n        if(p->data%2==0)", "\n        {", "\n            q=p;", "\n            p=p->next;", "\n            pre->next=q->next;", "\n            tail->next=q;", "\n            q->next=head;", "\n            tail=q;", "\n            continue;", "\n        }", "\n        pre=p;", "\n        p=p->next;", "\n    }", "\n}", "\n\n", "int main()", "\n{", "\n    LinkList tail=NULL;", "\n    tail=CreateList_Tail_loop();", "\n    Move_Odd_Even(tail);", "\n    print(tail);", "\n    DestoryList_Link(tail);", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;console.log(_this.tableData.id);//undefined&lt;br /&gt;是由于 _this.tableData 是一个数组&amp;#xff0c;当然id是undefined&amp;#xff0c;tableData里面的对象才有id&amp;#xff0c;如tableData中第一个对象console.log(_this.tableData[0].id);&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么我访问Vue里面的Data中的tableData下的变量id的控制台输出结果是undefined，但是我访问控制台输出tableData结果发现tableData里面的id是有数据的", ["问题遇到的现象：为什么我访问Vue里面的Data中的tableData下的变量id的控制台输出结果是undefined，但是我访问控制台输出tableData结果发现tableData里面的id是有数据的；", "访问方式：", "    new Vue({", "        el:\"#app\",", "         mounted(){", " var _this=this;", "             axios.get(\"", "http://localhost:8080/ElementDemo/selectAllServlet\").then", "(function (resp) {", "console.log(_this.tableData);//有数据", "console.log(_this.tableData.id);//undefined", "\n", "发生背景 :itheima javaweb课程最后面利用Element、vue、axios的综合案例之删除品牌", "\n", "问题相关代码：PS：（为了突出重点，只贴出关键部分）", "\n", "<", "script", ">", "\n    ", "new", " ", "Vue", "({\n        ", "el", ":", "\"#app\"", ",\n         ", "mounted", "(", "){\n             ", "var", " _this=", "this", ";\n             axios.", "get", "(", "\"http://localhost:8080/ElementDemo/selectAllServlet\"", ").", "then", "(", "function", " (", "resp", ") {\n                      _this.", "tableData", " =resp.", "data", ";\n                        ", "console", ".", "log", "(_this.", "tableData", ");", "//有数据", "\n                        ", "console", ".", "log", "(_this.", "tableData", ".", "id", ");", "//undefined", "\n         })\n         },\n        ", "data", "(", ") {\n            ", "return", " {\n                ", "tableData", ": [{\n                    ", "brandName", ": ", "''", ",\n                    ", "companyName", ": ", "''", ",\n                    ", "ordered", ": ", "''", ",\n                    ", "status", ":", "''", ",\n                    ", "id", ":", "''", "\n                }, {\n                    ", "brandName", ": ", "''", ",\n                    ", "companyName", ": ", "''", ",\n                    ", "ordered", ": ", "''", ",\n                    ", "status", ":", "''", ",\n                    ", "id", ":", "''", "\n                }, {\n                    ", "brandName", ": ", "''", ",\n                    ", "companyName", ": ", "''", ",\n                    ", "ordered", ": ", "''", ",\n                    ", "status", ":", "''", ",\n                    ", "id", ":", "''", "\n                }, {\n                    ", "brandName", ": ", "''", ",\n                    ", "companyName", ": ", "''", ",\n                    ", "ordered", ": ", "''", ",\n                    ", "status", ":", "''", ",\n                    ", "id", ":", "''", "\n                }, {\n                    ", "brandName", ": ", "''", ",\n                    ", "companyName", ": ", "''", ",\n                    ", "ordered", ": ", "''", ",\n                    ", "status", ": ", "''", ",\n                    ", "id", ": ", "''", "\n                }]\n            }\n        }\n    })\n", "\n", "\n", "  ", "<", "template", ">", "\n        ", "<", "el-table", "\n                ", ":data", "=", "\"tableData\"", "\n                ", "style", "=", "\"width: 100%\"", "\n                ", ":row-class-name", "=", "\"tableRowClassName\"", "\n            @", "selection-change", "=", "\"handleSelectionChange\"", ">", "\n            ", "<", "el-table-column", "\n                    ", "type", "=", "\"selection\"", "\n                    ", "width", "=", "\"55\"", ">", "\n            ", "</", "el-table-column", ">", "\n            ", "<", "el-table-column", "\n                    ", "type", "=", "\"index\"", "\n                    ", "width", "=", "\"50\"", ">", "\n            ", "</", "el-table-column", ">", "\n            ", "<", "el-table-column", "\n                    ", "prop", "=", "\"brandName\"", "\n                    ", "label", "=", "\"品牌名称\"", "\n                    ", "align", "=", "\"center\"", "\n                   >", "\n            ", "</", "el-table-column", ">", "\n            ", "<", "el-table-column", "\n                    ", "prop", "=", "\"companyName\"", "\n                    ", "label", "=", "\"企业名称\"", "\n                    ", "align", "=", "\"center\"", "\n                   >", "\n            ", "</", "el-table-column", ">", "\n            ", "<", "el-table-column", "\n                    ", "prop", "=", "\"ordered\"", "\n                    ", "label", "=", "\"订单量\"", "\n                    ", "align", "=", "\"center\"", ">", "\n            ", "</", "el-table-column", ">", "\n            ", "<", "el-table-column", "\n                    ", "prop", "=", "\"status\"", "\n                    ", "label", "=", "\"当前状态\"", "\n                    ", "align", "=", "\"center\"", "\n                    ", "translate", "=", "\"translateStatus\"", ">", "\n            ", "</", "el-table-column", ">", "\n            ", "<", "el-table-column", "\n                    ", "prop", "=", "\"id\"", "\n                    ", "label", "=", "\"id\"", "\n                    ", "align", "=", "\"center\"", "\n            >", "\n            ", "</", "el-table-column", ">", "\n            ", "<", "el-table-column", "\n                    ", "label", "=", "\"操作\"", "\n                    ", "align", "=", "\"center\"", ">", "\n                ", "<", "el-row", ">", "\n                ", "<", "el-button", " ", "type", "=", "\"primary\"", "  >", "修改", "</", "el-button", ">", "\n                ", "<", "el-button", " ", "type", "=", "\"danger\"", " @", "click", "=", "\"deleteBrandById\"", ">", "删除", "</", "el-button", ">", "\n                ", "</", "el-row", ">", "\n            ", "</", "el-table-column", ">", "\n        ", "</", "el-table", ">", "\n    ", "</", "template", ">", "\n\n", "\n", "运行结果：", "\n", "可以看出我通过console.log(_this.tableData);访问tableData是有数据的，而且里面的id变量也是有数据的；", "\n", "可以看出我通过console.log(_this.tableData.id);访问tableData.id他给我输出一个undefined；", "\n", "报错内容：目前无报错，不过因为他给我一个undefined传到我的Servlet里面导致了我空指针异常 ；", "\n", "我的解答思路和尝试过的方法 ：", "搞了很久之后我怀疑是我的访问方式有问题，但是我在网上搜不到；", "我想要达到的结果  ：", "获取正确的id数据，而不是undefined；"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/ylzmm/article/details/100328505", "Konwledge_Point": "数据的输出", "Question": ["请问为什么我用C语言写的线性表的链式存储结构的遍历输出值无法输出。而且代码没有警告和错误", ["测试环境VC6.0", "\n\n", "#include<stdlib.h>\n#include<stdio.h>\ntypedef int Status;   \n#define OK 1\n#define ERROR 0\n#define OVERFLOW -2\n\ntypedef struct NODE{   //定义\n  int a;\n  struct NODE*next;     //这里struct也应该添加.\n}Node;\n\nvoid InitList(Node*la){//头节点创建\n  la=(Node*)malloc(sizeof(Node));\n  la->next=NULL;\n}\n\n Status ListInsert(Node*a,int i,int e)\n {//在i-1,i中插入元素,就是在第I个位置插入。\n     Node*p,*c;\n     int j=0;\n     p=a;\n     c=NULL;\n     while(j<i) {p=p->next;j++;}  //p与p->next都为指针变量,;不能忘记//\n     if(j<0||j>i) return ERROR ;  //一次执行完的判断\n     c=(Node*)malloc(sizeof(Node));\n     c->a=e;\n     c->next=p->next;      //空指针域的继承与修改\n     p->next=c;\n     return OK;\n }\n\n Status TraverseList(Node a)\n {//遍历链表并且输出每个节点\n\n     Node*p;\n     p=a.next;\n     printf(\"遍历结果是\\n\");\n     while(p!=NULL)\n     {\n       printf(\"%d\",p->a);\n       p=p->next;\n     }\n     return OK;\n }\nvoid main()\n{\n    Node a;\n    int b,e,j;\n    j=1;\n    InitList(&a);\n    printf(\"请插入个数\");\n    scanf(\"%d\",&b);\n    printf(\"请输入\");\n    for(;j<=b;j++)\n    {   scanf(\"%d\",&e);\n        ListInsert(&a,j,e);\n    }\n    TraverseList(a);\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#根据概率随机输出10个百分比,然后将输出的百分比按照 &amp;#xff08;100&amp;#xff05;-输出的百分比&amp;#xff09;×60 这个公式计算&amp;#xff0c;将10个值输出。&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; random\n&lt;span class=\"hljs-attribute\"&gt;weight&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-meta\"&gt; [0.06,0.1,0.12,0.15,0.18,0.14,0.12,0.08,0.04,0.01]&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;alist&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-meta\"&gt; [10, 20, 30, 40,50,60,70,80,90,100]&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-attribute\"&gt;choiceNum&lt;/span&gt;  &amp;#61; random.choices(alist, weights&amp;#61;weight)\n    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(str(choiceNum[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; random.randint(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)) &amp;#43; &amp;#39;%&amp;#39;, (&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; -choiceNum[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; random.randint(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["python 根据不同的区间概率输出值。", ["p(10-19％)=0.06", "p(20-29％)=0.1", "p(30-39％)=0.12", "p(40-49％)=0.15", "p(50-59％)=0.18", "p(60-69％)=0.14", "p(70-79％)=0.12", "p(80-89％)=0.08", "p(90-99％)=0.04", "p(100％)=0.01", " 各一定区间的百分比满足以上概率", "根据概率随机输出10个百分比", "然后将输出的百分比按照  （100％-输出的百分比）×60 这个公式计算，将10个值输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1,sklearn包自带数据集为列表&amp;#xff0c;输出为字典键值对格式&lt;br /&gt;2&amp;#xff0c;pandas用read_csv打开的是逐行读取输出为行列表格。可以转化为sklearn格式&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["pycharm数据分析导入数据集，打印输出格式不一致", ["最近在学习python数据分析，刚接触pycharm不久，在学习参考有关书籍的代码时，遇到一些问题不太明白，希望有人能给予解答，十分感谢！", "问题如下：", "在导入sklearn包自带数据集和导入自己的数据集时，打印输出的结果格式不一样，不知道是什么原因？", "1、导入sklearn包自带数据集及输出结果如下：", "\n", "输出结果：", "\n", "查看sklearn包数据集原始数据，发现就是普通的CSV格式，且里面并没有“data”、“target”、“target_name”等关键字", "sklearn包数据源：", "\n", "2、导入自己的数据集及输出结果如下：", "通过pandas方式导入数据集：", "\n", "输出结果：", "\n", "不知道为何上述两种方式的输出结果不一样，看数据导入源码并没有做任何变换，", "Q1：为何sklearn包的数据集的输出格式已经分类，而自己的数据集就是普通格式，背后的原理是什么？", "Q2：自己的数据集能否实现与sklearn包的数据集相同的输出效果？", "希望有人能给予解答，十分感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Just put a flag inside the loop to ensure you entered at least once.&lt;/p&gt;\n\n&lt;p&gt;Something like: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$flag = false;\n$query=$db-&amp;gt;prepare(\"SELECT *...\");\nwhile($data=$query-&amp;gt;fetch(PDO::FETCH_ASSOC)){\n    $flag = true;\n}\nif ($flag) {} //entered\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Added semicolon, thanks &lt;a href=\"https://stackoverflow.com/users/1415724/fred-ii\"&gt;@Fred -ii&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["检查while循环输出查询中的任何数据", ["\n\n", "$query=$db->prepare(\"SELECT *...\nwhile($data=$query->fetch(PDO::FETCH_ASSOC)){...}\n", "\n\n", "I have a query use while loop print out the data. ", "\n\n", "How can I check if while loop didn't fetch out any data(0 row from db), so I can print \"0 result\" on screen.", "\n\n", "I don't want to make extra query for COUNT(*), is any way do check from while loop?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import csv\n\nwith open(&amp;#34;score.txt&amp;#34;,&amp;#34;r&amp;#34;,newline&amp;#61;&amp;#34;&amp;#34;, encoding&amp;#61;&amp;#39;utf-8&amp;#39;) as fileObj:\n    li &amp;#61; list(csv.reader(fileObj))\nprint(*li,sep&amp;#61;&amp;#39;\\n&amp;#39;)\nli.sort(key&amp;#61;lambda x: sum(map(float,x[2:])), reverse&amp;#61;True)\nprint(&amp;#39;----------------------&amp;#39;)\nfor v in li:\n    v[0],v[1] &amp;#61; v[1],v[0]\nprint(*li,sep&amp;#61;&amp;#39;\\n&amp;#39;)\nwith open(&amp;#34;sorted.txt&amp;#34;,&amp;#34;w&amp;#34;,newline&amp;#61;&amp;#34;&amp;#34;, encoding&amp;#61;&amp;#39;utf-8&amp;#39;) as fileObj:\n    csv.writer(fileObj).writerows(li)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"165\" src=\"https://img-ask.csdnimg.cn/upload/1624264322119.png\" width=\"389\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"183\" src=\"https://img-ask.csdnimg.cn/upload/1624264329537.png\" width=\"395\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Python利用文件输入学生数据，给成绩排名，输出到新文件", ["【问题描述】", "\n\n", "文件score.txt中存储了若干学生的姓名、学号和3门考试课的成绩", "\n\n", "要求：按总分从高到低输出学生成绩记录（按学号、姓名、三门课成绩的顺序）到文件sorted.txt", "\n\n", "【输入形式】", "\n\n", "文件中每行为一个学生信息，形式为：姓名，学号，成绩1，成绩2，成绩3", "\n\n", "【输出形式】", "\n\n", "按照总分从高到低输出学生信息到文件sorted.txt，每行一个学生的信息，输出形式为：学号，姓名，成绩1，成绩2，成绩3", "\n\n", "【样例输入】", "\n\n", "Zhang,2011010101,66,77,88", "\n\n", "Li,2011010102,55,48,68", "\n\n", "Wang,2011010103,78,87,92", "\n\n", "Zhao,2011010104,53,34,55", "\n\n", "Liu,2011010105,55,65,75", "\n\n", "【样例输出】", "\n\n", "2011010103,Wang,78,87,92", "\n\n", "2011010101,Zhang,66,77,88", "\n\n", "2011010105,Liu,55,65,75", "\n\n", "2011010102,Li,55,48,68", "\n\n", "2011010104,Zhao,53,34,55"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;If I interacted 4 times, it should output 4 times&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;With your data schema, you'd either need the four distinct queries you quoted, or a &lt;a href=\"http://dev.mysql.com/doc/refman/5.6/en/union.html\" rel=\"nofollow\"&gt;&lt;code&gt;UNION&lt;/code&gt;&lt;/a&gt; over these.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;it was like redundancy&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This &lt;em&gt;is&lt;/em&gt; redundant because the way your schema is organized. If you want to be able to treat these different interactions alike (which makes a lot of sense), then you'd want an extra table for these, with one column identifying the row of your original table that this refers to, and a second column (probably of an &lt;code&gt;ENUM&lt;/code&gt; type) identifying the social media. Both together would form the primary key of that table.&lt;/p&gt;\n\n&lt;p&gt;You can then create a &lt;code&gt;VIEW&lt;/code&gt; from the actual tables which looks just like your table does now. That way you can maintain compatibility to existing queries and still provide more flexible queries for those cases where you need them.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["MYSQL在mysql数据库中只输出一行多行", ["\n\n", "I have this data that should output to corresponding number of social media that he interacted with.", "\n\n", "There's ", "4", " interaction which is ", "fblike_point, fbshare_point, tweet_point, and follow_point", "\n\n", "So let's say, I've interacted with ", "fblike_point", " and ", "tweet_point", " judging from the data below.", "\n\n", "\n\n", "So what I want to do is, it should output 2 times since I've interacted with fblike_point and tweet_point.", "\n\n", "Output:", "\n\n", "2013-05-14 | fblike_point", "\n\n", "2013-05-14 | tweet_point", "\n\n", "If I interacted 4 times, it should output 4 times with the corresponding social media interaction that he made.", "\n\n", "Well I can manage to do this stuff but, it was like redundancy, for example I'm using a mysql query in ", "PHP", " for selecting data:", "\n\n", "SELECT date_participated, fblike_point FROM table WHERE fblike_point = 1\nSELECT date_participated, fbshare_point FROM table WHERE fbshare_point = 1\nSELECT date_participated, tweet_point FROM table WHERE tweet_point = 1\nSELECT date_participated, follow_point FROM table WHERE follow_point = 1\n", "\n\n", "So is there any other way to have a short method or something?", "\n    "]], "Tag": "程序设计"}
{"Answer": "Pop(S,x)就是把栈S中的元素弹出来，放到x中。（不过不知道是用什么Pop是用什么方式实现的，像这样按值传递可以在Pop里改变x吗？）\r\n\r\n\r\n```\r\n1.Push(S,x);Push(S,'a');Push(S,y);\r\n之后栈为：kac；\r\n2.Pop(S,x);\r\n之后栈为：ac；x=k；\r\n3.Push(S,'t');Push(S,x)\r\n之后栈为：ktac；\r\n4.Pop(S,x)\r\n之后栈为：tac；x=k；\r\n5.Push(S,'s')\r\n之后栈为：stac；\r\n6.后面的while循环里将栈里的字符逐个Pop出来输出就是\"stac\"\r\n7.最后的printf(x)（这是什么用法？C语言可以这用？）输出x里面的\"k\"\r\n```", "Konwledge_Point": "数据的输出", "Question": ["求解数据结构栈的输出输入问题", ["\n为何结果是stack？pop(s,x)的用法是什么？ ", "\nO(∩_∩)O谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一个实现&amp;#xff0c;如果功课的平均成绩那里要输出5个学生的平均成绩&amp;#xff0c;可以用一个for循环从学生成绩结构数组s的avg字段读取&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt; &lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;stu&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; chinese;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; math;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; english;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; avg;\n}; \n \n&lt;span class=\"hljs-comment\"&gt;//获取5个学生信息到学生成绩结构数组s中 &lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; stu * s)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input scores of student %d:\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;NO.:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;s[i].id);\n        \n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;()!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//清除输入的换行符&amp;#xff0c;以便让下面的名字字符串获取成功 &lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;name:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s[i].name);\n        \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;score 1:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;s[i].chinese);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;score 2:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;s[i].math);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;score 3:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;s[i].english);\n        \n        i&amp;#43;&amp;#43;;                        \n    }\n    \n}\n \n &lt;span class=\"hljs-comment\"&gt;//计算学生的总平均成绩 &lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;  &lt;span class=\"hljs-title\"&gt;calculateAvg&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; stu *s)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; avg&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;){        \n                \n            s[i].avg&amp;#61;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;)(s[i].chinese&amp;#43;s[i].english&amp;#43;s[i].math)/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//每个学生的平均成绩存入学生成绩结构数据s的平均分字段avg中 &lt;/span&gt;\n            avg&amp;#43;&amp;#61;s[i].avg; &lt;span class=\"hljs-comment\"&gt;//累加每个学生的平均分 &lt;/span&gt;\n            i&amp;#43;&amp;#43;;\n    }\n    \n    avg/&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//除以学生的人数得出成绩的总平均分 &lt;/span&gt;\n     \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; avg;\n} \n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;findMax&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; stu * s)&lt;/span&gt;&lt;/span&gt;{  &lt;span class=\"hljs-comment\"&gt;//寻找最高分的下标 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; maxScore&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; maxindex&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; temp;\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        temp&amp;#61;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;)(s[i].chinese&amp;#43;s[i].english&amp;#43;s[i].math);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(temp&amp;gt;maxScore){\n            maxScore&amp;#61;temp;\n            maxindex&amp;#61;i;\n        }             \n    } \n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; maxindex;\n}\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    \n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;stu&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(s);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;功课的平均分成绩分别为&amp;#xff1a;%.1f\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;calculateAvg&lt;/span&gt;(s));\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最高分的同学信息是&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; index &amp;#61; &lt;span class=\"hljs-built_in\"&gt;findMax&lt;/span&gt;(s);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;NO.:%d, name:%s, score:%.1f, %.1f, %.1f, average:%.1f&amp;#34;&lt;/span&gt;\n    ,index&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,s[index].name,s[index].chinese,s[index].math,s[index].english,s[index].avg);\n    \n  \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n} \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/791794744356144.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["计算学生平均成绩,并输出课程总平均成绩和最高分的学生信息。", ["从键盘输入5个学生数据（包括学号、姓名、3门课的成绩），计算并输出课程总平均成绩和最高分的学生信息。", "\n", "1.输出的课程总平均成绩是3门课程的总平均成绩，输出的学生信息包括学号、姓名、3门课的成绩和平均分数。浮点型的数据输出保留1位小数。", "2.程序中的数据输入、平均分计算、最高分查找都利用函数实现。计算结果的输出在main函数中实现。", "\n", "如输入（ 包括提示）：", "input scores of student 1:", "NO.:1", "name:zhang", "score 1:70", "score 2:80", "score 3:90", "input scores of student 2:", "NO.:2", "name:wang", "score 1:90", "score 2:98", "score 3:97", "input scores of student 3:", "NO.:3", "name:li", "score 1:98", "score 2:90", "score 3:87", "input scores of student 4:", "NO.:4", "name:zhao", "score 1:99", "score 2:98", "score 3:97", "input scores of student 5:", "NO.:5", "name:hu", "score 1:76", "score 2:77", "score 3:78", "输出：", "功课的平均成绩分别为：88.3", "最高分的同学信息是:", "No.: 4, name: zhao, score:99.0, 98.0, 97.0, average: 98.0"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那就是你数据渲染有问题了&amp;#xff0c;仔细检查一下&amp;#xff0c;是否是从Object中获取数据的。数据有返回&amp;#xff0c;页面不显示&amp;#xff0c;就是你渲染数据不对。&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;如有帮助望采纳。点击我回答右上角【采纳】按钮。&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["我用JQuery ajax导出数据 控制台上有数据  但是页面上不显示", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;打断点看看line的内容&amp;#xff0c;再就是看看sscanf的返回值是不是9&amp;#xff0c;sscanf返回成功赋值的字段个数。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么文件读入后输出结果都是0？", ["输入数据按行输入，把每列数据放在一个数组，输出结果为0，程序如下：", "\n"]], "Tag": "程序设计"}
{"Answer": "可以用 Timer 定时器，每一秒输出一行信息。", "Konwledge_Point": "数据的输出", "Question": ["Java语言怎么控制输出结果以每秒钟1行的速度输出呢", ["Java语言怎么控制输出结果以每秒钟1行的速度输出呢", "\nJava语言怎么控制输出结果以每秒钟1行的速度输出呢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;s &amp;#61; input(&amp;#34;输入使用空格分隔的两个整数&amp;#xff1a;&amp;#34;)\nnum_list &amp;#61; [int(i) for i in s.split(&amp;#39; &amp;#39;)]\nnum_list &amp;#61; [str(i) for i in sorted(num_list)]\nprint(&amp;#34; &amp;#34;.join(num_list))&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" src=\"https://img-ask.csdnimg.cn/upload/1623999836577.png\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["编写程序，输入使用空格分隔的两个整数，然后按升序输出", ["编写程序，输入使用空格分隔的两个整数，然后按升序输出"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;tuple&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    vector&amp;lt;tuple&amp;lt;string, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt;&amp;gt; grades;\n    string name;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; grade1, grade2;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        cin &amp;gt;&amp;gt; name &amp;gt;&amp;gt; grade1 &amp;gt;&amp;gt; grade2;\n        grades.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;({name, grade1, grade2});\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;auto&lt;/span&gt; &amp;amp;[name, grade1, grade2] : grades)\n        cout &amp;lt;&amp;lt; grade1 &amp;#43; grade2 &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;$ g&amp;#43;&amp;#43; -Wall -std&amp;#61;c&amp;#43;&amp;#43;&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.cpp&lt;/span&gt;\n$ ./&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.out&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\ngaoxiang &lt;span class=\"hljs-number\"&gt;78&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;96&lt;/span&gt;\nwangxi &lt;span class=\"hljs-number\"&gt;56&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;\nliujia &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;87&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;174&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;155&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;177&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["成绩统计——输出总分", ["题目名称：成绩统计——输出总分", "题目描述：输入N个学生的姓名和语文、数学的得分，输出每位同学的总分。", "输入描述：第1行，有一个整数N，N的范围是[1…100]；下面有N行，每行一个姓名，2个整数。姓名由不超过10个的小写字母组成，整数范围是[0…100]。", "输出描述：每个同学的总分成绩（默认总分没有相同情况）。", "\n", "样例输入：", "3", "gaoxiang  78  96", "wangxi    56  99", "liujia   90  87", "样例输出：", "174", "155", "177", "\n", "最后实在写不下去了T_T"]], "Tag": "程序设计"}
{"Answer": "输出是什么意思，展示吗？把尖括号换成&amp; l t；和&amp; g t；就好了，注意是英文半角状态下的连续字符我这加了空格了。如果用jQuery写入的话直接$(div）.text(\"你的文本\")也实现了\r\n\r\n```\r\n          window.xjo={};\r\n          if(!xjo.basePath){\r\n        \t   var tags=document.getElementsByTagName(\"script\");//获取script标签\r\n        \t   var path = tags[tags.length - 1].getAttribute(\"src\");//获取其src-&gt;/ProjectName/statics/xjo/core.js\r\n        \t   var basePath=path.substring(0, path.lastIndexOf(\"/\") + 1) //-&gt;/ProjectName/statics/xjo/\r\n        \t   xjo.basePath=basePath;\r\n           }\r\n```\r\n突然发现你这个方法很无赖诶，你就是想调取别人的JS，还要把JS内容展示到页面上，你去查菜鸟教程或者W3Cschool尝试功能怎么实现吧，可能那样会有点思路", "Konwledge_Point": "数据的输出", "Question": ["求问！！如何在div中输出js", ["<div class=\"csdn\"></div>\n", "\n\n", "如何在以上div中输出以下的js", "\n\n", "<script type='text/javascript' src='//ask.csdn.net/csdn.js'></script>\n", "\n\n", "就是输出这个js", "\n\n", "<script type='text/javascript' src='//ask.csdn.net/csdn.js'></script>\n", "\n\n", "js是第三方的，我无法修改获取", "\n\n", "把js放html里会自动显示内容，但是我无法修改html，只能插入js"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你图片中不是已经执行到cout了吗?&lt;br /&gt;参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,m;\n    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt;m;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; n&amp;gt;m?m:n;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; a;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i--)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(m%i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; n%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;最大公约数:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i&amp;lt;&amp;lt;endl;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["vs的c++调试面板只能输入，显示不了输出结果", ["程序在vs里成功运行了，但是在调试面板上显示不出来输出结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是申请了三个char,但是读入了三个字符串&lt;br /&gt;应该将char类型变量改为char数组(或int数组)&lt;br /&gt;示例代码如下:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;], b[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, a);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, b);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s&amp;#34;&lt;/span&gt;, a, b);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/345222753336132.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言printf函数无法输出是什么原因", ["要求是读取姓名和生日年份再输出，按下enter之后无法输出是什么原因，是写的代码的问题吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;串口不是以太网数据包&amp;#xff0c;它不保证完整的&lt;br /&gt;你要写while循环不停的读啊&amp;#xff0c;没有数据的时候也要读&lt;br /&gt;可以加个判断&amp;#xff0c;连续多少次或多长时间没有数据回来&amp;#xff0c;或者数组已经太长了&amp;#xff0c;那么之前的数据就可以集中处理一下&lt;br /&gt;-&amp;#61;-&amp;#61;-&amp;#61;&lt;br /&gt;如果你的应用是两台机器对等传输&amp;#xff0c;串口随时都会有数据进来&amp;#xff0c;那你必须建一个线程不停的读&amp;#xff0c;读完处理或者显示&lt;br /&gt;如果你的通信是主从方式的&amp;#xff0c;那么发送完之后&amp;#xff0c;可以写个sleep&amp;#xff0c;这样处理起来相对简单一些&lt;br /&gt;不过如果想要高性能低延迟&amp;#xff0c;还是应该立即开始读取&amp;#xff0c;并且反复读&amp;#xff0c;直到接收到的数据长度已经符合预期或者超时不再有新数据到达为止&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python读取串口数据存在丢失", ["大概的方法就是这样的，用readall读取不了数据，用read读有时候数据包会有一些数据丢失，谁能告诉我这是怎么回事吗？网上搜索看也有很多人出现过这种问题？是python的库有问题还是什么？", "import serial", "dataSize= ser.inWaiting()", "ser.read(dataSize)"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; Fibonacci[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;];\n    Fibonacci[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    Fibonacci[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;39&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        Fibonacci[i] &amp;#61; Fibonacci[i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#43; Fibonacci[i - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\n    }\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;39&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, Fibonacci[i]);\n        j&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["编写程序计算Fibonacci数列的前40项。（要求每行输出4个数）", ["include <stdio.h>", "\n", "int main()", "{", "    //在此处定义一个int类型的数组Fibonacci，大小为40", "    Fibonacci[0]=0;", "    Fibonacci[1]=1;", "    for()//在括号内填入从数组下标2到数组末尾的循环", "    {", "        //在此处填入计算当前下标下的斐波那契数的计算式", "    }", "    int j=1;", "    for(int i=0;i<=39;i++)", "    {", "        printf(\"%d  \",Fibonacci[i]);", "        j++;", "        if(j==4){", "            printf(\"\\n\");", "            j=1;", "        }", "    }", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果有帮助请点一下我回答右上方的采纳&amp;#xff0c;谢谢&amp;#xff01;以后有什么问题可以互相交流。&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/697122433336151.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stdio.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; TTWO 32&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; TONE 31&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//*x&amp;gt;-2147483648     &amp;amp;&amp;amp; x&amp;lt;2147483648;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;integertrueform&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) map[TONE]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {map[TONE]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; x&amp;#61;-x;}\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(x&amp;amp;&amp;amp;(i-TTWO))    \n    {\n        map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;x%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n         i&amp;#43;&amp;#43;;\n         x&amp;#61;x/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n     }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;decimaltrueform&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; x,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) map[TONE]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {map[TONE]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; x&amp;#61;-x;}\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;TONE;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(x!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;i)\n    {    x&amp;#61;x*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;x--;}\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        i--;\n    }    \n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ptrueform&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;TTWO;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i)\n     {\n         &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]); \n        i--;\n     }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;onescomplement&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(map[TONE]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    { \n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    \n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {    i&amp;#61;TONE;\n\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)     map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;     map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            i--;    \n        }\n        \n    } \n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ponescomplement&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;TTWO;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]); \n        i--;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;complemental&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(map[TONE]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(map[i]&amp;amp;&amp;amp;i&amp;lt;TTWO)\n        {\n            map[i&amp;#43;&amp;#43;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        map[i]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;pcomplemental&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;TTWO;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]); \n        i--;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;excess&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(map[TONE]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) map[&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; map[TONE]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;    \n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;pexcess&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; map[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;TTWO;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,map[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]); \n        i--;\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;/*void ITEID(int map[]) \n{    int i&amp;#61;TTWO;int j[TTWO]&amp;#61;{0};int e[8]&amp;#61;{0};int c&amp;#61;22;\n    while(i)\n    {\n        if(map[i--]&amp;#61;&amp;#61;1) {break;i--;}    \n    }\n    integertrueform(i,e);\n    j[23]&amp;#61;map[TONE];\n    while(i&amp;amp;&amp;amp;c&amp;#43;1)\n    {\n        j[c--]&amp;#61;map[i--];\n    }\n    printf(&amp;#34;ITEEE754浮点数:0&amp;#34;);\n    int y&amp;#61;31; \n    while(y&amp;gt;24)\n    {\n        printf(&amp;#34;%d&amp;#34;,e[y--]);\n    }\n    c&amp;#61;23; \n    while(c&amp;#43;1)\n    {\n        printf(&amp;#34;%d&amp;#34;,j[c--]);\n    }\n    printf(&amp;#34;\\n&amp;#34;);\n    \n} \n/*void ITEI\nvoid ITED */&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;main&lt;/span&gt;()\n{    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[TTWO]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;},z[TTWO]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; ti &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; td &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; tdf&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tdi&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个十进制数:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,str);    &lt;span class=\"hljs-comment\"&gt;// 先存成字符串 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;strchr&lt;/span&gt;(str, &lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;))   &lt;span class=\"hljs-comment\"&gt;// 等于NULL是没有找到小数点 &lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str, &lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;ti);  &lt;span class=\"hljs-comment\"&gt;// 再从字符串格式化成整型&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入的是定点整型&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;, ti); \n          &lt;span class=\"hljs-built_in\"&gt;integertrueform&lt;/span&gt;(ti,a);    \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;原码:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;ptrueform&lt;/span&gt;(a);\n    &lt;span class=\"hljs-comment\"&gt;/*    ITEID(a);*/&lt;/span&gt;\n        \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;onescomplement&lt;/span&gt;(a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;反码:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;ponescomplement&lt;/span&gt;(a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;complemental&lt;/span&gt;(a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;补码:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;pcomplemental&lt;/span&gt;(a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;excess&lt;/span&gt;(a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;移码:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;pexcess&lt;/span&gt;(a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str, &lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;td);  &lt;span class=\"hljs-comment\"&gt;// 再从字符串格式化成浮点型 &lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入的是浮点数&amp;#xff1a;%lf\\n&amp;#34;&lt;/span&gt;, td); \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(td&amp;lt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;amp;&amp;amp;td&amp;gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)\n        { \n              &lt;span class=\"hljs-built_in\"&gt;decimaltrueform&lt;/span&gt;(td,a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;定点小数原码:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;ptrueform&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;onescomplement&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;定点小数反码:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;ponescomplement&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;complemental&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;定点小数补码:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;pcomplemental&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;excess&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;定点小数移码:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;pexcess&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(td&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;||td&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)\n        {\n            tdi&amp;#61;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)td;\n            tdf&amp;#61;td-tdi;\n            &lt;span class=\"hljs-built_in\"&gt;integertrueform&lt;/span&gt;(tdi,a);    \n            &lt;span class=\"hljs-built_in\"&gt;decimaltrueform&lt;/span&gt;(tdf,z);\n            \n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;原码整数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;ptrueform&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;        &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;原码小数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;ptrueform&lt;/span&gt;(z);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            \n            &lt;span class=\"hljs-built_in\"&gt;onescomplement&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;反码整数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;ponescomplement&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;        &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;onescomplement&lt;/span&gt;(z);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;反码小数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;ponescomplement&lt;/span&gt;(z);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            \n            &lt;span class=\"hljs-built_in\"&gt;complemental&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;补码整数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;pcomplemental&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;        &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;complemental&lt;/span&gt;(z);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;补码小数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;pcomplemental&lt;/span&gt;(z);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            \n            &lt;span class=\"hljs-built_in\"&gt;excess&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;移码整数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;pexcess&lt;/span&gt;(a);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;        &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;excess&lt;/span&gt;(z);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;移码小数部分:&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;pexcess&lt;/span&gt;(z);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            \n        } \n        \n    }\n\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["用C实现：给出一个十进制数，可以是整数，也可以是小数。经过数据处理之后，输出这个数的原码，反码，补码，和移码的表示方法。其中整数部分和小数部分分别用32位机器数表示。再输出这个数的单精度浮点数。", ["给出一个十进制数，可以是整数，也可以是小数。经过数据处理之后，输出这个数的原码，反码，补码，和移码的表示方法。其中整数部分和小数部分分别用32位机器数表示。再输出这个数的单精度浮点数。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你现在做的是在循环内部赋值session.setAttribute(&amp;#34;getCartList&amp;#34;, cartList);&amp;#xff0c;这样存入到session的只有最后查出的数据。&lt;/p&gt;\n&lt;p&gt;应该是在for循环上边定义List cartList&lt;br /&gt;在for循环内部将查询到的数据添加进cartList&lt;br /&gt;在for循环下边进行赋值session.setAttribute(&amp;#34;getCartList&amp;#34;, cartList);&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["控制台明明输出两行数据，反馈到前端时只有一条数据显示，是需要再次对cartList再次遍历吗？", ["\n", "\n", "\n", "控制台明明输出两行数据，反馈到前端时只有一条数据显示，是需要再次对cartList再次遍历吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样&amp;#xff1f;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/725401422946129.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;lst&lt;/span&gt;&amp;#61;[]\n&lt;span class=\"hljs-attribute\"&gt;lst&lt;/span&gt;.append([&amp;#39;俄罗斯&amp;#39;,&lt;span class=\"hljs-number\"&gt;1709&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;43&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;lst&lt;/span&gt;.append([&amp;#39;加拿大&amp;#39;,&lt;span class=\"hljs-number\"&gt;998&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;lst&lt;/span&gt;.append([&amp;#39;中国&amp;#39;,&lt;span class=\"hljs-number\"&gt;960&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;lst&lt;/span&gt;.append([&amp;#39;美国&amp;#39;,&lt;span class=\"hljs-number\"&gt;937&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;lst&lt;/span&gt;.append([&amp;#39;巴西&amp;#39;,&lt;span class=\"hljs-number\"&gt;854&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;])\n\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; item in lst:\n    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&amp;#39;%s国土面积%s万平方公里&amp;#39;%(item[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],item[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]))\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&amp;#39;\\n\\n&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; item in lst:\n    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&amp;#39;%s人口%s亿人&amp;#39;%(item[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],item[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]))\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241394005546146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于#python#的问题：python列表for遍历循环求解", ["1、利用列表存放国土数据表", "2、遍历输出国名和国土面积信息", "3、遍历输出国名和人口信息", "3、利用append()方法创建列表", "俄罗斯  1709.8      1.43", "加拿大  998.48     0.35", "中国      960.0       13.2", "美国      937.2        3.1", "巴西      854.7        1.9"]], "Tag": "程序设计"}
{"Answer": "原来以为你是传的字符……\r\n\r\n如果二进制字串，不要用 reader，reader是面向char\r\n会按char编码.\r\n两个字节的 0 0 会被合并成一个0 .......\r\n\r\n直接用InputStream读byte数组", "Konwledge_Point": "数据的输出", "Question": ["关于Socket中的数据流获取", ["诚心请教，这段时间在做一个项目，一个GPRS的数据中心。GPRS终端通过Internet将数据传输至数据中心。所以我设想通过Socket去实现通讯。在做model的时候却出现了一个问题。我获取的一段心跳数据出现了错误，做数据比对是用十六进制的形式进行比对的(源数据是十六进制)。代码如下，不知道我错在什么地方请各位指点。[code=\"java\"]", "\nprivate BufferedReader getReader(Socket socket) throws IOException {", "\n        InputStream socketIn = socket.getInputStream();", "\n        return new BufferedReader(new InputStreamReader(socketIn));", "\n    }[/code]", "\n[code=\"java\"]", "\nin= getReader(connection);", "\nString str=\"\"; ", "\nwhile((str=in.readLine())!=null){", "\n\n", "System.out.println(\"has receive....\");", "\nSystem.out.println(\"收到原码：\"+str);", "\nSystem.out.println(\"转换为16：\"+ String2Hex(str));", "\n\n", "if(str.equals(\"end\"))", "\n\n", "break;", "\n\n", "}", "\n\n", "connection.close();", "\n\n", "}[/code]", "\n转换成16进制的代码如下：", "\n[code=\"java\"]", "\n  public static String String2Hex(String s){", "\n        String str = \"\";", "\n        for(int i=0;i<s.length();i++){", "\n            int ch = s.charAt(i);", "\n            String ss = Integer.toHexString(ch);", "\n            str = str + ss;", "\n        }", "\n        return str.toUpperCase();", "\n    }   [/code]", "\n我自己分析了一下，但是不知道我的分析是否正确。我分析是在获取Socket的流时候就已经出现了错误，也就是", "\n                [code=\"java\"]", "\n                InputStream socketIn = socket.getInputStream();", "\n        return new BufferedReader(new InputStreamReader(socketIn));", "\n\n", "[/code] 所以str=in.readLine()就已经是一列错误的字符串了", "\n[code=\"java\"]该心跳包正确的16进制串为：6831003100689B13727077000260000001006A166831003100689B13727077000260000001006A166831003100689B13727077000260000001006A166831003100689B13727077000260000001006A166831003100689B13727077000260000001006A166831003100689B13727077000260000001006A16", "\n我解析的为：68310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a16", "\n[/code]", "\n\n", "[b]问题补充：[/b]", "\n感谢megcker 但是问题还是没有解决啊  期待 ", "\n[b]问题补充：[/b]", "\n6831031068fffd727077026000106a16", "\n这是我使用megcker提供的方法解析出来的前部分 ", "\n[b]问题补充：[/b]", "\ntfqjavaeye 说的这个控制字符没有读取出来的信息是一种思考的方向。但却不是做了((str=in.readLine())!=null)这个判断的原因。当我不用这个判断直接读取以后就转换也还是一样的缺少0", "\n[b]问题补充：[/b]", "\n以上解释出来的用的是[code=\"java\"]DataInputStream dis = new DataInputStream(connection.getInputStream());", "\n            //BufferedReader streamReader = getReader(connection);", "\n            System.out.println(\"服务器接收到客户端的连接请求：\" + String2Hex(dis.readLine()));   [/code]", "\n解析出来的为：：68310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a1668310310689b13727077026000106a16", "\n\n", "我在[url]", "http://www.leftworld.net/online/j2sedoc/javaref/java.io.datainputstream_dsc.htm#readUTF(java.io.DataInput)[/url]这里发现一段话", "\n数据输入流和数据输出流以稍加修订的 UTF-8 格式表示 Unicode 字符串。", "\n。。。。。。", "\n这种格式与“标准的”UTF-8 格式的区别如下：", "\nNull 字符 '\\u0000' 用两个字节而不是一个字节格式编码，所以编码后的字符串永不会包含空字符。", "\n不是到是不是因为他编码后的字符串不包含空字符才会导致 我在解析出来的数据中缺少0 也就是tfqjavaeye说的", "\n[b]问题补充：[/b]", "\n问题已经解决了  dwangel 的说法很正确啊  一直都只盯着流  却忽略了这里 多谢各位了 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你这个计算表达式放在最上面&amp;#xff0c;先计算再输入&amp;#xff0c;肯定是默认的0撒&amp;#xff0c;至于说0.98和0.97的问题&amp;#xff0c;你用格式化字符串也就是.2f是会被默认四舍五入的&amp;#xff0c;你可以先乘以100再除以100&amp;#xff0c;就可以去除多余的尾数&amp;#xff0c;不会造成四舍五入&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言，float类型数据小于1时，用%.2f输出结果是0.00，怎样让输出结果不四舍五入", ["大家好，学习C语言过程中，遇到一个问题，麻烦解答下，谢谢：", "程序如下：", "#include<stdio.h>", "int main(void)", "{", "    float download_speed, file_size, download_time;", "\n", "download_time=file_size*8/download_speed", ";", "\n\nprintf(", "\"Please enter what's the size(MB) of the files and the download speed(MB/s).\\n\"", ")", ";", "\nscanf(", "\"%f%f\"", ",", "&file_size", ",", "&download_speed", ")", ";", "\nprintf(", "\"At %.2f megabits per second, a file of %.2f megabytes downloads in %.2f seconds.\\n\"", ",download_speed,file_size,download_time)", ";", "\n\nreturn ", "0", ";", "\n", "\n", "}", "\n", "这里输入  file_size=2.2136  ;  download_speed=18.12322 ;   ", "\n", "按照这样计算，  download_time=0.977133,   保留2位数 应该是0.98 。 但是 程序运行的结果是 0.00 。如下：", "\n", "\n", "请问 这是由于在输出时自动做了四舍五入吗？   怎样才能让程序输出 0.98 呢？  或者 不四舍五入  直接输出 0.97？", "谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\nQLabel(sign) 问题是在哪里显示&amp;#xff1f;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["qt中如何将函数的结果输出到label中？", ["\n\n", "把print（sign）的结果输出到label或者textbrowser,总之是图形界面即可。"]], "Tag": "程序设计"}
{"Answer": "修改的sql语句没有提交，你先commit一下，然后在试试", "Konwledge_Point": "数据的输出", "Question": ["mybatis执行查询语句查询不到结果，控制台输出sql语句复制到数据库中能查到数据，怎么回事？", ["mybatis执行查询语句查询不到结果，控制台输出sql语句复制到数据库中能查到数据，怎么回事？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;&lt;span class=\"hljs-comment\"&gt;//回形矩阵&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{      &lt;span class=\"hljs-comment\"&gt;//用的办法不巧妙&amp;#xff0c;遇到的bug头铁式修补&amp;#xff0c;不过效果是正确的&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,cnt&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    cin&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; list[&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;]&amp;#61;{};&lt;span class=\"hljs-comment\"&gt;//1&amp;lt;&amp;#61;n&amp;lt;&amp;#61;100,最大行列数为199&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m&amp;#61;n;m&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;m--)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;m&amp;#43;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;gt;&amp;#61;cnt;i--)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;m&amp;#43;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;j&amp;gt;&amp;#61;cnt;j--)\n            {\n                list[i][j]&amp;#61;m;\n            }\n        }\n        cnt&amp;#43;&amp;#43;;\n    }\n    list[n][n]&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n        {\n            cout&amp;lt;&amp;lt;list[i][j]&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n        }\n        cout&amp;lt;&amp;lt;endl;\n    }\n    \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["环形矩阵输入输出问题", ["输入一个矩阵的层数，生成如下矩阵并进行输出。例如：输入3，则输出", "\n", "3 3 3 3 3", "\n", "3 2 2 2 3", "\n", "3 2 1 2 3", "\n", "3 2 2 2 3", "\n", "3 3 3 3 3", "我做的代码输出是反着的", "1 1 1 1 1", "1 2 2 2 1", "1 2 3 2 1", "1 2 2 2 1", "1 1 1 1 1", "请不要用scanf或printf，毕竟我也看不懂"]], "Tag": "程序设计"}
{"Answer": "使用net.sf.json包\r\n\r\n\r\n```\r\n JSONObject object=JSONObject.fromObject(securityResult);\r\n\t\tJSONArray array=JSONArray.fromObject(object.get(\"data\"));\r\n\t\tobject=array.getJSONObject(0);\r\n\t\tString appSecret=(String)object.get(\"appSecret\");\r\n\t\tString time=(String)object.get(\"time\");\r\n\t\tString timeSecret=(String)object.get(\"timeSecret\");\r\n```", "Konwledge_Point": "数据的输出", "Question": ["JAVA中将控制台的JSON格式输出转换成数组", ["在我的JAVA项目中 每次运行后这行代码 System.out.println(securityResult);会输出", "\n{\"code\":\"0\",\"msg\":\"SUCCESS\",\"data\":{\"appSecret\":\"9b\",\"time\":\"20180316110301\",\"timeSecret\":\"8bf54\"}}", "\n我想知道怎么操作securityResult可以把data里面的数据转换成代码中的String appSecret = \"9b\";String time = \"20180316110301\";  String timeSrcret = \"8bf54\""]], "Tag": "程序设计"}
{"Answer": "前面已经取出来了，也就是说取出来的已经不在 generator_ex 里了", "Konwledge_Point": "数据的输出", "Question": ["python 生成器的输出问题", ["generator_ex = (x*x for x in range(10))", "\n\n", "print(next(generator_ex))", "\nprint(next(generator_ex))", "\nprint(next(generator_ex))", "\nprint(next(generator_ex))", "\nprint(next(generator_ex))", "\n\n", "for i in generator_ex:", "\n    print(i)", "\n\n", "在print几次之后，为什么for 循环的时候不是从生成器的第一个数字输出呢？", "\n\n", "反而是接着next的数据输出？"]], "Tag": "程序设计"}
{"Answer": "亲爱的，你想从控制台取数据，你倒是给它啊。自己输入的是不一样颜色字体，完了回车", "Konwledge_Point": "数据的输出", "Question": ["java从控制台读取数据并输出", []], "Tag": "程序设计"}
{"Answer": "```\r\n#include&lt;stdio.h&gt;\r\n#define N 10000\r\nint main()\r\n{\r\n    int k,a[N],b[N],n,t,w,i;\r\n    scanf(\"%d\",&amp;n);\r\n    scanf(\"%d\",&amp;k);\r\n    for(i=0;i&lt;n;i++)\r\n\t\tscanf(\"%d\",&amp;a[i]);\r\n    for (i = 0; i &lt; k % n; i++)\r\n\t\tb[i] = a[i];\r\n\tfor (i = 0; i &lt; n; i++)\r\n\t{\r\n\t\tif (i &lt; n - k % n)\r\n\t\t\ta[i] = a[i + k % n];\r\n\t\telse\r\n\t\t\ta[i] = b[i - n + k % n];\r\n\t}\r\n\tfor(i=0;i&lt;n;i++)\r\n\t\tprintf(\"%d\\n\",a[i]);\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["请问数据移位输出为何不变？", ["题目描述", "\n将一维数组中的元素循环左移 k 个位置", "\n\n", "输入描述", "\n第 1 行是一维数组元素的个数 n (数组大小)", "\n\n", "第 2 行是一个整数 k , 表示移动的位置", "\n\n", "下面 n 行为数组的元素个数", "\n\n", "输出描述", "\n输出 n 行，表示移动后的数字", "\n\n", "#include<stdio.h>\n#define N 10000\nint main ()\n{\n    int k,a[N],b[N],n,t,w,i;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&k);\n    {\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&a[i]);\n    if(i<k)\na[i]=a[i+k];\n if(i==k)\n    a[i]=a[i];\nif(i>k)\na[i]=a[i-k]; \n    for(i=0;i<n;i++)\nprintf(\"%d\\n\",a[i]);\n}\nreturn 0;\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;共有5处问题&amp;#xff0c;见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;malloc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; MAXSIZE 100&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; ElemType int&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;   &lt;span class=\"hljs-comment\"&gt;//表定义&amp;#xff0c;要在函数定义之前  修改&lt;/span&gt;\n{\n    ElemType *elem;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; length;\n}SeqList;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;InitList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(SeqList**L)&lt;/span&gt;  &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n&lt;/span&gt;{\n    (*L)&amp;#61;(SeqList*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(SeqList)); &lt;span class=\"hljs-comment\"&gt;//修改 表指针 L 需初始化&lt;/span&gt;\n    (*L)-&amp;gt;elem&amp;#61;(ElemType *)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(ElemType)*MAXSIZE);\n    (*L)-&amp;gt;length&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    SeqList *L;\n    &lt;span class=\"hljs-built_in\"&gt;InitList&lt;/span&gt;(&amp;amp;L);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;顺序表长度&amp;#xff1a;%d&amp;#34;,&amp;amp;n);//修改 ,需分开写下面两句&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入顺序表长度:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    L-&amp;gt;length&amp;#61;n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;L-&amp;gt;elem[i]);\n        &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;,L-&amp;gt;elem);//修改&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;L-&amp;gt;length;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,L-&amp;gt;elem[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言数据结构 顺序表 输入与输出", ["刚刚学了顺序表，想写写代码，一直显示有错！！求解答！", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<malloc.h>", "\n", "#", "define", " MAXSIZE 100 ", "\n", "#", "define", " ElemType int", "\n", "void", " ", "InitList", "(SeqList *L)", "  ", "//初始化 ", "\n", "{\n    L->elem=(ElemType *)", "malloc", "(", "sizeof", "(ElemType)*MAXSIZE);\n    L->length=", "0", ";\n}\n", "typedef", " ", "struct", " \n    {\n        ElemType *elem;\n        ", "int", " length;\n    }SeqList;\n\n", "int", " ", "main", "()", "\n", "{\n    SeqList *L;\n    ", "InitList", "(&L);\n    ", "int", " i;\n    ", "int", " n;\n    ", "scanf", "(", "\"顺序表长度：%d\"", ",&n);\n    L->length=n;\n    ", "for", "(i=", "0", ";i<n;i++)\n    {\n        ", "scanf", "(", "\"%d\"", ",L->elem);\n    }\n    ", "for", "(i=", "0", ";i<L->length;i++)\n    {\n        ", "printf", "(", "\"%d\"", ",L->elem[i]);\n    }\n    ", "return", " ", "0", ";\n } \n\n", "\n", "总会报错：", "C:\\Users\\asus\\Desktop\\c语言\\顺序表.cpp    [Error] cannot convert 'SeqList**' to 'SeqList*' for argument '1' to 'void InitList(SeqList*)'", "求解答。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/785612152256127.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; secretNumber, gameTrack, guessNumber;\n\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Wlecome to the number guessing game.\\n&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;You have at most 3 chances to guess a secret number from 1 to 10.&amp;#34;&lt;/span&gt; ;\n    &lt;span class=\"hljs-built_in\"&gt;srand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;time&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)); &lt;span class=\"hljs-comment\"&gt;//执行一次就可以了&amp;#xff0c;不需要放在while循环里&lt;/span&gt;\n    \n    secretNumber &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\nEnter a number from 1 to 10:&amp;#34;&lt;/span&gt;;\n    gameTrack &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (gameTrack !&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) {\n        cin &amp;gt;&amp;gt; guessNumber;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (guessNumber &amp;#61;&amp;#61; secretNumber) {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Correct guess. Congratulations!&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (guessNumber &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (guessNumber &amp;lt; secretNumber) &lt;span class=\"hljs-comment\"&gt;//这个if语句不需要了&lt;/span&gt;\n        {\n            gameTrack &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (gameTrack &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Not correct,your guess is too low,try again:&amp;#34;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            gameTrack &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (gameTrack &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Not correct,your guess is too high,try again:&amp;#34;&lt;/span&gt;;\n        }\n    } &lt;span class=\"hljs-comment\"&gt;//while end&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//这个if语句放在这里&amp;#xff0c;否则loose&amp;#43;&amp;#61;1就不执行了&amp;#xff0c;也不需要用else&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (gameTrack &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Not correct.You have reached your third trials. The correct number is &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; secretNumber;\n    }\n\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c++ 输出多一行空白", ["\n", "当猜数字三次失败后 会有多出一行 无用的行数  请问应该修改哪里，。/", "\n", "感谢", "感谢"]], "Tag": "程序设计"}
{"Answer": "http://www.cnblogs.com/bfshm/p/3737549.html?utm_source=tuicool&amp;utm_medium=referral", "Konwledge_Point": "数据的输出", "Question": ["Labyrinth                         ", ["Problem Description", "\n度度熊是一只喜欢探险的熊，一次偶然落进了一个m*n矩阵的迷宫，该迷宫只能从矩阵左上角第一个方格开始走，只有走到右上角的第一个格子才算走出迷宫，每一次只能走一格，且只能向上向下向右走以前没有走过的格子，每一个格子中都有一些金币（或正或负，有可能遇到强盗拦路抢劫，度度熊身上金币可以为负，需要给强盗写欠条），度度熊刚开始时身上金币数为0，问度度熊走出迷宫时候身上最多有多少金币？", "\n\n", "Input", "\n输入的第一行是一个整数T（T < 200），表示共有T组数据。", "\n每组数据的第一行输入两个正整数m，n（m<=100，n<=100）。接下来的m行，每行n个整数，分别代表相应格子中能得到金币的数量，每个整数都大于等于-100且小于等于100。", "\n\n", "Output", "\n对于每组数据，首先需要输出单独一行”Case #?:”，其中问号处应填入当前的数据组数，组数从1开始计算。", "\n每组测试数据输出一行，输出一个整数，代表根据最优的打法，你走到右上角时可以获得的最大金币数目。", "\n\n", "Sample Input", "\n2", "\n3 4", "\n1 -1 1 0", "\n2 -2 4 2", "\n3 5 1 -90", "\n2 2", "\n1 1", "\n1 1", "\n\n", "Sample Output", "\nCase #1:", "\n18", "\nCase #2:", "\n4"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;解法∶从文件中逐行读入&amp;#xff0c;每行找到最大最小输出即可。&lt;br /&gt;代码比较简洁&amp;#xff0c;速度快&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;with &lt;span class=\"hljs-keyword\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;scores.txt&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;:\n    titles &amp;#61; &lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;.readline().&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;()\n    lines &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;() &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt; in &lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;]\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt; in lines:\n        scores &amp;#61; &lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:]))\n        minIndex &amp;#61; scores.&lt;span class=\"hljs-built_in\"&gt;index&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(scores)) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        maxIndex &amp;#61; scores.&lt;span class=\"hljs-built_in\"&gt;index&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(scores)) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;专业:{line[0]} 最高分(&amp;#39;{titles[maxIndex]}&amp;#39;,{line[maxIndex]}) 最低分(&amp;#39;{titles[minIndex]}&amp;#39;,{line[minIndex]})&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["读入文本文件并按格式输出", ["题目:在文本文件scores.txt中保存了一些专业的课程平均分，如下图所示：", "专业    C语言    Java    Python    C#    Javascript", "软件工程     95    96    85    63    91", "计算机科学与技术    75    93    66    85    88", "网络工程     86    76    96    93    67", "\n", "编写一个Python程序，读入文本文件scores.txt中的数据，存放在二维列表中，并输出所有专业的分数；计算每个专业的最高分和最低分，按输出格式要求输出每个专业的名称、最高分、最低分以及对应的课程名(已知没有同分的情况)；输出格式参照下图：", "专业    C语言    Java    Python    C#    Javascript", "软件工程     95    96    85    63    91", "计算机科学与技术    75    93    66    85    88", "网络工程     86    76    96    93    67", "专业:软件工程   最低分('Java',96)  最低分（‘C#’，63）", "专业:计算机科学与技术  最高分(‘Java'，93)  最低分('Python’， 66)", "专业:网络工程   最高分('Python‘，96)   最低分(’Javascript‘，67）"]], "Tag": "程序设计"}
{"Answer": "```\r\n最简单当然是绑定为float类型了。\r\n不过要比较灵活一些，可以帮定为CEdit控件类型\r\n用 m_edit1.SetDlgItemText(你需要设置的任何文本)\r\n比如\r\nfloat f = 1.234; //假设从你设备读取的\r\nCString str;\r\nstr.Format(_T(\"%f\"), f);\r\nm_edit1.SetDlgItemText(str);\r\n```\r\n\r\n----------------------------------------------------------\r\n\r\n不好意思，才看到你的消息，回复晚了。\r\n```\r\nfloat f = 1.234; //假设从你设备读取的\r\nCString str;\r\nstr.Format(_T(\"%f\"), f);\r\nm_edit1.SetDlgItemText(str);\r\n```\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201905/09/1557363618_153328.gif)", "Konwledge_Point": "数据的输出", "Question": ["MFC如何将数据显示在编辑框中？", ["是这样的，我的毕设是用CAN总线知识做的，上位机软件是MFC写的，下位机返回数据帧后，我需要对特定的帧ID的数据帧中前两字节的数据（16进制表示，比如 20  ff）先转换成十进制，然后计算得到一个电压值，放进编辑框中，实时显示，根据传回来数据帧前两字节的变化不断变化，这要如何实现？另外我给编辑框关联变量时，变量类型该选什么，CString还是浮点型？（电压值会出现小数），求大佬详细解答。。我对MFC没啥了解，C也忘记很多了，希望能对上述问题详细点的解答，谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; T &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;T);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; T; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* num &amp;#61; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;) * n);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num[j]);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j--)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, num[j]);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言输入数组并逆序输出", ["输入：", "多组测试数据。第一行输入一个整数T表示测试数据组数 每组首先输入1个整数n,然后输入n个整数(不大于20）", "输出：", "对于每组测试数据按照输入相反的顺序输出n个数据", "\n", "没给初始值怎么定义数组？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的输入特征之间&amp;#xff0c;存在明显的量级差别&amp;#xff0c;最好进行归一化&amp;#xff1b;输出也是&amp;#xff0c;直接使用mse作为loss&amp;#xff0c;两个输出的比重会差很多&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["基于python的ANN多输出回归问题，应该如何处理输入数据和选择损失函数呢？", ["基于python的ANN多输出回归问题，应该如何处理输入数据和选择损失函数呢？", "具体的数据类型如下：输入4个特征，输出两个回归值。", "单输出回归问题，我是这样写的：", "import和数据导入的部分省略了", "X = data.loc[:,'X1':'X4']", "y = data.loc[:,'y1']", "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 1)", "model = MLPRegressor(solver = 'lbfgs',hidden_layer_sizes = (6,7), random_state = 123, max_iter = 10000)", "model.fit(X_train_s,y_train)", "可是多输出回归的时候，我把输入训练的数据这样写：", "X = data.loc[:,'X1':'X4']", "y = data.loc[:,'y1':'y2']", "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 1)", "model = MLPRegressor(solver = 'lbfgs',hidden_layer_sizes = (6,7), random_state = 123, max_iter = 10000)", "model.fit(X_train_s,y_train)", "虽然能够训练，但损失函数一直不降（基于keras的也试了，也是不行。损失函数是mse）", "请问进行神经网络的训练时，多输出该怎么处理数据，损失函数该怎么写呢，keras或skilearn中有现成的吗？还是需要自己编写呢？", "谢谢！"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include \"stdio.h\"\r\n\r\nint isp(int n)\r\n{\r\n\tif (n == 2) return 1;\r\n\tif (n &lt; 2) return 0;\r\n\tfor (int i = 2; i &lt; n / 2; i++)\r\n\t\tif (n % i == 0) return 0;\r\n\treturn 1;\r\n}\r\n\r\nint main()\r\n{\r\n\tint m;\r\n\tint n;\r\n\tscanf(\"%d\", &amp;m);\r\n\tscanf(\"%d\", &amp;n);\r\n\tint x = 0;\r\n\tfor (int i = m; i &lt;= n; i++)\r\n\t{\r\n\t\tif (isp(i))\r\n\t\t{\r\n\t\t\tprintf(\"%d\\t\", i);\r\n\t\t\tx++;\r\n\t\t\tif (x % 10 == 0) \r\n\t\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201811/06/1541515093_830512.gif)", "Konwledge_Point": "数据的输出", "Question": ["从键盘输入正整数m和n，编写程序求m～n之间的全部素数，并输出素数的个数，要求每行输出10个数据", ["就是用循环结构写？？？》》》》》》》》，。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; &lt;span class=\"hljs-comment\"&gt;// 请求的参数&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;var&lt;/span&gt; ids &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[11, 22, 33, 44, 55]&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//  post请求&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;var&lt;/span&gt; promises &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\nids&lt;span class=\"hljs-selector-class\"&gt;.map&lt;/span&gt;(&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &amp;#61;&amp;gt; {\n  promises&lt;span class=\"hljs-selector-class\"&gt;.push&lt;/span&gt;(\n    $&lt;span class=\"hljs-selector-class\"&gt;.post&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;a.php&amp;#39;&lt;/span&gt;, {\n      id: &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;\n    })\n  )\n})\npromises&lt;span class=\"hljs-selector-class\"&gt;.all&lt;/span&gt;(promises)&lt;span class=\"hljs-selector-class\"&gt;.then&lt;/span&gt;(res &amp;#61;&amp;gt; {\n  console&lt;span class=\"hljs-selector-class\"&gt;.log&lt;/span&gt;(res)\n})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;返回的res就是你5次请求返回的结果组成的数组&amp;#xff0c;排序和参数排序一致&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["jQuery对同一个地址发送多次请求，每次请求的参数不同，如何让返回的数据依次输出，而不是同时输出？", ["\n    ", "// 请求的参数", "\n    ", "var", " ids = [", "11", ", ", "22", ", ", "33", ", ", "44", ", ", "55", "];\n\n    ", "//  post请求", "\n    $.post(", "\"a.php\"", ", {\n        ", "id", ": ", "11", "\n    }, ", "function", "(", "result", ") {\n        $(", "\"span\"", ").html(result);\n    });\n", "\n", "或者说是 每个参数依次发送请求，依次输出返回数据。"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;stdio.h&gt;\r\nint main()\r\n{\r\nint n = 0;\r\n//scanf(\"%d\", &amp;n);\r\nn = 5;\r\nfor (int i = 0; i &lt;= 2*n; i++)\r\n{\r\nfor (int j = 0; j &lt;= 2*n; j++)\r\n{\r\nif (i == j || i + j == 2*n) {printf(\"1\\t\"); continue;}\r\nif (j &gt; i &amp;&amp; j &lt; 2* n - i &amp;&amp; i &lt; n) { printf(\"2\\t\"); continue; }\r\nif (j &lt; i &amp;&amp; j &gt; 2* n - i &amp;&amp; i &gt; n) { printf(\"3\\t\"); continue; }\r\nif (j &lt; i &amp;&amp; j &lt; 2* n - i)  { printf(\"4\\t\"); continue; }\r\nif (j &gt; i &amp;&amp; j &gt; 2* n - i)   { printf(\"5\\t\"); continue; }\r\n printf(\"-\\t\");\r\n}\r\nprintf(\"\\n\");\r\n}\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["C语言二维数组输出矩阵", ["问题描述 :", "\n ", "\n从键盘上输入一个整数N，按以下规律输出一个(2N+1)*(2N+1)的矩阵：", "\n对角线的值为1，", "\n上半三角区域值为2，", "\n下半三角区域值为3，", "\n左半三角区域的值为4，", "\n右半三角区域的值为5。", "\n\n", "输入说明 :", "\n 你的程序需要从标准输入设备（通常为键盘）中读入多组测试数据。每组测试数据数据占一行，大于零，小于等于8。", "\n输出说明 :", "\n 对每组测试数据，你的程序需要向标准输出文件（通常为启动该程序的终端）依次输出符合要求的矩阵，每行数据与数据之间以空格分隔，在行首和行尾不要输出多余的空格。在所有数据前后，以及两组数据之间不要输出多余的空行。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;t[j] &amp;#61; s / 5;&lt;/p&gt;\n\n&lt;p&gt;这个的j总是等于3&amp;#xff0c;因为在上面循环出来后j&amp;#61;3&amp;#xff0c;t[0]&amp;#xff0c;t[1]&amp;#xff0c;t[2]这些都没有赋值&amp;#xff0c;所以就可能输出一些别的数据&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么我的输出值为-858993460", ["\n\n", "请问为什么输出值为-858993460"]], "Tag": "程序设计"}
{"Answer": "已经很明显告诉你Excel中的长度大于了数据库中表字段的长度了。\r\n处理方法:\r\n在Excel里面做一个公式列用来判断“产品种类”这列大于数据库字段最大长度的公式。\r\n例如：产品种类为第G列，数据库对应这列的最大长度为200，写一个公式 Len($G1)&gt;200，这样看这一行有没有为True的项", "Konwledge_Point": "数据的输出", "Question": ["从Excel表格导入Mssql 2008，字段长度问题", ["将表格的数据导入到数据库临时表时，出现了以下错误信息：", "\n\n", "\n", "正在执行 (错误)\n消息\n错误 0xc020901c: 数据流任务 1: 输出“Excel 源输出”(9) 上的 输出列“产品种类”(30) 出错。返回的列状态是:“文本被截断，或者一个或多个字符在目标代码页中没有匹配项。”。\n(SQL Server 导入和导出向导)", "\n", "错误 0xc020902a: 数据流任务 1: “输出列“产品种类”(30)”由于发生截断而失败，而且针对“输出列“产品种类”(30)”的截断行处理设置指定截断时出错。在指定组件的指定对象上出现截断错误。", "\n (SQL Server 导入和导出向导)", "\n\n", "错误 0xc0047038: 数据流任务 1: SSIS 错误代码 DTS_E_PRIMEOUTPUTFAILED。组件“源 - Customer0815$”(1) 的 PrimeOutput 方法返回了错误代码 0xC020902A。管道引擎调用 PrimeOutput() 时该组件返回了一个失败代码。虽然该失败代码只与该组件有关，但这个错误是致命的，管道已停止执行。可能在此之前已经发出错误消息，提供了有关失败的详细信息。", "\n (SQL Server 导入和导出向导)", "\n\n", "求解决~~"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是用IDEA的吧&amp;#xff0c;在实体类中&amp;#xff0c;重写toString方法&amp;#xff0c;就可以输出内容了&amp;#xff0c;写toString的时候&amp;#xff0c;就会给你来个代码提示&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么我输出的是地址啊？要这样才能输出内容啊？", ["package cp;", "\n", "import java.util.ArrayList;", "import java.util.Iterator;", "\n", "public class Emmo {", "    public static void main(String[] args){", "        HelloWorld he=new HelloWorld(\"https:", "www.educoder.net\"", ");", "        HelloWorld h=new HelloWorld(20.432);", "        ArrayList", " a=he.getList();", "\n", "    a.", "add", "(he);\n    a.", "add", "(h);\n    //Iterator<HelloWorld> it1=a.iterator();\n    //", "System", ".", "out", ".println(it1.next());\n    ", "System", ".", "out", ".println(a.", "get", "(", "0", "));\n\n    }\n", "\n", "}", "\n", "package cp;", "import java.util.ArrayList;", "\n", "public class HelloWorld {", "     //public ArrayList", " a;", "\n", " ", "String", " ", "str", ";\n ", "double", " du;\n\n@", "SuppressWarnings", "(", "\"unchecked\"", ") \n", "public", " ", "HelloWorld", "() {}\n", "public", " ", "HelloWorld", "(", "double", " du) {\n    ", "this", ".", "du", "=du;\n}\n", "public", " ", "HelloWorld", "(", "String", " ", "str", ") {\n    ", "this", ".", "str", "=", "str", ";\n    \n}\n\n\n", "public", " ", "ArrayList", " ", "getList", "() {\n\n    ", "ArrayList", "<", "Object", "> a=", "new ", "ArrayList", "<>();\n    ", "return", " a;\n    \n    \n    \n\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n    int g,s,b;//g&amp;#xff1a;个位&amp;#xff0c;s&amp;#xff1a;十位&amp;#xff0c;b&amp;#xff1a;百位\n    for(int i&amp;#61;100;i&amp;lt;&amp;#61;999;i&amp;#43;&amp;#43;)\n    {\n        b&amp;#61;i/100;\n        s&amp;#61;i%100/10;\n        g&amp;#61;i%10;\n        if(g*g*g&amp;#43;s*s*s&amp;#43;b*b*b&amp;#61;&amp;#61;i){\n            printf(&amp;#34;%d %d %d &amp;#61; %d\\n&amp;#34;,b,s,g,i);\n        }\n    }\n    return 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言：由小到大输出所有的水仙花数", ["水仙花数是指：  ", "\n一个三位数，其各位数字立方和等于该数本身。  ", "\n如153就是水仙花数：", "\n\n", "\n\n", "由小到大输出所有的水仙花数。每行输出一个。输出完成后，还要输出回车换行符。", "\n\n", "输出数据格式：", "  ", "\n1 5 3 = 153"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以参考这篇文章&amp;#xff0c;希望对你有帮助&amp;#xff1a;&lt;a href=\"https://www.cnblogs.com/zhangxiaoyue/p/11668662.html\"&gt;第2次作业-titanic数据集练习 - 张晓悦 - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["泰坦尼克号生存数据分析", ["对数据进行如下操作:", "\n\n", "1.导入必要的库和csv格式的数据文件(titanic数据)", "\n\n", "2按性别处理数据中年龄的缺失值(用合适数值填充)", "\n\n", "3通过查看极值和分箱，探索数据中有没有异常值，有异常值则进行处理(用合适数值填充)", "\n\n", "4.练习设置分层索引并进行拆堆和堆叠操作", "\n\n", "5.按照乘客等级分组，聚合输出各乘客等级的乘客的平均年龄，查看各乘客等级的乘客的生存率", "\n\n", "6.按照性别分组，聚合输出各性别的乘客的平均生存率", "\n\n", "7.按照乘客等级和性别分组，聚合输出交叉维度的平均生存率，中位数", "\n\n", "8.按照客舱进行分组，输出每组5个年龄最小的乘客", "\n\n", "9.分别输出以上5-7的bar图，根据实际情况决定水平或堆叠，需要包括title、legend、grid、xtick ytick等元素，需要有图和子图，以及子图之间的对比关系，体现共享x或y轴。", "\n\n", "10.选择3-5个pandas的函数或方法，练习其他操作的内容"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看下是这个意思吗&amp;#xff0c; 纯手撸 可能有报错&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n#include &amp;lt;stdio.h&amp;gt;\n\nvoid swap(int * a, int * b)\n{  \n  int tmp &amp;#61; *a;\n  *a &amp;#61; *b;\n  *b &amp;#61; tmp;\n}\n\nvoid sort(int num[]){\n    if (num[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;gt; num[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]){\n        swap(&amp;amp;num[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], &amp;amp;num[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\n  }\n  if (num[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;gt; num[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]){\n       swap(&amp;amp;num[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], &amp;amp;num[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n  }\n  if (num[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;gt; num[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]){\n       swap(&amp;amp;num[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], &amp;amp;num[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n  }\n}\n\nint main(){\n  int arr[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n  int n;\n  scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入组数:%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n  for(int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; &amp;#43;&amp;#43; i){\n      scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d&amp;#34;&lt;/span&gt;, &amp;amp;arr[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], &amp;amp;arr[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], &amp;amp;arr[i][&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n      sort(arr[i]);\n  }\n  for(int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n;&amp;#43;&amp;#43;i)\n      printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d\\n&amp;#34;&lt;/span&gt;, arr[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], arr[i][&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], arr[i][&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n  return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言题一道，使用指针进行数字排序，想求一个思路或者一个解答方法", ["题目描述", "给你三个整数，请你从小到大输出。", "\n", "输入描述:", "若干组数据，每组数据占一行，每组数据为三个整数用空格分隔。", "\n", "输出描述:", "对每组数据按要求从小到大重新输出，输出的三个整数之间隔一个空格，每组数据单独占一行。", "\n", "要求", "请发挥你的所学，使用指针编程。", "\n", "输入样例", "6 1 5", "8 5 2", "输出样例", "1 5 6", "2 5 8"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这不是UTF-8的问题&amp;#xff0c;而是Java的DataOutputStream实现writeUTF与readUTF时使用的是Java修改过的UTF-8变体&amp;#xff0c;而不是标准的UF-8&amp;#xff0c;所以如果你使用DataOutputStream.writeUTF写出的文件&amp;#xff0c;只能被同Java程序的DataOutputStream.readUTF读取&amp;#xff0c;如果是跨语言需要读取需要文件那么必须编写一些代码才能正确的读取字符串&amp;#xff0c;该内容在Java编程思想书I/O章节中提到过(第18章544页)&amp;#xff0c;有兴趣的可以阅读一下&amp;#xff0c;以下是贴出的主要内容&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/065415421036153.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["使用IO输出流写入数据出现乱码", ["代码1：写入数据12时出现乱码FF", "\n", "\n", "文件数据1：", "\n", "代码2：写入数据出现nul乱码", "\n", "文件数据2：", "代码3：", "\n", "文件数据3：写入数据出现多个乱码", "\n", "尝试过的方法：", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div id=\"tg\" style=\"display:none;\"&gt;\r\n&lt;taglib bean=\"...\"&gt;&lt;/taglib&gt;\r\n&lt;div&gt;\r\n\r\nvar content = $(\"#tg\").text();", "Konwledge_Point": "数据的输出", "Question": ["关于自定义标签向页面输出JSON数据的问题", ["我写了一个自定义标签，这个标签主要是向页面写入JSON数据流，那我怎么利用JQuery获取到这个JSON数据了。？", "\n谢谢各位老大解答一下。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;逻辑有问题&amp;#xff0c;python直接获取所有评论中的用户&amp;#xff0c;在模板中又每条评论遍历users&amp;#xff0c;当然是重复出现了&amp;#xff0c;应该给comments增加存储用户信息的字段&amp;#xff0c;在下面遍历的时候通过for遍历时赋值给comment&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/464083519746159.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; comment_list &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; comments:\n    comment_list&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;]&lt;/span&gt;&amp;#61;userinfo&lt;span class=\"hljs-selector-class\"&gt;.objects&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.filter&lt;/span&gt;(id&amp;#61;comment_list.userid)&lt;span class=\"hljs-selector-class\"&gt;.values&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;nickname&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;discription&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;headfirst_img&amp;#39;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后模板中直接从comment的user属性中读取用户信息&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python，django模板解析view视图传过来的字典，重复数据怎么解决？", ["python，django模板解析view视图传过来的字典，重复数据怎么解决？", "\n", "视图层", "\n", "\n", "控制台输出结果", "\n", "\n", "模板层", "\n", "\n", "最终展示结果", "\n", "\n", "运行结果是重复数据，这个怎么解决呀？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;程序没问题&amp;#xff0c;就是列表取值位置可能不对&amp;#xff0c;题目说了前面还有日期和时间&amp;#xff0c;所以光照这个数值的位置可能在ls[4]而不是ls[2]&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Python传感器日志光照统计", ["\n", "怎么做啊，用Python", "这样做有哪里不对吗，大家康康，谢谢大家"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$query = mysql_query(\"SELECT DISTINCT `hobby` FROM `hobbies` WHERE `person_id` = '67'\");\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;DISTINCT&lt;/code&gt; will not show duplicates for &lt;code&gt;hobby&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://dev.mysql.com/doc/refman/5.0/en/distinct-optimization.html\" rel=\"noreferrer\"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["如果在PHP中存在重复项时，如何只显示一次MySQL数据库记录？", ["\n\n", "Suppose my db looks like this:", "\n\n", "id | person_id | hobby       | time\n-----------------------------------\n1  | 67        | golf        | mon\n2  | 33        | reading     | tues\n3  | 67        | baseball    | fri\n4  | 67        | golf        | sun\n", "\n\n", "I want to display a list of all the hobbies of person with id 67 on a page.", "\n\n", "If I do this:", "\n\n", "$query = mysql_query(\"SELECT * FROM hobbies WHERE person_id = '67'\");\n\nwhile ($row = mysql_fetch_assoc($query)) {\n\n   echo $row['hobby'];\n\n}\n", "\n\n", "I wil get:", "\n\n", "golf\nbaseball\ngolf\n", "\n\n", "I want duplicate hobbies entered by the same person id to show only once, so it will show:", "\n\n", "golf\nbaseball\n", "\n\n", "And by duplicate I mean however many redundant times the same hobby by the same person is entered in a database (as long as it's more than once it should shown only once).", "\n\n", "How can this be done?", "\n    "]], "Tag": "程序设计"}
{"Answer": "select replace(WMSYS.WM_CONCAT(t.name|| ' ' ||t.pid||' '),',','') as value_s from test.tbl_test t;", "Konwledge_Point": "数据的输出", "Question": ["sql 同一个表中如何把两条数据合并成一条显示，并显示两条数据的全部内容", ["数据库是 sqlserver2008的环境。  是一个列变行的问题  ，请大师帮忙啊。", "\n比如 table表中", "\n字段： ", "\nid   name   bianhao  address shijian", "\n1    张三   001      北京    2013-12-1", "\n2    李四   001      北京    2013-12-1", "\n\n", "最后显示的内容为：", "\n字段： ", "\nname1  name2  bianhao   address   shijian", "\n张三   李四   001       北京      2013-12-1   ", "\n\n", "合并条件为： bianhao和address相同的数据。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的结构体对象有一个数组就行了,输出的时候不用加取地址符&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/302638347646186.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;conio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;pragma&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;warning&lt;/span&gt;(disable : 4996)&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt;\n{\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; score;\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt; boys[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\nFILE* fp;\nfp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fopen&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;text.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;wb&amp;#43;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不能打开该文件。\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;getch&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学生的相关数据&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; i&amp;#43;&amp;#43;)\n{\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %d %d %f&amp;#34;&lt;/span&gt;, boys[i].name, &amp;amp;boys[i].num, &amp;amp;boys[i].age,&amp;amp; boys[i].score);\n}\n&lt;span class=\"hljs-built_in\"&gt;fwrite&lt;/span&gt;(boys, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Student), &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, fp);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;ferror&lt;/span&gt;(fp))\n{\n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;读取出错&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;读取成功&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-built_in\"&gt;fseek&lt;/span&gt;(fp, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Student), SEEK_SET);\n\n&lt;span class=\"hljs-built_in\"&gt;fread&lt;/span&gt;(boys, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; Student),&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, fp);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; i&amp;#43;&amp;#43;)\n{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %d %d %f\\n&amp;#34;&lt;/span&gt;, boys[i].name, boys[i].num, boys[i].age, boys[i].score);\n\n}\n\n&lt;span class=\"hljs-built_in\"&gt;fclose&lt;/span&gt;(fp);\n\n\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言的问题，写入文件的内容变成乱码了，输出的也是乱码", ["问题遇到的现象和发生背景", "\n", "正在学c语言，改了一下网课的代码，发现输入的和输出的全是乱码", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include<stdio.h>", "#include<conio.h>", "#include<stdlib.h>", "#pragma warning(disable : 4996)", "\n", "struct Student", "{", "    char name[20];", "    int num;", "    int age;", "    float score;", "};", "\n", "int main(void)", "{", "    struct Student boys[3];", "    struct Student boy;", "    struct Student* pBoys;", "    FILE* fp;", "\n", "pBoys = boys;\nfp = ", "fopen", "(", "\"text.txt\"", ", ", "\"wb+\"", ");\n", "if", " (fp == ", "NULL", ")\n{\n    ", "printf", "(", "\"不能打开该文件。\\n\"", ");\n    ", "getch", "();\n    ", "exit", "(", "0", ");\n}\n", "printf", "(", "\"请输入学生的相关数据：\\n\"", ");\n\n", "for", " (", "size_t", " i = ", "0", "; i < ", "3", "; i++)\n{\n    ", "scanf", "(", "\"%s %d %d %f\"", ", pBoys->name, &pBoys->num, &pBoys->age, &pBoys->score);\n    pBoys++;\n}\n", "fwrite", "(boys, ", "sizeof", "(", "struct", " Student), ", "3", ", fp);\n", "if", " (", "ferror", "(fp))\n{\n    ", "puts", "(", "\"读取出错\"", ");\n}\n", "else", "\n{\n    ", "puts", "(", "\"读取成功\"", ");\n}\n", "fseek", "(fp, ", "sizeof", "(", "struct", " Student), SEEK_SET);\n\n", "fread", "(boys, ", "sizeof", "(", "struct", " Student),", "3", ", fp);\n", "for", " (", "size_t", " i = ", "0", "; i < ", "3", "; i++)\n{\n    ", "printf", "(", "\"%s %d %d %f\\n\"", ", pBoys->name, &pBoys->num, &pBoys->age, &pBoys->score);\n    pBoys++;\n}\n\n", "fclose", "(fp);\n\n\n", "return", " ", "0", ";\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "请输入学生的相关数据：", "a 10 10 10", "b 10 10 10", "c 10 10 10", "读取成功", "烫烫;8z< 15726888 15726892 0.000000", "仞8?橓?15726920 15726924 0.000000", " 15726952 15726956 0.000000", "\n", "G:\\C++练习\\结构体\\文件\\Debug\\文件示例函数fseek.exe (进程 15520)已退出，代码为 0。", "按任意键关闭此窗口. . .", "\n", "我的解答思路和尝试过的方法", "\n", "试过fprint和fscanf代码，也是了把fseek换成rewind（fp），都不行，诊断之后，发现fwrite之后，文档里全变成了乱码", "\n", "我想要达到的结果", "\n", "本来是想逐条输出结构体内容，但是怎么改都不行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;-1的原码是 1000 0000 0000 0001 计算机中存放数据用他的补码数表示也就是 1111 1111 1111 1111&amp;#xff0c;转换为无符号数是就是直接将他变成十进制的整数就是65535&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["若int类型数据占两个字节则下列语句输出为", ["int k=-1;printf(\"%u\",k)为啥输出的是65535"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, n&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, k;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, k &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; k &amp;#43;&amp;#61; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;), j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(j &amp;#61;&amp;#61; i ? &lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt; : &lt;span class=\"hljs-string\"&gt;&amp;#34;%-6d&amp;#34;&lt;/span&gt;, k);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["输入一个正整数，输出一个按以下规律变化的n行的直角三角形，每一行数据中采用6个域宽左对齐的方式显示，每行的最后一个数据直接输出。", ["1", "2  4", "3  6  9", "输入格式:输入一个正整数", "输出格式:输出按规律变化的图形，每一行采用6个域宽左对齐的方式显示，每行的最后一个数据直接输出。", "我的答案如下，但PTA平台上显示格式错误", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Store the string into a variable and use &lt;code&gt;explode()&lt;/code&gt; function to make an array of items. Example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$string = 'item1, item2, item3';\n\n$arrayOfItems = explode(',', $string);\n\nforeach($arrayOfItems as $item) {\n   echo '&amp;lt;button&amp;gt;'.$item.'&amp;lt;/button&amp;gt;';\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["php代码输出用逗号分隔的多个数据", ["\n\n", "I'm working on a project to store information, i need to save datas in my database using a multiple select option.\nafter saving to database it will store like this ", "Item1,item2,item3", " separating with comers.\nNow i need to echo it out from database so it will display like this", "\n\n", "item1", "\n\n", "item2", "\n\n", "item3", "\n\n", "i don't want it to display the way it is in my database ", "Item1,item2,item3", "\n\n", "Here is more explanatory image", "\n\n", "Here is my multiple select image sample\n", "\n\n", "Here is how i want to output to be like", "\n\n", "\n\n", "Please i don't have any sample code because i don't know how to start writing this and am very new in php i also don't know what to search online but i know you can help me.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如下建议&amp;#xff1a;&lt;br /&gt;1.尝试在关闭的else里面  添加  disconnect(myserial,&amp;amp;QSerialPort::readyRead,this,&amp;amp;POCTdraw::AnalyzeData);&lt;br /&gt;2.打开后清空串口发送接收缓存区&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["QT串口UI，再次打开串口会存在数据接收不连续/UI无响应等问题。", ["写了一个QT串口UI用于接收下位机采集的数据，使用过程，关闭串口再打开存在数据接收异常的问题，且UI会无响应。", "希望能提供解决方式，请给我留言，3Q！", "\n", "第一次打开串口用于接收数据正常。", "\n", "\n", "关闭串口后再次打开会产生数据接收不连续以及UI界面无响应的现象。", "\n", "\n", "第一部分为数据处理", "void POCTdraw::AnalyzeData()", "{", "\n", "QByteArray mytemp ", "=", " myserial->readAll()", ";", "\n", "\n", "//    QByteArray mylight = QByteArray::fromHex(\"mytemp\");", "\n", "//", "缓存数据输出检测\n", "\n", "//    qDebug()<<\"mytemp:\"<<mytemp.toHex().mid(5,8);", "\n", "//将缓存数据转换格式", "\n", "//转为十六进制", "\n", "bool", " ok;\nQString light = mytemp.", "to", "Hex()", ".mid(", "5", ",", "8", ");\n", "\n", "//    QString mylight;", "    ulong mylight_1 = light.toULongLong(&ok,16);", "\n", "//", "转为", "10", "进制后进行检测\n", "\n", "//    qDebug()<<\"mylight\"<<mylight_1;", "\n", "mylight", " = ", "0", ".", "001", "*", "0", ".", "0625", "*mylight_1;\n", "\n", "//    QVector::iterator iter;", "//    for(iter = LightArr.begin();iter!=LightArr.end();iter++)", "//    {", "//        qDebug()<<*iter;", "//    }", "\n", "qDebug()<<", "\"mylight\"", "<<mylight", ";", "\n", "\n", "//    QString textlight;", "    textlight = QString::number(mylight,'f',5);", "\n", "LightArr.append(textlight);\n\n", "//", "将串口发送过来的数据在（实时荧光强度）进行显示\n", "\n", "//    ui->lineEdit->setText(mytemp);", "//    float dataI1 = mytemp.toFloat(); //将字符串转换成float类型进行数据处理", "\n", "ui->lineEdit->set", "Text(", "textlight", ")", ";\n", "float", " dataI1 = textlight.", "to", "Float()", "; ", "//将字符串转换成float类型进行数据处理", "\n\n\n", "//获取系统时间", "\nmycurrenttime = QDateTime::current", "DateTime()", ";\ndouble xzb = mystarttime.msecs", "To(", "mycurrenttime", ")", "/", "1000.0", "; ", "//获取横坐标，相对时间从0开始", "\n\n", "//将转换好的数据发给坐标系显示", "\n", "\n", "//    ui->POCTdraw_plot->graph(0)->addData(xzb,dataI1);//添加数据1到曲线1", "    ui->widget_4->graph(0)->addData(xzb,dataI1);", "\n", "//设定横坐标显示范围", "\n", "if", "(xzb>", "50", ")\n{\n    ", "ui", "->", "widget_4", "->", "xAxis", "->", "setRange((double)qRound(xzb-", "50", "),xzb);\n}\n", "else", " ui->", "widget_4", "->", "xAxis", "->", "setRange(", "0", ",", "50", "); ", "//设定x轴范围", "\n", "ui", "->", "widget_4", "->", "replot(); ", "//每次画完曲线更新显示", "\n", "\n", "}", "\n", "第二部分为打开按钮的相关内容", "void POCTdraw::on_b_start_clicked()", "{", "    if(serial_flag)", "    {", "        ui->comboBox_2->setDisabled(true);//禁止修改串口", "\n", "    ", "//设置串口号", "\n    myserial->setPortName(ui->comboBox_2->currentText());\n\n    ", "//设置波特率", "\n    ", "//serial->setBaudRate(ui->BaudBox->currentText().toInt());", "\n    ", "//myserial->setBaudRate(QSerialPort::Baud115200);", "\n    myserial->setBaudRate(ui->comboBox->currentText().toInt());\n\n    ", "//设置数据位数", "\n    myserial->setDataBits(QSerialPort::Data8);\n\n    ", "//设置奇偶校验", "\n    myserial->setParity(QSerialPort::NoParity);\n\n    ", "//设置停止位", "\n    myserial->setStopBits(QSerialPort::OneStop);\n\n    ", "//非流控制", "\n    myserial->setFlowControl(QSerialPort::NoFlowControl);\n\n    ", "if", "(myserial->open(QIODevice::ReadWrite)) ", "//输入和输出的基类", "\n    {\n        connect(myserial,&QSerialPort::readyRead,this,&POCTdraw::AnalyzeData);\n        mystarttime = QDateTime::currentDateTime(); ", "//图像横坐标初始值参考点，读取初始时间", "\n        qDebug()<<", "\"串口打开成功\"", ";\n    }\n    ", "else", "\n    {\n        qDebug()<<", "\"串口打开失败\"", ";\n        ", "//QMessageBox::warning(this,tr(\"waring\"),tr(\"串口打开失败\"),QMessageBox::close);", "\n    }\n    ui->b_start->setText(", "\"关闭串口\"", ");\n\n    ", "//串口标志位置失效", "\n    serial_flag = ", "false", ";\n\n}\n", "else", "\n{\n    ui->comboBox->setEnabled(", "true", ");\n    ui->comboBox_2->setEnabled(", "true", ");\n    myserial->close();\n    ui->b_start->setText(", "\"打开串口\"", ");\n    serial_flag = ", "true", ";", "//串口标志位置工作;", "\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "select distinct name from table1 order by name ASC", "Konwledge_Point": "数据的输出", "Question": ["php 输出数据库表里的不重复字段", ["比如这个表", "\n表名:table1:", "\nid   name  mark", "\n1       aa       1", "\n2       bb      1", "\n3       aa       1", "\n4       cc       2", "\n\n", "<?php\n$sqlk = PagingSql(\"table1\",\" where mark =1 order by name ASC, id desc\",$page,150,\"aaa.php?\");\n    $rsk = mysql_query($sqlk[sql]);\n    while($rstk = mysql_fetch_array($rsk))\n    {?>     \n<a href=\"aa-<?php echo $rstk[id] ?>.php\"><?php echo $rstk[name] ?></a>\n <?php  }   ?>\n\n", "\n\n", "这样输出的是 aa  bb  aa;", "\n我需要的是去掉重复的aa;只输出aa bb:", "\n\n", "解决了：", "\n\n", "<?php\n$query = \"select distinct name from table1 where mark =1  order by name ASC\";\nmysql_query(\"SET name GBK\");\n$result = mysql_query($query);\nwhile($row = mysql_fetch_array($result)){   ?>\n<a href=\"aa-<?php echo $row[id];?>.php><?php echo $row[gj];?></a>\n<?php } ?>\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;%-9d&amp;#xff1a;表示以十进制输出&amp;#xff0c;左对齐&amp;#xff0c;宽度最小为9个字符。&lt;br /&gt;%9d&amp;#xff1a;表示以十进制输出&amp;#xff0c;右对齐&amp;#xff0c;宽度最小为9个字符。&lt;br /&gt;%&amp;#43;d&amp;#xff1a;表示以十进制输出&amp;#xff0c;用于整数或者小数&amp;#xff0c;输出符号&amp;#xff08;正负号&amp;#xff09;&lt;br /&gt;验证一下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,b&amp;#61;&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-9d\\n&amp;#34;&lt;/span&gt;,a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%9d\\n&amp;#34;&lt;/span&gt;,a);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%&amp;#43;d,%&amp;#43;d\\n&amp;#34;&lt;/span&gt;,a,b);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/325257943436193.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言中左对齐右对齐，数据前带正负号", ["c语言中左对齐右对齐，和输出数据带正负号的代码怎么写啊"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我假设你做的是ecu&amp;#xff0c;那么角速度、速度、方向盘转角这些自然是ecu从陀螺仪、加速度计、轮上速度传感器、方向盘编码器读取&amp;#xff0c;然后通过can总线发给毫米波雷达。而确定接收的问题要看你的毫米波雷达带不带确认回复&amp;#xff0c;这个是毫米波雷达里的固件决定的。或者你可以直接不确定毫米波雷达是否接收&amp;#xff0c;直接默认毫米波雷达接收到了&amp;#xff0c;单纯的给毫米波雷达传入角速度、速度、方向盘转角&amp;#xff0c;然后读出毫米波雷达的返回值就行了。反正你的读取频率比较高&amp;#xff0c;哪怕毫米波雷达有一个两个数据没有接收到也没什么大问题。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["can数据解析和毫米波雷达数据采集问题", ["第一次发帖求助，实在是找不到人帮助了，来个好心人给我科普一下吧。", "\n\n", "背景是这样的：", "\n\n", "   我的项目是一个汽车数据采集系统。", "\n\n", "   要采集毫米波雷达的数据。", "\n\n", "   但是我看说明书，说毫米波雷达需要接收can的消息，包括角速度、速度、方向盘转角等。", "\n\n", "    我想知道作为希望采集毫米波雷达数据的我来说，需要关心这些角速度、速度参数从哪个节点而来吗？我如何判定这些参数是否被毫米波雷达正确接收？如何做到正确接收？", "\n\n", "     我还有很多问题，求指导，最好能私聊一对一。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一个是值传递一个是地址传递&lt;br /&gt;值传递函数内修改不会影响函数外&lt;br /&gt;地址传递是直接访问变量在内存中的地址并进行修改,可以无视作用于直接作用于内存中,所以会产生修改效果&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["void类型，输出的时候怎么输出", ["\n", "这两个类型，为什么一个在fun函数交换值了，一个没有交换值，搞不懂了。"]], "Tag": "程序设计"}
{"Answer": "你好。如果你希望迭代userinfos列表的同时输出Employee 的字段的话，就必须在Userinfo 实体中定义字段 private Employee  employee;然后构造set和get方法。在获取数据的时候把通过emplId得到的Employee 信息 set到Userinfo 里头。Userinfo列表为List&lt;Userinfo&gt; users.users 存储在request里头。那么输出标签的写法为：\r\n&lt;s:iterator value=\"users\" id=\"u\"&gt; \r\n&lt;s:property value=\"#u.employee.name\" /&gt; \r\n&lt;/s:iterator&gt; 这样就输出了Employee 中的name字段", "Konwledge_Point": "数据的输出", "Question": ["关于Struts2的迭代输出", ["有两个类，并不设置外键关联", "\n[code=\"java\"]", "\npublic class Employee implements java.io.Serializable {", "\n\n", "private Integer id;\nprivate String name;//用户姓名\n", "\n\n", "set get...", "\n}", "\n[/code]", "\n\n", "[code=\"java\"]", "\npublic class Userinfo implements java.io.Serializable {", "\n\n", "private Integer id;\nprivate String loginName;//登陆名\nprivate String loginPwd;\n    private Integer emplId;\n", "\n\n", "get set.....", "\n\n", "}", "\n[/code]", "\n\n", "我现在查出Userinfo的列表，再根据 列表的每个emplId值取出Employee 的列表", "\n我也在页面显示", "\n登陆名|密码|姓名", "\n\n", "用struts2怎么显示？", "\n\n", "/s:iterator", "\n这样只能循环出Employee 的字段？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;以%4.3f为例&lt;br /&gt;1、f 代表数值以“小数”&amp;#xff08;浮点型&amp;#xff09;的格式输出。&lt;/p&gt;\n&lt;p&gt;2、4表示&amp;#xff1a;在小数输出中表示“最少输出的字符数为4&amp;#xff08;少于此数&amp;#xff0c;在前加空格&amp;#xff0c;多了原样输出”。&lt;/p&gt;\n&lt;p&gt;3、. 3表示&amp;#xff1a;小数点后保留3位&amp;#xff0c;少了加0&amp;#xff0c;多则四五入。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言   double 输出问题    %数字f", ["能不能解释下 printf 输出时 % 数字 f 代表的什么意思？", "还有%小数f代表的有是啥。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;计算两组数据相关系数建议用corrcoef函数&amp;#xff0c;原始信号数据你肯定是有的&amp;#xff0c;假设是X&amp;#xff0c;示波器输出的数据你可用to workspace元件然后模拟好了&amp;#xff0c;你在workspace&amp;#xff08;工作区&amp;#xff09;的out下面可以找到相关的输出用Y表示&lt;br /&gt;最后&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;r &amp;#61; corrcoef&lt;span class=\"hljs-comment\"&gt;(X,Y)&lt;/span&gt;;\nr&lt;span class=\"hljs-comment\"&gt;(1,2)&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;%&lt;/span&gt;就是相关系数\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["我在Matlab/simulink建立模型进行模拟仿真，在模型中我输入一个原始信号数据，示波器输出一个输出信号数据，输入输出两组信号数据有偏差，我想咨询一下，如何计算两组数据的相关系数？", ["大神们好！我在Matlab/simulink建立模型进行模拟仿真，在模型中我输入一个原始信号数据，示波器输出一个输出信号数据，由于我建立的模型不完美，所以输入输出两组数据有偏差，我想咨询一下，如何分析两组数据？如何计算两组数据的相关系数？"]], "Tag": "程序设计"}
{"Answer": "char c[100] \r\nsprintf(c, \"%s ......\", c1);\r\nMessageBox(NULL, c, \"提示\", MB_ICONINFORMATION|MB_OK);", "Konwledge_Point": "数据的输出", "Question": ["请问各位大佬，Dev-C++环境下怎么使用MessageBox输出变量呢？", ["本人曾用cstring里的strcat函数实现，希望有更优方案。", "\n附上代码（无关部分已隐藏，不影响）：", "\n\n", "#include <iostream>\n#include <cstdio>\n#include <windows.h>\nusing namespace std;\nint main() {\n    cout << \"输入一个不超过100的数：\" << endl;\n    int n;\n    cin >> n;\n    int m = n;\n    ……\n    char c1[1000];\n    for (int i = 0; m; i++) {\n        for (int i = 0; m; i++) {\n        c1[i] = m % 10 + '0';\n        m /= 10;\n    }\n    }\n    char c[100] = \"……\";\n    strcat(c, c1);\n    strcat(c, \"……\"); \n    MessageBox(NULL, c, \"提示\", MB_ICONINFORMATION|MB_OK); \n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那最后写入到库了吗&amp;#xff0c;如果写不进去&amp;#xff0c;上游kafka肯定会延迟越来越大的&amp;#xff0c;可以在sink里多打印下错误&amp;#xff0c;或者设置写入超时时间&amp;#xff0c;问题应该在写入&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["flink消费kafka数据延迟", ["框架：kafka+flink 1.13.2+postgreSQL 9.4.24+scala+数据库框架slick3.3", "问题：flink消费kafka数据，如果不写入数据库，从flink收到kafka源数据开始就可以正常消费kafka，不会延迟", "如果要写入数据库，从flink接收kafka数据开始就延迟(打印过源数据，源数据有时间字段，整个程序都没有使用水印时间)，源端设备发送数据的频率不一样(有一分钟三条，一分钟两条，一分钟一条的)，发送频率越快，flink消费越慢，而且不管什么频率，flink消费数据延迟会越来越高", "这是生产环境的情况，测试环境可以秒写入", "大佬们这是什么原因😭", "\n", "\n", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;直接在linux桌面上打开终端是当前用户的登录&amp;#xff0c;你远程登录时用的是不是同一个帐号&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["linux终端一直自动输出一些东西，请问怎么取消？", ["用xshell连接centos后，提示“nohup:标准错误流重定向标准输出流”，然后一直在自动输出一些错误信息，请问怎么修改终止这种现象？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这不是spyder的问题&amp;#xff0c;是因为你只定义了main()函数&amp;#xff0c;却没有调用它&amp;#xff0c;所以不会有任何输出&amp;#xff0c;进行下面的修改就有输出了。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;testFun1&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x * x * x &amp;#43; x &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;testFun2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x * x &amp;#43; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;myintegrate&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;anyFunc, low, high&lt;/span&gt;):\n    numstep &amp;#61; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n    mystep &amp;#61; (high - low) / numstep\n    myarea &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (low &amp;lt; high):\n        myarea &amp;#61; myarea &amp;#43; anyFunc(low) * mystep\n        low &amp;#61; mystep &amp;#43; low\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; myarea\n\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;():\n    anyFunction &amp;#61; testFun1;\n    myresult &amp;#61; myintegrate(anyFunction, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;area result&amp;#61;&amp;#34;&lt;/span&gt;, myresult)\n    myresult &amp;#61; myintegrate(anyFunction, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;area result&amp;#61;&amp;#34;&lt;/span&gt;, myresult)\n\n\nmain()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["spyder不显示运行结果", ["大家好！！刚开始学用Spyder。。请问console的地方为什么不显示运行结果哇 pleaseplease 帮忙解答一下这个些许有些愚蠢的问题QAQ"]], "Tag": "程序设计"}
{"Answer": "# 问题解决的话，请点下采纳\r\n```\r\nlst = []\r\nfor i in range(6):\r\n  lst.append(int(input()))\r\nlst = sorted(lst, reverse = True)\r\nprint(lst)\r\nprint(sum(lst))\r\nprint('%.2f' % (sum(lst) / (float)(len(lst))))\r\n```", "Konwledge_Point": "数据的输出", "Question": ["计算列表所有元素的和与平均值", ["题目描述", "\n从键盘读取6个整数，存入列表，对6个数据进行降序排列后输出，同时计算列表所有元素的和与平均值（保留2位小数），并输出。 ", "\n\n", "输入", "\n6个整数 ", "\n\n", "输出", "\n降序排列后结果，所有元素和，平均值 ", "\n\n", "样例输入", "\n25", "\n65", "\n34", "\n87", "\n41", "\n52", "\n\n", "样例输出", "\n[87, 65, 52, 41, 34, 25]", "\n304", "\n50.67"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;举例&amp;#xff1a;表A中有字段&amp;#xff0c;设备id&amp;#xff0c;name&amp;#xff0c;设备数量num&amp;#xff0c;日期date&amp;#xff0c;取每个设备最早的10条数据。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; t.id,t.name\n  &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt;\n(\n   &lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; \n      t.id\n      ,t.name\n      ,row_number()&lt;span class=\"hljs-keyword\"&gt;over&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;partition&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;by&lt;/span&gt; t.id &lt;span class=\"hljs-keyword\"&gt;order&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;by&lt;/span&gt; t.date) rn\n     &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; A t\n) t1\n  &lt;span class=\"hljs-keyword\"&gt;where&lt;/span&gt; t1.rn&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["mysql 怎么取所有类别的前10条数据", ["想要取设备数据表的每个设备的前10条数据，想问一下，怎么做哈，搞了一下午都没有结果，有人会请给我留言，求解答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,j,n,m,&lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;,t;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i&amp;lt;n)\n    {\n        cin &amp;gt;&amp;gt; m;\n        &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;m;j&amp;#43;&amp;#43;)\n        {\n            cin &amp;gt;&amp;gt; t;\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#43;&amp;#61; t;\n        }\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        i&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i%&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) cout &amp;lt;&amp;lt;endl; &lt;span class=\"hljs-comment\"&gt;//每2组输出一个空行&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c➕➕辣鸡大学生：求n个整数之和。T组测试，且要求每两组输出之间空一行。", ["输入格式:", "\n", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试数据在一行上先输入数据个数n，然后再输入n个整数，数据之间以一个空格间隔。", "\n", "输出格式:", "\n", "对于每组测试，在一行上输出n个整数之和，每两组输出结果之间留一个空行。", "\n", "输入样例:", "3", "4 1 2 3 4", "5 1 2 3 4 5", "3 1 2 3", "输出样例：", "10", "\n", "15", "\n", "6", "我的代码：", "发不出来啊😭"]], "Tag": "程序设计"}
{"Answer": "首先程序能输出，看你键盘输入的数据了：\r\n外层循环为5，\r\n内层有个while循环，当键盘输入不为2时就继续接受输入，为二时将2的上一个字符赋给c[i];\r\n就是每当内层while接收键盘输入，每输入一个2就跳出while,执行一次for循环，不为2就一直执行while接收键盘输入。\r\n接收5个2后外层for循环就执行完了。程序结束。\r\n\r\n测试数据输入12123242542778792 有5个2，恰好执行程序，多了后面的不执行，少了程序还需接收键盘输入。\r\n![图片说明](https://img-ask.csdn.net/upload/201611/19/1479559208_499015.png)", "Konwledge_Point": "数据的输出", "Question": ["请教大神这个程序为什么运行时无输出？", ["#include< stdio.h>", "\n#include< string.h>", "\n#define q 20", "\nchar C[q];", "\nint main()", "\n{        int S;", "\n    for ( int i=0;i<=5;i++)", "\n    {while((S=getchar())!='2')", "\n        C[i]=S;}", "\n        for( int i=0;i<=strlen(C);i++)", "\n        printf(\"%c\",C[i]);", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;作笛卡尔积。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Vba如何实现列与列之间的内容组合输出", ["例如下边内容如何实现:", "\n", "最初数据", "\n", "输出预想(部分组合情况，实际应该是80种组合)"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/p451933505/article/details/8235386", "Konwledge_Point": "数据的输出", "Question": ["对两个数组比较，将两个数组各自不在对方的数据组成一个新的数组输出到文件。", ["对两个数组比较，将两个数组各自不在对方的数据组成一个新的数组输出到文件。"]], "Tag": "程序设计"}
{"Answer": "System.out.println(rs.getInt(\"字段名\"));//输出数据库中数据类型为“整形”字段名为“ 字段名”数据\r\nSystem.out.println(rs.getString(\"字段名\"));//输出数据库中数据类型为“varchar或char等”字段名为“ 字段名”数据\r\nSystem.out.println(rs.getDate(\"字段名\").toString());//输出数据库中数据类型为“date或datetime等”字段名为“ 字段名”数据", "Konwledge_Point": "数据的输出", "Question": ["Java，请你帮我看一下，我的这个地方怎么修改。我怎么修改才能输出我想要的查询数据", ["Java，请你帮我看一下，我的这个地方怎么修改。我怎么修改才能输出我想要的查询数据"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;&amp;lt;script type&amp;#61;&amp;#34;text/javascript&amp;#34;&amp;gt;\nvar str &amp;#61; prompt(&amp;#34;请输入若干个整数(用空格分隔)&amp;#xff1a;&amp;#34;,&amp;#34;&amp;#34;);\nvar arr &amp;#61; str.split(&amp;#34; &amp;#34;).map(function(v, i){\n\treturn parseInt(v, 10);\n});\narr.sort(function(a,b){\n\treturn a - b;\n});\nalert(arr);\n&amp;lt;/script&amp;gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["用JavaScript编程，使用prompt方法输出若干个整数，然后用alert方法排序输出。", ["用JavaScript编程使用prompt方法输出若干个整数，然后用alert方法排序输出。"]], "Tag": "程序设计"}
{"Answer": "是不是文件没有编译啊。加上了打印语句后，文件没有编译。可以清理一下项目。eclipse 项目-》清理", "Konwledge_Point": "数据的输出", "Question": ["为啥我的输出语句都输出不来", ["我写的java代码输出语句输出不出来，咋回事呢有时候好使，有的时候不好使"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;方法1&amp;#xff1a;因为格式统一&amp;#xff0c;可以使用pandas 的操作&amp;#xff0c;相对简单&amp;#xff0c;如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\ndf &amp;#61; pd.read_table(&lt;span class=\"hljs-string\"&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;,delimiter &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;  &amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;header&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;None&lt;/span&gt;)  # 指定已空格为分隔&amp;#xff0c;列名称取默认值\ndf.&lt;span class=\"hljs-keyword\"&gt;columns&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;column1&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;column2&amp;#39;&lt;/span&gt;]  #手动修改列名称\ndf.to_excel(&lt;span class=\"hljs-string\"&gt;&amp;#39;test.xlsx&amp;#39;&lt;/span&gt;)  #保存\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;方法2&amp;#xff1a;&lt;br /&gt;使用openpyxl模块&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;from&lt;/span&gt; openpyxl import Workbook\nworkbook &amp;#61; Workbook()\nsheet &amp;#61; workbook.active\n&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f:\n    results &amp;#61; f.readlines()\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;result&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; results:\n        ls &amp;#61; &lt;span class=\"hljs-built_in\"&gt;result&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;()\n        sheet.append(ls)\nworkbook.save(&lt;span class=\"hljs-string\"&gt;&amp;#39;test1.xlsx&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["python中怎么把输出的一列数字分成两列（excel打开是两列的那种，不是只加个空格）", ["我的数据每一行是如图这样的带空格的两个数据，但用excel打开后只会在第一列的单元格里", "\n", "我希望可以实现用excel打开也是两列的那种，不知道可不可以", "一定会采纳的！谢谢大家！", "\n", "import codecs\nf = codecs.", "open", "(", "'D:/data/Ni.MTR'", ", ", "'r'", ", ", "'ansi'", ")\n", "line", " = f.readline()  ", "# 以行的形式进行读取文件", "\nlist1 = []\n", "while", " ", "line", ":\n    ", "a", " = ", "line", ".", "split", "(", "\",\"", ")\n    b = ", "a", "[", "1", ":", "3", "]       ", "# 这是截取按逗号分隔后的第二个和第三个数据", "\n    list1.append(b)  ", "# 将其添加在列表之中", "\n    ", "line", " = f.readline()\nf.", "close", "()\n\n\nt = ", "' '", "\ns = ", "' '", "     \n", "with", " ", "open", "(", "'D:/data/try.txt'", ", ", "'w+'", ") ", "as", " f_out:\n    ", "for", " i ", "in", " list1:  ", "#为了把list1用i表示出来", "\n        ", "for", " j ", "in", " range(", "len", "(i[", "0", "])):\n            t = t + i[", "0", "][j]  ", "# list1里第i个元素(数）的第一列数据的第j个元素（数字）转化成字符串", "\n        ", "for", " j ", "in", " range(", "len", "(i[", "1", "])):\n            s = s + i[", "1", "][j]  ", "# list1里第i个元素(数）的第二列数据的第j个元素（数字）转化成字符串 ", "\n        f_out.", "write", "(t)\n        f_out.", "write", "(s)\n        f_out.", "write", "(", "'\\n'", ")\n       \n        t =", "' '", "   ", "#清空", "\n        s =", "' '", " \n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;Yes&lt;/strong&gt; (as you already have tested).&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/function.curl-exec.php\" rel=\"nofollow\"&gt;&lt;code&gt;curl_exec&lt;/code&gt; &lt;sup&gt;&lt;strong&gt;PHP Manual&lt;/strong&gt;&lt;/sup&gt;&lt;/a&gt; does return output directly to the browser &lt;em&gt;unless&lt;/em&gt; you make use of the &lt;code&gt;CURLOPT_RETURNTRANSFER&lt;/code&gt; constant &lt;a href=\"http://php.net/manual/en/function.curl-exec.php\" rel=\"nofollow\"&gt;as documented&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["curl_exec直接输出数据？", ["\n\n", "I have this code", "\n\n", "<?php\nfunction get(){\n        $ch = curl_init();\n\n        curl_setopt($ch, CURLOPT_URL, \"http://stackoverflow.com/\");\n        curl_setopt($ch, CURLOPT_HEADER, 0);\n        $c = curl_exec($ch);\n        curl_close($ch);\n        die(\"A\");\n        return $c;\n}\n\n$first = get();\n\n\n?>\n", "\n\n", "but look what's output", "! It just prints off everything returned from curl_exec(); ", "\n\n", "how is that possible? ", "\n    "]], "Tag": "程序设计"}
{"Answer": "while(fscanf(r,\"%d\",&amp;t)!=EOF)\r\n    {\r\n        q=(LinkList*)malloc(sizeof(LinkList));\r\n        q-&gt;data=t;\r\n        p-&gt;next=q;\r\n        p=q;\r\n    }\r\n这里，你从文件读入的数据，都是新建一个节点，然后放在data域里面的，而作为表头的那个节点，没有用到，所以是随机值\r\n\r\n所以你程序没毛病，只是输出的时候，\r\nwhile(p)\r\n前面加上\r\np = p-&gt;next;\r\n即可", "Konwledge_Point": "数据的输出", "Question": ["C语言：单链表输出显示问题", ["各位大佬麻烦帮忙看一下，从txt文件中获取数据为链表后，想要输出显示，运行结果是-842150451 1 3 5 7 9（1 3 5 7 9为正确链表数据）", "\n代码如下：", "\n\n", "// 实验2.cpp : 定义控制台应用程序的入口点。\n//\n\n#include \"stdafx.h\"\n#include <stdio.h>\n#include <malloc.h>\n#include <stdlib.h>\n\ntypedef struct LinkList\n{\n    int data;\n    struct LinkList *next;\n}LinkList;\n\nLinkList *createlink()\n{\n    LinkList *head=(LinkList*)malloc(sizeof(LinkList));\n    int t;\n    LinkList *p;\n    LinkList *q;\n    p=q=head;\n    FILE *r=fopen(\"list1.txt\",\"r\");\n    if(r==NULL)\n    {\n        printf(\"could not open file\");\n        return NULL;\n    }\n    while(fscanf(r,\"%d\",&t)!=EOF)\n    {\n        q=(LinkList*)malloc(sizeof(LinkList));\n        q->data=t;\n        p->next=q;\n        p=q;\n    }\n    p->next=NULL;\n    return head;\n}\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n    LinkList *p;\n    p=createlink();\n    while(p)\n    {\n    printf(\"%d \",p->data);\n    p=p->next;\n    }\n    //system(\"pause\");\n    return 0;\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "问题补充：\r\n我用的不是servlet,就是javabean\r\n\r\n原来如此？ 呵呵！！\r\n那就在页面 \r\n&lt;%   \r\nList&lt;A&gt; list = 你的javaBean.custom(); //获得这个数据！\r\nfor(A a:list){   \r\n%&gt;   \r\n&lt;tr&gt;   \r\n&lt;td&gt;&lt;%a.getName()%&gt;&lt;/td&gt;   \r\n&lt;/tr&gt;   \r\n&lt;%   \r\n}   \r\n%&gt;", "Konwledge_Point": "数据的输出", "Question": ["jsp页面循环遍历输出结果", ["这是从数据库取数据的方法,我想知道jsp页面如何接受到这个结果集,并且循环遍历输出,谢谢,请详细一点", "\n[code=\"java\"] public  List> custom(String staff){", "\n                Connection con = null;", "\n                PreparedStatement ps = null;", "\n                ResultSet rs = null;", "\n                List> list = null;", "\n                try{", "\n                con = JavaUtil.getInstence().getConnection();", "\n                String sql = \"select name,linkman,contact,details,address from customer where staff = ?\";", "\n                ps = con.prepareStatement(sql);", "\n                ps.setString(1, staff);", "\n                rs = ps.executeQuery();", "\n                ResultSetMetaData rsmd = rs.getMetaData();", "\n                int count = rsmd.getColumnCount();", "\n                String[] colNames = new String[count];", "\n                for(int i=0;i\n                    colNames[i] = rsmd.getColumnLabel(i+1);", "\n                }", "\n                   list = new ArrayList>();", "\n                while(rs.next()){", "\n                    Map map = new HashMap(); ", "\n                    for (int i = 1; i < colNames.length; i++) {", "\n                        map.put(colNames[i], rs.getObject(colNames[i]));", "\n                    }", "\n                    list.add(map);", "\n\n", "            }\n\n            }catch(Exception e){\n                e.printStackTrace();\n            }finally{\n                JavaUtil.getInstence().free(rs, ps, con);\n            }\n            return list;\n        }[/code]\n"]], "Tag": "程序设计"}
{"Answer": "443193862@qq.com,楼主把你的代码、部署环境描述发过来，给你贴代码估计你系统也跑不起来，我可以给你做个简单上传demo，你自己根据业务再扩展", "Konwledge_Point": "数据的输出", "Question": ["用java实现：上传excl表格。读取数据，输出结果。", ["package chexianchaxun;", "\nimport java.io.*;", "\n\n", "public class FeiYong{", "\n    public static void main(String[] args) throws Exception {", "\n\n", "    java.net.URL url = new java.net.URL(\"http://********\");\n    java.net.URLConnection con = url.openConnection();\n    con.setUseCaches(false);\n    con.setDoOutput(true);\n    con.setDoInput(true);\n\n    DataOutputStream dataOut = new DataOutputStream(con.getOutputStream());\n    //字节流：InputStream(读取)、OutputStream(写入)\n    String Msg = \"<Request> <VinNo>ZAMJK39E6B0060491</VinNo><LicenseNo></LicenseNo><LoginID>215288</LoginID></Request>\" ;\n\n    /**转保车辆VinNo为必填\n*/\n    System.out.println(Msg);\n    //字符流：Writer(写入)、Reader(读取)\n    dataOut.write(Msg.getBytes(\"gbk\"));//将已经解析出来的字节数据转化为gbk编码格式的字符串\n    dataOut.flush();\n    dataOut.close();\n    InputStream is = con.getInputStream();\n    InputStreamReader isr = new InputStreamReader(is, \"gbk\");\n    BufferedReader br = new BufferedReader(isr);\n    StringBuffer sb = new StringBuffer();\n\n    String templine=null;\n    while ((templine = br.readLine()) != null)\n        sb.append(templine);\n\n    System.out.println(sb.toString());\n}\n", "\n\n", "}", "\n如上。", "\n当个输入信息车架号，通过接口，可以获取对应的数据信息。", "\n现需要实现，excl表格形式上传，表格内有多条车辆的车架号数据，通过接口，然后再获取对应的数据信息。", "\n\n", "感谢Always_MyLoverX  的耐心回答"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把加号放在中间不就好了。&lt;/p&gt;\n\n&lt;p&gt;System.out.println(&amp;#34;你想要的字符串&amp;#34;&amp;#43;n&amp;#43;“你想要的字符串”);&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Java输出怎么把变量值输在写的字之间啊", ["\n\n", "各位大佬，请问我想把变量输出在字符中间，怎么写啊", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;img alt=\"\" height=\"521\" src=\"https://img-ask.csdnimg.cn/upload/1624675408233.png\" width=\"976\" /&gt;&lt;/p&gt;\n\n&lt;p&gt;明白了吧。我们乐于帮助&amp;#xff0c;希望乐于采纳。谢谢&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["请问输出的数据类型在什么情况下用双引号或者单引号？", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这题有一个隐含的意思就是:输入和输出是可以交错进行的,所以对于前三个答案,考虑他们入栈的时间都是不会有问题的,而对于D选项,由于最先输出的是4,说明这时候1,2,3都在栈内,未输出,因此根据先后顺序,1在栈底,不可能比2先输出&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["栈和队列，输出序列问题", ["设栈的输入序列是1，2，3，4，则下列不可能的输出序列是（）\nA. 1,2,4,3  B. 2,1,3,4  C. 1,4,3,2  D. 4,3,1,2\n答案是D，没理解，麻烦大神们为我解惑。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为函数参数是值参&amp;#xff0c;函数内部会复制出一个同名的内部变量&amp;#xff0c;函数内修改的只是内部变量的值&amp;#xff0c;不能修改传入变量的值&lt;br /&gt;可以改成指针或者引用类型&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言函数计算输出结果", ["\n", "为什么输出的还是原来的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;平均分如果是double类型&amp;#xff0c;要用打印符%lf,如果是float类型&amp;#xff0c;要用打印符%f, 用%d打印浮点数是会出现异常结果的&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C语言输出结果为什么为0", ["为什么下面的平均分结果为0啊", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n using(SqlConnection conn = new SqlConnection(\"server=.;uid=sa;pwd=123456;database=yourdb\"))\r\n{\r\n  conn.Open();\r\n\r\n  SqlCommand cmd = new SqlCommand(\"select grade from student where sno = 121101\",conn);\r\n\r\n  object obj = cmd.ExecuteScalar();\r\n  if(obj!=null)\r\n  {\r\n\tthis.textbox1.Text = obj.ToString();\r\n  }\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["c#中用textbox输出一个数据库查询结果", ["C#：如何实现：在textbox中显示SQLsever数据库中查询（例如;select grade from student where sno=121101)所得的一个数据？", "\n求大神帮忙啊！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;靓仔&amp;#xff0c;你给ptr赋空间后又将其指向那个空的head了&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["输入数据，链表未输出，是什么原因？", ["创建链表，给链表加5个节点，最后为什么不能输出，能解释一下吗？"]], "Tag": "程序设计"}
{"Answer": "open 文件名 for append as 文件号", "Konwledge_Point": "数据的输出", "Question": ["Print语句后面带上#可以输出到文件，但是怎么才能输出到已经写有数据的文件中呢？", ["Print语句后面带上#可以输出到文件，但是怎么才能输出到已经写有数据的文件中呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;Df&lt;/span&gt; &amp;#61; pd.DataFrame(columns&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;New_ID&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;positiveVol&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;eleCur&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;KV_result&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;])\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; key, item &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; df1.groupby([&lt;span class=\"hljs-string\"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]):&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; item.shape[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;gt; &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;:&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n      item[&lt;span class=\"hljs-string\"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &amp;#61; key[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n      &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;Df&lt;/span&gt;  &amp;#61; pd.concat([&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;Df&lt;/span&gt; , item])\n      print(item)\n&lt;span class=\"hljs-meta\"&gt;# 最后把这个newDf 存进新表就好了&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["python：pandas计算各项出现次数，怎么输出超过50次的行数据？", ["我想用pandas计算列表中id的出现次数，并输出超过50次的行数据，存进一张新表怎么写啊", "\n", "\n", "for index,row in df1.iterrows():", "    for i in row:", "        if row[\"id\"].value_counts()>50:", "            print(row)", "\n", "这怎么写都报错呢"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include \"stdio.h\"\r\nint main()\r\n{\r\nint n,i,num=0;\r\nscanf(\"%d\",&amp;n);\r\nfor(i=10;i&lt;=99;i++)\r\n{\r\nif(i%n==0)\r\n{\r\nprintf(\"%-5d\",i);\r\nnum=num+1;\r\n}\r\nif(num%5==0 &amp;&amp; (i - 1)%n==0 &amp;&amp; i!=10)\r\n{\r\nprintf(\"\\n\");\r\n}\r\n}\r\n  printf(\"\\n%d\",num);\r\n  return 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201810/28/1540699166_49965.gif)\r\n\r\n`以后提问，请格式化好了再发出，方法如下`\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201810/28/1540699224_291552.gif)\r\n\r\n\r\n`问题解决请点我回答右边的采纳，谢谢`", "Konwledge_Point": "数据的输出", "Question": ["新人求解如何让输出数据之间上下行之间无空", ["#include ", "\nint main()", "\n{", "\n    int n,i,num=0;", "\n    scanf(\"%d\",&n);", "\n    for(i=10;i<=99;i++)", "\n      {", "\n          if(i%n==0)", "\n      {", "\n        printf(\"%-5d\",i);", "\n        num=num+1;", "\n       }", "\n        if(num%5==0)", "\n        {", "\n            printf(\"\\n\");", "\n        }", "\n\n", "  }\n  printf(\"\\n%d\",num);\n  return 0;\n", "\n\n", "}", "\n输入2", "\n输出如下", "\n10   12   14   16   18", "\n\n", "20   22   24   26   28", "\n\n", "30   32   34   36   38", "\n\n", "40   42   44   46   48", "\n\n", "50   52   54   56   58", "\n\n", "60   62   64   66   68", "\n\n", "70   72   74   76   78", "\n\n", "80   82   84   86   88", "\n\n", "90   92   94   96   98", "\n\n", "45"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以转字串后替换掉空格&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;lst &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;]&lt;/span&gt;\n              \n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(lst).replace(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;))&lt;/span&gt;\n              \n[1,2,3,4,5]\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么python输出的列表每个逗号后面都有一个空格，怎么删去", ["为什么python输出的列表每个逗号后面都有一个空格，怎么删去"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport csv\nreader&amp;#61;csv&lt;span class=\"hljs-selector-class\"&gt;.reader&lt;/span&gt;(open(&lt;span class=\"hljs-string\"&gt;&amp;#39;xxxx.csv&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;))\n\nd&amp;#61;dict()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; reader:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; reader.line_num&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        continue\n    d&lt;span class=\"hljs-selector-attr\"&gt;[int(i[0]&lt;/span&gt;)]&amp;#61;int(&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[1]&lt;/span&gt;)&amp;#43;d&lt;span class=\"hljs-selector-class\"&gt;.get&lt;/span&gt;(int(&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["【python】csv分类计算求和并输出字典", ["我有如下的csv，想要进行分类求和", "如果第一列数值相同，则第二列的数相加，最后输出一个字典", "\n", "153 ", "   ", "0.221961455", "\n", "120 ", "   ", "0.103056455", "\n", "183 ", "   ", "0.084485641", "\n", "112 ", "   ", "0.08161917", "\n", "166 ", "   ", "0.077010437", "\n", "140 ", "   ", "0.060647912", "\n", "206 ", "   ", "0.058569176", "\n", "76 ", "   ", "0.050482204", "\n", "181 ", "   ", "0.048133912", "\n", "57 ", "   ", "0.04332135", "\n", "153 ", "   ", "0.179884848", "\n\n", "\n", "举例：如上表输出后153后面数值成为0.401846，最终字典", "\n", "prDict", "={", "153", "：", "0", ".", "401846", "，", "120", "：", "0", ".", "103056", "......}\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;flag设为数组反而会影响你的思路&amp;#xff0c;这种判断是否重复的题一般按照下面这种方法写&lt;br /&gt;用 “哈希查找” 的思想&amp;#xff0c;具体思路&amp;#xff1a;遇到重复出现的就f&amp;#61;&amp;#61;1&amp;#xff0c;输出yes退出循环&amp;#xff0c;不然就表示无重复&amp;#xff0c;那么f的值没变&amp;#xff0c;还是0&amp;#xff0c;输出no&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, i, num, f&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; hash[&lt;span class=\"hljs-number\"&gt;100010&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;num);\n        hash[num]&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(hash[num]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            f &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;YES&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(f&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;NO&amp;#34;&lt;/span&gt;);\n     &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n} \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于#PTA#的问题，如何解决？(关键词-输出格式)", ["在一大堆数据中找出重复的是一件经常要做的事情。现在，我们要处理许多整数，在这些整数中，可能存在重复的数据。", "\n", "你要写一个程序来做这件事情，读入数据，检查是否有重复的数据。如果有，输出“YES”这三个字母；如果没有，则输出“NO”。", "\n", "输入格式:", "你的程序首先会读到一个正整数n,n∈[1,100000]，然后是n个整数。", "\n", "输出格式:", "如果这些整数中存在重复的，就输出：", "\n", "YES", "否则，就输出：", "\n", "NO", "输入样例:", "5", "1 2 3 1 4", "输出样例:", "YES", "代码长度限制", "16 KB", "时间限制", "800 ms", "内存限制", "64 MB", "C (gcc)", "￼", "￼", "￼", "￼", "￼", "￼", "￼", "￼", "1", "#include <stdio.h>", "2", "int main()", "3", "{", "4", "    int a[100000],num,n,i=0;", "5", "    int flag[100000] = { 0", "6", "                        };", "7", "    scanf(\"%d\", &n);", "8", "    for (i = 0; i < n; i++)", "9", "    {", "10", "        scanf(\"%d\", &a[i]);", "11", "        num = a[i];", "12", "        flag[num]++;", "13", "        if (flag[num] == 2)", "14", "        {", "15", "            printf(\"YES\");", "16", "            return 0;", "17", "        }", "18", "    }", "19", "    printf(\"NO\");", "20", "    return 0;", "21", "}", "\n", "运行错误，为何，怎么改？"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/1704818162362746620.html", "Konwledge_Point": "数据的输出", "Question": ["一道简单的C++题目，求这段代码哪里错了，求正确代码！！！！", ["马鞍数", "\n题目描述", "\n求一个n×m数阵中的马鞍数，输出它的位置。所谓马鞍数，是指在行上最小而在列上最大的数。如下： n=5 m=5", "\n5 6 7 8 9", "\n4 5 6 7 8", "\n3 4 5 2 1", "\n2 3 4 9 0", "\n1 2 5 4 8", "\n则1行1列上的数5就是马鞍数。", "\n输入格式", "\n第一行一个整数t，表示有t组测试数据（t<=10）。", "\n每组测试数据第一行： n m (0<n,m＜=１０)", "\n第2到n+1行：每行m个整数（每个数都<10）", "\n输出格式", "\n每组测试数据输出若干行：", "\n如果存在马鞍数，则输出所有马鞍数，每行一个，为行和列以及马鞍数。", "\n如果不存在马鞍数，则输出一行“not exit”（注意：不包括双引号）。", "\n输入输出样例", "\n输入样例 ", "\n1 ", "\n9 8 ", "\n9 8 7 6 5 4 3 2 ", "\n8 8 9 9 9 9 9 9 ", "\n3 7 7 6 5 4 2 1 ", "\n8 8 3 2 1 7 3 2 ", "\n7 5 3 2 9 1 3 2 ", "\n6 3 2 1 9 3 1 3 ", "\n8 2 1 3 5 8 9 1 ", "\n1 3 2 1 3 5 6 8 ", "\n9 3 1 2 3 4 5 8", "\n输出样例 ", "\n2 2 8", "\n\n", "#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int t,n,m,i,j;\n    int col[12],row[12],a[12][12];\n    bool flag=false;\n    cin>>t;\n    for(int k=1;k<=t;k++){\n        cin>>n>>m;\n        for(i=1;i<=n;i++)row[i]=INT_MAX;\n        for(j=1;j<=m;j++)col[j]=INT_MIN;\n        for(i=1;i<=n;i++)\n            for(j=1;j<=m;j++){\n                cin>>a[i][j];\n                if(a[i][j]<row[i])row[i]=a[i][j];\n                if(a[i][j]>col[j])col[j]=a[i][j];\n            }\n        for(i=1;i<=n;i++)\n            for(j=1;j<=m;j++){\n                if(a[i][j]==row[i]&&a[i][j]==col[j]){\n                    cout<<i<<\" \"<<j<<\" \"<<a[i][j]<<endl;\n                    flag=true;\n                }\n            }\n            if(!flag)cout<<\"not exit\"<<endl;\n    }\n\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是要考虑越界的问题吗&amp;#xff0c;可能自动类型转换了&amp;#xff1b;在短整型中&amp;#xff0c;32767&amp;#61;2^15-1&amp;#xff0c;这里已经是短整型能够表示的最大正数了&amp;#xff0c;在计算机组成原理里面会学的&amp;#xff0c;计算机中的数用补码表示&amp;#xff0c;32767&amp;#43;1之后会变成下一阶段的数&amp;#xff0c;进位后就成了负数&amp;#xff0c;当然这里会不会进行类型转换得通过试验进行&amp;#xff1b;32767&amp;#43;1用补码表示为1111 1111 1111 1111&amp;#xff08;正数的补码为本身&amp;#xff09;&amp;#43; 0000 0000 0000 0001&amp;#xff08;正数的补码为本身&amp;#xff09;&amp;#xff0c;但加起来之后变成1 0000 0000 0000 0000&amp;#xff0c;注意这里进位并不考虑在本次计算中&amp;#xff0c;所以结果会变成最小的负数-32768&amp;#xff1b;注释&amp;#xff1a;这里理解并不透彻&amp;#xff0c;可能有些错误&amp;#xff0c;仅作参考。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["基本数据类型在计算机中的表示-关于程序输出结果", ["不懂为什么b会是负号？", "而且格式不应该是a=多少，b=多少，a，b    为什么答案只有a=，b= ？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;prime&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i*i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i,j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;lt;&amp;#61;n; i&amp;#43;&amp;#43; ) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;prime&lt;/span&gt;(i)){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%c&amp;#34;&lt;/span&gt;, i,&amp;#43;&amp;#43;j%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;?&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;null&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["给定一个正整数n (0< n <=10000)，打印输出[1, n]范围内的所有素数，每行 10个，超过 10个换行，素数之间以空格分隔。如果不存在这样的素数，输出null。", [" 给定一个正整数n (0< n <=10000)，打印输出[1, n]范围内的所有素数，每行 10个，超过 10个换行，素数之间以空格分隔。如果不存在这样的素数，输出null。"]], "Tag": "程序设计"}
{"Answer": "var arr = JSON.parse(returnvalue.d);", "Konwledge_Point": "数据的输出", "Question": ["ajax返回的数据如何在前台转换为数组", ["如何将ajax返回的数据在前台转换成数组"]], "Tag": "程序设计"}
{"Answer": "```\r\n select \r\n(case warning \r\nwhen 'A' then '阿洛西林' \r\nwhen 'B' then '环酯红霉素' \r\nend)\r\n * from in_examine ;\r\n```", "Konwledge_Point": "数据的输出", "Question": ["SQL语句中关于查询出来的数据替换的问题？", ["SQL语句：select * from in_examine where gen_name1 = '阿洛西林' and gen_name2='环酯红霉素' or gen_name2 = '阿洛西林' and gen_name1='环酯红霉素'", "\n\n", "            查询出一条数据\n            查询结果：\n            ![查询结果](https://img-ask.csdn.net/upload/201810/25/1540434286_628448.png)\n\n            问题：如何将查询出来的warning字段里面的内容（A）和（B）分别用\n            “阿洛西林”和“环酯红霉素”替换\n            实现效果：\n            ![查询结果](https://img-ask.csdn.net/upload/201810/25/1540434690_50410.png)\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;题解&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;多组循环表示数据组数可能不确定&amp;#xff0c;这就说明&lt;strong&gt;需要使用到循环&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;每组数据两个整数&amp;#xff0c;那么就需要至少&lt;strong&gt;两个变量&amp;#xff0c;&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;输出以 0 0 结束&amp;#xff0c;说明循环结束条件可以用&lt;strong&gt;两个变量都不等于 0 来作为循环条件&lt;/strong&gt;&lt;br /&gt;示例代码&amp;#xff1a;&lt;/li&gt;&lt;/ol&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;// 定义变量&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, n &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (m !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; n !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 读取并输出变量&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;m, &amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d\\n&amp;#34;&lt;/span&gt;, m,n);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言中如何输入输出多组数据", ["如题", "例如输入多组数据 每行包括2个数据n，m  m，n都是整数 输出以0 0结束。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为对象存入list集合中默认打印对象的tostring方法&amp;#xff0c;你可以在对象中重写tostring方法&amp;#xff0c;即可输出对象信息&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么java中使用Arraylist创建了一个对象，输出是地址值呢？", ["为什么java中使用Arraylist创建了一个对象，输出是地址值呢？什么原因呢？"]], "Tag": "程序设计"}
{"Answer": "这个可以用到C语言中的一个格式控制输出，在JAVA中是这样表示的，System.out.prinf(\"格式规则\",输出的参数值);\r\n\r\n示例：\r\n\r\n```\r\n  for(int i=0;i&lt;1000;i++){\r\n          long random=(long)new Random().nextInt(10000000);\r\n            System.out.printf(\"%-9d\",random);\r\n            if(i%10==0){\r\n                System.out.println();\r\n            }\r\n\r\n```\r\n输出结果展示：\r\n![图片说明](https://img-ask.csdn.net/upload/201909/04/1567559500_677732.png)\r\n\r\n更多用法，请参考C语言prinf的左对齐和右对齐的使用方法。（回帖不易，望采纳！）", "Konwledge_Point": "数据的输出", "Question": ["请教一下java中二维数组输出对齐问题", ["我想控制台输出一个二维数组，但数组内的数字长度不一，最大的数字有9位，", "\n\n", "按照传统的输出加空格或者\\t输出结果就不是很美观", "\n\n", "比如这样", "\n\n", "\n\n", "这是一个11*11的二维数组，我想把他输出成正方形，每列都对齐。", "\n\n", "请问怎么做？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;定义一个单链表类\ntypedef struct node\n{ int &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;;\n  struct node *next;\n}linklist;\n&amp;#xff08;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff09;逐个输出单链表中所有数据元素。\nvoid Printlist(linklist *q)\n{\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(q)\n  {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%d &amp;#34;,q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;&amp;#61;q-&amp;gt;&lt;/span&gt;next;\n  }\n}\n&amp;#xff08;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#xff09;单链表定位操作。其定位功能为&amp;#xff1a;在单链表中查找是否存在数据元素x&amp;#xff0c;如果存在&amp;#xff0c;返回单链表中和x值相等的第&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;个数据元素的序号&amp;#xff08;序号从&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;开始编号&amp;#xff09;&amp;#xff1b;如果不存在&amp;#xff0c;返回-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;。\nint ListLocate_L(linkList L, ElemType x)\n{\n    linkList p&amp;#61;L;\n    int i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;(p-&amp;gt;&lt;/span&gt;next!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;&amp;#61;&amp;#61;x){\n           return i;\n      } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;&amp;#61;p-&amp;gt;&lt;/span&gt;next;\n       i&amp;#43;&amp;#43;;\n    } \n    return -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n] \n&amp;#xff08;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#xff09;删除单链表中所有值为x的元素。\nvoid delete_X(linkList L,int x){\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;linkList&lt;/span&gt; p &amp;#61; L-&amp;gt;&lt;/span&gt;next, pre &amp;#61; L, q; &lt;span class=\"hljs-comment\"&gt;//p指针从第一个元素结点开始&amp;#xff0c;pre指针从头结点开始&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p !&amp;#61; NULL){\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(p-&amp;gt;&lt;/span&gt;val &amp;#61;&amp;#61; x){\n            q &amp;#61; p; &lt;span class=\"hljs-comment\"&gt;//复制给辅助指针q用来释放空间&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next; &lt;span class=\"hljs-comment\"&gt;//p往后遍历&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;pre&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; p; //将pre-&amp;gt;&lt;/span&gt;next指向当前p\n            free(q); &lt;span class=\"hljs-comment\"&gt;//上一个值为X的元素已经从链表中删除&amp;#xff0c;释放结点空间&lt;/span&gt;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next; &lt;span class=\"hljs-comment\"&gt;// 这里注意 p 和 pre都要后移&amp;#xff0c;因为pre始终是p的前驱&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;pre&lt;/span&gt; &amp;#61; pre-&amp;gt;&lt;/span&gt;next;\n        }\n    }\n}\n\n&amp;#xff08;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#xff09;就地逆置单链表中的数据元素。\nlinklist *InverseLinklist(linklist *q)\n{\n     linklist *p,*head;\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;&amp;#61;head-&amp;gt;&lt;/span&gt;next;\n     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(p!&amp;#61;NULL) {\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;&amp;#61;p-&amp;gt;&lt;/span&gt;next;\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next&amp;#61;NULL;       \n     }\n     &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(p!&amp;#61;NULL){\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;&amp;#61;p-&amp;gt;&lt;/span&gt;next;\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;&amp;#61;head-&amp;gt;&lt;/span&gt;next;\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next&amp;#61;p;\n       p&amp;#61;q;            \n  }  \n}\n&amp;#xff08;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#xff09;将单链表中数据元素就地排序。所谓就地排序是指在排序过程中利用原有的结点,不额外增加新结点。\n\nvoid SortSingleList(listlist *head)\n{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;listlist&lt;/span&gt; *pre&amp;#61;head,*p&amp;#61;pre-&amp;gt;&lt;/span&gt;next,*q,*r;    &lt;span class=\"hljs-comment\"&gt;//pre指向head,p指向第一个元素&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;&amp;#61;p-&amp;gt;&lt;/span&gt;next; &lt;span class=\"hljs-comment\"&gt;//q指向待比较节点&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next&amp;#61;NULL;    &lt;span class=\"hljs-comment\"&gt;//第一个节点next截止 NULL&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(q!&amp;#61;NULL)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;(pre-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;!&amp;#61;NULL &amp;amp;&amp;amp; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;data&lt;/span&gt;&amp;gt;pre-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//查找插入点的前驱节点&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;pre&lt;/span&gt;&amp;#61;pre-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;&amp;#61;q-&amp;gt;&lt;/span&gt;next;    &lt;span class=\"hljs-comment\"&gt;//保存待比较的下一个节点&lt;/span&gt;\n \n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;&amp;#61;pre-&amp;gt;&lt;/span&gt;next; \n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;pre&lt;/span&gt;-&amp;gt;&lt;/span&gt;next&amp;#61;q;    &lt;span class=\"hljs-comment\"&gt;//插入节点&lt;/span&gt;\n        \n        pre&amp;#61;head;    &lt;span class=\"hljs-comment\"&gt;//恢复pre的head&lt;/span&gt;\n        q&amp;#61;r;    &lt;span class=\"hljs-comment\"&gt;//q指向下一个待比较节点&lt;/span&gt;\n    }\n}\n\n&amp;#xff08;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;&amp;#xff09;在单链表有序的前提下,插入一个数据元素x,要求插入后的单链表中数据元素从小到大有序排列。\nlinklist  *Insert(linklist *head,int x)\n{\n     linklist  *s,*q;\n     s&amp;#61;(linklist*)malloc(sizeof(linklist));\n     &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;s&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;&amp;#61;x;\n     q&amp;#61;head;\n     &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;&amp;gt;x){\n       &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;s&lt;/span&gt;-&amp;gt;&lt;/span&gt;next&amp;#61;q;\n       head&amp;#61;s;\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n      &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(q!&amp;#61;NULL)\n     {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;&amp;gt;x){\n          &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;s&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;&amp;#61;q-&amp;gt;&lt;/span&gt;next;\n          &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;next&amp;#61;s;\n          break;                \n        }      \n     &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;&amp;#61;q-&amp;gt;&lt;/span&gt;next;\n     }\n    q&amp;#61;head;\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["逐个输出单链表中所有数据元素。", ["定义一个单链表类（参照P45-P48），在此基础上添加如下成员函数：", " （1）编写一个成员函数：逐个输出单链表中所有数据元素。", " （2）编写一个成员函数：单链表定位操作。其定位功能为：在单链表中查找是否存在数据元素x，如果存在，返回单链表中和x值相等的第1个数据元素的序号（序号从0开始编号）；如果不存在，返回-1。", "（3）编写一个成员函数：删除单链表中所有值为x的元素。", "（4）编写一个成员函数：就地逆置单链表中的数据元素。", "（5）编写一个成员函数：将单链表中数据元素就地排序。所谓就地排序是指在排序过程中利用原有的结点,不额外增加新结点。", "（6）编写一个成员函数：在单链表有序的前提下,插入一个数据元素x,要求插入后的单链表中数据元素从小到大有序排列。", "将1按要求编写完成后，编写代码进行测试。"]], "Tag": "程序设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201809/22/1537627741_760793.gif)", "Konwledge_Point": "数据的输出", "Question": ["[日期处理] 输入与输出问题，无解", ["题目描述：", "\n\n", "有两个日期，求两个日期之间的天数，如果两个日期是连续的我们规定他们之间的天数为两天。", "\n\n", "输入：", "\n\n", "有多组数据，每组数据有两行，分别表示两个日期，形式为YYYYMMDD", "\n\n", "输出：", "\n\n", "每组数据输出一行，即日期差值", "\n\n", "样例输入：", "\n\n", "20130101 ", "\n20130105", "\n\n", "样例输出：", "\n\n", "5", "\n\n", "本文来自 xsj_blog 的CSDN 博客 ，全文地址请点击：", "https://blog.csdn.net/xsj_blog/article/details/51988328?utm_source=copy", " ", "\n\n", " #include <iostream>\n#include <string>\n#include <cmath>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::string;\n\nint month[13][2] = {{0, 0}, {31, 31}, {28, 29}, {31, 31}, {30, 30}, {31, 31}, {30, 30}, {31, 31}, {31, 31}, {30, 30}, {31, 31}, {31, 31}};\n\nbool comp(int y1, int m1, int d1, int y2, int m2, int d2)\n{\n    if (y1 != y2)\n    {\n        return y1 > y2;\n    }\n    else if (y1 == y2 && m1 != m2)\n    {\n        return m1 > m2;\n    }\n    else if (y1 == y2 && m1 == m2 && d1 != d2)\n    {\n        return d1 > d2;\n    }\n}\n\nint ryear(int year)\n{\n    if ( (year % 4 == 0 && year % 100 == 0) || year % 400 == 0)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n\nint main()\n{\n    string s1, s2;\n    cin >> s1 >> s2;\n\n    int y1, m1, d1, y2, m2, d2;\n    y1 = (s1[0] - '0') * 1000 + (s1[1] - '0') * 100 + (s1[2] - '0') * 10 + (s1[3] - '0');   \n    m1 = (s1[4] - '0') * 10 + (s1[5] - '0');\n    d1 = (s1[6] - '0') * 10 + s1[7] - '0';\n\n    y2 = (s2[0] - '0') * 1000 + (s2[1] - '0') * 100 + (s2[2] - '0') * 10 + (s2[3] - '0');   \n    m2 = (s2[4] - '0') * 10 + (s2[5] - '0');\n    d2 = (s2[6] - '0') * 10 + (s2[7] - '0');\n\n    bool ifcomp = false; //if y1 > y2\n    ifcomp = comp(y1, m1, d1, y2, m2, d2);\n    int tempy = 0;\n    int tempm = 0;\n    int tempd = 0;\n    if (ifcomp)\n    {\n        tempy = y1;\n        y1 = y2;\n        y2 = tempy;\n        tempm = m1;\n        m1 = m2;\n        m2 = tempm;\n        y2 = tempy;\n        tempd = d1;\n        d1 = d2;\n        d2 = tempd;\n    }//y1, m1, d1 < y2, m2, d2\n\n    int ty, tm, td = 0;\n    int ry = 0;\n    int total = 1;\n\n    while (y1 < y2 || m1 < m2 || d1 < d2)\n    {\n        d1++;\n        if (d1 == month[m1][ryear(y1)] + 1)\n        {\n            m1++;\n            d1 = 1;\n        }\n\n        if (m1 == 13)\n        {\n            y1++;\n            m1 = 1;\n        }\n        total++;\n    }\n    cout << total;\n}\n", "\n\n", "又遇到了输入输出问题，这道题只有当我输入20130101 20130105才有输出结果，输入其他，都没有输出结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You could just use &lt;code&gt;-&amp;gt;fetchAll()&lt;/code&gt; method with this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$result = $stmt-&amp;gt;fetchAll(PDO::FETCH_ASSOC); // returns all rows\nforeach($result as $key =&amp;gt; $row) {\n    echo $row['id'] . ' - ' . $row['column_name'] . '&amp;lt;br/&amp;gt;';\n                     // ^ name of the column, this returns a multi dimensional\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Sidenote: Its still an array inside, so you need to access the index of that copy inside the foreach.&lt;/p&gt;\n\n&lt;p&gt;Or also like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;while($row = $result-&amp;gt;fetch(PDO::FETCH_ASSOC)) {\n    echo $row['id'] . ' - ' . $row['col1'] . '&amp;lt;br/&amp;gt;';\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何从php中获取数据库中的所有数据", ["\n\n", "Here is my code:", "\n\n", "<?php\n\n/*** mysql hostname ***/\n$hostname = 'localhost';\n\n/*** mysql username ***/\n$username = 'root';\n\n/*** mysql password ***/\n$password = '';\n\ntry {\n    $dbh = new PDO(\"mysql:host=$hostname;dbname=sample\", $username, $password);\n    /*** echo a message saying we have connected ***/\n    echo 'Connected to database <br />';\n\n$sql = \"SELECT * FROM sampletable\";\n\n$stmt = $dbh->query($sql);\n$result = $stmt->fetch(PDO::FETCH_ASSOC);\n\nforeach($result as $key =>$val){\n\necho $key. '-' .$val.'<br />';\n\n}\n$dbh = null;\n\n    }\ncatch(PDOException $e)\n    {\n    echo $e->getMessage();\n    }\n?>\n", "\n\n", "Now i am learning php, I want know about pdo connection to insert,update fetch data from database. I referred this link ", "http://www.phpro.org/tutorials/Introduction-to-PHP-PDO.html#7.1", " ", "\n\n", "Now i got first column value.. May i know how to fetch all the records from database?", "\n\n", "Thanks in advance. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/85517834584614.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;你下面这里需要判断下p!&amp;#61;NULL&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["多项式输出的函数 为什么运行错误", ["给定单链表的类型如下", "typedef struct Node", "{", "    int  coef;    //系数(coefficient)", "    int  exp;    //指数(exponent)", "    struct Node *next;", "} PolyNode, *PolyList;", "请设计void printList(PolyList L)函数。", "该函数输出多项式，已经知道L指向的链表是带头节点的单链表，链表中的每个数据", "节点表示多项式的一项，数据节点已经按指数从大到小排序。", "输出多项式请注意格式，比如", "-x^3+4x^2-x+1", "x^5+x-1", "-1", "1", "空多项式输出", "0", "\n", "void printList(PolyList L)\n{\n    PolyList p;\n    ", "p", "=L->", "next;\n    ", "if", "(p==NULL){\n        puts(", "\"0\"", ");\n    }\n    ", "while", "(p!=NULL){\n        ", "if", "(p->", "coef==", "0", "){\n            ", "p", "=p->", "next;\n        }\n        ", "else", " ", "if", "(p->", "coef!=", "0", "){\n            ", "if", "(p->", "coef==", "1", "){\n                ", "if", "(p->", "exp", "==", "0", "){\n                    ", "printf", "(\"%d\",p->", "coef);\n                }\n                ", "if", "(p->", "exp", "==", "1", "){\n                    printf(", "\"x\"", ");\n                }\n                ", "else", "{\n                    ", "printf", "(\"x^%d\",p->", "exp", ");\n                } \n            }\n            ", "else", " ", "if", "(p->", "coef==-", "1", "){\n                ", "if", "(p->", "exp", "==", "0", "){\n                    ", "printf", "(\"%d\",p->", "coef);\n                }\n                ", "if", "(p->", "exp", "==", "1", "){\n                    printf(", "\"-x\"", ");\n                }\n                ", "else", "{\n                    ", "printf", "(\"-x^%d\",p->", "exp", ");\n                } \n            }\n            ", "else", "{\n                ", "printf", "(\"%dx^%d\",p->", "coef", ",p->", "exp", ");\n            }\n            ", "p", "=p->", "next;\n        }\n        ", "if", "(p->", "next", "&&p->", "next", "->", "coef>", "0", "){\n            printf(", "\"+\"", ");\n        }\n    }\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;粘贴的时候选择粘贴文本&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["MATLAB输出问题，", ["不小心点了哪里，结果MATLAB复制输出，粘贴时输出的内容为图片，怎么改回文字啊"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;shuju&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; ajax &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;XMLHttpRequest&lt;/span&gt;()\najax.&lt;span class=\"hljs-title function_\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;http://127.0.0.1:5000&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//建立一个通信方法是get&amp;#xff0c;请求地址&amp;#xff0c;异步请求&lt;/span&gt;\najax.&lt;span class=\"hljs-title function_\"&gt;send&lt;/span&gt;()\najax.&lt;span class=\"hljs-property\"&gt;onreadystatechange&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-function\"&gt;()&amp;#61;&amp;gt;&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ajax.&lt;span class=\"hljs-property\"&gt;readyState&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;amp;&amp;amp; ajax.&lt;span class=\"hljs-property\"&gt;status&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;){\n                &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(ajax.&lt;span class=\"hljs-property\"&gt;response&lt;/span&gt;)\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-variable constant_\"&gt;JSON&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;parse&lt;/span&gt;(ajax.&lt;span class=\"hljs-property\"&gt;response&lt;/span&gt;))\n                &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;xy&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-property\"&gt;innerText&lt;/span&gt; &amp;#61; ajax.&lt;span class=\"hljs-property\"&gt;response&lt;/span&gt;\n\n        }\n}\n\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;xy&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["JS如何把从接口获取的数据赋值给一个变量", ["我用flask写了一个接口，", "\n", "from", " flask ", "import", " Flask\n", "import", " ", "json", "\n", "from", " flask_cors ", "import", " CORS\nxdata=[\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\nydata=[", "5", ", ", "20", ", ", "36", ", ", "10", ", ", "10", ", ", "20", "]\nx=", "'x轴'", "\ny=", "'y轴'", "\nshuju=[{x:xdata},{y:ydata}]\napp = Flask(__name__)\nCORS(app, supports_credentials=", "True", ")\n@app.route(", "'/'", ")\ndef sss():\n    x=", "json", ".dumps(shuju,ensure_ascii=", "False", ")\n    ", "return", "(x)\n    #", "return", "'Hello World!'", "\n\n", "if", " __name__ == ", "'__main__'", ":\n    app.run()\n\n\n\n", "\n", "并用JS调取了这个端口获得了传输的数据，接下来我想将获得的数据赋值给一个变量，以提供给echarts画图用。", "\n", "<", "html", ">", "\n", "<", "head", ">", "\n", "<", "title", ">", "shuju", "</", "title", ">", "\n", "<", "script", ">", "\n", "var", " ajax = ", "new", " ", "XMLHttpRequest", "()\najax.", "open", "(", "'GET'", ",", "'http://127.0.0.1:5000'", ",", "true", ") ", "//建立一个通信方法是get，请求地址，异步请求", "\najax.", "send", "()\najax.", "onreadystatechange", "=", "()=>", "{\n        ", "if", "(ajax.", "readyState", " === ", "4", " && ajax.", "status", " === ", "200", "){\n                ", "console", ".", "log", "(ajax.", "response", ")\n    ", "console", ".", "log", "(", "JSON", ".", "parse", "(ajax.", "response", "))\n        }  \n}\n", "</", "script", ">", "\n", "</", "head", ">", "\n", "<", "body", ">", "\n        var xy=ajax.response\n        reyurn (xy)\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n", "\n", "但是它并没有输出变量，只是输出了代码。如下图：", "\n", "望各位有识之士不吝赐教。"]], "Tag": "程序设计"}
{"Answer": "前面5个字节FA AF 00 08 FF是固定的么？那么跳过\r\nAddContent(new ASCIIEncoding().GetString(data.Skip(5).ToArray()));", "Konwledge_Point": "数据的输出", "Question": ["C#连接串口接受数据显示问题。很急。", ["C#串口上位机工具，接收到发过来的一串16进制数据，格式如下：", "\nFA AF 00 08 FF 31 32 33 34 FA AF 00 07 FF 35 36 后面可能还会有FA AF开头的", "\n\n", "这串数据分析如下：识别FA AF为固定开始的头，紧接着后面的两个00 08为第一个整个字符串实际长度(FA AF 00 08 01 31 32 33 34)，FF为固定的数据，不用管。", "\n\n", "FF后面对应的数据为实际需要输出显示的数据(31 32 33 34),长度为4，然后这4个数据以正常的ASCII码显示出来。", "\n\n", "第一个(FA AF 00 08 FF 31 32 33 34)实际需要的数据31 32 33 34对应的ASCII码为1234", "\n\n", "第二个(FA AF 00 07 FF 35 36)实际需要的数据35 36对应的ASCII码为56", "\n\n", "所以串口最终输出在textbox中显示为123456", "\n\n", "以下代码是接受数据并显示在textbox的代码。怎么修改能达到以上的要求？", "\n\n", "private void Com_DataReceived(object sender, SerialDataReceivedEventArgs e)\n        {\n            byte[] ReDatas = new byte[ComDevice.BytesToRead];\n            ComDevice.Read(ReDatas, 0, ReDatas.Length);//读取数据\n            this.AddData(ReDatas);//输出数据\n        }\n\n        /// <summary>\n        /// 添加数据\n        /// </summary>\n        /// <param name=\"data\">字节数组</param>\n        public void AddData(byte[] data)\n        {\n            if (rbtnHex.Checked)\n            {\n                StringBuilder sb = new StringBuilder();\n                for (int i = 0; i < data.Length; i++)\n                {\n                    sb.AppendFormat(\"{0:x2}\" + \" \", data[i]);\n                }\n                AddContent(sb.ToString().ToUpper());\n            }\n            else if (rbtnASCII.Checked)\n            {\n                AddContent(new ASCIIEncoding().GetString(data));\n            }\n            else if (rbtnUTF8.Checked)\n            {\n                AddContent(new UTF8Encoding().GetString(data));\n            }\n            else if (rbtnUnicode.Checked)\n            {\n                AddContent(new UnicodeEncoding().GetString(data));\n            }\n            else\n            {}\n\n            lblRevCount.Invoke(new MethodInvoker(delegate\n            {\n                lblRevCount.Text = (int.Parse(lblRevCount.Text) + data.Length).ToString();\n            }));\n        }\n\n\n        /// <summary>\n        /// 输入到显示区域\n        /// </summary>\n        /// <param name=\"content\"></param>\n        private void AddContent(string content)\n        {\n            this.BeginInvoke(new MethodInvoker(delegate\n            {\n                if(chkAutoLine.Checked && txtShowData.Text.Length>0)\n                {\n                    txtShowData.AppendText(\"\\r\\n\");\n                }\n                txtShowData.AppendText(content);\n            }));\n        }\n"]], "Tag": "程序设计"}
{"Answer": "两种写法给你：\r\n一:直接在UI线程里面死循环（就是你这种写法：加上Application.DoEvents()这句）\r\nwhile (LD)\r\n        {\r\n            Thread.Sleep(100);\r\n\r\n            fuck1(pid, address, out m, size);\r\n\r\n            try\r\n            {\r\n                textBox7.Text = m.ToString();\r\n                Console.WriteLine(m);\r\n                label8.Text = (times += 1).ToString();\r\n            }\r\n            catch (Exception e)\r\n            {\r\n\r\n            }\r\n\t\t\t\t\t\tApplication.DoEvents();\r\n        }\r\n第二种写法（启动另外的线程去做循环，然后使用invoke()方法显示UI）\r\nThread td = new Thread(()=&gt;{\r\n\twhile (LD)\r\n        {\r\n            Thread.Sleep(100);\r\n\r\n            fuck1(pid, address, out m, size);\r\n\r\n            try\r\n            {\r\n\t\t\t\t\t\t\tthis.Invoke(new Action(()=&gt;{\r\n                textBox7.Text = m.ToString();\r\n                Console.WriteLine(m);\r\n                label8.Text = (times += 1).ToString();\r\n\t\t\t\t\t\t\t\t}));\r\n            }\r\n            catch (Exception e)\r\n            {\r\n\r\n            }\r\n        }\r\n})\r\ntd.IsBackground = true;\r\ntd.Start();\r\n\r\n//以上两种方法都可以，然后解释一下为什么你那样不行，因为你再UI线程里面使用了死循环而且调用了Sleep(）函数，你要理解Sleep()函数会使当前线程挂起，不接受任何消息，所以更新界面的消息自然不会被处理，所以你看到输出值不变，其实这个值一直在变，只不过你看不到罢了，另外你这样写出来的Form肯定是特别的“卡”，拖都拖不动，点上面的任何控件都不会有响应\r\n，然后说下加Application.DoEvents()就可以的原因，是因为调用这个函数后即使你挂起UI线程，但是窗体仍然会处理响应各种消息\r\n第二种方法就是把循环写到另外一个线程，然后通过Invoke()方法回调显示结果，所以此时UI线程不会假死不会被挂起，所以可以正常更新界面", "Konwledge_Point": "数据的输出", "Question": ["通过线程循环读取数据，数据发生改变后，输出不变。", ["[DllImport(\"1.dll\", EntryPoint = \"fuck1\", CharSet = CharSet.Auto)]", "\n public static extern void fuck1(Int64 pid, Int64 address, out byte buf, int size);", "\n\n", "private void xc1()", "\n        {", "\n            Int64 pid = int.Parse(textBox2.Text);", "\n            Int64 address = Convert.ToInt64(textBox4.Text);", "\n            byte m;", "\n            int size = int.Parse(textBox6.Text);", "\n            LD = true;", "\n            times = 0;", "\n\n", "        while (LD)\n        {\n            Thread.Sleep(100);\n\n            fuck1(pid, address, out m, size);\n\n            try\n            {\n                textBox7.Text = m.ToString();\n                Console.WriteLine(m);\n                label8.Text = (times += 1).ToString();\n            }\n            catch (Exception e)\n            {\n\n            }\n        }\n    }\n我通过 fuck1函数读取数据。循环读取数据的时候，如果数据改变输出的数据不改变。\n但是不用循环，单词读取的时候数据改变以后再读取，就能读取到正确的值，请问一下为什么？\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;就是vue里面的模板不知道这个值变化了&amp;#xff0c;不要把你的this.$store.state.selectData放在computed里面&amp;#xff0c;之后访问comouted里面的值&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Vuex使用mutations方法无法将数据给state", ["\n", "\n", "使用Vuex调用接口获取数据，数据得到了，但是不知道为什么mutations里面的store.selectDate = data;无法将数据给state的selectData，Vuex文件的 console.log都可以将数据输出，也就是数据得到了，但是其他地方用this.$store.state.selectData无法得到数据，如果给selectDate设置默认值，this.$store.state.selectData可以拿到默认值，表示this.$store.state.selectData没问题，就是无法将获得的数据给state的selectData。不清楚为什么。"]], "Tag": "程序设计"}
{"Answer": "去掉root的配置就好了", "Konwledge_Point": "数据的输出", "Question": ["log4j输出日志了两遍，求高手帮忙看看", ["我的项目是用log4j.xml配置的，配置了一个root，然后又配置了一个logger，nane=test，root和logger输出到不同的日志文件中，使用Logger.getLogger(\"test\").info(\"test\")。结果两个日志文件都输出了日志，我的期望是只在test那个logger里输出，怎么做才能实现呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf里面逗号去掉&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言按要求格式读入数据（求解答", ["c语言程序设计，为什么第二组和第三组输出数据就成1 0 0了呀，求解答", "\n"]], "Tag": "程序设计"}
{"Answer": "如果文件数据是有规则的，比如使用逗号分割的 CVS 数据，那么直接读取数据到内存中，使用数值数组的排序实现就可以了。\r\n如果没有规则，需要清洗无效数据，收集有小数据后再排序。", "Konwledge_Point": "数据的输出", "Question": ["Java语言读取文本文件，将文本文件里的数据按照从小到大的顺序排列再输出", ["Java语言读取文本文件，将文本文件里的数据按照从小到大的顺序排列再输出"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这种输出顺序其实就是用到数据结构中&amp;#xff0c;对树的广度优先遍历算法&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;// 广度优先遍历&lt;/span&gt;\nfunction broadErgodic(treeArr) {\n    const arr &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n    while(treeArr&lt;span class=\"hljs-selector-class\"&gt;.length&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        const node &amp;#61; treeArr&lt;span class=\"hljs-selector-class\"&gt;.shift&lt;/span&gt;()\n        arr&lt;span class=\"hljs-selector-class\"&gt;.push&lt;/span&gt;(node.name)\n        node&lt;span class=\"hljs-selector-class\"&gt;.children&lt;/span&gt; &amp;amp;&amp;amp; treeArr&lt;span class=\"hljs-selector-class\"&gt;.push&lt;/span&gt;(..&lt;span class=\"hljs-selector-class\"&gt;.node&lt;/span&gt;.children)\n    }\n    return arr\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["js如何输出数组元素值", ["js如何将下面数组按照下面值输出name", "\n", "['0', '1', '0-1', '1-1', '1-1-1']", "\n", "var", " arr = [\n           {", "id:", "1,name", ":", "'0'", ",", "children", ":[{", "id:", "2,name", ":", "'0-1'", "}]},\n           {", "id:", "3,name", ":", "'1'", ",", "children", ":[{", "id:", "4,name", ":", "'1-1'", ",", "children", ":[{", "id:", "5,name", ":", "'1-1-1'", "}]}]}\n]\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你是想抽象成&amp;#xff1a;一个不重复的未知序列l1&amp;#xff0c;然后依次确认是否值存在于对照列表l2吧。&lt;br /&gt;否则你的问题毫无意义。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;l1&amp;#61;range(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\nl2&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[3,1,2,6]&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; l2:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; not &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; l1:\n        l2&lt;span class=\"hljs-selector-class\"&gt;.remove&lt;/span&gt;(i)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(l2)&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["怎么让列表中的数字按照自己的“顺序”输出？", ["一 下面一个列表，我想按照 3 2 1 6 顺序输出。但实际程序输出 1 2 3 6。", "for i in range(0, 9):", "    if i == 3:", "        print(3)", "    elif i == 2:", "        print(2)", "    elif i == 1:", "        print(1)", "    elif i == 6:", "        print(6)", "\n", "程序运行结果：", "1", "2", "3", "6", "\n", "我想要达到的结果", "3", "2", "1", "6", "\n", "请我应该怎么操作了？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个3000不是你输入的啊&amp;#xff0c;只是提示信息&amp;#xff0c;程序等着你输入基本工资呢&lt;br /&gt;你再输入3000&amp;#xff0c;然后回车就行了&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["用Java代码求数值后面数据不显示，不知道该怎么修改，有没有人可以解答一下这个问题", ["\n", "代码打了很多次，不知道错在哪里，有没有人可以告诉我一下，最后的数据输出一直没有显示，也是按照别人写的代码去做的，不知带该如何修改"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;红线处&amp;#xff0c; 就是字符串  “你好”  按utf8 编码后的二进制数据&lt;br /&gt;encode&amp;#xff08;&amp;#39;utf-8&amp;#39;&amp;#xff09; 按utf8编码规则对字符串进行编码&lt;/p&gt;\n&lt;p&gt;decode&amp;#xff08;&amp;#39;utf-8&amp;#39;&amp;#xff09;  将utf8编码格式的内容&amp;#xff0c;解码&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["如果要操作二进制数据，就需要使用BytesIO，什么意思？为什么bytesIO输出的结果我不明白？划红线处", ["为什么bytesIO输出的结果我看不懂？划红线处  b\\xe6\\x82\\xa8\\xe5\\xbd", "encode（utf-8），decode（utf-8）什么意思？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;student&amp;#61;{}\nfor i in range(5):\n    name&amp;#61;input(&amp;#39;姓名&amp;#39;)\n    values&amp;#61;eval(input(&amp;#39;年龄,身高、体重&amp;#39;))\n    student[name]&amp;#61;values\nprint(str(student))&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;示例是合并进字典&amp;#xff0c;不是列表&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["五组数据怎么合并进列表然后输出呢", ["五组数据怎么合并进列表然后输出呢"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\ndef print_pattern(n, tup):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(n):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i % 2 &amp;#61;&amp;#61; 1:\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(n):\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j % 2 &amp;#61;&amp;#61; 0:\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(tup[n], &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(n):\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j % 2 &amp;#61;&amp;#61; 0:\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(tup[n], &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n                    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n\n\na_tuple &amp;#61; (&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#64;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;amp;;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;)\nprint_pattern(5, a_tuple)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["怎么用嵌套循环输出一组数据且行列长度都一样", ["a_tuple = ('", "@', ", "'#', '$', '%', '&;', '*', '+', '=', '<', '>')", "print_pattern(5, a_tuple)", "输出", "如果指数是偶数的话，那么行以0开始"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把char a[80],b[80];改成char a[80],b[81];&lt;br /&gt;在它后面加上memset(b,&amp;#39;\\0&amp;#39;,sizeof(b));&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["字符型数组的输出结果后面多一个方框的原因", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "我的代码", "c++", "\n", "#include", "#include", "using namespace std;", "int main()", "{", "    char a[80],b[80];", "    int n;", "    cin.getline(a,80,'\\n');", "    n=strlen(a);", "    for(int i=0; i<=n; i++)", "    {", "        if((a[i]>='A')&&(a[i]<'Y'))", "            b[i]=a[i]+2;", "        if((a[i]>='Y')&&(a[i]<='Z'))", "            b[i]=a[i]+2-26;", "        if((a[i]>='a')&&(a[i]<'y'))", "            b[i]=a[i]+2;", "        else if((a[i]>='y')&&(a[i]<'z'))", "            a[i]=a[i]+2-26;", "    }", "    cout<<b<<endl;", "    cout<<a;", "    return 0;", "}", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n"]], "Tag": "程序设计"}
{"Answer": "sql连接数据库后 紧跟设置编码格式为utf-8", "Konwledge_Point": "数据的输出", "Question": ["网页输出乱码  数据库数据正常", ["数据库里的数据是中文的 php查询数据库并在网页输出时出现乱码 "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不需要每隔24行数据单独保存到一个文件&amp;#xff0c;&lt;br /&gt;只需要用列表切片每隔24行切成为一个列表,把切片出来的列表作为一个元素添加到一个li2列表中.&lt;br /&gt;用random.shuffle(li2)随机打乱li2,再合并写到一个新的csv数据表即可&lt;/p&gt;\n&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; random\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; csv\n\n&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;data.csv&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;,newline&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; fileObj:\n    li &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(csv.reader(fileObj))\nn &amp;#61; &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\nli2 &amp;#61; []\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(li),n):\n    li2.append(li[i:i&amp;#43;n])\nrandom.shuffle(li2)\n&lt;span class=\"hljs-comment\"&gt;# print(*li2,sep&amp;#61;&amp;#39;\\n&amp;#39;)&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;data2.csv&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;,newline&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; fileObj:\n    wr &amp;#61; csv.writer(fileObj)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; li2:\n        wr.writerows(v)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "数据的输出", "Question": ["怎样在Python csv文件中每24行提取一次数据并保存到一个单独的csv文件中？", ["算法目的", "\n", "有一个csv文件，是以天数为单位，24h的空气质量数据。我想带着每天24h的数据以天为单位打乱整个csv，一共有1825天。", "Python新上路，真诚求思路！", "目前想到的办法是每隔24行提取一次数据并单独保存到一个文件，这样就是一共提取出来1825个csv，然后把这些csv再随机（不知道是否能办到）组合起来生成一个新的csv数据表，但是不咋会怎么循环提取每24行的数据，以及后续怎么随机组合", "或者有uu能给出新的思路？", "\n", "这是原始csv截图", "\n", "\n", "求友友们指点！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第10行&amp;#xff1a; scanf(&amp;#34;%c %d&amp;#34;, &amp;amp;ch, &amp;amp;n); 修改为&amp;#xff1a;scanf(&amp;#34; %c %d&amp;#34;, &amp;amp;ch, &amp;amp;n);  即可&amp;#xff0c;在“%c %d“格式控制符%c前增加一个空格如&amp;#xff1a;” %c %d“ 。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么输出不了第二个棱形", ["输入T，表示测试数据的组数，每组输入一个字符和一个整数，对应每组输入，输出一个边长为n，由字符ch组成的棱形"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;AOP是对方法做了功能加强&amp;#xff0c;相当于用代理的方式重写了原有方法&amp;#xff0c;在调用原有方法时就会执行这里的方法&amp;#xff0c;如果原有方法有返回值&amp;#xff0c;那么这里对应方法需要设置返回值&amp;#xff0c;如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Around(&amp;#34;pt()&amp;#34;)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Object &lt;span class=\"hljs-title function_\"&gt;runSpeed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(ProceedingJoinPoint pjp)&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;throws&lt;/span&gt; Throwable {\n        &lt;span class=\"hljs-comment\"&gt;// 记录程序当前执行&amp;#xff08;开始时间&amp;#xff09;&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;startTime&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; System.currentTimeMillis();\n        &lt;span class=\"hljs-comment\"&gt;// 业务执行方法&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;Object&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;ret&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            ret &amp;#61; pjp.proceed();\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 记录程序当前执行时间&amp;#xff08;结束时间&amp;#xff09;&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;endTime&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; System.currentTimeMillis();\n        &lt;span class=\"hljs-comment\"&gt;// 计算时间差&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;totalTime&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; endTime - startTime;\n        &lt;span class=\"hljs-comment\"&gt;// 输出信息&lt;/span&gt;\n        System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;执行万次消耗时间&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; totalTime &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;ms&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ret;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以查看proceed()方法源码可以看到&amp;#xff0c;其有返回值是Object类型&amp;#xff0c;所以这里使用Object类型&amp;#xff0c;当调用加强的方法时&amp;#xff0c;拿到的结果就是这里返回的ret&amp;#xff0c;是只有一次的。要想打印输出每次原有方法的返回值&amp;#xff0c;在循环里边打印就行了。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["用AOP做功能增强怎么让集合循环输出一万次？为什么接收返回值再返回去只输出了一次？", ["\n", "让集合输出一万次的话代码怎么改？为什么接收数据再返回去也只能输出一次"]], "Tag": "程序设计"}
{"Answer": "1.程序处理一下，获取到去年同期下一个月的日期，然后当做参数传入SQL语句中执行。这个就不写代码了\r\n2.使用mysql的日期函数操作  date_sub\r\n\r\n\r\n```\r\nselect date_sub(now(), interval 1 year); -- 去年同期日期\r\nselect date_sub(now(), interval 12 month); -- 去年同期日期\r\nselect date_sub(now(), interval 11 month);  -- 去年同期下月日期\r\nselect date_format(date_sub(now(), interval 11 month), '%Y%m'); -- 格式化一下\r\n-- 输出结果\r\n-- 2018-03-12 16:57:34\r\n-- 2018-03-12 16:57:34\r\n-- 2018-04-12 16:57:34\r\n-- 201804\r\n```", "Konwledge_Point": "数据的输出", "Question": ["mysql查询去年同期下一个月的数据", ["比如今年当前月份是3月份，", "\n我现在要查询去年4月份的数据，应该怎么写？"]], "Tag": "程序设计"}
{"Answer": "[quote]看看API 好像是 通过 writeShort 方法将两个字节写入输出流，表示后跟的字节数。 但是 还是不明白啊 后跟字节数是怎么回事?[/quote]\r\n\r\n首先DataOutputStream 可以写出 字符串、数字等各种类型。这些内容反映到底层都是10的二进制。如何区分字符串和数字的边界？\r\n\r\n你可以使用writeUTF的方式，写入字符串，但是，这个字符串到底有多长？必须有个长度的标识。", "Konwledge_Point": "数据的输出", "Question": ["新手学java io 输入数据和输出数据不一致?", ["代码:新手学IO", "\n[code=\"java\"]", "\n\n", "package woca;", "\n\n", "import java.io.BufferedInputStream;", "\nimport java.io.BufferedOutputStream;", "\nimport java.io.DataInputStream;", "\nimport java.io.DataOutputStream;", "\nimport java.io.FileInputStream;", "\nimport java.io.FileOutputStream;", "\nimport java.io.IOException;", "\nimport java.io.InputStream;", "\n\n", "public class FilterOutputTester {", "\n    public static void main(String[] args) throws IOException {", "\n        FileOutputStream out1 = new FileOutputStream(\"D:\\test.txt\");", "\n        BufferedOutputStream out2 = new BufferedOutputStream(out1, 256);", "\n        DataOutputStream out = new DataOutputStream(out2);", "\n        out.writeUTF(\"你好啊\");", "\n        out.writeUTF(\"再见\");", "\n        out.close();", "\n\n", "    InputStream in1 = new FileInputStream(\"D:\\\\test.txt\");\n    BufferedInputStream in2 = new BufferedInputStream(in1, 3);\n    DataInputStream in = new DataInputStream(in2);\n    System.out.println(in.readUTF());\n    in1.close();\n}\n", "\n\n", "}", "\n[/code]", "\n大家也能看到我往 D盘test里边先写入 了 字符\"你好啊\"又写入了\"再见\" 也写入进去了 但是读取出来的却只有[color=red]你好啊[/color]这是怎么回事啊?", "\n 谢谢了 ! 我实在是想不到答案了!"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;int(input(&amp;#34;请输入一个正整数:&amp;#34;))\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1, n &amp;#43; 1):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i %&lt;span class=\"hljs-attribute\"&gt;2&lt;/span&gt;&amp;#61;&amp;#61;0:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;有帮助的话&amp;#xff0c;请点采纳该答案~&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "数据的输出", "Question": ["怎样输出1到n之间的偶数，还有英文逗号隔开", ["n=int(input(\"请输入一个正整数:\"))", "for i in range(1，n):", "      if i %2==0:", "            print(i,end=\"\")"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-cpp\"&gt;cout&amp;lt;&amp;lt;p&amp;lt;&amp;lt;endl&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这里输出的是p&amp;#xff0c;当然是指针啦&lt;br /&gt;数据是&lt;code class=\"language-javascript\"&gt;p-&amp;gt;data&lt;/code&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么会输出地址？我想要具体数值", ["线性表L采用链式存储结构linklist，实现线性表删除元素操作：", "【输入形式】第1行：整型数据n，表示线性表的长度；", "\n", "       第", "2", "行：", "n", "个整型数据，表示线性表的", "n", "个元素；\n\n       第", "3", "行：整型数据i，表示删除元素的位序；\n", "\n", "【输出形式】", "\n", "       执行正确：\n", "\n", "       第1行：输出被删除元素；\n", "\n", "       第2行：输出线性表数据元素；\n", "\n", "       第3行：输出线性表长度；\n", "\n", "       执行失败：输出\"error\"；             ", "\n", "\n", "\n", "#", "include", "<iostream>", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<malloc.h>", "\n", "using", " ", "namespace", " std;\n", "#", "define", " ", "error", " 0", "\n", "#", "define", " ok 1", "\n", "#", "define", "    overflow    -2", "\n", "typedef", " ", "int", " status;\n", "typedef", " ", "int", " elemtype;\n", "typedef", " ", "struct", " ", "lnode", "{\n    elemtype data;", "//数据域 ", "\n    ", "struct", " ", "lnode", " *next;", "//指针域 ", "\n}lnode, *linklist;\n", "//初始化链表", "\n", "status ", "initlist", "(linklist & l)", " ", "{\n    lnode * temp;\n    temp = (lnode* )", "malloc", "(", "sizeof", "(lnode));\n    ", "if", "(!temp) ", "exit", "(overflow);\n    l = temp;\n    l->next =", "NULL", ";\n    ", "return", " ok;\n}\n", "//输入（尾部插入）链表", "\n", "status ", "inputlist", "(linklist & l)", " ", "{\n   lnode * curPtr, * rearPtr;\n   ", "int", " n;\n   cin>>n;\n   rearPtr = l;  ", "//初始时头结点为尾节点,rearPtr指向尾巴节点", "\n    ", "for", " (", "int", " i = ", "1", ";i <= n;i ++){  ", "//每次循环都开辟一个新节点，并把新节点拼到尾节点后", "\n        curPtr = (lnode*)", "malloc", "(", "sizeof", "(lnode));", "//生成新结点", "\n        ", "if", "(!curPtr) ", "exit", "(overflow);\n        ", "scanf", "(", "\" %d\"", ",&curPtr->data);", "//输入元素值", "\n        curPtr->next = ", "NULL", ";  ", "//最后一个节点的next赋空", "\n        rearPtr->next = curPtr;\n        rearPtr = curPtr;\n    }\n    ", "return", " ok;\n}\n", "//输出 ", "\n", "status ", "listtraverse", "(linklist l)", "\n", "{\n    linklist p=l;\n    ", "while", "(p){\n        ", "printf", "(", "\"%d\"", ",p);\n        p=p->next;\n    }\n}\n", "//销毁链表", "\n", "void", " ", "destroylist", "(linklist &l)", " ", "{\n    linklist p = l;\n    ", "while", " (p)\n    {\n        l = l->next;\n        ", "delete", "(p);\n        p = l;\n    }\n}\n\n", "//按位序删除（带头结点）", "\n", "status ", "listdelete", "(linklist l,", "int", " i,elemtype &e)", "\n", "{\n    ", "if", "(i<", "1", ")\n        ", "return", " ", "false", ";\n    lnode *p;  ", "//指针p指向当前扫描到的结点", "\n    ", "int", " j=", "0", ";   ", "//当前p指向的第几个结点", "\n    p=l;       ", "//L指向头节点，头结点是第0个结点（不存数据）", "\n    ", "while", "(p!=", "NULL", " && j<i", "-1", ")  ", "//循环找到第i-1个结点", "\n    {\n        p=p->next;\n        j++;\n    }\n    ", "if", "(p==", "NULL", ")      ", "//i值不合法", "\n        ", "return", " ", "false", ";\n    ", "if", "(p->next==", "NULL", ")  ", "//第i-1结点之后已无其他结点", "\n        ", "return", " ", "false", ";\n    lnode *q=p->next;   ", "//令q指向被删除的结点", "\n    e=q->data;          ", "//用e返回元素值", "\n    p->next = q->next;  ", "//将*q结点从链中“断开”", "\n    ", "free", "(q);            ", "//释放结点的存储空间", "\n    ", "return", " ", "true", ";        ", "//删除成功", "\n}\n\n\n\n", "main", "()\n{ \n  linklist l;", "int", " i;elemtype e;\n  ", "initlist", "(l);\n  ", "inputlist", "(l);\n  ", "scanf", "(", "\"%d\"", ",&i);\n  linklist p = l;\n  ", "if", "(", "listdelete", "(l,i,e)) \n    { ", "printf", "(", "\"%d\\n\"", ",e);\n      ", "//listtraverse(l);", "\n      ", "while", "(p){\n        ", "//printf(\"%d\",p);", "\n        cout<<p<<endl;\n        p=p->next;\n     }\n    }\n  ", "else", "  ", "printf", "(", "\"error\"", ");\n  ", "destroylist", "(l);\n  ", "return", " ", "0", ";\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/248243020356194.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* s, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, index &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        c &amp;#61; s[i];\n        index &amp;#61; i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s[j] &amp;lt; c) {\n                index &amp;#61; j;\n                c &amp;#61; s[j];\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (index !&amp;#61; i) {\n            c &amp;#61; s[index];\n            s[index] &amp;#61; s[i];\n            s[i] &amp;#61; c;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(s);\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(s, &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s));\n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["编写程序，输⼊⼀个字符串，然后对字符串的内容（字符）进⾏升序排序，最后输出排序后的新字符串。", ["编写程序，输⼊⼀个字符串，然后对字符串的内容（字符）进⾏升序排序，最后输出排序后的新字符串。", "• 测试⽤例", "• 输⼊：cfa", "• 输出：acf"]], "Tag": "程序设计"}
{"Answer": "C++中越界操作在编译时期是不检测的，只有在运行中才能检测出，你上面的那段代码的确发生了越界，但并没有超出该进程中的内存地址空间，所以不会报错。最好不要这样操作，因为不同编译器对程序的优化方式不一样，同时，变量内存的分配也跟操作系统有关，你无法确定其是否会超出进程地址空间，而且会影响各变量数据的独立性。\r\n他确实越界了，只是看似正确，他把不属于他的地方给定了数据，这可能在某些时候才出现灾难，而通常这种错误一般很难发现，新版的VS都有strcpy_s来确保安全地复制。\r\nC++程序在编译期和运行期都是不对数据越界做任何检查的.，只有当内存错误了, 才会通知程序崩溃.\r\n楼主的内存操作是在栈中, 并且越界不多, 正好都是自己申请的临时变量内, \r\n虽然程序没有报错, 但是执行效果已经不正确了.  实际上已经是错了.\r\n如果你越界多一点, 比如char d[3]=\"12\";\r\n    strcpy(d,\"这里填充1000个字符\");  // 填充多点, 即让越界更远.\r\n影响了调用栈, 这时程序估计立马闪退或者崩溃.\r\n还有就是new申请的堆空间, 越界一般都会造成崩溃, 提示堆被破坏.", "Konwledge_Point": "数据的输出", "Question": ["为什么数组越界后仍然能够输出hello？", ["#include<stdio.h>\nvoid hello(void)\n{\n    fprintf(stderr,\"hello!\\n\");\n}\nvoid fun(void)\n{\n    void  *buf[10];\n    static int i;\n    for(i=0;i<100;i++)\n    {\n        buf[i]=hello;\n    }\n\n}\nint main(void)\n{\n    int buf[1000];\n    fun();\n    return 0;\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;package main\n\nimport (\n    \"fmt\"\n    \"io\"\n    \"log\"\n    \"os\"\n)\n\nfunc main() {\n    file, err := os.Create(\"myfile\")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    mw := io.MultiWriter(os.Stdout, file)\n    fmt.Fprintln(mw, \"This line will be written to stdout and also to a file\")\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何在Golang的文本文件中捕获fmt.Print输出", ["\n\n", "There are certain ", "fmt.Print", " statements that I want to save into a .txt file. ", "\n\n", "I don't want to store all print statments. Can I do this ?", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n    for (int i = 0; i &lt; n; i++)\r\n    {\r\n        pair&lt;int, int&gt; P;\r\n        cin &gt;&gt; P.first;\r\n        cin &gt;&gt; P.second;\r\n        enter.insert(P); //加上\r\n    }\r\n```", "Konwledge_Point": "数据的输出", "Question": ["C++ map 为什么无法输出", ["输入后没有输出。", "\n\n", "\n\n", "#include <iostream>\n#include <map>\nusing namespace std;\nint main()\n{\n    int n;\n    multimap<int, int> enter;\n    cin >> n;\n    for (int i = 0; i < n; i++)\n    {\n        pair<int, int> P;\n        cin >> P.first;\n        cin >> P.second;\n    }\n    for (auto it = enter.begin(); it != enter.end(); it++)\n        cout << (*it).first << ' ' << (*it).second << endl;\n    return 0;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;经过实际测试&amp;#xff0c;该站对 refer和 origin 没有验证&amp;#xff0c;却验证了 content-type&amp;#xff0c;你在header里加上content-type就可以了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n\n\nimport requests\nimport datetime\nagent &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36&amp;#34;&lt;/span&gt;\nhead&amp;#61;{\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;:agent,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;application/x-www-form-urlencoded; charset&amp;#61;UTF-8&amp;#39;&lt;/span&gt;\n    }\nurl &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;http://www.ccgp-liaoning.gov.cn/portalindex.do?method&amp;#61;getPubInfoList&amp;amp;t_k&amp;#61;null&amp;#34;&lt;/span&gt;\nparams &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;method&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;getPubInfoList&amp;#34;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;t_k&amp;#34;&lt;/span&gt;: None,\n    }\ndata &amp;#61; {  \n    &lt;span class=\"hljs-string\"&gt;&amp;#34;current&amp;#34;&lt;/span&gt;: 1,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;rowCount&amp;#34;&lt;/span&gt;: 10,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;searchPhrase&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;district&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;releaseDateStart&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;releaseDateEnd&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;infoTypeCode&amp;#34;&lt;/span&gt;: 1001,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;year&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;柴油&amp;#34;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;privateOrCity&amp;#34;&lt;/span&gt;: 1,\n    }\ntry:\n    response &amp;#61; requests.post(url, &lt;span class=\"hljs-attribute\"&gt;params&lt;/span&gt;&amp;#61;params, &lt;span class=\"hljs-attribute\"&gt;data&lt;/span&gt;&amp;#61;data, &lt;span class=\"hljs-attribute\"&gt;headers&lt;/span&gt;&amp;#61;head, &lt;span class=\"hljs-attribute\"&gt;timeout&lt;/span&gt;&amp;#61;10)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(response.text)\nexcept:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;err&amp;#39;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["python 爬虫 post请求返回的数据不全，和postman模拟的不一样，关键内容是个空列表", ["本人小白用爬虫爬取辽宁省政府招标信息的代码如下：", "\n", "\n", "import", " requests\n", "import", " datetime\nagent = ", "\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"", "\nhead={\n    ", "\"User-Agent\"", ":agent,\n    }\nurl = ", "\"http://www.ccgp-liaoning.gov.cn/portalindex.do\"", "\n", "params", " = {\n    ", "\"method\"", ": ", "\"getPubInfoList\"", ",\n    ", "\"t_k\"", ": ", "None", ",\n    }\n", "data", " = {  \n    ", "\"current\"", ": ", "1", ",\n    ", "\"rowCount\"", ": ", "10", ",\n    ", "\"searchPhrase\"", ": ", "None", ",\n    ", "\"district\"", ": ", "None", ",\n    ", "\"releaseDateStart\"", ": (datetime.datetime.now() + datetime.timedelta(days=", "-60", ")).strftime(", "'%Y-%m-%d'", "),\n    ", "\"releaseDateEnd\"", ": datetime.datetime.now().strftime(", "'%Y-%m-%d'", "),\n    ", "\"infoTypeCode\"", ": ", "1001", ",\n    ", "\"year\"", ": ", "None", ",\n    ", "\"title\"", ": ", "\"柴油\"", ",\n    ", "\"privateOrCity\"", ": ", "1", ",\n        }\ntry:\n    response = requests.post(url, ", "params", "=", "params", ", ", "data", "=", "data", ", headers=head, timeout=", "10", ")\n    print(response.text)\n", "\n", "返回结果为，rows中没有数据", "\n", "\n{", "\"current\"", ":", "1", ",", "\"rowCount\"", ":", "10", ",", "\"rows\"", ":[]", ",", "\"total\"", ":", "0", "}\n", "\n", "用postman模拟相同参数请返回有数据", "\n", "\n", "\n", "尝试过headers中加入Cookie，然而并没有用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;利用python的基本库datetime模块&amp;#xff0c;把文件中的年建时间变成datetime对象&amp;#xff0c;再用当前时间的datetime对象减去年建时间&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; datetime&lt;/span&gt;\n#获取当前年月日\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;t &amp;#61; datetime.date.today()&lt;/span&gt;\n构造房屋年建的date对象\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;l &amp;#61; datetime.date(year&amp;#61;&lt;span class=\"hljs-number\"&gt;2001&lt;/span&gt;,month&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,day&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;/span&gt;\n#构造10年\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;s &amp;#61; datetime.timedelta(days&amp;#61;&lt;span class=\"hljs-number\"&gt;365&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)&lt;/span&gt;\n判断大于十年&amp;#xff0c;True则输出\n&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;t-i &amp;gt;&amp;#61;s&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何用python统计房屋使用年限，并输出使用年限超过10年的数据", ["用pandas读取csv文件", "读出来后是这样 然后怎么做啊 谢谢🙏"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;a &amp;#61; 0\nb &amp;#61; 1\nf&amp;#61;[]\nfor i in range(50):\n    a, b &amp;#61; b, a &amp;#43; b\n    f.append(a)\nprint(f)\n\n#\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025]&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["N个斐波那契数列的输出，要列表", ["数学中有一个有名的数列，叫做斐波那契数列，它的第n项的值(n >= 0)：", "\n\n", "F(0)=1，F(1)=1，F(n)=F(n-1)+F(n-2) (n >=2)", "\n\n", "（要求：使用一个长度为50的列表存放斐波那契数列的前面50项，将这个列表打印出来）"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt; String[][] arr &amp;#61;{\n                {&amp;#34;张三&amp;#34;,&amp;#34;20200101&amp;#34;},\n                {&amp;#34;李四&amp;#34;,&amp;#34;20200102&amp;#34;},\n                {&amp;#34;王五&amp;#34;,&amp;#34;20200103&amp;#34;}};\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print((i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&amp;#34;\\t&amp;#34;);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(arr[i][j]&amp;#43;&amp;#34;\\t&amp;#34;);\n            }\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n        }\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/264895608846126.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["java二维数组字符串输出", ["设置一个长度6的二位数组，每个元素包含的信息为序号，姓名，学号（年级+班级+尾号两位）。使用for循环生成序号，姓名和学号静态初始化。并使用for each输出所有信息，输出方式如图。（提示，String转int使用Integer.toString(int)方法）"]], "Tag": "程序设计"}
{"Answer": "做个结构体来储存数据，然后可以用双向链表做数据的增删改，http://blog.csdn.net/a29562268/article/details/53932682\n参考双向模版链表 ，直接传入结构体就行了", "Konwledge_Point": "数据的输出", "Question": ["数据结构大作业。航天订票系统", ["\n", "航空客运订票系统（2人）\n航线信息：终点站名、航班号、飞机号、飞行日（星期几）、乘员定额、余票量、已订票的客户名单（包括姓名、订票量、舱位等级1，2或3）以及等候替补的客户名单（包括姓名、所需票量）。\n系统实现如下功能：\n（1） 查询：根据旅客提出的终点站名输出信息（例如航班号、飞机号、星期几飞行，最近一天航班的日期和余票额等）；\n（2） 订票：根据客户提出的要求（航班号、订票数额）查询该航班票额情况，若尚有余票，则为客户办理订票手续；若已满员或剩余票额少于定票额，则需重新询问客户要求。若无票，可登记排队候补或提供相关可选择航班；\n（3） 退票：根据客户提供的情况（日期、航班），为客户办理退票手续，然后查询该航班是否有人排队候补，首先询问排在第一的客户，若所退票额能满足他的要求，则为他办理订票手续，否则依次询问其他排队候补的客户；\n（4） 修改航班信息：当航班信息改变可以修改航班数据文件。", "\n", "大家觉得用什么方式存储比较好呢？老师规定不可以使用数据库，而且使用更多的数据结构知识加分会更多。"]], "Tag": "程序设计"}
{"Answer": "循环结束是5，以下代码你运行下，可以输出\r\n你的代码没有保存，可能运行的是之前的程序\r\n\r\n```\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nint main()\r\n { \r\n int i,a[]={59,90,45,78,20};\r\n cout &lt;&lt; \"及格成绩有：\";\r\n for (i=0;i &lt; 5; i++) {\r\n if (a[i]&gt;=60)\r\n cout&lt;&lt;a[i]&lt;&lt;endl;\r\n } \r\n }\r\n```\r\n在线验证网址\r\nhttps://c.runoob.com/compile/12\r\n你选择c++，把我的代码贴进去，运行，结果如下\r\n及格成绩有：90\r\n78\r\n\r\n# 问题解决的话，请及时采纳，包括之前的提问。", "Konwledge_Point": "数据的输出", "Question": ["想输出满足条件的数据", ["\n\n", "DEV C++想输出满足条件的数据，但是什么都没显示", "\n第一次的时候是可以的，后面不知道为啥就不行了。是不是系统有问题（小白懵逼脸）", "\n原代码：", "\n#include", "\nusing namespace std;", "\n\n", "int main()", "\n{ ", "\n    int i,a[]={59,90,45,78,20};", "\n    for (i=0;i\n    {", "\n    if (a[i]>=60)", "\n    cout<<\"及格成绩有：\"<<a[i]<<endl;", "\n    } ", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在控制台中打印下success里的data&amp;#xff0c;发出来看看&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["ajax前台为何输出不出来数据", ["ajax部分代码如下，后台能过查到数据，但是前台无法输出显示，是代码错误还是"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-bash\"&gt;result &amp;#61; cur.&lt;span class=\"hljs-built_in\"&gt;execute&lt;/span&gt;(sql, i)\njoints &amp;#61; cur.fetchone()\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(joints)&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(joints)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["python在读取mysql列表时会先显示none才正常输出，如何才能跳过none直接输出表", ["cur = conn.cursor()", "\n", "  while True:", "    for i in range(500):", "      delay(0.1)", "      sql = 'select * from robot where id=%s;'", "\n", "  #执行", "sql", "\n  result = cur.", "execute", "(", "sql", ", i)\n  conn.", "commit", "()\n  joints = cur.fetchone()\n  print(joints)\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n\nvoid Sortfun(double a[],int n)\n{\n\tint i,j;\n\tdouble tmp;\n\tfor (i&amp;#61;0;i&amp;lt;n-1;i&amp;#43;&amp;#43;)\n\t{\n\t\tfor (j&amp;#61;0;j&amp;lt;n-1-i;j&amp;#43;&amp;#43;)\n\t\t{\n\t\t\tif (a[j] &amp;gt; a[j&amp;#43;1])\n\t\t\t{\n\t\t\t\ttmp &amp;#61; a[j];\n\t\t\t\ta[j] &amp;#61; a[j&amp;#43;1];\n\t\t\t\ta[j&amp;#43;1]&amp;#61; tmp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint i;\n\tdouble a[10];\n\tprintf(&amp;#34;请输入10个数:&amp;#34;);\n\tfor(i &amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;)\n\t\tscanf(&amp;#34;%lf&amp;#34;,&amp;amp;a[i]);\n\n\tprintf(&amp;#34;原顺序:\\n&amp;#34;);\n\tfor(i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;)\n\t\tprintf(&amp;#34;%g &amp;#34;,a[i]);\n\tprintf(&amp;#34;\\n&amp;#34;);\n\tSortfun(a,10);\n\n\tprintf(&amp;#34;排序后:\\n&amp;#34;);\n\tfor(i&amp;#61;0;i&amp;lt;10;i&amp;#43;&amp;#43;)\n\t\tprintf(&amp;#34;%g &amp;#34;,a[i]);\n\tprintf(&amp;#34;\\n&amp;#34;);\n\treturn 0;\n\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["数组问题对数组中所有的数据按照输入先后顺序进行显示输出", ["定义整数数组x，用键盘向数组输入10个数，输入之后，对数组中所有的数据按照输入先后顺序进行显示输出，最后设计一种算法，对数组中的数据进行升序排序，并输出并输出排序后的数", "\n\n", " ", "\n\n", "大神，救急啊！"]], "Tag": "程序设计"}
{"Answer": "提示一下，代码就编译不过，data是int类型，怎么能用下标访问呢，这里data应该是int*吧，把你的素数存下来。若你想看你错误的原因，用vs单步调试即可。\r\n其实一开始建议你分开来写，一步一步来，下面是我就你的代码做了一些处理，可以参考下，\r\n\r\n\r\n```\r\n#include &lt;stdio.h&gt;\r\n//判断一个数是否为素数\r\nbool isPrime(int num)\r\n{\r\n\tint tmp = num - 1;\r\n\tfor (int i = 2; i &lt;= tmp; i++)\r\n\t\tif (num %i == 0)\r\n\t\t\treturn 0;\r\n\treturn 1;\r\n}\r\n\r\n//统计数组中素数的个数，并将素数保存到另一个数组中\r\n/*\r\n\tdata\t\t保存素数的数组\r\n\tprimes\t\t需要判断的数组\r\n\tlen\t\t\t数组长度\r\n\r\n*/\r\n\r\nint countPrime(int *data, int *primes, int len)\r\n{\r\n\tif (data == NULL || primes == NULL)\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tint result = 0;  // 素数的个数\r\n\tfor (int j = 0; j &lt; len; j++)\r\n\t{\r\n\t\tif (isPrime(primes[j]))\r\n\t\t{\r\n\t\t\tresult++;\r\n\t\t\tdata[j] = primes[j];\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n\tint data[5] = {0}, primes[5] = { 1, 2, 3, 4, 5 }, len = 5;\r\n\t\r\n\tprintf(\"素数个数为：%d\\n\",countPrime(data,primes,len));\r\n\r\n\tprintf(\"\\n素数有:\\n\");\r\n\tfor (size_t i = 0; i &lt; len; i++)\r\n\t{\r\n\t\tprintf(\"%d\\n\", data[i]);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["编写函数，判断该数组中哪些是素数，并统计素数的个数，在主函数中输出素数的个数和这些素数，函数原型不能变，怎么我一直输出不来，求大神指教！？", ["#include", "\nint len ;", "\nint IsPrime(int ", "data, int *primes,int len)", "\n{", "\n    int y=1;", "\n    for (int j = 0; j < 5; j++)/", "判断素数*/", "\n    {", "\n        for (int i = 2; i < data[j]; i++)", "\n        {", "\n            y ", "= data[j] % i;", "\n        }", "\n        if (y != 0)", "\n        {", "\n            primes = &data[j];", "\n            len++;", "\n            primes++;", "\n        }", "\n    }", "\n    /*for (int i = 0; i < len; i++)", "\n        printf(\"%3d\\n\", *--primes);", "/", "\n    return len;", "\n}", "\nvoid main()", "\n{", "\n    int data[5], *primes, primes_[5] = {1,2,3,4,5}, len = 0;", "\n    primes = primes_;", "\n    for (int i = 0; i < 5; i++)", "\n    {", "\n        scanf(\"%3d\", &data[i]);", "\n    }", "\n    printf(\"共有%d个素数\", len = IsPrime(data, primes, 0));", "\n    printf(\"这些素数分别为：\\n\");", "\n    for(int i=0;i<len;i++)", "\n        printf(\"%3d\\n\", primes_[len]);", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n\nra &amp;#61; pd.Series({&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;keywords&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;[&amp;#39;bill&amp;#39;,&amp;#39;inner&amp;#39;,&amp;#39;take&amp;#39;]&amp;#34;&lt;/span&gt;})\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(ra)\nlist1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(ra[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(list1)\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(list1))\n# [&lt;span class=\"hljs-string\"&gt;&amp;#39;bill&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;take&amp;#39;&lt;/span&gt;]\n# &amp;lt;class &lt;span class=\"hljs-string\"&gt;&amp;#39;list&amp;#39;&lt;/span&gt;&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["pandas中如何把这种series类型的数据单独取出来啊", ["我想把其中的bill,inner,take取出来，不知道怎么转换成列表形式", "\n", "import", " pandas ", "as", " pd\n", "import", " numpy ", "as", " np\n", "ra", "=pd.", "Series", "({'keywords':", "\"['bill','inner','take']\"", "})\n", "pu", "=ra[", "0", "]\n", "pu", "\n\n\n", "\"['bill','inner','take']\"", "\n", "\n", "应该如何把输出变成列表形式，这样子就能单独取出这三个单词了，有人知道吗"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\ntypedef struct lnode{\r\n\tint data;\r\n\tlnode*next;\r\n}lnode, *linklist;\r\n\r\nvoid creatlist(lnode**l){\r\n\tint x;\r\n\tlnode*p;\r\n\t*l = (lnode*)malloc(sizeof(lnode));\r\n\tp = *l;\r\n\tscanf(\"%d\", &amp;x);\r\n\twhile (x != 0)\r\n\t{\r\n\t\tp-&gt;next = (lnode*)malloc(sizeof(lnode));\r\n\t\tp = p-&gt;next;\r\n\t\tp-&gt;data = x;\r\n\t\tscanf(\"%d\", &amp;x);\r\n\t}\r\n\tp-&gt;next = NULL;\r\n}\r\n\r\nvoid displist(lnode*l){\r\n\tlnode*p;\r\n\tp = l-&gt;next;//p指向开始结点\r\n\twhile (p != NULL){\r\n\t\tprintf(\"%d\", p-&gt;data); //输出数据域\r\n\t\tp = p-&gt;next;\r\n\t}\r\n\tprintf(\" \");\r\n\r\n}\r\n\r\n\r\nint main(){\r\n\tlnode *l;\r\n\tcreatlist(&amp;l);\r\n\tdisplist(l);\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["单链表输出，为何输出不了", ["#include<stdio.h>\n#include<stdlib.h>\ntypedef struct lnode{\n    int data;\n    lnode*next;\n}lnode,*linklist;\n\nvoid creatlist(lnode*l){\n    int x;\n    lnode*p;\n    l=(lnode*)malloc(sizeof(lnode)); \n    p=l;\n    scanf(\"%d\",&x);\n    while(x!=0)\n    {   \n        p->next=(lnode*)malloc(sizeof(lnode));\n        p=p->next;\n        p->data=x;\n        scanf(\"%d\",&x);\n    }\n    p->next=NULL;\n}\n\nvoid displist(lnode*l){\n    lnode*p;\n    p=l->next;//p指向开始结点\n    while(p!=NULL){\n        printf(\"%d\",p->data); //输出数据域\n        p=p->next;\n    }\n    printf(\" \");\n\n} \n\n\nmain(){\n    lnode l;\n    creatlist(&l);\n    displist(&l);\n\n}\n"]], "Tag": "程序设计"}
{"Answer": "printf(\"^%c \",ch+64); // %s是输出字符串。你没有\\\\0就崩溃了\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201907/06/1562384794_706122.png)\r\n\r\n```\r\n// Q768341.cpp : Defines the entry point for the console application.\r\n//\r\n\r\n#include \"stdafx.h\"\r\n\r\n\r\n#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n\r\nint main(void)\r\n{\r\n    bool flag = false;\r\n    int unprt[32];\r\n    int ch;\r\n    long count = 0;\r\n    for(int i = 0;i &lt;= 31; i++)\r\n    unprt[i] = i;\r\n    while((ch = getchar()) != EOF)\r\n    {\r\n        for(int i = 0;i &lt;= 31; i++)\r\n        {\r\n        if(ch==unprt[i])\r\n        {\r\n        printf(\"^%c \",ch+64);\r\n        printf(\" %d \",ch);\r\n        count++;\r\n        flag = true;\r\n        break;\r\n        }\r\n            }\r\n        if(flag)\r\n        continue;\r\n        else {putchar( ch );\r\n        printf(\" %d \",ch);\r\n        count++;\r\n        }\r\n        flag = false;   \r\n        if(count&gt;10&amp;&amp;(count%10==0))\r\n        putchar('\\n');\r\n    }\r\n    system(\"pause\");\r\n    return 0;\r\n}\r\n\r\n```", "Konwledge_Point": "数据的输出", "Question": ["哪位大神可以说明一下这个字符输出问题？", ["先上代码", "\n\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\nint main(void)\n{\n    bool flag = false;\n    int unprt[32];\n    int ch;\n    long count = 0;\n    for(int i = 0;i <= 31; i++)\n    unprt[i] = i;\n    while((ch = getchar()) != EOF)\n    {\n        for(int i = 0;i <= 31; i++)\n        {\n        if(ch==unprt[i])\n        {\n        printf(\"^%s \",ch+64);\n        printf(\" %d \",ch);\n        count++;\n        flag = true;\n        break;\n        }\n            }\n        if(flag)\n        continue;\n        else {putchar( ch );\n        printf(\" %d \",ch);\n        count++;\n        }\n        flag = false;   \n        if(count>10&&(count%10==0))\n        putchar('\\n');\n    }\n    system(\"pause\");\n    return 0;\n}\n", "\n\n", "程序的目的是接受字符并打印字符及其对应的ASCII码，如果是非打印字符就用一个向上的箭头加", "\n字母表示下面是运行结果", "\n这个前面几个字符还好但是最后的ctrl+A就程序停止运行了，这是什么情况？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;verilog 有对文件读写的函数&amp;#xff0c;可以将仿真波形中需要的数据写入文件。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["vivado怎么用来抓取仿真信号并给matlab处理？", ["我想把vivado中行为仿真得到的数据保存出来，用matlab读取进行计算来查看vivado生成波形对不对，应该怎么弄呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;    for i in range(len(B1)): &lt;/p&gt;\n\n&lt;p&gt;这行代码&amp;#xff0c;一开始B1列表为空&amp;#xff0c;len(B1)&amp;#61;0&amp;#xff0c;不会进行循环&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python中如何将计算数据保存在列表中", ["如题，新建一个空列表，然后将每次计算结果存入列表中，但为何要么是空列表，要么列表中只有当前的计算结果，而没有之前的计算结果？？？", "\n\n", "代码如下：", "\n\n", "B1 = []                                                        #创建一个空列表", "\n    for i in range(len(B1)):                           #给i赋值", "\n        B1 = SwingHigh(Close(), 10, 1, 2)    #计算B1数值，为变量", "\n        B1.append(B1)                                 #将每次计算结果存入列表B1", "\n    return B1                                              #将数据返回到列表"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;初始化函数里&amp;#xff0c;L &amp;#61; (LinkList)malloc(sizeof(LinkList)); 应该是 L &amp;#61; (LinkList)malloc(sizeof(Node));&lt;br /&gt;printf(&amp;#34;输入数据&amp;#34;)这一句可以拿到while循环外面&amp;#xff0c;或者你再c&amp;#61; getchar()后面在加一句getchar() 用来吸收每次输入的回车符。&lt;br /&gt;改法一&amp;#xff1a;&lt;br /&gt;把printf(&amp;#34;输入数据&amp;#34;)放到while循环外面&amp;#xff0c;运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/47743640196615.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt; {\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;* next;\n}Node, * LinkList;\n&lt;span class=\"hljs-comment\"&gt;//初始化&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;LinkList &lt;span class=\"hljs-title\"&gt;InitList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkList L)&lt;/span&gt;\n&lt;/span&gt;{\n    L &amp;#61; (LinkList)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Node));\n    L-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; L;\n}\n&lt;span class=\"hljs-comment\"&gt;//头插&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;CreateFromHead&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkList L)&lt;/span&gt;\n&lt;/span&gt;{\n    Node* s;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数据&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (flag)\n    {\n        &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;输入数据&amp;#34;);  //拿到外面&lt;/span&gt;\n        c &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;)\n        {\n            s &amp;#61; (Node*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Node*));\n            s-&amp;gt;data &amp;#61; c;\n            s-&amp;gt;next &amp;#61; L-&amp;gt;next;\n            L-&amp;gt;next &amp;#61; s;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Printlist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkList L)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该单链表的内容为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    L &amp;#61; L-&amp;gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (L !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, L-&amp;gt;data);\n        L &amp;#61; L-&amp;gt;next;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    LinkList L &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    L &amp;#61; &lt;span class=\"hljs-built_in\"&gt;InitList&lt;/span&gt;(L);\n    &lt;span class=\"hljs-built_in\"&gt;CreateFromHead&lt;/span&gt;(L);\n    &lt;span class=\"hljs-built_in\"&gt;Printlist&lt;/span&gt;(L);\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;改法二&amp;#xff1a;&lt;br /&gt;不改变printf(&amp;#34;输入数据&amp;#34;)的位置&amp;#xff0c;在c &amp;#61; getchar();后面再加一句getchar();&lt;br /&gt;运行效果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/07095740196614.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt; {\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;* next;\n}Node, * LinkList;\n&lt;span class=\"hljs-comment\"&gt;//初始化&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;LinkList &lt;span class=\"hljs-title\"&gt;InitList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkList L)&lt;/span&gt;\n&lt;/span&gt;{\n    L &amp;#61; (LinkList)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Node));\n    L-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; L;\n}\n&lt;span class=\"hljs-comment\"&gt;//头插&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;CreateFromHead&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkList L)&lt;/span&gt;\n&lt;/span&gt;{\n    Node* s;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (flag)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数据&amp;#34;&lt;/span&gt;);  \n        c &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//吸收每次输入的回车符&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;$&amp;#39;&lt;/span&gt;)\n        {\n            s &amp;#61; (Node*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Node*));\n            s-&amp;gt;data &amp;#61; c;\n            s-&amp;gt;next &amp;#61; L-&amp;gt;next;\n            L-&amp;gt;next &amp;#61; s;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Printlist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkList L)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该单链表的内容为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    L &amp;#61; L-&amp;gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (L !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, L-&amp;gt;data);\n        L &amp;#61; L-&amp;gt;next;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    LinkList L &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    L &amp;#61; &lt;span class=\"hljs-built_in\"&gt;InitList&lt;/span&gt;(L);\n    &lt;span class=\"hljs-built_in\"&gt;CreateFromHead&lt;/span&gt;(L);\n    &lt;span class=\"hljs-built_in\"&gt;Printlist&lt;/span&gt;(L);\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么创建的单链表输出不了？", ["#", "define", " _CRT_SECURE_NO_WARNINGS 1", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "typedef", " ", "struct", " ", "Node", " {\n    ", "char", " data;\n    ", "struct", " ", "Node", "* next;\n}Node, * LinkList;\n", "//初始化", "\n", "InitList", "(LinkList L)\n{\n    L = (LinkList)", "malloc", "(", "sizeof", "(LinkList));\n    L->next = ", "NULL", ";\n    ", "return", " L;\n}\n", "//头插", "\n", "void", " ", "CreateFromHead", "(LinkList L)", "\n", "{\n    Node* s;\n    ", "char", " c;\n    ", "int", " flag = ", "1", ";\n    ", "while", " (flag)\n    {\n        ", "printf", "(", "\"输入数据\"", ");\n        c = ", "getchar", "();\n        ", "if", " (c != ", "'$'", ")\n        {\n            s = (Node*)", "malloc", "(", "sizeof", "(Node*));\n            s->data = c;\n            s->next = L->next;\n            L->next = s;\n        }\n        ", "else", " flag = ", "0", ";\n    }\n}\n\n", "//输出", "\n", "void", " ", "Printlist", "(LinkList L)", "\n", "{\n    ", "printf", "(", "\"该单链表的内容为：\"", ");\n    L = L->next;\n    ", "while", " (L != ", "NULL", ")\n    {\n        ", "printf", "(", "\"%s\"", ", L->data);\n        L = L->next;\n    }\n\n}\n\n", "int", " ", "main", "()", "\n", "{\n    LinkList L = ", "NULL", ";\n    L = ", "InitList", "(L);\n    ", "CreateFromHead", "(L);\n    ", "Printlist", "(L);\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;txt可能是UTF8编码&amp;#xff0c;而你的程序当成GBK编码读取输出。你把txt另存为ANSI就不会乱码了。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/53789704056611.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["fstream文件输入输出流读取文件时中文出现乱码", ["\n", "\n", "fstream文件输入输出流读取文件时中文出现乱码", "fstream文件输入输出流读取文件时中文出现乱码", "fstream文件输入输出流读取文件时中文出现乱码"]], "Tag": "程序设计"}
{"Answer": "这个可以设置的，如：\r\nimport pandas as  pd\r\npd.set_option('display.max_columnse',30)   #设置显示的最大列数，同时，也可以根据需要通过set_option函数设置其他的属性", "Konwledge_Point": "数据的输出", "Question": ["Python的head逻辑，如何显示全部，还是有其他函数可以做到", ["bcanerdf是569行30列的数据集", "\n我使用bcanerdf.head(569)函数，但中间的大部分行以及中间的大部分列还是用省略号给我隐藏了，有没有啥方法可以看到所有"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;变量 j 循环出了问题&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python将txt数据批量输出xlsx文件结果输出的下一个是前边所有输出的总和，导致后边文件越来越大", ["\n", "# coding:utf-8", "\n", "import", " glob  ", "# 引用glob           #提取行数据  代码位置在哪，data保存到哪   处理时文件不要打开，不然报错。", "\n", "import", " numpy ", "as", " np  ", "# 引用numpy", "\n", "import", " openpyxl\n", "from", " openpyxl ", "import", " load_workbook  ", "# 引用openpyxl的load_workbook", "\n\nflist = glob.glob(", "r'D:\\huangjingdata\\meteorology\\over\\*.txt'", ")                ", "# 读取当前文件夹所有txt，并存入列表", "\nwb = load_workbook(", "'G:\\\\data2py\\\\2019.xlsx'", ")               ", "# 打开要保存数据的excel", "\nsheet = wb[", "'Sheet1'", "]                    ", "# 打开要保存数据的sheet", "\nj = ", "1", "                                           ", "# 序数，用来将从txt提取的数据存储（放）到excel的不同行", "\nx = ", "0", "\n", "for", " x ", "in", " ", "range", "(", "23", "):\n    ", "for", " filename ", "in", " flist:  ", "# 利用for循环逐个读取txt文件", "\n        array = np.loadtxt(filename, dtype=", "str", ", delimiter=", "'\\t'", ")                           ", "# 将当前读取的txt文件数据存储矩阵，定界符为‘\\t’", "\n        number_col = array.shape[", "1", "]                                                        ", "# 获取数据矩阵列数", "\n        ", "for", " i ", "in", " ", "range", "(number_col):\n            sheet.cell(j, i + ", "1", ").value = array[x][i]             ", "# 将需要用的第一行数据存储在excel中,就是'sheet1'，本次代码为第一行，因为从0开始", "\n        j = j + ", "1", "                                ", "# 行叠加 ，开始第二行        #             #行不变，列要变化（i+1）", "\n    x = x+", "1", "\n    wb.save(", "\"2019-1-1-\"", "+", "str", "(x) +", "'.xlsx'", ")                ", "# 保存excel文件并退出", "\n\n\n", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;一种改法是&amp;#xff1a;&lt;br /&gt;把main函数中的SqMenuList *L;改成SqMenuList L;没必要用指针。(SqMenuList *L这么用的时候&amp;#xff0c;你需要使用malloc分配空间&amp;#xff09;&amp;#xff0c;然后把后面的L-&amp;gt;都改成 L.&amp;#xff08;L点&amp;#xff09;&lt;br /&gt;第二种改法是&amp;#xff1a;&lt;br /&gt;把SqMenuList *L;改成&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;SqMenuList *L &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; (SqMenuList *)malloc(sizeof(SqMenuList))&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n//这种改法需要在main函数的最后释放空间&amp;#xff0c;free(L)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["数据结构顺序表为什么输出不出来呢", ["刚学数据结构不久，大神们为啥输出的是这个呀", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nint a[20];\nint main(){\n    int n,i,m,p;\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(1){\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;&amp;#61;0){\n            return 0;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;n;i&amp;#43;&amp;#43;){\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n        }\n        &lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;a[0];\n        &lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt;&amp;#61;0;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1;i&amp;lt;n;i&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(m&amp;lt;a[i]){\n                &lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;a[i];\n                &lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt;&amp;#61;i;\n            }\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d\\n&amp;#34;&lt;/span&gt;,m,p);\n    }\n    return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["有n个整数，把它们存放到一个一维数组中（下标从0开始），输出最大数和它的下标。", ["输入：有n个整数，把它们存放到一个一维数组中（下标从0开始），输出最大数和它的下标。", "输出：对于每组输入，输出单独占一行，输出包括最大数及其下标，中间用空格分隔。样例输入:", "12 5 3 15 4 12 54 32 53 42 20 4 23", "10 1 2 3 4 5 6 7 8 9 10", "0", "样例输出：", "54 5", "10 9", "用c语言写代码。", "要求如下：有n个整数，把它们存放到一个一维数组中（下标从0开始），输出最大数和它的下标。输入数据有多组，每组占一行，第一个数n（10<=n<=20）表示该组测试数据的个数，后面跟有n个整数。若n=0，表示输入结束，不需处理。对于每组输入，输出单独占一行，输出包括最大数及其下标，中间用空格分隔。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看样子是用\\t分割的&lt;br /&gt;你不同标签之间不用空格分割,换成\\t应该就可以&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何让输出的数据对齐", ["最右边的是我程序输出的结果 中间的是理性的结果 我要怎么改 才能让他们对齐"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果数据范围大的话把int改为long long&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; ans&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(num) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)\n            ans&amp;#43;&amp;#43;;\n            num/&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ans&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;good luck\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,ans); \n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["777.幸运数字，输入一个整数，若达到3个7，则直接输出good luck否则输出该整数中包含数字7的个数，每组数据单独一行输出，", ["#include<stdio.h>", "#include<stdlib.h>", "int main()", "{", " int a=0,count=0,flag=0;", " scanf(\"%d\",&a);", "if(a%10==7)", "    count++;", "do", "{", "    flag=0;", "    a=a/10;", "    flag=a%10;", "    if(flag==7)", "        count++;", "}", "        while(a>0&&a<=9);", "        if(count>=3)", "            printf(\"good luck!\");", "        if(count<3)", "            printf(\"%d\",count);", "}", "输出的时候少一个7"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nn,&lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;().&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)))\n&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;().&lt;span class=\"hljs-keyword\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)))\n&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;sort&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;[:&lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt;])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;希望点一下下采纳&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Python语言，给定n个数,并按从小到大的顺序,以列表的形式输出这n个数中前m小的数。", ["输入格式：第一行输入两个数n和m，第二行输入n个数", "输出格式：输出一个数组（列表）", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你啥意思是这个吗&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &amp;#61; -b &amp;#43; ((b**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - (&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; * a * c)) ** &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;) / (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * a)\n\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(x.real)\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(abs(x))\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/312634486466164.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["输出错误，但不知道为啥错", ["利用下面公式计算并输出×的值。", "x=(-b+√(b^2-4ac))/(2a)", "(提示:开平方使用指数运算 a*(1/2) 或 a*0.5 来实现)", "输入格式", "在3行中分别输入一个浮点数(测试数据保证根号下的值大于", "输出格式", "个实数,严格保留小数点后2位数字。", "以上是问题，", "我的疑问是为什么输出后是", "bad operand type for unary-:str"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;加载json数据&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n    &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;loadData&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; tbody&amp;#61;&lt;span class=\"hljs-variable language_\"&gt;window&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;tbody-result&amp;#39;&lt;/span&gt;);\n\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; header&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;tr&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;\n                   &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;th&amp;gt;姓名&amp;lt;/th&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;\n                   &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;th&amp;gt;年龄&amp;lt;/th&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;\n                   &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;th&amp;gt;操作&amp;lt;/th&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;\n                   &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span&gt;;\n        tbody.&lt;span class=\"hljs-property\"&gt;innerHTML&lt;/span&gt;&amp;#61;header;\n        $.&lt;span class=\"hljs-title function_\"&gt;ajax&lt;/span&gt;({\n            &lt;span class=\"hljs-attr\"&gt;url&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;student.json&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-attr\"&gt;dataType&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#34;json&amp;#34;&lt;/span&gt;, \n            &lt;span class=\"hljs-attr\"&gt;success&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;data&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; students&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;\n            rows&amp;#61;data.&lt;span class=\"hljs-property\"&gt;data&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; rows){\n                students&amp;#43;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;rows[i].&lt;span class=\"hljs-property\"&gt;name&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;/td&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;\n                              &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;td&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;rows[i].&lt;span class=\"hljs-property\"&gt;age&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;/td&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;\n                              &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;td&amp;gt;&amp;lt;a href&amp;#61;&amp;#39;&amp;#39;&amp;gt;修改&amp;lt;/a&amp;gt;&amp;lt;a href&amp;#61;&amp;#39;&amp;#39;&amp;gt;删除&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span&gt;;\n            }\n            tbody.&lt;span class=\"hljs-property\"&gt;innerHTML&lt;/span&gt;&amp;#61;(header&amp;#43;students)\n        }\n    })\n    }\n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;link&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;rel&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;href&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;./css/index.css&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;https://cdn.staticfile.org/jquery/1.11.3/jquery.min.js&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;onload&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;loadData()&amp;#34;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;table&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;border&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;tbody-result&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;json文件&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;data&amp;#34;&lt;/span&gt;:[\n    {\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;age&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;18&amp;#34;&lt;/span&gt;\n    },\n    {\n      &lt;span class=\"hljs-string\"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;王五&amp;#34;&lt;/span&gt;,\n      &lt;span class=\"hljs-string\"&gt;&amp;#34;age&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;15&amp;#34;&lt;/span&gt;\n    }\n   ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;strong&gt;交上就行了,测试通过了&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/668539333176141.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于#ajax#的问题：3.能创建JSON文件，利用Ajax方法访问JSON文件同时返回数据，将返回的数据添加到表格，要求表格表头和最后一列如下图所示", ["使用异步数据交互方式实现页面的局部更新；利用ajax函数链接到JSON数据文件，要求使用$.get()和$.ajax(),查看两者之间的区别，其中$.get()数据输出到控制台，$.ajax()数据输出到HTML页面。", "\n", "3.能创建JSON文件，利用Ajax方法访问JSON文件同时返回数据，将返回的数据添加到表格，要求表格表头和最后一列如下图所示。", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt; {\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; num[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  age;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt;* next;\n}Lnode,*LinkNode;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;creatlist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkNode* L, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    LinkNode pt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;){\n        pt &amp;#61; (LinkNode)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Lnode));\n        pt-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %d&amp;#34;&lt;/span&gt;, pt-&amp;gt;num, pt-&amp;gt;name, &amp;amp;pt-&amp;gt;age);\n        pt-&amp;gt;next &amp;#61; (*L);\n        (*L) &amp;#61; pt;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;insertlist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkNode L, LinkNode pt, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; || i &amp;gt; n) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    LinkNode p &amp;#61; L;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p &amp;amp;&amp;amp; k &amp;lt; i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        k&amp;#43;&amp;#43;;\n        p &amp;#61; p-&amp;gt;next;\n    }\n    pt-&amp;gt;next &amp;#61; p-&amp;gt;next;\n    p-&amp;gt;next &amp;#61; pt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;deletelist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkNode* L, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* s_num)&lt;/span&gt;\n&lt;/span&gt;{\n    LinkNode p &amp;#61; (*L), pre &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(p-&amp;gt;num, s_num) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; (*L)) {\n                (*L) &amp;#61; p-&amp;gt;next;\n                &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p);\n                p &amp;#61; (*L);\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                pre-&amp;gt;next &amp;#61; p-&amp;gt;next;\n                &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p);\n                p &amp;#61; pre;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            pre &amp;#61; p;\n            p &amp;#61; p-&amp;gt;next;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printlist&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkNode L)&lt;/span&gt;\n&lt;/span&gt;{\n    LinkNode p &amp;#61; L;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %d\\n&amp;#34;&lt;/span&gt;, p-&amp;gt;num, p-&amp;gt;name, p-&amp;gt;age);\n        p &amp;#61; p-&amp;gt;next;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; T, n, i;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;T);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (T--) {\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; num[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };\n        LinkNode L &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;, pt &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;creatlist&lt;/span&gt;(&amp;amp;L, n);\n        pt &amp;#61; (LinkNode)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(Lnode));\n        pt-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %s %d&amp;#34;&lt;/span&gt;, &amp;amp;i, pt-&amp;gt;num, pt-&amp;gt;name, &amp;amp;pt-&amp;gt;age);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, num);\n        &lt;span class=\"hljs-built_in\"&gt;printlist&lt;/span&gt;(L);\n        &lt;span class=\"hljs-built_in\"&gt;insertlist&lt;/span&gt;(L, pt, i, n);\n        &lt;span class=\"hljs-built_in\"&gt;printlist&lt;/span&gt;(L);\n        &lt;span class=\"hljs-built_in\"&gt;deletelist&lt;/span&gt;(&amp;amp;L, num);\n        &lt;span class=\"hljs-built_in\"&gt;printlist&lt;/span&gt;(L);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["逆序建立链表输出学生", ["输入的若干学生的信息（学号、姓名、年龄），要求使用链表完成：", "根据学生的信息建立逆序链表，并遍历该链表输出学生的信息；", "在第m个结点之后插入一个新学生结点并输出；", "删除某个学号的学生结点后输出。", "输入", "首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试数据首先输入一个正整数n表示学生的个数（1≤n≤100）；然后输入n行信息，分别表示学生的学号、姓名（不含空格且长度都不超过10的字符串）和年龄（正整数）；接下来输入整数m（1≤m≤n）和一个新学生的学号、姓名、年龄；最后输入待删学生的学号（可能不存在，此时不需删除）。", "每两组测试数据之间留一个空行。", "输入", "2", "3", "1201 Zhangsan 20", "1202 Lisi 21", "1204 Wangwu 20", "2 1203 Zhaoliu 19", "1204", "2", "1201 Lisi 20", "1202 Wangwu 20", "2 1203 Zhaoliu 19", "1204", "输出", "1204 Wangwu 20", "1202 Lisi 21", "1201 Zhangsan 20", "1204 Wangwu 20", "1202 Lisi 21", "1203 Zhaoliu 19", "1201 Zhangsan 20", "1202 Lisi 21", "1203 Zhaoliu 19", "1201 Zhangsan 20", "\n", "1202 Wangwu 20", "1201 Lisi 20", "1202 Wangwu 20", "1201 Lisi 20", "1203 Zhaoliu 19", "1202 Wangwu 20", "1201 Lisi 20", "1203 Zhaoliu 19"]], "Tag": "程序设计"}
{"Answer": "for(i=0;i scanf(\"%d\",&amp;a[i]);\r\nif(i t=a[i+k];\r\n这些地方没有贴对\r\n\r\n不过相同的问题我已经在 https://ask.csdn.net/questions/978681 这里回答了。你可以参考我的程序。\r\n\r\n（那个回答和你的程序略有不同，它是右移，左移就是首先用一个变量把数组第一个元素保存起来，然后从前往后，每个元素等于之后那个元素，最后一个元素等于你保存起来的那个数，也就是原先数组的开头）", "Konwledge_Point": "数据的输出", "Question": ["请问数据移位输出为何不变？", ["题目描述", "\n将一维数组中的元素循环左移 k 个位置", "\n\n", "输入描述", "\n第 1 行是一维数组元素的个数 n (数组大小)", "\n\n", "第 2 行是一个整数 k , 表示移动的位置", "\n\n", "下面 n 行为数组的元素个数", "\n\n", "输出描述", "\n输出 n 行，表示移动后的数字", "\n#include", "\n#define N 10000", "\nint main ()", "\n{", "\n    int k,a[N],b[N],n,t,w,i;", "\n    scanf(\"%d\",&n);", "\n    scanf(\"%d\",&k);", "\n    {", "\n    for(i=0;i\n    scanf(\"%d\",&a[i]);", "\n    {", "\n    if(i\n    t=a[i+k];", "\n    a[i]=t; ", "\n if(i==k)", "\n    a[i]=a[i];", "\nif(i>k)", "\n    w=a[i-k]; ", "\n    a[i]=w;", "\n    }", "\n    for(i=0;i<n;i++)", "\nprintf(\"%d\\n\",a[i]);", "\n}", "\nreturn 0;", "\n    }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我在尝试使用和你一样的配置可以正常输出&amp;#xff0c;你可以尝试修改filebeat的配置注释调不需要的output&amp;#xff0c;然后output logstash的hosts使用127.0.0.1:5044防止DNS污染问题&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么我配置的filebeat不能向logstash或elasticseartch输出信息？", ["为什么我配置的filebeat不能向logstash或elasticseartch输出信息？", "\n", "我在windows平台搭建filebeat+logstash+elasticsearch+kibana的架构，以上所有的版本均是8.2.3 ，filebeat能加载日志信息，但是不能向下游发送数据(logstash和elasticsearch，我都试过了），我确信filebeat.yml的配置没有任何问题", "\n", "filebeat.xml的配置如下:", "\n", "\n", "\n", "logstash的配置:", "\n", "\n", "先启动logstash：", "\n", "然后再启动filebeat：", "\n", "\n", "可是日志显示，filebeat已经成功读到了日志文件，但是没有任何信息发送到logstash(换成elasticsearch也是一样)", "\n", "究竟是什么原因？"]], "Tag": "程序设计"}
{"Answer": "IFNULL（a,b） 如果a不是NULL IFNULL()返回a，否则它返回b\r\n或者  \r\nset @c = (SELECT count(*) as c FROM table WHERE condition)\r\nif(@c&gt;0) then\r\n  set @r = 1;\r\nelse \r\n  set @r = 0;\r\nend if;\r\n不知道是不是你想要的效果\r\n\r\n```\r\n \r\n```", "Konwledge_Point": "数据的输出", "Question": ["mysql判断查询结果是否存在，存在输出1不存在输出0", [" IF EXISTS (SELECT * FROM table WHERE condition) SELECT '1' ELSE SELECT '0';\n", "\n\n", "类似这种语义，mysql中可以实现吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qfl_sdu/article/details/118326835\" id=\"textarea_1634002345191_1634002401591_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;单向链表的创建及简单使用&amp;#xff08;以学生管理为例&amp;#xff0c;持续更新&amp;#xff09;_qfl_sdu的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;功能1.创建链表2.查找3.遍历代码#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;string.h&amp;gt;struct StNode{\tint num;\tchar name[20];\tint score;\tStNode* next;};int main(){\tint num,score,i;\tchar name[20]&amp;#61;{0};\tstruct StNode* head,*tm&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qfl_sdu/article/details/118326835&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["建立学生信息单链表，并顺序输出", ["将n个名字（每个名字不超过10个字符--可英文单词表示）建立成一个单链表，节点中包含名字、原（输入时的）序号、指向下一个节点的指针。然后将这些名字按字典顺序排序。要求：（1）将原名单按行输出：名字、序号（2）按排序后的名单顺序输出，包括：名字、原序号"]], "Tag": "程序设计"}
{"Answer": "freopen本来就只能同时打开一个文件，但是不能对多个文件进行同时读写，建议还是不要用freopen这种函数，它在正规的工程中是不允许出现的，只是竞赛的时候为了加快得到结果的一个取巧的用法，在VS里面已经废止了，请养成良好的编程习惯。（来自百度知道）\r\n如果要读取多个文件，建议使用c++文件读取流ifstream,头文件为#include&lt;fstream&gt;,用法：\r\nifstream f1(\"D:\\\\a.txt\"\"); //打开文件读取流\r\n/*读取操作*/\r\nf1.close(); //关闭流\r\nifstream f2(\"D:\\\\b.txt\");\r\n/*读取操作*/\r\nf2.close();", "Konwledge_Point": "数据的输出", "Question": ["C++如何从两个文本文件中读取数据！急急急", ["例如：从a.txt中读取数据存到数组a， 从b.txt中读取数据存到数组b.", "\n\n", "用", "\nfreopen(\"D:\\a.txt\", \"r\", stdin)", "\n\n", "freopen(\"D:\\b.txt\", \"r\", stdin)", "\n\n", "每次都是数组a读进来了 数组b死活没有数据！！！", "\n\n", "求大神帮忙啊！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的return应该是和for对齐的&amp;#xff0c;dayup会在365次for循环里改变&amp;#xff0c;然后return。但是如果没有和for对齐&amp;#xff0c;dayup就是一个固定值&amp;#xff0c;而这个值永远不会大于37.78&lt;br /&gt;在dayUP方法里面&amp;#xff0c;每次都是运行了if 的内容&amp;#xff08;因为i从0开始&amp;#xff0c;就进入了if&amp;#xff0c;然后直接return结束方法&amp;#xff09;&amp;#xff0c;所以dayup是个固定值&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python刚接触入门问题，结果无法输出。", ["跟着慕课学习，输入一段代码，运行后没有结果输出。代码如图，刚接触python，不知道问题出在哪里了。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int类型&amp;#43;号就是把数字加起来&amp;#xff0c;&lt;br /&gt;string字符串就是连接起来的意思&lt;br /&gt;新手可以看下我的文章&amp;#xff0c;希望对你有帮助&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C#输出格式中的加号作用是什么", ["Console.WriteLine(\"[\" + x + \",\" + y + \"],\" + \"Radius=\" + r);", "为什么运行之后是[30,50],Radius=10,加号和双引号作用是什么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;clear&lt;br /&gt;sca x &amp;#61; 1&lt;br /&gt;sca y &amp;#61; 0&lt;br /&gt;sca k &amp;#61; 0&lt;br /&gt;sca i &amp;#61; 1&lt;br /&gt;while(i&amp;lt;11){&lt;!-- --&gt;&lt;br /&gt;di x&lt;br /&gt;sca k &amp;#61; x&lt;br /&gt;sca x &amp;#61; x&amp;#43;y&lt;br /&gt;sca y &amp;#61; k&lt;br /&gt;sca i&amp;#61;i&amp;#43;1&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何在stata输出斐波那契数列前十项", [" 想要得到数据 然后赋值出现问题（朋友和我说不能赋值）", "generate x = 1", "generate y = 0", "generate k = 0", "local i =1", "while(", "i'<11){     display x     gen k = x     gen x = x+y     gen y = k     local i=", "i'+1", "}", "现在很苦恼哎"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT&lt;br /&gt;是的&amp;#xff0c;通常在处理音频数据时&amp;#xff0c;AD转换后得到的数据是无符号数&amp;#xff0c;需要先在FPGA中将其转换为有符号数再进行处理&amp;#xff0c;最后再转换回无符号数并发送给DA转换进行输出&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["fpga处理ad转换的数据和发送给da转换的数据", ["请问（音频数据采样）ad转换后得到的无符号数发送给fpga，那么fpga在处理数据的时候，需要先把无符号数转换为有符号数吗？fpga处理后的数据交给da转换（音频数据输出），应该发送的是无符号数吧？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以用元素索引判断 a.index(i) &amp;lt; a.index(-1)  小于-1的索引输出  其实也没必要一定要一行吧 &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["#python:求解列表推导式遇某一条件退出推导然后输出已输入的数据", ["#我想用", "print([x for in map(int,input().split(\" \"))])", "这样的格式输出一列数据，如果遇到-1则不输出之后的数据", "#初步想法代入if条件", "print([ x for x in map( int, input().split(\" \") )  if x!=-1 ])", "但这样的结果是不仅-1没了而且还会输出-1之后的数据", "\n", "\n", "#求各位帮忙看看，万分感谢，只要在列表推导式范围都行，要求一行搞定这个条件"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a&amp;#61;input()&lt;br /&gt;s&amp;#61;[]&lt;br /&gt;d&amp;#61;0&lt;br /&gt;for i in a:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    if i not in s:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        s.insert(d,i)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        d&amp;#43;&amp;#61;1&lt;/span&gt;&lt;br /&gt;for i in range(d-1):&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    print(s[i],end&amp;#61;&amp;#39; &amp;#39;)&lt;/span&gt;&lt;br /&gt;print(s[d-1])&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["怎么去除输出的最后一个空格", ["a=eval(input())", "s=[]", "d=0", "for i in a:", "    if i not in s:", "        s.insert(d,i)", "        d+=1", "for i in s:", "        print(i,end=' ')"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std; \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,t1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,t2&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,t3&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,t4&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,s&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//t1,t2,t3,t4分别表示大写字母、小写字母、数字、其他字符的个数 &lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//s表示所有数字字符的和 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; k;\n    cin&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;){\n        cin&amp;gt;&amp;gt;k;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;k&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;) t1&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;k&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;) t2&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;k&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;){\n            t3&amp;#43;&amp;#43;;\n            s&amp;#43;&amp;#61;k-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;; \n        } \n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; t4&amp;#43;&amp;#43;;\n    }\n    cout&amp;lt;&amp;lt;t1&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;t2&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;t3&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;t4&amp;lt;&amp;lt;endl; \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t3&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    cout&amp;lt;&amp;lt;s;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["从键盘输入n个字符，请分别统计大写字母、小写字母、数字、其他字符的个数并输出；还需要输出所有数字字符之和", ["第一行为一个整数n（100>=n>=0），接下来n行每行一个字符。", "\n", "【输出形式】", "\n", "输出第1行为4个整数，分别表示大写字母、小写字母、数字、其他字符的个数，第2行为一个数字，表示其中所有数字字符所对应的数字之和，当输入的字符中不包含数字字符时，没有第2行。", "\n", "【样例输入1】", "\n", "5", "a", "A", "5", "6", "@", "【样例输出1】", "\n", "1 1 2 1", "11"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,a[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;],t;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;; i&amp;#43;&amp;#43;)\n&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;j&amp;#43;&amp;#43;) \n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;lt; a[j]){\nt &amp;#61; a[i];\na[i] &amp;#61; a[j];\na[j] &amp;#61; t;\n}\n}\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;从大到小&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;; i&amp;#43;&amp;#43;)\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d&amp;#34;&lt;/span&gt;, a[i]);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["使用选择法将其按照从大到小的顺序排序并输出排序后的结果。", ["编写程序，从键盘接收8个整型数据，请使用选择法将其按照从大到小的顺序排序并输出排序后的结果。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;循环遍历&amp;#xff0c;如果字符是非空格且前一个字符是空格&amp;#xff0c;单词数&amp;#43;1&amp;#xff0c;如果当前单词是非空格&amp;#xff0c;字符长度&amp;#43;1&amp;#xff0c;最后用字符长度除以单词书名即可。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/024557229046154.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//单次个数和总长度&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(buf); &lt;span class=\"hljs-comment\"&gt;//读取一行字符串&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(buf[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(buf[i]!&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) sum&amp;#43;&amp;#43;; &lt;span class=\"hljs-comment\"&gt;//除空格外的长度&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(buf[i]&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n                i&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                cnt&amp;#43;&amp;#43;;\n                i&amp;#43;&amp;#43;;\n            }\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(buf[i] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; buf[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n                cnt&amp;#43;&amp;#43;;\n            i&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;*sum/cnt);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["输入若干个单词，输出它们的平均长度，保留两位小数。单词只包含大写字母和小写字母，单词前后都可能有一个或者多个空格隔开。请使用循环和数组实现。", ["统计单词的平均长度", "\n", "试题描述", "\n", "   输入若干个单词，输出它们的平均长度，保留两位小数。单词只包含大写字母和小写字母，单词前后都可能有一个或者多个空格隔开。请使用循环和数组实现。", "\n", "输入", "\n", "   输入若干个单词，单词前后都可能有一个或者多个空格隔开。", "\n", "输出", "\n", "   输出平均长度，小数点后必须保留2位有效数字（四舍五入），不足补零。", "\n", "输入示例", "\n", "   Hello world", "\n", "输出示例", "\n", "   5.00", "\n", "数据范围", "\n", "   对于100%的数据，输入字符串的长度 <= 1000"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大哥&amp;#xff0c;你这等于号写法错误&amp;#xff0c;在C语言里&amp;#xff0c;等于应用&amp;#61;&amp;#61;&amp;#xff0c;这个符号。你改下试试&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["如图 输出下一秒/求改错", ["\n", "\n", "检测的时候有一半数据运行对了一半没对", "也不知道哪里遗漏了", "求指正！", "【问题描述】编写一个程序，输出当前时间的下一秒。", "\n", "【输入形式】用户在第一行按照“小时:分钟:秒”的格式输入一个时间。", "\n", "【输出形式】程序在下一行输出这个时间的下一秒。", "\n", "【样例输入】", "\n", "23:59:59", "\n", "【样例输出】", "\n", "00:00:00", "\n", "【样例说明】", "\n", "用户按照格式要求输入时间，程序输出此时间的下一秒，输出时每个数字占两位，高位补0。", "\n", "输入语句：scanf(\"%d:%d:%d\",&h,&m,&s);", "\n", "输出语句：printf(\"%02d:%02d:%02d\",h,m,s);                         "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You may need to stop the default behavior for the button submit(posting the form the the page without ajax). Try jQuery &lt;code&gt;preventDefault&lt;/code&gt; method.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$(function(){\n  $(\"#sub\").click(function(e){\n     e.preventDefault();\n\n     //now post the form using ajax to the server page for validation\n      $.post($(\"#login\").attr(\"action\"), $(\"#login :input\").serializeArray(),\n                                                                  function(info){\n          $(\"#result\").html(info);\n          clearInput();\n      });\n\n  });\n});\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["使用JS以HTML格式显示PHP输出", ["\n\n", "So currently I am working on a simple login authentication. I have an HTML page and PHP script using cURL to authenticate against a website. What I want to do is, instead of after user input pressing submit and switching to the PHP page for the \"correct\" \"Incorrect\" echo, I want JS to just give a small message under the submit button giving that message so they can enter info again.", "\n\n", "Thank you it was fixed and working now thank you shyju", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;ChatGPT尝试为您解答&amp;#xff0c;仅供参考&lt;/strong&gt;&lt;br /&gt;下面是一个 Python 程序&amp;#xff0c;它使用这些性质生成杨辉三角形&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;# 读入n&lt;/span&gt;\n        n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n\n        &lt;span class=\"hljs-comment\"&gt;# 创建一个n行的杨辉三角形&lt;/span&gt;\n        triangle &amp;#61; [[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * i &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)]\n\n        &lt;span class=\"hljs-comment\"&gt;# 填充杨辉三角形&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, n):\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i):\n                triangle[i][j] &amp;#61; triangle[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][j-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#43; triangle[i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][j]\n            &lt;span class=\"hljs-comment\"&gt;# 输出杨辉三角形&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; row &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; triangle:\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; num &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; row:\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{num:5d}&lt;/span&gt;&amp;#34;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt; EOFError:\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这段代码使用一个循环来处理多组输入数据&amp;#xff0c;并使用一个 try/except 块来处理输入的结束。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;对于每组输入数据&amp;#xff0c;程序创建一个 n 行的杨辉三角形&amp;#xff0c;并使用双重循环填充杨辉三角形。最后&amp;#xff0c;使用另一个循环输出杨辉三角形。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;最后&amp;#xff0c;输出的数字被格式化为 5 个字符宽度&amp;#xff0c;以便满足输出样例的要求。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["杨辉三角。输入一个整数n，输出n行的杨辉三角形", ["输入一个整数n，输出n行的杨辉三角形。例如，n=5，则杨辉三角如输出样例所示。", "\n", "输入格式:", "输入数据有多组，每组1个整数n(1≤n≤10)，一直处理到文件结束。", "\n", "输出格式:", "对于每个n，输出n行杨辉三角形。每个数据的输出为5个字符宽度，具体见输出样例。", "\n", "输入样例：", "5", "输出样例：", "    1", "    1    1", "    1    2    1", "    1    3    3    1", "    1    4    6    4    1"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;],i,j;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; mean[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i][j]);\n            sum &amp;#43;&amp;#61; a[i][j];\n        }\n        mean[i] &amp;#61; sum / &lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f &amp;#34;&lt;/span&gt;,mean[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["设有一个3行4列放入二维数组a,编写程序，通过键盘输入数组元素，然后计算每行元素的平均值并输出。", ["设有一个3行4列放入二维数组a,编写程序，通过键盘输入数组元素，然后计算每行元素的平均值并输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/828584797836112.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;],n,k;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; minindex,tmp;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;n,&amp;amp;k)!&amp;#61;EOF)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n        \n        &lt;span class=\"hljs-comment\"&gt;//排序&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;k)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            minindex &amp;#61; i;\n            &lt;span class=\"hljs-comment\"&gt;//找出第i小的数所在的位置&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;n;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[j] &amp;lt; a[minindex])\n                    minindex &amp;#61; j;\n            }\n\n            &lt;span class=\"hljs-comment\"&gt;//将第i小的数放在第i个位置&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i !&amp;#61; minindex)\n            {\n                tmp &amp;#61; a[i];\n                a[i] &amp;#61; a[minindex];\n                a[minindex] &amp;#61; tmp;\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;//输出k轮排序后的结果&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,a[i]);\n        }\n\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言选择排序法练习", ["输入n个数据。利用选择排序进行编程，输出第k轮排序后的数列状况。", "\n", "输入格式:", "每组测试包含两行，分别是整数n,k (0<=k<n<100)，以及n个原始数据。", "\n", "输出格式:", "输出第k轮排序后的数列结果(数据之间1个空格，尾端无多余空格)。", "\n", "输入样例:", "6 3", "3 5 1 2 8 6", "4 3", "9 8 7 6", "5 0", "4 3 2 9 7", "结尾无空行", "输出样例:", "1 2 3 5 8 6", "6 7 8 9", "4 3 2 9 7", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最容易的写法就一个自关联了,注意除数为0的特殊处理&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; a.*,\n       round(decode(b.SALE_MONEY,\n                    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                    &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;,\n                    (a.SALE_MONEY - b.SALE_MONEY) / b.SALE_MONEY) * &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) || &lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; 环比增长率\n  &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sql2004 a\n  &lt;span class=\"hljs-keyword\"&gt;left join&lt;/span&gt; sql2004 b\n    &lt;span class=\"hljs-keyword\"&gt;on&lt;/span&gt; trunc(to_date(a.tyear || lpad(a.tmonth, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#39;yyyymm&amp;#39;&lt;/span&gt;) - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;mm&amp;#39;&lt;/span&gt;) &amp;#61;\n       to_date(b.tyear || lpad(b.tmonth, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#39;yyyymm&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果不用自关联,只对这个表查一次,可以使用开窗函数,这里先假设数据中间不会存在月份缺失&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; TYEAR,\n       TMONTH,\n       SALE_MONEY,\n       round(decode(l_SALE_MONEY,\n                    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                    &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;,\n                    (SALE_MONEY - l_SALE_MONEY) / l_SALE_MONEY) * &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) || &lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; 环比增长率\n  &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; a.*,\n               lag(SALE_MONEY) &lt;span class=\"hljs-keyword\"&gt;over&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;order&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;by&lt;/span&gt; tyear , tmonth ) l_SALE_MONEY\n          &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sql2004 a);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果好巧不巧,刚好关门了一个月而且没插入对应月份的数据,那么也还是可以使用开窗函数,不过要换成range滑动窗口了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; TYEAR,\n       TMONTH,\n       SALE_MONEY,\n       round(decode(l_SALE_MONEY,\n                    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                    &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;,\n                    (SALE_MONEY - l_SALE_MONEY) / l_SALE_MONEY) * &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,\n             &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) || &lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; 环比增长率\n  &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; a.*,\n               max(SALE_MONEY) &lt;span class=\"hljs-keyword\"&gt;over&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;order&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;by&lt;/span&gt; tyear * &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; &amp;#43; tmonth &lt;span class=\"hljs-keyword\"&gt;range&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;between&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;preceding&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;preceding&lt;/span&gt;) l_SALE_MONEY\n          &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; sql2004 a)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在数据完整的情况下,上述3个sql输出结果都是一样的&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["用oracle数据库，查询起始月到当前月的销售环比，求环比=（本月-上月）/上月", ["问题：查询起始月到当前月的销售环比", "数据库表  表名为sql2004", "TYEAR    TMONTH     SALE_MONEY", "2019    10    1279", "2019    11    2316", "2019    12    2090", "2020    1    1086", "2020    2    2046", "2020    3    0", "2020    4    2959", "2020    5    1314", "2020    6    2751", "2020    7    1492", "2020    8    1414", "2020    9    2895", "2020    10    2999", "2020    11    1982", "2020    12    2793", "2021    1    2156", "2021    2    1733", "2021    3    2184", "\n", "求解答啊"]], "Tag": "程序设计"}
{"Answer": "输出的根本不是 excel 格式（虽然掩耳盗铃地用了xls后缀）而是 html。但是excel本身可以识别和读取html，甚至文本文件等。给你的假象是，导出的是 excel 文件。", "Konwledge_Point": "数据的输出", "Question": ["Java利用response对象导出table表格的数据", ["试了一下,可以把数据输出成一个excel表格,原理是什么?", "\n\n", " <%@ page contentType=\"application/vnd.ms-excel;charset=GBK\" %>  \n<%@page import=\"java.net.URLEncoder\"%>  \n\n<%  \nString filedisplay = \"文件.xls\";   \nfiledisplay = URLEncoder.encode(filedisplay, \"UTF-8\");   \nresponse.addHeader(\"Content-Disposition\", \"attachment;filename=\"   + filedisplay);   \n%>  \n<!doctype html>  \n\n<html>  \n    <head>  \n        <title>导出Excel实例</title>  \n        <style>tr td{border:1px black solid;}</style>  \n    </head>  \n    <body>  \n        <table style=\"border:1px\">  \n            <tr>  \n                <td>ID</td>  \n                <td>名称</td>  \n                <td>性别</td>  \n                <td>年龄</td>  \n            </tr>  \n            <tr>  \n                <td>1</td>  \n                <td>张三</td>  \n                <td>男</td>  \n                <td>18</td>  \n            </tr>  \n            <tr>  \n                <td>2</td>  \n                <td>张三</td>  \n                <td>男</td>  \n                <td>18</td>  \n            </tr><tr>  \n                <td>3</td>  \n                <td>张三</td>  \n                <td>男</td>  \n                <td>18</td>  \n            </tr><tr>  \n                <td>4</td>  \n                <td>张三</td>  \n                <td>男</td>  \n                <td>18</td>  \n            </tr>  \n        </table>  \n    </body>  \n</html>  \n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有问题&amp;#xff0c;没有向数组a中填值&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["编写程序，输入一个正整数n（1＜n＜＝10），再输入n个整数，将这n个整数逆序存放并输出。问题:我这样写有问题嘛？运行不出来", []], "Tag": "程序设计"}
{"Answer": "while(rs.next()){out.print(rs.getString(columnIndex));}", "Konwledge_Point": "数据的输出", "Question": ["selectcount（元素）from表groupby id然后怎么在Jsp中依次输出每个id的数值", ["有两个表：course课程表，elective选课表，", "\n其中elective中有两个元素，学生name和课程编号id(该id和course中的id一样)", "\n然后我用springmvc 在Jsp中显示出来课程的数据，", "\n但是还差一个已选课程人数的数据", "\n，这个已选人数我需要在elective表中计算课程id的username得出", "\n然后我应该怎么输出呢？", "\n显示course的表的时候 我用了图中的方法 就是List rows", "\n我要是再用另一个List 显示count 然后就会出现混乱", "\n我需要依次输出所有课程的已选人数，所以不知道怎么处理count", "\n\n", "Dao", "图片说明", "\nAction", "图片说明", "\nService", "图片说明", "\nJsp", "图片说明", "\n我想知道Dao和Action以及Jsp中怎么写那个已选人数的数据，输出数组中的元素"]], "Tag": "程序设计"}
{"Answer": "```\r\nint N,i,j,r,a[N][N],b[N][N],t; //这样写是错的，a和b的数组分配内存错了\r\nscanf(\"%d\",&amp;N);\r\n```\r\n\r\n```\r\n#include \"stdio.h\"\r\n#include \"stdlib.h\"\r\nint main ()\r\n{\r\n\tint N,i,j,r,a[100][100],b[100][100],t;\r\n\tscanf(\"%d\",&amp;N);\r\n\tif(N&gt;2&amp;&amp;N&lt;130)\r\n\t{\r\n\t\tfor(i=0;i&lt;N;i++)\r\n\t\t\tfor(j=0;j&lt;N;j++)\r\n\t\t\t\tscanf(\"%d\",&amp;a[i][j]);\r\n\t\tfor(i=0;i&lt;=N;i++)\r\n\t\t\tfor(j=0;j&lt;=N;j++)\r\n\t\t\t\tb[i][j]=a[j][i];\r\n\t\tfor(i=0;i&lt;N;i++)\r\n\t\t{\r\n\t\t\tfor(j=0;j&lt;N;j++)\r\n\t\t\t{\r\n\t\t\t\tif(j&lt;N-1)\r\n\t\t\t\t\tprintf(\"%d \",b[i][j]);\r\n\t\t\t\telse\r\n\t\t\t\t\tprintf(\"%d \",b[i][j]);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["请问为什么我的矩阵输出全为0？", ["把矩阵 A 的行换成相应的列，得到的新矩阵称为 A 的转置矩阵。现在给定任意的一个 n 阶方阵 S , 求出其转置矩阵.", "\n\n", "输入描述第一行给定一个正整数 n (2 < n < 100). 接下来有 n 行，每行 n 个整数，代表方阵中第 i 行第 j 列的数.", "\n\n", "输出描述", "\n输出该方阵的转置矩阵.", "\n\n", "注意数字与数字之间用空格分开，每行最后一个数字后面仅跟换行符.", "\n\n", "样例输入", "\n3", "\n1 2 3", "\n4 5 6", "\n7 8 9", "\n样例输出", "\n1 4 7", "\n2 5 8", "\n3 6 9", "\n#include", "\n#define N130", "\nint main ()", "\n{", "\nint N,i,j,r,a[N][N],b[N][N],t;", "\nscanf(\"%d\",&N);", "\nif(N>2&&N<130)", "\n{", "\nfor(i=0;i<N;i++)", "\nfor(j=0;j<N;j++)", "\nscanf(\"%d\",&a[i][j]);", "\nfor(i=0;i<=N;i++)", "\nfor(j=0;j<=N;j++)", "\nb[i][j]=a[j][i];", "\nfor(i=0;i<N;i++)", "\n{", "\n    for(j=0;j<N;j++)", "\n    {", "\nif(j<N-1) ", "\n    printf(\"%d \",b[i][j]);", "\n    else", "\n    printf(\"%d \",b[i][j]);", "\n}", "\n    printf(\"\\n\");", "\n}", "\n}", "\nreturn 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;main()&lt;br /&gt;这是turbo c老式写法&amp;#xff0c;现代的编译器应该加上返回值&lt;br /&gt;int main()&lt;/p&gt;\n&lt;p&gt;第一个scanf(&amp;#34;%d&amp;#34;,&amp;amp;a[i]);&amp;#xff0c;不能这样实现输入&amp;#xff0c;必须循环一个一个来&lt;/p&gt;\n&lt;p&gt;还有&amp;#xff0c;格式输出和题目要求不同&lt;br /&gt;修改了一下&amp;#xff0c;你参考下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%5d&amp;#34;&lt;/span&gt;,a[i]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        t&amp;#61;a[i];\n        a[i]&amp;#61;a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i];\n        a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i]&amp;#61;t;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%5d&amp;#34;&lt;/span&gt;,a[i]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["输入10个数存入数组，然后逆序存储并输出。", ["大家好，这个我写了好多遍，提交时就是过不去，咋回事啊？请帮我看一下，谢谢了！", "下面是我的问题：", "\n", "输入10个整数存入一维数组a，然后按逆序重新存储数据，最后按顺序输出该数组，每个数据占5列。例如输入\n2", " 5 ", "6", " 7 ", "1", " 8 ", "9", " 0 ", "3 6\n后，a(0)-a(9)依次为2、5、6、7、1、8、9、0、3、6，逆序重新存储数据后a(0)-a(9)依次为6、3、0、9、8、1、7、6、5、2，输出应为\n   ", " 6 ", "  ", " 3 ", "  ", " 0 ", "  ", " 9 ", "  ", " 8 ", "  ", " 1 ", "  ", " 7 ", "  ", " 6 ", "  ", " 5 ", "   2\n\n注意：语言选DEV  C++。\n\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "main", "()\n{\n    ", "int", " a[", "10", "];\n    ", "int", " i,t;\n    ", "scanf", "(", "\"%d\"", ",&a[i]);\n    ", "for", "(i=", "0", ";i<", "10", ";i++)\n        ", "printf", "(", "\"%d \"", ",a[i]);\n    ", "for", "(i=", "0", ";i<", "10", "/", "2", ";i++)\n    {\n        t=a[i];\n        a[i]=a[", "10", "-1", "-i];\n        a[", "10", "-1", "-i]=t;\n    }\n    ", "for", "(i=", "0", ";i<", "10", ";i++)\n        ", "printf", "(", "\"%d \"", ",a[i]);\n    ", "printf", "(", "\"\\n\"", ");\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;s的初始值是1&amp;#xff0c;应该把for循环改一下&lt;br /&gt;&lt;code class=\"language-javascript\"&gt;for (s &amp;#61; 1; s &amp;lt;&amp;#61; 999; s&amp;#43;&amp;#43;) &lt;/code&gt;&lt;br /&gt;你的x就是s%7&amp;#xff0c;如果s&amp;#61;0&amp;#xff0c;s%7也是0&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如果对你有帮助&amp;#xff0c;还请点个采纳&amp;#xff0c;万分感谢&amp;#xff01;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "数据的输出", "Question": ["printf输出为什么上面会有零", ["代码:", "    int s ;", "    int x=0, y=0, z=0, a=0, b=0, x1=0, y1=0, z1=0;", "    for (s = 0; s <= 999; s++) {", "        x = s % 7; a = s / 7; y = a % 7; z = a /7;", "        x1 = s % 9; b = s / 9; y1 = b % 9; z1 = b / 9;", "        if (x1==z&&y1==y&&z1==x)", "        {", "            printf(\"%d\\n\", s);", "            printf(\"%d%d%d\\n\", x, y, z);", "            printf(\"%d%d%d\\n\", x1, y1, z1);", "        }", "    }", "\n", "输出:", "0", "000", "000", "248", "305", "503", "预想:", "248", "305", "503"]], "Tag": "程序设计"}
{"Answer": "&lt;blockquote&gt;\n&lt;p&gt;点到即止&amp;#xff0c;不说太多&amp;#xff0c;你思考下&amp;#xff0c;开着 IDE 学会 DEBUG&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/161572031556173.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;有问题的就是这里了&amp;#xff0c;这个数字如果不是素数&amp;#xff1f;你是不是 n&amp;#43;&amp;#43; 也执行了&amp;#xff1f;最后打印换行也是&amp;#xff0c;一样的逻辑&amp;#xff0c;打印结束记得重置 n &amp;#61;0;&lt;br /&gt;if()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;xxx&lt;br /&gt;xxx&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["关于文件数据读入换行", ["可以帮我看一下我这个代码哪里出问题了吗？数据输出在文本里应该是每十个素数输出一行，但不知道为什么就是输出不出来", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把x的初值变成-1就对啦。&lt;/p&gt;\n\n&lt;p&gt;因为你x的初值是0&amp;#xff0c;然后你紧接着先x&amp;#43;&amp;#43;再去判断取余是否为0&amp;#xff0c;这样你第一行的三个数对应的x分别是123&amp;#xff0c;如果x到了4就跳到下一行了。&lt;/p&gt;\n\n&lt;p&gt;所以置初值为-1&amp;#xff0c;x为0123的时候正好对应前四个数字&amp;#xff0c;就会输出在一行上。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["将裴波那契数列的前12项输出，为什么我第一行只有三个数？", ["\n\n", "问题 将裴波那契数列的前12项存入一维数组a中并以4个一行的形式输出，每个数据占4个位置且右对齐。", "\n\n", " ", "\n\n", "正确输出：", "\n\n", "   1   1   2   3", "\n   5   8  13  21", "\n  34  55  89 144"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先获取到你选中的这些筛选条件的值&amp;#xff0c;然后通过正则表达式来与数据库中集合的字段匹配&amp;#xff0c;获取对应的数据结果就可以了&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["微信小程序如何设计数据筛选?", ["要如何设计该筛选框可以让它选择不同条件筛选出满足该条件的内容?"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;1.csv&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f:  &lt;span class=\"hljs-comment\"&gt;# 读取1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; f.readlines():\n        passwd &amp;#61; &lt;span class=\"hljs-built_in\"&gt;line&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;replace&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-comment\"&gt;# print(passwd)&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;2.csv&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f2:  &lt;span class=\"hljs-comment\"&gt;# 读取 2&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; line_2 &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; f2.readlines():\n                ip &amp;#61; line_2[:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;    &amp;#39;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\n                passwd2 &amp;#61; line_2[:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;    &amp;#39;&lt;/span&gt;)[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-built_in\"&gt;replace&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; passwd2 &amp;#61;&amp;#61; passwd:\n                    &lt;span class=\"hljs-keyword\"&gt;with&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;3.csv&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; f3:  &lt;span class=\"hljs-comment\"&gt;# 写入3&lt;/span&gt;\n                        f3.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;(ip &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt; &amp;#43; passwd)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["python数据处理", ["用python读取csv文件1，拿每一行的数据去跟csv2文件的数据进行匹配，取出文件2里包含文件1关键字的数据输出写入到新文件", "\n", "\n", "文件1", "\n", "表头", "admin", "root", "qwer", "\n", "文件2", "\n", "ip", "passwd", "10.6.0.12", "1qwer123!", "10.6.0.22", "123root123", "10.6.0.32", "pas213", "10.6.0.42", "pass21", "10.6.0.52", "adminroot", "\n", "运行结果输出到新文件", "\n", "ip", "passwd", "10.6.0.12", "1qwer123!", "10.6.0.22", "123root123", "10.6.0.52", "adminroot", "\n", "把包含文件1中关键字的密码  输出到一个新的csv文件里"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳。&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;def input(arr):\n    for i in range(len(arr)):\n        print(arr[i])\n\narr&amp;#61;[]\nfor i in range(10):\n    arr.append((int)input(&amp;#34;输入整数&amp;#xff1a;&amp;#34;));\ninput(arr)\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["定义长度为10的数组，键盘输入数组值。定义两个函数：输出数组;输出平均值，返回大于平均值的个数", ["python这道题怎么编写：定义长度为10的数组，键盘输入数组值。定义两个函数：输出数组;输出平均值，返回大于平均值的个数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在C/C&amp;#43;&amp;#43;中&amp;#xff0c;并没有直接的清空输出的函数&amp;#xff0c;只能通过调用系统接口&amp;#xff0c;执行系统的清屏命令来实现。&lt;br /&gt;调用系统接口&amp;#xff0c;可以使用stdlib.h中的标准库函数system。 其调用格式为&lt;br /&gt;system(cmd);&lt;br /&gt;其中cmd为包含所需执行命令的字符串。&lt;br /&gt;在windows下&amp;#xff0c;dos的清屏指令为cls&amp;#xff0c;于是就可以调用&lt;br /&gt;system(&amp;#34;cls&amp;#34;);&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C++中如何将输出的内容清除", ["软件： Dev_C++", "想把cout输出的内容清除", "（system('cls')好像是清除所有的数据？）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输出是%lf你打成数字1了&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/544855229746138.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["小白发问！devc++为什么输出都是0啊", ["\n", "\n", "为什么这个所有数据的输出结果都是0啊！！不明白！", "希望大家不吝赐教"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以参考一下&lt;a href=\"https://blog.csdn.net/weixin_41598179/article/details/112795877\" id=\"textarea_1652959433332_1652959657006_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;C语言——最短路径问题&amp;#xff08;Dijkstra算法&amp;#xff09;_秋米姐姐的博客-CSDN博客_c语言求最短路径&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;C语言——最短路径问题&amp;#xff08;Dijkstra算法&amp;#xff09;优点——适用范围广&amp;#xff0c;本代码属于公式型代码&amp;#xff0c;可随意更换数据&amp;#xff0c;适合零基础同学。主要思路&amp;#xff1a;主要思路&amp;#xff1a;1.用一个二维数组存放带权有向图的邻接矩阵&amp;#xff1b;2.基于Dijkstra算法分别申请三个数组&amp;#xff0c;distance[], path[], used[]分别记录从起点到其余各点的最短距离&amp;#xff0c;到目标结点路径上的前一个结点&amp;#xff0c;到图中某个结点是否已找到最短路径&amp;#xff1b;3.逐渐确定从源点到图中各结点的最短路径&amp;#xff0c;直至结束&amp;#xff1b;最短路径例题&amp;#xff1a;如下图所示&amp;#xff0c;求最短经。&amp;lt;fn代码&amp;#xff1a;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_41598179/article/details/112795877&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["【c语言】【数据结构】Dijkstra算法求最快送餐路径", ["输入：第一行包含3个整数n,m,t，分别表示路口的个数，道路的条数和目的路口。", "（2 ≤ n ≤ 10，1 ≤ m ≤ 50，1 ≤ w ≤ 10）", "接下来m行每行包含三个整数 u,v,w，表示路口u到路口v存在一条耗时w的单行道。", "输出：骑手从商家（位于1号路口）到目的路口的最短时间，若路径不存在，输出-1。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;#include&lt;/p&gt;\n&lt;p&gt;using namespace std;&lt;/p&gt;\n&lt;p&gt;int main() {&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    //num用于存放满足条件的数&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int num[1000];&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    //index用于记录下标&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int index &amp;#61; 0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for (int i &amp;#61; 1; i &amp;lt; 1000; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if (i % 9 &amp;#61;&amp;#61; 0 &amp;amp;&amp;amp; i % 10 &amp;#61;&amp;#61; 0) {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            num[index] &amp;#61; i;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            index&amp;#43;&amp;#43;;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for (int j &amp;#61; 0; j &amp;lt; index; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; (j!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;j % &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        &lt;span class=\"hljs-attribute\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-attribute\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; num[j] &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/935561651566190.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c＋＋求1000以内可以同时被9和10整除的所有数，要求一行输出5个数", ["#include", "using namespace std;", "int main()", "{", "    int i=1, m;", "    m = 0;", "\n", "for", " ", "( i; i < ", "1000", "; i++)", "\n{\n    ", "if", "\n        ", "(i ", "% 9 == 0 && i % 11 == 0)", "\n        \n        break;\n    m = m + ", "1", ";\n    ", "if", " (m ", "% 5 == 0)", "\n        cout << m << ", "end", "l;\n    ", "\n", "\n", "}", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看看是不是进程列表里还有运动会4整个进程&amp;#xff0c;杀掉它&amp;#xff0c;否则新的exe文件无法生成&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["c语言数据结构编程时无法输出文件", ["\n", "本来运行出来是这样的", "我又写了system(“pause”)", "                system(“cls”)", "后就无法运行，删除了那两行还是无法运行", "为什么会出现这种情况？"]], "Tag": "程序设计"}
{"Answer": "运行了一下lz的程序，50kb的文本文件，压缩后再解压，用差分工具比较过，跟原来的完全一致。", "Konwledge_Point": "数据的输出", "Question": ["关于java文件压缩API(ZipOutputStream)，压缩后的文件部分数据丢失的问题", ["如题：源文件为一个.del文本文件，在压缩后文件末尾总是会丢失一部分数据，请高手帮我看一下代码，是哪里出错了？ ", "\n\n", "public static void zip(String fileName) throws FileNotFoundException,IOException,ZipException{  \n        \n        //获取文件后缀,包括\".\"\n        String suffix = fileName.substring(fileName.lastIndexOf(\".\"));\n        \n        String zipFileName = fileName.replace(suffix, \".zip\");\n  \n        File srcFile = new File(fileName); \n        File zipFile = new File(zipFileName);\n        \n        if(!srcFile.exists()){\n            throw new FileNotFoundException(\"指定的源文件不存在!\");\n        }\n        \n        BufferedInputStream in = null;\n        ZipOutputStream zipOut = null;\n        \n        try {   \n            // 创建字节输入流对象  \n            in = new BufferedInputStream(new FileInputStream(srcFile));   \n            // 创建文件输出流对象   \n            FileOutputStream f = new FileOutputStream(zipFile);   \n  \n            CheckedOutputStream ch = new CheckedOutputStream(f, new CRC32());\n            // 创建ZIP数据输出流对象   \n            zipOut = new ZipOutputStream(   \n                    new BufferedOutputStream(ch, 4096));   \n            // 创建指向压缩原始文件的入口   \n            ZipEntry entry = new ZipEntry(srcFile.getName());   \n            zipOut.putNextEntry(entry);   \n            // 向压缩文件中输出数据\n            byte[] b = new byte[4096];\n            int count = -1;\n            while ((count = in.read(b)) != -1) {   \n                zipOut.write(b,0,count);\n            }   \n            \n            zipOut.closeEntry();\n            throw new IOException(\"error\");\n        } catch (IOException e) { \n            // 如果抛出异常,则删除生成的压缩文件\n            if(zipFile != null && zipFile.exists()){ \n                zipOut.close();zipFile.delete();\n            }\n            throw e;   \n        } finally {\n            // 关闭创建的流对象   \n            if(in != null)\n                in.close();\n            if(zipOut != null)\n                zipOut.close();  \n        }\n    }   ", "\n\n", " ", "文件压缩前后对比截图：", "\n\n", "\n\n", "\n\n", " ", "问题补充：", "但是我用winrar查看压缩文件,里面的数据确实不完整啊", "问题补充：", "但是我用winrar查看压缩文件,里面的数据确实不完整啊,就像那个截图", "问题补充：", "我用的是ant.jar,会不会是这里出了问题?", "问题补充：", "问题找到了,这段代码本身没有问题,是外层调用的方法写错了,主要是太大意了，外层方法是首先从数据库中把数据读出来写入.del文件，然后再调用这个方法将.del文件压缩。在调用这个方法的时候，外层方法里面没有将.del文件对应的输出流关闭，也没有调用flush()方法，所以文件末尾的一部分数据其实还在缓冲区中，根本都还没有写到文件中呢，怎么能指望在输入流中把这部分数据得到呢？呵呵，这个错误还是比较低级的，谢过了。"]], "Tag": "程序设计"}
{"Answer": "58行下面\r\n\r\n```\r\nif(customerlist.isEmpty() || customerlist==null){\r\nreturn WebResult.error(null);\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["怎样让查不到数据时，返回一个查询失败，代码在哪里加入，怎么写", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望点击我回答右上角【灰色采纳】按钮支持一下。&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/94903120033618.png\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;strong&gt;代码如下&amp;#xff1a;&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#include &amp;lt;iostream&amp;gt;\nusing namespace std;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n  &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;a1&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;a2&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;b1&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;b2&lt;/span&gt;, m &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n  //cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;1000-2000之间满足条件的数有:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n  for(&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;&amp;#43;&amp;#43;)\n  {\n        &lt;span class=\"hljs-symbol\"&gt;a1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;;\n        &lt;span class=\"hljs-symbol\"&gt;a2&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; - &lt;span class=\"hljs-symbol\"&gt;a1&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n        &lt;span class=\"hljs-symbol\"&gt;b1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-symbol\"&gt;b2&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-symbol\"&gt;a1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-symbol\"&gt;a2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-symbol\"&gt;b1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-symbol\"&gt;b2&lt;/span&gt;)\n        {\n            m &amp;#61; &lt;span class=\"hljs-built_in\"&gt;count&lt;/span&gt; &amp;#43;&amp;#43;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;  //注意此处改为了空格\n        }\n  }\n  cout &amp;lt;&amp;lt; endl;\n  //cout &amp;lt;&amp;lt; endl &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;一共有&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; m &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;个&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n  cout &amp;lt;&amp;lt; m &amp;lt;&amp;lt; endl;\n  return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["c/c++编程问题，数字的输出和数字个数的输出", ["数字输出来和个数，我都不会，能否给我一个模板，这个最近才学，我很多不会。", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1 取得单词长度len&lt;br /&gt;2 记录没遇到字符 遇到第一个空格的位置 front_spa_pos_start&lt;br /&gt;3 记录遇到第一个字符的位置 word_pos_start&lt;br /&gt;4 记录字符结束的位置word_pos_end&lt;br /&gt;5 记录后边原有空格的个数&lt;br /&gt;6 在最后补全或删除空格&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;// caimi7.cpp : 定义控制台应用程序的入口点。&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;stdafx.h&amp;#34;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; _tmain(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc, _TCHAR* argv[])\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;[] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;    kailadescope &amp;#34;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; ilen &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strnlen&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;));\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; cTemp &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; bFound_spa &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; bFound_wrodstart &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; iWordCount &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; word_pos_start &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; word_pos_end &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; front_spa_pos_start &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; ilen; i&amp;#43;&amp;#43;)\n    {\n        cTemp &amp;#61; *(&lt;span class=\"hljs-type\"&gt;word&lt;/span&gt; &amp;#43; i);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((cTemp - &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (bFound_spa &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;)\n            {\n                bFound_spa &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n                front_spa_pos_start &amp;#61; i;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (bFound_spa&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;)\n            {\n                word_pos_end &amp;#61; i;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((cTemp&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; cTemp&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;) || (cTemp&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; cTemp&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;))\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (bFound_wrodstart &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;)\n            {\n                bFound_wrodstart &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n                word_pos_start &amp;#61; i;\n            }\n            iWordCount&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;// 前面有空格数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; iFrontSpaNum &amp;#61; word_pos_start - front_spa_pos_start;\n\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; newWord[WCHAR_MAX] &amp;#61; { &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;};\n\n    &lt;span class=\"hljs-built_in\"&gt;memcpy&lt;/span&gt;(newWord, &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;, word_pos_end&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; iFrontSpaNum; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;memcpy&lt;/span&gt;(newWord &amp;#43; word_pos_end &amp;#43; i, &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;前面有%d个空格&amp;#34;&lt;/span&gt;, iFrontSpaNum);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, newWord);\n\n    _tsystem(&lt;span class=\"hljs-string\"&gt;L&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/309771791436131.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["控制输出数据占空格个数", ["给出一个英文单词，要求前面有几个空格，后面有几个空格，这种要运用什么来进行控制"]], "Tag": "程序设计"}
{"Answer": "```\r\n class A\r\n{\r\npublic:\r\n\tvoid Test();\r\npublic:\r\n\tint nX;\r\n\tint nY;\r\n};\r\n\r\nvoid A::Test()\r\n{\r\n\tnX = 10;\r\n\tnY = 20;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n\tA TestA;\r\n\tTestA.Test();\r\n\tcout &lt;&lt;TestA.nX &lt;&lt; \" \" &lt;&lt;TestA.nY;\r\n｝\r\n```", "Konwledge_Point": "数据的输出", "Question": ["C++main()函数里怎么样输出类中的变量？", ["bool CCarPark::cal()", "\n{", "\n    double Rmin = Al / tan(Amax * PI / 180);", "\n    double D = 200;                                    //预留宽度", "\n    double M = (Al + Ef) * (Al + Ef) + 2 * Rmin * Vm + (2 * Rmin - Vm) * D - D * D;", "\n\n", "//求最小车位长\ndouble SL = sqrt(M) + Er + D;\n// 求theta角\ndouble P = Vm / 2 - Rmin + D;\ndouble Q = (Vm * D - 2 * Rmin * D + D * D + (Er + D - SL) * (Er + D - SL)) / (4 * Rmin) + Rmin;\ndouble a = (SL - D - Er) * (SL - D - Er) + (Rmin - Vm / 2 - D) * (Rmin - Vm / 2 - D);\ndouble b = 2 * (Er + D - SL) * Q;\ndouble c = Q * Q - P * P;\ndouble Ang = asin((-b - sqrt(b * b - 4 * a * c)) / (2 * a));       //与x轴的角度(弧度的表示形式)\ndouble  theta = Ang * 180 / PI;                                     //转换为角度表示形式\n\n//求起始点坐标，以车位左下角为圆心\nstatic int x0 = 2 * Rmin * sin(Ang) + Er + D;                           //横坐标\nstatic int y0 = 2 * Rmin - 2 * Rmin * cos(Ang) - Vm / 2 + Ws - D;       //纵坐标\n\n//转换点坐标\nint x1 = x0 - Rmin * sin(Ang);\nint y1 = y0 - Rmin * (1 - cos(Ang));\n\n//对车身轨迹进行描点\nfor (int i = 0; i <= 265; i++)\n{\n    double N = 10 * i / Rmin;\n    m_pxTrack[i].x =  x0 - Rmin*sin(N);\n    m_pxTrack[i].y = Rmin*cos(N) + y0 - Rmin;\n}\n\nreturn true;\n", "\n\n", "}", "\nint main()", "\n{", "\n    CCarPark park(38,4475,1840,925,905,2645);", "\n    park.cal();", "\n    cout  << SL << endl;", "\n  cout  x0 << \",\" << y0 << endl;", "\n    system(\"pause\");", "\n    return 0;", "\n}", "\n\n", "程序太长，就不全部po出来了，这是一部分，该定义的都定义了，现在就想在main()函数里面输出SL和x0与y0，求助大神，最近经常在这种小问题上出错，看来还是基础没打好，谢谢"]], "Tag": "程序设计"}
{"Answer": "试下下面代码。\r\n\r\n1，insert语句后面漏了个 ）\r\n2，追加 pst.addBatch();\r\n\r\n```\r\n@Override\r\n\tpublic void addAllEmp(List&lt;Employee&gt; employees) {\r\n\t\tConnection conn = null;\r\n\t\tPreparedStatement pst = null;\r\n\t\ttry {\r\n\t\t\tconn = JDBCUtil.getConnect();\r\n\t\t\tconn.setAutoCommit(false);\r\n\r\n\t\t\t// add \")\" for missing\r\n\t\t\t// pst = conn.prepareStatement(\r\n\t\t\t// \"insert into jdbc_emp values(jdbc_emp_id.nextval,?,?,?\");\r\n\t\t\tpst = conn.prepareStatement(\r\n\t\t\t\t\t\"insert into jdbc_emp values(jdbc_emp_id.nextval,?,?,?)\");\r\n\r\n\t\t\tint count = 0;\r\n\t\t\tfor (Employee employee : employees) {\r\n\t\t\t\tpst.setString(1, employee.getName());\r\n\t\t\t\tpst.setString(2, employee.getPassword());\r\n\t\t\t\tpst.setDouble(3, employee.getSal());\r\n\t\t\t\t// add addBatch()\r\n\t\t\t\tpst.addBatch();\r\n\t\t\t\tcount++;\r\n\t\t\t\tif (count == 100) {\r\n\t\t\t\t\t// 执行批处理\r\n\t\t\t\t\tpst.executeBatch();\r\n\t\t\t\t\t// 清空参数\r\n\t\t\t\t\tpst.clearParameters();\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpst.executeBatch();\r\n\t\t\tconn.commit();\r\n\t\t} catch (ClassNotFoundException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (SQLException e) {\r\n\t\t\t/*\r\n\t\t\t * if (conn != null) { try { conn.rollback(); } catch (SQLException\r\n\t\t\t * e1) { e1.printStackTrace(); } }\r\n\t\t\t */\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t} finally {\r\n\t\t\tJDBCUtil.close(conn, pst);\r\n\t\t}\r\n\t}\r\n\r\n```", "Konwledge_Point": "数据的输出", "Question": ["JAVA中使用JDBC做批量处理时，没有报错，但是数据没有插入数据库", ["@Override\npublic void addAllEmp(List<Employee> employees) {\n    Connection conn = null;\n    PreparedStatement pst = null;\n    try {\n        conn = JDBCUtil.getConnect();\n        conn.setAutoCommit(false);\n        pst = conn.prepareStatement(\"insert into jdbc_emp values(jdbc_emp_id.nextval,?,?,?\");\n        int count = 0;\n        for (Employee employee : employees) {\n            pst.setString(1, employee.getName());\n            pst.setString(2, employee.getPassword());\n            pst.setDouble(3, employee.getSal());\n            count++;\n            if (count==100) {\n                //执行批处理\n                pst.executeBatch();\n                //清空参数\n                pst.clearParameters();\n                count = 0;\n            }\n        }\n        pst.executeBatch();\n        conn.commit();\n    } catch (ClassNotFoundException e) {\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    } catch (SQLException e) {\n        /*if (conn != null) {\n            try {\n                conn.rollback();\n            } catch (SQLException e1) {\n                e1.printStackTrace();\n            }\n        }*/\n        // TODO Auto-generated catch block\n        e.printStackTrace();\n    }finally{\n        JDBCUtil.close(conn, pst);\n    }\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;static void Main(string[] args)\n        {\n            int xb &amp;#61; 0;\n            int[] sZInt &amp;#61; new int[7] { 6, 3, 8, 4, 1, 9, 4 };\n            int max &amp;#61; sZInt[0];\n            int min &amp;#61; sZInt[0];\n            for (int i &amp;#61; 0; i &amp;lt; sZInt.Count(); &amp;#43;&amp;#43;i)\n            {\n                if (max &amp;lt; sZInt[i])\n                {\n                    max &amp;#61; sZInt[i];\n                    xb &amp;#61; i;\n                }\n            }\n            Console.WriteLine(&amp;#34;max&amp;#61; &amp;#34; &amp;#43; max &amp;#43; &amp;#34;,下标 &amp;#61; &amp;#34; &amp;#43; xb);\n \n            for (int i &amp;#61; 0; i &amp;lt; sZInt.Count(); &amp;#43;&amp;#43;i)\n            {\n                if (min &amp;gt; sZInt[i])\n                {\n                    min &amp;#61; sZInt[i];\n                    xb &amp;#61; i;\n                }\n            }\n            Console.WriteLine(&amp;#34;min&amp;#61; &amp;#34; &amp;#43; min &amp;#43; &amp;#34;,下标 &amp;#61; &amp;#34; &amp;#43; xb);\n            Console.Read();\n        }&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;c#中用正则过滤所有标点符号&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt; str &amp;#61; Regex.Replace(str, &amp;#34;[\\\\s\\\\p{P}\\n\\r&amp;#61;&amp;lt;&amp;gt;$&amp;gt;&amp;#43;&amp;#xffe5;^]&amp;#34;, &amp;#34;&amp;#34;);&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["C#中的一组数组如何输出最大值和最小值的下标", ["前提不改变数组的输入顺序，然后如何输出最大值最小值时同时输出它们的下标\n另外一个是如何自动过滤掉输入数据带的标点符号"]], "Tag": "程序设计"}
{"Answer": "你好，可以看一下你的User类么，是不是EL表达式$中没有对应上？\r\nUser类中要有相应的set，get方法，${con.uname}这种写法默认调用get方法。\r\n\r\n可以放一下浏览器的截图么？", "Konwledge_Point": "数据的输出", "Question": ["jsp页面调用servlet数据问题，数据不显示，求大佬呀", ["dao层实现类测试过，可以输出数据", "\n\n", "应该只是jsp和Servlet之间数据传输问题，jsp页面运行后也没有报错，考虑过是不是路径问题，但怎么修改，都没有显示", "\n\n", "Servlet界面：", "\n\n", "\n\n", "jsp界面：", "\n\n", "\n\n", "请问哪里出错了，救救毕设的孩子", "\n\n", "我的User类：", "\n\n", "package project;\n\nimport java.util.Date;\n\npublic class User {\n    private Long uid;//id\n    private String usex;\n    private String uname;//昵称\n    private String upwd;//密码\n    private String uphone;//电话\n    private String uemail;//邮件\n    private Date ubirth;//出身日期\n    private String uaddress;//住址\n\n    private String ucomment;//备注\n\n    public Long getUid() {\n        return uid;\n    }\n\n    public void setUid(Long uid) {\n        this.uid = uid;\n    }\n\n    public String getUsex() {\n        return usex;\n    }\n\n    public void setUsex(String usex) {\n        this.usex = usex;\n    }\n    public String getUname() {\n        return uname;\n    }\n\n    public void setUname(String uname) {\n        this.uname = uname;\n    }\n\n    public String getUpwd() {\n        return upwd;\n    }\n\n    public void setUpwd(String upwd) {\n        this.upwd = upwd;\n    }\n\n    public String getUphone() {\n        return uphone;\n    }\n\n    public void setUphone(String uphone) {\n        this.uphone = uphone;\n    }\n\n    public String getUemail() {\n        return uemail;\n    }\n\n    public void setUemail(String uemail) {\n        this.uemail = uemail;\n    }\n\n\n    public Date getUbirth() {\n        return ubirth;\n    }\n\n    public void setUbirth(Date ubirth) {   \n        this.ubirth = ubirth;\n    }\n\n\n\n    public User(Long uid, String uname, String upwd,String usex,String uaddress, String uphone, String uemail, Date ubirth,String ucomment) {\n        this.uid = uid;\n        this.uname = uname;\n        this.upwd = upwd;\n        this.ucomment = ucomment;\n        this.usex = usex;\n        this.uaddress=uaddress;\n        this.uphone = uphone;\n        this.uemail = uemail;\n        this.ubirth = ubirth;\n    }\n\n    public User() {\n    }\n\n    @Override\n    public String toString() {\n        return \"User{\" +\n                \"uid=\" + uid +\n                \", uname='\" + uname + '\\'' +\n                \", upwd='\" + upwd + '\\'' +\n                \", usex='\" + usex + '\\'' +\n                \", uaddress='\" + uaddress + '\\'' +\n\n                \", uphone='\" + uphone + '\\'' +\n                \", uemail='\" + uemail + '\\'' +\n                \", ubirth=\" + ubirth +\n                \", ucomment=\" + ucomment +\n                '}';\n    }\n\n    public String getUaddress() {\n        return uaddress;\n    }\n\n    public void setUaddress(String uaddress) {\n        this.uaddress = uaddress;\n    }\n\n    public String getUcomment() {\n        return ucomment;\n    }\n\n    public void setUcomment(String ucomment) {\n        this.ucomment = ucomment;\n    }\n\n}\n\n", "\n\n", "EL表达式", "\n\n", "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n", "\n\n", "浏览器："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf(&amp;#34;%d&amp;#34;,n); 改为 scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/438261723666154.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["输入数值后没有输出是为什么", ["#include <stdio.h>", "int main(){", "int n,p=1,sum=0;", "scanf(\"%d\",n);", "for(int a=1;a<=n;a++)", "{for(int i=1;i<=a;i++)", "{p=p*i;", "sum=sum+p;};", "printf(\"%d\",sum);};", "\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;yt&lt;/span&gt; &amp;#61; xlsread(&lt;span class=\"hljs-string\"&gt;&amp;#39;a.xlsx&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;for j&lt;/span&gt;&amp;#61;3:24\n    disp(yt(j,:));   \n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["matlab如何循环的一行一行的输出Excel的数据", ["运行结果及报错内容", "\n", "for", " ", "j", "=", "3", ":", "24", "\n    yt = xlsread(", "'a.xlsx'", ",", "'B[j]:F[j]'", ");\n    ", "disp", "(yt);   \n", "end", "\n", "\n", "上面的是matlab的代码，出现报错如下，想要实现的一行一行的输出Excel中的数据，请问代码应该如何书写才正确。", "\n", "错误使用 xlsread", "数据范围 'B[j]:F[j]' 无效。", "\n", "出错 project01 (第 6 行)", "yt = xlsread('a.xlsx','B[j]:F[j]');"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你试试这个&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) throws UnsupportedEncodingException {\n        \n        byte&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; b &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;这个数据是中文&amp;#xff01;可能会出现乱码&amp;#34;&lt;/span&gt;.get&lt;span class=\"hljs-constructor\"&gt;Bytes()&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Arrays&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)&lt;/span&gt;);\n        byte&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; b2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;这个数据是中文&amp;#xff01;可能会出现乱码&amp;#34;&lt;/span&gt;.get&lt;span class=\"hljs-constructor\"&gt;Bytes(&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Arrays&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;b2&lt;/span&gt;)&lt;/span&gt;);\n\n        &lt;span class=\"hljs-comment\"&gt;// 解码&lt;/span&gt;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)&lt;/span&gt;);\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;)&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;// 编码和解码规则不一致 &amp;#61;&amp;#61;》出现乱码问题&lt;/span&gt;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;b2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;GBK&amp;#34;&lt;/span&gt;)&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;// 编码和解码规则不一致 &amp;#61;&amp;#61;》出现乱码问题&lt;/span&gt;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;b2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;)&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;// 编码和解码规则一致 &amp;#61;&amp;#61;》不会出现乱码问题&lt;/span&gt;\n\n    }\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["IDEA2020版本使用IO流写入数据出现乱码，更改过一些配置，还是没有效果", ["发生错误的代码：", "向指定文件写入数据的内容：", "\n", "尝试过的解决方法：", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "你是想在屏幕固定位置输出一个数组吧?\r\n可以加一条清屏，然后在输出相关内容：\r\nsystem(\"cls\");", "Konwledge_Point": "数据的输出", "Question": ["新手提问！C++的！怎么对已经输出的数据进行操作呢？", ["只想恒输出一个数组，而这个数组在随后的操作中会改变。不想这样不断地输出数组，", "\n怎么办呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;照着改不就好了&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/xq_nbu/article/details/116057886\" id=\"textarea_1658132676467_1658132733152_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/xq_nbu/article/details/116057886&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["jupyter输出太大导致崩溃的问题", ["看了相关资料，但不懂改的是哪里。或者有什么其他办法也可以教一下!"]], "Tag": "程序设计"}
{"Answer": "因为你直接写整数。那么它的乘法其实是整数乘法，最后转换为double\r\n而整数乘法溢出了。\r\n\r\ndoube b=(double)111111111*(double)111111111;\r\n这么写看看", "Konwledge_Point": "数据的输出", "Question": ["double类型的数据printf输出，当值很大时的输出问题", ["  double a=11111*11111;\ndoube b=111111111*111111111;\ndouble c=11个1*11个1;\n\n", "\n\n", "三者输出如下：", "\n为什么会这样？", "\n同时，对于int型也有下面的结果：", "\n不是非常理解。希望能够得到解答，谢谢！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有报错的情况下 控制台都没有输出那就先看方法 你的EmpList是对象还是业务层&amp;#xff0c;查看内部queryalls方法&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Java web项目servlet里的代码逻辑都对了，但是为什么信息显示不出来", ["在servlet里面写了这条测试数据，但是控制台显示没有值", "System.out.println(\"count:\"+empLists.size());", "\n", "这是我的代码及运行结果", "\n", "\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/acm_mercyking/article/details/49914779", "Konwledge_Point": "数据的输出", "Question": ["数据的交换输出                         ", ["Problem Description", "\n输入n(n<100)个数，找出其中最小的数，将它与最前面的数交换后输出这些数。", "\n\n", "Input", "\n输入数据有多组，每组占一行，每行的开始是一个整数n，表示这个测试实例的数值的个数，跟着就是n个整数。n=0表示输入的结束，不做处理。", "\n\n", "Output", "\n对于每组输入数据，输出交换后的数列，每组输出占一行。", "\n\n", "Sample Input", "\n4 2 1 3 4", "\n5 5 4 3 2 1", "\n0", "\n\n", "Sample Output", "\n1 2 3 4", "\n1 4 3 2 5"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use &lt;a href=\"http://php.net/manual/en/function.list.php\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; and &lt;a href=\"http://php.net/manual/en/function.explode.php\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;explode()&lt;/code&gt;&lt;/a&gt; functions to achieve the desired result.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;list($var1, $var2, $var3) = explode(\",\", $pattern);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Here's the demo, &lt;a href=\"https://eval.in/836182\" rel=\"nofollow noreferrer\"&gt;&lt;strong&gt;https://eval.in/836182&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["从包含3个以逗号分隔的数字的字符串中提取数字", ["\n\n", "I have this variable: ", "$pattern = \"73,1,72\";", " //string in quotes", "\n\n", "I want to create 3 new variables, first one should contain first value, second the second, and the third should contain the third.", "\n\n", "So eventually should have these values:", "\n\n", "$var1 == 73\n$var2 == 1\n$var3 == 72\n", "\n\n", "How can I extract those numbers?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;imort&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-attribute\"&gt;z&lt;/span&gt; &amp;#61; np.zeros(&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&amp;#39;int64&amp;#39;).reshape(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;z&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:] &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["Python数据分析与可视化实践", ["创建一个长度为9的一维全为0的、数据类型为int64的ndarray对象z，然后将z的形状变为3*3的矩阵，将第二行第三列元素置为1"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;#34;stdafx.h&amp;#34;\n\nint main()\n{\n    // 定义一个整型数组, 并进行初始化赋值16个数据 : \n    int arr[] &amp;#61; {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};\n    int length &amp;#61; 0;\n    int sum &amp;#61; 0;\n    float average &amp;#61; 0;//平均值\n    // 计算数组中数据长度 :\n    // 所有数据的字节数除以一个数据的字节数即为数据的个数 : \n    length &amp;#61; sizeof(arr) / sizeof(int);\n    for(int i &amp;#61;0;i&amp;lt;length;i&amp;#43;&amp;#43;){\n        sum &amp;#61; sum &amp;#43; arr[i];\n    }\n    //计算出数组的平均值\n    average &amp;#61; (float)sum / length;\n    //遍历输出所有比平均值小的数\n    printf(&amp;#34;比平均值小的数有&amp;#xff1a;\\n&amp;#34;);\n    for(int i &amp;#61;0;i&amp;lt;length;i&amp;#43;&amp;#43;){\n        if(arr[i]&amp;lt;average){\n            printf(&amp;#34;%d &amp;#34;,arr[i]);\n        }\n    }\n    printf(&amp;#34;\\n&amp;#34;);\n    getchar();\n    return 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" src=\"https://bbs.leyuz.net/uploads/201811/02/15410930672201.jpeg\" /&gt;&lt;img alt=\"\" src=\"https://bbs.leyuz.net/uploads/201811/02/15410930672201.jpeg\" /&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["1.将n个数据存放到数组中(其中n是小于等于100的整数)，找出数组中比这n个数平均值小的数。\n\n2", ["1.将n个数据存放到数组中(其中n是小于等于100的整数)，找出数组中比这n个数平均值小的数。\n\n2.设计程序,求一个矩阵对角线上元素之和。\n\n3.设计程序,求一个4行4列二维数组周边元素之和。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;js 里用 innerHTml属性 。vue里v-html 指令 。react里 dangerouslySetInnerHTML&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["富文本框数据回显后携带HTML标签的问题", ["通过quill-editor富文本组件编写的数据，从数据库回显后带有HTML标签，如图：", "\n", "\n", "会显得数据放在一个div中，但被前端解析成了字符串。想问下怎么才能把它变成一个HTML"]], "Tag": "程序设计"}
{"Answer": "response.sendRedirect(request.getContextPath() + \"/main.jsp\"); -&gt;\r\n\r\nresponse.sendRedirect(response.encodeRedirectURL(request.getContextPath() + \"/main.jsp\"));\r\n\r\n\r\n你的应该是jessionid丢失，所以下次会新建一个session故为null，你可以看下main.jsp是没有cookie名称jessionid的", "Konwledge_Point": "数据的输出", "Question": ["JSP调用Servlet后，通过request.getSession().getAttribute(\"XX\")，数据丢失", ["问题描述：", "\n1.首先通过login.jsp登陆系统，用户验证通过后，讲用户信息设置到session中，具体代码如下：", "\n[code=\"java\"]", "\nUser user = UserManager.getInstance().login(userId, password);", "\n\n", "session.setAttribute(\"user_info\", user);", "\n\n", "//session.setMaxInactiveInterval(60*60);", "\n\n", "response.sendRedirect(request.getContextPath() + \"/main.jsp\");", "\n[/code]", "\n2.上面定向到main.jsp页面后，user_info数据存在。", "\n3.然后我在此页面中写入如下请求servlet代码后，", "\n[code=\"js\"]", "\nfunction addFlowCard() {", "\n    window.self.location = \"<%=basePath%>servlet/FlowCardServlet?command=${showAdd}\";", "\n}", "\n[/code]", "\n4.在servlet里面取得的值却为null，，代码如下", "\n[code=\"java\"]", "\n@Override", "\nprotected final void service(HttpServletRequest request, HttpServletResponse response)", "\n    throws ServletException, IOException {", "\n    command = request.getParameter(\"command\");", "\n    user = (User) request.getSession().getAttribute(\"user_info\");", "\n    super.service(request, response);", "\n}", "\n[/code]", "\n5.上面request.getSession().getAttribute(\"user_info\")取得的值为null。", "\n6.请各位看看哪里有问题？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;看下接口&amp;#xff0c;代码是否做了vo映射&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Idea控制台返回的值，和postman里面返回的值不一样", ["有没有人知道为啥为啥我在idea控制台能看到全部数据，但是在postman里面和vue里面有一些是null值的", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.首先后端先跑测试文件&amp;#xff0c;保证生成的PDF没有问题。&lt;br /&gt;2.其次在通过浏览器去直接访问链接&amp;#xff0c;保证PDF可以下载&lt;br /&gt;3.在查看前端设置的头是不是blob&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["处理后端返回的流，导出为PDF文件提示“文件已损坏”", ["前端处理后端返回的文件流，导出为PDF文件下载，下载后提示“文件已损坏”，不知道问题出在哪", "下图是发请求时的代码，用的axios库", "\n", "下图是打开PDF文件时的提示", "\n", "\n", "下图是响应回来的数据输出", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Arrays;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Test {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        Scanner sc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;请输入个数(正整数)&amp;#xff1a;&amp;#34;);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count &amp;#61; sc.nextInt();\n        &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;[] numbers &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;[count];\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; count; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;请输入第&amp;#34; &amp;#43; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &amp;#34;个数字&amp;#34;);\n            input &amp;#61; sc.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                max &amp;#61; min &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;;\n            }\n            numbers[i] &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;;\n            max &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; &amp;gt; max ? &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; : max;\n            min &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; &amp;lt; min ? &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; : min;\n        }\n        sc.&lt;span class=\"hljs-keyword\"&gt;close&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34;数组的内容为&amp;#xff1a;&amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(Arrays.asList(numbers));\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;最大值&amp;#xff1a;&amp;#34; &amp;#43; max);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;最小值&amp;#xff1a;&amp;#34; &amp;#43; min);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["由键盘确定数组的个数，并输入对应数据，然后将数组的最大和最小值输出。", ["由键盘确定数组的个数，并输入对应数据，然后将数组的最大和最小值输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;title &amp;#61; [i[&amp;#39;title&amp;#39;] for i in data[&amp;#39;data&amp;#39;][&amp;#39;list&amp;#39;]]&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n\n &lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么python爬取下来的json格式的数据解析后不能用列表推导式输出数据?", ["\n\n", " "]], "Tag": "程序设计"}
{"Answer": "scanf(\"%d/:%d/:%d\",&amp;c.hour,&amp;c.minute,&amp;c.second);\r\n-&gt;\r\nscanf(\"%d%%d\",&amp;c.hour,&amp;c.minute,&amp;c.second);", "Konwledge_Point": "数据的输出", "Question": ["C语言结构输出输出有关的问题", ["按照下面要求定义一个时钟结构体类型：", "\n\n", "struct clock\n{\n    int hour;\n    int minute;\n    int second;\n};\n", "\n\n", "然后，编程实现将时钟模拟显示在屏幕上。注意：时钟是24小时的。需要判断输入的数据是否合法。", "\n输入样例1：", "\n10,20,3", "\n输出样例1：", "\n10:20:03", "\n\n", "我写的代码是", "\n\n", "#include<stdio.h>\nstruct clock\n    {\n        int hour;\n        int minute;\n        int second;\n    };\nint main()\n{\n    struct clock c;\n    scanf(\"%d/:%d/:%d\",&c.hour,&c.minute,&c.second);\n    printf(\"%02d:%02d:%02d\",c.hour,c.minute,c.second);\n    return 0;\n} \n", "\n\n", "但只能正确输出小时，请问为什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/322768644646174.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n        &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; arr &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;]\n        &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;table&amp;gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;j&amp;#43;&amp;#43;){\n           &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;tr&amp;gt;&amp;#34;&lt;/span&gt;);\n           &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;#43;&amp;#43;){\n              &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;td&amp;gt;&amp;#34;&lt;/span&gt;&amp;#43;arr[i&amp;#43;j*&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;/td&amp;gt;&amp;#34;&lt;/span&gt;);\n           }\n           &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;write&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;/table&amp;gt;&amp;#34;&lt;/span&gt;);\n        &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["js 数据以特定行列表格形式输出的问题。", ["定义了这个数组，想以四行四列的形式按照数组数据从左到右顺序以表格的形式输出。", "单行输出没有问题，但是加上列数，这个循环就不知道怎么走了", "\n", "上代码的时候总是提示重复词或符号~~"]], "Tag": "程序设计"}
{"Answer": "你说的画面是sheet吧\r\n\r\nhttp://www.cnblogs.com/dyllove98/archive/2013/08/06/3241515.html", "Konwledge_Point": "数据的输出", "Question": ["请问制作的软件中输出数据到excel中能不能产生两个独立的画面？请问怎么做？谢谢", ["请问制作的软件中输出数据到excel中能不能产生两个独立的画面？请问怎么做？谢谢"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/fullsail/article/details/4067416", "Konwledge_Point": "数据的输出", "Question": ["关于用C输出exxel的问题", ["本人是从事C相关开发的，想要把数据输出到excel里面，指定格式，比如指定行列，修改颜色等等。目前使用的方法是com，已知的还有odbc，问下，有什么方法可以方便高效的输出，还有兼容excel不同版本？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport xlwt\nn &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\ndic &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;王五&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}\nwb &amp;#61; xlwt&lt;span class=\"hljs-selector-class\"&gt;.Workbook&lt;/span&gt;()\nsheet &amp;#61; wb&lt;span class=\"hljs-selector-class\"&gt;.add_sheet&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Sheet1&amp;#39;&lt;/span&gt;)\n\nsheet&lt;span class=\"hljs-selector-class\"&gt;.write&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Topics&amp;#39;&lt;/span&gt;)\nsheet&lt;span class=\"hljs-selector-class\"&gt;.write&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Count&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; dic:\n    sheet&lt;span class=\"hljs-selector-class\"&gt;.write&lt;/span&gt;(n, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i)\n    sheet&lt;span class=\"hljs-selector-class\"&gt;.write&lt;/span&gt;(n, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, dic&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;)\n    n &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\nwb&lt;span class=\"hljs-selector-class\"&gt;.save&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;test.xls&amp;#39;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["词频统计后的结果输出形式", ["当前代码实现了对于文本数据词频的统计，但是结果输出不太美观，不好使用", "现有代码：", "\n", "现在的结果形式：", "\n", "\n", "想在现有代码的基础上，实现结果输出到Excel，两列，词与出现的频数一一对应，目标结果如图：", "(其他较为美观、方便使用的数据格式也可以，不一定要输出到Excel）", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那就只能用double了&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["输出的数大于longlongint范围了应该怎么办？", ["超过longlongint范围应该怎么写？这串代码应该怎么改？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;},b[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,t,i,j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,k&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,m,x;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;t);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j&amp;lt;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;)\n    {\n        m &amp;#61; k;\n        x &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (m&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            b[x&amp;#43;&amp;#43;] &amp;#61; m%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            m /&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (x&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; j&amp;lt;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;)\n        {\n            a[j&amp;#43;&amp;#43;] &amp;#61; b[--x];\n        }\n        k&amp;#43;&amp;#43;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;t;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,a[n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "数据的输出", "Question": ["将所有正整数连在一起，组成一个无限长的字符串 123456789101112131415…", ["题一：将所有正整数连在一起，组成一个无限长的字符串 123456789101112131415…", "你输出该字符串的第 n 位字符。", "字符位次从 1 开始计数。", "\n", "输入描述:", "第一行包含整数 T，表示共有 T 组测试数据。", "每组数据占一行，包含一个整数 n。", "\n", "输出描述:", "每组数据输出占一行，输出第 n 位字符。", "1≤T≤1000，1≤n≤1000。", "\n", "示例1", "输入", "2", "3", "11", "\n", "输出", "3", "0", "题二：", "给定一个 n 个点 m 条边的有向图。", "\n", "图中可能包含重边和自环，也可能不连通。", "\n", "给每个点分配一个小写字母。", "\n", "我们定义一条路径的权值为出现频率最高的字母的出现次数。", "\n", "例如，如果一条路径上的字母是 abaca，则该路径的权值为 3。", "\n", "请你找到给定图中权值最大的路径，输出这个最大路径权值。", "\n", "输入描述:", "第一行包含两个整数 n和 m。", "\n", "第二行包含一个由小写字母构成的字符串 s，其中第 i 个字母表示第 i 个点上的字母。", "\n", "接下来 m 行，每行包含两个整数 x,y 表示存在一条从点 x 到点 y 的边。", "\n", "所有点的编号为 1∼n。", "\n", "输出描述:", "输出最大路径权值。", "\n", "如果这个权值是无穷大，则输出 −1。", "\n", "示例1", "输入", "5 4", "abaca", "1 2", "1 3", "3 4", "4 5", "\n", "输出", "3", "\n", "示例2", "输入", "6 6", "xzyabc", "1 2", "3 1", "2 3", "5 4", "4 3", "6 4", "\n", "输出", "-1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有一种有意思的方法是这样&lt;/p&gt;\n&lt;p&gt;比如我要在矩阵A的第一列生成a到b的随机数&amp;#xff0c;就可以用A(:,1)&amp;#61;a&amp;#43;(b-a)*rand(size(A(:,1)))&lt;/p&gt;\n&lt;p&gt;对多列进行操作的话加个for对列进行循环操作应当就可以&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["Matlab里如何输出一个随机的m行n列的矩阵，并且每一列要可以定义不同的取值范围？", ["问题遇到的现象和发生背景", "\n", "Matlab里如何输出一个随机的m行n列的矩阵，并且每一列要可以定义不同的取值范围。", "\n", "问题相关代码", "\n", "想要输出一个随机m行n列矩阵很简单,用rand()函数就好", "\n", "x", " = rand(m,n)", ";", "\n", "\n", "如果想要输出矩阵里的数都在1-1000的范围内，让rand函数乘以个1000就好", "\n", "我想要达到的结果", "\n", "但是我想要的是这个矩阵输出的每一列的数都有一个取值范围，比如我输出一个10行5列的矩阵，第一列范围是10-1000的随机数，第二列范围是50-500随机数，第三列范围是0-50的随机数，第四列范围是10-100的随机数，第5列是66-88的随机数。", "这样的情况还可以用rand函数么，还是用其他的什么方法，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你遍历前三条取出来&amp;#xff0c;然后把数据返回不就可以吗&amp;#xff1f; 哪一步不会&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["使用controller如何筛选从数据库中获取的数据？(语言-java)", ["已经从数据库中将数据获取到也已经封装好了，然后将数据根据id进行判断区分，之后输出其他的数据，但是还要加一个条件，只输出前三条数据。感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;useEffetc第二个参数就是&amp;#xff0c;依赖项&amp;#xff0c;依赖项发生变化。才运行。可以借助这个&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n useEffect(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt; {\n  \n  }, [demoObj]);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["react怎么监听useState方式的数据更新？", ["如图所示，打印输出的全是undefined。这是因为useState赋值方式是异步的，我怎么才能知道数据是否已经被更新并打印出来呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是输出0.000000 前面没有-号的&lt;br /&gt;printf中&amp;#xff0c;%8.6f表示显示一个浮点数&amp;#xff08;float类型&amp;#xff09;&amp;#xff0c;8表示至少显示8个字符&amp;#xff0c;如果不足8个字符在前面补空格。.6表保留小数点后面6位数字&amp;#xff0c;如果不够6位小数的话&amp;#xff0c;就在后面用0补齐6位小数。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x1&amp;#61;%8.6f\\n&amp;#34;&lt;/span&gt;,x1);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/780534507536142.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么C语言printf输出%.6f时（存放的数据是0），会显示-0.000000，编译器是DEV", ["为什么C语言printf输出%.6f时（存放的数据是0），会显示-0.000000，编译器是DEV", "\n", "if(fabs(d)<=1e-6)", "        {", "            printf(\"x1=x2=%8.6f\\n\",x1);", "        }"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-sql\"&gt;select repeat(&amp;#39;*&amp;#39;, day) from hr.employees;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["SQL如何根据查询结果进行相应的输出？", ["例如有hr.employees数据库，其中有一个数据列叫做day，不同的人对应的day不同，但day的值都在0-300之间，", "\n要求查询day值，根据day而输出相同数量的‘*’，比如day是8，那么查询结果为********，day是5，查询结果就显示为*****", "\n请问这个sql语句怎么写"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    ldr &lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;,[&lt;span class=\"hljs-built_in\"&gt;r5&lt;/span&gt;],#&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;  //把&lt;span class=\"hljs-built_in\"&gt;r5&lt;/span&gt;中当前地址对应的值给&lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;&amp;#xff0c;然后再给&lt;span class=\"hljs-built_in\"&gt;r5&lt;/span&gt;自&amp;#xff0b;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#xff0c;让它指向数组中的下一个数\n    &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;r6&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;    //  sum&amp;#43;&amp;#61;L[i]  把当前&lt;span class=\"hljs-built_in\"&gt;r2&lt;/span&gt;的值加到&lt;span class=\"hljs-built_in\"&gt;r6&lt;/span&gt;&amp;#xff0c;多次循环就实现了累加\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;a href=\"https://blog.csdn.net/GRT609/article/details/123995062?spm&amp;#61;1001.2014.3001.5501\" id=\"textarea_1649255172847_1649255278578_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;详见ARM汇编循环框架&amp;#xff0c;数组累加&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;ARM汇编数组求和、ARM汇编语句循环框架&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/GRT609/article/details/123995062?spm&amp;#61;1001.2014.3001.5501&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["arm汇编语言 如何实现 数组中数据累加 然后用printf输出", ["练习ARM汇编语言，可以实现，循环输出数组中的数据，", "\n想问，应该如何才能通过循环累加，把数组中的和求出，然后用输出显示出来", "\n\n", "\n", ".data\n    fmt:.asciz \"%10d\\n\"\n    ary:.word 0,1,2,3,4,5,6,7,8,9\n    .equ counter,( . - ary)/4\n.text\n.globl main\n main:\n    stmfd sp!,{lr}\n    mov r4,#0\n    mov r6,#0\n    ldr r5, =ary\n    b testfor\nloop:\n        ldr r0,=fmt\n        ldr r1,[r5],#4\n        bl printf\n        add r4,#1\ntestfor:cmp r4,#counter\n        blt loop\n    mov r0, #0\n    ldmfd sp!,{lr}\n    mov pc, lr\n.end\n ", "\n\n", "输出的结果是：", "\n\n", "0", "\n1", "\n2", "\n3", "\n4", "\n5", "\n6", "\n7", "\n8", "\n9", "\n\n", "我想要达到的结果，向下面这个C语言一样输出 ，sum", "\n\n", "\n", "#include<stdio.h>\nint main(){\n    int ary[10] = {0,1,2,3,4,5,6,7,8,9};\n    int sum, i;\n    sum = 0;\n    for ( i = 0; i < 10; i++)\n    {\n        sum =sum +ary[i];\n    }\n    printf(\"%10d\\n\",sum);\n    return 0; \n}\n "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;student.h文件&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string&amp;gt;\nusing namespace std;\nclass Student\n{\npublic:\n\tStudent();\n\tvoid SetXh(string id);\n\tstring GetXh();\n\tvoid SetName(string name);\n\tstring GetName();\n\n\tvoid SetAge(int a);\n\tint GetAge();\n\tvoid SetCj1(float a);\n\tvoid SetCj2(float a);\n\tvoid SetCj3(float a);\n\tfloat GetCj1();\n\tfloat GetCj2();\n\tfloat GetCj3();\n\n\nprivate:\n\tstring mId;   //学号\n\tstring mName; //姓名\n\tint mAge;      //年龄\n\tfloat mChji1; //科目1成绩\n\tfloat mChji2; //科目1成绩\n\tfloat mChji3; //科目1成绩\n};\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;student.cpp文件&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;#34;student.h&amp;#34;\n\nStudent::Student(){}\n\nvoid Student::SetXh(string id){mId &amp;#61; id;}\nstring Student::GetXh(){return mId;}\nvoid Student::SetName(string name){mName &amp;#61; name;}\nstring Student::GetName(){return mName;}\n\nvoid Student::SetAge(int a){mAge &amp;#61; a;}\nint Student::GetAge(){return mAge;}\nvoid Student::SetCj1(float a){mChji1 &amp;#61; a;}\nvoid Student::SetCj2(float a){mChji2 &amp;#61; a;}\nvoid Student::SetCj3(float a){mChji3 &amp;#61; a;}\nfloat Student::GetCj1(){return mChji1;}\nfloat Student::GetCj2(){return mChji2;}\nfloat Student::GetCj3(){return mChji3;}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;main.cpp文件&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string&amp;gt;\n#include &amp;#34;student.h&amp;#34;\nusing namespace std;\n\nint main()\n{\n\t//初始化学生数据,我只写了一个学生的&amp;#xff0c;其它的自己补上就行\n\tStudent st[3];\n\tst[0].SetXh(&amp;#34;00001&amp;#34;);\n\tst[0].SetName(&amp;#34;t1&amp;#34;);\n\tst[0].SetAge(22);\n\tst[0].SetCj1(88);\n\tst[0].SetCj2(32);\n\tst[0].SetCj1(88);\n\n\tprintf(&amp;#34;学号&amp;#xff1a;%s\\n&amp;#34;,st[0].GetXh().c_str());\n\tprintf(&amp;#34;姓名&amp;#xff1a;%s\\n&amp;#34;,st[0].GetName().c_str());\n\tprintf(&amp;#34;年龄&amp;#xff1a;%d&amp;#34;,st[0].GetAge());\n\t\n\tgetchar();\n\tgetchar();\n\treturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["设计一个学生类，其中数据成员有学号、姓名、年龄、3门课程的成绩，以及若干成员函数。", ["设计一个学生类，其中数据成员有学号、姓名、年龄、3门课程的成绩，以及若干成员函数。并利用这个类建立一个对象数组。同时编写主函数使用这个类，实现对学生数据的赋值和输出。要求：（1）使用成员函数实现对数据的输入、输出。（2）在头文件中完成类的声明，在.cpp中完成类的实现，在主文件（.cpp）中完成主函数编写。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、第一个days数组里面的十月份是31天&amp;#xff0c;写成30了&lt;br /&gt;2、注意你的scanf(&amp;#34;%d,%d&amp;#34;,&amp;amp;year,&amp;amp;month);两个%d中间有逗号&amp;#xff0c;你的输入也应该是要有逗号&amp;#xff0c;输入应该是2020&amp;#xff0c;3      或者是把scanf两个%d中间的逗号删除&amp;#xff0c;你就可以不用加逗号输入&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么输入数据之后没有输出", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nn &amp;#61; int(&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入一个正整数 n:&amp;#39;&lt;/span&gt;))\n\nnewn &amp;#61; { &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;: i*&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(newn)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/646418934356126.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/046748934356116.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["python问题：输入一个数字n，计算后，输出一个字典", ["问题如下：", "输入一个正整数 n，生成包含 （i， i*i）的字典，该字典包含 1 到 n所有整数（包含1在内），然后输出该字典。", "例如：如果输入9,程序的输出应该如下图：", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n string filename = \"x:\\\\path\\\\filename.csv\";\r\nFile.WriteAllText(filename, \"\");\r\nfor (int i = 0; i &lt;= 20; i++)\r\n{\r\nstring s = arrstring[0, i];\r\nfor (int j = 1; j &lt;= 5; j++) s += (\",\" + arrstring[j, i]);\r\ns+= \"\\r\\n\";\r\nFile.AppendAllText(filename, s);\r\n}\r\n```", "Konwledge_Point": "数据的输出", "Question": ["C#如何将保存在多维数组中的数据保存成CSV文件", ["创建了一个二维数组arrstring[10,20]", "\n如果将数组的每一列存放到一个CSV文件中的一列", "\n比如：", "\narrstring[0,0]-arrstring[0,20] 作为csv文件的第一列", "\narrstring[1,0]-arrstring[0,20] 作为CSV文件的第二列", "\n.", "\n.", "\n.", "\narrstring[10,0]-arrstring[0,20]作为csv文件的最后一列"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You should use PHP to handle HTTP request\nFor example index.php&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;form action=\"CStep3.php\" method=\"post\"&amp;gt;\n  &amp;lt;select name=\"grade\"&amp;gt;\n     .\n     .\n    &amp;lt;option value=\"7\"&amp;gt;Grade 7&amp;lt;/option&amp;gt;\n     .\n     .\n  &amp;lt;/select&amp;gt;\n&amp;lt;/form&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;CStep3.php file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n$grade = $_POST['grade']\n//Query your tution fee using mysql\n//$tution = mysqli...\necho \"This is your tution fee for grade \" . $grade . \":\" .$tution\n\n//if you dont have database connection\n$grade = $_POST['grade'];\n$tution = null;\nif ($grade == 7) {\n   $tution = 10000;\n} elseif ($grade == 8) {\n   $tution = 20000;\n} else {\n   $tution = 30000;\n}\necho \"This is your tution fee for grade \" . $grade . \":\" .$tution;\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "数据的输出", "Question": ["如何查看我使用的数据的结果或输出？", ["\n\n", "Good day! I just wanna ask. I have a drop down menu code in html, I want this code to see the results of a particular selection in drop down menu.\nHow? For Example I have a drop down menu and it's called grade level the content in this Drop down menu is from Grade 7-Grade 12 in my current page.  ", "\n\n", "Now all I want is when I select a particular grade level in my current page (e.g I choose Grade 7) and I clicked Next, I will get directed from next page which is CStep3.php with the result like \"This is your tuition fee in Grade 7 is $1000.\"", "\n\n", "\n", "P.S sorry if my English is so bad. ", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;刚吃饭去了,&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;这样的 : 其实上面已经可以实现了&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;import random\ncygz1 &amp;#61; 111\ncygz2 &amp;#61; 222\ncygz3 &amp;#61; 333\ncygz4 &amp;#61; 444\n\ni &amp;#61; random.randint(1,4)\neval(f&amp;#34;print(cygz{i})&amp;#34;)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;每次都会随机打印 111,222,333,444&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["在输出语句中怎么引用两个变量并且调用随机数", ["\n\n", "在底下的输出语句中，我想同时输出cygz{1-8}和gz{1-8}并保证cygz和gz的序号所对应，但我试了几种方法去执行随机数都会报错，想问下有比较好的办法吗（纯小白翻了半天百度没找到解决办法）"]], "Tag": "程序设计"}
{"Answer": "太复杂了，拿LINQ写了一个，看帮你转换的SQL\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Q1078172\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            DataClasses1DataContext db = new DataClasses1DataContext();\r\n            db.Log = Console.Out;\r\n            var query =\r\n                (from x in db.Table1s.OrderByDescending(x =&gt; x.qnt)\r\n                let acc = x.qnt + (db.Table1s.Any(y =&gt; x.qnt &lt;= y.qnt &amp;&amp; x.name != y.name) ? db.Table1s.Where(y =&gt; x.qnt &lt;= y.qnt &amp;&amp; x.name != y.name).Select(y =&gt; y.qnt).Sum() : 0)\r\n                 where acc &lt; db.Table1s.Select(y =&gt; y.qnt).Sum() * 60 / 100\r\n                 select new { acc, x }).OrderBy(x =&gt; x.acc);\r\n            \r\n            foreach (var item in query)\r\n                Console.WriteLine(item.x.name + \",\" + item.x.qnt + \",      \" + item.acc);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nhung,100,      100\r\nthai,80,      260\r\ncn,80,      260\r\n```\r\n对应的sql （表名叫Table1，国家id叫id，国家名称叫name，产量叫qnt）\r\n```\r\nSELECT [t3].[value] AS [acc], [t3].[id], [t3].[name], [t3].[qnt]\r\nFROM (\r\n    SELECT [t0].[id], [t0].[name], [t0].[qnt], [t0].[qnt] + (\r\n        (CASE\r\n            WHEN EXISTS(\r\n                SELECT NULL AS [EMPTY]\r\n                FROM [dbo].[Table1] AS [t1]\r\n                WHERE ([t0].[qnt] &lt;= [t1].[qnt]) AND ([t0].[name] &lt;&gt; [t1].[name]\r\n)\r\n                ) THEN (\r\n                SELECT SUM([t2].[qnt])\r\n                FROM [dbo].[Table1] AS [t2]\r\n                WHERE ([t0].[qnt] &lt;= [t2].[qnt]) AND ([t0].[name] &lt;&gt; [t2].[name]\r\n)\r\n                )\r\n            ELSE 0\r\n         END)) AS [value]\r\n    FROM [dbo].[Table1] AS [t0]\r\n    ) AS [t3]\r\nWHERE [t3].[value] &lt; (SELECT SUM([t0].[qnt]) * 60 / 100\r\nFROM [dbo].[Table1] AS [t0])\r\nORDER BY [t3].[value], [t3].[qnt] DESC\r\n```", "Konwledge_Point": "数据的输出", "Question": ["sql 语句：对某字段排序后，求占总数60%的前x条数据", ["如图：求前n条数据，这n条数据的产量之和，占总产量的60%", "\n（注意要按产品排序后的前n条数据）", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;错误1&amp;#xff1a;判断输入结束是根据scanf()的结果判断&amp;#xff0c;不是n&amp;#xff0c;改为while(scanf(&amp;#34;%d&amp;#34;,&amp;amp;n)!&amp;#61;EOF)&lt;br /&gt;错误2&amp;#xff1a;scanf(&amp;#34;%d&amp;#34;) 这个%d后面不要跟空格&lt;br /&gt;错误3&amp;#xff1a;if (min &amp;gt; a[i]) &amp;#xff1b; 这个后面多了个分号&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, i, max, min, x &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, y &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;, &amp;amp;n) !&amp;#61; EOF) {\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; avg &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i]);\n        }\n        max &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n        min &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (max &amp;lt; a[i]) {\n                max &amp;#61; a[i];\n                x &amp;#61; i;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (min &amp;gt; a[i]) {\n                min &amp;#61; a[i];\n                y &amp;#61; i;\n            }\n        }\n        a[x] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        a[y] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n            avg &amp;#43;&amp;#61; a[i];\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f\\n&amp;#34;&lt;/span&gt;, avg / (n - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么我这个输出超限呢？", ["/*题目:", "青年歌手大奖赛中，评委会给参赛选手打分。选手得分规则为去掉一个最高分和一个最低分，然后计算平均得分，请编程输出某选手的得分", "输入 :", "输入数据有多组，每组占一行，每行的第一个数是n(2＜n＜100)，表示评委的人数，然后是n个评委的打分。", "输出:", "对于每组输入数据，输出选手的得分，结果保留2位小数，每组输出占一行。", "样例输入复制", "3 99 98 97", "4 100 99 98 97", "样例输出复制", "98.00", "98.50", "*/", "#include <stdio.h>", "\n", "int main()", "{", "    int a[100];", "    int n, i, max, min, x = 0,y = 0;", "    scanf(\"%d \",&n);", "    while (n != EOF)", "    {", "        float avg = 0;", "        for (i = 0; i < n; i++)", "        {", "            scanf(\"%d \", &a[i]);", "        }", "        max = a[0];", "        min = a[0];", "        for (i = 0; i < n; i++)", "        {", "            if (max < a[i])", "            {", "                max = a[i];", "                x = i;", "            }", "            if (min > a[i]);", "            {", "                min = a[i];", "                y = i;", "            }", "        }", "        a[x] = 0;", "        a[y] = 0;", "        for (i = 0; i < n; i++)", "        {", "            avg += a[i];", "        }", "        printf(\"%.2f\\n\", avg/(n-2));", "    }", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "Java中的应该是这样写的：\r\n先导入包：import java.util.Scanner;\r\n下一步创建扫描仪：Scanner input=new Scanner(System.in);\r\n然后输入各位学生的各科成绩;\r\n函数平均分：avg();\r\n最高分：max();\r\n方差：设这组数据:x1、x2、x3、……、xn的平均数是M，先求出M，然后代入方差的公式就可以了：s²=[(x1-M)²+(x2-M)²+(x3-M)²+……+(xn-M)²]÷n", "Konwledge_Point": "数据的输出", "Question": ["如何把数据的直接输入输出的方式变成文件的导入导出方式  ", ["求哪位大神解下下面的程序应该怎么写代码", "\n如何把数据的直接输入输出的方式变成文件的导入导出方式 ", "\n\n", "在下面题中", "\n1、输入10个学生5门课成绩，分别用函数求：", "\n1）每个学生平均分；", "\n2）每门课的平均分；", "\n3）找出最高的分数所对应的学生和课程；", "\n4）求平均分方差： ，xi为某一学生的平均分。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;13的阶乘是6,227,020,800&amp;#xff0c;而int类型在32位机和64位机最大范围为-2147483648~2147483647&amp;#xff0c;超出范围&amp;#xff0c;建议使用更大的数据类型。&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["求阶乘问题，输入一个正整数n，输出n！", ["\n", "编译没有错误，但13的阶乘求出来为什么不对啊，应该是6227020800，但是运行出来的是1932053504，要小很多"]], "Tag": "程序设计"}
{"Answer": "https://www.zhihu.com/question/54041290", "Konwledge_Point": "数据的输出", "Question": ["C++数据结构排序问题输出和时间问题求助", ["随机生成300000个10～1000之间的数进行冒泡排序，选择排序，直接插入排序，堆排序，快速排序等方法进行排序并求出算法时间。自己写的程序不知道为什么没有输出，时间如何计算不知道，求大神告知。"]], "Tag": "程序设计"}
{"Answer": "读取磁力计数据后在设置磁力计为单次测量模式，顺序不要搞反了", "Konwledge_Point": "数据的输出", "Question": ["mpu9250读取磁力计数据不变", ["我用stm32读取mpu9250中的磁力计数据，但是发现其数值一直不会改变。我进行了一下尝试：1.将scl和sda线的GPIO口改为开漏输出 2.每读一次磁力计数据都经过如下流程（先开启bypass,再开启单次测量模式，然后读磁力计数据，再关闭bypass） 3.在开启bypass和开启单次测量模式后都加上了延时。 但是，试过了以上做法，读出来的磁力计数据还是不会改变，我实在不知道该怎么做了，不知道有没有大佬能指导一下", "\n这是我读取mpu9250原始数据的程序", "\n\n", "void data_to_computer(void)                //上位机版本：4.34\n{\n        uint8_t accbuf[6],grobuf[6],data_to_send[18];\n      uint8_t magbuf[6];\n\n        MPU_Read_Len(MPU9250_ADDR,MPU_ACCEL_XOUTH_REG,6,accbuf);\n        MPU_Read_Len(MPU9250_ADDR,MPU_GYRO_XOUTH_REG,6,grobuf);\n        //开通bypass\n      MPU_Write_Byte(MPU9250_ADDR,MPU_INTBP_CFG_REG,0X82);\n     delay_ms(6);\n      //AK8963每次读完以后都需要重新设置为单次测量模式\n    MPU_Write_Byte(AK8963_ADDR,MAG_CNTL1,0X11); \n      delay_ms(6);\n        MPU_Read_Len(AK8963_ADDR,MAG_XOUT_L,6,magbuf);\n        mpu_set_bypass(0);\n      delay_ms(6);\n\n        data_to_send[0] = accbuf[0];\n    data_to_send[1] = accbuf[1];\n    data_to_send[2] = accbuf[2];\n    data_to_send[3] = accbuf[3];\n    data_to_send[4] = accbuf[4];\n    data_to_send[5] = accbuf[5];\n\n    data_to_send[6] = grobuf[0];//取data[0]数据的高字节，\n    data_to_send[7] = grobuf[1];\n    data_to_send[8] = grobuf[2];\n    data_to_send[9] = grobuf[3];\n    data_to_send[10] = grobuf[4];\n    data_to_send[11] = grobuf[5];\n\n    data_to_send[12] = magbuf[0];\n    data_to_send[13] = magbuf[1];\n    data_to_send[14] = magbuf[2];\n    data_to_send[15] = magbuf[3];\n    data_to_send[16] = magbuf[4];\n    data_to_send[17] = magbuf[5];\n\n\n        for(int i = 0; i < 18; i ++)\n        {\n        Usart_SendByte(USART1,data_to_send[i]);  //发送18个u8数据\n        }\n\n}\n", "\n\n", "这是初始化的代码", "\n\n", "u8 MPU9250_Init(void)\n{\n    u8 res=0;\n    //IIC_Init();    \n    MPU_Write_Byte(MPU9250_ADDR,MPU_PWR_MGMT1_REG,0X80);       //复位MPU9250\n    delay_ms(100);  \n    MPU_Write_Byte(MPU9250_ADDR,MPU_PWR_MGMT1_REG,0X00);       //唤醒MPU9250\n    MPU_Set_Gyro_Fsr(3);                                       //陀螺仪传感器,±2000dps （人体姿态捕捉最好设置为2000dps,8g）\n    MPU_Set_Accel_Fsr(2);                                      //加速度传感器,±8g \n    MPU_Set_Rate(500);                                         //设置采样率500Hz\n    MPU_Write_Byte(MPU9250_ADDR,MPU_INT_EN_REG,0X00);          //关闭所有中断\n    MPU_Write_Byte(MPU9250_ADDR,MPU_USER_CTRL_REG,0X00);       //I2C主模式关闭\n    delay_ms(2);\n    MPU_Write_Byte(MPU9250_ADDR,MPU_FIFO_EN_REG,0X00);         //关闭FIFO\n    MPU_Write_Byte(MPU9250_ADDR,MPU_INTBP_CFG_REG,0X82);       //INT引脚低电平有效，开启bypass模式，可以直接读取磁力计\n    delay_ms(2);\n    res=MPU_Read_Byte(MPU9250_ADDR,MPU_DEVICE_ID_REG);         //读取MPU6500的ID\n    if(res==MPU6500_ID)                                        //器件ID正确\n    {\n        MPU_Write_Byte(MPU9250_ADDR,MPU_PWR_MGMT1_REG,0X01);   //设置CLKSEL,PLL X轴为参考\n        MPU_Write_Byte(MPU9250_ADDR,MPU_PWR_MGMT2_REG,0X00);   //加速度与陀螺仪都工作\n            MPU_Set_Rate(500);                                 //设置采样率为500Hz   \n    }else return 1;\n\n    res=MPU_Read_Byte(AK8963_ADDR,MAG_WIA);                    //读取AK8963 ID\n    if(res==AK8963_ID)\n    {\n        MPU_Write_Byte(AK8963_ADDR,MAG_CNTL1,0X11);            //设置AK8963为单次测量模式\n            delay_ms(2);\n    }else return 1;\n\n    return 0;\n}\n", "\n\n", "反正现在就是除了磁力计其他数据都是好的，还恳请大佬指点一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;给你提供个思路&amp;#xff0c;father son可以直接写入&lt;br /&gt;下面的用循环来写&lt;br /&gt;with open(&amp;#34;test.txt&amp;#34;, &amp;#39;a&amp;#39;) as f:&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  f.write(&amp;#39;Father   Son\\n&amp;#39;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  for i in range (100):&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    f.write(a)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    f.write(str(b) &amp;#43; &amp;#39;\\n&amp;#39;)&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["怎样用python输出这种格式的txt文档，要求下面的数字为随机数", ["\n", "做了半天实在是做不下去了，请大家帮帮我吧谢谢", "真的非常感谢大家"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;label.text &amp;#61; 你的变量名.ToString() 变量的值显示在标签上&lt;br /&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望点击【本回答采纳】支持一下。&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;案例&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;SqlConnection sqlconn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; SqlConnection();\nsqlconn.ConnectionString &amp;#61; ;\nsqlconn.&lt;span class=\"hljs-keyword\"&gt;Open&lt;/span&gt;();\nSqlCommand cmd &amp;#61; sqlconn.CreateCommand();\ncmd.CommandText &amp;#61; &lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; 职务 &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; 用户信息 &lt;span class=\"hljs-keyword\"&gt;where&lt;/span&gt; 账号 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;;\nSqlDataReader reader &amp;#61; cmd.ExecuteReader();\nreader.&lt;span class=\"hljs-keyword\"&gt;Read&lt;/span&gt;();\nstring temp_role &amp;#61; reader.GetString(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\nsqlconn.&lt;span class=\"hljs-keyword\"&gt;Close&lt;/span&gt;();\nLabel1.Text &amp;#61; temp_role;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["C#实现在sql查找数据显示在label控件上", ["C#实现在sql查找数据显示在label控件上。", "才开始学，不懂就问。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;UTF-8是针对Unicode的一种可变长度字符编码&amp;#xff1b;它可以用来表示Unicode标准中的任何字符&amp;#xff0c;而且其编码中的第一个字节仍与ASCII相容&amp;#xff0c;使得原来处理ASCII字符的软件无须或只进行少部份修改后&amp;#xff0c;便可继续使用。&lt;/p&gt;\n\n&lt;p&gt;对于ASCII的&amp;#xff0c;你可以用ord(&amp;#39;a&amp;#39;)函数&amp;#xff0c;如果需要再转化一下进制&amp;#xff0c;ord函数是返回对应的 ASCII 数值&amp;#xff0c;或者 Unicode 数值&lt;/p&gt;\n\n&lt;p&gt;print(hex(ord(&amp;#39;a&amp;#39;)))  &lt;/p&gt;\n\n&lt;p&gt;对于ASCII码不能表示的&amp;#xff0c;就可以使用encode&lt;/p&gt;", "Konwledge_Point": "数据的输出", "Question": ["为什么我python运行encode输出的是b'a'而不是'\\x61'？", ["s='a'\nprint(s.encode('utf8'))\n\nb'a'"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* &lt;span class=\"hljs-title\"&gt;InputMonomial&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *s, PolynomialNode *p )&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;IsEndingChar&lt;/span&gt;(*s))&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;IsEXP&lt;/span&gt;(s))p-&amp;gt;coef &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(*s&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=\"hljs-built_in\"&gt;IsEXP&lt;/span&gt;(s&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)){\n            p-&amp;gt;coef &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n            s &amp;#61; s &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(s,&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%n&amp;#34;&lt;/span&gt;,&amp;amp;(p-&amp;gt;coef),&amp;amp;m);\n            s &amp;#61; s&amp;#43;m;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(*s&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;){\n        s&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(*s!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;^&amp;#39;&lt;/span&gt;){\n            p-&amp;gt;expo &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            s &amp;#61; s&amp;#43;&amp;#43;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            s&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(s,&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%n&amp;#34;&lt;/span&gt;,&amp;amp;(p-&amp;gt;expo),&amp;amp;m);\n            s &amp;#61; s&amp;#43;m;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; p-&amp;gt;expo &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    s &amp;#61; &lt;span class=\"hljs-built_in\"&gt;SkipSpaceChars&lt;/span&gt;(s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; s;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;OutputMonomial&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; coef, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; expo)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(expo&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(coef!&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;amp;&amp;amp;coef!&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%dx&amp;#34;&lt;/span&gt;,coef);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(coef&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-x&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(expo&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,coef);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(coef&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x^%d&amp;#34;&lt;/span&gt;,expo);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(coef&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-x^%d&amp;#34;&lt;/span&gt;,expo);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%dx^%d&amp;#34;&lt;/span&gt;,coef,expo);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "数据的输出", "Question": ["一元单项式输入和输出（灵活格式）", ["从一行输入的字符串里，读取其中的单项式，并按照要求的格式输出（输出时，每行一个）。单项式的基本格式为：", "\n\n", "\n", "系数x^幂指数", "\n\n", "例如：", "\n\n", "\n", "5x^2 表示5倍的 x 平方\n3x^-4 表示3倍的 x 的 -4 次方", "\n\n", "输入要求", "\n\n", "\n", "1）当省略系数，则表示系数为 1。例如：x^3\n2）当系数省略为减号时，则表示系数为 -1。例如：-x^3\n3）当省略幂指数时，则表示幂指数为1。例如：-5x。\n4）对于常数项，可以省略x^0，例如：-2 表示 -2x^0\n5）输入时，一个单项式内部【不允许】有空白字符（空格或\\t)。例如：2  x^    3", "\n\n", "输出要求", "\n\n", "\n", "1）如果幂指数为0，则简化为常数项。例如：-3 x ^ 0 应该输出为 -3\n2）如果幂指数为 1，则须省略它。例如：-3x^1 应该输出为-3x\n3）如果系数为1或-1，则输出时须省略1。例如：-x^6，x^2\n4）输出时，单项式内部不能有空白字符（空格或\\t)", "\n\n", "函数接口定义：", "\n\n", "\n", "----------------------------------------------------------------------------------------\n函数 InputMonomial - 读入字符串中的第一个单项式\nchar* InputMonomial(char *s, PolynomialNode *p );\n    参数 \n        s - 字符串指针，从中读取数据\n        p - 单项式结构指针，保存读取结果\n    返回值是一个字符串指针\n        成功 - 指向字符串 s 中未被处理的第一个字符（包括\\0）\n        失败 - NULL\n----------------------------------------------------------------------------------------\n函数 OutputMonomial - 以精简格式输出单项式（系数为coef，幂指数为expo）\nvoid OutputMonomial(int coef, int expo); \n    参数\n         coef - 单项式的系数\n         expo - 单项式的幂指数\n    返回值 \n        无 \n----------------------------------------------------------------------------------------", "\n\n", "裁判测试程序样例：", "\n\n", "\n", "#include <stdio.h>\n\n#define MAXLINE 1024\n\ntypedef struct PolynomialStruct{\n    int coef; // 系数\n    int expo;  // 幂次\n    struct PolynomialStruct * next;\n} PolynomialNode;\n\n//判断字符串 s 的起始字符是否为：x^ 或 X^\nint IsEXP(char *s)\n{\n    return ( (s[0]=='x' || s[0]=='X') && s[1]=='^');\n}\n\n//字符是否为\\n或\\0\nint IsEndingChar(char ch)\n{\n    return (ch==0 || ch=='\\n');\n}\n\n//跳过字符串起始部分的空格和制表符\n//返回值：一个指针\n//      指向字符串前面的第一个非空白字符\nchar * SkipSpaceChars(char *s)\n{\n    while( *s==' ' || *s=='\\t' )\n        s++;\n    return s;\n}\n\nchar* InputMonomial(char *s, PolynomialNode *p );\nvoid OutputMonomial(int coef, int expo); \n\nint main()\n{\n    char linebuffer[MAXLINE], *p;\n    PolynomialNode node;\n\n    p = fgets(linebuffer, sizeof(linebuffer), stdin);\n    while( p = InputMonomial(p, &node) ) {\n        OutputMonomial(node.coef, node.expo);\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n/* 请在这里填写答案 */\n\n", "\n\n", "输入样例：", "\n\n", "\n", "-3x^-6    x^5   3x    1   3x^0   -1x    x^0", "\n\n", "输出样例：", "\n\n", "对应上面的每一行输入，输出结果分别是：", "\n\n", "\n", "-3x^-6\nx^5\n3x\n1\n3\n-x\n1"]], "Tag": "程序设计"}
{"Answer": "可以试着调整神经层的结构和模型的超参数，试着多次调整达到对每个参数的理解，建议可以先简要看看莫烦的视频教程，对各个参数有个大致了解，这是链接https://morvanzhou.github.io/", "Konwledge_Point": "数据的输出", "Question": ["Tensorflow建一个神经网络，输出数据只有一个谱型，且杂乱", ["建了一个神经网络，输入节点3个，输出250个，两个隐藏层，节点数分别为200个。", "\n训练数据集为100000个。运行完后用测试集验证，发现预测的谱线杂乱无章，跟测试的谱线集完全无关，从图中看感觉是在一个谱型附近震荡。", "\n 初学者不明白是什么原因，不知有没有大神可以稍加指教。", "\n\n", "import tensorflow as tf\nimport numpy as np\n# 添加层\ndef add_layer(inputs, in_size, out_size,n_layer,activation_function=None):\n          Weights = tf.Variable(tf.random_normal([in_size, out_size]))\n          Wx_plus_b = tf.matmul(inputs, Weights)\n          if activation_function is None:\n           outputs = Wx_plus_b\n          else:\n               outputs = activation_function(Wx_plus_b)\n          return outputs\n# 1.训练的数据\np_1= np.loadtxt('D:p_train.txt')\np=np.reshape(p_1,(3,100000))\ns_1= np.loadtxt('D:s_train.txt')\ns=np.reshape(s_1,(250,100000))\npmin=p.min()\npmax=p.max()\np_train=(p-pmin)/(pmax-pmin)\nsmin=s.min()\nsmax=s.max()\ns_train=(s-smin)/(smax-smin)\np_train=np.transpose(p_train)\ns_train=np.transpose(s_train)\np_train=p_train.tolist()\ns_train=s_train.tolist()\n# 2.测试的数据\np_2=np.loadtxt('D:p_test.txt')\np2=np.reshape(p_2,(3,5501))\ns_2=np.loadtxt('D:s_test.txt')\ns2=np.reshape(s_2,(250,5501))\npmin2=p2.min()\npmax2=p2.max()\np_test=(p2-pmin2)/(pmax2-pmin2)\nsmin2=s2.min()\nsmax2=s2.max()\ns_test=(s2-smin2)/(smax2-smin2)\np_test=np.transpose(p_test)\ns_test=np.transpose(s_test)\np_test=p_test.tolist()\ns_test=s_test.tolist()\n\n# 3.定义占位符 \npx = tf.placeholder(tf.float32, [None, 3])\nsx = tf.placeholder(tf.float32, [None,250])\nsy=tf.placeholder(tf.float32,[None,250])\n# 4.定义神经层：隐藏层和预测层\nl1 = add_layer(px, 3, 200, n_layer=1,activation_function=tf.nn.sigmoid)\nl2=add_layer(l1,200,200,n_layer=2,activation_function=tf.nn.sigmoid)\nprediction = add_layer(l2, 200, 250, n_layer=3,activation_function=None)\n\n# 5.定义 loss 表达式 mse\nloss = tf.reduce_mean(tf.square(sx - prediction))\n#loss2\n\n# 6.选择 optimizer 使 loss 达到最小                   \ntrain_step = tf.train.AdamOptimizer(0.01,epsilon=1e-8).minimize(loss)\n\n#7.初始化变量\ninit=tf.initialize_all_variables()\n#8.定义会话\nsess = tf.Session()\n#9.运行\nsess.run(init) \n#10.查看loss变化\nfor step in range(1000):\n   sess.run(train_step, feed_dict={px:p_train, sx:s_train})\n   if step % 50 == 0:    \n        print(sess.run(loss,feed_dict={sx:s_train,px:p_train}))\n\nprediction_test=sess.run(prediction,feed_dict={px:p_test})\n\n"]], "Tag": "程序设计"}
