{"Answer": "&lt;p&gt;char里保存的是字符的ascii码&amp;#xff0c;也就是一个整数。&lt;br /&gt;char a&amp;#61;33;&lt;br /&gt;double b&amp;#61;3.3&lt;br /&gt;b&amp;#43;&amp;#61;a;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言字符型和浮点型相加", ["字符型和浮点型能相加吗？相加之后是什么类型？请各位举个例子，通俗易懂点。"]], "Tag": "程序设计"}
{"Answer": "scan(what='character')\r\nhttps://baijiahao.baidu.com/s?id=1609736886331115270", "Konwledge_Point": "字符型", "Question": ["如何实现从键盘输入字符串，给字符型变量赋值呢？", ["例如：可以使用scan函数从键盘输入数值型数据。", "\n如何实现从键盘输入字符串，给字符型变量赋值呢？"]], "Tag": "程序设计"}
{"Answer": "看下你是不是输入了全角（中文）的逗号，scanf必须是严格匹配的。", "Konwledge_Point": "字符型", "Question": ["为什么c语言scanf()函数同时输入字符型和整型数据，输入数据错误？", ["C语言scanf函数同时输入字符型数据和整型数据，第一个字符输入后再按逗号键该字符就成了汉字，而且之后输入的数据也不对。", "\n#include ", "\nint main()", "\n{", "\n char a, b;", "\n int m, n;", "\n double x;", "\n printf(\"输入对应的数值 a='a',b='A',m=5,n=10,x=18.51:\\n\");", "\n scanf(\"%c,%c,%d,%d,%lf\", &a, &b, &m, &n, &x);", "\n printf(\"a=%c,b=%c,m=%d,n=%d,x=%lf\\n\", a, b, m, n, x);", "\n return 0;", "\n}", "\nC语言初学者，希望大神解答，十分感谢！！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对字符进行冒泡排序就行了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,len;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(s);\n    len &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;len-i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[j] &amp;gt; s[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n            {\n                c &amp;#61; s[j];\n                s[j] &amp;#61; s[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                s[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; c;\n            }\n        }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["输入一任意长度的字符串, 存放在字符型数组a[200]里， 然后将该字符串里的各个字符由小  到大重新排序后显示。", ["输入一任意长度的字符串, 存放在字符型数组a[200]里， 然后将该字符串里的各个字符由小到大重新排序后显示。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;((ch&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;())!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//一直接收缓冲区的字符。直至收到回车&lt;/span&gt;\n    {\n           a[i]&amp;#61;ch;\n           i&amp;#43;&amp;#43;;\n    }\n    a[i]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;//加上串尾符&lt;/span&gt;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sz &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(a) / &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cha &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    cha &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; sz; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cha &amp;#61;&amp;#61; a[i] &amp;amp;&amp;amp; i !&amp;#61; sz - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;找到了&amp;#xff0c;该字符的下标为&amp;#xff1a;%d&amp;#34;&lt;/span&gt;, i);\n            flag&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/281684382056141.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["输入一个字符串，保存在字符型数组中，再输入一个字符，在字符数组中查找该字符，若找到，输出该字符第一次出现的数组下标，否则输出-1.", ["我想要达到的结果", "\n", "从键盘输入一个字符串，保存在字符型数组中，再输入一个字符，在字符数组中查找该字符，若找到，输出该字符第一次出现的数组下标，否则输出-1.", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; cX &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\110&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,cX);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["编一程序,定义一个字符型变量cX,赋以字符H的转义字符,然后用字符格式输出变量cX", ["编一程序,定义一个字符型变量cX,赋以字符H的转义字符,然后用字符格式输出变量cX "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;下面是一个实现&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; MAX 100&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * names[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];  \n    \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; temp[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;测试输入&amp;#xff1a;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num);    &lt;span class=\"hljs-comment\"&gt;//获取输入的学生名字的个数 &lt;/span&gt;\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;num){  &lt;span class=\"hljs-comment\"&gt;//循环读取num个学生名字到names字符指针指向的空间中 &lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;请输入第%d个学生的姓名&amp;#xff1a;&amp;#34;,i&amp;#43;1); &lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,temp);  &lt;span class=\"hljs-comment\"&gt;//读取一个学生名字到字符数组temp &lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//动态分配学生名字的长度&amp;#43;1个字符空间&amp;#xff08;1用于存储名字结尾的空字符&amp;#xff09;&amp;#xff0c;然后将字符指针数组的当前元素指向这个空间 &lt;/span&gt;\n        names[i] &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(temp)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;));  \n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(names[i],temp);  &lt;span class=\"hljs-comment\"&gt;//把学生名字字符串复制到字符指针指向的内存空间 &lt;/span&gt;\n        \n        i&amp;#43;&amp;#43;;\n    }\n    \n&lt;span class=\"hljs-comment\"&gt;//    for(int i&amp;#61;0;i&amp;lt;num;i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//        printf(&amp;#34;%s &amp;#34;,names[i]);&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    }&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    &lt;/span&gt;\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j;\n    &lt;span class=\"hljs-comment\"&gt;//排序学生名字&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;num&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i;j&amp;lt;num;j&amp;#43;&amp;#43;){\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(names[i],names[j])&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(temp,names[i]);\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(names[i],names[j]);\n                &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(names[j],temp);\n            }\n        }\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//打印结果 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;预期输出&amp;#xff1a;&amp;#34;&lt;/span&gt;); \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;num;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s &amp;#34;&lt;/span&gt;,names[i]);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n} \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/219562275066198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言编写一个使用字符型指针数组对学生姓名字符串进行排序的程序。", ["问题遇到的现象和发生背景", "\n", "C语言编写一个使用字符型指针数组对学生姓名字符串进行排序的程序。", "编程要求", "写一个程序，把键盘输入的一组学生的姓名字符串存入一个字符型指针数组中，然后选择一种排序方法对其进行升序排序。要求字符型指针数组中的每个指针指向的空间都要动态申请。", "提示：可以先用一个字符型数组过渡，接受键盘输入的字符串，再根据字符串的长度动态申请空间，并让字符指针数组的指针指向它，最后再把字符数组中的字符串复制到指针所指向的空间。", "\n", "我想要达到的结果", "\n", "测试输入： 5", "                   zhangli zhaoyi songjiang wanghai lidan", "预期输出： lidan songjiang wanghai zhangli zhaoyi"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    char &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,z;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c%c%c&amp;#34;&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,&amp;amp;z);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;hello , %c , %c and %c!&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,z);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["字符型基础数据类型的输入", ["基础数据类型的输入（3）字符型", "在最初问候了“Hello World!”之后，我们接触了C语言的若干基本数据类型，我们逐个打声招呼吧。最后是字符型数据。要求：输入三个字符数据。", "\n", "输入格式:", "输入三个字符数据。", "\n", "输出格式:", "按照格式输出。", "\n", "输入样例:", "在这里给出一组输入。例如：", "\n", "xyz", "结尾无空行", "输出样例:", "在这里给出相应的输出。例如：", "\n", "hello , x , y and z!", "结尾无空行"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; cX &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c %d\\n&amp;#34;&lt;/span&gt;,cX,cX);\n    cX &amp;#61; cX &lt;span class=\"hljs-number\"&gt;-32&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c %d\\n&amp;#34;&lt;/span&gt;,cX,cX);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["编一程序,定义一个字符型变量cX,赋以字符常量’a’ ,然后用字符和整数格式输出cX.将cX的值减32,赋给cX,再用字符和整数格式输出cX.", ["编一程序,定义一个字符型变量cX,赋以字符常量’a’ ,然后用字符和整数格式输出cX.将cX的值减32,赋给cX,再用字符和整数格式输出cX."]], "Tag": "程序设计"}
{"Answer": "临界资源的访问需要加锁，也可以用一个进程定时读取数据，其它的网页什么的通过管道，SOKET，或数据库获取这个进程的数据。", "Konwledge_Point": "字符型", "Question": ["嵌入式Linux字符型驱动开发过程中，多个程序在同一时间操作这个字符型设备出现冲突？", ["我在xilinx zynq7000开发平台上移植Linux操作系统，io接了一个DHT11温湿度传感器，写了一个驱动程序。", "\n            并且在安装了appweb服务器，在网页上实时获取dht11温湿度的值，当有多个页面被打开时，就会有多个cgi程序同时 操作这个设备，由于dht11时单总线传输，对时序要求较高，两个程序同时操作一个io接口就会有冲突，导致获取温湿度值失败，请问如何解决？", "\n            我做的时一个智能环境监控系统，同一个网页不可避免的被重复打开。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1和2的问题一样的&amp;#xff0c;字符串是&amp;#39;\\0&amp;#39;结尾的字符数组。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c++中字符型指针问题", ["#", "include", "<iostream>", "\n", "#", "include", "<cstring>", "\n", "using", " ", "namespace", " std;\n\n", "class", " ", "String", "\n{\n", "private", ":\n    ", "char", " *s;\n    ", "int", " size;\n", "public", ":\n    ", "String", "(", "const", " ", "char", " *str = ", "NULL", "); ", "// constructor", "\n    ~", "String", "() { ", "delete", " [] s;  }", "// destructor", "\n    ", "void", " ", "print", "()", " ", "{ cout << s << endl; }\n    ", "void", " ", "change", "(", "const", " ", "char", " *)", ";  ", "// Function to change", "\n};\n\n", "String", "::", "String", "(", "const", " ", "char", " *str)\n{\n    size = ", "strlen", "(str);\n    s = ", "new", " ", "char", "[size+", "1", "];\n    ", "strcpy", "(s, str);\n}\n\n", "void", " ", "String::change", "(", "const", " ", "char", " *str)", "\n", "{\n    ", "delete", " [] s;\n    size = ", "strlen", "(str);\n    s = ", "new", " ", "char", "[size+", "1", "];\n    ", "strcpy", "(s, str);\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "String", " ", "str1", "(", "\"GeeksQuiz\"", ")", ";\n    ", "String", " str2 = str1;\n\n    str1.", "print", "(); ", "// what is printed ?", "\n    str2.", "print", "();\n\n    str2.", "change", "(", "\"GeeksforGeeks\"", ");\n\n    str1.", "print", "(); ", "// what is printed now ?", "\n    str2.", "print", "();\n    ", "return", " ", "0", ";\n}\n", "\n", "两个问题：", "1.为什么字符串\"GeeksQuiz\"可以赋值给字符型指针？", "2.为什么上述代码中void print()函数中输出内容时不要对s进行解引用？s不是个指针吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;整型&lt;br /&gt;int a&amp;#61;0;&lt;br /&gt;单精度浮点型&lt;br /&gt;float a&amp;#61;0.0f;&lt;br /&gt;多精度浮点型&lt;br /&gt;double a&amp;#61;0.0;&lt;br /&gt;字符型&lt;br /&gt;char a&amp;#61;&amp;#39;0&amp;#39;;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言基本数据类型，整型，单精度浮点型 多精度浮点型 字符型怎么定义并赋值", ["c语言基本数据类型，整型，单精度浮点型 多精度浮点型 字符型怎么定义并赋值"]], "Tag": "程序设计"}
{"Answer": "char *name[]; //定义了指针数组，每一个元素是一个字符指针变量，被分别初始化为各个字符串的起始地址。\r\nprintf中%s需要一个字符串的地址，所以name[1]就是，是“gou”的起始地址。", "Konwledge_Point": "字符型", "Question": ["关于字符型指针数组的理解问题", ["\n#include<stdio.h>\nmain()\n{\n\n    char *name[]={\"zhang\",\"gou\",\"xu\",\"zheng\",\"mao\",\"zhao\",\"li\",\"bai\",\"qing\"};\n    printf(\"%s\\n\",*name[1]);\n}\n", "\n\n", "此时程序无运行结果。而去掉name前的*之后运行结果正确，为“gou”，请问该如何理解字符型指针数组，name[1]难道不是一个指针吗？它的值不是应该为地址吗？该如何理解呢？", "\n\n", " #include<stdio.h>\nmain()\n{\n\n    char *name[]={\"zhang\",\"gou\",\"xu\",\"zheng\",\"mao\",\"zhao\",\"li\",\"bai\",\"qing\"};\n    printf(\"%s\\n\",name[1]);\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、你的代码&amp;#xff0c;和你给的文字秒速&amp;#xff0c;完全不一样&amp;#xff0c;当然报错&amp;#xff1b;&lt;br /&gt;2、字符串定义可以看看这个&lt;a href=\"https://www.bilibili.com/video/BV1XD4y1S7jz?p&amp;#61;2\" id=\"textarea_1646550167356_1646550673448_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.bilibili.com/video/BV1XD4y1S7jz?p&amp;#61;2&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;4、相同的功能&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;character&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; a, b, c*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; \n&lt;span class=\"hljs-attribute\"&gt;character&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;) a, b, c*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; \n&lt;span class=\"hljs-attribute\"&gt;character&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) a*&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, b*&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, c \n&lt;span class=\"hljs-attribute\"&gt;character&lt;/span&gt; a*&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, b*&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, c*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;3、核心问题是优先级&amp;#xff1a;表明此行定义的变量默认长度是8&amp;#xff0c;但c的长度为10&amp;#xff0c;因为后者优先级高。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["（Fortran）请问字符型变量声明语句中怎么定义不同长度的字符型变量？", ["   书上说的我不理解，书上说声明语句“CHARACTER *", "8", " ", "a", ",", "b", ",c*", "10", "”定义了不同长度的", "3", "个字符型变量，", "a", "，", "b", "长度都是", "8", "，c长度是", "10", "。\n    这个", "a", ",", "b", ",c夹在*", "8", "和*", "10", "中间就很不理解，", "a", "，", "b", "，c都是跟在*", "8", "后面的，*", "10", "前面的，为什么不是都是长度为", "8", "或长度为", "10", "，亦或者为什么不是", "a", "的长度为", "8", "。", "b", "，c的长度为", "10", "。\n    我以为是书写错了，我感觉是", "a", "的长度为", "8", "，", "b", "长度为", "1", "，c长度为", "10", "，但是我运行的时候说我语法错误，求解\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;ch要比&amp;#39;A&amp;#39;小&amp;#xff0c;同时比&amp;#39;Z&amp;#39;大&amp;#xff0c;这是矛盾的&amp;#xff0c;表达式永远为false&amp;#xff0c;所以永远输出YSE&lt;br /&gt;如果要改成ch在‘A’到&amp;#39;Z&amp;#39;为yes&amp;#xff0c;那要改成if&amp;#xff08;ch&amp;lt;&amp;#61;&amp;#39;A&amp;#39;&amp;amp;&amp;amp;ch&amp;gt;&amp;#61;&amp;#39;A&amp;#39;&amp;#xff09;请采纳&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["为什么这个答案是如何字符", ["当字符型变量ch 取何值（或何范围）时输出“YES”", "\n", "char ch;", "scanf(\"%c\",&ch);", "if(ch<='A'&&ch>='Z')", "printf(\"NO\");", "else printf(\"YES\");"]], "Tag": "程序设计"}
{"Answer": "以为int可以看做一个数字类别中常用的一个类别。 而char完全可以归类到String中去。", "Konwledge_Point": "字符型", "Question": ["JAVA获取字符型数组的问题", ["自学java中，为啥不能像获取int型的一样获取char型的数据，在Scanner类中为啥没有nextChar();", "\n而用String又为什么可以，求解答~"]], "Tag": "程序设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;这不是类型转换导致的&amp;#xff0c;你得先理解sizeof函数的意义&amp;#xff0c;他是求变量所占空间大小&lt;/li&gt;&lt;li&gt;9 和 3在你没有特别定义的情况下&amp;#xff0c;编译器会认定它两为int类型&amp;#xff0c;那么sizeof(&amp;#39;9&amp;#39; - &amp;#39;3&amp;#39;)的意义就是求 9-3这个表达式的结果的所占空间大小&amp;#xff0c;即一个int类型所占空间大小&amp;#xff0c;就是4&amp;#xff0c;long类型为8&lt;/li&gt;&lt;li&gt;你可以尝试先定义好类型&amp;#xff0c;再输出sizeof就会得到不一样的结果&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "字符型", "Question": ["字符型数据之间相减会有数据类型转换吗", ["#", "include", "<iostream>", "\n", "#", "include", "<ctime>", "\n", "#", "include", "<iomanip>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", "\n", "{\n    cout << (", "'9'", " - ", "'3'", ") << endl;\n    cout << ", "sizeof", "(", "'9'", " - ", "'3'", ");\n}\n\n运行结果为", "6", "   ", "4", " \n为什么\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为函数开头有a&amp;#61;b&amp;#xff0c;所以函数中a和b其实是一个东西。所以输出分别是aa和bb&lt;br /&gt;但由于a&amp;#61;b是改变不了外部传入指针p1和p2的关系的&amp;#xff0c;因此p1一直指向c1&amp;#xff0c;没有改变过。但由于函数中(*a)&amp;#43;&amp;#43;的原因&amp;#xff0c;导致指针b&amp;#xff0c;也就是p2指向的字符值加了1&amp;#xff0c;最终输出是Ab&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["指针函数的调用: 字符型", ["\n", "在被调用函数内*p1的值还是b，为什么出来以后c1就为A了？", "p1和c1，p2和c2他们的指向到底相同吗"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a 是char 字符类型&lt;br /&gt;&amp;#34;1\\0&amp;#34;是字符串类型&lt;br /&gt;a &amp;#61; &amp;#39;1&amp;#39;;是匹配的&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["关于字符型变量的定义", ["这里面有什么错误，为什么类型不匹配，希望说的详细一点，谢谢。"]], "Tag": "程序设计"}
{"Answer": "http://codepad.org/KN0BlwkH\r\n-2639232\r\n-2639228\r\n-2639220\r\ndouble int都是4字节，char虽然只有1字节，但是编译器按照4字节对齐\r\n所以地址连续相差4\r\n\r\n为什么是负的，因为地址最高位是1", "Konwledge_Point": "字符型", "Question": ["结构体的第一个变量为字符型则无法取出地址？", ["定义一个结构体，结构体的第一个成员是一个字符变量，然后在主函数里创建一个这个结构体的对象，取这个对象的在结构体中的第一个字符变量的地址，在winxp系统下显示出来的是乱码，在安卓手机上的AIDE下运行也没有正常显示出来，而把结构体的第一个变量定义成如int型的其他类型的变量就可以正常显示出地址，这是为什么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;大写字母范围在65-90&amp;#xff0c;它们的32这个位&amp;#xff08;也就是从右向左数&amp;#xff0c;第5位&amp;#xff09;是0。而ch&amp;amp;32就是判断这一位数字是否为0&amp;#xff0c;如果为0&amp;#xff0c;显然字符是大写字符。而大写字符转为小写字符就是加32&amp;#xff0c;因此ch | 32就是对字符加32。反之是小写字符&amp;#xff0c;转为大写字符需要减去32&amp;#xff0c;用位与操作就是将32的反码与ch进行位与即可&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["java中大小写字目相互转换", ["各位码友 求第四行代码的详细解释，题目内容为：", "字符型变量ch中存放着一个大小写未知的英文字母，判断其大小写后，将ch的值转为小写或大写字母(不允许使用加减运算符和if语句)。"]], "Tag": "程序设计"}
{"Answer": "这段代码似乎在检查T是否符合二叉树数组\r\n构造一个数组，很明显不符合二叉树\r\n1 \r\n2          2\r\n3    3    3    null \r\n4 4 4 4 4 4 4 4\r\nnull那个元素为空，最后两个4很明显不符合条件", "Konwledge_Point": "字符型", "Question": ["二叉树的顺序存储结构的一个小问题", ["顺序存储是根据数组来完成的", "\n\n", "/* 按层序次序输入二叉树中结点的值(字符型或整型), 构造顺序存储的二叉树T */\nStatus CreateBiTree(SqBiTree T)\n{ \n    int i=0;\n    printf(\"请按层序输入结点的值(整型)，0表示空结点，输999结束。结点数≤%d:\\n\",MAX_TREE_SIZE);\n    while(i<10)\n    {\n        T[i]=i+1;\n\n        if(i!=0&&T[(i+1)/2-1]==Nil&&T[i]!=Nil) /* 此结点(不空)无双亲且不是根 */\n        {\n            printf(\"出现无双亲的非根结点%d\\n\",T[i]);\n            exit(ERROR);\n        }\n        i++;\n    }\n    while(i<MAX_TREE_SIZE)\n    {\n        T[i]=Nil; /* 将空赋值给T的后面的结点 */\n        i++;\n    }\n\n    return OK;\n}\n", "\n\n", "里面这个if判断，明明是不可能出现这种错误的，我觉得有必要判断吗？", "\n        if(i!=0&&T[(i+1)/2-1]==Nil&&T[i]!=Nil) /* 此结点(不空)无双亲且不是根 */", "\n        {", "\n            printf(\"出现无双亲的非根结点%d\\n\",T[i]);", "\n            exit(ERROR);", "\n        }", "\n        有大佬可以解释一下吗？？感激不尽..."]], "Tag": "程序设计"}
{"Answer": "在头文件client.h中声明类:\r\n\r\nclass CLIENT\r\n{\r\npublic:\r\n\tCLIENT(char name,int num);\r\n\t~CLIENT();\r\n\r\n\tchar getServerName() ;\r\n\tint getClientNum();\r\n\tstatic void ChangeServerName(char newName);\r\n \r\nprivate:\r\n\tstatic char ServerName;\r\n\tstatic int ClientNum;\r\n};\r\n \r\n在文件clent.cpp中实现:\r\n\r\nCLIENT::CLIENT(char name,int num)\r\n{\r\n\tServerName=name;\r\n\tClientNum=num;\r\n}\r\nCLIENT::~CLIENT() {}\r\n\r\nchar CLIENT::getServerName() \r\n{\r\n\treturn ServerName;\r\n}\r\nint CLIENT::getClientNum()\r\n{\r\n\treturn ClientNum;\r\n}\r\nvoid CLIENT::ChangeServerName(char newName)\r\n{\r\n\tServerName = newName;\r\n}\r\n \r\n在文件test.cpp中测试这个类,观察相应的成员:\r\n\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main6()\r\n {\r\n CLIENT n(7,'W');\r\n cout&lt;&lt;\"qqqqq:\"&lt;&lt;n.getServerName()&lt;&lt;endl;\r\n cout&lt;&lt;\"aaaaa:\"&lt;&lt;n.getClientNum()&lt;&lt;endl;\r\n n.ChangeServerName('X');\r\n cout&lt;&lt;\"qqqqq:\"&lt;&lt;n.getServerName()&lt;&lt;endl;\r\n cout&lt;&lt;\"aaaaa:\"&lt;&lt;n.getClientNum()&lt;&lt;endl;\r\n }", "Konwledge_Point": "字符型", "Question": ["小女子初学编程，遇到的问题不少，希望各位大神耐心指教。。非常感谢！", ["题目：声明字符型静态数据成员ServerName,保存其服务器名称;声明整型静态数据成员ClientNum,记录已定义的客户数量;定义静态函数ChangeServerName()改变服务器名称.在头文件client.h中声明类,在文件clent.cpp中实现,在文件test.cpp中测试这个类,观察相应的成员", "\n下面是我写的程序：", "\n#include", "\nusing namespace std;", "\nclass CLIENT", "\n{", "\npublic:", "\n    CLIENT(char name,int num)", "\n    {", "\n        ServerName=name;", "\n        ClientNum=num;", "\n    }", "\n    CLIENT(CLIENT &p);", "\n    ~CLIENT() {}", "\n    void showServerName() {}", "\n    void showClientNum() {}", "\n    void showChangeServerName();", "\nprivate:", "\n    static char ServerName;", "\n    static int ClientNum;", "\n};", "\n\n", "#include\"client.h\"", "\nCLIENT::ServerName(char name)", "\n{", "\n    ServerName=name;", "\n}", "\nCLIENT::ClientNum(int num)", "\n{", "\n    ClientNum=num;", "\n}", "\nchar ServerName='I';", "\nint ClientNum=0;", "\n\n", "#include", "\n#include\"text.h\"", "\n\n", "int main()", "\n{", "\n    CLIENT n(7,'W');", "\n    cout<<\"已定义客户数量:\"<<n.showClientNum()<<endl;", "\n    n.showClientNum();", "\n    cout<<\"服务器名称改为:\"<<n.showChangeServerName()<<endl;", "\n    n.showChangeServerName();", "\n}"]], "Tag": "程序设计"}
{"Answer": "因为 %s 输出的是字符串，而字符串有多少个字符，取决于它最后的\\\\0结束标志。你传入整数，那么它会一直读取内存，直到遇到\\\\0，这会导致它读取到不该读取的内存区域，这样就崩溃了。", "Konwledge_Point": "字符型", "Question": ["为什么不能以%s输出整数？", ["在C语言编译时，可以以字符型输出整数，以整数型输出字符", "\n但是为什么以字符串型（%s）输出一个整数时，虽然编译器不会报错，但是运行时程序会崩溃？", "\n\n", "如果说一个字符串在标准化输入输出时传递的是首地址，那么以整数型输出首地址应该也没问题呀？", "\n求大佬解答"]], "Tag": "程序设计"}
{"Answer": "字符指针：字符串指针变量本身是一个变量，用于存放字符串的首地址。而字符串本身是存放在以该首地址为首的一块连续的内存空间中并以‘\\0’作为串的结束。", "Konwledge_Point": "字符型", "Question": ["指针数组里为啥放的是字符串而不是地址呢？", ["例：", "\n\n", "char *str[] = {\"abg\",\"cd\"};", "\n\n", "“abg”和“cd”不是地址吧？", "\n\n", "指针数组不应该放的是地址吗？小白提问，谢谢大佬解答，必采纳！"]], "Tag": "程序设计"}
{"Answer": "创建了一个40个字符长度的缓冲区，然后输入字符到这个缓冲区中。你测试下就知道了。", "Konwledge_Point": "字符型", "Question": ["C语言字符指针问题求解答", ["main()", "\n{ char * a;", "\n  a=(char * )malloc(40);", "\n  scanf(\"%s\",*  a  );", "\n}", "\n上面代码中的scanf(\"%s\",* a);这行为什么是合法的？请赐教！", "\n不好意思第一次代码输错了-_-"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[])&lt;/span&gt;&lt;/span&gt;;         &lt;span class=\"hljs-comment\"&gt;//函数申明&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入字符串\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-built_in\"&gt;fun&lt;/span&gt;(s);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;排序后\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; t1[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;],t2[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;];                  \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,i;                        &lt;span class=\"hljs-comment\"&gt;//m统计数字个数&amp;#xff0c; //n统计字母个数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;s[i]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;)\n            t1[m&amp;#43;&amp;#43;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; t2[n&amp;#43;&amp;#43;]&amp;#61;s[i];\n\n    t1[m]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;                          &lt;span class=\"hljs-comment\"&gt;//字符串结束符&lt;/span&gt;\n    t2[n]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)                   &lt;span class=\"hljs-comment\"&gt;//将数组t1,t2合并到数组s&lt;/span&gt;\n        s[i]&amp;#61;t2[i];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;)\n        s[n&amp;#43;i]&amp;#61;t1[i];\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["用指针的形式将字符串中的*全部移动到尾部", ["字符串s中只能存入字母和", "，利用指针的方式将s中的", "全部移动到字母的尾部。例如s中输入* * ", "abc", " * ", "de，处理后输出s为abcde", " * * * * *。下面给出主函数，需要写出fun函数。要求用指针的形式，不用下标的形式。", "\n", "void main()", "\n", "{", "\n", "char s[50];", "\n", "scanf(\"%s\",s);", "\n", "fun(s);", "\n", "printf(\"%s\",s);", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "String[] arr = {\"hello world\", \"welcome to java\", \"I love China\" };\r\nSystem.out.println(arr[1]); //输出welcome to java", "Konwledge_Point": "字符型", "Question": ["java中定义字符串数组", ["各位大佬，java中怎么实现定义一个字符串数组，让每个索引对应一句话呀？（初学者(*^▽^*)）3q~~"]], "Tag": "程序设计"}
{"Answer": "import java.util.Scanner;\r\n\r\npublic class check {\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"请输入需要判断的字符串\");\r\n\t\tScanner sc=new Scanner(System.in);\r\n\t\tString testStr=sc.next();\r\n\t\tchar[] test=testStr.toCharArray();\r\n\t\tfor (char c : test) {\r\n\t\t\tint temp=(int)c;\r\n\t\t\tif(temp&lt;48 || temp&gt;57)\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(\"字符\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tSystem.out.println(\"整数\");\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\n\r\n```\r\n \r\n```", "Konwledge_Point": "字符型", "Question": ["java中如何判断输入的字符串是字符还是整数", ["我找到了判断字符的和转化成整数拼接的，就是不知道怎么去调用不用的方法"]], "Tag": "程序设计"}
{"Answer": "整型数据前边本身就没补0这一说，如过可以股票代码尽量以字符串类型来处理。\r\n如果实现需要以整型来处理，那那么就先转换成整型处理，然后再字符串格式化为原来的形式，\r\n如：\r\na='00123'\r\nb=int(a) #此时b为整型123\r\n处理后\r\nc=\"%05d\" % b   #此时c为“00123”", "Konwledge_Point": "字符型", "Question": ["list 把元素从字符串转化为数值型，但是首位0丢失问题", ["['000032',", "\n '000063',", "\n '000070',", "\n '000561',", "\n '000586',", "\n '000687',]", "\n 这样一个股票代码的列表res，想要把元素变为数值型，使用：", "\n res = [ int(x) for x in res ]", "\n 得出的结果：", "\n [32,", "\n 63,", "\n 70,", "\n 561,", "\n 586,]", "\n 前面的0都不见了，怎么办？"]], "Tag": "程序设计"}
{"Answer": "这个验证是js做的，和你tp框架没关系。。方向搞错了\r\n\r\n```\r\n &lt;input type=\"text\" onblur=\"checkPhone(this)\"/&gt;&lt;label id=\"lbPhone\"&gt;&lt;/label&gt;\r\n&lt;script&gt;\r\n    function checkPhone(t) {\r\n        var lb = document.getElementById('lbPhone');\r\n        lb.innerHTML = t.value == '' ? '请输入手机号！' : /^1(3|4|5|7|8)\\d{9}$/.test(t.value) ? '手机号码正确！' : '手机号码错误！';\r\n    }\r\n&lt;/script&gt;\r\n```", "Konwledge_Point": "字符型", "Question": ["新手求正则指点，重点是不会用。。。。", ["我对正则不会用，哪位大神有正则的使用方法帮忙发一个源码案例我研究一下，最好是用TP框架做一个用户提交页面（from表单提交），内容不需要太多就一个验证手机格式是否正确就行。想法就是：用户在input框输入手机号，当他点击下一个输入框的时候开始验证他手机号格式是否正确，并将事先做好的div验证结果内容由隐藏变为显示。拜托了！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;先建立结构体&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#ifndef _NODE_\n#define _NODE_\n#include&amp;lt;string&amp;gt;\nusing namespace std;\n\nclass Node\n{\npublic:\n\tstring data;\n\tNode* lchild&amp;#61;nullptr;\n\tNode* rchild&amp;#61;nullptr;\n\tNode(string);\n\t~Node();\n};\n\n#endif // _NODE_&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C++ 满二叉树（使用标准输入输出）", ["题目描述", "\n\n", "现在从根（1号点）出发，给出一个行走序列：", "\n\n", "\n\t", "L 代表向左儿子走", "\n\t", "\n\t", "R 代表向右儿子走", "\n\t", "\n\n", "例如序列 LRL ，行走路径为1->2->5->10。例如序列 RR ，行走路径为1->3->7。", "\n\n", "现在给出1个行走序列（保证长度不超过k-1），请你求出行走路径的终点编号。", "\n\n", "输入格式", "\n\n", "第一行2个整数k,q，代表满二叉树深度和询问组数", "\n\n", "接下来q行，每行一个字符串s，代表行走序列", "\n\n", "输出格式", "\n\n", "输出q行，每行1个整数代表行走路径的终点编号", "\n\n", "样例输入", "\n\n", "4 2", "\n\n", "LRL", "\n\n", "RR", "\n\n", "样例输出", "\n\n", "10", "\n\n", "7", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先&amp;#xff0c;输出非英文字符集存在字符集问题&amp;#xff0c;英语则因为属于ASCII字符集&amp;#xff0c;而多数字符集都兼容ASCII字符集&amp;#xff0c;而不存在乱码问题。C中要考虑三个字符集&amp;#xff1a;源字符集&amp;#xff0c;编译器内部字符集&amp;#xff08;这个其实很少要考虑&amp;#xff09;&amp;#xff0c;执行字符集&amp;#xff08;这个才是重点&amp;#xff09;&amp;#xff0c;如果源字符集到执行字符集中间有一步不对&amp;#xff0c;就会出问题。操作系统的环境一般提供了各个locale的预设字符集&amp;#xff0c;如果可执行程序最终的执行字符集和环境提供的字符集不匹配&amp;#xff0c;也很可能出现乱码。至于如何修正乱码&amp;#xff0c;这个很复杂&amp;#xff0c;Linux下常用一个叫做iconv的库&amp;#xff0c;而Windows下一般用宽字符/多字节字符互转的一个系统的字符串API。要使用它们&amp;#xff0c;需要先了解什么是宽字符&amp;#xff0c;什么是多字节字符&amp;#xff0c;鉴于网络上有很多答案是错误的&amp;#xff0c;我们这里简单解释一下&amp;#xff1a;宽字符是指万国码Unicode&amp;#xff0c;多字节是指ANSI这样的比较混乱的字符集&amp;#xff0c;这样的字符集往往一个字符集只表示一种或少数几种语言&amp;#xff0c;比较麻烦。由于历史原因&amp;#xff0c;很多软件还在使用并不通用的ANSI字符集。&amp;#xff08;注&amp;#xff1a;ANSI字符集并不是一个字符集&amp;#xff0c;而是指ANSI标准下各组织自己规定的字符集。由于ANSI没有规定ANSI字符集的细节&amp;#xff0c;这些字符集彼此之间兼容性很低。&amp;#xff09;如果不需要运行时转码&amp;#xff0c;可以通过编译器的charset有关选项和有关的pragma宏指定执行字符集。不同编译器做法差别很大&amp;#xff0c;我不知道你的编译器是什么&amp;#xff0c;所以无法准确回答。&lt;br /&gt;第二个问题&amp;#xff0c;你这个程序逻辑上有问题&amp;#xff0c;显然你不太熟悉涉及非英语语言字符的C/C&amp;#43;&amp;#43;语法。char一个只能存256种不同的值&amp;#xff0c;而汉字显然有远远不止256个&amp;#xff0c;试图用char存储单个汉字显然是错误的&amp;#xff08;但char数组确实可以存储汉字字符串&amp;#xff09;。C语言中&amp;#xff0c;我们说单引号括起来的是单个字符&amp;#xff0c;这造成了一种误解&amp;#xff1a;很多人认为单引号里必须只能有一个字符&amp;#xff08;换种说法就是一个字节&amp;#xff09;。事实则是&amp;#xff0c;&lt;strong&gt;C的单引号里可以有多个字节&lt;/strong&gt;&amp;#xff0c;例如&amp;#39;abc&amp;#39;也是合法的&lt;strong&gt;多字节常量&lt;/strong&gt;&amp;#xff0c;C标准容忍了这种常量&amp;#xff0c;却没有说它的作用&amp;#xff0c;换言之其行为是编译器自己决定的&amp;#xff0c;没有标准可言。你写的&amp;#39;天&amp;#39;这种常量就是典型的多字节常量&amp;#xff0c;编译器无论将它处理成什么都是正确的&amp;#xff0c;但就是不可能是“天”字本身&amp;#xff0c;因为一个字节不足以存下这个汉字。从C&amp;#43;&amp;#43;11起&amp;#xff08;我记得是哈&amp;#xff0c;也可能是C&amp;#43;&amp;#43;17&amp;#xff09;&amp;#xff0c;你可以写char a[] &amp;#61; u8&amp;#34;好好学习&amp;#xff0c;天天向上&amp;#34;&amp;#xff0c;表示指定用UTF-8编码存储这个字符串常量。如果你的执行字符集和环境字符集都是UTF-8&amp;#xff0c;这个字符串就可以正确输出了。&lt;br /&gt;对于你给出的这段代码&amp;#xff0c;我还无法回答&amp;#xff0c;需要知道你的编译器和运行环境才能给出具体修改方案&amp;#xff0c;但也只是大方向&amp;#xff1b;字符集转换是件挺麻烦的事。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["用字符数组储存汉字，但输出错误，是什么原因", []], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt; \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; b,d;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%f,%c,%f&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c,%d,%.1f,%.1f&amp;#34;&lt;/span&gt;,c,a,b,d);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["按照浮点数1，整数，字符，浮点数2输入，再按照字符，整数，浮点数1，浮点数2输出", ["这道题应该怎么做呢？能不能用电脑打一下代码给我看看，谢谢啦"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf(&amp;#34;%s&amp;#34;,c[i]);    改成scanf(&amp;#34;%s&amp;#34;,&amp;amp;c[i]); 你没有对输入的数据取地址会报错&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言//怎么把二维字符数组的字符串拷贝到一个一维数组", ["本题是pat乙级1003", "\n\n", "#include<stdio.h>", "\n#include<string.h>", "\nint main(){", "\nint n=0;", "\nint a[]={0};", "\nchar c[10][101] ;", "\nscanf(\"%d\",&n);", "\n for(int i=0;i<n;i++){", "\n     scanf(\"%s\",c[i]);     ", "\n }", "\nfor(int k=0;k<n;k++)", "\n{", "\n    strcpy(a,c[k]);//", "这个地方报错了", "\n   //wp记录p的位置，wt记录t的位置，mp记录p的个数，mt记录t的个数，amount记录pat以外字符的个数", "\n   int wp=0,wt=0,mp=0,mt=0,count=0;", "\n   int length=strlen(c[k]);", "\n   for(int j=0;j<length;j++){", "\n     if(a[j]=='P'){", "\n       mp++;", "\n       wp=j;", "\n     }", "\n     ", "\n     if(a[j]=='T'){", "\n       mt++;", "\n       wt=j;", "\n     }", "\n     ", "\n     if(a[j]!='P'&&a[j]!='A'&&a[j]!='T')", "\n       count++;", "\n   }", "\n   ", "\n   int center=wt-wp-1;", "\n   int later=length-wt-1;", "\n   if(mp==1&&mt==1&&count==0&&wp*center==later&&wt-wp>1)", "\n        printf(\"YES\\n\");", "\n       else", "\n        printf(\"N0\\n\");", "\n }", "\n}"]], "Tag": "程序设计"}
{"Answer": "```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace Q712950\r\n{\r\n    class Program\r\n    {\r\n        static string Classify(string s)\r\n        {\r\n            if (Regex.IsMatch(s, \"1[35678]\\\\d{9}\")) return \"手机\";\r\n            if (Regex.IsMatch(s, @\"[a-zA-Z\\d_\\-]+@[a-zA-Z\\d_\\-]+\\.[a-zA-Z\\d_\\-]+\")) return \"邮箱\";\r\n            return \"其它\";\r\n        }\r\n        static void Main(string[] args)\r\n        {\r\n            string[] arr = new string[10];\r\n            for (int i = 0; i &lt; arr.Length; i++)\r\n                arr[i] = Console.ReadLine();\r\n            var query = arr.GroupBy(Classify).Select(x =&gt; new { key = x.Key, value = x.OrderBy(y =&gt; y) });\r\n            foreach (var item in query)\r\n            {\r\n                Console.WriteLine(item.key + \":\");\r\n                Console.WriteLine(\"\\t\" + string.Join(\", \", item.value));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201811/12/1542035676_51853.gif)\r\n\r\n\r\n`如果问题得到解决，请点我回答左上角的采纳，谢谢`", "Konwledge_Point": "字符型", "Question": ["c# 在命令行中输入任意10个字符串，根据字符串类型将输入的数据放入到不同数组中，最后将数组进行排序", ["1、输入的字符串，可以是手机、邮箱、身份证等", "\n2、只将手机、邮箱的字符串筛选出来放到两个数组中，其余的放入yi'ge'shu'zu'zhon", "\n3、数组按照升序排序，比如数组[6,3,8,2,4]，按照升序排序后结果为[2,3,4,6,8]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/dajiyi1998/article/details/80938587\" id=\"textarea_1647055559863_1647055665273_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/dajiyi1998/article/details/80938587&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python 浮点数不使用科学计数法显示和百分比的问题", ["输出的数字和源数据总是有差距如何处理，numpy显示也不好用"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;根据题目要求的字段定义结构体就是了&amp;#xff0c;功能都是链表的基础操作&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n#include &amp;lt;string.h&amp;gt;\ntypedef struct _animal\n{\n    int id; &lt;span class=\"hljs-comment\"&gt;//编号&lt;/span&gt;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//昵称&lt;/span&gt;\n    char sex; &lt;span class=\"hljs-comment\"&gt;//性别&lt;/span&gt;\n    char type[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;//品种&lt;/span&gt;\n    char city[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//国家&lt;/span&gt;\n    char area[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//地区&lt;/span&gt;\n    struct _animal* next;\n}animal;\n\n&lt;span class=\"hljs-comment\"&gt;//初始化链表头&lt;/span&gt;\nanimal* initList(animal* list)\n{\n    list &amp;#61; (animal*)malloc(sizeof(animal));\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;list&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    return list;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//头插法创建链表&lt;/span&gt;\nvoid createList(animal* list)\n{\n    int i, n;\n    animal * t;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要插入的动物数量&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        t &amp;#61; (animal*)malloc(sizeof(animal));\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个动物的编号&amp;#xff1a;&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%d&amp;#34;, &amp;amp;t-&amp;gt;&lt;/span&gt;id);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个动物的昵称&amp;#xff1a;&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%s&amp;#34;, t-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n        getchar();&lt;span class=\"hljs-comment\"&gt;//吸收回车符&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个动物的性别&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%c&amp;#34;, &amp;amp;t-&amp;gt;&lt;/span&gt;sex);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个动物的品种&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%s&amp;#34;, t-&amp;gt;&lt;/span&gt;type);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个动物的国家&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%s&amp;#34;, t-&amp;gt;&lt;/span&gt;city);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个动物的地区&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%s&amp;#34;, t-&amp;gt;&lt;/span&gt;area);\n        &lt;span class=\"hljs-comment\"&gt;//插入头插法插入链表&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;t&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; list-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;list&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; t;\n    }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//遍历输出动物信息&lt;/span&gt;\nvoid showList(animal* list)\n{\n    animal* p;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (list &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) return;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; list-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%8d  %20s  %c  %20s %20s %20s\\n&amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;id&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;sex&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;type&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;city&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;area);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n    }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//删除 根据编号删除&lt;/span&gt;\nvoid deleteList(animal* list)\n{\n    int id;\n    animal* front, * p;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要删除的动物ID&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;id);\n    front &amp;#61; list;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; front-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;id &amp;#61;&amp;#61; id)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;front&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            free(p);\n            break;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            front &amp;#61; p;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n    }\n}\n\n&lt;span class=\"hljs-comment\"&gt;//根据昵称查找动物&lt;/span&gt;\nvoid findByName(animal* list)\n{\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;animal&lt;/span&gt;* p &amp;#61; list-&amp;gt;&lt;/span&gt;next;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查找的动物昵称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (strcmp(p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%8d  %20s  %c  %20s %20s %20s\\n&amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;id&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;sex&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;type&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;city&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;area);\n            break;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到\\n&amp;#34;&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-comment\"&gt;//根据编号排序&lt;/span&gt;\nvoid sortById(animal* L)\n{\n    animal* p, * tail, * q;\n    tail &amp;#61; NULL;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; ((L-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next) !&amp;#61; tail)\n    {\n        p &amp;#61; L;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; L-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; (q-&amp;gt;&lt;/span&gt;next !&amp;#61; tail)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; ( q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;id&lt;/span&gt; &amp;gt; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;id ) &lt;span class=\"hljs-comment\"&gt;//升序排列 /降序&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            }\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n        tail &amp;#61; q;\n    }\n    \n}\n\nint main()\n{\n    animal* list &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    list &amp;#61; initList(list);\n    createList(list);\n    showList(list);\n    &lt;span class=\"hljs-comment\"&gt;//查找&lt;/span&gt;\n    findByName(list);\n    &lt;span class=\"hljs-comment\"&gt;//删除&lt;/span&gt;\n    deleteList(list);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;删除后链表&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    showList(list);\n    &lt;span class=\"hljs-comment\"&gt;//排序&lt;/span&gt;\n    sortById(list);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;排序后的链表&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    showList(list);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["C语言定义动物结构体，且进行保存信息", ["定义一个animal的结构体（编号 昵称  性别 品种（种类 国家、地区），使用链表来保存所有动物的信息。", "实现插入动物信息(头插法实现) 、删除动物信息、根据昵称查找动物信息、遍历链表、根据编号/(昵称的字典顺序) 从大到小排序"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a;\n    cin&amp;gt;&amp;gt;c;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;c&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;)\n        a&amp;#61;c&lt;span class=\"hljs-number\"&gt;-48&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        a&amp;#61;c;\n    cout&amp;lt;&amp;lt;a;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["从键盘输入字符，若是数字字符，则转换成数字后输出否则输出字符的ASCII码值", ["请用.cpp", "来打，即用c++语言", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char类型取值范围是 -128 到 127 &amp;#xff0c;140超过范围了&amp;#xff0c;&lt;br /&gt;你赋值140 等于是 140 - 256 &amp;#61; -116&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["字符变量运算后ch应该为140，输出时为何为ch=-116？", ["代码为：", "\n", "#", "include", " ", "<stdio.h>", "                                                             ", "\n", "void", " ", "main", "()", "\n", "{\n  ", "char", " ch1,ch2,ch;\n  ", "unsigned", " ", "char", " c;\n  ", "int", " a;\n  ch1=", "80", ";\n  ch2=", "60", ";\n  ch=ch1+ch2;\n  c=ch1+ch2;\n  a=ch1+ch2;\n  ", "printf", "(", "\"ch1+ch2=%d\\n\"", ",ch1+ch2);\n  ", "printf", "(", "\"ch=%d\\n\"", ",ch);\n  ", "printf", "(", "\"c=%d\\n\"", ",c);\n  ", "printf", "(", "\"a=%d\\n\"", ",a);\n}\n\n", "\n", "运行后为", "\n", "\n", "遇到的问题是：", "输出的ch，为什么ch= -116，而不是ch=140"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符变量强制转为int时会转成字符对应的ascii码&amp;#xff0c;但是字符有很多&amp;#xff0c;比如中文的。而ascii中没有这个符号的码。所以并不是所有的都能转&amp;#xff0c;因此在设计时&amp;#xff0c;就分开了。望采纳&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["scanner.nextInt（）为什么不能接受字符型变量，字符型变量不是可以自动转换成int型吗", ["如题scanner.nextInt（）为什么不能接受字符型变量，字符型变量不是可以自动转换成int型吗"]], "Tag": "程序设计"}
{"Answer": "```\r\n String s = \"&lt;html&gt;&lt;a href=\\\"https://www.baidu.com\\\"&gt;测试&lt;/a&gt;&lt;/html&gt;&lt;img src=\\\"www.test.com/1.jpg\\\"&gt;\";\r\n        s = s.replaceAll(\"(href|src)=\\\"(?!http)(.+?)\\\"\", \"$1=\\\"http://$2\\\"\");\r\n        System.out.println(s);\r\n```\r\n这个是java语言的，其中\r\n\r\n```\r\n \"(href|src)=\\\"(?!http)(.+?)\\\"\"\r\n```\r\n是正则表达式，\r\n在支持正则的语言中都可以\r\n希望可以帮到你....", "Konwledge_Point": "字符型", "Question": ["求一个正则,坐等,急急急!", ["正则需求如下,有一个字符串,字符串为html页面,要求检索html标签中,如href,src等,如果地址不包含http|https则自动添加上http,比如", "\n\n", " String s = \"<html><a href=\\\"www.baidu.com\\\">测试</a></html><img src=\\\"www.test.com/1.jpg\\\">\";\n 替换为\n String s1 = \"<html><a href=\\\"http://www.baidu.com\\\">测试</a></html><img src=\\\"http://www.test.com/1.jpg\\\">\"\n 或者类似这样的\"://....\" 替换为\"http://...\",总之就是html中的所有地址替换为标准地址,如果本身为标准地址则不替换\n"]], "Tag": "程序设计"}
{"Answer": "包括有向图、有向网、无向图、无向网，根据深度和广度优先遍历图。\r\nhttp://blog.csdn.net/creazyapple/article/details/7949064\r\nhttp://blog.csdn.net/lwwworkspace/article/details/4247133\r\nhttp://www.doc88.com/p-5425998010654.html", "Konwledge_Point": "字符型", "Question": ["求用C语言实现下面问题     新手求指点~谢谢~", ["假设图中数据元素类型是字符型，请采用邻接矩阵或邻接表实现图的以下基本操作：", "\n（1）构造图（包括有向图、有向网、无向图、无向网）；", "\n（2）根据深度和广度优先遍历图。"]], "Tag": "程序设计"}
{"Answer": "去看javaJDK中的SimpleDateFormat", "Konwledge_Point": "字符型", "Question": ["把获取的时间转换为当前系统时间", ["如何将这样的时间 Thu Jun 20 17:43:33 UTC+0800 2013 转换为当前系统时间"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用 kbhit()函数检测键盘是否有键按下。kbhit()函数包含在 #include&amp;lt;conio.h&amp;gt; 头文件中&lt;br /&gt;如果有键按下&amp;#xff0c;返回非0值&amp;#xff1b;否则返回0。&lt;br /&gt;kbhit不等待键盘按键。无论有无按键都会立即返回。&lt;br /&gt;如判断有键按下再用getch()读取即可&lt;/p&gt;\n&lt;p&gt;例如下面的代码&amp;#xff0c;如果没有键盘输入程序一直输出“Hello World”&amp;#xff0c;直到用户按Esc结束。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;conio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ch !&amp;#61; &lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Hello World\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;kbhit&lt;/span&gt;())\n            ch &amp;#61; &lt;span class=\"hljs-built_in\"&gt;getch&lt;/span&gt;();\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;End!\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["C语言问题，怎么执行函数同时接受输入数据？", ["有什么办法在获取用户输入字符的同时不中断程序办法，比如一边执行某个函数一边继续等待用户输入数据"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在网上找的很多方法都是说先将数值转为字符串&amp;#xff0c;再进行存储&amp;#xff0c;但我在用np.astype(str)转换之后&amp;#xff0c;还是有这个问题&amp;#xff0c;看了上面这篇博客之后才知道python在将数值较小的float转为str时&amp;#xff0c; 会转化为科学计数&amp;#xff0c;比如&amp;#xff1a;&lt;br /&gt;\n&lt;img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210306143204786.png\" /&gt;&lt;br /&gt;\n使用格式化输出可以解决这个问题&amp;#xff0c;比如&amp;#xff1a;&lt;br /&gt;\n&lt;img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210306143557477.png\" /&gt;&lt;br /&gt;\n对于一个np数组&amp;#xff0c;目前就只能遍历解决了&amp;#xff08;大佬有知道其他方法的欢迎留言&amp;#xff09;&amp;#xff1a;&lt;br /&gt;\n&lt;img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/20210306143730858.png\" /&gt;&lt;br /&gt;\n将dataframe数据写入excel的时候先转为str再写入就好了&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["pandas 长小数转字符型显示科学计数问题", ["\n\n", "转换为字符型", "\n\n", "\n\n", "不知道为啥会显示科学计数法，明明是转化为字符"]], "Tag": "程序设计"}
{"Answer": "你这个net.sourceforge.jtds.jdbc.ClobImpl@？？ 就是rs.getObject(i)取出来的吗？\r\n\r\n他俩是一个对象？就是打印不一样？", "Konwledge_Point": "字符型", "Question": ["ntext取出来是net.sourceforge.jtds.jdbc.ClobImpl??", ["sql数据库", "\n\n", "ntext取出来是net.sourceforge.jtds.jdbc.ClobImpl@？？", "\n\n", "用strCL = String.valueOf(rs.getObject(i));取的，两个一模一样的程序,而且在同一台机器上跑， 为什么有一个可以正常取出来，", "\n另外一个却是取出这样的数据？？请各位指教？？", "\n很奇怪。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入字符串&amp;#xff0c;进行判断&lt;br /&gt;如果有字符&amp;#xff0c;就是字符类型&amp;#xff1b;&lt;br /&gt;如果有小数点&amp;#xff0c;就是浮点型&amp;#xff1b;&lt;br /&gt;否则就是数&lt;br /&gt;&lt;font size=\"5\"&gt;望采纳&amp;#xff01;&lt;/font&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C++猜价格，要求考虑猜的是整型浮点型和字符型", ["这个怎么做呀꒦ິ^꒦不理解考虑猜的是整形浮点型和字符型，能不能帮忙解答一下呀，希望能有人指导一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;getchar()它确实每次只能读取一个字符&amp;#xff0c;但是循环下一次遇到getchar()其实是从缓冲区读取用户上一次输入的字符串剩下的字符&amp;#xff0c;直到遇到&amp;#39;\\n&amp;#39;才结束&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c=getchar ();不是一次只能输入一个字符吗？为什么可以输入一串？", ["#include<stdio.h>", "int main()", "{", "    char c;", "    c=getchar();", "    while(c!='\\n'){", "        if(c>='a'&&c<='z'||c>='A'&&c<='Z')", "          {if(c>='w'&&c<='z'||c>='W'&&c<='Z')", "              c-=32;", "          else c+=4;", "          }", "        printf(\"%c\",c);", "        c=getchar();", "    }", "    printf(\"\\n\");", "    return 0;", "}", "\n"]], "Tag": "程序设计"}
{"Answer": "官方文档对于char类型的定义如下:\r\n&gt; The char data type is a single 16-bit Unicode character. It has a minimum value of '\\u0000' (or 0) and a maximum value of '\\uffff' (or 65,535 inclusive).\r\n所以表示范围为0-65535应该是没有疑问，至于书上说的0-255一般是指可以键盘直接输入的字符，如数字、字母等。但也可以使用'\\u0108'这样的形式表示一个Unicode字符，很多非打印字符都是以这样的方式表示。", "Konwledge_Point": "字符型", "Question": ["Java中char类型是两字节，16位，为什么可表示的数据范围是0~255？", ["还有那char表数范围是0~65535，这个我觉得因该是16位二进制数（没有符号位）表示的最大值。", "\n那这个数值0~65535是编码吗（我感觉是）？", "\n那0~255不应该是8位无符号二进制数算来的吗？", "\n请大神指点，不胜感激。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符型转换为整型&amp;#xff1a;&lt;br /&gt;字符型数值如 ‘0’ 的ASCII 码值为48&amp;#xff0c;数值0就是其自身&amp;#xff0c;‘1’的ASCII码值为49&amp;#xff0c;当‘1’-‘0’ &amp;#61; 49-48&amp;#61;1&amp;#xff0c;‘0’-‘0’&amp;#61;48-48&amp;#61;0&amp;#xff0c;得到我们想要的数值。十六进制里数值10用 ‘A&amp;#39; 或 &amp;#39;a&amp;#39; 表示 , 当 ’A‘-&amp;#39;A&amp;#39; &amp;#61; 65 - 65 &amp;#61;0,此时应该得到10&amp;#xff0c;所以用 ’A&amp;#39;-&amp;#39;A&amp;#39;&amp;#43;10&amp;#61;10,以此类推当 ‘F&amp;#39; - &amp;#39;A&amp;#39; &amp;#43; 10 &amp;#61; 70 - 65 &amp;#43; 10 &amp;#61; 15,小写的 ’a‘类似。&lt;br /&gt;数值转换为字符&amp;#xff1a;&lt;br /&gt;与上面的计算方法反推&amp;#xff0c;数值 0 &amp;#43; ’0‘ &amp;#61; 0 &amp;#43; 48  &amp;#61; 48 &amp;#61; ’0‘&amp;#xff0c;1 &amp;#43; ’0’ &amp;#61; 1 &amp;#43; 48 &amp;#61; 49 &amp;#61; ‘1’&amp;#xff0c;当数值为 10 时&amp;#xff0c;‘A’ &amp;#43; 10 - 10 &amp;#61; ‘A&amp;#39; , &amp;#39;A&amp;#39; &amp;#43; 11 - 10 &amp;#61; &amp;#39;B&amp;#39;, 类推。&lt;br /&gt;ASCII 码表&amp;#xff0c;供参考&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/602269372576178.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["字符型和整型的相互转换", ["问题遇到的现象和发生背景", "\n", "字符型和整型的转换", "\n", "\n", "中间的字符型和整型相互转换是怎么实现的啊？", "\n", "\n", "其他进制转十进制中，讲字符型转换成整型：", "\n", "int", " charToOct(", "char", " a[],", "int", " m) {\n    ", "int", " product=", "1", ",", "sum", "=", "0", ";\n    ", "int", " len=strlen(a);\n    ", "for", "(", "int", " i=len", "-1", "; i>=", "0", "; i--) {\n        ", "if", "(a[i]<=", "'9'", ") {\n            ", "sum", "=", "sum", "+(a[i]-", "'0'", ")*product;  ", "//字符型转换成整型", "\n        } ", "else", " ", "if", "(a[i]<=", "'F'", ") {\n            ", "sum", "=", "sum", "+(a[i]-", "'A'", "+", "10", ")*product;\n        } ", "else", " ", "if", "(a[i]<=", "'f'", ") {\n            ", "sum", "=", "sum", "+(a[i]-", "'a'", "+", "10", ")*product;\n        }\n        product=product*m;\n    }\n    ", "return", " ", "sum", ";\n}\n\n", "\n", "十进制转其他进制中将整形转换成字符型：", "\n", "//b为输入的十进制数，m为进制，a存储 ", "\n", "void", " ", "octToChar", "(", "char", " a[],", "int", " m,", "int", " b)", " ", "{\n    ", "int", " i=", "0", ";\n    ", "do", " {\n        ", "int", " k=b%m;\n        ", "if", "(k<=", "9", ") {\n            a[i++]=", "'0'", "+k;", "//整型转换成字符型", "\n        } ", "else", " {\n            a[i++]=", "'A'", "+k", "-10", ";\n        }\n        b=b/m;\n    } ", "while", "(b!=", "0", ");\n    a[i]=", "'\\n'", ";\n}\n\n\n", "\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n #include &lt;iostream&gt;\r\nusing namespace std;\r\nchar Max(char ch1, char ch2) { return ch1 &gt; ch2 ? ch1 : ch2; }\r\nint Max(int i1, int i2) { return i1 &gt; i2 ? i1 : i2; }\r\nint main()\r\n{\r\ncout &lt;&lt; Max('1', '2') &lt;&lt; endl;\r\ncout &lt;&lt; Max(1, 2) &lt;&lt; endl;\r\nreturn 0;\r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["如何用V6.0，使用函数重载，编写两个字符型的最大值Max（）", ["使用函数重载，编写两个字符型的最大值Max（），并编写测试的主函数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可用可不用&amp;#xff0c;第11行用来指向输入字符串的倒数第三个字符所在的地址而已。直接puts(str&amp;#43;len-3)也是可以的。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["第七行定义字符型指针有啥用", ["第七行定义字符型指针有什么作用，请详细讲解一下。第七行定义字符型指针有什么作用，请详细讲解一下"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;同学&amp;#xff0c;因为&amp;#xff05;d是以整形int输出的&amp;#xff0c;整形占四个字节&amp;#xff0c;而&amp;#xff05;c是字符char类型占了一个字节&amp;#xff0c;你把字符存储到了char类型中&amp;#xff0c;它可以正常输出&amp;#xff0c;然后int占四个字节呀&amp;#xff0c;比char多了3个字节&amp;#xff0c;所以也可以输出只有1个字节的字符。这块知识是关于数据在内存中是如何存储的&amp;#xff0c;了解详细的可以百度&amp;#xff0c;或者看我博文有讲解。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["请问为什么使用%s无法输出，而且字符数组为什么用%d能输出用%c输出异常", ["#include<stdio.h>", "int main(){", "    char a[10];", "    int i;", "    //scanf(\"%s\",a);", "    for(i=0;i<=8;i++)", "    {", "        a[i]=i;", "     }", "     a[9]='\\0';", "    for(i=0;i<=8;i++)", "    //printf(\"%c \",a[i]);", "        //printf（\"%s\",a);", "    printf(\"%d \",a[i]);", "    }"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include &lt;stdio.h&gt;\r\n\r\nint main()\r\n{\r\nchar a[5]=\"serf\";\r\nprintf(\"%s\",a);\r\nreturn 0;\r\n}\r\n```\r\n\r\n或者\r\n\r\n```\r\n#include &lt;stdio.h&gt;\r\n\r\nint main()\r\n{\r\nchar a[][5]={\"serf\"};\r\nprintf(\"%s\",a);\r\nreturn 0;\r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["给字符数组赋值的小问题", ["#include", "\n\n", "void main()", "\n{", "\n    char a[];", "\n    a[]={\"serf\"};", "\n    printf(\"%s\",a);", "\n\n", "}", "\n一直报错，把大括号去掉也报错，不知道为什么？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import pandas as pd\nls &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[[0,1]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,5]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;,6]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;,8]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,4]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;,4]&lt;/span&gt;]\ndf &amp;#61; pd&lt;span class=\"hljs-selector-class\"&gt;.DataFrame&lt;/span&gt;(ls)\ndfcount &amp;#61; df&lt;span class=\"hljs-selector-attr\"&gt;[1]&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.groupby&lt;/span&gt;(df&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.count&lt;/span&gt;()\ndfsum &amp;#61; df&lt;span class=\"hljs-selector-attr\"&gt;[1]&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.groupby&lt;/span&gt;(df&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;)&lt;span class=\"hljs-selector-class\"&gt;.sum&lt;/span&gt;()\ndfsum/dfcount\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/989813956946195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;如有用请采纳&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["dataframe 根据某行的值取平均数", ["如下图片", "这是一个dataframe形式", "取里面所有A的均值和B C 的均值该怎么去算"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;加域宽读入就是读取指定宽度的数据&lt;br /&gt;%4d&amp;#xff0c;从输入中读取前4位数字&amp;#xff0c;即9876存到变量a中&amp;#xff0c;故a为9876&lt;br /&gt;%2c&amp;#xff0c;从输入中读取两位字符&amp;#xff0c;即&amp;#39;54&amp;#39;存到变量c中&amp;#xff0c;但是变量c是字符char型&amp;#xff0c;所以两位中只能保存1位&amp;#xff0c;即&amp;#39;5&amp;#39;&amp;#xff0c;&amp;#39;4&amp;#39;是作为字符读取了&amp;#xff0c;但是没有保存下来&amp;#xff1b;&lt;br /&gt;%3d就是后面的321了&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["字符型变量加域宽读入会发生什么", ["int a,b;", "char c;", "scanf(\"％4d％2c％3d\",&a,&c,&b);", "输入987654321", "结果a为9876，c为5，b为321", "想知道在读入字符型变量c时发生了什么，输入的4去哪了", "字符型变量只有一个位置，这么写应该本来就是不合理的，可我们作业就长这样，我不是故意的，大佬轻喷"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;尝试to_date(字段, &amp;#39;dd-mm-yyyy&amp;#39;);&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["04-1月 -20这种格式的字符型字段如何转为日期型字段", ["Oracle数据库，如何把“04-1月 -20“这种格式的字符型数据转为日期型数据？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不会报错&amp;#xff0c;只是按照定义的类型&amp;#xff08;这里是char&amp;#xff09;&amp;#xff0c;取了符合长度&amp;#xff08;1字节&amp;#xff09;的数据了。   你试试后面再定义一个char取数据&amp;#xff0c;应该就是你后面多输入的了。。。&lt;br /&gt;终端有缓冲区&amp;#xff0c;从输入缓冲区中依次取这些数据。。。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/261946466946117.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C++//关于故意给char类型输入多个字符的结果", ["\n", "//关于故意给char类型输入多个字符的结果\n#include <iostream>\nusing namespace std;\nint main()\n{\n\tcout << \"Enter your word: \";\n\tchar guess;\n\tcin >> guess;\n\tcout << \"\\nThe word is: \" << guess;\n\treturn 0;\n}", "\n\n", "在这个程序中键盘输入多个字符，但是程序没有报错，并且运行结果如下，这是为什么呢？", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "因为学号不是数值，没有四则运算的需要。你不会拿两个学号相加，或者求学号的平均值。相反，学号会像别的字符串一样涉及模糊查询等操作。\r\n学号可能超过10位（一些编译系统下long最大只有10位）\r\n类似的，身份证号、电话等也应该用字符串类型。", "Konwledge_Point": "字符型", "Question": ["在c中关于数字型变量的存储", ["为什么学号要用字符数组来存储，而不是用一个long类型的数据来存储"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以。 char, int 都是一样的。 请看&amp;#xff1a; &lt;a href=\"https://blog.csdn.net/zhjqxy/article/details/52975140\"&gt;https://blog.csdn.net/zhjqxy/article/details/52975140&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["（来自c++primer第五版练习3.7）数组的下标居然可以是字符型吗？", ["\n", "#include<iostream>\n#include<string>\n#include<cmath>\n#include<cctype>\nusing namespace std;\n// 3.7这个题目为个人理解就是所谓控制循环变量的类型设为char \nint main(){\n\tstring c=\"hello world!!!!\";\n\t\tfor(char a;a<=c.size();a++){\n\t\t\tcout<<c[a];// 简直神奇，我都没想到这个下标换成字符型的也可以输出 \n\t\t}\nreturn 0;\n}"]], "Tag": "程序设计"}
{"Answer": "```\r\n String s = \"aababc\";\r\nString s1 = \"[\";\r\nfor (int i = 0; i &lt; s.length(); i++) {\r\nif (i &gt; 0) s1 += \",\";\r\ns1 += s.subString(i, 1);\r\n}\r\ns1 += \"]\";\r\n```", "Konwledge_Point": "字符型", "Question": ["字符串转换成相应形式问题", ["大咖们好，请问如何将 String str = \"aababc\";转换成[a,a,b,a,b,c] 和{a,a,b,a,b,c}呢，先谢谢了！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; char name[5]&amp;#61;{&amp;#39;h&amp;#39;,&amp;#39;e&amp;#39;,&amp;#39;l&amp;#39;,&amp;#39;l&amp;#39;,&amp;#39;o&amp;#39;};要加上单引号表示字符&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["char字符型显示未定义标识符", ["#include<iostream>", "\n\n", "using namespace std;", "\n\n", "void printf(int *pbegin,int *pend)", "\n\n", "{", "\n\n", "    while(pbegin != pend)", "\n\n", "    {", "\n\n", "        cout<<*pbegin;", "\n\n", "        ++pbegin;", "\n\n", "    }", "\n\n", "}", "\n\n", " ", "\n\n", "void printf(char *pbegin,char *pend)", "\n\n", "{", "\n\n", "    while( pbegin != pend)", "\n\n", "    {", "\n\n", "        cout<<*pbegin;", "\n\n", "        ++pbegin;", "\n\n", "    }", "\n\n", "}", "\n\n", " ", "\n\n", "int main()", "\n\n", "{", "\n\n", "    int num[5]={0,1,2,3,4};", "\n\n", "    char name[5]={h,e,l,l,o};//", "此处出错，请问为什么char是字符型输入字符会报错呢", "\n\n", " ", "\n\n", "    printf( num,num+5);", "\n\n", "    cout<<'\\n';", "\n\n", "    printf(name,name+5);", "\n\n", "    cout<<'\\n';", "\n\n", " ", "\n\n", "    return 0;", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符型变量 char 是可以加一的&amp;#xff0c;&amp;#39; &amp;#39; 中括起的字符本质是一个整数。 在ASCLL字符集下&amp;#xff0c;例如字符 &amp;#39;a&amp;#39; 本质是 整数97&amp;#xff0c;&amp;#43;1就是98 &amp;#xff0c;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c\\n&amp;#34;&lt;/span&gt;, ch&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;//打印出b&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这篇博客解释了C语言中的单双引号的意义。希望能帮助到你 &lt;a href=\"https://blog.csdn.net/xyh17858926692/article/details/128886138?spm&amp;#61;1001.2014.3001.5501\" id=\"textarea_1675769231470_1675769714872_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/xyh17858926692/article/details/128886138?spm&amp;#61;1001.2014.3001.5501&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c中字符型变量为什么可以用增一运算符", ["c语言中字符型变量为什么可以用增一运算符，并且其得到的结果又是什么。是字母还是随机数？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该是取值范围不同吧&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["char 不是字符型变量吗 那个signed/unsigned char有什么意义呢", ["char 不是字符型变量吗 那个signed/unsigned char有什么意义呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这是因为你定义了一个数组char s[10];该字符型数组的长度为10个字节&amp;#xff0c;但该自字符型数组未进行初始化&amp;#xff0c;因此10个字节的数组的值是未知的。&lt;br /&gt; scanf(&amp;#34;%s&amp;#34;,&amp;amp;s);&lt;br /&gt;使用以上命令&amp;#xff0c;由于只输入了5个字符&amp;#xff0c;因此s[0]&lt;del&gt;s[4]的值分别是字符‘a’&amp;#xff0c;‘p’&amp;#xff0c;‘p’&amp;#xff0c;‘l’&amp;#xff0c;‘e’&amp;#xff0c;而s[5]&lt;/del&gt;s[9]的值依旧没有赋值&amp;#xff0c;因此s[5]~s[9]的值依旧是未知的。&lt;br /&gt;所以你打印出来&amp;#xff0c;后面的值就是不确定的值了。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["【C语言】打印字符型数组出现方框", ["\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<string.h>", "\n\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " s[", "10", "];\n    ", "int", " len = ", "sizeof", "(s)/", "sizeof", "(s[", "0", "]);\n    ", "int", " i;\n    ", "printf", "(", "\"请输入你的字符串： \"", ");\n    ", "scanf", "(", "\"%s\"", ",&s);\n    \n    ", "for", "(i = ", "0", "; i < len; i++)\n    {\n        ", "printf", "(", "\"s[%d]=%c\\n\"", ",i,s[i]);\n    } \n}\n", "\n", "\n", "问题描述：", "定义了一个字符型数组，通过scanf输入字符后再通过for循环打印出来，但打印出来的第8个数组元素显示出一个方框。如果printf里使用%d输出，有时候显示的是数字1，ascii码对应的是SOH(start of headline)，标题开始。有时候显示的是48，意思是字符0。", "请问大家这是什么原因导致的呢？", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以有&amp;#xff0c;第一个\\0后边的字符不算有效字符&amp;#xff0c;strlen()求得的结果不包括第一个&amp;#xff3c;&amp;#xff10;之后的部分。供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;abcdefghijk&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%s\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s),s);\n    s[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;s[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%s\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s),s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["一个字符数组中可以有两个’\\0’吗", ["一个字符数组中可以有两个’\\0’吗？", "如果可以，第一个\\0后边的字符算不算有效字符，strlen()求得的结果里面包括这部分吗"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-csharp\"&gt;&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-character\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;;\nshort s &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nConsole.&lt;span class=\"hljs-constructor\"&gt;WriteLine(&lt;span class=\"hljs-params\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;)&lt;/span&gt;);\nConsole.&lt;span class=\"hljs-constructor\"&gt;WriteLine(&lt;span class=\"hljs-params\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["使用sizeof定义字符型，短整型等，并给这些变量赋值，输出存储宽度", ["使用sizeof定义字符型，短整型等，并给这些变量赋值，输出存储宽度"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;MySQL is perfectly capable of comparing a string to a TIME value. You just need to have the proper query syntax. In your case, you need to quote the comparison value:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$time = \"06:00:00\";\n\n$getdetails = \"SELECT First_Name, Last_Name, EMAIL \nFROM parents \nWHERE Email_Receive_Time = '$time'\"; \n\n$results=mysql_query($getdetails);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And if it is user-supplied, well you should escape it.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["将字符串数据类型与日期数据类型PHP MYSQL进行比较", ["\n\n", "In my MySQL database, I have this Time data type as one of my values: ", "06:00:00", ". I have the following query that checks the time as one of the conditions that has to be satisfied ", "\n\n", "$time = \"06:00:00\";\n\n$getdetails=SELECT First_Name, Last_Name, EMAIL \nFROM parents \nWHERE Email_Receive_Time = $time; \n\n$results=mysql_query($getdetails);\n", "\n\n", "However I do not get any results. On further research I have seen that it is because I am comparing a STRING type value ($time) to a TIME type value (value in my database). Is there a way i can compare the two without changing my database structure to a varchar? All help will be appreciated. ", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;_char(&lt;span class=\"hljs-params\"&gt;to_date&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;value&lt;/span&gt;&amp;#xff0c;&amp;#39;&lt;span class=\"hljs-params\"&gt;yyyy&lt;/span&gt;年&lt;span class=\"hljs-params\"&gt;mm&lt;/span&gt;月&lt;span class=\"hljs-params\"&gt;dd&lt;/span&gt;日 &lt;span class=\"hljs-params\"&gt;hh&lt;/span&gt;时:&lt;span class=\"hljs-params\"&gt;mi&lt;/span&gt;分&amp;#39;)&lt;/span&gt;,&amp;#39;yyyymmdd&amp;#39;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["在Oracle数据库中怎么把字符型日期2020年12月23日 9时23分转换成20201223", ["如图是一个字符型日期我想把2019年12月25日12时59分转换成20191225"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入的字符数超出了arr[10]定义的10个字符&amp;#xff0c;产生了溢出&amp;#xff0c;导致程序崩溃&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["字符串数组的输入问题遇到报错", ["\n", "为什么我想输入一系列字符串用数组，在用get函数的时候还给我这个报错呢？请指路，谢谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你可将第9行输入语句&amp;#xff1a;scanf(&amp;#34;%c&amp;#34;, &amp;amp;c);  修改为&amp;#xff1a;scanf(&amp;#34; %c&amp;#34;, &amp;amp;c);   在格式控制 %c前留一空格符&amp;#xff1a;“%c”  &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;gt; &amp;#34;  %c&amp;#34; &lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["为什么有时候用scanf没办法输入字符？", ["问题遇到的现象和发生背景", "\n", "题目：函数原型为：int count(const char str[], char c)，其中c为待统计的字母。要求待统计字母和字符串在主程序中输入，然后在主程序中调用该函数，并将结果在主程序中输出。如：j在Beijing Jiaotong中出现的次数为2，i在Beijing Jiaotong中出现的次数为3，u在Beijing Jiaotong中出现的次数为0。", "问题：我用scanf输入字符时结果错误，而用getchar结果正确了。", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "使用scanf(错误）", "\n", "\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "int", " ", "count", "(", "const", " ", "char", " str[], ", "char", " c)", ";\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " str[", "100", "];\n    ", "char", " c;\n    ", "gets", "(str);\n    ", "scanf", "(", "\"%c\"", ", &c);\n    ", "printf", "(", "\"%d\"", ",", "count", "(str, c));\n    ", "return", " ", "0", ";\n}\n", "int", " ", "count", "(", "const", " ", "char", " str[], ", "char", " c)", "\n", "{\n    ", "int", " len = ", "strlen", "(str),count1=", "0", ";\n    ", "for", " (", "int", " i =", "0", "; i <= len", "-1", "; i++)\n    {\n        ", "if", " (c == str[i])\n            count1++;\n    }\n    ", "return", " count1;\n}\n使用", "getchar", "(正确）\n\n```c\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "int", " ", "count", "(", "const", " ", "char", " str[], ", "char", " c);\n", "int", " ", "main", "()\n{\n    ", "char", " str[", "100", "];\n    ", "char", " c;\n    ", "gets", "(str);\n    c = ", "getchar", "();\n    ", "printf", "(", "\"%d\"", ",", "count", "(str, c));\n    ", "return", " ", "0", ";\n}\n", "int", " ", "count", "(", "const", " ", "char", " str[], ", "char", " c)\n{\n    ", "int", " len = ", "strlen", "(str),count1=", "0", ";\n    ", "for", " (", "int", " i =", "0", "; i <= len", "-1", "; i++)\n    {\n        ", "if", " (c == str[i])\n            count1++;\n    }\n    ", "return", " count1;\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "使用scanf时", "输入werty        w", "输出 0", "使用getchar时", "输入werty       w", "输出 1", "\n", "我的解答思路和尝试过的方法", "\n", "将scanf改成getchar", "\n", "我想要达到的结果", "\n", "为什么用scanf不行呢？"]], "Tag": "程序设计"}
{"Answer": "退出循环时多加了一次，修改：\r\n\r\n```\r\n #include&lt;stdio.h&gt;\r\nint main()\r\n{\r\n\tdouble s=0;long i;\r\n\tfor(i=1; ;i++)\r\n\t{\r\n\t\ts+=1.0/i;\r\n\t\tif(s&gt;15.0) break;\r\n\t}\r\n\tprintf(\"%ld\",i); \r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["c语言题目求助~~~大家帮忙看一下这个代码有啥错误", ["**", "\n1/1 + 1/2 + 1/3 + 1/4 + ... 在数学上称为调和级数。", "\n\n", "**它是发散的，也就是说，只要加上足够多的项，就可以得到任意大的数字。", "\n\n", "但是，它发散的很慢：", "\n\n", "前1项和达到 1.0", "\n前4项和才超过 2.0", "\n前83项的和才超过 5.0", "\n\n", "那么，请你计算一下，要加多少项，才能使得和达到或超过 15.0 呢？**", "\n\n", "请填写这个整数。", "\n\n", "注意：只需要填写一个整数，不要填写任何多余的内容。比如说明文字。**", "\n\n", " #include<stdio.h>\nint main()\n{\ndouble s=0;long i;\nfor(i=1;s<15.0;i++)\ns+=1.0/i;\n printf(\"%ld\",i); \nreturn 0;\n}\n\n", "\n\n", "正确结果是1835421 可我这个代码结果是1835422"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/11890975246612.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;因为cout的对特殊字符串的处理你要用强制转换才能打印字符的地址&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["请问为什么我这个字符型指针取地址，却输出不了地址呢/？整型的就可以呀。", ["请问为什么我这个字符型指针取地址，却输出不了地址呢/？整型的就可以呀。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你需要对字符型变量进行离散编码&amp;#xff0c;如年龄中的“&amp;lt;30”编码为“1”&amp;#xff0c;“30-50”为“2”&amp;#xff0c;“&amp;gt;50”为“3”&amp;#xff0c;其他特征类似&amp;#xff0c;因为如果不编码的话&amp;#xff0c;将这些内容放入Python中的决策树里是识别不了的&amp;#xff0c;因此需要对字符型变量进行编码。编码处理完成可调用sklearn模块中的决策树模型&amp;#xff0c;先进行训练&amp;#xff0c;训练完成可用于预测。&lt;/p&gt;\n&lt;p&gt;编码处理&amp;#xff08;可以使用Python处理&amp;#xff09;&amp;#xff1a;&lt;br /&gt;年龄&amp;#xff1a;&amp;lt;30&amp;#xff1a;1&amp;#xff0c;30-50&amp;#xff1a;2&amp;#xff0c;&amp;gt;50&amp;#xff1a;3&lt;br /&gt;性别&amp;#xff1a;女&amp;#xff1a;0&amp;#xff0c;男&amp;#xff1a;1&lt;br /&gt;婚姻&amp;#xff1a;单身&amp;#xff1a;0&amp;#xff0c;已婚&amp;#xff1a;1&amp;#xff0c;离异&amp;#xff1a;2&lt;br /&gt;豪华车&amp;#xff1a;是-1&amp;#xff0c;否-0&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-title\"&gt;from&lt;/span&gt; sklearn.tree &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; DecisionTreeClassifier\n&lt;span class=\"hljs-title\"&gt;from&lt;/span&gt; sklearn.model_selection &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; train_test_split\n&lt;span class=\"hljs-title\"&gt;from&lt;/span&gt; sklearn.metrics &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; accuracy_score\n\n&lt;span class=\"hljs-meta\"&gt;#数据导入&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; pd.read_csv(&amp;#39;&lt;span class=\"hljs-title\"&gt;data&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;csv&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-title\"&gt;encoding&lt;/span&gt;&amp;#61;&amp;#39;&lt;span class=\"hljs-title\"&gt;gbk&amp;#39;&lt;/span&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#分离特征与预测变量&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;X&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.iloc[:,0:4]&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.iloc[:,4]&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#随机划分训练集和测试集&amp;#xff0c;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#训练集用于训练模型&amp;#xff0c;使模型具有预测该类数据的能力&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#测试集用于测试模型的预测能力如何&amp;#xff0c;并使用指标进行评价&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;x_train&lt;/span&gt;, x_test, y_train, y_test &amp;#61; train_test_split(&lt;span class=\"hljs-type\"&gt;X&lt;/span&gt;, y, test_size&amp;#61;&lt;span class=\"hljs-number\"&gt;0.3&lt;/span&gt;,random_state&amp;#61;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)\n\n&lt;span class=\"hljs-meta\"&gt;#定义决策树模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;model&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-type\"&gt;DecisionTreeClassifier&lt;/span&gt;()\n\n&lt;span class=\"hljs-meta\"&gt;#使用训练集训练模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;model&lt;/span&gt;.fit(x_train, y_train)\n\n&lt;span class=\"hljs-meta\"&gt;#使用测试集预测并进行评估&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;y_pred&lt;/span&gt; &amp;#61; model.predict(x_test)\n\n&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;预测x_test的结果&amp;#xff1a;&amp;#34;&lt;/span&gt;,y_pred)\n\n&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;模型在测试集上的准确率为&amp;#xff1a;&amp;#34;&lt;/span&gt;,accuracy_score(y_pred, y_test))\n\n&lt;span class=\"hljs-meta\"&gt;#此时调用model.predict()进行预测&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt; &amp;#61; model.predict(&lt;span class=\"hljs-type\"&gt;X&lt;/span&gt;)\n\n&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数据集X的预测结果为:&amp;#34;&lt;/span&gt;,pred)\n&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数据集X的真实结果为:&amp;#34;&lt;/span&gt;,np.array(y))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["关于#决策树#的问题：针对如下数据给出决策树预测(语言-python)", ["哪位能帮帮我", "\n", " 问题：针对如下数据给出决策树预测。真的搞不懂希望有人能帮帮我", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;*&lt;span class=\"hljs-selector-tag\"&gt;p&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;的意思是数组的第&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;个元素值加&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#xff0c;所以是&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;。是先执行*&lt;span class=\"hljs-selector-tag\"&gt;p&lt;/span&gt;&amp;#xff0c;获得第&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;个元素值\n如果你要得到数组第&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;个元素值&amp;#xff0c;那么要用*(&lt;span class=\"hljs-selector-tag\"&gt;p&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#xff0c;指针先后移&amp;#xff0c;然后再取值\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["想问一道关于指针的问题，就是整型和字符型的指针问题", ["\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " arr[", "10", "] = { ", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", " };\n    ", "char", "* p = arr;\n    ", "printf", "(", "\"%d\"", ", *p+", "1", ");\n}\n\n\narr是一个整型数组，一个元素占", "4", "个字节\n", "char", "是字符型指针，加", "1", "不是只能访问一个字节吗，怎么输出结果是", "2", " 啊\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;虽然说是初学&amp;#xff0c;但是输入输出这种最基本的东西...&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; bir;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; age;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%s%f&amp;#34;&lt;/span&gt;,&amp;amp;bir,name,&amp;amp;age);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;生日&amp;#xff1a;%d\\n姓名&amp;#xff1a;%s\\n年龄&amp;#xff1a;%.1f\\n&amp;#34;&lt;/span&gt;,bir,name,age);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["用c语言，输入自己的生日(整型数据)，姓名拼音的首字母(字符型数据)，年龄(如：20.8浮点数据)，然后输出。", ["初学者，不会编这个，带带吧。输入自己的生日(整型数据)，姓名拼音的首字母(字符型数据)，年龄(如：20.8浮点数据)，然后输出。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为char型只有一个字节&amp;#xff0c;按照最高位是符号位&amp;#xff0c;取值范围只从-128到127,130超了&lt;br /&gt;你想打印130&amp;#xff0c;那要先强制转换成int或者uint&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["变量ch定义为字符型变量，执行语 句：\"ch=80 50;后，ch的输出值为什么不是 130，而是-126。", ["变量ch定义为字符型变量，执行语句：\"ch=80 50;后，ch的输出值为什么不是130 "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\ntemplate&amp;lt;class T&amp;gt;\nT &lt;span class=\"hljs-keyword\"&gt;swap(T &lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;t1&lt;/span&gt;,T &lt;span class=\"hljs-built_in\"&gt;t2&lt;/span&gt;)\n{\n    T temp;\n    temp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;t2&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;t2&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;t1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;t1&lt;/span&gt; &amp;#61; temp;\n    cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;交换后第一个数&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;t1&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;交换后第二个数&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;t2&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\nint main()\n{\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;please input two double number&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    double a, &lt;span class=\"hljs-keyword\"&gt;b;\n&lt;/span&gt;    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; &lt;span class=\"hljs-keyword\"&gt;b;\n&lt;/span&gt;    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;交换前第一个数&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt; a &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;交换前第二个数&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-keyword\"&gt;b &lt;/span&gt;&amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;swap(a, &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;b);\n&lt;/span&gt;    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;please input two char buff&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    char &lt;span class=\"hljs-built_in\"&gt;s1&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;s2&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; &lt;span class=\"hljs-built_in\"&gt;s1&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=\"hljs-built_in\"&gt;s2&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;交换前第一个数&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;s1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;交换前第二个数&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;s2&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;swap(s1,s2);\n&lt;/span&gt;\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["运用函数重载的知识，设计一组(2个)重载函数，这两个函数可以分别完成两个双精度浮点型数、两个字符型数的交换。(要求：必须用C++程序完成，主函数负责输入输出的工作，重载函数只负责交换。)", ["运用函数重载的知识，设计一组(2个)重载函数，这两个函数可以分别完成两个双精度浮点型数、两个字符型数的交换。(要求：必须用C++程序完成，主函数负责输入输出的工作，重载函数只负责交换。)"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I am not exactly sure what you expect, but note that &lt;code&gt;!==&lt;/code&gt; has a higher &lt;a href=\"http://php.net/manual/en/language.operators.precedence.php\" rel=\"nofollow\"&gt;precedence&lt;/a&gt; than &lt;code&gt;&amp;amp;&lt;/code&gt; so you are doing a bitwise AND between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Do you perhaps mean:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if( ($flags &amp;amp; self::ALL) !== $flags )\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["PHP类常量似乎总是被解释为字符串", ["\n\n", "A class constant always seems to be interpreted as a string although it is defined as an integer. Why does PHP do this kind of type juggling and how do I prevent it?", "\n\n", "See the following code:", "\n\n", "class BitSet {\n  const NONE = 0;\n  const FOO = 1;\n  const BAR = 2;\n  const ALL = 3;\n\n  public function __construct( $flags = self::NONE ) {\n    if( $flags & self::ALL !== $flags )\n      throw new \\OutOfRangeException( '$flags = '.$flags.' is out of range' );\n    $this->value = $flags;\n  }\n\n  protected $value = self::NONE;\n}\n\n$bs = new BitSet( BitSet::FOO );\n", "\n\n", "The last line (the invocation of the constructor) throws the ", "OutOfRangeException", ":", "\n\n", "PHP Fatal error:  Uncaught exception 'OutOfRangeException' with message '$flags = 1 is out of range' in test-case.php:12\nStack trace:\n#0 /srv/www/matthiasn/class-constant-debug.php(19): BitSet->__construct('1')\n#1 {main}\nthrown in /srv/www/matthiasn/class-constant-debug.php on line 12\n", "\n\n", "As you can clearly see from backtrace entry #0 the constant ", "BitSet::FOO", " is passed as a character not as an integer. Hence, the bit mask operation ", "$flags & self::ALL !== $flags", " is not performed on integers but on the bitwise ASCII representation and therefore fails.", "\n\n", "What the hell?! Is there any better way to get this right than to do an explicit ", "(int)", "-cast everywhere?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是这样的&amp;#xff0c;程序里有c2&amp;#61;b&amp;#xff0c;就是给字符变量c2赋值为322&amp;#xff0c;但是而字符数据类型为8位&amp;#xff0c;而322的二进制为&amp;#xff1a;1 0100 0010 。因为字符变量只能存储8位&amp;#xff0c;然后这个字符变量的值就被赋值为这个322对应的二进制的后面8位&amp;#xff1a;0100 0010  。这个二进制对应的十进制是66&amp;#xff0c;用字符打印就是字符&amp;#39;B&amp;#39;&amp;#xff0c;所以c2被打印为&amp;#39;B‘.&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c2一直没做任何操作，为什么输出字符型从小写字母b变成大写字母B了啊", ["c2一直没做任何操作，为什么输出字符型从小写字母b变成大写字母B了啊", "\n", "\n```c\n", "#include \"stdio.h\"", "\nvoid main()\n{\n    int a,", "b", "=322;\n    float x,", "y", "=8.88;\n    char ", "c1", "=", "'k'", ",c2;\n    ", "a", "=y;\n    ", "x", "=b;\n    ", "a", "=c1;\n    ", "c2", "=b;\n    printf(", "\"%d\\n%f\\n%d\\n%c\\n\"", ",a,x,a,c2);\n}\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "计算机是将字符串1、2、3转化成哈希码之后相加的 \"1\"转化是49,\"2\"是50，\"3\"是51，相加就是150.", "Konwledge_Point": "字符型", "Question": ["对字符型变量求和问题", ["下面这个程序，val被我定义成了char型，那么我输入123的时候，输出的sum是150，请问这个结果是怎么得出来？计算机内部是怎么计算的？", "\n#include ", "\nint main()", "\n{", "\nint sum=0;", "\nchar val;", "\nwhile(std::cin>>val)", "\nsum+=val;", "\nstd::cout<<\"sum \"<< \"is \"<<sum", "\n<<std::endl;", "\nreturn 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;数字2的ASCII码为十六进制数32&amp;#xff0c;十进制数50&amp;#xff0c;按整型输出时就是50&amp;#xff0c;同理减&amp;#39;0&amp;#39;时其实就是减掉了&amp;#39;0&amp;#39;的ASCII48&amp;#xff0c;所以输出了2&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言，为什么字符型数据减‘0’后就不是字符型了。", ["    ", "char", " n = ", "'2'", ";\n    ", "printf", "(", "\"%d\"", ", n);\n", "\n", "    ", "char", " ", "n", " = '", "2", "';\n    ", "n", " = ", "n", " - '", "0", "';\n    printf(", "\"%d\"", ", ", "n", ");\n", "\n", "为什么第一个输出是50，第二个输出是2？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考&lt;br /&gt;&lt;a href=\"https://www.136.la/java/show-18859.html\" id=\"textarea_1631033109200_1631033378162_0\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  \n    &lt;span class=\"md_link_title\"&gt;浅谈Java中的补零扩展和补符号位扩展_136.la&lt;/span&gt;\n    \n  &lt;span class=\"md_link_desc\" style=\"\"&gt;今天&amp;#xff0c;魏屌出了一道题&amp;#xff0c;题目如下&amp;#xff1a;定义一个大头序的byte[]a&amp;#61;{-1,-2,-3,-4}&amp;#xff0c;转换成short[]b.问b[0]和b[1]分别是多少&amp;#xff1f;乍一看&amp;#xff0c;这题不难&amp;#xff0c;无非就是移位操作&amp;#xff0c;再进行组合。但是呢&amp;#xff1f;对于用Java的童鞋来说&amp;#xff0c;这里面有一个坑&amp;#xff0c;稍不注意可能就踩进去了。在说之前&amp;#xff0c;我先把代码和答案贴出来吧。看到这里&amp;#xff0c;可能有的童鞋比较奇怪&amp;#xff0c;为啥要&amp;amp;0xff&amp;#xff0c;这不相当于没变化吗&amp;#xff1f;非也&amp;#xff0c;不信我举个&lt;/span&gt;\n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://www.136.la/favicon.ico\" /&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://www.136.la/java/show-18859.html&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;byte的范围是-128  ~ 127  不能表示出 129&lt;br /&gt;-127和&amp;#43;129的效果等价&lt;br /&gt;在计算机中数值都是以二进制补码形式存储的&amp;#xff0c;&lt;br /&gt;byte类型只能存储8位二进制数&amp;#xff0c;其中最高位是符号位&amp;#xff0c;符号位为0是正数&amp;#xff0c;符号位为1是负数。&lt;br /&gt;符号位为0正数范围是&lt;br /&gt;补码&amp;#xff1a;0000 0000 表示0&lt;br /&gt;补码&amp;#xff1a;0000 0001 表示1&lt;br /&gt;........&lt;br /&gt;补码&amp;#xff1a;0111 1110 表示126&lt;br /&gt;补码&amp;#xff1a;0111 1111 表示127&lt;br /&gt;符号位为1负数范围是&lt;br /&gt;补码&amp;#xff1a;1000 0000 表示 -128&lt;br /&gt;补码&amp;#xff1a;1000 0001 表示 -127&lt;br /&gt;........&lt;br /&gt;补码&amp;#xff1a;1111 1110 表示 -2&lt;br /&gt;补码&amp;#xff1a;1111 1111 表示 -1&lt;/p&gt;\n&lt;h2 id=\"127-的补码为-0111-1111--加2-就变成-1000-0001-最高位符号位变成1就是负数了&amp;#xff0c;也就是--127\"&gt;127 的补码为 0111 1111  加2 就变成 1000 0001 最高位符号位变成1就是负数了&amp;#xff0c;也就是 -127&lt;/h2&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答&lt;strong&gt;右上方的【采纳】&lt;/strong&gt;按钮&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["想问问为什么输出的答案是-127而不是129", ["\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;%c是专门输出字符的格式字符&amp;#xff0c;而4&amp;#43;‘0’的ASCII,52对应的是字符4&amp;#xff0c;所以输出4。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["以%c输出，字符型输出是。", ["c1=x%10+'0'为什么加了'0'跟没加一样，都还是4"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; * &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; table\n&lt;span class=\"hljs-keyword\"&gt;union&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; * &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; table &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n还可以使用行转列:\n&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; * &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; table1(\n  &lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; 字段&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,字段n,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(字段名称)\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; (\n&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt;  字段&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,字段n,\n&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;when&lt;/span&gt; 条件 &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt; 赋值 &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; 别名,(为查询的字段)\n....\n) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; a\n)&lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; b &lt;span class=\"hljs-keyword\"&gt;on&lt;/span&gt; .....条件表达式\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["sql中如何使用union将三行字符型的数据整合放在一行上？", ["如何使用union将这个三行合并到同一行中（假如是int类型的数据的话，可以使用sum函数）", "\n"]], "Tag": "程序设计"}
{"Answer": "sizeof指针大小是4，说明编译的是32位的程序。\r\n\r\n通过new char(300)申请的空间，会把300写在第一个char里（最大128），300是44，200是-56\r\n后面的字节没有意义，内容是不确定的。strlen也是不确定的\r\n通过new char[300]申请的空间，里面内容也没有意义，是不确定的。strlen也是不确定的", "Konwledge_Point": "字符型", "Question": ["VS2017在只用strlen测未赋值的字符型动态数组，出的值为何是固定的", []], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int mian()&lt;br /&gt;改为&lt;br /&gt;int main()&lt;br /&gt;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;main函数名都写错了啊 &lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["这个在字符型初始化出现问题，刚开始学习，不知道怎么处理用斜体标出", ["问题遇到的现象和发生背景", "\n", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " <iostream>\nusing namespace std;\n#", "include", "<", "string", ">\n", "class", " Time {\npublic:\n    ", "Time(", "int", " ", "h", ", ", "int", " ", "m", ", ", "int", " ", "s", ")", "\n    {\n        hour = h;\n        minute = m;\n        second = s;\n    }\n    void display", "()", " {\n\n        cout << ", "\"出生时间\"", " << hour << ", "\"时\"", " << minute << ", "\"分\"", " << second << ", "\"秒\"", " << endl;\n    }\nprotected:\n    ", "int", " hour, minute, second;\n\n\n};\n", "class", " Date {\npublic:\n    ", "Date(", "int", " ", "y", ", ", "int", " ", "m", ", ", "int", " ", "d", ")", " {\n\n        year = y;\n        month = m;\n        day = d;\n\n    }\n    void display", "()", " {\n        cout << ", "\"出生年月\"", " << year << ", "\"年\"", " << month << ", "\"月\"", " << day << ", "\"日\"", " << endl;\n\n\n    }\n\n\nprotected:\n    ", "int", " year, month, day;\n};\n", "class", " Birthtime : public Time, public Date {\n\n_public:\n    ", "Birthtime( ", "string", " ", "name", ", ", "int", " ", "ye", ", ", "int", " ", "mo", ", ", "int", " ", "da", ", ", "int", " ", "hou", ", ", "int", " ", "min", ", ", "int", " ", "se", ")", "\n        :", "Time(", "ye", ", ", "mo", ", ", "da", ")", ", ", "Date(", "hou", ", ", "min", ", ", "se", ")", "\n    {\n        Childrename = name;\n\n    }_\n    \n    \n    void display", "()", " {\n\n        cout << ", "\"姓  名\"", " << Childrename << endl;\n        Date::display", "()", ";\n        Time::display", "()", ";\n\n    }\n\nprotected:\n    ", "string", " Childrename;\n};\n", "int", " mian", "()", " {\n\n    Birthtime nb(", "\"张三\"", ", ", "2002", ", ", "12", ", ", "16", ", ", "9", ", ", "23", ", ", "26", ");\n    nb.display", "()", ";\n    return ", "0", ";\n}\n", "\n", "运行结果及报错内容", "\n", "两个错误", "严重性    代码    说明    项目    文件    行    禁止显示状态", "错误    LNK2019    无法解析的外部符号 _main，函数 \"int __cdecl invoke_main(void)\" (?invoke_main", "@@YAHXZ) ", "中引用了该符号    ProjecTime Date 派生Birthtime    D:\\c++题\\ProjecTime Date 派生Birthtime\\MSVCRTD.lib(exe_main.obj)    1", "严重性    代码    说明    项目    文件    行    禁止显示状态", "错误    LNK1120    1 个无法解析的外部命令    ProjecTime Date 派生Birthtime    D:\\c++题\\ProjecTime Date 派生Birthtime\\Debug\\ProjecTime Date 派生Birthtime.exe    1    ", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;前面这两个if语句怎么都进不去&amp;#xff0c;是不是条件写错了&amp;#xff1f;改成下面这样试试&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;l &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;enter:&amp;#34;&lt;/span&gt;).split()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(l)\nx &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nb &amp;#61; &lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;, l))\ns &amp;#61; b.index(&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(b))\na &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(b)\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; s - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;相邻值为&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{b[s]}&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;{b[s &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; s &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#61;&amp;#61; a:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;相邻值为&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{b[s - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]}&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;{b[s]}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;输出&amp;#xff1a;&lt;span class=\"hljs-subst\"&gt;{b[s - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]}&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;{b[s]}&lt;/span&gt;&lt;span class=\"hljs-subst\"&gt;{b[s &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;最大值为:&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(b)}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;最小值为:&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(b)}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["简单的pyhton 中列表list 问题关于列表中字符型元素转换成整型，最后输出最大值，和最大值相邻的值的问题", ["简单的pyhton 中列表list 问题", "关于列表中字符型元素转换成整型，最后输出最大值，和最大值相邻的值的问题", "\n", "l = ", "input", "(", "\"enter:\"", ").split()\n", "print", "(l)\nx = ", "0", "\nb = ", "list", "(", "map", "(", "int", ", l))\ns = b.index(", "max", "(b))\na = ", "len", "(b)\n", "if", " s - ", "1", " < ", "0", ":\n    ", "print", "(", "\"左边越界！\"", ")\n    ", "print", "(", "f\"相邻值为：", "{b[s]}", "{b[s + ", "1", "]}", "\"", ")\n", "elif", " s + ", "1", " > a:\n    ", "print", "(", "\"右边越界！\"", ")\n    ", "print", "(", "f\"相邻值为：", "{b[s - ", "1", "]}", "{b[s]}", "\"", ")\n", "else", ":\n    ", "print", "(", "f\"输出：", "{b[s - ", "1", "]}", "{b[s]}", "{b[s + ", "1", "]}", "\"", ")\n\n", "print", "(", "f'最大值为:", "{", "max", "(b)}", "'", ")\n", "print", "(", "f\"最小值为:", "{", "min", "(b)}", "\"", ")\n\n\n", "\n", "现在运行结果出现问题，显示越界", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;两句输入scanf_s()语句修改下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;scanf&lt;span class=\"hljs-constructor\"&gt;_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%ld%s%c%d&amp;#34;&lt;/span&gt;, &amp;amp;&lt;span class=\"hljs-params\"&gt;p1&lt;/span&gt;-&amp;gt;&lt;span class=\"hljs-params\"&gt;num&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p1&lt;/span&gt;-&amp;gt;&lt;span class=\"hljs-params\"&gt;name&lt;/span&gt;, 16, &amp;amp;&lt;span class=\"hljs-params\"&gt;p1&lt;/span&gt;-&amp;gt;&lt;span class=\"hljs-params\"&gt;sex&lt;/span&gt;,1, &amp;amp;&lt;span class=\"hljs-params\"&gt;p1&lt;/span&gt;-&amp;gt;&lt;span class=\"hljs-params\"&gt;age&lt;/span&gt;)&lt;/span&gt;; \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["已定义结构体，输入的时候到字符型sex的时候就不能输入了，字符显示不出来，过一会程序就自动结束，觉得是输入函数和下面的那个循环的问题，但找不到。", ["struct student* p1, * p2, * head;   ", "//定义结构体变量", "\n\nhead=p1 = p2 = (struct student*)malloc(sizeof(struct student)); ", "//开辟存储空间", "\n\n", "scanf_s", "(\"%ld%s%c%d\", &p1->", "num", ", p1->", "name", ", &p1->", "sex", ", &p1->", "age);   ", "//输入相关数据", "\n\n", "while", " (p1->", "num != ", "0", ")        ", "// 如果输入的学号num为0则停止输入，表明输入结束", "\n{\n    i = i + ", "1", ";\n    ", "if", " (i == ", "1", ")\n        head = p1;\n    ", "else", "\n        ", "p2", "->", "next = p1;\n    p2 = p1;\n    p1 = (struct student*)malloc(sizeof(struct student));   ", "//强制类型转换（struct student*）", "\n    ", "scanf_s", "(\"%ld%s%c%d\", &p1->", "num", ", p1->", "name", ", &p1->", "sex", ", &p1->", "age);\n}   ", "/*23至35行有问题，程序无法执行下去*/", "\n\n", "p2", "->", "next = NULL;\nfree(p1);  ", "//释放多余的存储空间", "\n\nstruct student* p3, * p4;\n\n", "if", " (head != NULL)\n{\n    p3 = head;\n    ", "for", " (int j = ", "1", "; j <= i; j++)\n    {\n        ", "printf", "(\"%ld,%s,%c,%d\\n\", p3->", "num", ", p3->", "name", ", p3->", "sex", ", p3->", "age);\n        ", "p3", " = p3->", "next;\n    }  ", "//打印选择之前的链表", "\n}\n", "else", "\n    printf(", "\"The linklist is not exist\\n\"", ");\n\n\nint age;\n\nscanf_s(", "\"%d\"", ", &age);  ", "//输入要删除的元素", "\n\nseek(age,head);   ", "//对输入的元素进行选择", "\n\n", "if", " (head != NULL)\n{\n    p4 = head;\n    ", "while", " (p4 != NULL)\n    {\n        ", "printf", "(\"%ld,%s,%c,%d\\n\", p4->", "num", ", p4->", "name", ", p4->", "sex", ", p4->", "age);\n        ", "p4", " = p4->", "next;\n    }\n}  ", "//打印选择过后的链表", "\n\n\n\n    ", "if", " (pt != NULL)\n    {\n        ", "if", " (pt->", "age == age)\n        {\n            temp = pt;\n            ", "pt", " = pt->", "next;\n            free(temp);\n            return;\n        }  ", "//先判断头结点", "\n        ", "else", "\n        {\n            ", "for", " (n = ", "2", "; n <= i; i++)\n            {\n                ", "if", " (pt->", "next", "->", "age != age)\n                    ", "pt", " = pt->", "next;\n                ", "else", "\n                {\n                    ", "temp", " = pt->", "next;\n                    ", "pt", "->", "next", " = pt->", "next", "->", "next;\n                    free(temp);\n                    return;\n                }\n            }\n        }\n    }\n    ", "else", "\n        printf(", "\"error\\n\"", ");\n", "\n", "}  //定义选择函数seek"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; itertools &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; it \n\ns &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;122344111&amp;#39;&lt;/span&gt;\n\nres &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;list&lt;/span&gt;(v))) &amp;#43; i &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i , v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; it.groupby(s)]\nresult &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;.join(res)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(result)\n&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;--result\n1122132431\n&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["python字符串p型编码", ["想问一下python的字符串p型编码怎么做呀，急等😭求各位好汉帮"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char类型用&amp;#43;相连会自动转为int类型进行四则运算。&lt;br /&gt;&lt;strong&gt;输出改为如下即可&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(x&amp;#43;&amp;#34;&amp;#34;&amp;#43;y&amp;#43;&amp;#34;&amp;#34;&amp;#43;z&amp;#43;&amp;#34;&amp;#34;&amp;#43;a);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["控制台输出连接后的字符数据时只显示数字", ["声明了四个字符型数据 x y z a 均为中文", "用连接符输出x+y+z+a时 显示的是一串数字", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "可以使用:\r\n\r\n     private void sendDataToPairedDevice(String message ,BluetoothDevice device){       \r\n               byte[] toSend = message.getBytes();\r\n                try {\r\n                    UUID applicationUUID = UUID.fromString(\"8ce255c0-200a-11e0-ac64-0800200c9a66\");\r\n                    BluetoothSocket socket = device.createInsecureRfcommSocketToServiceRecord(applicationUUID);\r\n                    OutputStream mmOutStream = socket.getOutputStream();\r\n                    mmOutStream.write(toSend);\r\n                    // Your Data is sent to  BT connected paired device ENJOY.\r\n                } catch (IOException e) {\r\n                    Log.e(TAG, \"Exception during write\", e);\r\n                }\r\n            }\r\n现在调用以上的方法：\r\n\r\n    sendDataToPairedDevice(\"text to send\" ,bluetoothDevice);", "Konwledge_Point": "字符型", "Question": ["android 中通过蓝牙发送字符", ["我知道如何调用手机的本地蓝牙设置发送文件，然后让用户选择发送给谁。", "\n但是我想直接发送字符型 'v'到一个配对的设备。我现在知道设备名和地址。有什么好的方法来实现？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为空格也是一个字符。输入空格就把空格给c2变量了。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言：scanf函数 关于输入时的字符间距", ["新手小白 求指正", "如下所示，输出以下数据(如下是实验后的正确输出)", "但当从键盘输入字符型数据A, B时为啥不能用空格分开(从下面图看出一个空格被一个字符占用了）", "求解！", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你没有抛异常&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n    &lt;span class=\"hljs-comment\"&gt;// TODO Auto-generated method stub&lt;/span&gt;\n     Scanner in &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.in);\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            System.out.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            String str&amp;#61;in.&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; d&amp;#61;&lt;span class=\"hljs-keyword\"&gt;Double&lt;/span&gt;.parseDouble(&lt;span class=\"hljs-string\"&gt;&amp;#34;str&amp;#34;&lt;/span&gt;);\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;转换后&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43; d);\n           &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;||d&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;){\n                   &lt;span class=\"hljs-keyword\"&gt;throw&lt;/span&gt; InputMismatchException();\n           }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt;(InputMismatchException e1) {\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;异常1&amp;#xff1a;输入不在0-100内!&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;finally&lt;/span&gt; {\n            in.close();\n            }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["字符串转换成double型数据", ["原问题：从命令行输入一个字符串，将该字符串转换为double型数据，当数据不在【0,100】之间时抛出一个异常，采用适当的机制来捕获并", "              处理异常。可以用现成的异常也可以自定义异常。", "我写的垃圾代码有啥错误，运行不了，请各位指导一下", "\n", "package ex_8;", "\n", "import java.util.InputMismatchException;", "\n", "import java.util.Scanner;", "\n", "public class IntegerExcep {", "\n", "public", " ", "static", " ", "void", " main(String[] args) {\n    ", "// TODO Auto-generated method stub", "\n     Scanner in = ", "new", " Scanner(System.in);\n        ", "try", " {\n            System.out.", "print", "(", "\"请输入一个数字：\"", ");\n            String str=in.", "next", "();\n            ", "double", " d=", "Double", ".parseDouble(", "\"str\"", ");\n            System.out.", "println", "(", "\"转换后：\"", "+ d);\n        }\n        ", "catch", "(InputMismatchException e1) {\n            System.out.", "println", "(", "\"异常1：输入不在0-100内!\"", ");\n        }\n        ", "finally", " {\n            in.close();\n            }\n}\n", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "所有可以通过键盘输入的符号，在内存中就是以对应的ASCII码值存储的。\r\n变量b保存的就是输入字符的ASCII码值。\r\n％c是表示这个输入／输出必须是可以显示的字符。换句话说就是在一个txt文件里面能够出现的字符。\r\n你按F1，ctrl，shift，alt之类的按键，是不能得到ASCII码的。", "Konwledge_Point": "字符型", "Question": ["新人提个c语言问题(手机有字数限制，所以代码比较难看。。。前面的部分就省了)", ["要求输入一个字符，输出它的ASCII码int main(){int b;scanf(\"%c\",&b)；printf(\"%c %d\",b,b);return 0;}", "\n前面定义b为int，但scanf里输入的是%c,为啥最终还能成功的输出字符的ＡＳＣＩＩ码？是因为ｓｃａｎｆ里用的是％Ｃ，然后电脑从键盘录入的时候自动把输入的东西录成字符型了？并没有受到前面的那个ｉｎｔ影响？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.字符型数组—&amp;#39;a&amp;#39;是什么意思  --------表示字符的从&amp;#39;a&amp;#39;开始的顺序&amp;#xff0c;是第一个小写字符。&lt;br /&gt;2.结合凯撒加密&amp;#43;n后%26的意义是什么 -------密码要求循环&amp;#xff0c;比如&amp;#39;x&amp;#39;要对应&amp;#39;a&amp;#39;&amp;#xff0c;为了保证加密后还是小写字符。要获得当前字符在小写字符中的顺序&amp;#xff0c;然后加上偏移量。因为总共26个小写字符&amp;#xff0c;因此必须加上偏移量后还是小写字符&amp;#xff0c;所以其值不能超过26&amp;#xff0c;因此需要进行求余。余数加上字符&amp;#39;a&amp;#39;就是对应的加密字符&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言字符数组-’a’表示什么意思", ["1.字符型数组—'a'是什么意思", "2.结合凯撒加密+n后%26的意义是什么"]], "Tag": "程序设计"}
{"Answer": "这个应该是巧合，因为字符串没有初始化，出现任何值都有可能。\r\n同时显示ascii和字面值，这个是vc++这么设计的，也许设计者和别的用户觉得同时显示比较好吧。比如说字符是乱码或者无效的内容，没有数字，都是?，没法区分\r\n第二个变量并不是地址，而是没有初始化的随机值。", "Konwledge_Point": "字符型", "Question": ["这是关于C语言调试的问题", ["\n\n", "我用F10调试，想看一些变量的值。结果就比较奇怪，比如，我发的那个图，第一个变量有字符串和他的阿斯卡码了。第一呢，我没给这个变量赋值，第二呢，这个是字符型的，显示整数型的阿斯卡码干嘛呢，第三呢，感觉同时显示这两个，没有必要。第二个变量，整数型的，我想看看他的整数值，他竟然给个地址，神奇了。（PS 截取的图已经是全部代码了）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;不是&amp;#xff0c;input输入的是字符串&amp;#xff0c;你要将其转换成整形&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;width&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-keyword\"&gt;length&lt;/span&gt;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;())\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["怎么修改成字符串的形式呢", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{ \n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; res&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;s[i]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        res&amp;#61;res*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;(s[i]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,res);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["数字字符串转化为整型数输出", ["输入一数字组成的字符串转化为整型数输出。", "求大佬大佬大佬大佬大佬大佬"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;isnum&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(a)) &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(a)) &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;type&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(a)) &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;complex&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(isnum(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["想问问怎么判断数值型字符串呀？", ["这个应该怎么判断复数和浮点数啊？", "\n", "为什么这个打出来都是false QAQ"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b,n;\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入两个数和一个字符&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n  &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d%c&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;n);\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;a; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;b; j&amp;#43;&amp;#43;) {\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,n);\n}\n  &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["C语言中输出由特定字符c构成的m行n列实心矩阵", ["输出由特定字符c构成的m行n列实心矩形图案。", "输入", "输入数据中包含2个整数n（1≤n, m≤50）和一个字符型数据c。它们之间都是用空格隔开。", "输出", "输出由特定字符c构成的m行n列实心矩形图案。", "样例输入 Copy", "4 10 &", "样例输出 Copy", "&&&&&&&&&&", "&&&&&&&&&&", "&&&&&&&&&&", "&&&&&&&&&&"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;cal_row&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// calculate the row of textfile&lt;/span&gt;\n&lt;/span&gt;{\n    ifstream textfile;\n    textfile.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;textfile.txt&amp;#34;&lt;/span&gt;);\n    textfile &amp;gt;&amp;gt; noskipws;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; row &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; char1;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (textfile &amp;gt;&amp;gt; char1)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (char1 &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n        {\n            &amp;#43;&amp;#43;row;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; row;\n}\n\n\n\n&lt;span class=\"hljs-function\"&gt;std::string &lt;span class=\"hljs-title\"&gt;data&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    ifstream textfile;\n    textfile.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;textfile.txt&amp;#34;&lt;/span&gt;);\n    textfile &amp;gt;&amp;gt; noskipws;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; line, char2;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; row, len &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;, tlen;\n    row &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cal_row&lt;/span&gt;();\n    tlen &amp;#61; row * len &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//char data1[tlen];//两点错误&amp;#xff1a;数组长度必须是常量&amp;#xff1b;data1是局部变量&amp;#xff0c;不能作为返回值&amp;#xff0c;因为出了函数&amp;#xff0c;data1就被释放了&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* data1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[tlen];\n   &lt;span class=\"hljs-comment\"&gt;// char* data2[tlen];&lt;/span&gt;\n    len &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (textfile &amp;gt;&amp;gt; char2) &lt;span class=\"hljs-comment\"&gt;// store text as an array&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (char2 !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n        {\n            data1[len&amp;#43;&amp;#43;] &amp;#61; char2;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            data1[len&amp;#43;&amp;#43;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt;&amp;#61; tlen; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;// uppercase to lowercase&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)data1[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt; &amp;amp;&amp;amp; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;)data1[i] &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;)\n        {\n            data1[i] &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-function\"&gt;std::string &lt;span class=\"hljs-title\"&gt;retValue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(data1)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt;[] data1;\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; retValue;\n}\n\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; row &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cal_row&lt;/span&gt;(), tlen &amp;#61; row * &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, len1, len2, len3;\n    len1 &amp;#61; len2 &amp;#61; len3 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//char text1[tlen], text2[row][20][51];&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* text1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[tlen];\n    &lt;span class=\"hljs-comment\"&gt;//*text1 &amp;#61; data();&lt;/span&gt;\n    std::string value &amp;#61; &lt;span class=\"hljs-built_in\"&gt;data&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(text1, value.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n    &lt;span class=\"hljs-comment\"&gt;//或者 memcpy(text1, value.c_str(), value.length() &amp;#43; 1);&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt;[] text1;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["c++用char数组存储字符串", ["#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<iomanip>", "\n", "#", "include", " ", "<fstream>", "\n", "#", "include", " ", "<cstring>", "\n", "using", " ", "namespace", " std;\n\n", "int", " ", "cal_row", "()", " ", "// calculate the row of textfile", "\n", "{\n    ifstream textfile;\n    textfile.", "open", "(", "\"textfile.txt\"", ");\n    textfile >> noskipws;\n    ", "int", " row = ", "1", ";\n    ", "char", " char1;\n    ", "while", " (textfile >> char1)\n    {\n        ", "if", " (char1 == ", "'\\n'", ")\n        {\n            ++row;\n        }\n    }\n    ", "return", " row;\n}\n\n\n\n", "char", " ", "data", "()", "\n", "{\n    ifstream textfile;\n    textfile.", "open", "(", "\"textfile.txt\"", ");\n    textfile >> noskipws;\n    ", "char", " line, char2;\n    ", "int", " row, len = ", "1000", ", tlen;\n    row = ", "cal_row", "();\n    tlen = row * len + ", "1", ";\n    ", "char", " data1[tlen];\n    ", "char", " *data2[tlen];\n    len = ", "0", ";\n    ", "while", " (textfile >> char2) ", "// store text as an array", "\n    {\n        ", "if", " (char2 != ", "'\\n'", ")\n        {\n            data1[len++] = char2;\n        }\n        ", "else", "\n        {\n            data1[len++] = ", "'\\n'", ";\n        }\n    }\n    ", "for", " (", "int", " i = ", "0", "; i <= tlen; i++) ", "// uppercase to lowercase", "\n    {\n        ", "if", " ((", "int", ")data1[i] <= ", "90", " && (", "int", ")data1[i] >= ", "65", ")\n        {\n            data1[i] += ", "32", ";\n        }\n    }\n\n\n    ", "return", " *data1;\n}\n\n\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " row = ", "cal_row", "(), tlen = row * ", "1000", " + ", "1", ", len1, len2, len3;\n    len1 = len2 = len3 = ", "0", ";\n    ", "char", " text1[tlen], text2[row][", "20", "][", "51", "];\n    *text1 = ", "data", "();\n    ", "return", " ", "0", ";\n\n", "\n", "我想知道如何修改代码，使得主函数中text1的数组可以和data函数中的返回值相同（即text1=分函数中的data1）"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你不用把char型字符放到int型数组里&lt;br /&gt;在scanf()中用&amp;#34;%d&amp;#34;就只能输入数值&amp;#xff0c;如果输入不是数字的字符会输入失败。scanf()会返回0&amp;#xff0c;&amp;#xff08;scanf()的返回值是正确输入值的个数&amp;#xff09;&lt;br /&gt;可以判断当scanf()返回0时就表示结束输入。&lt;br /&gt;实例代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,m;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) {\n        n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;m);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        a[j&amp;#43;&amp;#43;] &amp;#61; m;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;j; i&amp;#43;&amp;#43; ) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/377794094726114.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言如果把char型字符放到int型数组会发生什么", ["需要写一个int数组，当输入char型字符时结束输入，不知道该怎么办好了.."]], "Tag": "程序设计"}
{"Answer": "${(((data.ljgongdl?if_exists)?default('0'))?number/10000)?string} \r\n\r\n\r\n出现什么错误 贴一下，很可能是data.ljgongdl data未定义造成的", "Konwledge_Point": "字符型", "Question": ["freemarker变换数据类型问题", ["${(data.ljgongdl?default('0')?number/10000)?string}", "\n\n", "数据库中是字符型，数据要除10000，最后不想要数字每三位的分隔逗号，网上查了下变成字符型就可以，但是上面的语句不行，求指导，谢谢。"]], "Tag": "程序设计"}
{"Answer": "用strcpy对结构体数组元素复制数据", "Konwledge_Point": "字符型", "Question": ["结构体元素的赋值问题", [" 在结构体里面定义了一个字符型数组char arr[32]，并没有初始化，在main函数中要给这个数组放内容， 例如要让这个字符型数组里面保存的内容为“zhangsan”，这个逻辑能实现吗？如果能，希望举个例子说明一下。\n"]], "Tag": "程序设计"}
{"Answer": "转换成字符串没法判断，只有一种情况，就是数据超过float表示的范围，那么可以判定是double，在两者共同的精度范围没法判断。", "Konwledge_Point": "字符型", "Question": ["MFC中字符串类型的浮点数，如何辨别是float还是dpuble", ["CFILE读取字符串类型的浮点数，如何辨别是float还是double，如果是float转换为float，否则转换为double"]], "Tag": "程序设计"}
{"Answer": "char  不是字符串,字符串在Java中是一个不可修改的,而char 存储的是 字符对应的ascll  字符的编码,所以char可以和int 转换,所有的ascll字符串都是单个字符的.", "Konwledge_Point": "字符型", "Question": ["Java中char能定义字符串吗？", ["最近开始自学Java，看到了char，产生了一个疑问：", "\nchar只能定义单个字符，那么重点来了，单个字符属于一个字符串吗？", "\n网上有的说是，有的说不是，弄得很纠结。", "\n还有，练习的时候，“char chara=。。”能行 ；为什么“char char a=。。”程序就报错，两个的区别就是一个空格，但一个行，一个又不行，这是什么原因？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;把语法学好吧&amp;#xff0c;调用函数的时候不需要加前面的void&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言主函数不执行调用函数语句，这是为什么啊？", ["进行C语言数组练习的时候，想再试试函数调用，代码粘到函数里后，运行时main里没有执行新函数，也没有警告报错，求大家解惑，不胜感激！", "\n", "运行结果：", "\n", "这是源码", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n\n", "void", " ", "OneDimensionalArray", "()", "{\n    ", "int", " a[", "10", "]={", "1", ",", "2", ",", "3", ",", "4", "};                ", "//定义并初始化一个整型数组 ", "\n    ", "float", " b[", "20", "]={", "1.1", ",", "2.2", ",", "3.3", "};            ", "//定义并初始化一个浮点型数组 ", "\n    ", "char", " c[", "5", "]={", "'a'", ",", "'b'", ",", "'C'", "};            ", "//定义并初始化一个字符型数组 ", "\n    ", "char", " d[]={", "\"China\"", "};                    ", "//定义并初始化一个字符型数组 ", "\n    \n    ", "for", "(", "int", " i=", "0", ";i<", "5", ";i++)                ", "//输出整型数组a ", "\n    ", "printf", "(", "\"%-2d \"", ",a[i]);\n    ", "printf", "(", "\"\\n\"", ");\n    \n    ", "for", "(", "int", " i=", "0", ";i<", "5", ";i++)                ", "//输出浮点型数组b ", "\n    ", "printf", "(", "\"%.2f \"", ",b[i]);\n    ", "printf", "(", "\"\\n\"", ");\n    \n    ", "for", "(", "int", " i=", "0", ";i<", "strlen", "(c);i++)        ", "//输出字符型数组c ", "\n    ", "printf", "(", "\"%c\"", ",c[i]);\n    \n    ", "printf", "(", "\"\\n%s\\n\"", ",c);                    ", "//输出字符型数组c ", "\n    ", "printf", "(", "\"%s\\n\"", ",d);                    ", "//输出字符型数组d ", "\n    \n    ", "printf", "(", "\"%d\\n\\n\"", ",", "strlen", "(d));                ", "//输出数组d的长度", "\n    \n} \n\n", "void", " ", "TwoDimensionalArray", "()", "{\n    ", "int", " a[", "3", "][", "4", "]={", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", "};\n    ", "//int a[3][4]={{1,2,3,4},{5,6,7,8},{9}};", "\n    \n    ", "for", "(", "int", " i=", "0", ";i<", "3", ";i++){\n        ", "for", "(", "int", " j=", "0", ";j<", "4", ";j++){\n            ", "printf", "(", "\"%-2d\"", ",a[i][j]);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n    }\n    \n}\n\n", "int", " ", "main", "(", "void", ")", "{\n    \n    ", "printf", "(", "\"\\n---一维数组练习---\\n\\n\"", "); \n    ", "void", " ", "OneDimensionalArray", "()", ";\n    \n    ", "printf", "(", "\"---二维数组练习---\\n\\n\"", ");\n    ", "void", " ", "TwoDimensionalArray", "()", ";\n    \n    ", "return", " ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;代码如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; string[&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入字符串&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, string);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要查找的字符&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;, &amp;amp;c);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; string[i]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (string[i] &amp;#61;&amp;#61; c) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;, i);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (string[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;);\n\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["这个怎么找出他的下标", ["输入一个字符串，保存在字符型数组中，再输入一个字符，在字符数组中查找该字符，", "若找到，输出该字符第一次出现的数组下标，否则输出-1."]], "Tag": "程序设计"}
{"Answer": "这里有俩种方法可以把Interger转化成Hexa字符串\r\n\r\n    int  n = 123456;\r\n        System.out.println(String.format(\"#%X\", n)); //对于hexa中的x要小写\r\n        System.out.println(\"#\"+Integer.toHexString(n));", "Konwledge_Point": "字符型", "Question": ["Android-把int型color转换为hexa 字符串型", ["在这个函数中添加了一个int,froma color，如何把它转换成一个hexa字符串：#efefef", "\n\n", "public static int RGB(float[] hsv) {\n    return Color.HSVToColor(hsv);\n}\n"]], "Tag": "程序设计"}
{"Answer": "你不确定一个变量或者字面值是不是对象，你可以通过代码`dir(value)`的方式验证，用`int`举例`dir(1)`，会输出他的相关方法。然后你可以通过`1.real`\r\n来访问它的实数部分。通过`.`运算符运算的是对象还是基本类型，这个你自己应该明白吧？", "Konwledge_Point": "字符型", "Question": ["这是一个关于PYTHON的变量问题", ["PYTHON是完全面向对象的，这一点我不太明白。变量都是对象吗，整数型 字符型 浮点型 这些都是对象吗？没有证据啊。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n字符参与运算时会变成对应的ASCLL值来运算的\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["c语言基础编程问题提问，求解", ["%=的运算对象必须是整型和字符型是什么意思啊？是说字符的ascll码值吗？还是说字符代表的是一个变量？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;请参考&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/732637869846149.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["为什么字符串不能转化成整数型", ["鸡兔同笼问题，很简单，但搞不懂为什么会一直报错说input（）收到的字符串不能转换成整数型"]], "Tag": "程序设计"}
{"Answer": "可是linq字符串不能使用&gt;=", "Konwledge_Point": "字符型", "Question": ["linq查询字符串范围，", ["大家好！linq怎么查询字符串范围？比如有字符串“ABC001”到“ABC100”，想查询大于“ABC010”应该怎么操作？linq不允许对字符串用>=等操作符"]], "Tag": "程序设计"}
{"Answer": "一般像这种处理输入输出的我比较喜欢用C库， C++也是兼容的~\r\n\r\n```\r\n#include &lt;stdio.h&gt;\r\n#include &lt;string.h&gt;\r\n\r\n\r\nint main() {\r\n    int a, b, c, d;\r\n    char e;\r\n    int num;\r\n\r\n\r\n    //num是fscanf返回的匹配上的个数\r\n    num = scanf(\"(%d, %d)%c(%d, %d)\", &amp;a, &amp;b, &amp;e, &amp;c, &amp;d);\r\n    if (num != 5) {\r\n        printf(\"输入错误\\n请输入以下格式(%%d, %%d)%%c(%%d, %%d)\\n\");\r\n    } else {\r\n        printf(\"输入正确：\\n a = %d, b = %d, c = %d, d = %d, c = %c\\n\", a, b, c, d, e); \r\n    }   \r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["C++输入同时字符和数字，分别赋值给int型和char型。", ["例如输入(a,b)+(c,d)，将a b c d的值赋值给四个int变量，将‘+’号赋值给char变量"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;是的&amp;#xff0c;300对应的16进制是0X0000012C, &amp;#39;%c&amp;#39;打印的是一个字符&amp;#xff0c;所以打印的是0x2C,对应的字符是’&amp;#xff0c;‘  &amp;#xff0c; 相应的400的16进制是0x00000190&amp;#xff0c;打印的是0x90&amp;#xff0c;对应的字符是’&amp;#xff1f;‘&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["大一新生学c语言，麻了", ["敢问各位大lao，为什么300和400以字符型输出是，和？ 这跟ASCII码有关吗？"]], "Tag": "程序设计"}
{"Answer": "看了一下:\r\nchar c2=kx2.toString().charAt(i); \r\ni等于多少？\r\n\r\n还有就是数据库的类型为varchar是支持String类型的，不需要转。\r\n\r\n至于报 \"将截断字符串或二进制数据\" 异常，可能是varchar定义长度太短了，可以设置varchar(200)的长度,看还会不会报异常。另一种情况，sql写错了。", "Konwledge_Point": "字符型", "Question": ["有关java的数据类型转换的问题请各位帮忙穷途末路了我", [":cry: 小弟用eclipse在自己做一个java swing小程序，结果在向SQL数据库插入数据的时候显示如下错误：", "\njava.sql.SQLException: [Microsoft][ODBC SQL Server Driver][SQL Server]将截断字符串或二进制数据。", "\n文本框都是字符型的数据，而SQL是varchar类型的，由于代码都编到一个.java文件，太长了就不都粘处来了，kx在最前面都申明了。请教下除了kx2.toCharArray();这个方法外还有其他能将\"bcdefg” 转换为char类型的方法吗", "\nprivate String kx1,kx2,kx3,kx41,kx42,kx43,kx44,kx46,kx45,kx47,kx48,kx49,kx5,kx6,kx7,kx8,kx9,kx10,kx11,kx12,kx13,kx14,kx15,kx16,kx17,kx18,kx[][];", "\n            void insertdate(){", "\n     String sqlStr,sqlStr1,sqlStr2,cardnumber,user_name,str1,str2,bannercode,day1,day2,day3;", "\n     ResultSet result;", "\n    Statement stmt;", "\n    Connection con;", "\n   try", "\n    {", "\n        Class.forName(\"sun.jdbc.odbc.JdbcOdbcDriver\");", "\n        con=DriverManager.getConnection(\"jdbc:odbc:nxtj\");", "\n        System.out.println(\"连接成功\");", "\n        stmt=con.createStatement();", "\n        System.out.println(\"连接成功\");", "\n        kx1=t1.getText();", "\n        kx2=t2.getText();", "\n        kx3=t3.getText();", "\n        kx5=t5.getText();", "\n        kx6=t6.getText();", "\n        //char b[] = kx2.toCharArray();------这个是网上说的类型string转换char类型，但是插入数据库是出错", "\n\n", "   //char c7=Character.valueOf(kx2).charValue();\n   //System.out.println(\"这是：\"+b);\n\n    char c1=kx1.toString().charAt(0); \n\n    char c2=kx2.toString().charAt(i); \n\n\n\n    char c3=kx3.toString().charAt(0); \n    //char c4=kx4.toString().charAt(0); \n    char c5=kx5.toString().charAt(0); \n    char c6=kx6.toString().charAt(0); \n\n    sqlStr1=\"insert into NM01(Q1,Q2,Q3,Q4,Q5) values('\" + c1 + \"','\" +c2+ \"','\" +c3 + \"','\" + c5 + \"','\" + c6 + \"')\";// 这里主要是C2的数据插入出现错误，kx2=“abcdefg”，\n    stmt.executeUpdate(sqlStr1);\n    sqlStr=\"select * from NM01\";\n    result=stmt.executeQuery(sqlStr);\n    while(result.next())\n       {\n\n        cardnumber=result.getString(1);\n        user_name=result.getString(2);\n        day1=result.getString(3);\n        day2=result.getString(4);\n        day3=result.getString(5);\n\n        System.out.println(cardnumber);\n        System.out.println(user_name);\n        System.out.println(day1);\n        System.out.println(day2);\n      /*    if(str2.equals(user_name))\n        {\n            //bannercode=result.getString(\"bannercode\");\n\n\n        }*/\n       } \n}\ncatch(ClassNotFoundException e)\n{\n}\ncatch(SQLException e)\n{System.err.println(e);\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;scanf已经获取了字符A&amp;#xff0c;下面就不需要在op &amp;#61; getchar()了。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言入门，求告知关于switch用法", ["请问我的程序为何无输出，另外，给char字符型变量赋值一定要用ch=getchar()吗", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;选B&lt;br /&gt;B&amp;#xff0c;&amp;#39;\\xff&amp;#39;&amp;#xff0c;\\是转义符&amp;#xff0c;将ascii码转义成字符&amp;#xff0c;x表示16进制&amp;#xff0c;xff其实就是255&lt;br /&gt;A&amp;#xff0c;‘123’里面是多个字符&amp;#xff0c;不报错&amp;#xff0c;但会截断&amp;#xff0c;有警告&lt;br /&gt;C&amp;#xff0c;&amp;#39;\\08&amp;#39;&amp;#xff0c;0表示8进制&amp;#xff0c;8进制里不会出现数字8&amp;#xff0c;出现了就是错误的语法&lt;br /&gt;D&amp;#xff0c;&amp;#34;\\&amp;#34;&amp;#xff0c;\\是转义符&amp;#xff0c;转义符后面不跟任何东西&amp;#xff0c;这直接是个错误的语法&lt;br /&gt;其实要真咬文嚼字的话&amp;#xff0c;只有A是报warning的&amp;#xff0c;CD会报error&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["这个应该怎么判断呢？", ["这个字符型变量应该怎么看？ABCD四个选项都是为什么呢？有什么书写规则呢？谢谢回答！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;data.列名 &amp;#61; np.array(data.列名,int)&lt;br /&gt;可以这么改 &amp;#xff0c;如有用请采纳&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["基于Python的数据分析", ["dataframe为什么把某一列的字符型的数值转化为数字之后,其他列全部变成了0和1?"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[n][&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[n];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(str[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,str[a[i]]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["句子输出，字符串怎么加到数组里，不会做了！", ["问题遇到的现象和发生背景", "\n", "\n", "int main()\n{\n    int n", ",", "i", ";", "\n    scanf(", "\"%d\"", ",", "&n)", ";", "\n    int ", "x", "[i]", ",", "y", ";", "\n    char ", "c", "[", "30", "]", ",", "b[n][", "30", "]", ";", "\n    for(i", "=", "0", ";i<n;i++){", "\n        scanf(", "\"%s\"", ",", "c", ")", ";", "\n        b[i]", "=", "c", ";", "\n    }\n    scanf(", "\"%d\"", ",", "&", "x", "[", "0", "])", ";", "\n    for(i", "=", "1", ";i<n;i++){", "\n        if(", "x", "[i", "-1", "]>", "=", "0", "&&", "x", "[i", "-1", "]<n){\n            scanf(", "\"%d\"", ",", "&", "x", "[i])", ";", "\n        }\n    }\n    for(i", "=", "0", ";i<n;i++){", "\n        for(y", "=", "0", ";y<n;y++){", "\n            if(i", "=", "=", "x", "[y]){\n                printf(", "\"%s\\n\"", ",", "b[y])", ";", "\n            }\n        }\n    }\n    return ", "0", ";    ", "\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "我是想弄一个二维数组，但字符型不会用", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "sumc= sum(map(int,s))\r\n相当于\r\ntmplist = []\r\nfor i in range(len(s)):\r\ntmplist.append(int(s))\r\nsumc = sum(tmplist)\r\n\r\nmap函数传入两个参数，int是指int()函数，s是列表，它返回一个列表，对原来的列表的每个元素都运用第一个参数的那个函数转换，得到新的元素。\r\n所以它实际上是把s的每个元素转换为整数。\r\n\r\ns在这里是字符串里，它的元素是每个字符，对它做int得到ascii", "Konwledge_Point": "字符型", "Question": ["python题目：英文字符规律统计 答案里map()的功能不明白", ["题目：英文字符规律统计。编写一个程序，对给定字符串中出现的a-z字母频率进行分析，忽略大小写，采用降序方式输出。", "\n下面是一个网友给的答案，但我有一些又不懂的地方：", "\n\n", "# 第6章 组合数据类型\n# 全国计算机等级考试二级教程 ---Python语言程序设计（2018年版）\n# caozhilin@mail.dlut.edu.cn\n\ns=input('请输入一段英文字符串：')\ns=s.lower()\ncounts={}\nfor c in s:\n    if 'a'<=i<='z':\n         counts[c]=counts.get(c,0)+1                 \n    else:\n        pass\nitems=list(counts.items())\nitems.sort(key=lambda x:x[1],reverse=True)\n\n#获得值信息，字符型\ns=list(counts.values()) \n#获得值信息求和，数字\nsumc= sum(map(int,s))\n#输出英文频率，不区分大小写\nfor i in range(len(items)):\n    c,count=items[i]\n    print('{0:<3}{1:>6.2f}%'.format(c,count/sumc*100))\n\n", "\n\n", "不是很明白map()函数的用法，这里是是怎么算求和的？", "\n还有话说编程前会不会写一个流程图之类的来理清思路？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;您可以稍微了解一下嵌入式设备开发&amp;#xff0c;嵌入式设备在启动时不是从main开始执行&amp;#xff0c;而是start.s的启动引导代码。该代码是用汇编写的&amp;#xff0c;目的是设置存储器、堆栈指针以及中断等&amp;#xff0c;这些处理完之后才具备C语言程序的执行环境&amp;#xff0c;进而通过一个接口跳转到main函数执行。所以说这个main函数只能是唯一的。执行完毕之后再通过汇编代码释放内存。&lt;br /&gt;其次&amp;#xff0c;所有子函数在其作用域内函数名都是唯一的&amp;#xff0c;都不能重名。你的数字0123也都是函数名的一部分&amp;#xff0c;main01并不是main函数。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["一个源文件中有两个main函数，怎么运行其中一个", ["第一个图片中的就可以", "第二个代码就不行", "\n", "#include<stdio.h>", "\n", "int main01(void)", "{", "\n", "//字符变量用于储存一个单—字符每个字符变量占用一个字节", "\n", "char ch = '3';", "\n", "//打印字符型变量", "\n", "printf(\"%c\\n\", ch);", "\n", "//打印字母a对应十进制数", "\n", "printf(\"%d\\n\", ch);", "\n", "//unsigned int len = sizeof(ch）", "printf(\"字符型大小: %d\\n,\"sizeof(ch）);", "\n", "return 0；", "\n", "}", "\n", "int mian(void)", "{", "\n", "char ch1='a';", "char ch2 ='A';", "printf(\"%d\\n\", ch1 - ch2);", "return 0;", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char c;&lt;br /&gt;scanf(&amp;#34;%c&amp;#34;,c);&lt;br /&gt;printf(&amp;#34;%c&amp;#34;,9 - (c-&amp;#39;0&amp;#39;) &amp;#43; &amp;#39;0&amp;#39;);&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["char的加减法怎么用", ["char怎么用加减法把字符型结果赋予另一个变量啊", "还有这个保持不变的要求该如何用if语句满足"]], "Tag": "程序设计"}
{"Answer": "直接float（x） 就可以了，你float（int（x）） 是什么意思？？", "Konwledge_Point": "字符型", "Question": ["字符串能不能转换成浮点数？", ["我最近在学习超高精度数字的加减法（比如精确到小数点后100位），于是我写了一个函数来计算，代码如下。如有其它缺陷，请各位大神帮忙指出。", "\n\n", "import math\ndef DoublePlus(*pluser):\n    #检测传入的加数是不是小数\n    pluser=list(pluser)\n    m=0\n    for i in pluser:\n        pluser[m]=str(i)\n        m=m+1\n    print(pluser)\n    m=0\n    for i in pluser:\n        m=m+1\n        print(i.find('.'))\n        if not (i.find('.')==-1):\n            pass\n        else:\n            raise ValueError (\"在第\"+str(m)+\"个加数中不是小数\")\n    #通过竖式的方式进行加法运算\n    #共进行pluser的长度-1次循环\n    for index in range(len(pluser)-1):\n        x=pluser[index]#加数1\n        y=pluser[index+1]#加数2\n        print(math.floor(int(x)))\n        x_integer_part=math.floor(int(x))#加数1的整数部分\n        y_integer_part=math.floor(int(y))#加数2的整数部分\n        #取x和y的小数部分\n        x_point=x.find('.')\n        x_decimal_part=int('0'+x[x_point::])\n        y_point=y.find('.')\n        x_decimal_part=int('0'+y[y_point::])\n        #开始计算（小数部分 ）\n        #位数少的补0\n        if len(x_decimal_part)>len(y_decimal_part):\n            poor=x_decimal_part-y_decimal_part\n            y_decimal_part=y_decimal_part+'0'*poor\n        elif len(y_decimal_part)>len(x_decimal_part):\n            poor=y_decimal_part-x_decimal_part\n            x_decimal_part=x_decimal_part+'0'*poor\n        else:\n            pass\n        #倒序\n        x_decimal_part=x_decimal_part[::-1]\n        y_decimal_part=y_decimal_part[::-1]\n        #初始没有进位\n        carry=False\n\nif __name__=='__main__':\n    DoublePlus(15.685,2.1,3.1,4.1)\n", "\n\n", "但是print(math.floor(int(x)))", "\n这一行老是报错，说：ValueError: invalid literal for int() with base 10: '15.685'，虽然能看懂，但不知道如何解决，Python2的string库在3中已经无法使用了，实在不知道如何解决，求各位大神帮忙解决，感谢！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt;  MAX 101&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** &lt;span class=\"hljs-title\"&gt;create1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*  &lt;span class=\"hljs-title\"&gt;create2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;   &lt;span class=\"hljs-title\"&gt;sort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** strArray, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** strArray;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, i;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    strArray &amp;#61; &lt;span class=\"hljs-built_in\"&gt;create1&lt;/span&gt;(n);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (strArray !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        {\n            strArray[i] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;create2&lt;/span&gt;(MAX);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (strArray[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//这里两个 return -1 都是无法获得内存时直接结束程序 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();   &lt;span class=\"hljs-comment\"&gt;//吃掉前边输入的回车符 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(strArray[i]); &lt;span class=\"hljs-comment\"&gt;//读入字符串 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(strArray, n); &lt;span class=\"hljs-comment\"&gt;//排序 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, strArray[i]); &lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n          &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(strArray[i]);\n     &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(strArray);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** &lt;span class=\"hljs-title\"&gt;create1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** str &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;**)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*) * n);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; str;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* &lt;span class=\"hljs-title\"&gt;create2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* str_i &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;) * n);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str_i &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; str_i;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;  &lt;span class=\"hljs-title\"&gt;sort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** strArray, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; size)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* tmp;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; size - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; size - i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(strArray[j], strArray[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]) &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                tmp &amp;#61; strArray[j];\n                strArray[j] &amp;#61; strArray[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                strArray[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; tmp;\n            }\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["字符串排序问题（指针数组）函数怎么拼接呢？", ["1、设计函数char ** create1( int n ) ;，根据整数n创建一个长度为n的字符指针型动态一维数组，并返回动态数组第一个元素的地址。", "\n", "2、设计函数char * create2( int n ) ;，根据整数n创建一个长度为n的字符型动态一维数组，并返回动态数组第一个元素的地址。", "\n", "3、设计函数void sort( char** strArray , int size ) ; ，该函数可将字符指针数组strArray所指向的所有字符串按从小到大排列。", "\n", "输入第一行为一个不超过200的整数n，代表待排序字符串的个数。然后输入n个字符串，每个字符串长度不会超过100。", "\n", "输出为排序后的n个字符串，每个字符串占一行。", "\n", "函数接口定义一：", "char **    create1( int n ) ;", "其中 n 为字符指针数组的长度； 函数需返回动态数组第一个元素的地址。如果没有获得内存则返回NULL。", "\n", "函数接口定义二：", "char *    create2( int n ) ;", "其中 n 为字符数组的长度； 函数需返回动态数组第一个元素的地址。如果没有获得内存则返回NULL。", "\n", "函数接口定义三：", "void    sort( char** strArray , int size ) ;", "其中 strArray 和 size 都是用户传入的参数。 strArray 为字符指针数组； size 是数组的长度。函数没有返回值。", "\n", "裁判测试程序样例：", "\n", " #include<stdio.h>", " #include<stdlib.h>", " #include<string.h>", "\n", " #define        MAX        101", "\n", " char **    create1( int n ) ;", " char *    create2( int n ) ;", " void    sort( char** strArray , int size ) ; ", "\n", " int main()", " {", "    char**    strArray ;", "    int        n , i ;", "\n", "scanf", "(", "\"%d\"", ",&n) ;\nstrArray = ", "create1", "( n ) ; \n", "if", " ( strArray != ", "NULL", " ) \n{\n    ", "for", " ( i = ", "0", " ; i < n ; i++ ) \n    {\n        strArray[i] = ", "create2", "( MAX ) ;\n        ", "if", " ( strArray[i] == ", "NULL", " ) ", "return", " ", "-1", " ;\n    }            \n}\n", "else", " ", "return", " ", "-1", " ;", "//这里两个 return -1 都是无法获得内存时直接结束程序 ", "\n\n", "getchar", "();", "//吃掉前边输入的回车符 ", "\n\n", "for", "( i = ", "0", " ; i < n ; i++ ) \n    ", "gets", "(strArray[i]); ", "//读入字符串 ", "\n\n", "sort", "( strArray , n ) ; ", "//排序 ", "\n\n", "for", "( i = ", "0", " ; i < n ; i++ ) \n    ", "printf", "(", "\"%s\\n\"", ",strArray[i]); ", "//输出", "\n\n", "for", " ( i = ", "0", " ; i < n ; i++ )  \n    ", "free", "(strArray[i]) ;\n", "free", "(strArray) ;\n\n", "return", " ", "0", ";\n", "\n", "}", "\n", "/* 请在这里填写答案 */", "输入样例：", "10", "Bb b", "zzz zzz", "aab bbccc", "aaabbaaa", "abb bbb", "ccidfjD", "Aidj idj", "Ccidf jD", "sidfjijE EE", "kkkkkk", "\n", "输出样例：", "Aidj idj", "Bb b", "Ccidf jD", "aaabbaaa", "aab bbccc", "abb bbb", "ccidfjD", "kkkkkk", "sidfjijE EE", "zzz zzz"]], "Tag": "程序设计"}
{"Answer": "json串，也可以通过json方式解析\r\nhttp://zhangfan822.iteye.com/blog/1880830", "Konwledge_Point": "字符型", "Question": ["java-String型字符串提取", ["\n\n", "上面图片中这些数据 我只想获取content后面\"\"中的数据 请问怎么获取啊"]], "Tag": "程序设计"}
{"Answer": "date就是时间字段嘛..\r\nCONVERT(varchar(12) , '2001-1-1 11:11:11', 112) \r\n方法就是这样, 怎么使用的话就根据你的SQL而定了. \r\n\r\n如果你是想查找出来的日期字段都按yyyymmdd的格式来显示的话,\r\n就是这样.\r\nselect CONVERT(varchar(12) , birthday, 112) as birthday from user;\r\n\r\n如果你是想别人传进来一个日期, 然后做比较的话.\r\n就是这样.\r\nselect * from user\r\n  where CONVERT(varchar(12) , birthday, 112) = '20100603';", "Konwledge_Point": "字符型", "Question": ["关于转换问题", ["sql  server  2000中，datetime类型的字段：birthday如何转换成字符型的？？", "\n\n", "例如:2008-08-08变成‘20080808’"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最近看书正好看到&amp;#xff0c;char是属于整形的&amp;#xff0c;整形占四个字节&amp;#xff0c;但字符只占一个字节&amp;#xff0c;所以一些编译器运行一个字符常量中包含多个字符&lt;br /&gt;vs 和 gcc 采用的方法是将后一个字符替换前一个字符&amp;#xff0c;所以字符常量中有多个字符时&amp;#xff0c;结果为最后一个字符&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["如何理解这个声明变量和变量内容矛盾的问题", ["\n", "我声明c的类型为整型，然而他是用单撇号包着的，他应该是字符型。这个地方该怎么理解。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.双&amp;#61;&amp;#61;号比较字符是否一致&lt;br /&gt;2. char a&amp;#61;getchar&amp;#xff08;&amp;#xff09;  取得字符存在a 变量&lt;br /&gt;如果输入M后&amp;#xff0c;执行getchar(),后scanf还能得到输入的M吗            不会 getchar可以吞一个字符&lt;br /&gt;3.break跳出当前循环&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["关于C语言的一个问题", ["在do_while循环中:", "1.s,t是前面已经初始化后的字符型变量s=‘W’", "t=‘M’，如何比较两个字符型变量是否相同（图中146行位置）", "2.printf显示输入性别后，输入一个字符为getchar获取后，如果没有假设char a=getchar（）这样的语句，那么getchar获取的字符储存在哪里，如果输入M后，执行getchar(),后scanf还能得到输入的M吗", "3.while的循环条件是非0值，在循环体中的break,意味着跳出循环可以执行循环体之外的语句了?", "初学者，忘指点"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对齐数学了没&amp;#xff0c;系统默认&amp;#xff08;32位&amp;#xff09;4&amp;#xff0c;&amp;#xff08;64&amp;#xff09;8&amp;#xff0c;a,10个连续&amp;#xff0c;40没问题&amp;#xff0c;char为1&amp;#xff0c;但下个元素f,要存在对齐数整数倍位置上&amp;#xff0c;所以f就起始于44&amp;#xff08;48&amp;#xff09;字节到48&amp;#xff08;52&amp;#xff09;字节&amp;#xff0c;48%4&amp;#61;&amp;#61;0&amp;#xff08;指针4&amp;#xff08;8&amp;#xff09;字节&amp;#xff0c;56来了&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["这个结构体占字节数问题", ["int占四个字节，然后10个元素，占字节40，然后字符型两个字符占俩字节，float是4字节，指针4字节，但为什么答案为56啊"]], "Tag": "程序设计"}
{"Answer": "[quote]\r\nselect * from 表名  where 字符型日期字段 &gt;= to_char(trunc(to_date('20100630','YYYY-MM-DD'),'mm'),'YYYYMMDD')\r\nand 字符型日期字段 &lt;= to_char(last_day(to_date('20010630','YYYY-MM-DD')),'YYYYMMDD') \r\n[/quote]\r\n\r\n你这里日期好像写错了啊: &gt;=[color=red]2010[/color]0630同时&lt;=[color=red]2001[/color]0630, 没有日期在[20100630,20010630]这个区间", "Konwledge_Point": "字符型", "Question": ["Oracle 取当月数据", ["select * from 表名  where 字符型日期字段 >= to_char(trunc(to_date('20100630','YYYY-MM-DD'),'mm'),'YYYYMMDD') ", "\nand 字符型日期字段 <= to_char(last_day(to_date('20010630','YYYY-MM-DD')),'YYYYMMDD')", "\n\n", "取给定日期20010630 当月的数据，", "\n分拆后 第一个条件好使，第二个条件不好使，但第二个条件换成大于号后也好使，", "\n条件单独拿出查询是一个结果集。", "\n求各们大大帮忙，小弟在此谢过"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为3是整形&amp;#xff0c;整形&amp;#43;字符形会往字节宽的类型扩展所以是整形&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["为什么答案是100而不是d呢？字母a加不加单引号‘’有什么区别呢？", ["已知字母’a’的ASCII码为十进制数97，且设ch为字符型变量，则表达式'a'+3的值"]], "Tag": "程序设计"}
{"Answer": "**给你个准确的回答!  return 有两个功能  第一个是 用于返回值   第二个 就是用于结束方法   这两种都是开发中最常用到的,  所以无论你返回了什么 会面的语句都不会执行!!!!!!!!!!记住不会执行!!!!!!     还有就是在return 后面写语句 IDE会报错的 !!! 你可以尝试一下  望采纳 **", "Konwledge_Point": "字符型", "Question": ["bool型函数返回值的问题，急求！！", ["其中一段代码如下：当MIOComm返回值为false时，需要 ExecueCommand返回值false，否则返回true。", "\nQ:bool型函数的返回值return false/true这样可以实现功能吗？遇到return语句后的delete和break还会执行吗？多谢！！", "\nbool ExecueCommand(byte ", "pCommand,int iFrameDataLen)", "\nswitch( pCommand[3] )", "\n{", "\ncase 0x70:", "\n   {", "\n        int nLLD=0;", "\n        nLLD = ( pCommand[ 5 ] <<8 ) & 0x000000ff;", "\n          nLLD|=( pCommand[ 6 ]<<0 ) & 0x0000ff00;", "\n          char *cmd_12=new char", "4", ";", "\n        _itoa_s(nLLD,cmd_12,4,10);   //itoa(int,char", ",int) 转换整型为字符型", "\n        char cSetLLD[20]=\"SET_LLD \";", "\n        strcat_s(cSetLLD,20,cmd_12);  //  strcat()将char 型连接", "\n\n", "    if(FALSE==MIOComm(hDet[i],cSetLLD,\"\",NULL,0,NULL,NULL))\n    {\n        return false;\n        /*switch(MIOGetLastError(NULL,NULL))\n        {\n\n        }*/\n    }\n    else\n    {\n        return true;\n    }\n\n    delete [] cmd_12;\n    break;\n", "\n\n", "}}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;字符数组就是字符串&amp;#xff0c;不是里面又放字符串&lt;br /&gt;就好比人体的所有细胞组成一个人&amp;#xff0c;而不是人体细胞里可以存放一个人&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["这句话是错误的吗？如果是，那错在哪里了", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "字符型数组中可以存放字符串"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char 取值范围 -128 ~ 127&amp;#xff0c;unsigned char 取值范围0 ~ 255&lt;br /&gt;d &amp;#61; -25 转成无符号就是231&lt;br /&gt;231的二进制  1110 0111&lt;br /&gt;右移3位之后的二进制 0001 1100&amp;#xff0c;对应十进制28&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言位运算计算问题", ["朋友们，这个为什么c算出来是28啊，主要不太懂那个d不带符号的字符型，然后-25怎么去运算"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;请点击我这个回答右上角【采纳】按钮支持一下&amp;#xff0c;谢谢。&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;代码如下&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Poetry&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt;[][] chars;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        chars&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt;[][]{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;春&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;眠&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;不&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;觉&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;晓&amp;#39;&lt;/span&gt;},{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;处&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;处&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;闻&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;啼&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;鸟&amp;#39;&lt;/span&gt;},{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;夜&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;来&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;风&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;雨&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;声&amp;#39;&lt;/span&gt;},{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;花&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;落&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;知&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;多&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;少&amp;#39;&lt;/span&gt;}};\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; chars.length; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(chars[i][j]);\n            }\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        }\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; chars.length; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(chars[i][j]);\n            }\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/671895571436183.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["输出古诗#java从入门到精通", ["创建Poetry类，声明一个字符型二维数组，将古诗春晓的内容赋值于二维数组，然后分别用横板和竖版两种方式输出。#Java从入门到精通"]], "Tag": "程序设计"}
{"Answer": "带单引号的3是字符型，ascii码值查表可知为51，前面的1和2会自动加法运算，最后结果就是54了，不知道能不能帮到你![图片说明](http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/003/monkey/2.gif)", "Konwledge_Point": "字符型", "Question": ["一道基础的算法，答案是什么？", ["看开始看算法（第四版）", "\n\n", "第一张的一道练习", "\n给出以下表达式的类型和值", "\n\n", "d. 1+2+’3‘****", "\n\n", "这个我觉得java是会自动转化为字符型吗？", "\n我就自己println试验了一下。", "\nSystem.out.println(1+2+'3');", "\n结果为54，不懂了，求教。", "\n\n", "但是我看了网上的答案是33？一样不懂", "\n\n", "我已经知道了，题目中是我错误", "\n\n", "原题是双引号，字符型 1+2+“3”", "\n我看成1+2+’3‘了。不过倒是加深了理解，谢谢各位"]], "Tag": "程序设计"}
{"Answer": "可以考虑使用数组：\r\n\r\nchar str[100] = \"awgweg\";\r\nchar c='c';\r\nint iLen = strlen(str);\r\nstr[iLen] = 'c';\r\nstr[iLenb + 1] = 0;\r\n\r\n之所以使用数组，是因为当指针指向字符串常量后，其内容是不能修改的。这是常量的特性！", "Konwledge_Point": "字符型", "Question": ["C语言 怎么把char型附加在字符串的后面？", ["RT，   这样为什么不行呢？", "\n  char *str = \"awgweg\";", "\n    char c='c';", "\n\n", "*str += c;\n"]], "Tag": "程序设计"}
{"Answer": "首先数组初始化不能这么赋初始值，“a”表示字符串，而非字符。\r\n有如下两种初始化方式：\r\nchar str[4] = {'a', 'b', 'c', '\\0'};   注意是单引号\r\nchar str[4] = \"abc\";     注意，这是可以自动补0结尾的。（如果此处数组长度为3，则引发越界）\r\n\r\n至于你的问题，如果是定义成：\r\nchar str[4] = {'a', 'b', 'c'};  这种形式理解为字符数组初始化，而非字符串。", "Konwledge_Point": "字符型", "Question": ["数组的初始定义的问题，求大佬帮小白解答？", ["书上说字符型数组char str[4]{\"a\",\"b\",\"c\"\"\\0\"}", "\n                必须结尾加\\0才表示字符串，那如果char str[4]{\"a\",\"b\",\"c\"}表示字符串吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;检查一下读进来的东西是个什么玩意&lt;br /&gt;try一下然后print出来看一下&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python编辑时出现could not convert string to float:？", ["python编辑时出现could not convert string to float:？", "\n", "\n", "不知道是不是因为数据是字符型的原因，我看有人说解决方法是是向量化，向量化之后再使用再训练模型。具体怎么弄呢？"]], "Tag": "程序设计"}
{"Answer": "这个主要要看你上位机下位机协议的约定。\r\n分为几次可能的原因：\r\n单片机本身内存有限，所以不适合大量发送\r\n便于纠错、容错\r\n便于发送不定长度的数据\r\n提高实时性", "Konwledge_Point": "字符型", "Question": ["为什么在进行串口通信时，有时候外部信息发送过来时会分成两次进行发送？", ["我在设计一款通过串口来进行AT指令交互时，遇到了一个指令响应回复被分为两次发送回来。", "\n\n", "\n\n", "很明显，在+CREG后方会跟着两个数字以及”OK“，但是它回复过来的信息却缺少了一部分，等到第二次才回复过来，", "\n\n", "\n\n", "我想知道这是什么原因，另附我串口接收部分的代码", "\n\n", "// TODO: 在此处添加消息处理程序代码\n    VARIANT variant_inp;//VARIANT是一种特殊的数据类型，除了定长String数据及用户定义类型以外，可以包括任何种类的数据。\n    COleSafeArray safearray_inp;\n    LONG len,k;\n    BYTE rxdata[20480];//设置BYTE数组\n    CString strtemp;\n    CString strLog = _T(\"\");\n    if(m_MscommCtrl.get_CommEvent() == 2)//事件值为二表示接收缓冲区内有字符\n    {   ////////以下你可以根据自己的通信协议加入处理代码\n        variant_inp = m_MscommCtrl.get_Input();  //读缓冲区\n        safearray_inp = variant_inp;//VARIANT型变量转换为ColeSafeArray型变量\n        len = safearray_inp.GetOneDimSize();//得到有效数据长度\n        for(k = 0;k < len;k++)\n        {\n            safearray_inp.GetElement(&k,rxdata+k);//转换为BYTE型数组\n        }\n        for(k = 0;k < len;k++)//将数组转换为CString型变量\n        {\n            BYTE bt = *(char*)(rxdata+k);//字符型\n            strtemp.Format(_T(\"%c\"),bt);//将字符送入临时变量strtemp存放\n            m_EditRxData += strtemp;//加入接受编辑框对应字符串\n            strLog += strtemp;\n        }\n        Savelog(strLog);\n    }\n    UpdateData(false);//更新编辑框内容\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Test{\n    public static String get&lt;span class=\"hljs-constructor\"&gt;FormatNumber(Double &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;)&lt;/span&gt;{\n        BigDecimal bigDecimal &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;BigDecimal(&lt;span class=\"hljs-params\"&gt;new&lt;/span&gt; DecimalFormat(&lt;span class=\"hljs-string\"&gt;&amp;#34;##.00&amp;#34;&lt;/span&gt;)&lt;/span&gt;.format(a));\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;bigDecimal.double&lt;span class=\"hljs-constructor\"&gt;Value()&lt;/span&gt;){\n            return bigDecimal.&lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;String()&lt;/span&gt;;\n        }\n        return a.&lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;String()&lt;/span&gt;;\n    }\n\n    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) {\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(get&lt;span class=\"hljs-constructor\"&gt;FormatNumber(2.00d)&lt;/span&gt;);\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(get&lt;span class=\"hljs-constructor\"&gt;FormatNumber(2.12321300)&lt;/span&gt;);\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(get&lt;span class=\"hljs-constructor\"&gt;FormatNumber(88.2324)&lt;/span&gt;);\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(get&lt;span class=\"hljs-constructor\"&gt;FormatNumber(88.0000)&lt;/span&gt;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/406955375446180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;给个&lt;strong&gt;采纳&lt;/strong&gt;吧&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["如何将一个Double型数据转换成字符串", ["请教各位大虾,如何将一个Double型数据转换成字符串,", "\n", "要求:", "不要科学计数(2.0050106E7),不要四舍五入，", "如果没有小数位,将小数点后面的.0改成.00(比如2转换成2.00,而不是2.0)", "不知道会有多少位小数,有多少位显示多少位", "比如这种的", "88.495000", "将后面的0给去掉", "要是88.495236", "就不用去掉", "\n", "如果是六个0就保留小数点后两位", "比如", "100.000000", "改成", "100.00"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;input()函数返回的是字符串&lt;br /&gt;比如现在输入a变量&amp;#xff0c;并把它转化成整数&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;input(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数字&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;int(a)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;转化成浮点数也一样&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;input(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入数字&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;float(a)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;还可以直接把两段代码合并在一起&amp;#xff1a;&lt;br /&gt;a&amp;#61;int(input(&amp;#34;输入数字&amp;#34;))&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;如果问题解决了麻烦帮我点一个采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python变量值类型", ["各位前辈，我刚接触python。我想问下有没有办法input输出的变量不再是字符型，让它可以在后面用于算法，不再在用算法时还要在变量钱加float或int"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考如下&amp;#xff1a;&lt;br /&gt;C代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-comment\"&gt;//一维数组&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str1[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;h&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str2[] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;helloworld&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//二维数组&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; buf[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;h&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;},&lt;span class=\"hljs-string\"&gt;&amp;#34;helloworld&amp;#34;&lt;/span&gt;};\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;一维数组:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,str1);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,str2);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;二维数组:\\n&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,buf[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["用Dev-C++打出来。。", ["请分别给2个字符型数组赋值：第一个数组赋值若干字符元素，然后将数组逐个字符打印出“hello world”；d第2个数组只有一个元素，赋值为字符串“helloworld”,将第二个数组打印出来（这个数组为一维数组时候如何打印，为二维数组的时候如何打印。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;就写是character类型吧&lt;br /&gt;因为在引号里面就是字符串hhh&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["typeof相关，原因？", ["原题为尝试代码typeof（“rstudio”），看看会出现什么结果，为什么？", "不能理解为什么有这个为什么，不就因为“rstudio”是字符型吗，就这么写？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is how the MySQL syntax works. PHP is merely constructing the query for you.&lt;/p&gt;\n\n&lt;p&gt;PHP will replace $string with the Loreum&lt;/p&gt;\n\n&lt;p&gt;so the MySQL query will look like this&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;INSERT INTO table (field1, field2 ) VALUES (Loreum , 7)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which is invalid syntax.&lt;/p&gt;\n\n&lt;p&gt;Therefore the quotation marks need to be added.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["为什么我们需要在将字符串变量插入mysql数据库php时包含引号", ["\n\n", "$string = 'Loreum';\n$insert = \"INSERT INTO table (field1, field2 ) VALUES ($string , 7)\";\n$conn -> query($insert)\n", "\n\n", "This will produce an error:", "\n\n", "Fatal error: Uncaught exception 'PDOException' with message 'SQLSTATE[42S22]: Column not found: 1054 Unknown column 'ashfjksaf' in 'field list'' in C:\\xampp\\htdocs\\yipee.php:23 Stack trace: #0 C:\\xampp\\htdocs\\yipee.php(23): PDO->query('INSERT INTO yea...') #1 {main} thrown in C:\\xampp\\htdocs\\yipee.php on line 23\n", "\n\n", "However when I change to ", "\n\n", "$insert = \"INSERT INTO table (field1, field2 ) VALUES ('$string' , 7)\";\n", "\n\n", "It works as expected.I wonder why we need to include single quotation mark in the string variable.I thought we only need to include quotation mark on literal string.", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\nwindows的路径分割是\\\\，如果你是unicode版的vc++，那么需要用TEXT宏\r\n```", "Konwledge_Point": "字符型", "Question": ["c++中的playsound问题", ["PlaySound(TEXT(path),NULL,SND_FILENAME | SND_ASYNC);", "\n我这边path是一个字符型数组存的是一个音乐的路径，但是程序运行时没有声音难道非要PlaySound(TEXT(“.../x.wav”),NULL,SND_FILENAME | SND_ASYNC);吗"]], "Tag": "程序设计"}
{"Answer": "我原来搞过，效率虽说不行，但起码AI还是没问题的\r\n应付你作业绰绰有余。\r\n加我私聊吧。", "Konwledge_Point": "字符型", "Question": ["设计一个俄罗斯方块AI", ["我们老师给的作业设计", "\n哪位大神能帮帮忙", "\n\n", "程序已经设计完成，就是AI方面没有死路", "\n有没有开源代码给看看", "\n\n", "字符型界面"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;num2str()&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["提问，关于元胞数组的类型变换", ["我有一个包含字符和double类型的元胞数组，我想把他变成字符型的矩阵，我看到网上有人用string函数，但是我用会报错", "请问该怎么用string函数呢", "如果不能用string函数，那么还可以用什么方法呢", "希望的效果就是如把元胞数组中的【10】变成‘10’。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有两种方式&amp;#xff1a;&lt;br /&gt;1、先判断是numeric的才进行cast转换&amp;#xff0c;否则就直接使用0&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; sum(&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;when&lt;/span&gt; isnumeric(字段名) &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt; cast(字段名 &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;numeric&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; 分类汇总表\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2、直接对所有记录进行cast&amp;#xff0c;如果记录不是numeric&amp;#xff0c;就用0来做转换&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; sum(cast(&lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;when&lt;/span&gt; isnumeric(字段名) &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt; 字段名  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;numeric&lt;/span&gt;)) &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; 分类汇总表\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;望采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["在SQL server中使用cast转换字段类型并规避空值", ["就是分类汇总表中的数据，使用sum函数。但是数据是字符型的，需要在计算时，转换为数值类型numeric。使用cast函数时，因为有空值，导致无法成功执行，就要用到isnumeric函数，但是我不知道怎么在sum函数里套一个cast，再套一个isnumeric"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用指针的指针的话&amp;#xff0c;直接交换指针地址即可&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SwapCharPointer&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** s1, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;** s2)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* temp &amp;#61; *s1;\n    *s1 &amp;#61; *s2;\n    *s2 &amp;#61; temp;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s1[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;],s2[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;],*p &amp;#61; s1,*q&amp;#61;s2;\n    cin.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(p,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n    cin.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(q,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;SwapCharPointer&lt;/span&gt;(&amp;amp;p, &amp;amp;q);\n    cout &amp;lt;&amp;lt; p &amp;lt;&amp;lt; endl; \n    cout &amp;lt;&amp;lt; q &amp;lt;&amp;lt; endl; \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["c++简单指针问题，有偿，请诸君解决", ["编写函数SwapCharPointer()实现交换两个字符型指针的值的功能。例如，已知“char *s1=\"teacher\";char *s2=\"student\";”，执行“SwapCharPointer(&s1,&s2);”或“SwapCharPointer(s1,s2);”后s1指向字符串“student”的首地址，s2指向字符串“teacher”的首地址。 程序会输入两个字符串s1，s2；在进行调换后输出调换后的s1，s2", "\n", "Sample Input 0", "\n", "student", "teacher", "\n", "Sample Output 0", "\n", "teacher", "student"]], "Tag": "程序设计"}
{"Answer": "&lt;h2 id=\"h2_cc是一个含有两个元素的数组&amp;#xff0c;数组的元素是char&amp;#xff0c;也就是字符指针。_1652172879860\"&gt;cc是一个含有两个元素的数组&amp;#xff0c;数组的元素是char*&amp;#xff0c;也就是字符指针。&lt;/h2&gt;\n&lt;p&gt;A. cc数组的两个元素中各自存放了字符串&amp;#34;1234&amp;#34;和&amp;#34;5678”的首地址&lt;br /&gt;对&lt;br /&gt;-&lt;br /&gt;B. cc数组的两个元素分别存放的是含有4个字符的一维字符数组的首地址&lt;br /&gt;5个字符&amp;#xff0c;包括&amp;#39;\\0&amp;#39;&lt;br /&gt;-&lt;br /&gt;C. cc是指针变量&amp;#xff0c;它指向含有两个数组元素的字符型一维数组&lt;br /&gt;反了&amp;#xff0c;cc是数组而非指针&lt;br /&gt;-&lt;br /&gt;D. cc数组元素的值分别是&amp;#34;1234&amp;#34;和&amp;#34;5678&amp;#34;&lt;br /&gt;cc数组元素的值是指针而非字符串。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["为什么选A呢 其他选项错误的原因是什么呢", ["char *cc[2]= {\"1234\",\"5678\"};则正确的叙述是(", "\n", "A. cc数组的两个元素中各自存放了字符串\"1234\"和\"5678”的首地址", "\n", "B. cc数组的两个元素分别存放的是含有4个字符的一维字符数组的首地址", "\n", "C. cc是指针变量，它指向含有两个数组元素的字符型一维数组", "D. cc数组元素的值分别是\"1234\"和\"5678\""]], "Tag": "程序设计"}
{"Answer": "https://www.zhihu.com/question/27552106", "Konwledge_Point": "字符型", "Question": ["怎么切割一个字符串里面所有的浮点数到一个浮点数的数组呢？", ["能不能把单个的字符串转换为浮点数数组呢？怎么切割一个字符串里面所有的浮点数到一个浮点数的数组呢？"]], "Tag": "程序设计"}
{"Answer": "public static void main(String[] args) {   \r\n     String str=\"008\"; // 首先查询出那个counter值   \r\n     int s=Integer.parseInt(str);   \r\n     s=++s;   \r\n     s=s==1000?1:s;   \r\n     String reslut=s&gt;=10?(s&gt;=100?s+\"\":\"0\"+s):\"00\"+s; // 计算 转型   \r\n     System.out.println(reslut); // 然后存到 数据库！ 已测试哈！试试看！   \r\n}  \r\n\r\n没测试好  呵呵    :wink:", "Konwledge_Point": "字符型", "Question": ["求更新一个计数表（001 到 999）的java写法", ["postgre里建了个计数表 count 里边", "\n只有一行一列 名叫counter的字段。", "\n目的就是计数，记录当前发行的counter数（范围在000到999之间的，但是是character型的）", "\n\n", "问题是：", "\n从表中取到counter 值后，", "\n\n", "如何用java程序写这个自增的循环的方法（999后再发行就是001）再把这个值改成 3位的字符串", "\n\n", "注意postgre里是 000 001 到999这样的字符型，先需要转换类型。", "\n\n", "谢谢～～～"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/m0_46096880/article/details/107498620", "Konwledge_Point": "字符型", "Question": ["oracle 想实现通过传入表名，来插入随机值（字段名字和字段数量和字段类型都不固定），如何是好", ["我想实现一个存储过程，通过传入不同的表名，让他自动解析有多少个字段，然后根据每个字段的类型，分别插入不同的随机值", "\n其中我的随机值有一个函数能做到(根据传入不用的数据类型，返回不同的值，包括date和字符型日期，也就是年月的那种，还有带小数的数字型和整型数字)", "\n\n", "\n\n", "我这里的空表表结构为下", "\nCREATE TABLE ARG", "\n(", "\n  DATA_DT  DATE,", "\n  CODE     VARCHAR2(10 BYTE),", "\n  TOTAL    NUMBER", "\n)", "\n求大神如何实现"]], "Tag": "程序设计"}
{"Answer": "萌新泥嚎，你应该瑟瑟发抖才对...哈哈...ALT+/只是提示而已...就是提示你这个println方法的参数支持哪些类型...你不敲ALT+/直接写当然能输出，因为本来就支持啊", "Konwledge_Point": "字符型", "Question": ["java萌新提问 println里面的括号到底是什么意思", ["初学  看视频打上system.out.println  打几个字母然后按下ALT+/就可以在下拉栏里找到   但是下拉栏里面有好多种类例如println就有好多种  如：println(doble)", "\nprintln(char)等等  该怎么选择  学过c语言了 知道double是双精度char是字符型  可是如果我不用ALT+/自己手敲的话就没有那些选择也能输出啊"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Both &lt;code&gt;fmt.Sprintf&lt;/code&gt; and &lt;code&gt;strconv.FormatFloat&lt;/code&gt; use the same string formatting routine under the covers, so should give the same results.&lt;/p&gt;\n\n&lt;p&gt;If the precision that the number should be formatted to is variable, then it is probably easier to use &lt;code&gt;FormatFloat&lt;/code&gt;, since it avoids the need to construct a format string as you would with &lt;code&gt;Sprintf&lt;/code&gt;.  If it never changes, then you could use either.&lt;/p&gt;\n\n&lt;p&gt;The last argument to &lt;code&gt;FormatFloat&lt;/code&gt; controls how values are rounded.  From the documentation:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;It rounds the\n  result assuming that the original was obtained from a floating-point\n  value of bitSize bits (32 for float32, 64 for float64)&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So if you are working with &lt;code&gt;float32&lt;/code&gt; values as in your sample code, then passing &lt;code&gt;32&lt;/code&gt; is correct.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["如何使用Go将浮点数格式化为字符串", ["\n\n", "Using Go I'm trying to find the \"best\" way to format a floating point number into a string. I've looked for examples however I cannot find anything that specifically answers the questions I have.  All I want to do is use the \"best\" method to format a floating point number into a string. The number of decimal places may vary but will be known (eg. 2 or 4 or zero).\nAn example of what I want to achieve is below.\nBased on the example below should I use\n     fmt.Sprintf() \nor\n   strconv.FormatFloat()\nor\nsomething else?\nand, what is the normal usage of each and differences between each?", "\n\n", "I also don't understand the significance of using either 32 or 64 in the following which currently has 32 :", "\n\n", "strconv.FormatFloat(float64(fResult), 'f', 2, 32)\n", "\n\n", "Example:", "\n\n", "package main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n)\n\nfunc main() {\n\n    var (\n        fAmt1 float32 = 999.99\n        fAmt2 float32 = 222.22\n    )\n\n    var fResult float32 = float32(int32(fAmt1*100) +int32(fAmt2*100)) / 100\n\n    var sResult1 string = fmt.Sprintf(\"%.2f\", fResult)\n\n    println(\"Sprintf value = \" + sResult1)\n\n    var sResult2 string = strconv.FormatFloat(float64(fResult), 'f', 2, 32)\n\n    println(\"FormatFloat value = \" + sResult2)\n\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "[quote]1“串是所有元素的单个字符的线性表”，请问这句话怎么理解？[/quote]\r\n这一句说的是，c++中的标准库类[color=blue]string[/color]是一个只能存放[color=blue]char[/color]类型变量的容器（连续性存储表，可理解为长度可变的数组）\r\n\r\n[quote]2.将一个字符串赋给一个字符型指针时，字符串的内存分配情况是如何的？[/quote]\r\n通常是[color=blue]char [/color]*p=string.c_str();返回常量，没有内存分配\r\n\r\n[quote]4.类对象不允许直接访问类中任何私有成员或保护的数据成员，这句话正确吗？ [/quote]\r\n完全正确。\r\n\r\n其他两个问题不理解。", "Konwledge_Point": "字符型", "Question": ["关于C++的几个概念性问题", ["1“串是所有元素的单个字符的线性表”，请问这句话怎么理解？", "\n\n", "2.将一个字符串赋给一个字符型指针时，字符串的内存分配情况是如何的？", "\n\n", "3。flags（）函数返回当前格式标志字。  \"返回格式标志字\"怎么理解？？", "\n\n", "4.类对象不允许直接访问类中任何私有成员或保护的数据成员，这句话正确吗？", "\n\n", "5  ios：：noreplace，表示文件不存在则打开它，文件存在则操作失败。  这句话怎么理解？", "\n\n", "由于我是一个菜鸟，所以请大家多多帮组，万分感谢 :) "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;整型可以存字符&amp;#xff0c;存下的是字符的ASCII码数值&amp;#xff0c;但整型数组是无法存字符串的&amp;#xff08;注意&amp;#xff0c;字符和字符串是两个不同类型的变量&amp;#xff0c;例如&amp;#39;a&amp;#39;或者&amp;#39;4&amp;#39;为字符类型&amp;#xff0c;&amp;#34;a&amp;#34;或者&amp;#34;abcde132dgd&amp;#34;等等之类的为字符串类型&amp;#xff09;。如果硬要通过可以写成如下形式&amp;#xff0c;int a[3]; a[0]&amp;#61;&amp;#39;a&amp;#39;; a[1]&amp;#61;&amp;#39;b&amp;#39;; a[2]&amp;#61;&amp;#39;c&amp;#39;; 这样表示的是分别将字符&amp;#39;a&amp;#39; &amp;#39;b&amp;#39; &amp;#39;c&amp;#39;赋值给整型变量a[0],a[1],a[2]而不是将字符串&amp;#34;abc&amp;#34;赋值给整型数组,此时存进去的值为字符 &amp;#39;a&amp;#39; &amp;#39;b&amp;#39; &amp;#39;c&amp;#39; 对应的ASCII码值。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["关于int表示字符的困惑", ["注意到getchar（）等函数的返回值最好用int型变量接受，说明int型变量也可用于存储字符（非EOF的返回值），那为什么不能用int数组存储字符串？", "（图中456行都允许，第七行出现编译错误）"]], "Tag": "程序设计"}
{"Answer": "```\r\n以s[0][0]为起点看\r\n一开始是\r\nx x x x x x x x x x  ...\r\n放入 I love you 以后是\r\nI _ l o v e _ y o u \\0 x x x ...\r\n放入 aha 以后是\r\nI _ a h a \\0 _ y o u \\0 x x x ...\r\n下面，这个是编译器没有定义的行为，有的编译器，会初始化别的元素，比如将 s[2] = \"\"\r\n那么此时内存就是\r\nI _ a h \\0 \\0 _ y o u \\0 x x x ...\r\ns[3] = \"\"\r\nI _ a h \\0 \\0 \\0 \\0 o u \\0 x x x ...\r\n...\r\n在这种情况下，最后的内存就是\r\nI _ a h \\0 \\0 \\0 \\0 ...\r\n所以输出的结果是\r\nI ah\r\n```", "Konwledge_Point": "字符型", "Question": ["关于二维数组行和列的疑问", ["原本一直以为二维数组和一维数组没有本质上的区别，因为很多资料上都写着，C语言没有真正的二维数组，内存里面都是和一维数组按一样的长条顺序储存的。", "\n但是在给字符型数组赋值的时候却有了一些问题。", "\n\n", "我尝试把超过规定列数长度的字符串赋给该二维数组，并且忽略警告", "\n\n", "程序为", "\n\n", "int main()\n{char s[10][2]={\"I love you\",\"aha\"};\nprintf(\"%s\",s[0]);\nreturn 0;\n}\n", "\n\n", "最后输出结果为", "\n\n", "I ah\n", "\n\n", "这个结果让我很不解，C语言高维字符串难道自己带有行识别吗？采用行名就只能输出一行？", "\n\n", "而且为什么莫名的带上了第二个字符串开头两个字符呢？", "\n\n", "求大佬解答"]], "Tag": "程序设计"}
{"Answer": "两个办法，使用字符串，缺点是不方便计算，如果计算，需要手工编写程序模拟10进制运算法则，比较慢，但是好处是精度和长度任意。\r\n使用定点数。定点数的原理实际上很简单，就是将一个数字乘以10的n次方，成为一个整数去运算。缺点是精度有限，精度越高，可以表示的最大的数就越小，要表示的最大的数越大，精度就越小。\r\n需要一个额外的数字表示这个10的N次方，在输出结果的时候，再除回来。\r\n对于以上两个办法，实际上都不要自己实现，有python大数计算和decimal的类型，可以自己google下。", "Konwledge_Point": "字符型", "Question": ["python浮点数转化为字符串精度损失", ["f=open('data.txt','w+')\nfor i in range(0,a):\n    for j in range(0,b):\n        for k in range (0,c):\n            f.write(str(dat[i][j][k]))   ######float32转string\n            f.write(' ')\n        f.write('\\n')\n    f.write('\\n')       \nf.close()\n\n\n\n", "\n\n", "因为想保存的是三维数组所以不能直接用np.savetxt，", "\n但是像我这样做文件里有的数字精度就会损失，比如9.99745846e-01会变成0.99974585 ", "\n\n", "请问如果想保留原数字应该怎么办啊"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;String str &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nint number &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; Integer.parseInt(str)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;其实&amp;#xff0c;有个东西叫百度。&lt;br /&gt;&lt;a href=\"https://www.baidu.com/s?wd&amp;#61;java%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%95%B0%E5%AD%97\" id=\"textarea_1640332724313_1640332820616_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;java字符串转数字_百度搜索&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://www.baidu.com/favicon.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://www.baidu.com/s?wd&amp;#61;java%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%95%B0%E5%AD%97&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["java把字符串“1”转为数字？", ["怎么把字符串“1”转换成int型的数字1？", "怎么把字符串“1”转换成int型的数字1？", "怎么把字符串“1”转换成int型的数字1？", "怎么把字符串“1”转换成int型的数字1？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;map()就是把dataframe里面的每个元素都用括号里的函数(str2dt)执行一遍&amp;#xff0c;然后返回一个新的dataframe&lt;br /&gt;按你描述的&amp;#xff0c;貌似原本的dataframe的index列是字符型&amp;#xff0c;要通过str2dt将这一列变成datetime型&amp;#xff0c;然后在下一行的语句里通过日期进行查找&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["一个函数问题map（）", ["一个函数问题", "def getStartLoc(obj, date):", "    if date in obj.DB['Amt'].index:", "        i = obj.DB['Amt'].index.get_loc(date)", "    else:", "        #要先把 index 转化成 datetime 型，而非原本的字符型", "\n", "    fakeIndex = obj.DB[", "'Amt'", "].index.map(str2dt)\n    i = fakeIndex.get_loc(str2dt(date), ", "method", "='", "ffill", "')\n", "return", " ", "i", "\n", "\n", "**求问map(str2dt)是什么意思，这里目的应该是把date转换为datetime型", "**"]], "Tag": "程序设计"}
{"Answer": "replace去掉-空白和：不就行了\r\n\r\n\r\n```\r\n var s='2016-06-06 12:05:35'\r\ns=s.replace(/[- :]/g,'')\r\n\r\n```\r\n日期对象要调用api，然后格式化下\r\n\r\n\r\n```\r\n \r\n    function addZero(v){if(v&lt;10)return '0'+v;return v.toString()}\r\n    var d = new Date();\r\n    var s = d.getFullYear().toString() + addZero(d.getMonth() + 1) + addZero(d.getDate()) + addZero(d.getHours()) + addZero(d.getMinutes()) + addZero(d.getSeconds());\r\n    alert(s)\r\n```", "Konwledge_Point": "字符型", "Question": ["js如何将日期型转成字符串？", ["比如\"2016-06-06 12:05:35\"变成\"20160606120535\"？？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You have many things in your code that's wrong:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Remove the last array item's comma&lt;/li&gt;\n&lt;li&gt;Change &lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;$return_arr = [];&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;To &lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;$return_arr = array();&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;3.Add:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$row_array = array() \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;at the begginning of all that code&lt;/p&gt;\n\n&lt;p&gt;At the end your code must be like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$fetch = mysqli_query($con, \"SELECT * FROM spotify_userdata\");\n\n$row_array = array();\n\nwhile ($row = mysqli_fetch_array($fetch, MYSQL_ASSOC)) {\n    $return_arr = array(\n        $row_array['user_id'] = $row['user_id'],\n        $row_array['name'] = $row['name'],\n        $row_array['artists'] = $row['artists'],\n    );\n}\n\n$user = json_encode($return_arr[0]);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["将所选数据显示为数组值而不是字符串", ["\n\n", "I'm trying to put data from my database into seperate arrays within another array. This works but when I'm trying to fetch the 'user_id' information, it only shows one number so it works like a string. How can I get it to work like an array and get the entire user_id? ", "\n\n", "$fetch = mysqli_query($con, \"SELECT * FROM spotify_userdata\");\n\n$return_arr = [];\n\nwhile ($row = mysqli_fetch_array($fetch, MYSQL_ASSOC)) {\n    $return_arr[] = array(\n        $row_array['user_id'] = $row['user_id'],\n        $row_array['name'] = $row['name'],\n        $row_array['artists'] = $row['artists'],\n    );\n}\n\n$user = json_encode($return_arr[0]);\n\necho $user[2];\n", "\n\n", "This code returns 1 so it show the third number of the user_id. How can I get it to show the entire user_id like this: 111434343", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义一个学生结构体比较方便简单。包括姓名&amp;#xff0c;各科成绩和总分。&lt;br /&gt;然后输入结构体成员值&amp;#xff0c;并计算出总分&lt;br /&gt;按总分排序&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["五个人成绩排序1不运行2解决分数相同排名相同问题", ["\n", "题假设有五位同学四门功课的成绩如下，现要求得每位同学的总分，并按照总分从高到低的顺序进行排序，输出其名次，如果总分相同，则按语文和数学分数之和高者排前，低者排后，但名次一样。", "我的基本就是  先循环输入 姓名 和分数 ，在算每个人总分，然后交换低标，交换名字，输出。", "疑：1用字符型二维数组来存放名字对吗？汉字长度怎么对应字符长度？", "2本人vscode显示不运行？", "3.如何更好地实现名字和总分对应变换？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/language.types.string.php\" rel=\"noreferrer\"&gt;&lt;strong&gt;PHP strings&lt;/strong&gt;&lt;/a&gt; can be specified not just in &lt;em&gt;two&lt;/em&gt; ways, but in &lt;strong&gt;four&lt;/strong&gt; ways.&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;a href=\"http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.single\" rel=\"noreferrer\"&gt;&lt;strong&gt;Single quoted strings&lt;/strong&gt;&lt;/a&gt; will display things almost completely \"as is.\" Variables and most escape sequences will not be interpreted. The exception is that to display a literal single quote, you can escape it with a back slash &lt;code&gt;\\'&lt;/code&gt;, and to display a back slash, you can escape it with another backslash &lt;code&gt;\\\\&lt;/code&gt; (&lt;strong&gt;So yes, even single quoted strings are parsed&lt;/strong&gt;).&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.double\" rel=\"noreferrer\"&gt;&lt;strong&gt;Double quote strings&lt;/strong&gt;&lt;/a&gt; will display a host of escaped characters (including some regexes), and variables in the strings will be evaluated. An important point here is that &lt;strong&gt;you can use curly braces to isolate the name of the variable you want evaluated&lt;/strong&gt;. For example let's say you have the variable &lt;code&gt;$type&lt;/code&gt; and you what to &lt;code&gt;echo \"The $types are\"&lt;/code&gt; That will look for the variable &lt;code&gt;$types&lt;/code&gt;. To get around this use &lt;code&gt;echo \"The {$type}s are\"&lt;/code&gt; You can put the left brace before or after the dollar sign. Take a look at &lt;a href=\"http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing\" rel=\"noreferrer\"&gt;string parsing&lt;/a&gt; to see how to use array variables and such.&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.heredoc\" rel=\"noreferrer\"&gt;&lt;strong&gt;Heredoc&lt;/strong&gt;&lt;/a&gt; string syntax works like double quoted strings. It starts with &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;. After this operator, an identifier is provided, then a newline. The string itself follows, and then the same identifier again to close the quotation. You don't need to escape quotes in this syntax. &lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.php.net/manual/en/language.types.string.php#language.types.string.syntax.nowdoc\" rel=\"noreferrer\"&gt;&lt;strong&gt;Nowdoc&lt;/strong&gt;&lt;/a&gt; (since PHP 5.3.0) string syntax works essentially like single quoted strings. The difference is that not even single quotes or backslashes have to be escaped. A nowdoc is identified with the same &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; sequence used for heredocs, but the identifier which follows is enclosed in single quotes, e.g. &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;'EOT'&lt;/code&gt;. &lt;strong&gt;No parsing is done in nowdoc.&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;Speed:&lt;/strong&gt;&lt;br&gt;\nI would not put too much weight on single quotes being faster than double quotes. They probably are faster in certain situations. Here's an article &lt;a href=\"http://phplens.com/lens/php-book/optimizing-debugging-php.php\" rel=\"noreferrer\"&gt;explaining one manner in which single and double quotes are essentially equally fast since PHP 4.3&lt;/a&gt; (&lt;code&gt;Useless Optimizations&lt;/code&gt; toward the bottom, section &lt;code&gt;C&lt;/code&gt;). Also, this &lt;a href=\"http://www.phpbench.com/\" rel=\"noreferrer\"&gt;&lt;strong&gt;benchmarks page&lt;/strong&gt;&lt;/a&gt; has a single vs double quote comparison. Most of the comparisons are the same. There is one comparison where double quotes are slower than single quotes.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["Php 中单引号字符串和双引号字符串的区别是什么？", ["\n\n", "I'm not an expert in PHP programming, but I'm a little confused why I see some code in PHP with string placed in single quotes and sometimes in double quotes.", "\n\n", "I just know in .NET, or the C language, if it is in single quote, that means it is a character, not a string.", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/3446216/what-is-the-difference-between-single-quoted-and-double-quoted-strings-in-php"]], "Tag": "程序设计"}
{"Answer": "使用Fromat函数，比如：\r\nCString path；\r\npath.Fromat(_T(\"FlashDisk:\\\\picSrc\\\\%s.bmp\"), name);", "Konwledge_Point": "字符型", "Question": ["VC++字符串格式输出问题？", ["\n如上如所示，我想将一个LPCTSTR型字符串格式化输出，但sprintf貌似不能实现这个功能，我想转换的结果也是LPCTSTR类型以作为loadBitmap（）的参数，请问我该怎么办？谢谢！"]], "Tag": "程序设计"}
{"Answer": "主要是因为e.FormattedValue引起的，你改为\r\n\r\n If e.RowIndex &gt;= 0 And IIf(IsDBNull(DataGridView2.CurrentCell.Value), \"\", DataGridView2.CurrentCell.Value) &lt;&gt; e.FormattedValue.ToString()\r\n Then\r\n \r\n 试试", "Konwledge_Point": "字符型", "Question": ["VB.NET2010：删除单元格数据时条件判断语句报错", ["VB.NET2010表格DataGridView2_CellValidating事件中", "\n\n", " If e.RowIndex >= 0 And IIf(IsDBNull(DataGridView2.CurrentCell.Value), \"\", DataGridView2.CurrentCell.Value) <> e.FormattedValue Then...\n", "\n\n", "当我删除当前单元格内容时，", "\n如果针对字符型字段OK，但是针对数值型字段出错提示如下：", "\n从字符串“”到类型“Double”的转换无效", "\n我试着改为：", "\n\n", " If e.RowIndex >= 0 And IIf(IsDBNull(.CurrentCell.Value), 0, .CurrentCell.Value) <> e.FormattedValue Then...\n", "\n\n", "还是提示错误，怎么破？"]], "Tag": "程序设计"}
{"Answer": "def dividing(file_name):\r\n        result = {}\r\n        all_lines = open(file_name).readlines()\r\n        for line in all_lines:\r\n            data = {}\r\n            a = line.split('\t')\r\n            if len(a) &lt;= 1:\r\n                adprodset_code = line.strip()\r\n                continue\r\n            for i in a:\r\n                b = i.split('\t')\r\n                data[b[0]] = b[1]\r\n            if len(data) != 0 and data['adprod_type'] == '6':\r\n\r\n                subdata = data['adprod_params']\r\n                c = subdata.split('\t')\r\n                params = {}\r\n                for j in c:\r\n                    d = j.split('\t')\r\n                    params[d[0]] = d[1]\r\n                result[adprodset_code.strip('\\n')] = {'params': params}\r\n        return result", "Konwledge_Point": "字符型", "Question": ["如何用python来提取一个字符串中的key和value。", ["有一段字符串，目的想把字符串中的某些子串作为键值，某些子串作为值", "\n字符串", "\n\n", "adprod_type^B6^Apr_flag^B0^Asource^B^Asource_id^B^Aadprod_params^Bheight^D^Chtml^Ddfasfasdf^Cwidth^D^Aadprodset_id^B42401^Aadserve^B\n\n", "\n\n", "最后想要的结果是", "\n\n", "adprod_type: '6',pr_flag:'0', source:'', source_id:'', adprod_params:{height:'',html:'dfasfasdf',width:''}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;for(i &amp;#61; 0; i &amp;lt; n; i&amp;#43;&amp;#43;)&lt;br /&gt;这后面多了个分号&amp;#xff0c;删除掉&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["我现在遇到的问题是输入n后但不输出任何数？能解释一下为什么嘛吗？", ["int", " ", "main", "()", "\n", "{", "void", " ", "scopy", "(", "char", " str1[],", "char", " str2[],", "int", " n)", ";\n    ", "char", " str1[", "30", "];\n", "int", " n;\n", "char", " str2[]=", "\"I am a student\"", ";\n\n   ", "scanf", "(", "\"%d\"", ",&n);\n\n     ", "scopy", "(str1,str2,n);\n     ", "printf", "(", "\"%s\"", ",str1);\n}\n", "void", " ", "scopy", "(", "char", " str1[],", "char", " str2[],", "int", " n)", "\n", "{", "int", " i;\n ", "for", "(i=", "0", ";i<n;i++);\n str1[i]=str2[i];\nstr1[n]=", "'\\0'", ";\n}\n\n\n\n\n\n函数scopy的功能是：将一个字符串前面n个子字符送到       一个字符型数组中去，然后再加上一个", "'\\0'", "。不用系统       提供的函数strcpy。\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; to_char(to_date(&lt;span class=\"hljs-string\"&gt;&amp;#39;2020/1/1&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;yyyy/mm/dd&amp;#39;&lt;/span&gt;),&lt;span class=\"hljs-string\"&gt;&amp;#39;yyyy/mm/dd&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; dual\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/157748201346116.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["oracle日期位数转换问题", ["最近业务上碰到有字符型的日期字段，但不是通用的“2020/01/01”格式，即月份和日在个位数时前面没有补0，如“2020/1/1”或者“2020/2/18”，日期后面还带有时分秒等数值。业务需求，需要将前面的年月日截取出来，但不统一的日期格式，使得截取时候不能把年月日完整的截取出来。请问有没有什么办法使这些日期在月份和日期个位数时候在前面自动补0，即“2020/1/1”变成\"2020/01/01\""]], "Tag": "程序设计"}
{"Answer": "```\r\n 最简单的，先开一个很大的数组（确保肯定够）tnode * arr[100000]，再定义一个全局的变量  int currindex\r\nprintf(\"%s %d\\n\",p-&gt;word,p-&gt;count);\r\n-&gt;\r\narr[currindex++] = p;\r\n```", "Konwledge_Point": "字符型", "Question": ["C语言 如何将二叉树中序遍历的结果存入数组", ["C语言 如何将二叉树中序遍历的结果存入一个数组，我的代码这段是用递归写的，但不知道如何将值传到数组中？", "\n\n", " void treeprint(struct tnode *p)\n{\n    if(p!=NULL){\n        treeprint(p->left);\n        printf(\"%s %d\\n\",p->word,p->count);\n        treeprint(p->right);\n    }\n}\n", "\n\n", "我的想法是将每个p->word （指的是单词）存入二维字符型数组中", "\n将每个p->count（指的是单词的个数）存入整型数组中，但不知道如何将值传到数组中？"]], "Tag": "程序设计"}
{"Answer": "(list(z).map(concept_hierarchy(0))) * disc 这种写法，就是说在调用list的map成员函数，但list是python的内置类型，它没有map成员函数。\r\n你本来的意思是想用map高阶函数，用法其实很简单，给你推荐一个链接，一下你就明白了。\r\nhttps://www.liaoxuefeng.com/wiki/1016959663602400/1017329367486080", "Konwledge_Point": "字符型", "Question": ["小白求助：python报错怎么解决 ？", ["python 报错：AttributeError: (\"'list' object has no attribute 'map'\", 'occurred at index 0')", "\n\n", "def function(x, y, z):\n    if x <= 100 and y == 'AB':\n        return (list(z).map(concept_hierarchy(0))) * disc\n    elif x <= 200 and y == 'AC':\n        return (list(z).map(concept_hierarchy(1))) * disc\n    else:\n        return None\ndata['abc'] = data.apply(lambda x: function(x['a'], x['b'], x['c']), axis=1)\n\n", "\n\n", "代码主要是对数据表里面，C列的值（特征较多，字符型）进行关系映射（转为数值）。"]], "Tag": "程序设计"}
{"Answer": "http://wenku.baidu.com/link?url=jY8HrPZZdrENMhRz7rfOlaYlMB22o8IUgB0z2BEYT_QxYwz_BhLYwpB9tezweGBei-om6aXtdp8J3WGXGyVVRLu_FN_dHJzcltosDIUydPO\r\n\r\nstrcpy(char *, char *)用法strcpy(目的字符串地址, 需要拷贝的原字符串地址)", "Konwledge_Point": "字符型", "Question": ["C++数组作为类的私有成员求助", ["定义一个Employee类，其中包括姓名、街道地址、城市和邮编等属性，以及changeName()和display()等函数。display()显示姓名、街道地址、城市和邮编等属性，changeName()改变对象的姓名属性。", "\n\n", "在employee.h文件中定义Employee类。Employee类具有姓名、街道地址、城市和邮编等私有数据成员，都可以用字符型数组来表示，在成员函数中，构造函数用来初始化所有成员数组，对字符数组的赋值可以使用字符串拷贝函数strcpy(char *, char *)；display()中使用cout显示姓名、街道地址、城市和邮编等属性，changeName()改变类中表示姓名属性的字符数组类型的数据成员。在主程序中定义这个类的对象并对其进行操作。", "\n\n", "请问下构造函数如果设置了形参那要怎么实现？还有就是strcpy()函数要怎么使用啊...QAQ跪求大神指点"]], "Tag": "程序设计"}
{"Answer": "select to_char(sysdate+5/1440,'yyyy-mm-dd hh24:mi:ss') as timechar from dual\r\n[http://www.orafaq.com/faq/how_does_one_add_a_day_hour_minute_second_to_a_date_value](http://www.orafaq.com/faq/how_does_one_add_a_day_hour_minute_second_to_a_date_value \"\")", "Konwledge_Point": "字符型", "Question": ["Oracle Sql如何将自定义的日期型进行加减然后转成字符串呢", ["例如2016/10/17 10:17:22 加5分钟，然后转成字符串呢？"]], "Tag": "程序设计"}
{"Answer": "首先，你这个用法就是错的，你这样是在对name的第11个字符进行操作\r\n而且字符串赋值要用strcpy才行，不是用=\r\n\r\n```\r\n #include &lt;stdio.h&gt;\r\n#include&lt;string.h&gt;\r\nstruct horse{\r\n\tchar name[10];\r\n\tint age;\r\n};\r\nvoid main(){\r\n\tstruct horse list;\r\n\tstrcpy(list.name, \"Leo\");\r\n\tprintf(\"The name is %s.\\n\", list.name);\r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["给字符串数组型结构成员赋值失败", ["#include ", "\nstruct horse{", "\n    char name[10];", "\n    int age;", "\n    };", "\nvoid main(){", "\n    struct horse list;", "\n    list.name[10]=\"Leo\";", "\n    printf(\"The name is %s.\\n\",list.name);", "\n}", "\n如上，平台是VC6.0，我想测试给list.name[10]赋值的各种方法，用scanf可以赋值，但是直接用=后却输出一个垃圾值，也就是赋值失败。为此请教！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;ctype.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;malloc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * &lt;span class=\"hljs-title\"&gt;Tolower&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * src)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * dest &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;)*(&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(src)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; * p_dest &amp;#61; dest;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (*src)\n    {\n        *p_dest &amp;#61; &lt;span class=\"hljs-built_in\"&gt;tolower&lt;/span&gt;(*src);\n        src&amp;#43;&amp;#43;;\n        p_dest&amp;#43;&amp;#43;;\n    }\n    *p_dest &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; dest;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;Tolower&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;aBcDeFg&amp;#34;&lt;/span&gt;));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["编写的函数无法实现把整个字符串转换为小写，如何解决？(语言-c语言)", ["问题遇到的现象和发生背景", "\n", "C语言写了一个利用ctype.h头中tolower()函数把字符串中所有大写字母转为小写的函数，无法实现。", "\n", "问题相关代码", "\n", "char", " * ", "Tolower", "(", "const", " ", "char", " * src)", "\n", "{\n    ", "char", " * dest = ", "NULL", ";\n    \n    ", "while", " (*src)\n    {\n        *dest = ", "tolower", "(*src);\n        src++;\n        dest++;\n    }\n    *dest = ", "'\\0'", ";\n    \n    ", "return", " dest;\n}\n\n", "\n", "运行结果及报错内容", "\n", "不报错。但程序结束异常，返回3221225477。", "\n", "我的解答思路和尝试过的方法", "\n", "在网上搜了搜，大多说是野指针的问题，我试着初始化为空指针还是不行。", "\n", "我想要达到的结果", "\n", "预计结果", "类似于", "\n", "printf(", "\"%s\"", ", Tolower(", "\"aBcDeFg\"", "))", ";", "\n\n", "\n", "参数不可修改，把字母转换小写后赋给dest然后返回。", "希望大家能够帮助我，多谢。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;reg52.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;intrins.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; uchar unsigned char&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; uint unsigned int&lt;/span&gt;\nsbit K1&amp;#61;P1^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nsbit PWM&amp;#61;P3^&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;\nuchar flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    &lt;span class=\"hljs-comment\"&gt;//定义一个变量&amp;#xff0c;用来记录按键控制pwm的三种状态 0时电机全速 1时电机半速 2时电机不转&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;delay&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(uint x)&lt;/span&gt;\n&lt;/span&gt;{\n    uchar t;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(x--)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(t&amp;#61;&lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;;t&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;t--);\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;pwm&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    &lt;span class=\"hljs-comment\"&gt;//flag状态为0时 pwm全为高 电机全速转&lt;/span&gt;\n        PWM&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)    &lt;span class=\"hljs-comment\"&gt;//flag状态为1时 pwm占空比为50% 电机半速&lt;/span&gt;\n    {\n        PWM&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n        PWM&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;    &lt;span class=\"hljs-comment\"&gt;//剩下一种可能flag为2 pwm全为低 电机不转&lt;/span&gt;\n        PWM&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;key&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(K1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)     &lt;span class=\"hljs-comment\"&gt;//当检测到按键按下时&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;delay&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;);        &lt;span class=\"hljs-comment\"&gt;//延时用来消抖&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(K1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    &lt;span class=\"hljs-comment\"&gt;//20ms后K1还为低 证明按键确实按下&lt;/span&gt;\n        {\n            flag&amp;#43;&amp;#43;;     &lt;span class=\"hljs-comment\"&gt;//状态值加一&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag&amp;gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)    &lt;span class=\"hljs-comment\"&gt;//因为状态只有0、1、2三种可能 所以当状态大于2时要重新赋值为0 以此循环&lt;/span&gt;\n                flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(K1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);    &lt;span class=\"hljs-comment\"&gt;//等待按键松开&lt;/span&gt;\n        }\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;key&lt;/span&gt;();\n        &lt;span class=\"hljs-built_in\"&gt;pwm&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这是一种比较简单的实现方法 在楼主原来的基础上做了一些修改 首先想跟楼主说的是 建议养成好习惯 将各个模块分离开来 例如把按键部分和pwm部分分开 这样在以后维护代码比较多的工程时比较方便 二是不知道楼主学没学中断 学了中断的话用中断可能会更好 单片机在驱动pwm的同时还要扫描按键 可能会造成占空比不太标准 但由于按键扫描部分执行很快 一般问题不是很大 三是由于不知道楼主仿真时设置的主频是多少 因此延时部分数值随便填写的  常用的按键消抖部分一般为20ms左右 由于电动机可以看做感性器件 所以具体的频率一般需要考虑电动机的感抗和响应速度综合决定 具体的楼主可以去搜一下  确定一个具体的数值  最后有不懂的地方欢迎继续提问  我也是一个小白 跟楼主一起学习 共同进步&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["直流电机pwm调速该怎么做", ["初学，写了个开关电机的代码，网上的pwm代码都没看太懂", "想用按键K1通过调pwm控制电机，不转，50％转速，全速三种状态切换，应该怎么做，最好能有代码", "#include <reg52.h>", "#include <intrins.h>", "\n", "#define uchar unsigned char  //无符号字符型 宏定义        变量范围0", "255", "#define uint  unsigned int         //无符号整型 宏定义        变量范围0", "65535", "\n", "sbit K1=P1^2;         // 按键端口", "\n", "sbit PWM=P3^6;          //PWM端口", "\n", "//延时函数", "void delay(uint x)", "{", "  uchar t;", "  while(x--)", "  {", "  for(t=120;t>0;t--);", "  }", "}", "\n", "void pwm()", "{", "\n", "  if(K1==0)      //", "  {", "    delay(20);", "    while(K1==0)", "    {", "    PWM=~PWM;", "\n", "}                         \n", "\n", " }", "\n", "}", "void main() //主函数", "{", "   while(1)", "   {", "     pwm();", "   }", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;a href=\"http://play.golang.org/p/xv7-YGF_cf\"&gt;Try this&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;package main\n\nimport \"fmt\"\nimport \"strconv\"\n\nfunc FloatToString(input_num float64) string {\n    // to convert a float number to a string\n    return strconv.FormatFloat(input_num, 'f', 6, 64)\n}\n\nfunc main() {\n    fmt.Println(FloatToString(21312421.213123))\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you just want as many digits precision as possible, then the special precision -1 uses the smallest number of digits necessary such that ParseFloat will return f exactly. Eg&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;strconv.FormatFloat(input_num, 'f', -1, 64)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Personally I find &lt;code&gt;fmt&lt;/code&gt; easier to use.  (&lt;a href=\"http://play.golang.org/p/_IbJZZVlyl\"&gt;Playground link&lt;/a&gt;)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fmt.Printf(\"x = %.6f\n\", 21312421.213123)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or if you just want to convert the string&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fmt.Sprintf(\"%.6f\", 21312421.213123)\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["formatFloat：将浮点数转换为字符串[重复]", ["\n\n", "\n    ", "This question already has an answer here:", "\n    ", "\n", "\n            ", "How to format floating point numbers into a string using Go", "\n                \n                    2 answers\n                \n        ", "\n    ", "\n", "\n\n", "http://golang.org/pkg/strconv/", "\n\n", "http://play.golang.org/p/4VNRgW8WoB", "\n\n", "How do I convert a float number into string format?\nThis is google playground but not getting the expected output. (2e+07)\nI want to get \"21312421.213123\"", "\n\n", "package main\n\nimport \"fmt\"\nimport \"strconv\"\n\nfunc floattostr(input_num float64) string {\n\n        // to convert a float number to a string\n    return strconv.FormatFloat(input_num, 'g', 1, 64)\n }\n\n func main() {\n      fmt.Println(floattostr(21312421.213123))\n      // what I expect is \"21312421.213123\" in string format\n }\n", "\n\n", "Please help me get the string out of float number. Thanks", "\n\n", "</div>\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;a&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;12&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;34&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;56&amp;#39;&lt;/span&gt;]&lt;/span&gt;\nb&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[int(x) for x in a]&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(*b)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["python 关于csv中数字型字符串的存储", ["现在我的csv格式大概是这样", "\n", "\n", "想得到的处理后的结果如下", "（", "100090 2 59 2 90 59", "100090 101 59 2 90 113", "100090 106 59 2 90 113", "）", "\n", "1.将右列单元格中的字符串列表转换为数字", "2.左右两列单元格合并", "主要是不会处理第一步，望指教！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; re\n\n&lt;span class=\"hljs-comment\"&gt;# 方法1&lt;/span&gt;\n_float_regexp &amp;#61; re.&lt;span class=\"hljs-built_in\"&gt;compile&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;r&amp;#34;^[-&amp;#43;]?(?:\\b[0-9]&amp;#43;(?:\\.[0-9]*)?|\\.[0-9]&amp;#43;\\b)(?:[eE][-&amp;#43;]?[0-9]&amp;#43;\\b)?$&amp;#34;&lt;/span&gt;).match\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;is_float_re&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; _float_regexp(string) &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 方法二&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;is_float_type&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;string&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;isinstance&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(string), (&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;)):\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    string &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(is_float_re(string))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(is_float_type(string))\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["如何去判断字符串能否转换为浮点数", ["不知道怎么去判断当e出现时例如010e-1也可以转换成浮点数，只会判断算是数字或者全都是字母之类的"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1.cin输入时&amp;#xff0c;是对一块地址进行写值&amp;#xff0c;而指针strip刚好是一个地址。&lt;br /&gt;3.申请100个char类型的空间&lt;br /&gt;4.数组越界后的地址空间是合法的就可以输出&amp;#xff0c;越界太多会往非法地址写值&amp;#xff0c;会导致程序运行出错&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["请大家帮我解释以下 问题", ["\n", "\n/ ", "48", ".cpp : 此文件包含 ", "\"main\"", " 函数。程序执行将在此处开始并结束。\n", "//", "\n\n", "#", "include", " ", "<iostream>", "\nusing namespace std;\nint main()\n{\n    char ", "str", "[", "10", "];\n    char* strip = ", "str", ";\n    ", "//输入输出", "\n    cout << ", "\"str=\"", ";\n    cin >> ", "str", ";", "//用字符数组输入字符串", "\n    cout << ", "\"str=\"", " << ", "str", " << ", "endl", ";\n    cout << ", "\"strip=\"", " << strip << ", "endl", ";\n    cout << ", "\"strip=\"", ";\n    cin >> strip;", "//用字符指针变量输入字符串", "\n    cout << ", "\"str=\"", " << ", "str", " << ", "endl", ";\n    cout << ", "\"strip=\"", " << strip << ", "endl", ";\n    ", "//利用指针变量改变其指向字符串的内容", "\n    *(strip + ", "2", ") = ", "'l'", ";\n    cout << ", "\"str=\"", " << ", "str", " << ", "endl", ";\n    cout << ", "\"strip=\"", " << strip << ", "endl", ";\n    ", "//动态为字符型指针变量分配内存", "\n    strip = new char(", "100", ");\n    cout << ", "\"strip=\"", ";\n    cin >> strip;", "//用字符指针变量输入字符串", "\n    cout << ", "\"str=\"", " << ", "str", " << ", "endl", ";\n    cout << ", "\"strip=\"", " << strip << ", "endl", ";\n\n\n}\n", "\n", "1-为什么指针变量strip能通过cin赋值", "2-为什么cout输出的strip而不是*strip输出的是str的值而不是地址", "3- strip = new char(100);是什么意思", "4-str[10]不是只有10个位置一个汉字占两个字符串结尾还有\\n，而且我输入的“程序执行将在此处开始并结束”有13个汉字他为什么能正常输出"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/jiftlixu/article/details/5351741", "Konwledge_Point": "字符型", "Question": ["有关VB的字符串内存分配的问题                ", ["用C++开发的DLL型函数库，C++的Struct中包含字符串，在VB中转换成Type型，关于内存的使用是怎么样的定义"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;using namespace std是C&amp;#43;&amp;#43;中的东西&amp;#xff0c;你的代码中没有用C&amp;#43;&amp;#43;的输入输出&amp;#xff0c;这一句没用&amp;#xff0c;把这一句注释掉&amp;#xff0c;否则会报错&lt;br /&gt;&amp;#xff08;2&amp;#xff09;中文占两个字节&amp;#xff0c;第一个字节是0x8X&amp;#xff0c;是带符号的字符&amp;#xff0c;如果用unsigned char&amp;#xff0c;会发生错误&amp;#xff0c;把unsigned char改成char&lt;br /&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//using namespace std;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; max 10&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\a请输入你的\\&amp;#34;名字\\&amp;#34;在下划线上\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入______\\b\\b\\b\\b\\b\\b&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; n[max];\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(n);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你输入了&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(n);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["利用gets函数接收中文时报错", ["问题遇到的现象和发生背景", "\n", "在利用gets函数时报错", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", "<string.h>", "\n", "#", "include", "<stdio.h>", "\n", "#", "define", " max 10", "\n", "int", " ", "main", "()", "\n", "{\n    ", "using", " ", "namespace", " std;\n    ", "printf", "(", "\"\\a请输入你的\\\"名字\\\"在下划线上\\n\"", ");\n    ", "printf", "(", "\"输入______\\b\\b\\b\\b\\b\\b\"", ");\n    ", "unsigned", " ", "char", " n[max];\n    ", "gets", "(n);\n    ", "printf", "(", "\"你输入了\"", ");\n    ", "puts", "(n);\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "[Note] initializing argument 1 of 'char* gets(char*)'", "[Error] invalid conversion from 'unsigned char*' to 'const char*' [-fpermissive]", "[Note] initializing argument 1 of 'int puts(const char*)'", "\n", "我的解答思路和尝试过的方法", "\n", "将_unsigned char_修改成_char_后问题解决", "\n", "我想要达到的结果", "\n", "想知道为什么无法使用无符号字符型数组作为变量类型来定义，请给出解释"]], "Tag": "程序设计"}
{"Answer": "你计算的结果是float类型，不能赋值给String，需转成String\r\ntotaluri[l]= String.valueOf(Float.parseFloat(cant[l]) *Float.parseFloat(pret[l]));", "Konwledge_Point": "字符型", "Question": ["Android-批量字符串问题", ["有字符串：", "\n\n", "String[] pret = new String[allcant.size()];\nString[] totaluri = new String[allcant.size()];\nString[] cant = new String[allcant.size()];\n", "\n\n", "想要实现类似这样：", "\n\n", "totaluri[l]=pret[l]*cant[l];`\n", "\n\n", "是不是要将他们转换成浮点字型？编辑文本中得到的输入是小数型。请帮忙，谢谢。", "\n\n", "我试过没成功：", "\n\n", "totaluri[l]=Float.parseFloat(cant[l]) *Float.parseFloat(pret[l]);\n"]], "Tag": "程序设计"}
{"Answer": "不能简单将16进制转换为10进制。要先用串口调试程序分析，发来的数据是什么格式的。\r\n如果是数字，那么直接当成数字后用itoa一类转换\r\n如果是数字对应的ascii码，用char[]接收直接显示不要转换", "Konwledge_Point": "字符型", "Question": ["mscomm读取十六进制转为十进制显示", ["VC6.0写的，本来下位机传的是十进制真好转成字符串显示，现在要求的单片机穿上来的是十六进制的数据请问怎么修改代码转成十进制字符串显示啊", "\n\n", "\n\n\n\nvoid CTemperDlg::OnCommMscomm() \n{\n    m_strRXData=\" \";  //每次进入编辑框内容清空等待显示新的数据\n    VARIANT variant_inp;\n    COleSafeArray safearray_inp;\n    LONG len,k;\n    BYTE rxdata[2048];         //设置BYTE数组\n    CString strtemp;\n\n    static int flag;    //识别码数字标志位\n\n    if(m_ctrlComm.GetCommEvent()==2)//事件值为2表示接收缓冲区内有字符\n    {                               //以下你可以根据自己的通信协议加入//处理代码\n        variant_inp=m_ctrlComm.GetInput();//读缓冲区\n        safearray_inp=variant_inp;        //VARIANT型变量转换为//ColeSafeArray型变量\n        len=safearray_inp.GetOneDimSize();//得到有效数据长度\n\n        for(k=0;k<len;k++)\n            safearray_inp.GetElement(&k,rxdata+k);//转换为BYTE型数组\n        for(k=0;k<len;k++)               //将数组转换为Cstring型变量\n        {\n            BYTE bt=*(char*)(rxdata+k);//字符型\n            strtemp.Format(\"%c\",bt);   //将字符送入临时变量strtemp存放\n            m_strRXData += strtemp;      //加入接收编辑框对应字符串strtemp\n\n\nm_RXData+=strtemp;\ndouble tem;\ntem=atof(m_strRXData);\nCString aa;\n if(tem>31.00)\n {\n        m_strlbaojing.SetIcon(m_hIconbaoj);\n\n }\nelse\n        m_strlbaojing.SetIcon(m_hIconzhc);\n\n        }\n    }\n    UpdateData(FALSE); \n}\n\n"]], "Tag": "程序设计"}
{"Answer": "char s[100];\r\n\tcin&gt;&gt;s;\r\n\tcout&lt;&lt;s&lt;&lt;endl;\r\n\t是这么写的吗？", "Konwledge_Point": "字符型", "Question": ["c++字符指针出错，求解", ["使用c型字符指针时，使用cout输出，结果输出的是内存位置。数字的指针都没问题，求助。"]], "Tag": "程序设计"}
{"Answer": "截取字符串错了，应该是：select * from xx where SUBSTR(DATE_FORMAT(date,'%Y-%m-%d'),1,4)='2010' \r\n\r\n你再试试看、", "Konwledge_Point": "字符型", "Question": ["mysql 字符串语句", ["请问date型变量为2010-07-01类型，我想把date型变量的年取利用下面的语句", "select * from xx where SUBSTR(DATE_FORMAT(date,'%Y-%m-%d'),0,4)='2010'", "来提取某一年的数据但是没有成功，请问应该怎么写?"]], "Tag": "程序设计"}
{"Answer": "你不是定义了么？\r\npublic Person(String n,String a,char s,int ag)\r\n建议你把代码复制一份，再开一个文件编译一次", "Konwledge_Point": "字符型", "Question": ["大一新生求告诉哪错了。。。", ["/**这是一个人类，包含4个私有的数据成员name\\addr\\sex\\age,分别为字符串型，字符串型、字符型及整型，表示姓名，地址，性别", "\n\n", "\n", "\n", "和年龄。用一个4参构造方法、一个2参构造方法，一个无参构造方法、一个输出方法显示4种属性。", "\n*/", "\npublic class Person {", "\n private String name;", "\n private String addr;", "\n private char sex;", "\n private int age;", "\n //构造方法", "\n public Person(String n,String a,char s,int ag){", "\n     this.setName(n);", "\n     this.setAddr(a);", "\n     this.setSex(s);", "\n     this.setAge(ag);", "\n }", "\n public Person(String n,String a){", "\n     setName(n);", "\n     setAddr(a);", "\n }", "\n public Person(){", "\n\n", "}", "\n public void setName(String i){", "\n     name=i;", "\n }", "\n public void setAddr(String i){", "\n    addr=i;", "\n }", "\n public void setSex(char i){", "\n     sex=i;", "\n }", "\n public void setAge(int i){", "\n     age=i;", "\n }", "\n public String getName(){", "\n     return name;", "\n }", "\n public String getAddr(){", "\n     return addr;", "\n }", "\n public char getSex(){", "\n     return sex;", "\n }", "\n public int getAge(){", "\n     return age;", "\n }", "\n public void print(){", "\n     System.out.println(this.getName()+this.getAddr()+this.getSex()", "\n             +this.getAge());", "\n }", "\n}", "\n", "\n", "//另一个class", "\npublic class PersonText {", "\n    public static void main(String args[]){", "\n        Person per=new Person(\"王默默\",\"海南\",'f',18);", "\n****错误提示The constructor Person(String, String, char, int) is undefined", "\n\n", "}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我看了半天还是没搞懂你这个题目的题意&amp;#xff0c;哈哈哈&amp;#xff0c;抱歉&amp;#xff0c;但是我还是发现了几个问题&amp;#xff0c;假设你的校验码产生函数没有逻辑问题&amp;#xff0c;那你这个代码还是有些地方会出错&amp;#xff0c;首先&amp;#xff0c;你定义的字符串长度就不够&amp;#xff0c;你看字符串的结尾都是要存一个 ‘\\0’ 来表示字符串的结束&amp;#xff0c;那13个学号之后再加一个反斜杠零&amp;#xff0c;就是14&amp;#xff0c;也就是最少你这个字符串长度要是14&amp;#xff0c;但是我建议你一般都是稍微大一点点&amp;#xff0c;可能20&amp;#xff0c;或者15都可以&amp;#xff0c;这样可以增加程序的健壮性&amp;#xff0c;比方说谁多输入了一位&amp;#xff0c;你这个程序依旧能够跑起来&amp;#xff0c;在一个就是&amp;#xff0c;你获取字符串长度的时候用的是sizeof&amp;#xff0c;这个就有问题&amp;#xff0c;sizeof得到的是你这个数组的大小&amp;#xff0c;并不是你数组内有效元素的数量&amp;#xff0c;这个你要知道&amp;#xff0c;如果你要获得数组元素个数应该要用strlen这个函数&amp;#xff0c;strlen可以统计字符串中有效字符的个数&amp;#xff0c;也就是反斜杠零前面的&amp;#xff0c;最后一个就是你第16行你的赋值问题&amp;#xff0c;你做了这个操作说明你对函数的理解还不是很到位&amp;#xff0c;一个返回unsign char类型的函数你为什么把他能赋值给一个unsign int类型的变量呢&amp;#xff0c;这里如果不做强制类型转换应该是有问题的&amp;#xff0c;或者说你让ret也变成char类型&amp;#xff0c;但是好像跟题目的要求不太一样&amp;#xff0c;所以建议你做一下强制类型转换&amp;#xff0c;或者改变函数返回类型&amp;#xff0c;你的函数里面也是&amp;#xff0c;你让一个返回 unsign char 类型的函数返回了一个 int 值&amp;#xff0c;建议都修改一下&amp;#xff0c;再学习一下函数方面的知识&lt;br /&gt;如果有什么问题可以随时私信我&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言的字节校验法怎么做?", ["题目:", "通过对数据的特定计算得到校验码并保存；之后可以对该数据重新计算校验码，并与保存的校验码进行核对，来确定该数据是否被破坏或篡改。", "字节校验法是数据校验的一种简单方法，将每一个字节的数据视为unsigned char，然后累加（不管是否超界），最终得到一个8位无符号整数，来作为最终的校验码。", "编写校验函数unsed char getChksuignm(unsigned char *p, int len)，其中unsigned char *p为传入的数据的首地址，int len为该数据以字节为单位的长度。", "编写main函数对该函数进行验证，输入你的13位长度的学号（字符型），计算校验码", "下面是我的错误想法:", "\n", "unsigned", " ", "char", " ", "getChksum", "(", "unsigned", " ", "char", "* p, ", "int", " len)", "\n", "{\n    ", "int", " sum = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i < len; i++)\n    {\n        sum += (*p);\n        p++;\n    }\n    ", "return", " sum;\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " num[", "13", "];\n    ", "gets", "(num);\n    ", "int", " len = ", "sizeof", "(num);\n    ", "unsigned", " ", "int", " ret=", "getChksum", "(num, len);\n    ", "printf", "(", "\"校验码为:%d\"", ", ret);\n    ", "return", " ", "0", ";\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;DateType 写错了&amp;#xff0c;类名是 DataType&lt;br /&gt;还有你下面声明 b((float)3.14) 最好这样写&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["一个类中存在多个构造函数", ["\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " flag = ", "0", ";\n", "class", " ", "DataType", " {\n    ", "enum", " {\n        character,\n        integer,\n        floating_point\n    }vartype;\n    ", "union", " {\n        ", "char", " c;\n        ", "int", " i;\n        ", "float", " f;\n    };\n", "public", ":\n    ", "DataType", "(", "int", " aa) {\n        vartype = integer;\n        i = aa;\n    }\n    ", "DateType", "(", "float", " bb) {\n        vartype = floating_point;\n        f = bb;\n    }\n    ", "DateType", "(", "char", " cc) {\n        vartype = character;\n        c = cc;\n    }\n    ", "void", " ", "print", "()", ";\n    ~", "DataType", "();\n};\n", "void", " ", "DataType::print", "()", "\n", "{\n    ", "switch", " (vartype) {\n    ", "case", " integer:\n        cout << ", "\"整型：\"", " << i << endl;\n        ", "break", ";\n    ", "case", " floating_point:\n        cout << ", "\"浮点型：\"", " << f << endl;\n        ", "break", ";\n    ", "case", " character:\n        cout << ", "\"字符型：\"", " << c << endl;\n        ", "break", ";\n    }\n}\n", "//DataType::~DataType() {};", "\n", "int", " ", "main", "()", "\n", "{\n    ", "DataType ", "a", "(", "22", ")", ", ", "b", "(", "3.14", ")", ", ", "c", "(", "'s'", ")", ";\n    a.", "print", "();\n    b.", "print", "();\n    c.", "print", "();\n}\n", "\n", "在DataType的类中，有三个参数不同的构造函数，编译报错：", "错误    C4430    缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int", "咋错了啊？用的是VS2022    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为int类型兼容char类型&lt;br /&gt;char在存储的时候是存的字符的ASCII码, 也是个整数,(比如A是65), 只不过他的长度为int的一半, 所以int完全可以存放char的值&lt;/p&gt;\n&lt;p&gt;有帮助的话采纳一下哦&amp;#xff01;&amp;#x1f648;&amp;#x1f648;&amp;#x1f648;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言int型变量为何可以储存char型字符", ["C语言int型变量为何可以储存char型字符", "c和c++在这一点上有区别吗"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\ntemplate &amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-symbol\"&gt;T&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;SUM&lt;/span&gt;(&lt;span class=\"hljs-symbol\"&gt;T&lt;/span&gt; *&lt;span class=\"hljs-symbol\"&gt;name, &lt;span class=\"hljs-symbol\"&gt;int&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;)   //&lt;span class=\"hljs-symbol\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;SUM&lt;/span&gt;(&lt;span class=\"hljs-symbol\"&gt;T&lt;/span&gt; *&lt;span class=\"hljs-symbol\"&gt;name,&lt;span class=\"hljs-symbol\"&gt;int&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;) 返回了&lt;span class=\"hljs-symbol\"&gt;int&lt;/span&gt;类型\n{\n    T sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//  float sum&amp;#61;0;  类型问题&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        sum &amp;#43;&amp;#61; name[i];\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sum;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["数组求和只能得出整数，代码有什么问题？", ["用函数模板输入数组，求和和输出，但是我使用浮点数类型进行求和时，却只能得出整数，我的代码有什么问题？", "完整代码如下。", "main.cpp文件", "\n", "#", "include", "<iostream>\n#", "include", "\"HSMB.h\"", "\n#", "include", " <", "string", ">\nusing namespace std;\n", "int", " main", "()", "\n{\n    cout<<", "\"选择数组类型，输入1为整型，2为浮点型，3为字符串型\"", "<<endl;\n    ", "int", " x;\n    cin>>x;\n    cout<<", "\"输入数组长度\"", "<<endl;\n    ", "int", " n;\n    cin>>n;\n    ", "if", "(x", " == ", "1", ")\n    {\n    ", "int", " i", "[", "n", "]", ";\n    ", "Input(", "i", ",", "n", ")", ";\n    ", "Show(", "i", ",", "n", ")", ";\n    cout<<", "\"数组之和为\"", "<<", "SUM(", "i", ",", "n", ")", "<<endl;\n    }\n    ", "if", "(x", " == ", "2", ")\n    {\n    ", "float", " f", "[", "n", "]", ";\n    ", "Input(", "f", ",", "n", ")", ";\n    ", "Show(", "f", ",", "n", ")", ";\n    cout<<", "\"数组之和为\"", "<<", "SUM(", "f", ",", "n", ")", "<<endl;\n    }\n    ", "if", "(x", " == ", "3", ")\n    {\n    ", "string", " c", "[", "n", "]", ";\n    ", "Input(", "c", ",", "n", ")", ";\n    ", "Show(", "c", ",", "n", ")", ";\n    cout<<", "\"字符型无法求和\"", "<<endl;\n    }\n    system(", "\"pause\"", ");\n    getchar", "()", ";\n    return ", "0", ";\n}\n", "\n", "HSMB.h文件", "\n", "#include <iostream>", "\n", "#include <string>", "\n", "using", " namespace std;\n", "template", " <", "class", " T>\n", "void", " ", "Show", "(T *", "name", ",", "int", " N)\n{\n    ", "for", "(", "int", " i=", "0", ";i<N;i++)\n    {\n        cout<<", "name", "[i];\n        ", "if", "(i<(N", "-1", "))\n        {\n            cout<<\",\";\n        }\n    }\n    cout<<endl;\n}\n", "template", " <", "class", " T>\n", "void", " ", "Input", "(T *", "name", ",", "int", " N)\n{\n    ", "for", "(", "int", " i=", "0", ";i<N;i++)\n    {\n        cout<<\"输入数组的第\"<<i+", "1", "<<\"个元素\"<<endl;\n        cin>>", "name", "[i];\n    }\n}\n", "template", " <", "class", " T>\n", "int", " SUM(T *", "name", ",", "int", " N)\n{\n    ", "float", " sum=", "0", ";\n    ", "for", "(", "int", " i=", "0", ";i<N;i++)\n    {\n        sum += ", "name", "[i];\n    }\n    ", "return", " sum;\n}\n", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n // 判断字符串在数组内\r\n\tpublic static void stringInArray() {\r\n\t\tString str = \"HELL\";\r\n\t\tString[] arr = { \"H\", \"E\", \"L\", \"L\", \"O\" };\r\n\t\tboolean flag = true;\r\n\t\tfor (int i = 0; i &lt; str.length() &amp;&amp; flag; i++) {\r\n\t\t\tString item = String.valueOf(str.charAt(i));\r\n\t\t\tfor (String aa : arr) {\r\n\t\t\t\tif (aa.equals(item)) {\r\n\t\t\t\t\tSystem.out.println(item + \"在数组内\");\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (flag) {\r\n\t\t\tSystem.out.println(\"字符串在数组内。\");\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"字符串不在数组内。\");\r\n\t\t}\r\n\t}\r\n\r\n\t// 判断数组在字符串内\r\n\tpublic static void arrayInString() {\r\n\t\tString str = \"HELLO\";\r\n\t\tString[] arr = { \"H\", \"E\", \"L\", \"L\", \"O\" };\r\n\t\tboolean flag = true;\r\n\t\tfor (String aa : arr) {\r\n\t\t\tif (!str.contains(aa)) {\r\n\t\t\t\tSystem.out.println(\"字符串不包含：\" + aa);\r\n\t\t\t\tflag = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (flag) {\r\n\t\t\tSystem.out.println(\"数组在字符串内。\");\r\n\t\t} else {\r\n\t\t\tSystem.out.println(\"数组不在字符串内。\");\r\n\t\t}\r\n\t}\r\n```\r\n感觉这是最笨的方法了。", "Konwledge_Point": "字符型", "Question": ["怎么样能在一个字符串里判断是否包含数组里的内容？", ["例如：", "\n\n", "string a=\"ILOVEU\";", "\nstring[] F={\"I\",\"L\",\"U\"};", "\n循环条件？", "\n   if(怎么判断a是否在数组F里)", "\n  {", "\n   在F里并且提取出来", "\n  }ELSE{不在}"]], "Tag": "程序设计"}
{"Answer": "```\r\n# -*- coding: UTF-8 -*-\r\n\r\nimport re\r\nl = ['1111', '1234', '1223', '1112', '6665', 'aaab', '111113', '11115', '11211', '1122', '2211', '1222', '9998']\r\npattern = r'^(\\d)\\1{2}(?!\\1)\\d$' #如果不限定为数字，可以把\\d换成\\w\r\nfor s in l:\r\n\tret = re.search(pattern, s)\r\n\tif ret:\r\n\t\tprint(s)\r\n```\r\n1112\r\n6665\r\n9998\r\n\r\n\r\n# 问题解决的话，请点下采纳", "Konwledge_Point": "字符型", "Question": ["python如何实现识别字符串为AAAB型", ["比如 输入 3334 或4333 3433 3343  如何识别成功呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you want store a php array on you database you can try with &lt;code&gt;json_encode&lt;/code&gt; or &lt;code&gt;serialize&lt;/code&gt;, and when you would need retrive data from you database, you can use &lt;code&gt;json_decode&lt;/code&gt; or &lt;code&gt;unserialize&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Using &lt;code&gt;JSON&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Examples(store as json):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$myArray = array('name' =&amp;gt; 'Jack', 'lastname' =&amp;gt; 'Smith', 24);\n$toStore = json_encode($myArray); // return a string: {\"name\":\"Jack\",\"lastname\":\"Smith\",\"0\":24}\n\nmysqli_query($link,\n    'INSERT INTO myTable (data)\n    VALUES (\"' . mysqli_real_escape_string($link, $toStore) . '\")'\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Examples(retrieved from json):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$query = mysqli_query($link, 'SELECT FROM MyTable WHERE id = ...');\n$row = mysqli_fetch_assoc($query);\n$row = json_decode($row); // return a array: array('name' =&amp;gt; 'Jack', 'lastname' =&amp;gt; 'Smith', 24)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Using &lt;code&gt;serialize&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Example(store serialized):\n    $myArray = array('name' =&amp;gt; 'Jack', 'lastname' =&amp;gt; 'Smith', 24);\n    $toStore = serialize($myArray); // return a string: a:3:{s:4:\"name\";s:4:\"Jack\";s:8:\"lastname\";s:5:\"Smith\";i:0;i:24;}&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;mysqli_query($link,\n    'INSERT INTO myTable (data)\n    VALUES (\"' . mysqli_real_escape_string($link, $toStore) . '\")'\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Examples(retrieve serialized):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$query = mysqli_query($link, 'SELECT FROM MyTable WHERE id = ...');\n$row = mysqli_fetch_assoc($query);\n$row = unserialize($row); // return a array: array('name' =&amp;gt; 'Jack', 'lastname' =&amp;gt; 'Smith', 24)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;After :&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;if you need access to you data from converted array, you can call like:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$row['name'] // return \"Jack\"\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Another ways&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Regexp:&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;You can try use regexp, but this not the best way because sometime is too slow to process data, and maybe, if you don't know security aspects, this definitely not is the best way.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Tokenizer:&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;You can try create you own token processor, like template engine, but this is the most large way... &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Learn more about the functions:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://php.net/manual/en/function.serialize.php\" rel=\"nofollow noreferrer\"&gt;serialize&lt;/a&gt; API&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://php.net/manual/en/function.unserialize.php\" rel=\"nofollow noreferrer\"&gt;unserialize&lt;/a&gt; API&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://php.net/manual/en/function.json-encode.php\" rel=\"nofollow noreferrer\"&gt;json_encode&lt;/a&gt; API&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://php.net/manual/en/function.json-decode.php\" rel=\"nofollow noreferrer\"&gt;json_decode&lt;/a&gt; API&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Support multiple data-types: multidimentional &lt;code&gt;array&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;,\n&lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, and many more data except &lt;code&gt;resource&lt;/code&gt;.&lt;/li&gt;\n&lt;li&gt;Native support for &lt;code&gt;serialize&lt;/code&gt; and &lt;code&gt;unserialize&lt;/code&gt; since PHP4.&lt;/li&gt;\n&lt;li&gt;Native support for &lt;code&gt;json_encode&lt;/code&gt; and &lt;code&gt;json_decode&lt;/code&gt; since PHP 5.2.0&lt;/li&gt;\n&lt;li&gt;Fast and secure encode and decode.&lt;/li&gt;\n&lt;/ol&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["如何将包含数组值的字符串转换为PHP数组？", ["\n\n", "I have a string that contains an array like:", "\n\n", "$tarray = Array ( [gt_ref_id] => 36493115 [tender_notice_type] => [organisation_name] => ROSALES WATER DISTRICT [address] => No. 5 Bonifacio Street [address2] => [contact_person] => [tender_notice_no] => ROSALWD 2016-011-0144(Ref: 4206661)\n)\n", "\n\n", "but I want to access the value of this array like:", "\n\n", "echo \"ref id = \".$tarray['gt_ref_id'];\n", "\n\n", "It should output like:", "\n\n", "ref id = 36493115\n", "\n\n", "but I can't because it's a string. I could if it was an array.", "\n\n", "How can I convert the string to a proper PHP array?", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The easiest way would be to use built in function &lt;a href=\"http://php.net/manual/en/function.is-float.php\" rel=\"nofollow noreferrer\"&gt;is_float()&lt;/a&gt;. To test if a variable is a number or a numeric string you must use &lt;a href=\"http://php.net/manual/en/function.is-numeric.php\" rel=\"nofollow noreferrer\"&gt;is_numeric()&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["php  - 检查字符串是否包含浮点数", ["\n\n", "What is the easiest way to check if a string contains a valid float?", "\n\n", "For example", "\n\n", "is_string_float(\"1\") = true\nis_string_float(\"1.234\") = true\nis_string_float(\"1.2e3\") = true\nis_string_float(\"1b2\") = false\nis_string_float(\"aldhjsfb\") = false\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;最后输出的for()循环&amp;#xff0c;不能放在while&amp;#xff08;&amp;#xff09;循环里&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m, n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//数据定义与初始化&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; num[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; }; &lt;span class=\"hljs-comment\"&gt;//定义字符数组存放需要数字&lt;/span&gt;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入十进制数\\n&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; m;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要转换的进制数\\n&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; || n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; || n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;){ &lt;span class=\"hljs-comment\"&gt;//判断输入的进制是否满足题目要求&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (m !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//m为被除数&amp;#xff0c;当为零时停止循环&lt;/span&gt;\n      {\n          &lt;span class=\"hljs-comment\"&gt;//int k &amp;#61; 0; //以便表示数字存放的位置&lt;/span&gt;\n          &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; m % n; &lt;span class=\"hljs-comment\"&gt;//十进制数不断除以二取余&lt;/span&gt;\n          m /&amp;#61; n; &lt;span class=\"hljs-comment\"&gt;//被除数为上一次的商循环&lt;/span&gt;\n          &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; tmp; &lt;span class=\"hljs-comment\"&gt;//以便将整形转换为字符型储存&lt;/span&gt;\n          &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)tmp &amp;#61; t &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//若余数小于10则直接记录&lt;/span&gt;\n          &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;       tmp &amp;#61; t &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//若余数大于10则需转换为ASSIC码&lt;/span&gt;\n          num[k&amp;#43;&amp;#43;] &amp;#61; tmp; &lt;span class=\"hljs-comment\"&gt;//将字符储存到数组中&lt;/span&gt;\n      }\n      &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;k&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i--)\n              cout &amp;lt;&amp;lt; num[i]; &lt;span class=\"hljs-comment\"&gt;//倒序输出即求得转换后的数字&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;转换进制不在规定范围内\\n&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//若需转换的进制不满足题目则提示出错&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["为啥输出结果顺序老是反的诶？", ["#include ", "using namespace std;", "int main()", "{", "        int m, n = 0;                       //数据定义与初始化", "        char num[50] = { 0 };               //定义字符数组存放需要数字", "        cout << \"请输入十进制数\\n\";", "        cin >> m;", "        cout << \"请输入需要转换的进制数\\n\";", "        cin >> n;", "        if (n == 2 || n == 8 || n == 16)   //判断输入的进制是否满足题目要求", "            while (m != 0)                 //m为被除数，当为零时停止循环", "            {", "                int k = 0;                 //以便表示数字存放的位置", "                int t = m % n;             //十进制数不断除以二取余", "                m /= n;                    //被除数为上一次的商循环", "                char tmp;                  //以便将整形转换为字符型储存", "                if (t < 10)tmp = t + '0';  //若余数小于10则直接记录", "                else tmp = t + 'A' - 10;   //若余数大于10则需转换为ASSIC码", "                num[k++] = tmp;              //将字符储存到数组中", "                for(int i=k-1;i>=0;i--)", "                    cout << num[i];        //倒序输出即求得转换后的数字", "            }", "        else cout << \"转换进制不在规定范围内\\n\";  //若需转换的进制不满足题目则提示出错", "        system(\"pause\");", "        return 0;", "}", "\n", "不知道bug在哪里，输出结果一直是反序，希望大佬帮我检查一下，非常感谢"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;a href=\"https://laravel.com/docs/5.6/eloquent-mutators#attribute-casting\" rel=\"nofollow noreferrer\"&gt;https://laravel.com/docs/5.6/eloquent-mutators#attribute-casting&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Add this to your model to specify the data type:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; protected $casts = [\n     'drink_type' =&amp;gt; 'int',\n     'place_id' =&amp;gt; 'int'\n ];\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["为什么整数数据在postman中以字符串形式返回", ["\n\n", "I'm using postman to test my APIs and i get the following response", "\n\n", "{\n \"Message\": \"Dinks loaded successfully.\",\n \"Status\": true,\n \"InnerData\": [\n     {\n         \"id\": 1,\n         \"place_id\": \"25\",\n         \"drink_type\": \"1\",\n         \"drink_amount\": \"2\",\n         \"device_id\": \"1\",\n         \"created_at\": \"2018-03-09 14:22:27\",\n         \"updated_at\": \"2018-03-09 14:22:27\"\n     }\n ]\n}\n", "\n\n", "in my DB the ", "drink_type", ", ", "place_id", ", ", "drink_amount", ", ", "device_id", " are all integers but i receive them as string , what is wrong with them ?", "\n\n", "here is my code used to return this data", "\n\n", "public function loadDrinks(Request $request){\n    $place_id = $request->place_id;\n    $device_id = $request->device_id;\n\n    $drinks = \\App\\DrinksOrdered::where(['place_id' => $place_id, 'device_id' => $device_id])->get();\n    $resp = new \\App\\Http\\Helpers\\ServiceResponse;\n    $resp->Message = \"Drinks loaded successfully.\";\n    $resp->Status = true;\n    $resp->InnerData = $drinks;\n    return response()->json($resp, 200);\n}\n", "\n    "]], "Tag": "程序设计"}
{"Answer": "```\r\n function DateDiff(beginTime,endTime){\r\n\tvar diff=new Date(endTime).getTime()-new Date(beginTime).getTime();\r\n\tvar days=Math.floor(diff/(24*3600*1000));\r\n\tvar diff1=diff%(24*3600*1000);\r\n\tvar hours=Math.floor(diff1/(3600*1000));\r\n\tvar diff2=diff1%(3600*1000);\r\n\tvar minutes=Math.floor(diff2/(60*1000));\r\n\tvar diff3=diff2%((60*1000));\t\r\n\tvar seconds=Math.round(diff3/1000);\r\n\talert(\" 相差 \"+days+\"天 \"+hours+\"小时 \"+minutes+\" 分钟\"+seconds+\" 秒\");\r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["有两个字符串型的日期时间,怎么取得差值", ["例如  开始时间\"2016-07-10 13:13:13\"  结束时间\"2016-07-11 12:16:44\"", "\n我不想转化成秒之后初多少除多少.  这样后面得出来的时间(前面日期无所谓)会有小数", "\n能不能直接用字符串的形式去判断相差多久?", "\n最后 return  day+\"天\"+hour+\"小时\"+min+\"分\"+sec+\"秒\""]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-comment\"&gt;//假定head_1已经跳转到想要更改的学生地址&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;change&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//char* name,*college,*sex; //是局部变量&amp;#xff0c;函数结束后这些变量的内容会被改变&amp;#xff0c;下同&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//int age, grade;&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;//如果修改前的head_1-&amp;gt;name等元素是malloc分配的&amp;#xff0c;在这里最好先free一下。下面的性别&amp;#xff0c;院系也一样。&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//free(head_1-&amp;gt;name)&lt;/span&gt;\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入更改后学生的姓名为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    head_1-&amp;gt;name &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;));\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,head_1-&amp;gt;name); &lt;span class=\"hljs-comment\"&gt;// scanf(&amp;#34;%s&amp;#34;,&amp;amp;name); name已经是指针&amp;#xff0c;不需要加&amp;amp;&amp;#xff0c;下同&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//head_1-&amp;gt;name &amp;#61; name;  &lt;/span&gt;\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入更改后学生的性别为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    head_1-&amp;gt;sex &amp;#61;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;));\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,head_1-&amp;gt;sex);  &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, &amp;amp;sex);&lt;/span&gt;\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入更改后学生的年龄为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;head_1-&amp;gt;age);   &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;,&amp;amp;age);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//head_1-&amp;gt;age &amp;#61; age;&lt;/span&gt;\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入更改后学生的院系为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    head_1-&amp;gt;college &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;));\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, head_1-&amp;gt;college); &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s&amp;#34;, &amp;amp;college);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//head_1-&amp;gt;college &amp;#61; college;&lt;/span&gt;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;上面是使用指针实现的&amp;#xff0c;如果对指针&amp;#xff0c;malloc有困难&amp;#xff0c;建议还是使用字符数组比较好一些&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;int num; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;学号\nchar name[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;姓名 只是个指针&amp;#xff0c;并没有分配内存&amp;#xff0c;改成name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;] 下同\nchar sex[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;性别\nint age; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;年龄\nchar college[&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;院系\nstruct Student1* &lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;指向下一个学生的指针\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["c语言修改char*型指针指向的中文字符串显示越界", ["比如定义了一个结构体变量为学生，里面的性别，名字等是char*型指针指向中文", "\n\n", "\n", "struct Student1\n{\n\tint num;\t//学号\n\tchar *name;\t//姓名\n\tchar *sex;\t//性别\n\tint age;\t\t//年龄\n\tchar* college;\t\t//院系\n\tstruct Student1* next;\t//指向下一个学生的指针\n};\n\n//假定head_1已经跳转到想要更改的学生地址\nvoid change()\n{\n\tchar* name,*college,*sex;\n\tint age, grade;\n\tprintf(\"请输入更改后学生的姓名为：\");\n\tscanf(\"%s\",&name);\n\thead_1->name = name;\n\tprintf(\"请输入更改后学生的性别为：\");\n\tscanf(\"%s\", &sex);\n\thead_1->sex = sex;\n\tprintf(\"请输入更改后学生的年龄为：\");\n\tscanf(\"%d\",&age);\n\thead_1->age = age;\n\tprintf(\"请输入更改后学生的院系为：\");\n\tscanf(\"%s\", &college);\n    head_1->college = college;\n}", "\n\n", "思路如上，修改年龄等数字就没有问题，但是修改名字，院系等就会出现越界情况，应该如何处理？", "\n\n", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;由于栈空间比较小&amp;#xff0c;不能在函数内定义比较大数组。你可以把比较大的数组定义为全局变量&amp;#xff0c;或动态分配内存。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["字符串长达上限是多少？？", ["我定义了一个1e6的长度的char型，", "用scanf()键入的", "结果不让输入直接退出了", "\n", "\n", "Process exited after 1.853 seconds with return value 3221225725", "请按任意键继续. . .", "\n", "（这是原运行结果"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;169行是上面的哪一行&amp;#xff1f;显然不是169行吧&amp;#xff0c;那里没有void。&lt;br /&gt;main函数上面那个函数少了一个后大括号。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["单片机代码发生错误syntax error near 'void'", [" 单片机电子秤发现错误main.c(169): error C141: syntax error near 'void'", "\n", "\n\n\n#", "include", " ", "\"main.h\"", "\n#", "include", " ", "\"LCD1602.h\"", "\n#", "include", " ", "\"HX711.h\"", "\n#define uchar unsigned ", "char", "  ", "//无符号字符型 宏定义    变量范围0~255", "\n#define uint  unsigned ", "int", "     ", "//无符号整型 宏定义    变量范围0~65535", "\n\n\n#", "include", " ", "\"eeprom52.h\"", "\n", "//定义变量", "\nunsigned ", "char", " KEY_NUM = ", "0", ";   ", "//用来存放按键按下的键值", "\nunsigned long HX711_Buffer = ", "0", ";  ", "//用来存放HX711读取出来的数据", "\nunsigned long Weight_Maopi = ", "0", "; ", "//用来存放毛皮数据", "\nlong Weight_Shiwu = ", "0", ";          ", "//用来存放实物重量", "\nunsigned ", "char", " Max_Value;             ", "//用来存放设置最大值", "\n\nunsigned ", "char", " state = ", "0", ";    ", "//用来存放设置状态", "\nunsigned ", "char", " Blink_Speed = ", "0", ";\n#define Blink_Speed_Max ", "6", "          ", "//该值可以改变设置指针闪烁频率", "\n\n\nuint GapValue= ", "228", ";       ", "//传感器曲率", "\n\nunsigned ", "char", " num1,num2,times; ", "//num1 和 num2  是存储在单片机eeprom内部的。", "\n\nsbit JDQ=P3^", "0", ";\n\n", "//报警值，单位是g", "\n#define AlarmValue ", "100000", "            \n\n\n\n", "/******************把数据保存到单片机内部eeprom中******************/", "\nvoid write", "_eeprom()", "\n{  \n    num1=GapValue/", "256", ";\n    num2=GapValue%", "256", ";\n\n    ", "SectorErase(0x2000)", ";\n    byte", "_write(0x2001,Max_Value)", ";\n    byte", "_write(0x2002,  ", "num1", ")", ";\n    byte", "_write(0x2003,  ", "num2", ")", ";\n\n    byte", "_write(0x2060, ", "a_a", ")", ";    \n}\n\n", "/******************把数据从单片机内部eeprom中读出来*****************/", "\nvoid read", "_eeprom()", "\n{\n    Max_Value = byte", "_read(0x2001)", ";\n    num1   = byte", "_read(0x2002)", ";\n    num2   = byte", "_read(0x2003)", ";\n    \n    a_a      = byte", "_read(0x2060)", ";\n    GapValue= num1*", "256", "+num2;\n}\n\n", "/**************开机自检eeprom初始化*****************/", "\nvoid init", "_eeprom()", "\n{\n    read", "_eeprom()", ";        ", "//先读", "\n    ", "if", "(a_a != ", "150", ")        ", "//新的单片机初始单片机内问eeprom", "\n    {\n       a_a =", "150", ";\n       Max_Value = ", "50", ";\n       GapValue= ", "228", ";\n       write", "_eeprom()", ";\n    }    \n    \n    \n    \n}\n\n\n", "//扫描按键", "\nvoid ", "Scan_Key()", "\n{\n    ", "if", "(KEY1", " == ", "0", " && ", "KEY2 ==", "1", " && ", "KEY3 ==", "1", " )\n    {\n        ", "Delay_ms(5)", ";\n        ", "if", "(KEY1", " == ", "0", " && ", "KEY2 ==", "1", " && ", "KEY3 ==", "1", " )\n        {\n            ", "while", "(KEY1", " == ", "0", " && ", "KEY2 ==", "1", " && ", "KEY3 ==", "1", " );\n            ", "Get_Maopi()", ";\n            ", "Buzzer_Di()", ";\n        }    \n    }\n\n    ", "if", "(KEY2", " == ", "0", " && ", "KEY1 ==", "1", " && ", "KEY3 ==", "1", " )\n    {\n        ", "Delay_ms(5)", ";\n        ", "if", "(KEY2", " == ", "0", " && ", "KEY1 ==", "1", " && ", "KEY3 ==", "1", " )\n        {\n            ", "while", "(KEY2", " == ", "0", " && ", "KEY1 ==", "1", " && ", "KEY3 ==", "1", " );\n            ", "if", "(Max_Value<", "100", ")     { Max_Value++;}\n            write", "_eeprom()", ";       ", "//保存数据", "\n            ", "Buzzer_Di()", ";\n            ", "LCD1602_write_com(0x80+0x40)", ";\n            ", "LCD1602_write_word(", "\"JDQ=\"", ")", ";\n            ", "LCD1602_write_data(Max_Value", "/", "100 + 0x30)", ";\n            ", "LCD1602_write_data(Max_Value%100", "/", "10 + 0x30)", ";\n            ", "LCD1602_write_data(Max_Value%10 + 0x30)", ";\n        }    \n    }\n\n    ", "if", "(KEY3", " == ", "0", " && ", "KEY1 ==", "1", " && ", "KEY2 ==", "1", " )\n    {\n        ", "Delay_ms(5)", ";\n        ", "if", "(KEY3", " == ", "0", " && ", "KEY1 ==", "1", " && ", "KEY2 ==", "1", ")\n        {\n            ", "while", "(KEY3", " == ", "0", " && ", "KEY1 ==", "1", " && ", "KEY2 ==", "1", ");\n            ", "if", "(Max_Value>", "1", ")     { Max_Value--; }\n             write", "_eeprom()", ";       ", "//保存数据", "\n             ", "Buzzer_Di()", ";\n             ", "LCD1602_write_com(0x80+0x40)", ";\n            ", "LCD1602_write_word(", "\"JDQ=\"", ")", ";\n            ", "LCD1602_write_data(Max_Value", "/", "100 + 0x30)", ";\n            ", "LCD1602_write_data(Max_Value%100", "/", "10 + 0x30)", ";\n            ", "LCD1602_write_data(Max_Value%10 + 0x30)", ";\n        }    \n    }\n\n\n   ", "//=======================对实物进行个数估算================================", "\n    ", "if", "( KEY3", " == ", "0", " && ", "KEY2 ==", "0", ")\n    { ", "int", " i;\n        ", "int", " y;\n        \n        ", "Delay_ms(25)", ";\n        ", "if", "( KEY3", " == ", "0", " && ", "KEY2 ==", "0", ")\n        {\n            times=", "0", ";\n            Buzzer =", "0", ";\n            ", "Delay_ms(25)", ";\n            Buzzer =", "1", ";\n        Buzzer=", "1", ";\n        y=Weight_Shiwu/Weight_Maopi;\n            i=", "0", ";\n            ", "while", " (i<y);\n            {i++;}\n\n        ", "_nop_()", ";  \n            \n            ", "LCD1602_write_com(0x80+0x40+11)", ";\n            ", "LCD1602_write_word(", "\"K=\"", ")", ";\n            ", "LCD1602_write_data(", "i", "+0x30)", ";\n        }\n    \n\n        \n       \n        \n    }\n\n\n\n", "//****************************************************", "\n", "//主函数", "\n", "//****************************************************", "\nvoid main", "()", "\n{\n    ", "Init_LCD1602()", ";                        ", "//初始化LCD1602", "\n    init", "_eeprom()", ";                  ", "//读eeprom数据", "\n    ", "LCD1602_write_com(0x80)", ";            ", "//设置LCD1602指针", "\n    ", "LCD1602_write_word(", "\"Welcome to use!\"", ")", ";\n    \n    ", "Get_Maopi()", ";\n    ", "Get_Maopi()", ";\n    ", "Delay_ms(2000)", ";         ", "//延时2s", "\n    ", "Get_Maopi()", ";\n    ", "Get_Maopi()", ";                ", "//称毛皮重量    //多次测量有利于HX711稳定", "\n    ", "LCD1602_write_com(0x01)", ";    ", "//清屏", "\n    \n    ", "LCD1602_write_com(0x80+0x40)", ";\n    ", "LCD1602_write_word(", "\"JDQ=\"", ")", ";\n    ", "LCD1602_write_data(Max_Value", "/", "100 + 0x30)", ";\n    ", "LCD1602_write_data(Max_Value%100", "/", "10 + 0x30)", ";\n    ", "LCD1602_write_data(Max_Value%10 + 0x30)", ";\n    ", "LCD1602_write_word(", "\"Kg\"", ")", ";\n           Buzzer =", "0", ";\n            ", "Delay_ms(25)", ";\n            Buzzer =", "1", ";\n\n    ", "while", "(", "1", ")\n    {\n       \n        ", "Scan_Key()", ";\n        ", "Get_Weight()", ";        \n    \n        ", "//显示当前重量", "\n        ", "LCD1602_write_com(0x80)", ";\n        ", "LCD1602_write_word(", "\"Weight=\"", ")", ";\n        ", "LCD1602_write_data(Weight_Shiwu", "/", "100000 + 0x30)", ";\n        ", "LCD1602_write_data(Weight_Shiwu%100000", "/", "10000 + 0x30)", ";\n        ", "LCD1602_write_data(Weight_Shiwu%10000", "/", "1000 + 0x30)", ";\n        ", "LCD1602_write_data('.')", ";\n        ", "LCD1602_write_data(Weight_Shiwu%1000", "/", "100 + 0x30)", ";\n         ", "LCD1602_write_data(Weight_Shiwu%100", "/", "10 + 0x30)", ";\n        ", "LCD1602_write_data(Weight_Shiwu%10 + 0x30)", ";    \n        \n        ", "LCD1602_write_word(", "\"Kg\"", ")", ";\n\n    \n        \n        ", "//超限报警", "\n        ", "if", "(Weight_Shiwu/", "1000", " >= Max_Value", " || ", "Weight_Shiwu >= AlarmValue)            ", "//超过设置最大值或者传感器本身量程最大值报警    ", "\n        {\n            JDQ = ", "0", "; Buzzer = ", "0", ";    ", "//JDQ是代表继电器控制端。Buzzer代表蜂鸣器提示。这里是同步运行的状态。如果需要不同步，请自己修改这部分程序。", "\n        }\n        ", "else", "\n        {\n            JDQ = ", "1", "; Buzzer = ", "1", ";\n        }\n\n        times++;\n        ", "if", "(times>=", "50", ")\n        {\n            times=", "0", ";\n            ", "LCD1602_write_com(0x80+0x40+11)", ";\n            ", "LCD1602_write_word(", "\"     \"", ")", ";\n           \n        }\n    }\n}\n\n\n\n\n", "//****************************************************", "\n", "//称重", "\n", "//****************************************************", "\nvoid ", "Get_Weight()", "\n{\n    Weight_Shiwu = ", "HX711_Read()", ";\n    Weight_Shiwu = Weight_Shiwu - Weight_Maopi;        ", "//获取净重", "\n    ", "if", "(Weight_Shiwu >= ", "0", ")            \n    {    \n        Weight_Shiwu = (unsigned long)((", "float", ")(Weight_Shiwu/GapValue)*", "10", ");     ", "//计算实物的实际重量", "\n    }\n    ", "else", "\n    {\n        Weight_Shiwu = ", "0", ";\n    }\n    \n}\n\n", "//****************************************************", "\n", "//获取毛皮重量", "\n", "//****************************************************", "\nvoid ", "Get_Maopi()", "\n{\n    Weight_Maopi = ", "HX711_Read()", ";    \n} \n\n\n", "//****************************************************", "\n", "//MS延时函数(12M晶振下测试)", "\n", "//****************************************************", "\nvoid ", "Delay_ms(", "unsigned", " ", "int", " ", "n", ")", "\n{\n    unsigned ", "int", "  i,j;\n    ", "for", "(i=", "0", ";i<n;i++)\n        ", "for", "(j=", "0", ";j<", "123", ";j++);\n}\n\n", "//****************************************************", "\n", "//蜂鸣器程序", "\n", "//****************************************************", "\nvoid ", "Buzzer_Di()", "\n{\n    Buzzer = ", "0", ";\n    ", "Delay_ms(10)", ";\n    Buzzer = ", "1", ";\n    ", "Delay_ms(10)", ";\n}\n", "\n", "个人怀疑问题出在对实物进行个数估算的模块内，加上它以后才显示的错误"]], "Tag": "程序设计"}
{"Answer": "字符串替换        \r\nString str =\" 2(10)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)\";\r\nString result = str.replace（“（”，“”）.replace.(\")\", \"\").replace(\"+\", \"\");", "Konwledge_Point": "字符型", "Question": ["提取字符串中多位数字", ["我只会提取单个字符串，多个字符就不行了", "\n 2(10)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)", "\n目标把取出括号里面的数字", "\n例如10需要有通用型"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;new是一张表吗&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["SQl中insert语句报错", ["我的姓名和工厂是要字符型的sql中要加‘ ’", "但是我加单引号的话会直接把这个new.name直接输入到购物车吧~", "\n", "DELIMITER", " $$", "\n\n", "CREATE", "\n    ", "/*[DEFINER = { user | CURRENT_USER }]*/", "\n     ", "TRIGGER", " `addtoshopcar` ", "BEFORE", " ", "INSERT", " ", "ON", " `shopcar` \n    ", "FOR", " ", "EACH", " ", "ROW", " ", "BEGIN", "\n    ", "DECLARE", " flag ", "INT", " ", "DEFAULT", " ", "0", ";\n    ", "SELECT", " ", "1", " ", "INTO", " flag ", "FROM", " shopcar ", "WHERE", " shopcar.id=", "new", ".id;\n    ", "IF", " flag<", "0", "\n    ", "INSERT", " ", "INTO", " shopcar(id,", "NAME", ",dustry,price) \n    ", "VALUES", "(", "new", ".id,", "new", ".name,", "new", ".dustry,", "new", ".price);\n     ", "ELSE", "\n    ", "UPDATE", "  shopcar ", "SET", " shopcar.number=shopcar.number+", "1", " \n    ", "WHERE", " shopcar.id=", "new", ".id ", "AND", " ", "EXISTS", "( ", "SELECT", " * ", "FROM", " shopcar ", "WHERE", " id=", "new", ".id);\n   ", "END", " ", "IF", "\n    ", "END", "$$", "\n\n", "DELIMITER", " ;\n", "\n", "代码的报错是这样的", "\n", "Query: ", "CREATE", " ", "/*[DEFINER = { user | CURRENT_USER }]*/", " ", "TRIGGER", " ", "`addtoshopcar`", " BEFORE ", "INSERT", " ", "ON", " ", "`shopcar`", " ", "FOR", " ", "EACH", " ROW ", "BEGIN", " ", "DECLARE", " flag...\n\nError Code: ", "1064", "\nYou have an error ", "in", " your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '", "INSERT", " ", "INTO", " shopcar(id,NAME,dustry,price) \n    ", "VALUEs", "(new.id,", "'new.name'", ",", "'new.dus'", " at line ", "8", "\n\nExecution Time : ", "0", " sec\nTransfer Time  : ", "0", " sec\nTotal Time     : ", "0", " sec\n---------------------------------------------------\n"]], "Tag": "程序设计"}
{"Answer": "没看明白楼主想表达什么", "Konwledge_Point": "字符型", "Question": ["索引无效", ["1、WHERE字句的查询条件里有不等于号（WHERE column!=...），MYSQL将无法使用索引 ", "\n\n", "\n2、类似地，如果WHERE字句的查询条件里使用了函数（如：WHERE DAY(column)=...），MYSQL将无法使用索引 ", "\n\n", "\n4、如果WHERE子句的查询条件里使用了比较操作符LIKE和REGEXP，MYSQL只有在搜索模板的第一个字符不是通配符的情况下才能使用索引。比如说，如果查询条件是LIKE 'abc%',MYSQL将使用索引；如果条件是LIKE '%abc'，MYSQL将不使用索引。 ", "\n\n", "\n7、索引有用的情况下就太多了。基本只要建立了索引，除了上面提到的索引不会使用的情况下之外，其他情况只要是使用在WHERE条件里，ORDER BY 字段，联表字段，一般都是有效的。", "\n\n", " ", "\n\n", "如何屏蔽索引", "\n　　", "\n　　语句的执行计划中有不良索引时，可以人为地屏蔽该索引，方法：", "\n　　", "\n　　。数值型：在索引字段上加0，例如", "\n　　select * from emp where emp_no+0 = v_emp_no;", "\n　　", "\n　　。字符型：在索引字段上加‘’，例如", "\n　　select * from tg_cdr01 where msisdn||’’=v_msisdn;", "\n\n", " ", "\n\n", "\n奇怪：", "\n\n", "select * from t_resource  where id > 1467;ok", "\nselect * from t_resource  where id > 0;--索引无效", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;case &amp;#39;J&amp;#39;:和 case &amp;#39;K&amp;#39;: J和K应该是大写&lt;br /&gt;count变量是字符类型不能赋值成数值和进行数值运算&lt;br /&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; numberjie(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; k)\n{\n    &lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; sum3 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; k; i&amp;#43;&amp;#43;)\n    {\n        sum3 &amp;#61; sum3*i;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sum3;\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; sum1 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, sum2 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    string &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;;\n    string poke;\n    string &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; s;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (n--)\n    {\n        cin &amp;gt;&amp;gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.substr(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n        poke &amp;#61; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.substr(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#34;&lt;/span&gt;)\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;10&amp;#34;&lt;/span&gt;)\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;J&amp;#34;&lt;/span&gt;)\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Q&amp;#34;&lt;/span&gt;)\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;K&amp;#34;&lt;/span&gt;)\n            s &amp;#61; &lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            s &amp;#61; &lt;span class=\"hljs-keyword\"&gt;count&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (poke &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;方块&amp;#34;&lt;/span&gt;)\n        {\n            sum2 &amp;#43;&amp;#61; numberjie(s);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (poke &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;红桃&amp;#34;&lt;/span&gt;)\n        {\n            sum1 &amp;#43;&amp;#61; s * &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (poke &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;黑桃&amp;#34;&lt;/span&gt;)\n        {\n            sum1 &amp;#43;&amp;#61; s * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (poke &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;梅花&amp;#34;&lt;/span&gt;)\n        {\n            sum2 &amp;#43;&amp;#61; s % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n    }\n\n    cout &amp;lt;&amp;lt; sum1 &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &amp;lt;&amp;lt; sum2 &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/447209358446147.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "字符型", "Question": ["小丑谜题（2）小丑绑架了詹姆斯·戈登局长。  赶到现场时，布鲁斯只发现了小丑留下的若干张扑克。根据阿福的分析，扑克牌记录了戈登局长的位置：", ["问题遇到的现象和发生背景 小丑谜题（2）", "\n", "描述", "\n", "小丑绑架了詹姆斯·戈登局长。", "\n", "赶到现场时，布鲁斯只发现了小丑留下的若干张扑克。根据阿福的分析，扑克牌记录了戈登局长的位置：", "\n", "扑克牌有四个花色：黑桃、红桃、方块、梅花", "四个花色的处理：黑桃将数字乘3、红桃将数字乘5、方块取数字的阶乘、梅花取数字整除10的模", "所有黑桃和红桃处理后得到的数字相加，是哥谭市的街区号", "所有方块和梅花处理后得到的数字相加，是哥谭市的门牌号", "比如：方块5 红桃3 黑桃5 黑桃A 梅花Q", "\n", "得到的地址是哥谭市33街区122号。", "\n", "蝙蝠侠立刻出击，解救了戈登局长。然而，小丑在那里留下了更多的扑克，等着布鲁斯去破解……", "\n", "输入", "输入有2行", "\n", "第一行整数n（n < 56)，代表一共有n张扑克给出", "\n", "第二行有n张扑克，扑克用花色+数字记录，每张扑克用空格分隔", "\n", "输出", "输出1行，内容是街区+空格+门牌", "\n", "输入样例 1 ", "\n", "5", "方块5 红桃3 黑桃5 黑桃A 梅花Q", "输出样例 1", "\n", "33 122", "提示", "\n", "出现的扑克牌不会重复，扑克牌字母是大写", "\n", "问题相关代码，请勿粘贴截图 #include", "\n", "#include", "using namespace std;", "\n", "int numberjie(char* k)", "{", "    char sum3=1;", "    for(int i=1;i<=", "k;i++)", "    {", "        sum3=sum3", "i;", "    }", "    return sum3;", "}", "\n", "int main()", "{", "    int n;", "    char sum1=0,sum2=0;", "    string poke;", "    char count;", "    char s;", "    cin>>n;", "    while(n--)", "    {", "        cin>>poke>>count;", "        switch(count)", "        {", "            case 'A':", "                count=1;", "                break;", "            case 'j':", "                count=11;", "                break;", "            case 'Q':", "                count=12;", "                break;", "            case 'k':", "                count=13;", "                break;", "            default:", "            break;", "\n", "    }\n    ", "if", "(", "poke", "==", "\"方块\"", ")\n    {\n        s= numberjie(&count)", ";", "\n        sum2+=s", "; ", "\n\n    }\n    ", "else", " ", "if", "(", "poke", "==", "\"红桃\"", ") \n    {\n        sum1+=count*", "5", ";", "\n    } \n    ", "else", " ", "if", "(", "poke", "==", "\"黑桃\"", ")\n    {\n        sum1+=count*", "3", ";", "\n    }\n    ", "else", " ", "if", "(", "poke", "==", "\"梅花\"", ")\n    {\n        sum2+=count/", "10", ";", "\n     } \n    \n\n\n    \n}\n\ncout<<sum1<<", "' '", "<<sum2<<endl", ";", "\n\n", "system", "(", "\"pause\"", ")", ";", "\n", "system", "(", "\"cls\"", ")", "; ", "\n", "return", " ", "0", ";", "\n", "\n", " } ", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "//count 有数字型也有字符型，涉及字符转化为数字型", "\n", "我想要达到的结果", "\n", "如方块5 之间没有空格间隔 字符可以转化为数字型"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我大概知道问题了&amp;#xff0c;你原来再excel读过来的数据&amp;#xff0c;最终转换成了一个numpy的数组。而我们现在的结果还是一个列表。&lt;/p&gt;\n\n&lt;p&gt;你可以尝试在现在的基础上添加以下内容&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;import numpy as np&lt;/p&gt;\n\n&lt;p&gt;x_test &amp;#61; np.array(x_test)&lt;/p&gt;\n\n&lt;p&gt;如果还没成功可以继续交流。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python读取csv文件并将字符转化为浮点型", ["使用python读取csv文件，直接打印是字符", "\n\n", "\n", "data_test = pd.read_csv('C:/Users/29291/Desktop/新建文件夹/815-18-15-15.csv', header=None)\nx_test =data_test.loc[262:1189, 0:0].values\nprint(x_test )", "\n\n", "打印结果如下：", "\n\n", "\n", "[['450.538']\n ['450.945']\n ['451.352']\n ['451.758']]", "\n\n", "想要去掉单引号，转化为浮点型，使用", "\n\n", "\nx_test= map(float, x_test)\nx_test= list(x_test)", "\n\n", "或者", "\n\n", "\nx_test=[float(f) for f in x_test]", "\n\n", "替换，结果单引号是去掉了，却变成了横着的列表，我需要原来竖着的列表，该怎么修改啊？", "\n\n", "[450.538, 450.945, 451.352, 451.758]", "\n\n", "我希望变成这样，请老师给出详细的代码修改，不要只给一个方向，谢谢", "\n\n", "[[450.538]", "\n [450.945]", "\n [451.352]", "\n [451.758]]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;11行这个改为 j &amp;#61; (p3 &amp;#61;&amp;#61; 1 ? be &amp;#43; 1 : af - 1)&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["这段由C++改成C语言的代码为什么编译有问题", ["问题遇到的现象和发生背景", "\n", "\n", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#include<stdio.h>", "\n", "#include<stdlib.h>", "\nint p1, p2, p3, i = ", "0", ", k;\nchar ch[", "300", "], be, af, f, j, p;", "//", "p用于输出; \nint main() {\n    scanf(", "\"%d%d%d%s\"", ", &p1, &p2, &p3, ch);\n    ", "while", " (ch[i]) {", "//", "当ch[i]有值时;\n        be = ch[i - ", "1", "]; af = ch[i + ", "1", "]; f = ch[i];", "//", "f存储ch[i],便于判断; \n        ", "if", " (f == ", "'-'", " && af > be && (be >= ", "'0'", " && af <= ", "'9'", " || be >= ", "'a'", " && af <= ", "'z'", ")) \n        {", "//", "意思是ch[i]若为", "'-'", ",就判断其前后是否满足条件，满足进入循环; \n            ", "for", " (p3==", "1", "?j=be+", "1", ":j = af - ", "1", "; p3 == ", "1", " ? j<af : j>be; p3 == ", "1", " ? j++ : j--) \n            {\n                p = j;", "//", "j是整形变量，p是字符型变量，这样是将p赋值为ASCII码为j的字符; \n                ", "if", " (p1 == ", "2", ")", "//", "是否大写; \n                    p = (p >= ", "'a'", ") ? p - ", "32", " : p;", "//", "如果是字母就转成大写 \n                ", "else", " ", "if", " (p1 == ", "3", ") p = ", "'*'", ";", "//", "是否输出", "'*'", " \n                ", "for", " (k = ", "0", "; k < p2; k++)", "//", "输出p2个 \n                    printf(", "\"%c\"", ", p);\n            }\n        }\n        ", "else", "\n            printf(", "\"%c\"", ", f);", "//", "如果ch[i]是非", "'-'", "或者其前后不满足条件，就原样输出;\n        i++;", "//", "一定要放在后面，不然会出错QAQ;\n    }\n    return ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "没有办法运行"]], "Tag": "程序设计"}
{"Answer": "```\r\n public static byte[] hexStringToBytes(String hexString) {  \r\n\t    if (hexString == null || hexString.equals(\"\")) {  \r\n\t        return null;  \r\n\t    }  \r\n\t    hexString = hexString.toUpperCase();  \r\n\t    if(hexString.indexOf(\"0X\")&gt;=0) hexString=hexString.replace(\"0X\", \"\");\r\n\t    int length = hexString.length() / 2;  \r\n\t    char[] hexChars = hexString.toCharArray();  \r\n\t    byte[] d = new byte[length];  \r\n\t    for (int i = 0; i &lt; length; i++) {  \r\n\t        int pos = i * 2;  \r\n\t        d[i] = (byte) (charToByte(hexChars[pos]) &lt;&lt; 4 | charToByte(hexChars[pos + 1]));  \r\n\t    }  \r\n\t    return d;  \r\n\t}  \r\n\tprivate static byte charToByte(char c) {  \r\n\t    return (byte) \"0123456789ABCDEF\".indexOf(c);  \r\n\t}  \r\n\t/**\r\n\t * @param args\r\n\t */\r\n\tpublic static void main(String[] args) {\r\n\t\t// TODO Auto-generated method stub\r\n        byte[] by = hexStringToBytes(\"0x030x040x05\");\r\n        byte[] by2 = new byte[]{(byte) 0x03,(byte) 0x04,(byte) 0x05};\r\n\t\t\t\t//这两个by和by2是一致的\r\n\t}\r\n```", "Konwledge_Point": "字符型", "Question": ["java里怎字符串“0xDE\"转为字节型的0xDE", ["把从SD卡里取出来的字符串“0x03 0x04 0x05\"转为（byte）0x03 (byte)0x03"]], "Tag": "程序设计"}
{"Answer": "我想读取一种文件,我在读之前并不知道它是二进制,还是字符型的\r\n\r\n几乎任何文件都是属于二进制的文件，懂么，所以只要用读取二进制的文件流读取文件就一定不会有问题，\r\n\r\n因为计算机本身存储文件就是以二进制的，\r\n字符型只是在二进制之上的一层封装", "Konwledge_Point": "字符型", "Question": ["为什么用Reader复制不了jpg图片", ["今天测试了下,想复制一张图片,可为什么只能用FileInputStream与FileOutputStream复制才能成功.", "\n而改用再在此基础上包装一层InputStreamReader与OutputStreamWriter反而就不行了.不太理解,一个一个字节读出来", "\n为什么一次性改用一次性读出二个字节即按字符读反而不行.以前一直认为只要FileInputStream能搞定的,FileReader就能搞定,", "\n原来我错了.还请大家帮忙解释下,小弟实在不不理解", "\n\n", "代码如下:", "\n\n", "import java.io.File;", "\nimport java.io.FileInputStream;", "\nimport java.io.FileOutputStream;", "\nimport java.io.InputStreamReader;", "\nimport java.io.OutputStreamWriter;", "\n\n", "public class TestInputStream {", "\n\n", "/**\n * @param args\n */\npublic static void main(String[] args) {\n    File file=new File(\"d:\\\\test.jpg\");\n    try{\n        FileInputStream in=new FileInputStream(file);\n        InputStreamReader re=new InputStreamReader(in);\n        FileOutputStream out=new FileOutputStream(\"d:\\\\a.jpg\");\n        OutputStreamWriter wr=new OutputStreamWriter(out);\n\n        int i=0;\n        char[]ch=new char[10];\n        while((i=re.read(ch))!=-1){\n            System.out.println(ch);\n            wr.write(ch);\n            ch=new char[10];\n        }\n    re.close();\n    wr.close();\n    }catch(Exception e){\n        e.printStackTrace();\n    }\n\n}\n", "\n\n", "}", "\n\n", "[b]问题补充：[/b]", "\n还是有点模糊,那假如我想读取一种文件,我在读之前并不知道它是二进制,还是字符型的,即不知道他是音频文件,图型文件,还是文件,那我应该用什么样的方法呢.", "\n估计我是对java读取文件的时候怎样编码,怎样解码,其过程不是很清楚.所以才会对上面的理解有些模糊.还请大家详细帮我解释下上面二个问题(1,不知道文件类型怎样读取文件,2:java编码与解码的过程是什么样的)"]], "Tag": "程序设计"}
{"Answer": "虽然没说清楚出的是什么类型的错，但是用malloc（）动态申请的内存空间使用之前最好用memset（）初始化一下，不然程序容易崩溃。", "Konwledge_Point": "字符型", "Question": ["树的遍历与计数中运用队列来实现", ["#include", "\n#include", "\n#include", "\n#include", "\n#define MAX_TREE_SIZE 100", "\n#define TElemType int", "\n#define QElemType int", "\n#define Status int", "\n#define OVERFLOW -2", "\n#define OK 1", "\n#define ERROR 0", "\ntypedef struct BiTNode//结点结构", "\n{", "\n    QElemType data;", "\n    int parent;//双亲位置域", "\n}PTNode;", "\n\n", "typedef struct{//树结构", "\n    PTNode node[MAX_TREE_SIZE];", "\n    int n;//根的位置和结点数", "\n    char r;", "\n}PTree;", "\n\n", "typedef struct{//队列的链式存储", "\n    TElemType data;", "\n    struct *next;", "\n}QNode,*QueuePtr;", "\n\n", "typedef struct{", "\n    QueuePtr front;//队头指针", "\n    QueuePtr rear;//队尾指针", "\n}LinkQueue;", "\n\n", "Status InitQueue(LinkQueue Q)//构造一个空队列", "\n{", "\n    Q.front=Q.rear=(QueuePtr)malloc(sizeof(QNode));", "\n    if(!Q.front)exit(OVERFLOW);", "\n    Q.front->next=NULL;", "\n    return OK;", "\n}", "\n\n", "Status EnQueue(LinkQueue Q,PTree qq){//入队", "\n    QNode *pp;", "\n    pp=(QueuePtr)malloc(sizeof(QNode ));", "\n    if(!pp) exit(OVERFLOW);", "\n    pp->data=qq.r ;", "\n    pp->next=NULL;", "\n    Q.rear ->next =pp->next;", "\n    Q.rear =pp;", "\n    return OK;", "\n}", "\n\n", "Status DeQueue(LinkQueue Q,PTree qq){//出队", "\n    QNode *pp;", "\n    if(Q.front ==Q.rear ) return ERROR;", "\n    Q.front->next=pp->next ;", "\n    qq.r =pp->data;", "\n    Q.front->next =pp->next ;", "\n    if(Q.rear ==pp) Q.rear =Q.front ;", "\n    free(pp);", "\n    return OK;", "\n}", "\n\n", "Status QueueEmpty(LinkQueue Q){", "\n    if(Q.rear ==Q.front ) return OK;", "\n    else return ERROR;", "\n}", "\n\n", "void ClearTree(PTree *T)//构造空树", "\n{", "\n    T->n=0;", "\n}", "\n\n", "void CreateTree(PTree ", "T)//构造树", "\n{", "\n    LinkQueue Q;", "\n    PTree p,qq;", "\n    int i,j,l;", "\n//  qq=(PTree )malloc(sizeof(PTNode ));", "\n    char c[MAX_TREE_SIZE];/", " 临时存放孩子结点数组 ", "/", "\n    InitQueue(Q);/", " 初始化队列 ", "/", "\n    printf(\"请输入根结点（字符型,空格为空）：\");", "\n    scanf(\"%c%*c\",&T->node[0].data);/", " 根结点序号为0，%*c吃掉回车符 ", "/", "\n    if(!T->node[0].data)/", " 非空树 ", "/", "\n    {", "\n        T->node[0].parent=-1;/", " 根结点无双亲 ", "/", "\n        qq.r=T->node[0].data;", "\n        qq.n=0;", "\n        EnQueue(Q,qq);/", " 入队此结点 ", "/", "\n        while(i<MAX_TREE_SIZE&&QueueEmpty(Q))/", " 数组未满且队不空 ", "/", "\n        {", "\n            DeQueue(Q,qq); /", " 出队一个结点 ", "/", "\n            printf(\"请按长幼顺序输入结点%c的所有孩子: \",qq.r);", "\n            gets(c);", "\n            l=strlen(c);", "\n            for(j=0;j\n            {", "\n                T->node[i].data=c[j];", "\n                T->node[i].parent=qq.n;", "\n                p.r=c[j];", "\n                p.n=i;", "\n                EnQueue(Q,p); /", " 入队此结点 ", "/", "\n                i++;", "\n            }", "\n        }", "\n        if(i>MAX_TREE_SIZE)", "\n        {", "\n            printf(\"结点数超过数组容量\\n\");", "\n            exit(OVERFLOW);", "\n        }", "\n        T->n=i;", "\n    }", "\n    else", "\n        T->n=0;", "\n}", "\n//===== 判断树是否为空 =====", "\n//", "\n//Status TreeEmpty(PTree *T)", "\n//{ /", " 初始条件：树T存在。操作结果：若T为空树，则返回TRUE，否则返回FALSE */", "\n//  return T->n==0;", "\n//}", "\nvoid main(){", "\n    PTree *T1;", "\n    T1=(PTree *)malloc(sizeof(PTNode ));", "\n    ClearTree(T1);", "\n    CreateTree(T1);", "\n}", "\n只写了这么一点，运行起有错，，求破，，"]], "Tag": "程序设计"}
{"Answer": "头文件粘贴的时候掉了，#include''iostream''和include''cstdio''", "Konwledge_Point": "字符型", "Question": ["c++链栈问题，求大神，大一无力啊", ["程序运行的时候出错，自己弄了好久不知道怎么办，百度了也不行#include", "\n#include", "\nusing namespace std;", "\n\n", "enum error_code{success,underflow,overflow};   //定义枚举", "\nchar opr[]={'+','-','*','/','(',')','#'};", "\nstruct node{", "\n    char data0;", "\n    int data1;", "\n    node *next;", "\n};", "\nint comp[7][7]=       //优先级矩阵的实现", "\n{", "\n{2,2,1,1,1,2,2},", "\n{2,2,1,1,1,2,2},", "\n{2,2,2,2,1,2,2},", "\n{2,2,2,2,1,2,2},", "\n{1,1,1,1,1,3,0},", "\n{0,0,0,0,0,0,0},", "\n{1,1,1,1,1,0,3}};", "\nclass stack0{        //栈的实现", "\npublic: ", "\n    stack0();", "\n    bool empty() const;     //判空", "\n    error_code get_top0(char &x);       //运算符取顶", "\n    error_code push0(const char x);    //运算符压栈", "\n    error_code pop0(char&op);       //运算符弹栈", "\n    void dest();", "\nprivate:", "\n    int count;      //辅助空间", "\n    node *top;", "\n};", "\n\n", "class stack1{        //栈的实现", "\npublic: ", "\n    stack1();", "\n    bool empty() const;     //判空", "\n    error_code get_top1(double &x);   //操作数取顶", "\n    error_code push1(const double x);//操作数压栈", "\n    error_code pop1(double&a);     //操作数弹栈", "\n    void dest();", "\nprivate:", "\n    int count;      //辅助空间", "\n    node *top;", "\n\n", "};", "\n\n", "stack0::stack0() {count=0;top=0;}   //初始化", "\nstack1::stack1() {count=0;top=0;}   //初始化", "\nvoid stack0::dest()", "\n{", "\n    node *u=new node;", "\n    while(top)", "\n    {", "\n        u=top;", "\n        top=top->next;", "\n        delete u;", "\n    }", "\n}", "\nvoid stack1::dest()", "\n{", "\n    node *u=new node;", "\n    while(top)", "\n    {", "\n        u=top;", "\n        top=top->next;", "\n        delete u;", "\n    }", "\n}", "\n\n", "bool stack0::empty()const{", "\n    return count==0;", "\n}", "\n\n", "bool stack1::empty()const{", "\n    return count==0;", "\n}", "\n\n", "error_code stack0::get_top0(char &x) {", "\n    if(empty()) return underflow;", "\n    x=top->data0;", "\n    return success; ", "\n}", "\n\n", "error_code stack1::get_top1(double &x) {", "\n    if(empty()) return underflow;", "\n    x=top->data1;", "\n    return success; ", "\n}", "\n\n", "error_code stack0::push0(const char x){", "\n    node *s=new node;", "\n    s->data0=x;", "\n    s->next=top;", "\n    top=s;", "\n    count++;", "\n    return success;", "\n\n", "}", "\nerror_code stack1::push1(const double x){", "\n    node *s=new node;", "\n    s->data1=x;", "\n    s->next=top;", "\n    top=s;", "\n    count++;", "\n    return success;", "\n\n", "}", "\nerror_code stack0::pop0(char&op){", "\n    if(empty()) return underflow;", "\n    else{", "\n    node *u=new node;", "\n    u=top;", "\n    top->next=u->next;", "\n    delete u;", "\n    count--;", "\n    return success;", "\n    }", "\n}", "\nerror_code stack1::pop1(double&a){", "\n    if(empty()) return underflow;", "\n    else{node *u=new node;", "\n    u=top;", "\n    top->next=u->next;", "\n    delete u;", "\n    count--;", "\n    return success;", "\n    }", "\n}", "\n\n", "char cp(char ch1,char ch2)     //比较两个运算符的优先级函数", "\n{", "\n    int i,m,n;", "\n    char prv;", "\n    int prio;", "\n    for(i=0;i\n    {", "\n        if(ch1==opr[i])", "\n            m=i;", "\n        if(ch2==opr[i])", "\n            n=i;", "\n    }", "\n    prio=comp[m][n];", "\n    switch(prio){", "\n    case 2:", "\n        prv='>';", "\n        break;", "\n    case 3:", "\n        prv='=';", "\n        break;", "\n    case 1:", "\n        prv='<';", "\n        break;", "\n    case 0:", "\n        prv='@';", "\n        cout<<\"wrong.\"<\n        break;", "\n    }", "\nreturn prv;   //返回'>'  '>'  '='", "\n}", "\n\n", "double js(double a,char op,double b){   //将弹栈的数进行运算", "\n    double result;", "\n    switch(op){", "\n    case '+':", "\n        result=a+b;", "\n        break;", "\n    case '-':", "\n        result=b-a;", "\n        break;", "\n    case '*':", "\n        result=a*b;", "\n        break;", "\n    case '/':", "\n        result=b/a;", "\n        break;", "\n    }", "\n    return result;", "\n}", "\nbool ifopt(char ch)   //判断是否为字符", "\n{", "\n    for(int i=0;i<7;i++)", "\n    {", "\n        if(ch==opr[i])", "\n            return true;", "\n    }", "\n    return false;", "\n}", "\n\n", "double jsq()   //计算的主要功能的实现", "\n{", "\n    char op,i=0,*str,x='#';", "\n    double a,b,temp,num;", "\n    stack0 operater;stack1 object;  //创建类对象", "\n    operater.push0('#');   //提前将#压栈", "\n    cout<<\"input and end with the #\"<<endl;", "\n    str=(char*)malloc(40*sizeof(char));  //习惯用c语言的方式", "\n    gets(str);   //读取字符", "\n\n", "while(str[i]!='#'||x!='#'){  //判断条件\n\n    if(!ifopt(str[i])){  //将字符型的数转化成double型并压栈\n        num=str[i]-'0';\n        i++;\n        while(!ifopt(str[i])){\n            num=num*10+str[i]-'0';\n            i++;\n        }\n     object.push1(num);\n    }\n    else{\n        switch(cp(x,str[i]))  \n        {\n        case '<':\n            operater.push0(str[i]);\n            i++;\n            break;\n        case '=':\n            operater.pop0(x);\n            i++;\n            break;\n        case '>':\n            operater.pop0(op);\n            object.pop1(a);\n            object.pop1(b);\n            temp=js(a,op,b);\n            object.push1(temp);\n            break;      \n        }\n    }operater.get_top0(x); //取顶\n}\nobject.get_top1(temp);\nreturn temp;  //返回结果\n//object.dest();\n//operater.dest();\n", "\n\n", "}", "\n\n", "int main()//主函数", "\n{", "\n\n", "double result=jsq();\ncout<<result<<endl;\nreturn 0;\n", "\n\n", "}", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;while (true)一直为真&amp;#xff0c;你没有跳出循环的语句&lt;br /&gt;改成这样就行了&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n        cin &amp;gt;&amp;gt; a;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;您输入的数字是&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/635862871136186.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c++中通过cin将字符串传给int类型回怎么样？", ["我首先定义一个int类型的变量a，通过cin传入一个字符串企图赋值给这个变量a，我知道a会被赋值为0，但下面的这段代码为什么会一直无限循环呢？", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a;\n    ", "while", " (", "true", ")\n    {\n        cout << ", "\"请输入一个数字\"", " << endl;\n        cin >> a;\n        cout << ", "\"您输入的数字是：\"", " << a << endl;\n    }\n}\n", "\n", "输出的结果是："]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第10行修改为&amp;#xff1a;scanf_s(&amp;#34;%s&amp;#34;,str1,5);&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["字符串大小写转换，scanf_s显示有问题", ["字符串大小写转化，生产解决方案之后，显示没错误，但是有警告，就是scanf_s有问题，但之前用没出现过这种情况，求指教。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Integer.toString()?用这个的话可以&amp;#xff0c;底层在toString的时候会校验你的值&amp;#xff0c;如果是负数加负号&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/441400031566193.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["JAVA：利用toString将整形转成字符串型，会有正负的显示吗？", ["利用toString将整形转成字符串型，会有正负的显示吗？", "就是比如-5，转成字符串型后5前面会有“-”吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char str1 str2都是数组&amp;#xff0c;没有初始化。他们不能进行&amp;#43;操作&amp;#xff0c;&amp;#43;操作其实是2个指针相加。&lt;br /&gt;main中没有调用charsort。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["合并字符串并按照阿斯克码顺序输出", ["#include ", "#include ", "using namespace std;", "\n", "void charSort(char* s);", "int main()", "{", "    char str1[], str2[];", "    cin.getline(str1, 20, '\\n');", "    cin.getline(str2, 20, '\\n');", "    str1 += str2;", "}", "\n", "void charSort(char* s)", "{", "    int i, j, min, len = strlen(s);", "    for (i = 0; i < len - 1; i++)", "    {", "        min = i;", "        for (j = i + 1; j < len; j++)", "            if (s[j] < s[min]) min = j;", "        if (min != i)", "        {", "            char c = s[i];", "            s[i] = s[min];", "            s[min] = c;", "        }", "    }", "}", "怎么合并两个char型呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;D&lt;br /&gt;返回的类型取决于序列的类型&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/820463828536160.png\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;有帮助请&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["关于#python#的问题，请各位专家解答！", []], "Tag": "程序设计"}
{"Answer": "char[] ch = textBox1.Text.ToArray();", "Konwledge_Point": "字符型", "Question": ["C#中我想把textBox输入的字符录入到一个char型数组中，请问这要怎么做？", ["我希望每一个字符能成为数组ch的一个元素，尝试着用split，但是不行，请问这要怎么办", "\n                private void textBox1_TextChanged(object sender, EventArgs e)", "\n        {", "\n        }", "\n        private void button1_Click(object sender, EventArgs e)", "\n        {", "\n                            char[] ch = textBox1.Text.Split(\"\");"]], "Tag": "程序设计"}
{"Answer": "用的什么语言\r\nJava C#等都有replace语句，大同小异\r\n\r\n不过引号需要转义。\r\n\r\n\r\n```\r\n string s = s.Replace(\"\\\"\", \"\");\r\n```", "Konwledge_Point": "字符型", "Question": ["怎么去掉数据库中读出的数据带的引号", ["要从数据库中读出字符串型数据，字符串型数据带有的引号怎么去掉"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;缓存问题&amp;#xff0c;缓存区的内容并没有被读取出来&lt;br /&gt;直接导致了下一次循环 nextInt() 直接读取了缓存中的非法整数&amp;#xff0c;再次触发异常被捕获&amp;#xff0c;由此导致死循环。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["输入非数字，一直提示输出错误信息", ["问题相关代码，请勿粘贴截图", "\n", "public class ceshi {", "    public static void main(String[] args){", "        Scanner scan = new Scanner(System.in);", "        int a;", "        System.out.print(\"请输入一个整数：\");", "        while(true)", "        {", "            try", "            {", "                a = scan.nextInt();", "                break;", "            } catch (Exception e) {", "                System.out.println(\"输入了不合法的整数，请重新输入：\");", "            }", "        }", "        System.out.println(\"你输入的整数为：\" + a);", "    }", "}"]], "Tag": "程序设计"}
{"Answer": "```\r\nchar *path=box[1];  \r\n==》\r\nchar *path = const_cast&lt;char *&gt;(box[1].data());\r\n```", "Konwledge_Point": "字符型", "Question": ["C++:char *s=box[1];为什么会报错？怎么把数组box的第二个字符串元素取出来作为一个char* 型变量？", ["C++：", "\n我定义了一个数组box，内容是不确定的，想把box的第二项储存成char*，", "\n编辑器却报错了，怎么把数组box的第二个字符串元素取出来作为一个char*", "\n型变量？", "\n\n", "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<cstdlib>\n#include <windows.h>\n#include <direct.h> \n#include <stdio.h>\n#include <unistd.h>\n#include <string.h>\nusing namespace std;\n\n\nint main()\n{\n    int running=1;\n    while(running)\n    {\n        cout<<\"[input]: \";\n\n        string order;\n        vector<string> box;     //定义命令集合(一行) \n        //读取用户命令 ,输入回车就跳出\n        while(cin>>order)\n        {\n            box.push_back(order);\n            if(cin.get()=='\\n')\n                break;\n        }\n        //模拟cmd中的cd命令，切换目录\n        if(box[0]==\"cd\")\n            {\n                //获取当前工作目录\n                char sz[MAX_PATH];\n                GetCurrentDirectory(MAX_PATH,sz);\n                cout<<\"    Before path: \"<<sz<<endl;        \n                char *path=box[1];     //这里报错了\n                chdir(path);      //更换工作目录\n                cout<<\"    New path:\"<<endl;\n            }\n        return 0;\n}\n\n\n/*预想效果:\n[input]: cd test\n    Before path: E:\\cd\n        New path:E\\cd\\test\n\n可它报错了，程序如果改成两次输入:\nif(box[0]==\"cd\")\n{\n    //获取当前工作目录\n    char sz[MAX_PATH];\n    GetCurrentDirectory(MAX_PATH,sz);\n    cout<<\"    Before path: \"<<sz<<endl;    \n    cout<<\"    Enter new path: \";\n    char *path;     \n    cin>>path;       //成功!\n    chdir(path);      //更换工作目录\n}\n就可以，但我就想一次输入，请问各位大佬解方法\n*/\n"]], "Tag": "程序设计"}
{"Answer": "用库函数转换，已经是最高效的了。当然，如果你的日期有什么特殊规律，比如你说的3个月前，可以考虑只转换日期部分，忽略时间", "Konwledge_Point": "字符型", "Question": ["C++中怎样将一个含有具体时间的字符串和当前的时间进行比较？", ["在c++中怎样将含有时间的字符换和当前时间进行比较？？", "\n\n", "        time_t t = time(NULL);\n    char date[25];\n    strftime(date,sizeof(date),\"%Y%m%d\",localtime(&t)); \n        char* time = \"2017-08-04 18:34:00\";\n        //比较date和time，判断是否是3个月之内？？？\n", "\n\n", "我之前曾想将两个字符串中的时间都转化为int型，然后进行比较，但是发现如果将time的内容转为int，需要付出的代价有点高，想寻求一种即快速效率又高的方法。。", "\n请指教。。。请问应该如何比较？？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/baidu_29474379/article/details/83745270\"&gt;https://blog.csdn.net/baidu_29474379/article/details/83745270&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;这里讲的很清楚&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["typescript索引", ["class Animal {", "\n\n", "  name: string;", "\n\n", "}", "\n\n", "class Dog extends Animal {", "\n\n", " breed: string;", "\n\n", "}", "\n\n", "// 错误：使用数值型的字符串索引，有时会得到完全不同的Animal!", "\n\n", "interface NotOkay {", "\n\n", "  [x: number]: Animal;", "\n\n", "  [x: string]: Dog;", "\n\n", "}", "\n\n", "这段代码代表什么意思？", "\n\n", "ts初学者，望各位大佬多多指导"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;方案来自 &lt;a href=\"https://blog.csdn.net/hihell\" id=\"textarea_1676643336835_1676643454068_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;梦想橡皮擦&lt;/span&gt;&lt;/a&gt; 狂飙组基于 GPT 编写的 “程秘”&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;在Python中&amp;#xff0c;通过 float() 函数可以将字符串类型转换成浮点数类型。因此&amp;#xff0c;如果想要将 Entry 组件中获取到的字符串类型的值转换为浮点数类型&amp;#xff0c;可以使用 float(entry.get()) 进行转换。&lt;/p&gt;\n&lt;p&gt;如果 float(entry.get()) 报错&amp;#xff0c;可能是因为 Entry 中的字符串无法转换为浮点数类型。在这种情况下&amp;#xff0c;建议先使用 print(entry.get()) 输出 Entry 中获取到的字符串值&amp;#xff0c;检查其是否可以转换为浮点数类型。如果不能转换&amp;#xff0c;可能需要进行输入格式的限制或者异常处理。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["Tkinter中Enty.get()，把字符串类型变成float型", ["Entry.get()，把字符串类型变成float型", "float（entry.get()）为啥不行"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;cur.execute(&amp;#39;select * from user where rowid&amp;#61;{}&amp;#39;.format(i))&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["sqlite 查询条件如何用变量值？", ["使用的sqlite3数据库，我想查询特定rowid的数据：", "i=1", "while i<10:", "i+=1", "cur.execute('select * from user where rowid=i')", "\n", "请问如何能将变量 i 的值输入到select语句中"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为你sql语句里没有把字符串用引号括起来&lt;br /&gt;当你输入数字的时候&amp;#xff0c;mysql会自动把数字转字符串存进表里&lt;br /&gt;而你输入非数字的时候&amp;#xff0c;sql会认为shen是个列名&amp;#xff0c;你必须这样‘shen’才行&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["输入非数字就会报错，哪里错了", ["\n", "\n", "如上图，想输入一个插入的SQL语句，但第二列姓名如果输入的是非数字，就会报上图的错，是哪里出了问题"]], "Tag": "程序设计"}
{"Answer": "scanf_s(\"%s\",six);\r\n-&gt;\r\nscanf_s(\"%s\",six, 10);\r\n\r\n输入的字符串长度不要大于9（因为还有一个结束符号）", "Konwledge_Point": "字符型", "Question": ["如下，用scanf赋值char型数组时，程序出现错误，strlen的值变成很大的数，请问我的错误在哪里？", ["...", "\n    int a;", "\n    char six[10];", "\n    scanf_s(\"%s\",six);", "\n    a = strlen(six);", "\n    printf(\"%d\", a);", "\n\n", "下面这个是报的相关消息", "\n0x6C87D4EC (ucrtbased.dll)处(位于 进制转换.exe 中)引发的异常: 0xC0000005: 写入位置 0x01300000 时发生访问冲突。", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;对的&amp;#xff0c;%lf和%f都可以的&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["浮点型输入输出对应字符的疑惑", ["是不是double输出是也能对应%lf,float输出时也可以对应%f.为什么她们两个可以互相对应呀？也就是为什么float既可以对应%f又可以对应%lf."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义char数组和float数组&amp;#xff0c;统计计算即可&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/476179902566144.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#define &lt;span class=\"hljs-symbol\"&gt;_CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n\n#include &amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n    char name[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];//姓名\n    float math[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;], physics[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;], chemstry[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;], sum[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; }, ave[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };\n    int i;\n    //输入\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);//输入第一个学生的姓名\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f %f %f&amp;#34;&lt;/span&gt;, &amp;amp;math[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], &amp;amp;physics[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], &amp;amp;chemstry[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n\n\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, name[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);//输入第二个学生的姓名\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f %f %f&amp;#34;&lt;/span&gt;, &amp;amp;math[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], &amp;amp;physics[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], &amp;amp;chemstry[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\n\n    //计算总成绩和平均分\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        sum[i] &amp;#61; math[i] &amp;#43; physics[i] &amp;#43; chemstry[i];\n        ave[i] &amp;#61; sum[i] / &lt;span class=\"hljs-number\"&gt;3.0&lt;/span&gt;;\n    }\n\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        //输出\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%10s %5.1f %5.1f %5.1f %5.1f %5.1f\\n&amp;#34;&lt;/span&gt;, name[i], math[i], physics[i], chemstry[i], sum[i], ave[i]);\n    }\n\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["3  8关于#TRY#的问题，如何解决？(语言-c语言)", ["输入两个同学的姓名和三门课程成绩并求他们的总分和平均分，按照如下格式输出。", "\n", "NAME", "MATH", "PHYSICS", "CHEMSTRY", "SUM", "AVERAGE", "\n", "A", "90.5", "90.0", "97.0", "\n", "B", "87.5", "99.0", "100.0", "\n", " ", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "****", "\n", "\n", "其中每一列靠右对齐，各列宽度自己掌握，要求输出形式尽量美观。表示要自己计算的值。", "要求：姓名用字符表示，第一个同学是‘A’，第二个同学是‘B’；课程成绩是浮点型数据，"]], "Tag": "程序设计"}
{"Answer": "char一个字节，int4个字节，\r\n![图片说明](https://img-ask.csdn.net/upload/201708/03/1501753891_315735.png)", "Konwledge_Point": "字符型", "Question": ["C语言 用 指向int型 的指针变量 输出 字符的ASCII 出现问题", [" # include<stdio.h>\nvoid main()\n{\n    int *ptr;\n    char ch='a';\n    ptr=(int *)&ch;\n    printf(\"a的ASCII==%d\\n\",*ptr); \n}\n\n", "\n\n", "结果输出的 不是‘a’的ASCII码，而是不可预知的值", "\n求解答！！！！！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;int转字符串&lt;br /&gt;itoa,sprintf,to_string 都可以用&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["如何把year中的一串数字变成字符串，从而在程序中使用", ["\n", "原本想定义char string", "但是 可以把int型赋值给char型嘛", "盆友们帮忙看看叭～"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;有专门的转换函数&amp;#xff0c;atoi&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["为什么小数型的字符串不能直接转换成整数类型呢？", ["为什么小数型的字符串不能直接转换成整数类型呢？比如", "n='12.4152'", "print(int(n))", "显示错误"]], "Tag": "程序设计"}
{"Answer": "JMP  LOOP4\r\n\r\n\r\nNO_CO: INC SI\r\n JMP LOOP4\r\n\r\nEXIT:", "Konwledge_Point": "字符型", "Question": ["汇编问题！删除重复字母问题。没办法输出。求助！", ["DATA   SEGMENT", "\n   BUFFER   DB   60,?,60 DUP(?)     ;输入缓冲区", "\n   PRINT    DB   'TO INPUT:','$'     ;要输出提示信息", "\n   CRLF     DB   0DH,0AH,'$'", "\n   COUNT    DB  ?", "\nDATA   ENDS", "\n\n", "CODE    SEGMENT", "\n        ASSUME CS:CODE,DS:DATA", "\n\n", "MAIN    PROC FAR                 ;该过程为远程型.可以在段内被调用,也可以在段间被调用", "\n        MOV  AX,DATA", "\n        MOV  DS,AX", "\n\n", "    MOV   AH, 9              ;输出一串提示信息     “mov ah,9 ”是调用int 21h  的功能号\n    LEA   DX, PRINT          ;lea 传送有效地址指令，把原操作数的有效地址送给指定的寄存器\n    INT   21H\n\n    MOV   AH, 0AH            ;输入一串字符\n    LEA   DX, BUFFER \n    INT   21H\n\n    MOV   AH, 9              ;输出回车换行符，以使光标停在新行首\n    LEA   DX, CRLF\n    INT   21H\n\n    MOV  CL,BUFFER+1         ;取接收到的字符个数在cx中\n    XOR  CH,CH\n    MOV  COUNT,CL            ;30行\n\n    LEA  SI,BUFFER+2         ;将输入的第一个字符送给SI寄存器  \n    LEA  DI,BUFFER+2         ;将输入的第一个字符送给DI寄存器\n", "\n\n", "LOOP1:  INC  SI                  ;35行", "\n\n", "LOOP2:  MOV  AL,[SI]", "\n        MOV  BL,[DI]", "\n        CMP  AL,BL               ;对比第一个字符和后面的字符是否相等", "\n        JZ   ACT1                ;若相等，执行ACT1", "\n        JMP  LOOP1               ;循环", "\n\n", "ACT1:   MOV  AL,0                ;将和前面字符相等的字符置为0", "\n        MOV  [SI],AL", "\n        JMP  LOOP1", "\n\n", "LOOP3:  CMP DI,COUNT", "\n        JZ  LOOP4", "\n        INC DI", "\n        JMP LOOP2      ", "\n\n", "LOOP4:  MOV  AL,[SI]", "\n        CMP  AL,0", "\n        JE   NO_CO", "\n\n", "    MOV  AH,2\n    MOV  DI,[SI]\n    INT  21H\n    INC  SI\n    JMP  LOOP4\n", "\n\n", "NO_CO:  INC SI", "\n        JMP LOOP4", "\n\n", "EXIT:", "\n    MOV   AX, 4C00H", "\n    INT   21H", "\n\n", "MAIN    ENDP", "\nCODE    ENDS", "\n        END MAIN", "\n\n", "不知道为什么输入字母之后按回车不显示输出。", "\n初学者。。不是很会写。。顺便大神帮忙看看对不对。", "\n目的是删除重复字母在输出。", "\n谢谢！！！！！！"]], "Tag": "程序设计"}
{"Answer": "1)判断expr1和expr2是否为同一类型，应使用`typeid(expr1) == typeid(expr2)`。\r\n2)const char\\*代入函数模板TypeDetect变成了这样：\r\n```\r\nvoid TypeDetect&lt;const char*&gt;(Item* p, const char* elem)\r\n{\r\n    if (*typeid(elem).name() == 'i')\r\n        p-&gt;intvalue = elem;\r\n    else if (*typeid(elem).name() == 'd')\r\n        p-&gt;doublevalue = elem;\r\n    else if (*typeid(elem).name() == 'P')\r\n        p-&gt;stringvalue = elem;\r\n}\r\n\r\n```\r\nconst char*类型变量elem被赋值给了int类型和double类型，这显然是不能通过编译的。为什么elem是int类型时，能通过编译呢？因为：(1)int允许隐式转换成double；(2)int类型赋值给string类型变量时，int先隐式转换成char, 然后调用`string::operator=(char)`。elem是double类型时，也是如此。\r\n3)建议修改类Item，参考下面的代码：\r\n```\r\nstruct Item_v2\r\n{\r\n\tint intvalue = 0;\r\n\tdouble doublevalue = 0.0;\r\n\tstring stringvalue = \"\";\r\n\r\n\tvoid SetValue(int value)\r\n\t{\r\n\t\tintvalue = value;\r\n\t}\r\n\tvoid SetValue(double value)\r\n\t{\r\n\t\tdoublevalue = value;\r\n\t}\r\n\tvoid SetValue(const char* value)\r\n\t{\r\n\t\tstringvalue = value;\r\n\t}\r\n};\r\n\r\nint main()\r\n{\r\n\tItem_v2 item1, item2, item3;\r\n\titem1.SetValue(1);\r\n\titem2.SetValue(1.2);\r\n\titem3.SetValue(\"1.23\");\r\n}\r\n\r\n```\r\n上面的代码运用函数重载为Item_v2的成员函数SetValue提供了三个版本，编译器根据实参的类型选择调用正确的版本。如果要运用typeid确定参数的类型并赋值给Item_v2相应的成员变量，请参考下面的代码：\r\n```\r\ntemplate &lt;typename T&gt;\r\nstatic void TypeDetect_v2(Item_v2&amp; item, T value)\r\n{\r\n\tvoid* pv = &amp;value;\r\n\tif (typeid(value) == typeid(int))\r\n\t\titem.intvalue = *static_cast&lt;int*&gt;(pv);\r\n\telse if (typeid(value) == typeid(double))\r\n\t\titem.doublevalue = *static_cast&lt;double*&gt;(pv);\r\n\telse if (typeid(value) == typeid(const char*))\r\n\t\titem.stringvalue = *static_cast&lt;const char**&gt;(pv);\r\n}\r\nvoid TypeDetect_Example()\r\n{\r\n\tItem_v2 item1, item2, item3;\r\n\tTypeDetect_v2(item1, 1);\r\n\tTypeDetect_v2(item2, 1.2);\r\n\tTypeDetect_v2(item3, \"1.23\");\r\n}\r\n\r\n```", "Konwledge_Point": "字符型", "Question": ["向函数模板中传入字符串，typeid()和if的搭配会失效，编译不通过，怎么办？", ["我写了个函数模板里用到了typeid，判断传入变量的类型。传入整型和浮点型都没问题，传入字符串直接编译不通过。", "\n\n", "#include <iostream>\n#include <typeinfo>\n#include <string>\nusing namespace std;\nstruct Item\n{\n    int intvalue=0;\n    double doublevalue=0.0;\n    string stringvalue=\"\";\n};\ntemplate <typename T>\nvoid TypeDetect(Item *p, T elem)\n{\n    if (*typeid(elem).name() == 'i')\n        p->intvalue = elem;\n    else if (*typeid(elem).name() == 'd')\n        p->doublevalue = elem;\n    else if (*typeid(elem).name() == 'P')\n        p->stringvalue = elem;\n}\nint main()\n{\n    Item *p1 = new Item, *p2 = new Item, *p3 = new Item;\n    TypeDetect(p1, 1);\n    TypeDetect(p2, 1.1);\n    TypeDetect(p3, \"abc\");\n    cout << p1->intvalue << endl;\n    cout << p2->doublevalue << endl;\n    cout << p3->stringvalue << endl;\n    return 0;\n}\n", "\n\n", "直接编译上述代码会报错：", "\n\n", "invalid conversion from 'const char*' to 'int' [-fpermissive] [15, 21]", "\ncannot convert 'const char*' to 'double' in assignment [17, 24]", "\n\n", "但注释掉", "\n\n", "TypeDetect(p3, \"abc\");\n", "\n\n", "就可以编译运行了。这是为什么？传入字符串后typeid应该会判断它是一个指针，然后通过if语句判断，但似乎编译器就不认我写的三个if语句。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输入后判断一下是不是数字&amp;#xff0c;不是就让重新输入&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["怎么去限制输入的字符呀 让他只能输入数字不能输入别的", ["\n", "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace 角度格式转换\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.ForegroundColor = ConsoleColor.Yellow;//改变控制台颜色\n            Console.WriteLine(\"本程序为度分秒-弧度（DMS-RAD）转换程序\");\n            Console.WriteLine(\"请输入度分秒值：DDMMSSS\");\n            string DMS = Console.ReadLine();//接受用户输入的原始数据\n            double temp = double.Parse(DMS);//将用户输入数据转换为双精度浮点型数据，以便计算            \n            double DD, MM, SS;//定义变量，用于存储度、分、秒值\n            DD = Math.Floor(temp);//通过取整函数得到度值\n            if (DD > 360 || DD < 0)//限制度的范围\n            {\n                Console.WriteLine(\"数据错误\");\n                Console.ReadLine();//通过等待用户输入，让程序界面停留\n                return;\n            }\n            MM = Math.Floor((temp - DD) * 100); //得到分值\n            if (MM > 60 || MM < 0) //限制分的范围\n            {\n                Console.WriteLine(\"数据错误\");\n                Console.ReadLine();//通过等待用户输入，让程序界面停留\n                return;\n            }\n            SS = (temp * 100 - Math.Floor(temp * 100)) * 100;//得到秒值\n            if (SS > 60 || SS < 0) //限制秒的范围\n            {\n                Console.WriteLine(\"数据错误\");\n                Console.ReadLine();//通过等待用户输入，让程序界面停留\n                return;\n            }\n            temp = DD + MM / 60 + SS / 3600;//得出十进制度格式数据\n            double rad = temp * Math.PI / 180;//计算得出弧度制\n            Console.ForegroundColor = ConsoleColor.Blue;//改变控制台颜色用于区分结果数据\n            Console.WriteLine(\"计算出的弧度值为{0:f8}\", rad);//f8表示保留8位小数\n            Console.ReadLine();//通过等待用户输入，让程序界面停留\n        }\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "http://www.w3school.com.cn/js/jsref_split.asp", "Konwledge_Point": "字符型", "Question": ["javascript语言怎么能够对后台的数组型（非字符串）实现split一样的功能？", ["javascript语言怎么能够对后台的数组型（非字符串）实现split一样的功能？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输出上没区别&amp;#xff0c;含义不同&amp;#xff0c;单引号为字符&amp;#xff0c;双引号为字符串&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["char类型输出字符和双引号内输出的字符有啥区别吗", [" ", "\n", "定义一个变量 charA初始值为a，然后输出它。", "直接输出字符a，这两者之间有区别吗？"]], "Tag": "程序设计"}
{"Answer": "这个主键一般设置为标识列（自增长），或者你自己定义生成的GUID（当前时间+随机数等等保证唯一）。", "Konwledge_Point": "字符型", "Question": ["mysql语句主键添加问题，求朋友们回复", ["在用mysql时，其中有一个属性是主键，当我们往表里添加一行记录时，在不知道主键是", "\n多少的情况下怎么添加记录"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;code class=\"language-javascript\"&gt;i&lt;/code&gt;即为元素个数&amp;#xff0c;理论上这个&lt;code class=\"language-javascript\"&gt;i&lt;/code&gt;可以无限大&amp;#xff0c;但是这个受限于你的内存大小&amp;#xff0c;至少内存能够装得下这个数组才行&amp;#xff0c;感觉讨论这个&lt;strong&gt;毫无意义&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["unsigned int 型的数组最多可以有几个字符元素", ["比如unsigned int a[i]，a中存放的是一个字节长度的字符，那么i最大可以为多少？这个最大值与什么有关？"]], "Tag": "程序设计"}
{"Answer": "发现了，细看下ext的api\r\n\r\nd     Day of the month, [color=red]2 digits with leading zeros[/color]   01 to 31\r\n\r\n必须是两位数的，2009-12-7这种的字符串是错误的，要2009-12-07", "Konwledge_Point": "字符型", "Question": ["Ext里的Date问题", ["Ext里面这个sample是这样的:", "\n[code=\"java\"]dt = Date.parseDate(\"2006-01-15\", \"Y-m-d\");", "\n[/code]", "\nAPI的定义是这样的：", "\nparseDate( String input, String format ) : Date ", "\n所以按照道理只要是两个字符串就行了。", "\n\n", "我现在是这样的问题：", "\n[code=\"java\"]value=Date.parseDate(data.get('expiretime'), \"Y-m-d\")；[/code]", "\n我的data.get('expiretime')是等于2009-8-7，并且是string型，", "\n但是我并没有得到时间，很奇怪！难道data.get('expiretime')得到的2009-12-7的字符串并不等于", "\n\"2009-12-7\"?往解答！", "\n\n", "BTY:一直在这里提问，很感谢yourgame,lovewhzlq,还有 huangnetian,laitaogood 等几位一直帮我解惑！！在此表示感谢！", "\n谢谢你们的无私帮助！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;记住一点&amp;#xff1a;数组名称本身就是指针&amp;#xff0c;加不加&amp;amp;都是取地址值&lt;/p&gt;\n&lt;p&gt;对于*b 没加&amp;amp;指向 存放&amp;#34;world&amp;#34;的内存地址&amp;#xff0c;加&amp;amp;指向b这个指针变量的内存地址&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["为何字符串数组名取地址后得到的是自身的值？", ["刚学指针，有个关字符串指针和字符数组的困惑。", "\n", "代码如下：", "\n", "char a[] = {", "\"hello\"", "};\n", "printf", "(", "\" a:%p\\n\"", ", a);\n", "printf", "(", "\"&a:%p\\n\"", ", &a);\n\nchar *b = {", "\"world\"", "};\n", "printf", "(", "\" b:%p\\n\"", ", b);\n", "printf", "(", "\"&b:%p\\n\"", ", &b);\n", "\n", "输出：", "\n", " a:", "0x7ffeed6516e6", "\n", "&a", ":", "0x7ffeed6516e6", "\n", " b:", "0x1025b1fa2", "\n", "&b", ":", "0x7ffeed6516d8", "\n", "\n", "疑问：", "对于b，编译系统在内存常量区分配“world”，在内存变量区分配指针型存储空间，用于存放b，且b指向‘w‘。", "对于a，我就不能理解了。编译系统在内存变量区分配“hello”，并且a应该为指针常量，其值为'h'的地址，指向字符'h'。（我以为）a作为一个常量，难道不应该存储在内存常量区吗？为啥它取地址后不是某个常量区的位置，而竟然是它的值？是不是编译系统并未在内存常量区开辟空间存放a？我使用a时，究竟使用的是什么？"]], "Tag": "程序设计"}
{"Answer": "你的sql语句中拼接，字符串类型的变量外面要加上单引号。", "Konwledge_Point": "字符型", "Question": ["数据库表的类型为varchar但是只能存入数字类型的字符串", ["我的客户表customer字段类型为varchar型的 ，但是我在插入数据时不能插入字母，符号，只能插入数字类型的字符串", "\n比如插入 “lly.sfa”就不行，但是插入“54215642”就可以 。下面是我的代码", "\ntry", "\n        {", "\n            string username = TextBox1.Text;", "\n            string password = TextBox2.Text;", "\n            string againpassword = TextBox3.Text.;", "\n            string phonenumber = TextBox4.Text.();", "\n            Random ran = new Random();", "\n            int id = Convert.ToInt32(string.Format(\"{0:ddHHmmss}\", DateTime.Now) + ran.Next(0, 10));", "\n            string sqlselete = \"select count(*) from customer where customer_name=\" + username;", "\n            dataOperate sqlopereat = new dataOperate();", "\n            int num = sqlopereat.IsData(sqlselete);", "\n            if (num == 0)", "\n            {", "\n                try", "\n                {", "\n                    string sqlupdata = \"insert into customer(customer_id,customer_name,customer_password,customer_phone,customer_level) values(\" + id+\",\" + phonenumber+\",\"+username+\",\"+password+\",\"+ \"5) \";", "\n                    //bool a=sqlopereat.Insert(sqlupdata);", "\n                    //if (a==true)", "\n                    //{", "\n                    //    Response.Write(\"恭喜 注册成功\");", "\n                    //}", "\n                    bool result = sqlopereat.AdlData(sqlupdata);", "\n                    if (result == true)", "\n                    {", "\n                        Response.Write(\"恭喜 注册成功\");", "\n                    }", "\n\n", "            }\n            catch (Exception)\n            {\n                throw;\n\n            }\n\n        }\n\n    }\n    catch (Exception)\n    {\n        throw;\n\n    }\n\n}\n    数据库连接没有问题    我用的是VS2015内置的数据库    是这个的问题吗？\n"]], "Tag": "程序设计"}
{"Answer": "就是这样的，数字怪一点而已", "Konwledge_Point": "字符型", "Question": ["c语言整数转为IP地址格式问题？", ["#include ", "\n\n", "int main()", "\n{", "\n\n", "unsigned char *p ;\nunsigned int a2 = 234234553;//把这个数转化为IP地址形式的字符串\np = (unsigned char *)&a2;\nchar str[100] = { 0 };//每个位置都是/000\nsprintf(str, \"%u.%u.%u.%u\", p[3], p[2], p[1], p[0]);\nprintf(\"%s\\n\", str);\nreturn 0;\n", "\n\n", "}", "\n\n", "//运行结果", "\n13.246.34.185", "\n我猜测是不是在字符串里转义了，求大神解决一下"]], "Tag": "程序设计"}
{"Answer": "&lt;script type=\"text/javascript\" src=\"1.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\r\n&lt;script type=\"text/javascript\" src=\"2.js\" charset=\"gbk\"&gt;&lt;/script&gt;", "Konwledge_Point": "字符型", "Question": ["Extjs与老系统兼容的现实问题--字符编码如何处理？", ["[size=medium]本人用Extjs遇到非常棘手的问题。就是字符编码问题。Extjs的确简单并且大大简化了业务系统的开发工作和开发工作量。但是引来了字符编码的问题。主要是两种，一种是原有的老系统，jsp或者asp页面都使用的是GBK或者GB2312的，这是展现层，这些编码如何解决Extjs引入后的编码混乱问题，这方面们可以重新构建全新工程，让前台编码全部变成UTF-8，但第二种是后台数据库原先创建时是GBK的，并且同一数据库很多系统在使用，所以为了兼容老系统，数据库肯定是不可能去改编码的。如何解决？主要是JSP下，JDBC驱动连接时，字符集指定的是GBK的，但是页面和前台系统都是UTF-8的，如何处理才能避免造成数据库插入的乱码，以及数据库查出的数据在前台显示是乱码的问题。最好是实际的，针对大型业务工程可行的解决方案[/size]", "\n[b]问题补充：[/b]", "\nyourgame (资深程序员)，您的回复我看到了。但是Extjs自身的库是UTF-8的。我的页面都用的GBK，还有后台mysql、oracle都是GBK编码的。你这样只是指定script脚本引入时使用什么编码。前台同时出现多种编码，显示仍然会有问题吧！"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; x,y;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n    x&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    y&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(a);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;a[i]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]&amp;#61;&amp;#61;x)\n           a[i]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]&amp;#61;&amp;#61;y)\n                a[i]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;;\n             &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                a[i]&amp;#61;a[i]&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(a);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["字符串替换，用c语言", ["第一行和第二行分别输入两个 char 型的字符串，如 x 与", " y", "第三行输入一个字符串数组，此时将该字符串数组按照如下规则处理：", "当数组中的元素等于 x 时， x 替换为字符串＃", "当等于 y 时， y 替换为字符串％", "当等于其他字符串时，将其替换为此字符串的后一位 acsii 码代表的字符，"]], "Tag": "程序设计"}
{"Answer": "```\r\nclass Dog:\r\n  def __init__(self, n, a):\r\n    self.name = n\r\n    self.age = a\r\n\r\n  def bark(self):\r\n    print(self.name + str(self.age))\r\n\r\nTestDog = Dog(\"aaa\", 3)\r\nTestDog.bark()\r\n```", "Konwledge_Point": "字符型", "Question": ["python的问题，急，急，急。", ["1、定义（声明）一个类，名称为：Dog", "\nDog类的属性包括：", "\n（1）属性名：name，类型：字符串型", "\n（2）属性名：age， 类型：整类型", "\nDog类可以执行的方法是：bark()", "\nbark()方法的具体功能是可以输出自己的名字和年龄。", "\n要求：", "\n（1）构造方法有两个参数（名字和年龄），将两个参数直接赋给Dog类的name 和 age属性。", "\n（2）编写一个测试类，名称为：TestDog，在测试类中创建一个Dog类型的对象，在创建该对象的时候，要为该对象设置name属性和age属性，最后调用该对象的bark()方法。"]], "Tag": "程序设计"}
{"Answer": "数据存成文本文件，如果不需要数据保存的话直接放在内存里就OK了", "Konwledge_Point": "字符型", "Question": ["用c#编写一个学生信息添加程序，学生信息包括学号，姓名，性别", ["用c#编写一个学生信息添加程序，学生信息包括学号，姓名，性别，有不用数据库做出来的吗，之是一个简单的小程序"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你检查一下 你传过来的 请求参数 long类型的值  里面带了逗号没有&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["spring 项目 String 转换 Long 异常", ["evaluationId传入三位数的可以，超过四位数就不行了。", "\n\n", "错误", "\n\n", "\n", "13:41:12 DEBUG [http-nio-80-exec-8] o.s.w.s.DispatcherServlet - POST \"/enjoy\", parameters={masked}\n13:41:12 DEBUG [http-nio-80-exec-8] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.imooc.reader.controller.MemberController#valuation(Long)\n13:41:12 DEBUG [http-nio-80-exec-8] o.s.web.method.HandlerMethod - Could not resolve parameter [0] in public java.util.Map com.imooc.reader.controller.MemberController.valuation(java.lang.Long): Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \"2,000\"\n13:41:12 WARN  [http-nio-80-exec-8] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \"2,000\"]\n13:41:12 DEBUG [http-nio-80-exec-8] o.s.w.s.DispatcherServlet - Completed 400 BAD_REQUEST", "\n\n", "Ajax提交", "\n\n", "\n", "  //评论点赞\n            $(\"*[data-evaluation-id]\").click(function () {\n                let evaluationId = $(this).data(\"evaluation-id\");\n                $.post(\"/enjoy\", {evaluationId: evaluationId}, function (json) {\n                    if (json.code == \"0\") {\n                        $(\"*[data-evaluation-id='\" + evaluationId + \"'] span\").text(json.evaluation.enjoy);\n                    }\n                }, \"json\")\n            })", "\n\n", "MemberController", "\n\n", "\n", "    @PostMapping(\"/enjoy\")\n    @ResponseBody\n    public Map valuation(Long evaluationId) {\n        System.out.println(\"类型：\" + evaluationId.getClass() + \"值：\" + evaluationId);\n        Map result = new HashMap();\n        try {\n            Evaluation evaluation = memberService.enjoy(evaluationId);\n            result.put(\"code\", \"0\");\n            result.put(\"msg\", \"success\");\n            result.put(\"evaluation\", evaluation);\n        } catch (BussinessException e) {\n            e.printStackTrace();\n            result.put(\"code\", e.getCode());\n            result.put(\"msg\", e.getMsg());\n        }\n        return result;\n    }"]], "Tag": "程序设计"}
{"Answer": "```\r\n Imports System.Text.RegularExpressions\r\n\r\nModule Module1\r\n\r\n    Sub Main()\r\n        Dim str = \"2,深圳, 2018-06-30 10:19:58, name北京JW万豪酒店, 10004151, 华贸中心建国路83号, https://hotel.fliggy.com/hotel_detail2.htm?=10004151&amp;=110100&amp;checkIn=2018/6/30&amp;checkOut=2018/7/1 10:19:45, 1137, 4.8, 1123, 0, 豪华型, 5, RateNone\"\r\n        Dim newNum = Val(Regex.Match(str, \"^\\d+(?=\\,)\").Value)\r\n        str = Regex.Replace(str, \"^\\d+\\,\", \"\")\r\n        Console.WriteLine(newNum)\r\n        Console.WriteLine(str)\r\n    End Sub\r\n\r\nEnd Module\r\n\r\n```", "Konwledge_Point": "字符型", "Question": ["简单的字串切割问题(使用vb.net) ", ["此为重发上午的问题，有此地方写错了", "\n\n", "我有一字串如下(单纯为字串，前一则写错成str(  )   )", "\n\n", "2,深圳, 2018-06-30 10:19:58, name北京JW万豪酒店, 10004151, 华贸中心建国路83号, ", "https://hotel.fliggy.com/hotel_detail2.htm?=10004151&=110100&checkIn=2018/6/30&checkOut=2018/7/1", " 10:19:45, 1137, 4.8, 1123, \"0, 豪华型, 5, RateNone\"..................", "\n\n", "1、我要将最前面的2提出来  dim newNum=, 这个数不一定等于2，有可能为任意数", "\n\n", "2、将字串", "\n\"2,深圳, 2018-06-30 10:19:5...............\"", "\n变成", "\n\"深圳, 2018-06-30 10:19:5...............\"", "\n\n", "请问应该如何处理呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;将字符串遍历&amp;#xff0c;用ascall码判断每一个字符是否为数字。&amp;#xff08;0 - 9的ascall码为48 - 57&amp;#xff09;。函数不难&amp;#xff0c;你可以的&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["如何判断字符串是否为数字？", ["怎么判断键盘输入的字符串是否都为数字？如果全是，输出是数字型字符串，如果不全是，输出否。"]], "Tag": "程序设计"}
{"Answer": "string s1 = \"1\";\r\nstring s2 = \"1\";\r\nint r = Integer.parseInt(s1) + Integer.parseInt(s2);", "Konwledge_Point": "字符型", "Question": ["java 中string相加怎么取数字？比如1+1怎么得到2而不是11?", ["java 中string相加怎么取数字？比如1+1怎么得到2而不是11?"]], "Tag": "程序设计"}
{"Answer": "&gt;&gt;&gt; a=\"-1\"\r\n&gt;&gt;&gt; float(a)\r\n-1.0\r\n&gt;&gt;&gt; a=\"-\"\r\n&gt;&gt;&gt; float(a)\r\nTraceback (most recent call last):\r\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\r\nValueError: could not convert string to float: -\r\n&gt;&gt;&gt;", "Konwledge_Point": "字符型", "Question": ["Python读取csv文件后str转换为float", ["-------------------------------------------code---------------------------------", "\n#coding:utf-8", "\nimport csv", "\nimport xlwt", "\n#新建excel文件", "\nmyexcel = xlwt.Workbook()", "\n#新建sheet页", "\nmysheet = myexcel.add_sheet(\"testsheet\")", "\ncsvfile = open(\"data.csv\",\"r\")", "\n\n", "#读取文件信息", "\nreader = csv.reader(csvfile)", "\nl = 0", "\n#通过循环获取单行信息", "\nfor line in reader:", "\n    r = 0", "\n    #通过双重循环获取单个单元信息", "\n    for i in line:", "\n        #通过双重循环写入excel表格", "\n        x=0", "\n        #将第六行第二列的str转换为float", "\n        if l > 6:", "\n            if r >= 1:", "\n                #x=float(i)", "\n                x = float(i)", "\n        #print(i)", "\n        if x > 160:", "\n            print(l,r)", "\n            mysheet.write(l,r,\"high\")", "\n        else:", "\n            mysheet.write(l,r,i) ", "\n        r=r+1", "\n    l=l+1", "\n#最后保存到excel", "\nmyexcel.save(\"myexcel.xls\")", "\n-------------------------------------------code---------------------------------", "\n如上，x=float(i)处报错ValueError:could not convert string to float: '-'", "\n此处数据类似  16.02", "\n如何解决。"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Modify your regex slightly so that it can capture the proper substring you're looking for.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;preg_match('/Shopify.shop=(.*)/',$str,$matches);\necho $matches[1];   //gfkhfhkd\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"https://eval.in/718825\" rel=\"nofollow noreferrer\"&gt;Fiddle&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["如何在与preg_match匹配后获取变量值", ["\n\n", "This is my code:", "\n\n", "$str = \"nbvmxnbvn Shopify.shop=gfkhfhkd\";\npreg_match('/Shopify.shop=/', $str, $matches);\nprint_r($matches);\n", "\n\n", "I'm getting the output after print_r as ", "Shopify.shop=", " but I want ", "gfkhfhkd", " as the output.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;For an &lt;strong&gt;exact match&lt;/strong&gt;, you can use &lt;a href=\"http://php.net/manual/en/function.in-array.php\" rel=\"nofollow\"&gt;&lt;code&gt;in_array()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$input = 'carrrot';\n$words  = array('apple','pineapple','banana','orange','radish','carrot','pea','bean','potato');    \nif (in_array($words, $input)) {\n    echo \"$input was found in array\n\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For &lt;strong&gt;similar match&lt;/strong&gt;, you can try &lt;a href=\"http://php.net/manual/en/function.levenshtein.php\" rel=\"nofollow\"&gt;&lt;code&gt;levenshtein()&lt;/code&gt;&lt;/a&gt; (first example on php doc page)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$input = 'carrrot';\n$words  = array('apple','pineapple','banana','orange','radish','carrot','pea','bean','potato');\n$shortest = -1;\nforeach ($words as $word) {\n    $lev = levenshtein($input, $word);\n    if ($lev == 0) {\n        $closest = $word;\n        $shortest = 0;\n        break;\n    }\n    if ($lev &amp;lt;= $shortest || $shortest &amp;lt; 0) {\n        $closest  = $word;\n        $shortest = $lev;\n    }\n}\necho \"Input word: $input\n\";\nif ($shortest == 0) {\n    echo \"Exact match found: $closest\n\";\n} else {\n    echo \"Did you mean: $closest?\n\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Input word: carrrot\nDid you mean: carrot?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;also for &lt;strong&gt;similar match&lt;/strong&gt;, you can try &lt;code&gt;similar_text()&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$input  = 'iApple';\n$words = array('apple','pineapple','banana','orange','radish','carrot','pea','bean','potato');\n$shortest = 70;\nforeach ($words as $word) {\n    similar_text($word, $input, $percent);   \n    $percent = round($percent);\n    if ($percent == 100) {\n        $closest = $word;\n        $shortest = 100;\n        break;\n    }\n    if ($percent &amp;gt;= $shortest) {\n        $closest  = $word;\n        $shortest = $percent;\n    }  \n}\necho \"Input word: $input\n\";\nif ($shortest == 100) {\n    echo \"Exact match found: $closest\n\";\n} else {\n    echo \"Did you mean: $closest?\n\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Result: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Input word: iApple\nDid you mean: apple?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To achieve good results you can use a combination of &lt;strong&gt;&lt;code&gt;levenshtein()&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;similar_text()&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;soundex()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["从大型数组中搜索php字符串以进行页面过滤", ["\n\n", "Basically I have a huge array of possibilities that could be for example sports teams or sport names:", "\n\n", "Toronto Maple Leafs\nNew Jersey Devils\nBoston Red Socks\nHockey\nSoccer\netc...", "\n\n", "So I have a search bar where the user can type in anything they want.. I need a way to take what they enter in compare it to the array and if it is a close enough match add it to a filter variable.", "\n\n", "example:", "\n\n", "if (strpos($userSearch, 'Hockey') !== false) {\n    $pageVar = $pageVar . \"+\" . \"Hockey\";\n}\n", "\n\n", "Doing it this way ^ has some set backs one lets say someone enters hockie or something like that.. or Toronto instead of Toronto maple leafs.. without going through all the possible cases one by one there must be a better way.. ", "\n\n", "Thanks", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你把一个10进制数存进byte里&amp;#xff0c;它自动就是16进制的了&lt;br /&gt;要知道&amp;#xff0c;只有字符串才存在2进制&amp;#xff0c;10进制&amp;#xff0c;16进制&amp;#xff0c;那是给人看的。&lt;br /&gt;计算机里存的就是2进制&lt;br /&gt;你想把一个数通过流发出去&amp;#xff0c;你就直接赋值给byte数组就行了&lt;br /&gt;除非你文本框里放的是16进制数&amp;#xff0c;那么在进行字符串和int转换的时候需要指定是按照16进制转换&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c#如何将textbox中十进制数(如16)转换byte16进制数而不是字符串，如(0x10）？，且形式为", ["需要将文本框中输入的十进制数，在代码中将其转换成byte型的16进制数。", "语言为c#，", "win10", " vs2017"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;那不是直接用int(float(b))就可以了吗&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["jupyter中字符小数转换", ["假设我有个字符串是b，我想转成int型，百度里也没找到怎么转带小数点的，请大佬教教我", "\n\n", "\n\n", " "]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I find another way to solve the problem!&lt;/p&gt;\n\n&lt;p&gt;I use &lt;code&gt;$addr=str_replace(\"\n\",\"\\\n\",$addrs);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;And there is \n in the data from database, I don't find that before.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["在php中未终止的字符串文字（当数据是全宽或太长时）", ["\n\n", "I'm not sure it is because of full-width or too long string, my web page will occur the problem when the string too long, and because the data is dynamic appended, so the data should be full-width since the other page that let user input their data is full-width( Japanese or Chinese). My html is:", "\n\n", "<!DOCTYPE html PUBLIC \"-/W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">\n<head>\n<title>Lomiro</title> \n<style type=\"text/css\"> \n<!--\n.style2 {font-family: Arial, Helvetica, sans-serif; font-size: 16px;}\n-->\na:link {\n    text-decoration: none;\n    color: #FFFFFF;\n}\na:visited {\n    text-decoration: none;\n    color: #FFFFFF;\n}\na:hover {\n    text-decoration: none;\n    color: #FFFFFF;\n}\na:active {\n    text-decoration: none;\n    color: #FFFFFF;\n}\nbody,td,th {\n    font-size: 16px;\n}\n.style3 {color: #FFFFFF}\n</style>\n<script type=\"text/javascript\"> \nfunction addRow(i,id,names,addr,cell,cam,num,shop,pay,date)\n{\n    var tableis = document.getElementById(\"info\");\n    var last=(-1);\n    var Tr = tableis.insertRow(last);\n    var Td1 = Tr.insertCell(0);\n    Td1.innerHTML=\"<input type='text' readonly='readonly' style='cursor: default; width: 100px;' name='id\"+i+\"' id='id\"+i+\"' value='\"+id+\"' />\";\n    Tr.appendChild(Td1);\n    var Td2 = Tr.insertCell(1);\n    Td2.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"name'+i+'\" id=\"name'+i+'\" value=\"'+names+'\" />';\n    Tr.appendChild(Td2);\n    var Td3 = Tr.insertCell(2);\n    Td3.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 330px;\" name=\"addr'+i+'\" id=\"addr'+i+'\" value=\"'+addr+'\" />';\n    Tr.appendChild(Td3);\n    var Td4 = Tr.insertCell(3);\n    Td4.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 90px;\" name=\"cell'+i+'\" id=\"cell'+i+'\" value=\"'+cell+'\" />';\n    Tr.appendChild(Td4);\n    var Td5 = Tr.insertCell(4);\n    Td5.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"cam'+i+'\" id=\"cam'+i+'\" value=\"'+cam+'\" />';\n    Tr.appendChild(Td5);\n    var Td6 = Tr.insertCell(5);\n    Td6.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 80px;\" name=\"num'+i+'\" id=\"num'+i+'\" value=\"'+num+'\" />';\n    Tr.appendChild(Td6);\n    var Td7 = Tr.insertCell(6);\n    Td7.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"shop'+i+'\" id=\"shop'+i+'\" value=\"'+shop+'\" />';\n    Tr.appendChild(Td7);\n    var Td8 = Tr.insertCell(7);\n    Td8.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 70px;\" name=\"pay'+i+'\" id=\"pay'+i+'\" value=\"'+pay+'\" />';\n    Tr.appendChild(Td8);\n    var Td9 = Tr.insertCell(8);\n    Td9.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 70px;\" name=\"date'+i+'\" id=\"date'+i+'\" value=\"'+date+'\" />';\n    Tr.appendChild(Td9);\n}\nfunction addRow2(i,shop,id,names,addr,cell,cam,num,pay,date)\n{\n    var tableis = document.getElementById(\"info\");\n    var last=(-1);\n    var Tr = tableis.insertRow(last);\n    var Td1 = Tr.insertCell(0);\n    Td1.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"shop'+i+'\" id=\"shop'+i+'\" value=\"'+shop+'\" />';\n    Tr.appendChild(Td1);\n    var Td2 = Tr.insertCell(1);\n    Td2.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"id'+i+'\" id=\"id'+i+'\" value=\"'+id+'\" />';\n    Tr.appendChild(Td2);\n    var Td3 = Tr.insertCell(2);\n    Td3.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"name'+i+'\" id=\"name'+i+'\" value=\"'+names+'\" />';\n    Tr.appendChild(Td3);\n    var Td4 = Tr.insertCell(3);\n    Td4.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 330px;\" name=\"addr'+i+'\" id=\"addr'+i+'\" value=\"'+addr+'\" />';\n    Tr.appendChild(Td4);\n    var Td5 = Tr.insertCell(4);\n    Td5.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 90px;\" name=\"cell'+i+'\" id=\"cell'+i+'\" value=\"'+cell+'\" />';\n    Tr.appendChild(Td5);\n    var Td6 = Tr.insertCell(5);\n    Td6.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"cam'+i+'\" id=\"cam'+i+'\" value=\"'+cam+'\" />';\n    Tr.appendChild(Td6);\n    var Td7 = Tr.insertCell(6);\n    Td7.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 80px;\" name=\"num'+i+'\" id=\"num'+i+'\" value=\"'+num+'\" />';\n    Tr.appendChild(Td7);\n    var Td8 = Tr.insertCell(7);\n    Td8.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 70px;\" name=\"pay'+i+'\" id=\"pay'+i+'\" value=\"'+pay+'\" />';\n    Tr.appendChild(Td8);\n    var Td9 = Tr.insertCell(8);\n    Td9.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 70px;\" name=\"date'+i+'\" id=\"date'+i+'\" value=\"'+date+'\" />';\n    Tr.appendChild(Td9);\n}\nfunction addRow3(i,date,id,names,addr,cell,cam,num,shop,pay)\n{\n    var tableis = document.getElementById(\"info\");\n    var last=(-1);\n    var Tr = tableis.insertRow(last);\n    var Td1 = Tr.insertCell(0);\n    Td1.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 70px;\" name=\"date'+i+'\" id=\"date'+i+'\" value=\"'+date+'\" />';\n    Tr.appendChild(Td1);\n    var Td2 = Tr.insertCell(1);\n    Td2.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"id'+i+'\" id=\"id'+i+'\" value=\"'+id+'\" />';\n    Tr.appendChild(Td2);\n    var Td3 = Tr.insertCell(2);\n    Td3.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"name'+i+'\" id=\"name'+i+'\" value=\"'+names+'\" />';\n    Tr.appendChild(Td3);\n    var Td4 = Tr.insertCell(3);\n    Td4.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 330px;\" name=\"addr'+i+'\" id=\"addr'+i+'\" value=\"'+addr+'\" />';\n    Tr.appendChild(Td4);\n    var Td5 = Tr.insertCell(4);\n    Td5.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 90px;\" name=\"cell'+i+'\" id=\"cell'+i+'\" value=\"'+cell+'\" />';\n    Tr.appendChild(Td5);\n    var Td6 = Tr.insertCell(5);\n    Td6.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"cam'+i+'\" id=\"cam'+i+'\" value=\"'+cam+'\" />';\n    Tr.appendChild(Td6);\n    var Td7 = Tr.insertCell(6);\n    Td7.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 80px;\" name=\"num'+i+'\" id=\"num'+i+'\" value=\"'+num+'\" />';\n    Tr.appendChild(Td7);\n    var Td8 = Tr.insertCell(7);\n    Td8.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 100px;\" name=\"shop'+i+'\" id=\"shop'+i+'\" value=\"'+shop+'\" />';\n    Tr.appendChild(Td8);\n    var Td9 = Tr.insertCell(8);\n    Td9.innerHTML='<input type=\"text\" readonly=\"readonly\" style=\"cursor: default; width: 70px;\" name=\"pay'+i+'\" id=\"pay'+i+'\" value=\"'+pay+'\" />';\n    Tr.appendChild(Td9);\n}\nfunction printOut(block)\n{\n    var value = block.innerHTML;\n    var printPage = window.open(\"\",\"printPage\",\"\");\n    printPage.document.open();\n    printPage.document.write(\"<HTML><head></head><BODY onload='window.print();window.close()'>\");\n    printPage.document.write(\"<PRE>\");\n    printPage.document.write(value);\n    printPage.document.write(\"</PRE>\");\n    printPage.document.close(\"</BODY></HTML>\");\n}\n</script>\n</head>\n<body>\n<table width=\"589\" align=\"right\" style=\"position: absolute; right: 0px; top: 0px; width: 589px;\">\n  <tr>\n    <td width=\"118\" height=\"23\" style=\"background-color: #3366CC;\"><div align=\"center\" class=\"style2\"><a href=\"query.php\" target=\"mainFrame\">検索</a></div></td>\n    <td width=\"118\" style=\"background-color: #3366CC;\"><div align=\"center\" class=\"style2\"><a href=\"addnew.php\" target=\"mainFrame\">顧客管理</a></div></td>\n    <td width=\"118\" style=\"background-color: #3366CC;\"><div align=\"center\" class=\"style2\"><a href=\"shop.php\" target=\"mainFrame\">代理店管理</a></div></td>\n    <td width=\"118\" style=\"background-color: #3366CC;\"><div align=\"center\" class=\"style2\"><a href=\"statistic.php\" target=\"mainFrame\">統計管理</a></div></td>\n  <td width=\"118\" style=\"background-color: #9966FF;\"><div align=\"center\" class=\"style2\"><a href=\"output.php\" target=\"mainFrame\">会計管理</a></div></td></tr>\n</table>\n<br/>\n<br/>\n<form method='post' action='exout.php'>\n<div id='block' align='center'>\n2013/4/1~2013/4/11\n総契約者DATA\n<table width='737' border='0' name='info' id='info'>\n<tr>\n<td align='center' bgcolor='#9999FF'>Lomiro ID</td>\n<td align='center' bgcolor='#9999FF'>氏名</td>\n<td align='center' bgcolor='#9999FF'>住所</td>\n<td align='center' bgcolor='#9999FF'>携帯電話</td>\n<td align='center' bgcolor='#9999FF'>MAC</td>\n<td align='center' bgcolor='#9999FF'>型番</td>\n<td align='center' bgcolor='#9999FF'>代理店コード</td>\n<td align='center' bgcolor='#9999FF'>支払方法</td>\n<td align='center' bgcolor='#9999FF'>支払日</td>\n</tr>\n</table>\n</div>\n<br/>\n<input type='submit' id='output' name='output' value='Excel出力' />\n<input type='button' id='print' name='print' value='スキャンアウト' onclick='printOut(block)' />\n</form>\n</body>\n<script type='text/javascript'>addRow('0','dayang','','','','','','','0','');\n\n</script>\n</html>\n", "\n\n", "And if the data is full-width or too long, it will change line with failed way. like:", "\n\n", "    '9620001福島県須賀川市森宿\n60-1'\n", "\n\n", "The above line should be one line but it change line!", "\n\n", "My web page is php, and I try several method to fix and nothing useful.", "\nThe error of php code is:", "\n\n", "echo rtrim(\"<script type='text/javascript'>\");\necho \"addRow('\";\necho $k;\necho \"','\";\necho $mail;\necho \"','\";\necho $name;\necho \"','\";\necho trim($addr);\necho \"','\";\necho $cell;\necho \"','','','\";\necho $shop;\necho \"','\";\necho $pay;\necho \"','\";\necho $date;\necho \"');\".\"\n</scr\";\necho \"ipt>\".\"\n\";\n$k++;\n", "\n\n", "The data is fetch from database, and I see the data in database doesn't have any change line character.", "\n\n", "The problem I guess is that the data appended is too long, and it is full-width.", "\n\n", "I know the problem is similar to others, but I have tried any others' method and the problem still can't be solved.", "\n\n", "I tried use \n", "\n\n", "and delete that line, or let my php file be utf-8 encoding.", "\n\n", "Let  tag be split like ''\n......", "\n\n", "Please help me!", "\n    "]], "Tag": "程序设计"}
{"Answer": "varchar2类型的改为CLOB类型，这样多少都不会超了，至少在人类正常使用的范围内", "Konwledge_Point": "字符型", "Question": ["数据库如何插入长字符串", ["往数据库里插入的时候，由于字段是文本型的，字符串的长度比较大，每次提交，就会抛出：“error code [17070]，数据大小超出此类型的最大值：2098”等。之前如果字段超长无法插入，应该提示“ORA-01401:插入的值对于列过大”。", "\n\n", "而且之前我将数据库中的varchar2类型的字段改成10240的时候他自动变为4000，好像这个varchar2最长就是4000个字符啊，要是超长文本怎么办啊，不想把文章给截断，该怎么做啊？"]], "Tag": "程序设计"}
{"Answer": "（2）添加带有formatting的Number对象 \r\njxl.write.NumberFormat nf = new jxl.write.NumberFormat(\"#.##\"); \r\n\r\n\r\n（3）添加Number对象 \r\n（3.1）显示number对象数据的格式 \r\n\r\njxl.write.NumberFormat nf = new jxl.write.NumberFormat(\"#.##\"); \r\njxl.write.WritableCellFormat wcfN = new jxl.write.WritableCellFormat(nf); \r\n\r\njxl.write.Number labelNF = new jxl.write.Number(1, 1, 3.1415926, wcfN); \r\nws.addCell(labelNF);", "Konwledge_Point": "字符型", "Question": ["JAVA操作excel生成的格式问题，javaeye能人多，期待能人的解决", ["现在在做一个excel 转换", "\n我是用 jxl 来 实现的， 功能 大致实现了，现在 有一个 问题 是", "\n在 使用", "\n\n", "new jxl.write.Label时 这里的方法 只能 传 \" 01 \" 字符串型", "\n\n", "[code=Java]", "\n jxl.write.Label labelAC11 = new jxl.write.Label(28, 1, \"01\");", "\n jxl.write.Label labelAD11 = new jxl.write.Label(29, 1, \"公司汇率\");", "\n jxl.write.Label labelAC11 = new jxl.write.Label(28, 1, \"2\");", "\n[/code]", "\n\n", "现象：", "\n\n", "生成的 excel 中 单元格里 的 值 为 文本 格式，因为这生成的 excel 是要 用户要手动导入到 sql 数据库里的", "\n所以  如果 excel 里的 值 是文本格式 string ，而 数据库中对应的表的 该字段是 int 型 ，那么导入到数据库时 则会将值改为空！", "\n\n", "问题：", "\n有没有 办法在 生成 excel 时 就 将 有关 数字的 列 生成 数字格式，不是 文本格式呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;String.charAt&amp;#xff08;&amp;#xff09;&lt;br /&gt;例如&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; CharAt {  \n     &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {    \n            String s &amp;#61; &amp;#34;bejing welcome you&amp;#34;;               &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(s.charAt(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));               &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(s.charAt(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;));  &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(s.charAt(&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;));  \n          }  \n}  \n\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;的结果就是&lt;br /&gt;e&lt;br /&gt;g&lt;br /&gt;y&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["java如何吧一个String型一个一个的输出", ["java如何吧一个String型一个一个的输出", "比如 String s=“abcdefg”;", "如何输出a,b,c,d,e,f,g"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;A CRC or Hash would be better than random number.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$number =  hexdec(crc32($str));\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["在大型MySQL数据库中用random int替换字符串的最快方法？", ["\n\n", "I have a \"rather\" large MySQL database (5,000,000+ records in some tables) with 7 tables that are queried using several table joins.  The only problem I have is the data I am importing, some datasets have strings in the column that is being used to join the tables, and because of that, the query is incredibly slow.", "\n\n", "What I am trying to do is replace all of these strings with random integers (making sure the int hasn't been used already), and that includes (ex. xxx_id column) keeping a record of old_xxx_id and new_xxx_id so that tables that are linked stay linked correctly when I update them.", "\n\n", "My question is, what is the fastest way to do this?  I would prefer php and MySQL but I am open to other languages/sql-databases.  I have a script that works, but it replaces line-by-line and can take hours and sometimes a day or two to insert the new data into the database.", "\n\n", "Thanks!", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;参考如下&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;/**\n * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;author&lt;/span&gt; huazie\n * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;version&lt;/span&gt; 2.0.0\n * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;since&lt;/span&gt; 2.0.0\n */&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Test&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(&lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt;[] args) {\n        &lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt; str &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;111a&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; num &amp;#61; convert(str);\n        System.out.println(num);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; convert(&lt;span class=\"hljs-keyword\"&gt;String&lt;/span&gt; str) {\n        &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            num &amp;#61; &lt;span class=\"hljs-keyword\"&gt;Double&lt;/span&gt;.parseDouble(str);\n        } &lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt; (NumberFormatException e) {\n            &lt;span class=\"hljs-comment\"&gt;// 转换异常&lt;/span&gt;\n            System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;转换失败&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; num;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["关于#java#的问题：试图把字符串转换成double型的数值，在可能会出现问题时抛出一个异常（NumberFormatException）(开发工具-eclipse)", ["创建一个方法，试图把字符串转换成double型的数值，在可能会出现问题时抛出一个异常（NumberFormatException）。采用适当的捕获机制来捕获异常。"]], "Tag": "程序设计"}
{"Answer": "括号的需要指定初始化值，不加括号的没有进行初始化。“不同下标范围的数组赋值，必须用括号的写法么？”啥意思？", "Konwledge_Point": "字符型", "Question": ["数组赋值两种写法，一种是用括号的写法，一种不用括号，两种写法的区别是什么？", ["数组赋值两种写法，一种是用括号的写法，一种不用括号，两种写法的区别是什么？不同下标范围的数组赋值，必须用括号的写法么？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;],max,min,sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,ave;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    }\n    min&amp;#61;a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];max&amp;#61;a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        sum&amp;#43;&amp;#61;a[i];\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(min&amp;gt;a[i]) min&amp;#61;a[i];\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(max&amp;lt;a[i]) max&amp;#61;a[i]; \n    }\n    sum&amp;#61;sum-min-max;\n    ave &amp;#61; sum/&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,ave);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;觉得有用的话&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;一下哈&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言数组 字符串C++", ["一维数组定义", "int a[10]; 这样我们便定义了一个数组a，它分配10个int类型空间。", "数组的初始化", "我们可以在定义一个数组的同时对它进行初始化操作，例如： int a[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};", "也可以只对数组的一部分元素进行初始化操作，例如： int a[10] = {1, 2, 3, 4, 5}; 在定义数组时，只对一部分元素赋值，没有赋值的自动为0。", "如果我们对数组的所有元素都进行了初始化操作，那么我们甚至可以省略数组长度不写，编译器可以根据初始化数组元素的个数自动计算出数组的长度，但是写上总是好的，这样也便于其他人阅读和维护。 int a[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};", "数组元素的访问", "访问数组中的元素可以采用数组名加下标的方式，下标是从0开始，c并不检查数组下标是否越界，所以在访问数组中的元素时需要注意，防止越界。 int a[10]; int i;", "for (i = 0; i < 10; i++) { a[i] = i + 1; }", "编程要求", "补全下面代码片段中Begin至End中间的代码，具体要求如下：编程实现：歌手评分系统：有7个评委给歌手打分（分数是float型），请编程计算歌手的成绩。（输出保留两位小数）规则：去掉一个最高分，去掉一个最低分，求平均分，就是歌手应得分。", "#include <stdio.h>", "int main()", "{", "    // 请在此添加代码", "    ", "    /********** Begin *********/", "\n", "    /********** End **********/", "\n", "    return 0;", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;排序的方法有很多种&amp;#xff1a;冒泡啊&amp;#xff0c;选择&amp;#xff0c;比较排序等&lt;br /&gt;写了一种冒泡供你参考&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;QCoreApplication&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;67&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;88&lt;/span&gt;}, len &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;&amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;len;&amp;#43;&amp;#43;j)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]&amp;gt;a[j])\n            {\n                &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; temp&amp;#61;a[i];\n                a[i]&amp;#61;a[j];\n                a[j]&amp;#61;temp;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;&amp;#43;&amp;#43;i)\n    {\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;a[i];\n    }\n    cout&amp;lt;&amp;lt;endl;\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/153285840356118.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["定义一个长度为100的int型数组,输入n(n=1&&n=10 0),输入n个值到数组中,用选择排序法将它们从小到大排序后输出。还有其他方法吗？", ["#include <stdio.h>", "int main()", "{", "    int a[100] = {23, 45, 60, 67, 88}, len = 5;", "    int value;", "    int i, type, j;", "    while (scanf (\"%d\", &value)){", "        if (value < 0)break;", "        for (i = 0; i < len; ++i){", "            if (value == a[i]){", "                type = 1;", "                break;", "            }", "            else if (a[i] > value){", "                type = 2;", "                break;", "            }", "        }", "        if (i >= len){", "            a[len++] = value;", "        }", "        else {", "            if (type == 1){", "                for (j = i; j < len-1; ++j){", "                    a[j] = a[j+1];", "                }", "                len--;", "            }", "            else if (type == 2){", "                for (j = len; j > i; --j){", "                    a[j] = a[j-1];", "                }", "                len++;", "                a[i] = value;", "            }", "        }", "        for (i = 0; i < len; ++i){", "            printf (\"%5d\", a[i]);", "        }", "        printf (\"\\n\");", "        if (len >= 100){", "            printf (\"More than 100!\\n\");", "            break;", "        }", "    }", "\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;content&lt;/span&gt; &amp;#61; input(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入内容&amp;#xff1a;&amp;#34;&lt;/span&gt;) \nnubs &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n \n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;content&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.isdigit&lt;/span&gt;():        #有没有办法在这里判断循环的字符是不是数字&amp;#xff1f;\n        nubs &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#34;您输入的字符中有{nubs}个数字&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["python中怎么写判断一个字符串里的子字符是否为整数", ["python中怎么写判断一个字符串里的子字符是否为整数", "\n", "计算用户输入的内容中有几个整数（以个位数为单位）。", "\n", "如：content = input(\"请输入内容：\")   # 如fhdal234slfh98769fjdla", "\n", "content", " = input(", "\"请输入内容：\"", ") \nnubs = ", "0", "\nlis = ", "[", "\"0\"", ",", "\"1\"", ",", "\"2\"", ",", "\"3\"", ",", "\"4\"", ",", "\"5\"", ",", "\"6\"", ",", "\"7\"", ",", "\"8\"", ",", "\"9\"", "]", "\n\n", "for", " ", "i", " ", "in", " ", "content", ":\n\n      ", "if", " ", "i", " ", "in", " lis:        #有没有办法在这里判断循环的字符是不是数字？\n\n          nubs += ", "1", "\n\n", "print", "(f", "\"您输入的字符中有{nubs}个数字\"", ")", "\n", "\n", "运行结果及报错内容", "\n", "尝试过的方法和思路:尝试过把 if i in lis:这里改成if i is int():，想了又不对，这个int()是转换成数字型,如果写了其他字符就会报错 于是就找相关资料 没有找到", "\n", "我想要达到的结果:如何在不自定义函数的情况下,把if i in lis 这里改一下,变成:判断i是否是一个整数.应该怎么写?还是只能要先自定义一个函数?"]], "Tag": "程序设计"}
{"Answer": "已解决，struts2 的转换器，Date格式化时是按\"yyyy-MM-dd\"T\"HH:mm:ss\"的格式编写的，且使用了locale，由于我的浏览器默认语言环境是英语，所以出现了错误，将浏览器环境改为中文就ok了。", "Konwledge_Point": "字符型", "Question": ["Hibernate整合Struts2时 string无法转换成date型", ["1.如题，struts2版本为2.1，hibernate版本为4.1.4，jdk版本为1.8，开发平台是myeclipse2015和tomcat8，", "\n2.在保存日期（格式是yyyy-MM-dd）时，出现错误Method \"setBirthday\" failed for object cn.mldn.pojo.Member@3a915d39 [java.lang.NoSuchMethodException: cn.mldn.pojo.Member.setBirthday([Ljava.lang.String;)] ；", "\n3. * *  同样的代码在别人的电脑上ok，在我电脑上不行，myeclipse重新安装并在新的工作区重新写仍然不行！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;修改处见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;// 利用栈和队列的特性设计一个算法&amp;#xff0c;用于判断一个字符串是否为回文。&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;# &lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;# &lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;# &lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; OK 1&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;# &lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; ERROR 0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; Status;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;QNode&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//链队列结点 &lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;   data;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;QNode&lt;/span&gt; *next;\n}QNode,*QueuePtr;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;{\n    QueuePtr front;\n    QueuePtr rear;&lt;span class=\"hljs-comment\"&gt;//队尾 &lt;/span&gt;\n}LinkQueue; \nLinkQueue Q;\n&lt;span class=\"hljs-function\"&gt;Status &lt;span class=\"hljs-title\"&gt;InitQueue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkQueue *Q)&lt;/span&gt;&lt;/span&gt;{\n    Q-&amp;gt;front &amp;#61; Q-&amp;gt;rear &amp;#61; (QNode*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(QNode));\n    Q-&amp;gt;front-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n&lt;span class=\"hljs-function\"&gt;Status &lt;span class=\"hljs-title\"&gt;EnQueue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkQueue *Q,&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; e)&lt;/span&gt;&lt;/span&gt;{\n    QueuePtr p;\n    p &amp;#61; (QueuePtr)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(QNode));\n    p-&amp;gt;data &amp;#61; e;\n    p-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    Q-&amp;gt;rear-&amp;gt;next &amp;#61; p;\n    Q-&amp;gt;rear &amp;#61; p;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n&lt;span class=\"hljs-function\"&gt;Status &lt;span class=\"hljs-title\"&gt;DeQueue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(LinkQueue *Q,&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *e)&lt;/span&gt;&lt;/span&gt;{\n    QueuePtr p;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(Q-&amp;gt;front &amp;#61;&amp;#61; Q-&amp;gt;rear) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ERROR;\n    p &amp;#61; Q-&amp;gt;front-&amp;gt;next;\n    *e &amp;#61; p-&amp;gt;data;\n    Q-&amp;gt;front-&amp;gt;next &amp;#61; p-&amp;gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(Q-&amp;gt;rear &amp;#61;&amp;#61; p)Q-&amp;gt;rear &amp;#61; Q-&amp;gt;front;\n    &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(p);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *base;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *top;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; stacksize;\n}Sqstack;\nSqstack S;\n&lt;span class=\"hljs-function\"&gt;Status &lt;span class=\"hljs-title\"&gt;InitStack&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Sqstack *S)&lt;/span&gt;&lt;/span&gt;{\n    S-&amp;gt;base &amp;#61; (&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;));\n    S-&amp;gt;top &amp;#61; S-&amp;gt;base;\n    S-&amp;gt;stacksize &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n&lt;span class=\"hljs-function\"&gt;Status &lt;span class=\"hljs-title\"&gt;Push&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Sqstack *S,&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; e)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//S-&amp;gt;top&amp;#43;&amp;#43;;           //修改&lt;/span&gt;\n    *S-&amp;gt;top&amp;#43;&amp;#43; &amp;#61; e;        &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n&lt;span class=\"hljs-function\"&gt;Status &lt;span class=\"hljs-title\"&gt;Pop&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Sqstack *S,&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *e)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(S-&amp;gt;top &amp;#61;&amp;#61; S-&amp;gt;base)&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ERROR;\n    *e &amp;#61; *--S-&amp;gt;top;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; OK;\n}\n&lt;span class=\"hljs-function\"&gt;Status &lt;span class=\"hljs-title\"&gt;StackEmpty&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Sqstack *S)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(S-&amp;gt;top&amp;#61;&amp;#61;S-&amp;gt;base){\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; e;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;InitStack&lt;/span&gt;(&amp;amp;S);\n    &lt;span class=\"hljs-built_in\"&gt;InitQueue&lt;/span&gt;(&amp;amp;Q);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;((ch&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;())!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;){\n            &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%c&amp;#34;,&amp;amp;ch);  修改  这句多余了&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;Push&lt;/span&gt;(&amp;amp;S,ch);\n        &lt;span class=\"hljs-built_in\"&gt;EnQueue&lt;/span&gt;(&amp;amp;Q,ch);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;StackEmpty&lt;/span&gt;(&amp;amp;S)){\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s,q;\n        &lt;span class=\"hljs-built_in\"&gt;Pop&lt;/span&gt;(&amp;amp;S,&amp;amp;s);\n        &lt;span class=\"hljs-built_in\"&gt;DeQueue&lt;/span&gt;(&amp;amp;Q,&amp;amp;q);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s&amp;#61;&amp;#61;q){\n            j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是回文&amp;#34;&lt;/span&gt;);\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文&amp;#34;&lt;/span&gt;);    \n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n} \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["C语言数据结构栈与队列", [" 数据结构练习：利用栈和队列的特性设计一个算法，用于判断一个字符串是否为回文，输出不对，用内存很大", "\n", "// 利用栈和队列的特性设计一个算法，用于判断一个字符串是否为回文。", "\n", "# ", "include", " ", "<stdio.h>", "\n", "# ", "include", " ", "<stdlib.h>", "\n", "# ", "define", " OK 1", "\n", "# ", "define", " ERROR 0", "\n", "typedef", " ", "int", " Status;\n", "typedef", " ", "struct", " ", "QNode", "{", "//链队列结点 ", "\n    ", "char", " data;\n    ", "struct", " ", "QNode", " *next;\n}QNode,*QueuePtr;\n", "typedef", " ", "struct", "{\n    QueuePtr front;\n    QueuePtr rear;", "//队尾 ", "\n}LinkQueue; \nLinkQueue Q;\n", "Status ", "InitQueue", "(LinkQueue *Q)", "{\n    Q->front = Q->rear = (QNode*)", "malloc", "(", "sizeof", "(QNode));\n    Q->front->next = ", "NULL", ";\n    ", "return", " OK;\n}\n", "Status ", "EnQueue", "(LinkQueue *Q,", "char", " e)", "{\n    QueuePtr p;\n    p = (QueuePtr)", "malloc", "(", "sizeof", "(QNode));\n    p->data = e;\n    p->next = ", "NULL", ";\n    Q->rear->next = p;\n    Q->rear = p;\n    ", "return", " OK;\n}\n", "Status ", "DeQueue", "(LinkQueue *Q,", "char", " *e)", "{\n    QueuePtr p;\n    ", "if", "(Q->front == Q->rear) ", "return", " ERROR;\n    p = Q->front->next;\n    *e = p->data;\n    Q->front->next = p->next;\n    ", "if", "(Q->rear == p)Q->rear = Q->front;\n    ", "free", "(p);\n    ", "return", " OK;\n}\n", "typedef", " ", "struct", "{\n    ", "char", " *base;\n    ", "char", " *top;\n    ", "int", " stacksize;\n}Sqstack;\nSqstack S;\n", "Status ", "InitStack", "(Sqstack *S)", "{\n    S->base = (", "char", "*)", "malloc", "(", "10", "*", "sizeof", "(", "char", "));\n    S->top = S->base;\n    S->stacksize = ", "10", ";\n    ", "return", " OK;\n}\n", "Status ", "Push", "(Sqstack *S,", "char", " e)", "{\n    S->top++;\n    *S->top = e;\n    ", "return", " OK;\n}\n", "Status ", "Pop", "(Sqstack *S,", "char", " *e)", "{\n    ", "if", "(S->top == S->base)", "return", " ERROR;\n    *e = *--S->top;\n    ", "return", " OK;\n}\n", "Status ", "StackEmpty", "(Sqstack *S)", "{\n    ", "if", "(S->top==S->base){\n        ", "return", " ", "0", ";\n    }", "else", "{\n        ", "return", " ", "1", ";\n    }\n}\n", "int", " ", "main", "()", "{\n    ", "char", " ch;\n    ", "char", " e;\n    ", "int", " j=", "0", ";\n    ", "InitStack", "(&S);\n    ", "InitQueue", "(&Q);\n    ", "while", "((ch=", "getchar", "())!=", "'\\n'", "){\n        ", "scanf", "(", "\"%c\"", ",&ch);\n        ", "Push", "(&S,ch);\n        ", "EnQueue", "(&Q,ch);\n    }\n    ", "while", "(", "StackEmpty", "(&S)){\n        ", "char", " s,q;\n        ", "Pop", "(&S,&s);\n        ", "DeQueue", "(&Q,&q);\n        ", "if", " (s==q){\n            j = ", "1", ";\n        }", "else", "{\n            j = ", "0", ";\n            ", "break", ";\n        }\n    }\n    ", "if", "(j==", "1", "){\n        ", "printf", "(", "\"是回文\"", ");\n    }", "else", "{\n        ", "printf", "(", "\"不是回文\"", ");    \n    }    \n    ", "return", " ", "0", ";\n} \n\n", "\n", "输入abcba型回文以及不回文字符串时，按两次回车才输出不是回文，内存占用大，输入abccba时按一次回车输出不是回文", "\n", "编译无警告，应该是哪里逻辑错了", "\n", "想得到正确输出"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/alvinhuai/article/details/82790888", "Konwledge_Point": "字符型", "Question": ["有办法通过文本框设置字节型数值吗？", ["文本框只能输入数字，然后将数字以字节的形式提取出来并赋值给字节定义的定义，而不是字符串"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes, &lt;code&gt;Blah.valueOf(\"A\")&lt;/code&gt; will give you &lt;code&gt;Blah.A&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Note that the name must be an &lt;em&gt;exact&lt;/em&gt; match, including case: &lt;code&gt;Blah.valueOf(\"a\")&lt;/code&gt; and &lt;code&gt;Blah.valueOf(\"A \")&lt;/code&gt; both throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;The static methods &lt;code&gt;valueOf()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; are created at compile time and do not appear in source code. They do appear in Javadoc, though; for example, &lt;a href=\"http://docs.oracle.com/javase/7/docs/api/java/awt/Dialog.ModalityType.html\" rel=\"noreferrer\"&gt;&lt;code&gt;Dialog.ModalityType&lt;/code&gt;&lt;/a&gt; shows both methods.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["如何从 Java 中的字符串值中获取枚举值？", ["\n\n", "Say I have an enum which is just", "\n\n", "public enum Blah {\n    A, B, C, D\n}\n", "\n\n", "and I would like to find the enum value of a string, for example ", "\"A\"", " which would be ", "Blah.A", ". How would it be possible to do this?", "\n\n", "Is the ", "Enum.valueOf()", " the method I need? If so, how would I use this?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/604424/how-to-get-an-enum-value-from-a-string-value-in-java"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;用js-xlsx来实现保存&amp;#xff0c;需要自己获取表格的数据源后&amp;#xff0c;将行中的数字转为字符串&amp;#xff0c;目测ag-grid导出的列类型是数字类型的&amp;#xff0c;而不是字符串导致设置列为数字&amp;#xff0c;太大变科学计数法了。js-xlsx则不会&amp;#xff0c;根据传入的类型设置Excel单元格的对应类型&amp;#xff0c;不会转科学计数法&lt;br /&gt;简单示例如下&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/783784653746129.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&amp;lt;!-- (C) 2013-present  SheetJS http://sheetjs.com --&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&amp;lt;!-- vim: set ts&amp;#61;2: --&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;SheetJS JS-XLSX In-Browser Write Demo&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;https://unpkg.com/xlsx/dist/shim.min.js&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n        &lt;span class=\"hljs-comment\"&gt;/* original data */&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; filename &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;write.xlsx&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; data &amp;#61; [[&lt;span class=\"hljs-string\"&gt;&amp;#39;001&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;11111112003&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;11111112003&amp;#39;&lt;/span&gt;], [&lt;span class=\"hljs-string\"&gt;&amp;#39;002&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;11111112003&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;11111112003&lt;/span&gt;], [&lt;span class=\"hljs-string\"&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;bar&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2014-02-19T14:30Z&amp;#34;&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#34;0.3&amp;#34;&lt;/span&gt;], [&lt;span class=\"hljs-string\"&gt;&amp;#34;baz&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;qux&amp;#34;&lt;/span&gt;]]\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; ws_name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;SheetJS&amp;#34;&lt;/span&gt;;\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;typeof&lt;/span&gt; &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt; !&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;());\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; wb &amp;#61; &lt;span class=\"hljs-variable constant_\"&gt;XLSX&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;utils&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;book_new&lt;/span&gt;(), ws &amp;#61; &lt;span class=\"hljs-variable constant_\"&gt;XLSX&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;utils&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;aoa_to_sheet&lt;/span&gt;(data);\n\n        &lt;span class=\"hljs-comment\"&gt;/* add worksheet to workbook */&lt;/span&gt;\n        &lt;span class=\"hljs-variable constant_\"&gt;XLSX&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;utils&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;book_append_sheet&lt;/span&gt;(wb, ws, ws_name);\n\n        &lt;span class=\"hljs-comment\"&gt;/* write workbook */&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;typeof&lt;/span&gt; &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt; !&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;());\n        &lt;span class=\"hljs-variable constant_\"&gt;XLSX&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;writeFile&lt;/span&gt;(wb, filename);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;typeof&lt;/span&gt; &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt; !&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Date&lt;/span&gt;());\n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241394005546146.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["在使用ag-grid自带的exportDataAsExcel导出excel方法时，数字或文本数字过大时导出后就成了科学计数，有什么办法解决么", ["问题遇到的现象和发生背景", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;输出结果是213.83&lt;br /&gt;解释如下&amp;#xff1a;&lt;br /&gt;&amp;#xff05;-4.2f这里&amp;#xff0c;负号表示左对齐&amp;#xff0c;4表示数据宽度&amp;#xff0c;如果超过4&amp;#xff0c;则按实际长度显示&amp;#xff0c;如果不足4位&amp;#xff0c;右侧补充空格&amp;#xff08;因为是左对齐&amp;#xff09;&amp;#xff0c;&lt;br /&gt;.2表示小数点后保留2位&amp;#xff0c;小数点后第3位四舍五入&amp;#xff0c;这里x&amp;#61;213.82631&amp;#xff0c;整数部分213&amp;#xff0c;小数部分保留2位&amp;#xff0c;第3位四舍五入&amp;#xff0c;就是0.83&lt;br /&gt;所以&amp;#xff0c;整体输出就是213.83&amp;#xff0c;长度超过4&amp;#xff0c;按实际长度输出。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;如果解决了你的问题&amp;#xff0c;如有帮助&amp;#xff0c;请点击我的回答下方的“&lt;strong&gt;采纳该答案&lt;/strong&gt;”按钮帮忙采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/661704604936160.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["printf函数输出超域宽", ["x为float型变量，x=213.82631，", "则printf（\"％-4.2f\\n\",x）;输出结果为？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;给个例子&amp;#xff0c;题主看是否是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n\ndef &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(nparray, d)&lt;/span&gt;&lt;/span&gt;:\n    shape &amp;#61; nparray.shape\n    nparray &amp;#61; nparray.reshape(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    arr &amp;#61; np.array(shape).reshape(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    arr &amp;#61; list(map(lambda x: d[x] &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; d.keys() &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, nparray))\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; np.array(arr).reshape(shape)\n\nnparray &amp;#61; np.array([[&lt;span class=\"hljs-string\"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;],[&lt;span class=\"hljs-string\"&gt;&amp;#39;key3&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;key4&amp;#39;&lt;/span&gt;]])\nprint(nparray)\nd &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;key1&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2.5&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;key2&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;3.6&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;key3&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4.7&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;key4&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2.4&lt;/span&gt;}\nprint(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(nparray, d)&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/175595208156180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["如何根据以字符串为键的字典，将形状不固定的numpy字符串数组进行转换？", ["问题遇到的现象和发生背景", "\n", "请教各位，我需要写这么一个函数，这个函数需要输入一个numpy字符串数组，输出同样shape的numpy浮点型数组。输入和输出元素的对应关系记录在一个字典里，字典的key为字符串，value为浮点数。这样的函数应该怎么写呢？", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "程序设计"}
{"Answer": "name是字符数组，而name[10]是这个数组中第10个元素，即char类型变量，占一个字节，而汉字编码都至少需要两个字节，因此存不下。C++中有一个\r\nwchar_t 类型，即所谓的宽字符，每个字符占两个字节，专门用于非ASII编码的字符表示。其实只要不访问单个字，char类型也可以，只是两个char类型的\r\n字符表示一个汉字，对于整个字符串的表示来说没有影响，也就是说你需要把那个下标10去掉", "Konwledge_Point": "字符型", "Question": ["C++ char数组不能赋值中文", ["#include", "\nusing namespace std;", "\nclass student", "\n{", "\npublic:", "\n    char *getname()", "\n    {", "\n        cout << \"姓名:\";", "\n        cin >> name[10];      //为什么输入字母、数字都可以正常运行，输入中文就不行", "\n        count++;", "\n        return name;", "\n    }", "\n    void seteng()", "\n    {", "\n        cout  << \"英语:\";", "\n        cin >> english;", "\n        engtotal += english;", "\n    }", "\n    void setchi()", "\n    {", "\n        cout << \"语文:\";", "\n        cin >> chinese;", "\n        chitotal += chinese;", "\n    }", "\n    void setmath()", "\n    {", "\n        cout  << \"数学:\";", "\n        cin >> math;", "\n        mattotal += math;", "\n    }", "\n    static float getaverage(float x){   return x / count;}", "\n    static void show()", "\n    {", "\n        cout << \"英语总分:\" << engtotal << \" 平均分:\" << getaverage(engtotal)<\n        cout \n        cout \n    }", "\nprotected:", "\n    char name[10];", "\n    static  int count;", "\n    int chinese;", "\n    int math;", "\n    int english;", "\n    static int engtotal;", "\n    static int chitotal;", "\n    static int mattotal;", "\n};", "\nint student::count = 0;            //类的成员可以这样初始化吗？", "\nint student::engtotal = 0;", "\nint student::chitotal = 0;", "\nint student::mattotal = 0;", "\nclass rg :public student", "\n{", "\npublic:", "\n    void setjava()", "\n    {", "\n        cout  \n        cin >> java;", "\n        rgcount++;", "\n        javatotal += java;", "\n    }", "\n    void setweb()", "\n    {", "\n        cout  << \"web:\";", "\n        cin >> web;", "\n        webtotal += web;", "\n    }", "\n    static void show()", "\n    {", "\n        cout << \"java总分:\" <\n        cout \n    }", "\nprotected:", "\n    static int rgcount;", "\n    int java;", "\n    int web;", "\n    static int javatotal;", "\n    static int webtotal;", "\n};", "\nint rg::rgcount = 0;", "\nint rg::javatotal = 0;", "\nint rg::webtotal = 0;", "\nclass xa :public student", "\n{", "\npublic:", "\n    void setwangluo()", "\n    {", "\n        cout  \n        cin >> wangluo;", "\n        xacount++;", "\n        wangluototal += wangluo;", "\n    }", "\n    void setanquan()", "\n    {", "\n        cout  << \"安全:\";", "\n        cin >> anquan;", "\n        anquantotal += anquan;", "\n    }", "\n    static void show()", "\n    {", "\n        cout << \"网络总分:\" << wangluototal << \"平均分:\" << (float)wangluototal /xacount  << endl;", "\n        cout << \"安全总分\" << anquantotal << \"平均分:\" << (float)anquantotal /xacount  << endl;", "\n    }", "\nprotected:", "\n    static int xacount;", "\n    int wangluo;", "\n    int anquan;", "\n    static int wangluototal;", "\n    static int anquantotal;", "\n};", "\nint xa::xacount = 0;", "\nint xa::wangluototal = 0;", "\nint xa::anquantotal = 0;", "\nint main()", "\n{", "\n    int rgnum, xanum;", "\n    rg rgst[300];", "\n    xa xast[300];", "\n    cout<< \"输入软件工程专业学生人数( \n    cin >> rgnum;", "\n    for (int i = 0; i < rgnum; i++)", "\n    {", "\n        rgst[i].getname();", "\n        rgst[i].seteng();", "\n        rgst[i].setchi();", "\n        rgst[i].setmath();", "\n        rgst[i].setjava();", "\n        rgst[i].setweb();", "\n    }", "\n    cout<\n    cin >> xanum;", "\n    for (int n = 0; n < xanum; n++)", "\n    {", "\n        xast[n].getname();", "\n        xast[n].seteng();", "\n        xast[n].setchi();", "\n        xast[n].setmath();", "\n        xast[n].setwangluo();", "\n        xast[n].setanquan();", "\n    }", "\n    student::show();", "\n    rg::show();", "\n    xa::show();", "\n    cout << endl;", "\n    return 0;", "\n}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;直接按读入字符情况分类吧&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["现在已经声明了一个大小为 100 的数组 a，即 int a[100];。假设数组的起始地址位置为 0x00000000。  现在给定一串字符串，询问这个字符串所对应的地址（用十六进制表示）。", ["现在已经声明了一个大小为 100 的数组 a，即 int a[100];。假设数组的起始地址位置为 0x00000000。", "\n", "现在给定一串字符串，询问这个字符串所对应的地址（用十六进制表示）。", "\n", "输入格式", "本题有多组输入", "\n", "对于每组输入，输入一行字符串。", "\n", "输出格式", "对于每一组数据，输出一行，为该字符串对应的地址，用形如 0x0012abcd 的十六进制数表示。", "\n", "输入样例", "a", "a+6", "&a", "&a+6", "&a[10]", "&a[10]+6", "输出样例", "0x00000000", "0x00000018", "0x00000000", "0x00000960", "0x00000028", "0x00000040", "Hint", "可以自己尝试下不同字符串对应的地址"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Java中可以使用java.util.ArrayList类来表示字符串的顺序表&amp;#xff08;也可以使用字符串数组&amp;#xff09;。要合并两个ArrayList&amp;#xff0c;可以使用addAll()方法&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;List&amp;lt;String&amp;gt; list1 &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new ArrayList&amp;lt;&amp;gt;()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nlist1.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;apple&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nlist1.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;banana&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\nList&amp;lt;String&amp;gt; list2 &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new ArrayList&amp;lt;&amp;gt;()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nlist2.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;pear&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nlist2.add(&lt;span class=\"hljs-string\"&gt;&amp;#34;grape&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\nlist1.addAll(list2)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;现在&amp;#xff0c;list1包含[&amp;#34;apple&amp;#34;, &amp;#34;banana&amp;#34;, &amp;#34;pear&amp;#34;, &amp;#34;grape&amp;#34;]。&lt;/p&gt;\n&lt;p&gt;如果想使用字符串数组&amp;#xff0c;可以使用java.util.Arrays类的静态方法copyOf()来扩展数组的大小&amp;#xff0c;然后使用System.arraycopy()方法将第二个数组的内容复制到第一个数组的后面&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; array1 &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;apple&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;banana&amp;#34;&lt;/span&gt;};\nString&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; array2 &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;pear&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;grape&amp;#34;&lt;/span&gt;};\n\nString&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; array3 &amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Arrays&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;copy&lt;span class=\"hljs-constructor\"&gt;Of(&lt;span class=\"hljs-params\"&gt;array1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;array1&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;length&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-params\"&gt;array2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;length&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;arraycopy(array2, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, array3, array1.length, array2.length);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;现在&amp;#xff0c;array3包含[&amp;#34;apple&amp;#34;, &amp;#34;banana&amp;#34;, &amp;#34;pear&amp;#34;, &amp;#34;grape&amp;#34;]。&lt;/p&gt;\n&lt;p&gt;如果使用的是Object类型的数组&amp;#xff0c;可以使用类似的方法。但是要注意如果想要使用addAll()方法&amp;#xff0c;需要确保两个顺序表的类型是兼容的。&lt;br /&gt;仅供参考&amp;#xff0c;望采纳&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["java怎么合并两个字符串顺序表", ["比如我的两个顺序表存储的都是string型或者object型，不是int型，那我怎么把他们进行合并呢?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; let num &amp;#61; 123;&lt;br /&gt; let str &amp;#61; num &amp;#43; &amp;#39;&amp;#39;;&lt;br /&gt; 或者&lt;br /&gt; let str &amp;#61; String(num)&lt;br /&gt; 或者&lt;br /&gt; let str &amp;#61; num.toString()&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["请问怎么在Vue里将Long转为String", ["后端传给我的数据是Long型的。但是他需要的是String型。让我自己转换，请求帮助。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;strlen只能用在字符串&lt;/p&gt;\n&lt;p&gt;定义空的int数组&lt;br /&gt;int am[1000];&lt;br /&gt;memset(am, 0, 1000);&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["strlen函数可以用在int型数组上吗，如何定义空int型数组？", ["想用一个int型数组储存未知个数但不会越界的n个整数，然后用strlen函数求它的长度来确定n...", "用strlen函数可以求int型数组长度嘛，是和char型一样在初始的时候全部赋空字符'\\0'还是怎么操作呢...求指点"]], "Tag": "程序设计"}
{"Answer": "int没赋值的话默认是0", "Konwledge_Point": "字符型", "Question": ["GSON使用toJson方法将类转为json格式字符串时的问", ["我在使用GSON使用toJson方法将类转为json格式字符串时*", "\n自己定了一个对象。 ", "\nBean b=new bean();", "\nb.setCard_id(\"XXXXXXXXXXXXX\");", "\nb.setMoney(3000);", "\n\n", "调用 gson.toJson(b);是没啥问题，但是 Bean里面还设置了其他的 ，int型，例如 add_money。", "\n但是转换出来的json语句就是{\"card_id\":\"XXXXXXXXXXXXX\",\"money\":3000,\"add_money\":0}", "\n有什么办法，规定，没有set的值不用输出 0吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$amount = floatval(str_replace('$','','$40.2356'));   //0 for empty string\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "字符型", "Question": ["如何从以美元符号开头的字符串中获取浮点格式中唯一的数字？", ["\n\n", "I've following code:", "\n\n", "<?php\n  $amount = '$40.0';\n?>\n", "\n\n", "I want to get the number 40 only(in float form) from the string $40 i.e. after excluding the dollar sign. The number entered by user could be even float also like $345.894534. In case of float number, the entire float number I should get except the dollar sign. Also the variable can be empty at a times so the operation of typecasting should perform only when the variable contains some value. How should I do this in optimum way and by making use of ready made functions available in PHP? Can somebody please help me in this regard?Thanks in advance.", "\n    "]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;我来帮你分析一下main方法里的代码吧&lt;br /&gt;一、首先当代码执行到 &lt;code class=\"language-javascript\"&gt;StringTest ex &amp;#61; new StringTest();&lt;/code&gt; 时&amp;#xff0c;内存图是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/06753313276611.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;注意&amp;#xff1a;&lt;code class=\"language-javascript\"&gt;new String(&amp;#34;good&amp;#34;);&lt;/code&gt; 会同时在字符串常量池和堆内存中创建对象&lt;/p&gt;\n&lt;p&gt; &lt;br /&gt;二、然后&amp;#xff0c;当执行到 &lt;code class=\"language-javascript\"&gt;ex.change(ex.str, ex.ch);&lt;/code&gt; 时&amp;#xff0c;内存图是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/70052713276614.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;注意&amp;#xff1a;可以看到有两个 str 字符串&amp;#xff0c;一个是属于 &lt;code class=\"language-javascript\"&gt;ex&lt;/code&gt; 类实例&amp;#xff0c;一个是属于 &lt;code class=\"language-javascript\"&gt;change()&lt;/code&gt; 方法的&amp;#xff0c;且都指向同一个内存区域&lt;/p&gt;\n&lt;p&gt; &lt;/p&gt;\n&lt;p&gt;三、当执行到&lt;code class=\"language-javascript\"&gt;System.out.print(ex.str &amp;#43; &amp;#34; and &amp;#34;);&lt;/code&gt;时&amp;#xff0c;上面的 &lt;code class=\"language-javascript\"&gt;change()&lt;/code&gt; 方法已经执行完毕了&amp;#xff0c;此时内存图是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/035521232766114.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;注意&amp;#xff1a;&lt;strong&gt;字符串是不可被修改的&amp;#xff0c;所有对字符串的修改都会产生一个新的字符串&lt;/strong&gt;。且又由于不是同一个变量&amp;#xff0c;所以这里 &lt;code class=\"language-javascript\"&gt;change()&lt;/code&gt; 方法只是改变了自身 &lt;code class=\"language-javascript\"&gt;str&lt;/code&gt; 字符串的地址&amp;#xff0c;使其指向了字符串常量池中的 &amp;#34;test ok&amp;#34;。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["有没有大会画这个内存解析", ["\n", "我画的应该有问题", "\n", "我的问题是这个", "\n", "我想问 一个字符串型变量作为形参 去接收一个字符串型变量", "然后在方法中 对形参这个字符串型变量做出改变 我知道会重新在常量池中造一个字符串 但是 为什么在主方法中 调用原本的字符串型变量 还是能找到 原有的字符串", "我想不通这个内存解析"]], "Tag": "程序设计"}
{"Answer": "/*需要分割的文章*/\r\n\t\tString str = \"第一句。第二句！第三句：第四句；第五句。\";\r\n\t\t\r\n\t\t/*正则表达式：句子结束符*/\r\n\t\tString regEx=\"：|。|！|；\"; \r\n\t\tPattern p =Pattern.compile(regEx);\r\n\t\tMatcher m = p.matcher(str);\r\n\r\n\t\t/*按照句子结束符分割句子*/\r\n\t\tString[] words = p.split(str);\r\n\t\t\r\n\t\t/*将句子结束符连接到相应的句子后*/\r\n\t\tif(words.length &gt; 0)\r\n\t\t{\r\n\t\t\tint count = 0;\r\n\t\t\twhile(count &lt; words.length)\r\n\t\t\t{\r\n\t\t\t\tif(m.find())\r\n\t\t\t\t{\r\n\t\t\t\t\twords[count] += m.group();\r\n\t\t\t\t}\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/*输出结果*/\r\n\t\tfor(int index = 0; index &lt; words.length; index++)\r\n\t\t{\r\n\t\t\tString word = words[index];\r\n\t\t\tSystem.out.println(\"word = \" + word);\r\n\t\t}", "Konwledge_Point": "字符型", "Question": ["如何在用string.split方法分割中文字符串后保留分隔符？", ["对中文字符串，用标点符号（如！？：；等）作为分隔符，使用string.split()方法，具体代码如下：", "\n/**********************************************************", "\n\n", "\n", "给段落分句：以句号。、感叹号！、问号？、冒号：、分号；为句子标识符", "\n", "@param String paragraph", "\n", "@return String[] result\n***********************************************************/\npublic String[] SplitSentence(String paragraph) {\nString[] result = null;\nresult = paragraph.split(\"。|！|？|：|；\");\nreturn result;\n}", "\n", "[b][color=red]问题：如何在分割后保留分隔符？[/color][/b]", "\n例如：paragraph=\"经济实力大幅提升。经济保持平稳快速发展，物价基本稳定。社会主义新农村建设扎实推进，区域发展协调性增强。创新型国家建设进展良好，自主创新能力较大提高。\"", "\n希望得到分割后的结果为：", "\nresult[0]=\"经济实力大幅提升[color=red]。[/color]\";", "\nresult[1]=\"经济保持平稳快速发展，物价基本稳定[color=red]。[/color]\";", "\nresult[2]=\"社会主义新农村建设扎实推进，区域发展协调性增强[color=red]。[/color]\";", "\nresult[3]=\"创新型国家建设进展良好，自主创新能力较大提高[color=red]。[/color]\";"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;传之前将这个数字变成字符串&amp;#xff0c;最快捷的方式就是&amp;#xff1a;123&amp;#43;&amp;#34;&amp;#34;&amp;#xff0c;数字&amp;#43;空字符串&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["js给函数传参数如何设置为字符串类型数据", ["是这样的，我在写一个前端页面 需要给某一个函数传一个将近20位的数字，始胡系统把他识别成了一个整数型数据以至于最后传回后端时数据并不完整", "\n", "\n", "我希望达到的效果", "\n"]], "Tag": "程序设计"}
{"Answer": "Q1没有%6.2f这种格式\r\nQ2第一次进入循环\r\nwhile(1&lt;2&lt;3)\r\nt=1,a=2,b=1,c--\r\n第二次循环(2&lt;1&lt;2)结果还是true\r\nt=2,a=1,b=2,c--\r\n第三次循环(1&lt;2&lt;1)结果flase跳出循环\r\n所以结果是121", "Konwledge_Point": "字符型", "Question": ["c语言基础题，求麻烦解答一下谢谢", ["\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Person {\n    &lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt; String name;\n    &lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt; String address;\n    &lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;char&lt;/span&gt; sex;\n    &lt;span class=\"hljs-keyword\"&gt;protected&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; age;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Person() {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.address &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.sex &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.age &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Person(String name, String address, &lt;span class=\"hljs-keyword\"&gt;char&lt;/span&gt; sex, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; age) {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.name &amp;#61; name;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.address &amp;#61; address;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.sex &amp;#61; sex;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.age &amp;#61; age;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;() {\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Name: &amp;#34;&lt;/span&gt; &amp;#43; name);\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Address: &amp;#34;&lt;/span&gt; &amp;#43; address);\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Sex: &amp;#34;&lt;/span&gt; &amp;#43; sex);\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Age: &amp;#34;&lt;/span&gt; &amp;#43; age);\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Student &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; Person {\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; math;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; english;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Student() {\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.math &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.english &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Student(String name, String address, &lt;span class=\"hljs-keyword\"&gt;char&lt;/span&gt; sex, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; age, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; math, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; english) {\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;(name, address, sex, age);\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.math &amp;#61; math;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.english &amp;#61; english;\n    }\n\n    &amp;#64;Override\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;() {\n        &lt;span class=\"hljs-keyword\"&gt;super&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Math score: &amp;#34;&lt;/span&gt; &amp;#43; math);\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;English score: &amp;#34;&lt;/span&gt; &amp;#43; english);\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Test {\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String args[]){\n        Student stu1&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Student(&lt;span class=\"hljs-string\"&gt;&amp;#34;xiaohong&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;tianjin&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;nv&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;44&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;55&lt;/span&gt;);\n        stu1.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        Student stu2&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Student();\n        stu2.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["关于#字符串#的问题，如何解决？", ["编程题。定义一个人类(Person)和学生类(Student)，要求：", "‏（1）Person包含：4个保护型的数据成员name、address、sex、age，分别为字符串、字符串、字符及整型，分别表示姓名、地址、性别和年龄；1个四参构造方法和1个无参构造方法，用于初始化四个成员；1个公有的输出方法print()用于输出4个成员属性的值。", "‏（2）Student继承自Person，包含：增加2个私有的整型成员math、english用于存放数学和英语成绩；1个六参构造方法和1个无参构造方法用于初始化6个成员属性；重写输出方法print()用于输出全部6个属性的值。", "‏（3）定义测试类Test，分别通过有参和午餐构造方法创建2个Person类和2个Student类的对象，并调用print()方法。", "‏（4）无明确要求的可灵活定义，如未明确要求类的访问权限，则将类定义为公有或默认权限均可。", "‏（5）提交3个解答：Person类定义的源代码或源代码截图，Student 类定义的源代码或源代码截图，Test 类定义的源代码或源代码截图。", "\n", "public", " ", "class", " ", "Test", " ", "{\n    ", "public", " ", "static", " void main(", "String", " args[]){\n        Student stu1=", "new", " ", "Student", "(", "\"xiaohong\"", ",", "\"tianjin\"", ",", "'nv'", ",", "18", ",", "44", ",", "55", ");\n        stu1.print();\n        Student stu2=", "new", " ", "Student", "();\n        stu2.print();\n    }\n}\n", "\n", "第三问如何定义Person"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;18行的字符串result是空值&amp;#xff0c;不能转换为float类型&amp;#xff1b;用System.out.println(result);打印出来看看。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["java字符串的转换问题 empty String 错误，该如何解决？", ["\n", "为什么 result 这个变量 我不能够使用  可以输出result这个变量  但是我 把它转换成数值型 再进行运算    就不行了", "\n", "出现了 empty String 错误", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果我没有理解错的话&amp;#xff0c;你是指要替换单元格值为 -8和9999 的单元格为0&amp;#xff0c;值为1140874686的单元格替换为1&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for (&lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; in &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;nrow&lt;/span&gt;(DT)) {\n    for (j in &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;ncol&lt;/span&gt;(DT)) {\n        DT[i,j] &amp;lt;- &lt;span class=\"hljs-built_in\"&gt;ifelse&lt;/span&gt;(DT[i,j] %in% &lt;span class=\"hljs-built_in\"&gt;c&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9999&lt;/span&gt;) ,yes &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ,no &amp;#61; DT[i,j])\n        DT[i,j] &amp;lt;- &lt;span class=\"hljs-built_in\"&gt;ifelse&lt;/span&gt;(DT[i,j] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1140874686&lt;/span&gt; ,yes &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ,no &amp;#61; DT[i,j])\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样写判断语句会简单些&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/88528602785618.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["R中 判断数据框中某行的所有字符是否均为某两个值", ["在处理一个大型队列的问卷信息，需要判断每个参与对象的用药情况，但是每个人同时存在缺失的情况。我已经将所有NA替换为-8这个值，问卷系统默认无效录入为9999。如果该参与者对应的一行记录中出现了 1140874686记为他用过该药，这一行全部为-8或者全部为9999和-8的组合，记为缺失（我设置为-8），其余情况均记为0。", "\n", "这一行记录有49列，所以直接只用 if else语句会非常长，我想使用for循环来判断每行的情况，新增一列来记录。", "\n", "\n", "for (i in 1:nrow(data_medicine)){", "  if(1140874686%in%data_NI_medicine[i,]) data_medicine.0[i,50]<-1 else", "    if( )   else data_NI_medicine.0[i,50]<-0", "} ", "\n", "不知道如何写代码判断 这一行字符是否都是由 -8和9999 这两个数值的任意组合构成，来问问各位！感谢！", "\n", "data_medicine.0[i,50] 是我要新增那一列。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;当是s[i]&amp;#61;&amp;#39;&amp;#43;&amp;#39;或&amp;#39;/&amp;#39;时出栈计算&amp;#xff0c;把结果压入栈。字符存储的是ascii&amp;#xff0c;也是个数值&amp;#xff0c;压入栈后区分不出是计算值还是运算符。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["栈中的数据类型转换double和char", ["问题遇到的现象和发生背景 字符类型如何转为double型", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法 当是s[i]='+'或'/'时压入栈 栈元素的类型都设置为double型 typedef为T", "\n", "我想要达到的结果", "\n", "compute函数中c直接判断是否等于’+‘ ’-‘ 这些字符 为什么呢 该怎么转换两种类型呢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;string.h&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdlib.h&amp;#34;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define MAXSIZE 50&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define SIZE 100&lt;/span&gt;\n\ntypedef char datatype;\ntypedef struct {\n    datatype a[MAXSIZE];\n    int top;\n}sequence_stack;\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 函数功能&amp;#xff1a;栈&amp;#xff08;顺序存储&amp;#xff09;初始化 /\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数参数&amp;#xff1a;指向sequence_stack型变量的指针变量st/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数返回值&amp;#xff1a;空 */\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\nvoid init(sequence_stack* st)\n{\n    st-&amp;gt;top &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 函数功能&amp;#xff1a;判断栈&amp;#xff08;顺序存储&amp;#xff09;是否为空 /\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数参数&amp;#xff1a;sequence_stack型变量st/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数返回值&amp;#xff1a;int类型。&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;表示空&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;表示非空 */\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\nint empty(sequence_stack st)\n{\n    return(st.top ? &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 函数功能&amp;#xff1a;读栈顶&amp;#xff08;顺序存储&amp;#xff09;结点值 /\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数参数&amp;#xff1a;sequence_stack型变量st/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数返回值&amp;#xff1a;datatype类型。返回栈顶结点值 */\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\ndatatype read(sequence_stack st)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (empty(st))\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n栈是空的!&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        return st.a[st.top - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 函数功能&amp;#xff1a;栈&amp;#xff08;顺序存储&amp;#xff09;的插入&amp;#xff08;进栈&amp;#xff09;操作 /\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数参数&amp;#xff1a;指向sequence_stack型变量的指针变量st/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;datatype型变量x/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数返回值&amp;#xff1a;空 */\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\nvoid push(sequence_stack* st, datatype x)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st-&amp;gt;top &amp;#61;&amp;#61; MAXSIZE)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\nThe sequence stack is full!&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    st-&amp;gt;a[st-&amp;gt;top] &amp;#61; x;\n    st-&amp;gt;top&amp;#43;&amp;#43;;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 函数功能&amp;#xff1a;栈&amp;#xff08;顺序存储&amp;#xff09;的删除&amp;#xff08;出栈&amp;#xff09;操作 /\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数参数&amp;#xff1a;指向sequence_stack型变量的指针变量st/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数返回值&amp;#xff1a;空 */\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\ndatatype pop(sequence_stack* st)\n{\n    datatype x;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (st-&amp;gt;top &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\nThe sequence stack is empty!&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n    x &amp;#61; st-&amp;gt;a[st-&amp;gt;top - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n    st-&amp;gt;top--;\n    return x;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数功能&amp;#xff1a;判断一个字符串是不是回文串操作/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数参数&amp;#xff1a;已知字符串/\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;函数返回值&amp;#xff1a;int类型&amp;#xff0c;返回一个整数用于判断是不是回文串 /\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;待补充\nint Is_Pstring(sequence_stack* st, char str[])\n{\n    char c;\n    int i, len &amp;#61; strlen(str);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; len; i&amp;#43;&amp;#43;)\n        push(st, str[i]);\n    i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!empty(*st)) {\n        c &amp;#61; pop(st);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c !&amp;#61; str[i])\n            return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        i&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (empty(*st))\n        return &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\nint main()\n{\n    char str[SIZE];\n    sequence_stack s;\n    init(&amp;amp;s);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, str);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (Is_Pstring(&amp;amp;s, str))\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;是回文串&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;不是回文串&amp;#34;&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["数据结构 栈的应用之判断回文数", ["问题遇到的现象和发生背景", "\n", "代码问题", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include \"stdio.h\"", "#include \"string.h\"", "#include \"stdlib.h\"", "#define MAXSIZE 50", "#define SIZE 100", "\n", " typedef char datatype;", " typedef struct{", "   datatype a[MAXSIZE];", "   int top;", " }sequence_stack;", "\n", "/", "/", "/*  函数功能：栈（顺序存储）初始化                ", "/", "/", "  函数参数：指向sequence_stack型变量的指针变量st ", "/", "/", "  函数返回值：空                                */", "/", "/", " void init(sequence_stack *st)", " {", "   st->top=0;", " }", "\n", "/", "/", "/*  函数功能：判断栈（顺序存储）是否为空           ", "/", "/", "  函数参数：sequence_stack型变量st                ", "/", "/", "  函数返回值：int类型。1表示空，0表示非空       */", "/", "/", " int empty(sequence_stack st)", " {", "   return(st.top? 0:1);", " }", "\n", "/", "/", "/*  函数功能：读栈顶（顺序存储）结点值             ", "/", "/", "  函数参数：sequence_stack型变量st                ", "/", "/", "  函数返回值：datatype类型。返回栈顶结点值        */", "/", "/", " datatype read(sequence_stack st)", " {", "   if (empty(st))", "     {printf(\"\\n栈是空的!\");exit(1);}", "   else", "     return st.a[st.top-1];", " }", "\n", "/", "/", "/*  函数功能：栈（顺序存储）的插入（进栈）操作     ", "/", "/", "  函数参数：指向sequence_stack型变量的指针变量st  ", "/", "/", "            datatype型变量x                       ", "/", "/", "  函数返回值：空                                 */", "/", "/", " void push(sequence_stack *st,datatype x)", " {", "   if(st->top==MAXSIZE)", "     {printf(\"\\nThe sequence stack is full!\");exit(1);}", "   st->a[st->top]=x;", "   st->top++;", " }", "\n", "/", "/", "/*  函数功能：栈（顺序存储）的删除（出栈）操作     ", "/", "/", "  函数参数：指向sequence_stack型变量的指针变量st  ", "/", "/", "  函数返回值：空                                 */", "/", "/", " datatype pop(sequence_stack *st)", " {", "     datatype x;", "   if(st->top==0)", "     {printf(\"\\nThe sequence stack is empty!\");exit(1);}", "   x=st->a[st->top-1];", "   st->top--;", "   return x;", " }", "\n", "/", "/", "/", "  函数功能：判断一个字符串是不是回文串操作             ", "/", "/", "  函数参数：已知字符串                                 ", "/", "/", "  函数返回值：int类型，返回一个整数用于判断是不是回文串", "/", "/", "**/", "int Is_Pstring(sequence_stack *st,char str[])", "//待补充", "int main()", "{", "    char str[SIZE];", "    sequence_stack s;", "        init(&s);", "        scanf(\"%s\",str);", "    if(Is_Pstring(&s,str))", "    printf(\"是回文串\");", "    else", "    printf(\"不是回文串\");", "}", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果", "\n", "待补充的地方应该填什么呀"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;在内存里300就是用2C 01&amp;#xff0c;前一种&amp;#xff0c;就是高位在右&amp;#xff0c;低位在左&amp;#xff08;以一个字节为单位&amp;#xff0c;即两位16进制&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["16进制高位在前，低位在后", ["不懂进制，但项目需要，希望帮忙解答下。", "int id = 300；", "转换成16进制(8个字节)就是00 00 00 00 00 00 01 2c", "然后存入bytes[8]中发送出去，要求高位在前。", "网上找的写了点，但感觉不对", "\n", " bytes[0] = (byte)((value >> 8) & 0xFF);", "bytes[1] = (byte)(value & 0xFF);", "或", " bytes[1] = (byte)((value >> 8) & 0xFF);", "bytes[0] = (byte)(value & 0xFF);", "\n", "存入byte后用   BitConverter.ToInt32(bytes, 0).ToString(\"X16\")    转成16进制分别是", "  0000000000002C01    和  000000000000012C", "那种是对的，还是说都不对，不懂高位低位。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;自己写吧&amp;#xff0c;定好小数位数限制和整数位数限制后很好写的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; MAX_F        4&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; MAX_INT        6&lt;/span&gt;\n\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; retbuf[MAX_F&amp;#43;MAX_INT&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* &lt;span class=\"hljs-title\"&gt;ftostr&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f)&lt;/span&gt;\n&lt;/span&gt;{\n      bit s&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n      \n      &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; tmp32&amp;#61;(&lt;span class=\"hljs-type\"&gt;long&lt;/span&gt;)(f*&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;);\n\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(tmp32&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n      {\n        s&amp;#61;&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        tmp32&amp;#61;-tmp32;\n        retbuf[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;\n      }\n      &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n      {\n        retbuf[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n      }\n    retbuf[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;1000000000&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;100000000&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;10000000&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;1000000&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;]&amp;#61;tmp32/&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    retbuf[&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; retbuf;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;没有处理无效零&amp;#xff0c; 授人以渔&amp;#xff0c; 你自己研究吧&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["esp8266上传数据到云平台", ["esp8266上传到云平台数据的函数是字符串型，需要上传的数据是float型，这两者之间如何转化"]], "Tag": "程序设计"}
{"Answer": "这么给你说吧，假如你实例化son，jvm会根据继承关系先调用父类构造函数，但是在调用所有构造函数之前会将每个类的对象初始化（不是你赋值时的初始化）成二进制的0\r\n，所以父类任然会调用子类的方法，但是结果完全不可预料，所以强烈建议不要这样写。", "Konwledge_Point": "字符型", "Question": ["JAVA中有关类的一个基础问题", ["父类Father和子类Son，父类中有一个方法A，在子类中也定义了一模一样的一个方法A（具有与老方法相同的方法签名），那么在子类中那个A自然会把父类中的A给覆盖了。通过子类的对象调用方法A的时候，自然执行的是子类的A，通过父类的对象调用A的时候，自然执行的是父类的A，那么问题是：如果父类中有一个成员变量是子类Son，那么在父类中通过调用这个私有对象变量的方法A的时候， 是子类的A，还是父类的A？"]], "Tag": "程序设计"}
{"Answer": "CRC的使用场景你理解错了，CRC32是循环冗余校验码，一般效验文件的完整性。\r\n\r\nCRC数值简单地说就是通过让你需要做处理的数据除以一个常数而得到的余数。当你得到这个数值后你可以将这个数值附加到你的数据后，当数据被传送到其他地方后，取出原始数据(可能在传送过程中被破坏)与附加的CRC数值，然后将这里的原始数据除以之前那个常数(约定好的)然后得到新的CRC值。比较两个CRC值是否相等即可确认你的数据是否在传送过程中出现错误。\r\n\r\n此外，这个算法不是密码，和md5，hash一样不可逆。", "Konwledge_Point": "字符型", "Question": ["如何将CRC32编码后的值还原", ["String test = \"ASDASDASDASD\";", "\nCRC32 crc = new CRC32();", "\ncrc.update(test.getBytes());", "\nlong l_test= crc.getValue();", "\n\n", "test经过CRC编码后变成一个long型的值l_test，如何根据的这个long型值，得到原来test的值，也就是“ASDASDASDASD”；", "\n如果有遇到过的请给出一个解决方案"]], "Tag": "程序设计"}
{"Answer": "你每次加的都是Ana这个数组的内容。转成LPCTSTR也是同一个类。加来加去当然都是一样的啦。\r\n要解决这个问题，一个方法是动态创建LPCTSTR，一个方法是动态创建你的Ana", "Konwledge_Point": "字符型", "Question": ["在VS2010，Unicode字符集环境下，如何将float类型转换成CString类型？", ["用format不好使，求指导", "\n\n", "或者这样也可以，我想用sprintf函数将几个浮点型的数输入到一个char类型的数组中，然后将该数组转换成LPCTSTR格式，这样才能够插入LISTBOX 控件中，感觉太麻烦，有没有什么好的办法？相关代码如下：", "\n\n", " char Ana[50];\nint num=8;\nfloat tcost=1.0394;\nfloat tpsnt=33.244;\nsprintf(Ana,\"aa\",\"%d%f%f\",num,tcost,tpsnr);\nm_Ana.Addstring((LPCTSTR)Ana);//m_Ana为LISTBOX控件变量\n", "\n\n", "代码不报错，但是插入的都是空白。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;简单啊&amp;#xff0c;减去整数部分等于0的就是小数部分是0的浮点数啊。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;nums &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[1.0,2.0,3.0,4.0,5.0,5.5,5.555,6.0]&lt;/span&gt;\nnew_nums &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; nums:\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i-int(i) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        new_nums&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(i)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(new_nums)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["python中如何把小数部分为0的浮点值过滤出来？", ["我的解答思路和尝试过的方法", "\n", "我尝试过直接用字符串分割的方法来查看小数点后面的数字是否为0", "\n", "nums = ", "[1.0,2.0,3.0,4.0,5.0,5.5,5.555,6.0]", "\nnew_nums = ", "[]", "\n", "for", " ", "i", " ", "in", " range(len(nums)):\n    ", "if", " str(nums", "[i]", ")", ".split", "(", "'.'", ")", "[-1]", " == ", "'0'", ":\n        new_nums", ".append", "(nums", "[i]", ")\n", "print", "(new_nums)", "\n\n", "\n", "我想要达到的结果", "\n", "有没有什么办法可以不用字符串分割过滤出来？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;定义一个结构体变量&amp;#xff0c;struct  student  temp&amp;#xff0c;用它当做中间变量来交换&amp;#xff0c;比如交换 a, b就可以  temp&amp;#61;a;  a&amp;#61;b;  b&amp;#61;temp&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["大一新生C语言调用函数结构体换顺序", ["要求使用调用函数插入成绩 请问在结构体中怎么交换每一个数据呢 字符串型变量怎么交换啊", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;if( len &amp;lt;&amp;#61; 1);&lt;br /&gt;因为这个分号&amp;#xff0c;使得你后面的代码全成了废话了。&lt;br /&gt;return s成了必然执行的&amp;#xff0c;可不是输入什麽就输出什麽麽&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["我用c语言写了一段动态规划的寻找最长回文字符，可是总是不成功，找了半天，输入babad，却输出babad，以下是代码", ["\n", "char", " * ", "longestPalindrome", "(", "char", " * s)", "\n", "{\n    ", "//读取长度", "\n    ", "int", " len = ", "strlen", "(s);\n    ", "if", "( len <= ", "1", ");\n    {\n        ", "return", " s;\n    }\n    ", "//定义布尔型", "\n    ", "bool", " dp[", "1001", "][", "1001", "];\n    ", "memset", "(dp,", "0", ",", "sizeof", "(dp));\n    dp[", "0", "][", "0", "]=", "1", ";\n     ", "//给长度为2的赋值，因为上面的排出，最短的长度就是2了", "\n     ", "for", "(", "int", " i =", "1", "; i < len;i++)\n     {\n      dp[i][i]=", "true", ";\n      ", "//因为下面判断时候会出[1][0]的时候，不然会出错", "\n      dp[i][i", "-1", "]=", "true", "; \n     }\n    ", "int", " left = ", "0", ";\n    ", "int", " right = ", "0", ";\n    ", "int", " max = ", "0", ";\n    ", "//k表示回文字节的长度，先从2开始", "\n    ", "for", "(", "int", " k=", "2", "; k <= len;k++)\n    {\n      ", "//i表示回文字符的开始位置", "\n      ", "for", "(", "int", " i =", "0", "; i < len - k +", "1", " ;i++ ) \n     {\n       ", "if", "(s[i] == s[i+k", "-1", "] && dp[i+", "1", "][i+k", "-2", "])\n       {\n            dp[i][i+k", "-1", "] =", "true", ";\n           ", "if", "(max < k", "-1", ")\n           {\n              max = k", "-1", ";\n              left = i;\n              right = i+k", "-1", ";\n           }   \n       }\n     }\n    }\n    ", "char", "* arr = (", "char", "*)", "malloc", "(", "sizeof", "(", "char", ")*(max*", "2", "));", "//因为 ap[X][Y]代表了2个字符，所以max*2才是最终的字符", "\n    ", "int", " i =", "0", ";\n    ", "for", "(;left<=right;i++)\n    {\n     arr[i]=s[left++];\n    }\n    arr[i]=", "'\\0'", ";\n    ", "return", "  arr;\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char A[] &amp;#61; &amp;#34;&amp;#34;; char B[] &amp;#61; &amp;#34;&amp;#34;;char C[] &amp;#61; &amp;#34;&amp;#34;;char D[] &amp;#61; &amp;#34;&amp;#34;;char E[] &amp;#61; &amp;#34;&amp;#34;;char F[] &amp;#61; &amp;#34;&amp;#34;; 字符串定义问题&amp;#xff0c;改为&amp;#xff1a;char A[4],B[4],C[4],D[4],E[4],F[4];&lt;br /&gt;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//Ax&amp;#43;By&amp;#61;C&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//Dx&amp;#43;Ey&amp;#61;F&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//x&amp;#61;(CE-BF)/(AE-bD)&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//y&amp;#61;(CD-AF)/(BD-aE)&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; A[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; B[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; C[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; D[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; E[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; F[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请按照以下格式输入方程组 Ax&amp;#43;By&amp;#61;C;Dx&amp;#43;Ey&amp;#61;F\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,str);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;方程组为 %s\\n&amp;#34;&lt;/span&gt;, str);\n    &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str,&lt;span class=\"hljs-string\"&gt;&amp;#34;%[^x]&amp;#34;&lt;/span&gt;,A);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, A);\n    &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str,&lt;span class=\"hljs-string\"&gt;&amp;#34;%*[^&amp;#43;]&amp;#43;%[^y]&amp;#34;&lt;/span&gt;,B);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, B);\n    &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str,&lt;span class=\"hljs-string\"&gt;&amp;#34;%*[^&amp;#61;]&amp;#61;%[^;]&amp;#34;&lt;/span&gt;,C);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, C);\n    &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str,&lt;span class=\"hljs-string\"&gt;&amp;#34;%*[^;];%[^x]&amp;#34;&lt;/span&gt;,D);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, D);\n    &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str,&lt;span class=\"hljs-string\"&gt;&amp;#34;%*[^;]%*[^&amp;#43;]&amp;#43;%[^y]&amp;#34;&lt;/span&gt;,E);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, E);\n    &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(str,&lt;span class=\"hljs-string\"&gt;&amp;#34;%*[^;]%*[^&amp;#61;]&amp;#61;%s&amp;#34;&lt;/span&gt;,F);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;, F);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num1, num2, num3, num4, num5, num6, x, y;\n    num1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(A);\n    num2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(B);\n    num3 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(C);\n    num4 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(D);\n    num5 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(E);\n    num6 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;atoi&lt;/span&gt;(F);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,num1);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,num2);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,num3);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,num4);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,num5);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,num6);\n    &lt;span class=\"hljs-comment\"&gt;//x &amp;#61; (num1 * num5 -num2 * num6) / (num1 * num5 - num2 * num4);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%d,&amp;#34;,x);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//x&amp;#61;(CE-BF)/(AE-bD)&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//y&amp;#61;(CD-AF)/(BD-aE)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["C语言char类型字符串里的数字转换到int就变成0了，六个变了五个，看不出问题", ["char字符串里都是数字，想转换成int类型进行计算，结果转换出来就是一堆0。", "没有报错", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "//Ax+By=C", "\n", "//Dx+Ey=F", "\n", "//x=(CE-BF)/(AE-bD)", "\n", "//y=(CD-AF)/(BD-aE)", "\n", "int", " ", "main", "()", "{\n    ", "char", " A[] = ", "\"\"", ";\n    ", "char", " B[] = ", "\"\"", ";\n    ", "char", " C[] = ", "\"\"", ";\n    ", "char", " D[] = ", "\"\"", ";\n    ", "char", " E[] = ", "\"\"", ";\n    ", "char", " F[] = ", "\"\"", ";\n    ", "printf", "(", "\"请按照以下格式输入方程组 Ax+By=C;Dx+Ey=F\\n\"", ");\n    ", "char", " str[", "32", "] = ", "\"\"", ";\n    ", "scanf", "(", "\"%s\"", ",str);\n    ", "printf", "(", "\"方程组为 %s\\n\"", ", str);\n    ", "sscanf", "(str,", "\"%[^x]\"", ",A);\n    ", "printf", "(", "\"%s\\n\"", ", A);\n    ", "sscanf", "(str,", "\"%*[^+]+%[^y]\"", ",B);\n    ", "printf", "(", "\"%s\\n\"", ", B);\n    ", "sscanf", "(str,", "\"%*[^=]=%[^;]\"", ",C);\n    ", "printf", "(", "\"%s\\n\"", ", C);\n    ", "sscanf", "(str,", "\"%*[^;];%[^x]\"", ",D);\n    ", "printf", "(", "\"%s\\n\"", ", D);\n    ", "sscanf", "(str,", "\"%*[^;]%*[^+]+%[^y]\"", ",E);\n    ", "printf", "(", "\"%s\\n\"", ", E);\n    ", "sscanf", "(str,", "\"%*[^;]%*[^=]=%s\"", ",F);\n    ", "printf", "(", "\"%s\\n\"", ", F);\n    ", "int", " num1, num2, num3, num4, num5, num6, x, y;\n    num1 = ", "atoi", "(A);\n    num2 = ", "atoi", "(B);\n    num3 = ", "atoi", "(C);\n    num4 = ", "atoi", "(D);\n    num5 = ", "atoi", "(E);\n    num6 = ", "atoi", "(F);\n    ", "printf", "(", "\"%d\\n\"", ",num1);\n    ", "printf", "(", "\"%d\\n\"", ",num2);\n    ", "printf", "(", "\"%d\\n\"", ",num3);\n    ", "printf", "(", "\"%d\\n\"", ",num4);\n    ", "printf", "(", "\"%d\\n\"", ",num5);\n    ", "printf", "(", "\"%d\\n\"", ",num6);\n    ", "//x = (num1 * num5 -num2 * num6) / (num1 * num5 - num2 * num4);", "\n    ", "//printf(\"%d,\",x);", "\n    ", "//x=(CE-BF)/(AE-bD)", "\n    ", "//y=(CD-AF)/(BD-aE)", "\n    ", "return", " ", "0", ";\n}\n\n", "\n", "\n", "尝试了这样写，结果成功了，但原算法出了什么问题呢", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "int", " ", "main", "()", "\n", "{\n     ", "char", " b[", "18", "];\n     ", "int", " num;\n     ", "scanf", "(", "\"%s\"", ",b);", "//对char型数组进行赋值 如：123456789", "\n     num = ", "atoi", "(b);\n     ", "printf", "(", "\"%d\"", ",num);\n     ", "int", " C = num + ", "10", ";\n     ", "printf", "(", "\"%d\"", ",C);\n     \n     \n    ", "return", " ", "0", ";\n } \n\n", "\n", "其实就是提取数字计算，但系数为1的情况也没啥思路，是不是要用if，但怎么检测呢，刚学实在没啥见识"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;因为他&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/005161311136175.png\" /&gt;&lt;/p&gt;&lt;br /&gt;了呀&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["【C++】char型的存取到底如何运作", ["如图所示，其中有一个char型变量ch，在while循环时输出的ch，则会输出Did、you等，但是在我个人实验时，比如char word=letter的话，输出只会显示单个首字母l而不是多个字符。", "\n", "另外一个疑问就是如果cin.get()单参数重载的话就能读取所有字符，那么cin.get(,)和cin.getline(,)还有什么使用意义？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;反斜杠和r之间多了一个空格&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["string.at是否能和char型对比", ["while语句运行条件是不等于则运行，但是他还是运行了，最后在中间字符串c中出现了\\r", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "。。。。什么逻辑，你都说了是前导0，，，那怎么可能出现在后面呢？而且你还设置了小数位数。。。", "Konwledge_Point": "字符型", "Question": ["在printf()语句里面关于flags的疑问", ["如果我在输出浮点型数据的时候规定字符的精度，与字符的宽度当字符宽度大于我所需要输出的字符宽度，同时我也用修饰符0来表示用前导0来填充多余的字符宽度，并且我也用了-修饰符来让字符串从左对其，为什么不能使得前导0在小数点的后面出现？？？", "\n\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;说的是操作python内的变量类型只能写入字符串‘1,2,3’&amp;#xff0c;引号括起来的是字符串类型&amp;#xff0c;而不是文件内的文本内容&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python里面能不能直接将数值数据写入文件", ["刚学python，买了一本书，书上面说（图一）将数值数据储存到文本文件得使用str转换为字符串格式", "但我试了一下不用str，也照样可以写入数字啊（代码图二）", "写入结果（图三）成功了", "这个是怎么回事啊？"]], "Tag": "程序设计"}
{"Answer": "可以，用eval对文本框求值。也就是把文本框的内容作为js片段。\r\n但是这么做太强大，实际需要考虑不怀好意的人注入恶意js代码。", "Konwledge_Point": "字符型", "Question": ["<input />能否输入undefined、boolean、NaN等值", ["我知道无输入时值为null，", "\n但请问能否输入undefined、boolean、NaN等值？", "\n我指的不是输入'undefined'字符串。。。而是undefined，这两个有很大区别吧。", "\n如果可以，怎么输入；", "\n如果不可以，烦请告知具体定义的文档。。"]], "Tag": "程序设计"}
{"Answer": "https://zhidao.baidu.com/question/680444810160853492.html", "Konwledge_Point": "字符型", "Question": ["matlab编程问题，怎么改变矩阵中元素的类型", ["matlab中找到一个double型矩阵中所有为0的元素，另其变为字符“ ”怎么做到？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;检查一下代码中有没有str对象&amp;#xff0c;str是python内置函数&amp;#xff0c;脚本名和其中定义的函数名都不要与其重名。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python一个小问题", ["想给浮点型拼接一个 \" ' \" ，需要先转字符串，但是一直报错，请问为什么", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "针对一个来说吧..\r\njvm默认处理数字是int的\r\n\r\n比如\r\n\r\nbyte a =1 \r\nbyte b = 2 ;\r\n\r\nbyte c = 1+2 ;\r\n\r\n其实java处理的时候..是把 1,2向上转型成为int..然后加后转回为byte..\r\n\r\n因为早期都是32位的机器..一次处理数据的最小单元是32位也就是一个int..", "Konwledge_Point": "字符型", "Question": ["关于 I/O 中 读取/写入时，使用 int型 的问题", [".", "\n为什么读取/写入单个字节/字符，返回值/输入值都是 int型，为什么不用 byte/char，如下方法：", "\n.", "\nInputStream：", "\n\n", " abstract  int read() \n          从输入流中读取数据的下一个字节。 \n从输入流中读取数据的下一个字节。返回 0 到 255 范围内的 int 字节值。如果因为已经到达流末尾而没有可用的字节，则返回值 -1。\n", "\n\n", ".", "\nOutputStream：", "\n\n", "abstract  void write(int b) \n      将指定的字节写入此输出流。 \n\n将指定的字节写入此输出流。write 的常规协定是：向输出流写入一个字节。要写入的字节是参数 b 的八个低位。b 的 24 个高位将被忽略。 \n", "\n\n", ".", "\nReader：", "\n\n", "int read() \n      读取单个字符。 \n返回：\n作为整数读取的字符，范围在 0 到 65535 之间 (0x00-0xffff)，如果已到达流的末尾，则返回 -1 \n", "\n\n", ".", "\nWriter：", "\n\n", "void write(int c) \n      写入单个字符。 \n写入单个字符。要写入的字符包含在给定整数值的 16 个低位中，16 高位被忽略。 \n参数：\nc - 指定要写入字符的 int。 \n", "\n\n", ".", "\n\n", ".", "\n而多个字节/字符的读取/写入，都是用的byte/char数组，如下方法：", "\n.", "\nInputstream:", "\n\n", " int read(byte[] b) \n      从输入流中读取一定数量的字节，并将其存储在缓冲区数组 b 中。\n\n int read(byte[] b, int off, int len) \n      将输入流中最多 len 个数据字节读入 byte 数组。 \n", "\n\n", ".", "\nOutputStream：", "\n\n", " void write(byte[] b) \n      将 b.length 个字节从指定的 byte 数组写入此输出流。 \n\n void write(byte[] b, int off, int len) \n      将指定 byte 数组中从偏移量 off 开始的 len 个字节写入此输出流。 \n", "\n\n", ".", "\nReader:", "\n\n", "int read(char[] cbuf) \n      将字符读入数组。 \n\nabstract  int read(char[] cbuf, int off, int len) \n      将字符读入数组的某一部分。 \n", "\n\n", ".", "\nWriter:", "\n\n", "void write(char[] cbuf) \n      写入字符数组。 \n\nabstract  void write(char[] cbuf, int off, int len) \n      写入字符数组的某一部分。 \n", "\n\n", ".", "\n最后推广一下正版问答地址：", "http://stackoverflow.com/", "\n."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;char A[] &amp;#61; &amp;#34;&amp;#34;;&lt;br /&gt;你没有给数组指定大小啊&lt;br /&gt;既然输入表达式格式都是固定的&amp;#xff0c;那这么写就可以了&lt;br /&gt;int A,B,C,D,E,F;&lt;br /&gt;scanf(&amp;#34;%dx&amp;#43;%dy&amp;#61;%d,%dx&amp;#43;%dy&amp;#61;%c&amp;#34;,&amp;amp;A,&amp;amp;B,&amp;amp;C,&amp;amp;D,&amp;amp;E,&amp;amp;F);&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言char字符串里的数字转换成int就变成0了，有的不变0，同样的数据，不知道哪里有问题", ["char转换为int，数据变成0，不知道哪里出错了", "六个数据，同样的方法，成功了一个", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "//Ax+By=C", "\n", "//Dx+Ey=F", "\n", "//x=(CE-BF)/(AE-bD)", "\n", "//y=(CD-AF)/(BD-aE)", "\n", "int", " ", "main", "()", "{\n    ", "char", " A[] = ", "\"\"", ";\n    ", "char", " B[] = ", "\"\"", ";\n    ", "char", " C[] = ", "\"\"", ";\n    ", "char", " D[] = ", "\"\"", ";\n    ", "char", " E[] = ", "\"\"", ";\n    ", "char", " F[] = ", "\"\"", ";\n    ", "printf", "(", "\"请按照以下格式输入方程组 Ax+By=C;Dx+Ey=F\\n\"", ");\n    ", "char", " str[", "32", "] = ", "\"\"", ";\n    ", "scanf", "(", "\"%s\"", ",str);\n    ", "printf", "(", "\"方程组为 %s\\n\"", ", str);\n    ", "sscanf", "(str,", "\"%[^x]\"", ",A);\n    ", "printf", "(", "\"%s\\n\"", ", A);\n    ", "sscanf", "(str,", "\"%*[^+]+%[^y]\"", ",B);\n    ", "printf", "(", "\"%s\\n\"", ", B);\n    ", "sscanf", "(str,", "\"%*[^=]=%[^;]\"", ",C);\n    ", "printf", "(", "\"%s\\n\"", ", C);\n    ", "sscanf", "(str,", "\"%*[^;];%[^x]\"", ",D);\n    ", "printf", "(", "\"%s\\n\"", ", D);\n    ", "sscanf", "(str,", "\"%*[^;]%*[^+]+%[^y]\"", ",E);\n    ", "printf", "(", "\"%s\\n\"", ", E);\n    ", "sscanf", "(str,", "\"%*[^;]%*[^=]=%s\"", ",F);\n    ", "printf", "(", "\"%s\\n\"", ", F);\n    ", "int", " num1, num2, num3, num4, num5, num6, x, y;\n    num1 = ", "atoi", "(A);\n    num2 = ", "atoi", "(B);\n    num3 = ", "atoi", "(C);\n    num4 = ", "atoi", "(D);\n    num5 = ", "atoi", "(E);\n    num6 = ", "atoi", "(F);\n    ", "printf", "(", "\"%d\\n\"", ",num1);\n    ", "printf", "(", "\"%d\\n\"", ",num2);\n    ", "printf", "(", "\"%d\\n\"", ",num3);\n    ", "printf", "(", "\"%d\\n\"", ",num4);\n    ", "printf", "(", "\"%d\\n\"", ",num5);\n    ", "printf", "(", "\"%d\\n\"", ",num6);\n    ", "//x = (num1 * num5 -num2 * num6) / (num1 * num5 - num2 * num4);", "\n    ", "//printf(\"%d,\",x);", "\n    ", "//x=(CE-BF)/(AE-bD)", "\n    ", "//y=(CD-AF)/(BD-aE)", "\n    ", "return", " ", "0", ";\n}\n\n", "\n", "我尝试了重新写一个简单的，结果成功了，但这个不知道哪里错", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "int", " ", "main", "()", "\n", "{\n     ", "char", " b[", "18", "];\n     ", "int", " num;\n     ", "scanf", "(", "\"%s\"", ",b);", "//对char型数组进行赋值 如：123456789", "\n     num = ", "atoi", "(b);\n     ", "printf", "(", "\"%d\"", ",num);\n     ", "int", " C = num + ", "10", ";\n     ", "printf", "(", "\"%d\"", ",C);\n     \n     \n    ", "return", " ", "0", ";\n } \n\n", "\n", "\n", "请教大家了，还有这个系数为1又怎么检测，做了好长时间了"]], "Tag": "程序设计"}
{"Answer": "Stringbuffer sb = new StringBuffer(20000);\r\nfor(float f:target)\r\nsb.append(f).append(\",\");\r\n\r\n\r\n\r\n\r\nfloat[] result = db.split(\",\");\r\n\r\n\r\n不过oracle数据库varchar2也就能存4000个字符，你这个超过了\r\n可能需要用大字段了", "Konwledge_Point": "字符型", "Question": ["Java里大型数组如何保存到数据库的问题！！", ["现在有一个float[20000]数组，我想保存到数据库，然后还可以从数据库里面还原成float数组，该如何操作，有什么思路。", "\n我的想法：把数组转换成字符串，然后写入数据库，完了再把字符串解析成数组，但是怎么把数组转换成字符串呢，Java里面有什么命令可以快速转换呢？这样做比较麻烦，有其它简单的方法吗？"]], "Tag": "程序设计"}
{"Answer": "[quote]也想过第2个解决方案，就是将Date做为文件名，每个Data做为一个单独的文件直接保存在硬盘上。 \r\n\r\n请问，哪个方案比较好？ \r\n我没试验过，但是总感觉mysql在读取大数据的时候会卡死！ [/quote]\r\n\r\n看到你的描述 肯定告诉你会卡死！或者有问题\r\n\r\n1.0  把data 保存成文件的 方式，访问的时候是去读 磁盘！ 存库里面也是去读磁盘的！没有从根本上解决问题！虽然可以从某种程度上减轻 DB 的压力，你可以试试\r\n\r\n2.0 当然 访问或者写入时候的优化也是不能少的！ 试图，索引 根据实际情况来定！\r\n\r\n3.0 读写分离什么的！mysql 肯定有能力处理你的 问题！", "Konwledge_Point": "字符型", "Question": ["这样的需求mysql能满足性能需求吗？", ["有一个这样的表！", "\n只有2个列  Date Data", "\nDate列是日期，Data列是一个字符串。", "\n在实际应用的时候，这个表只有几百条记录。但是Data是存的一个大字符串。从几个字节到100多兆都有可能。", "\n在读取的时候会将这几百条数据全部读取一遍，也有可能只读其中的一部分。", "\n整个数据库会有1万个以上同样结构的表，高峰时期并发很高。", "\n\n", "这样的需求mysql能够满足吗？会不会卡死。", "\n\n", "也想过第2个解决方案，就是将Date做为文件名，每个Data做为一个单独的文件直接保存在硬盘上。", "\n\n", "请问，哪个方案比较好？", "\n我没试验过，但是总感觉mysql在读取大数据的时候会卡死！"]], "Tag": "程序设计"}
{"Answer": "swprintf\r\n\r\n```\r\ndouble a = 0.009984354523452;;\r\n swprintf(somestringvar, L\"Double value : %.15f \\n\", a);\r\n```", "Konwledge_Point": "字符型", "Question": ["c++的Unicode编码格式中有gcvt相似的函数吗？", ["_gcvt(nResult1, 15, lpszResult1);   //双精度转化为字符串       \nnResult1 是double型，lpszResult1是tchar型\n有类似gcvt的函数吗？\n"]], "Tag": "程序设计"}
{"Answer": "采用另外一种办法，你看试试行不。你扩展一个HttpServletRequestWrapper 类，在子类里面重载getParameter方法：\r\n\r\nclass ParametersWrapper extends HttpServletRequestWrapper {\r\n\r\n    public String getParameter(String name) {\r\n         String val = super.getParameter(name);//这里返回的是乱码\r\n         //然后你自己通过转码，返回正确的字符\r\n         return new String(val.getBytes(\"iso-859-1\") , \"xxx\");//xxx,你转换的编码\r\n    }\r\n}\r\n\r\n然后通过一个过滤器拦截所有请求，对GET请求进行request替换：\r\n\r\npublic class EncodingFilter implements Filter {\r\n      public void doFilter(ServletRequest sreq, ServletResponse sres, FilterChain fc) throws IOException, ServletException {\r\n    final HttpServletRequest req = (HttpServletRequest) sreq;\r\n    final HttpServletResponse res = (HttpServletResponse) sres;\r\n\r\n    if (req.getMethod() == \"GET\") {\r\n      fc.doFilter(new ParametersWrapper(req), res);\r\n     }else {\r\n      fc.doFilter(wrapper, res);\r\n     }\r\n}\r\n\r\n}", "Konwledge_Point": "字符型", "Question": ["freemarker页面get型参数转码问题", ["系统为：tomcat, Spring+Spring MVC+freemarker", "\n由于tomcat上有许多应用，不能修改connector属性URIEncoding为UTF8，所以freemarker中使用${RequestParameters[\"fn\"]}得到中文字符。", "\n我目前的解决办法是在controller里拿到parameter，并转码，然后储存在一个map里，返回到页面上。请问有什么其他办法吗？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;inver&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *s)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(*s)\n    {\n        n &amp;#61; n*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; *s-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n        s&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; n;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;  n;\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(s);\n    n&amp;#61;&lt;span class=\"hljs-built_in\"&gt;inver&lt;/span&gt;(s);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,n);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["关于C语言的函数调用", ["编写一个函数，用于将一个数值型字符串转化为整型数值，其原型如下:int inver (chat *s)"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;a,b是元组类型。元组使用小括号 ( )&amp;#xff0c;列表使用方括号 [ ]。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["Python中关于is的疑问", ["根据知识点：当两个对象值相同时，", "只有其为数值型或字符串型，a is b才为True，", "当a和b是tuple，list，dict或set型时，a is b为False 。", "\n", "求问a,b=(1,2,3),(1,2,3)叫什么类型啊，为什么a is b =true", "\n"]], "Tag": "程序设计"}
{"Answer": "```\r\n#include \"stdio.h\"\r\n#include \"string.h\"\r\n\r\nint islittle()\r\n{\r\n\tint i = 1;\r\n\treturn i == (int)*((char *)&amp;i);\r\n}\r\n\r\n#define LITTLEENDIAN islittle() \r\n\r\nvoid printbytes(void * ptr, size_t size, int rev = 0)\r\n{\r\n\tint start = 0;\r\n\tint end = size;\r\n\tint step = 1;\r\n\tif (rev)\r\n\t{\r\n\t\tstart = size - 1;\r\n\t\tend = -1;\r\n\t\tstep = -1;\r\n\t}\r\n\tfor (int i = start; i != end; i += step)\r\n\t{\r\n\t\tint val = ((unsigned char *)ptr)[i];\r\n\t\tchar out[3];\r\n\t\tif (val / 16 &gt; 9) out[0] = val / 16 + 'A' - 10; else out[0] = val / 16 + '0';\r\n\t\tif (val % 16 &gt; 9) out[1] = val % 16 + 'A' - 10; else out[1] = val % 16 + '0';\r\n\t\tout[2] = '\\0';\r\n\t\tprintf(\"%s \", out);\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\nint main()\r\n{\r\n\tint a;\r\n\tfloat b;\r\n\tdouble c;\r\n\tchar d[101];\r\n\tscanf_s(\"%d\", &amp;a);\r\n\tscanf_s(\"%f\", &amp;b);\t\r\n\tscanf_s(\"%lf\", &amp;c);\r\n\tfflush(stdin);\r\n\tscanf_s(\"%[^\\n]\", &amp;d[0], 100);\r\n\tprintf(\"%d\\n\", a);\r\n\tprintbytes((void *)&amp;a, sizeof(int), LITTLEENDIAN);\r\n\tprintf(\"%f\\n\", b);\r\n\tprintbytes((void *)&amp;b, sizeof(float), LITTLEENDIAN);\r\n\tprintf(\"%lf\\n\", c);\r\n\tprintbytes((void *)&amp;c, sizeof(double), LITTLEENDIAN);\r\n\tfflush(stdin);\r\n\tprintf(\"%s\\n\", d);\r\n\tprintbytes((void *)&amp;d[0], sizeof(char) * strlen(d), 0);\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["c语言编程：字节查看器", ["任务描述", "\n对于输入的按int型、float型、double型、char型数组这四种数据类型存储的数据，分别将该数据按正常形式输出以及按字节以十六进制形式输出。十六进制的字母请用大写的A,B,C,D,E,F。其中，int型、float型、double型数据按先输出高位字节，从高位字节向低位字节输出的形式。字符串型则直接按字符顺序逐字节输出。", "\n输入", "\n有4行，第1行是一个整数，以int型数据存储。第2行是一个带小数点的实数，以double型存储，第2行是一个带小数点的实数，以double型存储，第3行是长度为不超过100字符的英文字符串，以char型数组存储。", "\n输出", "\n输出4组结果每组输出2行。", "\n\n", "第1组：第1行输出int型整数本身，第2行按字节输出该int型数据4组十六进制值。", "\n\n", "第2组：第1行输出float型实数本身，第2行按字节输出该实数的4组十六进制值。", "\n\n", "第3组：第1行输出double型实数本身，第2行按字节输出该实数的8组十六进制值。", "\n\n", "第4组：第1行输出字符串本身，第2行按字节输出该字符串的每个字符的十六进制值。", "\n\n", "每组数据的2行输出之后有空行。每两个十六进制值之间用空格分隔。", "\n\n", "输入举例", "\n123456", "\n123.456", "\n123.456", "\n123456 and 123.456 is a number!", "\n输出举例", "\n123456", "\n00 01 E2 40", "\n\n", "123.456001", "\n42 F6 E9 79", "\n\n", "123.456000", "\n40 5E DD 2F 1A 9F BE 77", "\n\n", "123456 and 123.456 is a number!", "\n31 32 33 34 35 36 20 61 6E 64 20 31 32 33 2E 34 35 36 20 73 20 61 20 6E 75 6D 62 65 72 21"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Employee&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_ inherited__\"&gt;Human&lt;/span&gt; {\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt;  workNo;\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; salary;\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; int count;\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Employee&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; idCard, &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; name, &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; sex, int age, &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; workNo, &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; salary, int count) {\n        &lt;span class=\"hljs-variable language_\"&gt;super&lt;/span&gt;(idCard, name, sex, age);\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;workNo&lt;/span&gt; &amp;#61; workNo;\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;salary&lt;/span&gt; &amp;#61; salary;\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;count&lt;/span&gt; &amp;#61; count;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Employee&lt;/span&gt;() {\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getWorkNo&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; workNo;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setWorkNo&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; workNo&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;workNo&lt;/span&gt; &amp;#61; workNo;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getSalary&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; salary;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setSalary&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; salary&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;salary&lt;/span&gt; &amp;#61; salary;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; int &lt;span class=\"hljs-title function_\"&gt;getCount&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; count;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setCount&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int count&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;count&lt;/span&gt; &amp;#61; count;\n    }\n\n    &lt;span class=\"hljs-meta\"&gt;&amp;#64;Override&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;toString&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Employee{&amp;#34;&lt;/span&gt; &amp;#43;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;workNo&amp;#61;&amp;#39;&amp;#34;&lt;/span&gt; &amp;#43; workNo &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\&amp;#39;&amp;#39;&lt;/span&gt; &amp;#43;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;, salary&amp;#61;&amp;#39;&amp;#34;&lt;/span&gt; &amp;#43; salary &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\&amp;#39;&amp;#39;&lt;/span&gt; &amp;#43;\n                &lt;span class=\"hljs-string\"&gt;&amp;#34;, count&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; count &amp;#43;\n                &lt;span class=\"hljs-string\"&gt;&amp;#39;}&amp;#39;&lt;/span&gt;;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; TestClass {\n\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        Employee e1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Employee(&amp;#34;123&amp;#34;,&amp;#34;aa&amp;#34;,&amp;#34;男&amp;#34;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&amp;#34;01&amp;#34;,&amp;#34;1000&amp;#34;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;);\n        Employee e2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Employee(&amp;#34;124&amp;#34;,&amp;#34;bb&amp;#34;,&amp;#34;男&amp;#34;,&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&amp;#34;A1&amp;#34;,&amp;#34;2000&amp;#34;,&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(e1);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(e2);\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e1.getAge() &amp;gt; e2.getAge()) {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(e1);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(e2);\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.gc();\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(e1);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(e2);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语", ["JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。[1]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;d&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["答案是选A ,int型吗？", ["正文需要50个字符？戴望舒(1905年11月5日-1950年2月28日)，男，名承，字朝安，小名海山，浙江省杭州市人。后曾用笔名梦鸥、梦鸥生、信芳、江思等。中国现代派象征主义诗人、翻译家等。他先后在鸳鸯蝴蝶派的刊物上发表过三篇小说:《债》"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;如果你不能确定输入的到底是整数还是小数&amp;#xff0c;那就必须输入字符串&lt;br /&gt;否则信息全没了&amp;#xff0c;还判断什么&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言如何判断22.是小数", ["c语言中，如果认为22.是小数，那么如何在不通过字符串转化为数字，和数字转化为字符串去进行判断的情况下，来通过整型或者浮点型的输入来判断22.是小数"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你给出的结果是因为使用了不精确类型被PG把结果改写了。&lt;br /&gt;建议理解一下postgresql的几种浮点型&amp;#xff0c;避免以后使用上踩坑。&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;Postgresql提供四类浮点型&amp;#xff0c;按功能看可以分成两类&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;精确型&amp;#xff1a;decimal、numeric&lt;/li&gt;&lt;li&gt;不精确型&amp;#xff1a;real、double precision&amp;#xff08;float等价于double precision&amp;#xff09;&lt;/li&gt;&lt;li&gt;可以看下这篇博客&amp;#xff0c;有一些例子便于理解&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/jackgo73/article/details/126303459\" id=\"textarea_1675736800836_1675736815165_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/jackgo73/article/details/126303459&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;关于float(n)的写法&amp;#xff0c;文档8.1.3节有详细解析&amp;#xff1a;&lt;a id=\"textarea_1675736800836_1675736815165_1\" target=\"_blank\"&gt;&lt;span class=\"md_link_url\"&gt;http://www.postgres.cn/docs/14/datatype-numeric.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;PostgreSQL还支持 SQL 标准表示法float和float§用于声明非精确的数字类型。在这里&amp;#xff0c;p指定以二进制位表示的最低可接受精度。 在选取real类型的时候&amp;#xff0c;PostgreSQL接受float(1)到float(24)&amp;#xff0c;在选取double precision的时候&amp;#xff0c;接受float(25)到float(53)。在允许范围之外的p值将导致一个错误。没有指定精度的float将被当作是double precision。&lt;/li&gt;&lt;/ul&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "字符型", "Question": ["数据库转换数据不对问题", ["字符串类型的 4195.40 转成 浮点型  ，结果发现不对，请问这是什么问题，有什么解决办法吗", "\n", "select", " ", "'4195.40'", " ", ":: FLOAT", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;第9行改为&amp;#xff1a;a[i] &amp;#61; b; 就可以了。字符是可以单个赋值的。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["关于c语言数组的一些问题", ["学int型数组的时候看到了这种依次赋值的方法 就想在字符串数组再试试看 但是好像不可以了 有人知道为什么吗？", "\n"]], "Tag": "程序设计"}
{"Answer": "你看看字段类型是什么，是不是datetime类型，那样你要传入符合日期格式的值", "Konwledge_Point": "字符型", "Question": ["如何将获得的int类型的时间差m_stime，写入access数据库中？", ["tSecondTime = CTime::GetCurrentTime();", "\n                m_stime=(tSecondTime.GetHour()*60+tSecondTime.GetMinute())-(tFirstTime.GetHour()*60+tFirstTime.GetMinute());", "\n                sSql.Format(\"update exam_student set sctime=m_stime where sidexam='%s'\",m_pSocketID[i].strID);", "\n                pApp->m_pAdoConnect->Execute(sSql);", "\n                已测试过sctime=now()时可执行SQL语句，写入当时的时间。但是sctime=m_stime时却不能写入这个int类型的时间差。将m_stime转化为字符串，也不能写入数据库。", "\n                CString sStr = _T(\"\");", "\n                sStr.Format(\"%d\",m_stime);", "\n                    sSql.Format(\"update exam_student set sctime=sStr where sidexam='%s'\",   m_pSocketID[i].strID);", "\n                    怎样才能将时间差写入数据库呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;头文件兼容问题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;iostream,&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在我们引入库文件的时候&amp;#xff0c;他就已经有被包含。这个也由编译器问题的原因&amp;#xff0c;在vs2022中不写头文件会报错&amp;#xff0c;而在vs2020以下版本&amp;#xff0c;就会被隐藏&amp;#xff0c;所以不被报错。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["2019版visual studio中C++没有添加头文件为什么可以运行string语句？", ["在写C++型字符串的发现没有添加头文件#include;", "但是在写string语句时可以正常运行，为什么？", "打不出来string", "才学C++，求巨佬们说白话"]], "Tag": "程序设计"}
{"Answer": "import java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\n\r\n/**\r\n * 时间对比\r\n * \r\n */\r\npublic class CompareTime {\r\n\t\r\n\t/** 时间格式 */\r\n\tprivate static String DATE_TIME_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\r\n\t\r\n\t/**\r\n\t * 两时间对比, 相差是否超过3秒\r\n\t * \r\n\t * @param dateA\r\n\t * @param dateB\r\n\t * @return\r\n\t * @throws ParseException\r\n\t */\r\n\tpublic static boolean compare(String dateA, String dateB) throws ParseException {\r\n\t\tDateFormat df = new SimpleDateFormat(DATE_TIME_FORMAT);\r\n\t\treturn Math.abs(df.parse(dateA).getTime() - df.parse(dateB).getTime()) &gt; 3000;\r\n\t}\r\n\t\r\n\t/**\r\n\t * 主函数\r\n\t * \r\n\t * @param args\r\n\t */\r\n\tpublic static void main(String[] args) {\r\n\t\ttry {\r\n\t\t\tboolean isExceed = compare(\"2010-01-05 22:22:21\", \"2010-01-05 22:22:25\");\r\n\t\t\tSystem.out.println(\"两个时间相比, 是否相差超过3秒：\" + isExceed);\r\n\t\t} catch (ParseException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n}", "Konwledge_Point": "字符型", "Question": ["java时间对比", ["两个字符串 String型的\"2010-01-05 22:22:21\" ,\"2010-01-05 22:22:23\"", "\n两者相比，如果之间差超过3秒，返回false，否则 true", "\n求程序~"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; binary &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;B10110011;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; octal &amp;#61; &lt;span class=\"hljs-number\"&gt;0765&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; decem &amp;#61; &lt;span class=\"hljs-number\"&gt;9864&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; hex &amp;#61; &lt;span class=\"hljs-number\"&gt;0xA54B&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; f &amp;#61; &lt;span class=\"hljs-number\"&gt;89.72&lt;/span&gt;F;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; d &amp;#61; &lt;span class=\"hljs-number\"&gt;789.23&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c3 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c4 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n    String str &amp;#61; &amp;#34;java is a language&amp;#34;;\n    &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toBinaryString(binary));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toOctalString(octal));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(decem);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toHexString(hex));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(f);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(d);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(c1);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(c2);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(c3);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(c4);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(str);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(b);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["关于Java的基本知识会的回答一下", ["在应用程序Exci2_1的主方法中，输出  二进制整型值10110011,八进制整型  值765，十进制整型值9864，十六进  制整型值A54B，输出浮点型float数据  89.72, double数据789.23，输出字符  值&,*,n及空白字符，输出字符串值java  is a language,输出布尔值false。"]], "Tag": "程序设计"}
{"Answer": "在实体类的date字段里加上如下注解\r\n\r\n@JsonFormat(pattern = \"yyyy-MM-dd\",timezone = \"GMT+8\")\r\n\r\n\r\n或者在application.properties里添加如下配置，使用上面的注解会覆盖此全局配置，建议配置一个全局的日期格式，然后个别不同的加上注解\r\n```\r\n\r\nspring.jackson.date-format=yyyy-MM-dd\r\nspring.jackson.time-zone=GMT+8\r\n\r\n\r\n```", "Konwledge_Point": "字符型", "Question": ["java日期格式转化问题", ["mysql中的日期字段为datetime类型", "\njava中BaseEntity类的日期字段类型是java.util.date类型", "\n实体类Packing继承了BaseEntity类", "\n前端需要yyyy-MM-dd型字符串", "\n该怎样在后台处理传给前端"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/906247272256173.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; BUF_SIZE 256&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; id[BUF_SIZE];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[BUF_SIZE];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n}&lt;span class=\"hljs-type\"&gt;student_t&lt;/span&gt;;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; NUM_STUDENTS 5&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;student_t&lt;/span&gt; students[NUM_STUDENTS];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; NUM_STUDENTS; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %d&amp;#34;&lt;/span&gt;, students[i].id, students[i].name, &amp;amp;students[i].score);\n    }\n\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; id[BUF_SIZE];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, id);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; NUM_STUDENTS; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(students[i].id, id) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %d\\n&amp;#34;&lt;/span&gt;, students[i].id, students[i].name, students[i].score);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;not found\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["问下大家这怎么做呢？", ["试题详情:", "\n", "有5个学生，每个学生的数据包括：学号（字符数组型）、姓名（字符数组型）、C语言成绩（整型），编写程序先从键盘上输入学生们的数据，再输入一个学生的学号，要求输出该学号对应的学生信息，未找到该学生时输出not found。", "输入提示:", "\n", "输入仅6行，前5行输入5个学生的学号、姓名、C语言成绩，要求数据之间用空格隔开。第6行输入一个学号信息。", "输出提示:", "\n", "输出仅一行，输出学号对应的学生信息或not found (两单词中间有一空格)。", "输入样本:", "\n", "111 yi 89", "222 er 87", "333 san 98", "444 si 90", "555 wu 56", "333", "输出样本:", "\n", "333 san 98"]], "Tag": "程序设计"}
{"Answer": "提供给你一份拼url的一部分api 在这个基础上改即可\r\n[url]\r\n    \r\n    private String append(String url, String key, int value) {\r\n\r\n        return append(url, key, String.valueOf(value));\r\n    }\r\n    \r\n    /**\r\n     * 为url 参加参数对儿\r\n     * \r\n     * @param url\r\n     * @param key\r\n     * @param value\r\n     * @return\r\n     */\r\n    private String append(String url, String key, String value) {\r\n        if (url == null || url.trim().length() == 0) {\r\n            return \"\";\r\n        }\r\n\r\n        if (url.indexOf(\"?\") == -1) {\r\n            url = url + \"?\" + key + \"=\" + value;\r\n        } else {\r\n            if(url.endsWith(\"?\")) {\r\n                url = url + key + \"=\" + value;\r\n            } else {\r\n                url = url + \"&amp;amp;\" + key + \"=\" + value;\r\n            }\r\n        }\r\n        \r\n        return url;\r\n    }\r\n    [/url]", "Konwledge_Point": "字符型", "Question": ["java list传值问题", ["函数说明： ", "\n生成一个 url ", "\n\n", "语法： ", "\nlink(serviceName{,jspArgNames,jspArgValues{,reportArgNames,reportArgValues}}) ", "\n参数说明： ", "\nserviceName  服务名称 ", "\njspArgNames jsp 参数名称数组，可为空，元素类型需为字符串型 ", "\njspArgValues jsp 参数值数组，需与 jspArgNames 元素个数相同 ", "\nreportArgNames  报表参数名称数组，可为空，元素类型需为字符串型 ", "\nreportArgValues  报表参数值数组，需与 reportArgNames 元素个数相同 ", "\n\n", " 示例： \n\n     例1：link(\"ServiceName\",list(\"jspArg1\",\"jspArg2\"), list(\"value1\",2),\"count\",5) \n", "\n\n", "返回 ServiceName?jasArg1=value1&jspArg2=2&params=count=5 ", "\n\n", "这个具体要怎么实现呢？", "\n有点不明白."]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/781717478176139.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;ctype.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;atof&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sign;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; expn;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; val;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; power;\n    sign &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    power &amp;#61; &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;;\n    expn &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;isspace&lt;/span&gt;(s[i]); &amp;#43;&amp;#43;i)\n        ;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)\n        sign &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt; || s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)\n        &amp;#43;&amp;#43;i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(val &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;isdigit&lt;/span&gt;(s[i]); &amp;#43;&amp;#43;i)\n        val &amp;#61; val * &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt; &amp;#43; (s[i] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)\n        &amp;#43;&amp;#43;i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(; &lt;span class=\"hljs-built_in\"&gt;isdigit&lt;/span&gt;(s[i]); &amp;#43;&amp;#43;i)\n    {\n        val &amp;#61; val * &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt; &amp;#43; (s[i] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n        power &amp;#61; power * &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt;;\n    }\n    val &amp;#61; sign * val / power;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;e&amp;#39;&lt;/span&gt; || s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;)\n    {\n        sign &amp;#61; (s[&amp;#43;&amp;#43;i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;) ? &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt; || s[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)\n            &amp;#43;&amp;#43;i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(expn &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-built_in\"&gt;isdigit&lt;/span&gt;(s[i]); &amp;#43;&amp;#43;i)\n            expn &amp;#61; expn * &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt; &amp;#43; (s[i] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(sign &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(expn-- &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                val &amp;#61; val * &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(expn-- &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                val &amp;#61; val / &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; val;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; str[&lt;span class=\"hljs-number\"&gt;1005&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;gets&lt;/span&gt;(str);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.6f\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;atof&lt;/span&gt;(str));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["求下面问题完整的c语言代码", ["【题目内容】", "编写函数atof(s),把字符串s转化成相应的双精度浮点数.输入字符串可能含有如下几部分：正负号整数部分小数点小数部分该函数还能够处理形如123.45e-5的指数型字符串输入.输入字符串中不含有空格.编写一个程序,使用该函数,将输入的字符串转换成相应的双精度浮点数", "【输入形式】", "控制台输入字符串s.它可以含有正负号,小数点,整数部分和小数部分,以及字符’e’和相应的指数部分", "【输出形式】", "控制台输出转换后的双精度数.格式化输出,使用\"%f\",即不需指定字段宽度,由系统自动指定,使整数部分全部如数输出,并保留6位小数部分", "【测试用例1】", "输入：", "123.45e-5", "输出：", "0.001235"]], "Tag": "程序设计"}
{"Answer": "烫 是因为没初始化 你改成下面试试\r\n\r\n\r\n```int main()\r\n{\r\n\tint a=3, b=5;\r\n\tint i = 0;\r\n\tchar s[80] = {'\\0'};\r\n\tscanf_s(\"%d %d\", &amp;a, &amp;b);\r\n\twhile (a / b != 0)\r\n\t\ta /= 10;\r\n\tint l = sizeof(s) / sizeof(char*);\r\n\tfor (int i = 0; i &lt; l; i++) {\r\n\t\tint c = (a * 10) / b + 48;\r\n\t\tsprintf(&amp;s[i],\"%d\", (const char*)c);\r\n\t\ta = (a * 10) % b;\r\n\t}\r\n\tprintf(\"%s\",s);\r\n\treturn 0;\r\n}\r\n \r\n```", "Konwledge_Point": "字符型", "Question": ["在char与int的强行转换中遇到的问题？", [" #include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n\nint main()\n{\n    int a, b;\n    int i = 0;\n    char s[80];\n    scanf_s(\"%d %d\", &a, &b);\n    while (a / b != 0)\n        a /= 10;\n    for (int i = 0; i < 80; i++) {\n        s[i] = (a * 10) / b+48;\n        a = (a * 10) % b;\n    }\n    printf(\"%s\", s);\n    return 0;\n}\n", "\n\n", "不知道为什么，输出的结果无论字符串长度有多大，结尾总有四个“烫”，请问这是为什么？"]], "Tag": "程序设计"}
{"Answer": "上传成功后返回给客户端的上传时间数据是long型的？\r\n改这里就可以，不要改spring", "Konwledge_Point": "字符型", "Question": ["springmvc 时间属性是如何跟简单java类绑定的?", ["我实现一个简单上传功能:先上传文件,成功则将现在时间返回给客户端,然后客户端连同其他字段信息保存到数据库;使用的是springmvc+spring+mybatis框架.", "\n我发现上传成功后返回给客户端的上传时间数据是long型的,当再次传到controller时;该字段无法与简单java类的相应字段进行绑定,导致保存到数据库的上传时间都是空的.", "\n如何设置spring框架让他自动将long型的字符串转化为date型数据;"]], "Tag": "程序设计"}
{"Answer": "TextView tv = new TextView(this);\r\ntv.setText(\"Test set TextView's color.\");\r\n\r\nString StrColor = null;\r\nStrColor = \"FFFFFFFF\";\r\nint length = StrColor.length();\r\nif (length == 6) {\r\n\ttv.setTextColor(Color.rgb(\r\n\t\t\tInteger.valueOf(StrColor.substring(0, 2), 16),\r\n\t\t\tInteger.valueOf(StrColor.substring(2, 4), 16),\r\n\t\t\tInteger.valueOf(StrColor.substring(4, 6), 16)));\r\n} else if (length == 8) {\r\n\ttv.setTextColor(Color.argb(\r\n\t\t\tInteger.valueOf(StrColor.substring(0, 2), 16),\r\n\t\t\tInteger.valueOf(StrColor.substring(2, 4), 16),\r\n\t\t\tInteger.valueOf(StrColor.substring(4, 6), 16),\r\n\t\t\tInteger.valueOf(StrColor.substring(6, 8), 16)));\r\n}不知道你知道不知道R文件中的int只是对Resource中的资源的索引，就是让找到自愿的。转换成那个int我不知道游泳没有，反正我这人很笨。只会这样笨笨的走了。", "Konwledge_Point": "字符型", "Question": ["Android textview settextcolor相关问题", ["Android中TextView的settextcolor方法，是接受一个int型的参数，现在我要从xml文件里面读取一个形为“#FF00FF”的字符串，怎样把这个字符串处理成为我想要的int参数呢？今天试了很多方法都没有很好解决，想请教一下大家，谢谢啦！"]], "Tag": "程序设计"}
{"Answer": "char[] = 'abc', 可以理解为字符串", "Konwledge_Point": "字符型", "Question": ["8086汇编语言定义数据问题", ["data segment", "\ndb 'abc'", "\ndata ends", "\n为什么定义的字节型数据可以是字符串？？？"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def maxstr(s,t):\n    &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#61; []\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(s)):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;j&lt;/span&gt; in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(s)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; s[i:&lt;span class=\"hljs-keyword\"&gt;j&lt;/span&gt;] in t:\n                &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;append&lt;/span&gt;(s[i:&lt;span class=\"hljs-keyword\"&gt;j&lt;/span&gt;])\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;No Answer&amp;#39;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#61; sorted(&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;, key&amp;#61;lambda &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    \n    s, t &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(), &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n    &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#61; maxstr(s, t)\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点个采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python最长公共子串", ["【问题描述】", "编写一个程序，对输入的字符串s和t，求其最长的公共子字符串。", " 【输入形式】", "从屏幕分行读入串s和t。s和t由任意字符构成，长度都不超50个字符。输入数据确保只有唯一的最长公共子串。如果没有公共子串，打印No Answer", "\n", "【输出形式】", "在单独行上输出串s和串t的最长公共子串，在结尾输出一个回车符。", "\n", "算法提示：用一个int型的计数器记录当前匹配长度，用一个字符数组记录当前匹配子串，如果存在更长子串，则进行相应替换。", "【样例说明】", " 假设从屏幕输入以下内容：", "aabcdababce", "12abcabcdace", "则输出内容为：", "abcda"]], "Tag": "程序设计"}
{"Answer": "function CheckInputFloat(input) {\r\nvar reg =  /\\d{1,8}\\.{0,1}\\d{0,2}/;   \r\n    if (reg.test(input))   \r\n    {  \r\n         if(input.indexOf('.') != -1)\r\n         {\r\n           return true;\r\n         }\r\n    }\r\n    return false;\r\n}\r\n\r\n另外把这个事件绑定到控件的onblur上", "Konwledge_Point": "字符型", "Question": ["正则表达式，如何限定输入的是浮点数，且整数位8位，小数位2位", ["正则表达式，如何限定输入的是浮点数，且整数位8位，小数位2位，数据库对应字段为Numric(10,2)。现在要求如果只输入整数的话，只允许输入8位，如：12345678，如果带小数的话，整数位也最多8位，但可以加小数点后2位，如12345678.12是符合要求的，现在不知道正则表达式该如何写。 [color=red]/\\d{1,8}.{0,1}\\d{0,2}/[/color]如果这样写的话，可以输入10位整数，[color=red] /\\d{1,8}.\\d{0,2}/[/color]如果这样写，文本框中无法输入任何字符。希望有人指点一下。谢谢。"]], "Tag": "程序设计"}
{"Answer": "Integer qty；\r\n\r\n要么把qty修改为string，\r\n要么使用过滤器验证；\r\n\r\npublic void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) \r\n在这个过滤器的函数里验证", "Konwledge_Point": "字符型", "Question": ["struts1.2的form中属性的传值问题和验证问题", ["我想通过我的form中的validate()方法来验证我的输入信息是否正确,", "\n现在我的问题是这个form中有一个属性是Integer qty;我想判断它是不是数值型的,但是我在jsp页面上输入字符串时,它无法传到这个form中的qty属性,只能得到0,要是输入的就是数值型 的就可以传过去.", "\n想问一下,我怎么能验证它是否是数值型的,(不想用js和validator-rules.xml这两种方式)"]], "Tag": "程序设计"}
{"Answer": "```\r\n没办法知道，数组到了函数退化成指针，sizeof返回1，而不是数组的大小。\r\n要么类似string那样，自己维护一个长度，要么char[]使用某个特殊符号作为最后一个元素的标志（'\\0'），要么把长度作为一个额外的参数传进去。\r\n\r\n更进一步解释就是，c语言为了效率，没有存储数组的长度，也没有判断数组越界的机制，sizeof不是函数，而是运算符。在编译期可以确定的，会得到正确的值\r\n比如\r\nint a[10]\r\nsizeof(a)\r\n此时知道是10\r\n但是\r\nvoid f(int a[])\r\n因为编译的时候，编译器搞不清谁调用它，传入的是什么a，也许很多变量都会被当作参数传入呢。所以就不能确定\r\n```\r\n\r\n# 问题解决的话，请点下采纳", "Konwledge_Point": "字符型", "Question": ["如何在函数里面知道形参传入数组的元素个数？", ["我们知道sizeof（）一个数组名得出的结果是数组元素的个数，", "\n但是用指针的形式定义一个字符串，再sizeof这个指针名，得出的结果是一个字符指针类型的大小，在我的设备上面就是4，", "\n那么我现在要向一个函数里面传递一个数组，我现在只知道在定义形参的时候定义为", "\n\n", "void  fun(char *x ）\n", "\n\n", "或者", "\n\n", "void  fun(char x[] ）\n", "\n\n", "的形式。", "\n但是经过我自己的测试，在函数里面调用sizeof（x）之后，无论数组元素个数的多少，结果都是4，那么问题来了。我想找函数里面知道传入数组的元素个数该怎么办？", "\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;Map类型加上。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;&amp;gt; specMap\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["Exception in thread \"main\" java.lang.Error: 无法解析的编译问题：没有为类型 TbItem 定义方法 setSpecMap（Map）", ["在其它的地方调用setSpecMap（自己写的get和set方法）方法。说是找不到，报错信息：没有为类型 TbItem 定义方法 setSpecMap（Map）;在其它的地方调用setspecmap方法.说是找不到；我调用其他的get和set方法又是可以的(如:getld和setld) .", "\n", "文件一（中的代码）：", "package com.pinyougou.pojo;", "\n", "public class TbItem implements Serializable{", "\n", "@Field", "\n", "private", " ", "Long", " id;\n\n", "@Field", "(", "\"item_title\"", ")\n", "private", " ", "String", " title;\n\n", "private", " ", "String", " sellPoint;\n\n", "@Field", "(", "\"item_price\"", ")\n", "private", " ", "BigDecimal", " price;\n\n", "private", " ", "Integer", " stockCount;\n\n", "private", " ", "Integer", " num;\n\n", "private", " ", "String", " barcode;\n\n", "@Field", "(", "\"item_image\"", ")\n", "private", " ", "String", " image;\n\n", "@Field", "(", "\"item_goodsid\"", ")\n", "private", " ", "Long", " goodsId;\n\n", "private", " ", "String", " sellerId;\n\n", "private", " ", "String", " cartThumbnail;\n\n", "@Field", "(", "\"item_category\"", ")\n", "private", " ", "String", " category;\n\n", "@Field", "(", "\"item_brand\"", ")\n", "private", " ", "String", " brand;\n\n", "private", " ", "String", " spec;\n\n", "@Field", "(", "\"item_seller\"", ")\n", "private", " ", "String", " seller;\n\n", "@Dynamic", "\n", "@Field", "(", "\"item_spec_*\"", ")\n", "private", " ", "Map", "<", "String", ",", "String", "> specMap;\n\n", "public", " ", "Map", "<", "String", ", ", "String", "> ", "getSpecMap", "(", ") {\n    ", "return", " specMap;\n}\n\n", "public", " ", "void", " ", "setSpecMap", "(", "Map", "<", "String", ", ", "String", "> specMap", ") {\n    ", "this", ".", "specMap", " = specMap;\n}\n\n", "public", " ", "Long", " ", "getId", "(", ") {\n    ", "return", " id;\n}\n\n", "public", " ", "void", " ", "setId", "(", "Long id", ") {\n    ", "this", ".", "id", " = id;\n}\n\n", "public", " ", "String", " ", "getTitle", "(", ") {\n    ", "return", " title;\n}\n\n", "public", " ", "void", " ", "setTitle", "(", "String", " title", ") {\n    ", "this", ".", "title", " = title == ", "null", " ? ", "null", " : title.", "trim", "();\n}\n", "\n", ".............", "}", "文件二（中的代码，也是出错的地方）：", "package com.pinyougou.solrutil;", "\n", "import java.util.List;", "import java.util.Map;", "\n", "@Component", "public class SolrUtil {", "\n", "@Autowired\n", "private", " TbItemMapper itemMapper;\n\n@Autowired\n", "private", " SolrTemplate solrTemplate;\n\n", "/**\n * 导入商品数据\n */", "\npublic void import", "ItemData()", "{\n    TbItemExample example=", "new", " ", "TbItemExample()", ";\n    Criteria criteria = example.create", "Criteria()", ";\n    criteria.", "and", "StatusEqualTo(", "\"1\"", ")", ";", "//已审核", "\n    List<TbItem> itemList = itemMapper.select", "ByExample(", "example", ")", ";\n    \n    ", "System", ".", "out.println(", "\"=====商品列表=====\"", ");\n    ", "for", "(TbItem item:itemList){\n        ", "System", ".", "out.println(item.get", "Id()", "+", "\" \"", "+ item.get", "Title()", "+ ", "\" \"", "+item.get", "Price()", ");    \n        Map specMap = ", "JSON", ".", "parse", "Object(", "item", ".", "getSpec", "()", ", ", "Map", ".", "class", ");", "//从数据库中提取规格json字符串转换为map", "\n        item.set", "SpecMap(", "specMap", ")", ";\n    }        \n    solrTemplate.save", "Beans(", "itemList", ")", ";\n    solrTemplate.commit", "()", ";\n    \n    ", "System", ".", "out.println(", "\"=======结束=======\"", ");            \n}    \n\npublic static void main(String", "[]", " args) {\n    ApplicationContext context=", "new", " ", "ClassPathXmlApplicationContext(", "\"classpath*:spring/applicationContext*.xml\"", ")", ";\n    SolrUtil solrUtil=  (SolrUtil) context.get", "Bean(", "\"solrUtil\"", ")", ";\n    solrUtil.import", "ItemData()", ";\n}\n", "\n", "}", "\n"]], "Tag": "程序设计"}
{"Answer": "[运行结果](https://img-ask.csdn.net/upload/201801/28/1517124021_2471.png)", "Konwledge_Point": "字符型", "Question": ["char中是否可以储存汉字？", ["下面是一道面试题。", "\n\n", "但是本人不是很理解，而且无法写出代码，", "\n有人解释下并给出程序吗，立马给C币", "\n\n", "22、char 型变量中能不能存贮一个中文汉字，为什么？\n答：char类型可以存储一个中文汉字，因为Java中使用的编码是Unicode（不选择任何特定的编码，直接使用字符在字符集中的编号，这是统一的唯一方法），一个char类型占2个字节（16比特），所以放一个中文是没问题的。\n", "\n\n", "如何将基本数据类型转换为字符串？\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;SouthOrange&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;shape&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;color&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; Integer membrane;\n        &lt;span class=\"hljs-title function_\"&gt;SouthOrange&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;shape&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;color&lt;/span&gt;, Integer membrane){\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;shape&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;shape&lt;/span&gt;;\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;size&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;;\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;color&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-type\"&gt;color&lt;/span&gt;;\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;membrane&lt;/span&gt; &amp;#61; membrane;\n        }\n        &lt;span class=\"hljs-title function_\"&gt;SouthOrange&lt;/span&gt;(){}\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getShape&lt;/span&gt;() {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;shape&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setShape&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;shape&lt;/span&gt;) {\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;shape&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;shape&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getSize&lt;/span&gt;() {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setSize&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;) {\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;size&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;getColor&lt;/span&gt;() {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;color&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setColor&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;color&lt;/span&gt;) {\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;color&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-type\"&gt;color&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Integer &lt;span class=\"hljs-title function_\"&gt;getMembrane&lt;/span&gt;() {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; membrane;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setMembrane&lt;/span&gt;(Integer membrane) {\n            &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;membrane&lt;/span&gt; &amp;#61; membrane;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;show&lt;/span&gt;(){\n            System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;shape &amp;#61; &amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;shape&lt;/span&gt;);\n            System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;size &amp;#61; &amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;size&lt;/span&gt;);\n            System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;color &amp;#61; &amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;color&lt;/span&gt;);\n            System.&lt;span class=\"hljs-property\"&gt;out&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;membrane &amp;#61; &amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-variable\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;membrane&lt;/span&gt;);\n        }\n    }\n\n    &amp;#64;Test\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;test001&lt;/span&gt;(){\n        SouthOrange southOrange1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new &lt;/span&gt;&lt;span class=\"hljs-class title_\"&gt;SouthOrange&lt;/span&gt;();\n        SouthOrange southOrange2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new &lt;/span&gt;&lt;span class=\"hljs-class title_\"&gt;SouthOrange&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;圆形&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;橙色&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        southOrange1.&lt;span class=\"hljs-property\"&gt;setShape&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;正方形&amp;#34;&lt;/span&gt;);\n        southOrange1.&lt;span class=\"hljs-property\"&gt;setSize&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        southOrange1.&lt;span class=\"hljs-property\"&gt;setColor&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;黑色&amp;#34;&lt;/span&gt;);\n        southOrange1.&lt;span class=\"hljs-property\"&gt;setMembrane&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n\n        southOrange1.&lt;span class=\"hljs-property\"&gt;show&lt;/span&gt;();\n        southOrange2.&lt;span class=\"hljs-property\"&gt;show&lt;/span&gt;();\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["java题，急，大家快来看看吧", ["1）定义一个橘类(SouthOrange)，包含4个私有成员变量shape，size、color、membrane分别为字符串、单精度浮点型、字符串及整型，表示果实形状、直径大小、果皮颜色、囊瓣数。一个四参构造方法，一个无参构造方法，四个分别设置4个成员变量的方法，四个分别获取成员变量取值的方法，及一个输出方法显示四种属性。", "\n", "‎", "（2）编写测试类，测试SouthOrange。"]], "Tag": "程序设计"}
{"Answer": "呵呵，我太小白了。有更简单的方法：\r\n\r\n\r\n\t\tbyte source = 2;\r\n\t\tchar result = (\"\"+source).charAt(0);\r\n\t\tSystem.out.println(result);", "Konwledge_Point": "字符型", "Question": ["关于byte转为char的", ["数据库中是以number(1,0)存储的，其中只存储0-9数字。我从数据中取出来放在resultSet中想转化为char", "\n(char)rst.getByte(2)；", "\n但取出的却是把数字对应的ASCII码对应的字符输出了", "\n有什么办法把数字2(Byte)转为char型吗？"]], "Tag": "程序设计"}
{"Answer": "那你的tfidf就应该是一个dict，然后你存好对应的数据，后面就可以根据汉字字符串作为key来查询", "Konwledge_Point": "字符型", "Question": ["Python报错list indices must be integers, not str", ["\ncorterm是汉字字符串，没办法转化为整形，我想将一一对应的corterm与tf*idf组成一个字典或者列表型，怎么弄啊？纠结一上午了，大神们，帮帮忙啊"]], "Tag": "程序设计"}
{"Answer": "因为不知道你说的是什么数据库，目前就仅以sql server 的TSQL的自定义函数方法来举例。根据你的需求，你想要的是返还一个值的函数，在sql server中就属于标量值函数，我理解的语法如下，另外返还一个表的函数的创建语法与下方例子略有不同。\r\n```\r\n--================\r\n-- 创建人：猫狸嘎\r\n-- 创建时间：2020-09-22\r\n-- 最后修改人：\r\n-- 最后修改时间：\r\n-- 目的：根据输入日期返还其属于上半年还是下半年\r\n-- ===============\t\t\t\t\t\t--上面是函数的基本日志与说明，可写可不写。如果有其他人想要修改该函数，肯定能看到该说明，方便其他人维护。\r\nCREATE FUNCTION [dbo].[Fun_Get_NV_NF]\t--CREATE FUNCTION 表示 创建 函数。dbo.表示创建者，如果不写应该是默认登录数据库的账号为创建者。Fun_Get_NV_NF表示函数名称，函数名称可带_符号，Fun开头是为了在某些场景下方便分辨这个对象是函数，Get_NV表示该函数是用来获取nvarchar值的用途，属于标量函数，最后NF表示年份，代表函数用途。\r\n\t\t\t\t\t\t\t\t\t\t--函数命名规则是可以遵循自己的命名规则来，不一定要按照我上面所说的方式。但是建议参考这种命名方法，也就是：对象属性_基本用途_返还参数类型_函数用途。\r\n(@Time as datetime)\t\t\t\t\t\t--表示该函数需要一个必须的输入参数@Time，as datetime 表示该参数定义为时间类型。\r\nRETURNS nvarchar(6) \t\t\t\t    --表示该函数会返还nvarchar(6)类型的数据。\r\nbegin\t\t\t\t\t\t\t\t\t--函数对数据开始处理的开始。\r\ndeclare @NF nvarchar(6)\t\t\t\t\t--声明一个变量，基本语法为 declare @XXXXXX  变量类型\r\nselect @NF = case when month(@Time)&lt;=6 then '上半年' else '下半年' end\t\t--给@NF赋值。\r\n\r\nreturn @NF\t\t\t\t\t\t\t\t--指定该函数最后返还什么值。\r\n\r\nend\t\t\t\t\t\t\t\t\t\t--函数对数据开始处理的结束。\r\n\r\nselect dbo.Fun_Get_NV_NF('2020-09-22')\t\t--实例1\r\nselect dbo.Fun_Get_NV_NF('2020-06-22')\t\t--实例2\r\n\r\n```\r\n最后来看下实例1与实例2的返还结果\r\n![图片说明](https://img-ask.csdn.net/upload/202009/22/1600739885_282670.png)", "Konwledge_Point": "字符型", "Question": ["需要入门级dsql自定义函数详解", ["刚接触sql的自定义函数，看着网上的各种只讲概念不解释例子的教程看的头痛，我希望写个：给函数一个DATA型的日期，根据日期的月份返回“上半年”或“下半年”的字符串。如果可以的话最好有个例子并且详细注释一下这个函数中的所有的单词的含义"]], "Tag": "程序设计"}
{"Answer": "select * from a where nvl2(translate(value,'\\1234567890','\\'),1,0) = 1 and to_number(value) between 2 and 12 ;\r\n\r\n\r\nnvl2(translate(value,'\\1234567890','\\'),1,0)\r\n判断value是否是数字类型,是的话返回1,否0....", "Konwledge_Point": "字符型", "Question": ["sql查询遇到的类型转化问题", ["表中一个栏位value是varchar2 型的, 其中的数据有的是可以转化为数字的.有的是字符串.\n", "\n\n", "现在想要通过数字的条件来查询, 类似", "\n\n", "select * from a where to_number(value) between 2 and 12", "\n\n", "如果按照上面的写法, 由于value也可能含有字符, 所以会报错", "\n\n", "如果按照字符串比较, 会出现\"2\"大于\"12\"的情况, 于是用lpad来做:", "\n\n", "select * from a where lpad(value, 10, ' ') between lpad(2, 10, ' ') and lpad(12, 10, ' ')", "\n\n", "这种做法在是整数的时候是可以的, 如果是小数或是负数还是有问题,", "\n\n", "请问是否有其他的办法来实现这个查询??"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;label是类别&amp;#xff0c;比如说&amp;#xff08;“100&amp;#xff0c;“110”,“111“&amp;#xff09;&amp;#xff0c;你的100是第0类&amp;#xff0c;110是第1类&amp;#xff0c;111是第2类&amp;#xff0c;你这么写变成了100是第100类&amp;#xff0c;110是第110类&amp;#xff0c;111是第111类了&amp;#xff0c;原本你只有三个类别&amp;#xff0c;现在变成了111个类别了&amp;#xff0c;肯定出问题啊&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["【提问-pytorch运行报错】CUDA error: CUBLAS_STATUS_ALLOC_FAILED when calling `cublasCreate(handle)`", ["问题如下：", "1、利用pytorch复现googlenet网络", "2、定义训练过程函数中", "\n", "def train(epoch):\n    ", "running_loss", " = ", "0", "  ", "# 损失值归零", "\n    for batch_idx, data ", "in", " enumerate(train_loader, ", "start=0):", " \n        images, ", "labels", " = data ", "#将输入x和相应的标签y从数据中拿出来", "\n\n        ", "# 将输入和目标y都放到GPU上面", "\n        images, ", "labels", " = images.to(device), labels.to(device)\n\n...\n", "\n", "labels.to(device)", "报错“AttributeError: 'tuple' object has no attribute 'to'”，发现是因为Python中的元组类（tuple）没有调用", "to", "的方法。", "3、解决", "（1）执行", "labels = torch.tensor(labels).to(device)", "试图将tuple转为tensor，但是报错：\"ValueError: too many dimensions 'str'\"；", "（2）这是因为“张量表示由", "数值", "组成的多维数组”，故字符串str无法直接转为tensor", "4、将tuple字符串元素数值化", "（1）方法一：调用sklearn的preprocessing（成功运行）", "\n", "from sklearn ", "import", " preprocessing\n\n", "le", " = preprocessing.LabelEncoder() ", "#获取一个LabelEncoder", "\n", "labels", " = le.fit_transform(labels) ", "#训练LabelEncoder", "\n", "labels", " = torch.as_tensor(labels) \n", "\n", "成功运行", "（2）方法二：直接将tuple元素强转为int型（运行报错）", "\n", "images, ", "labels", " = data #将输入x和相应的标签y从数据中拿出来\n", "print", "(", "labels", ")\n", "\n", "输出：", "('177', '166', '100', '136')", "由于labels实际上是数字，所以思考能否直接将元素转为int型？", "\n", "labels", " ", "=", " [int(i) for i in labels]\n", "labels", " ", "=", " torch.as_tensor(labels)\n", "\n", "经过此操作成功将labels转为了tensor，但是运行之后报错：", "\n", "RuntimeError: CUDA error: CUBLAS_STATUS_ALLOC_FAILED ", "when", " calling `cublas", "Create(", "handle", ")", "`\n", "\n", "\n", "Q：请问方法二为什么会报错呢？", "\n"]], "Tag": "程序设计"}
{"Answer": "https://bbs.csdn.net/topics/392507676", "Konwledge_Point": "字符型", "Question": ["AES解密出现意外的截断", ["源文件经过AES加密后，文件二进制数据如以下16字节：", "\n\n", "{ 0xC3, 0x33, 0xDB, 0x50, 0x6D, 0x00, 0xF0, 0x48, 0xC9, 0x60, 0x3C, 0x51, 0x4A, 0x1C, 0x8B, 0x0E }", "\n\n", "在进行解密的时候，以char型字符数组读取的时候，编译器默认读到0x00就认为数据到末尾了，但是实际上并没有。秘钥有时也会出现这个问题。", "\n我尝试将十六进制数据转换成int型，但是解密后数据不再是以前的数据了。请问应该怎么才能正确读取并解压数据呢？"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;没有问题呀&amp;#xff0c;很正常输出怎么了&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/746758508646160.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["JAVA“超级密码”问题", ["\nimport java.util.Scanner;\npublic ", "class", " Main {\n    public static void main(String", "[]", " args )\n    {\n        Scanner In = ", "new", " ", "Scanner(System.", "in", ")", ";\n        ", "int", " frequency =", "In", ".", "next", "Int()", ";", "//将2视为输入字符串次数", "\n        ", "int", " digit;", "//最终输出数值", "\n        ", "for", "(", "int", " j=", "0", ";j<=frequency;j++) {\n            String str =", "In", ".", "next", "Line()", ";\n            digit=", "0", ";", "//重置数值", "\n            ", "for", "(", "int", " i=", "0", ";i<str.length", "()", " ;i++){\n                ", "char", " ac=str.", "char", "At(", "i", ")", ";", "//提取字符", "\n                ", "if", "( ", "Character", ".", "is", "Digit(", "ac", ")", "){", "//判断提取出的字符是否为数字，若是则加入到digit上。", "\n                    digit=digit*", "10", "+(ac-", "48", ");\n                }\n            }\n            ", "System", ".", "out.println(digit*", "513", ");\n        }\n    }    \n}\n", "\n", "特点：", "    找出字符串的数字后，放在一起形成int型，再乘以513后输出。", "要求", "      要求输入   :", "          2", "          ads2d4,122", "          0023asdf2AA90", "      输出为 :", "          12374586", "           11947770", "\n", "疑问：", "    单是一个输入字符串，输出就不会有问题，例如输入 ads2d4,122，就会输出12374586。", "    但是加上frequency后就出现一堆问题。", "    求按照代码原本意思修改错误"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这样啊, 注意数组名不能和a变量重名&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt; a,b,c,d;\n    &lt;span class=\"hljs-attribute\"&gt;cin&lt;/span&gt; &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c;\n    &lt;span class=\"hljs-attribute\"&gt;float&lt;/span&gt; arr[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    &lt;span class=\"hljs-attribute\"&gt;arr&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;a;\n    &lt;span class=\"hljs-attribute\"&gt;arr&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;b;\n    &lt;span class=\"hljs-attribute\"&gt;arr&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&amp;#61;c;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["浮点数怎么存入数组再拿出来计算？", ["题目要求把随意输入的三个浮点数按照从大到小的顺序排列，我就想把三个浮点数存入数组，然后递归一下求最大值和最小值，然后去三个数相加再减去最大值和最小值求中间值（见注释部分），但是不知道怎么把浮点数存入数组，貌似没有float类型的浮点数吧，用string貌似也不行，string存入的不是一个字符串吗，char就更不用提了，能不能帮忙操作一下，源代码在下边，已经跑过了，把if操作的abc按顺序排列注释掉就可以自己操作了。", "\n", "\n", "\n", "#include <iostream>", "\n", "#include <cstdio>", "\n", "#include <cstring>", "\n", "#include <cmath>", "\n\nusing namespace std;\n\nint main(){\n    float a,b,c,d;\n    cin >> a >> b >> c;\n", "/*  float a[3]={a,b,c};             //怎么把浮点存入数组再拿出来计算\n    string a[3]={a,b,c};\n    int max=a[0],min=a[0];\n    for(int i=0;i<3,i++){\n        max=((max+a[i]+abs(max-a[i]))/2;\n        min=((min+a[i]-abs(min-a[i]))/2;\n    }\n    b=(a+b+c-max-min)/2;\n    a=max;\n    c=min;\n */", " \n    ", "if", "(a>=b){\n        ", "if", "(b>=c)\n        ;\n        ", "else", " ", "if", "(a>=c){\n        ", "d=b;", "\n        ", "b=c;", "\n        ", "c=d;", "\n        }", "else", "{\n        ", "d=a;", "\n        ", "a=c;", "\n        ", "c=b;", "\n        ", "b=d;", "\n        }\n        \n    }", "else", " {\n        ", "if", "(b<=c){\n        ", "d=a;", "\n        ", "a=c;", "\n        ", "c=d;", "\n        }", "else", " ", "if", "(a<=c){\n        ", "d=b;", "\n        ", "b=c;", "\n        ", "c=a;", "\n        ", "a=d;", "\n        }\n        ", "else", "{\n            ", "d=b;", "\n            ", "b=a;", "\n            ", "a=d;", "\n        }\n        \n        \n    }\n \n \n    ", "if", "(b+c<=a)\n        cout << ", "\"NAO FORMA TRIANGULO\"", " << endl;\n    ", "else", " {\n        ", "if", "(a*", "a==b*b+c*c)", "\n        cout << ", "\"TRIANGULO RETANGULO\"", " << endl;\n        ", "else", " ", "if", "(a*a>b*b+c*c)\n        cout << ", "\"TRIANGULO OBTUSANGULO\"", " << endl;\n        ", "else", " \n        cout << ", "\"TRIANGULO ACUTANGULO\"", " << endl;\n    }\n    \n    ", "if", "(b+c>a){\n        ", "if", "(", "a==b", " && ", "b==c)", "\n        cout << ", "\"TRIANGULO EQUILATERO\"", " << endl;\n        \n        ", "if", "(", "a==b", " && a!=c || ", "a==c", " && a!=b || ", "b==c", " && b!=a)\n        cout << ", "\"TRIANGULO ISOSCELES\"", " << endl;\n    }\n}\n"]], "Tag": "程序设计"}
{"Answer": "(1) int sprintf(char *string, char *farmat [,argument,...]);\r\n(2) 应该是用 winapi的SetTextAlign()具体记不太清楚了", "Konwledge_Point": "字符型", "Question": ["一个关于visual c++的编程问题", ["请问一下，如何把两个int 型的变量 与两个字符相连，组成一个字符串啊 ", "\n如： ", "\n         int a=1,b=2; ", "\n        string c; ", "\n        //代码 ", "\n         c=\"1A2B\"；   //1,2分别对应a,b的值，A,B为不变的字符， ", "\n                        //也就是说c的形式为： ", "A", "B ", "\n  望人指点 ", "\n\n", "另外，在c++可视化编程里，如何输出列表啊，即一个字符变量第一次输出的与第二次输出的左对齐，像这样：    1A2B", "\n                 3A1B", "\n望帮帮忙，谢谢", "\n[b]问题补充：[/b]", "\n如果我用itoa()这个函数要怎么用啊，我用了它报错，说不合函数调用规则", "\n\n", "我结果用c=(char)(a+48)+\"A\"+(char)(b+48)+\"B\";", "\n 把这个问题解决了，可是，这个方法不好，如果a,b不是个位数的话，又要改代码了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个算法蛮复杂的&amp;#xff0c;我有VB&amp;#xff0c;VC的代码。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python实现桥牌合理开叫，同时统计牌点", ["随机生成 13 张扑克牌（无大小王牌），统计其牌点（point）。扑克牌牌张（card）有牌花（suit）与牌阶（rank）两种属性，使用字符串“23456789TJQKA”表示牌阶，每一牌阶用单个字符表示，顺序从小到大，其中“T”表示 10。使用字符串“CDHS”表示牌花，每种牌花用单个字符表示，顺序从小到大，分别为梅花（club）、方块（diamond）、红桃（heart）和黑桃（spade） 。牌点规定如下：“A”记为 4 点，“K”记为 3 点，“Q”记为 2 点，“J”记为 1 点，其他牌记为 0 点", "如果熟悉桥牌（bridge），编写函数，返回其合理开叫（opening bidding）。叫牌时使用“P”表示通过，“NT”表示无将（notrump），无将大于全部花色。叫牌时，可能需要根据叫牌或定约（contract）情况修正牌点。例如，无将定约时应增加长套牌型点，扣除单张大牌点；有将定约时亦存在类似规则。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可能是因为使用hasNext()来判断字符串是否为数字不是很恰当的原因&amp;#xff0c;因为hasNext()是判断输入里面是有一个整数可以读取&amp;#xff0c;如果先输入数字&amp;#xff0c;然后输入空格&amp;#xff0c;然后一个字符串&amp;#xff0c;那么hasNext()就判断到输入前面有一个数字可以读取而返回true, 他不是判断整个一行输入是否完全为数字。&lt;br /&gt;判断是否为数字可以使用Integer.parseInt()方法来操作&amp;#xff0c;用一个try-catch括起来&amp;#xff0c;如果出现异常说明输入的一行字符串不是完全是数字&amp;#xff0c;如果正确执行完&amp;#xff0c;则是数字&amp;#xff0c;代码如下&amp;#xff1a;&lt;br /&gt;参考链接&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/weixin_41262453/article/details/88815173\" id=\"textarea_1656647303200_1656647368012_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;《Scanner的hasNext、hasNextInt用法》_weixin_41262453的博客-CSDN博客_hasnext和hasnextint&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\nimport java.util.Scanner;\n\npublic class A {\n\n     public static void main(String args[]) {\n            Scanner sc &amp;#61; new Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n            String c1;\n            System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的值(输入bye退出)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            c1 &amp;#61; sc.nextLine();\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!&lt;span class=\"hljs-string\"&gt;&amp;#34;bye&amp;#34;&lt;/span&gt;.equals(c1)) {&lt;!-- --&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断当前是否有输入&amp;#xff0c;有输入则执行循环\n                 int i ;\n                 try {\n                        \n                    i&amp;#61; Integer.parseInt(c1);\n                   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; System.out.println(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n                 }catch ( NumberFormatException e) {\n                     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;System.out.println(e.toString());\n                     System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;这是字符串&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;c1);\n                     System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的值(输入bye退出)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                     c1 &amp;#61; sc.nextLine();\n                     &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n                 }\n                \n                System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;这是整数&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;i); \n                System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的值&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                c1 &amp;#61; sc.nextLine();\n                 \n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(sc.hasNextInt()) {        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;判断输入的是否是int型数据        \n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    c1 &amp;#61; sc.nextLine();\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;这是整数&amp;#34;&lt;/span&gt;&amp;#43;c1);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;继续请输入你的值&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    c1 &amp;#61; sc.nextLine();\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;这是字符串&amp;#34;&lt;/span&gt;&amp;#43;c1);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;继续请输入你的值&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                    &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;                }\n            }\n        }\n\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/186790746656166.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["java中hasNextInt()不能正确判断含有空格的数据", ["使用hasNextInt()方法，当输入的一行数据中存在空格时，就不能正确判断是不是整数", "\n", "例如：", "        我输入{123423as}  它会输出   123423as是整数", "        我输入{saas    123} 它会输出 saas    123是字符串", "        但是我输入{ 1243       as }  它会输出   1243       as  是整数   ", "\n", "\n", "public", " ", "class", " A{\n    \n    ", "public", " static ", "void", " main(String args[]) {\n        Scanner sc = ", "new", " Scanner(", "System", ".", "in", ");\n        String c1;\n        ", "System", ".", "out", ".println(\"请输入你的值：\");\n        ", "while", "(sc.hasNextLine()) {//判断当前是否有输入，有输入则执行循环\n            ", "if", "(sc.hasNextInt()) {        //判断输入的是否是", "int", "型数据        \n                c1 = sc.nextLine();\n                ", "System", ".", "out", ".println(\"这是整数\"+c1);\n                ", "System", ".", "out", ".println(\"继续请输入你的值：\");\n                ", "continue", ";\n            }", "else", " {\n                c1 = sc.nextLine();\n                ", "System", ".", "out", ".println(\"这是字符串\"+c1);\n                ", "System", ".", "out", ".println(\"继续请输入你的值：\");\n                ", "continue", ";\n            }\n        }\n    }\n}\n\n", "\n", "\n", "运行结果", "\n", "请输入你的值：\n", "1234", "s\n这是字符串", "1234", "s\n继续请输入你的值：\n", "123", "  ", "as", "\n这是整数", "123", "  ", "as", "\n继续请输入你的值：\nasd123\n这是字符串asd123\n继续请输入你的值：\nasdq    ", "123", "\n这是字符串asdq    ", "123", "\n继续请输入你的值：\n", "\n", "是因为空格导致不能正常判断吗？，源码也看不懂，可以指导一下吗，谢谢"]], "Tag": "程序设计"}
{"Answer": "TreeSet的源码\r\n\r\npublic NavigableSet&lt;E&gt; subSet(E fromElement, boolean fromInclusive,\r\n                                  E toElement,   boolean toInclusive) {\r\n\treturn new TreeSet&lt;E&gt;(m.subMap(fromElement, fromInclusive,\r\n                                       toElement,   toInclusive));\r\n    }\r\n\r\n\r\nsubSet方法返回的是同一个对象的引用，只是元素索引位置不一样。\r\n所以在原Set中增加元素，会直接影响到subSet中获取的值。", "Konwledge_Point": "字符型", "Question": ["关于TreeSet的实现", ["  TreeSet<String> s = new TreeSet<String>();      //定义并初始化一个String型TreeSet 变量名S\n  TreeSet<String>subs = new TreeSet<String>();    //又定义并初始化了一个TreeSet 变量名subs\n  s.add(\"a\");        //s中添加字符串\"a\"\n  s.add(\"b\");        //s中添加字符串\"b\"\n  s.add(\"d\");        //s中添加字符串\"d\"\n  s.add(\"e\");        //s中添加字符串\"e\"\n\n  // 目前s中的元素为a,b,d,e   \n  subs = (TreeSet)s.subSet(\"b\",true,\"d\",true);    //取从b开始到d结束的子集合,包括b,也包括d\n  System.out.println(subs + \" \");－－－－－－－－－－－－－－－－－－－－－－1\n  s.add(\"9\");            //s中添加字符串\"9\"\n  s.add(\"c2\");         //s中添加字符串\"c2\",目前s中元素为9,a,b,c2,d,e\n  s.add(\"c3\");\n  TreeSet<String> sub2 = new TreeSet<String>();       //再声明并初始化一个TreeSet\n  sub2 = (TreeSet)s.tailSet(\"c2\",true);           //取c2开始到结束的子集合,包括c2\n  System.out.println(subs + \" \" + sub2);//打印一下  －－－－－－－－－－－－2\n", "\n\n", "以上代码为什么在1处输出是[b,d] ,在2处输出[b,c2,c3,d]", "\n\n", "TreeSet内部是怎么实现的呢？"]], "Tag": "程序设计"}
{"Answer": "都一样。这就好比你非要问一辆车涂什么颜色的油漆能让车跑的更快一些。等这个完事真正查询表了，你再考虑效率的问题吧，那个才是真正影响系统性能的。", "Konwledge_Point": "字符型", "Question": ["时间做比较的问题，牛人进来说说", ["前台会传到后台一个时间是字符串类型的yyyymmdd，让这个时间和当前时间做比较，两个日子在5个月以内查正式库，以外查历史库，后台可以得到当前时间，问题是把日期都转成date类型做比较效率快，还是将日期分开截取，转成int型（int year ，int month，int day），先比年，后比月，再比日，\n", "\n\n", "哪个效率会更快呢，前提不是比两个日子大小，是判断出两个日子相差几个月。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;其实你把它当一个字符串数组理解就可以了&amp;#xff0c;整个代码就是这个逻辑实现的。&lt;br /&gt;这就是个冒泡排序&amp;#xff0c;从小到大排序&lt;br /&gt;用strcmp比较相邻两个字符串的大小&amp;#xff0c;如果前一个字符串更大&amp;#xff0c;那么用strcpy进行交换&amp;#xff0c;p是临时交换字符串&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["【C语言】这个函数应该怎么理解？", ["自己对于二维型字符数组理解不够透彻", "\n", "\n", "void", " ", "paixu", "(", "char", " s[", "5", "][", "6", "])", "\n", "{\n    ", "int", " i,j;\n    ", "char", " *p,temp[", "10", "];\n    p=temp;\n    ", "for", "(i=", "0", ";i<", "9", ";i++)\n        ", "for", " ( j = ", "0", "; j<", "9", "-i; i++)\n        ", "if", "(", "strcmp", "(s[j],s[j+", "1", "])>", "0", ")\n        {\n            ", "strcpy", "(p,s[j]);\n            ", "strcpy", "(s[j],s[+j+i]);\n            ", "strcpy", "(s[j+i],p);\n        }\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; sprintf 就是把输出的内容写入到一个字符串中啊&lt;/p&gt;\n&lt;p&gt;sprintf 和printf 功能类似就是把输出的内容写入到一个字符串中&amp;#xff0c;而不是输出到屏幕上&amp;#xff08;标准输出设备&amp;#xff09;。&lt;br /&gt;sprintf 的第一次参数是字符数组的首地址&amp;#xff0c;会把输出的内容写入到这个地址&amp;#xff0c;与  scanf(&amp;#34;%s&amp;#34;, &amp;amp;xxx);是类似的&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢!&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C语言中sprintf问题，实在想不通，求解释一下", ["我在写嵌入式代码的时候发现个问题，sprintf函数为什么可以给char型的变量赋值字符串啊？而且printf还能输出来", "\n", "scan_files", "(", "char", "* path)\n{\n    path[", "2", "] = ", "\"qwe\"", ";                            ", "//这样就报错", "\n    ", "sprintf", "(&path[", "2", "], ", "\"/%s\"", ", ", "\"qwe\"", ");     ", "//这样就可以将qwe写进去", "\n    ", "printf", "(", "\"%s\\n\"", ", &path[", "2", "]);\n}\n\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "char", " USERPath[", "4", "];\n    ", "scan_files", "(USERPath);\n    ", "system", "(", "\"pause\"", ");\n}\n"]], "Tag": "程序设计"}
{"Answer": ":o  :o  :o \r\ncsdn砖家指导：\r\nhttp://blog.csdn.net/xqf222/archive/2009/04/22/4101342.aspx", "Konwledge_Point": "字符型", "Question": ["如何这样使用iBatis", ["表A 中有两个字段 id bids，id 是其自身的id 而bids是一个字符串型值，形如[1,2,3,4,5]其中的数字是表B的id值", "\n\n", "现在有一个类AA 对应于 表A ，AA中的一个List变量b对应于表B中的N条数据", "\n\n", "我现在想写一个查询，parameterClass 是 AA 的id", "\n然后生成一个AA的对象。", "\n也就是说这一个查询要完成", "\n1. 查询A表，取出相应属性并放在AA的对象中", "\n2. 根据刚才查询结果的bids字段 从表B中取出所有记录，并且存储到 AA对象的b变量中", "\n如果一步一步做，我会，", "\n但是有没有办法能够通过一个查询或者存储过程之类的完成呢。望有人能指教。", "\n有点拗口，而且没分了。。。不知道有好心人能帮忙回答一下不 。。。"]], "Tag": "程序设计"}
{"Answer": "Apache MINA是基于Java NIO架构的，与普通的Blocking IO的区别在于Blocking IO是阻塞式的，就像一个队列，得按先后顺序来，而NIO是非阻塞式的，这样提高了响应效率，至于LZ的问题\r\n[quote]客户端1正在输入 10K数据的同时 其他客户端能否传输数据[/quote]\r\n基于NIO的服务器是没有问题的。\r\n\r\n如果是基于Blocking IO的服务器，一般在服务器端有一个线程池，一个线程处理一个客户端的请求（在线程池够用的话），每个客户端都不会相互影响。", "Konwledge_Point": "字符型", "Question": ["两个java通讯程序问题", ["1、假设有一个客户端通过Socket连接上某个服务器，该Socket的输出流被多个线程同时共享，并同时输出若干数据，每个线程各自输出5个相同的字符串，每个线程输出的内容不同，例如线程1输出“AAAAA”，线程2输出“BBBBB”，线程3输出“CCCCC”。", "\n\n", "服务器端接收客户端的请求数据并打印，请问服务器端接收到的数据是否都是 AAAAA，BBBBB，CCCCC这样的，还是ABCAA这样的混乱型的 ", "\n2、如果一个mina做的服务端 连接了多个客户端 客户端1正在输入 10K数据的同时 其他客户端能否传输数据"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;可以做&amp;#xff0c;前缀树算法&amp;#xff0c;很好实现的&amp;#xff0c;需要源码的话要稍等一下~&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["看看下面的问题怎么用java代码实现，有什么好的办法么", ["\n\n```java\n\n", "class", " ", "AreaResource", " ", "{\n\n", "/**\n\n*  area表示的是地区全路径,最多可能有5级,用分隔符连接,分隔符是 spliter,\n\n*  例如分隔符是逗号 则area型如  中国,重庆,江津    中国,重庆,合川  中国,重庆,梁平\n\n*  count表示数量\n\n*/", "\n\n  ", "String", " area;\n\n  ", "String", " spliter;\n\n  long count;\n\n}\n\n现在需要把  List<AreaResource> 进行字符串转换，供下游处理，需要做到同级能合并\n\n比如 area为中国,四川,成都 有", "15", "个门店，   中国,重庆,合川 有", "12", "个门店 中国,重庆,涪陵有", "33", "个门店\n\nspliter为逗号 ", "\",\"", " 最终转化成JSON的形式，并且同级的地域需要被合并，最终生成的JSON字符串如下所示\n\n{", "\"中国\"", ":", "{", "\"四川\"", ":", "{", "\"成都\"", ":", "15", "]},", "\"重庆\"", ":", "{", "\"合川 \"", ":", "12", ",", "\"涪陵\"", ":", "33", "}}}\n\n", "/*\n\n请完善下面的类\n\n*/", "\n\n", "public", " ", "interface", " ", "ProvinceService", " ", "{\n\n ", "String", " getFormattedJSONByResource(List<AreaResource> areas);\n\n}\n```java\n\n\n", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这个警告的意思是&amp;#xff1a;从指针往int类型转换&amp;#xff0c;转换过程中值会发生截断。也就是两个值的数据范围不一样导致的。&lt;br /&gt;在64位系统中&amp;#xff0c;地址一般是uint_64类型的&amp;#xff0c;也就是unsigned long long &amp;#xff0c;所以&amp;#xff0c;你的代码最后4行需要改成下面的&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; num2 &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt;)(str);      &lt;span class=\"hljs-comment\"&gt;//以十进制形式&amp;#xff0c;输出str[0]的地址&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;num2 &amp;#61; %lld\\n&amp;#34;&lt;/span&gt;, num2);\n&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; num3 &amp;#61; (&lt;span class=\"hljs-keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; )(str &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;//以十进制形式&amp;#xff0c;输出str[2]的地址&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;num3 &amp;#61; %lld\\n&amp;#34;&lt;/span&gt;, num3);\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["C语言 十进制形式输出数组的地址出现警告提示信息", ["大家好，我目前自学了三个月的C语言入门，想问一个比较基础的问题，我已经尝试搜索是否有同样出现过的问题，但并没有找到我能理解的答案。我在学习C语言的字符数组时，想以十进制形式输出数组的首地址，我定义了一个 long 型变量来存储这个地址，但是在运行后得到的是如下的提示信息，我看不懂这个是什么意思，想请问有没有人能解答一下？谢谢！我使用的是 windows 64 系统下的 visual studio code 2022 来运行这段代码的，前面的代码我都已经理解了，但是唯独最后的两个输出指令反馈回来的信息我还不能理解。", "\n", "#include <stdio.h>", "\n", "int", " main(){\n    char str[", "30", "] = ", "\"I love_Stella, Always\"", ";\n    char *s1 = str;             ", "//", "字符串指针，指向 str[", "0", "]，可以直接输出整个字符串\n    ", "printf", "(", "\"\\n  s1 = %s\\n\"", ", s1);\n    char *s2 = str+", "2", ";           ", "//", "字符串指针，指向 str[", "2", "]，只能输出从第", "2", "个元素开始的整个字符串\n    ", "printf", "(", "\"  s2 = %s\\n\"", ", s1);\n    char c1 = str[", "4", "];           ", "//", "取单个字符，str[", "4", "] = ", "'v'", "\n    ", "printf", "(", "\"  c1 = %c\\n\"", ", c1);\n    char c2 = *str;             ", "//", "取单个字符，*str = str[", "0", "] = ", "'I'", "\n    ", "printf", "(", "\"  c2 = %c\\n\"", ", c2);\n    char c3 = *(str+", "4", ");         ", "//", "取单个字符，*(str+", "4", ") = str[", "4", "] = ", "'v'", "\n    ", "printf", "(", "\"  c3 = %c\\n\"", ", c3);\n    char c4 = *str+", "2", ";           ", "//", "取单个字符后，对照ASCII的值+", "2", "，", "'I'", "+", "2", " = ", "'k'", "\n    ", "printf", "(", "\"  c4 = %c\\n\"", ", c4);\n    char c5 = (str+", "1", ")[", "5", "];       ", "//", "取单个字符，(str+", "1", ")[", "5", "] = str[", "6", "] = ", "'_'", "\n    ", "printf", "(", "\"  c5 = %c\\n\"", ", c5);\n    ", "int", " num1 = *str+", "2", ";          ", "//", "取单个字符后，对照ASCII的值+", "2", "，", "'I'", "=", "73", "，", "73", "+", "2", " = ", "75", "\n    ", "printf", "(", "\"num1 = %d\\n\"", ", num1);\n    ", "printf", "(", "\" str = %#X\\n\"", ", str);", "//", "以十六进制形式，输出str[", "0", "]的地址\n    long num2 = (long)str;      ", "//", "以十进制形式，输出str[", "0", "]的地址\n    ", "printf", "(", "\"num2 = %ld\\n\"", ", num2);\n    long num3 = (long)(str+", "2", ");  ", "//", "以十进制形式，输出str[", "2", "]的地址\n    ", "printf", "(", "\"num3 = %ld\\n\"", ", num3);\n    ", "return", " ", "0", ";\n}\n", "\n", "PS C:\\Users\\Frede> cd \"c:\\Users\\Frede\\Desktop\\\" ; ", "if", " ($?) { gcc Draft.c -o Draft } ; ", "if", " ($?) { .\\Draft }\nDraft.c: ", "In", " ", "function", " ", "'main'", ":\nDraft.c:", "21", ":", "17", ": ", "warning", ": ", "cast", " ", "from", " pointer ", "to", " ", "integer", " ", "of", " different size [-Wpointer-", "to", "-", "int", "-", "cast", "]\n   ", "21", " |     long num2 = (long)str;      //浠ュtr[", "0", "]?                 ^\nDraft.c:", "23", ":", "17", ": ", "warning", ": ", "cast", " ", "from", " pointer ", "to", " ", "integer", " ", "of", " different size [-Wpointer-", "to", "-", "int", "-", "cast", "]\n   ", "23", " |     long num3 = (long)(str+", "2", ");  //浠ュtr[", "2", "]?                 ^\n\n  s1 = I love_Stella, ", "Always", "\n  s2 = I love_Stella, ", "Always", "\n  c1 = v\n  c2 = I\n  c3 = v\n  c4 = K\n  c5 = _\nnum1 = ", "75", "\n str = ", "0XF29FFA70", "\nnum2 = ", "-224396688", "\nnum3 = ", "-224396686", "\nPS C:\\Users\\Frede\\Desktop>\n", "\n", "以上就是运行代码后得到的结果。", "我已经确认过最后两行以十进制形式输出的地址和十六进制形式输出的地址相同，只是不清楚 “warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]” 这一行信息是在告诉我什么。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/06027585305616.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n\n\nn&amp;#61;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;f&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;):\n    a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(x):\n        a&amp;#43;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(i)**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;numsChain&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;):\n    t&amp;#61;[n]\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; t[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]!&amp;#61;&lt;span class=\"hljs-number\"&gt;89&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;and&lt;/span&gt;  t[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]!&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        t.append(f(t[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]))\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(t)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(t[i],end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;gt;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(t[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\nnumsChain(n)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你的采纳对我很有帮助&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python平方和数字链", ["将一个正整数所有数字的平方相加可得到一个新的数，不断重复这个过程直到新的数已 经在之前出现过，这样构成了一条数字链。 例如：", "\n", "1->1", "\n", "89->145->42->20->4->16->37->58->89", "\n", "理论上证明了从任一正整数开始，平方和数字链最终都会到达1或89，因此寻找某正整数的平方和数字链到1或89即可。", "\n", "自定义函数numsChain(num)，寻找从num到1或89的平方和数字链中的所有数并将结果返回。主模块中从键盘输入一个数字字符串（正整数），调用numsChain()函数寻找并输出完整的平方和数字链。", "\n", "输入", "一个数值型数据", "输出", "数字链", "样例输入", "23", "样例输出", "23->13->10->1"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;双重循环筛呗&amp;#xff0c;你要用c语言那只能用链表或者数组&amp;#xff0c;只能遍历比较&amp;#xff0c;没有什么简单的办法&lt;br /&gt;或者你先把数据丢进数据库里&amp;#xff0c;然后去重&amp;#xff0c;group by取最大最小&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["对一组存放在表格中的数据（约2w）进行操作，提取出想要的数据", ["有没有朋友提供一下优秀解决思路？", "表格为20000行*6列", "每列数据相互独立，且存在重复值，其中1,2,3,4列为字符串类型，5列为双精度浮点型，6列为整形。", "我们要做这样的操作，①将1-6列完全相同的行筛选出来，仅保留一行，多余行删除", "②对①操作结果进行操作，对只有1-4列相同的行，比较第5列，找出最小值，比较第6列，找出最大值，保留这两行，如果6列最大值和5列最小值一致，仅保留一行。", "注意：以上所有数据要求保留原表数据，将计算结果输出到一个新的表格中。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;已解决。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["有关JAVA的IO和反射的问题，求大佬帮下忙", ["现有一个员工类，定义如下：", "\n\n", "员工工号   整型数字", "\n\n", "员工姓名   字符串", "\n\n", "员工生日   日期类型", "\n\n", "员工年龄   整型数字", "\n\n", "员工性别   布尔型数字", "\n\n", "员工籍贯   字符串", "\n\n", "1.请随机定义10个员工，并设定相应的信息", "\n\n", "然后将该10位员工信息写入一个csv文件，注意字符编码，不使用额外的三方工具包和依赖。", "\n\n", "2.将1中生产的staff.dat文件当成数据库文件，当输入一个员工工号的时候，从该文件读取并查找到员工的信息，并以类的方式展现。", "\n\n", "3.给定任意一个pojo类，创建该类的实例对象并赋值，请通过反射的方式获取到对象的所有属性，并保存到csv文件中，csv文件第一行是列名，用该类的属性名作为列名，csv文件名就是类名", "\n\n", "读取csv文件的文件名和内容，并通过反射的方式来创建对应类的实例"]], "Tag": "程序设计"}
{"Answer": "好吧我知道了....拼接字符串吧...\r\n\r\nselect contact((t % 3600000) / 60000,':',(t % 60000 ) / 1000) 这样来查", "Konwledge_Point": "字符型", "Question": ["求助:关于数据库中如何存储一段视频时长的问题?", ["目前要新建一个存储视频的数据表,其中有一个字段要存储视频的时长,但拿不准应该用什么方式来存储这个时长.", "\n\n", "大概有两种,一个是存储XX:XX这样的几分几秒的字符串形式,优点是读取时能直接返回前端所需要格式的数据", "\n\n", "另一种就是存储毫秒数.", "\n\n", "目前我做的是以毫秒数,也就是bigint来存储,对应的Java实体类是Long型.", "\n毫秒数的优点是,在存储播放记录时也可以存储毫秒数,方便记录用户观看视频的历史进度.", "\n\n", "缺点是每次读数据库都要遍历设置一遍分秒格式的视频时长.", "\n\n", "查了一下mysql里面将毫秒转时间的基本都是日期时间这种,而不是我这种时长.....", "\n\n", "所以 想请问一下哪种方法更好.以及能否实现使用SQL查询时就能将毫秒转成分秒?"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;参考&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;# 创建样本数据\nage &amp;lt;- c(&lt;span class=\"hljs-string\"&gt;&amp;#34;25岁&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;36岁&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;43岁&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;55岁&amp;#34;&lt;/span&gt;)\n\n# 将年龄字符型向量转换为数值型\nage &amp;lt;- &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt;.numeric(gsub(&lt;span class=\"hljs-string\"&gt;&amp;#34;岁&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;, age))\n\n# 定义切割点\nbreaks &amp;lt;- c(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, Inf)\n\n# 将数值型年龄划分到对应的区间\nage.factor &amp;lt;- cut(age, breaks, labels &amp;#61; c(&lt;span class=\"hljs-string\"&gt;&amp;#34;20-29岁&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;30-39岁&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;40-49岁&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;gt;&amp;#61;50岁&amp;#34;&lt;/span&gt;))\n\n# 将因子型转换为数值型编码&amp;#xff0c;&lt;span class=\"hljs-number\"&gt;1234&lt;/span&gt;对应四个区间\nage.&lt;span class=\"hljs-keyword\"&gt;code&lt;/span&gt; &amp;lt;- &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt;.numeric(age.factor)\n\n# 查看结果\nprint(age.factor)\nprint(age.&lt;span class=\"hljs-keyword\"&gt;code&lt;/span&gt;)\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["怎么用R把年龄转为因子型20岁-29岁,30岁-39岁,40岁-49岁", ["有一个患者体检表，变量年龄是字符型向量。比如\"30岁\"，怎么用R把年龄转为因子型20岁-29岁,30岁-39岁,40岁-49岁，>=50岁并分别定义为1234"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;1、一般这种都是有查询条件就添加该列的条件&amp;#xff0c;没有就不添加&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-JavaScript\"&gt;&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;AssetName&lt;/span&gt;Q &amp;#61; req.&lt;span class=\"hljs-property\"&gt;body&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;AssetNameQ&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;undefined&lt;/span&gt; ? &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt; : ( &lt;span class=\"hljs-string\"&gt;&amp;#39; AND AssetName like &amp;#39;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; &amp;#43; req.&lt;span class=\"hljs-property\"&gt;body&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;AssetNameQ&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt; )\n&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MeasureType&lt;/span&gt;Q &amp;#61; req.&lt;span class=\"hljs-property\"&gt;body&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;MeasureTypeQ&lt;/span&gt; &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;undefined&lt;/span&gt; ? &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt; : ( &lt;span class=\"hljs-string\"&gt;&amp;#39; AND MeasureType &amp;#61; &amp;#39;&lt;/span&gt; &amp;#43; req.&lt;span class=\"hljs-property\"&gt;body&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;MeasureTypeQ&lt;/span&gt; )\n&lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;MeasureType&lt;/span&gt;Q, &lt;span class=\"hljs-keyword\"&gt;typeof&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MeasureType&lt;/span&gt;Q)\nsql.&lt;span class=\"hljs-property\"&gt;query&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#96;select *\n            from TB_Asset\n           where 1 &amp;#61; 1 &amp;#39; &amp;#43; &lt;span class=\"hljs-subst\"&gt;${AssetNameQ}&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-subst\"&gt;${MeasureTypeQ}&lt;/span&gt;\n           order by OperationTime desc&amp;#96;&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;then&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;result&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt; {\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;成功查询辣&amp;#39;&lt;/span&gt;)\n    res.&lt;span class=\"hljs-title function_\"&gt;send&lt;/span&gt;(result)\n}).&lt;span class=\"hljs-title function_\"&gt;catch&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;err&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt; &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;失败啦&amp;#39;&lt;/span&gt;, err))\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["nodejs中写sql语句如何处理参数缺省情况？", ["问题遇到的现象和发生背景", "\n", "用nodejs做后台，前端传参来作条件查询。就像这样", "\n", "let", " ", "AssetName", "Q = req.", "body", ".", "AssetNameQ", " === ", "undefined", " ? ", "''", " : req.", "body", ".", "AssetNameQ", "\n        ", "let", " ", "MeasureType", "Q = req.", "body", ".", "MeasureTypeQ", " === ", "undefined", " ? ", "'0 or 1=1'", " : req.", "body", ".", "MeasureTypeQ", "\n        ", "console", ".", "log", "(", "MeasureType", "Q, ", "typeof", " ", "MeasureType", "Q)\n        sql.", "query", "`select *\n                  from TB_Asset\n                  where AssetName like '%' + ", "${AssetNameQ}", " + '%'\n                    and (MeasureType = ", "${MeasureTypeQ}", ")\n                  order by OperationTime desc`", ".", "then", "(", "result", " =>", " {\n            ", "console", ".", "log", "(", "'成功查询辣'", ")\n            res.", "send", "(result)\n        }).", "catch", "(", "err", " =>", " ", "console", ".", "log", "(", "'失败啦'", ", err))\n", "\n", "报错为", "\n", "\n", "\"Conversion failed when converting the nvarchar value '0 or 1=1' to data type tinyint.\"", "\n", "\n", "我想要的是，譬如前端这里查询两个条件，只填了其中一个条件a时，另一个b为空（可以为“”空字符串，也可以为undefined，后端判断下就行）查询语句要如何将条件b给忽略掉呢？因为这里是用的字符串拼接，所以似乎无论如何都只能自动变为nvchar类型，然后转换数值型失败，查询失败。", "\n", "请问该怎么处理呢？"]], "Tag": "程序设计"}
{"Answer": "方法一：等比数列求和公式\r\n方法二：你指的：我想用浮点数做这个题目，但是又不能求余数，进行正常if判断操作\r\n解决：\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n#include&lt;string.h&gt;\r\nint main()\r\n{\r\n\tint num;\r\n\tfloat sum=0;\r\n\tprintf(\"请输入整数！\");\r\n\tscanf(\"%d\",&amp;num);\r\n\tif(num%2==0)\r\n\t{\r\n\t\t//不用加判断，直接index+=2就可以了\r\n\t\tfor(float index=2;index&lt;=num;index+=2)\r\n\t\t{\t\r\n\t\t\tsum+=1/(index);\r\n\t\t}\r\n\t}\r\n\tprintf(\"%f\",sum);\t\r\n}\r\n```", "Konwledge_Point": "字符型", "Question": ["这是一个关于C语言数据类型的问题", ["我想编写一个函数，输入n为偶数时，调用函数求1/2+1/4+...+1/n,", "\n\n", "然后我写了一个代码", "\n\n", "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\nint main()\n{\nfloat *num;\nfloat num1;\nfloat sum=0;\nprintf(\"请输入整数！\");\nscanf(\"%f\",&num1);\nnum=&num1;\nif(*num%2==0)\n{for(float index=1;index<=*num;index++)\n{if(index%2==0||index==1)\nsum+=1/(index);\n}\n}\nprintf(\"%f\",sum);\n    system(\"pause\");\nreturn 0;} \n", "\n\n", "发现一个很严重的问题。我想用整数型做这个题目，但是这么做，不能存小数点后的数，我想用浮点数做这个题目，但是又不能求余数，进行正常if判断操作，（我的代码就是这个问题）我想用字符来做这个题，但是字符又不好求余数，进行判断，然后进行接下来的操作。。。。", "\n做这种题，有没有万能药匙啊，我思维混乱。。。"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;while True:\n    n &amp;#61; int(input(&amp;#34;您想输入学生信息个数&amp;#xff1a;&amp;#34;))\n    if n &amp;gt; 0:\n        break\n    else:\n        print(&amp;#34;学生个数必须为正整数&amp;#xff0c;请重新输入&amp;#xff01;&amp;#34;)\n\nstu_list &amp;#61; []\n\nfor i in range(n):\n    print(&amp;#34;请输入第%d个学生信息&amp;#xff1a;&amp;#34; % (i&amp;#43;1))\n    stu_name &amp;#61; input(&amp;#34;请输入学生姓名&amp;#xff1a;&amp;#34;)\n    engl_scor &amp;#61; eval(input(&amp;#34;请输入%s的英语成绩&amp;#xff1a;&amp;#34; % stu_name))\n    python_scor &amp;#61; eval(input(&amp;#34;请输入%s的python成绩&amp;#xff1a;&amp;#34;% stu_name))\n    math_scor &amp;#61; eval(input(&amp;#34;请输入%s的数学成绩&amp;#xff1a;&amp;#34;% stu_name))\n    stu &amp;#61; {&amp;#34;name&amp;#34;:stu_name,&amp;#34;english&amp;#34;:engl_scor,&amp;#34;python&amp;#34;:python_scor,&amp;#34;math&amp;#34;:math_scor}\n    scor_avg &amp;#61; (stu[&amp;#34;english&amp;#34;]&amp;#43;stu[&amp;#34;python&amp;#34;]&amp;#43;stu[&amp;#34;math&amp;#34;])/3\n    stu[&amp;#34;平均成绩&amp;#34;] &amp;#61; round(scor_avg, 1)\n    stu_list.append(stu)\n\nprint(&amp;#34;录入学生信息如下&amp;#xff1a;&amp;#34;)\n\nmat &amp;#61; &amp;#34;{:^15}\\t{:^15}\\t{:^15}\\t{:^15}\\t{:^15}&amp;#34;               # 输出格式\nprint(mat.format(&amp;#34;姓名&amp;#34;, &amp;#34;英语成绩&amp;#34;, &amp;#34;python成绩&amp;#34;, &amp;#34;数学成绩&amp;#34;, &amp;#34;平均成绩&amp;#34;))\nfor student in stu_list:\n    print(mat.format(student[&amp;#34;name&amp;#34;], student[&amp;#34;english&amp;#34;], student[&amp;#34;python&amp;#34;], student[&amp;#34;math&amp;#34;], student[&amp;#34;平均成绩&amp;#34;]))\n\nscor_sorted &amp;#61; sorted(stu_list, key &amp;#61; lambda i: i[&amp;#39;平均成绩&amp;#39;], reverse &amp;#61; True)\nmat1 &amp;#61; &amp;#34;{:^15}\\t{:^15}&amp;#34;                            # 输出格式\nprint(&amp;#34;按平均成绩排序如下&amp;#xff1a;&amp;#34;)\nprint(mat1.format(&amp;#34;姓名&amp;#34;, &amp;#34;平均成绩&amp;#34;))\nfor j in scor_sorted:\n    print(mat1.format(j[&amp;#34;name&amp;#34;], j[&amp;#34;平均成绩&amp;#34;]))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["有人会python程序设计吗？回帖有奖", ["已知存储学生成绩信息的字典结构如下：      stu = {\"name\":\"杨一\",\"english\":85,\"python\":90,\"math\":92}。编写要求：    (1)请使用上述结构输入n个学生的name,及 english,python,math三门课程的成绩并存放于列表中。    (2)n为由用户输入大于0的整数,name为字符串类型，english、python、math位数值型类型    (3)计算每位同学的平均成绩，同时在字典列表中添加平均成绩（保留小数1位）的信息,输出所有学生的成绩信息    (4)按平均分从高到低输出学生姓名和平均分 "]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;n &amp;#61; int(input(&amp;#34;输入学生数量:&amp;#34;))\nlst &amp;#61; []\nfor i in range(n):\n    name &amp;#61; input(f&amp;#34;第{i&amp;#43;1}个学生的name:&amp;#34;)\n    english &amp;#61; float(input(f&amp;#34;第{i&amp;#43;1}个学生的english课程的成绩:&amp;#34;))\n    python &amp;#61; float(input(f&amp;#34;第{i&amp;#43;1}个学生的python课程的成绩:&amp;#34;))\n    math &amp;#61; float(input(f&amp;#34;第{i&amp;#43;1}个学生的math课程的成绩:&amp;#34;))\n    stu &amp;#61; {&amp;#34;name&amp;#34;:name,&amp;#34;english&amp;#34;:english,&amp;#34;python&amp;#34;:python,&amp;#34;math&amp;#34;:math}\n    stu[&amp;#34;avg&amp;#34;] &amp;#61; round((english&amp;#43;python&amp;#43;math)/3,1)\n    lst.append(stu)\nprint(*lst,sep&amp;#61;&amp;#39;\\n&amp;#39;)\n\nlst.sort(key&amp;#61;lambda x: x[&amp;#39;avg&amp;#39;], reverse&amp;#61;True)\nfor x in lst:\n    print(&amp;#39;姓名:&amp;#39;,x[&amp;#39;name&amp;#39;],&amp;#39;平均分:&amp;#39;,x[&amp;#39;avg&amp;#39;])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["Python语言设计", ["已知存储学生成绩信息的字典结构如下： stu = {\"name\":\"杨一\",\"english\":85,\"python\":90,\"math\":92}。编写要求： (1)请使用上述结构输入n个学生的name,及 english,python,math三门课程的成绩并存放于列表中。 (2)n为由用户输入大于0的整数,name为字符串类型，english、python、math位数值型类型 (3)计算每位同学的平均成绩，同时在字典列表中添加平均成绩（保留小数1位）的信息,输出所有学生的成绩信息 (4)按平均分从高到低输出学生姓名和平均分"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你为什么写了个4重循环&lt;br /&gt;就算你遍历每种TF组合&amp;#xff0c;然后去跟yn匹配&amp;#xff0c;也用不上4重循环呀&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["C++问题——会说话的机器人", ["总时间限制: 20000ms 单个测试点时间限制: 1000ms 内存限制: 262144kB", "描述", "　　有 N 个升级了 AI 的机器人，编号为 1,2,...,N，它们围成一圈，每个机器人都有两个邻居。准确地讲，编号为 i（2<= i <=N-1）的机器人的邻居的编号为 i-1 和 i+1，编号为 1 的机器人的邻居的编号为 2 和 N，编号为 N 的机器人的邻居的编号为 1 和 N-1。", "　　这 N 个机器人有两种型号，T 型号的机器人永远说真话，F 型号的机器人永远说假话。按一下机器人头顶的按钮，机器人会说一句话，意思是它的两个邻居是否是同一种型号。准确地讲，如果 T 型机器人的两个邻居都是 T 型或者都是 F 型，那么机器人会说 y，否则会说 n。如果 F 型机器人的两个邻居都是 T 型或者都是 F 型，那么机器人会说 n，否则会说 y。", "　　你分不清每个机器人的型号，所以按下了每个机器人头顶的按钮，让每个机器人都说了话，其中第 i 个机器人说的话是 si。现在你可以根据这些信息来判断机器人的型号。", "输入", "第一行一个整数 ，表示机器人的数量。", "第二行一个长度为 N 的字符串 s1,s2,...sN，si 表示编号为 i 的机器人说的话。", "输出", "如果至少存在一个方案能够满足条件，那么输出一个字符串表示这种方案。如果有多个方案，任意输出一个方案。如果没有任何一个方案可以满足条件，输出 -1。", "一个满足条件的方案是指，确定每个机器人的型号后，每一个机器人说的话都满足这个型号的要求。即 T 型机器人说真话，F 型机器人说假话。", "一个方案的输出字符串 T=t1,t2,...,tN 需要满足：", "1、T 的长度为 N，只包含字母 T 或者 F", "2、如果 ti='T'，表示第 i 个机器人的型号是 T；如果 ti='F'，表示第 i 个机器人的型号是 F。", "\n", "\n", "数据范围:", "30% 的数据，N=6", "100% 的数据，3<= N <=100", "\n", "我使用了一种枚举的方法，只有70分，求帮忙查查错！", "\n", "#include<iostream>\nusing namespace std;\nint n,l=", "1", ",g,h;\nbool flag=", "0", ";\nint main(){\n    cin>>n;\n    char a[n];\n    bool b[n];\n    for(int i=", "0", ";i<n;i++)cin>>a[i];\n    for(int i=", "1", ";i>=", "0", ";i--){\n        for(int j=", "1", ";j>=", "0", ";j--){\n            b[", "0", "]=i;\n            b[", "1", "]=j;\n            l=", "1", ";\n            while(l<=n", "-1", "){\n                g=l", "-1", ";\n                h=l+", "1", ";\n                if(b[l]==", "0", "&&a[l]==", "'y'", "&&b[g]==", "0", ")b[h]=", "1", ";\n                if(b[l]==", "0", "&&a[l]==", "'n'", "&&b[g]==", "0", ")b[h]=", "0", ";\n                if(b[l]==", "0", "&&a[l]==", "'y'", "&&b[g]==", "1", ")b[h]=", "0", ";\n                if(b[l]==", "0", "&&a[l]==", "'n'", "&&b[g]==", "1", ")b[h]=", "1", ";\n                if(b[l]==", "1", "&&a[l]==", "'y'", "&&b[g]==", "0", ")b[h]=", "0", ";\n                if(b[l]==", "1", "&&a[l]==", "'n'", "&&b[g]==", "0", ")b[h]=", "1", ";\n                if(b[l]==", "1", "&&a[l]==", "'y'", "&&b[g]==", "1", ")b[h]=", "1", ";\n                if(b[l]==", "1", "&&a[l]==", "'n'", "&&b[g]==", "1", ")b[h]=", "0", ";\n                l++;\n            }\n            if(b[n", "-1", "]==", "1", "&&a[n", "-1", "]==", "'n'", "&&b[n", "-2", "]!=b[", "0", "])flag=", "1", ";\n            if(b[n", "-1", "]==", "1", "&&a[n", "-1", "]==", "'y'", "&&b[n", "-2", "]==b[", "0", "])flag=", "1", ";\n            if(b[n", "-1", "]==", "0", "&&a[n", "-1", "]==", "'n'", "&&b[n", "-2", "]==b[", "0", "])flag=", "1", ";\n            if(b[n", "-1", "]==", "0", "&&a[n", "-1", "]==", "'y'", "&&b[n", "-2", "]!=b[", "0", "])flag=", "1", ";\n            if(flag==", "1", "){\n                for(int s=", "0", ";s<n;s++){\n                    if(b[s]==", "1", ")cout<<", "'T'", ";\n                    else cout<<", "'F'", ";\n                }\n                return ", "0", ";\n            }\n        }\n    }\n    cout<<", "-1", ";\n    return ", "0", ";\n}\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;9999999代表的是天&lt;br /&gt;天不是10进制的&lt;br /&gt;换算成年大概是27397年&amp;#xff08;按每年365天算&amp;#xff09;&lt;br /&gt;每千年至少都有个回文日期&amp;#xff0c;所以2万多年里肯定能找到答案&amp;#xff0c;不可能找不到的&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python解决回文日期问题", ["题目描述", "2020 年春节期间，有一个特殊的日期引起了大家的注意：2020 年 2 月 2 日。因为如果将这个日期写成一个 8 位数是 20200202，恰好是一个回文数。我们称这样的日期是回文日期。", "\n", "有人表示 20200202 是 “千年一遇” 的特殊日子。对此小明很不认同，因为不到 2 年之后就是下一个回文日期：20211202 即 2021 年 12 月 2 日。", "\n", "也有人表示 20200202 并不仅仅是一个回文日期，还是一个 ABABBABA 型的回文日期。对此小明也不认同，因为大约 100 年后就能遇到下一个 ABABBABA 型的回文日期：21211212 即 2121 年 12 月 12 日。算不上 “千年一遇”，顶多算 “千年两遇”。", "\n", "给定一个 8 位数的日期，请你计算该日期之后下一个回文日期和下一个 ABABBABA 型的回文日期各是哪一天。", "\n", "输入描述", "输入包含一个八位整数 NN，表示日期。", "\n", "对于所有评测用例，10000101 \\leq N \\leq 8999123110000101≤N≤89991231，保证 NN 是一个合法日期的 8 位数表示。", "\n", "输出描述", "输出两行，每行 1 个八位数。第一行表示下一个回文日期，第二行表示下一个 ABABBABA 型的回文日期。", "\n", "输入输出样例", "示例", "输入", "\n", "20200202", "copy", "输出", "\n", "20211202", "21211212", "copy", "运行限制", "最大运行时间：1s", "最大运行内存: 256M", "\n", "然后有的答案是", "\n", "import os\nimport sys\nimport datetime\n", "# 请在此输入您的代码", "\n", "date", "=input()\n", "y", "=int(date[0:4]) # 将输入的日期转化为年月日的形式\n", "m", "=int(date[4:6])\n", "d", "=int(date[6:])\n", "dd", "=datetime.date(y,m,d) # 将y,m，d转化为日期格式\n", "flag", "=", "True", " # 输出一次回文日期\n", "for", " i ", "in", " range(9999999):\n  ", "dd", "=dd+datetime.timedelta(days=1)  # 日期增加1天\n  ", "strdd", "=str(dd).replace('-','') # 将日期转换为字符串的形式并将其中的-符号去掉\n  ", "if", " ", "strdd", "==strdd[::-1]:\n    ", "if", " flag:\n      ", "print", "(strdd)\n      ", "flag", "=", "False", "\n    ", "if", " strdd[0]==strdd[2]==strdd[-1]==strdd[-3] ", "and", " strdd[1]==strdd[3]==strdd[-2]==strdd[-4] :\n      ", "print", "(strdd)\n      break\n\n", "\n", "我不理解为什么它的循环是9999999，万一没有怎么办"]], "Tag": "程序设计"}
{"Answer": "你这个没法办到，因为宏的替换是在编译的阶段完成的，而name[1]是在运行的时候才被求值，才知道是“i”\r\n你的宏的替换根本没有机会被执行到。", "Konwledge_Point": "字符型", "Question": ["这个c语言里宏替换怎么实现啊 ", ["宏函数 参数列表是没有要求的，，，可是 传参的时候就会 很麻烦 ", "\n比如 #define def(i) i=0 非要传入 def(i)这样的才可以，，可是这样参数不就固定死了，或者非要为Int 型 具体请看我代码，怎么把一个字符串变成int型呢，比如只有“ i”又想用这个宏函数怎么写", "\n\n", " #include <string.h>\n#include <stdio.h>\n#define def(i) i=0\n#define set(x,y) x=y\n#define print(i) printf(\"%d\",i)\nstatic int def(i);\nint main ()\n{\n    char str[4][20] = {\"def i\\n\",\"set i 1\\n\",\"set i i+1\\n\",\"print i\\n\"};\n    char s[2] = \" \";\n    int j;\n    for(j=0; j<4; j++)\n    {\n        split(str[j],s);\n    }\n\n}\nvoid split(char *str ,char *s)\n{\n\n    char *token;\n    int j=0;\n    char *name[5];\n\n    token = strtok(str, s);\n    while( token != NULL )\n    {\n        // printf(\"%s\\n\", token );\n        name[j]=token;\n        //  printf(\"%s\\n\",name[i]);\n        token = strtok(NULL, s);\n        j++;\n    }\n\n    if(strcmp(name[0],\"def\")==0)\n    {\n     def(name[1]);//这里name[1]就是i 想替换成 def(i);\n\n    }\n    else if(strcmp(name[0],\"set\")==0)\n    {\n       set(name[1],name[2]);//这里name[1] name[2]也就是i\\n,i+1\\n想替换 set(i,i+1);\n    }\n    else if(strcmp(name[0],\"print\")==0)\n    {\n        print(name[1]);//这里name[1] 就是一个字符串i\\n  想替换 成 print(i);\n    }\n\n}\n\n"]], "Tag": "程序设计"}
{"Answer": "https://blog.csdn.net/coding01/article/details/81512430", "Konwledge_Point": "字符型", "Question": ["如何将spark读入的txtRDD文本转为Vector格式", ["在spark上使用textFile读入HDFS中的txt文件，该文件部分如下：", "\n\n", "    49420 1383788 0.000020 358064278.750527 0 0.000000\n    48896 1369116 0.000020 357927226.401787 0 0.000000\n    49412 1383564 0.000020 357979014.993087 0 0.000000\n    49284 1379980 0.000020 357811734.328588 0 0.000000\n    48666 1362676 0.000021 357741524.933751 0 0.000000\n    49726 1392356 0.000020 357853612.975128 0 0.000000\n    49546 1387316 0.000020 358326789.510850 0 0.000000\n    48781 1365896 0.000020 357718866.216985 0 0.000000\n    36848 1031772 0.000027 357027433.127875 0 0.000000\n    49537 1387064 0.000020 358307459.890310 0 0.000000\n    49146 1376116 0.000020 358291449.233641 0 0.000000\n    49952 1398684 0.000020 357755490.896889 0 0.000000\n", "\n\n", "为六列整型或浮点型数值，将每一行作为一个样本进行分类机器学习的特征向量。", "\n该文件准备打同一标签，但还未打标签。", "\ntextFile读入之后只是返回一个字符串RDD，请问如何将其转换为Mllib支持处理的Vector或分类算法直接支持的LabeledPoint格式呢？最好用python吧。"]], "Tag": "程序设计"}
{"Answer": "String在Java中被定义成了对象,而不是基本数据类型.\r\nJava中对象的比较要通过equals()和hashcode()方法来进行.\r\n具体的继续 LZ看下面\r\n[quote] 解析Java对象的equals()和hashCode()的使用\r\nhttp://blog.csdn.net/RichardSundusky/archive/2007/02/12/1508028.aspx[/quote]\r\n\r\n看明白了好好理解下,这个东东面试问的多.  :D", "Konwledge_Point": "字符型", "Question": ["关于变量类型", ["[code=\"java\"]<%", "\n\n", "if(answer.get(0)!=null){", "\n    int i;", "\n    double a;", "\n    String b = (String)beginnum.get(0);//先将对象转换为字符串", "\n    String l = (String)length.get(0);", "\n    String v = (String)value.get(0);", "\n    String t = (String)type.get(0);", "\n    int bb = Integer.parseInt(b);//然后将字符串转换为int", "\n    int ll = Integer.parseInt(l);", "\n    int vv = Integer.parseInt(v);", "\n    out.print(t);", "\n    out.print(\"", "您的答案是：", "\");", "\n    [color=red]if(t==\"ke\"){[/color]     for(i=bb;i<(ll+1);i++){", "\n\n", "    //out.print(\" \"+i+\". \");\n    String ansn = \"t\"+i+\"\";\n    //out.print(ansn);\n    if(session.getAttribute(\"\"+ansn+\"\")!=null){\n        out.print((String)session.getAttribute(\"\"+ansn+\"\"));\n    }\n    String insert=\"<select name='part0'>\";\n    for(a=0;a<vv+0.5;a=a+0.5){\n        //out.print(a);\n        insert=insert + \"<option value='\"+a+\"'>\"+a+\"</option>\";\n    }\n    insert= insert+\"</select>\";\n    out.print(insert);\n    out.print(\"<br>\");\n    }\n", "\n\n", "}", "\n}", "\n%>[/code]", "\n\n", "其中[color=red]if(t==\"ke\"){[/color]的值为否", "\n但我out.print(t)，输出的是ke", "\n我如果写if(t=\"ke\")，错误提示，无法将字符串赋予布朗型，请问我这个t声明的是字符串，输出的也是ke，为什么 在我这段程序中，if(t==\"ke\")得到的确是否呢", "\n[b]问题补充：[/b]", "\n兄弟你的方法是对的，但我还想知道，我出错的原因，希望你能指点下", "\n[b]问题补充：[/b]", "\n我的基础太差了，现在老让我加班，也没时间学习，天天下班到家10点才吃晚饭，过几天我准备辞职回家先把基础学好了。谢谢各位了"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;void表示main函数没有任何参数&amp;#xff0c;也可以不写void&lt;br /&gt;int main(int)在函数申明的时候可以&amp;#xff0c;但是在函数实现的时候必须写明参数名称&lt;br /&gt;int main(void) 中&amp;#xff0c;int是返回值类型&amp;#xff0c;表明main函数会返回一个整数。由于这个函数是整个程序的起点和重点&amp;#xff0c;所以它的返回值其它代码是用不上的&amp;#xff0c;有些编译器main函数没有return语句也是可以的。一般main函数返回值表示程序运行状态&amp;#xff0c;如果return 0表示正常结束&amp;#xff0c;如果异常&amp;#xff0c;会返回一个异常值&amp;#xff0c;经常在cmd窗口程序运行结束后可以看到有错误码&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["c语言中main（void）中void是啥意思，以及一些别的小问题", ["第一张图片的划线处：int main(void) void表明函数不带任何参数是什么意思？不知道这个void是干啥的，假如int main（int）会怎样呢？", "int表明main函数返回一个整数是什么意思？一般在c语言中执行main函数的时候不都是执行main函数中的语句，然后用printf输出吗，为什么要在main函数的前面加一个int，有啥作用呢？", "第三张图片的划线处：当为void时侯，表示的是被调函数里面的printf里面的数据直接输出吗？就是直接输出printf里的字符，但是不返回任何值？", "如果被调函数是int型，在主调函数中返回被调函数中的一个数据类型，比如被调函数butler中c=10，主调函数中b=butler（c）；如果在被调函数中存在printf（“you rang，sir？“），这句实际上是没啥作用的对吗？不会返回到主调函数中，程序也不报错？", "\n", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;首先,只要你get方法里面没有复杂逻辑,只是一个简单的return this.id;,是基本可以忽略差异的.但是如果是一个有类似要创建一个对象或者查找的方法,那建议可以只执行一次就执行一次.&lt;/p&gt;\n&lt;p&gt;第二,你的这个测试代码没有参考价值.如果要统计时间,就不要写输出语句,输出语句是个耗时操作,打印同一个内容两次执行时间也不一致.如果你的测试可以忽略这个时间误差就没事,但是你这个测试用例明显是不能忽略的.&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["使用相同变量是每次用get()方法效率高还是使用get后的新变量效率高?", ["获取同一个变量时,是先用get方法获取后取个变量名后使用这个变量名,还是说每次使用的时候都去调用get方法?我纠结的是效率问题以及代码的可读性和简洁性.", "\n", "以下是我自己写的测试代码,希望您可以通过代码理解我的意思和疑问:", "\n", "\n", "// 第一种get方式", "\n    Invoices invoices = ", "new", " ", "Invoices()", ";\n        invoices.set", "Id(123456789L)", ";\n        ", "System", ".", "out.println(", "\"开始时间\"", " + ", "System", ".", "current", "TimeMillis()", ");\n        ", "System", ".", "out.println(invoices.get", "Id()", ");\n        ", "System", ".", "out.println(invoices.get", "Id()", ");\n        ", "System", ".", "out.println(invoices.get", "Id()", ");\n        ", "System", ".", "out.println(", "\"结束时间\"", " + ", "System", ".", "current", "TimeMillis()", ");\n\n", "// 第二种取值后使用的方式", "\n        Invoices invoices2 = ", "new", " ", "Invoices()", ";\n        invoices2.set", "Id(123456789L)", ";\n        Long id = invoices2.get", "Id()", ";\n        ", "System", ".", "out.println(", "\"开始时间\"", " + ", "System", ".", "current", "TimeMillis()", ");\n        ", "System", ".", "out.println(id);\n        ", "System", ".", "out.println(id);\n        ", "System", ".", "out.println(id);\n        ", "System", ".", "out.println(", "\"结束时间\"", " + ", "System", ".", "current", "TimeMillis()", ");\n", "\n", "运行多次后发现第二种方式似乎消耗时间更短一点,但是差别不是很大.我的Id是Long类型,这种长数字型才稍微体现了一些性能上的差异,但是如果换成字符串且字符串较短则效率无差异.", "\n", "期望您的解答谢谢."]], "Tag": "程序设计"}
{"Answer": "在实体中新建一个属性\r\nString idList\r\n当批量提交前首先触发的操作是将所有的id以逗号的形式分割 ，\r\n后台拿到idList做分割处理，\r\n并逐个赋值给id，\r\n然后你拿到的是一组Long[]\r\n每个都是删除的id\r\n剩下的你应该都会了", "Konwledge_Point": "字符型", "Question": ["strut2 批量删除 怎么弄？求大神指点", ["我实体类的id是LONG型，当复选框选则多个的时候，就报错，删一个是没有问题的。", "\naction类", "\npublic class ResumeAction extends BaseModelAction{", "\n            .......", "\n            public String delete(){", "\n          resumeService.deleteById(model.getId());", "\n          return \"toList\";", "\n        }", "\n｝", "\naction的继承类，就是通过反射来实例化model，这样就导致model和实体一样了", "\npublic class BaseModelAction extends BaseAction implements ModelDriven {", "\n    protected T model;", "\n    public BaseModelAction() {", "\n        System.out.println(\"----------> BaseAction.BaseAction()\");", "\n        try {", "\n            ParameterizedType pt = (ParameterizedType) this.getClass().getGenericSuperclass();", "\n            Class clazz = (Class) pt.getActualTypeArguments()[0];", "\n            model = clazz.newInstance();", "\n        } catch (Exception e) {", "\n            throw new RuntimeException(e);", "\n        }", "\n    }", "\n    @Override", "\n    public T getModel() {", "\n        return model;", "\n    }", "\n}", "\n从jsp表单提交的时候，只选择一条数据，提交的id是对的，但是选择多个的话就报错了，我猜测选择多个的时候id会经过处理，会用“，”来拼接，这样就导致在给model的id赋值的时候就报错了，因拼接“，”后变成字符串，但是model的id是long型，类型不匹配就报错了，但是真正的原因也不是很清楚，还请大神指点一二，顺便说下解决方法。万分感谢！！！！！"]], "Tag": "程序设计"}
{"Answer": "```\r\n String [] s2 = s1[i].split(\",\");\r\n后面加上\r\nd[i] = new double[s2.length];\r\n```", "Konwledge_Point": "字符型", "Question": ["java小程序，编译通过了，运行时提示nullPointerException。请大神解答", ["public class StringToDouble {", "\n   public static void main(String []args) {", "\n      String s = \"1,2;3,4,5;6,7,8\";", "\n      double[][] array =StringToDouble.f(s);", "\n\n", "  for (int i =0;i<array.length;i++) {\n     for (int j = 0;j<array[i].length;j++) {\n        System.out.println(array[i][j]);\n     }\n  }\n", "\n\n", "}", "\n\n", "public static double[][] f(String s) {", "\n      String [] s1 = s.split(\";\");", "\n      double[][] d = new double [s1.length][];", "\n\n", "  for (int i = 0;i<s1.length;i++) {\n     String [] s2 = s1[i].split(\",\");\n\n     for (int j = 0;j<s2.length;j++) {\n        d[i][j] = Double.parseDouble(s2[j]);\n\n     }\n  }\n\n  return d;\n", "\n\n", "}", "\n}", "\n\n", "将一个字符串转换为double型二维数组，编译通过了，运行的时候提示nullPointerException。java提示错误发生在第4行和第21行。"]], "Tag": "程序设计"}
{"Answer": "http://blog.csdn.net/jhcconan614/article/details/53958828", "Konwledge_Point": "字符型", "Question": ["求一个Java计算器的程序，具体要求如下：急急急急急…………………………", ["1.简单的运算：（以加法为例：123+456） ", "\n分析：计算的结果为579.0，为双精度型，计算的结果被设置在文本框的最右端，该计算器的一个特点是可直接在文本框中输入数据以及进行更改。 ", "\n2.倒数的运算：（以123为例） ", "\n分析：输出的结果如图所示，倒数功能实现，计算时，不仅是结果，输入的数据同样可以先实现倒数功能后再进行相应的计算，没有影响！   ", "\n3.退格的运算：（以123为例） ", "\n分析：输出的结果如图所示，本计算器退格键有一个特点是，就算是是计算后得出的结果也能实现退格，缺点是不能很好的处理小数点的问题，因为小数点也是字符串的一部分。", "\n4.正负号的运算：（以123为例） ", "\n分析：输出的结果如图所示，正负号添加能够很好的实现，但可以进行一些改进，比如在计算过程当中直接点击负号运算符输入负数进行计算！  ", "\n\n", "最好是带上运行结果的截图还有注释"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;http-equiv&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;IE&amp;#61;edge&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;width&amp;#61;device-width, initial-scale&amp;#61;1.0&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n        &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; arr1 &amp;#61; [\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Jack&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Mike&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;John&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Ben&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Tony&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt; },\n        ]\n        &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; arr2 &amp;#61; [\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Jack&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Mike&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;John&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Ben&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;E&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; },\n            { &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Tony&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;grade&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; },\n        ]\n \n        &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Convert&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;arr1&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; cache &amp;#61; {};\n            &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; res &amp;#61; &lt;span class=\"hljs-variable constant_\"&gt;JSON&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;parse&lt;/span&gt;(&lt;span class=\"hljs-variable constant_\"&gt;JSON&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;stringify&lt;/span&gt;(arr1))\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; res.&lt;span class=\"hljs-property\"&gt;length&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;let&lt;/span&gt; grade &amp;#61; res[i].&lt;span class=\"hljs-property\"&gt;grade&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cache[grade]) res[i].&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt; &amp;#61; cache[grade]\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; res[i].&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt; &amp;#61; cache[grade] &amp;#61; &lt;span class=\"hljs-title class_\"&gt;Object&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;keys&lt;/span&gt;(cache).&lt;span class=\"hljs-property\"&gt;length&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; res;\n        }\n \n        &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;Convert&lt;/span&gt;(arr1));\n        &lt;span class=\"hljs-comment\"&gt;// 测试是否相等&lt;/span&gt;\n        &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-variable constant_\"&gt;JSON&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;stringify&lt;/span&gt;(&lt;span class=\"hljs-title class_\"&gt;Convert&lt;/span&gt;(arr1)) &amp;#61;&amp;#61; &lt;span class=\"hljs-variable constant_\"&gt;JSON&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;stringify&lt;/span&gt;(arr2));\n \n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["针对含对象的数组，如何根据条件给每个对象添加新的属性与属性值", ["假定有一个含若干对象的数组", "const arr1 = [", "    {name:'Tom', grade:'A'},", "    {name:'Jack',grade: 'E'},", "    {name:'Mike',grade: 'C'},", "    {name:'John',grade: 'D'},", "    {name:'Ben',grade: 'E'},", "    {name:'Tony',grade: 'D'},", "  ]", "\n", "想通过比较grade的属性值的异同，动态添加新的属性value，并且value的值为数值型，当grade的属性值不同时（grade的值为任意长度的字符串），分别赋不同的数字值，当grade属性值相同时，赋相同的数字值。", "\n", "   const arr2 = [", "    {name:'Tom', grade:'A',value: 1},", "    {name:'Jack',grade: 'E', value: 2},", "    {name:'Mike',grade: 'C', value: 3},", "    {name:'John',grade: 'D', value: 4},", "    {name:'Ben',grade: 'E', value: 2},", "    {name:'Tony',grade: 'D',value: 4},", "  ]"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;,{&amp;#34;永恒风暴级-攻击战列巡洋舰&amp;#34;,32,130460,1663,28900,4899,1663,174900,49440,29550,180,6,0,0,9,false}&lt;br /&gt;这一条数据有16项&amp;#xff0c;多了一个数据&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["问一下朋友们，我这代码怎么显示too many initializers for 'LT'啊", ["\n/*a1.swap(s2)", ";交换两个字符串的值  a.clear();清除字符串内的内容  a.empty();判断字符串是不是空的  a.insert(插入第一个位置的下标,插入字符串);在a字符串里的()位置插入();  a.erase(从这开始删,删n个停);  a.replace(下表,替换n个,替换的字符)  a.substr(下标,取几个字符)  reverse(a.begin(),a.end())  sort(a.begin(),a.end())  system(\"shutdown -p\");关机*/", "\n#include<iostream>/*int(...+", "0", ".", "5", ")", ";*/", "\n#include<cstdio>//printf(\"%\",)//双精度lf,整形d,字符c,浮点数f,字符串s,scanf(\"%d\",&)", ";%0id", "\n#include<bits/stdc++.h>\n#include<iomanip>//setw()\n#include<cmath>//ceil()//pow(x,y)", ";求x的y次方", "\n#include<time.h>//srand(time(", "0", "))", ";c=rand()%(b-a+1)+a;", "\n#include<algorithm>//sort()", ";", "\n//#include<windows.h>//Sleep()\n#include<string>//(自定义)struct /*名称*/{类型名 成员名", ";}a={1};//使用 /*名称*/ 成员名;结构体名.变量名;", "\n#include<cstring>//strlen（n）", ";求字符串长度", "\n#include<sstream>//stringstream\n#include<queue>//empty()如果队列空则返回真", ";push()在末尾加入一个元素;front()返回第一个元素;back()返回最后一个元素;pop()删除第一个元素;size()返回队列中元素的个数", "\n#include<deque>\n//#include<io.h>//getch()\n#include<fstream>\n//按位与 &；按位或 |；按位异或 ^ ；按位取反 ~", ";';'左移 << ；右移>>", "\nusing namespace std", ";", "\nbool cmp(const int &a,const int &b){\n     return a<b", ";", "\n}\nstruct LT{\n    string name", ";", "\n    long long zhg", ";//指挥值 ", "\n    long long jgz", ";//结构值 ", "\n    long long dk", ";//对空攻击 ", "\n    long long gj", ";//对舰攻击 ", "\n    long long gc", ";//攻城攻击 ", "\n    long long js", ";//生产舰船所需要的金属 ", "\n    long long jt", ";//生产舰船所需要的晶体 ", "\n    long long zq", ";//生产舰船所需要的重氢", "\n    double tm", ";//生产舰船所需要的时间/秒 ", "\n    long long fs", ";//舰船服役上限 ", "\n    long long ys", ";//已生产舰船数量 ", "\n    long long dj", ";//蓝图等级", "\n    int jz", ";//建造战舰所需要的基地等级 ", "\n    bool flag", ";//是否获得蓝图 ", "\n}a[", "60", "]={{\"vp-", "1041", "_攻击战列巡洋舰\",", "70,170000", ",", "1000,80000", ",", "100000", ",", "2324000", ",", "100000,40000", ",", "300,3,0", ",", "0", ",", "9", ",false}\n,{\"诺玛M470级-重型登陆舰\",", "6,12810", ",", "453,707", ",", "2022,8150", ",", "660,130,20", ",", "10,0,0,1", ",false}\n,{\"刺水母级-战术护卫舰\",", "6", ",", "9650,576", ",", "6320,1148", ",", "11890,800", ",", "240,20,10,0", ",", "0", ",", "1", ",false}\n,{\"澄海级-重型护卫舰\",", "5,13710", ",", "1195,4071", ",", "951,15820", ",", "910,170,20", ",", "10,0,0,1", ",false}\n,{\"红宝石级-重型轨道炮护卫舰\",", "5,15120", ",", "504,3920", ",", "658,12560", ",", "910,170,20", ",", "10,0,0,1", ",false}\n,{\"雷里亚特级-快速鱼类护卫舰\",", "4", ",", "9650,716", ",", "3520,330", ",", "12490,950", ",", "230,20,10,0", ",", "0", ",", "1", ",false}\n,{\"卡利莱恩级-侦察护卫航\",", "4", ",", "7640,1501", ",", "1575,315", ",", "7810,660", ",", "170,20,10,0", ",", "0", ",", "1", ",false}\n,{\"云海级-轻型登陆舰\",", "4,8720,0", ",", "1028,1532", ",", "10820,630", ",", "130,20,10,0", ",", "0", ",", "1", ",false}\n,{\"静海级-导弹护卫舰\",", "4,11310", ",", "1440,2635", ",", "328,8740", ",", "700,120,20", ",", "10,0,0,1", ",false}\n,{\"FG300型-作者送的新手护卫舰\",", "3,11194", ",", "540,1928", ",", "270,7990", ",", "540,110,13", ",", "15,0,0,1", ",true}\n,{\"卫士-支援驱逐舰(修船的)\",", "9,23490", ",", "1000,2000", ",", "1323,25790", ",", "2260,1840", ",", "30,10,0,0", ",", "2", ",false}\n,{\"苔原级-战术驱逐舰(修船的)\",", "9,36640", ",", "900,3000", ",", "1400,26270", ",", "2530,1170", ",", "30,10,0,0", ",", "2", ",false}\n,{\"斗牛级-脉冲炮驱逐舰\",", "8,32980", ",", "2994,6120", ",", "338,27440", ",", "2690,610", ",", "20,10,0,0", ",", "2", ",false}\n,{\"谷神星级-载机驱逐舰\",", "8,29570", ",", "2000,2000", ",", "2000,17460", ",", "1740,1230", ",", "20,10,0,0", ",", "2", ",false}\n,{\"AC721-重型运载驱逐舰\",", "8,31240", ",", "1126,2400", ",", "408,21890", ",", "1730,310", ",", "13,15,0,0", ",", "2", ",false}\n,{\"阋(xi,第四声)神星I级-轻型快速火炮驱逐舰\",", "7,27960", ",", "1800,4000", ",", "320,22670", ",", "2150,500", ",", "20,10,0,0", ",", "2", ",false}\n,{\"创神星级-轨道炮驱逐舰\",", "6,27960,230", ",", "5175,506", ",", "23020,2630", ",", "430,20,10", ",", "0", ",", "0", ",", "2", ",false}\n,{\"枪骑兵级-轻型导弹驱逐舰\",", "6,20780", ",", "1433,4720", ",", "1367,26690", ",", "2540,400", ",", "20,10,0,0", ",", "2", ",false}\n,{\"奇美拉级-重型巡洋舰\",", "20,77240", ",", "1200,15804", ",", "1893,72280", ",", "10650,3140", ",", "60,8,0,0", ",", "7", ",false}\n,{\"光锥级-综合导弹巡洋舰\",", "20,61850", ",", "6940,14142", ",", "1072,61950", ",", "7670,2860", ",", "60,8,0,0", ",", "7", ",false}\n,{\"卡利斯托-集束鱼类袭击舰\",", "20,70810", ",", "1400,15050", ",", "3983,59110", ",", "10120,3190", ",", "60,8,0,0", ",", "7", ",false}\n,{\"猎兵级-重型载机巡洋舰\",", "18,67730", ",", "3000,10000", ",", "1239,48960", ",", "5960,3150", ",", "10,8,0,0", ",", "7", ",false}\n,{\"狩猎者级-载机巡洋舰\",", "18,67730", ",", "10000,1323", ",", "0,55970", ",", "5750,4430", ",", "10,8,0,0", ",", "7", ",false}\n,{\"艾奥级-攻坚离子炮巡洋舰\",", "18,54763", ",", "1260,21656", ",", "4167,55900", ",", "9250,2550", ",", "60,8,0,0", ",", "7", ",false}\n,{\"CAS066级-通用巡洋舰\",", "18,61850", ",", "1440,11588", ",", "3299,62130", ",", "7340,2410", ",", "40,12,0,0", ",", "7", ",false}\n,{\"KCCPV2.", "0", "-轻型攻击巡洋舰\",", "16,46260", ",", "2373,9772", ",", "2013,43910", ",", "6620,1930", ",", "35,12,0,0", ",", "7", ",false}\n,{\"乌拉诺斯之矛级-重型战列巡洋舰\",", "35,192540", ",", "1720,27700", ",", "14385,185870", ",", "48430,24440", ",", "120,6,0,0", ",", "9", ",false}\n,{\"新君士坦丁大帝级-综合战列巡洋舰\",", "35,125840,0", ",", "33000,3810", ",", "167470,47120", ",", "28210,200,6", ",", "0", ",", "0", ",", "9", ",false}\n,{\"永恒风暴级-攻击战列巡洋舰\",", "32,130460", ",", "1663,28900", ",", "4899,1663", ",", "174900,49440", ",", "29550,180,6", ",", "0", ",", "0", ",", "9", ",false}\n,{\"ST59级-防御战列巡洋舰\",", "28,139552", ",", "1440,19200", ",", "4566,148130", ",", "33750,15840", ",", "150,6,0,0", ",", "9", ",false}\n,{\"不屈级-TE-导弹战列巡洋舰\",", "30,121350", ",", "1701,19996", ",", "1889,148500", ",", "33950,15910", ",", "240,4,0,0", ",", "9", ",false}\n,{\"太阳鲸-武装战略航空母舰(大幅维修战机)\",", "45,292890", ",", "1000,10000", ",", "2932", ",", "299780", ",", "46990,48130", ",", "300,5,0", ",", "0", ",", "8", ",false}\n,{\"CV3000级-快速航空母舰(维修战机)\",", "40,254740", ",", "3000,7000", ",", "1249,214010", ",", "24600,35050", ",", "280,5,0", ",", "0", ",", "8", ",false}\n,{\"佩刀Aer410-强击攻击机\",", "1", ",", "3750,1992", ",", "2430,255", ",", "6070,480", ",", "200,10,10,0", ",", "0", ",", "5", ",false}\n,{\"刺鳐-鱼雷轰炸机\",", "1,4780,0", ",", "3200,992", ",", "5360,730", ",", "260,10,10", ",", "0", ",", "0", ",", "5", ",false}\n,{\"孢子A404\",", "1", ",", "3250,3320", ",", "1380", ",", "0", ",", "4640,310", ",", "120,7,10,0", ",", "0", ",", "5", ",false}\n,{\"B192新大地-重型攻击机\",", "1", ",", "4290,1800", ",", "1800,270", ",", "7300,660", ",", "290,5,10", ",", "0", ",", "0", ",", "5", ",false}\n,{\"维塔斯-B010-轰炸机\",", "1,5340,0", ",", "4588,1696", ",", "9260,880", ",", "270,15,10", ",", "0", ",", "0", ",", "5", ",false}\n,{\"维塔斯A021-重型攻击机\",", "1", ",", "4920,900", ",", "3618,543", ",", "8960,890", ",", "320,20,10", ",", "0", ",", "0", ",", "5", ",false}\n,{\"平衡安德森SC020-侦察机\",", "1", ",", "3250,1440", ",", "1500", ",", "0", ",", "6030,400", ",", "160,10,10,0", ",", "0", ",", "5", ",false}\n,{\"林鸮A100-联合攻击机\",", "1", ",", "4680,2517", ",", "2190,438", ",", "7460,480", ",", "200,20,10,0", ",", "0", ",", "5", ",false}\n,{\"牛蛙级-两栖轰炸机\",", "1,4240,0", ",", "2000,880", ",", "7130,500", ",", "190,8,10,0", ",", "0", ",", "5", ",false}\n,{\"砂龙-大气层拦截机\",", "1", ",", "3900,4475", ",", "1230", ",", "0", ",", "4990,440", ",", "140,10,10,0", ",", "0", ",", "5", ",false}\n,{\"SC002型-量子侦察机\",", "1", ",", "2700,1170", ",", "1170", ",", "0", ",", "4160,300", ",", "140,4,15,0", ",", "0", ",", "5", ",false}\n,{\"CV-T800型-脉冲炮艇\",", "2", ",", "6740,3192", ",", "2400", ",", "48", ",", "4800,280", ",", "60,3,15,0", ",", "0", ",", "5", ",false}\n,{\"CV-MD11型-重型导弹艇\",", "2", ",", "6470,1280", ",", "3200,240", ",", "5320,410", ",", "70,5,15,0", ",", "0", ",", "5", ",false}\n,{\"虚灵-隐形导弹艇\",", "2", ",", "4100,655", ",", "3980,315", ",", "8220,570", ",", "110,8,10,0", ",", "0", ",", "5", ",false}\n,{\"星云追逐着-重型护航艇\",", "2", ",", "4950,667", ",", "3120,588", ",", "6470,430", ",", "90,6,10,0", ",", "0", ",", "5", ",false}\n,{\"蜂巢守卫者-重型鱼雷艇\",", "2", ",", "5730,1840", ",", "4980,1656", ",", "7910,560", ",", "110,15,10,0", ",", "0", ",", "5", ",false}\n,{\"RB7-", "13", "型-导弹艇\",", "2", ",", "4100,580", ",", "2640,184", ",", "3690,220,50", ",", "3,10,0,0", ",", "5", ",false}\n,{\"CV-II003型-轻型护航艇\",", "2", ",", "4182,285", ",", "3024,501", ",", "4270,270", ",", "60,6,15,0", ",", "0", ",", "5", ",false}\n,{\"鳐-装甲护航艇\",", "2,4100,0", ",", "2250,630", ",", "6310,380", ",", "80,4,10,0", ",", "0", ",", "5", ",false}\n}", ";", "\nint main()\n{\n    //freopen(\".in\",\"r\",stdin)", ";", "\n    //freopen(\".out\",\"w\",stdout)", ";", "\n    \n    //fclose(stdin)", ";", "\n    //fclose(stdout)", ";", "\n     return ", "0", ";", "\n}\n", "\n", "系统显示截图", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Role&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; __init__(self, attackValue, skillName, roleName):\n        self.__attackValue &amp;#61; attackValue   &lt;span class=\"hljs-comment\"&gt;# 普通攻击值&amp;#xff0c;整型&lt;/span&gt;\n        self.__skillName &amp;#61; skillName  &lt;span class=\"hljs-comment\"&gt;# 技能攻击名称&amp;#xff0c;字符串&lt;/span&gt;\n        self.__roleName &amp;#61; roleName  &lt;span class=\"hljs-comment\"&gt;# 角色名称&amp;#xff0c;字符串&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;commAttack&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{0}正在使用普通攻击&amp;#xff0c;攻击力为{1}。&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(self.__roleName, self.__attackValue))\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;skillAttack&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{0}正在使用特殊攻击“{1}”。&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(self.__roleName, self.__skillName))\n        \n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;GuanYu&lt;/span&gt;(&lt;span class=\"hljs-title class_ inherited__\"&gt;Role&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; __init__(self):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;().__init__(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;单刀赴会&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;关羽&amp;#34;&lt;/span&gt; )\n        \n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LvBu&lt;/span&gt;(&lt;span class=\"hljs-title class_ inherited__\"&gt;Role&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; __init__(self):\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;().__init__(&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;贪狼之握&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;吕布&amp;#34;&lt;/span&gt; )\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;skillAttack&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;谁敢战我&amp;#xff01;&amp;#xff01;&amp;#xff01;&amp;#39;&lt;/span&gt;, end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;super&lt;/span&gt;().skillAttack()\n        \n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Control&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; __init__(self, obj):\n        obj.commAttack()\n        obj.skillAttack()\n\ng &amp;#61; GuanYu()\nl &amp;#61; LvBu()\ncg &amp;#61; Control(p)\ncl &amp;#61; Control(l)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;关羽正在使用普通攻击&amp;#xff0c;攻击力为10。\n关羽正在使用特殊攻击“单刀赴会”。\n吕布正在使用普通攻击&amp;#xff0c;攻击力为15。\n谁敢战我&amp;#xff01;&amp;#xff01;&amp;#xff01;吕布正在使用特殊攻击“贪狼之握”。\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["python编写程序设计", ["编写程序，按如下要求设计类：\n王者荣耀是一款非常流行的即时对战类游戏，里面有很多的游戏角色可供选择。所有的角色都具有以下操作：普通攻击、技能攻击。\n创建一个基类（Role），该类包括如下成员：\n（1）属性：普通攻击值（attackValue，整数型）,技能攻击名称（skillName，字符串类型），角色名称（roleName，字符串类型），以上三个属性均为私有属性\n（2）方法：普通攻击（commAttack()），技能攻击（skillAttack()）\n           其中：普通攻击方法显示：XXX正在使用普通攻击，攻击力为XXX。”，XXX表示具体英雄的具体角色名与攻击值。\n                 技能攻击方法显示：XXX正在使用特殊攻击“XXX”。XXX表示具体的角色名称与技能攻击名称。\n   创建两个英雄角色，均继承基类\n关羽类（GuanYu）：普通攻击值10，技能攻击名称是“单刀赴会”\n吕布（LvBu）：普通攻击值15，技能攻击名称是“贪狼之握”，当使用吕布的技能攻击时，要显示：谁敢战我！！！吕布正在使用特殊攻击“贪狼之握”。\n创建一个控制类（Control），该类有一个方法，该方法用于接收传入的具体的英雄角色，该方法采用多态技术实现。\n当传入“关羽”时，显示如下信息：\n（1）当调用关羽的普通攻击方法时，在控制台显示：\n     关羽正在使用普通攻击，攻击力为10。\n（2）当调用关羽的技能攻击方法时，在控制台显示：\n     关羽正在使用特殊攻击“单刀赴会”。\n当传入“吕布”时，显示如下信息：\n（1）当调用吕布的普通攻击方法时，在控制台显示：\n     吕布正在使用普通攻击，攻击力为15。\n（2）当调用吕布的技能攻击方法时，在控制台显示：\n     谁敢战我！！！吕布正在使用特殊攻击“贪狼之握”。\n提示：注意在子类中可以使用super()方法使用父类的属性与方法。\n求求了求求了，太难了"]], "Tag": "程序设计"}
{"Answer": "检查下后台返回数据格式，还有是否forward界面了", "Konwledge_Point": "字符型", "Question": ["GroupingStore使用帮忙看看错误", ["var records=Ext.data.Record.create([", "\n         //车型分组", "\n         {name:'motogroup'},", "\n         //车型", "\n         {name:'motorcyclename'},", "\n         //保养级(期)别", "\n         {name:'equipmentOrOil',type:'string'},", "\n         //1级保养", "\n         {name:'oneji',type:'int'},", "\n         //复出保养", "\n         {name:'fcb',type:'int'},", "\n         //1期保养", "\n         {name:'oneqi',type:'int'},", "\n         //车辆封存", "\n         {name:'fengcun',type:'int'},", "\n         //换季保养", "\n         {name:'huanji',type:'int'}", "\n    ]);", "\nvar store=new Ext.data.GroupingStore({", "\n       proxy: new Ext.data.HttpProxy({url: \"carservice/vqftask!equipmentAndOilSY.action\"}),", "\n        reader: new Ext.data.JsonReader({", "\n            root: 'root'", "\n        },records),", "\n      sortInfo:{field: 'motogroup', direction: \"ASC\"},", "\n      groupField:'motorcyclename'", "\n    });", "\n\n", "var grid=new Ext.grid.GridPanel({", "\n       region:'center',", "\n       loadMask:{msg:'正在载入数据，请稍候...'},", "\n       stripeRows:true,", "\n        frame:true,", "\n        cm:cm,", "\n        view: new Ext.grid.GroupingView({", "\n            forceFit:true,", "\n            groupTextTpl: '{text} ({[values.rs.length]} {[values.rs.length > 1 ? \"Items\" : \"Item\"]})'", "\n        }),", "\n         collapsible: true,", "\n        animCollapse: false,", "\n        title: '", "汽车使用分队月份车辆保养器材、油料通知单", "',", "\n        iconCls: 'icon-grid',", "\n        store:store", "\n    });\n\n", "后台json字符串:  {root:[{motorcyclename:'大众',equipmentOrOil:'器材指标（车份）',oneji:'2',fcb:'3',oneqi:'4',fengcun:'5',huanji:'6'}]}", "\n\n", "为什么，我grid里面不能显示数据。没有报错", "\n  等待回答"]], "Tag": "程序设计"}
{"Answer": "带参数的存储过程是不能这样调的。你可以换个思路用jdbc掉好了，或者就用hibernate获取jdbc连接，然后用jdbc去实现就简单了，具体方法网上很多。", "Konwledge_Point": "字符型", "Question": ["hibernate 调用存储过程的通用方法", ["我想作一个在hibernate中调用存储过程的通用方法", "\npublic class callbackfunc implements HibernateCallback {", "\n    private String funname;", "\n    Map param ;", "\n    public callbackfunc(String func,Map param ){", "\n        this.funname=func;", "\n        this.param=param;", "\n    }", "\n    public Object doInHibernate(Session session) { ", "\n        Object o=new Object();", "\n           try { ", "\n                String sql = \"{call \"+this.getFunname()+ \"}\"; ", "\n                SQLQuery  query=session.createSQLQuery(sql);", "\n                Set> s = param.entrySet();", "\n                for(Entry e :s){", "\n                  query.setParameter(e.getKey(), e.getValue());", "\n\n", "            }\n            List<Map<String,Object>> list = new ArrayList<Map<String,Object>>();  \n           list = query.setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list  \n          return list;\n        } catch (Exception e) { \n              e.printStackTrace(); \n              return false;\n          }\n\n    }\npublic Map<String, Object> getParam() {\n        return param;\n}\n\npublic void setParam(Map<String, Object> param) {\n    this.param = param;\n}\npublic String getFunname() {\n    return funname;\n}\n\npublic void setFunname(String funname) {\n    this.funname = funname;\n}\n}\n", "\n\n", "以上是回调函数", "\n    public List> excuteFun(String funname,Map param) {", "\n        return getHibernateTemplate().execute(new callbackfunc(funname,param));", "\n\n", "}\n", "\n\n", "以上是hibernate调用存储过程的方法", "\nmain{", "\n   Map m=new HashMap();", "\n   m.put(\"dnpno\", \"dfv\");", "\n   cs.excuteFun(\"WF_DENPNO_SAIBAN_UPDATE('5030',1,=>:dnpno)\", m );", "\n\n", "}", "\n以上是调用WF_DENPNO_SAIBAN_UPDATE存储过程的测试main方法", "\nWF_DENPNO_SAIBAN_UPDATE 存储过程定义如下", "\nWF_DENPNO_SAIBAN_UPDATE( dnpkbn in varchar2, cnt in number,dnpno out varchar2 )", "\n输入两个参数 dnpkbn cnt", "\n返回字符串型dnpno", "\n为什么总是返回", "\n不能执行查询错误?"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;package com.imooc.utils;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; com.alibaba.fastjson.JSON;\n\n&lt;span class=\"hljs-comment\"&gt;/**\n * 数组工具类\n */&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; ArrayUtils {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static String toString(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] args) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;JSON&lt;/span&gt;.toJSONString(args);\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/***\n     * 去除一个最高最低分后求均值\n     * \n     * &amp;#64;param args 数组\n     * &amp;#64;return 均值\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;Float&lt;/span&gt; getAverage(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] args) {\n        args &amp;#61; BubbleSortMethod(args);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; count &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (args &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt; || args.length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;f;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; args.length - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            count &amp;#43;&amp;#61; args[i];\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; count * &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;f / (args.length - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 冒泡排序\n     * \n     * &amp;#64;param arr 待排序数组\n     * &amp;#64;return 排序后数组\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] BubbleSortMethod(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] arr) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt; || arr.length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; arr;\n        }\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; arr.length - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; arr.length - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - i; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (arr[j] &amp;gt; arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]) {\n                    &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt; &amp;#61; arr[j];\n                    arr[j] &amp;#61; arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                    arr[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;;\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; arr;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 主方法测试\n     * \n     * &amp;#64;param args\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] arr &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;};\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(ArrayUtils.toString(arr));\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(ArrayUtils.getAverage(arr));\n\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] arr1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;null&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(ArrayUtils.toString(arr1));\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(ArrayUtils.getAverage(arr1));\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[] arr2 &amp;#61; {};\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(ArrayUtils.toString(arr2));\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(ArrayUtils.getAverage(arr2));\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/285955538666159.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["编写一个数组的工具类：ArraysUtils", ["需求：在实际开发中，经常会遇到一些数组使用的工具类。请按照如下要求编写一个数组的工具类：ArraysUtils", "\n", "1.我们知道数组对象直接输出的时候是输出对象的地址的，而项目中很多地方都需要返回数组的内容，请在ArraysUtils中提供一个工具类方法toString，用于返回整数数组的内容，返回的字符串格式如：[10, 20, 50, 34, 100]（只考虑整数数组，且只考虑一维数组）", "\n", "2.经常需要统计平均值，平均值为去掉最低分和最高分后的分值，请提供这样一个工具方法getAerage，用于返回平均分。（只考虑浮点型数组，且只考虑一维数组）", "\n", "3.定义一个测试类Test，调用该工具类的工具方法，并返回结果。", "测试类：", "public class Test {", "    public static void main(String[] args) {", "        int[] arr = {10, 20, 30,40,50};", "        System.out.println(ArrayUtils.toString(arr));", "        System.out.println(ArrayUtils.getAverage(arr));", "\n", "    ", "int", "[]", " arr1 = null;\n    ", "System", ".", "out.println(", "ArrayUtils", ".", "to", "String(", "arr1", ")", ");\n    ", "System", ".", "out.println(", "ArrayUtils", ".", "get", "Average(", "arr1", ")", ");\n    ", "int", "[]", " arr2 = {};\n    ", "System", ".", "out.println(", "ArrayUtils", ".", "to", "String(", "arr2", ")", ");\n    ", "System", ".", "out.println(", "ArrayUtils", ".", "get", "Average(", "arr2", ")", ");\n}\n", "\n", "}", "\n", "运行程序输出如下：", "[10,20,30,40,50]", "30.0", "null", "0.0", "[]", "0.0"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你的代码应该没有问题&amp;#xff0c;我的visual studio上面是可以运行的&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/402548434846153.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["问题出在哪，求解决办法", ["\n", "\n", "// 105.cpp : 此文件包含 \"main\" 函数。程序执行将在此处开始并结束。", "\n", "//", "\n\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<stdlib.h>", "\n ", "using", " ", "namespace", " std;\n\n", "//定义timer类", "\n", "class", " ", "timer", " {\n    ", "long", " minutes;\n", "public", ":\n    ", "//无参构造函数", "\n    ", "timer", "(", "void", ") {\n        minutes = ", "0", ";\n    };\n\n    ", "//字符指针参数的构造函数", "\n    ", "timer", "( ", "const", " ", "char", " *m) {\n        minutes = ", "atoi", "(m);\n    };\n    ", "//整数类型的构造函数", "\n    ", "timer", "(", "int", " h, ", "int", " m) {\n        minutes = ", "60", " * h + m;\n\n    };\n    ", "//双精度浮点型构造函数", "\n    ", "timer", "(", "double", " h) {\n        minutes = (", "int", ")(", "60", " * h);\n    };\n    ", "long", " ", "getminutes", "(", "void", ")", " ", "{ ", "return", " minutes; }\n};\n\n", "//mian函数的定义", "\n", "int", " ", "main", "()", "\n", "{\n    ", "//使用double类型的构造函数创建对象", "\n    ", "timer ", "start", "(", "8.30", ")", ",", "finish", "(", "17.30", ")", ";\n    cout << ", "\"finish(17.30)-finish(8.30)=\"", ";\n    cout << finish.", "getminutes", "() - start.", "getminutes", "() << endl;\n    ", "//使用char指针类型的构造函数创建对象", "\n    ", "timer ", "start0", "(", "\"500\"", ")", ", ", "finish0", "(", "\"800\"", ")", ";", "//创建对象", "\n        cout << ", "\"finish0(\\\"800\\\")-start0(\\\"500\\\")=\"", ";\n        cout << finish0.", "getminutes", "() - finish0.", "getminutes", "() << endl;\n        ", "//使用无参数构造函数和整型的构造函数创建对象", "\n        timer start1;\n        ", "timer ", "finish1", "(", "3", ", ", "30", ")", ";\n        cout<<finish1.", "getminutes", "() - start1.", "getminutes", "() << endl;\n        ", "return", " ", "0", ";\n}\n\n\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt; scanf_s(&amp;#34;%c%c%c&amp;#34;, &amp;amp;ch1, 1,&amp;amp;ch2, 1,&amp;amp;ch3,1);&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["VS中scanf_s读取位置，发生访问冲突", ["C语言，VS2022，scanf_s报错", "​​0x00007FF9D1BB6191 (ucrtbased.dll)处(位于 实验.exe 中)引发的异常: 0xC0000005: 读取位置 0xFFFFFFFFFFFFFFFF 时发生访问冲突。", "\n", "#include <stdio.h>", "\n\n", "int", " main()\n{\n    char ch1, ch2, ch3;\n    ", "int", " a, b;\n    float f;\n    ", "printf", "(", "\"请输入3个字符：\"", ");\n    scanf_s(", "\"%c%c%c\"", ", &ch1, &ch2, &ch3);\n    ", "printf", "(", "\"ch1=%c,ch2=%c,ch3=%c\\n\"", ", ch1, ch2, ch3);\n    \n    ", "printf", "(", "\"请输入2个整数：\"", ");\n    scanf_s(", "\"%d%d\"", ", &a, &b);\n    ", "printf", "(", "\"a=%d,b=%d\\n\"", ", a, b);\n    \n    ", "printf", "(", "\"请输入1个整数和1个浮点型数：\"", ");\n    scanf_s(", "\"%3d%*5d%f\"", ", &a, &f);\n    ", "printf", "(", "\"a=%d,f=%7.2f\"", ", a, f);\n    ", "return", " ", "0", ";\n}\n\n\n", "\n", "\n", "\n", "详细信息如下：", "0x00007FF9D1BB6191 (ucrtbased.dll) (实验.exe 中)处有未经处理的异常: 0xC0000005: 读取位置 0xFFFFFFFFFFFFFFFF 时发生访问冲突。", "\n", "我试着在scanf_s加过sizeof()，但没什么用，百度一下午，空指针、数组啥的，我也不懂，我觉得这只是个简单的输入，应该不是超界啥的吧，大一C的初学者，希望能在此处求解！"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;这句错误if name &amp;#61;&amp;#61; &amp;#39;main&amp;#39;:&amp;#xff0c;改成如下写法即可。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;if &lt;span class=\"hljs-strong\"&gt;__name__&lt;/span&gt; &amp;#61;&amp;#61; &amp;#39;&lt;span class=\"hljs-strong\"&gt;__main__&lt;/span&gt;&amp;#39;:\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如对你有帮助&amp;#xff0c;请采纳。点击我回答右上角【采纳】按钮。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["产生式系统python运行问题", ["2020 boogie_liu", "\n", "symbol={1:'毛',2:'橡皮',3:'金属',4:'塑料',5:'墨水',6:'有笔尖',7:'需要笔芯',", "            8:'笔尖金属',9:'笔尖为毛',", "            10:'可以写字',11:'擦字',12:'去除非铅笔痕迹',", "            13:'毛笔',14:'钢笔',15:'铅笔',16:'水笔',17:'修改液',18:'橡皮擦'}", "\n", "rule={", "        13:[9,10],", "        14:[8,3,5],", "        16:[8,7],", "        17:[4,12],", "        18:[2,11]", "      }", "\n", "class PRO_SYS:", "\n", "def", " ", "__init__", "(", "self", "):\n    tkey=[]\n    self.dict_c = rule\n    self.symbol=symbol\n    self.tkey=tkey\n\n", "#输入", "\n", "def", " ", "input_sys", "(", "self", "):\n    x=", "input", "(", "\"请输入您选择的特征，如：1,2,3(以逗号隔开):\"", ")\n    ", "str", "=x.split(", "','", ")\n    in_list=[]\n    ", "#将字符转换为int数组型", "\n    ", "for", " i ", "in", " ", "str", ":\n        in_list.append(", "int", "(i))\n    self.in_list=in_list\n    ", "return", " in_list\n\n", "#将部分字段转换为已知特征", "\n", "def", " ", "translate", "(", "self", "):\n    rule=self.dict_c\n    put=self.in_list\n    ", "#判断能否转换为已知信息", "\n\n    ", "for", " key,value ", "in", " rule.items():\n        list_len = ", "0", "\n        ", "for", " i ", "in", " value:\n            ", "if", " i ", "in", " put:\n                list_len += ", "1", "\n        ", "if", " list_len== ", "len", "(value):\n            put.append(key)\n            ", "for", " i ", "in", " value:\n                put.remove(i)\n    self.in_list=put\n\n\n", "#正向推理", "\n", "def", " ", "z_inference", "(", "self,c=", "0.2", "):", "#c为允许误差范围", "\n    put = self.in_list\n    ", "print", "(put)\n    ", "if", " ", "len", "(put)==", "1", ":\n        put_value=put[", "0", "]\n        ", "print", "(", "\"推理结果是\"", "+self.symbol[put_value])\n        ", "return", " ", "False", "\n    try_dict={}\n    ", "#查找相似度最大的特征", "\n    ", "for", " key,value ", "in", " rule.items():\n        try_dict.setdefault(key,", "0", ")\n        temp=", "0", "\n        ", "for", " i ", "in", " put:\n            ", "if", " i ", "not", " ", "in", " symbol.keys():\n                ", "print", "(", "\"输入不合法，请重新输入\"", ")\n                ", "return", " ", "True", "\n            ", "elif", " i ", "in", " value:\n                temp+=", "1", "\n        try_dict[key]=temp/", "len", "(value)\n    n=", "max", "(val ", "for", " _,val ", "in", " try_dict.items())\n    tkey=[]\n    ", "#找出相似度最高的几个文具", "\n    ", "for", " key,val ", "in", " try_dict.items():\n        ", "if", " val>=n-c:\n            tkey.append(key)\n    ", "#找到相似度最高的几个", "\n\n    ", "print", "(tkey)\n    self.tkey=tkey\n    ", "if", " ", "len", "(tkey)==", "1", ":\n        ", "print", "(", "\"推理结果是\"", "+self.symbol[tkey[", "0", "]])\n        ", "return", " ", "False", "\n    ", "else", ":\n        ", "#进行逆向推理", "\n        ", "return", " ", "True", "\n\n", "#逆向推理", "\n", "def", " ", "r_inference", "(", "self", "):\n    tkey=self.tkey\n\n    ", "for", " key ", "in", " tkey:\n        t_len=", "0", "\n        ", "for", " i ", "in", " rule[key]:\n            ", "if", " i ", "in", " self.in_list:\n                t_len+=", "1", "\n            ", "if", " i ", "not", " ", "in", " self.in_list:\n                ", "print", "(", "\"是否具有：\"", ",symbol[i],", "\"特征？\"", ",end=", "None", ")\n                x=", "input", "(", "\"请输入YES/NO\"", ")\n                ", "if", " x==", "\"NO\"", ":\n                    ", "break", "\n                ", "if", " x==", "\"YES\"", ":\n                    self.in_list.append(i)\n                    t_len+=", "1", "\n        ", "if", " t_len== ", "len", "(rule[key]):\n            ", "print", "(", "\"该特征逆向推理为：\"", ",symbol[key])\n            ", "break", "\n", "\n", "if ", "name", " == '", "main", "':", "    print(symbol)", "    sta_pro_sys=PRO_SYS()", "    sta_pro_sys.input_sys()", "    sta_pro_sys.translate()", "    # #只进行正向推理", "    # sta_pro_sys.z_inference()", "    #正向推理不出就逆向推理", "    if sta_pro_sys.z_inference():", "        sta_pro_sys.r_inference()", "\n", "2020 boogie_liu", "\n", "symbol={1:'毛',2:'橡皮',3:'金属',4:'塑料',5:'墨水',6:'有笔尖',7:'需要笔芯',", "            8:'笔尖金属',9:'笔尖为毛',", "            10:'可以写字',11:'擦字',12:'去除非铅笔痕迹',", "            13:'毛笔',14:'钢笔',15:'铅笔',16:'水笔',17:'修改液',18:'橡皮擦'}", "\n", "rule={", "        13:[9,10],", "        14:[8,3,5],", "        16:[8,7],", "        17:[4,12],", "        18:[2,11]", "      }", "\n", "class PRO_SYS:", "\n", "def", " ", "__init__", "(", "self", "):\n    tkey=[]\n    self.dict_c = rule\n    self.symbol=symbol\n    self.tkey=tkey\n\n", "#输入", "\n", "def", " ", "input_sys", "(", "self", "):\n    x=", "input", "(", "\"请输入您选择的特征，如：1,2,3(以逗号隔开):\"", ")\n    ", "str", "=x.split(", "','", ")\n    in_list=[]\n    ", "#将字符转换为int数组型", "\n    ", "for", " i ", "in", " ", "str", ":\n        in_list.append(", "int", "(i))\n    self.in_list=in_list\n    ", "return", " in_list\n\n", "#将部分字段转换为已知特征", "\n", "def", " ", "translate", "(", "self", "):\n    rule=self.dict_c\n    put=self.in_list\n    ", "#判断能否转换为已知信息", "\n\n    ", "for", " key,value ", "in", " rule.items():\n        list_len = ", "0", "\n        ", "for", " i ", "in", " value:\n            ", "if", " i ", "in", " put:\n                list_len += ", "1", "\n        ", "if", " list_len== ", "len", "(value):\n            put.append(key)\n            ", "for", " i ", "in", " value:\n                put.remove(i)\n    self.in_list=put\n\n\n", "#正向推理", "\n", "def", " ", "z_inference", "(", "self,c=", "0.2", "):", "#c为允许误差范围", "\n    put = self.in_list\n    ", "print", "(put)\n    ", "if", " ", "len", "(put)==", "1", ":\n        put_value=put[", "0", "]\n        ", "print", "(", "\"推理结果是\"", "+self.symbol[put_value])\n        ", "return", " ", "False", "\n    try_dict={}\n    ", "#查找相似度最大的特征", "\n    ", "for", " key,value ", "in", " rule.items():\n        try_dict.setdefault(key,", "0", ")\n        temp=", "0", "\n        ", "for", " i ", "in", " put:\n            ", "if", " i ", "not", " ", "in", " symbol.keys():\n                ", "print", "(", "\"输入不合法，请重新输入\"", ")\n                ", "return", " ", "True", "\n            ", "elif", " i ", "in", " value:\n                temp+=", "1", "\n        try_dict[key]=temp/", "len", "(value)\n    n=", "max", "(val ", "for", " _,val ", "in", " try_dict.items())\n    tkey=[]\n    ", "#找出相似度最高的几个文具", "\n    ", "for", " key,val ", "in", " try_dict.items():\n        ", "if", " val>=n-c:\n            tkey.append(key)\n    ", "#找到相似度最高的几个", "\n\n    ", "print", "(tkey)\n    self.tkey=tkey\n    ", "if", " ", "len", "(tkey)==", "1", ":\n        ", "print", "(", "\"推理结果是\"", "+self.symbol[tkey[", "0", "]])\n        ", "return", " ", "False", "\n    ", "else", ":\n        ", "#进行逆向推理", "\n        ", "return", " ", "True", "\n\n", "#逆向推理", "\n", "def", " ", "r_inference", "(", "self", "):\n    tkey=self.tkey\n\n    ", "for", " key ", "in", " tkey:\n        t_len=", "0", "\n        ", "for", " i ", "in", " rule[key]:\n            ", "if", " i ", "in", " self.in_list:\n                t_len+=", "1", "\n            ", "if", " i ", "not", " ", "in", " self.in_list:\n                ", "print", "(", "\"是否具有：\"", ",symbol[i],", "\"特征？\"", ",end=", "None", ")\n                x=", "input", "(", "\"请输入YES/NO\"", ")\n                ", "if", " x==", "\"NO\"", ":\n                    ", "break", "\n                ", "if", " x==", "\"YES\"", ":\n                    self.in_list.append(i)\n                    t_len+=", "1", "\n        ", "if", " t_len== ", "len", "(rule[key]):\n            ", "print", "(", "\"该特征逆向推理为：\"", ",symbol[key])\n            ", "break", "\n", "\n", "if ", "name", " == '", "main", "':", "    print(symbol)", "    sta_pro_sys=PRO_SYS()", "    sta_pro_sys.input_sys()", "    sta_pro_sys.translate()", "    # #只进行正向推理", "    # sta_pro_sys.z_inference()", "    #正向推理不出就逆向推理", "    if sta_pro_sys.z_inference():", "        sta_pro_sys.r_inference()", "\n", "这个是因为什么回车的时候运行不出来"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;DBADB&lt;/p&gt;\n\n&lt;p&gt;DCDCD&lt;/p&gt;\n\n&lt;p&gt;DDCDA&lt;/p&gt;\n\n&lt;p&gt;ABABA&lt;/p&gt;\n\n&lt;p&gt;DABBC&lt;/p&gt;\n\n&lt;p&gt;BAADB&lt;/p&gt;\n\n&lt;p&gt;A&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["求解，下面这套选择题", ["1.", "\n\n", "list1 = [{'神话':'myth'},{'神秘':'mystery'},{'研究':'research'}]", "\n\n", "取出 research,正确的选项是（）", "\n\n", "A. print(list1[3][\"research\"])", "\n\n", "B. print(list1[2][\"research\"])", "\n\n", "C. print(list1[\"research\"][1])", "\n\n", "D. print(list1[2]['研究'])", "\n\n", "2.", "\n\n", "list2=[", "\n\n", "{'女儿国':['国王','蝎子精'],'车迟国':['和尚','道士']},", "\n\n", "'白骨精','鹿力大仙','羊力大仙',", "\n\n", "[{'主角':'唐僧','主角 1':'孙悟空'},{'副角':'白龙马'}]", "\n\n", "]", "\n\n", "取出唐僧,正确的选项是（）", "\n\n", "A. print(list2[4][0][ \"唐僧\"])", "\n\n", "B.print(list2[4][0][ \"主角\"])", "\n\n", "C.print(list2[5][1][ \"主角\"])", "\n\n", "D.print(list2[4])", "\n\n", "3.自定义函数的关键字是()", "\n\n", "A.def", "\n\n", "B.while", "\n\n", "C.if", "\n\n", "D.import", "\n\n", "4.在 python 中，使用 for-in 方式形成的循环不能遍历的类型", "\n\n", "是（）", "\n\n", "A.列表 B.元组 C.字符串 D.整形", "\n\n", "5.下面代码的输出结果是（）", "\n\n", "def fun(x):", "\n\n", "return x**2+6", "\n\n", "print(fun(8))", "\n\n", "A. 无输出", "\n\n", "B.70", "\n\n", "C.16", "\n\n", "D.14", "\n\n", "6. 根据 LIST1，选出正确的选项()", "\n\n", "LIST1 = [1,2,4,6,8,9,3,5,9,0,]", "\n\n", "A. LIST1 [2:4]选取的列表片段有 3 个元素", "\n\n", "B . LIST1 [6:]选取的列表片段有 6 个元素", "\n\n", "C. LIST1 [:]选取的是空列表", "\n\n", "D. LIST1 [:5]选取的列表片段有 5 个元素", "\n\n", "7. 运行下列代码，在终端中输入 90，输出结果是什么呢？", "\n\n", "fs = int(input('请输入你的分数：'))", "\n\n", "if fs > 60:", "\n\n", "print('良好')", "\n\n", "if fs > 80:", "\n\n", "print('优秀')", "\n\n", "if fs < 60:", "\n\n", "print('不及格')", "\n\n", "A.良好", "\n\n", "B.优秀", "\n\n", "C.良好  优秀", "\n\n", "D.优秀", "\n\n", "良好", "\n\n", "8. 执行下列代码的输出结果（）", "\n\n", "def f1(a=1,b):", "\n\n", "if a =1 and b!=1:", "\n\n", "print('你输了！')", "\n\n", "else", "\n\n", "print('你赢了！')", "\n\n", "f1(1,2)", "\n\n", "A.你输了！ B.你赢了！ C.不输出", "\n\n", "D.报错", "\n\n", "9．运行下列代码，输出结果是什么呢？", "\n\n", "def yunsuan(x, y):", "\n\n", "if x > 66 and y > 66:", "\n\n", "return x, y", "\n\n", "print(type(yunsuan(78, 90)))", "\n\n", "A.(78,90) B.[78,90] C. <class 'tuple'> D. <class 'int'>", "\n\n", "10.print(0.1==0.2)的输出结果是（）", "\n\n", "A.true", "\n\n", "B.false", "\n\n", "C.0", "\n\n", "D.False", "\n\n", "11.以下不是 python 中关键字的是（）", "\n\n", "A.def B.elif C.for", "\n\n", "D.define12.以下代码的输出结果是（）", "\n\n", "List1=[\"2020\",\"1903\",\"python\"]", "\n\n", "List1.append(2050)", "\n\n", "List1.append([2020,\"2020\"])", "\n\n", "print(List1)", "\n\n", "A. ['2020', '1903', 'python', 2050, 2020, '2020']", "\n\n", "B. ['2020', '1903', 'python', 2050, 2020]", "\n\n", "C. ['2020', '1903', 'python']", "\n\n", "D. ['2020', '1903', 'python', 2050, [2020, '2020']]", "\n\n", "13.以下说法错误的是（）", "\n\n", "A.random 库是 python 的标准库函数", "\n\n", "B.通过 import random 可以引入 random 随机库", "\n\n", "C.import random is suijiku 这行代码的意思是引入 random", "\n\n", "库并给随机库起别名", "\n\n", "D.通过 from random import *可以引入 random 随机库", "\n\n", "14.下面哪一段代码会报错（）", "\n\n", "A.int(78)", "\n\n", "B.int(78.4)", "\n\n", "C.int(\"93\")", "\n\n", "D. int(\"93.9\")15.以下程序输出的结果是（）", "\n\n", "a='mom'", "\n\n", "b='dad'", "\n\n", "print(\"{} loves {}\".format(a,b))", "\n\n", "A. mom loves dad", "\n\n", "B.dad loves mom", "\n\n", "C.a loves b", "\n\n", "D.b loves a", "\n\n", "16.下面程序输出的结果是（）", "\n\n", "s=\"期末考试\"", "\n\n", "print(\"{:*^30}\".format(s))", "\n\n", "A. *************期末考试*************", "\n\n", "B. *************s*************", "\n\n", "C. 期末考试**************************", "\n\n", "D. **************************", "\n\n", "17.以下说法正确的是（）", "\n\n", "A.元组中的元素可以被更改", "\n\n", "B.print(sorted([1,2,3,45,6],reverse=False))，这句代码的意思是", "\n\n", "将列表中的元素升序排列并打印出来", "\n\n", "C.列表的索引都是从 1 开始的", "\n\n", "D.自定义函数的返回值只能返回一个值18.下列代码的输出结果是：", "\n\n", "names = ['tom','lily','abc','jack','steven','bob','ha']", "\n\n", "jieguo=[i for i in names", "\n\n", "if len(i)>3]", "\n\n", "print(jieguo)", "\n\n", "A. ['lily', 'jack', 'steven']", "\n\n", "B. ['tom','abc' ,'ha']", "\n\n", "C. ['lily','abc','jack' ,'bob','ha']", "\n\n", "D. ['abc' ,'ha']", "\n\n", "19.以下输出结果正确的是（）", "\n\n", "he=1", "\n\n", "for i in range(1,11):", "\n\n", "he=he+i", "\n\n", "print(he)", "\n\n", "A.1", "\n\n", "B.56", "\n\n", "C.67", "\n\n", "D.57", "\n\n", "20. print(100%30)的输出结果是什么？", "\n\n", "A.10", "\n\n", "B.20", "\n\n", "C.30", "\n\n", "D.40", "\n\n", "21. print(len(\"qvdntdz5671\"))的输出结果是：", "\n\n", "A.8", "\n\n", "B.9", "\n\n", "C.10", "\n\n", "D.1122. 以下输出结果正确的是（）", "\n\n", "str1='python 程序设计'", "\n\n", "a=str1[7:2:-1]", "\n\n", "print(a)", "\n\n", "A. 序程 noh B.序程 no C.thon 程 D.hon 程序", "\n\n", "23. python 解释器自带的集成开发环境是（）", "\n\n", "A.IDE", "\n\n", "B.IDLE", "\n\n", "C.DLE", "\n\n", "D.ILE", "\n\n", "24.SyntaxError 这两个单词的意思（）", "\n\n", "A.变量名不存在", "\n\n", "B.语法错误", "\n\n", "C.类型错误", "\n\n", "D.无效语法", "\n\n", "25.input()函数的作用是（）", "\n\n", "A.输出程序结果", "\n\n", "B.将对象转换为整形", "\n\n", "C.获取用户输入", "\n\n", "D.将对象转化为浮点型", "\n\n", "26.python 文件的扩展名是（）", "\n\n", "A .PY B .py C .p", "\n\n", "D .python27.输出在终端的结果是（）", "\n\n", "from math import *", "\n\n", "a1= 5", "\n\n", "a2= 2", "\n\n", "b1= 8", "\n\n", "b2= 4", "\n\n", "jieguo = sqrt((a1-a2)**2 + (b1-b2)**2)", "\n\n", "print(jieguo)", "\n\n", "A.5.0", "\n\n", "B.4.0", "\n\n", "C.3.0", "\n\n", "D.2.0", "\n\n", "28.print()函数的作用是（）", "\n\n", "A.输出程序结果", "\n\n", "B.将对象转换为整形", "\n\n", "C.获取用户输入", "\n\n", "D.将对象转化为浮点型", "\n\n", "28.float()函数的作用是（）", "\n\n", "A.输出程序结果", "\n\n", "B.将对象转换为整形", "\n\n", "C.获取用户输入", "\n\n", "D.将对象转化为浮点型29.Python 中定义字典的符号是()", "\n\n", "A.[]", "\n\n", "B.{}", "\n\n", "C.()", "\n\n", "D.<>", "\n\n", "30.Python 中定义列表的符号是()", "\n\n", "A.[]", "\n\n", "B.{}", "\n\n", "C.()", "\n\n", "D.<>"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;/p&gt;\n&lt;p&gt;本次提问扣除的有问必答次数&amp;#xff0c;已经为您补发到账户&amp;#xff0c;我们后续会持续优化&amp;#xff0c;扩大我们的服务范围&amp;#xff0c;为您带来更好地服务。&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["如何实现1602LCD 掉电不丢失数据，上电显示原计数值？", ["怎么能在原有程序基础上，按下K1既能计数又能写入EEPROM，掉电数据不丢失，上电显示掉电前计数值？我用的STC51，应该有片内EEPROM吧？", "下面的程序没有扇区擦除，可我之前加上也不行。开发板电源关了再开就显示000，没法显示关电源前计数值，用片外的EEPROM也编过，上电就显示255，按键从001开始计数。找不到原因啊？以下是用片内编的程序：", "\n", "/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*\n", "* ", "文    件： 1602显示屏按键计数\n", "* ", "作    者：\n", "* ", "外部晶振： 11.0592MHZ\n", "* ", "编译环境： Keil μVisio4\n", "* ", "功    能： 数码管静态显示\n", "* ", "注意事项：\n", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*/\n#include<reg52.h>\nunsigned char code table1[] = \"COUNT:\";             //命名数组用来显示字符“COUNT：”\n#include <intrins.h>\n", "//定义类型，方便代码移植", "\n", " ", "\ntypedef unsigned char UINT8;\ntypedef unsigned int  UINT16;\ntypedef unsigned long UINT32;\n", " ", "\ntypedef char INT8;\ntypedef int  INT16;\ntypedef long INT32;\n/*\n定义寄存器 ISP\n*/\nsfr ISP", "_DATA = 0xe2;  // Flash数据寄存器\nsfr ISP_ADDRH = 0xe3;// Flash高字节地址寄存器\nsfr ISP_ADDRL = 0xe4;// Flash低字节地址寄存器\nsfr ISP_CMD = 0xe5;// Flash命令模式寄存器\nsfr ISP_TRIG = 0xe6;// Flash命令触发寄存器\nsfr ISP_CONTR = 0xe7;// ISP/IAP 控制寄存器\n                                  //全局变量初始化\nsbit RW = P2 ^ 5;\nsbit RS = P2 ^ 6;                                    //数据/命令选择接口\nsbit EN = P2 ^ 7;                                    //使能接口\nsbit k1 = P3 ^ 2;                            //按键1接在P3^2接口，对应外部中断0\nsbit k2 = P3 ^ 3;                            //按键2接在P3^3接口，对应外部中断1\nint count ;\n#define NOP()\n#define EEPROM_START_ADDRESS   0X2000\n//微秒级延时\nvoid DelayNus(UINT16 t)\n{\nUINT16 d=0;\nd=t;\n{\nNOP();\n}while(--d>0);\n}\n//毫秒级延时\nvoid DelayNms(UINT16 t)\n{\ndo\n{DelayNus(1000);\n}while(--t>0);\n}\n \n//EEPROM使能\nvoid EEPROMEnable(void)\n{\n    ISP_CONTR = 0x81;//使能并设置好等待时间 \n}\n//EEPROM禁用\nvoid EEPROMDisable(void)\n{\n    ISP_CONTR = 0x00;//禁止EEPROM\n    ISP_CMD = 0X00;//无ISP操作\n    ISP_TRIG = 0X00;//清零\n    ISP_ADDRH = 0X00;//清零\n    ISP_ADDRL = 0X00;//清零\n}\n//eeprom 设置读写地址(相对地址)\nvoid EEPROMSetAddress(UINT16 addr)\n{\n    addr += EEPROM_START_ADDRESS;//初始化地址\n    ISP_ADDRH = (UINT8)(addr >> 8);//设置读写地址高字节\n    ISP_ADDRL = (UINT8)addr;         //设置读写地址低字节\n}\n//EEPROM启动\nvoid EEPROMStart(void)\n{\n    ISP_TRIG = 0x46;\n    ISP_TRIG = 0xB9;\n}\n//EEPROM读取单个字节\nUINT8 EEPROMReadByte(UINT16 addr)\n{\n    ISP_DATA = 0X00;\n    ISP_CMD = 0X01;\n    EEPROMEnable();\n    EEPROMSetAddress(addr);\n    EEPROMStart();\n    DelayNus(10);//读取一个字节需要10us\n    EEPROMDisable();\n    return (ISP_DATA);\n}\n \n//EEPROM写入单个字节\nUINT8 EEPROMWriteByte(UINT16 addr, UINT8 byte)\n{\n \n    EEPROMEnable();\n    ISP_CMD = 0X02;\n    EEPROMSetAddress(addr);\n    ISP_DATA = byte;\n \n    EEPROMStart();\n    DelayNus(60);\n    EEPROMDisable();\n}\n/********************************************************\n函数名：毫秒级CPU延时函数\n调  用：delay_", "ms(?);\n参  数：1~65535（参数不可为0）\n返回值：无\n结  果：占用CPU方式延时与参数数值相同的毫秒时间\n备  注：应用于1T单片机时i<600，应用于12T单片机时i<125\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*/\nvoid delay(unsigned int a)\n{\n", "    unsigned int i;", "\n", "    while (--a != 0) {", "\n", "        for (i = 0; i < 125; i++);", "\n", "    }", "\n}\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*\n函数名：写指令函数\n调  用：writeinstruction(x);\n参  数：无符号十六进制数0x??\n返回值：无\n结  果：将指令发送给1602控制器\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*/\nvoid  writeinstruction(unsigned char x)\n{\n", "    RS = 0;", "\n", "    EN = 0;", "\n", "    RW = 0;", "\n", "    P0 = x;", "\n", "    delay(5);", "\n", "    EN = 1;", "\n", "    delay(5);", "\n", "    EN = 0;", "\n}\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**\n函数名：写数据函数\n调  用：writedata(y);\n参  数：无符号十六进制数0x??\n返回值：无\n结  果：将数据发送至1602内部的显示内存中\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid  writedata(unsigned char y)\n{\n    RS = 1;\n    EN = 0;\n    RW = 0;\n    P0 = y;\n    delay(5);\n    EN = 1;\n    delay(5);\n    EN = 0;\n}\n/**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "\n函数名：写变量函数\n调  用：writechar(z);\n参  数：无符号十六进制数0x??\n返回值：无\n结  果：将数据发送至1602内部的显示内存中\n备  注：不能将整数型变量count直接作为writedata的参数，需要将个、十、百位分别+48（0x30）转化成ascii码。\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid  writechar(unsigned char z)\n{\n    unsigned char A;\n    unsigned char B;\n    unsigned char C;\n    RS = 1;\n    EN = 0;\n    RW = 0;\n    A = z / 1 % 10;                                    //取个位\n    B = z / 10 % 10;                                //取十位\n    C = z / 100 % 10;                                //取百位\n    writedata(C + 48);\n    delay(5);\n    writedata(B + 48);                            //分离出变量的每一位数，再将每一位加上0x30，\n    delay(5);\n    writedata(A + 48);                            //这样就变成了ASCII码了，再送给LCD才能显示出来变量的每一位的值。\n    delay(5);\n}\n/**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "\n函数名：1602设置初始化函数\n调  用：init1602();\n参  数：无\n返回值：无\n结  果：初始化。具体指令在手册中查询。\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid  init1602()\n{\n    writeinstruction(0x38);                        //设置显示模式 指令码 00111000 => 0x38      \n    delay(5);\n    writeinstruction(0x0C);                        //[00001DCB]:D为显示开关，B为光标开关，C为光标闪烁开关。0x0C:开显示 不显示光标 不闪烁\n    delay(5);\n    writeinstruction(0x06);                        //写一个字符后地址指针加一\n    delay(5);\n    writeinstruction(0x01);                       //清屏       \n    delay(5);\n}\n/**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*\n函数名：主函数main\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "***/\nvoid  main()\n{\n    char i;\n    init1602();\n    writeinstruction(0x80);                      //设置数据地址指针从第一个开始\n    delay(5);\n    /* 初始化中断 */\n    EA = 1;\n    EX0 = 1;\n    EX1 = 1;\n    /* 写初始字符：COUNT：0 */\n    for (i = 0; i < 6; ++i)                     //逐个写入第一行数据\n    {\n        writedata(table1[i]);\n        delay(20);\n    }\n    writeinstruction(0x02);                     //第一行光标返回\n    writeinstruction(0x80 + 0x40);                 //数据地址指针指向第二行第一个    \n    count = EEPROMReadByte(0x2000);\n    count |= (EEPROMReadByte(0x2001)<<8);\n    writechar(count);\n    /*砸瓦鲁多 */\n    while (1);                                    //程序停在这里，等待中断到来\n}\n/**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "\n函数名：中断显示计数值函数\n调  用：按下button1\n参  数：无\n返回值：无\n结  果：显示当前计数值。具体指令在手册中查询。\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid Display()interrupt 0 using 1\n{\n    int i;\n    if (k1 == 0)\n    {\n        delay(10);\n        if (k1 == 0)\n        {\n            count++;                              //按键松开后，程序会运行到这里，计数值加1\n            while (!k1);                     //如果按键没有松开，程序会停在这里\n        }\n        writeinstruction(0x01);                     //清屏   \n        for (i = 0; i < 6; ++i)                  //逐个写入第一行数据\n        {\n            writedata(table1[i]);\n            delay(20);\n        }\n        writeinstruction(0x02);                 //回车\n        writeinstruction(0x80 + 0x40);          //换行                    \n        writechar(count);\n        EEPROMWriteByte(0x2000, count);\n        EEPROMWriteByte(0x2001, count>>8);\n    }\n    /**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "\n", "    函数名：中断清零函数", "\n", "    调  用：按下button2;", "\n", "    参  数：无", "\n", "    返回值：无", "\n", "    结  果：计数值清零。具体指令在手册中查询。", "\n", "    /*********************************************************/", "\n}\nvoid Clear() interrupt 2 using 1\n{\n", "    int i;", "\n", "    writeinstruction(0x01);", "\n", "    count = 0;                                     //count计数清零", "\n", "    for (i = 0; i < 6; ++i)                     //逐个写入第一行数据", "\n", "    {", "\n", "        writedata(table1[i]);", "\n", "        delay(20);", "\n", "    }", "\n", "    writeinstruction(0x02);                     //回车", "\n", "    writeinstruction(0x80 + 0x40);                 //换行", "\n", "    writechar(count);", "\n}\n\n\n", "\n", "我用的是普中科技的开发板：", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;\n&lt;span class=\"hljs-bullet\"&gt;*&lt;/span&gt; 文    件&amp;#xff1a; 1602显示屏按键计数\n&lt;span class=\"hljs-bullet\"&gt;*&lt;/span&gt; 作    者&amp;#xff1a;\n&lt;span class=\"hljs-bullet\"&gt;*&lt;/span&gt; 外部晶振&amp;#xff1a; 11.0592MHZ\n&lt;span class=\"hljs-bullet\"&gt;*&lt;/span&gt; 编译环境&amp;#xff1a; Keil μVisio4\n&lt;span class=\"hljs-bullet\"&gt;*&lt;/span&gt; 功    能&amp;#xff1a; 数码管静态显示\n&lt;span class=\"hljs-bullet\"&gt;*&lt;/span&gt; 注意事项&amp;#xff1a;\n&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;/\n&lt;span class=\"hljs-section\"&gt;#ifndef &lt;span class=\"hljs-strong\"&gt;__I2C&lt;span class=\"hljs-emphasis\"&gt;_H_&lt;/span&gt;\n#define __&lt;/span&gt;I2C&lt;span class=\"hljs-emphasis\"&gt;_H_&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-section\"&gt;#include &lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;reg52.h&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;\nsbit SCL &amp;#61; P2 ^ 1;\nsbit SDA &amp;#61; P2 ^ 0;\nvoid I2cStart();\nvoid I2cStop();\nunsigned char I2cSendByte(unsigned char dat);\nunsigned char I2cReadByte();\nvoid At24c02Write(unsigned char addr, unsigned char dat);\nunsigned char At24c02Read(unsigned char addr);\n&lt;span class=\"hljs-section\"&gt;#endif&lt;/span&gt;\n\nunsigned char code table1[] &amp;#61; &amp;#34;COUNT:&amp;#34;;             //命名数组用来显示字符“COUNT&amp;#xff1a;”\nunsigned char count &amp;#61; 0;     \nunsigned char countl;\nunsigned char num &amp;#61; 0;\n\nsbit RW &amp;#61; P2 ^ 5;\nsbit RS &amp;#61; P2 ^ 6;                                    //数据/命令选择接口\nsbit EN &amp;#61; P2 ^ 7;                                    //使能接口\nsbit k1 &amp;#61; P3 ^ 2;                            //按键1接在P3^2接口&amp;#xff0c;对应外部中断0\nsbit k2 &amp;#61; P3 ^ 3;                            //按键2接在P3^3接口&amp;#xff0c;对应外部中断1\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;\n函数名&amp;#xff1a;毫秒级CPU延时函数\n调  用&amp;#xff1a;delay&lt;span class=\"hljs-emphasis\"&gt;_ms(?);\n参  数&amp;#xff1a;1~65535&amp;#xff08;参数不可为0&amp;#xff09;\n返回值&amp;#xff1a;无\n结  果&amp;#xff1a;占用CPU方式延时与参数数值相同的毫秒时间\n备  注&amp;#xff1a;应用于1T单片机时i&amp;lt;600&amp;#xff0c;应用于12T单片机时i&amp;lt;125\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;/\nvoid delay(unsigned int a)\n{\n    unsigned int i;\n    while (--a !&amp;#61; 0) {\n        for (i &amp;#61; 0; i &amp;lt; 125; i&amp;#43;&amp;#43;);\n    }\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;\n函数名&amp;#xff1a;写指令函数\n调  用&amp;#xff1a;writeinstruction(x);\n参  数&amp;#xff1a;无符号十六进制数0x??\n返回值&amp;#xff1a;无\n结  果&amp;#xff1a;将指令发送给1602控制器\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;/\nvoid  writeinstruction(unsigned char x)\n{\n    RS &amp;#61; 0;\n    EN &amp;#61; 0;\n    RW &amp;#61; 0;\n    P0 &amp;#61; x;\n    delay(5);\n    EN &amp;#61; 1;\n    delay(5);\n    EN &amp;#61; 0;\n\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*\n函数名&amp;#xff1a;写数据函数\n调  用&amp;#xff1a;writedata(y);\n参  数&amp;#xff1a;无符号十六进制数0x??\n返回值&amp;#xff1a;无\n结  果&amp;#xff1a;将数据发送至1602内部的显示内存中\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*/\nvoid  writedata(unsigned char y)\n{\n    RS &amp;#61; 1;\n    EN &amp;#61; 0;\n    RW &amp;#61; 0;\n    P0 &amp;#61; y;\n    delay(5);\n    EN &amp;#61; 1;\n    delay(5);\n    EN &amp;#61; 0;\n}\nvoid  readdata(unsigned char y)\n{\n    RS &amp;#61; 1;\n    RW &amp;#61; 1;\n    EN &amp;#61; 0;\n    P0 &amp;#61; y;\n    delay(5);\n    EN &amp;#61; 1;\n    delay(5);\n    EN &amp;#61; 0;\n    delay(50);\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*\n函数名&amp;#xff1a;写变量函数\n调  用&amp;#xff1a;writechar(z);\n参  数&amp;#xff1a;无符号十六进制数0x??\n返回值&amp;#xff1a;无\n结  果&amp;#xff1a;将数据发送至1602内部的显示内存中\n备  注&amp;#xff1a;不能将整数型变量count直接作为writedata的参数&amp;#xff0c;需要将个、十、百位分别&amp;#43;48&amp;#xff08;0x30&amp;#xff09;转化成ascii码。\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*/\nvoid  writechar(unsigned char z)\n{\n    unsigned char A;\n    unsigned char B;\n    unsigned char C;\n    RS &amp;#61; 1;\n    EN &amp;#61; 0;\n    RW &amp;#61; 0;\n    A &amp;#61; z / 1 % 10;                                    //取个位\n    B &amp;#61; z / 10 % 10;                                //取十位\n    C &amp;#61; z / 100 % 10;                                //取百位\n    writedata(C &amp;#43; 48);\n    delay(5);\n    writedata(B &amp;#43; 48);                            //分离出变量的每一位数&amp;#xff0c;再将每一位加上0x30&amp;#xff0c;\n    delay(5);\n    writedata(A &amp;#43; 48);                            //这样就变成了ASCII码了&amp;#xff0c;再送给LCD才能显示出来变量的每一位的值。\n    delay(5);\n\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*\n函数名&amp;#xff1a;1602设置初始化函数\n调  用&amp;#xff1a;init1602();\n参  数&amp;#xff1a;无\n返回值&amp;#xff1a;无\n结  果&amp;#xff1a;初始化。具体指令在手册中查询。\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*/\nvoid  init1602()\n{\n    writeinstruction(0x38);                        //设置显示模式 指令码 00111000 &amp;#61;&amp;gt; 0x38      \n    delay(5);\n    writeinstruction(0x0C);                        //[00001DCB]:D为显示开关&amp;#xff0c;B为光标开关&amp;#xff0c;C为光标闪烁开关。0x0C:开显示 不显示光标 不闪烁\n    delay(5);\n    count &amp;#61; At24c02Read(1);\n    delay(5);\n    writeinstruction(0x06);                        //写一个字符后地址指针加一\n    delay(5);\n    writeinstruction(0x01);                       //清屏       \n    delay(5);\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**\n函数名&amp;#xff1a;主函数main\n/**&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;/\nvoid  main()\n{\n    char i;\n    init1602();\n    writeinstruction(0x80);                      //设置数据地址指针从第一个开始\n    delay(5);\n\n    /* 初始化中断 */\n    EA &amp;#61; 1;\n    EX0 &amp;#61; 1;\n    EX1 &amp;#61; 1;\n    /* 写初始字符&amp;#xff1a;COUNT&amp;#xff1a;0 */\n    for (i &amp;#61; 0; i &amp;lt; 6; &amp;#43;&amp;#43;i)                     //逐个写入第一行数据\n    {\n        writedata(table1[i]);\n        delay(20);\n\n    }\n    writeinstruction(0x02);                     //第一行光标返回\n    writeinstruction(0x80 &amp;#43; 0x40);                 //数据地址指针指向第二行第一个    \n    delay(10);\n    writechar(count);\n    delay(10);\n    count &amp;#61; At24c02Read(1);\n    countl &amp;#61; count;\n    delay(10);\n    /*砸瓦鲁多 */\n    while (1)                                 //程序停在这里&amp;#xff0c;等待中断到来\n    {\n        if (count!&amp;#61;countl)\n        {\n            At24c02Write(1, count);\n        }\n        countl &amp;#61; count;\n        delay(100);\n    }\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*\n函数名&amp;#xff1a;中断显示计数值函数\n调  用&amp;#xff1a;按下button1\n参  数&amp;#xff1a;无\n返回值&amp;#xff1a;无\n结  果&amp;#xff1a;显示当前计数值。具体指令在手册中查询。\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*/\nvoid Display()interrupt 0 using 1\n{\n    int i;\n    if (k1 &amp;#61;&amp;#61; 0)\n    {\n        delay(10);\n        if (k1 &amp;#61;&amp;#61; 0)\n        {\n            count&amp;#43;&amp;#43;;\n            delay(10);\n            readdata(count);\n            delay(100);\n\n            //按键松开后&amp;#xff0c;程序会运行到这里&amp;#xff0c;计数值加1\n            while (!k1);                     //如果按键没有松开&amp;#xff0c;程序会停在这里\n        }\n        writeinstruction(0x01);                     //清屏   \n        for (i &amp;#61; 0; i &amp;lt; 6; &amp;#43;&amp;#43;i)                  //逐个写入第一行数据\n        {\n            writedata(table1[i]);\n            delay(20);\n        }\n        writeinstruction(0x02);                 //回车\n        writeinstruction(0x80 &amp;#43; 0x40);          //换行\n        delay(15);\n        writechar(count);\n    }\n    /&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*\n    函数名&amp;#xff1a;中断清零函数\n    调  用&amp;#xff1a;按下button2;\n    参  数&amp;#xff1a;无\n    返回值&amp;#xff1a;无\n    结  果&amp;#xff1a;计数值清零。具体指令在手册中查询。\n    /&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*/\n}\n/*void Clear() interrupt 2 using 1\n{\n    int i;\n    writeinstruction(0x01);\n    count &amp;#61; 0;                                     //count计数清零\n    for (i &amp;#61; 0; i &amp;lt; 6; &amp;#43;&amp;#43;i)                     //逐个写入第一行数据\n    {\n        writedata(table1[i]);\n        delay(20);\n    }\n    writeinstruction(0x02);                     //回车\n    writeinstruction(0x80 &amp;#43; 0x40);                 //换行\n    writechar(count);\n}     */\n\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*\n*&lt;/span&gt; oˉêy??         : Delay10us()\n&lt;span class=\"hljs-emphasis\"&gt;* oˉêy1|?ü           : ?óê±10us\n*&lt;/span&gt; ê?è?           : ?T\n&lt;span class=\"hljs-emphasis\"&gt;* ê?3?              : ?T\n&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*/\nvoid Delay10us()\n{\n    unsigned char a, b;\n    for (b &amp;#61; 1; b &amp;gt; 0; b--)\n        for (a &amp;#61; 2; a &amp;gt; 0; a--);\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*\n*&lt;/span&gt; oˉêy??         : I2cStart()\n&lt;span class=\"hljs-emphasis\"&gt;* oˉêy1|?ü         : ?eê?D?o?&amp;#xffe1;o?úSCLê±?óD?o??ú??μ????ú??SDAD?o?2úéúò??????μ??\n*&lt;/span&gt; ê?è?           : ?T\n&lt;span class=\"hljs-emphasis\"&gt;* ê?3?              : ?T\n*&lt;/span&gt; ±?×&amp;#xffe0;           : ?eê???oóSDAoíSCL???a0\n**&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*&lt;/span&gt;/\nvoid I2cStart()\n{\n    SDA &amp;#61; 1;\n    Delay10us();\n    SCL &amp;#61; 1;\n    Delay10us();//?¨á&amp;#xffe0;ê±??ê?SDA±&amp;#xffe1;3?ê±??&amp;gt;4.7us\n    SDA &amp;#61; 0;\n    Delay10us();//±&amp;#xffe1;3?ê±??ê?&amp;gt;4us\n    SCL &amp;#61; 0;\n    Delay10us();\n}\n/**&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*&lt;/span&gt;\n&lt;span class=\"hljs-emphasis\"&gt;* oˉêy??         : I2cStop()\n*&lt;/span&gt; oˉêy1|?ü         : ???1D?o?&amp;#xffe1;o?úSCLê±?óD?o???μ????ú??SDAD?o?2úéúò???é?éy??\n&lt;span class=\"hljs-emphasis\"&gt;* ê?è?           : ?T\n*&lt;/span&gt; ê?3?              : ?T\n&lt;span class=\"hljs-emphasis\"&gt;* ±?×&amp;#xffe0;           : ?áê???oó±&amp;#xffe1;3?SDAoíSCL???a1&amp;#xffe1;?±íê?×ü?????D\n&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*/\nvoid I2cStop()\n{\n    SDA &amp;#61; 0;\n    Delay10us();\n    SCL &amp;#61; 1;\n    Delay10us();//?¨á&amp;#xffe0;ê±??′óóú4.7us\n    SDA &amp;#61; 1;\n    Delay10us();\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*\n*&lt;/span&gt; oˉêy??         : I2cSendByte(unsigned char dat)\n&lt;span class=\"hljs-emphasis\"&gt;* oˉêy1|?ü         : í¨1yI2C·&amp;#xffe0;?íò???×??ú?&amp;#xffe1;?úSCLê±?óD?o???μ????ú??&amp;#xffe1;?±&amp;#xffe1;3?·&amp;#xffe0;?íD?o?SDA±&amp;#xffe1;3??è?¨\n*&lt;/span&gt; ê?è?           : num\n&lt;span class=\"hljs-emphasis\"&gt;* ê?3?              : 0?ò1?&amp;#xffe1;·&amp;#xffe0;?í3é1|·μ??1&amp;#xffe1;?·&amp;#xffe0;?íê§°ü·μ??0\n*&lt;/span&gt; ±?×&amp;#xffe0;           : ·&amp;#xffe0;?ííêò???×??úSCL&amp;#61;0,SDA&amp;#61;1\n**&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*&lt;/span&gt;/\nunsigned char I2cSendByte(unsigned char dat)\n{\n    unsigned char a &amp;#61; 0, b &amp;#61; 0;//×?′ó255&amp;#xffe1;?ò????ú?÷?ü?ú?a1us&amp;#xffe1;?×?′ó?óê±255us?&amp;#xffe1;        \n    for (a &amp;#61; 0; a &amp;lt; 8; a&amp;#43;&amp;#43;)//òa·&amp;#xffe0;?í8??&amp;#xffe1;?′ó×??????aê?\n    {\n        SDA &amp;#61; dat &amp;gt;&amp;gt; 7;     //?eê?D?o???oóSCL&amp;#61;0&amp;#xffe1;??ùò??éò??±?ó??±?SDAD?o?\n        dat &amp;#61; dat &amp;lt;&amp;lt; 1;\n        Delay10us();\n        SCL &amp;#61; 1;\n        Delay10us();//?¨á&amp;#xffe0;ê±??&amp;gt;4.7us\n        SCL &amp;#61; 0;\n        Delay10us();//ê±??′óóú4us        \n    }\n    SDA &amp;#61; 1;\n    Delay10us();\n    SCL &amp;#61; 1;\n    while (SDA)//μè′yó|′e&amp;#xffe1;?ò2?íê?μè′y′óéè±?°?SDAà-μí\n    {\n        b&amp;#43;&amp;#43;;\n        if (b &amp;gt; 200)     //è?1?3?1y2000us??óDó|′e·&amp;#xffe0;?íê§°ü&amp;#xffe1;??ò???a·?ó|′e&amp;#xffe1;?±íê??óê??áê?\n        {\n            SCL &amp;#61; 0;\n            Delay10us();\n            return 0;\n        }\n    }\n    SCL &amp;#61; 0;\n    Delay10us();\n    return 1;\n}\n/**&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;*&lt;/span&gt;\n&lt;span class=\"hljs-emphasis\"&gt;* oˉêy??         : I2cReadByte()\n*&lt;/span&gt; oˉêy1|?ü           : ê1ó?I2c?áè?ò???×??ú\n&lt;span class=\"hljs-emphasis\"&gt;* ê?è?           : ?T\n*&lt;/span&gt; ê?3?              : dat\n&lt;span class=\"hljs-emphasis\"&gt;* ±?×&amp;#xffe0;           : ?óê?íêò???×??úSCL&amp;#61;0,SDA&amp;#61;1.\n&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*/\nunsigned char I2cReadByte()\n{\n    unsigned char a &amp;#61; 0, dat &amp;#61; 0;\n    SDA &amp;#61; 1;            //?eê?oí·&amp;#xffe0;?íò???×??ú??oóSCL??ê?0\n    Delay10us();\n    for (a &amp;#61; 0; a &amp;lt; 8; a&amp;#43;&amp;#43;)//?óê?8??×??ú\n    {\n        SCL &amp;#61; 1;\n        Delay10us();\n        dat &amp;lt;&amp;lt;&amp;#61; 1;\n        dat |&amp;#61; SDA;\n        Delay10us();\n        SCL &amp;#61; 0;\n        Delay10us();\n    }\n    return dat;\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*\n*&lt;/span&gt; oˉêy??         : void At24c02Write(unsigned char addr,unsigned char dat)\n&lt;span class=\"hljs-emphasis\"&gt;* oˉêy1|?ü           : íù24c02μ?ò???μ??·D′è?ò???êy?Y\n*&lt;/span&gt; ê?è?           : ?T\n&lt;span class=\"hljs-emphasis\"&gt;* ê?3?              : ?T\n&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*/\nvoid At24c02Write(unsigned char addr, unsigned char dat)\n{\n    I2cStart();\n    I2cSendByte(0xa0);//·&amp;#xffe0;?íD′?÷?tμ??·\n    I2cSendByte(addr);//·&amp;#xffe0;?íòaD′è??ú′?μ??·\n    I2cSendByte(dat);    //·&amp;#xffe0;?íêy?Y\n    I2cStop();\n}\n/&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*\n*&lt;/span&gt; oˉêy??         : unsigned char At24c02Read(unsigned char addr)\n&lt;span class=\"hljs-emphasis\"&gt;* oˉêy1|?ü           : ?áè?24c02μ?ò???μ??·μ?ò???êy?Y\n*&lt;/span&gt; ê?è?           : ?T\n&lt;span class=\"hljs-emphasis\"&gt;* ê?3?              : ?T\n&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;****&lt;/span&gt;&lt;span class=\"hljs-strong\"&gt;**&lt;span class=\"hljs-emphasis\"&gt;*/\nunsigned char At24c02Read(unsigned char addr)\n{\n    unsigned char num;\n    I2cStart();\n    I2cSendByte(0xa0); //·&amp;#xffe0;?íD′?÷?tμ??·\n    I2cSendByte(addr); //·&amp;#xffe0;?íòa?áè?μ?μ??·\n    I2cStart();\n    I2cSendByte(0xa1); //·&amp;#xffe0;?í?á?÷?tμ??·\n    num &amp;#61; I2cReadByte(); //?áè?êy?Y\n    I2cStop();\n    return num;\n}\n\n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["1602掉电怎么保存数据，上电显示掉电前数据？", ["开发板有256字节片内EEPROM,程序加了1602读功能，是不是哪没写对啊？就想实现掉电 数据保留，上电显示掉电前数据，这么难吗？", "开个价，只要能搞定，价格合理的！普中科技的板子。", "\n", "/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*\n", "* ", "文    件： 1602显示屏按键计数\n", "* ", "作    者：\n", "* ", "外部晶振： 11.0592MHZ\n", "* ", "编译环境： Keil μVisio4\n", "* ", "功    能： 数码管静态显示\n", "* ", "注意事项：\n", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*/\n#include<reg52.h>\nunsigned char code table1[] = \"COUNT:\";             //命名数组用来显示字符“COUNT：”\n#include <intrins.h>\n", "//定义类型，方便代码移植", "\n", " ", "\ntypedef unsigned char UINT8;\ntypedef unsigned int  UINT16;\ntypedef unsigned long UINT32;\n", " ", "\ntypedef char INT8;\ntypedef int  INT16;\ntypedef long INT32;\n/*\n定义寄存器 ISP\n*/\nsfr ISP", "_DATA = 0xe2;  // Flash数据寄存器\nsfr ISP_ADDRH = 0xe3;// Flash高字节地址寄存器\nsfr ISP_ADDRL = 0xe4;// Flash低字节地址寄存器\nsfr ISP_CMD = 0xe5;// Flash命令模式寄存器\nsfr ISP_TRIG = 0xe6;// Flash命令触发寄存器\nsfr ISP_CONTR = 0xe7;// ISP/IAP 控制寄存器\n                                  //全局变量初始化\nsbit RW = P2 ^ 5;\nsbit RS = P2 ^ 6;                                    //数据/命令选择接口\nsbit EN = P2 ^ 7;                                    //使能接口\nsbit k1 = P3 ^ 2;                            //按键1接在P3^2接口，对应外部中断0\nsbit k2 = P3 ^ 3;                            //按键2接在P3^3接口，对应外部中断1\nint count ;\n#define NOP()\n#define EEPROM_START_ADDRESS   0X2000\n//微秒级延时\nvoid DelayNus(UINT16 t)\n{\nUINT16 d=0;\nd=t;\n{\nNOP();\n}while(--d>0);\n}\n//毫秒级延时\nvoid DelayNms(UINT16 t)\n{\ndo\n{DelayNus(1000);\n}while(--t>0);\n}\n//EEPROM使能\nvoid EEPROMEnable(void)\n{\n    ISP_CONTR = 0x81;//使能并设置好等待时间 \n}\n//EEPROM禁用\nvoid EEPROMDisable(void)\n{\n    ISP_CONTR = 0x00;//禁止EEPROM\n    ISP_CMD = 0X00;//无ISP操作\n    ISP_TRIG = 0X00;//清零\n    ISP_ADDRH = 0X00;//清零\n    ISP_ADDRL = 0X00;//清零\n}\n//eeprom 设置读写地址(相对地址)\nvoid EEPROMSetAddress(UINT16 addr)\n{\n    addr += EEPROM_START_ADDRESS;//初始化地址\n    ISP_ADDRH = (UINT8)(addr >> 8);//设置读写地址高字节\n    ISP_ADDRL = (UINT8)addr;         //设置读写地址低字节\n}\n//EEPROM启动\nvoid EEPROMStart(void)\n{\n    ISP_TRIG = 0x46;\n    ISP_TRIG = 0xB9;\n}\n//EEPROM读取单个字节\nUINT8 EEPROMReadByte(UINT16 addr)\n{\n    ISP_DATA = 0X00;\n    ISP_CMD = 0X01;\n    EEPROMEnable();\n    EEPROMSetAddress(addr);\n    EEPROMStart();\n    DelayNus(10);//读取一个字节需要10us\n    EEPROMDisable();\n    return (ISP_DATA);\n}\n \n//EEPROM写入单个字节\nUINT8 EEPROMWriteByte(UINT16 addr, UINT8 byte)\n{\n \n    EEPROMEnable();\n    ISP_CMD = 0X02;\n    EEPROMSetAddress(addr);\n    ISP_DATA = byte;\n \n    EEPROMStart();\n    DelayNus(60);\n    EEPROMDisable();\n}\nUINT8 EEPROMSectorErase(UINT16 addr)\n{\n    ISP_CMD=0X03;\n    EEPROMEnable();\n    EEPROMSetAddress(addr);\n    EEPROMStart();\n    DelayNus(10);\n    EEPROMDisable();\n    }\n/********************************************************\n函数名：毫秒级CPU延时函数\n调  用：delay_", "ms(?);\n参  数：1~65535（参数不可为0）\n返回值：无\n结  果：占用CPU方式延时与参数数值相同的毫秒时间\n备  注：应用于1T单片机时i<600，应用于12T单片机时i<125\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*/\nvoid delay(unsigned int a)\n{\n", "    unsigned int i;", "\n", "    while (--a != 0) {", "\n", "        for (i = 0; i < 125; i++);", "\n", "    }", "\n}\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*\n函数名：写指令函数\n调  用：writeinstruction(x);\n参  数：无符号十六进制数0x??\n返回值：无\n结  果：将指令发送给1602控制器\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*/\nvoid  writeinstruction(unsigned char x)\n{\n", "    RS = 0;", "\n", "    EN = 0;", "\n", "    RW = 0;", "\n", "    P0 = x;", "\n", "    delay(5);", "\n", "    EN = 1;", "\n", "    delay(5);", "\n", "    EN = 0;", "\n}\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**\n函数名：写数据函数\n调  用：writedata(y);\n参  数：无符号十六进制数0x??\n返回值：无\n结  果：将数据发送至1602内部的显示内存中\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid  writedata(unsigned char y)\n{\n    RS = 1;\n    EN = 0;\n    RW = 0;\n    P0 = y;\n    delay(5);\n    EN = 1;\n    delay(5);\n    EN = 0;\n}\nvoid  readdata(unsigned char y)\n{\n    RS = 1;\n    RW = 1;\n    EN = 0;\n    P0 = y;\n    delay(5);\n    EN = 1;\n    delay(5);\n    EN = 0;\n    EEPROMWriteByte(0x2000, count);\n    EEPROMWriteByte(0x2001, count>>8);\n}\n/**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "***", "*\n函数名：写变量函数\n调  用：writechar(z);\n参  数：无符号十六进制数0x??\n返回值：无\n结  果：将数据发送至1602内部的显示内存中\n备  注：不能将整数型变量count直接作为writedata的参数，需要将个、十、百位分别+48（0x30）转化成ascii码。\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid  writechar(unsigned char z)\n{\n    unsigned char A;\n    unsigned char B;\n    unsigned char C;\n    RS = 1;\n    EN = 0;\n    RW = 0;\n    A = z / 1 % 10;                                    //取个位\n    B = z / 10 % 10;                                //取十位\n    C = z / 100 % 10;                                //取百位\n    writedata(C + 48);\n    delay(5);\n    writedata(B + 48);                            //分离出变量的每一位数，再将每一位加上0x30，\n    delay(5);\n    writedata(A + 48);                            //这样就变成了ASCII码了，再送给LCD才能显示出来变量的每一位的值。\n    delay(5);\n}\n/**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "\n函数名：1602设置初始化函数\n调  用：init1602();\n参  数：无\n返回值：无\n结  果：初始化。具体指令在手册中查询。\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid  init1602()\n{\n    writeinstruction(0x38);                        //设置显示模式 指令码 00111000 => 0x38      \n    delay(5);\n    writeinstruction(0x0C);                        //[00001DCB]:D为显示开关，B为光标开关，C为光标闪烁开关。0x0C:开显示 不显示光标 不闪烁\n    delay(5);\n    writeinstruction(0x06);                        //写一个字符后地址指针加一\n    delay(5);\n    writeinstruction(0x01);                       //清屏       \n    delay(5);\n}\n/**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*\n函数名：主函数main\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "***", "/\nvoid  main()\n{\n", "    char i;", "\n", "    EEPROMSectorErase(0);", "\n", "    EEPROMWriteByte(0x2000, count);", "\n", "    EEPROMWriteByte(0x2001, count>>8);", "\n", "    count = EEPROMReadByte(0x2000);", "\n", "    count |= (EEPROMReadByte(0x2001)<<8);", "\n", "    init1602();", "\n\n", "    writeinstruction(0x80);                      //设置数据地址指针从第一个开始", "\n", "    delay(5);", "\n", "    /* 初始化中断 */", "\n", "    EA = 1;", "\n", "    EX0 = 1;", "\n", "    EX1 = 1;", "\n", "    /* 写初始字符：COUNT：0 */", "\n", "    for (i = 0; i < 6; ++i)                     //逐个写入第一行数据", "\n", "    {", "\n", "        writedata(table1[i]);", "\n", "        delay(10);", "\n", "    }", "\n", "    writeinstruction(0x02);                     //第一行光标返回", "\n", "    writeinstruction(0x80 + 0x40);                 //数据地址指针指向第二行第一个    ", "\n", "    ", "\n", "    ", "\n", "    writechar(count);", "\n", "    /*砸瓦鲁多 */", "\n", "    while (1);                                    //程序停在这里，等待中断到来", "\n}\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**\n函数名：中断显示计数值函数\n调  用：按下button1\n参  数：无\n返回值：无\n结  果：显示当前计数值。具体指令在手册中查询。\n/", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "**/\nvoid Display()interrupt 0 using 1\n{\n    int i;\n    if (k1 == 0)\n    {\n        delay(20);\n        if (k1 == 0)\n        {\n         \n            count++;                              //按键松开后，程序会运行到这里，计数值加1\n            while (!k1);                          //如果按键没有松开，程序会停在这里\n        }\n        writeinstruction(0x01);                     //清屏   \n        for (i = 0; i < 6; ++i)                  //逐个写入第一行数据\n        {\n            writedata(table1[i]);\n            delay(20);\n        }\n        \n        EEPROMWriteByte(0x2000, count);\n        EEPROMWriteByte(0x2001, count>>8);\n        writeinstruction(0x02);                 //回车\n        writeinstruction(0x80 + 0x40);          //换行                    \n        writechar(count);\n        \n    }\n    /**", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "*****", "\n", "    函数名：中断清零函数", "\n", "    调  用：按下button2;", "\n", "    参  数：无", "\n", "    返回值：无", "\n", "    结  果：计数值清零。具体指令在手册中查询。", "\n", "    /*********************************************************/", "\n}\nvoid Clear() interrupt 2 using 1\n{\n", "    int i;", "\n", "    writeinstruction(0x01);", "\n", "    count = 0;                                     //count计数清零", "\n", "    for (i = 0; i < 6; ++i)                     //逐个写入第一行数据", "\n", "    {", "\n", "        writedata(table1[i]);", "\n", "        delay(20);", "\n", "    }", "\n", "    writeinstruction(0x02);                     //回车", "\n", "    writeinstruction(0x80 + 0x40);                 //换行", "\n", "    writechar(count);", "\n}\n\n\n", "\n", "上电就显示000", "\n"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;DABDD✘✘✔&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["2019-2021C语言考试试题", ["1：以下叙述不正确的是：（  ）", "\n\n", "A：一个C源程序可由一个或多个函数构成", "\n\n", "B：一个C源程序必须包含一个main函数", "\n\n", "C：C程序的基本组成单位是函数", "\n\n", "D：在对一个C程序进行编译的过程中，可以发现注释中的拼写错误", "\n\n", "2：以下说法正确的是（ ）", "\n\n", "A：C源程序经编译和链接后才可直接运行产生结果", "\n\n", "B：C源程序经编译后才可直接运行产生结果", "\n\n", "C：C源程序经链接后才可直接运行产生结果", "\n\n", "D：C源程序可以直接运行产生结果", "\n\n", "3：字符常量在内存中存放的是：（  ）", "\n\n", "A：BCD码", "\n\n", "B：ASCII码", "\n\n", "C：内部码", "\n\n", "D：十进制码", "\n\n", "4：下列程序段执行后，变量X的值是（ ）", "\n\n", "     For(x=2;x<10;x+=3)", "\n\n", "A:2", "\n\n", "B:9", "\n\n", "C:10", "\n\n", "D;11", "\n\n", "5：int a[4]={2,3,5,9};其中a[3]值为（ ）", "\n\n", "A：2", "\n\n", "B：3", "\n\n", "C：5", "\n\n", "D：9", "\n\n", "6:若有以下数组说明，则数值最小的和最大的元素下标分别是（ ）", "\n\n", "       int a[10]={1,2,3,4,5,6,7,8,9,10}", "\n\n", "A:1,10", "\n\n", "B:0,10", "\n\n", "C:1,9", "\n\n", "D:0,9", "\n\n", "判断：", "\n\n", "1：若a为int型变量，则表达式（a=5*5,a*2）,a+6的值为26   （   ）", "\n\n", "2：若以下变量均是整型，且num=sum=7;则计算表达式sun=num++,sun++,++num后sun的值为8 （   ）", "\n\n", "3：已知 A=6  B=1  C=4  ，表达式A>B&&C>AII!A<B&&!C>B的值是1 （"]], "Tag": "程序设计"}
{"Answer": "只有一个啊,哪来的两个?另外我只看到mainMenu这个,他跟main函数完全不一样", "Konwledge_Point": "字符型", "Question": ["有两个main函数，求大佬解答一下。", ["#include", "\n#include", "\n#include", "\n#include", "\nint  login()", "\n{", "\n  char  secercode[6];", "\n  int  number  =  3;", "\n  printf(\"\\n\\n\\n\");", "\n  printf(\"\\t\\t**********欢迎使用管理系统**************\");", "\n  printf(\"\\n\\n\");", "\n  scanf(\"%s\",secercode);", "\n  while  (number>0)", "\n  {", "\n    if  (strcmp(secercode,\"88888888\")==0)", "\n    return  EXIT_SUCCESS;  //while语句里面的结束循环用break是不对的", "\n    else", "\n    {", "\n      number--;", "\n      if(number<=0)break;", "\n      printf(\"\\t\\t\\t  还有%d次机会\\n\",number);", "\n      printf(\"\\n\\t\\t\\t请输入密码:  \");", "\n      scanf(\"%s\",secercode);", "\n    }", "\n  }", "\n  if(number>0)  return  1;", "\n  else  return  0;", "\n}", "\nmainMenu()", "\n{", "\n  printf(\"密码正确  \\n\");", "\n  return  0;", "\n}", "\nmain()", "\n{", "\n  if  (login()  ==  0)return  1;", "\n  do", "\n  {", "\n    mainMenu();", "\n  }while(1);", "\n}    ", "\n\n", "typedef  struct  tagCustomer", "\n{", "\n    char  m_ID[18];          /*身份证号码*/", "\n    char  m_name[10];      /*顾客姓名*/", "\n    int    m_age;                /*顾客年龄*/", "\n    char    m_sex[6];        /*顾客性别*/", "\n    int  num;", "\n}Customer;/*顾客结构*/", "\n\n", "typedef  struct  tagRoom", "\n{", "\n    int  m_num;                  /*房间号*/", "\n    int  m_floor;              /*楼层*/", "\n    int  m_price;              /*价格*/", "\n    int  m_use;                  /*是否已入住*/", "\n}Room;/*房间结构*/", "\nint  i,j=0,age,num,floor,price,use,n;", "\nint  reg  =0;", "\nCustomer  cus[5];", "\nRoom        r[5];", "\nint  count=5;", "\nchar  ID[18],name[10],sex[6];", "\nFILE  *fproom;", "\nFILE  *fpcustomer;", "\n\n", "void  Customer_Input()", "\n{", "\n    if(count<=5)", "\n    {", "\n        printf(\"请输入身份证号(18位数字):\");", "\n        scanf(\"%s\",&cus[j].m_ID);", "\n        printf(\"请输入姓名(10位字符)\");", "\n        scanf(\"%s\",&cus[j].m_name);", "\n        printf(\"请输入年龄(数字型)\");", "\n        scanf(\"%d\",&cus[j].m_age);", "\n        printf(\"请输入性别(男或女):\");", "\n        scanf(\"%s\",&cus[j].m_sex);", "\n    }", "\n    else", "\n    {", "\n        printf(\"\\n  存储空间已满!\");", "\n    }", "\n    printf(\"\\n\\r顾客可以住在:\");", "\n    printf(\"\\n\\r房间号      楼层      价格      是否空闲(1:空闲0：已使用)\");", "\n    for(i=0;i<count;i++)", "\n    {", "\n        if(r[i].m_use==1)", "\n        {", "\n            printf(\"\\n\\r%d            %d              %d              %d  \",r[i].m_num,r[i].m_floor,r[i].m_price,r[i].m_use);", "\n        }", "\n    }", "\n    printf(\"\\n\\r请你输入房间号:\");", "\n    scanf(\"%d\",&num);", "\n    reg  =  0;", "\n    for(i=0;i<count;i++)", "\n    {", "\n        if(r[i].m_use==1&&r[i].m_num==num)", "\n        {", "\n            r[i].m_use  =  0;", "\n            printf(\"\\n  登记成功!\\n\");", "\n            cus[j].num=r[i].m_num  ;", "\n            j=j+1;", "\n            reg=1;", "\n        }", "\n    }", "\n    if(reg==0)", "\n    {", "\n        printf(\"\\n  登记失败!\\n\");", "\n    }", "\n\n", "}", "\nvoid  Customer_ListOut()", "\n{", "\n    if(count<=5)", "\n    {", "\n        printf(\"请输入身份证号(18位数字):\");", "\n        scanf(\"%s\",&ID);", "\n        for(i=0;i<count;i++)", "\n        {", "\n            if(strcmp(cus[i].m_ID,ID)==0)", "\n            {", "\n                printf(\"\\n\\r顾客身份证号：%s      姓名：%s      年龄：%d      性别：%s  \\n\",cus[i].m_ID,cus[i].m_name,cus[i].m_age,cus[i].m_sex);", "\n            }", "\n        }", "\n    }", "\n    else", "\n    {", "\n        printf(\"\\n  \\n\");", "\n    }", "\n}", "\nvoid  Room_ListOut()", "\n{", "\n    printf(\"\\n\\r房间号      楼层      价格      是否空闲(1:空闲0：已使用)\");", "\n    for(i=0;i<count;i++)", "\n    {", "\n        if(r[i].m_use==1)", "\n        {", "\n            printf(\"\\n\\r%d            %d              %d              %d  \",r[i].m_num,r[i].m_floor,r[i].m_price,r[i].m_use);", "\n        }", "\n    }", "\n}", "\nvoid  PerCustomer_Search()", "\n{", "\n    if(count<=5)", "\n    {", "\n        printf(\"请输入身份证号(18位数字):\");", "\n        scanf(\"%s\",&cus[j].m_ID);", "\n        printf(\"请输入姓名(10位字符)\");", "\n        scanf(\"%s\",&cus[j].m_name);", "\n        printf(\"请输入年龄(数字型)\");", "\n        scanf(\"%d\",&cus[j].m_age);", "\n        printf(\"请输入性别(男或女):\");", "\n        scanf(\"%s\",&cus[j].m_sex);", "\n    }", "\n    else", "\n    {", "\n        printf(\"\\n  住房已满!\");", "\n    }", "\n    printf(\"\\n\\r顾客可以预订:\");", "\n    printf(\"\\n\\r房间号      楼层      价格      是否空闲(1:空闲0：已使用)\");", "\n    for(i=0;i<count;i++)", "\n    {", "\n        if(r[i].m_use==1)", "\n        {", "\n            printf(\"\\n\\r%d            %d              %d              %d  \",r[i].m_num,r[i].m_floor,r[i].m_price,r[i].m_use);", "\n        }", "\n    }", "\n    printf(\"\\n  请你输入要预订的房间号:\");", "\n    scanf(\"%d\",&num);", "\n    reg  =  0;", "\n    for(i=0;i<count;i++)", "\n    {", "\n        if(r[i].m_use==1&&r[i].m_num==num)", "\n        {", "\n            r[i].m_use  =  0;", "\n            printf(\"\\n  预订成功!\\n\");", "\n            cus[j].num=r[i].m_num  ;", "\n            j=j+1;", "\n            reg=1;", "\n        }", "\n    }", "\n    if(reg==0)", "\n    {", "\n        printf(\"\\n  预订失败!\\n\");", "\n    }", "\n}", "\nvoid  UnCustomer_Out()", "\n{", "\n    int  k;", "\n    printf(\"\\n  请输入要退房顾客身份证：\");", "\n        scanf(\"%s\",&ID);", "\n                for(i=0;i<count;i++)", "\n                {", "\n                    if(strcmp(cus[i].m_ID,ID)==0)", "\n                    {", "\n                        printf(\"\\n\\r顾客身份证号：%s      姓名：%s      年龄：%d      性别：%s  \\n\\r已经成功退房!\",cus[i].m_ID,cus[i].m_name,cus[i].m_age,cus[i].m_sex);", "\n                        for(k=0;k<count;k++)", "\n                            if(r[k].m_num==cus[i].num)", "\n                                r[k].m_use=1;", "\n                        memset(&cus[i],0,sizeof(Customer));", "\n\n", "                }\n            }\n", "\n\n", "}", "\nvoid  Customer_Goaway()", "\n{", "\n    fproom=fopen(\"room\",\"wb+\");", "\n    fwrite((void  *)&r,sizeof(Room),count,fproom);", "\n    fclose(fproom);", "\n\n", "fpcustomer=fopen(\"customer\",\"wb+\");      \nfwrite((void  *)&r,sizeof(Room),count,fpcustomer);\nfclose(fpcustomer); \nexit(0);\n", "\n\n", "}", "\n\n", "{", "\n    fproom=fopen(\"room\",\"wb\");", "\n    if(fproom!=NULL)", "\n    {", "\n        for(i=0;i<count;i++)", "\n        {", "\n            int  id=100;", "\n            r[i].m_num=i+100;", "\n            r[i].m_floor=1;", "\n            r[i].m_price=100;", "\n            r[i].m_use=1;", "\n        }", "\n        fwrite((void  *)&r,sizeof(Room),count,fproom);", "\n        fclose(fproom);", "\n    }", "\n    else", "\n    {", "\n        printf(\"\\n---文件打开失败--\");", "\n    }", "\n    for(;;)", "\n    {", "\n\n", "    printf(\"\\n\");\n    printf(\"/******************************************\\\\\\n\");\n    printf(\"*                                                                                    *\\n\");\n    printf(\"*                              酒店管理系统                              *\\n\");\n    printf(\"*                                    主菜单                                    *\\n\");\n    printf(\"*                                                                                    *\\n\");\n    printf(\"*                                1.顾客登记                                *\\n\");\n    printf(\"*                                2.查询顾客信息                        *\\n\");\n    printf(\"*                                3.查询空房间                            *\\n\");\n    printf(\"*                                4.预订房间                                *\\n\");\n    printf(\"*                                5.退订房间                                *\\n\");\n    printf(\"*                                6.保存并退出系统                    *\\n\");  \n    printf(\"*                                                                                    *\\n\");\n    printf(\"\\\\******************************************/\\n\\n\");\n    printf(\"请输入选择项(1-6):\");\n    scanf(\"%d\",&n);\n    printf(\"\\n\\n\\n\\n\");\n    if(n>0&&n<=6)\n    {\n        switch(n)\n        {\n        case  1:Customer_Input();break;\n        case  2:Customer_ListOut();break;/*查询顾客信息*/\n        case  3:Room_ListOut();break;/*查询空房间*/\n        case  4:PerCustomer_Search();break;/*预订房间*/\n        case  5:UnCustomer_Out();break;/*退订房间*/\n        case  6:Customer_Goaway();    /*保存退出*/\n        }\n    }\n    else  \n    {\n        printf(\"***********************************************************************\\n\");\n        printf(\"*                                                                                                                                            *\\n\");\n        printf(\"*                                                            输入错误!                                                              *\\n\");\n        printf(\"*                                                            请退出!                                                                  *\\n\");\n        printf(\"*                                                                                                                                            *\\n\");\n        printf(\"***********************************************************************\\n\");\n        break;\n    }\n}\n", "\n\n", "}"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/233904365166199.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["JVM错误日志(hs_err_pid.log)原因分析", ["linux上应用服务总是会突然JVM虚拟机崩溃直接挂掉（14天左右一次）。", "代码如下：", "\n", "**\n     * 生成最新的推荐图\n     *\n     * ", "@param", " prdJson\n     * ", "@param", " outPath\n     */\n    ", "private", " ", "void", " ", "generateRecommendImg", "(JSONObject prdJson, String outPath)", " ", "throws", " Exception {\n        ", "BufferedImage", " ", "image", " ", "=", " ", "null", ";\n        ", "try", "(", "FileInputStream", " ", "imgFileInput", " ", "=", " ", "new", " ", "FileInputStream", "(TOOL_FILE_SRC+", "\"initTemplate.png\"", ");){\n            image = ImageIO.read(imgFileInput);\n            ", "if", " (image == ", "null", ") {\n                log.info(", "\"未找到初始模版-推荐图\"", ");\n                ", "return", ";\n            }\n        } ", "catch", " (FileNotFoundException e) {\n            log.error(", "\"文件输入流异常\"", ",e);\n        } ", "catch", " (IOException e) {\n            log.error(", "\"IO异常\"", ",e);\n        }\n        ", "int", " ", "width", " ", "=", " image.getWidth(", "null", ") == -", "1", " ? ", "690", " : image.getWidth(", "null", ");\n        ", "int", " ", "height", " ", "=", " image.getHeight(", "null", ") == -", "1", " ? ", "545", " : image.getHeight(", "null", ")-", "1", ";\n        ", "BufferedImage", " ", "bimage", " ", "=", " ", "new", " ", "BufferedImage", "(width, height, BufferedImage.TYPE_INT_RGB);\n        ", "Graphics2D", " ", "g", " ", "=", " bimage.createGraphics();\n        ", "//消除文字锯齿", "\n        g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\n        g.drawImage(image, ", "0", ", ", "0", ", ", "null", ");\n\n        ", "int", " ", "iconWidth", " ", "=", " ImgUtil.getIconWidth(WILL_SALEICON_FILE_SRC)+", "10", ";\n\n        ", "//1、名称", "\n        ImgUtil.pressWordWatermark(prdJson.getString(", "\"tAShortName\"", ") + ", "\"-\"", " + prdJson.getString(", "\"prdName\"", "), g, ", "new", " ", "Color", "(", "39", ", ", "39", ", ", "46", "),\n                ImgUtil.getDefinedFont(PINGFANG_SC_FILE_SRC, Font.BOLD, ", "34", "), width, iconWidth, (", "float", ") (height * ", "0.15", "));\n        ", "//2、周期", "\n        ImgUtil.pressWordWatermark(prdJson.getString(", "\"cycleDays\"", "), g, ", "new", " ", "Color", "(", "39", ", ", "39", ", ", "46", "),\n                ImgUtil.getDefinedFont(PINGFANG_SC_FILE_SRC, Font.PLAIN, ", "26", "), width, ", "null", ", (", "float", ") (height * ", "0.26", "));\n        ", "//3、业绩指标值", "\n        ", "Boolean", " ", "isContainChinese", " ", "=", " CheckUtils.isContainChinese(prdJson.getString(", "\"pfmTargetValue\"", "));\n        ", "if", "(isContainChinese){\n            ImgUtil.pressWordWatermark(prdJson.getString(", "\"pfmTargetValue\"", "), g, ", "new", " ", "Color", "(", "247", ", ", "52", ", ", "52", "),\n                    ImgUtil.getDefinedFont(PINGFANG_SC_FILE_SRC, Font.BOLD, ", "100", "), width, ", "null", ", (", "float", ") (height * ", "0.5", "));\n        }", "else", " {\n            ImgUtil.pressWordWatermark(prdJson.getString(", "\"pfmTargetValue\"", "), g, ", "new", " ", "Color", "(", "247", ", ", "52", ", ", "52", "),\n                    ImgUtil.getDefinedFont(AVENIR_FILE_SRC, Font.BOLD, ", "100", "), width, ", "null", ", (", "float", ") (height * ", "0.5", "));\n        }\n        ", "//4、指标", "\n        ImgUtil.pressWordWatermark(prdJson.getString(", "\"pfmTargetName\"", "), g, ", "new", " ", "Color", "(", "135", ", ", "135", ", ", "142", "),\n                ImgUtil.getDefinedFont(PINGFANG_SC_FILE_SRC, Font.PLAIN, ", "24", "), width, ", "null", ", (", "float", ") (height * ", "0.628", "));\n        g.dispose();\n        ", "try", " {\n            ", "String", " ", "formatName", " ", "=", " outPath.substring(outPath.lastIndexOf(", "\".\"", ") + ", "1", ");\n            ImageIO.write(bimage, formatName, ", "new", " ", "File", "(outPath));\n        } ", "catch", " (Exception e) {\n            log.error(", "\"图片写入异常\"", ",e);\n        }\n       \n        ", "//获取图标前 名称 内容文字最后的X坐标", "\n        ", "int", " ", "conetTxtX", " ", "=", " ImgUtil.getConetTailX(width, ImgUtil.getDefinedFont(PINGFANG_SC_FILE_SRC, Font.BOLD, ", "34", "),\n                prdJson.getString(", "\"tAShortName\"", ") + ", "\"-\"", " + prdJson.getString(\n                        ", "\"prdName\"", "), iconWidth);\n        ;\n        ImgUtil.pressImageWatermark(WILL_SALEICON_FILE_SRC, outPath, conetTxtX + ", "10", ", (", "int", ") (height * ", "0.096", "));\n    }\n\n     ", "public", " ", "static", " ", "void", " ", "pressWordWatermark", "(String content, Graphics2D g, Color color, Font font, ", "int", " width, Integer otherWidth, ", "float", " height)", " {\n        g.setColor(color);\n        ", "//字体、字型、字号", "\n        g.setFont(font);\n        g.drawString(content, getWordWidth(width, font, content, otherWidth), height);\n    }\n    \n    \n    ", "public", " ", "final", " ", "static", " ", "void", " ", "pressImageWatermark", "(String pressImg, String targetImg, ", "int", " x, ", "int", " y)", " {\n        ", "try", " {\n            ", "// 目标文件", "\n            ", "File", " ", "imageFile", " ", "=", " ", "new", " ", "File", "(targetImg);\n            ", "Image", " ", "src", " ", "=", " ImageIO.read(imageFile);\n\n            ", "int", " ", "wideth", " ", "=", " src.getWidth(", "null", ");\n            ", "int", " ", "height", " ", "=", " src.getHeight(", "null", ");\n            ", "BufferedImage", " ", "image", " ", "=", " ", "new", " ", "BufferedImage", "(wideth, height, BufferedImage.TYPE_INT_RGB);\n            ", "Graphics", " ", "g", " ", "=", " image.createGraphics();\n            g.drawImage(src, ", "0", ", ", "0", ", wideth, height, ", "null", ");\n\n            ", "// 水印文件", "\n            ", "File", " ", "waterMarkImage", " ", "=", " ", "new", " ", "File", "(pressImg);\n            ", "Image", " ", "markImage", " ", "=", " ImageIO.read(waterMarkImage);\n            ", "int", " ", "weightMarkImage", " ", "=", " markImage.getWidth(", "null", ");\n            ", "int", " ", "heightMarkImage", " ", "=", " markImage.getHeight(", "null", ");\n\n            g.drawImage(markImage, x, y, weightMarkImage, heightMarkImage, ", "null", ");\n\n            ", "// 水印结束", "\n            g.dispose();\n            ", "String", " ", "formatName", " ", "=", " targetImg.substring(targetImg.lastIndexOf(", "\".\"", ") + ", "1", ");\n            ImageIO.write(image, formatName, ", "new", " ", "File", "(targetImg));\n\n        } ", "catch", " (IOException e) {\n            log.error(", "\"图标水印处理异常\"", ",e);\n        }\n    }\n\n    ", "/**\n     * 按照自定义字体文件创建font\n     * ", "@param", " style\n     * ", "@param", " fs\n     * ", "@return", "\n     */", "\n    ", "public", " ", "static", " Font ", "getDefinedFont", "(String fontUrl,", "int", " style,", "float", " fs)", " {\n        ", "Font", " ", "definedFont", " ", "=", " ", "null", ";\n        ", "try", " (", "InputStream", " ", "is", " ", "=", " ", "new", " ", "FileInputStream", "(", "new", " ", "File", "(fontUrl));\n             ", "BufferedInputStream", " ", "bis", " ", "=", " ", "new", " ", "BufferedInputStream", "(is);){\n            definedFont = Font.createFont(Font.TRUETYPE_FONT, is);\n            ", "//设置字体大小，float型", "\n            definedFont = definedFont.deriveFont(style,fs);\n        } ", "catch", " (FontFormatException e) {\n            log.error(", "\"\"", ",e);\n        } ", "catch", " (IOException e) {\n            log.error(", "\"\"", ",e);\n        }\n        ", "return", " definedFont;\n    }\n", "/**\n     * 计算该字体字符串的长度,并定位到x坐标\n     *\n     * ", "@param", " width      目标图片整个宽度\n     * ", "@param", " font       格式\n     * ", "@param", " content    文字\n     * ", "@param", " otherWidth 其他宽度\n     * ", "@return", "\n     */", "\n    ", "public", " ", "static", " ", "int", " ", "getWordWidth", "(", "int", " width, Font font, String content, Integer otherWidth)", " {\n        ", "FontDesignMetrics", " ", "metrics", " ", "=", " FontDesignMetrics.getMetrics(font);\n        ", "int", " strWidth;\n        ", "if", " (otherWidth == ", "null", ") {\n            strWidth = ", "0", ";\n        } ", "else", " {\n            strWidth = otherWidth;\n        }\n        ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < content.length(); i++) {\n            strWidth += metrics.charWidth(content.charAt(i));\n        }\n        ", "int", " ", "x", " ", "=", " (width - strWidth) / ", "2", ";\n        ", "if", " (x > ", "0", ") {\n            ", "return", " x;\n        }\n        ", "return", " -x;\n    }\n", "\n", "错误日志如下：", "\n", "测试环境接口频度并不高，从上一次宕机到这次一共过去13天，昨天晚上到今天早上几乎没有请求，早上8点50分正在跑一个推荐图的定时任务，jvm直接崩溃。后面研究了下hs_err_pid文件觉得应该是调用JNI的报错，但程序中并没有用到，应该是引用的FontDesignMetrics有使用动态库.SO。从错误日志看起来是指针所对应的地址是无效地址，但找不到具体原因。"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;使用js引入&amp;#xff0c;js文件中直接 &lt;code class=\"language-javascript\"&gt;window.onload &amp;#61; function () {}&lt;/code&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/186799753456136.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["如何在html中引入html？", ["html1是表单，html2是背景。这个背景可以为html格式，也可以为js格式。但都引入失败了。", "\n", "\n```html\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"en\"", ">", "\n", "<", "head", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n    ", "<", "title", ">", "input练习", "</", "title", ">", "\n    ", "<", "link", " ", "rel", "=", "\"import\"", " ", "href", "=", "\"background.html\"", ">", "\n    ", "<", "script", " ", "src", "=", "\"js/mouse.js\"", ">", "</", "script", ">", "\n    ", "<", "style", " ", "type", "=", "\"text/css\"", ">", "\n        ", "input", "{\n            ", "border-radius", ":", "20px", ";\n            ", "border", ":solid ", "1px", " gray;\n            ", "background", ":", "rgba", "(", "255", ",", "255", ",", "255", ",", "0.15", ")\n        }\n        ", ".button", "{\n            ", "border-radius", ":", "8px", ";\n            ", "width", ":", "30px", ";\n            ", "height", ":", "30px", ";\n            ", "font-size", ":", "16px", ";\n        }\n        hr{", "/*透明渐变水平线*/", "\n            ", "height", ":", "1px", ";\n            ", "border", ":none;\n            ", "border-top", ":", "2px", " dashed ", "#eff5fa", ";\n            ", "width", ":", "80%", ";\n        }\n        ", "textarea", "{\n            ", "background", ":", "rgba", "(", "255", ",", "255", ",", "255", ",", "0.15", ");\n            ", "border", ":solid ", "1px", " gray;\n            ", "border-radius", ":", "15px", ";\n        }\n    ", "</", "style", ">", "\n", "</", "head", ">", "\n\n", "<", "body", ">", "\n    ", "<", "div", " ", "class", "=", "\"box\"", ">", "\n        ", "<", "form", ">", "\n            ", "<", "h3", ">", "个人信息", "</", "h3", ">", "\n            ", "<", "br", ">", "<", "hr", "/>", "\n            姓名：", "<", "input", " ", "type", "=", "\"text\"", " ", "maxlength", "=", "\"10\"", "/>", "\n            ", "<", "br", ">", "\n            密码：", "<", "input", " ", "type", "=", "\"password\"", " ", "name", "=", "\"\"", " />", "\n            ", "<", "br", ">", "\n            年龄：", "<", "input", " ", "type", "=", "\"number\"", " ", "name", "=", "\"\"", " />", "\n            ", "<", "br", ">", "\n            性别：", "<", "input", " ", "type", "=", "\"radio\"", " ", "name", "=", "\"gender\"", " ", "value", "=", "\"男\"", "/>", "男 ", "<", "input", " ", "type", "=", "\"radio\"", " ", "name", "=", "\"gender\"", " ", "value", "=", "\"女\"", "/>", "女\n            ", "<", "br", ">", "<", "hr", "/>", "\n            ", "<", "p", ">", "喜爱清单", "</", "p", ">", "\n            喜爱的颜色：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            喜爱的书籍：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            喜爱的画作：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            喜爱的乐器：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            喜爱的歌曲：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            喜爱的影视：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            喜爱的网站：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            喜爱的水果：", "<", "input", " ", "type", "=", "\"text\"", "/>", "<", "br", ">", "\n            ", "<", "br", ">", "<", "hr", "/>", "\n            ", "<", "input", " ", "type", "=", "\"button\"", " ", "style", "=", "\"background-color:#d0ebfc;border:solid 1px gray;\"", " ", "value", "=", "\"按钮\"", "/>", "\n            ", "<", "input", " ", "type", "=", "\"submit\"", " ", "style", "=", "\"background-color:#effacf;border:solid 1px gray;\"", " ", "value", "=", "\"提交\"", "/>", "\n            ", "<", "input", " ", "type", "=", "\"reset\"", " ", "style", "=", "\"background-color:#fcdef7;border:solid 1px gray;\"", " ", "value", "=", "\"重置\"", " />", "\n            ", "<", "br", ">", "<", "hr", "/>", "\n            ", "<", "textarea", " ", "rows", "=", "\"5\"", " ", "cols", "=", "\"40\"", ">", "</", "textarea", ">", "\n        ", "</", "form", ">", "\n    ", "</", "div", ">", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n", "\n", "<!d>", "\n", "<", "html", " ", "lang", "=", "\"en\"", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n    ", "<", "title", ">", "蛛网动态背景", "</", "title", ">", "\n", "<", "head", ">", "\n\n", "</", "head", ">", "\n", "<", "body", ">", "\n    ", "<", "script", ">", "\n        ", "window", ".", "onload", "=", "function", "(", "){\n            ", "//定义body的margin由默认值8px->0px", "\n            ", "document", ".", "body", ".", "style", ".", "margin", "=", "\"0\"", ";\n            ", "document", ".", "body", ".", "style", ".", "background", "=", "\"#30333F\"", ";\n            ", "//创建canvas画布", "\n            ", "document", ".", "body", ".", "appendChild", "(", "document", ".", "createElement", "(", "'canvas'", "));\n            ", "var", " canvas = ", "document", ".", "querySelector", "(", "'canvas'", "),\n                    ctx = canvas.", "getContext", "(", "'2d'", ") ", "//ctx返回一个在canvas上画图的api/dom", "\n            canvas.", "width", " = ", "window", ".", "innerWidth", ";\n            canvas.", "height", " = ", "window", ".", "innerHeight", ";\n            canvas.", "style", ".", "position", "=", "'fixed'", ";\n            ctx.", "lineWidth", " = ", ".3", ";\n            ctx.", "strokeStyle", " = (", "new", " ", "Color", "(", "150", ")).", "style", ";\n            ", "//定义鼠标覆盖范围", "\n            ", "var", " mousePosition = {\n                ", "x", ": ", "30", " * canvas.", "width", " / ", "100", ",\n                ", "y", ": ", "30", " * canvas.", "height", " / ", "100", "\n            };\n            ", "var", " dots = {\n                ", "nb", ": ", "1000", ",", "//Dot的总数", "\n                ", "distance", ": ", "50", ",\n                ", "d_radius", ": ", "100", ",\n                ", "array", ": []\n            };\n            ", "//创建颜色类，Color类返回字符串型rgba（*,*,*,.8）", "\n            ", "function", " ", "mixComponents", "(", "comp1, weight1, comp2, weight2", ") {\n                ", "return", " (comp1 * weight1 + comp2 * weight2) / (weight1 + weight2);\n            }\n            ", "function", " ", "averageColorStyles", "(", "dot1, dot2", ") {\n                ", "var", " color1 = dot1.", "color", ",\n                        color2 = dot2.", "color", ";\n\n                ", "var", " r = ", "mixComponents", "(color1.", "r", ", dot1.", "radius", ", color2.", "r", ", dot2.", "radius", "),\n                        g = ", "mixComponents", "(color1.", "g", ", dot1.", "radius", ", color2.", "g", ", dot2.", "radius", "),\n                        b = ", "mixComponents", "(color1.", "b", ", dot1.", "radius", ", color2.", "b", ", dot2.", "radius", ");\n                ", "return", " ", "createColorStyle", "(", "Math", ".", "floor", "(r), ", "Math", ".", "floor", "(g), ", "Math", ".", "floor", "(b));\n            }\n            ", "function", " ", "colorValue", "(", "min", ") {\n                ", "return", " ", "Math", ".", "floor", "(", "Math", ".", "random", "() * ", "255", " + min);\n            }\n            ", "function", " ", "createColorStyle", "(", "r,g,b", ") {\n                ", "return", " ", "'rgba('", " + r + ", "','", " + g + ", "','", " + b + ", "', 0.8)'", ";\n            }\n            ", "function", " ", "Color", "(", "min", ") {\n                min = min || ", "0", ";\n                ", "this", ".", "r", " = ", "colorValue", "(min);\n                ", "this", ".", "g", " = ", "colorValue", "(min);\n                ", "this", ".", "b", " = ", "colorValue", "(min);\n                ", "this", ".", "style", " = ", "createColorStyle", "(", "this", ".", "r", ", ", "this", ".", "g", ", ", "this", ".", "b", ");\n            }\n            ", "//创建Dot类以及一系列方法", "\n            ", "function", " ", "Dot", "(", "){\n                ", "this", ".", "x", " = ", "Math", ".", "random", "() * canvas.", "width", ";\n                ", "this", ".", "y", " = ", "Math", ".", "random", "() * canvas.", "height", ";\n\n                ", "this", ".", "vx", " = -", ".5", " + ", "Math", ".", "random", "();\n                ", "this", ".", "vy", " = -", ".5", " + ", "Math", ".", "random", "();\n\n                ", "this", ".", "radius", " = ", "Math", ".", "random", "() * ", "2", ";\n\n                ", "this", ".", "color", " = ", "new", " ", "Color", "();\n            }\n\n            ", "Dot", ".", "prototype", " = {\n                ", "draw", ": ", "function", "(", "){\n                    ctx.", "beginPath", "();\n                    ctx.", "fillStyle", " = ", "this", ".", "color", ".", "style", ";\n                    ctx.", "arc", "(", "this", ".", "x", ", ", "this", ".", "y", ", ", "this", ".", "radius", ", ", "0", ", ", "Math", ".", "PI", " * ", "2", ", ", "false", ");\n                    ctx.", "fill", "();\n                }\n            };\n            ", "function", " ", "moveDots", "(", ") {", "//Dot对象的移动", "\n                ", "for", "(i = ", "0", "; i < dots.", "nb", "; i++){\n\n                    ", "var", " dot = dots.", "array", "[i];\n\n                    ", "if", "(dot.", "y", " < ", "0", " || dot.", "y", " > canvas.", "height", "){\n                        dot.", "vx", " = dot.", "vx", ";\n                        dot.", "vy", " = - dot.", "vy", ";\n                    }\n                    ", "else", " ", "if", "(dot.", "x", " < ", "0", " || dot.", "x", " > canvas.", "width", "){\n                        dot.", "vx", " = - dot.", "vx", ";\n                        dot.", "vy", " = dot.", "vy", ";\n                    }\n                    dot.", "x", " += dot.", "vx", ";\n                    dot.", "y", " += dot.", "vy", ";\n                }\n            }\n            ", "function", " ", "connectDots", "(", "){", "//DOt对象的连接", "\n                ", "for", "(i = ", "0", "; i < dots.", "nb", "; i++){\n                    ", "for", "(j = i; j < dots.", "nb", "; j++){\n                        i_dot = dots.", "array", "[i];\n                        j_dot = dots.", "array", "[j];\n\n                        ", "if", "((i_dot.", "x", " - j_dot.", "x", ") < dots.", "distance", " && (i_dot.", "y", " - j_dot.", "y", ") < dots.", "distance", " && (i_dot.", "x", " - j_dot.", "x", ") > - dots.", "distance", " && (i_dot.", "y", " - j_dot.", "y", ") > - dots.", "distance", "){\n                            ", "if", "((i_dot.", "x", " - mousePosition.", "x", ") < dots.", "d_radius", " && (i_dot.", "y", " - mousePosition.", "y", ") < dots.", "d_radius", " && (i_dot.", "x", " - mousePosition.", "x", ") > - dots.", "d_radius", " && (i_dot.", "y", " - mousePosition.", "y", ") > - dots.", "d_radius", "){\n                                ctx.", "beginPath", "();\n                                ctx.", "strokeStyle", " = ", "averageColorStyles", "(i_dot, j_dot);\n                                ctx.", "moveTo", "(i_dot.", "x", ", i_dot.", "y", ");\n                                ctx.", "lineTo", "(j_dot.", "x", ", j_dot.", "y", ");\n                                ctx.", "stroke", "();", "//绘制定义的路线", "\n                                ctx.", "closePath", "();", "//创建从当前点回到起始点的路径", "\n                            }\n                        }\n                    }\n                }\n            }\n            ", "function", " ", "createDots", "(", "){", "//创建nb个Dot对象", "\n                ", "for", "(i = ", "0", "; i < dots.", "nb", "; i++){\n                    dots.", "array", ".", "push", "(", "new", " ", "Dot", "());\n                }\n            }\n            ", "function", " ", "drawDots", "(", ") {", "//引用Dot原型链，使用draw方法，在canvas上画出Dot对象", "\n                ", "for", "(i = ", "0", "; i < dots.", "nb", "; i++){\n                    ", "var", " dot = dots.", "array", "[i];\n                    dot.", "draw", "();\n                }\n            }\n            ", "function", " ", "animateDots", "(", ") {\n                ctx.", "clearRect", "(", "0", ", ", "0", ", canvas.", "width", ", canvas.", "height", ");", "//清除画布，否则线条会连在一起", "\n                ", "moveDots", "();\n                ", "connectDots", "();\n                ", "drawDots", "();\n                ", "requestAnimationFrame", "(animateDots);\n            }\n            ", "createDots", "();", "//使用创建Dot类函数", "\n            ", "requestAnimationFrame", "(animateDots);", "//使用canvas独有的60Hz刷新屏幕画布的方法", "\n\n            ", "document", ".", "querySelector", "(", "'canvas'", ").", "addEventListener", "(", "'mousemove'", ",", "function", "(", "e", "){\n                mousePosition.", "x", " = e.", "pageX", ";\n                mousePosition.", "y", " = e.", "pageY", ";\n            })\n\n            ", "document", ".", "querySelector", "(", "'canvas'", ").", "addEventListener", "(", "'mouseleave'", ",", "function", "(", "e", "){", "//鼠标离开时，连接自动返回到画布中心", "\n                mousePosition.", "x", " = canvas.", "width", " / ", "2", ";\n                mousePosition.", "y", " = canvas.", "height", " / ", "2", ";\n            })\n        }\n    ", "</", "script", ">", "\n\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n", "\n", "```"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;应该改成&amp;#xff1a;while(p1-&amp;#xff1e;a!&amp;#61;&amp;#39;0&amp;#39;)&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["动态链表的开辟结束条件", ["该图中题目定义数据结构中a的类型为int型，如果a改成字符型数组，那么while(p1-＞a!=0)(链表开辟停止判定条件)应该改成什么"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;问题似乎出在IntConversionChar函数中&amp;#xff0c;这个函数将一个整数值转换成字符串并传输到蓝牙模块上。在这个函数中&amp;#xff0c;您使用了一个for循环来逐位处理整数值&amp;#xff0c;并将每个数字转换为字符型后传输到蓝牙模块上。&lt;/p&gt;\n&lt;p&gt;您提到在传输的数据的最后两位存在固定的乱码。根据您的代码&amp;#xff0c;您在数据传输完成后&amp;#xff0c;添加了两个固定值77&amp;#xff0c;这可能是导致乱码的原因。建议您检查一下是否有必要添加这两个固定值。&lt;/p&gt;\n&lt;p&gt;此外&amp;#xff0c;在for循环中&amp;#xff0c;您在处理整数值的最高位时&amp;#xff0c;将其加上0x30或者48并转换为字符型后发送。建议您添加一个判断&amp;#xff0c;如果整数值的最高位为0&amp;#xff0c;不要将其转换为字符型后发送&amp;#xff0c;而是跳过该位。这可能会导致一些输出位数上的变化&amp;#xff0c;但可能会解决乱码问题。&lt;/p&gt;\n&lt;p&gt;最后&amp;#xff0c;建议您检查一下蓝牙模块的参数设置是否正确&amp;#xff0c;例如波特率等&amp;#xff0c;这可能也会导致数据传输出现问题。有用记得给个关注支持一下&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["基于51单片机的蓝牙模块的数据传输(标签-51单片机)", ["#基于51单片机与HC04蓝牙模块的使用中在正确的数据的最后两位为固定的乱码在修改传输的位置上发现并无不同，传输的数据，是HC—SR04超声波模块（利用定时计数器获取的数据，在将其完全转化为整数后问题依旧存在修改输出位数后乱码有所变化）蓝牙模块的代码如下：", "\n", "void transfer", "_HC04(", "uchar", " ", "character", ")", "\n{    \n    SBUF=character;\n    ", "//UART_init();", "\n    ", "while", "(!TI);\n    TI=", "0", ";\n    ", "Delay20us()", ";\n}\nvoid  ", "PostString(", "uchar", "*", "p", ")", "  \n{  \n        ", "while", "(*p)         ", "//若指针指向的地址为空，则跳出循环", "\n        {  \n            transfer", "_HC04(", "*", "p", ")", "; ", "//指针第一次默认指向首地址", "\n            ", "Delay20us()", ";  ", "//延时，作用为提高发送准确度", "\n            p++;  \n        }      \n}\nvoid ", "IntConversionChar(", "uint", " ", "number", ")", "\n{\n       uint model;    ", "//模", "\n       uint numberByte; ", "//十进制数据不同位上的值", "\n       number=value;\n       ", "for", "(model=", "10000", ";model>=", "1", ";model=model/", "10", ") ", "//model的取值根据实际需要选择，选择过大会浪费资源", "\n      {\n            numberByte=number/model;    ", "//相除取整", "\n            ", "//当取到整数数据的最高位时，将其加上0x30或者48并转为字符型后发送", "\n           ", "if", "(numberByte>=", "1", ")\n           {\n            transfer", "_HC04((", "uchar", ")", "(numberByte%", "10", "+", "0x30", "));\n              ", "//if(numberByte >=1 )transfer_HC04((unsigned char)(numberByte%10+48));", "\n           }  \n      }    \n      transfer", "_HC04((", "uchar", ")", "(", "77", "));\n      transfer", "_HC04((", "uchar", ")", "(", "77", "));\n}\n\n", "\n", "数据部分的代码如下:", "\n", "\n     ", "time", "=TH0*", "256", "+TL0", ";", "\n     ", "TH0", "=", "0", ";", "\n     ", "TL0", "=", "0", ";", "\n     ", "S", "=(time*", "1.7", ")/", "100", ";     //算出来是CM", "\n     ", "value", "=(time*", "1.7", ")", ";", "\n\n", "\n", "\n", "数据部分与LCD1602输出的数据相同，但是为什么会出现乱码呢，请帮忙看看谢谢"]], "Tag": "程序设计"}
{"Answer": "&lt;p&gt;报的是f{&amp;#39;....&amp;#39;}的错误&lt;br /&gt;。。。&lt;br /&gt;应该改为mldm&amp;#43;&amp;#39;-&amp;#39;&amp;#43;yjxs....&amp;#43;....&amp;#43;.....&amp;#43;&amp;#39;.csv&amp;#39;&lt;/p&gt;", "Konwledge_Point": "字符型", "Question": ["python爬虫程序错误", ["input输入的值本身就是字符型了为什么还报错不是字符型呢，求大家解惑"]], "Tag": "程序设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;scanf&lt;span class=\"hljs-constructor\"&gt;_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;str&lt;/span&gt;,)&lt;/span&gt;;\n-&amp;gt;\nscanf&lt;span class=\"hljs-constructor\"&gt;_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;str&lt;/span&gt;, 99)&lt;/span&gt;;\n\n&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt;* ptr&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]&lt;/span&gt;;\n-&amp;gt;\n&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt;* ptr &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt; *)malloc(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;*sizeof(&lt;span class=\"hljs-built_in\"&gt;char&lt;/span&gt;));\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "字符型", "Question": ["关于指针数组的疑难问题", ["求老哥帮我看看代码，我实在看不出错在哪里，程序没报错，一运行经报错，哭了啊！！", "\n", "题目：定义一个指针数组，其中每个指针指向一个字符型变量，使用循环输入一个字符串，并将字符串中所有字符的 ASCII 码值存储在指针数组中，然后输出这些 ASCII 码值。", "\n", "int", " ", "main", "()", " ", "{\n    ", "char", " str[", "100", "]; ", "// 定义一个字符数组", "\n    ", "char", "* ptr[", "100", "]; ", "// 定义一个指针数组", "\n    ", "int", " i; ", "// 循环计数器", "\n\n    ", "printf", "(", "\"请输入一个字符串：\"", ");\n    ", "scanf_s", "(", "\"%s\"", ", str); ", "// 输入一个字符串", "\n\n    ", "// 将每个字符的 ASCII 码值存储在指针数组中", "\n    ", "for", " (i = ", "0", "; str[i] != ", "'\\0'", "; i++) {\n        ptr[i] = &str[i];\n    }\n\n    ", "// 输出指针数组中每个指针所指向的字符的 ASCII 码值", "\n    ", "printf", "(", "\"字符串中所有字符的 ASCII 码值：\"", ");\n    ", "for", " (i = ", "0", "; ptr[i] != ", "NULL", "; i++) {\n        ", "printf", "(", "\"%d \"", ", *(ptr[i]));\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "我问CHatGPT了，他和我一样的问题，也给不出解决问题，或许我只是初学，不知道怎么问问题", "\n", "\n"]], "Tag": "程序设计"}
