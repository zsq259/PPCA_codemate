{"Answer": "&lt;p&gt;您可以使用非线性规划库&amp;#xff0c;例如 Math.NET Numerics 中的 NLopt 或者 Accord.NET 中的 Nelder-Mead 和 Simplex 方法来实现非线性规划。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;using &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Math&lt;/span&gt;;\nusing &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Optimization&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; NonlinearProgrammingExample\n{\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Program&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] args)\n        {\n            &lt;span class=\"hljs-comment\"&gt;// Define the objective function&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * (x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]),\n                &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// number of variables&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Define the constraints&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;LessThanOrEqualToZero&lt;/span&gt;\n            );\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;GreaterThanOrEqualToZero&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Create the solver&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt; solver &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;[] { constraint1, constraint2 });\n\n            &lt;span class=\"hljs-comment\"&gt;// Solve the problem&lt;/span&gt;\n            double[] result &amp;#61; solver.&lt;span class=\"hljs-title class_\"&gt;Solve&lt;/span&gt;();\n\n            &lt;span class=\"hljs-comment\"&gt;// Print the results&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Result: x &amp;#61; [{0}], f(x) &amp;#61; {1}&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Join&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;, &amp;#34;&lt;/span&gt;, result), &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Value&lt;/span&gt;(result));\n        }\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["c#如何解决非线性规划", ["目前想要用c#做一个求解简单的非线性规划的程序", "之前试过用matlab，但是似乎不能转换文件格式"]], "Tag": "算法设计"}
{"Answer": "http://www.acmerblog.com/hdu-1931-Target-Practice-3006.html", "Konwledge_Point": "线性规划简介", "Question": ["一个有关于线性规划的问题，具体问题请看下面的问题描述", ["Problem Description", "\nThere are many forms of contests where the contestants (shooters) try to hit targets, either moving or still. In this version there are a number of small balloons sitting on the tops of poles that are in turn stuck in the ground at various points in a large field. These poles are not all the same height. The shooter circles the field and fires at the balloons, the goal being to burst all the balloons with as few shots as possible. Since the balloons offer almost no resistance to a bullet, the bullet will pass right through and possibly hit one or more other balloons. So, by judiciously taking shots, the shooter might need only a very few shots to hit all the targets (provided the shooter is a good marksman, which we will assume is the case).", "\nFor example, the following field of 10 targets can be covered in only four shots, as shown. (The first two numbers at each position indicate the position of the balloon, and the third number the height.)", "\nYour job is to determine the fewest number of shots necessary to hit all the targets in a given field.", "\n\n", "Input", "\nThere will be multiple test cases. Each test case will consist of an integer n (<= 50) indicating the number of target positions to follow. A value of n = 0 indicates end of input. There will follow n integer triples, x y h, indicating a balloon at position (x, y) in the field at height h. (There will be at most one balloon at any position (x, y).) All integers are greater than 0 and no greater than 100. Furthermore assume that the shooter can take shots from anywhere on the field at any height. For simplification, assume here that the balloons are points and that the bullets can pass through the poles on which the balloons are perched.", "\n\n", "Output", "\nEach test case should produce one line of output of the form:", "\nTarget set k can be cleared using only s shots.", "\nwhere k is the number of the test case, starting at 1, and the value of s is the minimum number of shots needed to hit all the targets in the set.", "\n\n", "Sample Input", "\n10", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 85 40 58 100 75 7", "\n9", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 100 75 7", "\n0", "\n\n", "Sample Output", "\nTarget set 1 can be cleared using only 4 shots.", "\nTarget set 2 can be cleared using only 3 shots."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;目标函数不是线性函数&amp;#xff0c;这个优化问题不是线性规划&amp;#xff0c;可以使用有约束非线性优化方法来求求解&amp;#xff0c;使用fmincon函数&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;fun &amp;#61; &amp;#64;(x) 12*x(1) &amp;#43; 3*x(1)*ceil(x(2)-1) - 1.5*ceil(x(2)-1)*x(1);\nA &amp;#61; [1 0\n     0 1\n     -1 0\n     0 -1];\nb &amp;#61; [1\n     30\n     0\n     0];\nx0 &amp;#61; [0.5 15]&amp;#39;;\nx &amp;#61; fmincon(fun,x0,A,b);\ng &amp;#61; fun(x)\n\nw &amp;#61; x(1)\nxx &amp;#61; x(2)\np &amp;#61; w/3&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;结果&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;g &amp;#61;\n\n   2.0001e-08\n\n\nw &amp;#61;\n\n   1.6667e-09\n\n\nxx &amp;#61;\n\n    0.0983\n\n\np &amp;#61;\n\n   5.5557e-10&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB线性规划问题", ["如何使用MATLAB求下列方程最优解\nmin f(x)=12*ω+3*ω*ceil (x-1)-1.5*ceil (x-1)\nω=3*p\n0≤x≤30\n0＜ω＜1\n求最优 x 和 ω 以及 p\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;只有5个元素&amp;#xff0c;分别是0,1,2,3,4&amp;#xff0c;下标为5超出了上限&amp;#xff0c;请检查一下代码。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python小白上路，用pso算法解决多元带约束的非线性规划，", ["用pso算法解决多元带约束的非线性规划，一直错误，盼望各位大佬多多指点我一下.", "\n\n", "照猫画虎，还没有人解答，还不知道去看什么，也不知道怎么办，救救孩子吧", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "http://muchong.com/t-4879914-1", "Konwledge_Point": "线性规划简介", "Question": ["求助非线性环节线性化", ["对于双容水箱液位控制系统，如何对描述水箱输出方程中的非线性环节进行线性化？两个水箱对应输出描述方程如图一，系统描述方式如图2.急求大佬解答！！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;非线性系统不能用ss函数来建模了&amp;#xff0c;ss只能描述线性状态方程&amp;#xff0c;非线性系统需要用微分方程描述&amp;#xff0c;使用ode45来求解响应。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何使用matlab解决非线性状态空间的问题", ["在状态空间系统中，如E\\dot x=Ax+Bu,y=Cx+Du中，A矩阵内含有x2，该如何修改matlab程序，使得程序可以运行。", "\n\n", " ", "\n\n", "E=[1 1;0 0]", "\nA=[-2 0;1 x2];%x=[x1;x2]", "\nB=[-1;0];", "\nC=[-1 -1];", "\nD=0;", "\nt=0:0.01:5;", "\nw=exp(-t);", "\nsys1=dss(A,B,C,D,E);", "\n[y,t,x]=lsim(sys1,w,t);", "\nplot(t,x)", "\n "]], "Tag": "算法设计"}
{"Answer": "我有  要么。。。。。。。。", "Konwledge_Point": "线性规划简介", "Question": ["基于DSP技术的图像线性变换系统设计", ["要求：1.在图形窗口显示原图，处理后的结果图。", "\n             2.图像使用源数据为JPG格式的彩色图像，处理图像为经过变换后的灰度图像。", "\n            3.对灰度图像进行线性变换", "\n            4.使用ccs3.3  编程，c语言"]], "Tag": "算法设计"}
{"Answer": "MatrixEquation me = new MatrixEquation(x点的数组， y点的数组, n);\r\nme.XXX调用，具体看你上面注释", "Konwledge_Point": "线性规划简介", "Question": ["c#实现最小二乘法线性拟合", ["public class MatrixEquation", "\n    {", "\n        private double[,] gaussMatrix;", "\n        private int coe;", "\n\n", "    public MatrixEquation()\n    {\n    }\n\n    public MatrixEquation(double[] arrX, double[] arrY, int n)\n    {\n        coe = n;\n        gaussMatrix = GetGauss(GetXPowSum(arrX, n), GetXPowYSum(arrX, arrY, n), n);\n    }\n\n    public double[,] GetGaussMatrix()\n    {\n        return gaussMatrix;\n    }\n\n    public double[] GetResult()\n    {\n        return ComputeGauss(gaussMatrix, coe);\n    }\n\n    /// <summary> 计算获取x散点的幂次和数组 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"n\">函数拟合次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowSum(double[] arrX, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xPow = new double[2 * n + 1]; //存储X散点的幂次值\n\n        for (int i = 0; i < xPow.Length; i++)\n        {\n            if (i == 0)\n            {\n                xPow[i] = m;\n            }\n            else\n            {\n                //计算x的i次方和\n\n                double max = 0;\n                for (int j = 0; j < m; j++)\n                {\n                    if (arrX[j] == 0)\n                        max = max + 1;\n                    else\n                        max = max + Math.Pow(arrX[j], i);\n                }\n                xPow[i] = Math.Round(max, 4);\n            }\n        }\n        return xPow;\n    }\n\n    /// <summary>计算获取xy的幂次和序列 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"arrY\">y散点序列</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowYSum(double[] arrX, double[] arrY, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xyPow = new double[n + 1]; //仓储X散点的幂次值\n\n        for (int i = 0; i < xyPow.Length; i++)\n        {\n            //计算xy的i次方和\n\n            double max = 0;\n            for (int j = 0; j < m; j++)\n            {\n                if (arrX[j] == 0)\n                    max = max + 1;\n                else\n                    max = max + Math.Pow(arrX[j], i) * arrY[j];\n            }\n            xyPow[i] = Math.Round(max, 4);\n        }\n        return xyPow;\n    }\n\n    /// <summary> 获取高斯矩阵(增广矩阵) </summary>            \n    /// <param name=\"arrX\">X的幂次和</param> \n    /// <param name=\"arrXY\">XY的幂次和</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[,] GetGauss(double[] arrX, double[] arrXY, int n)\n    {\n        double[,] gauss = new double[n + 1, n + 2];\n        for (int i = 0; i < n + 1; i++)\n        {\n            int j;\n            int m = i;\n            for (j = 0; j < n + 1; j++)\n            {\n                gauss[i, j] = arrX[m];\n                m++;\n            }\n            gauss[i, j] = arrXY[i];\n        }\n\n        return gauss;\n    }\n\n    /// <summary> 求解拟合曲线的系数 </summary>                  \n    /// <param name=\"gauss\">线性方程的增广矩阵</param> \n    /// <param name=\"n\">方程次数</param> \n    /// <returns></returns> \n    protected double[] ComputeGauss(double[,] gauss, int n)\n    {\n        double[] a = new double[n + 1];\n        double s;\n        int matrixLine = n + 1;\n        for (int i = 0; i < n + 1; i++)\n            a[i] = 0;\n        //循环每列\n\n        for (int j = 0; j < matrixLine; j++)\n        {\n            //每列J行以后的绝对值最大值\n\n            double max = 0;\n            int k = j;\n            for (int i = j; i < matrixLine; i++)\n            {\n                if (Math.Abs(gauss[i, j]) > max)\n                {\n                    max = gauss[i, j];\n                    k = i;\n                }\n            }\n            //判断j行否为最大值行 若不是将j行调换为最大值行\n\n            if (k != j)\n            {\n                double temp; for (int m = j; m < matrixLine + 1; m++)\n                {\n                    temp = gauss[j, m];\n                    gauss[j, m] = gauss[k, m];\n                    gauss[k, m] = temp;\n                }\n            }\n            if (max == 0)\n            {\n                //奇异矩阵无解\n\n                return a;\n            }\n            //进行初等行变换得到上三角矩阵\n\n            for (int i = j + 1; i < matrixLine; i++)\n            {\n                s = gauss[i, j];\n                for (int m = j; m < matrixLine + 1; m++)\n                {\n                    gauss[i, m] = Math.Round(gauss[i, m] - gauss[j, m] * s / gauss[j, j], 6);\n                }\n            }\n        }\n        //根据倒推方式一次计算现行方程的解\n\n        for (int i = matrixLine - 1; i >= 0; i--)\n        {\n            s = 0;\n            for (int j = i + 1; j < matrixLine; j++)\n            {\n                s += gauss[i, j] * a[j];\n            }\n            a[i] = Math.Round((gauss[i, matrixLine] - s) / gauss[i, i], 6);\n        }\n        //返回方程的解即拟合曲线的系数\n\n        return a;\n    }\n}\n    ------------------------\n    以上是本人在网上看到的一个例子，但是不理解该怎么样测试这个类，请各位大神赐教！或者可以提供相关参考链接也可以。\n"]], "Tag": "算法设计"}
{"Answer": "df1是你的数据，df1.loc[:, 'd']在最后面的列添加列名‘d’的一列数据，然后将数组d赋值即可\r\n\r\n```\r\ndf1 = pd.DataFrame(np.random.randn(8, 3), columns=['a', 'b', 'c'])\r\n    print(df1)\r\n    d=range(8)\r\n    df1.loc[:, 'd'] = d\r\n    print(df1)\r\n \r\n```", "Konwledge_Point": "线性规划简介", "Question": ["python dataframe如何线性插值缺省值", ["编程小白一枚，想问下如何对缺省值线性插值，网上查到都是直接填充平均值，线性插值有什么简便的方法吗？", "\n\n", "示例：", "\n2017/11/7   1", "\n2017/11/8   2 ", "\n2017/11/9   None", "\n2017/11/10  None", "\n2017/11/11  5", "\n2017/11/12  None", "\n2017/11/13  None", "\n2017/11/14  None", "\n2017/11/15  None", "\n2017/11/16  15", "\n2017/11/17  None", "\n2017/11/18  None", "\n2017/11/19  None", "\n2017/11/20  11", "\n\n", "我想让缺省值填充成", "\n2017/11/7   1", "\n2017/11/8   2 ", "\n2017/11/9   3", "\n2017/11/10  4", "\n2017/11/11  5", "\n2017/11/12  7", "\n2017/11/13  9", "\n2017/11/14  11", "\n2017/11/15  13", "\n2017/11/16  15", "\n2017/11/17  14", "\n2017/11/18  13", "\n2017/11/19  12", "\n2017/11/20  11", "\n\n", "PS：类似如果想三次样条插值呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;拟合的时候可以加一点惩罚因子&amp;#xff0c;意思就是可以允许有一两个错误点&amp;#xff0c;这样可以避免离群点&amp;#xff0c;这也是正则化的思想&amp;#xff0c;你可以搜搜拉格朗日优化。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性回归/拟合直线如何去除离群点/噪声？", ["对于图1中这种散点，需要拟合出图2中的两条直线，怎么处理噪声点？", "\n", "最小二乘法受离群点的影响较大，请问一下大家这种情况有没有什么好回归方法可以拟合？或者说在回归之前有没有什么方法能去除掉这种离群点？", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "程序迭代输出问题，现已经解决了", "Konwledge_Point": "线性规划简介", "Question": ["matlab非线性问题的解法---椎补线性化", ["椎补线性化方法编程不报错，有解，但是所得解与给出的限定约束条件矛盾，也就是说约束条件失效，但是什么原因不报错，用椎补线性化方法中迭代有关系吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;matlab&lt;/p&gt;\n\n&lt;p&gt;x1 &amp;#61; [1 2 3 4 5 6]&amp;#39;;&lt;/p&gt;\n\n&lt;p&gt;x2 &amp;#61; [.2 .4 .8 .9 1.1 2.1]&amp;#39;;&lt;/p&gt;\n\n&lt;p&gt;X &amp;#61; [x1 x2]; &lt;/p&gt;\n\n&lt;p&gt;f &amp;#61; [ 3.3079 6.6358 10.3143 13.6492 17.2755 23.6271]&amp;#39;;&lt;/p&gt;\n\n&lt;p&gt;objfcn &amp;#61; &amp;#64;(A,X)A(1)*x1 &amp;#43; x2.^(A(2));&lt;/p&gt;\n\n&lt;p&gt;x0&amp;#61;1; &lt;/p&gt;\n\n&lt;p&gt;x0&amp;#61;(1)*[1;1];&lt;/p&gt;\n\n&lt;p&gt;[vestimated,resnorm] &amp;#61; lsqcurvefit(objfcn,x0,X,f)&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何matlab或者python实现多元函数的非线性拟合。", ["比如z=f（x，y），给出（x，y，z）的多个数据点，然后怎么拟合出f函数，给出源码就更好了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;C语言代码块是需要用{}括号括起来的&amp;#xff0c;不是Python那样依靠缩进。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/70890986336610.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性插值方法完成求解", ["根据压力传感器数据集，应用线性插值方法完成求解，我不知道错哪了，快帮帮我吧"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;下面是一个示例&amp;#xff0c;用矩阵求逆的方法来求解这个线性方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;将系数矩阵和常数向量分别存储在 A 和 b 的变量中&amp;#xff0c;如下所示&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 3 -1 2; 12 3 0];&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 10; 8];&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后&amp;#xff0c;可以通过计算 A 的逆来求解方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; inv(A) * b&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样&amp;#xff0c;就可以得到方程组的解&amp;#xff0c;即 x &amp;#61; [1; 2; -1]。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;注意&amp;#xff1a;求矩阵逆是一个计算量比较大的操作&amp;#xff0c;在实际应用中应该尽量避免使用。此外&amp;#xff0c;如果方程组不存在解或者有多个解&amp;#xff0c;那么求逆法就不能用了。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用矩阵求逆法求线性方程组的解", ["4x1+2x2−x3=2    3x1−x2+2x3=10  12x1+3x2=8"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以啊&amp;#xff0c;建立一个元胞数组&amp;#xff0c;每个回归循环都存在元胞数组里&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt; &amp;#61; cell(n,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;{i} &amp;#61; polyfit(xi, yi, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;); % 比方说regress也行\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后取用也很方便&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for i&lt;/span&gt; &amp;#61; 1:n\np &amp;#61; c{i};\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何使用matlab进行线性回归循环", ["请问如何使用matlab进行线性回归循环，然后将每次回归方程的系数保存下来，再调用在别的程序中。"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/yitian_z/article/details/103097363", "Konwledge_Point": "线性规划简介", "Question": ["广义线性回归模型用r语言", ["如何在r语言中求广义线性回归定义下的离差 似然比统计量 皮尔逊卡方统计量 以及怀尔德统计量 我用glm好像只能得到拟合"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;注释给你写好了&amp;#xff0c;如有帮助&amp;#xff0c;请点击我评论上方【采纳该答案】按钮支持一下,谢谢&amp;#xff01;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; linear_regression &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; LinearRegression&lt;span class=\"hljs-comment\"&gt;#前几行都是导入包&lt;/span&gt;\n\ndata &amp;#61; pd.read_csv(&lt;span class=\"hljs-string\"&gt;&amp;#39;../data/world-happiness-report-2017.csv&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#读取csv文件到data&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 得到训练和测试数据&lt;/span&gt;\ntrain_data &amp;#61; data.sample(frac &amp;#61; &lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#frac 抽取行的比例 例如frac&amp;#61;0.8&amp;#xff0c;就是抽取其中80%&lt;/span&gt;\ntest_data &amp;#61; data.drop(train_data.index)&lt;span class=\"hljs-comment\"&gt;#使用drop函数删除表中index&lt;/span&gt;\n\ninput_param_name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Economy..GDP.per.Capita.&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 输入特征名字&lt;/span&gt;\noutput_param_name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Happiness.Score&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 输出特征名字&lt;/span&gt;\n\nx_train &amp;#61; train_data[[input_param_name]].values\n&lt;span class=\"hljs-comment\"&gt;# .values表示转换成ndarray格式 [input_param_name]表示列值&lt;/span&gt;\ny_train &amp;#61; train_data[[output_param_name]].values\n&lt;span class=\"hljs-comment\"&gt;# .values表示转换成ndarray格式 [output_par  am_name]表示列值&lt;/span&gt;\n\nx_test &amp;#61; test_data[input_param_name].values&lt;span class=\"hljs-comment\"&gt;#上面是训练集&amp;#xff0c;这是测试集&lt;/span&gt;\ny_test &amp;#61; test_data[output_param_name].values\n\n&lt;span class=\"hljs-comment\"&gt;# 散点图绘制&lt;/span&gt;\nplt.scatter(x_train,y_train,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Train data&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#&lt;/span&gt;\nplt.scatter(x_test,y_test,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;test data&amp;#39;&lt;/span&gt;)\nplt.xlabel(input_param_name)\nplt.ylabel(output_param_name)\nplt.title(&lt;span class=\"hljs-string\"&gt;&amp;#39;Happy&amp;#39;&lt;/span&gt;)\nplt.legend()\nplt.show()\n\nnum_iterations &amp;#61; &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 迭代次数&lt;/span&gt;\nlearning_rate &amp;#61; &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 学习率&lt;/span&gt;\n\nlinear_regression &amp;#61; LinearRegression(x_train,y_train)\n(theta,cost_history) &amp;#61; linear_regression.train(learning_rate,num_iterations)\n&lt;span class=\"hljs-comment\"&gt;# 调用train模块传入学习率和和迭代次数&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#39;开始时的损失&amp;#xff1a;&amp;#39;&lt;/span&gt;,cost_history[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])\n&lt;span class=\"hljs-comment\"&gt;# cost_history[0]表示开始的&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#39;训练后的损失&amp;#xff1a;&amp;#39;&lt;/span&gt;,cost_history[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n&lt;span class=\"hljs-comment\"&gt;# cost_history[-1]表示最后的那次&lt;/span&gt;\nplt.plot(&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_iterations),cost_history)\nplt.xlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Iter&amp;#39;&lt;/span&gt;)\nplt.ylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;cost&amp;#39;&lt;/span&gt;)\nplt.title(&lt;span class=\"hljs-string\"&gt;&amp;#39;GD&amp;#39;&lt;/span&gt;)\nplt.show()\n\npredictions_num &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n\nx_predictions &amp;#61; np.linspace(x_train.&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(),x_train.&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(),predictions_num).reshape(predictions_num,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\ny_predictions &amp;#61; linear_regression.predict(x_predictions)\n\nplt.scatter(x_train,y_train,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Train data&amp;#39;&lt;/span&gt;)\nplt.scatter(x_test,y_test,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;test data&amp;#39;&lt;/span&gt;)\nplt.plot(x_predictions,y_predictions,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,label &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Prediction&amp;#39;&lt;/span&gt;)\nplt.xlabel(input_param_name)\nplt.ylabel(output_param_name)\nplt.title(&lt;span class=\"hljs-string\"&gt;&amp;#39;Happy&amp;#39;&lt;/span&gt;)\nplt.legend()\nplt.show()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["机器学习pycharm线性回归代码讲解", ["import numpy as np", "import pandas as pd", "import matplotlib.pyplot as plt", "\n", "from linear_regression import LinearRegression", "\n", "data = pd.read_csv('../data/world-happiness-report-2017.csv')", "\n", "train_data = data.sample(frac = 0.8)", "test_data = data.drop(train_data.index)", "\n", "input_param_name = 'Economy..GDP.per.Capita.'", "output_param_name = 'Happiness.Score'", "\n", "x_train = train_data[[input_param_name]].values", "y_train = train_data[[output_param_name]].values", "\n", "x_test = test_data[input_param_name].values", "y_test = test_data[output_param_name].values", "\n", "plt.scatter(x_train,y_train,label='Train data')", "plt.scatter(x_test,y_test,label='test data')", "plt.xlabel(input_param_name)", "plt.ylabel(output_param_name)", "plt.title('Happy')", "plt.legend()", "plt.show()", "\n", "num_iterations = 500", "learning_rate = 0.01", "\n", "linear_regression = LinearRegression(x_train,y_train)", "(theta,cost_history) = linear_regression.train(learning_rate,num_iterations)", "\n", "print ('开始时的损失：',cost_history[0])", "print ('训练后的损失：',cost_history[-1])", "\n", "plt.plot(range(num_iterations),cost_history)", "plt.xlabel('Iter')", "plt.ylabel('cost')", "plt.title('GD')", "plt.show()", "\n", "predictions_num = 100", "\n", "x_predictions = np.linspace(x_train.min(),x_train.max(),predictions_num).reshape(predictions_num,1)", "y_predictions = linear_regression.predict(x_predictions)", "\n", "plt.scatter(x_train,y_train,label='Train data')", "plt.scatter(x_test,y_test,label='test data')", "plt.plot(x_predictions,y_predictions,'r',label = 'Prediction')", "plt.xlabel(input_param_name)", "plt.ylabel(output_param_name)", "plt.title('Happy')", "plt.legend()", "plt.show()", "有没有会的给我简单讲解一下每段代码都是干什么的 谢谢啦"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;除了线性调频脉冲&amp;#xff0c;PD雷达的发射脉冲还可以是&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;频率跳变脉冲&amp;#xff08;FMCW脉冲&amp;#xff09;&amp;#xff1a;它通过改变发射信号的频率&amp;#xff0c;从而实现距离测量和速度测量。与LFM脉冲相比&amp;#xff0c;FMCW脉冲的带宽较窄&amp;#xff0c;但可以实现更高的距离测量精度。&lt;/p&gt;\n&lt;p&gt;矩形脉冲&amp;#xff1a;一种时间宽度和幅度相等的脉冲&amp;#xff0c;可以用于雷达探测和测距。&lt;/p&gt;\n&lt;p&gt;窄带脉冲&amp;#xff1a;一种带宽很窄的脉冲&amp;#xff0c;可以用于目标检测和跟踪。与LFM脉冲相比&amp;#xff0c;窄带脉冲的距离分辨率较差&amp;#xff0c;但可以实现更高的信噪比。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["PD雷达的发射脉冲是线性调频脉冲？", ["PD雷达是脉冲多普勒雷达，PD雷达的发射脉冲除了是线性调频脉冲还可以是什么脉冲？"]], "Tag": "算法设计"}
{"Answer": "看来很少有人做这个，自己给自己顶一下", "Konwledge_Point": "线性规划简介", "Question": ["有关非线性最优化手眼标定的求助帖", ["最近在做标定手眼关系（eye in hand ）中用到非线性最优化来求解方程AX=XB，", "\n但对于非线性最优化了解不多，理解困难。", "\n参考文中中定义函数f，对函数f进行非线性最优化", "\n函数f定义可见附图", "\n始终q为四元数（用来表示旋转矩阵），t表示平移向量，R表示旋转矩阵", "\n要优化的元素为q，t（即旋转矩阵和平移向量）", "\n这里如何求解真是不懂，请各位赐教   help"]], "Tag": "算法设计"}
{"Answer": "设置一个 relative布局，然后在把所有的linear布局的代码添加在relative layout里。再添加textview，并且标明textview在top位置，同时给出外边距。\r\n \r\n\r\n    &lt;RelativeLayout&gt;\r\n         &lt;TextView android:layout_alignParentTop=\"true\"\r\n          android:layout_margin=\"20dip/&gt;\r\n         &lt;LinearLayout&gt;\r\n                    // here is your linear layout\r\n         &lt;/LinearLayout&gt;\r\n       &lt;/RelativeLayout&gt;", "Konwledge_Point": "线性规划简介", "Question": ["在Android中为线性布局添加标题", ["我创建了如下的GUI，使用了线性布局，并且给这个布局设置了边框。我想在这个边框上插入标题。如何实现啊？"]], "Tag": "算法设计"}
{"Answer": "一旦执行了return语句，函数立即结束执行并返回。因此返回n之后就不再返回-1，若是没有返回n则最后返回-1", "Konwledge_Point": "线性规划简介", "Question": ["c，线性查找数组元素   问题求解决", ["int linearsearch(const int array[],int key,int size)", "\n{", "\n    int n;", "\n    for(n=0;n<100;n++)", "\n    {", "\n        if(array[n]==key)", "\n        {", "\n            return n;", "\n        }", "\n    }", "\n    return -1;", "\n}", "\n\n", "这个函数返回给主函数的值是不是总是-1？？   还是返回n后就不在返回-1"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;双向链表属于多重链表&amp;#xff0c;但它是线性结构。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["多重链表一定是非线性结构吗？", ["多重链表一定是非线性结构。", "答案说这句话是错的，有什么例子呢？我不太明白。Thank you！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;针对多目标非线性整数规划问题&amp;#xff0c;目前常用的算法包括遗传算法、粒子群算法、差分进化算法等。另外&amp;#xff0c;也可以尝试使用混合整数线性规划和近似多目标优化方法等。&lt;/p&gt;\n&lt;p&gt;对于具体应用的选择&amp;#xff0c;需要考虑问题的特点和实际情况。不同算法的适用范围和优缺点也不同&amp;#xff0c;因此需要综合考虑选择合适的算法。&lt;/p&gt;\n&lt;p&gt;关于学习方法&amp;#xff0c;可以通过阅读相关论文、专业书籍、参加相关学术会议等方式学习。以下是一些相关学习资源的推荐&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;《多目标优化理论与方法》一书&amp;#xff0c;作者为陈志华等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;学术期刊&amp;#xff0c;例如IEEE Transactions on Evolutionary Computation、European Journal of Operational Research等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;相关学术会议&amp;#xff0c;例如International Conference on Evolutionary Multi-Criterion Optimization、International Symposium on Combinatorial Optimization等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;MATLAB官方文档提供了各种优化算法的实现和示例&amp;#xff0c;可以在MATLAB官网进行查找和学习。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;开源优化软件&amp;#xff0c;例如Gurobi、CPLEX等&amp;#xff0c;可以通过学习其官方文档和实例来了解相关算法。&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划简介", "Question": ["多目标非线性整数规划", ["请问，针对（多目标非线性整数规划）问题，用什么算法比较好？哪里可以借鉴学习"]], "Tag": "算法设计"}
{"Answer": "字段计算器中可以算出所有点的坐标值，然后导出到Excel中。距离计算和线性回归都可以用Excel的公式计算。", "Konwledge_Point": "线性规划简介", "Question": ["arcgis计算距离，线性回归分析的问题", ["想问下已经在ARCGIS上标注了点并连成线，想知道怎么计算每个点到起始点的距离，并能把距离、时间放在坐标里，进行线性回归分析"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你先用matlab把这两个方程写一下&amp;#xff0c;写完了&amp;#xff0c;我给你求解&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何用matlab求解非线性方程组", ["如何用matlab中牛顿迭代法或者二分法求解下面非线性方程组", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-m\"&gt;clear\nclc\nclose all \n%%  仿真步长 h&amp;#61;&lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt; 时\nHfun &amp;#61; &amp;#64;(t,x) &lt;span class=\"hljs-literal\"&gt;[ &lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;); &lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)]&lt;/span&gt;;   % 一阶微分方程导数表达式 \n% 参数\nt &amp;#61; &lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;]&lt;/span&gt;;     % 时间范围\nh &amp;#61; &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;;       % 时间步长\nx0 &amp;#61; &lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;;   % 初始状态 \n% 显式欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T1,X1]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ExplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% 隐式欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T2,X2]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% 两步欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T3,X3]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_2OrderEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% 改进欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T4,X4]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImprovedEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% Matlab自带ode45求解\n&lt;span class=\"hljs-literal\"&gt;[T5,X5]&lt;/span&gt; &amp;#61; ode45( Hfun,t,x0 ); \n% 绘图对比\nfigure\nsubplot(&lt;span class=\"hljs-number\"&gt;311&lt;/span&gt;)\nplot(T1,&lt;span class=\"hljs-constructor\"&gt;X1(:,1)&lt;/span&gt;,T2,&lt;span class=\"hljs-constructor\"&gt;X2(:,1)&lt;/span&gt;,T3,&lt;span class=\"hljs-constructor\"&gt;X3(:,1)&lt;/span&gt;,T4,&lt;span class=\"hljs-constructor\"&gt;X4(:,1)&lt;/span&gt;,T5,&lt;span class=\"hljs-constructor\"&gt;X5(:,1)&lt;/span&gt;)\nxlabel(&amp;#39;&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;&amp;#39;)\nylabel(&amp;#39;x_1&amp;#39;)\nlegend(&amp;#39;显式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;隐式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;两步欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;改进欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;ode45&amp;#39;)\nsubplot(&lt;span class=\"hljs-number\"&gt;312&lt;/span&gt;)\nplot(T1,&lt;span class=\"hljs-constructor\"&gt;X1(:,2)&lt;/span&gt;,T2,&lt;span class=\"hljs-constructor\"&gt;X2(:,2)&lt;/span&gt;,T3,&lt;span class=\"hljs-constructor\"&gt;X3(:,2)&lt;/span&gt;,T4,&lt;span class=\"hljs-constructor\"&gt;X4(:,2)&lt;/span&gt;,T5,&lt;span class=\"hljs-constructor\"&gt;X5(:,2)&lt;/span&gt;)\nxlabel(&amp;#39;&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;&amp;#39;)\nylabel(&amp;#39;x_2&amp;#39;)\nlegend(&amp;#39;显式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;隐式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;两步欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;改进欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;ode45&amp;#39;)\nsubplot(&lt;span class=\"hljs-number\"&gt;313&lt;/span&gt;)\nplot(T1,&lt;span class=\"hljs-constructor\"&gt;X1(:,3)&lt;/span&gt;,T2,&lt;span class=\"hljs-constructor\"&gt;X2(:,3)&lt;/span&gt;,T3,&lt;span class=\"hljs-constructor\"&gt;X3(:,3)&lt;/span&gt;,T4,&lt;span class=\"hljs-constructor\"&gt;X4(:,3)&lt;/span&gt;,T5,&lt;span class=\"hljs-constructor\"&gt;X5(:,3)&lt;/span&gt;)\nxlabel(&amp;#39;&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;&amp;#39;)\nylabel(&amp;#39;x_3&amp;#39;)\nlegend(&amp;#39;显式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;隐式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;两步欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;改进欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;ode45&amp;#39;)\n% 显示欧拉\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ExplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    % 确定时间节点\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; );   \n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;                        \n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n% 隐式欧拉\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; jj &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:m\n           Ind &amp;#61;  zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,m);         % 状态选择向量\n           &lt;span class=\"hljs-constructor\"&gt;Ind(&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;        % 选择的向量位置  \n           fh &amp;#61; &amp;#64;(x) h*Ind*&lt;span class=\"hljs-constructor\"&gt;Hfun(T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;[X(&lt;span class=\"hljs-identifier\"&gt;k&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-identifier\"&gt;jj&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#39;;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;; X(&lt;span class=\"hljs-identifier\"&gt;k&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-identifier\"&gt;jj&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-identifier\"&gt;m&lt;/span&gt;)&amp;#39;]&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt;&amp;#39; - x;    \n           &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt; &amp;#61; fzero( fh,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt; ) ;   \n        &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;                  \n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_2OrderEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; );   \n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; k&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n            &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;    \n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-2,:)&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;   \n        &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImprovedEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; );   \n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        Xp &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;\n        dXp &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;,Xp );\n        &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; (h/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*(d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#43;dXp&amp;#39;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab欧拉法求解非线性常微分方程", ["请教一下", "这个怎么用Matlab编程求解这个非线性常微分方程", "包括显式欧拉法，隐式欧拉法，两步欧拉法，改进欧拉法", "包括图像"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;仅限我个人的理解:&lt;br /&gt;首先你有一个&lt;code class=\"language-javascript\"&gt;优化函数&lt;/code&gt;和一组&lt;code class=\"language-javascript\"&gt;训练数据&lt;/code&gt;,&lt;code class=\"language-javascript\"&gt;优化函数&lt;/code&gt;中有一系列待确定的&lt;code class=\"language-javascript\"&gt;参数&lt;/code&gt;,你的目的就是让优化函数在训练数据中取得一个局部最优解&lt;br /&gt;也就是说计算出一组&lt;code class=\"language-javascript\"&gt;参数&lt;/code&gt;,将参数代入模型之后,模型可以尽可能的符合训练数据&lt;br /&gt;因为是局部最优解,所以可能存在训练效果不好的情况,用测试集套一下就可以一定程度反映出训练好的模型的准确程度&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于线性回归的一些理解，希望可以下纠正错误", ["刚开始学习的小白，什么也不懂，也不知道自己理解的对不对，想问一下可能很蠢的问题🥲", "利用数据进行训练得到的所谓的模型，", "就是会得到一个线性回归函数的意思吗？", "然后再把测试集套到这个函数对这个模型进行评价，得到这个模型的准确性..？是这样的吗？"]], "Tag": "算法设计"}
{"Answer": "http://datakung.com/?p=50&amp;replytocom=5", "Konwledge_Point": "线性规划简介", "Question": ["怎么判定线性回归的好坏", ["分类器的好坏在于准确率。", "\n那线性回归呢？", "\n我现在有10个特征和1个回归值，我想比较一下，用前5个特征做回归好，还是用后5个特征做回归好，该比较什么值呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你看2787行的三个条件&amp;#xff0c;一个一个在代码中测试&amp;#xff0c;找到那个是假&amp;#xff0c;然后去搜一下&lt;br /&gt;我这里没有opencv的包&amp;#xff0c;所以没法试&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python在线性规划的问题", ["\n", "想问一下为什么一些数后面加上点之后就能运行了呢？是因为最后的答案是浮点数吗？感谢大家的解答！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;swap函数有问题啊&amp;#xff0c;int指针和int值怎么能直接相等呢。修改如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; swap(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *u,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *v)\n{\n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;;\n   &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;&amp;#61;*u;\n   *u&amp;#61;*v;\n   *v&amp;#61;&lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;22行的 swap(a[i], a[j]); 改成 swap(&amp;amp;a[i], &amp;amp;a[j]);&lt;br /&gt;下面swap交换的地方&amp;#xff0c;都需要加&amp;amp;&lt;br /&gt;修改后运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/81090479115613.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;完整代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//线性时间选择&lt;/span&gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\nvoid bubble&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Partition(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;val&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;;\nvoid swap(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* u, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* v);\n\nvoid swap(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* u, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* v)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; temp;\n    temp &amp;#61; *u;\n    *u &amp;#61; *v;\n    *v &amp;#61; temp;\n}\nvoid bubble&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; p; i &amp;lt; r; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; r; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;lt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;) swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;);\n        }\n    }\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Partition(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;val&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; pos;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; q, i, j, x;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (q &amp;#61; p; q &amp;lt;&amp;#61; r; q&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;q&lt;/span&gt;]&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt;)\n        {\n            pos &amp;#61; q;\n            break;\n        }\n    }\n    swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;pos&lt;/span&gt;]&lt;/span&gt;);\n\n    i &amp;#61; p; j &amp;#61; r &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; x &amp;#61; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt;]&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt; &amp;lt; x&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;i &amp;lt; r);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[--&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;gt; x);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;gt;&amp;#61; j) break;\n        swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;);\n    }\n    a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt;]&lt;/span&gt; &amp;#61; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;#61; x;\n    return j;\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; s, t;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, j, n, x;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r - p &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;)\n    {\n        bubble&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;;\n        return a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-identifier\"&gt;k&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-comment\"&gt;//找中位数的中位数&amp;#xff0c;r-p-4即上面所说的n-5&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt;&amp;#61; (r - p - &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//把每个组的中位数交换到区间[p,p&amp;#43;(r-p-4)/4]&lt;/span&gt;\n    {\n        s &amp;#61; p &amp;#43; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;i; t &amp;#61; s &amp;#43; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; j&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//冒泡排序&amp;#xff0c;从后开始排&amp;#xff0c;结果使得后三个数是排好顺序的&amp;#xff08;递增&amp;#xff09;&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (n &amp;#61; s; n &amp;lt; t - j; n&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt;]&lt;/span&gt; &amp;gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;) swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;);\n            }\n        }\n        swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;s&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//交换每组中的中位数到前面&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-comment\"&gt;//(r-p-4)/5表示组数-1&amp;#xff0c;则[p,p&amp;#43;(r-p-4)/5]的区间长度等于组数&lt;/span&gt;\n    x &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt; &amp;#43; (&lt;span class=\"hljs-params\"&gt;r&lt;/span&gt; - &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt; - 4)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, (r - p &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//求中位数的中位数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;/*\n    (r-p&amp;#43;1)/10 &amp;#61; (p&amp;#43;(r&amp;#43;p-4)/5-p&amp;#43;1)/2\n    */&lt;/span&gt;\n    i &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Partition(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)&lt;/span&gt;; j &amp;#61; i - p &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k &amp;lt;&amp;#61; j) return &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; return &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1, &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt; - &lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;)&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main(void)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x, i;\n    &lt;span class=\"hljs-comment\"&gt;//数组a存了0-79&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;]&lt;/span&gt; &amp;#61; { &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;26&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;37&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;39&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;38&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;34&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;43&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;41&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;42&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;44&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;53&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;57&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;55&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;52&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;54&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;63&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;61&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;67&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;66&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;69&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;68&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;62&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;73&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;71&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;77&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;76&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;79&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;78&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;74&lt;/span&gt;,\n    };\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;x);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;The %d smallest number is %d\\n&amp;#34;&lt;/span&gt;, x, &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, 0, 79, &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这里有个详细的解答&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/wl1780852311/article/details/101000722\" id=\"textarea_1651197375953_1651197410124_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;算法&amp;#xff1a;线性时间选择_顾道长生&amp;#39;的博客-CSDN博客_线性时间选择算法&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;定义&amp;#xff1a;给定线性序集中n个元素和一个整数k&amp;#xff0c;1≤k≤n&amp;#xff0c;要求找出这n个元素中第k小的元素。&amp;#xff08;1&amp;#xff09;在某些特殊情况下&amp;#xff0c;很容易设计出解选择问题的线性时间算法。如&amp;#xff1a;当要选择最大元素或最小元素时&amp;#xff0c;显然可以在O(n)时间完成。&amp;#xff08;一趟比较即可&amp;#xff09;&amp;#xff08;2&amp;#xff09;一般的选择问题&amp;#xff0c;特别是中位数的选择问题似乎比最小&amp;#xff08;大&amp;#xff09;元素要难。但实际上&amp;#xff0c;从渐近阶的意义上&amp;#xff0c;它们是一样的。也可以在O(n)时间完成。步骤&amp;#xff1a;&amp;#xff08;1&amp;#xff09;将n个输入元...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/wl1780852311/article/details/101000722&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["C语言学习，算法设计，线性时间选择", ["我在学习线性时间选择算法，编写如下程序，算法要求是找到n个元素中第k小的元素：", "\n", "//线性时间选择", "\n#", "include", " <stdio.h>\nvoid bubble", "Sort(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ")", ";\n", "int", " ", "Partition(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "val", ")", ";\n", "int", " ", "Select(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "k", ")", ";\nvoid swap(", "int", " *u,", "int", " *v);\n\nvoid swap(", "int", " *u,", "int", " *v)\n{\n   ", "int", " temp;\n   temp=u;\n   u=v;\n   v=temp;\n}\nvoid bubble", "Sort(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ")", "\n{ \n    ", "int", " i,j;\n    ", "for", "(i=p; i<r; i++)\n    {\n        ", "for", "( j=i+", "1", "; j<=r; j++)\n        {\n            ", "if", "(a", "[", "j", "]", "<a", "[", "i", "]", ") swap(a", "[", "i", "]", ",a", "[", "j", "]", ");\n        }\n    }\n}\n\n", "int", " ", "Partition(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "val", ")", "\n{\n    ", "int", " pos;\n    ", "int", " q,i,j,x;\n    ", "for", "( q=p; q<=r; q++)\n    {\n        ", "if", "(a", "[", "q", "]", "==", "val", ")\n        {\n            pos=q;\n            break;\n        }\n    }\n    swap(a", "[", "p", "]", ",a", "[", "pos", "]", ");\n\n    i=p; j=r+", "1", "; x=a", "[", "p", "]", ";\n    ", "while", "(", "1", ")\n    {\n        ", "while", "(a", "[", "++", "i", "]", "<x", " && ", "i<r);\n        ", "while", "(a", "[--", "j", "]", ">x);\n        ", "if", "(i>=j) break;\n        swap(a", "[", "i", "]", ",a", "[", "j", "]", ");\n    }\n    a", "[", "p", "]", "=a", "[", "j", "]", "; a", "[", "j", "]", "=x;\n    return j;\n}\n\n", "int", " ", "Select(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "k", ")", "\n{\n    ", "int", " s,t;\n    ", "int", " i,j,n,x;\n    ", "if", "(r-p<", "75", ")\n    {\n        bubble", "Sort(", "a", ",", "p", ",", "r", ")", ";\n        return a", "[", "p", "+", "k", "-", "1", "]", ";\n    }\n    ", "//找中位数的中位数，r-p-4即上面所说的n-5", "\n    ", "for", "( i=", "0", "; i<=(r-p-", "4", ")/", "5", "; i++) ", "//把每个组的中位数交换到区间[p,p+(r-p-4)/4]", "\n    {\n        s=p+", "5", "*i; t=s+", "4", ";\n        ", "for", "( j=", "0", "; j<", "3", "; j++) ", "//冒泡排序，从后开始排，结果使得后三个数是排好顺序的（递增）", "\n        {\n            ", "for", "( n=s; n<t-j; n++)\n            {\n                ", "if", "(a", "[", "n", "]", ">a", "[", "n", "+", "1", "]", ") swap(a", "[", "n", "]", ",a", "[", "n", "+", "1", "]", ");\n            }\n        }\n        swap(a", "[", "p", "+", "i", "]", ",a", "[", "s", "+", "2", "]", ");", "//交换每组中的中位数到前面", "\n    }\n    ", "//(r-p-4)/5表示组数-1，则[p,p+(r-p-4)/5]的区间长度等于组数", "\n    x=", "Select(", "a", ",", "p", ",", "p", "+(", "r", "-", "p", "-4)", "/", "5", ",(r-p+", "1", ")/", "10", ");", "//求中位数的中位数", "\n    ", "/*\n    (r-p+1)/10 = (p+(r+p-4)/5-p+1)/2\n    */", "\n    i=", "Partition(", "a", ",", "p", ",", "r", ",", "x", ")", "; j=i-p+", "1", ";\n    ", "if", "(k<=j) return ", "Select(", "a", ",", "p", ",", "i", ",", "k", ")", ";\n    ", "else", " return ", "Select(", "a", ",", "i", "+1,", "r", ",", "k", "-", "j", ")", ";\n}\n", "int", " main(void)\n{\n    ", "int", " x,i;\n    ", "//数组a存了0-79", "\n    ", "int", " a", "[", "80", "]", "= {", "3", ",", "1", ",", "7", ",", "6", ",", "5", ",", "9", ",", "8", ",", "2", ",", "0", ",", "4", ",", "13", ",", "11", ",", "17", ",", "16", ",", "15", ",", "19", ",", "18", ",", "12", ",", "10", ",", "14", ",", "23", ",", "21", ",", "27", ",", "26", ",", "25", ",", "29", ",", "28", ",", "22", ",", "20", ",", "24", ",", "33", ",", "31", ",", "37", ",", "36", ",", "35", ",", "39", ",", "38", ",", "32", ",", "30", ",", "34", ",", "43", ",", "41", ",", "47", ",", "46", ",", "45", ",", "49", ",", "48", ",", "42", ",", "40", ",", "44", ",", "53", ",", "51", ",", "57", ",", "56", ",", "55", ",", "59", ",", "58", ",", "52", ",", "50", ",", "54", ",", "63", ",", "61", ",", "67", ",", "66", ",", "65", ",", "69", ",", "68", ",", "62", ",", "60", ",", "64", ",", "73", ",", "71", ",", "77", ",", "76", ",", "75", ",", "79", ",", "78", ",", "72", ",", "70", ",", "74", ",\n               };\n    scanf(", "\"%d\"", ",&x); \n    printf(", "\"The %d smallest number is %d\\n\"", ",x,", "Select(", "a", ",0,79,", "x", ")", ");\n    return ", "0", ";\n}\n\n", "\n", "运行结果如下：", "\n", "\n", "请问是哪有问题，应该怎么修改。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的意思是决策树的结果是 不同的线性回归函数&amp;#xff0c;例如简单地不同斜率的直线&amp;#xff0c;那么以上回答的思路似乎有问题。&lt;br /&gt;首先这是一个分类问题&amp;#xff0c;决策结果是“第k个回归函数“&amp;#xff0c;然后再用 “第k个回归函数“ 计算得到具体的函数值。&lt;br /&gt;这个问题取决于&amp;#xff0c;所述不同的线性回归函数是不是已知确定的&amp;#xff0c;还是也要同时进行学习的。如果线性回归函数已知&amp;#xff0c;则本质上仍然是分类问题&amp;#xff0c;做一个预处理把”第k类“的函数值与实际值之差作为分类模型的误差&amp;#xff0c;就可以完成分类。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["逻辑树与线性回归的结合使用什么算法？", ["正在做一个预测产量的算法，能否有一种决策树它的叶子节点不是分类标签，而是一个个不同的线性回归函数。这样在输入投入物料时，根据投入物料的属性对应到逻辑树的节点上进行计算。 大家给我个搜索方向或者实现的路径想法就可以了。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;调用这个方法&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-m\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_RK4( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  \n    x0 &amp;#61; x0&amp;#39;;                  % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        K1 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;     , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39; );    \n        K2 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;&amp;#43;h/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39;&amp;#43;h*K1/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; ); \n        K3 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;&amp;#43;h/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39;&amp;#43;h*K2/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; ); \n        K4 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;&amp;#43;h   , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39;&amp;#43;h*K3 ); \n        &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39; &amp;#43; (h/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;( K1 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K2 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K3 &amp;#43; K4 );      \n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;( K1 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K2 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K3 &amp;#43; K4 );\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab龙格库塔法求解非线性常微分方程", ["请教一下", "这个怎么用Matlab编程求解这个非线性常微分方程", "用龙格库塔法"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;同学&amp;#xff0c;你把你的优化的目标函数和约束条件都说一下&amp;#xff0c;目前来看你的这些代码比较凌乱&amp;#xff0c;看不出具体在优化什么&amp;#xff0c;以及约束什么&amp;#xff0c;还有sym变量&amp;#xff0c;非常忌讳的东西。&lt;br /&gt;全局找最小&amp;#xff0c;不用优化&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;% 这个是全局找最小\n[X,Y] &amp;#61; meshgrid(&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;);\n&lt;span class=\"hljs-attr\"&gt;F&lt;/span&gt; &amp;#61; X.*Y;\n&lt;span class=\"hljs-attr\"&gt;C&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;(size(X));\nfor &lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:numel(X)\n    &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; X(i);\n    &lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; Y(i);\n    &lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    for &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n        &lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; c&amp;#43; (&lt;span class=\"hljs-number\"&gt;184900&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;860&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/...\n            (&lt;span class=\"hljs-number\"&gt;860&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;249600&lt;/span&gt;);\n    end\n    C(i) &amp;#61; &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;-c&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nend\n&lt;span class=\"hljs-attr\"&gt;minf&lt;/span&gt; &amp;#61; min(F(C));\n&lt;span class=\"hljs-attr\"&gt;I&lt;/span&gt; &amp;#61; find(&lt;span class=\"hljs-attr\"&gt;minf&amp;#61;&amp;#61;F&amp;amp;C);&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; X(I)\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; Y(I)\n&lt;span class=\"hljs-attr\"&gt;fmin&lt;/span&gt; &amp;#61; x*y\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;最后结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;fmin&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;优化的代码在评论区&amp;#xff0c;只是fmincon只能找到局部最优&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab求多元非线性，求和里面的m也是变量吗", ["目标函数：", "function y=myfun(k)", "y=x(1)*x(2)", "约束条件：", "\n", "function [", "c", ",", "ceq]", "=", "cons(", "x", ")\n", "eq", "=", "symsum((", "400", "^", "2", "+", "800", "*(m", "-1", ")*y+(m", "-1", ")^", "2", "*y^", "2", ")/(", "800", "*(m", "-1", ")*y+(m", "-1", ")^", "2", "*y^", "2", ")", ",", "m", ",", "2", ",", "x", ")", ";", "\n", "c", "=", "-", "double", "(", "eq", ")", "-6", ";", "\nceq", "=", "[]", ";\n\n", "\n", "\n", "主程序：", "\n", ">> syms x y m\nceq=[];\n", "A", "=[];\nb=[];\n", "Aeq", "=[];\nbeq=[];\nx(", "1", ")=", "6", ",x(", "2", ")=", "8", ";\nk0=[x(", "1", "),x(", "2", ")];\nlb=[", "6", ",", "8", "];\nub=[", "12", ",", "16", "];\n[x,fval,exitflag,output]=fmincon(@fun,k0,", "A", ",b,[],[],[],[],@cons);\ndisp(", "'x(1)、x(2)、y值'", ")\n \nx =\n \n", "6", "\n \n错误使用 fmincon (line ", "224", ")\n", "FMINCON", " requires the following inputs to be of data type double: ", "'X0'", ".\n \n![img](https://img-mid.csdnimg.cn/release/static/image/mid/ask/", "19219581353612.", "png ", "\"=600 #left\"", ")\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性系统有两个属性&amp;#xff1a;齐次性和叠加性&amp;#xff0c;若系统为y&amp;#xff08;n&amp;#xff09;&amp;#61;T[f(n)]&amp;#xff0c;齐次&amp;#xff1a;T[af(n)]&amp;#61;aT[f(n)],叠加&amp;#xff1a;T[f1(n)&amp;#43;f2(n)]&amp;#61;T[f1(n)]&amp;#43;T[f2(n)]&amp;#xff0c;所以既齐次又叠加的系统为线性系统&amp;#xff0c;亦可用此判断。  【望采纳】&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何判断是否为线性系统", ["零状态线性如何判断，导数和积分部分应该怎么计算，是求导和求积分一定是零吗，是需要带公式吗", "![img](", "https://img-mid.csdnimg.c", "\n", "n/release/static/image/mid/ask/162075222366153.jpg \"#left\")"]], "Tag": "算法设计"}
{"Answer": "是可以的，我发现我一直显示不出来是因为我没有给标题设置宽度比和高度比，所以显示不出来，因为不知道layout__below怎么引用布局就重新倒着重写了一遍布局\r\n```&lt;include layout=\"@layout/title\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"8%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_2\"\r\n        android:text=\"      \"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"20%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/enter\"\r\n        android:text=\"登录\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toLeftOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/register\"\r\n        android:text=\"注册\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toRightOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_1\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/enter\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"55%\"\r\n        app:layout_heightPercent=\"2%\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/key\"\r\n        android:text=\"密码\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/null_1\"\r\n        android:layout_alignLeft=\"@id/null_1\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_key\"\r\n        android:layout_alignTop=\"@id/key\"\r\n        android:layout_toRightOf=\"@id/key\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的密码\"\r\n        android:maxLines=\"1\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/account\"\r\n        android:text=\"账户\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/key\"\r\n        android:layout_alignLeft=\"@id/key\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n    /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_account\"\r\n        android:layout_alignTop=\"@id/account\"\r\n        android:layout_toRightOf=\"@id/account\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的手机号\"\r\n        android:maxLines=\"1\"\r\n    /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/null_3\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/account\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id/image_1\"\r\n        android:src=\"@drawable/image_1\"\r\n        android:layout_above=\"@id/null_3\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"30%\"\r\n        /&gt;\r\n\r\n```\r\n最后得图![图片说明](https://img-ask.csdn.net/upload/201905/30/1559211604_22833.png)", "Konwledge_Point": "线性规划简介", "Question": ["请问百分比布局可以引用线性布局的标题栏吗？求大神解答！！！", ["想在百分比布局里尝试引用线性布局的标题栏，怎么也不成功，我是按照第一行代码那本书的引用布局部分做的，怎么也弄不出来，好懵", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我没太看明白你取得那6个特征&amp;#xff0c;x0、2、5不都是常量吗x1和x3是一次函数&amp;#xff0c;x4是二次函数&amp;#xff0c;这个是否用3个特征就可以了&amp;#xff0c;你最后想要的效果是要一个二次函数去拟合你原本图片中的那条线吗&amp;#xff1f;&lt;br /&gt;我用你其中一张图片研究了一下,目前的效果是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; cv2\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LinearRegression&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,data,labels&lt;/span&gt;):\n        self.data &amp;#61; data\n        self.labels &amp;#61; labels\n        self.features &amp;#61; np.zeros((&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,self.data.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]))\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;train&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,learning_rate, num_iterations&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_iterations):\n            self.step_gradient(learning_rate)\n            &lt;span class=\"hljs-comment\"&gt;# loss &amp;#61; self.loss_fuction()&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;# print(f&amp;#39;第{i}轮loss&amp;#61;{loss}, features&amp;#61;{self.features}&amp;#39;)&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self.features\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;step_gradient&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, learning_rate&lt;/span&gt;):\n        N &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(self.labels))\n        err_current &amp;#61; np.&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(self.features*self.data,axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - self.labels\n        features_gradient &amp;#61; np.array([&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;([x**i*err &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x,err &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;zip&lt;/span&gt;(self.data[:,i],err_current)])*(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/N) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(self.features.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])])\n        self.features &amp;#61; self.features - (learning_rate* features_gradient)\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;loss_fuction&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        totalError &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;([(y-(np.&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(self.features*x,axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)))**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x,y &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;zip&lt;/span&gt;(self.data,self.labels)])\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; totalError / &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(self.labels))\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;draw&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,num_iterations&lt;/span&gt;):\n        plt.rcParams[&lt;span class=\"hljs-string\"&gt;&amp;#39;font.sans-serif&amp;#39;&lt;/span&gt;] &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;]\n        plt.rcParams[&lt;span class=\"hljs-string\"&gt;&amp;#39;axes.unicode_minus&amp;#39;&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n        x &amp;#61; self.data[:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n        sl &amp;#61; [s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; s &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sorted&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;enumerate&lt;/span&gt;(x), key&amp;#61;&lt;span class=\"hljs-keyword\"&gt;lambda&lt;/span&gt; a:a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])]\n        y &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(x*self.features[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.data]\n        sort_y &amp;#61; [y[i] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; sl]\n        sort_labels &amp;#61; [self.labels[i] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; sl]\n        x.sort()\n        plt.scatter(x,sort_labels,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;source&amp;#39;&lt;/span&gt;)\n        plt.plot(x, sort_y,color&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;predict&amp;#39;&lt;/span&gt;)\n        plt.xlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;)\n        plt.ylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n        plt.title(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(num_iterations)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;轮&amp;#39;&lt;/span&gt;)\n        plt.legend()\n        plt.show()\n \n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    img &amp;#61; cv2.imread(&lt;span class=\"hljs-string\"&gt;&amp;#39;line.jpg&amp;#39;&lt;/span&gt;)\n    hsv &amp;#61; cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\n    low_hsv &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;221&lt;/span&gt;])\n    high_hsv &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;])\n    mask &amp;#61; cv2.inRange(hsv, lowerb&amp;#61;low_hsv, upperb&amp;#61;high_hsv)\n    list_y &amp;#61; []\n    list_x &amp;#61; []\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(mask),&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n        xmax &amp;#61; []\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(mask[i]),&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; mask[i][j] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                list_x.append(j)\n                list_y.append(i)\n    list_x &amp;#61; [x/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; list_x]\n    list_y &amp;#61; [y/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; y &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; list_y]\n    list_x &amp;#61; [[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,x,x**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; list_x]\n    learning_rate &amp;#61; &lt;span class=\"hljs-number\"&gt;0.001&lt;/span&gt;\n    num_iterations &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;\n    lr &amp;#61; LinearRegression(np.array(list_x),np.array(list_y))\n    lr.train(learning_rate,num_iterations)\n    lr.draw(num_iterations)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/094758724756114.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/844188724756142.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241129724756158.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性回归数组行数不对应", ["问题遇到的现象", "\n", "线性回归中遇到数组行数不对应的情况", "\n", "问题相关代码，请勿粘贴截图", "\n", "import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 change40.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n\n", "z40", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z40.shape[0],30):\n    ", "z1", "=z40[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label40", "=y_array\n", "z40", "=np.vstack((x0,x1,x2,x3,x4,x5)).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 50.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z50", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z50.shape[0],30):\n    ", "z1", "=z50[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label50", "=y_array\n", "z50", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n \nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 55.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z55", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z55.shape[0],30):\n    ", "z1", "=z55[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label55", "=y_array\n", "z55", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 -60.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z60", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z60.shape[0],30):\n    ", "z1", "=z60[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label60", "=y_array\n", "z60", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 65.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z65", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z65.shape[0],30):\n    ", "z1", "=z65[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label65", "=y_array\n", "z65", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 70.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z70", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z70.shape[0],30):\n    ", "z1", "=z70[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label70", "=y_array\n", "z70", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\nrescombine = np.vstack((z40,z50,z55,z60,z65,z70))\nlabels= np.hstack((label40,label50,label55,label60,label65,label70)).T\n", "labels", "=labels.reshape(-1, 1)\n\n", "from", " sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(rescombine,labels,", "test_size", "=0.25)\n\n", "from", " sklearn.preprocessing import MinMaxScaler\nmm = MinMaxScaler()\nx_train = mm.fit_transform(x_train)\ny_train = mm.fit_transform(y_train)\ny_max = y_train.max(", "axis", "=0)\ny_min = y_train.min(", "axis", "=0)\n\n", "data", "=x_train\n", "labels", "=y_train\n\nclass LinearRegression:\n    def __init__(self,data,labels):\n        \n        self.data = data\n        self.labels = labels\n        num_features = len(data[1])\n        self.theta = np.zeros((num_features,1))\n        \n\n\n    def train(self,alpha,num_iterations = 500):\n       \n        cost_history = self.gradient_descent(alpha,num_iterations)\n        return self.theta,cost_history\n        \n    def gradient_descent(self,alpha,num_iterations):\n        cost_history= []\n        ", "for", " _ ", "in", " range(num_iterations):\n            self.gradient_step(alpha)\n            cost_history.append(self.cost_function(self.data,self.labels))\n        return cost_history\n        \n        \n    def gradient_step(self,alpha):    \n        num_examples = data.shape[0]\n        prediction = LinearRegression.hypothesis(self.data,self.theta)\n        delta = prediction - self.labels   ##有问题", "..", ".\n        theta = self.theta\n        theta = theta - alpha*(1/num_examples)*(np.dot(delta.T,self.data)).T\n        self.theta = theta\n        \n        \n    def cost_function(self,data,labels):\n        self.m = len(labels) \n        delta = LinearRegression.hypothesis(data,self.theta) - labels\n        cost = (1/2)*np.dot(delta.T,delta)/self.m\n        return cost[0][0]\n        \n    \n    def hypothesis(data,theta):   \n        predictions = np.dot(data,theta)\n        return predictions\n        \n\nx_train = rescombine\n\ny_train = labels\n\nnum_iterations = 500\nlearning_rate = 0.01  \n\n\nlinear_regression = LinearRegression(x_train, y_train)\n\n(theta, cost_history) = linear_regression.train(learning_rate, num_iterations)\n\n\n\n", "print", " (theta, cost_history)\n", "print", "(len( cost_history))\n\n", "\n", "运行结果及报错内容", "\n", "发生异常: ValueError\noperands could not be broadcast together with shapes (207,1) (155,1) \n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 380, ", "in", " gradient_step\n    delta = prediction - self.labels   ##有问题...\n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 372, ", "in", " gradient_descent\n    self.gradient_step(", "alpha", ")\n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 366, ", "in", " train\n    cost_history = self.gradient_descent(", "alpha", ",num_iterations)\n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 408, ", "in", " <module>\n    (theta, cost_history) = linear_regression.train(learning_rate, num_iterations)\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "我提取了一些数据", "\n", "import numpy as np\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 change40.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n\n", "z40", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z40.shape[0],30):\n    ", "z1", "=z40[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label40", "=y_array\n", "z40", "=np.vstack((x0,x1,x2,x3,x4,x5)).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 50.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z50", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z50.shape[0],30):\n    ", "z1", "=z50[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label50", "=y_array\n", "z50", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n \nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 55.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z55", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z55.shape[0],30):\n    ", "z1", "=z55[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label55", "=y_array\n", "z55", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 -60.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z60", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z60.shape[0],30):\n    ", "z1", "=z60[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label60", "=y_array\n", "z60", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 65.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z65", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z65.shape[0],30):\n    ", "z1", "=z65[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label65", "=y_array\n", "z65", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 70.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z70", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z70.shape[0],30):\n    ", "z1", "=z70[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label70", "=y_array\n", "z70", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\nrescombine = np.vstack((z40,z50,z55,z60,z65,z70))\nlabels= np.hstack((label40,label50,label55,label60,label65,label70)).T\n", "labels", "=labels.reshape(-1, 1)\n\n", "from", " sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(rescombine,labels,", "test_size", "=0.25)\n\n", "from", " sklearn.preprocessing import MinMaxScaler\nmm = MinMaxScaler()\nx_train = mm.fit_transform(x_train)\ny_train = mm.fit_transform(y_train)\ny_max = y_train.max(", "axis", "=0)\ny_min = y_train.min(", "axis", "=0)\n\n", "data", "=x_train\n", "labels", "=y_train\n\nnum_features = len(data[1])\ntheta = np.zeros((num_features,1))\npredictions = np.dot(data,theta)\n", "print", "(len(data[1]))#列数\n", "print", "(len(data))#行数\n", "print", "(len(theta[1]))\n", "print", "(len(theta))\n", "print", "(len(predictions [1]))\n", "print", "(len(predictions))\n", "print", "(len(labels))\n", "print", "(len(labels[1]))\n\n", "\n", "运行结果显示prediction并没有出错", "\n", "6\n155\n1\n6\n1\n155\n155\n1\n\n", "\n", "我想要达到的结果 找出原程序里的错误原因"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/v5zsq/article/details/47948397", "Konwledge_Point": "线性规划简介", "Question": ["The Balance              一元线性同余方程", ["Description ", "\n给出两种质量的砝码，和一件物品，问要多少砝码能称出物品，砝码的个数满足两种砝码的数量和尽量小，如果还有多解满足两种砝码的总质量最少 ", "\nInput ", "\n多组用例，每组用例包括三个整数a，b和d分别表示两种砝码的质量以及物品的质量，以0 0 0结束输入 ", "\nOutput ", "\n对于每组用例，输出能称出物品质量的砝码个数，砝码的个数满足两种砝码的数量和尽量小，如果还有多解满足两种砝码的总质量最少 ", "\nSample Input ", "\n700 300 200 ", "\n500 200 300 ", "\n500 200 500 ", "\n275 110 330 ", "\n275 110 385 ", "\n648 375 4002 ", "\n3 1 10000 ", "\n0 0 0 ", "\nSample Output ", "\n1 3 ", "\n1 1 ", "\n1 0 ", "\n0 3 ", "\n1 1 ", "\n49 74 ", "\n3333 1 "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;三个未知数四个代数式&amp;#xff0c;容易无解。所以先用前三个求出解&amp;#xff0c;带入验证。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nimport numpy as np\nA&amp;#61;np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[[1,2,-3]&lt;/span&gt;,\n           &lt;span class=\"hljs-selector-attr\"&gt;[2,3,1]&lt;/span&gt;,\n           &lt;span class=\"hljs-selector-attr\"&gt;[3,-1,2]&lt;/span&gt;])\nb&amp;#61;np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[13,4,-1]&lt;/span&gt;)\nx&amp;#61;np&lt;span class=\"hljs-selector-class\"&gt;.linalg&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.solve&lt;/span&gt;(A,b)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;解得x&amp;#61;[2,1,-3]&lt;br /&gt;代入4式&amp;#xff0c;成立。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于线性方程组的求解。，/*+", ["X1+2X2-3X3=13", "2X1+3X2+X3=4", "3X1-X2+2X3=-1", "X1-X2+3X3=-8"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一看就是正在学数据结构的同学&amp;#xff0c;现在没有电脑得空给你敲敲&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性表链式存储结构。。", ["要求：", "\n", "1", ".写出线性表链式存储结构；\n\n", "2", ".写出链式存储的常用操作（函数）；\n\n", "3", ".编写实现集合逆置函数；\n\n", "4", ".编写测试函数；\n\n", "5", ".编写", "main", "函数运行程序。\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这类似于这种构架就行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\ng &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) myfun(g&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nfmincon(g&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ……&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) nlinc(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;))\n\nfunction [&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ceq] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; nlinc(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; num&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;cell(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(:))&amp;#39;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nceq &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;[]&lt;span class=\"hljs-comment\"&gt;; %我这里设若等式约束没有&lt;/span&gt;\nif(条件&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\nelseif(条件&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) \n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\nelse\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于fmincon 函数非线性约束的符号转换。需要一个通用方案", ["\n", "之前的公式计算了fmincon需要的 三个非线性约束，已经转换成了标准型。", "目标函数是求 minimum： m^2+n^2+p^2+q^2", "想要一个转化方式将约束中包含的m,n,p,q 自动转化成x(1),x(2),x(3),x(4)这种形式。", "因为这三约束根据给出的初始条件不同，约束也不一样，所以需要一个通用方案。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;&lt;br /&gt;(1)这是非线性函数求最小值&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;format long%设置显示的小数位长一点\nf &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) (&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;cos(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;*log&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;))/exp(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fminsearch(f&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;)%初值给&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;0.663769531250000&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(2)因为目标函数不是未知数的线性组合&amp;#xff0c;所以需要用到fmincon函数求解&lt;br /&gt;代码供参考&amp;#xff0c;注释的都注释了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;function main()\nfunc &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-5&lt;/span&gt;*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%目标函数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%给初始值&lt;/span&gt;\nA&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;; b &amp;#61; -6;%线性约束A和b&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fmincon(func&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;A&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;b&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-title\"&gt;&amp;#64;nonlinfun&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nfunction [&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ceq] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; nonlinfun(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) %定义非线性约束函数\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%非线性约束条件&lt;/span&gt;\nceq &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; []&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果是&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;1.333333116738571&lt;/span&gt;\n  -&lt;span class=\"hljs-number\"&gt;0.988889101134474&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;即x1 &amp;#61;  1.333333116738571&amp;#xff1b; x2&amp;#61; -0.988889101134474&lt;/p&gt;\n&lt;p&gt;有帮助望题主给个采纳&amp;#xff0c;先行谢谢啦&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何在matlab上实现线性规划问题", ["无约束", "（1）min f(x)＝(x³＋cos x＋x lgx)/e× (0<x<1)", "（2）min x(1)²＋x(2)²－x(1) x(2)－2 x(1)－5(2)", "        { －(x（1）－1)²＋x(2)≥0", "           2 x(1)－3 x(2)＋6≥0", "如何在matlab中输入，求步骤。谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;SVM模型预测解决非线性数据的问题&amp;#xff0c;是通过核函数将非线性数据全部转化成更高维的数据&amp;#xff0c;在更高维度的空间中&amp;#xff0c;使得这些更高维的数据是可以进行线性分类的&amp;#xff0c;从而在实际分类中&amp;#xff0c;其分类原理是首先需要对原始数据进行核函数的变换&amp;#xff0c;根据变换后的数据进行分类判别&amp;#xff0c;最终确定原始数据的所属类别&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["SVM模型预测解决非线性数据的问题，是把数据转化成线性了吗", ["SVM模型预测解决非线性数据的问题，是把数据转化成线性了吗？", "比如 我做空气质量指数的预测，我用ARIMA模型做出的空气质量指数的残差，想将非线性残差序列用SVM模型再做一次预测，最终是把非线性数据转成线性的了吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;代码供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;% 实验&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; \n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;76&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;66&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;87&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;61&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;77&lt;/span&gt;];\n&lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; length(x);\n&lt;span class=\"hljs-attr\"&gt;x_mean&lt;/span&gt; &amp;#61; sum(x)/n%均值&amp;#xff0c;也可以用&lt;span class=\"hljs-attr\"&gt;x_mean&lt;/span&gt; &amp;#61; mean(x)\n&lt;span class=\"hljs-attr\"&gt;s&lt;/span&gt; &amp;#61; sqrt((sum(x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-x_mean^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))/(n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))%标准差\n\n% 实验&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;t&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;sqrt(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-attr\"&gt;Fk&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attr\"&gt;Fk_1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nwhile (abs(Fk/Fk_1 -t) &amp;gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;e-&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; )\n &lt;span class=\"hljs-attr\"&gt;Fk1&lt;/span&gt; &amp;#61; Fk &amp;#43; Fk_1;\n &lt;span class=\"hljs-attr\"&gt;temp&lt;/span&gt; &amp;#61; Fk; \n &lt;span class=\"hljs-attr\"&gt;Fk_1&lt;/span&gt; &amp;#61; Fk;\n &lt;span class=\"hljs-attr\"&gt;Fk&lt;/span&gt; &amp;#61; Fk1;\nend\nformat long\n&lt;span class=\"hljs-attr\"&gt;errors&lt;/span&gt; &amp;#61; Fk/Fk_1 - t\n% 可以看出相差小于&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;e-&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;x_mean &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n  &lt;span class=\"hljs-number\"&gt;72.400000000000006&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n  &lt;span class=\"hljs-number\"&gt;12.112436217008941&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;errors&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n     &lt;span class=\"hljs-number\"&gt;9.771908393574336&lt;/span&gt;e-&lt;span class=\"hljs-number\"&gt;09&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab的练习题，数组编程的", ["这俩该咋编啊，各位帮忙看看，对于矩阵和数组运算一时半会儿还真转不过来弯，", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;a_eq内应该是一个1-3的array,不应该是三个单值,即应该多套一层中括号&lt;br /&gt;修改如下:&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; numpy as np\nfrom scipy.optimize &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; linprog\n\n&lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;])\n&lt;span class=\"hljs-attr\"&gt;a_ub&lt;/span&gt; &amp;#61; np.array([[-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]])\n&lt;span class=\"hljs-attr\"&gt;b_ub&lt;/span&gt; &amp;#61; np.array([-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;])\n&lt;span class=\"hljs-attr\"&gt;a_eq&lt;/span&gt; &amp;#61; np.array([[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]])&lt;span class=\"hljs-comment\"&gt;#注意维度,要多加一个方括号&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;b_eq&lt;/span&gt; &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;])\nprint(c, a_ub, b_ub, a_eq, b_eq)\n\n&lt;span class=\"hljs-attr\"&gt;ret&lt;/span&gt; &amp;#61; linprog(-c, &lt;span class=\"hljs-attr\"&gt;A_ub&amp;#61;a_ub,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;b_ub&amp;#61;b_ub,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;A_eq&amp;#61;a_eq,&lt;/span&gt;\n              &lt;span class=\"hljs-attr\"&gt;b_eq&amp;#61;b_eq,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bounds&amp;#61;((0,&lt;/span&gt; None), (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, None),(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, None)))&lt;span class=\"hljs-comment\"&gt;#变量有三个,bound要写三个&lt;/span&gt;\n\nprint(ret)\nprint(ret.x)  &lt;span class=\"hljs-comment\"&gt;# 表示最优解&lt;/span&gt;\nprint(ret.fun)  &lt;span class=\"hljs-comment\"&gt;# 表示最值&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/658260886136159.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用python求线性规划问题，但是提示错误是A_eq必须正好有两个维度，A_eq中的列数必须等于c的大小", ["代码是这样的：", "错误提示：A_eq必须正好有两个维度，A_eq中的列数必须等于c的大小", "求解！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;本来清明节后工作挺忙的&amp;#xff0c;结果意外的一切正常&amp;#xff0c;上班摸鱼期间看到了你的提问&amp;#xff0c;想尝试用心答一下。&lt;br /&gt;你想知道标题的原因&amp;#xff1f;这个原因是想说&amp;#xff0c;照你的理解F检验通过的话&amp;#xff0c;那么4个自变量也应该是显著的对吧。&lt;/p&gt;\n&lt;p&gt;首先我想解释下多元回归中F检验的意义&amp;#xff0c;我觉得你可能要先明确这一点&amp;#xff0c;F检验中&amp;#xff0c;我们本身是想让其支持备择假设H1而拒绝H0&amp;#xff0c;但犯第一类错误下拒绝了H0&amp;#xff0c;意味着你只能认定肯定有解释变量X1X2X3X4与Y存在回归关系&amp;#xff0c;因为F检验的H0假设是认为k-1个解释变量都不与y存在回归关系。一般的操作过程是F检验通过后&amp;#xff0c;进一步对各变量做t检验以确定哪些X是重要的解释变量。&lt;br /&gt;显然你第一步是成功的&amp;#xff0c;但第二步没有找到一个通过的t。读到此处&amp;#xff0c;我开始质疑你的初始假设条件是否支持你做F检验&amp;#xff0c;即F检验&amp;#xff0c;它可靠吗&amp;#xff1f;&lt;br /&gt;标题里是多元回归的内容&amp;#xff0c;下方的各种建模尝试我看到都是在进行线性建模&amp;#xff0c;那么我首先认为你需要做的是多元线性回归。&lt;br /&gt;我首先说结论吧&amp;#xff0c;基于你给出的结果&amp;#xff0c;因变量间存在着中度的相关性&amp;#xff08;0.5其实很高了&amp;#xff09;&amp;#xff0c;也就是犯了多重共线性的问题。&lt;/p&gt;\n&lt;p&gt;那么我先尝试不借助任何统计论证去解释你的这个结果。从业务端看这种问题可以猜想是不是你的能力测试间并不相互独立&amp;#xff08;其实可以简单暴力的归结为聪明人做什么测试都得心应手&amp;#xff0c;而蠢人干什么可能都差点意思&amp;#xff09;&amp;#xff0c;那么毫无疑问测试分数间是有相关性存在的。而且对应你的Y是某项绩效分数&amp;#xff0c;也可以用这样的业务常识去佐证。毕竟优秀的人绩效也不会差&amp;#xff0c;对吧。&lt;/p&gt;\n&lt;p&gt;那么为什么会在线性组合之后关系反而弱化了&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;我曾经给同事们设计过一项变态的问卷&amp;#xff0c;那份问卷分AB卷&amp;#xff0c;简单弱化概念就是这份问卷可以真实反映做题人的IQ水平&amp;#xff0c;但A卷是得分越高IQ越高&amp;#xff0c;B卷是得分越低IQ越高&amp;#xff08;B卷是我小时候看武林外传李大嘴做测试题的灵机一动&amp;#xff09;&amp;#xff0c;虽然我们没有让每一个受试者把AB卷各答一遍&amp;#xff0c;但我们还是拿到了每个人的得分。你可以看到&amp;#xff0c;IQ与A高度正线性相关&amp;#xff0c;IQ与B高度负线性相关&amp;#xff0c;但IQ与A&amp;#43;B的多项式就显得不那么相关了&amp;#xff08;如果我们真的让每个人都做了A和B&amp;#xff09;。我想这个例子有助于你的进一步思考。&lt;/p&gt;\n&lt;p&gt;接着聊聊统计论证吧。其实在统计学的世界里&amp;#xff0c;回归问题有大量变量间相关&amp;#xff0c;自相关问题多出现在时间序列的分析过程中。在应对这种问题时&amp;#xff0c;因为你的基础假设条件不满足线性回归&amp;#xff0c;也就意味着你的方法其实全部失效了。&amp;#xff08;很残忍对不对。。。&amp;#xff09;要想研究这种问题&amp;#xff0c;就必须重新构筑变量&amp;#xff0c;或者重新研判变量间关系&amp;#xff0c;即使牺牲一部分的信息量&amp;#xff0c;也要保证你的多元线性模型能够更好的拟合。&amp;#xff08;我猜想这部分可能会以EFA过程反驳我&amp;#xff0c;别急&amp;#xff0c;看下去&amp;#xff0c;毕竟我也没看到你的KMO和barrlet不是吗。&amp;#xff09;写到此处我忽然想起一篇我多年前的学年论文博客&amp;#xff0c;你可以参考下面对线性相关时&amp;#xff0c;如何处理能够使得结果可行。&lt;a href=\"https://blog.csdn.net/lixiaomie01/article/details/80395065\" id=\"textarea_1649214326938_1649227112550_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/lixiaomie01/article/details/80395065&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;针对其中的几个点我想我其实没有给你思路&amp;#xff0c;只是告诉了你我不认可的论点&amp;#xff0c;但是统计论证到此处&amp;#xff0c;我无法站在你不可靠的假设条件下做论证&amp;#xff0c;我更希望你尝试下新的方法吧&amp;#xff0c;box-cox变化下&amp;#xff0c;或者lasso试试。&lt;br /&gt;期待你的新结果反馈。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["R语言多元回归。4个自变量全部不显著。但整体F显著。只需要深度解释原因。不需要任何纠错", ["本人初学R语言-海外研究生就读。教授的题目背景是4个不同的能力测试分数作为自变量，1个绩效分数作为因变量。（XY都是score的数字分数）探求哪个能力测试和绩效成绩最相关。100+样本数量", "\n", "多元回归后-出现如标题的问题。教授表示这就是想要同学们探索的问题。", "\n", "查阅资料后，", "怀疑是多重现性或者是残值问题", "-用VIF和一些残值程序-包括数据分布是否正态。数据测试完后-全部没有问题。", "数据分布的很好，无多重现性，也没有残值问题", "。", "\n", "又怀疑是否是这4个因变量之间是否高度相关-", "导致多元回归时候互相抵消了显著性。为此各自做了相关分析，", "4个变量互相之间最高的相关系数也就0.5", "。似乎这个原因站不住脚跟。", "\n", "我突发奇想自己", "组合了4个因变量可能存在的线性组合", "-如123、124、234；23；12、14之类的多元回归。发现每一种回归下-", "各个因变量都显示不同的显著性", "。另外，我还做了", "4个一元回归，全部各自高度显著。", "\n", "这个题目的背景是建立在EFA下的-EFA的结果跑出来建议是4个Factors-正好对应了题目数据里4个能力测试的类别。一共40道题目的分数-所以分成4个因子应该是没问题的（如果能指出倪端，欢迎）", "\n", "本人问题就是想要请求各位帮忙解释这个现象的原因。教授是刻意设置这个结果，", "所以不需要纠错，或者更改某种模型-只希望一个合理的解释-最好联系到背景", "，这4个能力测试的设置是否真的能够预测绩效分数，或者和绩效分数高度相关。所以请求指点一下，", "最好附上一些重要理论或是文献！", "我会深入学习！"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import numpy as np\nimport csv\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib\nmatplotlib.rcParams[&amp;#39;font.sans-serif&amp;#39;] &amp;#61; [&amp;#39;SimHei&amp;#39;]\nmatplotlib.rcParams[&amp;#39;font.family&amp;#39;]&amp;#61;[&amp;#39;sans-serif&amp;#39;]\n\ndata &amp;#61; &amp;#39;&amp;#39;&amp;#39;battery,KM\n   2,12\n   5,31\n   8,45\n   8,52\n   13,79\n   15,85\n   17,115\n   19,119\n   21,135\n   24,145&amp;#39;&amp;#39;&amp;#39;.split(&amp;#39;\\n&amp;#39;)\nfor i,j in enumerate(data):\n    data[i] &amp;#61; j.replace(&amp;#39; &amp;#39;, &amp;#39;&amp;#39;).split(&amp;#39;,&amp;#39;)\n\nwith  open(&amp;#39;LR_data_exam.csv&amp;#39;,&amp;#39;w&amp;#39;) as csvFile: #一行一行地写入到csv文件中\n    writer &amp;#61; csv.writer(csvFile)\n    #先写columns_name\n    writer.writerow(data[0])\n    #写入多行用writerows\n    writer.writerows(data[1:])&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; LR_data_exam.csv&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"310\" src=\"https://img-ask.csdnimg.cn/upload/1624861372289.png\" width=\"402\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;dataframe &amp;#61; pd.read_csv(&amp;#34;LR_data_exam.csv&amp;#34;, sep&amp;#61;&amp;#34;,&amp;#34;)\nx &amp;#61; dataframe[&amp;#39;battery&amp;#39;].tolist()\ny &amp;#61; dataframe[&amp;#39;KM&amp;#39;].tolist()\n\n# 画出数据的散点图\nfig &amp;#61; plt.figure()\nfig.set_size_inches(10, 4)   # 整个绘图区域的宽度10和高度4\nax &amp;#61; fig.add_subplot(1, 2, 1)  # 整个绘图区分成一行两列&amp;#xff0c;当前图是第一个。\n# 画出原始数据的散点图。\nax.set_title(&amp;#34;散点图&amp;#34;)\nax.set_xlabel(&amp;#34;battery&amp;#34;)\nax.set_ylabel(&amp;#34;KM&amp;#34;)\nax.scatter(x, y)\nplt.show()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"269\" src=\"https://img-ask.csdnimg.cn/upload/1624861411134.png\" width=\"309\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;regressor &amp;#61; LinearRegression()\nregressor &amp;#61; regressor.fit(np.reshape(x,(-1, 1)),np.reshape(y,(-1, 1)))\nprint(regressor.coef_, regressor.intercept_)  # 打印拟合结果(参数)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n[[6.28763667]] [-1.19680404]&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;# 画出数据和拟合直线的图\nplt.scatter(x, y)\nplt.plot(np.reshape(x,(-1,1)), regressor.predict(np.reshape(x,(-1,1))))\nplt.xlabel(&amp;#34;battery&amp;#34;) \nplt.ylabel(&amp;#34;KM&amp;#34;) \nplt.title(&amp;#34;拟合结果&amp;#34;)\nplt.show()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"275\" src=\"https://img-ask.csdnimg.cn/upload/1624861449046.png\" width=\"399\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;print(regressor.predict([[10], [20], [30]]))  # model.predict预测x为10,20,30时的结果\nfor i in [40,50,60]:\n    print(regressor.coef_*i &amp;#43; regressor.intercept_)   #用拟合参数预测x为40,50,60时的结果&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n[[ 61.67956266]\n [124.55592935]\n [187.43229605]]\n[[250.30866274]]\n[[313.18502944]]\n[[376.06139613]]&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python编程 线性回归", ["把以下数据制作成csv数据文件,并命名为LR_data_exam.csv。 ", "\n对该文件内的数据进行线性回归", "\n画出数据的散点图", "\n建立线性回归模型并拟合", "\n打印拟合结果(参数) ", "\n画出数据和拟合直线的图", "\n用model.predict预测x为10,20,30时的结果", "\n用拟合参数预测x为40,50,60时的结果", "\n   battery,KM", "\n   2,12", "\n   5,31", "\n   8,45", "\n   8,52", "\n   13,79", "\n   15,85", "\n   17,115", "\n   19,119", "\n   21,135", "\n   24,145"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;根据你提供的代码和错误信息&amp;#xff0c;很可能是你拼写了错误的变量名或模块名。可以检查以下几个方面&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;检查导入的模块名是否正确&amp;#xff0c;正确的模块名应该是statsmodels.api而不是statzmodels.api。&lt;/li&gt;&lt;li&gt;检查是否正确导入了OLS模型&amp;#xff0c;正确的导入方式应该是from statsmodels.regression.linear_model import OLS。&lt;/li&gt;&lt;li&gt;检查X_train2和E_train2是否定义正确&amp;#xff0c;如果这些变量没有定义正确&amp;#xff0c;可能会导致错误。&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;以下是一个正确的多元线性回归模型构建的例子&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; statsmodels.api as sm\n\n&lt;span class=\"hljs-comment\"&gt;# 创建数据&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;X&lt;/span&gt; &amp;#61; np.random.rand(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; X.dot([&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]) &amp;#43; np.random.randn(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 添加常数列1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;X&lt;/span&gt; &amp;#61; sm.add_constant(X)\n\n&lt;span class=\"hljs-comment\"&gt;# 将数据集分为训练集和测试集&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;X_train&lt;/span&gt;, X_test &amp;#61; X[:&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;], X[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;:]\n&lt;span class=\"hljs-attribute\"&gt;y_train&lt;/span&gt;, y_test &amp;#61; y[:&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;], y[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;:]\n\n&lt;span class=\"hljs-comment\"&gt;# 拟合模型&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;model&lt;/span&gt; &amp;#61; sm.OLS(y_train, X_train).fit()\n\n&lt;span class=\"hljs-comment\"&gt;# 查看模型系数&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(model.params)\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;该例子创建了一个包含3个特征的数据集&amp;#xff0c;使用add_constant函数添加了常数列1&amp;#xff0c;将数据集分为训练集和测试集&amp;#xff0c;然后使用OLS函数拟合了一个多元线性回归模型&amp;#xff0c;并查看了模型的系数。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["构建多元线性回归模型", ["构建多远线性回归模型的时候报错了 如图。", "\n", "怎么修改这个错误", "谢谢各位解答"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Earth Engine 有几种使用减速器执行线性回归的方法&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;ee.Reducer.linearFit()&lt;br /&gt;ee.Reducer.linearRegression()&lt;br /&gt;ee.Reducer.robustLinearRegression()&lt;br /&gt;ee.Reducer.ridgeRegression()&lt;br /&gt;最简单的线性回归缩减器是linearFit()计算一个具有常数项的变量的线性函数的最小二乘估计。要获得更灵活的线性建模方法&amp;#xff0c;请使用允许可变数量的自变量和因变量的线性回归缩减器之一。linearRegression()实现普通最小二乘回归&amp;#xff08;OLS&amp;#xff09;。robustLinearRegression()使用基于回归残差的成本函数来迭代地减轻数据中的异常值 ( O&amp;#39;Leary, 1990 )。 ridgeRegression()使用 L2 正则化进行线性回归。&lt;br /&gt;非现象模型我之前也没做过&amp;#xff0c;不知道如何进行。有一个时间序列拟合的函数&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;ee.Algorithms.TemporalSegmentation.LandTrendrFit(timeSeries, vertices, spikeThreshold, minObservationsNeeded)&lt;/strong&gt;&lt;br /&gt;使用一组LandTrendr断点年份对时间序列进行插值。对于时间序列中的每个输入带&amp;#xff0c;输出一个新的一维数组值带&amp;#xff0c;其中包含由顶点图像识别的断点时间之间的输入值插值。更多细节见LandTrendr算法。&lt;br /&gt;Interpolates a time series using a set of LandTrendr breakpoint years. For each input band in the timeSeries, outputs a new 1D array-valued band containing the input values interpolated between the breakpoint times identified by the vertices image. See the LandTrendr Algorithm for more details.&lt;/p&gt;\n&lt;p&gt;Arguments:&lt;br /&gt;timeSeries (ImageCollection):&lt;br /&gt;Time series to interpolate.&lt;br /&gt;要内插的时间序列影像。&lt;br /&gt;vertices (Image):&lt;br /&gt;Vertices image. A 1D array of LandTrendr breakpoint years.&lt;br /&gt;顶点图像。LandTrendr断点年份的一维数组&lt;br /&gt;spikeThreshold (Float, default: 0.9):&lt;br /&gt;Threshold for dampening input spikes (1.0 means no dampening).&lt;br /&gt;阈值设置&lt;br /&gt;minObservationsNeeded (Integer, default: 6):&lt;br /&gt;Min observations needed.&lt;br /&gt;需要的最小观测值&lt;br /&gt;Returns: Image&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["构建LST-NDVI非线性回归模型", ["您好,看了下您的一些关于线性回归的文章, 请教一下非线性的模型要如何构建呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;int x会越界&amp;#xff0c;循环到第三次x*16807会超出int范围&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["正数乘正数后取余为什么结果有负数", ["本人用线性同余法编写了一个产生0,1之间均匀分布的随机数程序，明明都是正数和正数相乘，但结果却含有负值，始终搞不明白为什么，求指点。谢谢", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "void", " ", "main", "()", "\n", "{   \n\n    FILE*fp;\n    fp = ", "fopen", "(", "\"myrandom.txt\"", ", ", "\"w\"", ");\n    ", "if", " (fp != ", "NULL", ")\n    { \n    ", "double", " n;\n    ", "double", " ex=", "0", ";\n    ", "double", " x0;\n    cout << ", "\"请输入要产生的随机数个数\"", ";\n    cin >> n;\n    cout << ", "\"请输入初始种子\"", ";\n    cin >> x0;\n    ", "int", " x = x0;\n    ", "double", " k = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i < n; i++)\n    {\n        \n        x = (x * ", "16807", ") % ", "2147483647", ";", "//进行线性同余的计算", "\n        ", "double", " m = x / ", "2147483607.0", ";\n        k = k + m;\n        ", "fprintf", "(fp, ", "\"%10.8f \"", ", m);\n        cout << endl;\n    }\n    ex = k / n;\n}\n\n", "\n", "\n", "在某一次运算时x就变为负的了！", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;学C语言是为了&lt;strong&gt;控制计算机做你想做的事情&lt;/strong&gt;。学线性代数是为了&lt;strong&gt;分析解决实际应用问题&lt;/strong&gt;。如果你想用计算机解决一个需要用线性代数的实际问题&amp;#xff0c;那么你就需要用C语言将问题的线性代数描述告诉计算机让它来解决。不过基本线性代数用的比较少&amp;#xff0c;不同太担心。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数和C语言有关系吗", ["C语言和线性代数有关系吗？学的电子信息工程，想走软件方向，但是大一的线性代数有点头疼(´;︵;`)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;echarts 应该可以吧&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请问vue怎么写线性图标", ["就是在vue项目中怎么写如下图的线性图表呢？百度了很久都没有相关的代码，哪位有写过相关的帮一下，万分感谢", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建议将x减去2010后再做多项式拟合&amp;#xff0c;设中间变量m &amp;#61; x -2010&amp;#xff0c;然后拟合y与m的关系&amp;#xff0c;得到y关于m的表达式后&amp;#xff0c;再将x &amp;#61; m&amp;#43;2010带回&amp;#xff0c;得到y关于x的表达式。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab多项式数据拟合，因为x过大y过小导致多项式系数为0该怎么解决?", ["Matlab多项式数据拟合，因为x过大y过小导致多项式系数为0该怎么解决?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff0c;ARIMA-GARCH和SVM是两种不同类型的模型&amp;#xff0c;ARIMA-GARCH是时间序列模型&amp;#xff0c;而SVM是非线性回归模型。通常情况下&amp;#xff0c;这些模型不能直接组合在一起&amp;#xff0c;因为它们所涉及的数据和方法有很大的差异。&lt;/p&gt;\n&lt;p&gt;一种可能的方法是使用多个模型进行预测&amp;#xff0c;并将它们的结果组合在一起。例如&amp;#xff0c;您可以使用ARIMA-GARCH模型来预测时间序列数据中的波动性&amp;#xff0c;并使用SVM模型来预测非线性趋势。然后&amp;#xff0c;您可以将两种模型的预测结果结合在一起&amp;#xff0c;以获得最终的预测结果。&lt;/p&gt;\n&lt;p&gt;另一种方法是使用混合模型&amp;#xff0c;即将ARIMA-GARCH模型和SVM模型的某些特性结合在一起&amp;#xff0c;以获得更准确的预测。例如&amp;#xff0c;您可以将ARIMA-GARCH模型的波动性预测结果作为SVM模型的输入特征&amp;#xff0c;或者将SVM模型的非线性预测结果作为ARIMA-GARCH模型的输入特征。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;这些方法需要对数据进行适当的预处理和参数调整&amp;#xff0c;以确保模型的准确性和可靠性。因此&amp;#xff0c;在使用这些组合模型之前&amp;#xff0c;您需要深入了解这些模型以及如何适应您的数据和问题。&lt;br /&gt;将线性模型和非线性模型组合可以采用集成学习的思想&amp;#xff0c;常见的方法包括Bagging、Boosting、Stacking等。对于arima-garch和svm组合模型&amp;#xff0c;可以考虑使用Stacking方法。&lt;/p&gt;\n&lt;p&gt;具体地&amp;#xff0c;可以先将arima-garch和svm分别作为基模型进行训练&amp;#xff0c;然后使用另一个模型作为元模型对基模型的预测结果进行组合。在这个例子中&amp;#xff0c;我们使用svm作为基模型1&amp;#xff0c;arima-garch作为基模型2&amp;#xff0c;使用线性回归作为元模型进行组合。&lt;/p&gt;\n&lt;p&gt;以下是R语言的示例代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-title\"&gt;library&lt;/span&gt;(forecast)\n&lt;span class=\"hljs-title\"&gt;library&lt;/span&gt;(rugarch)\n&lt;span class=\"hljs-title\"&gt;library&lt;/span&gt;(e1071)\n\n&lt;span class=\"hljs-meta\"&gt;# 生成时间序列数据&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;set&lt;/span&gt;.seed(&lt;span class=\"hljs-number\"&gt;123&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; &amp;lt;- arima.sim(list(ar &amp;#61; &lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;), n &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n\n&lt;span class=\"hljs-meta\"&gt;# 划分训练集和测试集&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;train&lt;/span&gt; &amp;lt;- y[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;]\n&lt;span class=\"hljs-title\"&gt;test&lt;/span&gt; &amp;lt;- y[&lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]\n\n&lt;span class=\"hljs-meta\"&gt;# 训练arima-garch模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.arima &amp;lt;- auto.arima(train)\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.garch &amp;lt;- ugarchspec(mean.model &amp;#61; list(armaOrder &amp;#61; c(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)), variance.model &amp;#61; list(garchOrder &amp;#61; c(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)), &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; train) &lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.garch &amp;lt;- ugarchfit(fit.garch, &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; train)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 训练svm模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.svm &amp;lt;- svm(train ~ seq_along(train), kernel &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;radial&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-meta\"&gt;# 对测试集进行预测&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.arima &amp;lt;- forecast(fit.arima, h &amp;#61; length(test))$mean\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.garch &amp;lt;- predict(fit.garch, n.ahead &amp;#61; length(test))$forecast[,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.svm &amp;lt;- predict(fit.svm, &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.frame(&lt;span class=\"hljs-title\"&gt;seq_along&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;test&lt;/span&gt;)))&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 将预测结果组合起来&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.comb &amp;lt;- &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.frame(&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;arima&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;garch&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;svm&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.comb &amp;lt;- lm(test ~ ., &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.comb)&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.comb &amp;lt;- predict(fit.comb, &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.comb)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 计算组合模型的预测误差&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.comb &amp;lt;- mean((pred.comb - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.arima &amp;lt;- mean((pred.arima - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.garch &amp;lt;- mean((pred.garch - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.svm &amp;lt;- mean((pred.svm - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n\n&lt;span class=\"hljs-meta\"&gt;# 输出结果&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ARIMA MSE:&amp;#34;&lt;/span&gt;, mse.arima, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;GARCH MSE:&amp;#34;&lt;/span&gt;, mse.garch, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;SVM MSE:&amp;#34;&lt;/span&gt;, mse.svm, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Combined MSE:&amp;#34;&lt;/span&gt;, mse.comb, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在这个例子中&amp;#xff0c;我们首先生成一个AR(1)时间序列&amp;#xff0c;并将前80个点作为训练集&amp;#xff0c;后20个点作为测试集。我们分别训练了一个ARIMA模型、一个GARCH模型和一个SVM模型&amp;#xff0c;并对测试集进行预测。然后&amp;#xff0c;我们将三个模型的预测结果组合在一起&amp;#xff0c;使用线性回归作为元模型进行组合。最后&amp;#xff0c;我们计算了组合模型和单独的三个基模型的预测误差&amp;#xff0c;并输出了结果。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性和非线性模型如何组合在一起", ["做arima-garch和svm组合模型，不太理解这个怎么组合"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这是常数变易法.&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["非齐次线性微分方程组", ["这个方程组怎么得出来的，非常迷惑", "关于解决非齐次线性微分方程组的问题"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Here is one solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# GET EQUATION AND R-SQUARED AS STRING\n# SOURCE: http://goo.gl/K4yh\n\nlm_eqn &amp;lt;- function(df){\n    m &amp;lt;- lm(y ~ x, df);\n    eq &amp;lt;- substitute(italic(y) == a + b %.% italic(x)*\",\"~~italic(r)^2~\"=\"~r2, \n         list(a = format(coef(m)[1], digits = 2), \n              b = format(coef(m)[2], digits = 2), \n             r2 = format(summary(m)$r.squared, digits = 3)))\n    as.character(as.expression(eq));                 \n}\n\np1 &amp;lt;- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT. I figured out the source from where I picked this code. Here is the &lt;a href=\"http://groups.google.com/group/ggplot2/browse_thread/thread/d53807fa41b95cc0\"&gt;link&lt;/a&gt; to the original post in the ggplot2 google groups&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=\"https://i.stack.imgur.com/7aq55.png\" alt=\"Output\"&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何在图上增加回归直线方程和R^2？", ["\n\n", "我想知道如何在 ggplot 上加上回归线方程和R^2。代码如下：", "\n\n", "library(ggplot2)\ndf <- data.frame(x = c(1:100))\ndf$y <- 2 + 3 * df$x + rnorm(100, sd = 40)\np <- ggplot(data = df, aes(x = x, y = y)) +\n            geom_smooth(method = \"lm\", se=FALSE, color=\"black\", formula = y ~ x) +\n            geom_point()\np\n", "\n\n", "任何帮助我都感激不尽。", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/7549694/adding-regression-line-equation-and-r2-on-graph"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误是由于在字符串中使用了无效的格式化占位符导致的。在这里&amp;#xff0c;你使用了&amp;#34;{:.2f}&amp;#34;这个占位符&amp;#xff0c;它的意思是将一个浮点数格式化为保留两位小数的字符串。&lt;/p&gt;\n&lt;p&gt;但是&amp;#xff0c;在这个语句中&amp;#xff0c;你传递给占位符的是一个二维数组gdp_prediction的第一个元素&amp;#xff0c;它应该是一个标量或一维数组&amp;#xff0c;而不是一个二维数组。因此&amp;#xff0c;你需要使用gdp_prediction[0]或gdp_prediction.flatten()[0]来获取第一个元素&amp;#xff0c;然后将它格式化为字符串。同样的&amp;#xff0c;对于ggdp_prediction也需要做相应的修改。&lt;/p&gt;\n&lt;p&gt;下面是修改后的代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;gdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\nggdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{:.2f}&amp;#39;&lt;/span&gt;.format(gdp_prediction[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者使用flatten()方法&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;gdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\nggdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{:.2f}&amp;#39;&lt;/span&gt;.format(gdp_prediction.flatten()&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注意&amp;#xff0c;在这里我假设了X是用来进行预测的输入数据&amp;#xff0c;你需要根据你的具体情况进行相应的修改。&lt;br /&gt;如果对您有帮助&amp;#xff0c;请给与采纳&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python 线性回归", ["gdp_prediction=np.array(model.predict).reshape(-1,1)", "ggdp_prediction=np.array(model.predict).reshape(-1,1)", "print('{:.2f}'.format(gdp_prediction[0][0]))", "报错是 unsupported format string passed to method.", "format", "请问要怎么改"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为两种写法并不是等价的。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(H-&amp;gt;&lt;/span&gt;Cells[ind].Info &amp;#61;&amp;#61; Legitimate){ &lt;span class=\"hljs-comment\"&gt;//就是这里&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(H-&amp;gt;&lt;/span&gt;Cells[ind].Data &amp;#61;&amp;#61; Key){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//还有这里&lt;/span&gt;\n                return ind;\n            }\n        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这里实际包含了另一个条件&amp;#xff0c;就是内层的&lt;code class=\"language-javascript\"&gt;if&lt;/code&gt;如果没满足&amp;#xff0c;还有&lt;code class=\"language-javascript\"&gt;else&lt;/code&gt;&amp;#xff0c;而这个else是直接返回&lt;code class=\"language-javascript\"&gt;ERROR&lt;/code&gt;。&lt;br /&gt;而下面的写法&amp;#xff0c;实际是把条件限定更加严格。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(H-&amp;gt;&lt;/span&gt;C&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ells&lt;/span&gt;[ind].Info &amp;#61;&amp;#61; Legitimate &amp;amp;&amp;amp; H-&amp;gt;&lt;/span&gt;Cells[ind].Data &amp;#61;&amp;#61; Key){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//就是这里&lt;/span&gt;\n            return ind;\n        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;就是必须满足两个条件才返回&lt;code class=\"language-javascript\"&gt;ind&lt;/code&gt;&amp;#xff0c;不满足则进入&lt;code class=\"language-javascript\"&gt;else&lt;/code&gt;&amp;#xff0c;忽略了进入&lt;code class=\"language-javascript\"&gt;ERROR&lt;/code&gt;的条件。&lt;br /&gt;所以程序上面才是正确的。&lt;br /&gt;如有帮助&amp;#xff0c;希望采纳一下&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["PTA习题问题，离大谱了", ["浙大版《数据结构（第2版）》题目集", "习题5.10 线性探测法的查找函数 (20 分)", "把两个if条件写开就答案正确", "\n", "Position ", "Find", "( HashTable H, ElementType Key )\n{\n    Position ind;\n    ", "int", " ", "count", " = ", "0", ";\n    ", "//循环表长长度", "\n    ", "while", "(", "count", " < H->TableSize){\n        ", "//获取Key第一次在的位置", "\n        ind = Hash(Key +", "count", ",H->TableSize);\n        ", "if", "(H->Cells[ind].Info == Legitimate){ ", "//就是这里", "\n            ", "if", "(H->Cells[ind].Data == Key){", "//还有这里", "\n                ", "return", " ind;\n            }\n        }", "else", "{\n            ", "return", " ind;\n        }\n        ", "count", "++;\n    }\n    ", "return", " ERROR;\n}\n", "\n", "把if的两个条件写在一起，结果就是部分正确", "\n", "Position ", "Find", "( HashTable H, ElementType Key )\n{\n    Position ind;\n    ", "int", " ", "count", " = ", "0", ";\n    ", "//循环表长长度", "\n    ", "while", "(", "count", " < H->TableSize){\n        ", "//获取Key第一次在的位置", "\n        ind = Hash(Key +", "count", ",H->TableSize);\n        ", "if", "(H->Cells[ind].Info == Legitimate && H->Cells[ind].Data == Key){", "//就是这里", "\n            ", "return", " ind;\n        }", "else", "{\n            ", "return", " ind;\n        }\n        ", "count", "++;\n    }\n    ", "return", " ERROR;\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用循环不断比较每个节点的值&amp;#xff0c;如果找到最大值&amp;#xff0c;则记录这个值及其节点&amp;#xff0c;循环结束把尾结点的值和最大值节点的值互换即可&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; datatype ;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt;{\n    datatype data;\n    node * link;\n}; \n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    node * list,* tmp,*pre&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//创建测试链表节点的测试数据&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;){\n        \n        \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入链表第%d个节点的值&amp;#xff1a;&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        \n    \n        tmp &amp;#61; (node*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(node));\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(pre!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n            pre-&amp;gt;link &amp;#61; tmp;\n        }\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            list &amp;#61; tmp;\n        }\n    \n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp-&amp;gt;data);    \n        tmp-&amp;gt;link &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;        \n        pre &amp;#61; tmp;\n                \n        i&amp;#43;&amp;#43;;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//打印移动前&amp;#xff0c;链表各节点的值 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;移动最大值前链表各节点的值为&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    tmp &amp;#61; list;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(tmp!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,tmp-&amp;gt;data,tmp-&amp;gt;link);\n        tmp &amp;#61; tmp-&amp;gt;link;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    \n    \n    tmp &amp;#61; list;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max&amp;#61;tmp-&amp;gt;data;  &lt;span class=\"hljs-comment\"&gt;//把链表节点最大值赋值为链表节点第一个值 &lt;/span&gt;\n    node* maxList&amp;#61;tmp,tmp2;   &lt;span class=\"hljs-comment\"&gt;//最大值节点也赋值为链表第一个节点 &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;0\\n&amp;#34;);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//i&amp;#61;0;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(tmp!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n    \n        &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;0,tmp-&amp;gt;data&amp;#61;%d,tmp-&amp;gt;link&amp;#61;%p\\n&amp;#34;,tmp-&amp;gt;data,tmp-&amp;gt;link);    &lt;/span&gt;\n  &lt;span class=\"hljs-comment\"&gt;//如果链表节点当前最大值小于当前节点的值&amp;#xff0c;则把最大值赋值为当前节点的值&amp;#xff0c;最大值节点也赋值为当前节点         &lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(max&amp;lt;tmp-&amp;gt;data){ \n        &lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;tmp-&amp;gt;data&amp;#61;%d,max&amp;#61;%d\\n&amp;#34;,tmp-&amp;gt;data,max);&lt;/span&gt;\n            max &amp;#61; tmp-&amp;gt;data;\n            maxList &amp;#61; tmp;\n            \n        }\n    &lt;span class=\"hljs-comment\"&gt;//    i&amp;#43;&amp;#43;;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;i&amp;#61;%d\\n&amp;#34;,i);&lt;/span&gt;\n        pre &amp;#61; tmp;  &lt;span class=\"hljs-comment\"&gt;//记录当前节点&amp;#xff0c;以便循环结束记录到链表节点的尾结点 &lt;/span&gt;\n        tmp &amp;#61; tmp-&amp;gt;link;\n    }\n    \n&lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;1-1,maxList&amp;#61;%p,pre&amp;#61;%p\\n&amp;#34;,maxList,pre);&lt;/span&gt;\n    maxList-&amp;gt;data &amp;#61; pre-&amp;gt;data; &lt;span class=\"hljs-comment\"&gt;//把最大值节点的值赋值为尾结点的值 &lt;/span&gt;\n    pre-&amp;gt;data &amp;#61; max;  &lt;span class=\"hljs-comment\"&gt;//把尾结点的值赋值为最大值节点的值&amp;#xff0c;实现把最大值移到节点的最后面的目的 &lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;//打印移动后的结果 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;移动最大值后链表各节点的值为&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    tmp &amp;#61; list;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(tmp!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,tmp-&amp;gt;data);\n        tmp &amp;#61; tmp-&amp;gt;link;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/543424389266111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["最大值移动到最后的线性链表的结点移动", ["已知非空线性链表第1个链结点指针为list，链结点构造为", "struct node{", "datatype data;", "node *link;", "};", "请写一算法，将该链表中数据域值最大的那个点移到链表的最后面。（假设链表中数据域值最大的链结点惟一）（注意：要求先写出算法的解题思路，然后再写出算法）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是2x^3&amp;#43;4x^2&amp;#43;3x&amp;#43;6&amp;#61;0吧&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x)&lt;/span&gt;                   \n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x&amp;#43;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;newx&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x1, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x2)&lt;/span&gt;    \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x;\n    x &amp;#61; (x1*&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x2) - x2*&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1)) / (&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x2) - &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;root&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x1, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x2)&lt;/span&gt;        \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x, y, y1;\n    y1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1);                      \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(y &amp;#61; y1; &lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(y) &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;; )\n    {\n        x &amp;#61; &lt;span class=\"hljs-built_in\"&gt;newx&lt;/span&gt;(x1, x2);           \n        y &amp;#61; &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x);                 \n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y*y1 &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)            \n        {\n            y1 &amp;#61; y;\n            x1 &amp;#61; x;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            x2 &amp;#61; x;                    \n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x;\n    x &amp;#61; &lt;span class=\"hljs-built_in\"&gt;root&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,x);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用弦解法求非线性方程", ["用弦截法求非线性方程2", "3-4", "2+3x-6=0在区间[0,3]的一个实根，精度为10-6。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;左右移项&amp;#xff0c;然后缩小矩阵&amp;#xff0c;继续linalg.solve()&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何在已知部分解的情况下，求解线性方程组？", ["在求解线性方程组时，将线性方程组组装成矩阵形式，可以通过numpy.linalg.solve()直接给出结果。", "但如果已知部分解的情况下，如何得到该情况下线性方程组的解？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;在Matlab中进行周期函数简单线性拟合&amp;#xff0c;可以使用Matlab中的polyfit函数。该函数可以对给定的一组数据点进行线性拟合&amp;#xff0c;并返回拟合的系数。&lt;/p&gt;\n&lt;p&gt;假设有一个周期函数的数据点&amp;#xff0c;可以先通过找到峰值点确定一个周期。然后&amp;#xff0c;将数据点按周期分段&amp;#xff0c;对每个段进行拟合。可以使用Matlab中的mod函数将数据点按周期分段&amp;#xff0c;然后分别对每个段使用polyfit函数进行拟合。最后&amp;#xff0c;将所有段的拟合结果合并起来即可得到周期函数的简单线性拟合。&lt;/p&gt;\n&lt;p&gt;以下是一个示例代码&amp;#xff0c;假设数据点为x和y&amp;#xff0c;周期为period&amp;#xff0c;峰值点为peak&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 计算周期起始点&lt;/span&gt;\nstart &amp;#61; peak - &lt;span class=\"hljs-built_in\"&gt;floor&lt;/span&gt;(period/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n\n&lt;span class=\"hljs-comment\"&gt;% 按周期分段&lt;/span&gt;\nnum_periods &amp;#61; &lt;span class=\"hljs-built_in\"&gt;floor&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x)/period);\nsegments &amp;#61; cell(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,num_periods);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:num_periods\n    indices &amp;#61; start &amp;#43; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:period) &amp;#43; (&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)*period;\n    segments{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;} &amp;#61; [x(indices); y(indices)];\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 对每个段进行拟合&lt;/span&gt;\ncoeffs &amp;#61; cell(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,num_periods);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:num_periods\n    segment &amp;#61; segments{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;};\n    p &amp;#61; polyfit(segment(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,:), segment(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,:), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    coeffs{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;} &amp;#61; p;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 合并拟合结果&lt;/span&gt;\nall_coeffs &amp;#61; [coeffs{:}];\na &amp;#61; all_coeffs(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;);\nb &amp;#61; all_coeffs(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;);\nx_fit &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(x), &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(x), &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\ny_fit &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x_fit));\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:num_periods\n    indices &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)*period&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*period;\n    y_fit(indices) &amp;#61; a(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)*x(indices) &amp;#43; b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 绘制拟合结果&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x, y, &lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;, x_fit, y_fit);\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的代码中&amp;#xff0c;首先计算了每个周期的起始点&amp;#xff0c;并将数据点按周期分段。然后&amp;#xff0c;对每个段使用polyfit函数进行线性拟合&amp;#xff0c;并将拟合结果保存在coeffs变量中。最后&amp;#xff0c;将所有拟合结果合并起来&amp;#xff0c;得到整个周期函数的拟合结果。最后&amp;#xff0c;将数据点和拟合结果绘制在同一张图上&amp;#xff0c;以便比较。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab如何进行周期函数简单线性拟合", ["matlab如何进行周期函数简单线性拟合？", "已有如下图数据及周期峰值点，如何进行分段拟合？并按周期重复", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; 参考这个链接里的文章&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://zhuanlan.zhihu.com/p/75412836\" id=\"textarea_1634915641100_1634915681451_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;一文教你全面掌握用Python实现线性回归 - 知乎&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;全文共 4968字&amp;#xff0c;预计学习时长15分钟或更长 本文旨在为读者理解和应用线性回归时提供参考。虽然线性回归算法很简单&amp;#xff0c;但是只有少数人能真正理解其基本原则。 本文首先会深入挖掘线性回归理论&amp;#xff0c;理解其内在的工作机制…&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://static.zhihu.com/heifetz/favicon.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://zhuanlan.zhihu.com/p/75412836&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["求..如何使用python 线性回归参数来预测保险费随年龄的变化", ["包含显示线性回归参数（斜率和偏差）", "        可视化线性回归线如何拟合数据 "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个是求最小值&amp;#xff0c;所以程序结果没问题。你说的0.5-1 之间&amp;#xff0c;应该是求最大值把。如果你要最大值&amp;#xff0c;可以加个负号。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;def demo_func(x):\n    # Sphere\n    x1&amp;#61;x\n    return -((10-4*x1)/(4*x1&amp;#43;3))*x1\nfrom sko.PSO import PSO\npso &amp;#61; PSO(func&amp;#61;demo_func, n_dim&amp;#61;1, pop&amp;#61;40, max_iter&amp;#61;150, lb&amp;#61;[0], ub&amp;#61;[10], w&amp;#61;0.8, c1&amp;#61;0.5, c2&amp;#61;0.5)\npso.run()\nprint(&amp;#39;best_x is &amp;#39;, pso.gbest_x, &amp;#39;best_y is&amp;#39;, -pso.gbest_y)\nimport matplotlib.pyplot as plt\nplt.plot(pso.gbest_y_hist)\nplt.show()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;这是结果&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"308\" src=\"https://img-ask.csdnimg.cn/upload/1608391196609.png\" width=\"490\" /&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何使用sko PSO 包进行粒子群算法优化（python,PSO ）", ["我想使用这个包进行单目标优化:", "\n\n", "https://github.com/guofei9987/scikit-opt", "\n\n", "目标函数为 y=((10-4x)/(4x+3))*x", "\n\n", "但是我用与例子类似的代码时却获得错误答案", "\n\n", "代码如下：", "\n\n", "def demo_func(x):", "\n    # Sphere", "\n    x1= x", "\n    return ((10-4*x1)/(4*x1+3))*x1", "\nfrom sko.PSO import PSO", "\npso = PSO(func=demo_func, n_dim=1, pop=40, max_iter=150, lb=[0], ub=[10], w=0.8, c1=0.5, c2=0.5)", "\npso.run()", "\nprint('best_x is ', pso.gbest_x, 'best_y is', pso.gbest_y)", "\n\n", "import matplotlib.pyplot as plt", "\n\n", "plt.plot(pso.gbest_y_hist)", "\nplt.show()", "\n\n", "输出是这样的：", "\n\n", "best_x is  [10.] best_y is [-6.97674419]", "\n\n", "事实上这是个错误的答案， 因为通过函数图像我们可以看到正确的答案位于0.5和1之间。", "\n\n", "想求教各位大佬想要获得 正确的 答案y应该怎么写"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;B变量看起来不是每次都清空&amp;#xff0c;建议&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;...\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:floor(a/&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;) %根据步进的循环数自行调整\nB&amp;#61;zeros(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,b);\nB&lt;span class=\"hljs-comment\"&gt;(:,:)&lt;/span&gt;&amp;#61;A(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*(i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*(i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,:);%挑选出的加载段数据赋值给B\n...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样的话应该是每段拟合。&lt;br /&gt;我觉得这是每次都截取10行&amp;#xff0c;拟合不好是因为带上了上次的数据&amp;#xff0c;局部线性&amp;#xff0c;好几个局部在一起就不线性了。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数据线性拟合结果与实际情况不符，越来越偏。", ["问题遇到的现象和发生背景", "\n", "问题背景：从txt中循环取出数据即每隔几行取几行，并将取出的数据线性拟合。", "问题现象：数据挑选没问题，但是循环程序输出的拟合优度越来越差，从0.99几到0.7几递减。如果将拟合度差的那段数据单独挑出来拟合，数据点又呈很好的线性分布，拟合优度也非常好能达到0.99多。", "\n", "问题相关代码，请勿粘贴截图", "\n", "clear all;\n", "A", "=importdata( ", "'test.txt'", ");\n[a,b]=size(A);%识别A的行数；\nD1=[];%输出加载段斜率、截距、拟合优度\nD2=[];%输出卸载段斜率、截距、拟合优度\n", "for", " ", "i", "=1:floor(a/20) %根据步进的循环数自行调整\nB(10*(i-1)+1:10*(i-1)+10,:)=A(20*(i-1)+1:20*(i-1)+10,:);%挑选出的加载段数据赋值给B\n", "x1", "=B(:,2);%应变\n", "y1", "=B(:,7);%荷载 \n", "p1", "=polyfit(x1,y1,1);\n", "c1", "=p1(:,1);\n", "d1", "=p1(:,2);%把拟合后一次函数的系数提取出来，以回归拟合后的y值\n", "R1", "=1 - (sum(((c1*x1+d1)- y1).^2) / sum((y1 - mean(  y1)).^2));\nC1=[p1,R1];\nD1=[D1;C1];\nE(10*(i-1)+1:10*(i-1)+10,:)=A(20*(i-1)+11:20*(i-1)+20,:);%挑选出的卸载段数据赋值给E\n", "x2", "=E(:,2);\n", "y2", "=E(:,7);\n", "p2", "=polyfit(x2,y2,1);\n", "c2", "=p2(:,1);\n", "d2", "=p2(:,2);%把拟合后一次函数的系数提取出来，以回归拟合后的y值\n", "R2", "=1 - (sum(((c2*x2+d2)- y2).^2) / sum((y2 - mean(y2)).^2));\nC2=[p2,R2];\nD2=[D2;C2];\nend\n", "m", "=D1(:,1);\n", "n", "=D2(:,1);\n", "o", "=m./n;\n\n\n", "\n", "我想要达到的结果", "\n", "期望拟合结果能跟实际对应上。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;求解四阶非线性微分方程一般需要使用数值方法&amp;#xff0c;例如有限差分法、有限元法等。由于你提到了反散射方法&amp;#xff0c;可能可以考虑一些基于反演算法的数值求解方法。具体的方法选择需要根据具体的微分方程形式和边界条件来确定。&lt;/p&gt;\n&lt;p&gt;另外&amp;#xff0c;需要注意的是&amp;#xff0c;非线性微分方程的求解一般比较困难&amp;#xff0c;往往需要结合一些数值计算软件或者编程语言来实现。如果你对数学建模或者程序设计不是很熟悉&amp;#xff0c;可能需要寻求专业人士的帮助。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["求解四阶非线性微分方程", ["四阶的非线性微分方程怎么求解啊，有两个边界条件。今天看到反散射方法求Kdv孤立子方程，和我要求的偏微分方程很像，但还是求不出来"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;#define N 2&lt;/span&gt;\nstruct student{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; id;\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; kaoqun;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biaoxian;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; zuoye;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biji;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; sum;\n}stud[N],t;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个学生信息\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].id,&amp;amp;stud[i].name);\n        fflush(stdin);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].kaoqun,&amp;amp;stud[i].biaoxian,&amp;amp;stud[i].zuoye,&amp;amp;stud[i].biji);\n        stud[i].sum &amp;#61; stud[i].kaoqun*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biaoxian*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].zuoye*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biji*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    \n    //排序\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - i; j&amp;#43;&amp;#43;){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按成绩对学生信息进行排序\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (stud[j].sum &amp;gt; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].sum){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;整型数字的比较\n                t &amp;#61; stud[j];\n                stud[j] &amp;#61; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n        }\n    }\n    //打印\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号\\t姓名\\t考勤\\t表现\\t作业\\t笔记\\t总分\\t\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].id);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t&amp;#34;&lt;/span&gt;, stud[i].name);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].kaoqun);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biaoxian);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].zuoye);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biji);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d \\n&amp;#34;&lt;/span&gt;, stud[i].sum);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["文件操作+线性链表+冒泡排序实验室", ["文件操作+线性链表+冒泡排序实验室。现有结构体定义如下：struct stuInfo{    char id[12];            //数据成员    char name[15];    float score;    struct stuInfo *next;   //指针成员};任务及要求：（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，信息如下；00001 张三 10000002 李四 9900003 王五 10000004 王六 8900005 江涛 9800006 陈琪 8800007 祁廷 91（3）接下来，将学号为‘00004’的节点删除；（4）再接下来，利用冒泡排序，对链表继续升序排序；（5）将完整的线性链表信息从头到尾依次存储到磁盘某个路径下的“score.txt”文件中，存储格式和“stuinfo.txt”文件相同。", "哪个大佬救救孩子吧 😭"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两个数&amp;#xff0c;比较一次。1024个不是比较1023次吗&lt;br /&gt;&lt;strong&gt;需要比较的最大次数是元素个数-1&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于Java语言程序设计中的线性查找疑问", ["java语言程序设计中的一句话：对于一个有 1024 ( 2 ∧10 ) 个元素的数组，在最坏情况下 ， 二分査找法只需要比较 11 次 ， 而在最坏的情况下线性査找要比较 1023 次。为什么线性是1023次呀，不是1024次吗 ？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的列表用的RecyclerView&amp;#xff1f;还是直接在线性布局一个个添加的&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Android Studio线性布局下滑滚动无响应", ["如图：", "\n", "\n", "问题：", "\n", "列表无法下拉到底部，有些内容显示不出来，布局是线性布局，请问有什么属性或控件能使列表下拉到底部，之前做了底部间距但是无效果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;很可能是matlab的版本问题&amp;#xff0c;检查一下版本的兼容性。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab App Designer报错“结构体内容引用自非结构体数组对象”", ["github上fork的matlab代码，但是无法查看源代码", "\n", "GitHub项目地址", "https://github.com/NathanJustus/VideoVibrometry_MatlabApp", "\n", "报错", "\n", "\n", "运行报错", "\n", "\n", "matlab刚接触，求各位指点", "\n", "万分感谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;double类型读取用%lf&lt;br /&gt;scanf(&amp;#34;%f%f%f%f%f%f&amp;#34;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d,&amp;amp;e,&amp;amp;f);这里的%f都改成%lf&lt;br /&gt;scanf这里改完就可以了&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,c,d,e,f,x,y;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; det, det1, det2, ind1, ind2;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf%lf%lf%lf%lf%lf&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d,&amp;amp;e,&amp;amp;f);\n\n    det&amp;#61;a*e-b*d;\n    det1&amp;#61;a*f-c*d;\n    det2&amp;#61;c*e-b*f;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(det)&amp;lt;&lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(det1)&amp;lt;&lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;)\n        {\n            ind1&amp;#61;-b/a;\n            ind2&amp;#61;c/a;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Infinite solution:x&amp;#61;%f*k&amp;#43;%f,k varies within R\\n&amp;#34;&lt;/span&gt;,ind1,ind2);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;unsolvable\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        x&amp;#61;det2/det;\n        y&amp;#61;det1/det;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;#61;%f,y&amp;#61;%f\\n&amp;#34;&lt;/span&gt;,x,y);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请看一下哪里错了，ax+by=c   dx+ey=f", ["#include <stdio.h>", "#include<math.h>", "int main()", "{", "    double a,b,c,d,e,f,x,y;", "    double det, det1, det2, ind1, ind2;", "    scanf(\"%f%f%f%f%f%f\",&a,&b,&c,&d,&e,&f);", "    det=a", "e-b", "d;", "    det1=a", "f-c", "d;", "    det2=c", "e-b", "f;", "    if(fabs(det)<1e-6)", "        if(fabs(det1)<1e-6)", "        {ind1=-b/a;", "            ind2=c/a;", "            printf(\"Infinite solution:x=%f*k+%f,k varies within R\\n\",ind1,ind2);}", "        else", "            printf(\"unsolvable\\n\");", "    else", "    {x=det2/det;", "        y=det1/det;", "        printf(\"x=%f,y=%f\\n\",x,y);}", "return (0);", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; divIn() As Double &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;}\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; divOut() As Double &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;}\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; x As Double &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; y As Double &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;For&lt;/span&gt; i As Integer &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; To divIn.Length - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n            &lt;span class=\"hljs-attribute\"&gt;If&lt;/span&gt; x &amp;gt; divIn(i) And x &amp;lt;&amp;#61; divIn(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) Then\n                &lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; (divOut(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - divOut(i)) / (divIn(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - divIn(i)) * (x - divIn(i)) &amp;#43; divOut(i)\n            &lt;span class=\"hljs-attribute\"&gt;End&lt;/span&gt; If\n        &lt;span class=\"hljs-attribute\"&gt;Next&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;MessageBox&lt;/span&gt;.Show(y)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["VB.NET如何进行线性插值计算？", ["VB.NET如何进行线性插值计算？", "比如说一组数据：X分别是0  5  10  15  20；相对应Y为0  0.1  0.4  0.7  0.8。计算X=7时，Y是多少？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;您可以使用非线性规划库&amp;#xff0c;例如 Math.NET Numerics 中的 NLopt 或者 Accord.NET 中的 Nelder-Mead 和 Simplex 方法来实现非线性规划。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;using &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Math&lt;/span&gt;;\nusing &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Optimization&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; NonlinearProgrammingExample\n{\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Program&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] args)\n        {\n            &lt;span class=\"hljs-comment\"&gt;// Define the objective function&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * (x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]),\n                &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// number of variables&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Define the constraints&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;LessThanOrEqualToZero&lt;/span&gt;\n            );\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;GreaterThanOrEqualToZero&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Create the solver&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt; solver &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;[] { constraint1, constraint2 });\n\n            &lt;span class=\"hljs-comment\"&gt;// Solve the problem&lt;/span&gt;\n            double[] result &amp;#61; solver.&lt;span class=\"hljs-title class_\"&gt;Solve&lt;/span&gt;();\n\n            &lt;span class=\"hljs-comment\"&gt;// Print the results&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Result: x &amp;#61; [{0}], f(x) &amp;#61; {1}&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Join&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;, &amp;#34;&lt;/span&gt;, result), &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Value&lt;/span&gt;(result));\n        }\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["c#如何解决非线性规划", ["目前想要用c#做一个求解简单的非线性规划的程序", "之前试过用matlab，但是似乎不能转换文件格式"]], "Tag": "算法设计"}
{"Answer": "http://www.acmerblog.com/hdu-1931-Target-Practice-3006.html", "Konwledge_Point": "线性规划简介", "Question": ["一个有关于线性规划的问题，具体问题请看下面的问题描述", ["Problem Description", "\nThere are many forms of contests where the contestants (shooters) try to hit targets, either moving or still. In this version there are a number of small balloons sitting on the tops of poles that are in turn stuck in the ground at various points in a large field. These poles are not all the same height. The shooter circles the field and fires at the balloons, the goal being to burst all the balloons with as few shots as possible. Since the balloons offer almost no resistance to a bullet, the bullet will pass right through and possibly hit one or more other balloons. So, by judiciously taking shots, the shooter might need only a very few shots to hit all the targets (provided the shooter is a good marksman, which we will assume is the case).", "\nFor example, the following field of 10 targets can be covered in only four shots, as shown. (The first two numbers at each position indicate the position of the balloon, and the third number the height.)", "\nYour job is to determine the fewest number of shots necessary to hit all the targets in a given field.", "\n\n", "Input", "\nThere will be multiple test cases. Each test case will consist of an integer n (<= 50) indicating the number of target positions to follow. A value of n = 0 indicates end of input. There will follow n integer triples, x y h, indicating a balloon at position (x, y) in the field at height h. (There will be at most one balloon at any position (x, y).) All integers are greater than 0 and no greater than 100. Furthermore assume that the shooter can take shots from anywhere on the field at any height. For simplification, assume here that the balloons are points and that the bullets can pass through the poles on which the balloons are perched.", "\n\n", "Output", "\nEach test case should produce one line of output of the form:", "\nTarget set k can be cleared using only s shots.", "\nwhere k is the number of the test case, starting at 1, and the value of s is the minimum number of shots needed to hit all the targets in the set.", "\n\n", "Sample Input", "\n10", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 85 40 58 100 75 7", "\n9", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 100 75 7", "\n0", "\n\n", "Sample Output", "\nTarget set 1 can be cleared using only 4 shots.", "\nTarget set 2 can be cleared using only 3 shots."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;目标函数不是线性函数&amp;#xff0c;这个优化问题不是线性规划&amp;#xff0c;可以使用有约束非线性优化方法来求求解&amp;#xff0c;使用fmincon函数&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;fun &amp;#61; &amp;#64;(x) 12*x(1) &amp;#43; 3*x(1)*ceil(x(2)-1) - 1.5*ceil(x(2)-1)*x(1);\nA &amp;#61; [1 0\n     0 1\n     -1 0\n     0 -1];\nb &amp;#61; [1\n     30\n     0\n     0];\nx0 &amp;#61; [0.5 15]&amp;#39;;\nx &amp;#61; fmincon(fun,x0,A,b);\ng &amp;#61; fun(x)\n\nw &amp;#61; x(1)\nxx &amp;#61; x(2)\np &amp;#61; w/3&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;结果&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;g &amp;#61;\n\n   2.0001e-08\n\n\nw &amp;#61;\n\n   1.6667e-09\n\n\nxx &amp;#61;\n\n    0.0983\n\n\np &amp;#61;\n\n   5.5557e-10&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB线性规划问题", ["如何使用MATLAB求下列方程最优解\nmin f(x)=12*ω+3*ω*ceil (x-1)-1.5*ceil (x-1)\nω=3*p\n0≤x≤30\n0＜ω＜1\n求最优 x 和 ω 以及 p\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;只有5个元素&amp;#xff0c;分别是0,1,2,3,4&amp;#xff0c;下标为5超出了上限&amp;#xff0c;请检查一下代码。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python小白上路，用pso算法解决多元带约束的非线性规划，", ["用pso算法解决多元带约束的非线性规划，一直错误，盼望各位大佬多多指点我一下.", "\n\n", "照猫画虎，还没有人解答，还不知道去看什么，也不知道怎么办，救救孩子吧", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "http://muchong.com/t-4879914-1", "Konwledge_Point": "线性规划简介", "Question": ["求助非线性环节线性化", ["对于双容水箱液位控制系统，如何对描述水箱输出方程中的非线性环节进行线性化？两个水箱对应输出描述方程如图一，系统描述方式如图2.急求大佬解答！！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;11&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-comment\"&gt;%fun1.m文件&lt;/span&gt;\n function f&amp;#61;fun1(x)\nf&amp;#61;sum(x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;\nend\n\n&lt;span class=\"hljs-comment\"&gt;%fun2.m文件&lt;/span&gt;\nfunction [g,h]&amp;#61;fun2(x)\ng&amp;#61;[-x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-20&lt;/span&gt;];\nh&amp;#61;[x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-3&lt;/span&gt;,-x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\nend\n\n命令行输入\n\nclear\nx0&amp;#61;[&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;];    &lt;span class=\"hljs-comment\"&gt;%初值&lt;/span&gt;\nlb&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\nub&amp;#61;[inf,inf,inf];\n&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;&amp;#61;[];b&amp;#61;[];&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;&amp;#61;[];beq&amp;#61;[];\n[x,fval]&amp;#61;fmincon(&lt;span class=\"hljs-string\"&gt;&amp;#39;fun1&amp;#39;&lt;/span&gt;,x0,&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;,b,&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;,beq,lb,ub,&lt;span class=\"hljs-string\"&gt;&amp;#39;fun2&amp;#39;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;22&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;[x,y]&amp;#61;ode45(&amp;#64;cal,[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\nplot(x,y(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));\n \n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-title function_\"&gt;cal&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;~,y&lt;/span&gt;)\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title function_\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)&amp;#61;&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;)&amp;#61;-&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;)&amp;#61;-0.5*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;);\n&lt;span class=\"hljs-title function_\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用matlab求非线性规划和常微分方程组", ["11．求下列非线性规划，初值为（0.5，0.5,0.5）", "\n", "\n", "12.求常微分方程组的解。", "范围[0 10]"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;非线性系统不能用ss函数来建模了&amp;#xff0c;ss只能描述线性状态方程&amp;#xff0c;非线性系统需要用微分方程描述&amp;#xff0c;使用ode45来求解响应。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何使用matlab解决非线性状态空间的问题", ["在状态空间系统中，如E\\dot x=Ax+Bu,y=Cx+Du中，A矩阵内含有x2，该如何修改matlab程序，使得程序可以运行。", "\n\n", " ", "\n\n", "E=[1 1;0 0]", "\nA=[-2 0;1 x2];%x=[x1;x2]", "\nB=[-1;0];", "\nC=[-1 -1];", "\nD=0;", "\nt=0:0.01:5;", "\nw=exp(-t);", "\nsys1=dss(A,B,C,D,E);", "\n[y,t,x]=lsim(sys1,w,t);", "\nplot(t,x)", "\n "]], "Tag": "算法设计"}
{"Answer": "这句话是正确的，因为栈和队列都必须在两头进行操作而不能随机的存取内部任何一个结点，所以是顺序存取的线性表。栈只能在栈顶进行存取，而队列只能从队尾插入结点队头删除结点，所以存取位置限制不同。", "Konwledge_Point": "线性规划简介", "Question": ["栈和队列都是限制存取点的线性结构", ["栈和队列都是限制存取点的线性结构这句话是什么意思？", "\n不太理解，求教"]], "Tag": "算法设计"}
{"Answer": "我有  要么。。。。。。。。", "Konwledge_Point": "线性规划简介", "Question": ["基于DSP技术的图像线性变换系统设计", ["要求：1.在图形窗口显示原图，处理后的结果图。", "\n             2.图像使用源数据为JPG格式的彩色图像，处理图像为经过变换后的灰度图像。", "\n            3.对灰度图像进行线性变换", "\n            4.使用ccs3.3  编程，c语言"]], "Tag": "算法设计"}
{"Answer": "MatrixEquation me = new MatrixEquation(x点的数组， y点的数组, n);\r\nme.XXX调用，具体看你上面注释", "Konwledge_Point": "线性规划简介", "Question": ["c#实现最小二乘法线性拟合", ["public class MatrixEquation", "\n    {", "\n        private double[,] gaussMatrix;", "\n        private int coe;", "\n\n", "    public MatrixEquation()\n    {\n    }\n\n    public MatrixEquation(double[] arrX, double[] arrY, int n)\n    {\n        coe = n;\n        gaussMatrix = GetGauss(GetXPowSum(arrX, n), GetXPowYSum(arrX, arrY, n), n);\n    }\n\n    public double[,] GetGaussMatrix()\n    {\n        return gaussMatrix;\n    }\n\n    public double[] GetResult()\n    {\n        return ComputeGauss(gaussMatrix, coe);\n    }\n\n    /// <summary> 计算获取x散点的幂次和数组 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"n\">函数拟合次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowSum(double[] arrX, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xPow = new double[2 * n + 1]; //存储X散点的幂次值\n\n        for (int i = 0; i < xPow.Length; i++)\n        {\n            if (i == 0)\n            {\n                xPow[i] = m;\n            }\n            else\n            {\n                //计算x的i次方和\n\n                double max = 0;\n                for (int j = 0; j < m; j++)\n                {\n                    if (arrX[j] == 0)\n                        max = max + 1;\n                    else\n                        max = max + Math.Pow(arrX[j], i);\n                }\n                xPow[i] = Math.Round(max, 4);\n            }\n        }\n        return xPow;\n    }\n\n    /// <summary>计算获取xy的幂次和序列 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"arrY\">y散点序列</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowYSum(double[] arrX, double[] arrY, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xyPow = new double[n + 1]; //仓储X散点的幂次值\n\n        for (int i = 0; i < xyPow.Length; i++)\n        {\n            //计算xy的i次方和\n\n            double max = 0;\n            for (int j = 0; j < m; j++)\n            {\n                if (arrX[j] == 0)\n                    max = max + 1;\n                else\n                    max = max + Math.Pow(arrX[j], i) * arrY[j];\n            }\n            xyPow[i] = Math.Round(max, 4);\n        }\n        return xyPow;\n    }\n\n    /// <summary> 获取高斯矩阵(增广矩阵) </summary>            \n    /// <param name=\"arrX\">X的幂次和</param> \n    /// <param name=\"arrXY\">XY的幂次和</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[,] GetGauss(double[] arrX, double[] arrXY, int n)\n    {\n        double[,] gauss = new double[n + 1, n + 2];\n        for (int i = 0; i < n + 1; i++)\n        {\n            int j;\n            int m = i;\n            for (j = 0; j < n + 1; j++)\n            {\n                gauss[i, j] = arrX[m];\n                m++;\n            }\n            gauss[i, j] = arrXY[i];\n        }\n\n        return gauss;\n    }\n\n    /// <summary> 求解拟合曲线的系数 </summary>                  \n    /// <param name=\"gauss\">线性方程的增广矩阵</param> \n    /// <param name=\"n\">方程次数</param> \n    /// <returns></returns> \n    protected double[] ComputeGauss(double[,] gauss, int n)\n    {\n        double[] a = new double[n + 1];\n        double s;\n        int matrixLine = n + 1;\n        for (int i = 0; i < n + 1; i++)\n            a[i] = 0;\n        //循环每列\n\n        for (int j = 0; j < matrixLine; j++)\n        {\n            //每列J行以后的绝对值最大值\n\n            double max = 0;\n            int k = j;\n            for (int i = j; i < matrixLine; i++)\n            {\n                if (Math.Abs(gauss[i, j]) > max)\n                {\n                    max = gauss[i, j];\n                    k = i;\n                }\n            }\n            //判断j行否为最大值行 若不是将j行调换为最大值行\n\n            if (k != j)\n            {\n                double temp; for (int m = j; m < matrixLine + 1; m++)\n                {\n                    temp = gauss[j, m];\n                    gauss[j, m] = gauss[k, m];\n                    gauss[k, m] = temp;\n                }\n            }\n            if (max == 0)\n            {\n                //奇异矩阵无解\n\n                return a;\n            }\n            //进行初等行变换得到上三角矩阵\n\n            for (int i = j + 1; i < matrixLine; i++)\n            {\n                s = gauss[i, j];\n                for (int m = j; m < matrixLine + 1; m++)\n                {\n                    gauss[i, m] = Math.Round(gauss[i, m] - gauss[j, m] * s / gauss[j, j], 6);\n                }\n            }\n        }\n        //根据倒推方式一次计算现行方程的解\n\n        for (int i = matrixLine - 1; i >= 0; i--)\n        {\n            s = 0;\n            for (int j = i + 1; j < matrixLine; j++)\n            {\n                s += gauss[i, j] * a[j];\n            }\n            a[i] = Math.Round((gauss[i, matrixLine] - s) / gauss[i, i], 6);\n        }\n        //返回方程的解即拟合曲线的系数\n\n        return a;\n    }\n}\n    ------------------------\n    以上是本人在网上看到的一个例子，但是不理解该怎么样测试这个类，请各位大神赐教！或者可以提供相关参考链接也可以。\n"]], "Tag": "算法设计"}
{"Answer": "df1是你的数据，df1.loc[:, 'd']在最后面的列添加列名‘d’的一列数据，然后将数组d赋值即可\r\n\r\n```\r\ndf1 = pd.DataFrame(np.random.randn(8, 3), columns=['a', 'b', 'c'])\r\n    print(df1)\r\n    d=range(8)\r\n    df1.loc[:, 'd'] = d\r\n    print(df1)\r\n \r\n```", "Konwledge_Point": "线性规划简介", "Question": ["python dataframe如何线性插值缺省值", ["编程小白一枚，想问下如何对缺省值线性插值，网上查到都是直接填充平均值，线性插值有什么简便的方法吗？", "\n\n", "示例：", "\n2017/11/7   1", "\n2017/11/8   2 ", "\n2017/11/9   None", "\n2017/11/10  None", "\n2017/11/11  5", "\n2017/11/12  None", "\n2017/11/13  None", "\n2017/11/14  None", "\n2017/11/15  None", "\n2017/11/16  15", "\n2017/11/17  None", "\n2017/11/18  None", "\n2017/11/19  None", "\n2017/11/20  11", "\n\n", "我想让缺省值填充成", "\n2017/11/7   1", "\n2017/11/8   2 ", "\n2017/11/9   3", "\n2017/11/10  4", "\n2017/11/11  5", "\n2017/11/12  7", "\n2017/11/13  9", "\n2017/11/14  11", "\n2017/11/15  13", "\n2017/11/16  15", "\n2017/11/17  14", "\n2017/11/18  13", "\n2017/11/19  12", "\n2017/11/20  11", "\n\n", "PS：类似如果想三次样条插值呢？"]], "Tag": "算法设计"}
{"Answer": "程序迭代输出问题，现已经解决了", "Konwledge_Point": "线性规划简介", "Question": ["matlab非线性问题的解法---椎补线性化", ["椎补线性化方法编程不报错，有解，但是所得解与给出的限定约束条件矛盾，也就是说约束条件失效，但是什么原因不报错，用椎补线性化方法中迭代有关系吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;matlab&lt;/p&gt;\n\n&lt;p&gt;x1 &amp;#61; [1 2 3 4 5 6]&amp;#39;;&lt;/p&gt;\n\n&lt;p&gt;x2 &amp;#61; [.2 .4 .8 .9 1.1 2.1]&amp;#39;;&lt;/p&gt;\n\n&lt;p&gt;X &amp;#61; [x1 x2]; &lt;/p&gt;\n\n&lt;p&gt;f &amp;#61; [ 3.3079 6.6358 10.3143 13.6492 17.2755 23.6271]&amp;#39;;&lt;/p&gt;\n\n&lt;p&gt;objfcn &amp;#61; &amp;#64;(A,X)A(1)*x1 &amp;#43; x2.^(A(2));&lt;/p&gt;\n\n&lt;p&gt;x0&amp;#61;1; &lt;/p&gt;\n\n&lt;p&gt;x0&amp;#61;(1)*[1;1];&lt;/p&gt;\n\n&lt;p&gt;[vestimated,resnorm] &amp;#61; lsqcurvefit(objfcn,x0,X,f)&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何matlab或者python实现多元函数的非线性拟合。", ["比如z=f（x，y），给出（x，y，z）的多个数据点，然后怎么拟合出f函数，给出源码就更好了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;C语言代码块是需要用{}括号括起来的&amp;#xff0c;不是Python那样依靠缩进。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/70890986336610.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性插值方法完成求解", ["根据压力传感器数据集，应用线性插值方法完成求解，我不知道错哪了，快帮帮我吧"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;可以这样&amp;#xff01;&lt;br /&gt;令&lt;code class=\"language-javascript\"&gt;x&amp;#61;[y1,y2,y3,epsilon]&lt;/code&gt;&lt;br /&gt;现在就是要目标函数是&lt;code class=\"language-javascript\"&gt;epsilon &amp;#61; 0*x(1)&amp;#43;0*x(2)&amp;#43;0*x(3)&amp;#43;1*x(4)&lt;/code&gt;最小&lt;br /&gt;不等式约束和等式约束分别为&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/682036604236186.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;化成代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;A &amp;#61; [&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;];%不等式约束的A\nb &amp;#61; [0; 0; 0; 0.314272; &lt;span class=\"hljs-string\"&gt;-0&lt;/span&gt;.830297; &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;.088269];%不等式约束的b【满足A*x≤b】\nAeq &amp;#61; [1,1,1,0];%等式约束的Aeq\nbeq &amp;#61; [3.942592];%等式约束的beq\nf &amp;#61; [0,0,0,1];%目标函数的线性组合&amp;#xff0c;即epsilon &amp;#61; 0*x(1)&lt;span class=\"hljs-string\"&gt;&amp;#43;0&lt;/span&gt;*x(2)&lt;span class=\"hljs-string\"&gt;&amp;#43;0&lt;/span&gt;*x(3)&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;*x(4)\nmin_epsilon &amp;#61; linprog(f,A,b,Aeq,beq)%求解\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;计算结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;min_epsilon &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n  -&lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请问如图线性规划问题 如何用matlab求解呀", ["\n", "想请问下这个线性规划问题 整么用matlab的linprog()函数求解呀， 着实谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;下面是一个示例&amp;#xff0c;用矩阵求逆的方法来求解这个线性方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;将系数矩阵和常数向量分别存储在 A 和 b 的变量中&amp;#xff0c;如下所示&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 3 -1 2; 12 3 0];&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 10; 8];&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后&amp;#xff0c;可以通过计算 A 的逆来求解方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; inv(A) * b&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样&amp;#xff0c;就可以得到方程组的解&amp;#xff0c;即 x &amp;#61; [1; 2; -1]。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;注意&amp;#xff1a;求矩阵逆是一个计算量比较大的操作&amp;#xff0c;在实际应用中应该尽量避免使用。此外&amp;#xff0c;如果方程组不存在解或者有多个解&amp;#xff0c;那么求逆法就不能用了。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用矩阵求逆法求线性方程组的解", ["4x1+2x2−x3=2    3x1−x2+2x3=10  12x1+3x2=8"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以啊&amp;#xff0c;建立一个元胞数组&amp;#xff0c;每个回归循环都存在元胞数组里&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt; &amp;#61; cell(n,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;{i} &amp;#61; polyfit(xi, yi, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;); % 比方说regress也行\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后取用也很方便&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;for i&lt;/span&gt; &amp;#61; 1:n\np &amp;#61; c{i};\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何使用matlab进行线性回归循环", ["请问如何使用matlab进行线性回归循环，然后将每次回归方程的系数保存下来，再调用在别的程序中。"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/yitian_z/article/details/103097363", "Konwledge_Point": "线性规划简介", "Question": ["广义线性回归模型用r语言", ["如何在r语言中求广义线性回归定义下的离差 似然比统计量 皮尔逊卡方统计量 以及怀尔德统计量 我用glm好像只能得到拟合"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;注释给你写好了&amp;#xff0c;如有帮助&amp;#xff0c;请点击我评论上方【采纳该答案】按钮支持一下,谢谢&amp;#xff01;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; linear_regression &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; LinearRegression&lt;span class=\"hljs-comment\"&gt;#前几行都是导入包&lt;/span&gt;\n\ndata &amp;#61; pd.read_csv(&lt;span class=\"hljs-string\"&gt;&amp;#39;../data/world-happiness-report-2017.csv&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#读取csv文件到data&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 得到训练和测试数据&lt;/span&gt;\ntrain_data &amp;#61; data.sample(frac &amp;#61; &lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#frac 抽取行的比例 例如frac&amp;#61;0.8&amp;#xff0c;就是抽取其中80%&lt;/span&gt;\ntest_data &amp;#61; data.drop(train_data.index)&lt;span class=\"hljs-comment\"&gt;#使用drop函数删除表中index&lt;/span&gt;\n\ninput_param_name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Economy..GDP.per.Capita.&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 输入特征名字&lt;/span&gt;\noutput_param_name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Happiness.Score&amp;#39;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 输出特征名字&lt;/span&gt;\n\nx_train &amp;#61; train_data[[input_param_name]].values\n&lt;span class=\"hljs-comment\"&gt;# .values表示转换成ndarray格式 [input_param_name]表示列值&lt;/span&gt;\ny_train &amp;#61; train_data[[output_param_name]].values\n&lt;span class=\"hljs-comment\"&gt;# .values表示转换成ndarray格式 [output_par  am_name]表示列值&lt;/span&gt;\n\nx_test &amp;#61; test_data[input_param_name].values&lt;span class=\"hljs-comment\"&gt;#上面是训练集&amp;#xff0c;这是测试集&lt;/span&gt;\ny_test &amp;#61; test_data[output_param_name].values\n\n&lt;span class=\"hljs-comment\"&gt;# 散点图绘制&lt;/span&gt;\nplt.scatter(x_train,y_train,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Train data&amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;#&lt;/span&gt;\nplt.scatter(x_test,y_test,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;test data&amp;#39;&lt;/span&gt;)\nplt.xlabel(input_param_name)\nplt.ylabel(output_param_name)\nplt.title(&lt;span class=\"hljs-string\"&gt;&amp;#39;Happy&amp;#39;&lt;/span&gt;)\nplt.legend()\nplt.show()\n\nnum_iterations &amp;#61; &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 迭代次数&lt;/span&gt;\nlearning_rate &amp;#61; &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;# 学习率&lt;/span&gt;\n\nlinear_regression &amp;#61; LinearRegression(x_train,y_train)\n(theta,cost_history) &amp;#61; linear_regression.train(learning_rate,num_iterations)\n&lt;span class=\"hljs-comment\"&gt;# 调用train模块传入学习率和和迭代次数&lt;/span&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#39;开始时的损失&amp;#xff1a;&amp;#39;&lt;/span&gt;,cost_history[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])\n&lt;span class=\"hljs-comment\"&gt;# cost_history[0]表示开始的&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#39;训练后的损失&amp;#xff1a;&amp;#39;&lt;/span&gt;,cost_history[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n&lt;span class=\"hljs-comment\"&gt;# cost_history[-1]表示最后的那次&lt;/span&gt;\nplt.plot(&lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_iterations),cost_history)\nplt.xlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Iter&amp;#39;&lt;/span&gt;)\nplt.ylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;cost&amp;#39;&lt;/span&gt;)\nplt.title(&lt;span class=\"hljs-string\"&gt;&amp;#39;GD&amp;#39;&lt;/span&gt;)\nplt.show()\n\npredictions_num &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n\nx_predictions &amp;#61; np.linspace(x_train.&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(),x_train.&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(),predictions_num).reshape(predictions_num,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\ny_predictions &amp;#61; linear_regression.predict(x_predictions)\n\nplt.scatter(x_train,y_train,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Train data&amp;#39;&lt;/span&gt;)\nplt.scatter(x_test,y_test,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;test data&amp;#39;&lt;/span&gt;)\nplt.plot(x_predictions,y_predictions,&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,label &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Prediction&amp;#39;&lt;/span&gt;)\nplt.xlabel(input_param_name)\nplt.ylabel(output_param_name)\nplt.title(&lt;span class=\"hljs-string\"&gt;&amp;#39;Happy&amp;#39;&lt;/span&gt;)\nplt.legend()\nplt.show()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["机器学习pycharm线性回归代码讲解", ["import numpy as np", "import pandas as pd", "import matplotlib.pyplot as plt", "\n", "from linear_regression import LinearRegression", "\n", "data = pd.read_csv('../data/world-happiness-report-2017.csv')", "\n", "train_data = data.sample(frac = 0.8)", "test_data = data.drop(train_data.index)", "\n", "input_param_name = 'Economy..GDP.per.Capita.'", "output_param_name = 'Happiness.Score'", "\n", "x_train = train_data[[input_param_name]].values", "y_train = train_data[[output_param_name]].values", "\n", "x_test = test_data[input_param_name].values", "y_test = test_data[output_param_name].values", "\n", "plt.scatter(x_train,y_train,label='Train data')", "plt.scatter(x_test,y_test,label='test data')", "plt.xlabel(input_param_name)", "plt.ylabel(output_param_name)", "plt.title('Happy')", "plt.legend()", "plt.show()", "\n", "num_iterations = 500", "learning_rate = 0.01", "\n", "linear_regression = LinearRegression(x_train,y_train)", "(theta,cost_history) = linear_regression.train(learning_rate,num_iterations)", "\n", "print ('开始时的损失：',cost_history[0])", "print ('训练后的损失：',cost_history[-1])", "\n", "plt.plot(range(num_iterations),cost_history)", "plt.xlabel('Iter')", "plt.ylabel('cost')", "plt.title('GD')", "plt.show()", "\n", "predictions_num = 100", "\n", "x_predictions = np.linspace(x_train.min(),x_train.max(),predictions_num).reshape(predictions_num,1)", "y_predictions = linear_regression.predict(x_predictions)", "\n", "plt.scatter(x_train,y_train,label='Train data')", "plt.scatter(x_test,y_test,label='test data')", "plt.plot(x_predictions,y_predictions,'r',label = 'Prediction')", "plt.xlabel(input_param_name)", "plt.ylabel(output_param_name)", "plt.title('Happy')", "plt.legend()", "plt.show()", "有没有会的给我简单讲解一下每段代码都是干什么的 谢谢啦"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;除了线性调频脉冲&amp;#xff0c;PD雷达的发射脉冲还可以是&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;频率跳变脉冲&amp;#xff08;FMCW脉冲&amp;#xff09;&amp;#xff1a;它通过改变发射信号的频率&amp;#xff0c;从而实现距离测量和速度测量。与LFM脉冲相比&amp;#xff0c;FMCW脉冲的带宽较窄&amp;#xff0c;但可以实现更高的距离测量精度。&lt;/p&gt;\n&lt;p&gt;矩形脉冲&amp;#xff1a;一种时间宽度和幅度相等的脉冲&amp;#xff0c;可以用于雷达探测和测距。&lt;/p&gt;\n&lt;p&gt;窄带脉冲&amp;#xff1a;一种带宽很窄的脉冲&amp;#xff0c;可以用于目标检测和跟踪。与LFM脉冲相比&amp;#xff0c;窄带脉冲的距离分辨率较差&amp;#xff0c;但可以实现更高的信噪比。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["PD雷达的发射脉冲是线性调频脉冲？", ["PD雷达是脉冲多普勒雷达，PD雷达的发射脉冲除了是线性调频脉冲还可以是什么脉冲？"]], "Tag": "算法设计"}
{"Answer": "设置一个 relative布局，然后在把所有的linear布局的代码添加在relative layout里。再添加textview，并且标明textview在top位置，同时给出外边距。\r\n \r\n\r\n    &lt;RelativeLayout&gt;\r\n         &lt;TextView android:layout_alignParentTop=\"true\"\r\n          android:layout_margin=\"20dip/&gt;\r\n         &lt;LinearLayout&gt;\r\n                    // here is your linear layout\r\n         &lt;/LinearLayout&gt;\r\n       &lt;/RelativeLayout&gt;", "Konwledge_Point": "线性规划简介", "Question": ["在Android中为线性布局添加标题", ["我创建了如下的GUI，使用了线性布局，并且给这个布局设置了边框。我想在这个边框上插入标题。如何实现啊？"]], "Tag": "算法设计"}
{"Answer": "一旦执行了return语句，函数立即结束执行并返回。因此返回n之后就不再返回-1，若是没有返回n则最后返回-1", "Konwledge_Point": "线性规划简介", "Question": ["c，线性查找数组元素   问题求解决", ["int linearsearch(const int array[],int key,int size)", "\n{", "\n    int n;", "\n    for(n=0;n<100;n++)", "\n    {", "\n        if(array[n]==key)", "\n        {", "\n            return n;", "\n        }", "\n    }", "\n    return -1;", "\n}", "\n\n", "这个函数返回给主函数的值是不是总是-1？？   还是返回n后就不在返回-1"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;双向链表属于多重链表&amp;#xff0c;但它是线性结构。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["多重链表一定是非线性结构吗？", ["多重链表一定是非线性结构。", "答案说这句话是错的，有什么例子呢？我不太明白。Thank you！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;针对多目标非线性整数规划问题&amp;#xff0c;目前常用的算法包括遗传算法、粒子群算法、差分进化算法等。另外&amp;#xff0c;也可以尝试使用混合整数线性规划和近似多目标优化方法等。&lt;/p&gt;\n&lt;p&gt;对于具体应用的选择&amp;#xff0c;需要考虑问题的特点和实际情况。不同算法的适用范围和优缺点也不同&amp;#xff0c;因此需要综合考虑选择合适的算法。&lt;/p&gt;\n&lt;p&gt;关于学习方法&amp;#xff0c;可以通过阅读相关论文、专业书籍、参加相关学术会议等方式学习。以下是一些相关学习资源的推荐&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;《多目标优化理论与方法》一书&amp;#xff0c;作者为陈志华等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;学术期刊&amp;#xff0c;例如IEEE Transactions on Evolutionary Computation、European Journal of Operational Research等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;相关学术会议&amp;#xff0c;例如International Conference on Evolutionary Multi-Criterion Optimization、International Symposium on Combinatorial Optimization等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;MATLAB官方文档提供了各种优化算法的实现和示例&amp;#xff0c;可以在MATLAB官网进行查找和学习。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;开源优化软件&amp;#xff0c;例如Gurobi、CPLEX等&amp;#xff0c;可以通过学习其官方文档和实例来了解相关算法。&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划简介", "Question": ["多目标非线性整数规划", ["请问，针对（多目标非线性整数规划）问题，用什么算法比较好？哪里可以借鉴学习"]], "Tag": "算法设计"}
{"Answer": "字段计算器中可以算出所有点的坐标值，然后导出到Excel中。距离计算和线性回归都可以用Excel的公式计算。", "Konwledge_Point": "线性规划简介", "Question": ["arcgis计算距离，线性回归分析的问题", ["想问下已经在ARCGIS上标注了点并连成线，想知道怎么计算每个点到起始点的距离，并能把距离、时间放在坐标里，进行线性回归分析"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你先用matlab把这两个方程写一下&amp;#xff0c;写完了&amp;#xff0c;我给你求解&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何用matlab求解非线性方程组", ["如何用matlab中牛顿迭代法或者二分法求解下面非线性方程组", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-m\"&gt;clear\nclc\nclose all \n%%  仿真步长 h&amp;#61;&lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt; 时\nHfun &amp;#61; &amp;#64;(t,x) &lt;span class=\"hljs-literal\"&gt;[ &lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;); &lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)]&lt;/span&gt;;   % 一阶微分方程导数表达式 \n% 参数\nt &amp;#61; &lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;]&lt;/span&gt;;     % 时间范围\nh &amp;#61; &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;;       % 时间步长\nx0 &amp;#61; &lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;;   % 初始状态 \n% 显式欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T1,X1]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ExplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% 隐式欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T2,X2]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% 两步欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T3,X3]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_2OrderEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% 改进欧拉法求解\n&lt;span class=\"hljs-literal\"&gt;[T4,X4]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImprovedEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;;\n% Matlab自带ode45求解\n&lt;span class=\"hljs-literal\"&gt;[T5,X5]&lt;/span&gt; &amp;#61; ode45( Hfun,t,x0 ); \n% 绘图对比\nfigure\nsubplot(&lt;span class=\"hljs-number\"&gt;311&lt;/span&gt;)\nplot(T1,&lt;span class=\"hljs-constructor\"&gt;X1(:,1)&lt;/span&gt;,T2,&lt;span class=\"hljs-constructor\"&gt;X2(:,1)&lt;/span&gt;,T3,&lt;span class=\"hljs-constructor\"&gt;X3(:,1)&lt;/span&gt;,T4,&lt;span class=\"hljs-constructor\"&gt;X4(:,1)&lt;/span&gt;,T5,&lt;span class=\"hljs-constructor\"&gt;X5(:,1)&lt;/span&gt;)\nxlabel(&amp;#39;&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;&amp;#39;)\nylabel(&amp;#39;x_1&amp;#39;)\nlegend(&amp;#39;显式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;隐式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;两步欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;改进欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;ode45&amp;#39;)\nsubplot(&lt;span class=\"hljs-number\"&gt;312&lt;/span&gt;)\nplot(T1,&lt;span class=\"hljs-constructor\"&gt;X1(:,2)&lt;/span&gt;,T2,&lt;span class=\"hljs-constructor\"&gt;X2(:,2)&lt;/span&gt;,T3,&lt;span class=\"hljs-constructor\"&gt;X3(:,2)&lt;/span&gt;,T4,&lt;span class=\"hljs-constructor\"&gt;X4(:,2)&lt;/span&gt;,T5,&lt;span class=\"hljs-constructor\"&gt;X5(:,2)&lt;/span&gt;)\nxlabel(&amp;#39;&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;&amp;#39;)\nylabel(&amp;#39;x_2&amp;#39;)\nlegend(&amp;#39;显式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;隐式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;两步欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;改进欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;ode45&amp;#39;)\nsubplot(&lt;span class=\"hljs-number\"&gt;313&lt;/span&gt;)\nplot(T1,&lt;span class=\"hljs-constructor\"&gt;X1(:,3)&lt;/span&gt;,T2,&lt;span class=\"hljs-constructor\"&gt;X2(:,3)&lt;/span&gt;,T3,&lt;span class=\"hljs-constructor\"&gt;X3(:,3)&lt;/span&gt;,T4,&lt;span class=\"hljs-constructor\"&gt;X4(:,3)&lt;/span&gt;,T5,&lt;span class=\"hljs-constructor\"&gt;X5(:,3)&lt;/span&gt;)\nxlabel(&amp;#39;&lt;span class=\"hljs-constructor\"&gt;Time(&lt;span class=\"hljs-params\"&gt;s&lt;/span&gt;)&lt;/span&gt;&amp;#39;)\nylabel(&amp;#39;x_3&amp;#39;)\nlegend(&amp;#39;显式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;隐式欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;两步欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;改进欧拉法&lt;span class=\"hljs-character\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;ode45&amp;#39;)\n% 显示欧拉\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ExplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    % 确定时间节点\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; );   \n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;                        \n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n% 隐式欧拉\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImplicitEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; jj &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:m\n           Ind &amp;#61;  zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,m);         % 状态选择向量\n           &lt;span class=\"hljs-constructor\"&gt;Ind(&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;        % 选择的向量位置  \n           fh &amp;#61; &amp;#64;(x) h*Ind*&lt;span class=\"hljs-constructor\"&gt;Hfun(T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;,&lt;span class=\"hljs-literal\"&gt;[X(&lt;span class=\"hljs-identifier\"&gt;k&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-identifier\"&gt;jj&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#39;;&lt;span class=\"hljs-identifier\"&gt;x&lt;/span&gt;; X(&lt;span class=\"hljs-identifier\"&gt;k&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-identifier\"&gt;jj&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-identifier\"&gt;m&lt;/span&gt;)&amp;#39;]&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt;&amp;#39; - x;    \n           &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt; &amp;#61; fzero( fh,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,&lt;span class=\"hljs-params\"&gt;jj&lt;/span&gt;)&lt;/span&gt; ) ;   \n        &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;                  \n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_2OrderEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; );   \n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; k&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n            &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;    \n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-2,:)&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;   \n        &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_ImprovedEuler( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  x0 &amp;#61; x0&amp;#39;;     % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; );   \n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        Xp &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; h*d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;;\n        dXp &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;,Xp );\n        &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#43; (h/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*(d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#43;dXp&amp;#39;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab欧拉法求解非线性常微分方程", ["请教一下", "这个怎么用Matlab编程求解这个非线性常微分方程", "包括显式欧拉法，隐式欧拉法，两步欧拉法，改进欧拉法", "包括图像"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;仅限我个人的理解:&lt;br /&gt;首先你有一个&lt;code class=\"language-javascript\"&gt;优化函数&lt;/code&gt;和一组&lt;code class=\"language-javascript\"&gt;训练数据&lt;/code&gt;,&lt;code class=\"language-javascript\"&gt;优化函数&lt;/code&gt;中有一系列待确定的&lt;code class=\"language-javascript\"&gt;参数&lt;/code&gt;,你的目的就是让优化函数在训练数据中取得一个局部最优解&lt;br /&gt;也就是说计算出一组&lt;code class=\"language-javascript\"&gt;参数&lt;/code&gt;,将参数代入模型之后,模型可以尽可能的符合训练数据&lt;br /&gt;因为是局部最优解,所以可能存在训练效果不好的情况,用测试集套一下就可以一定程度反映出训练好的模型的准确程度&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于线性回归的一些理解，希望可以下纠正错误", ["刚开始学习的小白，什么也不懂，也不知道自己理解的对不对，想问一下可能很蠢的问题🥲", "利用数据进行训练得到的所谓的模型，", "就是会得到一个线性回归函数的意思吗？", "然后再把测试集套到这个函数对这个模型进行评价，得到这个模型的准确性..？是这样的吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你看2787行的三个条件&amp;#xff0c;一个一个在代码中测试&amp;#xff0c;找到那个是假&amp;#xff0c;然后去搜一下&lt;br /&gt;我这里没有opencv的包&amp;#xff0c;所以没法试&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python在线性规划的问题", ["\n", "想问一下为什么一些数后面加上点之后就能运行了呢？是因为最后的答案是浮点数吗？感谢大家的解答！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;swap函数有问题啊&amp;#xff0c;int指针和int值怎么能直接相等呢。修改如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; swap(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *u,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *v)\n{\n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;;\n   &lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;&amp;#61;*u;\n   *u&amp;#61;*v;\n   *v&amp;#61;&lt;span class=\"hljs-keyword\"&gt;temp&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;22行的 swap(a[i], a[j]); 改成 swap(&amp;amp;a[i], &amp;amp;a[j]);&lt;br /&gt;下面swap交换的地方&amp;#xff0c;都需要加&amp;amp;&lt;br /&gt;修改后运行结果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/81090479115613.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;完整代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;//线性时间选择&lt;/span&gt;\n#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;\nvoid bubble&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Partition(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;val&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;;\nvoid swap(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* u, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* v);\n\nvoid swap(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* u, &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;* v)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; temp;\n    temp &amp;#61; *u;\n    *u &amp;#61; *v;\n    *v &amp;#61; temp;\n}\nvoid bubble&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; p; i &amp;lt; r; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; r; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;lt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;) swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;);\n        }\n    }\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Partition(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;val&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; pos;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; q, i, j, x;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (q &amp;#61; p; q &amp;lt;&amp;#61; r; q&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;q&lt;/span&gt;]&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;val&lt;/span&gt;)\n        {\n            pos &amp;#61; q;\n            break;\n        }\n    }\n    swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;pos&lt;/span&gt;]&lt;/span&gt;);\n\n    i &amp;#61; p; j &amp;#61; r &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; x &amp;#61; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt;]&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt; &amp;lt; x&lt;span class=\"hljs-operator\"&gt; &amp;amp;&amp;amp; &lt;/span&gt;i &amp;lt; r);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[--&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;gt; x);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;gt;&amp;#61; j) break;\n        swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;);\n    }\n    a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt;]&lt;/span&gt; &amp;#61; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt;; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;j&lt;/span&gt;]&lt;/span&gt; &amp;#61; x;\n    return j;\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; s, t;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, j, n, x;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r - p &amp;lt; &lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;)\n    {\n        bubble&lt;span class=\"hljs-constructor\"&gt;Sort(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;)&lt;/span&gt;;\n        return a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-identifier\"&gt;k&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-comment\"&gt;//找中位数的中位数&amp;#xff0c;r-p-4即上面所说的n-5&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt;&amp;#61; (r - p - &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//把每个组的中位数交换到区间[p,p&amp;#43;(r-p-4)/4]&lt;/span&gt;\n    {\n        s &amp;#61; p &amp;#43; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;i; t &amp;#61; s &amp;#43; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;; j&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//冒泡排序&amp;#xff0c;从后开始排&amp;#xff0c;结果使得后三个数是排好顺序的&amp;#xff08;递增&amp;#xff09;&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (n &amp;#61; s; n &amp;lt; t - j; n&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt;]&lt;/span&gt; &amp;gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;) swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;n&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;/span&gt;);\n            }\n        }\n        swap(&amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;p&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-identifier\"&gt;i&lt;/span&gt;]&lt;/span&gt;, &amp;amp;a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-identifier\"&gt;s&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//交换每组中的中位数到前面&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-comment\"&gt;//(r-p-4)/5表示组数-1&amp;#xff0c;则[p,p&amp;#43;(r-p-4)/5]的区间长度等于组数&lt;/span&gt;\n    x &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt; &amp;#43; (&lt;span class=\"hljs-params\"&gt;r&lt;/span&gt; - &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt; - 4)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, (r - p &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//求中位数的中位数&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;/*\n    (r-p&amp;#43;1)/10 &amp;#61; (p&amp;#43;(r&amp;#43;p-4)/5-p&amp;#43;1)/2\n    */&lt;/span&gt;\n    i &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Partition(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)&lt;/span&gt;; j &amp;#61; i - p &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k &amp;lt;&amp;#61; j) return &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;p&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; return &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;i&lt;/span&gt; &amp;#43; 1, &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;k&lt;/span&gt; - &lt;span class=\"hljs-params\"&gt;j&lt;/span&gt;)&lt;/span&gt;;\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main(void)\n{\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x, i;\n    &lt;span class=\"hljs-comment\"&gt;//数组a存了0-79&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a&lt;span class=\"hljs-literal\"&gt;[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;]&lt;/span&gt; &amp;#61; { &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;26&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;37&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;36&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;39&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;38&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;34&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;43&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;41&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;42&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;44&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;53&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;57&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;55&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;52&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;54&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;63&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;61&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;67&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;66&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;69&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;68&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;62&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;73&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;71&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;77&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;76&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;79&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;78&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;72&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;74&lt;/span&gt;,\n    };\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;x);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;The %d smallest number is %d\\n&amp;#34;&lt;/span&gt;, x, &lt;span class=\"hljs-constructor\"&gt;Select(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, 0, 79, &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这里有个详细的解答&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/wl1780852311/article/details/101000722\" id=\"textarea_1651197375953_1651197410124_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;算法&amp;#xff1a;线性时间选择_顾道长生&amp;#39;的博客-CSDN博客_线性时间选择算法&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;定义&amp;#xff1a;给定线性序集中n个元素和一个整数k&amp;#xff0c;1≤k≤n&amp;#xff0c;要求找出这n个元素中第k小的元素。&amp;#xff08;1&amp;#xff09;在某些特殊情况下&amp;#xff0c;很容易设计出解选择问题的线性时间算法。如&amp;#xff1a;当要选择最大元素或最小元素时&amp;#xff0c;显然可以在O(n)时间完成。&amp;#xff08;一趟比较即可&amp;#xff09;&amp;#xff08;2&amp;#xff09;一般的选择问题&amp;#xff0c;特别是中位数的选择问题似乎比最小&amp;#xff08;大&amp;#xff09;元素要难。但实际上&amp;#xff0c;从渐近阶的意义上&amp;#xff0c;它们是一样的。也可以在O(n)时间完成。步骤&amp;#xff1a;&amp;#xff08;1&amp;#xff09;将n个输入元...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/wl1780852311/article/details/101000722&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["C语言学习，算法设计，线性时间选择", ["我在学习线性时间选择算法，编写如下程序，算法要求是找到n个元素中第k小的元素：", "\n", "//线性时间选择", "\n#", "include", " <stdio.h>\nvoid bubble", "Sort(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ")", ";\n", "int", " ", "Partition(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "val", ")", ";\n", "int", " ", "Select(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "k", ")", ";\nvoid swap(", "int", " *u,", "int", " *v);\n\nvoid swap(", "int", " *u,", "int", " *v)\n{\n   ", "int", " temp;\n   temp=u;\n   u=v;\n   v=temp;\n}\nvoid bubble", "Sort(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ")", "\n{ \n    ", "int", " i,j;\n    ", "for", "(i=p; i<r; i++)\n    {\n        ", "for", "( j=i+", "1", "; j<=r; j++)\n        {\n            ", "if", "(a", "[", "j", "]", "<a", "[", "i", "]", ") swap(a", "[", "i", "]", ",a", "[", "j", "]", ");\n        }\n    }\n}\n\n", "int", " ", "Partition(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "val", ")", "\n{\n    ", "int", " pos;\n    ", "int", " q,i,j,x;\n    ", "for", "( q=p; q<=r; q++)\n    {\n        ", "if", "(a", "[", "q", "]", "==", "val", ")\n        {\n            pos=q;\n            break;\n        }\n    }\n    swap(a", "[", "p", "]", ",a", "[", "pos", "]", ");\n\n    i=p; j=r+", "1", "; x=a", "[", "p", "]", ";\n    ", "while", "(", "1", ")\n    {\n        ", "while", "(a", "[", "++", "i", "]", "<x", " && ", "i<r);\n        ", "while", "(a", "[--", "j", "]", ">x);\n        ", "if", "(i>=j) break;\n        swap(a", "[", "i", "]", ",a", "[", "j", "]", ");\n    }\n    a", "[", "p", "]", "=a", "[", "j", "]", "; a", "[", "j", "]", "=x;\n    return j;\n}\n\n", "int", " ", "Select(", "int", " ", "*", "a", ",", "int", " ", "p", ",", "int", " ", "r", ",", "int", " ", "k", ")", "\n{\n    ", "int", " s,t;\n    ", "int", " i,j,n,x;\n    ", "if", "(r-p<", "75", ")\n    {\n        bubble", "Sort(", "a", ",", "p", ",", "r", ")", ";\n        return a", "[", "p", "+", "k", "-", "1", "]", ";\n    }\n    ", "//找中位数的中位数，r-p-4即上面所说的n-5", "\n    ", "for", "( i=", "0", "; i<=(r-p-", "4", ")/", "5", "; i++) ", "//把每个组的中位数交换到区间[p,p+(r-p-4)/4]", "\n    {\n        s=p+", "5", "*i; t=s+", "4", ";\n        ", "for", "( j=", "0", "; j<", "3", "; j++) ", "//冒泡排序，从后开始排，结果使得后三个数是排好顺序的（递增）", "\n        {\n            ", "for", "( n=s; n<t-j; n++)\n            {\n                ", "if", "(a", "[", "n", "]", ">a", "[", "n", "+", "1", "]", ") swap(a", "[", "n", "]", ",a", "[", "n", "+", "1", "]", ");\n            }\n        }\n        swap(a", "[", "p", "+", "i", "]", ",a", "[", "s", "+", "2", "]", ");", "//交换每组中的中位数到前面", "\n    }\n    ", "//(r-p-4)/5表示组数-1，则[p,p+(r-p-4)/5]的区间长度等于组数", "\n    x=", "Select(", "a", ",", "p", ",", "p", "+(", "r", "-", "p", "-4)", "/", "5", ",(r-p+", "1", ")/", "10", ");", "//求中位数的中位数", "\n    ", "/*\n    (r-p+1)/10 = (p+(r+p-4)/5-p+1)/2\n    */", "\n    i=", "Partition(", "a", ",", "p", ",", "r", ",", "x", ")", "; j=i-p+", "1", ";\n    ", "if", "(k<=j) return ", "Select(", "a", ",", "p", ",", "i", ",", "k", ")", ";\n    ", "else", " return ", "Select(", "a", ",", "i", "+1,", "r", ",", "k", "-", "j", ")", ";\n}\n", "int", " main(void)\n{\n    ", "int", " x,i;\n    ", "//数组a存了0-79", "\n    ", "int", " a", "[", "80", "]", "= {", "3", ",", "1", ",", "7", ",", "6", ",", "5", ",", "9", ",", "8", ",", "2", ",", "0", ",", "4", ",", "13", ",", "11", ",", "17", ",", "16", ",", "15", ",", "19", ",", "18", ",", "12", ",", "10", ",", "14", ",", "23", ",", "21", ",", "27", ",", "26", ",", "25", ",", "29", ",", "28", ",", "22", ",", "20", ",", "24", ",", "33", ",", "31", ",", "37", ",", "36", ",", "35", ",", "39", ",", "38", ",", "32", ",", "30", ",", "34", ",", "43", ",", "41", ",", "47", ",", "46", ",", "45", ",", "49", ",", "48", ",", "42", ",", "40", ",", "44", ",", "53", ",", "51", ",", "57", ",", "56", ",", "55", ",", "59", ",", "58", ",", "52", ",", "50", ",", "54", ",", "63", ",", "61", ",", "67", ",", "66", ",", "65", ",", "69", ",", "68", ",", "62", ",", "60", ",", "64", ",", "73", ",", "71", ",", "77", ",", "76", ",", "75", ",", "79", ",", "78", ",", "72", ",", "70", ",", "74", ",\n               };\n    scanf(", "\"%d\"", ",&x); \n    printf(", "\"The %d smallest number is %d\\n\"", ",x,", "Select(", "a", ",0,79,", "x", ")", ");\n    return ", "0", ";\n}\n\n", "\n", "运行结果如下：", "\n", "\n", "请问是哪有问题，应该怎么修改。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的意思是决策树的结果是 不同的线性回归函数&amp;#xff0c;例如简单地不同斜率的直线&amp;#xff0c;那么以上回答的思路似乎有问题。&lt;br /&gt;首先这是一个分类问题&amp;#xff0c;决策结果是“第k个回归函数“&amp;#xff0c;然后再用 “第k个回归函数“ 计算得到具体的函数值。&lt;br /&gt;这个问题取决于&amp;#xff0c;所述不同的线性回归函数是不是已知确定的&amp;#xff0c;还是也要同时进行学习的。如果线性回归函数已知&amp;#xff0c;则本质上仍然是分类问题&amp;#xff0c;做一个预处理把”第k类“的函数值与实际值之差作为分类模型的误差&amp;#xff0c;就可以完成分类。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["逻辑树与线性回归的结合使用什么算法？", ["正在做一个预测产量的算法，能否有一种决策树它的叶子节点不是分类标签，而是一个个不同的线性回归函数。这样在输入投入物料时，根据投入物料的属性对应到逻辑树的节点上进行计算。 大家给我个搜索方向或者实现的路径想法就可以了。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;调用这个方法&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-m\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;[T,X,&lt;span class=\"hljs-identifier\"&gt;dX&lt;/span&gt;]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;ODE_RK4( Hfun,&lt;span class=\"hljs-params\"&gt;t&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;h&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;x0&lt;/span&gt; )&lt;/span&gt;\n    T &amp;#61; t(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):h:t(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n    % 计算\n    N &amp;#61; length(T);\n    x0 &amp;#61; x0(:);  \n    x0 &amp;#61; x0&amp;#39;;                  % 初值变为行向量  \n    m &amp;#61; length(x0);            % 状态量维数\n    X &amp;#61; zeros(N,m);            % 初始化状态量\n    dX &amp;#61; zeros(N,m);           % 状态导数\n    &lt;span class=\"hljs-constructor\"&gt;X(1,:)&lt;/span&gt; &amp;#61; x0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n        h &amp;#61; &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;)&lt;/span&gt; - &lt;span class=\"hljs-constructor\"&gt;T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;;\n        K1 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;     , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39; );    \n        K2 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;&amp;#43;h/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39;&amp;#43;h*K1/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; ); \n        K3 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;&amp;#43;h/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39;&amp;#43;h*K2/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; ); \n        K4 &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1)&lt;/span&gt;&amp;#43;h   , &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39;&amp;#43;h*K3 ); \n        &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt;&amp;#39; &amp;#43; (h/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;( K1 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K2 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K3 &amp;#43; K4 );      \n        d&lt;span class=\"hljs-constructor\"&gt;X(&lt;span class=\"hljs-params\"&gt;k&lt;/span&gt;-1,:)&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;( K1 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K2 &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*K3 &amp;#43; K4 );\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    d&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-constructor\"&gt;Hfun( T(N)&lt;/span&gt;,&lt;span class=\"hljs-constructor\"&gt;X(N,:)&lt;/span&gt; );\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab龙格库塔法求解非线性常微分方程", ["请教一下", "这个怎么用Matlab编程求解这个非线性常微分方程", "用龙格库塔法"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;同学&amp;#xff0c;你把你的优化的目标函数和约束条件都说一下&amp;#xff0c;目前来看你的这些代码比较凌乱&amp;#xff0c;看不出具体在优化什么&amp;#xff0c;以及约束什么&amp;#xff0c;还有sym变量&amp;#xff0c;非常忌讳的东西。&lt;br /&gt;全局找最小&amp;#xff0c;不用优化&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;% 这个是全局找最小\n[X,Y] &amp;#61; meshgrid(&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;);\n&lt;span class=\"hljs-attr\"&gt;F&lt;/span&gt; &amp;#61; X.*Y;\n&lt;span class=\"hljs-attr\"&gt;C&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;(size(X));\nfor &lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:numel(X)\n    &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; X(i);\n    &lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; Y(i);\n    &lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    for &lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n        &lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; c&amp;#43; (&lt;span class=\"hljs-number\"&gt;184900&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;860&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/...\n            (&lt;span class=\"hljs-number\"&gt;860&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;249600&lt;/span&gt;);\n    end\n    C(i) &amp;#61; &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;-c&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nend\n&lt;span class=\"hljs-attr\"&gt;minf&lt;/span&gt; &amp;#61; min(F(C));\n&lt;span class=\"hljs-attr\"&gt;I&lt;/span&gt; &amp;#61; find(&lt;span class=\"hljs-attr\"&gt;minf&amp;#61;&amp;#61;F&amp;amp;C);&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; X(I)\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; Y(I)\n&lt;span class=\"hljs-attr\"&gt;fmin&lt;/span&gt; &amp;#61; x*y\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;最后结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;fmin&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;优化的代码在评论区&amp;#xff0c;只是fmincon只能找到局部最优&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab求多元非线性，求和里面的m也是变量吗", ["目标函数：", "function y=myfun(k)", "y=x(1)*x(2)", "约束条件：", "\n", "function [", "c", ",", "ceq]", "=", "cons(", "x", ")\n", "eq", "=", "symsum((", "400", "^", "2", "+", "800", "*(m", "-1", ")*y+(m", "-1", ")^", "2", "*y^", "2", ")/(", "800", "*(m", "-1", ")*y+(m", "-1", ")^", "2", "*y^", "2", ")", ",", "m", ",", "2", ",", "x", ")", ";", "\n", "c", "=", "-", "double", "(", "eq", ")", "-6", ";", "\nceq", "=", "[]", ";\n\n", "\n", "\n", "主程序：", "\n", ">> syms x y m\nceq=[];\n", "A", "=[];\nb=[];\n", "Aeq", "=[];\nbeq=[];\nx(", "1", ")=", "6", ",x(", "2", ")=", "8", ";\nk0=[x(", "1", "),x(", "2", ")];\nlb=[", "6", ",", "8", "];\nub=[", "12", ",", "16", "];\n[x,fval,exitflag,output]=fmincon(@fun,k0,", "A", ",b,[],[],[],[],@cons);\ndisp(", "'x(1)、x(2)、y值'", ")\n \nx =\n \n", "6", "\n \n错误使用 fmincon (line ", "224", ")\n", "FMINCON", " requires the following inputs to be of data type double: ", "'X0'", ".\n \n![img](https://img-mid.csdnimg.cn/release/static/image/mid/ask/", "19219581353612.", "png ", "\"=600 #left\"", ")\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性系统有两个属性&amp;#xff1a;齐次性和叠加性&amp;#xff0c;若系统为y&amp;#xff08;n&amp;#xff09;&amp;#61;T[f(n)]&amp;#xff0c;齐次&amp;#xff1a;T[af(n)]&amp;#61;aT[f(n)],叠加&amp;#xff1a;T[f1(n)&amp;#43;f2(n)]&amp;#61;T[f1(n)]&amp;#43;T[f2(n)]&amp;#xff0c;所以既齐次又叠加的系统为线性系统&amp;#xff0c;亦可用此判断。  【望采纳】&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何判断是否为线性系统", ["零状态线性如何判断，导数和积分部分应该怎么计算，是求导和求积分一定是零吗，是需要带公式吗", "![img](", "https://img-mid.csdnimg.c", "\n", "n/release/static/image/mid/ask/162075222366153.jpg \"#left\")"]], "Tag": "算法设计"}
{"Answer": "是可以的，我发现我一直显示不出来是因为我没有给标题设置宽度比和高度比，所以显示不出来，因为不知道layout__below怎么引用布局就重新倒着重写了一遍布局\r\n```&lt;include layout=\"@layout/title\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"8%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_2\"\r\n        android:text=\"      \"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"20%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/enter\"\r\n        android:text=\"登录\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toLeftOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/register\"\r\n        android:text=\"注册\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toRightOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_1\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/enter\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"55%\"\r\n        app:layout_heightPercent=\"2%\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/key\"\r\n        android:text=\"密码\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/null_1\"\r\n        android:layout_alignLeft=\"@id/null_1\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_key\"\r\n        android:layout_alignTop=\"@id/key\"\r\n        android:layout_toRightOf=\"@id/key\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的密码\"\r\n        android:maxLines=\"1\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/account\"\r\n        android:text=\"账户\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/key\"\r\n        android:layout_alignLeft=\"@id/key\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n    /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_account\"\r\n        android:layout_alignTop=\"@id/account\"\r\n        android:layout_toRightOf=\"@id/account\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的手机号\"\r\n        android:maxLines=\"1\"\r\n    /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/null_3\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/account\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id/image_1\"\r\n        android:src=\"@drawable/image_1\"\r\n        android:layout_above=\"@id/null_3\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"30%\"\r\n        /&gt;\r\n\r\n```\r\n最后得图![图片说明](https://img-ask.csdn.net/upload/201905/30/1559211604_22833.png)", "Konwledge_Point": "线性规划简介", "Question": ["请问百分比布局可以引用线性布局的标题栏吗？求大神解答！！！", ["想在百分比布局里尝试引用线性布局的标题栏，怎么也不成功，我是按照第一行代码那本书的引用布局部分做的，怎么也弄不出来，好懵", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我没太看明白你取得那6个特征&amp;#xff0c;x0、2、5不都是常量吗x1和x3是一次函数&amp;#xff0c;x4是二次函数&amp;#xff0c;这个是否用3个特征就可以了&amp;#xff0c;你最后想要的效果是要一个二次函数去拟合你原本图片中的那条线吗&amp;#xff1f;&lt;br /&gt;我用你其中一张图片研究了一下,目前的效果是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; cv2\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LinearRegression&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,data,labels&lt;/span&gt;):\n        self.data &amp;#61; data\n        self.labels &amp;#61; labels\n        self.features &amp;#61; np.zeros((&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,self.data.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]))\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;train&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,learning_rate, num_iterations&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_iterations):\n            self.step_gradient(learning_rate)\n            &lt;span class=\"hljs-comment\"&gt;# loss &amp;#61; self.loss_fuction()&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;# print(f&amp;#39;第{i}轮loss&amp;#61;{loss}, features&amp;#61;{self.features}&amp;#39;)&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self.features\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;step_gradient&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, learning_rate&lt;/span&gt;):\n        N &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(self.labels))\n        err_current &amp;#61; np.&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(self.features*self.data,axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - self.labels\n        features_gradient &amp;#61; np.array([&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;([x**i*err &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x,err &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;zip&lt;/span&gt;(self.data[:,i],err_current)])*(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/N) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(self.features.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])])\n        self.features &amp;#61; self.features - (learning_rate* features_gradient)\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;loss_fuction&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        totalError &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;([(y-(np.&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(self.features*x,axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)))**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x,y &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;zip&lt;/span&gt;(self.data,self.labels)])\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; totalError / &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(self.labels))\n    \n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;draw&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,num_iterations&lt;/span&gt;):\n        plt.rcParams[&lt;span class=\"hljs-string\"&gt;&amp;#39;font.sans-serif&amp;#39;&lt;/span&gt;] &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;SimHei&amp;#39;&lt;/span&gt;]\n        plt.rcParams[&lt;span class=\"hljs-string\"&gt;&amp;#39;axes.unicode_minus&amp;#39;&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n        x &amp;#61; self.data[:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n        sl &amp;#61; [s[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; s &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;sorted&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;enumerate&lt;/span&gt;(x), key&amp;#61;&lt;span class=\"hljs-keyword\"&gt;lambda&lt;/span&gt; a:a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])]\n        y &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(x*self.features[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; self.data]\n        sort_y &amp;#61; [y[i] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; sl]\n        sort_labels &amp;#61; [self.labels[i] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; sl]\n        x.sort()\n        plt.scatter(x,sort_labels,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;source&amp;#39;&lt;/span&gt;)\n        plt.plot(x, sort_y,color&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,label&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;predict&amp;#39;&lt;/span&gt;)\n        plt.xlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;)\n        plt.ylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n        plt.title(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(num_iterations)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;轮&amp;#39;&lt;/span&gt;)\n        plt.legend()\n        plt.show()\n \n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    img &amp;#61; cv2.imread(&lt;span class=\"hljs-string\"&gt;&amp;#39;line.jpg&amp;#39;&lt;/span&gt;)\n    hsv &amp;#61; cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\n    low_hsv &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;221&lt;/span&gt;])\n    high_hsv &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;])\n    mask &amp;#61; cv2.inRange(hsv, lowerb&amp;#61;low_hsv, upperb&amp;#61;high_hsv)\n    list_y &amp;#61; []\n    list_x &amp;#61; []\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(mask),&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n        xmax &amp;#61; []\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(mask[i]),&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;):\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; mask[i][j] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                list_x.append(j)\n                list_y.append(i)\n    list_x &amp;#61; [x/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; list_x]\n    list_y &amp;#61; [y/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; y &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; list_y]\n    list_x &amp;#61; [[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,x,x**&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; list_x]\n    learning_rate &amp;#61; &lt;span class=\"hljs-number\"&gt;0.001&lt;/span&gt;\n    num_iterations &amp;#61; &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;\n    lr &amp;#61; LinearRegression(np.array(list_x),np.array(list_y))\n    lr.train(learning_rate,num_iterations)\n    lr.draw(num_iterations)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/094758724756114.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/844188724756142.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241129724756158.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性回归数组行数不对应", ["问题遇到的现象", "\n", "线性回归中遇到数组行数不对应的情况", "\n", "问题相关代码，请勿粘贴截图", "\n", "import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 change40.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n\n", "z40", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z40.shape[0],30):\n    ", "z1", "=z40[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label40", "=y_array\n", "z40", "=np.vstack((x0,x1,x2,x3,x4,x5)).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 50.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z50", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z50.shape[0],30):\n    ", "z1", "=z50[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label50", "=y_array\n", "z50", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n \nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 55.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z55", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z55.shape[0],30):\n    ", "z1", "=z55[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label55", "=y_array\n", "z55", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 -60.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z60", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z60.shape[0],30):\n    ", "z1", "=z60[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label60", "=y_array\n", "z60", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 65.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z65", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z65.shape[0],30):\n    ", "z1", "=z65[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label65", "=y_array\n", "z65", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 70.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z70", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z70.shape[0],30):\n    ", "z1", "=z70[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label70", "=y_array\n", "z70", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\nrescombine = np.vstack((z40,z50,z55,z60,z65,z70))\nlabels= np.hstack((label40,label50,label55,label60,label65,label70)).T\n", "labels", "=labels.reshape(-1, 1)\n\n", "from", " sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(rescombine,labels,", "test_size", "=0.25)\n\n", "from", " sklearn.preprocessing import MinMaxScaler\nmm = MinMaxScaler()\nx_train = mm.fit_transform(x_train)\ny_train = mm.fit_transform(y_train)\ny_max = y_train.max(", "axis", "=0)\ny_min = y_train.min(", "axis", "=0)\n\n", "data", "=x_train\n", "labels", "=y_train\n\nclass LinearRegression:\n    def __init__(self,data,labels):\n        \n        self.data = data\n        self.labels = labels\n        num_features = len(data[1])\n        self.theta = np.zeros((num_features,1))\n        \n\n\n    def train(self,alpha,num_iterations = 500):\n       \n        cost_history = self.gradient_descent(alpha,num_iterations)\n        return self.theta,cost_history\n        \n    def gradient_descent(self,alpha,num_iterations):\n        cost_history= []\n        ", "for", " _ ", "in", " range(num_iterations):\n            self.gradient_step(alpha)\n            cost_history.append(self.cost_function(self.data,self.labels))\n        return cost_history\n        \n        \n    def gradient_step(self,alpha):    \n        num_examples = data.shape[0]\n        prediction = LinearRegression.hypothesis(self.data,self.theta)\n        delta = prediction - self.labels   ##有问题", "..", ".\n        theta = self.theta\n        theta = theta - alpha*(1/num_examples)*(np.dot(delta.T,self.data)).T\n        self.theta = theta\n        \n        \n    def cost_function(self,data,labels):\n        self.m = len(labels) \n        delta = LinearRegression.hypothesis(data,self.theta) - labels\n        cost = (1/2)*np.dot(delta.T,delta)/self.m\n        return cost[0][0]\n        \n    \n    def hypothesis(data,theta):   \n        predictions = np.dot(data,theta)\n        return predictions\n        \n\nx_train = rescombine\n\ny_train = labels\n\nnum_iterations = 500\nlearning_rate = 0.01  \n\n\nlinear_regression = LinearRegression(x_train, y_train)\n\n(theta, cost_history) = linear_regression.train(learning_rate, num_iterations)\n\n\n\n", "print", " (theta, cost_history)\n", "print", "(len( cost_history))\n\n", "\n", "运行结果及报错内容", "\n", "发生异常: ValueError\noperands could not be broadcast together with shapes (207,1) (155,1) \n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 380, ", "in", " gradient_step\n    delta = prediction - self.labels   ##有问题...\n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 372, ", "in", " gradient_descent\n    self.gradient_step(", "alpha", ")\n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 366, ", "in", " train\n    cost_history = self.gradient_descent(", "alpha", ",num_iterations)\n  ", "File", " ", "\"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\"", ", ", "line", " 408, ", "in", " <module>\n    (theta, cost_history) = linear_regression.train(learning_rate, num_iterations)\n\n", "\n", "我的解答思路和尝试过的方法", "\n", "我提取了一些数据", "\n", "import numpy as np\n\nimport cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 change40.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n\n", "z40", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z40.shape[0],30):\n    ", "z1", "=z40[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label40", "=y_array\n", "z40", "=np.vstack((x0,x1,x2,x3,x4,x5)).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 50.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z50", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z50.shape[0],30):\n    ", "z1", "=z50[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label50", "=y_array\n", "z50", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n \nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 55.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z55", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z55.shape[0],30):\n    ", "z1", "=z55[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label55", "=y_array\n", "z55", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 -60.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z60", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z60.shape[0],30):\n    ", "z1", "=z60[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label60", "=y_array\n", "z60", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 65.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z65", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z65.shape[0],30):\n    ", "z1", "=z65[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label65", "=y_array\n", "z65", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\n\nimg = cv2.imread(r", "'C:\\Users\\Xpc\\Desktop\\weixin2222 - 70.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([0, 0, 221])\nhigh_hsv = np.array([180, 30, 255])\nmask = cv2.inRange(hsv, ", "lowerb", "=low_hsv, ", "upperb", "=high_hsv)\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " range(len(mask)):\n    xmax = []\n    ", "for", " j ", "in", " range(len(mask[i])):\n        ", "if", " mask[i][j] == 0:\n            list_x.append(j)\n            list_y.append(len(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", ", "color", "=", "'r'", ")\nplt.show()\n\n", "x_array", "=np.array(list_x)\n", "x_array", "=x_array/400\n", "y_array", "=np.array(list_y)\n", "y_array", "=y_array*0.2/400\n", "z70", "=np.stack((x_array,y_array),axis=0).T\nz0=[]\n", "for", " i ", "in", " range(0,z70.shape[0],30):\n    ", "z1", "=z70[i,:]\n    z0.append(z1)\n", "z0", "=np.array(z0)\n", "x_array", "=z0[:,0]\n", "y_array", "=z0[:,1]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x1.append(40)\n", "x1_array", "=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " range(0,len(x_array)):\n    list_x0.append(1)\n", "x0", "=np.array(list_x0)\n", "x1", "=x_array\n", "x2", "=x1_array\n", "x3", "=x1*x2\n", "x4", "=x1*x1\n", "x5", "=x2*x2\n", "label70", "=y_array\n", "z70", "=np.stack((x0,x1,x2,x3,x4,x5),axis=0).T\n\n\nrescombine = np.vstack((z40,z50,z55,z60,z65,z70))\nlabels= np.hstack((label40,label50,label55,label60,label65,label70)).T\n", "labels", "=labels.reshape(-1, 1)\n\n", "from", " sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(rescombine,labels,", "test_size", "=0.25)\n\n", "from", " sklearn.preprocessing import MinMaxScaler\nmm = MinMaxScaler()\nx_train = mm.fit_transform(x_train)\ny_train = mm.fit_transform(y_train)\ny_max = y_train.max(", "axis", "=0)\ny_min = y_train.min(", "axis", "=0)\n\n", "data", "=x_train\n", "labels", "=y_train\n\nnum_features = len(data[1])\ntheta = np.zeros((num_features,1))\npredictions = np.dot(data,theta)\n", "print", "(len(data[1]))#列数\n", "print", "(len(data))#行数\n", "print", "(len(theta[1]))\n", "print", "(len(theta))\n", "print", "(len(predictions [1]))\n", "print", "(len(predictions))\n", "print", "(len(labels))\n", "print", "(len(labels[1]))\n\n", "\n", "运行结果显示prediction并没有出错", "\n", "6\n155\n1\n6\n1\n155\n155\n1\n\n", "\n", "我想要达到的结果 找出原程序里的错误原因"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/v5zsq/article/details/47948397", "Konwledge_Point": "线性规划简介", "Question": ["The Balance              一元线性同余方程", ["Description ", "\n给出两种质量的砝码，和一件物品，问要多少砝码能称出物品，砝码的个数满足两种砝码的数量和尽量小，如果还有多解满足两种砝码的总质量最少 ", "\nInput ", "\n多组用例，每组用例包括三个整数a，b和d分别表示两种砝码的质量以及物品的质量，以0 0 0结束输入 ", "\nOutput ", "\n对于每组用例，输出能称出物品质量的砝码个数，砝码的个数满足两种砝码的数量和尽量小，如果还有多解满足两种砝码的总质量最少 ", "\nSample Input ", "\n700 300 200 ", "\n500 200 300 ", "\n500 200 500 ", "\n275 110 330 ", "\n275 110 385 ", "\n648 375 4002 ", "\n3 1 10000 ", "\n0 0 0 ", "\nSample Output ", "\n1 3 ", "\n1 1 ", "\n1 0 ", "\n0 3 ", "\n1 1 ", "\n49 74 ", "\n3333 1 "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;三个未知数四个代数式&amp;#xff0c;容易无解。所以先用前三个求出解&amp;#xff0c;带入验证。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nimport numpy as np\nA&amp;#61;np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[[1,2,-3]&lt;/span&gt;,\n           &lt;span class=\"hljs-selector-attr\"&gt;[2,3,1]&lt;/span&gt;,\n           &lt;span class=\"hljs-selector-attr\"&gt;[3,-1,2]&lt;/span&gt;])\nb&amp;#61;np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[13,4,-1]&lt;/span&gt;)\nx&amp;#61;np&lt;span class=\"hljs-selector-class\"&gt;.linalg&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.solve&lt;/span&gt;(A,b)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;解得x&amp;#61;[2,1,-3]&lt;br /&gt;代入4式&amp;#xff0c;成立。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于线性方程组的求解。，/*+", ["X1+2X2-3X3=13", "2X1+3X2+X3=4", "3X1-X2+2X3=-1", "X1-X2+3X3=-8"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这类似于这种构架就行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\ng &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) myfun(g&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nfmincon(g&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ……&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) nlinc(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;))\n\nfunction [&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ceq] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; nlinc(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; num&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;cell(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(:))&amp;#39;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nceq &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;[]&lt;span class=\"hljs-comment\"&gt;; %我这里设若等式约束没有&lt;/span&gt;\nif(条件&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\nelseif(条件&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) \n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\nelse\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于fmincon 函数非线性约束的符号转换。需要一个通用方案", ["\n", "之前的公式计算了fmincon需要的 三个非线性约束，已经转换成了标准型。", "目标函数是求 minimum： m^2+n^2+p^2+q^2", "想要一个转化方式将约束中包含的m,n,p,q 自动转化成x(1),x(2),x(3),x(4)这种形式。", "因为这三约束根据给出的初始条件不同，约束也不一样，所以需要一个通用方案。"]], "Tag": "算法设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201504/09/1428565544_388835.png)这个地方错了，改一下！", "Konwledge_Point": "线性规划简介", "Question": ["线性布局问题 计算器布局", ["4/09/1428560451_585625.png)", "\n\n", "为什么没有出现第一张效果，求解", "\n代码如下：", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n    android:layout_width=\"match_parent\"", "\n    android:layout_height=\"match_parent\"", "\n    android:orientation=\"vertical\" >", "\n\n", "<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n    <EditText \n        android:id=\"@+id/msg\" android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:hint=\"@null\" />\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"@+string/m_c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m+\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"mr\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+/-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"/*\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"*\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"7\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"8\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"9\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"-\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"4\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"5\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"6\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+    \"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\n    android:layout_weight=\"0\">\n\n        <LinearLayout android:layout_width=\"wrap_content\"\n             android:layout_height=\"wrap_content\" android:orientation=\"vertical\"\n             > \n\n            <LinearLayout android:layout_width=\"match_parent\"\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\">\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n            </LinearLayout>  \n\n\n\n        </LinearLayout>             \n</LinearLayout>  \n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这里的无约束条件不是图片中了的吧&amp;#xff0c;被你修改了的&amp;#xff0c;运行程序没错&amp;#xff0c;你可以看看是不是参数上设置错了&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["fmincon函数非线性优化问题", ["clear;\nclc;\n\nlb = [", "1", ";", "0.625", ";", "25", ";", "25", "];\nub = [", "1.375", ";", "1", ";", "150", ";", "240", "];\n\nA=[-", "1", " ", "0", " ", "0.0193", " ", "0", ";\n    ", "0", " -", "1", " ", "0.00954", " ", "0", ";\n    ", "0", " ", "0", " ", "0", " ", "1", ";\n    -", "1", " ", "0", " ", "0", " ", "0", ";\n    ", "0", " -", "1", " ", "0", " ", "0", "];\nb=[", "0", ";", "0", ";", "240", ";-", "1.1", ";-", "0.6", "];\n\n", "function", " [", "c", ",", "ceq", "] = ", "mycon", "(x)", "\n", "c", "=-", "pi", "*", "x", "(3)", "*", "x", "(3)", "-4/3*", "pi", "*", "x", "(3)", "*", "x", "(3)", "*", "x", "(3)", "+1296000;", "\nceq = [];\n", "end", "\n\n", "function", " [ ", "f7", " ] = ", "mypeaks", "( x )", "\n", "f7", "=0.6224*", "x", "(1)", "*", "x", "(3)", "*", "x", "(4)", "+1.7781*", "x", "(2)", "*", "x", "(3)", "^2+3.1661*", "x", "(1)", "^2*", "x", "(4)", "+19.84*", "x", "(1)", "^2*", "x", "(3)", ";", "\n", "end", "\n\n", "for", " i=", "1", ":", "50", "\n    x0 = [", "1", ";", "0", ";", "0", ";", "0", "]+", "1", ".*rand(", "4", ",", "1", ");  % randomly determine the initial point\n%     x0 = [", "0.5", " -", "1.5", "];\n    % sqp\n    sqp_opts = optimset(", "'Algorithm'", ",", "'sqp'", ",", "'Display'", ",", "'iter-detailed'", " );\n    [x,fval,exitflag,output]=fmincon(@mypeaks,x0,A,b,[],[],lb,ub,@mycon,sqp_opts);\n%     %% ga\n%     ga_opts = gaoptimset(", "'Display'", ",", "'off'", ",", "'PopulationSize'", ",", "100", ");\n%     [x,fval,exitflag,output]=ga(@mypeaks,", "4", ",A,b,[],[],lb,ub,@mycon,ga_opts);\n%     %% ", "Record", " data\n    recordY(i) = fval;\n    recordNfe(i) = output.funcCount;\n", "end", "\n\n", "\n", "\n", "最优解答案应该在8960，但是我的sqp算法算出来50个都是8949，没有变化很不对啊，请问哪里出了问题呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这只是以防万一的写法&amp;#xff0c;也不会有count &amp;gt; n的出现&amp;#xff0c;只是防止一些没法预想到的情况或者有时候程序写得不那么好会导致不应该发生的结果&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性表链式存储的查找元素", ["如图 在线性表的链式存储中 查找第n个元素", "图中圈出来的地方 count > n 这个条件 是不是多余啊 通过上面的while循环后 count 最多 = n", "什么时候会出现 count > n 呢"]], "Tag": "算法设计"}
{"Answer": "最后一段，没环境，没有测试过。layout_weight注意一下，如果一个区域分2部分，其中一个要占4分之3，则那个区域要设1（越小占比越大)，另一个要设3\r\n\r\n```\r\n &lt;LinearLayout android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\r\n    &gt;\r\n\r\n        &lt;LinearLayout android:layout_width=\"wrap_content\"\r\n             android:layout_height=\"wrap_content\" android:orientation=\"vertical\"\r\n             android:layout_weight=\"1\"&gt; \r\n\r\n            &lt;LinearLayout android:layout_width=\"match_parent\"\r\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\"&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"1\"&gt;&lt;/Button&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"2\"&gt;&lt;/Button&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"3\"&gt;&lt;/Button&gt;\r\n\r\n            &lt;/LinearLayout&gt;  \r\n\r\n\t\t\t\t\t\t&lt;LinearLayout android:layout_width=\"match_parent\"\r\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\"&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"0\"&gt;&lt;/Button&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"2\"\r\n                    android:text=\".\"&gt;&lt;/Button&gt;\r\n\r\n            &lt;/LinearLayout&gt;\r\n\r\n        &lt;/LinearLayout&gt;    \r\n        &lt;LinearLayout android:layout_width=\"wrap_content\"\r\n             android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\r\n             android:layout_weight=\"3\"&gt;\r\n             &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" \r\n                    android:text=\"=\"&gt;&lt;/Button&gt;\r\n        &lt;/LinearLayout&gt;         \r\n&lt;/LinearLayout&gt;  \r\n```", "Konwledge_Point": "线性规划简介", "Question": ["android线性布局（计算器ui）", ["\n以上是效果图：", "\n下面是我的代码，求指教：", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n    android:layout_width=\"match_parent\"", "\n    android:layout_height=\"match_parent\"", "\n    android:orientation=\"vertical\" >", "\n\n", "<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n    <EditText \n        android:id=\"@+id/msg\" android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:hint=\"@null\" />\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"@+string/m_c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m+\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"mr\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+/-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"/*\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"*\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"7\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"8\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"9\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"-\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"4\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"5\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"6\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+    \"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\n    >\n\n        <LinearLayout android:layout_width=\"wrap_content\"\n             android:layout_height=\"wrap_content\" android:orientation=\"vertical\"\n             android:layout_weight=\"3\"> \n\n            <LinearLayout android:layout_width=\"match_parent\"\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\">\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n\n            </LinearLayout>  \n\n\n\n        </LinearLayout>             \n</LinearLayout>  \n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误是使用了未定义的变量.&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["初学者求助：用python解一阶线性微分方程组", ["目标：由f3，f4求解i（t），e（t）的数值解（给定初值）", "\n\n", "想拜托大佬们帮我看看这个思路是否可行，以及为何报错：", "\n\n", "from sympy import *", "\n\n", "t=symbols('t')", "\n\n", "f3=Eq(i(t).diff(t),1/5.1*e(t)-11.45*t**-1.662*i(t))", "\n\n", "f4=Eq(e(t).diff(t),-1/5.1*e(t)+4*i(t))", "\n\n", "eq=(f3,f4)", "\n\n", "# 第一步求解i(t),e(t)的结果：", "\n\n", "# i(t)=C1*x0(t) + C2*x0(t)*Integral(0.196078431372549*exp(m)*exp(n)/x0(t)**2, t)", "\n\n", "# e(t)=C1*y0(t) + C2*(y0(t)*Integral(0.196078431372549*exp(m)*exp(n)/x0(t)**2, t) + exp(m)*exp(n)/x0(t))", "\n\n", "# 其中：", "\n\n", "# m=Integral(-0.196078431372549, t)=-0.196078431372549*t", "\n\n", "# n=Integral(-11.45*t**(-1.662), t)=17.2960725075529*t**(-0.662)", "\n\n", "# 第二步赋初值：C1=4156,C2=25000,将原方程组转换为求解未知函数x0(t),y0(t)的方程组(在下面程序中用x,y分别代替x0,y0)：", "\n\n", "x,y=symbols('x,y',cls=Function)", "\n\n", "f3=Eq(4900.0*Derivative(x(t),t)*Integral(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + 4156*Derivative(x(t),t) + 4900.0*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t),1/5.1*(4156*y(t) + 25000*(y(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + exp(-0.196*t)*exp(17.296*t**(-0.662))/x(t)))-11.45*t**-1.662*(4156*x(t) + 25000*x(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t)))", "\n\n", "f4=Eq(-286248.8*t**(-1.662)*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t) + 4900.0*Derivative(y(t), t)*Integral(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2, t) + 4156*Derivative(y(t), t) - 4900.0*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t) + 4900.0*y(t)*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2 - 25000*exp(17.296*t**(-0.662))*exp(-0.196*t)*Derivative(x(t), t)/x(t)**2,-1/5.1*(4156*y(t) + 25000*(y(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + exp(-0.196*t)*exp(17.296*t**(-0.662))/x(t)))+4*(4156*x(t) + 25000*x(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t)))", "\n\n", "eq=(f3,f4)", "\n\n", "results=dsolve(eq)", "\n\n", "for result in results:", "\n\n", "    print(result)", "\n\n", " ", "\n\n", "报错：", "\n\n", "Traceback (most recent call last):", "\n  File \"c:/Users/lenovo/Desktop/1.py\", line 96, in <module>", "\n    results=dsolve(eq)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 588, in dsolve", "\n    match = classify_sysode(eq, func)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 1971, in classify_sysode", "\n    type_of_equation = check_nonlinear_2eq_order1(eq, funcs, func_coef)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 2106, in check_nonlinear_2eq_order1", "\n    (r1[f].subs(x(t),u).subs(y(t),v))/", "\nTypeError: 'NoneType' object is not subscriptable"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;既然你知道了y和x那么数值求到了dy/dt和dx/dt&amp;#xff0c;自然就可以通过插值方法得到与x和y等长的dy/dt和dx/dt&amp;#xff0c;然后直接进行拟合就好了啊&amp;#xff0c;lsqcurvefit也好&amp;#xff0c;最小二乘法加上fminsearch求解也罢&amp;#xff0c;都可以做啊&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab 非线性最小二乘法 求解微分方程", ["如下微分方程，求解微分方程系数（a1, a2, a3）", "\n", "\n", "\n", "1）没有dx/dt 的方程", "2）yexp是实验值", "3）先假定a1,a2,a3，应用ode45计算解析值y,然后用lsqcurvefit求系数", "\n", "代码如下：", "\n", "t = data(:,1);\nx = data(:,2);\ny_exp = data(:,3);\n\ndt = t(2) - t(1);\nlen = length(x);\ndx_dt(1) = x(1)/dt;\n", "dx_dt(2:len) = diff(x) / dt;", "\ndy_exp(1) = y_exp(1)/dt;\n", "dy_exp(2:len) = diff(y_exp) / dt;", "\n\na1 = 10.74;\na2 = 0.91;\na3 = 290;\n\nget_dx_dt = @(t_sim) interp1(t(1:end), dx_dt, t_sim);\ndy_dt = @(t,y)(get_dx_dt(t)-sign(y)*(abs(y)/a1)^(1/a2))*a3;\n[tout, y] = ode4(dy_dt, t(1), dt, t(end), y_exp(1));\n\nlen_y = length(y);\nx1 = dx_dt(1:len_y);\nx2 = y';\nY =dy_exp(1:len_y);\nX=[x1;x2]';\na0=rand(1,3);\nfunc=@(a,X)(x1-sign(x2).*(abs(x2)/a(1)).^(1/a(2)))*a(3);\na=lsqcurvefit(func,a0,X,Y);\n\n", "\n", "计算得到的a为复数。", "请问:", "1.思路是否正确；", "2.如果思路不正确，能否指明正确思路", "\n", "谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;计算多元线性回归中每个回归系数的t检验结果对应的Cohen&amp;#39;s d需要以下步骤&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1.计算每个回归系数的t值&amp;#xff1a;将回归系数除以它的标准误差。&lt;/p&gt;\n&lt;p&gt;2.计算每个回归系数对应的Cohen&amp;#39;s d&amp;#xff1a;将每个回归系数的t值除以样本的标准差的根号。&lt;/p&gt;\n&lt;p&gt;3.评估Cohen&amp;#39;s d的大小&amp;#xff1a;Cohen&amp;#39;s d的大小表示因变量的变化对自变量的影响&amp;#xff0c;通常认为0.2是小的、0.5是中等的&amp;#xff0c;0.8是大的。&lt;/p&gt;\n&lt;p&gt;4.计算Cohen&amp;#39;s d&amp;#xff1a;Cohen&amp;#39;s d是回归系数的t值除以因变量的标准差的根号&amp;#xff0c;即d &amp;#61; t / sqrt(n)&amp;#xff0c;其中n为样本的大小。&lt;/p&gt;\n&lt;p&gt;注意&amp;#xff1a;上述步骤需要使用样本数据以及其他相关的统计信息&amp;#xff0c;如样本的标准差、样本的数量等。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["多元线性回归系数回归系数显著性检验（t检验）怎么求每个t检验的cohen‘d", ["多元线性回归系数回归系数显著性检验（t检验）怎么求每个t检验的cohen‘d"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; &lt;a href=\"https://blog.csdn.net/weixin_43905191/article/details/104677945?utm_source&amp;#61;app&amp;amp;app_version&amp;#61;5.2.1&amp;amp;code&amp;#61;app_1562916241&amp;amp;uLinkId&amp;#61;usr1mkqgl919blen\" id=\"textarea_1647840617915_1647840630063_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_43905191/article/details/104677945?utm_source&amp;#61;app&amp;amp;app_version&amp;#61;5.2.1&amp;amp;code&amp;#61;app_1562916241&amp;amp;uLinkId&amp;#61;usr1mkqgl919blen&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["想知道能不能用Python实现克莱姆公式求解线性方程组啊", ["就自己瞎写了些，好像都不太行，想看看有没有什么方法实现用程序来计算克莱姆方程对线性方程组的求解"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一般是看你需要哪个&amp;#xff0c;应该是实际情况而定&lt;br /&gt;比方说你要第一个解&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;U1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solU1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;V1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solV1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你要第二个解&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;U2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solU1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;V2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solV1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["非线性方程组有多个解的问题", ["问题遇到的现象和发生背景", "\n", "非线性方程组有两个解，怎么才能只保留一个", "\n", "问题相关代码，请勿粘贴截图", "\n", "clc,clear", "syms u v; % 定义u v 是未知量", "eqns=[(u+1.25)/(v+0.69) == 4533269482901803/4503599627370496,64/49 == (v + 0.69)^2 + (u+ 1.25)^2]; % 定义方程组", "vars=[u,v]; % 定义求解的未知量", "[solU,solV]=solve(eqns,vars) % 求解eqns中的vars未知量，分别存储", "sol=fzero(eqns,vars); % 求解eqns中的vars未知量，以结构体的形式存储到sol中", "solU1=sol.u % 从sol结构体中取出变量u的解", "solV1=sol.v % 从sol结构体中取出变量v的解", "\n", "想保留一个解，怎么操作啊，求"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Considering you want last row to always be id 1000:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function linear($step) {\n\n $query = \"SELECT * FROM TABLE WHERE id IN (1000, 1000 - $step, 1000 - $step * 2, 1000 - $step * 3)\"\n $result = mysql_query($query)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In case you do not know what is the last ID:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function linear($step) {\n $lastId = mysql_fetch_assoc(mysql_query(\"SELECT id FROM TABLE ORDER BY id DESC LIMIT 1\"))['id']\n $query = \"SELECT * FROM TABLE WHERE id IN ($lastId, $lastId - $step, $lastId - $step * 2, $lastId - $step * 3)\"\n $result = mysql_query($query)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Feel free to ask if you need more information.\nYou are welcome.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何在MySQL中获取线性函数行？", ["\n\n", "I have a MySQL table with 1000 rows. And I want to get 4 specific rows based on linear function as step (get value of row, last position must be the last row, row number 1000). Example:", "\n\n", "---------------------\n id  | value\n---------------------\n  1  | 3\n  2  | 1\n  3  | 5\n  4  | 4\n ... | ...\n 997 | 2\n 998 | 0\n 999 | 7\n1000 | 4\n--------------------\n", "\n\n", "Step as linear function (1,2,3....,N)", "\n\n", "*) step=1  =>  i will get 4 rows of id : 997,998,999,1000   \n       first row to get is row number 997, last row is row number 1000\n       result = 2,0,7,4\n*) step=2  =>  i will get 4 rows of id : 994,996,998,1000\n*) step=3  =>  i will get 4 rows of id : 991,994,997,1000\n*) step=4  =>  i will get 4 rows of id : 988,992,996,1000\n*) step=5  =>  i will get 4 rows of id : 985,990,995,1000\n.....\n*) step=330 => i will get 4 rows of id : 10,340,670,1000\n*) step=331 => i will get 4 rows of id : 7,338,669,1000\n*) step=332 => i will get 4 rows of id : 4,336,668,1000\n*) step=333 => i will get 4 rows of id : 1,334,667,1000\n", "\n\n", "How to do it in PHP?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;warning信息问题不大&amp;#xff0c;做测试看结果的话可以忽略&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性回归，运行时出现一个问题", ["刚接触，复制别人的代码熟悉，遇到这样的问题，有能帮我看看嘛，需要改什么或者还是有什么问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;datetools好像已经弃用了 要么用别的 要么降版本&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["大数据一元线性回归代码提示错误", ["整个代码其他部分运行没问题，只有图示部分提示错误信息，不明白是什么意思，但又不影响整个代码正常运行。", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "http://www.zybang.com/question/7743c5097ab383da2608b909488a4498.html", "Konwledge_Point": "线性规划简介", "Question": ["VS2010 求一个线性方程组A.x=b的解，用了Eige n库，可是我更新A，b后解没有更新", ["代码 这里tub就是x (", "https://img-ask.csdn.net/upload/201607/29/1469795830_353711.png", ")", "\nA是矩阵，b是向量。for循环后A,b的值都变了，但是调试发现方程解tub不变。求指点"]], "Tag": "算法设计"}
{"Answer": "不是，因为new的过程就是动态申请内存的过程，就像C中的malloc一样动态的申请内存的，应该是链式的结构吧，但是数组不一样的，数组是线性的结构，不正确的地方欢迎指正，交流啊", "Konwledge_Point": "线性规划简介", "Question": ["对象在内存中分配的时候，其属性是线性分配的吗？", ["比如说：", "\nclass A", "\n{", "\n    int i=1;", "\n    double j=2.0;", "\n    String s=\"xyz\";", "\n\n", "public void function()\n{\n}\n", "\n\n", "}", "\n我的问题是：假如int是4字节，double是8字节，String是X个字节，请问4,8，X这些内存是连续分配的吗？像数组那样？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem in your solution is that you are using \"linear probing\" for insert operation, but you are not using the same approach for retrieving it.&lt;/p&gt;\n\n&lt;p&gt;First of all - I would change your underlining storage to keep whole struct instead of value:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var hasharray [15]Item\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Second, I would change the retrieve method to check value of the item with calculated hash index, and after that iterate items one by one to find actual item if there was a collision:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func retrieve(key string) {\n    index := hashmethod(key)\n    found := false\n    for !found {\n        item:= hasharray[index];\n        if key == item.key {\n         found = true;\n         fmt.Println(index, item)\n        } else if index != size-1 {\n            index++\n        } else {\n            index = 0\n        }\n    }   \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See here: &lt;a href=\"https://play.golang.org/p/8JfTpbJcWx\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/8JfTpbJcWx&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["使用线性探测解决冲突后，如何从哈希表中检索值？", ["\n\n", "I am trying to implement a hash program in go, I did insertion and resolved collisions using linear probing. When I'm trying to retrieve values back, i'm getting different values as I used linear probing to fix collisions.", "\n\n", "This is my program : ", "https://play.golang.org/p/7Pmqu6A313", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;SVM模型预测解决非线性数据的问题&amp;#xff0c;是通过核函数将非线性数据全部转化成更高维的数据&amp;#xff0c;在更高维度的空间中&amp;#xff0c;使得这些更高维的数据是可以进行线性分类的&amp;#xff0c;从而在实际分类中&amp;#xff0c;其分类原理是首先需要对原始数据进行核函数的变换&amp;#xff0c;根据变换后的数据进行分类判别&amp;#xff0c;最终确定原始数据的所属类别&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["SVM模型预测解决非线性数据的问题，是把数据转化成线性了吗", ["SVM模型预测解决非线性数据的问题，是把数据转化成线性了吗？", "比如 我做空气质量指数的预测，我用ARIMA模型做出的空气质量指数的残差，想将非线性残差序列用SVM模型再做一次预测，最终是把非线性数据转成线性的了吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;代码供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;% 实验&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; \n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;51&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;76&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;66&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;87&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;61&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;77&lt;/span&gt;];\n&lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; length(x);\n&lt;span class=\"hljs-attr\"&gt;x_mean&lt;/span&gt; &amp;#61; sum(x)/n%均值&amp;#xff0c;也可以用&lt;span class=\"hljs-attr\"&gt;x_mean&lt;/span&gt; &amp;#61; mean(x)\n&lt;span class=\"hljs-attr\"&gt;s&lt;/span&gt; &amp;#61; sqrt((sum(x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-x_mean^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))/(n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))%标准差\n\n% 实验&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;t&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;sqrt(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-attr\"&gt;Fk&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attr\"&gt;Fk_1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attr\"&gt;k&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nwhile (abs(Fk/Fk_1 -t) &amp;gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;e-&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; )\n &lt;span class=\"hljs-attr\"&gt;Fk1&lt;/span&gt; &amp;#61; Fk &amp;#43; Fk_1;\n &lt;span class=\"hljs-attr\"&gt;temp&lt;/span&gt; &amp;#61; Fk; \n &lt;span class=\"hljs-attr\"&gt;Fk_1&lt;/span&gt; &amp;#61; Fk;\n &lt;span class=\"hljs-attr\"&gt;Fk&lt;/span&gt; &amp;#61; Fk1;\nend\nformat long\n&lt;span class=\"hljs-attr\"&gt;errors&lt;/span&gt; &amp;#61; Fk/Fk_1 - t\n% 可以看出相差小于&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;e-&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;x_mean &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n  &lt;span class=\"hljs-number\"&gt;72.400000000000006&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n  &lt;span class=\"hljs-number\"&gt;12.112436217008941&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;errors&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n     &lt;span class=\"hljs-number\"&gt;9.771908393574336&lt;/span&gt;e-&lt;span class=\"hljs-number\"&gt;09&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab的练习题，数组编程的", ["这俩该咋编啊，各位帮忙看看，对于矩阵和数组运算一时半会儿还真转不过来弯，", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;本来清明节后工作挺忙的&amp;#xff0c;结果意外的一切正常&amp;#xff0c;上班摸鱼期间看到了你的提问&amp;#xff0c;想尝试用心答一下。&lt;br /&gt;你想知道标题的原因&amp;#xff1f;这个原因是想说&amp;#xff0c;照你的理解F检验通过的话&amp;#xff0c;那么4个自变量也应该是显著的对吧。&lt;/p&gt;\n&lt;p&gt;首先我想解释下多元回归中F检验的意义&amp;#xff0c;我觉得你可能要先明确这一点&amp;#xff0c;F检验中&amp;#xff0c;我们本身是想让其支持备择假设H1而拒绝H0&amp;#xff0c;但犯第一类错误下拒绝了H0&amp;#xff0c;意味着你只能认定肯定有解释变量X1X2X3X4与Y存在回归关系&amp;#xff0c;因为F检验的H0假设是认为k-1个解释变量都不与y存在回归关系。一般的操作过程是F检验通过后&amp;#xff0c;进一步对各变量做t检验以确定哪些X是重要的解释变量。&lt;br /&gt;显然你第一步是成功的&amp;#xff0c;但第二步没有找到一个通过的t。读到此处&amp;#xff0c;我开始质疑你的初始假设条件是否支持你做F检验&amp;#xff0c;即F检验&amp;#xff0c;它可靠吗&amp;#xff1f;&lt;br /&gt;标题里是多元回归的内容&amp;#xff0c;下方的各种建模尝试我看到都是在进行线性建模&amp;#xff0c;那么我首先认为你需要做的是多元线性回归。&lt;br /&gt;我首先说结论吧&amp;#xff0c;基于你给出的结果&amp;#xff0c;因变量间存在着中度的相关性&amp;#xff08;0.5其实很高了&amp;#xff09;&amp;#xff0c;也就是犯了多重共线性的问题。&lt;/p&gt;\n&lt;p&gt;那么我先尝试不借助任何统计论证去解释你的这个结果。从业务端看这种问题可以猜想是不是你的能力测试间并不相互独立&amp;#xff08;其实可以简单暴力的归结为聪明人做什么测试都得心应手&amp;#xff0c;而蠢人干什么可能都差点意思&amp;#xff09;&amp;#xff0c;那么毫无疑问测试分数间是有相关性存在的。而且对应你的Y是某项绩效分数&amp;#xff0c;也可以用这样的业务常识去佐证。毕竟优秀的人绩效也不会差&amp;#xff0c;对吧。&lt;/p&gt;\n&lt;p&gt;那么为什么会在线性组合之后关系反而弱化了&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;我曾经给同事们设计过一项变态的问卷&amp;#xff0c;那份问卷分AB卷&amp;#xff0c;简单弱化概念就是这份问卷可以真实反映做题人的IQ水平&amp;#xff0c;但A卷是得分越高IQ越高&amp;#xff0c;B卷是得分越低IQ越高&amp;#xff08;B卷是我小时候看武林外传李大嘴做测试题的灵机一动&amp;#xff09;&amp;#xff0c;虽然我们没有让每一个受试者把AB卷各答一遍&amp;#xff0c;但我们还是拿到了每个人的得分。你可以看到&amp;#xff0c;IQ与A高度正线性相关&amp;#xff0c;IQ与B高度负线性相关&amp;#xff0c;但IQ与A&amp;#43;B的多项式就显得不那么相关了&amp;#xff08;如果我们真的让每个人都做了A和B&amp;#xff09;。我想这个例子有助于你的进一步思考。&lt;/p&gt;\n&lt;p&gt;接着聊聊统计论证吧。其实在统计学的世界里&amp;#xff0c;回归问题有大量变量间相关&amp;#xff0c;自相关问题多出现在时间序列的分析过程中。在应对这种问题时&amp;#xff0c;因为你的基础假设条件不满足线性回归&amp;#xff0c;也就意味着你的方法其实全部失效了。&amp;#xff08;很残忍对不对。。。&amp;#xff09;要想研究这种问题&amp;#xff0c;就必须重新构筑变量&amp;#xff0c;或者重新研判变量间关系&amp;#xff0c;即使牺牲一部分的信息量&amp;#xff0c;也要保证你的多元线性模型能够更好的拟合。&amp;#xff08;我猜想这部分可能会以EFA过程反驳我&amp;#xff0c;别急&amp;#xff0c;看下去&amp;#xff0c;毕竟我也没看到你的KMO和barrlet不是吗。&amp;#xff09;写到此处我忽然想起一篇我多年前的学年论文博客&amp;#xff0c;你可以参考下面对线性相关时&amp;#xff0c;如何处理能够使得结果可行。&lt;a href=\"https://blog.csdn.net/lixiaomie01/article/details/80395065\" id=\"textarea_1649214326938_1649227112550_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/lixiaomie01/article/details/80395065&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;针对其中的几个点我想我其实没有给你思路&amp;#xff0c;只是告诉了你我不认可的论点&amp;#xff0c;但是统计论证到此处&amp;#xff0c;我无法站在你不可靠的假设条件下做论证&amp;#xff0c;我更希望你尝试下新的方法吧&amp;#xff0c;box-cox变化下&amp;#xff0c;或者lasso试试。&lt;br /&gt;期待你的新结果反馈。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["R语言多元回归。4个自变量全部不显著。但整体F显著。只需要深度解释原因。不需要任何纠错", ["本人初学R语言-海外研究生就读。教授的题目背景是4个不同的能力测试分数作为自变量，1个绩效分数作为因变量。（XY都是score的数字分数）探求哪个能力测试和绩效成绩最相关。100+样本数量", "\n", "多元回归后-出现如标题的问题。教授表示这就是想要同学们探索的问题。", "\n", "查阅资料后，", "怀疑是多重现性或者是残值问题", "-用VIF和一些残值程序-包括数据分布是否正态。数据测试完后-全部没有问题。", "数据分布的很好，无多重现性，也没有残值问题", "。", "\n", "又怀疑是否是这4个因变量之间是否高度相关-", "导致多元回归时候互相抵消了显著性。为此各自做了相关分析，", "4个变量互相之间最高的相关系数也就0.5", "。似乎这个原因站不住脚跟。", "\n", "我突发奇想自己", "组合了4个因变量可能存在的线性组合", "-如123、124、234；23；12、14之类的多元回归。发现每一种回归下-", "各个因变量都显示不同的显著性", "。另外，我还做了", "4个一元回归，全部各自高度显著。", "\n", "这个题目的背景是建立在EFA下的-EFA的结果跑出来建议是4个Factors-正好对应了题目数据里4个能力测试的类别。一共40道题目的分数-所以分成4个因子应该是没问题的（如果能指出倪端，欢迎）", "\n", "本人问题就是想要请求各位帮忙解释这个现象的原因。教授是刻意设置这个结果，", "所以不需要纠错，或者更改某种模型-只希望一个合理的解释-最好联系到背景", "，这4个能力测试的设置是否真的能够预测绩效分数，或者和绩效分数高度相关。所以请求指点一下，", "最好附上一些重要理论或是文献！", "我会深入学习！"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import numpy as np\nimport csv\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib\nmatplotlib.rcParams[&amp;#39;font.sans-serif&amp;#39;] &amp;#61; [&amp;#39;SimHei&amp;#39;]\nmatplotlib.rcParams[&amp;#39;font.family&amp;#39;]&amp;#61;[&amp;#39;sans-serif&amp;#39;]\n\ndata &amp;#61; &amp;#39;&amp;#39;&amp;#39;battery,KM\n   2,12\n   5,31\n   8,45\n   8,52\n   13,79\n   15,85\n   17,115\n   19,119\n   21,135\n   24,145&amp;#39;&amp;#39;&amp;#39;.split(&amp;#39;\\n&amp;#39;)\nfor i,j in enumerate(data):\n    data[i] &amp;#61; j.replace(&amp;#39; &amp;#39;, &amp;#39;&amp;#39;).split(&amp;#39;,&amp;#39;)\n\nwith  open(&amp;#39;LR_data_exam.csv&amp;#39;,&amp;#39;w&amp;#39;) as csvFile: #一行一行地写入到csv文件中\n    writer &amp;#61; csv.writer(csvFile)\n    #先写columns_name\n    writer.writerow(data[0])\n    #写入多行用writerows\n    writer.writerows(data[1:])&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; LR_data_exam.csv&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"310\" src=\"https://img-ask.csdnimg.cn/upload/1624861372289.png\" width=\"402\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;dataframe &amp;#61; pd.read_csv(&amp;#34;LR_data_exam.csv&amp;#34;, sep&amp;#61;&amp;#34;,&amp;#34;)\nx &amp;#61; dataframe[&amp;#39;battery&amp;#39;].tolist()\ny &amp;#61; dataframe[&amp;#39;KM&amp;#39;].tolist()\n\n# 画出数据的散点图\nfig &amp;#61; plt.figure()\nfig.set_size_inches(10, 4)   # 整个绘图区域的宽度10和高度4\nax &amp;#61; fig.add_subplot(1, 2, 1)  # 整个绘图区分成一行两列&amp;#xff0c;当前图是第一个。\n# 画出原始数据的散点图。\nax.set_title(&amp;#34;散点图&amp;#34;)\nax.set_xlabel(&amp;#34;battery&amp;#34;)\nax.set_ylabel(&amp;#34;KM&amp;#34;)\nax.scatter(x, y)\nplt.show()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"269\" src=\"https://img-ask.csdnimg.cn/upload/1624861411134.png\" width=\"309\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;regressor &amp;#61; LinearRegression()\nregressor &amp;#61; regressor.fit(np.reshape(x,(-1, 1)),np.reshape(y,(-1, 1)))\nprint(regressor.coef_, regressor.intercept_)  # 打印拟合结果(参数)&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n[[6.28763667]] [-1.19680404]&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;# 画出数据和拟合直线的图\nplt.scatter(x, y)\nplt.plot(np.reshape(x,(-1,1)), regressor.predict(np.reshape(x,(-1,1))))\nplt.xlabel(&amp;#34;battery&amp;#34;) \nplt.ylabel(&amp;#34;KM&amp;#34;) \nplt.title(&amp;#34;拟合结果&amp;#34;)\nplt.show()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"275\" src=\"https://img-ask.csdnimg.cn/upload/1624861449046.png\" width=\"399\" /&gt;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;print(regressor.predict([[10], [20], [30]]))  # model.predict预测x为10,20,30时的结果\nfor i in [40,50,60]:\n    print(regressor.coef_*i &amp;#43; regressor.intercept_)   #用拟合参数预测x为40,50,60时的结果&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n[[ 61.67956266]\n [124.55592935]\n [187.43229605]]\n[[250.30866274]]\n[[313.18502944]]\n[[376.06139613]]&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python编程 线性回归", ["把以下数据制作成csv数据文件,并命名为LR_data_exam.csv。 ", "\n对该文件内的数据进行线性回归", "\n画出数据的散点图", "\n建立线性回归模型并拟合", "\n打印拟合结果(参数) ", "\n画出数据和拟合直线的图", "\n用model.predict预测x为10,20,30时的结果", "\n用拟合参数预测x为40,50,60时的结果", "\n   battery,KM", "\n   2,12", "\n   5,31", "\n   8,45", "\n   8,52", "\n   13,79", "\n   15,85", "\n   17,115", "\n   19,119", "\n   21,135", "\n   24,145"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;根据你提供的代码和错误信息&amp;#xff0c;很可能是你拼写了错误的变量名或模块名。可以检查以下几个方面&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;检查导入的模块名是否正确&amp;#xff0c;正确的模块名应该是statsmodels.api而不是statzmodels.api。&lt;/li&gt;&lt;li&gt;检查是否正确导入了OLS模型&amp;#xff0c;正确的导入方式应该是from statsmodels.regression.linear_model import OLS。&lt;/li&gt;&lt;li&gt;检查X_train2和E_train2是否定义正确&amp;#xff0c;如果这些变量没有定义正确&amp;#xff0c;可能会导致错误。&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;以下是一个正确的多元线性回归模型构建的例子&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; statsmodels.api as sm\n\n&lt;span class=\"hljs-comment\"&gt;# 创建数据&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;X&lt;/span&gt; &amp;#61; np.random.rand(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; X.dot([&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]) &amp;#43; np.random.randn(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 添加常数列1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;X&lt;/span&gt; &amp;#61; sm.add_constant(X)\n\n&lt;span class=\"hljs-comment\"&gt;# 将数据集分为训练集和测试集&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;X_train&lt;/span&gt;, X_test &amp;#61; X[:&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;], X[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;:]\n&lt;span class=\"hljs-attribute\"&gt;y_train&lt;/span&gt;, y_test &amp;#61; y[:&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;], y[&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;:]\n\n&lt;span class=\"hljs-comment\"&gt;# 拟合模型&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;model&lt;/span&gt; &amp;#61; sm.OLS(y_train, X_train).fit()\n\n&lt;span class=\"hljs-comment\"&gt;# 查看模型系数&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(model.params)\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;该例子创建了一个包含3个特征的数据集&amp;#xff0c;使用add_constant函数添加了常数列1&amp;#xff0c;将数据集分为训练集和测试集&amp;#xff0c;然后使用OLS函数拟合了一个多元线性回归模型&amp;#xff0c;并查看了模型的系数。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["构建多元线性回归模型", ["构建多远线性回归模型的时候报错了 如图。", "\n", "怎么修改这个错误", "谢谢各位解答"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Earth Engine 有几种使用减速器执行线性回归的方法&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;ee.Reducer.linearFit()&lt;br /&gt;ee.Reducer.linearRegression()&lt;br /&gt;ee.Reducer.robustLinearRegression()&lt;br /&gt;ee.Reducer.ridgeRegression()&lt;br /&gt;最简单的线性回归缩减器是linearFit()计算一个具有常数项的变量的线性函数的最小二乘估计。要获得更灵活的线性建模方法&amp;#xff0c;请使用允许可变数量的自变量和因变量的线性回归缩减器之一。linearRegression()实现普通最小二乘回归&amp;#xff08;OLS&amp;#xff09;。robustLinearRegression()使用基于回归残差的成本函数来迭代地减轻数据中的异常值 ( O&amp;#39;Leary, 1990 )。 ridgeRegression()使用 L2 正则化进行线性回归。&lt;br /&gt;非现象模型我之前也没做过&amp;#xff0c;不知道如何进行。有一个时间序列拟合的函数&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;ee.Algorithms.TemporalSegmentation.LandTrendrFit(timeSeries, vertices, spikeThreshold, minObservationsNeeded)&lt;/strong&gt;&lt;br /&gt;使用一组LandTrendr断点年份对时间序列进行插值。对于时间序列中的每个输入带&amp;#xff0c;输出一个新的一维数组值带&amp;#xff0c;其中包含由顶点图像识别的断点时间之间的输入值插值。更多细节见LandTrendr算法。&lt;br /&gt;Interpolates a time series using a set of LandTrendr breakpoint years. For each input band in the timeSeries, outputs a new 1D array-valued band containing the input values interpolated between the breakpoint times identified by the vertices image. See the LandTrendr Algorithm for more details.&lt;/p&gt;\n&lt;p&gt;Arguments:&lt;br /&gt;timeSeries (ImageCollection):&lt;br /&gt;Time series to interpolate.&lt;br /&gt;要内插的时间序列影像。&lt;br /&gt;vertices (Image):&lt;br /&gt;Vertices image. A 1D array of LandTrendr breakpoint years.&lt;br /&gt;顶点图像。LandTrendr断点年份的一维数组&lt;br /&gt;spikeThreshold (Float, default: 0.9):&lt;br /&gt;Threshold for dampening input spikes (1.0 means no dampening).&lt;br /&gt;阈值设置&lt;br /&gt;minObservationsNeeded (Integer, default: 6):&lt;br /&gt;Min observations needed.&lt;br /&gt;需要的最小观测值&lt;br /&gt;Returns: Image&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["构建LST-NDVI非线性回归模型", ["您好,看了下您的一些关于线性回归的文章, 请教一下非线性的模型要如何构建呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;int x会越界&amp;#xff0c;循环到第三次x*16807会超出int范围&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["正数乘正数后取余为什么结果有负数", ["本人用线性同余法编写了一个产生0,1之间均匀分布的随机数程序，明明都是正数和正数相乘，但结果却含有负值，始终搞不明白为什么，求指点。谢谢", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "void", " ", "main", "()", "\n", "{   \n\n    FILE*fp;\n    fp = ", "fopen", "(", "\"myrandom.txt\"", ", ", "\"w\"", ");\n    ", "if", " (fp != ", "NULL", ")\n    { \n    ", "double", " n;\n    ", "double", " ex=", "0", ";\n    ", "double", " x0;\n    cout << ", "\"请输入要产生的随机数个数\"", ";\n    cin >> n;\n    cout << ", "\"请输入初始种子\"", ";\n    cin >> x0;\n    ", "int", " x = x0;\n    ", "double", " k = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i < n; i++)\n    {\n        \n        x = (x * ", "16807", ") % ", "2147483647", ";", "//进行线性同余的计算", "\n        ", "double", " m = x / ", "2147483607.0", ";\n        k = k + m;\n        ", "fprintf", "(fp, ", "\"%10.8f \"", ", m);\n        cout << endl;\n    }\n    ex = k / n;\n}\n\n", "\n", "\n", "在某一次运算时x就变为负的了！", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;echarts 应该可以吧&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请问vue怎么写线性图标", ["就是在vue项目中怎么写如下图的线性图表呢？百度了很久都没有相关的代码，哪位有写过相关的帮一下，万分感谢", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建议将x减去2010后再做多项式拟合&amp;#xff0c;设中间变量m &amp;#61; x -2010&amp;#xff0c;然后拟合y与m的关系&amp;#xff0c;得到y关于m的表达式后&amp;#xff0c;再将x &amp;#61; m&amp;#43;2010带回&amp;#xff0c;得到y关于x的表达式。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab多项式数据拟合，因为x过大y过小导致多项式系数为0该怎么解决?", ["Matlab多项式数据拟合，因为x过大y过小导致多项式系数为0该怎么解决?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这是常数变易法.&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["非齐次线性微分方程组", ["这个方程组怎么得出来的，非常迷惑", "关于解决非齐次线性微分方程组的问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误是由于在字符串中使用了无效的格式化占位符导致的。在这里&amp;#xff0c;你使用了&amp;#34;{:.2f}&amp;#34;这个占位符&amp;#xff0c;它的意思是将一个浮点数格式化为保留两位小数的字符串。&lt;/p&gt;\n&lt;p&gt;但是&amp;#xff0c;在这个语句中&amp;#xff0c;你传递给占位符的是一个二维数组gdp_prediction的第一个元素&amp;#xff0c;它应该是一个标量或一维数组&amp;#xff0c;而不是一个二维数组。因此&amp;#xff0c;你需要使用gdp_prediction[0]或gdp_prediction.flatten()[0]来获取第一个元素&amp;#xff0c;然后将它格式化为字符串。同样的&amp;#xff0c;对于ggdp_prediction也需要做相应的修改。&lt;/p&gt;\n&lt;p&gt;下面是修改后的代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;gdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\nggdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{:.2f}&amp;#39;&lt;/span&gt;.format(gdp_prediction[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者使用flatten()方法&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;gdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\nggdp_prediction &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(model&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(X))&lt;span class=\"hljs-selector-class\"&gt;.reshape&lt;/span&gt;(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{:.2f}&amp;#39;&lt;/span&gt;.format(gdp_prediction.flatten()&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注意&amp;#xff0c;在这里我假设了X是用来进行预测的输入数据&amp;#xff0c;你需要根据你的具体情况进行相应的修改。&lt;br /&gt;如果对您有帮助&amp;#xff0c;请给与采纳&amp;#xff0c;谢谢。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python 线性回归", ["gdp_prediction=np.array(model.predict).reshape(-1,1)", "ggdp_prediction=np.array(model.predict).reshape(-1,1)", "print('{:.2f}'.format(gdp_prediction[0][0]))", "报错是 unsupported format string passed to method.", "format", "请问要怎么改"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为两种写法并不是等价的。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(H-&amp;gt;&lt;/span&gt;Cells[ind].Info &amp;#61;&amp;#61; Legitimate){ &lt;span class=\"hljs-comment\"&gt;//就是这里&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(H-&amp;gt;&lt;/span&gt;Cells[ind].Data &amp;#61;&amp;#61; Key){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//还有这里&lt;/span&gt;\n                return ind;\n            }\n        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这里实际包含了另一个条件&amp;#xff0c;就是内层的&lt;code class=\"language-javascript\"&gt;if&lt;/code&gt;如果没满足&amp;#xff0c;还有&lt;code class=\"language-javascript\"&gt;else&lt;/code&gt;&amp;#xff0c;而这个else是直接返回&lt;code class=\"language-javascript\"&gt;ERROR&lt;/code&gt;。&lt;br /&gt;而下面的写法&amp;#xff0c;实际是把条件限定更加严格。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;(H-&amp;gt;&lt;/span&gt;C&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ells&lt;/span&gt;[ind].Info &amp;#61;&amp;#61; Legitimate &amp;amp;&amp;amp; H-&amp;gt;&lt;/span&gt;Cells[ind].Data &amp;#61;&amp;#61; Key){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//就是这里&lt;/span&gt;\n            return ind;\n        }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;就是必须满足两个条件才返回&lt;code class=\"language-javascript\"&gt;ind&lt;/code&gt;&amp;#xff0c;不满足则进入&lt;code class=\"language-javascript\"&gt;else&lt;/code&gt;&amp;#xff0c;忽略了进入&lt;code class=\"language-javascript\"&gt;ERROR&lt;/code&gt;的条件。&lt;br /&gt;所以程序上面才是正确的。&lt;br /&gt;如有帮助&amp;#xff0c;希望采纳一下&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["PTA习题问题，离大谱了", ["浙大版《数据结构（第2版）》题目集", "习题5.10 线性探测法的查找函数 (20 分)", "把两个if条件写开就答案正确", "\n", "Position ", "Find", "( HashTable H, ElementType Key )\n{\n    Position ind;\n    ", "int", " ", "count", " = ", "0", ";\n    ", "//循环表长长度", "\n    ", "while", "(", "count", " < H->TableSize){\n        ", "//获取Key第一次在的位置", "\n        ind = Hash(Key +", "count", ",H->TableSize);\n        ", "if", "(H->Cells[ind].Info == Legitimate){ ", "//就是这里", "\n            ", "if", "(H->Cells[ind].Data == Key){", "//还有这里", "\n                ", "return", " ind;\n            }\n        }", "else", "{\n            ", "return", " ind;\n        }\n        ", "count", "++;\n    }\n    ", "return", " ERROR;\n}\n", "\n", "把if的两个条件写在一起，结果就是部分正确", "\n", "Position ", "Find", "( HashTable H, ElementType Key )\n{\n    Position ind;\n    ", "int", " ", "count", " = ", "0", ";\n    ", "//循环表长长度", "\n    ", "while", "(", "count", " < H->TableSize){\n        ", "//获取Key第一次在的位置", "\n        ind = Hash(Key +", "count", ",H->TableSize);\n        ", "if", "(H->Cells[ind].Info == Legitimate && H->Cells[ind].Data == Key){", "//就是这里", "\n            ", "return", " ind;\n        }", "else", "{\n            ", "return", " ind;\n        }\n        ", "count", "++;\n    }\n    ", "return", " ERROR;\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用循环不断比较每个节点的值&amp;#xff0c;如果找到最大值&amp;#xff0c;则记录这个值及其节点&amp;#xff0c;循环结束把尾结点的值和最大值节点的值互换即可&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; datatype ;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;node&lt;/span&gt;{\n    datatype data;\n    node * link;\n}; \n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    node * list,* tmp,*pre&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//创建测试链表节点的测试数据&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;){\n        \n        \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入链表第%d个节点的值&amp;#xff1a;&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        \n    \n        tmp &amp;#61; (node*)&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(node));\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(pre!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n            pre-&amp;gt;link &amp;#61; tmp;\n        }\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            list &amp;#61; tmp;\n        }\n    \n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;tmp-&amp;gt;data);    \n        tmp-&amp;gt;link &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;        \n        pre &amp;#61; tmp;\n                \n        i&amp;#43;&amp;#43;;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//打印移动前&amp;#xff0c;链表各节点的值 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;移动最大值前链表各节点的值为&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    tmp &amp;#61; list;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(tmp!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,tmp-&amp;gt;data,tmp-&amp;gt;link);\n        tmp &amp;#61; tmp-&amp;gt;link;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    \n    \n    tmp &amp;#61; list;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max&amp;#61;tmp-&amp;gt;data;  &lt;span class=\"hljs-comment\"&gt;//把链表节点最大值赋值为链表节点第一个值 &lt;/span&gt;\n    node* maxList&amp;#61;tmp,tmp2;   &lt;span class=\"hljs-comment\"&gt;//最大值节点也赋值为链表第一个节点 &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;0\\n&amp;#34;);&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//i&amp;#61;0;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(tmp!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n    \n        &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;0,tmp-&amp;gt;data&amp;#61;%d,tmp-&amp;gt;link&amp;#61;%p\\n&amp;#34;,tmp-&amp;gt;data,tmp-&amp;gt;link);    &lt;/span&gt;\n  &lt;span class=\"hljs-comment\"&gt;//如果链表节点当前最大值小于当前节点的值&amp;#xff0c;则把最大值赋值为当前节点的值&amp;#xff0c;最大值节点也赋值为当前节点         &lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(max&amp;lt;tmp-&amp;gt;data){ \n        &lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;tmp-&amp;gt;data&amp;#61;%d,max&amp;#61;%d\\n&amp;#34;,tmp-&amp;gt;data,max);&lt;/span&gt;\n            max &amp;#61; tmp-&amp;gt;data;\n            maxList &amp;#61; tmp;\n            \n        }\n    &lt;span class=\"hljs-comment\"&gt;//    i&amp;#43;&amp;#43;;&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;i&amp;#61;%d\\n&amp;#34;,i);&lt;/span&gt;\n        pre &amp;#61; tmp;  &lt;span class=\"hljs-comment\"&gt;//记录当前节点&amp;#xff0c;以便循环结束记录到链表节点的尾结点 &lt;/span&gt;\n        tmp &amp;#61; tmp-&amp;gt;link;\n    }\n    \n&lt;span class=\"hljs-comment\"&gt;//    printf(&amp;#34;1-1,maxList&amp;#61;%p,pre&amp;#61;%p\\n&amp;#34;,maxList,pre);&lt;/span&gt;\n    maxList-&amp;gt;data &amp;#61; pre-&amp;gt;data; &lt;span class=\"hljs-comment\"&gt;//把最大值节点的值赋值为尾结点的值 &lt;/span&gt;\n    pre-&amp;gt;data &amp;#61; max;  &lt;span class=\"hljs-comment\"&gt;//把尾结点的值赋值为最大值节点的值&amp;#xff0c;实现把最大值移到节点的最后面的目的 &lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;//打印移动后的结果 &lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;移动最大值后链表各节点的值为&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    tmp &amp;#61; list;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(tmp!&amp;#61;&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,tmp-&amp;gt;data);\n        tmp &amp;#61; tmp-&amp;gt;link;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/543424389266111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["最大值移动到最后的线性链表的结点移动", ["已知非空线性链表第1个链结点指针为list，链结点构造为", "struct node{", "datatype data;", "node *link;", "};", "请写一算法，将该链表中数据域值最大的那个点移到链表的最后面。（假设链表中数据域值最大的链结点惟一）（注意：要求先写出算法的解题思路，然后再写出算法）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是2x^3&amp;#43;4x^2&amp;#43;3x&amp;#43;6&amp;#61;0吧&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x)&lt;/span&gt;                   \n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x&amp;#43;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;newx&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x1, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x2)&lt;/span&gt;    \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x;\n    x &amp;#61; (x1*&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x2) - x2*&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1)) / (&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x2) - &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;root&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x1, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x2)&lt;/span&gt;        \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x, y, y1;\n    y1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1);                      \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(y &amp;#61; y1; &lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(y) &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;; )\n    {\n        x &amp;#61; &lt;span class=\"hljs-built_in\"&gt;newx&lt;/span&gt;(x1, x2);           \n        y &amp;#61; &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x);                 \n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y*y1 &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)            \n        {\n            y1 &amp;#61; y;\n            x1 &amp;#61; x;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            x2 &amp;#61; x;                    \n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x;\n    x &amp;#61; &lt;span class=\"hljs-built_in\"&gt;root&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,x);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用弦解法求非线性方程", ["用弦截法求非线性方程2", "3-4", "2+3x-6=0在区间[0,3]的一个实根，精度为10-6。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;左右移项&amp;#xff0c;然后缩小矩阵&amp;#xff0c;继续linalg.solve()&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何在已知部分解的情况下，求解线性方程组？", ["在求解线性方程组时，将线性方程组组装成矩阵形式，可以通过numpy.linalg.solve()直接给出结果。", "但如果已知部分解的情况下，如何得到该情况下线性方程组的解？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;在Matlab中进行周期函数简单线性拟合&amp;#xff0c;可以使用Matlab中的polyfit函数。该函数可以对给定的一组数据点进行线性拟合&amp;#xff0c;并返回拟合的系数。&lt;/p&gt;\n&lt;p&gt;假设有一个周期函数的数据点&amp;#xff0c;可以先通过找到峰值点确定一个周期。然后&amp;#xff0c;将数据点按周期分段&amp;#xff0c;对每个段进行拟合。可以使用Matlab中的mod函数将数据点按周期分段&amp;#xff0c;然后分别对每个段使用polyfit函数进行拟合。最后&amp;#xff0c;将所有段的拟合结果合并起来即可得到周期函数的简单线性拟合。&lt;/p&gt;\n&lt;p&gt;以下是一个示例代码&amp;#xff0c;假设数据点为x和y&amp;#xff0c;周期为period&amp;#xff0c;峰值点为peak&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 计算周期起始点&lt;/span&gt;\nstart &amp;#61; peak - &lt;span class=\"hljs-built_in\"&gt;floor&lt;/span&gt;(period/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n\n&lt;span class=\"hljs-comment\"&gt;% 按周期分段&lt;/span&gt;\nnum_periods &amp;#61; &lt;span class=\"hljs-built_in\"&gt;floor&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x)/period);\nsegments &amp;#61; cell(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,num_periods);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:num_periods\n    indices &amp;#61; start &amp;#43; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:period) &amp;#43; (&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)*period;\n    segments{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;} &amp;#61; [x(indices); y(indices)];\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 对每个段进行拟合&lt;/span&gt;\ncoeffs &amp;#61; cell(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,num_periods);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:num_periods\n    segment &amp;#61; segments{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;};\n    p &amp;#61; polyfit(segment(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,:), segment(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,:), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    coeffs{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;} &amp;#61; p;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 合并拟合结果&lt;/span&gt;\nall_coeffs &amp;#61; [coeffs{:}];\na &amp;#61; all_coeffs(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;);\nb &amp;#61; all_coeffs(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;);\nx_fit &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(x), &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(x), &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\ny_fit &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x_fit));\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:num_periods\n    indices &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)*period&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*period;\n    y_fit(indices) &amp;#61; a(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)*x(indices) &amp;#43; b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 绘制拟合结果&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x, y, &lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;, x_fit, y_fit);\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的代码中&amp;#xff0c;首先计算了每个周期的起始点&amp;#xff0c;并将数据点按周期分段。然后&amp;#xff0c;对每个段使用polyfit函数进行线性拟合&amp;#xff0c;并将拟合结果保存在coeffs变量中。最后&amp;#xff0c;将所有拟合结果合并起来&amp;#xff0c;得到整个周期函数的拟合结果。最后&amp;#xff0c;将数据点和拟合结果绘制在同一张图上&amp;#xff0c;以便比较。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab如何进行周期函数简单线性拟合", ["matlab如何进行周期函数简单线性拟合？", "已有如下图数据及周期峰值点，如何进行分段拟合？并按周期重复", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;B变量看起来不是每次都清空&amp;#xff0c;建议&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;...\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:floor(a/&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;) %根据步进的循环数自行调整\nB&amp;#61;zeros(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,b);\nB&lt;span class=\"hljs-comment\"&gt;(:,:)&lt;/span&gt;&amp;#61;A(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*(i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*(i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,:);%挑选出的加载段数据赋值给B\n...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样的话应该是每段拟合。&lt;br /&gt;我觉得这是每次都截取10行&amp;#xff0c;拟合不好是因为带上了上次的数据&amp;#xff0c;局部线性&amp;#xff0c;好几个局部在一起就不线性了。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数据线性拟合结果与实际情况不符，越来越偏。", ["问题遇到的现象和发生背景", "\n", "问题背景：从txt中循环取出数据即每隔几行取几行，并将取出的数据线性拟合。", "问题现象：数据挑选没问题，但是循环程序输出的拟合优度越来越差，从0.99几到0.7几递减。如果将拟合度差的那段数据单独挑出来拟合，数据点又呈很好的线性分布，拟合优度也非常好能达到0.99多。", "\n", "问题相关代码，请勿粘贴截图", "\n", "clear all;\n", "A", "=importdata( ", "'test.txt'", ");\n[a,b]=size(A);%识别A的行数；\nD1=[];%输出加载段斜率、截距、拟合优度\nD2=[];%输出卸载段斜率、截距、拟合优度\n", "for", " ", "i", "=1:floor(a/20) %根据步进的循环数自行调整\nB(10*(i-1)+1:10*(i-1)+10,:)=A(20*(i-1)+1:20*(i-1)+10,:);%挑选出的加载段数据赋值给B\n", "x1", "=B(:,2);%应变\n", "y1", "=B(:,7);%荷载 \n", "p1", "=polyfit(x1,y1,1);\n", "c1", "=p1(:,1);\n", "d1", "=p1(:,2);%把拟合后一次函数的系数提取出来，以回归拟合后的y值\n", "R1", "=1 - (sum(((c1*x1+d1)- y1).^2) / sum((y1 - mean(  y1)).^2));\nC1=[p1,R1];\nD1=[D1;C1];\nE(10*(i-1)+1:10*(i-1)+10,:)=A(20*(i-1)+11:20*(i-1)+20,:);%挑选出的卸载段数据赋值给E\n", "x2", "=E(:,2);\n", "y2", "=E(:,7);\n", "p2", "=polyfit(x2,y2,1);\n", "c2", "=p2(:,1);\n", "d2", "=p2(:,2);%把拟合后一次函数的系数提取出来，以回归拟合后的y值\n", "R2", "=1 - (sum(((c2*x2+d2)- y2).^2) / sum((y2 - mean(y2)).^2));\nC2=[p2,R2];\nD2=[D2;C2];\nend\n", "m", "=D1(:,1);\n", "n", "=D2(:,1);\n", "o", "=m./n;\n\n\n", "\n", "我想要达到的结果", "\n", "期望拟合结果能跟实际对应上。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两个数&amp;#xff0c;比较一次。1024个不是比较1023次吗&lt;br /&gt;&lt;strong&gt;需要比较的最大次数是元素个数-1&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于Java语言程序设计中的线性查找疑问", ["java语言程序设计中的一句话：对于一个有 1024 ( 2 ∧10 ) 个元素的数组，在最坏情况下 ， 二分査找法只需要比较 11 次 ， 而在最坏的情况下线性査找要比较 1023 次。为什么线性是1023次呀，不是1024次吗 ？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的列表用的RecyclerView&amp;#xff1f;还是直接在线性布局一个个添加的&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Android Studio线性布局下滑滚动无响应", ["如图：", "\n", "\n", "问题：", "\n", "列表无法下拉到底部，有些内容显示不出来，布局是线性布局，请问有什么属性或控件能使列表下拉到底部，之前做了底部间距但是无效果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;double类型读取用%lf&lt;br /&gt;scanf(&amp;#34;%f%f%f%f%f%f&amp;#34;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d,&amp;amp;e,&amp;amp;f);这里的%f都改成%lf&lt;br /&gt;scanf这里改完就可以了&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,c,d,e,f,x,y;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; det, det1, det2, ind1, ind2;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf%lf%lf%lf%lf%lf&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d,&amp;amp;e,&amp;amp;f);\n\n    det&amp;#61;a*e-b*d;\n    det1&amp;#61;a*f-c*d;\n    det2&amp;#61;c*e-b*f;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(det)&amp;lt;&lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(det1)&amp;lt;&lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;)\n        {\n            ind1&amp;#61;-b/a;\n            ind2&amp;#61;c/a;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Infinite solution:x&amp;#61;%f*k&amp;#43;%f,k varies within R\\n&amp;#34;&lt;/span&gt;,ind1,ind2);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;unsolvable\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        x&amp;#61;det2/det;\n        y&amp;#61;det1/det;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;#61;%f,y&amp;#61;%f\\n&amp;#34;&lt;/span&gt;,x,y);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请看一下哪里错了，ax+by=c   dx+ey=f", ["#include <stdio.h>", "#include<math.h>", "int main()", "{", "    double a,b,c,d,e,f,x,y;", "    double det, det1, det2, ind1, ind2;", "    scanf(\"%f%f%f%f%f%f\",&a,&b,&c,&d,&e,&f);", "    det=a", "e-b", "d;", "    det1=a", "f-c", "d;", "    det2=c", "e-b", "f;", "    if(fabs(det)<1e-6)", "        if(fabs(det1)<1e-6)", "        {ind1=-b/a;", "            ind2=c/a;", "            printf(\"Infinite solution:x=%f*k+%f,k varies within R\\n\",ind1,ind2);}", "        else", "            printf(\"unsolvable\\n\");", "    else", "    {x=det2/det;", "        y=det1/det;", "        printf(\"x=%f,y=%f\\n\",x,y);}", "return (0);", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; divIn() As Double &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;}\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; divOut() As Double &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;}\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; x As Double &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; y As Double &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;For&lt;/span&gt; i As Integer &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; To divIn.Length - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n            &lt;span class=\"hljs-attribute\"&gt;If&lt;/span&gt; x &amp;gt; divIn(i) And x &amp;lt;&amp;#61; divIn(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) Then\n                &lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; (divOut(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - divOut(i)) / (divIn(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - divIn(i)) * (x - divIn(i)) &amp;#43; divOut(i)\n            &lt;span class=\"hljs-attribute\"&gt;End&lt;/span&gt; If\n        &lt;span class=\"hljs-attribute\"&gt;Next&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;MessageBox&lt;/span&gt;.Show(y)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["VB.NET如何进行线性插值计算？", ["VB.NET如何进行线性插值计算？", "比如说一组数据：X分别是0  5  10  15  20；相对应Y为0  0.1  0.4  0.7  0.8。计算X=7时，Y是多少？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The code in the question is unsafe because it reads a variable in one goroutine and modifies the variable in another goroutine without synchronization.&lt;/p&gt;\n\n&lt;p&gt;Here's one way to make the code safe:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Obj struct {\n   mu sync.Mutex // add mutex\n   ... // other fields as before\n}\n\nfunc (o *Obj) Reader() {\n    o.mu.Lock()\n    data := o.data\n    o.mu.Unlock()\n    for i, value := range data {\n      log.Printf(\"got data[%v] = %v\", i, value)\n    }\n}\n\nfunc (o *Obj) Writer() {\n     o.mu.Lock()\n     o.data = append(o.data, 1234)\n     o.mu.Unlock()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It's safe for &lt;code&gt;Reader&lt;/code&gt; to range over the local slice variable &lt;code&gt;data&lt;/code&gt; because the &lt;code&gt;Writer&lt;/code&gt; does not modify the local variable &lt;code&gt;data&lt;/code&gt; or the backing array visible through the local variable &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["将append（）附加到另一个线程正在读取的切片上是否安全？", ["\n\n", "Let's say I have many goroutines doing something like this:", "\n\n", "func (o *Obj) Reader() {\n  data := o.data;\n  for i, value := range data {\n    log.Printf(\"got data[%v] = %v\", i, value)\n  }\n}\n", "\n\n", "And one doing this:", "\n\n", "func (o *Obj) Writer() {\n    o.data = append(o.data, 1234)\n}\n", "\n\n", "If ", "data := o.data", " means the internal structure of the slice is copied, this looks like it could be safe, because I'm never modifying anything in the accessible range of the copy. I'm either setting one element outside of the range and increasing the length, or allocating a completely new pointer, but the reader would be operating on the original one.", "\n\n", "Are my assumptions correct and this is safe to do?", "\n\n", "I'm aware that slices are not meant to be \"thread-safe\" in general, the question is more about how much does ", "slice1 := slice2", " actually copy.", "\n    "]], "Tag": "算法设计"}
{"Answer": "看看这个http://www.sparkit.cn/2018/04/11/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0sklearn%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B%EF%BC%88%E4%B8%8A%EF%BC%89/", "Konwledge_Point": "线性规划简介", "Question": ["python sklearn 线性回归", ["import ztop_ai as zai;", "\n\n", "mx = zai.mx_line(x_train.values.y_train.values)", "\n\n", "谁知道这句话是什么意思，建模又是什么意思？具体点。。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;直接写出系数矩阵、然后用反除&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;4,0,2,3&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;  0,3,2,3; 2,0,0,1; 0,-2,1,3];%系数矩阵&lt;/span&gt;\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;9;8;10;7&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;\\b\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;1.7174&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;1.9565&lt;/span&gt;\n   -&lt;span class=\"hljs-number\"&gt;8.7826&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;6.5652&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;还望给个采纳哟&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何用matlab编码下面的线性方程组", ["求下列线性方程组的数值解     ", "\n", "4x1 +2x3 +3x4 = 9        ", "\n", "3x2 +2x3 + 3x4 = 8        ", "\n", "2x1 + x4 = 10        ", "\n", "x3 -2x2 + 3x4 =7"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;同学&amp;#xff0c;之前已经回答过了&amp;#xff0c;都是类似的办法&lt;br /&gt;&lt;a href=\"https://ask.csdn.net/questions/7553073?spm&amp;#61;1005.2025.3001.5141\" id=\"textarea_1635849688238_1635849735358_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;如何用matlab编码下面的线性方程组-编程语言-CSDN问答&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;CSDN问答为您找到如何用matlab编码下面的线性方程组相关问题答案&amp;#xff0c;如果想了解更多关于如何用matlab编码下面的线性方程组 matlab 技术问题等相关问答&amp;#xff0c;请访问CSDN问答。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7553073?spm&amp;#61;1005.2025.3001.5141&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何用matlab编码这个线性方程组", ["求下列线性方程组的数值解         ", "\n", "4x1 +2x3 +3x4 = 9        ", "\n", "3x2 +2x3 + 3x4 = 8        ", "\n", "2x1 + x4 = 10        ", "\n", "x3 -2x2 + 3x4 =7"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;python里面的numpy在生成2维矩阵的时候不能只写一个维度的大小值&amp;#xff0c;另外一个维度也要写&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import numpy\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; numpy&lt;span class=\"hljs-selector-class\"&gt;.random&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.rand&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;)\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; numpy&lt;span class=\"hljs-selector-class\"&gt;.linalg&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.det&lt;/span&gt;(a)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样就有结果了&amp;#xff0c;比如我这里有个随机结果&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/955155339136144.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab ipython线性代数", ["\n", "第32题怎么用ipython做？", "我写的是", "a = numpy.random.rand(50)", "b = numpy.linalg.det(a)", "但是报错1-dimensional array given. Array must be at least two-dimensional"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这也不一定。&lt;br /&gt;例如&amp;#xff1a;&lt;br /&gt;&amp;#xff08;1&amp;#xff09;结果与每个因素的相关性都不大&amp;#xff0c;但加权后相关性仍然很大&amp;#xff0c;例如 y &amp;#61;0.1&lt;em&gt;x1 &amp;#43; ...0.1&lt;/em&gt;x10&lt;br /&gt;&amp;#xff08;2&amp;#xff09;结果与每个因素独立的相关性都不大&amp;#xff0c;但受气综合影响的相关性很大&amp;#xff0c;例如 y&amp;#61;x1*...*x10&lt;br /&gt;以上两种情况&amp;#xff0c;模型预测可以达到 100%&amp;#xff0c;但 y 与每个 xi 的相关性都很小。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["2个变量的相关程度很若，这样做出来的回归模型，预测程度也很弱吗", ["最近做了一个用Python建立回归模型的练习。想通过各个变量与销售额的相关性，来做主要影响变量和销售额的相关模型。", "\n", "但是，在计算相关性后，发现每个变量与销售额的相关性都小于0.1，相关性很弱。", "\n", "Q：这种弱相关程度的情况下，去做这些变量与销售额的回归模型，是有意义的吗？模型的预测性应该很不准吧。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用日期group by就可以了&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;Select&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;date&lt;/span&gt;, count(*) &lt;span class=\"hljs-keyword\"&gt;group&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;by&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;date&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于mybatis查询线性图表数据的问题", ["就是要显示一个线性图表，该表显示当前月份每一天递增的数据量，比如用户数量。比如一号是10人，二号是三十人，三号是四十人这样，请问我在mybatis要怎么查呢？应该不能在事务层里去把当前月份的每一天遍历出来然后再一个一个去查吧，感觉那样太慢了，有没有朋友有什么办法，多谢", "\n"]], "Tag": "算法设计"}
{"Answer": "w = model.coef_ \r\nb = model.intercept_ #得到bias值\r\nprint(len(w))  # 输出参数数目\r\nprint([round(i,5) for i in w])  #输出w列表，保留5位小数\r\nprint(b)                       #输出bias\r\n因此你只需要调用评价函数指针的的coef_和intercept_方法", "Konwledge_Point": "线性规划简介", "Question": ["python 利用sklearn库做了线性回归，怎么得出线性表达式的各个参数", ["from skearn.linear_model import LinearRegression()", "\nx=[[6,2],[8,1],[10,0],[14,2],[18,0]]", "\ny=[[11],[8.5],[15],[18],[11]]", "\nmodel=LinearRegression()", "\nmodel.fit(x,y)", "\n#如何求y=a+bx1+cx2中的a,b,c的值"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这个 可以 是四个统计图 。点击时切换一下就行。&lt;/p&gt;\n&lt;p&gt;也可以是一个统计图 &amp;#xff0c;点击 时 绑定不同 的options配置也行&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["有没有哪位做过前端线性图表", ["就是在vue中做线性图表，可以像下图一样，点击不同的时间，就会改变不同的图表状态", "\n", "\n", "比如点击今天跟本周跟本月都能改变不同的状态，我在网上看到的用echarts做的,如下图", "\n", "只能在同一个状态下，然后挤一块，处理不了不同的时间状态，有哪位做过的帮一下，万分感谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;每行最后一个不为零其它全为零则假&amp;#xff0c;否则真。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;judge&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;A&lt;/span&gt;):    \n    res &amp;#61; np.nonzero(A)\n    a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;map&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;tuple&lt;/span&gt;, np.transpose(res).tolist())\n    m,n&amp;#61;np.shape(A)\n    all_l &amp;#61; [(i,n -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(m)]\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; a:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;not&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; all_l:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    res &amp;#61; judge([[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]])\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(res)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python线性代数的办法", ["python 通过numpy nonzero方法判断一个矩阵是否是不一致的,以下是我目前的想法,", "用nonzero可以判断是否是零,如果最后一行最后一列的那个数字为0,且之前的不为0那么就可以判断他是不一致的,但是不知道该如何写出代码."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一般来说是不需要的。但有些情况下如果Y值比较大且是非负的&amp;#xff0c;可以对其做对数运算&amp;#xff0c;对logY做预测&amp;#xff0c;最后再做逆运算即可&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["是否需要对真实值Y标准化", ["在回归模型训练中，我们需要对输入x做标准化。需要对真实值y也做标准化吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性混合效应模型是一种混合模型&amp;#xff0c;通常用于分析不同级别上的观察值之间的关系。在你描述的情况中&amp;#xff0c;两组数据都只有一个主效应显著&amp;#xff0c;且为连续变量&amp;#xff0c;这意味着这两组数据的反应时和错误率与这个主效应有关。&lt;/p&gt;\n&lt;p&gt;做emmeans分析是可以的&amp;#xff0c;这可以帮助我们看到这个主效应对不同级别的观察值的影响。结果中的emmean表示对于不同级别的观察值的平均效应&amp;#xff0c;SE表示标准误差&amp;#xff0c;df表示自由度&amp;#xff0c;lower.CL和upper.CL分别表示置信区间的下限和上限。&lt;/p&gt;\n&lt;p&gt;如果只有主效应显著&amp;#xff0c;那么结果表明主效应是显著的&amp;#xff0c;对于不同级别的观察值都有显著的影响。&lt;/p&gt;\n&lt;p&gt;解释结果可以使用可视化手段&amp;#xff0c;如绘制主效应的线性回归曲线或者使用Tukey的分组比较可视化不同级别观察值之间的差异。&lt;/p&gt;\n&lt;p&gt;总之&amp;#xff0c;在这种情况下&amp;#xff0c;主效应是显著的&amp;#xff0c;对于不同级别的观察值都有影响&amp;#xff0c;使用emmeans分析和可视化工具可以帮助我们更好地理解结果。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["R 线性混合效应模型，只有主效应显著，且为连续变量", ["两组数据分别作了线性混合效应（反应时），广义线性混合效应（错误率），都是只有一个主效应显著，且为连续变量。", "做emmeans看事后比较，输出的结果是", "（主效应下） 2.02e-18， emmean, SE, df, lower.CL, upper.CL", "请问是这样做吗？如果是这样做这样的结果该如何解读呢？有没有可视化的手段？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看图标可以知道&amp;#xff0c;局部线性回归是用于三维数据的&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB曲线拟合器选择拟合类型选不了局部线性拟合", ["这是导入的数据", "打开后其他的都能用，就局部线性回归模型用不了，我想问问是为什么😢", "用的版本是2022b"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;对于您的问题&amp;#xff0c;可以使用插值函数进行二维线性插值。以下是一份Python代码&amp;#xff0c;可以根据您提供的原始数据进行线性插值并绘制图像&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\nfrom scipy.interpolate &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; interp2d\n\n&lt;span class=\"hljs-comment\"&gt;# 构造原始数据&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;91&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;182&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;273&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;364&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;455&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;546&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;637&lt;/span&gt;]\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;91&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;182&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;273&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;364&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;455&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;546&lt;/span&gt;]\n&lt;span class=\"hljs-attr\"&gt;z&lt;/span&gt; &amp;#61; [[&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,    &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;],\n     [&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;,    &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;],\n     [&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;,    &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;],\n     [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,     &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n     [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,     &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n     [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,     &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n     [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,     &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,  &lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]]\n\n&lt;span class=\"hljs-comment\"&gt;# 构建二维线性插值函数&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;f&lt;/span&gt; &amp;#61; interp2d(x, y, z, &lt;span class=\"hljs-attr\"&gt;kind&amp;#61;&amp;#39;linear&amp;#39;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 构建新的 x,y 范围&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;x_new&lt;/span&gt; &amp;#61; np.arange(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;638&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;y_new&lt;/span&gt; &amp;#61; np.arange(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;547&lt;/span&gt;)\n\n&lt;span class=\"hljs-comment\"&gt;# 进行插值&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;z_new&lt;/span&gt; &amp;#61; f(x_new, y_new)\n\n&lt;span class=\"hljs-comment\"&gt;# 绘制插值后的图像&lt;/span&gt;\nplt.imshow(z_new, &lt;span class=\"hljs-attr\"&gt;cmap&amp;#61;&amp;#39;hot&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;interpolation&amp;#61;&amp;#39;nearest&amp;#39;)&lt;/span&gt;\nplt.show()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注&amp;#xff1a;请确保安装有NumPy和Matplotlib包。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["二维矩阵线性插值问题 python", ["我有一串气温资料，要用线性插值找出其他时间点的气温，要怎么做", "我想把这资料做完线性插值弄成图片", "以下是我网上找来找去的自己打出来的，还是有错", "\n", "import", " numpy as np\n", "from", " scipy.interpolate import interp2d\n", "from", " scipy.interpolate import griddata\n", "# 創建一個547*638的矩陣", "\n", "matrix", " = np.zeros((", "547", ", ", "638", "))\n\n\n", "# 定義矩陣大小", "\n", "rows", ", cols = ", "547", ", ", "638", "\n", "# 創建一個新的空矩陣", "\n", "matrix_new", " = np.zeros((rows, cols))\n\n", "# 填充矩陣 設定氣溫", "\n\n", "matrix", "[", "0", ",", "0", "]=", "15", "\n", "matrix", "[", "0", ",", "91", "]=", "15", "\n", "matrix", "[", "0", ",", "182", "]=", "14", "\n", "matrix", "[", "0", ",", "273", "]=", "18", "\n", "matrix", "[", "0", ",", "364", "]=", "24", "\n", "matrix", "[", "0", ",", "455", "]=", "24", "\n", "matrix", "[", "0", ",", "546", "]=", "20", "\n", "matrix", "[", "0", ",", "637", "]=", "17", "\n\n", "matrix", "[", "91", ",", "0", "]=", "17", "\n", "matrix", "[", "91", ",", "91", "]=", "16", "\n", "matrix", "[", "91", ",", "182", "]=", "15", "\n", "matrix", "[", "91", ",", "273", "]=", "18", "\n", "matrix", "[", "91", ",", "364", "]=", "23", "\n", "matrix", "[", "91", ",", "455", "]=", "23", "\n", "matrix", "[", "91", ",", "546", "]=", "19", "\n", "matrix", "[", "91", ",", "637", "]=", "17", "\n\n", "matrix", "[", "182", ",", "0", "]=", "17", "\n", "matrix", "[", "182", ",", "91", "]=", "16", "\n", "matrix", "[", "182", ",", "182", "]=", "15", "\n", "matrix", "[", "182", ",", "273", "]=", "18", "\n", "matrix", "[", "182", ",", "364", "]=", "21", "\n", "matrix", "[", "182", ",", "455", "]=", "21", "\n", "matrix", "[", "182", ",", "546", "]=", "18", "\n", "matrix", "[", "182", ",", "637", "]=", "16", "\n\n", "matrix", "[", "273", ",", "0", "]=", "0", "\n", "matrix", "[", "273", ",", "91", "]=", "0", "\n", "matrix", "[", "273", ",", "182", "]=", "14", "\n", "matrix", "[", "273", ",", "273", "]=", "0", "\n", "matrix", "[", "273", ",", "364", "]=", "21", "\n", "matrix", "[", "273", ",", "455", "]=", "0", "\n", "matrix", "[", "273", ",", "546", "]=", "18", "\n", "matrix", "[", "273", ",", "637", "]=", "0", "\n\n", "matrix", "[", "364", ",", "0", "]=", "0", "\n", "matrix", "[", "364", ",", "91", "]=", "0", "\n", "matrix", "[", "364", ",", "182", "]=", "14", "\n", "matrix", "[", "364", ",", "273", "]=", "0", "\n", "matrix", "[", "364", ",", "364", "]=", "23", "\n", "matrix", "[", "364", ",", "455", "]=", "0", "\n", "matrix", "[", "364", ",", "546", "]=", "18", "\n", "matrix", "[", "364", ",", "637", "]=", "0", "\n\n", "matrix", "[", "455", ",", "0", "]=", "0", "\n", "matrix", "[", "455", ",", "91", "]=", "0", "\n", "matrix", "[", "455", ",", "182", "]=", "14", "\n", "matrix", "[", "455", ",", "273", "]=", "0", "\n", "matrix", "[", "455", ",", "364", "]=", "23", "\n", "matrix", "[", "455", ",", "455", "]=", "0", "\n", "matrix", "[", "455", ",", "546", "]=", "19", "\n", "matrix", "[", "455", ",", "637", "]=", "0", "\n\n", "matrix", "[", "546", ",", "0", "]=", "0", "\n", "matrix", "[", "546", ",", "91", "]=", "0", "\n", "matrix", "[", "546", ",", "182", "]=", "15", "\n", "matrix", "[", "546", ",", "273", "]=", "0", "\n", "matrix", "[", "546", ",", "364", "]=", "23", "\n", "matrix", "[", "546", ",", "455", "]=", "0", "\n", "matrix", "[", "546", ",", "546", "]=", "19", "\n", "matrix", "[", "546", ",", "637", "]=", "0", "\n\n", "# 將原本有值的位置填入新矩陣", "\n", "matrix_new", "[::", "91", ", ::", "91", "] = matrix[::", "91", ", ::", "91", "]\n", "# 定義 x 和 y 的範圍", "\n", "x_range", " = np.arange(", "0", ", cols)\n", "y_range", " = np.arange(", "0", ", rows)\n\n", "# 對每五格進行內插", "\n", "x_new", "=", "0", "\n", "y_new", "=", "0", "\n", "def", " new_func(matrix_new, x_new, y_new, pts, vals):\n    ", "matrix_new", "[y_new, x_new] = griddata(pts, vals, (x_new, y_new), method='linear', fill_value=", "0", ")\n\n", "for", " x in range(", "0", ", cols, ", "5", "):\n    ", "for", " y in range(", "0", ", rows, ", "5", "):\n        ", "# 如果原本位置的值>0，就不做內插", "\n        ", "if", " matrix_new[y, x] > ", "0", " or y_new == ", "545", ":\n            ", "continue", "\n        ", "# 要進行內插的新位置", "\n        ", "####x_new, y_new = int(x+2.5), int(y+2.5)", "\n        ", "y_new", " = y_new + ", "5", "\n        ", "# 取出內插需要用到的點", "\n        ", "pts", " =", " [(x0, y0) for x0 in x_range for y0 in y_range if matrix_new[y0, x0] > 0]", "\n        ", "# 取出內插需要用到的值", "\n        ", "vals", " =", " [matrix_new[y0, x0] for x0, y0 in pts]", "\n        ", "# 進行內插", "\n        ", "new_func", "(matrix_new, x_new, y_new, pts, vals)\n    ", "y_new", " = ", "0", "\n    ", "x_new", " = x_new + ", "5", "\n    ", "if", " x_new == ", "640", ":\n        ", "continue", "\n\n\n", "# 開啟檔案", "\n", "with", " open(", "\"output.txt\"", ", ", "\"w\"", ") as f:\n    ", "# 將矩陣中的每個元素寫入檔案", "\n    ", "for", " row in matrix_new:\n        ", "for", " value in row:\n            ", "f", ".write(str(value) + ", "\" \"", ")\n        ", "f", ".write(", "\"\\n\"", ")\n", "# 打印矩陣a", "\n", "#print(matrix_new)", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;入门的话不用&amp;#xff0c;想深入研究就要哦&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["想学机器学习一定得先去学线性代数这本书吗？", ["目前大一新生，有自学python基础，现在想学机器学习一定得先去学线性代数这本书吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;2&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;% 定义系数矩阵和常数向量\nA &amp;#61; [&lt;span class=\"hljs-number\"&gt;0.001&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2.000&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3.000&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;-1.000&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3.712&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4.623&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;-2.000&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1.072&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5.643&lt;/span&gt;];\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;1.000&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;2.000&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;3.000&lt;/span&gt;];\n\n% 顺序消元法求解\nx1 &amp;#61; A\\b;\n\n% 列主元消元法求解\n[L,U,P] &amp;#61; lu(A);\ny &amp;#61; L\\(P*b);\nx2 &amp;#61; U\\y;\n\n% 输出结果并与真实解进行比较\n&lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;顺序消元法求解结果&amp;#xff1a;\\n&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(x1);\n&lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;列主元消元法求解结果&amp;#xff1a;\\n&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(x2);\n&lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;真实解&amp;#xff1a;\\n&amp;#39;&lt;/span&gt;);\nx_true &amp;#61; [&lt;span class=\"hljs-number\"&gt;-0.4904&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;-0.05104&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0.3675&lt;/span&gt;];\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(x_true);\n\n&lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;顺序消元法误差&amp;#xff1a;\\n&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(norm(x1 - x_true));\n&lt;span class=\"hljs-built_in\"&gt;fprintf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;列主元消元法误差&amp;#xff1a;\\n&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(norm(x2 - x_true));\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/724753525186136.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;4&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 定义系数矩阵&lt;/span&gt;\nA &amp;#61; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\n&lt;span class=\"hljs-comment\"&gt;% 定义右侧常数向量&lt;/span&gt;\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n\n&lt;span class=\"hljs-comment\"&gt;% 使用追赶法求解线性方程组&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(b);\nc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(A, &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\nd &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(A);\ne &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(A, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-comment\"&gt;% 前向消元&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:n\n    &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt; &amp;#61; c(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) / d(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n    d(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; d(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt; * e(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n    b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt; * b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 回代求解&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(n, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nx(n) &amp;#61; b(n) / d(n);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; (b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - e(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) * x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)) / d(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 输出解向量&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(x);\n\n\n\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/01388852518618.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;4.顺序消元法&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 定义系数矩阵和常数向量&lt;/span&gt;\nA &amp;#61; [&lt;span class=\"hljs-number\"&gt;1.1348&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.8326&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.1651&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.4017&lt;/span&gt;;\n     &lt;span class=\"hljs-number\"&gt;0.5301&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.7875&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2.5330&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.5435&lt;/span&gt;;\n     &lt;span class=\"hljs-number\"&gt;3.4129&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4.9317&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8.7643&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.3142&lt;/span&gt;;\n     &lt;span class=\"hljs-number\"&gt;1.2371&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4.9998&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10.6721&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.0147&lt;/span&gt;];\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;9.5342&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;6.3941&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;18.4231&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;16.9237&lt;/span&gt;];\n\n&lt;span class=\"hljs-comment\"&gt;% 高斯消元求解方程组&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(b);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n        &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt; &amp;#61; A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,k)/A(k,k);\n        A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n) &amp;#61; A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n) - &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt;*A(k,k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n);\n        b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt;*b(k);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 回代求解方程组&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(n,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nx(n) &amp;#61; b(n)/A(n,n);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; (b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n)*x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n))/A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 输出结果&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;顺序消元法结果&amp;#xff1a;&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(x);\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/878303625186110.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;列主元消元法&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;% 定义系数矩阵和常数向量&lt;/span&gt;\nA &amp;#61; [&lt;span class=\"hljs-number\"&gt;1.1348&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.8326&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.1651&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3.4017&lt;/span&gt;;\n     &lt;span class=\"hljs-number\"&gt;0.5301&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.7875&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2.5330&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.5435&lt;/span&gt;;\n     &lt;span class=\"hljs-number\"&gt;3.4129&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4.9317&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8.7643&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.3142&lt;/span&gt;;\n     &lt;span class=\"hljs-number\"&gt;1.2371&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4.9998&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10.6721&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.0147&lt;/span&gt;];\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;9.5342&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;6.3941&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;18.4231&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;16.9237&lt;/span&gt;];\n\n&lt;span class=\"hljs-comment\"&gt;% 列主元消元求解方程组&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(b);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;\n    [~,maxidx] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(A(k:n,k)));  &lt;span class=\"hljs-comment\"&gt;% 找到当前列中绝对值最大的元素所在行&lt;/span&gt;\n    maxidx &amp;#61; maxidx &amp;#43; k - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; A(maxidx,k) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;   &lt;span class=\"hljs-comment\"&gt;% 避免主元为0的情况&lt;/span&gt;\n        error(&lt;span class=\"hljs-string\"&gt;&amp;#39;矩阵不可逆&amp;#39;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 交换当前行和主元所在行&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; maxidx ~&amp;#61; k\n        A([k,maxidx],k:n) &amp;#61; A([maxidx,k],k:n);\n        b([k,maxidx]) &amp;#61; b([maxidx,k]);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 消元&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n        &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt; &amp;#61; A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,k)/A(k,k);\n        A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n) &amp;#61; A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n) - &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt;*A(k,k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n);\n        b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - &lt;span class=\"hljs-built_in\"&gt;factor&lt;/span&gt;*b(k);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 回代求解方程组&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(n,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nx(n) &amp;#61; b(n)/A(n,n);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; (b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n)*x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n))/A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 输出结果&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;列主元消元法结果&amp;#xff1a;&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(x);\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/04828362518618.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB 解线性方程组", ["\n", "按题目要求用顺序消元法，列主元消元法和追赶法求方程组的解，想求个思路和全过程代码。不知道为什么我写的代码MATLAB上算不出结果，想看看正确的代码。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;判断离群点的方法不一定是只看3倍标准差&amp;#xff0c;还可以通过画散点图、Cook距离、DFFITS等方法进行识别。在进行离群点处理时&amp;#xff0c;建议先进行散点图观察&amp;#xff0c;结合领域知识和实际情况进行判断&amp;#xff0c;然后再采取相应的处理方式&amp;#xff0c;比如删除、替换等。但是需要注意的是&amp;#xff0c;过度地删除离群点可能会导致信息的丢失和模型的失真&amp;#xff0c;因此需要在删除前进行谨慎的分析和判断。另外&amp;#xff0c;删除离群点后重新进行回归分析&amp;#xff0c;R方减小的情况是可能会出现的&amp;#xff0c;因为离群点具有一定的影响力&amp;#xff0c;但是如果删除离群点能够提高模型的预测精度和稳定性&amp;#xff0c;那么可以考虑采取删除的方式。同时&amp;#xff0c;需要注意的是&amp;#xff0c;重新进行回归分析时&amp;#xff0c;可能会出现新的离群点&amp;#xff0c;因此需要进行迭代处理&amp;#xff0c;直到模型达到一定的稳定性为止。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["SPSS线性回归离群值处理", ["问题", "\n", "SPSS线性回归离群值处理——删除离群点后重新回归，R方减小了且又出现离群点", "\n", "过程", "\n", "为了研究因变量的不同影响因素，在运用SPSS开展多元线性回归的过程中，通过离群点（Outlier）、高杠杆点（High Leverage Point）和强影响点（Influential Point）三种方式识别异常点，其中杠杆值均低于0.2，库克距离均小于1因此并未出现高杠杆点和强影响点，但是出现了若干的离群点，即大于3倍标准差。", "\n", "请问", "\n", "想要请问在判断离群点是一定是看3倍标准差吗？", "出现离群点的情况下是需要不停地删除，直到回归结果没有离群点出现嘛？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;题主的代码修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt; &lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n, m, b[&lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;], a, i;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;, &amp;amp;n, &amp;amp;m);\n    i &amp;#61; n;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i--) {  &lt;span class=\"hljs-regexp\"&gt;//n&lt;/span&gt; 需要保持不变&amp;#xff0c;后面还要用到\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;b[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (m--) {\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a);  &lt;span class=\"hljs-regexp\"&gt;//s&lt;/span&gt;canf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a); a 前面缺了 ‘&amp;amp;’ 符\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(m !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ? &lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt; : &lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, b[n - a]); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性结构询问学号问题", ["问题遇到的现象和发生背景 题目描述", "\n", "有 n(n \\le 2 \\times 10^6)n(n≤2×10", "6", " ) 名同学陆陆续续进入教室。我们知道每名同学的学号（在 11 到 10^910", "9", "  之间），按进教室的顺序给出。上课了，Teacher想知道第 ii 个进入教室的同学的学号是什么（最先进入教室的同学 i=1i=1），询问次数不超过 10^510", "5", "  次。", "\n", "输入格式", "第一行 22 个整数 nn 和 mm，表示学生个数和询问次数。", "\n", "第二行 nn 个整数，表示按顺序进入教室的学号。", "\n", "第三行 mm 个整数，表示询问第几个进入教室的同学。", "\n", "输出格式", "输出 mm 个整数表示答案，用换行隔开。", "\n", "输入输出样例", "输入 #1复制", "10 3", "1 9 2 60 8 17 11 4 5 14", "1 5 9", "输出 #1复制", "1", "8", "5", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", " ", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " n,m;\n    ", "int", " a;\n    ", "scanf", "(", "\"%d %d\"", ",&n,&m);\n    ", "double", " b[n];\n    ", "while", "(n--){\n        ", "scanf", "(", "\"%lf\"", ",&b[n]);\n    }\n    ", "while", "(m--){", "scanf", "(", "\"%d\"", ",a);\n    ", "printf", "(m!=", "0", "?", "\"%.0lf\\n\"", ":", "\"%.0lf\"", ",b[n-a+", "1", "]);\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容 输入样例但是没有输出结果", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果 不知道哪里出错了 请求指导"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/jhshanvip/article/details/105077191\" id=\"textarea_1631070610151_1631070794942_0\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  \n    &lt;span class=\"md_link_title\"&gt;3.2 矩阵乘积的秩_jhshanvip的博客-CSDN博客_矩阵乘积的秩&lt;/span&gt;\n    \n  &lt;span class=\"md_link_desc\" style=\"\"&gt;矩阵乘积的秩矩阵乘积 ABABAB 的秩和矩阵 A,BA,BA,B 的秩有什么关系呢&amp;#xff1f;首先直观上说明。线性映射 Ax&amp;#61;yA\\mathbf{x}&amp;#61;\\mathbf{y}Ax&amp;#61;y &amp;#xff0c;当矩阵 AAA 是列满秩矩阵时&amp;#xff0c;即无关组时&amp;#xff0c;映射是单射&amp;#xff0c;所以定义域内一个向量 x\\mathbf{x}x 对应值域内一个向量 y\\mathbf{y}y &amp;#xff0c;值域内一个向量 y\\mathbf{y}y 也对应定义域内一个向量 x...&lt;/span&gt;\n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/jhshanvip/article/details/105077191&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;br /&gt;最极端的情况,A&amp;#61;np.zeros(),也就是你乘了一个0过去,计算出的AB秩为0,小于rank(B)&lt;br /&gt;就是说矩阵相乘后矩阵的秩不会增加,视A的情况秩可能减少&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数，linear algebra", ["Suppose column j of B is a combination of previous columns of B. Show that column j of AB is the same combination of previous columns of AB. Then AB can't have new pivot columns, so rank(AB) <= rank(B).", "\n", "我能理解rank(AB) = rank(B),  什么时候rank(AB)会小于rank(B)啊？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果v0和[s]是标量&amp;#xff0c;上面的公式可写为f(Km, Vmax)&amp;#61;0的形式。假定km在区间[a,b]内方程有解&amp;#xff0c;可在该区间内均匀取n点&amp;#xff0c;计算一元方程得到n个Vmax的解。下面的代码&amp;#xff0c;演示了非线性方程的解法。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; scipy &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; optimize\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; f(x):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;/(x*5) &amp;#43; 1/&lt;/span&gt;x - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n\nresult &amp;#61; optimize.root_scalar(f, bracket&amp;#61;[-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\nresult.root\n-&lt;span class=\"hljs-number\"&gt;1.2566741077549764&lt;/span&gt;e-&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python自定义非线性方程", ["请问我想利用python拟合上述公式求解Vmax和Km,其中V0，[S]是一些已知的参数，请问应该怎么用python来实现呢，谢谢。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该测试执行的回归&amp;#xff0c;error是表明无法执行回归&amp;#xff0c;因为回归矩阵是不可逆的。由于你的模型只有一个回归量&amp;#xff0c;加上常数项&amp;#xff0c;通过使用测试函数参数的默认None值skip&amp;#61;是不行的&amp;#xff0c;所以&amp;#xff0c;正如消息指示的那样&amp;#xff0c;你需要指定足够大的skip&amp;#61;参数值&amp;#xff08;即&amp;#xff0c;用于测试的初始模型的观测值数量&amp;#xff09;以确保回归矩阵有足够的秩&amp;#xff08;它需要至少为与矩阵中的列数一样大&amp;#xff09;。&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/74084265/statsmodels-linear-harveu-collier-test-valueerror\" id=\"textarea_1666020273485_1666020578263_0\"&gt;https://stackoverflow.com/questions/74084265/statsmodels-linear-harveu-collier-test-valueerror&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["linear_harvey_collier - 检验线性回归假设", ["linear_harvey_collier检验回归模型是否线性模型时报错", "\n", "\n", "QGDP", " = df[", "'QUARTERLY REAL GDP'", "]\n", "UNRATE", " = df[", "'UNRATE(%)'", "]\n", "ols_1", " = smf.ols(formula=", "'QGDP ~ UNRATE'", ", data = df)\n", "ols_fit", " = ols_1.fit()\n", "test", " = sms.linear_harvey_collier(ols_fit)\n\n", "\n", "ValueError: \"The initial regressor matrix, x[:skip], issingular. You must use a value of skip large enough to ensure that the first OLS estimator is well-defined.", "\n", "无法理解报错原因，网上也没找到相关资料"]], "Tag": "算法设计"}
{"Answer": "线性表包括链表和数组，数组就不说了，链表的话，相同的方法可以建立多个，但这是跟实际需求有关的，区分就用链表名呗，。。", "Konwledge_Point": "线性规划简介", "Question": ["线性表建立链表c++i的问题", ["线性表定义的链表怎么建立多个，建立多个之后怎么区分啊，他们的头节点都是一样的，好复杂啊！"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;关于该问题&amp;#xff0c;我找了一篇非常好的博客&amp;#xff0c;你可以看看是否有帮助&amp;#xff0c;链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_51394947/article/details/119386667?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;matlab 简单函数拟合&amp;#xff08;全&amp;#xff09;&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;您还可以看一下 &lt;a href=\"https://blog.csdn.net/tgzssir\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;苏金明&lt;/font&gt;&lt;/a&gt;老师的&lt;a href=\"https://edu.csdn.net/course/detail/24732?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;MATLAB数据拟合&lt;/font&gt;&lt;/a&gt;课程中的 &lt;a href=\"https://edu.csdn.net/learn/24732/279786?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;使用拟合工具进行数据拟合-曲线拟合&lt;/font&gt;&lt;/a&gt;小节, 巩固相关知识点&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab怎么做非线性拟合", ["要做一个新冠累计确诊人数的拟合，从WHO上下了数据，然后基于2020年1月3日起至2020年6月3日的数据做预测，共154行4列的，4列依次是新增确诊、累计确诊、新增死亡、累计死亡", "\n", "\n", "function", " ", "y", " = ", "quanguo", "(b, t)", "\n    ", "global", " y0 ", "%b(1):固有增长率;b(2):最大值;b(3):初始值  ", "\n    y = b(", "2", ") ./ (", "1", " + b(", "2", ") / b(", "3", ") - ", "1", ") .* ", "exp", "(-b(", "1", ") .* t); \n", "end", "\n以上为函数\n以下为命令\na = xlsread(", "\"quanguo\"", ");\n", "plot", "(a, ", "\"*-\"", ");\ny = a(:, ", "2", ");\nt = ", "1", ":", "154", ";\nb = nlinfit(t, y, @quanguo, [", "0.3", ", ", "100000", ", ", "1", "]);\n错误使用 nlinfit (line ", "219", ")\nMODELFUN 必须为函数，它返回大小与 Y (", "154", "-by", "-1", ")相同的拟合值向量。您提供的模型函数返回结果 ", "1", "-by", "-154", "。\n\n大小不匹配的常见原因之一是在函数中使用矩阵运算符(*、/、^)，而不是对应的元素运算符(.*、./、.^)。\n\n", "\n", "可我提供的xls是个154行4列的矩阵啊，a读出来也是正确的", "\n", "不是很懂错在哪了，求指点一下"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;其中一个层&amp;#xff08;第 65 层&amp;#xff09;中只有一个 PSU&amp;#xff08;主要抽样单位&amp;#xff09;&amp;#xff0c;这导致调查设计出现问题。&lt;br /&gt;你参考一下这个&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;# Filter out Stratum 65&lt;/span&gt;\nd_rec_filtered &amp;lt;- d_rec[d_rec$sdmvstra !&amp;#61; &lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;, ]\n\n&lt;span class=\"hljs-comment\"&gt;# Create survey design object with filtered data&lt;/span&gt;\nnhc &amp;lt;- svydesign(&lt;span class=\"hljs-attr\"&gt;data&amp;#61;d_rec_filtered,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;ids&amp;#61;~sdmvpsu,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;strata&lt;/span&gt; &amp;#61; ~sdmvstra, \n                 &lt;span class=\"hljs-attr\"&gt;weights&amp;#61;~nhs_wt,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;nest&lt;/span&gt; &amp;#61; TRUE)\n\n&lt;span class=\"hljs-comment\"&gt;# Fit the model with the filtered survey design&lt;/span&gt;\nfit1 &amp;lt;- svyglm(&lt;span class=\"hljs-keyword\"&gt;rec&lt;/span&gt;.n~sex&amp;#43;age&amp;#43;eth&amp;#43;edu&amp;#43;inc&amp;#43;hbp&amp;#43;dm&amp;#43;htc,\n               &lt;span class=\"hljs-attr\"&gt;design&lt;/span&gt; &amp;#61; nhc,&lt;span class=\"hljs-attr\"&gt;family&lt;/span&gt; &amp;#61; quasibinomial())\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;从 svyglm 函数调用中删除了数据参数&amp;#xff0c;因为数据已经在调查设计对象中指定。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["【R语言】加权线性回归模型，PSU问题", ["请教各位R语言好手，请问在做加权线性回归模型的时候出现以下错误要如何解决呢？", "\n", "d_rec$", "rec", ".n <- as.numeric(", "with", "(d_rec, ifelse(", "rec", " == ", "\"aaa\"", ", ", "1", ", ", "0", ")))\nnhc <- svydesign(", "data=d_rec,", " ", "ids=~sdmvpsu,", " ", "strata", " = ~sdmvstra, \n                 ", "weights=~nhs_wt,", " ", "nest", " = TRUE)\nfit1 <- svyglm(", "rec", ".n~sex+age+eth+edu+inc+hbp+dm+htc,\n               ", "design", " = nhc,", "family", " = quasibinomial(),", "data", " = d_rec)\n\nError ", "in", " onestrat(x[index, , ", "drop", " = FALSE], clusters[index], nPSU[index][", "1", "],  : \n  Stratum (", "65", ") has only one PSU at stage ", "1", "\n", "\n", "昨晚同样代码就可以运行，今天跑就不行了[捂脸]"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以贴一下代码看看&lt;/p&gt;\n&lt;p&gt;不能新写回答&amp;#xff0c;补充&amp;#xff1a;&lt;br /&gt;左、中、右对应的三个LinearLayout需要用一个父级LinearLayout包裹&amp;#xff0c;并设置orientation属性为horitantal&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["利用andriod studio编写线性布局", ["\n", "图一是我需要写出来的样子，图二是我写出来的样子，我不能理解为什么这个不能全部显示出来😭"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/mr_jj_lian/article/details/6684399", "Konwledge_Point": "线性规划简介", "Question": [" Minimize The Difference              ", ["Problem Description", "\nRecently, Kiki are asked to arrange a competition. Before the competition, everyone have an expectation of the ranking. To make all the players happy , Kiki wants to minimize the sum of all the players’ difference. We define the difference of a player as |ai-bi|, ai stands for one’s expected ranking ,and bi stands for one’s final ranking.", "\n\n", "Input", "\nThere are several test cases.", "\nEach case begins with an integer n ,(n<= 100)stands for the number of players in this competition.", "\nThen follows n lines ,each line contains a string s and an integer m,(the string will contains no more than 20 characters and no space in it, 1<=m<=n) stands for the name of the player and his expected ranking.", "\n\n", "Output", "\nThe output contains one line for each data set : the minimum sum of differences Kiki can get.", "\n\n", "Sample Input", "\n7", "\na 1", "\nb 2", "\nc 2", "\nd 1", "\ne 5", "\ng 7", "\nf 7", "\n\n", "Sample Output", "\n5"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/619682762136141.png\" /&gt;&lt;/p&gt;&lt;br /&gt;笑死..稍等,我问问他有没有详细答案&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, orthogonal线性代数", ["\n", "能不能解释一下为什么4.1B(c)的答案是(1,-3,-4)?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;答案代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-Python\"&gt;import numpy as np\n\n&lt;span class=\"hljs-meta\"&gt;# 定义矩阵A&lt;/span&gt;\nA &amp;#61; np.array([[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]])\n\n&lt;span class=\"hljs-meta\"&gt;# 求逆矩阵&lt;/span&gt;\nA_inv &amp;#61; np.linalg.&lt;span class=\"hljs-built_in\"&gt;inv&lt;/span&gt;(A)\n\n&lt;span class=\"hljs-meta\"&gt;# 验证AA_inv &amp;#61; A_invA &amp;#61; I&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(np.&lt;span class=\"hljs-built_in\"&gt;dot&lt;/span&gt;(A, A_inv))\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(np.&lt;span class=\"hljs-built_in\"&gt;dot&lt;/span&gt;(A_inv, A))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出结果为&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-Python\"&gt;&lt;span class=\"hljs-string\"&gt;[[1. 0. 0.]\n [0. 1. 0.]\n [0. 0. 1.]]&lt;/span&gt;\n&lt;span class=\"hljs-string\"&gt;[[1. 0. 0.]\n [0. 1. 0.]\n [0. 0. 1.]]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;并且 $AA^{-1}&amp;#61;A^{-1}A&amp;#61;I$ 成立&amp;#xff0c;证明矩阵 $A$ 的逆矩阵计算正确。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python求解线性代数的题", ["假设有矩阵 $A=\\begin{bmatrix} 2 & 1 & 1 \\ 1 & 2 & 1 \\ 1 & 1 & 2 \\end{bmatrix}$，求矩阵 $A$ 的逆矩阵，并验证 $AA^{-1}=A^{-1}A=I$。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;scipy库和matplotlib库&amp;#xff0c;很快的&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["非线性微分方程画图像", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这俩是一样的吗&amp;#xff1f; 原式是不是不一样啊&amp;#xff0c;这里少一个换行就少一个负号&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数的一道小破题", ["\n", "夸克里第三步到第四步是怎么来的，不应该是直接提出右下角的3*3矩阵吗", "\n", "\n", "以及我的这个解答有啥问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;意思就是要计算方阵A与方阵B的乘积&amp;#xff0c;现在问题是&amp;#xff0c;当C(1,2)开始计算时&amp;#xff0c;C(1,1)是不是已经计算完毕&amp;#xff1f;&lt;br /&gt;答案是-&lt;strong&gt;没有计算完即False&lt;/strong&gt;&amp;#xff0c;因为C(1,1)是i等于1和k等于1的时候&amp;#xff0c;j循环了n次。而k是最里面的循环&lt;br /&gt;当i&amp;#61;1,j&amp;#61;1,k&amp;#61;1时&amp;#xff0c;只是计算了C(1,1)的一部分&lt;br /&gt;下一步循环时是i&amp;#61;1,j&amp;#61;1,k&amp;#61;2&amp;#xff0c;这个时候开始计算C(1,2)的一部分&amp;#xff0c;因此C(1,2)已经开始计算了&amp;#xff0c;但是C(1,1)只是计算了j&amp;#61;1&amp;#xff0c;还有j&amp;#61;2,...n没计算呢。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, MATLAB线性代数", ["\n", "以下是答案：", "\n", "\n", "我不懂matlab。看不懂题目和答案是什么意思。能不能解释一下？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/681773772236151.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, determinant线性代数", ["\n", "这道题怎么做？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/435537635136162.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, projections线性代数", ["\n", "4.2A 怎么算这个3 By 3 projection matrix P. 公式是划红线的这个", "\n", "\n", "但是在此题中，(At", "A)-1是2 by 2. A", "At是3 by 3.怎么相乘？", "\n", "答案：", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;可以使用fsolve来解决这个问题&amp;#xff0c;需要提供一个名为fun的函数&amp;#xff0c;包含非线性方程组。函数的形式应该是这样的&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; [&lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x)&lt;/span&gt;\n    % &lt;span class=\"hljs-title\"&gt;x&lt;/span&gt; 是一个向量&amp;#xff0c;包含未知变量 &lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; 和 &lt;span class=\"hljs-title\"&gt;z&lt;/span&gt; 的值\n    % &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt; 是包含方程的结果的向量&amp;#xff0c;&lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(1)&lt;/span&gt; 对应第一个方程&amp;#xff0c;&lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(2)&lt;/span&gt; 对应第二个方程&amp;#xff0c;以此类推\n\n    % 您的方程组\n    &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(1)&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;exp&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x(1)&lt;/span&gt;) - &lt;span class=\"hljs-params\"&gt;(x(3)&lt;/span&gt; ./ &lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(2)&lt;/span&gt; - 1) / &lt;span class=\"hljs-params\"&gt;(x(3)&lt;/span&gt; / 18.3 - 1);&lt;/span&gt;\n    f(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; exp(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)) - (x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) ./ x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) / (x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    f(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#61; exp(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; * x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)) - (x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) ./ x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) / (x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;47.2&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;之后需要提供一个初始猜测值&amp;#xff0c;然后调用fsolve。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;x0&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;  % 这是初始猜测值&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; fsolve(&amp;#64;fun, x0)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB 非线性三元方程求解", ["建立logistics模型时，用前三组数据解出初值，x-r，y-x0,z-xm", "exp(x)=(z./y-1)./(z/18.3-1)", "exp(2", "x)=(z./y-1)./(z/29-1)", "exp(3", "x)=(z./y-1)./(z/47.2-1)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先&amp;#xff0c;v &amp;#61; 0时&amp;#xff0c;rank&amp;#61;0&amp;#xff0c;这个不需要解释了吧。&lt;br /&gt;当v 不等于0即为实矩阵时&amp;#xff0c;M &amp;#61; v vT&lt;br /&gt;矩阵乘矩阵的转置最后得到是对称矩阵&amp;#xff1b;对称矩阵的rank就是1&lt;br /&gt;根据rank的定义&amp;#xff0c;对称矩阵nXn的rank等价1Xn矩阵的秩&lt;br /&gt;而&amp;#xff0c;m × n 矩阵的秩不大于m且不大于n的一个非负整数&amp;#xff0c;表示为 rk(A) ≤ min(m, n)&amp;#xff0c;所以rank&amp;#61;1。&lt;/p&gt;\n&lt;p&gt;望采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, transpose线性代数", ["\n", "以下是答案：", "\n", "\n", "为什么rank不能是2？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是的&amp;#xff0c;这段代码是在每个epoch结束后计算验证集的loss&amp;#xff0c;上面的for循环中实际上每个step都更新了一次w和b&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["有关线性回归代码的问题", ["所以这里是用上面优化出来的w,b，根据这些数据来计算损失函数的嘛？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;使用非线性混合效应模型来预测锂电池剩余寿命是可行的。建议使用MATLAB中的工具箱&amp;#xff0c;例如Statistics and Machine Learning Toolbox来构建和训练模型。在建模之前&amp;#xff0c;需要根据实验数据&amp;#xff0c;尤其是寿命数据来选择合适的非线性模型&amp;#xff0c;以及确定混合效应。另外&amp;#xff0c;还需要对数据进行预处理和特征工程&amp;#xff0c;以保证模型的准确性和可靠性。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#算法#的问题：利用非线性混合效应模型来预测锂电池剩余寿命预测可行吗(语言-matlab)", ["利用非线性混合效应模型来预测锂电池剩余寿命预测可行吗？能不能提点建议？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你是问怎么把下面第一个转化为第二个吗&amp;#xff1f;&lt;br /&gt;第一个&amp;#xff1a;&lt;br /&gt;1 2 3  5   0&lt;br /&gt;2 4 8 12  6&lt;br /&gt;3 6 7 13 -6&lt;br /&gt;第二个&amp;#xff1a;&lt;br /&gt;1 2 3 5 0&lt;br /&gt;0 0 2 2 6&lt;br /&gt;0 0 0 0 0&lt;br /&gt;第一行A1&amp;#xff1a;不变&lt;br /&gt;第二行A2&amp;#xff1a;A2-2A1&amp;#61;0 0 2 2 6&lt;br /&gt;第三行A3&amp;#xff1a;3A1-A3&amp;#61;0 0 2 2 6&lt;br /&gt;第二行等于第三行&amp;#xff0c;所以第三行可以去掉&lt;br /&gt;因此结果为&amp;#xff1a;&lt;br /&gt;1 2 3 5 0&lt;br /&gt;0 0 2 2 6&lt;br /&gt;0 0 0 0 0&lt;br /&gt;也可以写成&amp;#xff1a;&lt;br /&gt;1 2 3 5 0(A1)&lt;br /&gt;0 0 1 1 3(A2)&lt;br /&gt;0 0 0 0 0(A3)&lt;br /&gt;对第一行进行处理&amp;#xff1a;&lt;br /&gt;A1-3*A2&amp;#61;1 2 0 2 -9&lt;br /&gt;最终的结果就是&amp;#xff1a;&lt;br /&gt;1 2 0 2 -9&lt;br /&gt;0 0 1 1 3&lt;br /&gt;0 0 0 0 0 &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数的问题，linear algebra", ["Ax = b is", "x1 + 2x2 + 3x2 + 5x4 = b1", "2x1 + 4x2 + 8x3 + 12x4 = b2", "3x1 + 6x2 + 7x3 + 13x4 = b3", "Turn [A b] to [R d]: special solutions from R, particular solution from d.", "\n", "正确答案的式子的右边是[-9 3 0] 就是b1 = -9, b2 = 3, b3 = 0。能解释一下为什么吗？", "\n", "这是问题，我想问的第五题：", "\n", "\n", "\n", "这是答案：", "\n"]], "Tag": "算法设计"}
{"Answer": "```\r\n#include&lt;iostream&gt; \r\n#include&lt;cstdlib&gt; \r\nusing namespace std;\r\n\r\n#define MAX 100\r\n\r\ntemplate &lt;typename T&gt;\r\nclass Stack {\r\npublic:\r\nStack(); //构造函数\r\nbool empty() const ; //判断S是否为空栈\r\nbool full() const; //判断栈S是否为满，\r\n~Stack(); //将栈S清空\r\nint size() const; //求栈S的长度，即栈S中的元素的个数\r\nT &amp; top() const; //返回栈S的栈顶元素\r\nvoid push( const T &amp;e ); //入栈操作，将数据元素e插入栈S的当前栈顶\r\nT &amp; pop(); //出栈操作，删除栈S的栈顶元素，并返回其值\r\nprivate:\r\n// 补充\r\nT data[MAX];\r\nint cur;\r\n};\r\n\r\nStack::Stack()\r\n{\r\n\tcur = 0;\r\n}\r\n\r\nbool Stack::empty() const\r\n{\r\n\tcur = 0;\r\n}\r\n\r\nbool Stack::full() const\r\n{\r\n\treturn cur &gt;= MAX;\r\n}\r\n\r\nStack::~Stack() {}\r\n\r\nint size() const { return cur; }\r\n\r\nT &amp; Stack::top()\r\n{\r\n\tif (cur == 0) throw \"stack is empty\";\r\n\treturn data[cur - 1];\r\n}\r\n\r\nvoid Stack::push( const T &amp;e )\r\n{\r\n\tif (cur &gt;= MAX) throw \"stack is full\";\r\n\tdata[cur++] = e;\r\n}\r\n\r\nT &amp; Stack::pop()\r\n{\r\n\tif (cur == 0) throw \"stack is empty\";\r\n\treturn data[--cur];\r\n}\r\n\r\n//测试的main函数\r\nint main() {\r\nStack sc; //stack of char\r\nStack si; //Stack of int\r\nchar ch = ' ';\r\n// 不断输入字符到栈中，=结束\r\nwhile (ch != '=') {\r\ncin &gt;&gt; ch;\r\nif (ch == 'a')\r\nsc.push('A');\r\nsc.push(ch);\r\n}\r\ncout &lt;&lt; \"top=\" &lt;&lt; sc.top() &lt;&lt; \"size=\" &lt;&lt; sc.size() &lt;&lt; endl;\r\ncout &lt;&lt; \"pop \" &lt;&lt; sc.pop() &lt;&lt; endl;\r\nwhile (!sc.empty())\r\ncout &lt;&lt; sc.pop()&lt;&lt; \" \";\r\ncout &lt;&lt; endl;\r\n\r\n int x = 1;\r\n // 不断输入int到栈中，0结束\r\nwhile (x != 0) {\r\n     cin &gt;&gt; x;\r\n     if (x &gt; 10)\r\n         si.push(10000);\r\n     si.push(x);\r\n }\r\n cout &lt;&lt; \"top=\" &lt;&lt; si.top() &lt;&lt; \"size=\" &lt;&lt; si.size() &lt;&lt; endl;\r\n cout &lt;&lt; \"pop \" &lt;&lt; si.pop() &lt;&lt; endl;\r\n while (!si.empty())\r\n     cout &lt;&lt; si.pop()&lt;&lt; \"/\";\r\n cout &lt;&lt; endl;\r\n\r\n return 0;\r\n}\r\n```\r\n\r\n# 如果问题解决，请采纳下毕小宝的回答。如果还有问题，请追问", "Konwledge_Point": "线性规划简介", "Question": ["线性表及栈与队列的实现 -- 栈", ["1.问题描述：", "\n 针对线性表或栈或队列（三者任选一种逻辑结构），按要求完成类（模板）的实现，并使用提供的main函数测试程序。", "\n\n", "2.完成时有几种选择：", "\na.栈的实现。 b. 队列的实现。 c. 线性表的实现。", "\n\n", "这里是栈的实现。务必按照提供的代码为基础进行补充。", "\n\n", "template ", "\n class Stack {", "\n public:", "\nStack();     //构造函数", "\n    bool empty() const ; //判断S是否为空栈", "\n    bool full() const; //判断栈S是否为满，", "\n    ~Stack(); //将栈S清空", "\n    int size() const; //求栈S的长度，即栈S中的元素的个数", "\n    T & top() const; //返回栈S的栈顶元素", "\n    void push( const T &e ); //入栈操作，将数据元素e插入栈S的当前栈顶", "\n    T & pop(); //出栈操作，删除栈S的栈顶元素，并返回其值", "\nprivate:", "\n     // 补充", "\n};", "\n\n", "//测试的main函数", "\nint main() {", "\n     Stack sc; //stack of char", "\n     Stack si; //Stack of int", "\n     char ch = ' ';", "\n     // 不断输入字符到栈中，=结束", "\n    while (ch != '=') {", "\n         cin >> ch;", "\n         if (ch == 'a')", "\n             sc.push('A');", "\n         sc.push(ch);", "\n     }", "\n     cout << \"top=\" << sc.top() << \"size=\" << sc.size() << endl;", "\n     cout << \"pop \" << sc.pop() << endl;", "\n     while (!sc.empty())", "\n         cout << sc.pop()<< \" \";", "\n     cout << endl;", "\n\n", " int x = 1;\n // 不断输入int到栈中，0结束\nwhile (x != 0) {\n     cin >> x;\n     if (x > 10)\n         si.push(10000);\n     si.push(x);\n }\n cout << \"top=\" << si.top() << \"size=\" << si.size() << endl;\n cout << \"pop \" << si.pop() << endl;\n while (!si.empty())\n     cout << si.pop()<< \"/\";\n cout << endl;\n\n return 0;\n", "\n\n", "}", "\n\n", "急求，用c++补充"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以尝试将 w[0] &amp;#61; bias 改为 weight[0] &amp;#61; bias。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于Python#线性回归#中遇到的syntax error问题，如何解决？", ["本人在实践《用线性回归预测网店销售额》的‘初始化权重训练机器的环节’中中遇到问题：syntax error ：can' assign to function call，代码如下：", "<< iterations = 300 ;", "<< alpha = 0.15 ;", "<<  weight = np.array( [ 0.5,1,1,1] ) , w[0] = bias", "<<print ('当前损失:' ,loss_function(X_train, y_train ,weight) )", "结果输出：syntax error ：can' assign to function call,问题出在第三行代码。", "望高人指点江山，非常感谢！"]], "Tag": "算法设计"}
{"Answer": "你看错了吧，是不是说法有区别，你给个链接，开关灯操作只需要对应的位异或1就行.\r\n你是说获取某一位的get函数么，因为是从右往左数第i位，所以往右移i位肯定到了个位，这样再&amp;1就是结果了。\r\n```\r\nint GetBit(char c, int i)\r\n{\r\n    return (c &gt;&gt; i) &amp; 1;\r\n}\r\n```", "Konwledge_Point": "线性规划简介", "Question": ["关于熄灯问题的一个疑问", ["老师上课问的问题：熄灯问题常用的方法是位运算，位运算是从后向前数第 i 位，讨论解题思路时是从前向后第 i位，为什么可以计算正确？", "\n是网课，演示用的代码就是这个（好像连文案都是一样的）", "\n[(", "https://blog.csdn.net/qq_41480330/article/details/82561840", " \"\")]"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;最后一步按列展开&amp;#xff0c;应该是 a11*A1&amp;#xff0c;这里你只出现了 A11&amp;#xff0c;所以还要乘上 a11&amp;#xff0c;然后就能得到3 &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数关于按列展开问题", ["为什么按列展开得到的答案是-3，和用对角线法则算出来的不一样？书上只写了按行展开，不是很明白如何按列展开，求解释"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为你最后一行有个break  只会运行一次  i就是0&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于线性回归的数据集遍历", ["\n\n", "自己设了个小数据集，", "\nfeatures为[1,2],[3,4],[5,6],[7,8],[9,10],[11,12]", "\nlables为[9,19,29,39,49,59]", "\n\n", "print(i)还是永恒为0，但是 j 会一直变化 ( 甚至会出现 j 为[5,2]这种情况，不知道为什么min( i+batch_size,num_examples )会比 i 小", "\n\n", " ", "\n\n", "而且i不是应该遍历嘛，应该从0到2到4，但是也一直是0", "\n\n", "初学者想这个问题已经好几天了，拜托大神，感激不尽"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;结果的回归系数是两个&amp;#xff0c;第一个你仔细看其实是乘以后面两个数据的意思&amp;#xff0c;也就是说&lt;br /&gt;得到的回归系数是&lt;code class=\"language-javascript\"&gt;0.2902*10^(-4)&lt;/code&gt;和&lt;code class=\"language-javascript\"&gt;0.0182*10^(-4)&lt;/code&gt;&amp;#xff0c;第一个数是要乘以后面两个数的&lt;br /&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab在线性回归中的疑问", ["回归系数为什么是3个，第一个为什么会那么小，是可以忽略了吗？第一个为什么出来的，哪一位大佬有兴趣帮忙，求大神解惑"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;use web workers, it like running your code in a seprate thread\n&lt;a href=\"http://www.html5rocks.com/en/tutorials/workers/basics/\" rel=\"nofollow\"&gt;http://www.html5rocks.com/en/tutorials/workers/basics/&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["javascript的线性代数[关闭]", ["\n\n", "I am doing a couple of heavy linear algebra computations in my javascript code which results in blocking the browser. I was wondering what is the best way to handle heavy mathematical computations in a web application?", "\n\n", "I am using php on serverside. My question is should I use linear algebra libraries in php or is there a way I can use MATLAB in my web application? Any other suggestions to handle this?", "\n    "]], "Tag": "算法设计"}
{"Answer": "方程中的变量跟 Java 的变量是一样的，需要先对方程进行转换为 x 为 y 的一个表达式，然后就可以用变量直接得到计算结果了。", "Konwledge_Point": "线性规划简介", "Question": ["高分悬赏：Java语言输入一个包含xy的方程，再输入一个y的值，怎么计算对应的x", ["高分悬赏：Java语言输入一个包含xy的方程，再输入一个y的值，怎么计算对应的x"]], "Tag": "算法设计"}
{"Answer": "展开成傅里叶级数，高数的内容", "Konwledge_Point": "线性规划简介", "Question": ["分段函数的单一函数数学近似", ["一个周期连续的分段函数，怎么用一个周期的单一函数逼近？有没有什么理论之类的~表示数学太渣啊"]], "Tag": "算法设计"}
{"Answer": "和你的item布局文件有关系。把item布局贴一下。\r\n前面数字列应该设置成固定宽度。身高和体重也设置成固定宽度，顶多也就3为数字。", "Konwledge_Point": "线性规划简介", "Question": ["listview里的textviw文本错位", ["\n如图所示:一开始布局没乱,但是输入数据后就会发生错误,我想实现的是,输入的新数据不会影响到其他数据的位置.该怎么解决?", "\n部分xml", "\n        android:id=\"@+id/list_view\"  ", "\n        android:layout_width=\"fill_parent\"  ", "\n        android:layout_height=\"fill_parent\"  ", "\n        android:scrollingCache=\"true\"  ", "\n        android:cacheColorHint=\"#00000000\"  ", "\n        android:fastScrollEnabled=\"true\" ", "\n        android:focusable=\"true\"  ", "\n        android:dividerHeight=\"1dip\"   ", "\n        />", "\n                item------", "\n                <?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n     xmlns:android=\"http://schemas.android.com/apk/res/android\"  ", "\n     android:layout_width=\"fill_parent\"  ", "\n     android:layout_height=\"wrap_content\">", "\n\n", " <TextView\n    android:id=\"@+id/text_id\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:textSize=\"20sp\"         \n    android:gravity=\"center\"\n    android:text=\"@string/number\" />\n\n<TextView\n    android:id=\"@+id/text_name\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:gravity=\"center\"\n    android:textSize=\"20sp\"         \n\n    android:text=\"@string/name\" />\n\n<TextView\n    android:id=\"@+id/text_height\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:textSize=\"20sp\"         \n    android:gravity=\"center\"      \n    android:text=\"@string/height\" />\n\n<TextView\n    android:id=\"@+id/text_weight\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:textSize=\"20sp\"         \n    android:gravity=\"center\"       \n    android:text=\"@string/weight\" />\n </LinearLayout>\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;A recursive function might be of help. It could be placed in a helper file, and then you could call it from the view like &lt;code&gt;printMenu($menu);&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;UPDATE WITH EXAMPLE:&lt;/strong&gt;\nIf you need to exclude the first element in your array, as it seems that you want to identify it as a parent, you could do something like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;HELPER:&lt;/strong&gt; (for example &lt;code&gt;menu_helper.php&lt;/code&gt; put in folder helper)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function printMenu($a) {\n\n  if (!is_array($a)) {\n    return;\n  } \n\n  foreach($a as $m) {         \n      if($m['parent'] &amp;gt; 0){\n          echo '&amp;lt;li&amp;gt;&amp;lt;a tabindex=\"-1\" href=\"#\"&amp;gt;'. $m['name'] .'&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;';             \n      }\n\n      if(is_array($m['child'])){\n        printMenu($m['child']);\n      }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;VIEW:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;div class=\"dropdown\"&amp;gt;\n&amp;lt;button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"&amp;gt;Menu&amp;lt;span class=\"caret\"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;\n    &amp;lt;ul class=\"dropdown-menu\"&amp;gt;\n        &amp;lt;?php if($has_children){ ?&amp;gt;\n            &amp;lt;li class=\"dropdown-submenu\"&amp;gt;\n                &amp;lt;a class=\"test\" href=\"#\"&amp;gt;&amp;lt;?php echo $menu[0]['name']?&amp;gt; &amp;lt;span class=\"caret\"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;\n                &amp;lt;ul class=\"dropdown-menu\"&amp;gt;                      \n                    &amp;lt;?php printMenu($menu); ?&amp;gt;\n                &amp;lt;/ul&amp;gt;\n            &amp;lt;/li&amp;gt;\n        &amp;lt;?php } else {?&amp;gt;\n            &amp;lt;li&amp;gt;&amp;lt;a tabindex=\"-1\" href=\"#\"&amp;gt;&amp;lt;?php echo $menu[0]['name']?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;\n        &amp;lt;?php } ?&amp;gt;\n    &amp;lt;/ul&amp;gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;CONTROLLER&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function index()\n{\n    $this-&amp;gt;load-&amp;gt;helper('menu'); // OUR NEW HELPER FILE\n    $this-&amp;gt;load-&amp;gt;model('Test_model');\n    $data['menu'] = $this-&amp;gt;Test_model-&amp;gt;getCategoriesByParentId(0);\n    $data['has_children'] = 1; //REPLACE WITH A QUERY OR FUNCTION TO CHECK IF CHILDREN EXISTS IN YOU MENU\n    $this-&amp;gt;load-&amp;gt;view('dropdown', $data);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The example above only applies to arrays with one single parent. If you need multiple parents you have to call the function for each parent. THis is not optimal, an if you need more advanced handling of menus with multiple depths in Codeigniter you could check the library in this project: &lt;a href=\"https://github.com/edomaru/codeigniter_multilevel_menu\" rel=\"nofollow noreferrer\"&gt;https://github.com/edomaru/codeigniter_multilevel_menu&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The library is not updated for a while and I don't know if its compatible with CI 3, but maybe you could get some ideas of how to go along by checking the source code. They even have a Bootstrap 3 example there.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Parent  -  Child  -  Codeigniter视图中的Grand Child类别标记", ["\n\n", "I have a test Database Table by the name of autos like following", "\n\n", "\n\n", "I am using a recursive function in my model to get the data in array and dumped it. It looks perfect like following", "\n\n", "Array\n(\n[menu] => Array\n    (\n        [0] => Array\n            (\n                [id] => 1\n                [name] => Automobiles\n                [parent] => 0\n                [child] => Array\n                    (\n                        [0] => Array\n                            (\n                                [id] => 2\n                                [name] => Honda\n                                [parent] => 1\n                                [child] => Array\n                                    (\n                                        [0] => Array\n                                            (\n                                                [id] => 3\n                                                [name] => Cars\n                                                [parent] => 2\n                                                [child] => Array\n                                                    (\n                                                        [0] => Array\n                                                            (\n                                                                [id] => 4\n                                                                [name] => Civic\n                                                                [parent] => 3\n                                                                [child] => Array\n                                                                    (\n                                                                        [0] => Array\n                                                                            (\n                                                                                [id] => 5\n                                                                                [name] => Prosmetic\n                                                                                [parent] => 4\n                                                                            )\n\n                                                                    )\n\n                                                            )\n\n                                                    )\n\n                                            )\n\n                                    )\n\n                            )\n", "\n\n", "In my view I am creating a standard bootstrap ", "multi-level dropdown", " but I am not getting all the child menus", "\n\n", "\n\n", "Problem : I am not getting all the child", "\n\n", "I believe I have found the reason which is in my view code . Following is the code snippet which renders the drop-down", "\n\n", "<div class=\"dropdown\">\n<button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">Menu<span class=\"caret\"></span></button>\n    <ul class=\"dropdown-menu\">\n        <?php for($i=0;$i<count($menu);$i++){?>\n            <?php if(!empty($menu[$i]['child'])){?>\n                <li class=\"dropdown-submenu\">\n                    <a class=\"test\" href=\"#\"><?php echo $menu[$i]['name']?> <span class=\"caret\"></span></a>\n                    <ul class=\"dropdown-menu\">\n                        <?php for($j=0;$j<count($menu[$i]['child']);$j++){?>\n                            <li><a href=\"#\"><?php echo $menu[$i]['child'][$j]['name']?></a></li>\n                        <?php }?>\n                    </ul>\n                </li>\n            <?php }else{?>\n                <li><a tabindex=\"-1\" href=\"#\"><?php echo $menu[$i]['name']?></a></li>\n        <?php }}?>\n    </ul>\n</div>\n", "\n\n", "I am only able to get First level child because I am only checking for the first level child. How can I do it repeatedly (recursively) in the view. I can't just keep checking for sub-child of a child and so on.. There has to be a way. Can anyone point me to the right direction please?", "\n\n", "EDIT: My Model", "\n\n", "function getCategoriesByParentId($category_id) {\n    $data = $this->db->select('*')->from('autos')->WHERE('parent',$category_id)->get()->result_array();\n    for($i=0;$i<count($data);$i++)\n    {\n        if($this->getCategoriesByParentId($data[$i]['id']))\n        {\n            $data[$i]['child']=$this->getCategoriesByParentId($data[$i]['id']);\n        }\n    }\n    return $data;\n}\n", "\n\n", "My Controller", " ", "\n\n", "public function index()\n{\n    $this->load->model('Test_model');\n    $data['menu']=$this->Test_model->getCategoriesByParentId(0);\n    //echo '<pre>';print_r(($data));echo '</pre>';exit;\n\n    $data['title']='testing';\n    $this->load->view('head',$data);\n    $this->load->view('dropdown');\n}\n", "\n\n", "I inserted some more categories and subcategories. Now the Menu looks like this ", "\n\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;代码供参考&lt;br /&gt;&lt;strong&gt;四阶切比雪夫&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 切比雪夫级数逼近&lt;/span&gt;\nT0 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x));&lt;span class=\"hljs-comment\"&gt;%切比雪夫多项式&lt;/span&gt;\nT1 &amp;#61; &amp;#64;(x) x;\nT2 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nT3 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x;\nT4 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nT &amp;#61; {T0, T1, T2, T3, T4};\nA &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\nB1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nB2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nf1 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nf2 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n    B1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f1(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    B2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f2(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n        A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;}(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取系数矩阵&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nc1 &amp;#61; A\\B1;\nc2 &amp;#61; A\\B2;\ny1 &amp;#61; &amp;#64;(x) c1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\ny2 &amp;#61; &amp;#64;(x) c2(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\nycos &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nycosh &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\nycos_fit &amp;#61; y1(x);\nycosh_fit &amp;#61; y2(x);\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos,&lt;span class=\"hljs-string\"&gt;&amp;#39;r-&amp;#39;&lt;/span&gt;, x, ycosh, &lt;span class=\"hljs-string\"&gt;&amp;#39;b-&amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on;\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos_fit,&lt;span class=\"hljs-string\"&gt;&amp;#39;-.&amp;#39;&lt;/span&gt;, x, ycosh_fit, &lt;span class=\"hljs-string\"&gt;&amp;#39;g--&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;legend&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)四阶切比雪夫逼近&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)四阶切比雪夫逼近&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/599280755436140.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;四次多项式逼近&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 四次多项式&lt;/span&gt;\nT0 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x));&lt;span class=\"hljs-comment\"&gt;%基函数&lt;/span&gt;\nT1 &amp;#61; &amp;#64;(x) x;\nT2 &amp;#61; &amp;#64;(x) x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nT3 &amp;#61; &amp;#64;(x) x.^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\nT4 &amp;#61; &amp;#64;(x) x.^&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\nT &amp;#61; {T0, T1, T2, T3, T4};\nA &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\nB1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nB2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nf1 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nf2 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n    B1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f1(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    B2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f2(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n        A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;}(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取系数矩阵&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nc1 &amp;#61; A\\B1;\nc2 &amp;#61; A\\B2;\ny1 &amp;#61; &amp;#64;(x) c1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\ny2 &amp;#61; &amp;#64;(x) c2(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\nycos &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nycosh &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\nycos_fit &amp;#61; y1(x);\nycosh_fit &amp;#61; y2(x);\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos,&lt;span class=\"hljs-string\"&gt;&amp;#39;r-&amp;#39;&lt;/span&gt;, x, ycosh, &lt;span class=\"hljs-string\"&gt;&amp;#39;b-&amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on;\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos_fit,&lt;span class=\"hljs-string\"&gt;&amp;#39;-.&amp;#39;&lt;/span&gt;, x, ycosh_fit, &lt;span class=\"hljs-string\"&gt;&amp;#39;g--&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;legend&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)四次多项式逼近&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)四次多项式逼近&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;逼近效果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/996141755436112.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;可见两者在四阶的时候&amp;#xff0c;都和原函数十分贴合&lt;br /&gt;有帮助还望答主点个右上角采纳支持一下&amp;#xff0c;答题不易&amp;#xff0c;十分感谢&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数据分析的编程问题，4阶chebyshev级数、最佳平方逼近", ["求函数 y=cosx 及函数y=cosh x  在区间[-1,1] 的4阶chebyshev级数以及4次多项式最佳平方逼近, 其中积分近似计算可以使用matlab命令quad及相关命令"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&lt;br /&gt;a和m互质&amp;#xff0c;即它们的最大公约数为1&amp;#xff1b;&lt;br /&gt;c与m无公因数&amp;#xff0c;即它们的最大公约数为1&amp;#xff1b;&lt;br /&gt;a-1能够被m的所有质因子整除&amp;#xff1b;&lt;br /&gt;如果m是4的倍数&amp;#xff0c;则a-1也必须是4的倍数。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; &lt;span class=\"hljs-number\"&gt;945&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 模数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// a值&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// c值&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max_period &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 最大周期&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) { &lt;span class=\"hljs-comment\"&gt;// 遍历a值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;// 判断是否满足条件3和4&lt;/span&gt;\n            a &amp;#61; i;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) { &lt;span class=\"hljs-comment\"&gt;// 遍历c值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m % i !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;// 判断是否满足条件2&lt;/span&gt;\n            c &amp;#61; i;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 初始值&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; period &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 周期&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; { &lt;span class=\"hljs-comment\"&gt;// 计算随机数序列的周期&lt;/span&gt;\n        x &amp;#61; (a * x &amp;#43; c) % m;\n        period&amp;#43;&amp;#43;;\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (x !&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n\n    max_period &amp;#61; m - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 最大周期为m-1&lt;/span&gt;\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#61;%d, c&amp;#61;%d, max period&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, a, c, max_period);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["已知线性同余的模数为945", ["已知线性同余的模数为945，怎么取a值和增量c值大最大周期呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/31939061613615.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, Least Squares Approximations线性代数", ["\n", "4.3A(1)怎么做的？能不能解释一下solution?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用expi函数&amp;#xff0c;参见&lt;a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.expi.html#scipy.special.expi\"&gt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.expi.html#scipy.special.expi&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何对指数积分进行非线性拟合", ["楼主想拟合一个含指数积分的表达式，得到函数中的两个参数值。", "\n\n", "但是第一个问题是不知道自己写的指数积分表达是不是正确，第二是自己调用了哈这个自定义函数，报运行时间的错误，不知道怎么回事。这是那函数表达式。", "\n\n", "\n\n", " ", "\n\n", "\n", "from scipy.special import *\nimport math\n##自定义函数 指数积分\ndef func(x,a,b):\n    c=2.5#单位时间单位长度发热丝的发热量\n    d=0.006#校准后的探针间距\n    e = 12 #热脉冲加热时间\n    #a为热传导系数\n    #b为热容量\n    return c/(4*math.pi*a*b)*(expn(1,-d*d/(4*a*(x-e)))-expn(1,-d*d/(4*a*x)))\nfunc(17,1,4.8)\n\n报错代码：\nD:\\anaconda\\lib\\site-packages\\ipykernel_launcher.py:15: RuntimeWarning: invalid value encountered in double_scalars\n  from ipykernel import kernelapp as app"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我线性代数不太行&amp;#xff0c;想不出啥技巧&amp;#xff0c;用笨方法给你接一下x吧&amp;#xff0c;y就不算了&amp;#xff0c;不好算。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/781917077136145.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, graphs and networks线性代数", ["\n", "求A^T C A x = f =(1, 0, 0, -1)", "等式左边我算出来了，但是我用ipython算是singular matrix，算不出答案。", "\n", "\n", "他给的答案是x=（5/12， 1/6, 1/6, 0)y=(1/2, 1/2, 0, 1/2, 1/2)", "到底怎么算？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;根据行列式的Leibniz公式&amp;#xff0c;把行列式项中的元素按第一个下标排序&amp;#xff0c;然后看第二个下标是否是序列{1, 2, ..., n}的一种置换&amp;#xff0c;如果是&amp;#xff0c;则符号是为正&amp;#xff0c;否则为负。&lt;br /&gt;你这道题按第一个下标排序&amp;#xff0c;得到&lt;br /&gt;a12 a24 a35 a41 a53&lt;br /&gt;第二个下标序列为{2, 4, 5, 1, 3}&amp;#xff0c;而这个序列不能通过对{1, 2, 3, 4, 5}进行置换得到&amp;#xff0c;所以符号改项的符号为负&lt;/p&gt;\n&lt;p&gt;参考&lt;br /&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Determinant#Leibniz_formula\" id=\"textarea_1642002793618_1642003864331_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://en.wikipedia.org/wiki/Determinant#Leibniz_formula&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请问这个是为什么线性代数", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;广义线性模型 (Generalized Linear Model, GLM) 是一类常用于分析二项分布数据的统计模型。当因变量是二元变量时&amp;#xff0c;可以使用 glm() 函数来拟合一个 GLM 模型&amp;#xff0c;并使用 family 参数来指定二项分布的家族。&lt;/p&gt;\n&lt;p&gt;在你的情况中&amp;#xff0c;因变量是0&amp;#xff0c;1&amp;#xff0c;自变量是分类变量&amp;#xff0c;连续变量。你使用 family&amp;#61;binomial 来指定二项分布家族&amp;#xff0c;这是正确的。&lt;/p&gt;\n&lt;p&gt;但是&amp;#xff0c;如果你在拟合模型时遇到了 &amp;#34;model is nearly unidentifiable: very large eigenvalue&amp;#34; 的警告&amp;#xff0c;这通常表明线性模型存在多重共线性问题。这可能是因为自变量之间存在高度相关性&amp;#xff0c;或者是因为自变量的线性组合导致的。&lt;/p&gt;\n&lt;p&gt;解决方法:&lt;/p&gt;\n&lt;p&gt;你可以考虑删除一些自变量&amp;#xff0c;或者使用不同的转换来降低自变量之间的相关性&lt;br /&gt;你可以尝试使用正则化技术&amp;#xff0c;比如 L1 或 L2 正则化&amp;#xff0c;来解决多重共线性问题。&lt;br /&gt;你可以尝试使用其他类型的模型&amp;#xff0c;比如决策树或随机森林等。&lt;br /&gt;需要注意的是&amp;#xff0c;在确定自变量的时候&amp;#xff0c;还需要考虑自变量的可解释性和业务场景。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["R 广义线性模型 — very large eigenvalue", ["因变量为正确率（0，1），自变量为一个分类变量，两个连续变量，family=binomial", "显示model is nearly unidentifiable: very large eigenvalue", "\n", "请问family的使用是否正确，以及如何解决警告？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;A是由5&lt;em&gt;单位矩阵-4&lt;/em&gt;全是1的矩阵组成&amp;#xff0c;前面的矩阵特征值都是5&amp;#xff08;单位矩阵对角线全是1&amp;#xff0c;特征值全是1&amp;#xff0c;所以都*5&amp;#xff09;&amp;#xff0c;后面的矩阵秩为1&amp;#xff0c;但它是4阶&amp;#xff0c;所以它只有一个特征值不为0&amp;#xff0c;又因为对角线元素之和等于矩阵特征值之和&amp;#xff0c;所以后面的矩阵特征值有一个是4&amp;#xff0c;然后A的特征值是可以由前个矩阵的特征值依次减去后面矩阵特征值得到的&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/896189608236114.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, diagonalizing a matrix线性代数", ["\n", "\"Subtract the eigenvalues 4,0,0,0 from 5,5,5,5. The eigenvalues of A are 1,5,5,5.\" 是什么原理？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;能求出来应该算对吧&amp;#xff0c;方法千万种&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数的问题 行列式的问题", ["在求行列式时 不化成上三角或下三角直接用展开式求算错吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;使用 Scikit-learn 的机器学习模型时&amp;#xff0c;通常都是先实例化一个模型对象&amp;#xff0c;然后再调用其 fit 方法来拟合模型。如果直接调用 LinearRegression().fit(x_train, y_train)&amp;#xff0c;你会得到一个 &amp;#34;This LinearRegression instance is not fitted yet. Call &amp;#39;fit&amp;#39; with appropriate arguments before using this estimator.&amp;#34; 的错误。这是因为&amp;#xff0c;在调用 fit 方法前&amp;#xff0c;模型实例没有被保存下来&amp;#xff0c;因此不能在之后使用。&lt;/p&gt;\n&lt;p&gt;而在这种情况下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;houselr &lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt; LinearRegression()\nhouselr.fit(x_train,y_train)\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;我们实例化了一个 LinearRegression 对象&amp;#xff0c;并将其保存在变量 houselr 中。然后再调用 houselr.fit(x_train, y_train) 拟合模型&amp;#xff0c;这样就不会报错。因此&amp;#xff0c;通常情况下&amp;#xff0c;在使用模型时都会先将其实例化&amp;#xff0c;再拟合。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["使用sklearn进行线性回归时遇到的问题", ["代码苦手,在使用sklearn中LinearRegression时,若直接使用", "LinearRegression().fit(x_train,y_train)", "则会报错This LinearRegression instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.  ", "\n", "若是先行将LinearRegression()定义为其他,如", "houselr = LinearRegression()", "houselr.fit(x_train,y_train)", "则不会出现该状况,这是为什么呢?"]], "Tag": "算法设计"}
{"Answer": "&lt;h4 id=\"h4_意思是&amp;#xff0c;你在使用n2前&amp;#xff0c;你没有声明它是多少呀&amp;#xff0c;凭空出现的n2&amp;#xff0c;计算机肯定识别不出来呀&amp;#xff0c;你要定义一下n2的值或者表达式哟。_1659273705499\"&gt;意思是&amp;#xff0c;你在使用N2前&amp;#xff0c;你没有声明它是多少呀&amp;#xff0c;凭空出现的N2&amp;#xff0c;计算机肯定识别不出来呀&amp;#xff0c;你要定义一下N2的值或者表达式哟。&lt;/h4&gt;\n&lt;h4 id=\"h4_觉得有帮助的话&amp;#xff0c;可以点击一下-采纳-哟&amp;#xff0c;谢谢_1659273705499\"&gt;觉得有帮助的话&amp;#xff0c;可以点击一下 &lt;strong&gt;采纳&lt;/strong&gt; 哟&amp;#xff0c;谢谢~&lt;/h4&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab求出，解多目标线性方程", ["这个多目标函数怎么都解不出来，他总是高数我未知数不知道，可是我希望他解未知数啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你给的值已经很准确了&amp;#xff0c;也是线性输出&lt;br /&gt;你可以仔细测量正确的DA的环境&amp;#xff0c;与你的环境做对比。DA的工作电压最好不变。仔细测量正确 DA 环境下的12位数值和电流的关系。要测量多组数据做对比。&lt;br /&gt;我们一般使用 DA 是需要做校准的&amp;#xff0c;每个DA板子的电阻值可能是有偏差的。一般就用一个最简单的线性方程 Y&amp;#61;K * X &amp;#43; B 反复多测量几组参数后用求出 K 和 B 的平均值。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["DA输出值不准确，输出不线性", ["用mcp4822.  12位DA输出芯片转0-20mA输出电路     程序输出直接发送数字0  万用表测量mA为0.07mA左右，程序直接输出数字4095  测量结果是20.5mA左右，输出数字2047  测量结果为10.2mA左右", "12位Da输出应该之前可以精确到0.01mA吧， 为什么 我的输出差这么多呢，da输出电路板没有问题，直接用的别人正常使用的，是不是程序还需要怎么处理呢，不是直接给输出程序赋对应的0-4095的数就可以直接输出对应的mA么？"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这有个类似的问题, 你可以参考下: &lt;a href=\"https://ask.csdn.net/questions/7739025?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7739025&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;这篇博客你也可以参考下&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_35456045/article/details/104893303?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;吴恩达机器学习之多变量线性回归&amp;#xff1a;多维特征、多变量梯度下降、梯度下降法实践之特征缩放和学习率、特征和多项式回归、正规方程及不可逆性&amp;#xff08;详细笔记&amp;#xff0c;建议收藏&amp;#xff0c;已有专栏&amp;#xff09;&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;除此之外, 这篇博客: &lt;a href=\"https://blog.csdn.net/fyc300/article/details/123799147?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;深度学习框架——学习入门&lt;/font&gt;&lt;/a&gt;中的 &lt;strong&gt;深度学习的总的框架包括以下一些内容&amp;#xff1a;就是对于我们所要的数据进行相关的预处理。包括数据格式的统一以及必要的数据转换&amp;#xff0c;同时进行训练数据集和测试数据集的划分&amp;#xff0c;选择我们所需要的模型&amp;#xff0c;设定相应的损失函数以及优化函数和对应的超参数进行相应的设置&amp;#xff0c;最后使用模型去拟合训练集数据&amp;#xff0c;在验证集和测试集上计算模型表现。&lt;/strong&gt; 部分也许能够解决你的问题, 你可以仔细阅读以下内容或跳转源博客中阅读: &lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;提示&amp;#xff1a;以下是本篇文章正文内容&amp;#xff0c;下面案例可供参考&lt;/code&gt;&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;您还可以看一下 &lt;a href=\"https://blog.csdn.net/Ant_wiki\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;李月喜&lt;/font&gt;&lt;/a&gt;老师的&lt;a href=\"https://edu.csdn.net/course/detail/36115?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;企业微信开发自建内部应用开发篇&lt;/font&gt;&lt;/a&gt;课程中的 &lt;a href=\"https://edu.csdn.net/learn/36115/548496?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;开发文档如何阅读,如何寻求帮助,如何找到同行&lt;/font&gt;&lt;/a&gt;小节, 巩固相关知识点&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划简介", "Question": ["训练集，线性回归，截距，斜率", ["1、装载数据", "''' 数据集说明：x特征变量只有一个分量；样本个数为100个'''", "2、划分训练集与测试集", "3、用线性回归模型来实例化，在训练集上拟合数据，从而学习出参数w和b", "4、输出参数学习的结果", "5、计算并输出训练集和测试集上的精度", "6、绘制数据集的二维平面图（数据点用红色标识），并根据学习到的参数（即斜率与截距），画出回归直线（用蓝色画线）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;行列式求解两种方法&amp;#xff0c;一是通过行列变换得到对角行列式&amp;#xff0c;二是通过行列式展开&amp;#xff0c;也就是代数余子式的方法&amp;#xff0c;就是标准答案的第一个方法。行列式经过行列变换后是等效的&amp;#xff0c;所以为了计算方便&amp;#xff0c;先经过行列变换再做展开也是可以的。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数中关于k阶子式问题", ["\n", "我想用k阶子式的方法来做，但是我算出来的结果和答案不一样，而且答案是先行列互换再计算的，我这样子计算是错误的吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先构建一个等号右侧为0的等式&amp;#xff0c;然后按照这个步骤去做就可以了。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/402932854656128.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;有帮助请采纳&amp;#xff0c;还有不懂的可以继续追问~&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请教一下大家关于matlab求解非线性方程", ["\n", "自己的程序出了错误不知如何解决，还有初始值该如何表示，请教一下大家"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; cv2\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\nfrom matplotlib.widgets &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; Slider &lt;span class=\"hljs-comment\"&gt;#调用Slider滑块控件&lt;/span&gt;\n\ndef set_chinese(): &lt;span class=\"hljs-comment\"&gt;#使得画图时的标题可以为中文&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; matplotlib\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;[INFO] matplotlib版本为: %s&amp;#34;&lt;/span&gt; % matplotlib.__version__)\n    matplotlib.rcParams[&amp;#39;font.sans-serif&amp;#39;] &amp;#61; [&amp;#39;FangSong&amp;#39;]\n    matplotlib.rcParams[&amp;#39;axes.unicode_minus&amp;#39;] &amp;#61; False\n\ndef three_line_trans(x,x1,y1,x2,y2):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x1&amp;#61;&amp;#61;0&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x1&amp;#61;&amp;#61;x2&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x2&amp;#61;&amp;#61;255:&lt;/span&gt;\n        print(&lt;span class=\"hljs-string\"&gt;&amp;#34;[INFO] x1&amp;#61;{},x2{} -&amp;gt;调用此函数必须满足: x1≠x2且x2≠255以及x1≠0&amp;#34;&lt;/span&gt;)\n        return None\n\n    &lt;span class=\"hljs-comment\"&gt;#【快速算法】&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;m1&lt;/span&gt; &amp;#61; (x&amp;lt;x1)\n    &lt;span class=\"hljs-attr\"&gt;m2&lt;/span&gt; &amp;#61; (x&amp;gt;x1)&amp;amp;(x&amp;lt;x2)\n    &lt;span class=\"hljs-attr\"&gt;m3&lt;/span&gt; &amp;#61; (x&amp;gt;x2)\n    &lt;span class=\"hljs-attr\"&gt;output&lt;/span&gt; &amp;#61; (y1*x/x1)*m1 &amp;#43; (((y2-y1)/(x2-x1))*(x-x1)&amp;#43;y1)*m2 &amp;#43; (((&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;-y2)/(&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;-x2))*(x-x2)&amp;#43;y2)*m3\n\n    &lt;span class=\"hljs-comment\"&gt;# 3.获取分段线性函数的点集&amp;#xff0c;用于绘制函数图像&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;x_point&lt;/span&gt; &amp;#61; np.arange(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;cond2&lt;/span&gt; &amp;#61; [True &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;gt;&amp;#61; x1 &lt;span class=\"hljs-literal\"&gt;and&lt;/span&gt; i &amp;lt;&amp;#61; x2) &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; False for i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; x_point] &lt;span class=\"hljs-comment\"&gt;#!!!不能直接写x1&amp;lt;&amp;#61;x_point&amp;lt;&amp;#61;x2,否则报错。暂时不知道为什么不能双向&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;y_point&lt;/span&gt; &amp;#61; (y1 / x1 * x_point) * (x_point &amp;lt; x1) \\\n              &amp;#43; ((y2 - y1) / (x2 - x1) * (x_point - x1) &amp;#43; y1) * (cond2) \\\n              &amp;#43; ((&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt; - y2) / (&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt; - x2) * (x_point - x2) &amp;#43; y2) * (x_point &amp;gt; x2)\n\n    return output, x_point, y_point\n\ndef update_trans(val):\n    &lt;span class=\"hljs-comment\"&gt;# 读入4个滑动条的值&lt;/span&gt;\n    x1, &lt;span class=\"hljs-attr\"&gt;y1&lt;/span&gt; &amp;#61; slider_x1.val, slider_y1.val\n    x2, &lt;span class=\"hljs-attr\"&gt;y2&lt;/span&gt; &amp;#61; slider_x2.val, slider_y2.val\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x1&amp;gt;&amp;#61;x2:\n        &lt;span class=\"hljs-attr\"&gt;x1&lt;/span&gt; &amp;#61; x2-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y1&amp;gt;&amp;#61;y2:\n        &lt;span class=\"hljs-attr\"&gt;y1&lt;/span&gt; &amp;#61; y2-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    output, x_point, &lt;span class=\"hljs-attr\"&gt;y_point&lt;/span&gt; &amp;#61; three_line_trans(img_original1, &lt;span class=\"hljs-attr\"&gt;x1&amp;#61;x1,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;y1&amp;#61;y1,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x2&amp;#61;x2,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;y2&amp;#61;y2)&lt;/span&gt;\n    ax3.clear()\n    ax3.set_title(&amp;#39;分段线性函数图像&amp;#39;, &lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax3.grid(True, &lt;span class=\"hljs-attr\"&gt;linestyle&amp;#61;&amp;#39;:&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;linewidth&amp;#61;1)&lt;/span&gt;\n    ax3.plot([x1, x2], [y1, y2], &amp;#39;ro&amp;#39;)\n    ax3.plot(x_point, y_point, &amp;#39;g&amp;#39;)\n\n    ax4.clear()\n    ax4.set_title(&amp;#39;变换后的图像&amp;#39;, &lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax4.imshow(output, &lt;span class=\"hljs-attr\"&gt;cmap&amp;#61;&amp;#39;gray&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;vmin&amp;#61;0,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;vmax&amp;#61;255)&lt;/span&gt;\n\n    ax5.clear()\n    ax5.set_title(&amp;#39;变换后图像直方图&amp;#39;, &lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax5.hist(output.flatten(),&lt;span class=\"hljs-attr\"&gt;bins&amp;#61;50,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;density&amp;#61;True,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;color&amp;#61;&amp;#39;r&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;edgecolor&amp;#61;&amp;#39;k&amp;#39;)&lt;/span&gt;\n    ax5.set_xlim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置x轴分布范围&lt;/span&gt;\n    ax5.set_ylim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.15&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置y轴分布范围&lt;/span&gt;\n    ax5.grid(True, &lt;span class=\"hljs-attr\"&gt;linestyle&amp;#61;&amp;#39;:&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;linewidth&amp;#61;1)&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;__name__&lt;/span&gt; &amp;#61;&amp;#61; &amp;#39;__main__&amp;#39;:\n    set_chinese()\n    &lt;span class=\"hljs-attr\"&gt;img_original&lt;/span&gt; &amp;#61; cv2.imread(r&amp;#39;Fig0316(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;nd_from_top).tif&amp;#39;)\n    &lt;span class=\"hljs-attr\"&gt;img_original1&lt;/span&gt; &amp;#61; cv2.cvtColor(img_original, cv2.COLOR_BGR2GRAY)\n\n\n    &lt;span class=\"hljs-attr\"&gt;fig&lt;/span&gt; &amp;#61; plt.figure()\n    &lt;span class=\"hljs-attr\"&gt;ax1&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;231&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax2&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;232&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax3&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;233&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax4&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;234&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax5&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;235&lt;/span&gt;)\n\n    ax1.set_title(&amp;#39;原始输入图片&amp;#39;,&lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax1.imshow(img_original1,&lt;span class=\"hljs-attr\"&gt;cmap&amp;#61;&amp;#39;gray&amp;#39;,vmin&amp;#61;0,vmax&amp;#61;255)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#官方文档&amp;#xff1a;https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.imshow.html#matplotlib.axes.Axes.imshow&lt;/span&gt;\n    ax2.set_title(&amp;#39;原始输入图片直方图&amp;#39;,&lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax2.hist(img_original1.flatten(), &lt;span class=\"hljs-attr\"&gt;bins&amp;#61;50,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;density&amp;#61;True,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;color&amp;#61;&amp;#39;r&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;edgecolor&amp;#61;&amp;#39;k&amp;#39;)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#bin属性控制直方图横条的数量, density为True则显示的是概率密度&lt;/span&gt;\n    ax2.set_xlim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置x轴分布范围&lt;/span&gt;\n    ax2.set_ylim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.15&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置y轴分布范围&lt;/span&gt;\n    ax2.grid(True, &lt;span class=\"hljs-attr\"&gt;linestyle&amp;#61;&amp;#39;:&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;linewidth&amp;#61;1)&lt;/span&gt;\n\n    plt.subplots_adjust(&lt;span class=\"hljs-attr\"&gt;bottom&amp;#61;0.3)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;x1&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;], &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;lightgoldenrodyellow&amp;#39;)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#控制横轴的left,bottom,width,height位置和大小&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_x1&lt;/span&gt; &amp;#61; Slider(x1, &amp;#39;参数x1&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;91,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#slider的输入x必须是一个Axes&lt;/span&gt;\n    slider_x1.on_changed(update_trans)\n\n    &lt;span class=\"hljs-attr\"&gt;y1&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.16&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;],\n                  &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;lightgoldenrodyellow&amp;#39;)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_y1&lt;/span&gt; &amp;#61; Slider(y1, &amp;#39;参数y1&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;0,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt;\n    slider_y1.on_changed(update_trans)\n\n    &lt;span class=\"hljs-attr\"&gt;x2&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.06&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;],\n                  &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;white&amp;#39;)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_x2&lt;/span&gt; &amp;#61; Slider(x2, &amp;#39;参数x2&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;254&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;138,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#valinit表示slider的点的初始位置&amp;#xff08;即滑块的初始值&amp;#xff09;&lt;/span&gt;\n    slider_x2.on_changed(update_trans)\n\n    &lt;span class=\"hljs-attr\"&gt;y2&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.02&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;],\n                  &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;white&amp;#39;)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_y2&lt;/span&gt; &amp;#61; Slider(y2, &amp;#39;参数y2&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;255,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt;\n    slider_y2.on_changed(update_trans)\n\n    slider_x1.set_val(&lt;span class=\"hljs-number\"&gt;91&lt;/span&gt;)\n    slider_y1.set_val(&lt;span class=\"hljs-number\"&gt;91&lt;/span&gt;)\n    slider_x2.set_val(&lt;span class=\"hljs-number\"&gt;138&lt;/span&gt;)\n    slider_y2.set_val(&lt;span class=\"hljs-number\"&gt;138&lt;/span&gt;)\n    &lt;span class=\"hljs-comment\"&gt;#plt.tight_layout()&lt;/span&gt;\n    plt.show()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/237403633756118.jpg\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["实现分段线性变换，显示处理前后图像", ["2.产生灰度变换函数T1，使得：", "          0.3r                            r < 0.35", "s =     0.105 + 2.6333(r-0.35)                  0.35 ≤ r ≤ 0.65", "          1 + 0.3(r-1)                r > 0.65", "    用T1对原图像rice.jpg进行处理，显示处理前、后的图像(r,s为归一化灰度)。", "\n", "rice.jpg", "\n", "实验仪器", "      Python+OpenCV"]], "Tag": "算法设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;关于该问题&amp;#xff0c;我找了一篇非常好的博客&amp;#xff0c;你可以看看是否有帮助&amp;#xff0c;链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_46191800/article/details/108541043\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;关于R语言多水平线性回归分析&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;你还可以看下r语言参考手册中的 &lt;a href=\"https://cran.r-project.org/doc/manuals/r-release/R-intro.html#Linear-models\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;r语言 线性模型&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 以帮助更多的人 ^-^", "Konwledge_Point": "线性规划简介", "Question": ["在R语言中做多水平线性回归", ["我的数据是：低水平层面为团队中的成员；高水平为团队，其中团队层面的数据是从成员层面聚合得到的。", "我的分析模型是：考虑团队特性对团队绩效的影响，检验团队层面变量的调节作用以及个人层面变量的调节作用。", "我主要有两个问题请教大家：一是做多水平回归的时候对两个层面的数据做分析，导入的数据选择哪个层面呢？我在网上搜到一些例子，大多研究的是低水平层面的自变量与因变量的关系，同时考察高水平层面的调节作用，用的也都是低水平的数据，所以像我这样的研究假设因变量是在高水平层面，是否就应该导入高水平层面的数据做分析？二是，导入高水平层面的数据后还想检验低水平层面变量的调节作用该如何实现呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答通过自己思路及引用到GPTᴼᴾᴱᴺᴬᴵ搜索,得到内容具体如下&amp;#xff1a;&lt;br /&gt;以下是用 Jacobi 迭代法解线性方程组的 MATLAB 函数代码&amp;#xff0c;包括了你提到的步骤 2 到 7&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Xsolve&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;myJacobi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(A, b, X0, mytol)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% Jacobi 迭代法解线性方程组 Ax&amp;#61;b&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 输入参数&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% A&amp;#xff1a;系数矩阵&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% b&amp;#xff1a;右端常向量&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% X0&amp;#xff1a;初始迭代值&amp;#xff0c;默认为全零向量&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% mytol&amp;#xff1a;允许误差&amp;#xff0c;默认为 1e-6&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 输出参数&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% Xsolve&amp;#xff1a;迭代收敛时满足精度的数值解&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 检查输入参数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; nargin &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n    mytol &amp;#61; &lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; nargin &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    X0 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(b));\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; nargin &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入参数不足&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 构造 Jacobi 迭代矩阵&lt;/span&gt;\nD &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(A));\nU &amp;#61; &lt;span class=\"hljs-built_in\"&gt;triu&lt;/span&gt;(A, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nL &amp;#61; &lt;span class=\"hljs-built_in\"&gt;tril&lt;/span&gt;(A, &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\nM &amp;#61; D;\nN &amp;#61; L &amp;#43; U;\n\n&lt;span class=\"hljs-comment\"&gt;% 判断系数矩阵是否可逆&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(det(A)) &amp;lt; mytol\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;系数矩阵不可逆&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 判断系数矩阵主对角元素是否为零&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; any(&lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(A) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;系数矩阵主对角元素有零元素&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 判断 Jacobi 迭代法是否收敛&lt;/span&gt;\nrho &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(eig(M \\ N)));\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; rho &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Jacobi 迭代法不收敛&amp;#39;&lt;/span&gt;);\n    Xsolve &amp;#61; [];\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Jacobi 迭代法收敛&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% Jacobi 迭代格式&lt;/span&gt;\nXn &amp;#61; X0;\nerr &amp;#61; &lt;span class=\"hljs-built_in\"&gt;inf&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; err &amp;gt; mytol\n    Xn1 &amp;#61; M \\ (b - N * Xn);\n    err &amp;#61; norm(Xn1 - Xn, &lt;span class=\"hljs-built_in\"&gt;inf&lt;/span&gt;);\n    Xn &amp;#61; Xn1;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\nXsolve &amp;#61; Xn;\n\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在命令窗口中可以按以下方式调用该函数&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;% 例子&amp;#xff1a;解方程组 Ax&amp;#61;b&amp;#xff0c;其中 A&amp;#61;[4 &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt; 0; &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt; 4 &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; 0 &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt; 4]&amp;#xff0c;b&amp;#61;[15; 10; 10]\nA &amp;#61; [4, &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;, 0; &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;, 4, &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; 0, &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;, 4];\nb &amp;#61; [15; 10; 10];\nXsolve &amp;#61; myJacobi(A, b);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;其中&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;Xsolve&lt;/code&gt; 是 Jacobi 迭代法求解得到的数值解。&lt;/p&gt;\n&lt;p&gt;希望这个代码能够帮助你解决问题。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;如果以上回答对您有所帮助&amp;#xff0c;点击一下采纳该答案&amp;#xff5e;谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用jacobi迭代法解线性方程组函数", ["1、函数输入形参要求如下，也可以修改得更好、更适合你自己.", "function Xsolve=myJacobi(A.b.X0 mytol)", "%A为系数矩阵", "點为右端常向量", "X0为初始层，默认取0.", "%mytol表示允许误差.要求默认值为le-b.", "%Xsolve表示收敛情况下满足精度的数值解", "Xnargin表示输入参数个数，下面这一段是简单的判断，你可以编写的更好if nargin<4 %如果参数<4.", "mytol=le-b:", "if nargin<3 %如果参数3", "X0=zeros(size(b))；", "if nargins2", "error(‘输入参数不足‘)；", "end", "end", "end", "2.第一步描述出矩阵DL.U", "3、第二步要判断系数矩阵是否可逆，用“abs(det(A))<mytol”或者别的方式判断，不满足要提示：", "4. 第三步要判断系数矩阵主对角元素是否为零，", "5、第四步用迭代法基本定理(计算谱半径)判断迭代法是否收敛，要在命令窗口输出是否收敛的结论：", "6、第五步在收敛的基础上进行迭代格式的程序编写：", "7、迭代格"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;What you are after is applying a Convolution filter to an image, for that you can use PHP's built in  &lt;code&gt;imageconvolution()&lt;/code&gt; &lt;a href=\"http://php.net/manual/en/function.imageconvolution.php\" rel=\"nofollow\"&gt;php.net&lt;/a&gt; function.&lt;/p&gt;\n\n&lt;p&gt;For usage, see &lt;a href=\"http://php.net/manual/en/function.imageconvolution.php#104006\" rel=\"nofollow\"&gt;Magilvia&lt;/a&gt;'s example on php.net modified for your purpose:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php \n    $sharpenMatrix = array \n    ( \n        array(-0.5, -0.5, -0.5), \n        array(-0.5, 5, -0.5), \n        array(-0.5, -0.5, -0.5) \n    ); \n\n    // calculate the sharpen divisor \n    $divisor = array_sum(array_map('array_sum', $sharpenMatrix));            \n\n    $offset = 0; \n\n    // apply the matrix \n    imageconvolution($img, $sharpenMatrix, $divisor, $offset); \n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;$img&lt;/code&gt; is a PHP image the convolution matrix (sharpening filter) is applied on&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["使用PHP中的线性过滤器锐化图像", ["\n\n", "I would like to read an image and sharpen it using a linear filter, which is this matrix:", "\n\n", "H =  [-0.5 -0.5 -0.5; -0.5 5 -0.5; -0.5 -0.5 -0.5]\n", "\n\n", "I know about ImageMagick, is there any possibility to do just that?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;int Delete(LinkList L,int i,ElemType *e)\n/*在带头结点的单链表L中删除第i个元素&amp;#xff0c;并将删除的元素保存到变量*e中*/\n{\nNode * pre,* r;\nint k;\npre&amp;#61;L;\nk&amp;#61;0;\nwhile(pre-&amp;gt;next!&amp;#61;NULL&amp;amp;&amp;amp;k&amp;lt;i-1)\n{\n  pre&amp;#61;pre-&amp;gt;next;\n  k&amp;#61;k&amp;#43;1;\n}\nif(pre-&amp;gt;next&amp;#61;&amp;#61;NULL)\n{\n  printf(&amp;#34;删除结点的位置i不合理&amp;#xff01;&amp;#34;);\n  return ERROR;\n}\nr&amp;#61;pre-&amp;gt;next;\npre-&amp;gt;next&amp;#61;r-&amp;gt;next;\n*e&amp;#61;r-&amp;gt;data;\nfree(r);\nreturn 1;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性表链式结构能按序号删除吗", ["如果能的话", "\n\n", "用函数List Delete(List L,int P);应该怎么编写程序", "\n\n", "想了好久了但是还是没改出来"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;PHP in general in synchronous.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["PHP文件编写操作是线性还是异步？", ["\n\n", "I'm wondering because I have a script that writes to the same temp file in a loop. Would that be the best way to go about it?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;对于常系数非齐次线性微分方程&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;y&amp;#39;&amp;#39; &amp;#43; ay&amp;#39; &amp;#43; by &amp;#61; f(x)&lt;/p&gt;\n&lt;p&gt;其中 a 和 b 都是常数&amp;#xff0c;f(x) 是已知函数。&lt;/p&gt;\n&lt;p&gt;有两种情况&amp;#xff0c;一种是 f(x) 是指数函数&amp;#xff0c;另一种是 f(x) 是多项式函数。&lt;/p&gt;\n&lt;p&gt;对于第一种情况&amp;#xff0c;解的形式为 y &amp;#61; R(x) e^(mx)&amp;#xff0c;其中 m 为常数&amp;#xff0c;R(x) 是一个与 x 相关的函数。&lt;/p&gt;\n&lt;p&gt;将 y &amp;#61; R(x) e^(mx) 带入到原方程中&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt; R&amp;#39;&amp;#39;(x) e^(mx) &amp;#43; (2mR&amp;#39;(x) &amp;#43; aR(x)) e^(mx) &amp;#43; bR(x) e^(mx) &amp;#61; f(x)&lt;/p&gt;\n&lt;p&gt;将 e^(mx) 分离出来&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt; e^(mx) (R&amp;#39;&amp;#39;(x) &amp;#43; 2mR&amp;#39;(x) &amp;#43; (a&amp;#43;bm)R(x)) &amp;#61; f(x)&lt;/p&gt;\n&lt;p&gt;因为 e^(mx) 不等于零&amp;#xff0c;所以可以将方程简化为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;R&amp;#39;&amp;#39;(x) &amp;#43; 2mR&amp;#39;(x) &amp;#43; (a&amp;#43;bm)R(x) &amp;#61; f(x) e^(-mx)&lt;/p&gt;\n&lt;p&gt;令 Rm(x) 为特解&amp;#xff0c;则有&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;Rm&amp;#39;&amp;#39;(x) &amp;#43; 2mRm&amp;#39;(x) &amp;#43; (a&amp;#43;bm)Rm(x) &amp;#61; f(x) e^(-mx)&lt;/p&gt;\n&lt;p&gt;对于第二种情况&amp;#xff0c;即 f(x) 是多项式函数&amp;#xff0c;解的形式为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;y &amp;#61; (Ax^k &amp;#43; Bx^(k-1) &amp;#43; ... &amp;#43; C) e^(mx)&lt;/p&gt;\n&lt;p&gt;其中 k 是 f(x) 的最高次幂&amp;#xff0c;A, B, ..., C 都是常数&amp;#xff0c;R(x) 是一个与 x 相关的函数。&lt;/p&gt;\n&lt;p&gt;将 y 带入到原方程中&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;[A(m^2&amp;#43;kam&amp;#43;b) x^k &amp;#43; ... &amp;#43; C(m^2&amp;#43;am&amp;#43;b)] e^(mx) &amp;#43; f(x) &amp;#61; 0&lt;/p&gt;\n&lt;p&gt;因为 e^(mx) 不等于零&amp;#xff0c;所以可以将方程简化为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;[A(m^2&amp;#43;kam&amp;#43;b) x^k &amp;#43; ... &amp;#43; C(m^2&amp;#43;am&amp;#43;b)] &amp;#43; f(x) e^(-mx) &amp;#61; 0&lt;/p&gt;\n&lt;p&gt;注意到上式中的常数项是与 x 无关的&amp;#xff0c;所以不能写成 R(x) &amp;#61; xRm(x) &amp;#43; c 的形式。&lt;/p&gt;\n&lt;p&gt;关于为什么书上没有给出这个常数项 c&amp;#xff0c;可能是因为这个常数项并不能代表所有可能的常数项&amp;#xff0c;因为常数项可以是任何常数。同时&amp;#xff0c;书上可能认为这个常数项并不重要&amp;#xff0c;因为它不会影响到 R(x) 的定义和求解。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["常系数非齐次线性微分方程的问题", ["为什么第二种情况不是R（x）=xRm（x）+c？为什么书上没有这个常数项c。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;引用new bing部分回答作答&amp;#xff1a;&lt;br /&gt;非线性薛定谔方程&amp;#xff08;NLSE&amp;#xff09;是一个描述波动现象的方程&amp;#xff0c;在物理学和工程学等领域有广泛应用。NLSE 的一般形式为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$i\\hbar\\frac{\\partial \\psi}{\\partial t}&amp;#61;-\\frac{\\hbar^2}{2m}\\frac{\\partial^2\\psi}{\\partial x^2}&amp;#43;V(x)\\psi&amp;#43;g(x)|\\psi|^2\\psi$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$\\psi$ 是波函数&amp;#xff0c;$m$ 是粒子的质量&amp;#xff0c;$V(x)$ 是势能&amp;#xff0c;$g(x)$ 是非线性系数&amp;#xff0c;$|\\psi|^2$ 表示波函数的模方。&lt;/p&gt;\n&lt;p&gt;为了求解 NLSE&amp;#xff0c;我们可以采用紧致差分方法&amp;#xff08;Compact Difference Method&amp;#xff09;&amp;#xff0c;将偏微分方程转化为差分方程进行求解。这里介绍一种四阶紧致差分格式的求解方法。&lt;/p&gt;\n&lt;p&gt;假设我们在空间方向上使用均匀网格&amp;#xff0c;网格大小为 $h$&amp;#xff0c;时间步长为 $\\Delta t$&amp;#xff0c;则可以将空间坐标 $x$ 和时间 $t$ 分别离散化为 $x_j&amp;#61;jh$ 和 $t_n&amp;#61;n\\Delta t$。同时&amp;#xff0c;我们采用中心差分法近似计算偏微分方程中的导数项。&lt;/p&gt;\n&lt;p&gt;将 NLSE 中的各项代入差分方程中&amp;#xff0c;可以得到如下形式的紧致差分方程&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$i\\hbar\\frac{\\psi_j^{n&amp;#43;1}-\\psi_j^n}{\\Delta t}&amp;#61;-\\frac{\\hbar^2}{2m}\\frac{\\psi_{j&amp;#43;1}^n-2\\psi_j^n&amp;#43;\\psi_{j-1}^n}{h^2}&amp;#43;V_j\\psi_j^n&amp;#43;g_j|\\psi_j^n|^2\\psi_j^n$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$\\psi_j^n$ 表示波函数在位置 $x_j$ 和时间 $t_n$ 的值。&lt;/p&gt;\n&lt;p&gt;将上述方程进行整理&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$\\psi_j^{n&amp;#43;1}&amp;#61;\\frac{\\Delta t i\\hbar}{2m}\\frac{\\psi_{j&amp;#43;1}^n-2\\psi_j^n&amp;#43;\\psi_{j-1}^n}{h^2}&amp;#43;(\\frac{\\Delta t i\\hbar}{h^2}V_j&amp;#43;1)\\psi_j^n&amp;#43;\\frac{\\Delta t i\\hbar g_j}{h^2}|\\psi_j^n|^2\\psi_j^n$&lt;/p&gt;\n&lt;p&gt;这个方程是一个离散的迭代公式&amp;#xff0c;可以通过多次迭代计算得到 NLSE 的数值解。下面是用 MATLAB 实现这个算法的示例代码。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 定义参数&lt;/span&gt;\nh &amp;#61; &lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 空间步长&lt;/span&gt;\ndt &amp;#61; &lt;span class=\"hljs-number\"&gt;0.001&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 时间步长&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-number\"&gt;-10&lt;/span&gt;:h:&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 空间网格&lt;/span&gt;\nt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:dt:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 时间网格&lt;/span&gt;\nm &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 粒子质量&lt;/span&gt;\nV &amp;#61; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 势能&lt;/span&gt;\ng &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 非线性系数&lt;/span&gt;\nhbar &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 普朗克常数&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 初始化波函数&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(-x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\npsi_next &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x));\n\n&lt;span class=\"hljs-comment\"&gt;% 迭代计算&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(t)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x)&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;% 注意边界点的处理&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;% 计算波函数的一阶和二阶导数&lt;/span&gt;\n        dpsi &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;))/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*h);\n        d2psi &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;))/h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;% 计算新的波函数值&lt;/span&gt;\n        psi_next(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#43; dt*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*m)*d2psi &amp;#43; ...\n            dt*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*V(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#43; ...\n            dt*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar*g/(h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;))^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 更新波函数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; psi_next;\n    &lt;span class=\"hljs-comment\"&gt;% 将边界点的值设置为零&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 绘制波函数的时空演化图像&lt;/span&gt;\n[X, T] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(x, t);\nPsiReal &amp;#61; &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;).*&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*m)*((x-&lt;span class=\"hljs-built_in\"&gt;mean&lt;/span&gt;(x)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/hbar*n); &lt;span class=\"hljs-comment\"&gt;% 实部&lt;/span&gt;\nPsiReal &amp;#61; &lt;span class=\"hljs-built_in\"&gt;repmat&lt;/span&gt;(PsiReal, &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(X,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;% 添加这行代码&lt;/span&gt;\nPsiImag &amp;#61; &lt;span class=\"hljs-built_in\"&gt;imag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;).*&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*m)*((x-&lt;span class=\"hljs-built_in\"&gt;mean&lt;/span&gt;(x)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/hbar*n); &lt;span class=\"hljs-comment\"&gt;% 虚部&lt;/span&gt;\nPsiImag &amp;#61; &lt;span class=\"hljs-built_in\"&gt;repmat&lt;/span&gt;(PsiImag, &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(X,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;% 添加这行代码&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%Z &amp;#61; abs(psi).^2; % 概率密度&lt;/span&gt;\nZ &amp;#61; &lt;span class=\"hljs-built_in\"&gt;repmat&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(t), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\nmesh(X, T, &lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(X))*&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(:))).*Z, &lt;span class=\"hljs-string\"&gt;&amp;#39;facecolor&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;);\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;);\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;);\nzlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Probability density&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\nsurf(&lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(X), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(T), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(PsiReal), &lt;span class=\"hljs-string\"&gt;&amp;#39;facecolor&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;);\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;);\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;);\nzlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Real part&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\nsurf(&lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(X), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(T), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(Z), &lt;span class=\"hljs-string\"&gt;&amp;#39;facecolor&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;);\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;);\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;);\nzlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Imaginary part&amp;#39;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这段代码中&amp;#xff0c;我们使用了两重循环来计算每个时间步长中波函数在所有空间点上的值。其中&amp;#xff0c;内层循环遍历空间网格上的所有内部点&amp;#xff0c;使用中心差分法计算波函数在这些点的一阶和二阶导数&amp;#xff0c;并根据紧致差分格式的公式计算出新的波函数值。外层循环则遍历所有的时间步长&amp;#xff0c;通过多次迭代得到波函数的时空演化图像。&lt;/p&gt;\n&lt;p&gt;注意到在代码中&amp;#xff0c;我们使用 mesh 函数将波函数的时空演化图像绘制出来&amp;#xff0c;并且将横轴和纵轴分别设为空间坐标和时间。图像的高度表示波函数的概率密度&amp;#xff0c;可以通过调整视角和颜色映射来观察波函数的演化特征。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["非线性薛定谔方程的四阶紧致差分格式", ["非线性薛定谔方程的四阶紧致差分格式求解过程", "要求论述有条理，理论叙述详尽", "题主原理已经写出来了，但是通过原理写不出代码，所以想要有一个对比，希望大家帮帮忙"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Golint is newly released this week: &lt;a href=\"https://github.com/golang/lint\" rel=\"noreferrer\"&gt;https://github.com/golang/lint&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Go语言的静态代码分析（线性）工具", ["\n\n", "Is there a static analysis tool for Go language –like ", "lint", ", ", "pylint", " etc? As far as I googled, I haven't found anything related.", "\n\n", "I may do this as an undergrad senior project in my department. I must be sure that it is not done before. Any help is appreciated.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;model.coef_[0]是x1的系数&amp;#xff0c;model.coef_[1]是x2 的系数&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["二元线性回归模型怎么把元分别带进去", ["有两个因变量，求出来两个系数，请问最后怎么能列出这个式子来？就是希望最后结果是 y=系数1", "X1+系数2", "X2+截距", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答通过自己思路及引用到GPTᴼᴾᴱᴺᴬᴵ搜索,得到内容具体如下&amp;#xff1a;&lt;br /&gt;非线性薛定谔方程&amp;#xff08;Nonlinear Schrödinger Equation, NLSE&amp;#xff09;是一个重要的数学模型&amp;#xff0c;被广泛应用于光学、声学、等离子体和量子物理等领域。本文将介绍如何使用Richardson外推法求解非线性薛定谔方程&amp;#xff0c;并推导其四阶精度的理论原理。&lt;/p&gt;\n&lt;p&gt;一、非线性薛定谔方程&lt;/p&gt;\n&lt;p&gt;非线性薛定谔方程是一个偏微分方程&amp;#xff0c;通常用来描述自由粒子或束缚电子在势场中的运动&amp;#xff0c;其标准形式为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;i\\hbar\\frac{\\partial \\psi}{\\partial t}&amp;#61;-\\frac{\\hbar^2}{2m}\\frac{\\partial^2 \\psi}{\\partial x^2}&amp;#43;V\\psi&amp;#43;g|\\psi|^2\\psi&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$\\psi(x,t)$是波函数&amp;#xff0c;描述了粒子在时空中的分布情况&amp;#xff1b;$m$是粒子的质量&amp;#xff1b;$V(x)$是势能函数&amp;#xff1b;$g$是非线性项的系数&amp;#xff0c;描述了粒子之间相互作用的强度。&lt;/p&gt;\n&lt;p&gt;二、Richardson外推法&lt;/p&gt;\n&lt;p&gt;Richardson外推法是一种常用的数值微分方法&amp;#xff0c;用于提高数值解的精度。其基本思想是&amp;#xff0c;将一个数值解按照一定的步长逐渐逼近真实解&amp;#xff0c;并通过外推法来消除截断误差。&lt;/p&gt;\n&lt;p&gt;对于一个一阶微分方程$y&amp;#39;(x)&amp;#61;f(x,y)$&amp;#xff0c;我们可以使用欧拉方法来求解&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;y_{n&amp;#43;1}&amp;#61;y_n&amp;#43;hf(x_n,y_n)&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$y_n$表示$x_n$处的数值解&amp;#xff0c;$h$表示步长。然而&amp;#xff0c;欧拉方法的精度只有一阶&amp;#xff0c;为了提高精度&amp;#xff0c;我们可以使用Richardson外推法。&lt;/p&gt;\n&lt;p&gt;具体来说&amp;#xff0c;我们可以使用两个不同步长的欧拉方法来求解$y(x)$&amp;#xff0c;并将它们的结果进行外推&amp;#xff0c;得到更高精度的数值解。假设$y_{h}$和$y_{2h}$分别表示使用步长$h$和$2h$的欧拉方法得到的数值解&amp;#xff0c;则可以使用以下公式进行外推&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;y_{extr}&amp;#61;y_h&amp;#43;\\frac{y_h-y_{2h}}{2^p-1}&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$p$表示外推方法的阶数&amp;#xff0c;$y_{extr}$表示外推后的数值解。通过不断缩小步长&amp;#xff0c;我们可以逐渐逼近真实解&amp;#xff0c;并得到更高精度的数值解。&lt;/p&gt;\n&lt;p&gt;三、非线性薛定谔方程的四阶Richardson外推法&lt;/p&gt;\n&lt;p&gt;对于非线性薛定谔方程&amp;#xff0c;我们可以使用有限差分方法来求解。将空间和时间分别离散化&amp;#xff0c;我们可以得到如下差分方程&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;i\\frac{\\psi_{j,k&amp;#43;1}-\\psi_{j,k}}{\\Delta t}&amp;#61;-\\frac{1}{2}\\frac{\\psi_{j&amp;#43;1,k}-2\\psi_{j,k}&amp;#43;\\psi_{j-1,k}}{(\\Delta x)^2}&amp;#43;V_j\\psi_{j,k}&amp;#43;g|\\psi_{j,k}|^2\\psi_{j,k}&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$\\psi_{j,k}$表示在$x&amp;#61;j\\Delta x$&amp;#xff0c;$t&amp;#61;k\\Delta t$处的数值解&amp;#xff0c;$\\Delta x$和$\\Delta t$分别表示空间和时间的步长。&lt;/p&gt;\n&lt;p&gt;为了提高数值解的精度&amp;#xff0c;我们可以使用四阶中心差分法来求解$\\psi_{j&amp;#43;1,k}$和$\\psi_{j-1,k}$&amp;#xff0c;即&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;\\psi_{j&amp;#43;1,k}&amp;#61;\\psi_{j,k}&amp;#43;\\frac{\\Delta x}{6}\\left(2\\psi_{j,k}-\\psi_{j-1,k}&amp;#43;\\psi_{j&amp;#43;2,k}\\right)&amp;#43;O(\\Delta x^4)&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;\\psi_{j-1,k}&amp;#61;\\psi_{j,k}-\\frac{\\Delta x}{6}\\left(2\\psi_{j,k}-\\psi_{j&amp;#43;1,k}&amp;#43;\\psi_{j-2,k}\\right)&amp;#43;O(\\Delta x^4)&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;将上式代入差分方程中&amp;#xff0c;可以得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;i\\frac{\\psi_{j,k&amp;#43;1}-\\psi_{j,k}}{\\Delta t}&amp;#61;-\\frac{1}{2}\\frac{1}{(\\Delta x)^2}\\left(\\frac{2}{3}\\psi_{j&amp;#43;1,k}-\\frac{2}{3}\\psi_{j,k}-\\frac{2}{3}\\psi_{j-1,k}&amp;#43;\\frac{1}{6}\\psi_{j&amp;#43;2,k}&amp;#43;\\frac{1}{6}\\psi_{j-2,k}\\right)&amp;#43;V_j\\psi_{j,k}&amp;#43;g|\\psi_{j,k}|^2\\psi_{j,k}&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;将上式改写为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;i\\frac{\\psi_{j,k&amp;#43;1}-\\psi_{j,k}}{\\Delta t}&amp;#61;\\frac{1}{2}\\frac{1}{(\\Delta x)^2}\\left(-\\frac{1}{3}\\psi_{j&amp;#43;2,k}&amp;#43;2\\psi_{j&amp;#43;1,k}-\\frac{2}{3}\\psi_{j,k}-\\frac{2}{3}\\psi_{j-1,k}&amp;#43;\\frac{1}{6}\\psi_{j-2,k}\\right)&amp;#43;V_j\\psi_{j,k}&amp;#43;g|\\psi_{j,k}|^2\\psi_{j,k}&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;接下来&amp;#xff0c;我们可以使用四阶Richardson外推法来提高数值解的精度。假设$\\psi_{h,j,k}$和$\\psi_{2h,j,k}$分别表示使用步长$h$和$2h$的差分方法得到的数值解&amp;#xff0c;则可以使用以下公式进行外推&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$$&lt;br /&gt;\\psi_{extr,j,k}&amp;#61;\\psi_{h,j,k}&amp;#43;\\frac{\\psi_{h,j,k}-\\psi_{2h,j,k}}{2^4-1}&lt;br /&gt;$$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$2^4-1&amp;#61;15$表示外推方法的阶数&amp;#xff0c;$\\psi_{extr,j,k}$表示外推后的数值解。通过不断缩小步长&amp;#xff0c;我们可以逐渐逼近真实解&amp;#xff0c;并得到更高精度的数值解。&lt;/p&gt;\n&lt;p&gt;四、MATLAB代码实现&lt;/p&gt;\n&lt;p&gt;下面给出使用MATLAB实现非线性薛定谔方程的四阶Richardson外推法的示例代码。其中&amp;#xff0c;我们选择了谐振子势场$V_j&amp;#61;\\frac{1}{2}\\omega^2x_j^2$&amp;#xff0c;并使用了Crank-Nicolson方法进行时间离散化。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-comment\"&gt;% Parameters&lt;/span&gt;\nL &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Spatial domain [-L,L]&lt;/span&gt;\nN &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;^&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Number of spatial grid points&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(-L,L,N&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); x(&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;) &amp;#61; []; &lt;span class=\"hljs-comment\"&gt;% Spatial grid&lt;/span&gt;\nh &amp;#61; x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) - x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;% Spatial step size&lt;/span&gt;\nT &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Final time&lt;/span&gt;\ndt &amp;#61; h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Time step size&lt;/span&gt;\nM &amp;#61; &lt;span class=\"hljs-built_in\"&gt;floor&lt;/span&gt;(T/dt); &lt;span class=\"hljs-comment\"&gt;% Number of time steps&lt;/span&gt;\nomega &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Frequency of harmonic oscillator&lt;/span&gt;\ng &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Nonlinear coefficient&lt;/span&gt;\npsi0 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(-(x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;% Initial condition&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% Construct the matrix for the Crank-Nicolson method&lt;/span&gt;\nA &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(N&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(N&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(N,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));\nA(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; A(N,N) &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; A &amp;#61; A/h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% Construct the matrix for the harmonic oscillator potential&lt;/span&gt;\nV &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*omega^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n\n&lt;span class=\"hljs-comment\"&gt;% Initialize the solution&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; psi0;\n\n&lt;span class=\"hljs-comment\"&gt;% Time integration using Richardson extrapolation&lt;/span&gt;\npsi_old &amp;#61; &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:M\n    &lt;span class=\"hljs-comment\"&gt;% Crank-Nicolson method&lt;/span&gt;\n    psi_new &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;eye&lt;/span&gt;(N) - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*dt/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*A - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*dt*V)*psi_old;\n    psi_new &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;eye&lt;/span&gt;(N) &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*dt/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*A &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*dt*V)*psi_new;\n    \n    &lt;span class=\"hljs-comment\"&gt;% Richardson extrapolation&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; k &amp;gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        psi_extr &amp;#61; psi_h &amp;#43; (psi_h - psi_2h)/&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;;\n        err &amp;#61; norm(psi_extr - psi_new);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; err &amp;lt; &lt;span class=\"hljs-number\"&gt;1e-10&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;% Exit if the error is small enough&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者MATLAB实现非线性薛定谔方程的四阶Richardson外推法的示例代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-comment\"&gt;% 设置谐振子势场参数&lt;/span&gt;\nomega &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 设置空间离散化参数&lt;/span&gt;\nL &amp;#61; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 区间长度&lt;/span&gt;\nN &amp;#61; &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 离散化点数&lt;/span&gt;\ndx &amp;#61; L/N; &lt;span class=\"hljs-comment\"&gt;% 离散化步长&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(-L/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, L/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, N); &lt;span class=\"hljs-comment\"&gt;% 离散化区间&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 设置时间离散化参数&lt;/span&gt;\nT &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 时间总长&lt;/span&gt;\ndt &amp;#61; &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 时间离散化步长&lt;/span&gt;\nM &amp;#61; T/dt; &lt;span class=\"hljs-comment\"&gt;% 时间离散化点数&lt;/span&gt;\nt &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, T, M); &lt;span class=\"hljs-comment\"&gt;% 时间离散化区间&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 初始化波函数&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(-x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;));\n\n&lt;span class=\"hljs-comment\"&gt;% 计算哈密顿矩阵&lt;/span&gt;\nA &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(N,N);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;\n    A(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    A(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*omega^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    A(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nA(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*omega^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nA(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nA(N,N) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*omega^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x(N)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nA(N,N&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 计算演化算符&lt;/span&gt;\nB &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eye&lt;/span&gt;(N)&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*dt/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*A;\nC &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eye&lt;/span&gt;(N)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*dt/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*A;\n\n&lt;span class=\"hljs-comment\"&gt;% 时间演化&lt;/span&gt;\npsi_store &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(N,M);\npsi_store(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:M\n    psi1 &amp;#61; C\\B*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;;\n    psi2 &amp;#61; C\\B*psi1;\n    psi3 &amp;#61; C\\B*psi2;\n    psi4 &amp;#61; C\\B*psi3;\n    psi_new &amp;#61; (&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;*psi4&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;*psi3)/dt;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; psi_new;\n    psi_store(:,n) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 绘制波函数演化图像&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:M\n    &lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(psi_store(:,n)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;);\n    xlim([-L/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; L/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n    ylim([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;]);\n    xlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;);\n    ylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;|\\psi(x,t)|^2&amp;#39;&lt;/span&gt;);\n    title([&lt;span class=\"hljs-string\"&gt;&amp;#39;t&amp;#61;&amp;#39;&lt;/span&gt; num2str(t(n))]);\n    drawnow;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;以上代码实现了非线性薛定谔方程的四阶Richardson外推法&amp;#xff0c;其中谐振子势场的参数为$ω&amp;#61;1$&amp;#xff0c;空间离散化采用了256个离散化点&amp;#xff0c;时间离散化采用了0.01的步长&amp;#xff0c;总共演化了10个时间单位。通过绘制波函数演化图像&amp;#xff0c;可以直观地观察到波函数的演化情况。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;如果以上回答对您有所帮助&amp;#xff0c;点击一下采纳该答案&amp;#xff5e;谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["非线性薛定谔方程的四阶Richardson外推法", ["用Richardson外推法来求解非线性薛定谔方程的理论推导过程", "要求精度是四阶，理论原理要详尽，过程要完善"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以尝试使用多元线性回归模型&amp;#xff0c;相关资料可以看看&lt;a href=\"https://ww2.mathworks.cn/help/stats/multiple-linear-regression-1.html?s_tid&amp;#61;CRUX_lftnav\"&gt;https://ww2.mathworks.cn/help/stats/multiple-linear-regression-1.html?s_tid&amp;#61;CRUX_lftnav&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["多元线性回归是否可以用来整合拟合优度指标。", ["我想整合拟合优度指标来优选概率分布,就是能否用多元线性回归来整合指标。导师电气方向的不懂线性回归，理学院问了2个老师也不知道，只好来论坛找大神们了", "\n\n", "底下是我列的表，Y是排行，X123是概率分布拟合风速的拟合优度指标。我列的表是特例，3个指标，指标越小排行越高。是否可以强行把Y弄成排名，X弄指标，形成多元线性回归。因为我看一般都多元线性回归例子里面x和y是有特定公式关系的，而我这种是强行把指标和排行弄成了多元线性回归，是否可以", "\n\n", "再就是请问一下大家，有没有什么方法能整合多个指标然后进行排行，比如熵权法，TOPSIS法这种的", "\n\n", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;model.coef_斜率&lt;br /&gt;model.intercept_截距&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["LinearRegression没有coef，我想要求线性回归的系数", ["jieguo=pd.DataFrame()", "date=pd.DataFrame()", "for g in CID:", "    res =data[data['ID']==g]", "    if res['time'].max==1:", "        k=0", "    else:", "        X = res['time'].values.reshape(-1, 1)", "        Y = res['count'].values.reshape(-1, 1)", "        model = LinearRegression().fit(X, Y)", "        ", "k = model.coef", "        jieguo['K'] = k", "    jieguo['ID']=g", "    date = pd.concat([date, jieguo], ignore_index=True)", "\n", "Traceback (most recent call last):", "  File \"F:\\学习\\wer\\w\\F变化趋势.py\", line 27, in ", "    KK = model.coef", "AttributeError: 'LinearRegression' object has no attribute 'coef'"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I tested your code on PHP 5.3.9. To do so I had to translate &lt;code&gt;[]&lt;/code&gt; to &lt;code&gt;array()&lt;/code&gt;, and I also had to correct your line #12: from &lt;code&gt;$a=new MyTest($size)&lt;/code&gt;, to &lt;code&gt;$mytest=new MyTest($size)&lt;/code&gt; (BTW, the constructor argument gets silently ignored, funny). I also added this code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo \"================\".PHP_EOL;\necho \"Testing Function\".PHP_EOL;\nfor($size = 1000; $size &amp;lt; 1000000; $size *= 2) {\n    $start = milliseconds();\n    for ($a=array(), $i=0;$i&amp;lt;$size;$i++) {\n        my_push($a);\n    }\n    $end = milliseconds();\n    echo \"Array Size $size\".PHP_EOL;\n    echo $end - $start . \" milliseconds to perform\".PHP_EOL;\n    echo \"memory usage: \".memory_get_usage().\" , real: \".memory_get_usage(true).PHP_EOL;\n}\n\nfunction my_push(&amp;amp;$a)\n{\n   $a[] = array(new stdClass());\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I added the memory usage line to your loops at the same point, added an &lt;code&gt;unset($mytest);&lt;/code&gt; after the object case (to get a more consistent memory log), and also replaced your 5000000's with 1000000's because I only have 2GB of RAM. This is what I got:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Testing Objects\nArray Size 1000\n2 milliseconds to perform\nmemory usage: 1666376 , real: 1835008\nArray Size 2000\n5 milliseconds to perform\nmemory usage: 2063280 , real: 2097152\nArray Size 4000\n10 milliseconds to perform\nmemory usage: 2857008 , real: 2883584\nArray Size 8000\n19 milliseconds to perform\nmemory usage: 4444456 , real: 4718592\nArray Size 16000\n44 milliseconds to perform\nmemory usage: 7619392 , real: 8126464\nArray Size 32000\n103 milliseconds to perform\nmemory usage: 13969256 , real: 14417920\nArray Size 64000\n239 milliseconds to perform\nmemory usage: 26668936 , real: 27262976\nArray Size 128000\n588 milliseconds to perform\nmemory usage: 52068368 , real: 52690944\nArray Size 256000\n1714 milliseconds to perform\nmemory usage: 102867104 , real: 103546880\nArray Size 512000\n5452 milliseconds to perform\nmemory usage: 204464624 , real: 205258752\n================\nTesting Array\nArray Size 1000\n1 milliseconds to perform\nmemory usage: 18410640 , real: 20709376\nArray Size 2000\n4 milliseconds to perform\nmemory usage: 18774760 , real: 20709376\nArray Size 4000\n7 milliseconds to perform\nmemory usage: 19502976 , real: 20709376\nArray Size 8000\n13 milliseconds to perform\nmemory usage: 20959360 , real: 21233664\nArray Size 16000\n29 milliseconds to perform\nmemory usage: 23872176 , real: 24379392\nArray Size 32000\n61 milliseconds to perform\nmemory usage: 29697720 , real: 30146560\nArray Size 64000\n124 milliseconds to perform\nmemory usage: 41348856 , real: 41943040\nArray Size 128000\n280 milliseconds to perform\nmemory usage: 64651088 , real: 65273856\nArray Size 256000\n534 milliseconds to perform\nmemory usage: 111255536 , real: 111935488\nArray Size 512000\n1085 milliseconds to perform\nmemory usage: 204464464 , real: 205258752\n================\nTesting Function\nArray Size 1000\n357 milliseconds to perform\nmemory usage: 18410696 , real: 22544384\nArray Size 2000\n4 milliseconds to perform\nmemory usage: 18774768 , real: 22544384\nArray Size 4000\n9 milliseconds to perform\nmemory usage: 19503008 , real: 22544384\nArray Size 8000\n17 milliseconds to perform\nmemory usage: 20959392 , real: 22544384\nArray Size 16000\n36 milliseconds to perform\nmemory usage: 23872208 , real: 24379392\nArray Size 32000\n89 milliseconds to perform\nmemory usage: 29697720 , real: 30146560\nArray Size 64000\n224 milliseconds to perform\nmemory usage: 41348888 , real: 41943040\nArray Size 128000\n529 milliseconds to perform\nmemory usage: 64651088 , real: 65273856\nArray Size 256000\n1587 milliseconds to perform\nmemory usage: 111255616 , real: 111935488\nArray Size 512000\n5244 milliseconds to perform\nmemory usage: 204464512 , real: 205258752\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;As you can see, appending to the array inside a function call costs almost as much as (and has the same non-linear behavior as) doing it inside your original method call. One thing can be said for sure:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;It's the function calls that eat up CPU time!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Regarding the non-linear behavior, it becomes really evident only above a certain threshold. While all three cases have the same memory behavior (because of incomplete gargabe collection this is only evident among the \"plain array\" and the \"array inside function\" case, in this log), it is the \"array inside method\" and the \"array inside function\" cases that have the same execution time behavior. This means that it's the function calls themselves that cause a non-linear increase in time. It seems to me that this can be said:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;The amount of data that is around during a function call influences its duration.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;To verify this I replaced all &lt;code&gt;$a[]&lt;/code&gt; with &lt;code&gt;$a[0]&lt;/code&gt; and all 1000000 with 5000000 (to get similar total execution times) and obtained this output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Testing Objects\nArray Size 1000\n2 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 2000\n4 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 4000\n8 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 8000\n15 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 16000\n31 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 32000\n62 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 64000\n123 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 128000\n246 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 256000\n493 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 512000\n985 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 1024000\n1978 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 2048000\n3965 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\nArray Size 4096000\n7905 milliseconds to perform\nmemory usage: 1302672 , real: 1572864\n================\nTesting Array\nArray Size 1000\n1 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 2000\n3 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 4000\n5 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 8000\n10 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 16000\n20 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 32000\n40 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 64000\n80 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 128000\n161 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 256000\n322 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 512000\n646 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 1024000\n1285 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 2048000\n2574 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 4096000\n5142 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\n================\nTesting Function\nArray Size 1000\n1 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 2000\n4 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 4000\n6 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 8000\n14 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 16000\n26 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 32000\n53 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 64000\n105 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 128000\n212 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 256000\n422 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 512000\n844 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 1024000\n1688 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 2048000\n3377 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\nArray Size 4096000\n6814 milliseconds to perform\nmemory usage: 1302464 , real: 1572864\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Note how the times are almost perfectly linear now. Of course, the array size is stuck to 1 now. Note also how the differences of the execution times of the three cases are less pronounced than before. Remember that the innermost operation is the same in all cases.&lt;/p&gt;\n\n&lt;p&gt;I'm not going to try to fully explain all this (gargabe collection on function call? memory fragmentation? ...?), but I think that I have nonetheless collected some useful information, for everyone here and for myself too.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["全局数组的PHP对象数组不是线性扩展吗？", ["\n\n", "There is a major performance issue when using in-object array's as a property versus using a global php array variable, why?", "\n\n", "To benchmark this problem I created the following benchmark that stores an increasingly larger array with an stdClass as a node, two tests were run one using an array property in a class the other a global array.", "\n\n", "The test code", "\n\n", "ini_set('memory_limit', '2250M');\nclass MyTest {\n    public $storage = [];\n    public function push(){\n        $this->storage[] = [new stdClass()];\n    }\n}\n\necho \"Testing Objects\".PHP_EOL;\nfor($size = 1000; $size < 5000000; $size *= 2) {\n    $start = milliseconds();\n    for ($a=new MyTest(), $i=0;$i<$size;$i++) {\n        $a->push();\n    }\n    $end = milliseconds();\n    echo \"Array Size $size\".PHP_EOL;\n    echo $end - $start . \" milliseconds to perform\".PHP_EOL;\n}\necho \"================\".PHP_EOL;\necho \"Testing Array\".PHP_EOL;\nfor($size = 1000; $size < 5000000; $size *= 2) {\n    $start = milliseconds();\n    for ($a=[], $i=0;$i<$size;$i++) {\n        $a[] = [new stdClass()];\n    }\n    $end = milliseconds();\n    echo \"Array Size $size\".PHP_EOL;\n    echo $end - $start . \" milliseconds to perform\".PHP_EOL;\n}\n", "\n\n", "And the shocking results:", "\n\n", "Testing Objects\nArray Size 1000\n2 milliseconds to perform\nArray Size 2000\n3 milliseconds to perform\nArray Size 4000\n6 milliseconds to perform\nArray Size 8000\n12 milliseconds to perform\nArray Size 16000\n35 milliseconds to perform\nArray Size 32000\n97 milliseconds to perform\nArray Size 64000\n246 milliseconds to perform\nArray Size 128000\n677 milliseconds to perform\nArray Size 256000\n2271 milliseconds to perform\nArray Size 512000\n9244 milliseconds to perform\nArray Size 1024000\n31186 milliseconds to perform\nArray Size 2048000\n116123 milliseconds to perform\nArray Size 4096000\n495588 milliseconds to perform\n================\nTesting Array\nArray Size 1000\n1 milliseconds to perform\nArray Size 2000\n2 milliseconds to perform\nArray Size 4000\n4 milliseconds to perform\nArray Size 8000\n8 milliseconds to perform\nArray Size 16000\n28 milliseconds to perform\nArray Size 32000\n61 milliseconds to perform\nArray Size 64000\n114 milliseconds to perform\nArray Size 128000\n245 milliseconds to perform\nArray Size 256000\n494 milliseconds to perform\nArray Size 512000\n970 milliseconds to perform\nArray Size 1024000\n2003 milliseconds to perform\nArray Size 2048000\n4241 milliseconds to perform\nArray Size 4096000\n14260 milliseconds to perform\n", "\n\n", "Now besides the obvious overhead of the object calls itself the object array property scales terribly sometimes taking 3 - 4 times longer when the array becomes larger but this is not the case with the standard global array variable.", "\n\n", "Any thoughts or answers regarding this problem and is this a possible bug with the PHP engine?", "\n    "]], "Tag": "算法设计"}
{"Answer": "你这属于滑动空间嵌套滑动空间问题  需要重写listview  要不然就会出现显示不全的问题 还有滑动冲突问题 \r\n自定义一个listview 继承 listview 重写onmeasure 方法 重新测量高度 \r\n\r\n@Override\r\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\r\n        int measureSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE &gt;&gt; 2, MeasureSpec.AT_MOST);\r\n\r\n        super.onMeasure(widthMeasureSpec, measureSpec);\r\n\r\n    }\r\n\t\t\r\n很简单 重写这一个方法就可以 然后再xml 文件中引用就好了 你试一下", "Konwledge_Point": "线性规划简介", "Question": ["Android 线性布局ScrollView嵌套以及TextView设置background的小问题", ["ScrollView 部分布局", "\n <ScrollView", "\n        android:layout_width=\"match_parent\"", "\n        android:layout_height=\"match_parent\"", "\n        android:layout_below=\"@id/part_line\"", "\n        android:layout_above=\"@id/pay_go\"", "\n\n", "    >\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:paddingTop=\"5dp\"\n        android:orientation=\"vertical\"\n        android:id=\"@+id/pay_main_info\">\n        <include layout=\"@layout/add_address\"\n            android:id=\"@+id/address_desc\"/>\n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"1px\"\n            android:layout_marginBottom=\"5dip\"\n            android:layout_marginTop=\"5dip\"\n            />\n        <include layout=\"@layout/pay_other_info\"\n            android:id=\"@+id/pay_other_info\"/>\n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"5px\"\n            android:layout_marginBottom=\"5dip\"\n            android:layout_marginTop=\"5dip\"\n            />\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"桃李园\"\n            android:textSize=\"25dp\"\n            android:layout_marginLeft=\"20dp\"\n            android:textColor=\"@color/black\"\n            android:id=\"@+id/pay_order_form_canteen_name\"/>\n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"5px\"\n            android:layout_marginBottom=\"5dip\"\n            android:layout_marginTop=\"5dip\"\n\n            />\n        <ListView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginLeft=\"20dp\"\n            android:layout_marginRight=\"20dp\"\n            android:id=\"@+id/pay_order_form_foodlist\">\n\n            </ListView>\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"添加备注\"\n            android:drawableRight=\"@mipmap/more\"\n            android:textSize=\"20dp\"\n            android:layout_marginLeft=\"20dp\"\n            android:textColor=\"@color/black\"\n            android:layout_marginRight=\"20dp\"\n            android:clickable=\"true\"\n            android:id=\"@+id/pay_order_form_add_remakes\"/>\n\n\n\n    </LinearLayout>\n</ScrollView>\n\n\n    布局效果图：\n    ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524541534_568444.png)\n\n    实际效果图：\n    ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524541656_487597.png)\n\n    期望效果：\n      实现类似于饿了么的那种界面，把listview的界面填充出去，如图下：\n\n![图片说明](https://img-ask.csdn.net/upload/201804/24/1524542251_73813.png)\n\n        TextView的设置background的bug:\n\n        TextView代码：\n        <TextView\n        android:id=\"@+id/add_address_btn\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n       android:background=\"@drawable/text_bg\"\n        android:gravity=\"center\"\n        android:paddingBottom=\"20dip\"\n        android:paddingLeft=\"15dip\"\n        android:paddingRight=\"15dip\"\n        android:paddingTop=\"20dip\"\n        android:text=\"+添加收货地址\"\n        android:textColor=\"@color/theme_blue_two\"\n        android:textSize=\"30sp\"\n        android:layout_centerHorizontal=\"true\"\n       />\n                效果：\n                ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524542466_880111.png)\n                background的效果并没有运用上去，附其他可用的TextView的效果，如图下：\n                ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524542599_493676.png)\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The control point arguments are helpfully organised into this layout:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;x1  , y1  ,\nx1' , y1' ,\n\nx2  , y2  ,\nx2' , y2' ,\n\nx3  , y3  ,\nx3' , y3' ,\n\nx4  , y4  ,\nx4' , y4'\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;For each set of coordinates, &lt;code&gt;x_&lt;/code&gt; and &lt;code&gt;y_&lt;/code&gt; are the source points, and &lt;code&gt;x_'&lt;/code&gt; and &lt;code&gt;y_'&lt;/code&gt; are the targets.&lt;/p&gt;\n\n&lt;p&gt;So it's taking the top-left corner and moving it up a bit, the bottom-left is being moved down, the top-right is being moved down and the bottom-right is being moved up, producing the perspective result.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["在Imagick中双线性失真中的参数是什么意思", ["\n\n", "I was referring example of ", "Imagick::distortImage", "\n\n", "Now look at Example 1 which generates following image", "\n\n", "\n\n", "I got confused while looking at below part of code.", "\n\n", "/* Control points for the distortion */\n$controlPoints = array( 10, 10, \n                        10, 5,\n\n                        10, $im->getImageHeight() - 20,\n                        10, $im->getImageHeight() - 5,\n\n                        $im->getImageWidth() - 10, 10,\n                        $im->getImageWidth() - 10, 20,\n\n                        $im->getImageWidth() - 10, $im->getImageHeight() - 10,\n                        $im->getImageWidth() - 10, $im->getImageHeight() - 30);\n", "\n\n", "Now can anybody tell me what this 16 points exactly means ?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1. 设决策变量 x &amp;#61; [ x1&amp;#39;  x2&amp;#39;  … xn&amp;#39;]&amp;#xff0c; xi表示第i个人是否做m项工作&amp;#xff0c;xi &amp;#61; [xi1 xi2 … xim]&amp;#xff0c;xij取1表示第i个人做第j项工作&amp;#xff0c;xij取0表示第i个人不做第j项工作&amp;#xff1b;&lt;/p&gt;\n\n&lt;p&gt;2. 目标函数 sum( Cij * xij ) 最小化&lt;/p&gt;\n\n&lt;p&gt;3. 约束条件&amp;#xff1a;第i个人最多做1项工作&amp;#xff0c;sum( xi ) &amp;lt;&amp;#61; 1&lt;/p&gt;\n\n&lt;p&gt;                      第j项工作有且仅有1人做&amp;#xff0c;sum( xj ) &amp;#61; 1&lt;/p&gt;\n\n&lt;p&gt;Matlab代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;% 目标函数\nC &amp;#61; [6 2 6 7 6\n    7 5 3 8 3\n    1 10 7 4 2\n    3 9 2 7 11\n    7 2 6 5 8\n    5 6 4 1 3];\nC2 &amp;#61; C&amp;#39;;\nf &amp;#61; C2(:); \n\n% 约束条件\n[n,m] &amp;#61; size(C);\nA &amp;#61;  kron( eye(n),ones(1,m) );   \nb &amp;#61; ones(n,1);\nAeq &amp;#61;  repmat( eye(m),1,n );\nbeq &amp;#61; ones(m,1);\nlb &amp;#61; zeros(m*n,1);   % 下限\nub &amp;#61; ones(m*n,1);    % 上限\n\nintcon &amp;#61; 1:m*n;\nx &amp;#61; intlinprog(f,intcon,A,b,Aeq,beq,lb,ub);\ny &amp;#61; f&amp;#39;*x\n\n% 显示结果\nfor ii &amp;#61; 1:n\n   disp([&amp;#39;第&amp;#39; num2str(ii)  &amp;#39;人&amp;#xff1a;&amp;#39;])\n   ind &amp;#61;  find( x( (ii-1)*m&amp;#43;(1:m) ) &amp;#61;&amp;#61; 1);\n   if isempty(ind)\n       disp(&amp;#39;无工作&amp;#39;)\n   else\n       disp([&amp;#39;第&amp;#39; num2str(ind)  &amp;#39;项工作&amp;#39;])\n   end\nend&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;总时间消耗\ny &amp;#61;\n\n     9\n\n第1人&amp;#xff1a;\n无工作\n第2人&amp;#xff1a;\n第5项工作\n第3人&amp;#xff1a;\n第1项工作\n第4人&amp;#xff1a;\n第3项工作\n第5人&amp;#xff1a;\n第2项工作\n第6人&amp;#xff1a;\n第4项工作&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab里用0-1整数线性规intlinprog求解 不会啊", ["\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果你的温度-时间曲线可以用分段函数来拟合&amp;#xff0c;那么你可以将分段函数的参数作为优化变量&amp;#xff0c;使用Levenberg–Marquardt算法对这些参数进行拟合&amp;#xff0c;从而得到最优的参数解。&lt;/p&gt;\n&lt;p&gt;具体来说&amp;#xff0c;你需要首先定义一个分段函数的模型&amp;#xff0c;比如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;piecewise_func&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;t, params&lt;/span&gt;):\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n    分段函数模型&amp;#xff0c;其中params是一个列表&amp;#xff0c;包含每个段的参数\n    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n    num_segments &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(params) // &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    result &amp;#61; np.zeros_like(t)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_segments):\n        offset &amp;#61; i * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n        a, b, c &amp;#61; params[offset:offset&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]\n        result[t &amp;gt;&amp;#61; a] &amp;#61; b * (t[t &amp;gt;&amp;#61; a] - a) &amp;#43; c\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的代码中&amp;#xff0c;我们假设分段函数有多个段&amp;#xff0c;每个段的参数包括一个起始时间 $a$&amp;#xff0c;一个斜率 $b$ 和一个截距 $c$&amp;#xff0c;并且将这些参数存储在一个列表 params 中。然后&amp;#xff0c;我们使用一个循环来逐个计算每个段的函数值&amp;#xff0c;并将它们组合起来得到整个分段函数的函数值。&lt;/p&gt;\n&lt;p&gt;接下来&amp;#xff0c;你可以使用 scipy.optimize.curve_fit 函数来对分段函数进行拟合。具体来说&amp;#xff0c;你需要将分段函数模型作为第一个参数传递给 curve_fit 函数&amp;#xff0c;并将时间和温度数据作为第二个和第三个参数传递进去。然后&amp;#xff0c;你需要给出每个分段的初始参数值&amp;#xff0c;将它们组合成一个初始参数列表&amp;#xff0c;并将它作为 p0 参数传递给 curve_fit 函数。最后&amp;#xff0c;你可以使用 method&amp;#61;&amp;#39;lm&amp;#39; 参数指定使用Levenberg–Marquardt算法进行拟合。&lt;/p&gt;\n&lt;p&gt;下面是一个示例代码&amp;#xff0c;其中分段函数有两个段&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; scipy.optimize &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; curve_fit\n\n&lt;span class=\"hljs-comment\"&gt;# 定义分段函数模型&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;piecewise_func&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;t, params&lt;/span&gt;):\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n    分段函数模型&amp;#xff0c;其中params是一个列表&amp;#xff0c;包含每个段的参数\n    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n    num_segments &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(params) // &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    result &amp;#61; np.zeros_like(t)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_segments):\n        offset &amp;#61; i * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n        a, b, c &amp;#61; params[offset:offset&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]\n        result[t &amp;gt;&amp;#61; a] &amp;#61; b * (t[t &amp;gt;&amp;#61; a] - a) &amp;#43; c\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n&lt;span class=\"hljs-comment\"&gt;# 生成一些数据&lt;/span&gt;\nt &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;])\ny &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;])\n\n&lt;span class=\"hljs-comment\"&gt;# 定义初始参数值&lt;/span&gt;\np0 &amp;#61; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;]\n\n&lt;span class=\"hljs-comment\"&gt;# 对分段函数进行拟合&lt;/span&gt;\nparams, _ &amp;#61; curve_fit(piecewise_func, t, y, p0&amp;#61;p0, method&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;lm&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-comment\"&gt;# 输出拟合结果&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;拟合结果 params 是一个包含每个分段的参数的列表。假设我们在上面的代码中使用了初始参数值 [2, 2, 20, 6, -2, 30]&amp;#xff0c;表示分段函数有两个段&amp;#xff0c;第一个段的起始时间为 2&amp;#xff0c;斜率为 2&amp;#xff0c;截距为 20&amp;#xff0c;第二个段的起始时间为 6&amp;#xff0c;斜率为 -2&amp;#xff0c;截距为 30。对这些初始参数进行拟合后&amp;#xff0c;可以得到最优的参数值&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(params)&lt;/span&gt;\n[2.0, 2.33333333, 20.66666667, 6.0, -2.0, 30.0]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以看到&amp;#xff0c;最优的参数值与初始参数值比较接近&amp;#xff0c;这说明Levenberg–Marquardt算法能够在较短的时间内得到较好的拟合结果。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请教采用Levenberg–Marquardt算法求非线性分段函数的参数", ["目前想用一个模型拟合一天的温度变化，模型如下，", "\n", "\n", "在保证已知六组以上温度-时间数值的情况下，如何采用Levenberg–Marquardt算法获得最优的参数解呢？", "已经搜索了网上的经验帖，但没有关于分段函数的讨论，还望解答", "\n", "（模型解释引自 孟翔晨, 刘昊, & 程洁. (2019). 基于FY-2F数据的中国区域地表温度日变化模型评价及特征研究. 遥感学报, 4, 570–581.）"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The benchmark was wrongly implemented, a correct version:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func BenchmarkRBTree_Put(b *testing.B) {\n    count := 0\n    grow := 1\n    for size := 0; size &amp;lt; 100000; size += 1 * grow {\n        if count%10 == 0 {\n            count = 1\n            grow *= 10\n        }\n        b.Run(fmt.Sprintf(\"size-%d\", size), func(b *testing.B) {\n            // prepare problem size\n            tree := NewRBTree(func(a, b interface{}) bool {\n                if a.(int) &amp;lt; b.(int) {\n                    return true\n                }\n                return false\n            })\n            for n := 0; n &amp;lt; size-1; n++ {\n                tree.Put(n, n)\n            }\n            b.ResetTimer()\n            for i := 0; i &amp;lt; b.N; i++ {\n                tree.Put(size, size) // only measure the last operation\n            }\n        })\n        count++\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://i.stack.imgur.com/MmZ4Q.png\" rel=\"nofollow noreferrer\"&gt;&lt;img src=\"https://i.stack.imgur.com/MmZ4Q.png\" alt=\"enter image description here\"&gt;&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["为什么我的红黑树实现基准显示线性时间复杂度？", ["\n\n", "The implementation basically follows ", "wiki", ". ", "\n\n", "Here is how I implemented the benchmark, in this case, it is benchmarking ", "Put", " op:", "\n\n", "func BenchmarkRBTree(b *testing.B) {\n    for size := 0; size < 1000; size += 100 {\n        b.Run(fmt.Sprintf(\"size-%d\", size), func(b *testing.B) {\n            tree := NewRBTree(func(a, b interface{}) bool {\n                if a.(int) < b.(int) {\n                    return true\n                }\n                return false\n            })\n            for i := 0; i < b.N; i++ {\n                for n := 0; n < size; n++ {\n                    tree.Put(n, n)\n                }\n            }\n        })\n    }\n}\n", "\n\n", "The benchmark results:", "\n\n", "BenchmarkRBTree/size-0-8              2000000000              0.49 ns/op               0 B/op          0 allocs/op\nBenchmarkRBTree/size-100-8                200000             11170 ns/op            7984 B/op        298 allocs/op\nBenchmarkRBTree/size-200-8                100000             26450 ns/op           15984 B/op        598 allocs/op\nBenchmarkRBTree/size-300-8                 50000             38838 ns/op           23984 B/op        898 allocs/op\nBenchmarkRBTree/size-400-8                 30000             55460 ns/op           31984 B/op       1198 allocs/op\nBenchmarkRBTree/size-500-8                 20000             62654 ns/op           39984 B/op       1498 allocs/op\nBenchmarkRBTree/size-600-8                 20000             80317 ns/op           47984 B/op       1798 allocs/op\nBenchmarkRBTree/size-700-8                 20000             91308 ns/op           55984 B/op       2098 allocs/op\nBenchmarkRBTree/size-800-8                 10000            106180 ns/op           63984 B/op       2398 allocs/op\nBenchmarkRBTree/size-900-8                 10000            121026 ns/op           71984 B/op       2698 allocs/op\n", "\n\n", "A visual line chart of ", "ns/op", ":", "\n\n", "\n\n", "Even I increase the problem size:", "\n\n", "BenchmarkRBTree/size-0-8              2000000000              0.50 ns/op               0 B/op          0 allocs/op\nBenchmarkRBTree/size-10000-8                1000           1622187 ns/op          799989 B/op      29998 allocs/op\nBenchmarkRBTree/size-20000-8                 500           3693875 ns/op         1599994 B/op      59998 allocs/op\nBenchmarkRBTree/size-30000-8                 300           5693788 ns/op         2399998 B/op      89998 allocs/op\nBenchmarkRBTree/size-40000-8                 200           7663705 ns/op         3199998 B/op     119998 allocs/op\nBenchmarkRBTree/size-50000-8                 200           9869095 ns/op         3999997 B/op     149998 allocs/op\nBenchmarkRBTree/size-60000-8                 100          12133795 ns/op         4799999 B/op     179998 allocs/op\nBenchmarkRBTree/size-70000-8                 100          15422763 ns/op         5599999 B/op     209998 allocs/op\nBenchmarkRBTree/size-80000-8                 100          16140037 ns/op         6399998 B/op     239998 allocs/op\nBenchmarkRBTree/size-90000-8                 100          18161217 ns/op         7199997 B/op     269998 allocs/op\n", "\n\n", "Visual chart:", "\n\n", "\n\n", "You can check the code in ", "Playground", ", or a lengthy version:", "\n\n", "type color uint32\n\nconst (\n    red color = iota\n    black\n)\n\ntype rbnode struct {\n    c      color\n    left   *rbnode\n    right  *rbnode\n    parent *rbnode\n    k, v   interface{}\n}\n\nfunc (n *rbnode) color() color {\n    if n == nil {\n        return black\n    }\n    return n.c\n}\n\nfunc (n *rbnode) grandparent() *rbnode {\n    return n.parent.parent\n}\n\nfunc (n *rbnode) uncle() *rbnode {\n    if n.parent == n.grandparent().left {\n        return n.grandparent().right\n    }\n    return n.grandparent().left\n}\n\nfunc (n *rbnode) sibling() *rbnode {\n    if n == n.parent.left {\n        return n.parent.right\n    }\n    return n.parent.left\n}\n\nfunc (n *rbnode) maximumNode() *rbnode {\n    for n.right != nil {\n        n = n.right\n    }\n    return n\n}\n\n// RBTree is a red-black tree\ntype RBTree struct {\n    root *rbnode\n    len  int\n    less Less\n}\n\n// Less returns true if a < b\ntype Less func(a, b interface{}) bool\n\n// NewRBTree creates a red-black tree\nfunc NewRBTree(less Less) *RBTree {\n    return &RBTree{less: less}\n}\n\n// Len returns the size of the tree\nfunc (t *RBTree) Len() int {\n    return t.len\n}\n\n// Put stores the value by given key\nfunc (t *RBTree) Put(key, value interface{}) {\n    var insertedNode *rbnode\n\n    new := &rbnode{k: key, v: value, c: red}\n    if t.root != nil {\n        node := t.root\n    LOOP:\n        for {\n            switch {\n            case t.less(key, node.k):\n                if node.left == nil {\n                    node.left = new\n                    insertedNode = node.left\n                    break LOOP\n                }\n                node = node.left\n            case t.less(node.k, key):\n                if node.right == nil {\n                    node.right = new\n                    insertedNode = node.right\n                    break LOOP\n                }\n                node = node.right\n            default: // =\n                node.k = key\n                node.v = value\n                return\n            }\n        }\n        insertedNode.parent = node\n    } else {\n        t.root = new\n        insertedNode = t.root\n    }\n    t.insertCase1(insertedNode)\n    t.len++\n}\n\nfunc (t *RBTree) insertCase1(n *rbnode) {\n    if n.parent == nil {\n        n.c = black\n        return\n    }\n    t.insertCase2(n)\n}\nfunc (t *RBTree) insertCase2(n *rbnode) {\n    if n.parent.color() == black {\n        return\n    }\n    t.insertCase3(n)\n}\nfunc (t *RBTree) insertCase3(n *rbnode) {\n    if n.uncle().color() == red {\n        n.parent.c = black\n        n.uncle().c = black\n        n.grandparent().c = red\n        t.insertCase1(n.grandparent())\n        return\n    }\n    t.insertCase4(n)\n\n}\nfunc (t *RBTree) insertCase4(n *rbnode) {\n    if n == n.parent.right && n.parent == n.grandparent().left {\n        t.rotateLeft(n.parent)\n        n = n.left\n    } else if n == n.parent.left && n.parent == n.grandparent().right {\n        t.rotateRight(n.parent)\n        n = n.right\n    }\n    t.insertCase5(n)\n}\nfunc (t *RBTree) insertCase5(n *rbnode) {\n    n.parent.c = black\n    n.grandparent().c = red\n    if n == n.parent.left && n.parent == n.grandparent().left {\n        t.rotateRight(n.grandparent())\n        return\n    } else if n == n.parent.right && n.parent == n.grandparent().right {\n        t.rotateLeft(n.grandparent())\n    }\n}\n\nfunc (t *RBTree) replace(old, new *rbnode) {\n    if old.parent == nil {\n        t.root = new\n    } else {\n        if old == old.parent.left {\n            old.parent.left = new\n        } else {\n            old.parent.right = new\n        }\n    }\n    if new != nil {\n        new.parent = old.parent\n    }\n}\n\nfunc (t *RBTree) rotateLeft(n *rbnode) {\n    right := n.right\n    t.replace(n, right)\n    n.right = right.left\n    if right.left != nil {\n        right.left.parent = n\n    }\n    right.left = n\n    n.parent = right\n}\nfunc (t *RBTree) rotateRight(n *rbnode) {\n    left := n.left\n    t.replace(n, left)\n    n.left = left.right\n    if left.right != nil {\n        left.right.parent = n\n    }\n    left.right = n\n    n.parent = left\n}\n\n// Get returns the stored value by given key\nfunc (t *RBTree) Get(key interface{}) interface{} {\n    n := t.find(key)\n    if n == nil {\n        return nil\n    }\n    return n.v\n}\n\nfunc (t *RBTree) find(key interface{}) *rbnode {\n    n := t.root\n    for n != nil {\n        switch {\n        case t.less(key, n.k):\n            n = n.left\n        case t.less(n.k, key):\n            n = n.right\n        default:\n            return n\n        }\n    }\n    return nil\n}\n\n// Del deletes the stored value by given key\nfunc (t *RBTree) Del(key interface{}) {\n    var child *rbnode\n\n    n := t.find(key)\n    if n == nil {\n        return\n    }\n\n    if n.left != nil && n.right != nil {\n        pred := n.left.maximumNode()\n        n.k = pred.k\n        n.v = pred.v\n        n = pred\n    }\n\n    if n.left == nil || n.right == nil {\n        if n.right == nil {\n            child = n.left\n        } else {\n            child = n.right\n        }\n        if n.c == black {\n            n.c = child.color()\n            t.delCase1(n)\n        }\n\n        t.replace(n, child)\n        if n.parent == nil && child != nil {\n            child.c = black\n        }\n    }\n    t.len--\n}\n\nfunc (t *RBTree) delCase1(n *rbnode) {\n    if n.parent == nil {\n        return\n    }\n\n    t.delCase2(n)\n}\nfunc (t *RBTree) delCase2(n *rbnode) {\n    sibling := n.sibling()\n    if sibling.color() == red {\n        n.parent.c = red\n        sibling.c = black\n        if n == n.parent.left {\n            t.rotateLeft(n.parent)\n        } else {\n            t.rotateRight(n.parent)\n        }\n    }\n    t.delCase3(n)\n}\nfunc (t *RBTree) delCase3(n *rbnode) {\n    sibling := n.sibling()\n    if n.parent.color() == black &&\n        sibling.color() == black &&\n        sibling.left.color() == black &&\n        sibling.right.color() == black {\n        sibling.c = red\n        t.delCase1(n.parent)\n        return\n    }\n    t.delCase4(n)\n}\nfunc (t *RBTree) delCase4(n *rbnode) {\n    sibling := n.sibling()\n    if n.parent.color() == red &&\n        sibling.color() == black &&\n        sibling.left.color() == black &&\n        sibling.right.color() == black {\n        sibling.c = red\n        n.parent.c = black\n        return\n    }\n    t.delCase5(n)\n}\nfunc (t *RBTree) delCase5(n *rbnode) {\n    sibling := n.sibling()\n    if n == n.parent.left &&\n        sibling.color() == black &&\n        sibling.left.color() == red &&\n        sibling.right.color() == black {\n        sibling.c = red\n        sibling.left.c = black\n        t.rotateRight(sibling)\n    } else if n == n.parent.right &&\n        sibling.color() == black &&\n        sibling.right.color() == red &&\n        sibling.left.color() == black {\n        sibling.c = red\n        sibling.right.c = black\n        t.rotateLeft(sibling)\n    }\n    t.delCase6(n)\n}\nfunc (t *RBTree) delCase6(n *rbnode) {\n    sibling := n.sibling()\n    sibling.c = n.parent.color()\n    n.parent.c = black\n    if n == n.parent.left && sibling.right.color() == red {\n        sibling.right.c = black\n        t.rotateLeft(n.parent)\n        return\n    }\n    sibling.left.c = black\n    t.rotateRight(n.parent)\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你已经求得垂直的向量为(i,-j,0*k)&amp;#xff0c;所以这个area&amp;#61;[1^2&amp;#43;(&amp;#xff0d;1)^2&amp;#43;0^2]的开方&amp;#61;2的开方&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Linear algebra, Cramer’s rule, inverses and volumes线性代数", ["\n", "In example 8, 为什么area = 根号2？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;都可以&amp;#xff0c;看你怎么去写&amp;#xff0c;你可以将指针放在第一个元素上&amp;#xff0c;这个是带头结点的&amp;#xff0c;不带头节点放在第一个元素之前&lt;br /&gt;你可以看我这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_51553982/article/details/115730247\" id=\"textarea_1649863461652_1649863604955_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_51553982/article/details/115730247&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性链表的插入算法的找位序是怎么初始化的？", ["为什么PPT上显示是j从0开始，书上位序是从1开始的 ，如果都是对的话，为什么会不一样呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先化简为最简阶梯型矩阵&amp;#xff0c;没有全为0的行&amp;#xff0c;即为满秩&amp;#xff0c;非满秩不可等价变为满秩&amp;#xff0c;你问错地儿了吧&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["线性代数，怎么把矩阵变为等价的行满秩矩阵？", ["怎么把矩阵变为等价的行满秩矩阵？", "怎么把矩阵变为等价的行满秩矩阵？", "怎么把矩阵变为等价的行满秩矩阵？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以像下面这样使用&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;areaStyle&lt;/code&gt;可以传递一个函数&amp;#xff0c;通过函数判断不同的折线图&amp;#xff0c;返回不同的渐变色&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; area &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Area&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;container&amp;#39;&lt;/span&gt;, {\n      data,\n      &lt;span class=\"hljs-attr\"&gt;xField&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;,\n      &lt;span class=\"hljs-attr\"&gt;yField&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;value&amp;#39;&lt;/span&gt;,\n      &lt;span class=\"hljs-attr\"&gt;color&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;],\n      &lt;span class=\"hljs-attr\"&gt;seriesField&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;country&amp;#39;&lt;/span&gt;,\n      &lt;span class=\"hljs-attr\"&gt;areaStyle&lt;/span&gt;:&lt;span class=\"hljs-function\"&gt;(&lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;)&amp;#61;&amp;gt;&lt;/span&gt;{\n        &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(d)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d.&lt;span class=\"hljs-property\"&gt;country&lt;/span&gt;&amp;#61;&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;北美&amp;#34;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;l(270) 0:#FFFFFF 1:#FF0000&amp;#39;&lt;/span&gt;}\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d.&lt;span class=\"hljs-property\"&gt;country&lt;/span&gt;&amp;#61;&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;中南美&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;fill&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;l(270) 0:#FFFFFF 1:#00FF00&amp;#39;&lt;/span&gt;}\n      }\n    });\n    area.&lt;span class=\"hljs-title function_\"&gt;render&lt;/span&gt;();\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;我这里的结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/884194375076125.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;觉得有用&amp;#xff0c;还请点赞收藏&amp;#xff01;&lt;br /&gt;励志前端&amp;#xff0c;CSDN唯一账号&amp;#xff01;关注我&amp;#xff0c;带你了解更多前端知识&amp;#xff01;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "线性规划简介", "Question": ["AntV G2Plot线性图若有多个填充色，怎么统一设置渐变", ["需求如下：", "\n", "当前实现：", "\n", "查看了官方文档（属实写的不易懂，比ant design写的还烂），也百度了很久，基本都是单线条的渐变，没有找到多线条渐变的案例。", "\n", "填充色color是可以用[]来进行赋值的，所以每个线条都有自己的填充色。", "但是渐变fill只支持单色（若放开注释，则两个线条的填充色都变成一样了），尝试了[]、{}等写法都不支持，请教一下熟悉g2plot的大拿这个玩意怎么实现。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;阅读理解&amp;#xff0c;说的是空间复杂度&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["为什么n/2是常数性的啊？n就是线性的", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;See &lt;a href=\"https://stackoverflow.com/questions/573674\"&gt;Looking for actively maintained matrix math library for php&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划简介", "Question": ["使用多个变量服务器为webapp求解线性方程？ 有可能与PHP？", ["\n\n", "I have a gerneral question on php. Hope its ok to ask here. ", "\n\n", "How would you solve a linear Equation with multiple variables in the web? maybe using Gaussian elimination or ... ? Is it possible with php and recommendable?", "\n\n", "1500 + 100 w                 = 10,000 s\n3000 + 1000 s                = 3000 w\n5000 + 2000 s + 100 w + 30 r = 150 r\n\n=>   s = 0,16 | w = 1,05 | r = 45,21\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;latent里的分类变量改写成  _Isex_1格式&amp;#xff0c;参照表格里的变量名&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["stata多元线性回归时系数集束法如何使用，对变量有何要求？", ["stata系数集束化到底要怎么使用？", "最重要的是我的操作为啥会错误？", "我真的想不明白呀😭😭", "\n"]], "Tag": "算法设计"}
{"Answer": "题目已经自己解答出来，只需要把\r\n\r\n```\r\nelse if(N % K == 0 &amp;&amp; N / K != 1)\r\n```\r\n的N% K==0删除即可\r\n应该说是N%K有余数也需要按照反转多次的办法来", "Konwledge_Point": "线性规划简介", "Question": ["PTA线性结构3 Reversing Linked List【直接贴答案将不予采纳，谢谢合作】", ["#include <iostream>\nusing namespace std;\n\nstruct Node\n{\n    int adrs;\n    int data;\n    int next;\n    struct Node* link;\n};\n\n\nNode* reverselink(struct Node* node, int K)\n{\n    struct Node* initnode = node;\n    struct Node* newnode = node -> link;\n    struct Node* oldnode = newnode -> link;\n    struct Node* temp;\n\n    int count = 1;\n\n    while(count < K)\n    {\n        temp = oldnode -> link;\n        oldnode -> link = newnode;\n        newnode = oldnode;\n        oldnode = temp;\n        count++;\n    }\n\n    initnode -> link -> link = oldnode;\n\n    return newnode;\n}\n\nvoid print(struct Node* initNode)\n{\n    while(initNode != NULL)\n    {\n        if(initNode -> link != NULL)\n        {\n            printf(\"%05d %d %05d\\n\", initNode -> adrs, initNode -> data, initNode -> link -> adrs);\n\n        }\n        else\n        {\n            printf(\"%05d %d %d\\n\", initNode -> adrs, initNode -> data, -1);\n        }\n\n        initNode  = initNode -> link;\n    }\n}\n\nint main()\n{\n    int start = 0;\n    int N = 0;\n    int K = 0;\n    scanf(\"%d %d %d\",&start, &N, &K);\n    int adrs = -1;\n    int cnt = 0;\n\n    int data[100000] = {0};\n    int next[100000] = {0};\n    while(cnt < N)\n    {\n        scanf(\"%d\", &adrs);\n        scanf(\"%d\", &data[adrs]);\n        scanf(\"%d\", &next[adrs]);\n        cnt++;\n    }\n    //解决多余结点\n    int actualNum = 0;\n    struct Node* initNode = new Node;\n    struct Node* prevNode = initNode;\n    struct Node* curNode = NULL;\n\n    for(int i = start; i <= 100000 && i != -1; )\n    {\n        curNode = new Node;\n        curNode -> data = data[i];\n        curNode -> adrs = i;\n        curNode -> next = next[i];\n        curNode -> link = NULL;//////\n        prevNode -> link = curNode;\n        prevNode = curNode;\n        i = next[i];\n        actualNum++;\n    }\n    cnt = 0;\n    N = actualNum;\n\n    curNode -> link = NULL;\n\n    if(K == 1)//直接输出\n    {\n        initNode = initNode -> link;\n    }\n    else if(K == N || (N / K == 1 && N % K != 0))//全反转  有尾巴不反转\n    {\n        initNode = reverselink(initNode, K);\n    }\n    else if(N % K == 0 && N / K != 1)\n    {\n        int count = 1;\n        int flag = 0;\n        struct Node* markNode = initNode;\n        struct Node* firstNode = initNode;\n        while(cnt < N / K)\n        {\n            initNode = reverselink(initNode, K);\n            markNode -> link = initNode;\n            cnt++;\n            while(count < K && cnt < N / K)\n            {\n                initNode = initNode -> link;\n                count++;\n            }\n            markNode = initNode;\n            count = 1;\n        }\n        initNode = firstNode -> link;\n    }\n    print(initNode);\n}\n", "\n\n", "\n\n", "\n\n", "请勿贴他人的代码，贴他人的代码及网址回答将不会采纳。"]], "Tag": "算法设计"}
{"Answer": "请看一下你的TestActivity中的第83行代码，那一行出现了空指针异常，先把空指针异常处理了，应该就没事了。\r\n一般情况下，出现error的话，都需要先找到错误的地方，一般都是看Caused by:......的下一行，会指出你的那一行代码出了什么问题，然后就可以去解决相应的异常！", "Konwledge_Point": "线性规划简介", "Question": ["向线性布局中动态添加textview出现闪退，代码如下，这是什么原因？？", ["protected void onActivityResult(int requestCode, int resultCode, Intent data) {", "\n        // TODO Auto-generated method stub", "\n        switch (requestCode) {", "\n        case 1:", "\n            if(resultCode==RESULT_OK){", "\n                personalNumber=data.getStringExtra(\"personal\");", "\n                allow=1;", "\n                Log.d(\"TestActivity\", personalNumber);", "\n\n", "            linearToLogin = (LinearLayout) findViewById(R.id.ll_to_login);\n            TextView firstTextView=new TextView(this);\n            firstTextView.setText(\"尊敬的：  \"+personalNumber);\n            firstTextView.setTextSize(16);\n            firstTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n            LinearLayout.LayoutParams view01Params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,\n                      ViewGroup.LayoutParams.WRAP_CONTENT);\n            ((ViewGroup) firstTextView.getParent()).removeView(firstTextView);\n             linearToLogin.addView(firstTextView,view01Params);\n\n            TextView welcomeTextView=new TextView(this);\n            welcomeTextView.setText(\"欢迎使用畅心停车\");\n            welcomeTextView.setTextSize(16);\n            welcomeTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n            LinearLayout.LayoutParams view02Params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,\n                      ViewGroup.LayoutParams.WRAP_CONTENT);\n            ((ViewGroup) welcomeTextView.getParent()).removeView(welcomeTextView);\n             linearToLogin.addView(firstTextView,view02Params);\n             Log.d(\"TestActivity布局\", \"填加完成\");\n        }\n        break;\n\n    default:\n        break;\n    }\n\n    这是logcat\n", "\n\n", "_"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;给出你的例子&amp;#xff0c;有可能行列式等于零了&amp;#xff0c;即方程非满秩。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["解3元线性方程组，为什么输出结果总是nan或者0（有什么其他问题可以随便提出来，xie）", ["\n", "#include<stdio.h>", "\n", "#include<math.h>", "\n", "int", " main()\n{\n    ", "int", " a,b,c,d,e,f,g,h,i,j,k,l;\n    scanf(", "\"%d %d %d %d\"", ",&a,&b,&c,&d);\n    scanf(", "\"%d %d %d %d\"", ",&e,&f,&g,&h);\n    scanf(", "\"%d %d %d %d\"", ",&i,&j,&k,&l);\n    \n    double D=", "0", ";\n    double E=", "0", ";\n    double F=", "0", ";\n    double G=", "0", ";\n                    \n    D=", "sqrt", "((a*f*k)+(b*g*i)+(c*e*j)-(c*f*i)-(b*e*k)-(g*j*a));\n    E=", "sqrt", "((d*f*k)+(b*j*l)+(h*j*c)-(c*f*l)-(g*j*d)-(k*b*h));\n    F=", "sqrt", "((a*h*k)+(d*g*i)+(c*e*l)-(c*h*i)-(g*l*a)-(d*e*k));\n    G=", "sqrt", "((a*f*l)+(b*h*i)+(e*j*d)-(d*f*i)-(e*b*l)-(a*h*j));\n    \n    ", "printf", "(", "\"x1=%lf\\n\"", ",E/D);\n    ", "printf", "(", "\"x2=%lf\\n\"", ",F/D);\n    ", "printf", "(", "\"x3=%lf\\n\"", ",G/D);\n    \n    ", "return", " ", "0", ";\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; namespace std;\n\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; swap(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *b) {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; *a;\n  *a &amp;#61; *b;\n  *b &amp;#61; t;\n}\n\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; selectionsort(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n) {\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min_idx &amp;#61; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[j] &amp;lt; a[min_idx])\n        min_idx &amp;#61; j;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (min_idx !&amp;#61; i)\n      swap(&amp;amp;a[min_idx], &amp;amp;a[i]);\n  }\n}\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; binarysearch(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;) {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; left &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, right &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (left &amp;lt;&amp;#61; right) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; (left &amp;#43; right) / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[m] &amp;lt; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;)\n      left &amp;#61; m &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[m] &amp;gt; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;)\n      right &amp;#61; m - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; m;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; main() {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; test[] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5658845&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4520125&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7895122&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8777541&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8451277&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1302850&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;8080152&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4568555&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5552012&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5050552&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7825877&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1250255&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;1005231&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6545231&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3852085&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7576651&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7881200&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4581002&lt;/span&gt;};\n  std::size_t size &amp;#61; sizeof(test) / sizeof(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;);\n  selectionsort(test, size);\n  cout &amp;lt;&amp;lt; &amp;#34;请输入要查找的账号&amp;#xff1a;&amp;#34;;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; account;\n  cin &amp;gt;&amp;gt; account;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;#61; binarysearch(test, size, account);\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;lt; size)\n    cout &amp;lt;&amp;lt; &amp;#34;合法账号&amp;#xff01;&amp;#34; &amp;lt;&amp;lt; endl;\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    cout &amp;lt;&amp;lt; &amp;#34;非法账号&amp;#xff01;&amp;#34; &amp;lt;&amp;lt; endl;\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["编程，让用户输入一个一个账号，检验该账号是否出现在下面的列表中。如果属于下面列表中的账号，则输出合法信息，否则输出非法信息。采用线性查找方法实现该程序。", ["\n", "5658845", "  ", "4520125", "  ", "7895122", "  ", "8777541", "  ", "8451277", "  ", "1302850", "  ", "80801524568555", "  ", "5552012", "  ", "5050552", "  ", "7825877", "  ", "1250255", "  ", "1005231", "  ", "65452313852085", "  ", "7576651", "  ", "7881200", "  ", "4581002", "\n", "1", "、算法分析\n先用选择排序法装饰所给的账号排序，然后采用二分查找算法检验输入账号的合法性。\n", "2", "、参考代码\n#include<iostream>\nusing namespace std", ";", "\nint binarysearch(int a[],int n=", "10", ",int value=", "0000000", ")", ";", "\nvoid selectionsort(int a[],int n=", "10", ")", ";", "\nint main()\n {    \nint test[]={", "5658845", ",", "4520125", ",", "7895122", ",", "8777541", ",", "8451277", ",", "1302850", ",", "8080152", ",", "4568555", ",", "5552012", ",", "5050552", ",", "7825877", ",", "1250255,1005231", ",", "6545231", ",", "3852085", ",", "7576651", ",", "7881200", ",", "4581002", "}", ";", "\nint accounts", ";selectionsort(test,18);", "\ncout<<”请输入要查找的账号：”", ";    ", "\ncin>>accounts", ";    ", "\nif(binarysearch(test,sizeof(test)/sizeof(test[", "0", "]),accounts))        \ncout<<”合法账号！”<<endl", ";    ", "\nelse        \ncout<<”非法账号！”<<endl", ";    ", "\nreturn ", "0", ";", "\n}\n//选择排序函数void selectionsort(int a[],int n)\n//二分查找函数int binarysearch(int a[],int n,int value)\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;小魔女参考了bing和GPT部分内容调写:&lt;br /&gt;二维数组是一种特殊的线性结构&amp;#xff0c;它是由一维数组组成的&amp;#xff0c;每个一维数组又可以看作是一个元素&amp;#xff0c;这些元素可以按照一定的顺序排列&amp;#xff0c;所以它是一种线性结构。但是&amp;#xff0c;二维数组也有一些特殊的特性&amp;#xff0c;比如可以通过行和列的索引来访问元素&amp;#xff0c;这种方式在一维数组中是不可能的&amp;#xff0c;所以有些人认为二维数组是非线性结构。&lt;/p&gt;\n&lt;p&gt;其实&amp;#xff0c;这个问题的答案取决于你如何定义线性结构和非线性结构。如果你把线性结构定义为只能按照一种顺序排列的数据结构&amp;#xff0c;那么二维数组就是线性结构&amp;#xff1b;如果你把线性结构定义为只能按照一种顺序排列&amp;#xff0c;但是可以通过行列索引访问元素的数据结构&amp;#xff0c;那么二维数组就是非线性结构。&lt;br /&gt;回答不易&amp;#xff0c;记得采纳呀。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["算法与数据结构问题。", ["二维数组到底是线性结构还是非线性结构?", "为什么网上搜索结果会有不同的答案"]], "Tag": "算法设计"}
{"Answer": "在布局中设置一个居中图片然后平时隐藏，等到加载的实现显示出来，把Recyclerview隐藏，等数据加载完成后，把图片隐藏，Recyclerview显示就行了", "Konwledge_Point": "线性规划简介", "Question": ["Recyclerview数据未加载前显示加载界面如何实现？", ["一个界面的数据用的Recyclerview线性布局加载数据，在数据没有得到前界面是空白一片，怎么实现在数据没加载完成前先让界面显示一个居中的加载图片"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;单脉冲通常指的是一种具有极窄脉冲宽度的信号&amp;#xff0c;通常用于雷达、通信和遥感等领域。单脉冲信号的特点是信号持续时间很短&amp;#xff0c;但是带宽较宽&amp;#xff0c;能够提供高分辨率的信息。&lt;/p&gt;\n&lt;p&gt;线性调频信号是一种特殊的信号形式&amp;#xff0c;其频率随时间线性变化。线性调频信号通常用于雷达、声纳、通信和遥感等领域&amp;#xff0c;用于距离和速度测量&amp;#xff0c;目标探测等应用。线性调频信号也称为chirp信号&amp;#xff0c;这是因为其频率随时间变化的形状类似于鸟叫声的形状。&lt;/p&gt;\n&lt;p&gt;因此&amp;#xff0c;单脉冲信号和线性调频信号是不同的信号类型&amp;#xff0c;但它们在雷达、通信和遥感等领域都有重要应用。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请问单脉冲是什么意思?", ["请问单脉冲是什么意思?单脉冲的概念是什么？包括线性调频信号吗？若不是，那请问线性调频信号叫什么呢？"]], "Tag": "算法设计"}
{"Answer": "你可以在这个layout的点击事件中，设置ImageView的setPressed(true),这样就可以在selector中因公pressed的设置了", "Konwledge_Point": "线性规划简介", "Question": ["Android中怎么让一个布局中所有控件都获得这个布局的点击状态", ["我在一个线性布局中有一个ImageView和一个TextView，怎么设置点击这个线性布局的时候ImageView处于选取状态，还有selector怎么设置"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一维数据有很多种&amp;#xff0c;python的一维列表&amp;#xff0c;一维元组&amp;#xff0c;集合等等&amp;#xff0c;c和Java的一维数组&lt;br /&gt;所以一维数据不一定是线性结构&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["一维数据为什么可以用集合表示？", ["一维数据不应该都是线性结构吗（百度也是这么说的）", "\n", "而集合是非线性结构，那为什么一维数据可以用集合表示"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;对于集中式卡尔曼滤波的信息物理系统&amp;#xff0c;可以通过对系统的状态估计值和测量值的误差进行分析来检测是否受到了线性欺骗攻击。通常可以计算出系统状态估计误差的均值和方差&amp;#xff0c;通过对比理论值和实际值&amp;#xff0c;判断是否存在线性欺骗攻击。&lt;/p&gt;\n&lt;p&gt;如果只有部分传感器受到了线性欺骗攻击&amp;#xff0c;可以采用一些特定的检测算法来确定是哪几个传感器受到了影响。常用的算法包括neighbors method和covariance consistency method等等&amp;#xff0c;其中neighbors method通过对相邻传感器的测量值进行比较来判断哪些传感器受到了欺骗攻击&amp;#xff0c;而covariance consistency method则分析系统的协方差矩阵是否存在不一致性来判断哪些传感器受到了影响。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["集中式信息物理系统安全检测", ["对于一个使用集中式卡尔曼滤波的信息物理系统，怎么检测系统是否受到了线性欺骗攻击？如果只有部分传感器受到了线性欺骗攻击，怎么检测出是哪几个？"]], "Tag": "算法设计"}
{"Answer": "建立一个类/结构体\r\nstudent s{\r\n\tstr Name;\r\n\tstr Number;\r\n\tstr Sex;\r\n\t....\r\n\tstudent * next;\r\n}\r\n删除、查找、追加、读入、排序这些操作都是一般线性链表的删除结点、查找结点、添加结点、调换链表顺序(推荐先遍历链表，将数值赋给其他数据结构(vector、数组)排序后建立新链表取代旧链表)操作\r\n\r\n需求分析：vs上可以画uml图", "Konwledge_Point": "线性规划简介", "Question": ["求解数据结构课程设计问题", ["学生成绩管理系统 ", "\n设计目的：", "\n1 掌握线性链表的建立。", "\n2 掌握线性链表的基本操作。", "\n3 掌握查找的基本算法。", "\n设计内容：", "\n　　利用线性链表实现学生成绩管理系统，具体功能：输入、输出、插入、删除、查找、追加、读入、显示、保存、拷贝、排序、索引、分类合计、退出，并能在屏幕上输出操作前后的结果。", "\n设计要求：", "\n1 写出系统需求分析,并建模。", "\n2  编程实现,界面友好。", "\n3  输出操作前后的结果。"]], "Tag": "算法设计"}
{"Answer": "举个例子，比如一个长度为10的表结构（已经排序过的），首先和第5位的元素进行比较，若目标值小于第5位上的元素，那么认为目标在第1位到第5位这个区间内，接着比较目标值和第3位的元素，如果是数组，也就是这里说的随机访问的结构，可以直接通过下标来访问第3位的元素，而对于链表来说，它始终要从第一个元素一个一个地遍历过来才能找到第3位的元素，由于这样的过程就使得二分查找变成了顺序查找", "Konwledge_Point": "线性规划简介", "Question": ["java集合二分查找算分", ["只有采用随机访问，二分查找才有意义，如果提供的是一个链表，binarySearch()就         自动的变成线性查找。没太理解这句话的意思。链表是有序集合，为什么二分查找用在链表上就变成线性查找？", "\n\n", "多谢各位老师指教。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&lt;a href=\"https://blog.csdn.net/weixin_39703468/article/details/116166887\"&gt;https://blog.csdn.net/weixin_39703468/article/details/116166887&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["使用matlab对干扰信号进行检测", ["使用连续均值消除法对线性扫频干扰进行检测，输出snr与检测概率关系曲线"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT &lt;/p&gt;\n&lt;p&gt;由于没有给出具体的线性方程组&amp;#xff0c;我无法给出实际的代码。但是&amp;#xff0c;解决线性方程组的一般步骤如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;将方程组表示成矩阵形式&lt;br /&gt;对矩阵进行初等行变换&amp;#xff0c;将其化为阶梯形式&lt;br /&gt;对阶梯形矩阵进行回代&amp;#xff0c;求出方程组的解向量&lt;br /&gt;在 C 语言中&amp;#xff0c;可以使用数组来表示矩阵和向量&amp;#xff0c;并编写循环来实现初等行变换和回代的操作。以下是一个简单的例子&amp;#xff0c;假设方程组如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;3x &amp;#43; 2y &amp;#43; z &amp;#61; 10&lt;br /&gt;x - y &amp;#43; 2z &amp;#61; -1&lt;br /&gt;2x &amp;#43; 3y - z &amp;#61; 7&lt;/p&gt;\n&lt;p&gt;可以将其表示成矩阵形式&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;[ 3 2 1 ][ x ] [ 10 ]&lt;br /&gt;[ 1 -1 2 ][ y ] &amp;#61; [ -1 ]&lt;br /&gt;[ 2 3 -1 ][ z ] [ 7 ]&lt;/p&gt;\n&lt;p&gt;然后使用 C 语言编写程序求解该方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;#include &amp;lt;stdio.h&amp;gt;\n\nvoid row_reduce(double &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;], double b[], int n) {\n    int i, j, k;\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        double pivot &amp;#61; &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[i][i];\n        for (j &amp;#61; i; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[i][j] /&amp;#61; pivot;\n        }\n        b[i] /&amp;#61; pivot;\n        for (k &amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; k &amp;lt; n; k&amp;#43;&amp;#43;) {\n            double factor &amp;#61; &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[k][i] / &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[i][i];\n            for (j &amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[k][j] -&amp;#61; factor * &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[i][j];\n            }\n            b[k] -&amp;#61; factor * b[i];\n        }\n    }\n}\n\nvoid back_substitute(double &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;], double b[], double x[], int n) {\n    int i, j;\n    for (i &amp;#61; n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--) {\n        double sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n        for (j &amp;#61; i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;) {\n            sum &amp;#43;&amp;#61; &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[i][j] * x[j];\n        }\n        x[i] &amp;#61; b[i] - sum;\n    }\n}\n\nint main() {\n    double &lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}, {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}, {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;}};\n    double b[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;};\n    double x[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    row_reduce(&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;, b, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n    back_substitute(&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;, b, x, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;Solution: (%f, %f, %f)\\n&amp;#34;&lt;/span&gt;, x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], x[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行该程序&amp;#xff0c;输出为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;Solution: (1.000000, -2.000000, 3.000000)&lt;br /&gt;即解向量为 (1, -2, 3)。您可以根据实际的线性方程组编写类似的程序&amp;#xff0c;进行求解。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["这个方程组用c语言怎么实现", ["这个种线性代数的方程用C语言怎么实现,具体参考的内容怎么实现"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;报错提示是没有找到该文件&amp;#xff0c;你看下你的相对路径&amp;#xff0c;有没有写对&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python中pd.read_csv出现错误", ["python 进行线性学习，使用read的时候读取不到是为什么呀？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;“Devil组”引证GPT后的撰写&amp;#xff1a;&lt;br /&gt;本代码演示了如何使用该方法求解经典的Korteweg-de Vries (KdV)方程。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% Korteweg-de Vries (KdV)方程的时间劈裂傅里叶谱方法求解&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 设置初始参数&lt;/span&gt;\nL &amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 区间长度&lt;/span&gt;\nN &amp;#61; &lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 离散点数&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(-L/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,L/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,N&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); x &amp;#61; x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:N); &lt;span class=\"hljs-comment\"&gt;% 离散空间点&lt;/span&gt;\nk &amp;#61; (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;/L)*[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:(N/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) (-N/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;):&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;% 离散波数&lt;/span&gt;\ntspan &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0.4&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 时间步长&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 初始条件&lt;/span&gt;\nu &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sech&lt;/span&gt;(x);\nut &amp;#61; fft(u);\n\n&lt;span class=\"hljs-comment\"&gt;% 声明时间劈裂傅里叶谱算法所需的线性算子和非线性算子&lt;/span&gt;\nA &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*k.^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\nB &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*fft(&lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(ifft(x)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n\n&lt;span class=\"hljs-comment\"&gt;% 声明存储解和时间向量的数组&lt;/span&gt;\nsol &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(tspan),&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(u));\nsol(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,:) &amp;#61; u;\nt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 时间劈裂傅里叶谱算法&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(tspan)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 隐式时间步长&lt;/span&gt;\n    t &amp;#61; tspan(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;);\n    dt &amp;#61; tspan(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - t;\n    &lt;span class=\"hljs-comment\"&gt;% 线性部分的时间步长&lt;/span&gt;\n    utstar &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(A*dt/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).*ut;\n    &lt;span class=\"hljs-comment\"&gt;% 非线性部分的时间步长&lt;/span&gt;\n    ustar &amp;#61; &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(ifft(utstar));\n    k1 &amp;#61; dt*B(utstar);\n    k2 &amp;#61; dt*B(utstar &amp;#43; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;*k1);\n    k3 &amp;#61; dt*B(utstar &amp;#43; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;*k2);\n    k4 &amp;#61; dt*B(utstar &amp;#43; k3);\n    ut &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(A*dt/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).*(utstar &amp;#43; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)*(k1&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*k2&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*k3&amp;#43;k4));\n    sol(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,:) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(ifft(ut));\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 绘制解的图像&lt;/span&gt;\nwaterfall(x,tspan,sol&amp;#39;), colormap([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]), view(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;)\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;), ylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;t&amp;#39;&lt;/span&gt;), zlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;u&amp;#39;&lt;/span&gt;)\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab关于时间劈裂傅立叶谱方法的程序", ["通过matlab软件，作用时间劈裂傅立叶谱方法求解非线性偏微分方程"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&amp;#xff1a;&lt;br /&gt;我可以提供一个 Matlab 程序来解决一维非线性偏微分方程组&amp;#xff0c;该方程组是一个双组分 GP 方程&amp;#xff0c;其中求解基态波函数。下面是程序的代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;% 求解双分量系统的一维非线性GP方程&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 使用虚时间传播方法&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 参数&lt;/span&gt;\ng &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Interaction strength&lt;/span&gt;\nmu &amp;#61; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Chemical potential&lt;/span&gt;\nL &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Spatial domain&lt;/span&gt;\nNx &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;^&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Number of grid points&lt;/span&gt;\ndx &amp;#61; L/Nx; &lt;span class=\"hljs-comment\"&gt;% Spatial step size&lt;/span&gt;\nx &amp;#61; dx*(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:Nx)&amp;#39;; &lt;span class=\"hljs-comment\"&gt;% Spatial grid&lt;/span&gt;\ndt &amp;#61; &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% Time step size&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 初始波函数&lt;/span&gt;\npsi1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*mu)*&lt;span class=\"hljs-built_in\"&gt;sech&lt;/span&gt;(x); &lt;span class=\"hljs-comment\"&gt;% Component 1&lt;/span&gt;\npsi2 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;*x; &lt;span class=\"hljs-comment\"&gt;% Component 2&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; [psi1, psi2]; &lt;span class=\"hljs-comment\"&gt;% Total wave function&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 时间演变&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5000&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% Kinetic energy operator&lt;/span&gt;\n    K1 &amp;#61; &lt;span class=\"hljs-number\"&gt;-0.5&lt;/span&gt;*(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/dx^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*(&lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(Nx&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(Nx,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(Nx&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));\n    K2 &amp;#61; K1;\n    K &amp;#61; kron(&lt;span class=\"hljs-built_in\"&gt;eye&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;), K1) &amp;#43; kron(&lt;span class=\"hljs-built_in\"&gt;flipud&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;eye&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)), K2);\n    &lt;span class=\"hljs-comment\"&gt;% Potential energy operator&lt;/span&gt;\n    V &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(g*(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(:,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;));\n    &lt;span class=\"hljs-comment\"&gt;% Time-evolution operator&lt;/span&gt;\n    U &amp;#61; expm(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*dt*(K&amp;#43;V));\n    &lt;span class=\"hljs-comment\"&gt;% Update wave function&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; U*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;% Normalize wave function&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;/norm(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 绘制每个分量的密度&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x, &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;r-&amp;#39;&lt;/span&gt;, x, &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(:,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;b-&amp;#39;&lt;/span&gt;);\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;);\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Density&amp;#39;&lt;/span&gt;);\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个程序使用了一种叫做 &amp;#34;虚时间演化&amp;#34; 的方法来求解 GP 方程。其中g为相互作用强度&amp;#xff0c;mu为化学势&amp;#xff0c;L为空间范围&amp;#xff0c;Nx为网格点数&amp;#xff0c;dx为空间步长&amp;#xff0c;dt为时间步长。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["有偿求 matlab解GP方程程序", ["一个双组分Gp方程（一维非线性偏微分方程组）求解基态波函数程序"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个你可以在csdn的下载里搜索相关的代码&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["有局放定位的程序吗？", ["有局放定位的程序吗？如线性阵列传感器，十字形阵列传感器，方形阵列传感器等"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1、没有非线性激活函数的神经网络&amp;#xff0c;不管多少层都无法解决非线性分类&lt;br /&gt;2、非线性激活函数越多&amp;#xff0c;那么网络的非线性拟合能力越强。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#神经网络#的问题，如何解决？", ["想问一下两层神经网络和三层神经网络哪一个可以解决非线性分类，并且讲解一下原因～"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;神经网络的权重就是训练出来的&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["是否可以利用神经网络来做权重分析？", ["当前有一个模型，该模型具有四个特征（a,b,c,d），另外有一个算法，输入是把a,b,c,d四个特征以及知识图谱中的知识点集合，输出是知识点结合的线性排序。现想请假各位大拿，四个特征的权重目前暂不可知，我是否可以利用神经网络的方法来对四个特征的权重做分析，进而得到相对科学、理想的知识点线性排序呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这不是很明显么&amp;#xff0c;D选项你列出来看看&amp;#xff0c;不就是 d-&amp;gt;e-&amp;gt;a-&amp;gt;b-&amp;gt;c-&amp;gt;f&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#数据结构#的问题，请各位专家解答！", ["这是一道关于算法的题，我一直不明白如何判断哪些数据元素集合具有线性结构，谁能帮我解答一下"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;本次提问扣除的有问必答次数&amp;#xff0c;将会以问答VIP体验卡&amp;#xff08;1次有问必答机会、商城购买实体图书享受95折优惠&amp;#xff09;的形式为您补发到账户。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;因为有问必答VIP体验卡有效期仅有1天&amp;#xff0c;您在需要使用的时候【私信】联系我&amp;#xff0c;我会为您补发。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Matlab中mosek求解器", ["关于非线性方程组的求解问题，运行到最后提示是求解器不适用，请教一下，一般出现这种情况是什么原因"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这个问题的回答你可以参考下: &lt;a href=\"https://ask.csdn.net/questions/7731194?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/7731194&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;这篇博客也不错, 你可以看下&lt;a href=\"https://blog.csdn.net/yajunxuexi000/article/details/120712004?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;matlab微分方程求解并仿真&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;您还可以看一下 &lt;a href=\"https://blog.csdn.net/tgzssir\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;苏金明&lt;/font&gt;&lt;/a&gt;老师的&lt;a href=\"https://edu.csdn.net/course/detail/24733?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;MATLAB偏微分方程数值解&lt;/font&gt;&lt;/a&gt;课程中的 &lt;a href=\"https://edu.csdn.net/learn/24733/279814?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;计算&lt;/font&gt;&lt;/a&gt;小节, 巩固相关知识点&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB仿真微分方程组", ["非线性，需要用MATLAB仿真出来，仿真不出来，不知道什么原因，请求各位的帮助，感谢各位的帮助！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/426341995666170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;&amp;gt; res&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n   &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i_count&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n   &lt;span class=\"hljs-keyword\"&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;&amp;gt;&amp;gt;ans;\n   &lt;span class=\"hljs-keyword\"&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;&amp;gt; childans;\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;res.&lt;span class=\"hljs-keyword\"&gt;size&lt;/span&gt;();i&amp;#43;&amp;#43;)\n   {\n       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i_count&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)\n       {\n           ans.push_back(childans);\n           childans.&lt;span class=\"hljs-keyword\"&gt;clear&lt;/span&gt;();\n           i_count&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n       }\n       childans.push_back(res[i]);\n       i_count&amp;#43;&amp;#43;;\n   }\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(childans.&lt;span class=\"hljs-keyword\"&gt;size&lt;/span&gt;()!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n   {\n       ans.push_back(childans);\n   }\n\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;ans.&lt;span class=\"hljs-keyword\"&gt;size&lt;/span&gt;();&amp;#43;&amp;#43;i)\n   {\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;ans[i].&lt;span class=\"hljs-keyword\"&gt;size&lt;/span&gt;();&amp;#43;&amp;#43;j)\n       {\n           cout&amp;lt;&amp;lt;ans[i][j];\n       }\n       cout&amp;lt;&amp;lt;endl;\n   }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["算法设计与分析  中的  选择问题", ["选择问题中，如果分组为7个数一-组，能否在线性时间内完成?列出递推公式，并求解。"]], "Tag": "算法设计"}
{"Answer": "求采纳，求C币\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201908/02/1564724157_798890.png)", "Konwledge_Point": "线性规划简介", "Question": ["矩阵内积运算方法？。", ["请问红线部分是什么运算原理呢。。学过线性代数依然看不懂这个计算方法"]], "Tag": "算法设计"}
{"Answer": "http://bbs.csdn.net/topics/391979780", "Konwledge_Point": "线性规划简介", "Question": ["fragment加了recycleView中就转换不了。", ["报错是E/RecyclerView: No adapter attached; skipping layout", "\n这个是什么意思？？？？", "\n求大神指点。", "\n布局只是线性布局里加了个recycleview"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;你的p1是空的啊。&lt;br /&gt;读入音频请用audioread函数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;此 MATLAB 函数 从名为 filename 的文件中读取数据&amp;#xff0c;并返回样本数据 y 以及该数据的采样率 &lt;span class=\"hljs-built_in\"&gt;Fs&lt;/span&gt;。\n[y,&lt;span class=\"hljs-built_in\"&gt;Fs&lt;/span&gt;] &amp;#61; audioread(filename)\n[y,&lt;span class=\"hljs-built_in\"&gt;Fs&lt;/span&gt;] &amp;#61; audioread(filename,samples)\n[y,&lt;span class=\"hljs-built_in\"&gt;Fs&lt;/span&gt;] &amp;#61; audioread(___,dataType)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB出现索引超过矩阵维度", ["各位大神们，这个范围该取多少，取一帧320样点的语音信号，分析十二阶的线性预测系数，后面的参数有没有问题。", "\n"]], "Tag": "算法设计"}
{"Answer": "答案是 1.6", "Konwledge_Point": "线性规划简介", "Question": ["已知线性表 22 15 36 40 63", ["已知线性表 22 15 36 40 63，用Hash(x) = x mod 7作为散列函数，用线性探查法作为冲突处理，求平均查找长度。"]], "Tag": "算法设计"}
{"Answer": "看了一天的百度，我要是老板，我觉得你是故意的。\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201709/02/1504341379_376173.png)\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201709/02/1504341412_143392.png)", "Konwledge_Point": "线性规划简介", "Question": ["求C#实现PCA算法的例子", ["求C#实现PCA算法的例子，PCA为主成分分析，", "\n看了一天的百度，然而线性代数的知识完全不记得了。", "\n求各位大神指点迷津，万分感谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你用的LinearLayout把&amp;#xff1f;而且你还设置了方向是Horizontal&amp;#xff0c;它表示水平排列&amp;#xff0c;超出屏幕视野范围了&amp;#xff0c;移到屏幕外面了。&lt;/p&gt;\n&lt;p&gt;你如果用的就是LinearLayout八你的xml的orientation的Horizontal改成vertical就行了。&lt;/p&gt;\n&lt;p&gt;望采纳。懂了吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Android studio编辑活动界面内容缺失", ["我快捷拖选了图片，输入框，按钮进行编辑，但发现活动界面只有图片没有其他的内容，这怎么解决呢？", "难道是更改线性排列的错误吗？", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这个方程右端没有出现关于t的函数&amp;#xff0c;所以可以称作&lt;strong&gt;三元一阶线性非齐次自治方程组&lt;/strong&gt;&amp;#xff0c;这里不存在静定和超静定问题【静定超静定是只的结构是否过约束】&lt;br /&gt;三元&amp;#xff1a;y1 y2 y3&lt;br /&gt;一阶&amp;#xff1a;最高阶为时间的一阶导数&lt;br /&gt;线性&amp;#xff1a;最高阶的幂为1次&lt;br /&gt;非齐次&amp;#xff1a;右端常数项不为0&lt;br /&gt;自治&amp;#xff1a;所有导数项均不包含时间项t&lt;br /&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["微分方程组的类型判断", ["\n", "问题：", "这微分方程组是什么微分方程组呀？", "一元非线性非齐次微分方程组吗？还是超静定微分方程组？搞不懂这个名字叫什么"]], "Tag": "算法设计"}
{"Answer": "N年以前的autocad可以导出一种文本格式，另存为就可以。但是现在已经忘记是什么扩展名了。从这种文件中可以看出矢量图的格式。我们那个时候做GIS，将autocad文件生成我们自己的gis图形文件。你可以试试，这个功能应该还保留着，分析这个文本文件当然是很艰苦的事情，但是可以从文档中找到一些提示。那时候我们做成了，可惜这个项目因为架构的原因搁浅了。\r\n楼主的这个问题使我想起了当年编程的时候...", "Konwledge_Point": "线性规划简介", "Question": ["AutoCAD怎样导出矢量图形数据", ["具体说明如下：", "\n\n", "使用AutoCAD绘制的线性地图（类似googlemap的样子），将其中的图形数据读出，", "\n生成指定的矢量图形格式。", "\n\n", "然后导出的矢量图形用于二次开发，最后在web页面中显示图形输出。", "\n\n", "望详解！", "\n\n", "[b]问题补充：[/b]", "\n具体说明如下：", "\n\n", "使用AutoCAD绘制的线性地图（类似googlemap的样子），将其中的图形数据读出，", "\n生成指定的矢量图形格式。", "\n\n", "然后导出的矢量图形用于二次开发，最后在web页面中显示图形输出。", "\n\n", "望详解！", "\n\n", "主要是用于web的矢量图形格式，理想格式是svg。", "\n目前发现一国外转换工具，但注册费很贵，求开源方案"]], "Tag": "算法设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/202004/27/1587918519_611968.png)\r\n看这个图，比如说先序遍历\r\n传统的，每个节点存储左右孩子（蓝色线）\r\n1-&gt;2-&gt;3没问题，3回不到2了。怎么办，需要在访问2的时候，把2放入堆栈。访问完3，左右都没有孩子了，此路走完，再到堆栈里面找2，才能到4。\r\n类似的，4到1也不能直接连上。6到5也不能连上。\r\n怎么办？\r\n增加一个\"线索\"，红色的箭头，在3的节点上指向2，4指向1，6指向5。\r\n这样，不需要堆栈就可以遍历了。\r\n![图片说明](https://img-ask.csdn.net/upload/202004/27/1587919159_128982.png)\r\n没有线索，遍历需要4个序列。\r\n现在用红色绳子把这4列串成一条线，这就是线索。\r\n什么地方需要添加“线索”？没有左右孩子的节点，所以为了节约存储，可以把线索和孩子的节点放在同样的存储单元，用一个flag区分，是孩子还是线索。", "Konwledge_Point": "线性规划简介", "Question": ["这是一个关于数据结构二叉树的内容", ["线索二叉树怎么充分利用了剩余结点呢？把剩余结点记录前驱后继，有什么效果呢？", "\n课本上说，把树形逻辑变为线性逻辑，这一点如何体现的呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;以你目前的数学基础够了&amp;#xff08;不是说真的就够了&amp;#xff0c;而是你继续做题&amp;#xff0c;题目基本上都是理想情况&amp;#xff0c;实际应用真需要推理的话难度比这个大多了。&amp;#xff09;你需要的是打代码了&amp;#xff0c;实现推理过程你会发现更多的细节问题&amp;#xff0c;一边实现一边学&amp;#xff0c;闭门造车可不行。&lt;br /&gt;而实际应用过程基本上不会涉及到推理公式&amp;#xff0c;一般都是用的现成第三方库&amp;#xff0c;各种框架&amp;#xff0c;像反向传播&amp;#xff0c;根本不需要你自己去推理过程&amp;#xff0c;但是需要你知道遇到什么问题该用哪种方法&amp;#xff0c;调哪些库。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["问一下学习机器学习需要什么数学基础", ["问一下学习机器学习需要什么数学基础，高等数学线性代数概率论最基本的三本书已经看完了，也能做出来考研的题，但是推算法相关的公式还是有点费劲"]], "Tag": "算法设计"}
{"Answer": "我觉得，X，Y是多少数据并没有关系，首先列两个方程a*e^bx1=y1,a*e^bx2=y2，根据这两个式子求出a和b，然后带入a*e^bx3看是否等于y3，如果相等就有指数关系，不相等就没有关系。", "Konwledge_Point": "线性规划简介", "Question": ["求解MATLAB的编程，数据图像的处理", ["请问用MATLAB处理数据，已知X,Y，分别有12个数，假设他们之间有线性关系，检测他们是否有指数关系y=ae^b*x,怎么编写代码？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的邮箱&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["IMSL for C 7.0 安装包", ["您好，看到您有分享 IMSL CNL 7.0.0 for Visual C++ 2008 (x86-64) Crack 文件，", "想用IMSL for C 求解非线性方程组，请问您还留着 IMSL CNL 7.0.0 安装包吗？"]], "Tag": "算法设计"}
{"Answer": "http://download.csdn.net/download/lming_08/7035195\r\nhttp://download.csdn.net/download/u014443759/8296347\r\nhttp://download.csdn.net/download/erlongz/5815557\r\n`采纳本回答可以代下载以上程序`", "Konwledge_Point": "线性规划简介", "Question": ["一直空间中圆柱的点云数据，如何估计圆柱的7个参数", ["查询百度大致告诉我可以用LM算法，非线性最小二乘法，还有用RANSAC方法，", "\n从数学角度而言出入参数为3个，估计参数为7个，有若干样本数据，应该采用什么方法、", "\n搞笑准确。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性回归吗&amp;#xff1f;为什么你的线性回归出来的线是这样的&amp;#xff1f;数据和代码要不做个网盘链接&amp;#xff0c;我试试&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["生物SPO2数据拟合问题", ["红色的为原始数据，blue是我用一元线性回归 Y = w X + b 拟合出来的，但效果不理想，可能还需要kalman滤波来平滑曲线，或者采取分段拟合等", "快有30万个点。", "额 外 报 酬 可 以再细谈。谢谢", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;使用PIL库和opencv应该可以实现的&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["怎样在YOLOv5输出视频帧中叠加线条？", ["目前做到：", "运行detect.py生成txt文件，在txt文件中保存了检测框底边中点的坐标。", "想利用这些坐标进行线性拟合，如何将拟合出的线叠加到视频帧中，让他们同时输出出来？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;用MATLAB中的imresize和flipud函数。&lt;br /&gt;首先&amp;#xff0c;使用你提供的代码生成马赫带图案。然后&amp;#xff0c;我们可以使用imresize函数将图像调整为200x200像素。最后&amp;#xff0c;我们可以使用flipud函数将图像上下翻转。现在&amp;#xff0c;你可以将生成的图像保存为PNG或其他图像格式&lt;/p&gt;\n&lt;p&gt;完整的MATLAB代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;imagesc(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)\ncolormap(&lt;span class=\"hljs-name\"&gt;gray&lt;/span&gt;)\nim &amp;#61; getframe(&lt;span class=\"hljs-name\"&gt;gca&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nim &amp;#61; imresize(&lt;span class=\"hljs-name\"&gt;im&lt;/span&gt;.cdata, [&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;])&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nim &amp;#61; flipud(&lt;span class=\"hljs-name\"&gt;im&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nimwrite(&lt;span class=\"hljs-name\"&gt;im&lt;/span&gt;, &amp;#39;mach_band.png&amp;#39;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用matlab绘制特定的马赫带", ["要求：绘制视觉马赫带图案，大小为200x200，共有10条亮度带，从左向右亮度线性递减", "imagesc（1：9）", "colormap（gray）", "完全初学 知道简单的如何生成 但不知道生成之后如何调整大小且如何反转图片"]], "Tag": "算法设计"}
{"Answer": "chomd 777 + 文件夹名字", "Konwledge_Point": "线性规划简介", "Question": ["请问怎么解决vim编辑文件想存到指定文件夹的权限问题", ["1、", "\n2、学习使用ubuntuC++编程看那本书好", "\n3、张量变换矩阵应该是看线性代数的哪个部分"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;应该是 bytes 数据错了。&lt;br /&gt;是不是读入为 3 通道彩色图片&amp;#xff0c;而 bytes 只计算了 H*W?&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["C#数字图像处理点运算图像不全", ["C#数字图像处理中的直方图变换，进行变换后只有一部分图像完成了变换，但灰度直方图显示已经完成了变换。请问以下如何解决这个显示问题", "\n", "\n", "\n", "\n", "部分源码如下：", "\n", "\n", "用的时线性变换，y=-x+255"]], "Tag": "算法设计"}
{"Answer": "(int)-0.5=-1\r\n这个才是科学的，因为int永远是找比自身小的最大整数。\r\n\r\njava需要判断\r\ndouble d = -0.5;\r\nint r = d &gt; 0? (int)d : (int)d - 1;", "Konwledge_Point": "线性规划简介", "Question": ["C中，(int)-0.5=-1,java中,(int)-0.5=0;java有没有类似算法", ["C的这种方法的浮点整数映射上是线性的，java的方法在0附近将发生重叠，这样的话，在实数域处理问题要分类讨论，不方便。", "\n方法好像有Math.floor()，不知道还有没有简单的表达式"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这就是简单的求常微分方程&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/lynn15600693998/article/details/86597068\" id=\"textarea_1666061683557_1666062184834_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/lynn15600693998/article/details/86597068&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#matlab#的问题：kf、kn、c、h已知且为常数，i为随时间变化的函数且与x无关但i的所有值都知道", ["\n", "\n", "kf、kn、c、h已知且为常数，i为随时间变化的函数且与x无关但i的所有值都知道，这样的一个非线性方程可以求出来吗？我需要每个时刻的x的值（有偿解题）"]], "Tag": "算法设计"}
{"Answer": "可以的。", "Konwledge_Point": "线性规划简介", "Question": ["关于遗传算法应用的问题求解", ["原因集合A导致结果B。", "\n原因集合A1导致结果B1。", "\n原因集合A2导致结果B2。", "\n原因集合A3导致结果B3。", "\n。。。。。", "\n是否可以根据遗传算法，求出原因状态A、A1、A2、A3...之间的非线性函数关系？？？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性方程组写成 A*x &amp;#61; b形式&amp;#xff0c;A非奇异时&amp;#xff0c;解为 x &amp;#61; A \\ b&amp;#xff0c;代码&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;A &amp;#61; [3 6 4\n     1 5 0\n     0 7 7];\nb &amp;#61; [1;2;3];\nx &amp;#61; A\\b\nb2 &amp;#61; A*x&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;x &amp;#61;\n\n   -0.5824\n    0.5165\n   -0.0879\n\n\nb2 &amp;#61;\n\n    1.0000\n    2.0000\n    3.0000&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请问这个怎么做呀，需要哪方面的知识啊！", ["用\\运算解以下线性方程组，计算并显示误差向量。\n3a+6b+4c=1\na+5b=2\n7b+7c=3"]], "Tag": "算法设计"}
{"Answer": "&lt;h3 id=\"h3_5日的数据_1654588735945\"&gt;5日的数据&lt;/h3&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pprint\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; re\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; requests\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; csv\n\nf &amp;#61; &lt;span class=\"hljs-keyword\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;data.csv&amp;#39;&lt;/span&gt;, mode&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;, newline&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\ncsv_writer &amp;#61; csv.DictWriter(f, fieldnames&amp;#61;[\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;日期&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;时间&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;价格&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;均价&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;成交&amp;#39;&lt;/span&gt;,\n])\ncsv_writer.writeheader()\nurl &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;https://stock2.finance.sina.com.cn/futures/api/jsonp.php/var%20t5nf_SP0&amp;#61;/InnerFuturesNewService.getFourDaysLine?symbol&amp;#61;SP0&amp;#39;&lt;/span&gt;\nheaders &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;user-agent&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36&amp;#39;&lt;/span&gt;\n}\nhtml_data &amp;#61; requests.&lt;span class=\"hljs-keyword\"&gt;get&lt;/span&gt;(url&amp;#61;url, headers&amp;#61;headers).text\ncontent &amp;#61; re.findall(&lt;span class=\"hljs-string\"&gt;&amp;#39;var t5nf_SP0&amp;#61;\\((.*?)\\);&amp;#39;&lt;/span&gt;, html_data)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]\ncontent_1 &amp;#61; re.findall(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\[(.*?)\\],&amp;#39;&lt;/span&gt;, content)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; content_1:\n    info_list &amp;#61; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt;.split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\n    date_time &amp;#61; info_list[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;).replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;[&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    price &amp;#61; info_list[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    price_1 &amp;#61; info_list[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    clinch &amp;#61; info_list[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;].replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; len(info_list) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        &lt;span class=\"hljs-type\"&gt;date&lt;/span&gt; &amp;#61; info_list[&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;].replace(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    dit &amp;#61; {\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;日期&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-type\"&gt;date&lt;/span&gt;,\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;时间&amp;#39;&lt;/span&gt;: date_time,\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;价格&amp;#39;&lt;/span&gt;: price,\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;均价&amp;#39;&lt;/span&gt;: price_1,\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;成交&amp;#39;&lt;/span&gt;: clinch,\n    }\n    csv_writer.writerow(dit)\n    print(dit)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/024096885456142.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;h3 id=\"h3_年线数据_1654588735989\"&gt;年线数据&lt;/h3&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import requests\nimport re\nimport json\nimport csv\n\nf &amp;#61; open(&lt;span class=\"hljs-string\"&gt;&amp;#39;年线data.csv&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;mode&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;encoding&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;newline&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\ncsv_writer &amp;#61; csv.DictWriter(f, fieldnames&amp;#61;[\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;日期&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;开盘&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;最高&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;最低&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;收盘&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;成交量&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;均价&amp;#39;&lt;/span&gt;,\n])\ncsv_writer.writeheader()\nurl &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;https://stock2.finance.sina.com.cn/futures/api/jsonp.php/var%20_SP02022_6_7&amp;#61;/InnerFuturesNewService.getDailyKLine?symbol&amp;#61;SP0&amp;amp;_&amp;#61;2022_6_7&amp;#39;&lt;/span&gt;\nheaders &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;user-agent&amp;#39;&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.54 Safari/537.36&amp;#39;&lt;/span&gt;\n}\nhtml_data &amp;#61; requests.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;url&lt;/span&gt;&amp;#61;url, &lt;span class=\"hljs-attribute\"&gt;headers&lt;/span&gt;&amp;#61;headers).text\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(html_data)\ncontent &amp;#61; re.findall(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\{(.*?)\\}&amp;#39;&lt;/span&gt;, html_data)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; index &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; content:\n    index_dict &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;{&amp;#39;&lt;/span&gt; &amp;#43; index &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;}&amp;#39;&lt;/span&gt;\n    dit &amp;#61; json.loads(index_dict)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(dit)\n    dit_content &amp;#61; {\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;日期&amp;#39;&lt;/span&gt;: dit[&lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;开盘&amp;#39;&lt;/span&gt;: dit[&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;最高&amp;#39;&lt;/span&gt;: dit[&lt;span class=\"hljs-string\"&gt;&amp;#39;h&amp;#39;&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;最低&amp;#39;&lt;/span&gt;: dit[&lt;span class=\"hljs-string\"&gt;&amp;#39;l&amp;#39;&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;收盘&amp;#39;&lt;/span&gt;: dit[&lt;span class=\"hljs-string\"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;成交量&amp;#39;&lt;/span&gt;: dit[&lt;span class=\"hljs-string\"&gt;&amp;#39;v&amp;#39;&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;均价&amp;#39;&lt;/span&gt;: dit[&lt;span class=\"hljs-string\"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;],\n    }\n    csv_writer.writerow(dit_content)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(dit)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/428537885456161.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["PowerBI或python获取新浪财经期货线图或数据", ["请教列位dd，想在PowerBI里直接显示这张图，但是目前看来好像不行，所以想请教是否有python的dd能帮忙获取这个接口帮忙取出每日结算价格呢，方式方法不限，或者由PBI的dd能直接帮我show出这样图标或者线性数据或者表格数据都可以。", "\n", "网址如下：", "https://finance.sina.com.cn/futures/quotes/SP0.shtml", "类别：纸浆（SP0）", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;替换成其他激活函数理论上是可以的&amp;#xff0c;不过也有可能无法收敛&amp;#xff0c;最好是高次的非线性函数&amp;#xff0c;这样才好拟合&lt;/p&gt;\n&lt;p&gt;pytorch实现的话&amp;#xff0c;参考李沐老师的系列教程应该就差不多了&amp;#xff1a;&lt;a href=\"https://www.bilibili.com/video/BV1hh411U7gn\" id=\"textarea_1654651402983_1654651919324_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;10 多层感知机 &amp;#43; 代码实现 - 动手学深度学习v2_哔哩哔哩_bilibili&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;动手学深度学习 v2 - 从零开始介绍深度学习算法和代码实现课程主页&amp;#xff1a;https://courses.d2l.ai/zh-v2/教材&amp;#xff1a;https://zh-v2.d2l.ai/&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://www.bilibili.com/video/BV1hh411U7gn&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;课程主页&amp;#xff1a;&lt;a href=\"https://courses.d2l.ai/zh-v2/\" id=\"textarea_1654651402983_1654651919324_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://courses.d2l.ai/zh-v2/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;教材&amp;#xff1a;&lt;a href=\"https://zh-v2.d2l.ai/\" id=\"textarea_1654651402983_1654651919324_2\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://zh-v2.d2l.ai/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于Pytorch中神经网络自定义的问题", ["现在想尝试在一个单个隐藏层的神经网络中。把传统的线性权重\"WX+b\"加上激活函数的复合函数, 替换成任意高次函数f(x)（例如\"Ax^3+Bx^2+Cx+d\"）,然后进行前向传播与反向传播请问是否可行。求相关的理论参考与pytorch实现的相关资料？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;(1) 要证明$T_a$是群$GL_n(R)$的自同构&amp;#xff0c;需满足以下三个条件&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&lt;p&gt;T_a是一个映射&amp;#xff1a;即对于任意A\\in GL_n(R)&amp;#xff0c;$T_a(A)都是一个GL_n(R)中的矩阵。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;T_a是一个同态&amp;#xff1a;即对于任意A,B\\in GL_n(R)&amp;#xff0c;有T_a(AB)&amp;#61;T_a(A)T_a(B)。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;T_a是一个双射&amp;#xff1a;即$T_a$是一个一一映射&amp;#xff0c;并且它的逆映射T_a^{-1}也是一个映射。&lt;br /&gt;首先证明条件1&amp;#xff1a;对于任意A\\in GL_n(R)&amp;#xff0c;T_a(A)都是一个GL_n(R)中的矩阵。显然T_a(A)的行列式为&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;|T_a(A)|&amp;#61;|BA(B^{-1})|&amp;#61;|B||A||B^{-1}|&amp;#61;|A|&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;由于A\\in GL_n(R)&amp;#xff0c;所以|A|\\neq 0&amp;#xff0c;即T_a(A)\\in GL_n(R)。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;接着证明条件2&amp;#xff1a;对于任意A,B\\in GL_n(R)&amp;#xff0c;有T_a(AB)&amp;#61;T_a(A)T_a(B)。由于&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;T_a(AB)&amp;#61;BAB^{-1}&amp;#61;BT_a(A)B^{-1}&amp;#61;T_a(A)T_a(B)&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;因此T_a是一个同态。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;最后证明条件3&amp;#xff1a;$T_a$是一个双射。首先证明T_a是一个单射&amp;#xff0c;即对于任意A,B\\in GL_n(R)&amp;#xff0c;如果T_a(A)&amp;#61;T_a(B)&amp;#xff0c;则A&amp;#61;B。有&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;T_a(A)&amp;#61;T_a(B)\\Rightarrow BAB^{-1}&amp;#61;A\\Rightarrow BA&amp;#61;AB&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;因为B\\in GL_n(R)&amp;#xff0c;所以B^{-1}存在&amp;#xff0c;因此可以从左右两侧同时乘以B^{-1}得到A&amp;#61;B。因此T_a是一个单射。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;接着证明T_a是一个满射&amp;#xff0c;即对于任意A\\in GL_n(R)&amp;#xff0c;都存在一个B\\in GL_n(R)&amp;#xff0c;使得T_a(B)&amp;#61;A。可以取B&amp;#61;a^{-1} A a&amp;#xff0c;则有&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;T_a(B)&amp;#61;BaB^{-1}&amp;#61;a^{-1}Aaa^{-1}A^{-1}a&amp;#61;a^{-1}AA^{-1}a&amp;#61;A&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;因此T_a是一个满射。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;由上述三个条件可知&amp;#xff0c;T_a是一个群GL_n(R)的自同构。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;二.&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;对于任意的 B \\in GL_n(R)&amp;#xff0c;定义 T_B : GL_n(R) \\to GL_n(R)&amp;#xff0c;A \\mapsto B A B^{-1}&amp;#xff0c;已经证明 T_B 是 GL_n(R) 的一个自同构。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;接下来&amp;#xff0c;我们需要求解集合 \\cap { A \\in GL_n(R) \\mid T_B(A) &amp;#61; A}。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;注意到 T_B 是一个自同构&amp;#xff0c;因此 T_B(A) &amp;#61; A 等价于 A &amp;#61; T_B^{-1}(A) &amp;#61; B^{-1} A B&amp;#xff0c;即 A 和 B 共轭。因此&amp;#xff0c;我们可以重写要求解的交集为&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;\\cap {A \\in GL_n(R) \\mid A &amp;#61; B C B^{-1} \\text{ for some } C \\in GL_n(R)}&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;为了求解这个交集&amp;#xff0c;我们可以考虑 $B$ 的不同特征值的情况。设 $B$ 的不同特征值为 $\\lambda_1, \\ldots, \\lambda_k$&amp;#xff0c;它们各自的代数重数为 m_1, \\ldots, m_k。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;如果B 有重复的特征值&amp;#xff0c;我们可以通过对 B 进行合同变换将其变成一个块对角矩阵&amp;#xff0c;其中每个块都是一个 Jordan 块。因此&amp;#xff0c;我们可以假设 B 已经是一个块对角矩阵&amp;#xff0c;每个块都是一个 Jordan 块。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;在这个假设下&amp;#xff0c;我们可以考虑每个 Jordan 块的情况。设 $B$ 的一个 Jordan 块为 $J(\\lambda, m)$&amp;#xff0c;表示一个大小为 $m \\times m$ 的 Jordan 块&amp;#xff0c;其对应的特征值为 $\\lambda$。设 $A$ 也可以写成块对角矩阵的形式&amp;#xff0c;每个块的大小与 $J(\\lambda, m)$ 相同。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;如果 A 与 J(\\lambda, m) 不相似&amp;#xff0c;那么它们一定不能共轭&amp;#xff0c;因此我们可以限制每个块都是 J(\\lambda, m)。此时&amp;#xff0c;我们只需要求解每个块的形式&amp;#xff0c;即&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;{ C \\in GL_m(R) \\mid C J(\\lambda, m) C^{-1} &amp;#61; J(\\lambda, m)}&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;根据 Jordan 标准型的结论&amp;#xff0c;上式等价于 $C$ 是一个 $m \\times m$ 的可逆矩阵&amp;#xff0c;其第 i 列由 Jordan 矩阵的第 i列线性组合而成。因此&amp;#xff0c;上式的解为GL_m(R)。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;综上所述&amp;#xff0c;对于每个 Jordan 块&amp;#xff0c;对应的解集为 GL_m(R)。因此&amp;#xff0c;整个交集的解为 GL_{m_1}(R) \\times \\cdots \\times GL_{m_k}(R)&amp;#xff0c;即一个分块对角矩阵&amp;#xff0c;每个块的大小为 \\lambda_i 的代数重数。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划简介", "Question": ["求解高等代数相关问题解答", ["设GLn(R)={Ae Mn(R) I IAI≠0｝为一般线性群.对任意B∈GLn（R)，定义", "TB:GLn(R)→GLn(R),", "A→BA(B-1)", "（1）证明Ta是群GLn(R）的一个自同构.", "(2)求  ∩     ｛A∈GLn(R）I TB(A)=A}.", "  B∈GLn(R)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;已解答&amp;#xff0c;望采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["求助，SAS语言编程题，在线等，急～！", ["1.对数据集中的数据进行整理,删除那些年龄在0到100范围之外的观测。", "\n\n", "2.分别对男、女受试者的Oxy描述性统计,求其样本均值、方差、均值95%置信区间。", "\n\n", "3.以Runtime为因变量，Weight, Age OXy为变量作线性回归。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以使用以下代码在Python中生成一组随机数&amp;#xff0c;并添加噪声&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; random\n\n&lt;span class=\"hljs-comment\"&gt;# 生成随机数&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;x1&lt;/span&gt; &amp;#61; random.uniform(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;x2&lt;/span&gt; &amp;#61; random.uniform(&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;120&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; -&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x1 &amp;#43; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*x2 &amp;#43; &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 添加噪声&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;noise&lt;/span&gt; &amp;#61; random.uniform(-&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;y_noisy&lt;/span&gt; &amp;#61; y &amp;#43; noise\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;接下来&amp;#xff0c;你可以使用Keras库来实现一个双进单出的线性神经元网络&amp;#xff0c;并用你产生的数据去训练它。以下是一个简单的示例代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; keras.models import Sequential\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; keras.layers import Dense\nimport numpy as np\n\n&lt;span class=\"hljs-comment\"&gt;# 生成训练数据&lt;/span&gt;\nX &amp;#61; np.random.uniform(low&amp;#61;[2, 40], high&amp;#61;[22, 120], size&amp;#61;(1000, 2))\ny &amp;#61; np.array([-2*x[0] &amp;#43; 5*x[1] &amp;#43; 46 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; x &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; X])\ny_noisy &amp;#61; y &amp;#43; np.random.uniform(&lt;span class=\"hljs-attribute\"&gt;low&lt;/span&gt;&amp;#61;-50, &lt;span class=\"hljs-attribute\"&gt;high&lt;/span&gt;&amp;#61;50, size&amp;#61;(1000,))\n\n&lt;span class=\"hljs-comment\"&gt;# 定义模型&lt;/span&gt;\nmodel &amp;#61; Sequential()\nmodel.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(Dense(1, &lt;span class=\"hljs-attribute\"&gt;input_dim&lt;/span&gt;&amp;#61;2))\n\n&lt;span class=\"hljs-comment\"&gt;# 编译模型&lt;/span&gt;\nmodel.compile(&lt;span class=\"hljs-attribute\"&gt;loss&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;mean_squared_error&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;optimizer&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;adam&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-comment\"&gt;# 训练模型&lt;/span&gt;\nmodel.fit(X, y_noisy, &lt;span class=\"hljs-attribute\"&gt;epochs&lt;/span&gt;&amp;#61;100, &lt;span class=\"hljs-attribute\"&gt;batch_size&lt;/span&gt;&amp;#61;10)\n\n&lt;span class=\"hljs-comment\"&gt;# 预测值&lt;/span&gt;\nx_test &amp;#61; np.array([[19, 120]])\ny_pred &amp;#61; model.predict(x_test)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(y_pred)\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的代码中&amp;#xff0c;我们首先生成了1000个随机的(x1, x2, y)数据点&amp;#xff0c;并添加了噪声。然后&amp;#xff0c;我们定义了一个包含一个输入层和一个输出层的线性神经元网络&amp;#xff0c;并使用均方误差作为损失函数进行编译。最后&amp;#xff0c;我们使用训练好的模型来预测当(x1, x2) &amp;#61; (19, 120)时&amp;#xff0c;y的值。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如何使用函数 y = -2x1+5x2+46 产生一组随机数，对每个y值添加一个 [-50, 50] 范围内的噪声？", ["使用函数 y = -2", "x1+5", "x2+46 产生一组随机数，其中x1取值 [2, 22]，x2取值 [40, 120]，对每个y值添加一个 [-50, 50] 范围内的噪声。", "\n", "（1）请实现一个双进单出的线性神经元网络，并用你产生的这组数据去训练它。", "\n", "（2）使用你训练好的网络，预测一下，当 (x1, x2) = (19, 120) 时，y的值是多少？"]], "Tag": "算法设计"}
{"Answer": "变量的名字写的很清楚了，prev是n-1项，prevPrev是n-2项。\r\n\r\n递归调用中传递prevPrev的引用，函数返回n-1项的值，同时在prevPrev里放上n-2项的值。", "Konwledge_Point": "线性规划简介", "Question": ["斐波那契 递归算法求解", ["书上的一段线性递归看不懂。。求解释，多谢了！", "\n\n", "#include ", "\nusing namespace std;", "\n\n", "int fib(int n,int &prev)", "\n{", "\n    if(n==0)", "\n    {", "\n        prev=1;", "\n        return 0;", "\n    }", "\n    else", "\n    {", "\n        int prevPrev;", "\n        prev = fib(n-1,prevPrev);", "\n        return prevPrev + prev;", "\n    }", "\n}", "\n\n", "int main()", "\n{", "\n    int p,n;", "\n    cin>>n;", "\n    cout<<fib(n,p);", "\n\n", "return 0;\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "底层系统图形会自动刷新屏幕 。 ListView里面有可以调整滚动条的位置。\r\nListView.smoothScrollToPosition(0);//顶部\r\nListView.smoothScrollToPosition(listView.getCount() - 1);//底部", "Konwledge_Point": "线性规划简介", "Question": ["关于控件A设置了visibility控件B被挤压的问题", ["我有一个垂直线性布局，上面的是控件A，下面的是控件B（控件B是listview）。", "\n起初控件A 是gone状态。控件B占据整个布局的高且控件B scroll到最底部。当触发了某事件，我设置控件A的状态变为visible。控件B被挤压了一部分。此时！问题来了，控件B会自动scroll到顶部。好像控件B 重绘了一样？我想知道设置完visible，控件B调用了哪个方法？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;哪一行报错&amp;#xff0c;有截图吗&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python，在分析建模的过程中出现报错显示，找到样本数不一致的输入变量，有人能解释一下并解决这个问题吗？", ["#建模预测", "x=data4.iloc[:,2].values.astype(float)", "y=data4.iloc[:,3:6].values.astype(float)", "from sklearn import model_selection", "x_train,x_test,y_train,y_test=model_selection.train_test_split(x,y,test_size=0.35,random_state=1)", "x_train=np.array(x).reshape(-1,1)", "x_test=np.array(x_train).reshape(-1,1)", "y_train=np.array(x).reshape(-1,1)", "from sklearn.linear_model import LinearRegression", "linregTr=LinearRegression()", "linregTr.fit(x_train,y_train)", "print('线性回归模型的回归系数:',linregTr.coef_)", "print('线性回归模型的截距:',linregTr.intercept_)", "from sklearn import metrics", "y_train_pred=linregTr.predict(x_train)", "y_test_pred=linregTr.predict(x_test)", "train_err=metrics.mean_squared_error(y_train,y_train_pred)", "test_err=metrics.mean_squared_error(y_test,y_test_pred)", "print('在训练集上的均方根误差是：',train_err)", "print('在测试集上的均方根误差是：',test_err)", "到这里之后就开报错，说找到样本数不一致的输入变量"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;x取点太稀疏导致的。&lt;/p&gt;\n\n&lt;p&gt;将&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;x&amp;#61;0:pi:10*pi; &lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;改为&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;x&amp;#61;0:0.01:10*pi; &lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;结果为&amp;#xff1a;&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"420\" src=\"https://img-ask.csdnimg.cn/upload/1621150736328.png\" width=\"560\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用matlab画图与函数不对应", ["函数里面是包括正弦的，最后画出来成了三角线性的，不应该是曲线么\nx=0:pi:10*pi;\nR2=0.2;\ny=((1-R2).^2)./((1-R2).^2+4*R2.*(sin(x./2).^2));\nplot(x,y)\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;变量和内存不能这样理解。a&amp;#61;(double)a后a还是int类型&amp;#xff0c;不会变成double类型&amp;#xff0c;这点和python不一样&amp;#xff0c;不能把python的思维带入C中来。在语言中&amp;#xff0c;如果你进行类型强转&amp;#xff0c;强转得到的值只是暂时的&amp;#xff0c;这时它其实不在内存中&amp;#xff0c;而是在CPU的寄存器里&amp;#xff0c;更不会立即写入内存。不同的是&amp;#xff0c;python可以自行保留右值的类型&amp;#xff0c;但C/C&amp;#43;&amp;#43;会隐式转换double值到整数再进行赋值。不存在跳过这种隐式转换的方法。&lt;/p&gt;\n\n&lt;p&gt;以你的a&amp;#61;(double)a为例&amp;#xff0c;CPU先从a所在的位置&amp;#xff08;当然&amp;#xff0c;这一步常常要访存&amp;#xff0c;也可能是直接从cache line读取&amp;#xff09;取出数据丢进一个能存放32位数值的寄存器里&amp;#xff08;寄存器本身是没有类型的概念的&amp;#xff0c;它存储的可以是字符&amp;#xff0c;可以是整数&amp;#xff0c;可以是float甚至是没什么意义的脏数据。赋予类型意义的是CPU指令而不是存储器&amp;#xff09;。在我的编译器上&amp;#xff0c;我看了下汇编码&amp;#xff0c;如果是O2优化&amp;#xff0c;CPU会直接把数据放进XMM寄存器&amp;#xff0c;然后调用cvtsi2ss&amp;#xff0c;cvttss2si指令进行转换。如果没有编译器优化&amp;#xff0c;CPU还要多中转几次&amp;#xff0c;但最终还是要调用这两条指令。&amp;#xff08;这是x86_64架构的结果&amp;#xff0c;其他指令集和微架构上很可能有不同做法&amp;#xff0c;但都会进行至少两条调用。&amp;#xff09;这两条调用的含义分别是有符号整数转浮点和浮点转有符号整数&amp;#xff0c;显而易见&amp;#xff0c;前者对应你写的显式强转&amp;#xff0c;后者则是C/C&amp;#43;&amp;#43;自动进行的隐式转换。&lt;/p&gt;\n\n&lt;p&gt;这种转换通常没有什么实际意义&amp;#xff0c;但是编译器似乎不会省略它们。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于强转后内存地址的问题", ["就是变量在内存里面是成线性排列的，但是现在我用强制类型转换，将相邻两个int型变量a，b中的a转换为double型，那a索取的内存要比原来int型多出4个字节的内存，它应该向哪里索取，毕竟旁边变量b已经占据了a 变量所需的四个字节"]], "Tag": "算法设计"}
{"Answer": "不知道你说的集合是什么\r\n因为中文翻译的缘故，好几个词都被翻译成集合。\r\n比如说\r\nCollection\r\nSet\r\n其中Collection是一个抽象的接口，它的下层实现可以是数组也可以是链表\r\n而Set一般用散列表实现。", "Konwledge_Point": "线性规划简介", "Question": ["求大神指点, 集合算是数据结构的一种么?", ["在网上看到不少有关数据结构的文章,发现有些中数据结构中有集合,有些没有,所以想请教一下大佬,集合算不算数据结构的一种. 其它的几种类型为 ", "\n\n", "\n", "线性结构 ", "\n", "\n", "树形结构 ", "\n", "\n", "图形结构 ", "\n", "\n", "数组 ", "\n", "\n", "栈 ", "\n", "\n", "队列 ", "\n", "\n", "链表 ", "\n", "\n", "散列表 ", "\n有些还有堆,不过堆算是树形结构的一种,可能我的描述有问题,欢迎指出", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT &lt;/p&gt;\n&lt;p&gt;根据 nn.MultiheadAttention 的文档&amp;#xff0c;query, key, value 输入的形状应该是 (seq_len, batch_size, embed_dim)&amp;#xff0c;即每个时间步的输入向量形状是 (batch_size, embed_dim)。这里的 query, key, value 应该是经过线性变换后的向量。&lt;/p&gt;\n&lt;p&gt;在 nn.MultiheadAttention 的初始化中&amp;#xff0c;有三个线性层&amp;#xff0c;分别对应 query, key, value 的线性变换&amp;#xff0c;可以使用 nn.Linear 模块来实现&amp;#xff0c;其中 in_features 表示输入向量的维度&amp;#xff0c;out_features 表示输出向量的维度。比如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;query_linear &amp;#61; nn.&lt;span class=\"hljs-constructor\"&gt;Linear(&lt;span class=\"hljs-params\"&gt;embed_dim&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;embed_dim&lt;/span&gt;)&lt;/span&gt;\nkey_linear &amp;#61; nn.&lt;span class=\"hljs-constructor\"&gt;Linear(&lt;span class=\"hljs-params\"&gt;embed_dim&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;embed_dim&lt;/span&gt;)&lt;/span&gt;\nvalue_linear &amp;#61; nn.&lt;span class=\"hljs-constructor\"&gt;Linear(&lt;span class=\"hljs-params\"&gt;embed_dim&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;embed_dim&lt;/span&gt;)&lt;/span&gt;\n\nquery &amp;#61; query&lt;span class=\"hljs-constructor\"&gt;_linear(&lt;span class=\"hljs-params\"&gt;y&lt;/span&gt;)&lt;/span&gt;\nkey &amp;#61; key&lt;span class=\"hljs-constructor\"&gt;_linear(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)&lt;/span&gt;\nvalue &amp;#61; value&lt;span class=\"hljs-constructor\"&gt;_linear(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样&amp;#xff0c;query, key, value 就是经过线性变换后的向量。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#人工智能#的问题：这个地方应该是query = y，value = x还是 query =wy ，key =wx，  value = wx ，其中w为训练参数", ["multihead_attn = nn.MultiheadAttention(embed_dim, num_heads)", "attn_output = multihead_attn(query, key, value)[0]", "\n", "output: torch.Size([12, 64, 300])", "\n", "batch_size 为 64，有 12 个词，每个词的向量是 300 维", "\n", "我想知道这个query、key、value是经过线性变换前的还是已经变换后的。", "\n", "比如原来的基础embding是x、y。", "\n", "这个地方应该是query = y，key =x，value = x", "还是 query =wy ，key =wx，  value = wx ，其中w为训练参数。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 定义网格&lt;/span&gt;\nN &amp;#61; &lt;span class=\"hljs-number\"&gt;64&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;% 单元数&lt;/span&gt;\nh &amp;#61; &lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; / N;  &lt;span class=\"hljs-comment\"&gt;% 单元长度&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:h:&lt;span class=\"hljs-built_in\"&gt;pi&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;% 节点坐标&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 定义系数矩阵和右端项&lt;/span&gt;\nA &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(N&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nb &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(N&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:N\n    A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;/h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; -&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)) * (-&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)) &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)) &amp;#43; x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)) &amp;#43; x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;sin&lt;/span&gt;(x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)));\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 在边界处添加约束条件&lt;/span&gt;\nA(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nb(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nA(N&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,N&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nb(N&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 求解线性方程组&lt;/span&gt;\nu &amp;#61; A\\b;\n\n&lt;span class=\"hljs-comment\"&gt;% 计算精确解&lt;/span&gt;\nuexact &amp;#61; x .* &lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\n\n&lt;span class=\"hljs-comment\"&gt;% 计算最大误差&lt;/span&gt;\nerror &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(u - uexact));\n\n&lt;span class=\"hljs-comment\"&gt;% 输出最大误差&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(error);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;望采纳。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["微分方程数值解求uu解答", ["用连续分片线性有限元方法求解下列方程", "\n", "-d(k(x)du/dx)/dx=f,,0 < 𝑥 <π/2", "𝑢(0) = 0, 𝑢 (π/2) = 0", "其中，k(x) = 𝑒^(𝑥)", ", 𝑓 = −𝑒^(𝑥)[cos(𝑥) − 2 sin(𝑥) − 𝑥𝑐𝑜𝑠(𝑥) − 𝑥𝑠𝑖𝑛(𝑥)]，精确解为", "u(x) = xcos(x)。给出有限元方法，并进行数值实验分别给出在 N=4,8,16,32,64 等", "分下的最大误差（附程序，体现局部单元的节点与整体节点的映射关系）", "需要程序，需要程序，需要程序"]], "Tag": "算法设计"}
{"Answer": "这个跟i++,++i的原理是一样的，你把visit (* p++);改成printf（“%d”，i++）;不就明白了", "Konwledge_Point": "线性规划简介", "Question": ["*p++相关使用问题，求大佬解答", ["void ListTraverse(SqList L,void(* visit)(ElemType&))\n{\nElemType *p = L.elem; \n                 // L.elem为线性顺序表表的基址，p指向第一个元素\nint i ;\nfor(i = 1;i < L.length; i++)\nvisit (* p++);     // 对每个数据元素调用visit\nprintf(\"\\n\");\n}\n\n", "\n\n", "我理解的 *p++ ：p指向的顺序表L的第二个元素的值；", "\n那么visit(*p++) 是不是从第二个元素开始调用visit，而不是第一个啊？", "\n还是我哪里理解错了？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;% 定义函数maxtU&lt;/span&gt;\nmaxtU &amp;#61; &amp;#64;(t, h, alpha, beta, p) (alpha * t^p &amp;#43; beta * h^p)^(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/p);\n\n&lt;span class=\"hljs-comment\"&gt;% 定义函数h&lt;/span&gt;\nh &amp;#61; &amp;#64;(c, cs, delta, delta1, h0, m, n) h0 - m * c &amp;#43; n * cs;\n\n&lt;span class=\"hljs-comment\"&gt;% 定义函数cs&lt;/span&gt;\ncs &amp;#61; &amp;#64;(c, c0, delta, delta1) delta * c &amp;#43; delta1 * c1 &amp;#43; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - delta - delta1) * c0;\n\n&lt;span class=\"hljs-comment\"&gt;% 定义函数M&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;M&lt;/span&gt; &amp;#61; &amp;#64;(h, h_i, p2) h_i &amp;gt;&amp;#61; h ? &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; : p2 * (h - h_i) * h_i;\n\n&lt;span class=\"hljs-comment\"&gt;% 定义目标函数&lt;/span&gt;\nobj &amp;#61; &amp;#64;(x) maxtU(x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;), x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;), alpha, beta, p);\n\n&lt;span class=\"hljs-comment\"&gt;% 定义约束条件&lt;/span&gt;\n&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt; &amp;#61; [];\nb &amp;#61; [];\n&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt; &amp;#61; [];\nbeq &amp;#61; [];\nlb &amp;#61; [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\nub &amp;#61; [&lt;span class=\"hljs-symbol\"&gt;Inf&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;Inf&lt;/span&gt;];\nnonlcon &amp;#61; &amp;#64;(x) x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; p1 * cs(x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;), c0, delta, delta1) &amp;#43; &lt;span class=\"hljs-symbol\"&gt;M&lt;/span&gt;(h(x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;), cs(x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;), delta, delta1), delta, delta1, h0, m, n), h_i, p2) - &lt;span class=\"hljs-symbol\"&gt;I&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 求解最优化问题&lt;/span&gt;\nx0 &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;% 初始值&lt;/span&gt;\noptions &amp;#61; optimoptions(&amp;#64;fmincon,&lt;span class=\"hljs-string\"&gt;&amp;#39;Algorithm&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;interior-point&amp;#39;&lt;/span&gt;);\nx &amp;#61; fmincon(obj,x0,&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;,b,&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;,beq,lb,ub,nonlcon,options);\n\n&lt;span class=\"hljs-comment\"&gt;% 数值模拟&lt;/span&gt;\nnum_iterations &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 迭代次数&lt;/span&gt;\nfor i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:num_iterations\n&lt;span class=\"hljs-comment\"&gt;% 在每次迭代中调用上述函数并计算结果&lt;/span&gt;\nx &amp;#61; fmincon(obj,x,&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;,b,&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;,beq,lb,ub,nonlcon,options);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["使用matlab进行含参数的最优化求解及数值模拟", ["问题背景", "\n", "效用最大化理论模型，非线性有约束规划，函数中有多个参数（如图），初步的想法是", "\n", "第一步：得出最优消费量关于某一变量的偏导；", "第二步：将偏导在某一参数的不同水平下进行数值模拟", "\n", "\n", "碰到的问题", "\n", "手动计算最优消费量易出错（不确定是否求出了正确的解），下面的数值模拟自然不好推进，所以想用matlab的最优化工具箱计算得出最优消费量，但是遇到了报错，无法实现", "\n", "目前尝试的代码", "\n", "参考matlab帮助文档中跟我这个相似的最优化问题，目前是这个代码（没有matlab格式的代码可插入，用了python的代码格式，见谅哈），目的是将f这一g的隐函数作图，这里4个变量t, c, c1, c0，其他的都是参数", "\n", "%%%%\n", "clc", "; clear all; close all;", "\nf = @(t, c, c1, c0) (a.*t.^p + b.*(h0-m.*c+n.*(", "k1", ".*c+", "k2", ".*c1+(", "1", "-", "k1", "-", "k2", ").*c0)).^p)^(", "1", "/p)", ";", "\ng = @(t,c, c1, c0) t+p1.*n.*(", "k1", ".*c+", "k2", ".*c1+(", "1", "-", "k1", "-", "k2", "))+ ", "0", "*(h0-m.*c+n.*(", "k1", ".*c+", "k2", ".*c1+(", "1", "-", "k1", "-", "k2", ").*c0)>=h1)+p2.*(h0-m.*c+n.*(", "k1", ".*c+", "k2", ".*c1+(", "1", "-", "k1", "-", "k2", ").*c0)<h1)-i", ";", "\nfimplicit(g)\n\n", "\n", "报错情况", "\n", "“错误使用 fimplicit (line 54) 函数输入可以最多包含两个变量。”", "\n", "我目前的疑问", "\n", "当然上面这个报错是预想中的啦，关键的问题是不知道这样一个全是参数的最优化问题是否可以用matlab求出一个解的表达式再数值模拟还是说直接用这一系列关系式直接进行数值模拟", "\n", "可否指教一二？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以参考一下&lt;br /&gt;希望可以采纳支持一下博主呀&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; grade[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;],sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请依次输入高等数学、线性代数、大学物理、大学英语四门课程的成绩&amp;#xff08;成绩之间用空格分隔&amp;#xff09;&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;grade[i]);\n        sum &amp;#43;&amp;#61; grade[i];\n    }\n\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; aver &amp;#61; sum / &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;平均成绩为&amp;#xff1a;%.1f &amp;#34;&lt;/span&gt;, aver);\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (aver &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; aver &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (aver &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A档\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (aver &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B档\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (aver &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C档\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (aver &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D档\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E档\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (aver &amp;gt; grade[i]) {\n            cnt&amp;#43;&amp;#43;;\n        }\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;比平均成绩低的课程有%d门\\n&amp;#34;&lt;/span&gt;, cnt);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/643202091356170.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/346511091356192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["网课不会做，求答案，，", ["用C语言编写实现如下功能的程序：", "\n", "运行程序后实现", "\n", "1.提示用户通过键盘依次输入高等数学、线性代数、大学物理、大学英语四门课程的成绩", "\n", "2.输入完成后自动输出如下两部分内容：", "\n", "  I. 输出平均成绩（保留1位小数）以及平均成绩所属的档次（用A、B、C、D、E表示，90-100 A, 80-89 B, 70-79 C, 60-69 D,60分以下 E）（例如输出：平均成绩 85.8  B档）", "\n", " II. 输出比平均成绩低的课程有几门；(例如输出：比平均成绩低的课程有2门）注：只需输出比平均成绩低的课程的门数，不用给出具体是哪几门课", "使用visual "]], "Tag": "算法设计"}
{"Answer": "Y里面一共只有27个元素，t=30，肯定超范围了", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB索引越界问题(真一小白，哭晕)", [" clear all;\nclc;\n% 读入人口数据(1971 - 2000年)\nY = [33815 33981 34004 34212 34327 34344 34458 34498 34476 \n     34483 34488 34513 34497 34511 34507 34509 34521 34513\n     34515 34517 34519 34521 34521 34523 34525 34525 34527];\n% 读入年份，很明显可以自己生成\n T = (1:1:30);\n%  做线性处理\nfor t = 1:30,\n    x(t)= exp(-t);\n    y(t) = 1/Y(t,1);\nend \n", "\n\n", "按照我买的一本书打的，没有打完，我就想看下有没有问题。结果，发现显示", "\n\n", "“", "\n索引超出矩阵维度", "\n出错 test1(line12)", "\ny(t) = 1/Y(t,1);", "\n”", "\n大佬们，怎么搞哇！"]], "Tag": "算法设计"}
{"Answer": "我想你应该试试[relative layout][1].\r\n如果你使用相对布局来填充整个屏幕，你应该可以使用[android:layout_alignParentBottom][2] 来移动按钮到屏幕的底部。\r\n如果你的屏幕底部的视图不是以相对布局来显示的，那么也许上边的布局将占据所有的空间。在这种情况下，在这个android布局：以上的布局中，在你的布局文件和剩下的布局位置，首先你应该把这个视图放在底部。这能够使按钮的视图占据尽可能多的像他需要的空间，剩下的布局可以填满剩下的所有屏幕。\r\n\r\n\r\n  [1]: http://developer.android.com/guide/topics/ui/layout/relative.html\r\n  [2]: http://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams.html", "Konwledge_Point": "线性规划简介", "Question": ["如何调整屏幕底部的视图？", ["这是我的布局代码：", "\n\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\">\n\n    <TextView android:text=\"@string/welcome\" \n        android:id=\"@+id/TextView\" \n        android:layout_width=\"fill_parent\" \n        android:layout_height=\"wrap_content\">\n    </TextView>\n\n    <LinearLayout android:id=\"@+id/LinearLayout\" \n        android:orientation=\"horizontal\"\n        android:layout_width=\"wrap_content\" \n        android:layout_height=\"wrap_content\" \n        android:gravity=\"bottom\">\n\n            <EditText android:id=\"@+id/EditText\" \n                android:layout_width=\"fill_parent\" \n                android:layout_height=\"wrap_content\">\n            </EditText>\n\n            <Button android:text=\"@string/label_submit_button\" \n                android:id=\"@+id/Button\" \n                android:layout_width=\"wrap_content\" \n                android:layout_height=\"wrap_content\">\n            </Button>\n\n    </LinearLayout>\n\n</LinearLayout>\n", "\n\n", "它现在是左边这样，但是我想让他像右边这样的", "\n\n", "比较容易的做法就是设置TextView充满整个高度，但是这会引起按钮没有空间或者是输入框。基本上这个问题是我想要submit button和text entry在底部是一个合适的高度，text view填满剩下的控件，同样的在这个水平线性布局里边，我想要submit button包含它的内容，text entry来包含剩下的空间。", "\n如果在这个线性布局里的第一个项目是告知它就是用来填满这个布局的，没有给其他项目留空间，我在这个布局里如何得到一个首先是在这个线性布局里，填满除了最低要求的其他项目的项目？", "\n\n", "编辑1：", "\n\n", "Relative Layouts 确实是答案，谢谢。", "\n\n", "   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <RelativeLayout \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"fill_parent\" \n    android:layout_height=\"fill_parent\">\n\n    <TextView \n        android:text=\"@string/welcome\" \n        android:id=\"@+id/TextView\"\n        android:layout_width=\"fill_parent\" \n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\">\n    </TextView>\n\n    <RelativeLayout \n        android:id=\"@+id/InnerRelativeLayout\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\" >\n\n        <Button \n            android:text=\"@string/label_submit_button\" \n            android:id=\"@+id/Button\"\n            android:layout_alignParentRight=\"true\" \n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\">\n        </Button>\n\n        <EditText \n            android:id=\"@+id/EditText\" \n            android:layout_width=\"fill_parent\"\n            android:layout_toLeftOf=\"@id/Button\"\n            android:layout_height=\"wrap_content\">\n        </EditText>\n\n    </RelativeLayout>\n\n</RelativeLayout>\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我发现你的问题可能是因为你的输入参数 x,y,u_new,v_new 等都是三维矩阵&amp;#xff0c;而 contourf 函数只能接受二维矩阵作为输入。你需要将三维矩阵切片成二维矩阵&amp;#xff0c;然后再用 contourf 函数绘制等高线图。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff0c;如果你想在 x-y 平面上绘制 u_new 和 v_new 的等高线图&amp;#xff0c;你可以用以下代码&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;% 假设 z 是一个 100&lt;em&gt;1 的向量&amp;#xff0c;表示 z 轴上的坐标&lt;br /&gt;% 选择一个 z 坐标作为切片平面&amp;#xff0c;比如 z(50)&lt;br /&gt;% 找到对应的 u_new 和 v_new 的切片矩阵&lt;br /&gt;u_slice &amp;#61; squeeze(u_new(:,:,50)); % 100&lt;/em&gt;100 的二维矩阵&lt;br /&gt;v_slice &amp;#61; squeeze(v_new(:,:,50)); % 100*100 的二维矩阵&lt;br /&gt;% 绘制等高线图&lt;br /&gt;figure;&lt;br /&gt;contourf(x,y,u_slice,v_slice);&lt;br /&gt;类似地&amp;#xff0c;如果你想在 y-z 平面或 x-z 平面上绘制等高线图&amp;#xff0c;你也可以用相同的方法切片。&lt;/p&gt;\n&lt;p&gt;希望这些信息能帮助你解决问题&amp;#xff0c;祝你编程愉快&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["matlab重构三维流场", ["matlab重构流场，前面没问题 到了figure的时候出问题  显示", "\n", "\n", "%这一节程序的目的：重构某一个原始的瞬态流场，_**并且将速度场数据拟合到规整的网格中。然后做平面云图**_。", "\nn_recon = input(", "'重构的流场是第几个:'", ");", "%程序运行至此，需要人为在命令行窗口输入重构的流场是第几个", "\nat=", "zeros", "(r,", "1", ");", "% 时间系数矩阵, r * 1", "\n", "for", " ", "j", " = ", "1", ":r\n   at(", "j", ",", "1", ")=", "dot", "(X_fluc(:,n_recon),POD_vector(:,n_snapshots-", "j", "+", "1", "));", "%计算时间系数,r*1的矩阵", "\n", "end", "\nX_reconstruct=", "zeros", "(", "6028500", ",", "1", ");\n", "for", " ", "j", "=", "1", ":", "3", " ", "%用前50个能量贡献较大的POD模态重构瞬态速度场，这里的50可以改成100，200，500等任意数", "\n  X_reconstruct = X_reconstruct+at(", "j", ",", "1", ")*POD_vector(:,n_snapshots-", "j", "+", "1", ");", "%308400*1", "\n", "end", "\nrecon_u = X_reconstruct(", "1", ":", "2009500", ",", "1", ");", "%重构以后的速度U", "\nrecon_v = X_reconstruct((", "2009500", "+", "1", "):(", "2", "*", "2009500", "),", "1", ");", "%重构以后的速度V", "\nrecon_w = X_reconstruct((", "2009500", "*", "2", "+", "1", "):(", "3", "*", "2009500", "),", "1", ");", "%重构以后的速度W", "\n\nxx = ", "linspace", "( ", "-0.0787", " , ", "0.0787", " , ", "100", " );", "%对X坐标进行线性插值，形成1*100的行向量", "\nyy = ", "linspace", "( ", "-0.0787", " , ", "0.0787", " , ", "100", " );", "%对Y坐标进行线性插值，形成1*100的行向量", "\nzz = ", "linspace", "( ", "-0.001", " , ", "0.818", " , ", "100", " );", "%对Z坐标进行线性插值，形成1*100的行向量", "\nnx = ", "length", "(xx);\nny = ", "length", "(yy);\nnz = ", "length", "(zz);\n[x,y,z] = ", "meshgrid", "(xx,yy,zz);", "% 100*100*100", "\nu_new=griddata(fluent_data(:,", "1", "),fluent_data(:,", "2", "),fluent_data(:,", "3", "),recon_u,x,y,z);", "%将重构的速度U拟合到新的坐标系，100*100*100", "\nv_new=griddata(fluent_data(:,", "1", "),fluent_data(:,", "2", "),fluent_data(:,", "3", "),recon_v,x,y,z);", "%将重构的速度V拟合到新的坐标系，100*100*100", "\nw_new=griddata(fluent_data(:,", "1", "),fluent_data(:,", "2", "),fluent_data(:,", "3", "),recon_w,x,y,z);", "%将重构的速度W拟合到新的坐标系，100*100*100", "\nu_new(", "isinf", "(u_new)) = ", "0", ";", "%如果值为无穷大，则赋值为0", "\nu_new(", "isnan", "(u_new)) = ", "0", ";", "%如果非数值，则赋值为0", "\nv_new(", "isinf", "(v_new)) = ", "0", ";\nv_new(", "isnan", "(v_new)) = ", "0", ";\nw_new(", "isinf", "(w_new)) = ", "0", ";\nw_new(", "isnan", "(w_new)) = ", "0", ";\n", "figure", ";\ncontourf(x,y,u_new,v_new);\n\n", "figure", ";\ncontourf(y,z,v_new,w_new);\n\n", "figure", ";\ncontourf(x,z,u_new,w_new);\n", "\n", "但是总会报错 不知道怎么办了 目的是 将速度场数据拟合到规整的网格中。然后做平面云图"]], "Tag": "算法设计"}
{"Answer": "GCS_WGS_1984与 GCS_North_American_1983属于不同椭球体，需要使用专业软件计算三七参数，得到三七参数就能使用arcgis进行转换，希望对你有帮助！", "Konwledge_Point": "线性规划简介", "Question": ["萌新求助，arcgis未知经纬度坐标系转换问题", ["RT，本人在信息数据处理时候遇到的问题——两套数据的经纬度信息应该不是在一个坐标系中，", "\nA数据是曼哈顿城市网络结构，其节点坐标比如，", "583200.166333，4506032.483683（m）", "\n583432.793828，4506074.45177", "\n583193.776709，4506091.452575", "\n583452.09959，4506097.816545", "\n\n", "在arcgis中坐标信息如下", "\n\n", "\n", "投影坐标系:  WGS_1984_UTM_Zone_18N", "\n投影:   Transverse_Mercator", "\nFalse_Easting:    500000.00000000", "\nFalse_Northing:   0.00000000", "\nCentral_Meridian: -75.00000000", "\nScale_Factor: 0.99960000", "\nLatitude_Of_Origin:   0.00000000", "\n线性单位:     Meter", "\n\n", "地理坐标系:  GCS_WGS_1984", "\n基准面:    D_WGS_1984", "\n本初子午线:  Greenwich", "\n角度单位:     Degree", "\n", "\n\n", "B数据来自NYC网站的TLC出租车数据（附网站网址：", "http://www.nyc.gov/html/tlc/html/about/trip_record_data.shtml）", "\n其坐标数据举例为", "\n**-73.99389648，40.75011063", "\n-74.00164795，40.72424316", "\n-73.96334076，40.80278778", "\n-74.00908661，40.7138176", "\n**", "\n\n", "但是请注意，我所举例的信息均为数据集中随机数据，不存在一一对应关系，仅知道因为两个坐标都是在曼哈顿城区内部，差别应该不大，", "\n在这里我作为萌新向地理信息比较了解的，请问B数据的坐标系以及AB之间的换算方法", "\n\n", "PS.如果数据不足，我这里依旧可以提供，本人英语水平不足，没有在网站找到B数据的坐标信息，不过B数据的网站提供了出租车区域的SHP文件，这里坐标系的信息为", "\n\n", "\n", "投影坐标系:  NAD_1983_StatePlane_New_York_Long_Island_FIPS_3104_Feet", "\n投影:   Lambert_Conformal_Conic", "\nFalse_Easting:    984250.00000000", "\nFalse_Northing:   0.00000000", "\nCentral_Meridian: -74.00000000", "\nStandard_Parallel_1:  40.66666667", "\nStandard_Parallel_2:  41.03333333", "\nLatitude_Of_Origin:   40.16666667", "\n线性单位:     Foot_US", "\n\n", "地理坐标系:  GCS_North_American_1983", "\n基准面:    D_North_American_1983", "\n本初子午线:  Greenwich", "\n角度单位:     Degree", "\n", "\n\n", "我通过arcgis进行了地理坐标系转换，但是转换结果依旧不正确"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    cin &amp;gt;&amp;gt; n;\n    &lt;span class=\"hljs-function\"&gt;vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(n)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n        cin &amp;gt;&amp;gt; a[i];\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; count &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;gt; a[j])\n                count&amp;#43;&amp;#43;;\n    std::cout &amp;lt;&amp;lt; count;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["程序设计 -- 计算逆序数", ["这个学期 Amy 开始学习一门重要课程--线性代数。学到行列式的时候，每次遇到对给定的序列计算其逆序数，她都觉得是个很闹心的事。所以，她央求她的好朋友 Ray 为她写一段程序，用来解决这样的问题。作为回报，她答应在周末舞会上让 Ray 成为她的伦巴舞舞伴。所谓序列Ａ的逆序数，指的是序列中满足 i<j , A[i]>A[j] 的所有二元组 <i,j> 的个数。", "输入格式", "第一行输入一个整数 N(1≤N≤100000)，表示下一行给出的序列的个数。第二行为N个整数，每个整数之间空一格，表示序列中的N个元素。每个元素的值不超过1000000000", "输出格式", "输出只有一个表示给定序列的逆序数整数。", "输入样例1", "3", "1 2 3", "输出样例1", "0", "输入样例2", "2", "2 1", "输出样例2", "1"]], "Tag": "算法设计"}
{"Answer": "&lt;font size=4 color=red&gt; 开刀&lt;/font&gt;\r\n```\r\nconst int ARRAY_GROWUP = 10;\r\n//数组结构体定义\r\nstruct ArrayStruct\r\n{\r\nint iCurMaxElementCount; //当前数组最大能容纳元素个数\r\nint iCurElementCount; //当前元素数\r\nint * pHead; //指针头部\r\n};\r\n//功能：生成一个数组，参数为最初元素个数\r\n//参数：int iStartElementCount 数组初始化大小\r\n//返回：成功返回指针，否则返回 NULL\r\nArrayStruct * Array_Init(int iStartElementCount)\r\n{\r\n    if (iStartElementCount &lt;= 0 )\r\n        return NULL;\r\n    ArrayStruct * pReturn;\r\n\r\n    pReturn = new ArrayStruct;\r\n    if (pReturn == NULL)\r\n        return NULL;\r\n\r\n    pReturn-&gt;pHead = new int[iStartElementCount];\r\n    if (pReturn-&gt;pHead == NULL)\r\n    {\r\n        delete pReturn;\r\n        return NULL;\r\n    }\r\n    pReturn-&gt;iCurMaxElementCount = iStartElementCount;\r\n    pReturn-&gt;iCurElementCount = 0;//表明当前没有元素\r\n    return pReturn;\r\n}\r\n\r\n// ========== 完成下面的函数\r\n//功能：向数组增加一个元素，如果元素超过上述 Array_Init\r\n// 函数的 iStartElementCount 参数时，请考虑如何适应\r\n// 可以假定一次增大ARRAY_GROWUP个元素容量，但要保证在内存中数据为线性存放\r\n//参数：ArrayStruct *pArray 要处理的数组结构体指针\r\n// const int iAppendElement 要增加的元素\r\n//返回：成功时返回 true ，失败时返加 false\r\nbool Array_AddElement(ArrayStruct *pArray,const int iAppendElement)\r\n{\r\n   if(pArray-&gt;iCurElementCount == pArray-&gt;iCurMaxElementCount)\r\n   {\r\n       //重新分配\r\n       int *pTempArray;\r\n       pTempArray = new int[pArray-&gt;iCurMaxElementCount+ARRAY_GROWUP];\r\n        if(!pTempArray)\r\n            return false;\r\n        //copy到新分配的\r\n       memcpy(pTempArray,pArray-&gt;pHead, sizeof(int)*pArray-&gt;iCurElementCount);\r\n        //删除以前的\r\n       delete pArray-&gt;pHead;\r\n        //重新设置参数\r\n       pArray-&gt;pHead= pTempArray;\r\n        pArray-&gt;iCurMaxElementCount+=ARRAY_GROWUP;\r\n       *(pArray-&gt;pHead+pArray-&gt;iCurElementCount)=iAppendElement;\r\n       pArray-&gt;iCurElementCount++;\r\n   }\r\n   else\r\n   {\r\n       *(pArray-&gt;pHead+pArray-&gt;iCurElementCount)=iAppendElement;\r\n       pArray-&gt;iCurElementCount++;\r\n   }\r\n    return true;\r\n}\r\n//功能：删除指定索引的元素，要保证元素在内存为线性不间隔存放\r\n//参数：ArrayStruct *pArray 要处理的数组结构体指针\r\n// const int iRemovedIndex 要删除的元素索引\r\n//返回：成功时返回 true ，失败时返加 false\r\nbool Array_RemoveElementAt(ArrayStruct *pArray,const int iRemovedIndex)\r\n{\r\n    if(pArray-&gt;iCurElementCount &gt;iRemovedIndex &amp;&amp; iRemovedIndex&gt;=0)\r\n    {\r\n        int nRemain=pArray-&gt;iCurElementCount-iRemovedIndex-1;\r\n        memmove(pArray-&gt;pHead+iRemovedIndex,pArray-&gt;pHead+iRemovedIndex+1,sizeof(int)*nRemain);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//功能：返回指定索引的元素\r\n//参数：const ArrayStruct *pArray 要处理的数组结构体指针\r\n// const int iIndex 要取的索引值\r\n// int &amp; iReturn 成功时的值\r\n//返回：成功为 true 失败为 false\r\nbool Array_GetElement(const ArrayStruct *pArray,const int iIndex,int &amp; iReturn)\r\n{\r\n    if(pArray-&gt;iCurElementCount &gt;iIndex &amp;&amp; iIndex&gt;=0)\r\n    {\r\n        iReturn= *(pArray-&gt;pHead+iIndex);\r\n        return true;\r\n    }\r\n\r\n    iReturn=-1;\r\n    return false;\r\n}\r\n//功能：删除一个数组\r\n//参数：自已定义\r\n//返回：无（12分）\r\nvoid Array_Release(ArrayStruct **pArray)\r\n{\r\n    delete (*pArray)-&gt;pHead;\r\n    delete (*pArray);\r\n    pArray=NULL;\r\n}\r\n```\r\n来操刀给你解决~这个主要是vector原理，认真回答题了，给个辛苦分吧~", "Konwledge_Point": "线性规划简介", "Question": ["新手小问题，就把三个简单的函数写出来就好", ["求大神帮写个题...", "\n\n", "//==========下面是代码，完成相应函数==========", "\n\n", "const int ARRAY_GROWUP = 10;", "\n\n", "//数组结构体定义", "\nstruct ArrayStruct", "\n{", "\n    int iCurMaxElementCount;    //当前数组最大能容纳元素个数", "\n    int iCurElementCount;       //当前元素数", "\n    int * pHead;                //指针头部", "\n};", "\n\n", "//功能：生成一个数组，参数为最初元素个数", "\n//参数：int iStartElementCount  数组初始化大小", "\n//返回：成功返回指针，否则返回 NULL", "\nArrayStruct * Array_Init(int iStartElementCount)", "\n{", "\n    if (iStartElementCount <= 0 )", "\n        return NULL;", "\n\n", "ArrayStruct * pReturn;\n\npReturn = new ArrayStruct;\nif (pReturn == NULL)\n    return NULL;\n\npReturn->pHead = new int[iStartElementCount];\nif (pReturn->pHead == NULL)\n{\n    delete pReturn;\n    return NULL;\n}\npReturn->iCurMaxElementCount = iStartElementCount;\npReturn->iCurElementCount = 0;//表明当前没有元素\nreturn pReturn;\n", "\n\n", "}", "\n\n", "//  ========== 完成下面的函数", "\n\n", "//功能：向数组增加一个元素，如果元素超过上述 Array_Init ", "\n//      函数的 iStartElementCount 参数时，请考虑如何适应", "\n//      可以假定一次增大ARRAY_GROWUP个元素容量，但要保证在内存中数据为线性存放", "\n//参数：ArrayStruct  *pArray   要处理的数组结构体指针", "\n//      const int iAppendElement     要增加的元素", "\n//返回：成功时返回 true ，失败时返加 false", "\nbool Array_AddElement(ArrayStruct  *pArray,const int iAppendElement)", "\n{", "\n\n", "}", "\n\n", "//功能：删除指定索引的元素，要保证元素在内存为线性不间隔存放", "\n//参数：ArrayStruct  *pArray   要处理的数组结构体指针", "\n//      const int iRemovedIndex    要删除的元素索引", "\n//返回：成功时返回 true ，失败时返加 false", "\nbool Array_RemoveElementAt(ArrayStruct  *pArray,const int iRemovedIndex)", "\n{", "\n}", "\n\n", "//功能：返回指定索引的元素", "\n//参数：const ArrayStruct  *pArray  要处理的数组结构体指针", "\n//      const int iIndex  要取的索引值", "\n//      int & iReturn 成功时的值", "\n//返回：成功为 true 失败为 false", "\nbool Array_GetElement(const ArrayStruct  *pArray,const int iIndex,int & iReturn)", "\n{", "\n}", "\n\n", "//功能：删除一个数组", "\n//参数：自已定义", "\n//返回：无（12分）", "\nvoid  Array_Release(/* 请在这里填上参数 */)", "\n{"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这样的格式可否&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n会计 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n金融 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n马列 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}}\n外语 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n人文 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n旅游 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}}\n软件 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n信息 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n工商 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n财税 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}}\n国贸 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n经济 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}}\n统计 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n数学 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;}}\n体育 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;}}\n测绘 {&amp;#39;专业1&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;}, &amp;#39;专业2&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;49&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}, &amp;#39;专业3&amp;#39;: {&amp;#39;1班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;, &amp;#39;2班&amp;#39;: &lt;span class=\"hljs-number\"&gt;47&lt;/span&gt;, &amp;#39;3班&amp;#39;: &lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;}}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python,excle,文件处理，", ["已知某大学共有16个学院（会计、金融、马列、外语、人文、旅游、软件、信息、工商、财税、国贸、经济、统计、数学、体育、测绘），每个学院有2-3个专业（随机生成，在各个学院名称后面加专业1、专业2、专业3区分），每个专业招收3个班，每个班的人数为：45-50人，班级数量范围为：96到130个班级（Random）。100*50=5000个学生", "（1）    随机生成各个学院各个专业各个班级的学生，数据保存到excel文件中（文件处理，异常处理，基本语法）；", "（2）    每个专业随机生成课程数量为20门，其中必须包括：高数一、线性代数、英语一、马克思原理，其他课程为专业课16门。考虑到专业不同，课程名用学院、专业名，课程名代替：比如：“软件专业1课程1”表示一门专业课。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/843320869646192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这样看&amp;#xff0c;还觉得初始化了吗&amp;#xff0c;看代码当然知道for里面一定会走&amp;#xff1b;但是编译器并不会这样觉得&amp;#xff0c;for里面只有第一个定义会走&amp;#xff0c;其他的不一定会走&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["java中关于布尔型变量遇到的问题", ["问题：对布尔型变量定义之后，明明后面对变量赋了值，但在使用时依然提醒没有初始化", "\n", "\n", "public", " ", "class", " ", "ArrayFind", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args)", " ", "{\n\n        ", "//线性查找", "\n        ", "String", "[] arr = ", "new", " ", "String", "[]{", "\"AA\"", ", ", "\"BB\"", ", ", "\"CC\"", ", ", "\"DD\"", ", ", "\"EE\"", ", ", "\"FF\"", "};\n        ", "String", " dest = ", "\"BB\"", ";\n        ", "boolean", " isFind;\n        ", "for", " (", "int", " i = ", "0", "; i < arr.length;i++){\n            isFind = ", "true", ";\n            ", "if", " (dest.", "equals", "(arr[i])){\n                isFind = ", "false", ";\n                System.out.", "println", "(i);\n                ", "break", ";\n            }\n        }\n        ", "if", " (isFind)\n        {\n            System.out.", "println", "(", "\"很遗憾没找到\"", ");\n        }\n\n\n    }\n}\n\n\n", "\n", "\n", "F:\\Java_workspace\\Day3\\src\\ArrayFind.java:16:13", "java: 可能尚未初始化变量isFind", "\n", "将boolean isFind那一句改成Boolean isFind = true;后面可以使用", "\n", "我想知道里面的内在原因是什么，后面对isFind变量赋了值，为什么提示没有初始化。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;还有一种办法是在for循环中对变量设置值&amp;#xff1a;&lt;br /&gt;在第14行与16行之间添加&amp;#xff1a;&lt;br /&gt;checkvar[i].set(i)&lt;br /&gt;输出&amp;#xff1a;PY_VAR0 ~ 0为0~6&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["将checkbutton设置在类中时，不管选中与未选中的variable值都是0(语言-python)", ["当我单独设置checkbutton时，能够正常运行", "\n", "import", " tkinter ", "as", " tk \n", "from", " tkinter ", "import", " *\n", "from", " tkinter ", "import", " ttk\n", "window", " = tk.Tk()\n\n", "columns", " = [", "'组序'", ",", "'热丝电流(A)'", ",", "'激光功率'", ",", "'送丝速度'", ",", "'焊接速度'", ",", "'对接间隙'", ",", "'得分'", "]\n\ndef ", "check", "(num):\n    print(checkvar[num],", "'='", ",checkvar[num].", "get", "())\n\ncheckvar = [", "None", "]*len(", "columns", ")#生成一个具有维度的空列表\n    \n", "for", " i ", "in", " range(len(", "columns", ")):\n    checkvar[i] = tk.IntVar()\n    checkbutton = tk.Checkbutton(", "window", ",", "text", "=", "columns", "[i],variable=checkvar[i],command=lambda x=i: ", "check", "(x))\n    checkbutton.deselect()\n    checkbutton.grid(", "row", "=i,column=", "0", ",sticky=", "'w'", ")\n\n", "window", ".mainloop()\n", "\n", "结果如下", "\n", "但是当我将这段代码放到类中去就出现了如下问题，不管有没有选中，variable的返回值都为0，如下", "\n", "import", " tkinter ", "as", " tk \n", "from", " tkinter ", "import", " *\n", "from", " tkinter ", "import", " ttk\n\n", "class", " ", "nonlinear_fit_class", ":\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "#根窗口", "\n        self.root = tk.Tk()\n        self.button_nonlinear = tk.Button(self.root,text=", "'非线性拟合'", ",command=self.nonlinear_fit)\n        self.button_nonlinear.pack()\n        self.root.mainloop()\n\n    ", "#定义非线性拟合函数", "\n    ", "def", " ", "nonlinear_fit", "(", "self", "):\n        window = tk.Tk()\n\n        columns = [", "'组序'", ",", "'热丝电流(A)'", ",", "'激光功率'", ",", "'送丝速度'", ",", "'焊接速度'", ",", "'对接间隙'", ",", "'得分'", "]\n\n        ", "def", " ", "check", "(", "num", "):\n            ", "print", "(checkvar[num],", "'='", ",checkvar[num].get())\n\n        checkvar = [", "None", "]*", "len", "(columns)", "#生成一个具有维度的空列表", "\n\n        ", "for", " i ", "in", " ", "range", "(", "len", "(columns)):\n            checkvar[i] = tk.IntVar()\n            checkbutton = tk.Checkbutton(window,text=columns[i],variable=checkvar[i],command=", "lambda", " x=i: check(x))\n            checkbutton.deselect()\n            checkbutton.grid(row=i,column=", "0", ",sticky=", "'w'", ")\n        ", "print", "(checkvar)\n\n        ", "#button = tk.Button(window,text='应用',command=check).grid(row=1,column=0)", "\n\n        window.mainloop()\n        \nA = nonlinear_fit_class()\n", "\n", "\n", "我就是希望能够通过选中checkbutton来索引对应checkbutton的名称，所以想借助variable的值来高速机器我选中了这个button，再获取button名称", "\n", "能力有限，卡了两天都没解决这个问题，上网没找到类似问题，来这里寻求各位的帮助"]], "Tag": "算法设计"}
{"Answer": "思路：x这个数是2的n次幂的和。分解x，如x转换成2机制数1010就表示2（10）+8（1000），下面是算法\r\npublic static void getRes(int x){\r\n\t\t//loop记录位数\r\n\t\tint loop = 0;\r\n\t\tint i;\r\n\t\twhile(true){\r\n\t\t\ti=x&amp;1;\r\n\t\t\t//x的最后一位是否是1\r\n\t\t\tif(i == 1){\r\n\t\t\t\t//1左移位数就是结果\r\n\t\t\t\t//相当于2的loop次幂\r\n\t\t\t\tSystem.out.println(i&lt;&lt;loop);\r\n\t\t\t}\r\n\t\t\tloop ++;\r\n\t\t\t//x=x/2\r\n\t\t\tx = x&gt;&gt;1;\r\n\t\t\tif(x == 0)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}", "Konwledge_Point": "线性规划简介", "Question": ["一道面试题", ["已知一个集合,{1,2,4,8,16.....}", "a + b + c + n = x", "a b c ...都是集合里的任意数,x已知,求a b c...值", "比如 ", "a(2) + b(8) + c(16) = 26 ", "a(1) + b(2) = 3", "a(1) + b(4) + c(8) = 13", "a(1) + b(2) + c(4) + d(8) = 15  ", "问题补充", "抛出异常的爱 写道", "\n", "xiaozhen57520 写道", "\n", "已知一个集合,{1,2,4,8,16.....}", "a + b + c + n = x", "a b c ...都是集合里的任意数,x已知,求a b c...值", "比如 ", "a(2) + b(8) + c(16) = 26 ", "a(1) + b(2) = 3", "a(1) + b(4) + c(8) = 13", "a(1) + b(2) + c(4) + d(8) = 15  ", "\n", "大学线性代数习题.", "怎么弄,我不会", "问题补充", "抛出异常的爱 写道", "\n", "xiaozhen57520 写道", "\n", "\n", "抛出异常的爱 写道", "\n", "\n", "xiaozhen57520 写道", "\n", "已知一个集合,{1,2,4,8,16.....}", "a + b + c + n = x", "a b c ...都是集合里的任意数,x已知,求a b c...值", "比如 ", "a(2) + b(8) + c(16) = 26 ", "a(1) + b(2) = 3", "a(1) + b(4) + c(8) = 13", "a(1) + b(2) + c(4) + d(8) = 15  ", "\n", "大学线性代数习题.", "\n", "怎么弄,我不会", "\n", "看错题了....", "应该是二进制的问题.", "\n", "见过,看见别人用Xor 异或弄过."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\ntypedef int DataType;\ntypedef struct node\n{\n    DataType &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;;\n    struct node* next;\n}LNode, * LinkList;\nLinkList CreatLinkList(); &lt;span class=\"hljs-comment\"&gt;//创建带头结点单链表,并返回头指针。&lt;/span&gt;\nvoid PrintLinkList(LinkList H);&lt;span class=\"hljs-comment\"&gt;//依次输出单链表H中各个元素结点&amp;#xff0c;若为空表则输出NONE。&lt;/span&gt;\nLinkList CombineList(LinkList La, LinkList Lb);\nint main()\n{\n    LinkList la, lb;\n    la &amp;#61; CreatLinkList();\n    lb &amp;#61; CreatLinkList();\n    la &amp;#61; CombineList(la, lb);\n    PrintLinkList(la);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\nLinkList CreatLinkList()\n{\n    int n, i;\n    LNode* nw, * rear &amp;#61; NULL, *head &amp;#61; NULL;\n    head &amp;#61; (LNode*)malloc(sizeof(LNode));\n    rear &amp;#61; head;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);&lt;span class=\"hljs-comment\"&gt;//接收结点总数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        nw &amp;#61; (LNode*)malloc(sizeof(LNode));\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%d&amp;#34;, &amp;amp;nw-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;rear&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; nw;\n        rear &amp;#61; nw;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;rear&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    return head;\n}\n\nvoid PrintLinkList(LinkList H)\n{\n    LNode* p;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (!(H-&amp;gt;&lt;/span&gt;next))\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;NONE\\n&amp;#34;&lt;/span&gt;);\n        return;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;for&lt;/span&gt; (p &amp;#61; H-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;; p; p &amp;#61; p-&amp;gt;&lt;/span&gt;next)\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%d &amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-comment\"&gt;/* 请在这里填写答案 */&lt;/span&gt;\n\nLinkList CombineList(LinkList La, LinkList Lb)\n{\n    int m &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    L&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;inkList&lt;/span&gt; p &amp;#61; La-&amp;gt;&lt;/span&gt;next;\n    L&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;inkList&lt;/span&gt; q &amp;#61; Lb-&amp;gt;&lt;/span&gt;next;\n    L&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;inkList&lt;/span&gt; p1 &amp;#61; La-&amp;gt;&lt;/span&gt;next;\n                  &lt;span class=\"hljs-comment\"&gt;//LinkList p2 &amp;#61; p1-&amp;gt;next;&lt;/span&gt;\n    L&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;inkList&lt;/span&gt; q1 &amp;#61; Lb-&amp;gt;&lt;/span&gt;next;\n                  &lt;span class=\"hljs-comment\"&gt;//LinkList q2 &amp;#61; q1-&amp;gt;next;&lt;/span&gt;\n    LinkList h, head;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; (p) { p &amp;#61; p-&amp;gt;&lt;/span&gt;next; m&amp;#43;&amp;#43;; }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; (q) { q &amp;#61; q-&amp;gt;&lt;/span&gt;next; n&amp;#43;&amp;#43;; }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m &amp;lt;&amp;#61; n)\n    {\n        head &amp;#61; h &amp;#61; La;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p1 &amp;amp;&amp;amp; q1)\n        {\n            i&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; p1;\n                head &amp;#61; p1;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p1&lt;/span&gt; &amp;#61; p1-&amp;gt;&lt;/span&gt;next;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q1;\n                head &amp;#61; q1;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q1&lt;/span&gt; &amp;#61; q1-&amp;gt;&lt;/span&gt;next;\n            }\n#&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q1&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; p1-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p1&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q1;\n            q1 &amp;#61; q2;\n            p1 &amp;#61; p2;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p2&lt;/span&gt; &amp;#61; p2-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q2&lt;/span&gt; &amp;#61; q2-&amp;gt;&lt;/span&gt;next;\n            m--;\n            n--;\n#endif\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p1)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; p1;//q1-&amp;gt;&lt;/span&gt;next &amp;#61; p1;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (q1)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q1;//p1-&amp;gt;&lt;/span&gt;next &amp;#61; q1;\n        }\n        free(Lb);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        head &amp;#61; h &amp;#61; Lb;    &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p1 &amp;amp;&amp;amp; q1)\n        {\n            i&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q1;\n                head &amp;#61; q1;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q1&lt;/span&gt; &amp;#61; q1-&amp;gt;&lt;/span&gt;next;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; p1;\n                head &amp;#61; p1;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p1&lt;/span&gt; &amp;#61; p1-&amp;gt;&lt;/span&gt;next;\n            }\n        }\n#&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p1&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q1-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q1&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; p1;\n            q1 &amp;#61; q2;\n            p1 &amp;#61; p2;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p2&lt;/span&gt; &amp;#61; p2-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q2&lt;/span&gt; &amp;#61; q2-&amp;gt;&lt;/span&gt;next;\n            m--;\n            n--;\n    }\n#endif\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (q1)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q1;  //p1-&amp;gt;&lt;/span&gt;next &amp;#61; q1;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p1)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; p1; //q1-&amp;gt;&lt;/span&gt;next &amp;#61; p1;\n        }\n        free(La);\n    }\n    return h;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["两个单链表元素交叉合并", ["pta显示段错误，不知道哪里错了", "\n", "题目：", "\n", "设带头结点的线性单链表A={", "a1", ",", "a2", ",...,am}，", "B={b1,b2,...,bn} ", "。试编写算法按下列规则合并A、", "B为线性单链表C，使得\n", "\n C={", "a1", ",", "b1,a2,b2,...am,bm,...,bn} ", "，  m<=n\n 或者\n C={", "b1,a1,b2,a2,...,bn,an,...,am} ", ",   m>n\n", "\n", "其中 La 和 Lb 都是用户传入的参数，分别为待合并单链表的头指针。函数须返回合并后的单链表的头指针。", "\n", "函数接口定义：", "\n", "LinkList CombineList(LinkList La,LinkList Lb); ", "\n", "裁判测试程序样例：", "\n", "#include <stdio.h>", "#include <stdlib.h>", "typedef int DataType;", "typedef struct node", "{", "    DataType data;", "    struct node *next;", "}LNode,*LinkList;", "\n", "LinkList CreatLinkList();  //创建带头结点单链表,并返回头指针。", "void PrintLinkList(LinkList H);//依次输出单链表H中各个元素结点，若为空表则输出NONE。", "LinkList CombineList(LinkList La,LinkList Lb);", "main()", "{", "    LinkList la,lb;", "    la = CreatLinkList();", "    lb = CreatLinkList();", "    la=CombineList(la,lb);", "    PrintLinkList(la);", "}", "\n", "LinkList CreatLinkList()", "{", "    int n,i;", "    LNode *nw,*rear=NULL,", "head=NULL;", "    head=(LNode", ")malloc(sizeof(LNode));", "    rear=head;", "    scanf(\"%d\",&n);//接收结点总数", "    for(i=0;i<n;i++)", "    {", "        nw=(LNode*)malloc(sizeof(LNode));", "        scanf(\"%d\",&nw->data);", "        rear->next=nw;", "        rear=nw;", "    }", "    rear->next=NULL;", "    return head;", "}", "\n", "void PrintLinkList(LinkList H)", "{", "    LNode *p;", "    if(!(H->next))", "    {", "        printf(\"NONE\\n\");", "        return;", "    }", "    for(p=H->next;p;p=p->next)", "        printf(\"%d \",p->data);", "    printf(\"\\n\");", "}", "\n", "/* 请在这里填写答案 */", "\n", "我的答案：", "\n", "LinkList CombineList(LinkList La,LinkList Lb)\n{\n    int ", "m", "=0,n=0;\n    LinkList ", "p", "=La;\n    LinkList ", "q", "=Lb;\n    LinkList ", "p1", "=La;\n    LinkList ", "p2", "=p1->next;\n    LinkList ", "q1", "=Lb;\n    LinkList ", "q2", "=q1->next;\n    LinkList h;\n    ", "while", "(p)\n    {\n        ", "p", "=p->next;\n        m++;\n    }\n    ", "while", "(q)\n    {\n        ", "q", "=q->next;\n        n++;\n    }\n    ", "if", "(m<=n)\n    {\n        ", "h", "=La;\n        ", "while", "(p1&&q1)\n        {\n            q1->", "next", "=p1->next;\n            p1->", "next", "=q1;\n            ", "q1", "=q2;\n            ", "p1", "=p2;\n            ", "p2", "=p2->next;\n            ", "q2", "=q2->next;\n            m--;\n            n--;\n        }\n        ", "if", "(p1)\n        {\n            q1->", "next", "=p1;\n        }\n        ", "if", "(p2)\n        {\n            p1->", "next", "=q1;\n        }\n        free(Lb);\n    }\n    ", "else", "\n    {\n        ", "h", "=Lb;\n        ", "while", "(p1&&q1)\n        {\n            p1->", "next", "=q1->next;\n            q1->", "next", "=p1;\n            ", "q1", "=q2;\n            ", "p1", "=p2;\n            ", "p2", "=p2->next;\n            ", "q2", "=q2->next;\n            m--;\n            n--;\n        }\n        ", "if", "(q1)\n        {\n            p1->", "next", "=q1;\n        }\n        ", "if", "(p1)\n        {\n            q1->", "next", "=p1;\n        }\n        free(La);\n    }\n   return h;\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以去看看django的中文文档&amp;#xff0c;关于django的模板语言&amp;#xff0c;视图函数部分&amp;#xff0c;或者运行一下runserver&amp;#xff0c;看看运行结果&amp;#xff0c;就知道了&amp;#xff0c;pyecharts用于生成可视化图表&amp;#xff0c;数据来源是django的模型也就数据库&amp;#xff0c;再通过django的模板语言生成html&amp;#xff0c;展示给用户&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["pyecharts与django结合的原理是什么？", ["pyecharts与django结合的原理是什么？百度到的资料很少，现摘录一段，请帮分析一下，谢谢！", "原文链接：", "https://blog.csdn.net/u013421629/article/details/78192402", "这个是views.py：", "\n", "def index(request):\n    template = loader.get", "_template('", "myfirstvis", "/", "pyecharts", ".", "html", "')", "\n    l3d = line3d", "()", "\n    context = dict(\n        myechart=l3d.render", "_embed()", ",\n        host=DEFAULT_HOST,\n        script_list=l3d.get", "_js_dependencies()", "\n    )\n    return ", "HttpResponse(", "template", ".", "render", "(", "context", ", ", "request", ")", ")\n\n\ndef line3d", "()", ":\n#一个定义线性", "3", "D图的函数，不再照抄\n    return line3d\n", "\n", "这个是html：", "\n", "<!-- myfirstvis/templates/pyecharts.html -->", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", ">", "\n\n", "<", "head", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"utf-8\"", ">", "\n    ", "<", "title", ">", "Proudly presented by PycCharts", "</", "title", ">", "\n    ", "{% ", "for", " jsfile_name ", "in", " script_list %}", "\n    ", "<", "script", " ", "src", "=", "\"", "{{host}}", "/", "{{jsfile_name}}", ".js\"", ">", "</", "script", ">", "\n    ", "{% ", "endfor", " %}", "\n", "</", "head", ">", "\n\n", "<", "body", ">", "\n\n  ", "{{myechart|", "safe", "}}", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n", "\n", "主要的不解之处：", "1、render_embed()与render()的区别是什么？分别用在什么地方？", "2、 host=DEFAULT_HOST什么用处？", "3、script_list=l3d.get_js_dependencies()赋值的意义是什么？为什么在html里面要循环？", "4、能否推荐一些原理性的文章？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/technologist_37/article/details/118500579\"&gt;https://blog.csdn.net/technologist_37/article/details/118500579&lt;/a&gt;&lt;br /&gt;一样的功能已经写好了&amp;#xff0c;把main中注释掉的冒泡排序恢复出来&amp;#xff0c;下面那个排序注释掉&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["修正代码，实现需求，给我正确代码，晚上九点之前给回复", ["任务及要求：", "（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；", "（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，信息如下；", "00001 张三 100", "00002 李四 99", "00003 王五 100", "00004 王六 89", "00005 江涛 98", "00006 陈琪 88", "00007 祁廷 91", "（3）接下来，将学号为‘00004’的节点删除；", "（4）再接下来，利用冒泡排序，对链表继续升序排序；", "（5）将完整的线性链表信息从头到尾依次存储到磁盘某个路径下的“score.txt”文件中，存储格式和“stuinfo.txt”文件相同。", "问题:", "我写的代码运行时找不到节点信息，删除不了，后面的代码也没法运行，保存到文件全是乱码。", "代码:", "#include <stdio.h>", "#include<stdlib.h>", "#include<string.h>", "#define LEN sizeof(stuInfo)", "typedef struct stuInfo", "{", "char id[12];            //数据成员    char name[15];    float score;    struct stuInfo *next;}stuInfo, *stu;", "stu headStu;", "void save(stu headStu);", "stuInfo *create(stuInfo *headStu);void Lsort(stu headStu);stuInfo *create(stuInfo *headStu){    int N=7;    headStu=(stuInfo *)malloc(LEN);    stuInfo *p,*q;    p=headStu;    for(int i=0;i<N;i++)    {        q=(stuInfo *)malloc(LEN);        p->next=q;        p->next;        q->next=NULL;        p=q;    }    printf(\"创建结束！\\n\");    return headStu;}void ListStu(stu headStu){    int num;    stuInfo *p;    p=headStu->next;    while(p!=NULL)    {        printf(\"%d:%s %s %f\\n\",++num,p->id,p->name,p->score);        p=p->next;    }    printf(\"打印完毕\\n\");}stu Bubble_Sort(stu headStu){    stu p1,p2;    p1=headStu->next;    p2=headStu;    while(p1!=NULL)    {        while(p1->next!=NULL)        {            if(p1->scorescore)            {                float temp=p1->score;                p1->score=p1->next->score;                p1->next->score=temp;            }            p1=p1->next;        }        p1=p2->next;        p2=p1;    }}stu Delete_stuInfo(stu headStu,char delId[12]){    stu lp,p;    lp=headStu;    p=lp->next;    if(headStu==NULL)    {        printf(\"链表为空\\n\");        return;    }    while(strcmp(p->id,delId)!=0&&(p->next!=NULL))    {        lp=p;        p=p->next;    }    if((strcmp(p->id,delId)==0))    {        lp->next=p->next;        free(p);    }    else        printf(\"没有找到该学生的信息！\\n\");    return headStu;}void Lsort(stu headStu){    stu head;    int x=0;    float t;    stu end,p,next;    if(head==NULL)        return;    for(p=headStu;p->next!=NULL;p=p->next)    end=p;    while(end!=headStu)    {        for(p=headStu;p!=end;p=p->next)        {            if(p->next->score>p->next->score)            {                t=p->score;p->score=p->next->score;p->next->score=t;            }            next=p;        }        end=next;    }}void save(stu headStu){    int N=7;    FILE *fp;    stu p=headStu->next;    if((fp=fopen(\"score.txt\",\"w+\"))==NULL)    {        printf(\"文件打开失败！\\n\");        exit(-1);    }    else    {        printf(\"打开save成功\\n\");    }    for(int i=0;i<N;i++)    {        fprintf(fp,\"%s %s %f\",p->id,p->name,p->score);        p=p->next;    }    printf(\"文件保存成功！\\n\");    fclose(fp);}void load(){    char id[12],name[15];    float score;    int N=7;    FILE *fp;    fp=fopen(\"stuinfo.txt\",\"rb+\");    if(fp==NULL)    {        printf(\"文件打开失败！\");        exit(-1);    }    else    {        printf(\"读取成功:\\n\");    }    stuInfo *h,*p,*q;    h=(stuInfo *)malloc(LEN);    p=h;    printf(\" 学号 姓名 分数\\n\");    while(N>0)    {        q=(stuInfo *)malloc(LEN);        fscanf(fp,\"%s %s %f\",&q->id,&q->name,&q->score);        printf(\"%s %s %f\\n\",q->id,q->name,q->score);        p->next=q;        if(q->next=NULL)        p=q;        N--;    }    printf(\"读取结束!\\n\");    fclose(fp);}int main(){    stu head;    char id[12];    head=create(head);    load();    printf(\"请输入要删除学生的学号：\\n\");    scanf(\"%s\",id);    head=Delete_stuInfo(head,id);    Lsort(head);    save(head);    ListStu(head);    return 0;}"]], "Tag": "算法设计"}
{"Answer": "你实际malloc的空间是给p的，pre只是指向这块空间。退出循环后，你只是让pre指向了NULL，与链表中的节点完全没关系啊。\r\n所以后面你while(po)的时候，很大概率不会因为NULL结束，printf的时候就会段错误了。如果没有那也是意外，因为刚好那块内存是NULL。\r\n你的逻辑有问题，应该是每次malloc完，判断下返回值，然后就填充该节点，然后加入链表中。\r\n现在你在一个循环中，是先给之前的节点赋值，再分配新的节点空间，就会导致最后一个分配的节点里面的数据是不确定的(因为你malloc后没有清零操作)仅供参考\r\n/*随意输入n个数字，作为线性链表，遍历该列表返回输入值最小节点的关键字*/\r\n\r\n#include &lt;stdio.h&gt;\r\n\r\n\r\nstruct example \r\n{\r\nint input;\r\nint keyword;\r\nstruct example* next;\r\n};\r\n\r\ntypedef struct example EXAMPLE;\r\n\r\nint main (void)\r\n{\r\nEXAMPLE* head;\r\nEXAMPLE* p;\r\nEXAMPLE* pre;\r\nEXAMPLE* po;\r\nEXAMPLE* pMin;\r\nint n;\r\nint i = 1;\r\n\r\nprintf(\"n = ? \");\r\nscanf(\"%d\",&amp;n);\r\n\r\nhead = (EXAMPLE*)malloc(sizeof(EXAMPLE));\r\nif(NULL == head)\r\n{\r\n\tprintf(\"no memory\\n\");\r\n\treturn 0;\r\n}\r\n\r\nprintf(\"input = ? \");\r\nscanf(\"%d\",&amp;head-&gt;input);\r\nhead-&gt;keyword = i;\r\nhead-&gt;next = NULL;\r\ni++;\r\n\r\npre = head;\r\nfor(; i &lt;= n; i++)\r\n{\r\n\tp = (EXAMPLE*)malloc(sizeof(EXAMPLE));\r\n    printf(\"input = ? \");\r\n    scanf(\"%d\",&amp;p-&gt;input);\r\n    p-&gt;keyword = i;\t\r\n\tp-&gt;next = NULL;\r\n\r\n    pre-&gt;next = p;\t\r\n\tpre = p;   \r\n}\r\n\r\npo = head;\r\nwhile(po)\r\n{\r\n    printf(\"%d   %d\\n\",po-&gt;keyword, po-&gt;input);\r\n    po = po-&gt;next;\r\n}\r\n\r\np = head-&gt;next;\r\npMin = head;   //好像就是这里出了问题，但不知为什么\r\nwhile(p)\r\n{\r\nif(pMin-&gt;input &gt; p-&gt;input)\r\npMin = p;\r\np = p-&gt;next;\r\n}\r\n\r\nprintf(\"min : %d   %d\\n\",pMin-&gt;keyword, pMin-&gt;input);\r\n\r\n\r\n\r\nreturn 0;\r\n}\r\n\r\n\r\n\r\n```\r\n \r\n```", "Konwledge_Point": "线性规划简介", "Question": ["链表的一个错误，找了很久也没发现为什么错了。。。", ["/*随意输入n个数字，作为线性链表，遍历该列表返回输入值最小节点的关键字*/", "\n\n", "#include ", "\n#include ", "\n#include ", "\n#include ", "\n\n", "struct example ", "\n{", "\n    int     input;", "\n    int     keyword;", "\n    struct example* next;", "\n};", "\n\n", "typedef struct example EXAMPLE;", "\n\n", "int main (void)", "\n{", "\n    EXAMPLE* head;", "\n    EXAMPLE* p;", "\n    EXAMPLE* pre;", "\n    EXAMPLE* po;", "\n    EXAMPLE* pMin;", "\n    int  n;", "\n    int  i;", "\n\n", "printf(\"n = ? \");\nscanf(\"%d\",&n);\n\nhead = (EXAMPLE*)malloc(sizeof(EXAMPLE));\npre = head;\n\nfor(i = 1; i <= n; i++)\n{\n    printf(\"input = ? \");\n    scanf(\"%d\",&pre->input);\n    pre->keyword = i;\n\n    p = (EXAMPLE*)malloc(sizeof(EXAMPLE));\n    pre->next = p;\n    pre = p;\n}\n\npre = NULL;\n\npo = head;\nwhile(po)\n{\n    printf(\"%d   %d\\n\",po->keyword, po->input);\n    po = po->next;\n}\n\np = head->next;\npMin = head;   //好像就是这里出了问题，但不知为什么\n", "\n\n", "/*  while(p)", "\n    {", "\n        if(pMin->input > p->input)", "\n            pMin = p;", "\n        p = p->next;", "\n    }*/", "\n\n", "printf(\"min : %d   %d\\n\",pMin->keyword, pMin->input);\n\n\n\nreturn 0;\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为你的属性都只创建了类似指针的对象,但是没有分配对应地址&lt;br /&gt;在input接受输入后对应分配空间即可&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;     Scanner sc &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new Scanner(System.in)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入录入学生数量:&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        n &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; sc.nextInt()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        name &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new String[n]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        sex &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new char[n]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        math &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new float[n]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        daishu &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new float[n]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        C &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new float[n]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        object &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; new float[n]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Exception in thread \"main\" java.lang.NullPointerException: 哪里出了问题(๑•́ ₃ •̀๑)", ["import java.util.Scanner;", "//定义主类", "public class TestStudent {", "    public static void main (String[] args) {", "\n", "Student Stu ", "=", " new Student()", ";", "\nStu.Input()", ";", "\n\n\n}\n", "\n", "}", "\n", "//定义类", "class Student {", "    String[] name;", "    char[] sex;", "    float[] math;", "    float[] daishu;", "    float[] C;", "    float[] object;", "    int n;", "    public void Input () {", "        Scanner sc = new Scanner(System.in);", "        System.out.println(\"请输入录入学生数量:\");", "        n = sc.nextInt();", "        for(int i = 1;i<=n;i++) {", "        System.out.println(\"请输入第\"+i+\"组数据\");", "\n", "    ", "System", ".", "out", ".println(\"请输入第\"+i+\"组姓名\");\n    ", "name", "[i] = sc.nextLine();\n    ", "System", ".", "out", ".println(\"请输入第\"+i+\"组性别\");\n    sex[i] = sc.next().charAt(", "0", ");\n    ", "System", ".", "out", ".println(\"请输入第\"+i+\"组高数成绩\");\n    math[i] = sc.nextFloat();\n    ", "System", ".", "out", ".println(\"请输入第\"+i+\"组线性代数成绩\");\n    daishu[i] = sc.nextFloat();\n    ", "System", ".", "out", ".println(\"请输入第\"+i+\"组C语言成绩\");\n    C[i] = sc.nextFloat();\n    ", "System", ".", "out", ".println(\"请输入第\"+i+\"组面向对象成绩\");\n    ", "object", "[i] = sc.nextFloat();\n    }\n}\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;linked_List.h&amp;#34;&lt;/span&gt;这一句删了&amp;#xff0c;或者把这一句上面的代码都保存到linked_List.h文件中&lt;/span&gt;\n\n看你的文件结构&amp;#xff0c;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;linked_List.h&amp;#34;&lt;/span&gt;应该是cpp文件的第一行。&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于频繁出现linked_List.h:No such file or directory的问题却不知道问题出现在哪这件事", ["做软基实验的时候出现的问题，题目大概是：建立一个空线性链表，依次进行扫描、插入、扫描、删除、扫描的操作。", "\n", "代码如下", "\n", "//linked_List.h", "\n    ", "#", "include", " ", "<iostream>", "\n    ", "using", " ", "namespace", " std;\n    ", "//定义结点类型", "\n    ", "template", " <", "class", " ", "T", ">  ", "//T为虚拟类型", "\n    ", "struct", " ", "node", "\n    { T d;\n      node *next;\n    };\n    ", "//定义线性链表类", "\n    ", "template", " <", "class", " ", "T", ">  ", "//模板声明,数据元素虚拟类型为T", "\n    ", "class", "  ", "linked_List", "\n    { ", "private", ":  ", "//数据成员", "\n        node<T> *head;     ", "//链表头指针", "\n      ", "public", ":   ", "//成员函数", "\n        ", "linked_List", "();    ", "//构造函数,建立空链表", "\n        ", "void", " ", "prt_linked_List", "()", ";  ", "//扫描输出链表中的元素", "\n        ", "void", " ", "ins_linked_List", "(T, T)", ";  ", "//在包含元素x的结点前插入新元素b", "\n        ", "int", " ", "del_linked_List", "(T)", ";     ", "//删除包含元素x的结点", "\n    };\n    ", "//建立空链表", "\n    ", "template", " <", "class", " ", "T", ">\n    linked_List<T>::", "linked_List", "()  \n    { head=", "NULL", ";  ", "return", "; }\n    ", "//扫描输出链表中的元素", "\n    ", "template", " <", "class", " ", "T", ">\n    ", "void", " linked_List<T>::", "prt_linked_List", "()\n    { node<T> *p;\n      p=head;\n      ", "if", " (p==", "NULL", ") { cout <<", "\"空链表！\"", " <<endl; ", "return", "; }\n      ", "do", " { cout <<p->d <<endl; \n           p=p->next;\n         } ", "while", " (p!=", "NULL", ");\n      ", "return", ";\n    }\n    ", "//在包含元素x的结点前插入新元素b", "\n    ", "template", " <", "class", " ", "T", ">\n    ", "void", " linked_List<T>::", "ins_linked_List", "(T x, T b)\n    { node<T> *p, *q;\n      p=", "new", " node<T>;  ", "//申请一个新结点", "\n      p->d=b;      ", "//置新结点的数据域", "\n      ", "if", " (head==", "NULL", ")  ", "//原链表为空", "\n      { head=p; p->next=", "NULL", "; ", "return", ";}\n      ", "if", " (head->d==x)  ", "//在第一个结点前插入", "\n      { p->next=head;  head=p;  ", "return", "; }\n      q=head;\n      ", "while", " ((q->next!=", "NULL", ")&&(((q->next)->d)!=x))\n          q=q->next;  ", "//寻找包含元素x的前一个结点q", "\n      p->next=q->next;  q->next=p;  ", "//新结点p插入到结点q之后", "\n      ", "return", ";\n    }\n    ", "//删除包含元素x的结点元素", "\n    ", "template", " <", "class", " ", "T", ">\n    ", "int", " linked_List<T>::", "del_linked_List", "(T x) \n    { node<T> *p, *q;\n      ", "if", " (head==", "NULL", ") ", "return", "(", "0", "); ", "//链表为空，无删除的元素", "\n      ", "if", " ((head->d)==x)  ", "//删除第一个结点", "\n      { p=head->next; ", "delete", " head; head=p; ", "return", "(", "1", "); }\n      q=head;\n      ", "while", " ((q->next!=", "NULL", ")&&(((q->next)->d)!=x))\n          q=q->next;  ", "//寻找包含元素x的前一个结点q", "\n      ", "if", " (q->next==", "NULL", ") ", "return", "(", "0", "); ", "//链表中无删除的元素", "\n      p=q->next; q->next=p->next;  ", "//删除q的下一个结点p", "\n      ", "delete", " p;  ", "//释放结点p的存储空间", "\n      ", "return", "(", "1", ");\n    }\n", "#", "include", "\"linked_List.h\"", "\n", "int", " ", "main", "()", "\n", "{linked_List<", "int", "> s;\ncout<<", "\"第一次扫描输出链表s中的元素：\"", "<<endl;\ns.", "prt_linked_List", "();\ns.", "ins_linked_List", "(", "10", ",", "10", ");\ns.", "ins_linked_List", "(", "10", ",", "20", ");\ns.", "ins_linked_List", "(", "10", ",", "30", ");\ns.", "ins_linked_List", "(", "40", ",", "40", ");\ncout<<", "\"第二次扫描输出链表s中的元素：\"", "<<endl;\ns.", "prt_linked_List", "();\n", "if", "(s.", "del_linked_List", "(", "30", "))\ncout<<", "\"删除元素：30\"", "<<endl;\n", "else", "\ncout<<", "\"链表中无元素：30\"", "<<endl;\n", "if", "(s.", "del_linked_List", "(", "50", "))\ncout<<", "\"删除元素：50\"", "<<endl;\n", "else", "\ncout<<", "\"链表中无元素：50\"", "<<endl;\ncout<<", "\"第三次扫描输出链表s中的元素：\"", "<<endl;\ns.", "prt_linked_List", "();\n", "return", " ", "0", ";\n}\n\n", "\n", "运行结果", "\n", "\n", "很多程序都出现了这个 No such file or directory，不是很懂，求大佬讲的通俗一点应该怎么解决"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;引用django用户表示user而不是AbstractUser&lt;br /&gt;参考delmo&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;from django.contrib.auth.models import User\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Userinfo(User)&lt;/span&gt;:\n    supernumber &amp;#61; models.&lt;span class=\"hljs-constructor\"&gt;IntegerField(&lt;span class=\"hljs-params\"&gt;verbose_name&lt;/span&gt; &amp;#61; &amp;#39;权限&amp;#39;,&lt;span class=\"hljs-params\"&gt;choices&lt;/span&gt; &amp;#61; ((0,&amp;#39;无权限&amp;#39;)&lt;/span&gt;,(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&amp;#39;销售权限&amp;#39;),(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;管理权限&amp;#34;&lt;/span&gt;)),\n                                      default &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                                      help_text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;非必填:用户登录到前台后的权限&amp;#34;&lt;/span&gt;)\n    isenable &amp;#61; models.&lt;span class=\"hljs-constructor\"&gt;BooleanField(&lt;span class=\"hljs-params\"&gt;verbose_name&lt;/span&gt; &amp;#61; &amp;#39;是否启用&amp;#39;,&lt;span class=\"hljs-params\"&gt;default&lt;/span&gt; &amp;#61; False,&lt;span class=\"hljs-params\"&gt;help_text&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;非必选:用户能否登录前台界面&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    \n    def &lt;span class=\"hljs-constructor\"&gt;__init__(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;args&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;**&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;kwargs&lt;/span&gt;)&lt;/span&gt;:\n        super(Userinfo,self).&lt;span class=\"hljs-constructor\"&gt;__init__(&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;args&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;**&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;kwargs&lt;/span&gt;)&lt;/span&gt;\n        self.&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;_meta&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;_field(&amp;#39;&lt;span class=\"hljs-params\"&gt;is_staff&lt;/span&gt;&amp;#39;)&lt;/span&gt;.verbose_name &amp;#61; &amp;#39;能否登录后台&amp;#39;\n        self.&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;_meta&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;_field(&amp;#39;&lt;span class=\"hljs-params\"&gt;groups&lt;/span&gt;&amp;#39;)&lt;/span&gt;.verbose_name &amp;#61; &amp;#39;用户组&amp;#39;\n        self.&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;_meta&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;_field(&amp;#39;&lt;span class=\"hljs-params\"&gt;user_permissions&lt;/span&gt;&amp;#39;)&lt;/span&gt;.verbose_name &amp;#61; &amp;#39;用户数据库权限&amp;#39;\n        self.&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;_meta&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;_field(&lt;span class=\"hljs-string\"&gt;&amp;#34;last_name&amp;#34;&lt;/span&gt;)&lt;/span&gt;.help_text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;非必填:姓氏&amp;#34;&lt;/span&gt;\n        self.&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;_meta&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;_field(&lt;span class=\"hljs-string\"&gt;&amp;#34;first_name&amp;#34;&lt;/span&gt;)&lt;/span&gt;.help_text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;非必填:名字&amp;#34;&lt;/span&gt;\n        self.&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;_meta&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;_field(&lt;span class=\"hljs-string\"&gt;&amp;#34;email&amp;#34;&lt;/span&gt;)&lt;/span&gt;.help_text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;非必填:邮箱&amp;#34;&lt;/span&gt;\n        self.&lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;_meta&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;get&lt;span class=\"hljs-constructor\"&gt;_field(&lt;span class=\"hljs-string\"&gt;&amp;#34;date_joined&amp;#34;&lt;/span&gt;)&lt;/span&gt;.help_text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;非必填:加入时间&amp;#34;&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Meta:\n        db_table &amp;#61; &amp;#39;userinfo&amp;#39;\n        verbose_name &amp;#61; &amp;#39;用户信息表&amp;#39;\n        verbose_name_plural &amp;#61; verbose_name\n    \n    def &lt;span class=\"hljs-constructor\"&gt;__str__(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;)&lt;/span&gt;:\n        return f&lt;span class=\"hljs-string\"&gt;&amp;#34;用户名:{self.username},权限:{self.supernumber}&amp;#34;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;创建用户&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; django.contrib.auth.hashers import make_password, check_password\n\n\n&lt;span class=\"hljs-comment\"&gt;#从django请求中获取的参数,我这里使用装饰器将所有参数放在可kwargs中&lt;/span&gt;\nname &amp;#61; kwargs.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;)\npwd &amp;#61; kwargs.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;pwd&amp;#39;&lt;/span&gt;)\nmakpwd &amp;#61; make_password(&lt;span class=\"hljs-attribute\"&gt;password&lt;/span&gt;&amp;#61;pwd)\n&lt;span class=\"hljs-comment\"&gt;#添加用户&lt;/span&gt;\nUserinfo.objects.create(&lt;span class=\"hljs-attribute\"&gt;username&lt;/span&gt;&amp;#61;name, &lt;span class=\"hljs-attribute\"&gt;password&lt;/span&gt;&amp;#61;makpwd)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样即可在admin中添加用户的同时自己添加用户&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/386793865046112.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/984384865046135.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/889064865046122.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;有帮助请点一下右上角的采纳,谢谢&lt;br /&gt;&lt;img src=\"https://gitee.com/xxhaadyq/image/raw/master/picture/307778716936171.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python Django", ["这是model模块", "\n", "\n", "from", " django.db ", "import", " models\n", "from", " django.contrib.auth.models ", "import", " AbstractUser\n\n\n\n", "class", " ", "Teacher", "(", "AbstractUser", "):\n    phone = models.CharField(max_length=", "11", ",verbose_name=", "'手机号'", ")\n\n    ", "class", " ", "Meta", ":\n        db_table=", "'teacher'", "\n        verbose_name=", "'教师'", "\n        verbose_name_plural=verbose_name\n    ", "def", " ", "__str__", "(", "self", "):\n        ", "return", " self.username;\n\n", "\n", "这是view模块", "\n", "\n", "#注册模块", "\n", "def", " ", "register", "(request)", ":\n    ", "if", " request.method ==", "\"POST\"", ":\n        forms_Reg = forms.registerForm(request.POST)\n        ", "#帮我做校验", "\n        ", "if", " forms_Reg.is_valid():\n            ", "#校验通过，去数据库创建一个新用户", "\n            forms_Reg.cleaned_data.pop(", "\"re_password\"", ")\n            models.Teacher.objects.create_user(**forms_Reg.cleaned_data)\n            ", "#创建成功之后就跳转到登录页面", "\n            ", "return", " redirect(", "\"/login/\"", ")\n        ", "else:", "\n\n            ", "return", " render(request,", "\"register.html\"", ",{", "\"form_Reg\"", ":forms_Reg", "})\n    form_Reg = forms.registerForm()\n    ", "return", " render(request,", "\"register.html\"", ",{", "\"form_Reg\"", ":form_Reg", "})\n\n", "\n", "这是admin模块", "\n", "\n", "from", " django.contrib ", "import", " ", "admin", "\n", "from", " .models ", "import", " Teacher\n# Register your models here.\n", "admin", ".site.site_header=", "'线性代数试卷生成系统后台'", "\n", "admin", ".site.site_title=\"教师管理\"\n\n@", "admin", ".register(Teacher)\n", "class", " TeacherAdmin(", "admin", ".ModelAdmin):\n    list_display = (", "'username'", ",", "'password'", ")   #要显示的字段\n\n\n\n", "\n", "我基于django的用户模块创建一个用户模块，然后资金弄html然后通过view中的注册函数注册的用户密码是加密，", "但是不知道为什么在Admin中添加的用户，用户密码就不是加密的还出现了以下报错，", "\n"]], "Tag": "算法设计"}
{"Answer": "把transforms.Normalize((0.1307),(0.3081))改为transforms.Normalize((0.1307,),(0.3081,))", "Konwledge_Point": "线性规划简介", "Question": ["请求大神帮帮我，加载MNIST数据集后，显示IndexError: too many indices for tensor of dimension 0", ["我想用线性的模型训练一下MNIST数据集，在运行到", "\ndef train(epoch):", "\n    running_loss = 0.0", "\n    for batch_idx,data in enumerate(train_loader):", "\n语句后显示", "\nIndexError: too many indices for tensor of dimension 0", "\n这是为什么呢？？甚至都还没到将数据放到模型中训练，应该和模型没关系，我也看了其他人的代码，在加载数据这些代码中也没找到什么问题。所以在这请教一下大神，万分感谢Orz", "\n\n", "以下是我的代码：", "\n\n", "import  torch\nfrom torch.utils.data import DataLoader\nfrom torchvision import transforms \nfrom torchvision import datasets\nimport  torch.nn.functional as F\nimport torch.optim as optim\n\nbatch_size = 64\ntransform = transforms.Compose([transforms.ToTensor(),transforms.Normalize((0.1307),(0.3081))])\n\ntrain_dataset = datasets.MNIST(root='./data',\n                               train=True,\n                               download=True,\n                               transform=transform)\ntrain_loader = DataLoader(dataset=train_dataset,\n                          shuffle=True,\n                          batch_size=batch_size)\ntest_dataset = datasets.MNIST(root='./data',\n                              train=False,\n                              download=True,\n                              transform=transform)\ntest_loader = DataLoader(dataset=test_dataset,\n                         shuffle=False,\n                         batch_size=batch_size)\n\nclass Net(torch.nn.Module):\n    def __init__(self):#构造函数\n        super(Net,self).__init__()\n        self.linear1 = torch.nn.Linear(784,512)\n        self.linear2 = torch.nn.Linear(512,256)\n        self.linear3 = torch.nn.Linear(256,128)\n        self.linear4 = torch.nn.Linear(128,64)\n        self.linear5 = torch.nn.Linear(64,10)\n\n    def forward(self, x):\n        x=x.view(-1,784)\n        x = F.relu(self.linear1(x))\n        x = F.relu(self.linear2(x))\n        x = F.relu(self.linear3(x))\n        x = F.relu(self.linear4(x))\n        return self.linear5(x)\n\nmodel = Net()#实例化模型\n\ncriterion = torch.nn.CrossEntropyLoss()\noptimizer = optim.SGD(model.parameters(),lr=0.1,momentum=0.5)#lr为学习率\n\ndef train(epoch):\n    running_loss = 0.0\n    for batch_idx,data in enumerate(train_loader):\n        inputs, target = data\n        optimizer.zero_grad()\n\n        outputs = model(inputs)\n        loss = criterion(outputs, target)\n        loss.backward()\n        optimizer.step()\n        running_loss +=loss.item()\n        if batch_idx%300 == 299:\n            print('[%d,%5d] loss: %.3f' %(epoch+1,batch_idx+1,running_loss/300))\n            running_loss = 0.0\n\nif __name__=='__main__':\n    for epoch in range(10):\n        train(epoch)\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1、Points写成了points。&lt;br /&gt;2、还有变量不能以数字开头命名&amp;#xff0c;你写成了1xx&lt;br /&gt;float 1xx &amp;#61; 0, 1yy &amp;#61; 0, 1xy &amp;#61; 0;&lt;br /&gt;3、Points[i].getX写错了&amp;#xff0c;应该写成Points[i].getX()&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Point&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//Piont类的定义&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; y &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) : &lt;span class=\"hljs-built_in\"&gt;x&lt;/span&gt;(x), &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(y) {}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getX&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x; }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getY&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;/span&gt;{ &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; y; }\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x, y;\n};\n\n&lt;span class=\"hljs-comment\"&gt;//直线线性拟合&amp;#xff0c;points为各点,nPiont为点数&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;lineFit&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Point Points[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nPoint)&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;lineFit&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Point Points[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nPoint)&lt;/span&gt; \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; avgX &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, avgY &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; xx &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, yy &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, xy &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; nPoint; i&amp;#43;&amp;#43;)\n    {\n        avgX &amp;#43;&amp;#61; Points[i].&lt;span class=\"hljs-built_in\"&gt;getX&lt;/span&gt;() / nPoint;\n        avgY &amp;#43;&amp;#61; Points[i].&lt;span class=\"hljs-built_in\"&gt;getY&lt;/span&gt;() / nPoint;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; nPoint; i&amp;#43;&amp;#43;)\n    {\n        xx &amp;#43;&amp;#61; (Points[i].&lt;span class=\"hljs-built_in\"&gt;getX&lt;/span&gt;() - avgX) * (Points[i].&lt;span class=\"hljs-built_in\"&gt;getX&lt;/span&gt;() - avgX);\n        yy &amp;#43;&amp;#61; (Points[i].&lt;span class=\"hljs-built_in\"&gt;getY&lt;/span&gt;() - avgY) * (Points[i].&lt;span class=\"hljs-built_in\"&gt;getY&lt;/span&gt;() - avgY);\n        xy &amp;#43;&amp;#61; (Points[i].&lt;span class=\"hljs-built_in\"&gt;getX&lt;/span&gt;() - avgX) * (Points[i].&lt;span class=\"hljs-built_in\"&gt;getY&lt;/span&gt;() - avgY);\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;This line can be fitted by y&amp;#61;ax&amp;#43;b.&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; xy / xx &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;b&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; avgY - xy * avgX / xx &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;&amp;gt;(xy / &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(xx * yy));\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Point p[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;),&lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;14&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;26&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;46&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;67&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;75&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;84&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;Point&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;), };\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; r &amp;#61; &lt;span class=\"hljs-built_in\"&gt;lineFit&lt;/span&gt;(p, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Line coefficient r&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; r &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["应输入标识符，如下图报错,都是什么原因，应该怎么改？", ["#", "ifndef", " _POINT_H", "\n", "#", "define", " _POINT_H", "\n", "class", " ", "Point", " {", "//Piont类的定义", "\n", "public", ":\n    ", "Point", "(", "float", " x = ", "0", ",", "float", " y = ", "0", ") : ", "x", "(x), ", "y", "(y){}\n    ", "float", " ", "getX", "()", " ", "const", " ", "{ ", "return", " x; }\n    ", "float", " ", "getY", "()", " ", "const", " ", "{ ", "return", " y; }\n", "private", ":\n    ", "float", " x, y;\n};\n", "#", "endif", "\n\n\n\n\n\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "\"Point.h\"", "\n", "#", "include", " ", "<cmath>", "\n", "using", " ", "namespace", " std;\n    ", "//直线线性拟合，points为各点,nPiont为点数", "\n", "float", " ", "lineFit", "(", "const", " Point Points[], ", "int", " nPoint)", ";\n    ", "float", " ", "lineFit", "(", "const", " Point Points[], ", "int", " nPoint)", " ", "{\n        ", "float", " avgX = ", "0", ", avgY = ", "0", ";\n        ", "float", " ", "1", "xx = ", "0", ", ", "1", "yy = ", "0", ", ", "1", "xy = ", "0", ";\n        ", "for", " (", "int", " i = ", "0", "; i < nPoint; i++)\n        {\n            avgX += points[i].", "getX", "() / nPoint;\n            avgY += points[i].", "getY", "() / nPoint;\n        }\n        ", "for", " (", "int", " i = ", "0", "; i < nPoint; i++)\n        {\n            ", "1", "xx += (points[i].", "getX", "() - avgX) * (points[i].getX - avgX);\n            ", "1", "yy += (points[i].", "getY", "() - avgY) * (points[i].getY - avgY);\n            ", "1", "xy += (points[i].", "getX", "() - avgX) * (points[i].getY - avgY);\n        }\n        cout << ", "\"This line can be fitted by y=ax+b.\"", " << endl;\n        cout << ", "\"a=\"", " << ", "1", "xy / ", "1", "xx << ", "\" \"", ";\n        cout << ", "\"b=\"", " << avgY - ", "1", "xy * avgX / ", "1", "xx << endl;\n        ", "return", " ", "static_cast", "<", "float", ">(", "1", "xy / ", "sqrt", "(", "1", "xx * ", "1", "yy));\n    }\n    ", "int", " ", "main", "()", "\n    ", "{\n        Point p[", "10", "] = { ", "Point", "(", "6", ",", "10", "),", "Point", "(", "14", ",", "20", "), ", "Point", "(", "26", ",", "30", "), ", "Point", "(", "33", ",", "40", "), ", "Point", "(", "46", ",", "50", "), ", "Point", "(", "56", ",", "60", "), ", "Point", "(", "67", ",", "70", "), ", "Point", "(", "75", ",", "80", "), ", "Point", "(", "84", ",", "90", "), ", "Point", "(", "100", ",", "100", "), };\n        ", "float", " r = ", "lineFit", "(p, ", "10", ");\n        cout << ", "\"Line coefficient r=\"", " << r << endl;\n        ", "return", " ", "0", ";\n    }\n", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你放循环体里万一超出范围还会赋值&amp;#xff0c;最后只能报错。而放判断语句里它会先判断是否会超出范围&amp;#xff0c;一旦超出它就退出&amp;#xff0c;也就不会执行赋值&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于力扣“计算质数”这一题的一些疑问", ["是这样的，这题我试着用“线性筛”的方法进行求解，在解题的过程中发现了这样一个问题，令我很困惑，首先一个代码如下", "\n", "\n```java\n", "class", " ", "Solution", " {\n    ", "public", " ", "int", " ", "countPrimes", "(", "int", " n)", " ", "{\n        ", "//存放质数的集合", "\n        ", "int", "[] primes = ", "new", " ", "int", "[n+", "1", "];\n\n        ", "int", " num = ", "0", ";\n\n        ", "//标记是否为质数", "\n        ", "boolean", "[] bp = ", "new", " ", "boolean", "[n+", "1", "];\n\n        ", "for", " (", "int", " i = ", "2", "; i < n; i++) {\n            ", "if", " (!bp[i]){\n                primes[num++] = i;\n            }\n\n            ", "for", "(", "int", " j = ", "0", ";j < num ;j++){\n                ", "if", "( i * primes[j] < n){\n                    bp[i*primes[j]] = ", "true", ";\n                }\n                \n                ", "//  **关键点在这里**", "\n                ", "if", " (i % primes[j] == ", "0", ") {\n                    ", "break", ";\n                }\n            }\n        }\n\n        ", "return", " num;\n\n    }\n}\n\n", "\n", "\n", "\n", "可以看到，在这里int类型的运算超出表示范围了，所以报错了，但是，如果换一种写法，如下：", "\n", "class", " ", "Solution", " {\n    ", "public", " ", "int", " ", "countPrimes", "(", "int", " n)", " ", "{\n        ", "//存放质数的集合", "\n        ", "int", "[] primes = ", "new", " ", "int", "[n+", "1", "];\n\n        ", "int", " num = ", "0", ";\n\n        ", "//标记是否为质数", "\n        ", "boolean", "[] bp = ", "new", " ", "boolean", "[n+", "1", "];\n\n        ", "for", " (", "int", " i = ", "2", "; i < n; i++) {\n            ", "if", " (!bp[i]){\n                primes[num++] = i;\n            }\n\n            ", "for", "(", "int", " j = ", "0", ";j < num && i * primes[j] < n;j++){\n                bp[i*primes[j]] = ", "true", ";\n                ", "if", " (i % primes[j] == ", "0", ") {\n                    ", "break", ";\n                }\n            }\n        }\n\n        ", "return", " num;\n\n    }\n}\n\n", "\n", "也就是把判断放到for循环的判断语句里了，结果如下：", "\n", "\n", "所以说判断语句放在for循环的循环体里和放在for循环的判断语句里是有所不同的吗？", "到底有什么不同呢？希望有人能帮我答疑解惑"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; x数组没有排序&amp;#xff0c;最小值索引7&amp;#xff0c;最大值索引8&amp;#xff0c;直线就是这两点的连线。建议将 yvals &amp;#61; dfin(x, a, b, c) 改为 yvals &amp;#61; dfin(x[np.argsort(x)], a, b, c)&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["python拟合曲线为什么画的图中一条曲线一条直线", ["python拟合曲线为什么画的图中一条曲线一条直线？给定了函数形式让程序拟合的。", "\n", "import", " matplotlib.pyplot as plt\n", "import", " numpy as np\n", "from", " scipy.optimize import curve_fit\n\n\n", "#去掉了最后一个水平", "\n\n\n", "# x就是等效应变", "\n", "def", " dfin(x, a, b, c):\n    ", "return", " (a*z**b-", "30", ".", "0", ")*(", "1", ".", "0", "-np.exp(-np.log(", "2", ".", "0", "*(x/ee)**c)))+", "30", ".", "0", "\n\n", "# D初始晶粒尺寸", "\n", "D", " = ", "30", ".", "0", "\n", "# z不同温度需要重新输入", "\n", "z", " = ", "1", ".", "92", "*", "10", "**", "20", "\n", "ee", " = ", "0", ".", "0016", "*D**", "0", ".", "2709", "*z**", "0", ".", "1147", "\n", "# 给出x、y对应坐标，即给出等效应变和对应的真实最终晶粒尺寸", "\n", "x", " =", " [0.74,0.69,0.56,0.41,0.3,0.21,0.15,0.12,\n    1.38,1.33,1.18,1.01,0.82,0.64,0.48,0.35]", "\n", "x", " = np.array(x)\n", "num", " =", " [26,29,28,30,31,40,39,41,\n    21,22,23,24,23,27,28,30]", "\n", "y", " = np.array(num)\n\n", "# 非线性最小二乘法拟合", "\n", "parameter_bounds", " = ([", "15", "*", "10", "**", "5", ",-", "0", ".", "25", ",", "0", "],[np.inf,", "0", ",", "3", "])\n", "popt", ", pcov = curve_fit(dfin, x, y, bounds=parameter_bounds)\n", "# 获取popt里面拟合系数", "\n", "print", "(popt)\n", "a", " = popt[", "0", "]\n", "b", " = popt[", "1", "]\n", "c", " = popt[", "2", "]\n", "yvals", " = dfin(x, a, b, c)\n", "print", "('系数a:', a)\n", "print", "('系数b:', b)\n", "print", "('系数c:', c)\n", "print", "('系数yvals:', yvals)\n\n", "# 绘图", "\n", "plot1", " = plt.plot(x, y, 's')\n", "plot2", " = plt.plot(x, yvals, 'r')\n", "plt", ".xlabel('ε')\n", "plt", ".ylabel('d')\n", "plt", ".title('", "1120", ",v=", "14", ",zhui')\n", "plt", ".show()\n\n\n", "\n", "图片如下：", "\n"]], "Tag": "算法设计"}
{"Answer": "现已经找到了此问题的最终原因，因为setImageResource在运行时，会自动匹配相应质量的图片，而且之后也没有及时的资源回收机制，所以导致在加载第三张图片的时候，内存溢出报错（我建立的AVD所分配的内存比较小）。重新建立一个AVD4.0.3，并且把内存改为512M，就不会报错了。如果非要针对内存比较小的Android，或者说是为了节约资源，就尽量不要用setImageBitmap或setImageResource或BitmapFactory.decodeResource来设置一张大图，因为这些函数在完成decode后，最终都是通过java层的createBitmap来完成的，需要消耗更多内存。因此，改用先通过BitmapFactory.decodeStream方法，创建出一个bitmap，再将其设为ImageView的 source，decodeStream最大的秘密在于其直接调用JNI&gt;&gt;nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，从而节省了java层的空间。", "Konwledge_Point": "线性规划简介", "Question": ["Android 项目中不能显示两张以上图片", ["public class MainActivity extends Activity {", "\n\n", "private ImageView[] img=new ImageView[4];//声明一个保存ImageView组件的数组", "\nprivate int[] imagePath= new int[]{R.drawable.img01,R.drawable.img02,R.drawable.img03,R.drawable.img04};//声明并初始化一个保存访问图片的数组", "\n\n", "@Override", "\nprotected void onCreate(Bundle savedInstanceState) {", "\nsuper.onCreate(savedInstanceState);", "\nsetContentView(R.layout.activity_main);", "\nLinearLayout layout=(LinearLayout) findViewById(R.id.layout); //获取XML文件中定义的线性布局管理器", "\nfor (int i=0;i\n{", "\nimg[i]=new ImageView(this);//新创建一个ImageView组件", "\nimg[i].setImageResource(imagePath[i]);//设置要显示的图片", "\nimg[i].setPadding(5, 5, 5, 5);//设置ImageView显示的内边距", "\nLayoutParams params=new LayoutParams(80,40);//设置图片的宽和高", "\nimg[i].setLayoutParams(params);//为ImageView组件设置布局参数", "\nlayout.addView(img[i]);//将ImageView组件添加到布局管理器中", "\n}", "\n}", "\n}", "\n我建立的安卓4.2.2上的项目，但是上边的程序运行一直出错。如果把img长度设置为2，然后imagePath初始化为四个图片中的任何两个，就会成功了。请大神们指点是为什么？", "\n下边是我的布局文件内容", "<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n    xmlns:tools=\"http://schemas.android.com/tools\"", "\n    android:orientation=\"horizontal\"", "\n    android:layout_width=\"fill_parent\"", "\n    android:layout_height=\"fill_parent\"", "\n    android:background=\"@drawable/background\"", "\n    android:id=\"@+id/layout\"", "\n    tools:context=\"${relativePackage}.${activityClass}\" ", "\n    >"]], "Tag": "算法设计"}
{"Answer": "把FrameLayout外面在添加一个线性或相对布局试试，这个布局和你之前`android:id=\"@+id/RelativeLayout1\"布局是平级的，要不然Framelayout总是默认在左边，", "Konwledge_Point": "线性规划简介", "Question": ["把 button 放在框架布局 frame layout 左边的问题", ["在一个垂直的线性布局中设置了两个textviews，还有一个button和一个frame layout框架布局。", "\n我要把按钮放在框架布局的左边，并把按钮放在 relative layout布局中。", "\n但是如何把框架布局 frame layout 放在右边呢？", "\n\n", "<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"@drawable/content_container_white\"\n    android:orientation=\"vertical\" >\n    <TextView\n        android:id=\"@+id/editText1\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:paddingLeft=\"30dp\"\n        android:text=\"@string/t0\"\n        android:textColor=\"@color/black\"\n        android:textSize=\"30dp\" />\n    <TextView\n        android:id=\"@+id/editText2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/t1\"\n        android:textColor=\"@color/black\" />\n    <RelativeLayout\n        android:id=\"@+id/RelativeLayout1\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\" >\n        <Button\n            android:id=\"@+id/buybtn\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"left\"\n            android:layout_marginLeft=\"30dp\"\n            android:text=\"@string/buy_button\" />\n    </RelativeLayout>\n    <FrameLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center_horizontal|right\"\n        android:layout_marginTop=\"10dp\" >\n        <ImageButton\n            android:id=\"@+id/videothumb\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal|center_vertical\"\n            android:src=\"@drawable/button_play_on\" />\n        <ImageView\n            android:id=\"@+id/videothumbimage\"\n            android:layout_width=\"380dp\"\n            android:layout_height=\"170dp\"\n            android:scaleType=\"centerCrop\"\n            android:src=\"@drawable/demo_thumb_home\" />\n    </FrameLayout>\n</LinearLayout>\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;画图你的XYZ都是3D的数组&amp;#xff0c;所以建议用scatter3画图&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; \n[X,Y,Z] &amp;#61; meshgrid(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:.&lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:.&lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;);\nF &amp;#61; X.*Y&amp;#43;Z;\nC &amp;#61;&lt;span class=\"hljs-built_in\"&gt; true&lt;/span&gt;(size(X));\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:numel(X)\n    n &amp;#61; X(i);% x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    y &amp;#61; Y(i);% x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    z &amp;#61; Z(i);\n    c &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;:n\n        c &amp;#61; c&amp;#43;(&lt;span class=\"hljs-number\"&gt;4970250&lt;/span&gt;*y &amp;#43; &lt;span class=\"hljs-number\"&gt;14100&lt;/span&gt;*(k -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; )*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*z &amp;#43; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;*( k - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; )^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * y^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*z&amp;#43;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;*y*z^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/ ...\n            ((&lt;span class=\"hljs-number\"&gt;705&lt;/span&gt;&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y)* (&lt;span class=\"hljs-number\"&gt;1410&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)* y * z&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; *y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y*z&amp;#43;z^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;));\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    x &amp;#61; n;\n    C(i) &amp;#61; &lt;span class=\"hljs-number\"&gt;31.4&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-number\"&gt;31213170&lt;/span&gt;/(&lt;span class=\"hljs-number\"&gt;1410&lt;/span&gt;*x*y&amp;#43;&lt;span class=\"hljs-number\"&gt;1410&lt;/span&gt;*z&amp;#43;x^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x*y*z&amp;#43;z^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))-(&lt;span class=\"hljs-number\"&gt;159&lt;/span&gt;*z/(x*y&amp;#43;z))-(&lt;span class=\"hljs-number\"&gt;161.5&lt;/span&gt;*x*y/(x*y&amp;#43;z))-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*c&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nminf &amp;#61;&lt;span class=\"hljs-built_in\"&gt; min&lt;/span&gt;(F(C));\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(isempty(minf))\n    fprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;无解\\n&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    I &amp;#61; find((minf&amp;#61;&amp;#61;F)&amp;amp;C);\n    x &amp;#61; X(I);\n    y &amp;#61; Y(I);\n    z &amp;#61; Z(I);\n    fmin &amp;#61; x*y&amp;#43;z;\n    fprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;在x&amp;#61;%d,y&amp;#61;%d,z&amp;#61;%d处目标函数有最小值%d\\n&amp;#39;&lt;/span&gt;,x,y,z,fmin)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nF(~C)&amp;#61;&lt;span class=\"hljs-literal\"&gt;NaN&lt;/span&gt;;\nscatter3(X&lt;span class=\"hljs-comment\"&gt;(:),Y(:)&lt;/span&gt;,Z&lt;span class=\"hljs-comment\"&gt;(:),10,F(:)&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;在x&amp;#61;5.010000e&lt;span class=\"hljs-string\"&gt;&amp;#43;00&lt;/span&gt;,y&amp;#61;1.498000e&lt;span class=\"hljs-string\"&gt;&amp;#43;01&lt;/span&gt;,z&amp;#61;24处目标函数有最小值9.904980e&lt;span class=\"hljs-string\"&gt;&amp;#43;01&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请问这个程序为什么不能输出小数呢，改变约束条件，X一直输出为固定的整数", ["三个变量，我知道Z变量求解不变是因为函数问题，不知为何改变约束 X 也一直输出为一个整数", "\n", "\n", "\n[X", ",", "Y", ",", "Z] ", "=", " meshgrid(", "5", ":.", "01", ":", "10", ",", "8", ":.", "01", ":", "15", ",", "24", ":", "30", ")", ";", "\nF ", "=", " X.*Y+Z", ";", "\nC ", "=", " ", "true", "(size(X))", ";", "\nfor i ", "=", " ", "1", ":numel(X)\n    n ", "=", " X(i)", ";% x(1)", "\n    y ", "=", " Y(i)", ";% x(2)", "\n    z ", "=", " Z(i)", ";", "\n    ", "c", " ", "=", " ", "0", ";", "\n    for k ", "=", " ", "1", ":", "0.01", ":n\n        ", "c", " ", "=", " ", "c", "+(", "4970250", "*y + ", "14100", "*(k ", "-1", " )*y^", "2", "*z + ", "10", "*( k - ", "1", " )^", "2", " * y^", "3", " + ", "20", "*(k", "-1", ")*y^", "2", "*z+", "10", "*y*z^", "2", ")/ ...\n            ((", "705", "+(k", "-1", ")*y)* (", "1410", "*(k", "-1", ")* y * z+(k", "-1", ")^", "2", " *y^", "2", "+", "2", "*(k", "-1", ")*y*z+z^", "2", "))", ";", "\n    ", "end", "\n    C(i) ", "=", " ", "31.4", "+(", "31213170", "/(", "1410", "*", "x", "*y+", "1410", "*z+", "x", "^", "2", "*y^", "2", "+", "2", "*", "x", "*y*z+z^", "2", "))-(", "159", "*z/(", "x", "*y+z))-(", "161.5", "*", "x", "*y/(", "x", "*y+z))", "-0.1", "*", "2", "*", "c", "<", "=", "0", ";", "\n", "end", "\nminf ", "=", " ", "min", "(F(C))", ";", "\nif(isempty(minf))\n    fprintf('无解\\n')\nelse\n    I ", "=", " find((minf", "=", "=", "F)&C)", ";", "\n    ", "x", " ", "=", " X(I)", ";", "\n    y ", "=", " Y(I)", ";", "\n    z ", "=", " Z(I)", ";", "\n    fmin ", "=", " ", "x", "*y+z", ";", "\n    fprintf('在", "x", "=", "%d", ",", "y", "=", "%d", ",", "z", "=", "%d", "处目标函数有最小值", "%d", "\\n'", ",", "x", ",", "y", ",", "z", ",", "fmin)\n", "end", "\nF(~C)", "=", "NaN", ";", "\nsurf(X", ",", "Y", ",", "Z", ",", "F)\n\n", "\n", "得到的不是想要的结果，不知是不是函数的问题，还是程序的问题。", "\n", "我的解答思路和尝试过的方法 ：改变X,Y,X取值范围，以及区间步数没有效果", "\n", "我想要达到的结果：输出X,Y，Z都可以是小数，或者有没有其他的函数可以求解这种三元约束非线性方程，（一个三元约束方程，一个三元目标函数，三元范围给定）请求解答"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我想应该是len的问题&amp;#xff0c;可以考虑在全局int len&amp;#61;0;然后在create()中给len赋值n&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["各位看下哪里出了问题(〃'▽'〃)  学生信息录入", ["import java.util.Scanner;", "public class abc {", "    public static void main(String[] args) {", "        Student Stu = new Student();", "        Stu.Creat();", "        Stu.Put();", "        Stu.Print();", "    }", "}", "\n", "class Student {", "    String[] Name;", "    char[] Sex;", "    float[] Hmath;", "    float[] Lmath;", "    float[] C;", "    float[] Object;", "    int len = C.length;", "    public void Creat() {", "        Scanner sc = new Scanner(System.in);", "        System.out.println(\"请输入录入学生信息的数量：\");", "        int n = sc.nextInt();", "        Name = new String[n];", "        Sex = new char[n];", "        Hmath = new float[n];", "        Lmath = new float[n];", "        C = new float[n];", "        Object = new float[n];", "\n", "    ", "for", "(", "int", " i=", "0", ";i<n;i++)\n    {\n         ", "System", ".", "out", ".println(\"请输入第\"+i+\"组数据\");\n         ", "Name", "[i] = sc.nextLine();\n         Sex[i] = sc.next().charAt(", "0", ");\n         Hmath[i] = sc.nextFloat();\n         Lmath[i] = sc.nextFloat();\n         C[i] = sc.nextFloat();\n         ", "Object", "[i] = sc.nextFloat();\n     }\n}\n", "public", " ", "void", " Print() {\n    ", "for", "(", "int", " i=", "0", ";i<len;i++)\n    {\n         ", "System", ".", "out", ".println(\"第\"+i+\"组\");\n         ", "System", ".", "out", ".println(", "Name", "[i]+\",\");\n         ", "System", ".", "out", ".println(Sex[i]+\",\");\n         ", "System", ".", "out", ".println(Hmath[i]+\",\");\n         ", "System", ".", "out", ".println(Lmath[i]+\",\");\n         ", "System", ".", "out", ".println(C[i]+\",\");\n         ", "System", ".", "out", ".println(", "Object", "[i]+\",\");\n     }\n}\n", "public", " ", "void", " Put() {\n    ", "float", " Sum1=", "0", ",Ave1=", "0", ";\n    ", "float", " Sum2=", "0", ",Ave2=", "0", ";\n    ", "float", " Sum3=", "0", ",Ave3=", "0", ";\n    ", "float", " Sum4=", "0", ",Ave4=", "0", ";\n    ", "for", "(", "int", " i=", "0", ";i<len;i++)\n         Sum1+=Hmath[i];\n    ", "for", "(", "int", " i=", "0", ";i<len;i++)\n         Sum2+=Lmath[i];\n    ", "for", "(", "int", " i=", "0", ";i<len;i++)\n         Sum3+=C[i];\n    ", "for", "(", "int", " i=", "0", ";i<len;i++)\n         Sum4+=", "Object", "[i];\n    Ave1=Sum1/len;\n    Ave2=Sum2/len;\n    Ave3=Sum3/len;\n    Ave4=Sum4/len;\n    ", "System", ".", "out", ".println(\"高等数学平均成绩为\"+Ave1);\n    ", "System", ".", "out", ".println(\"线性代数平均成绩为\"+Ave2);\n    ", "System", ".", "out", ".println(\"C语言平均成绩为\"+Ave3);\n    ", "System", ".", "out", ".println(\"面对对象平均成绩为\"+Ave4);\n}\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;你错误定义了inline的函数&lt;br /&gt;建议&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;f&lt;/span&gt;&amp;#61;inline(&amp;#39;x^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;改成&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;f&lt;/span&gt;&amp;#61;&amp;#64;(x)x^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB中二分法出现错误，请问怎样解决", ["#程序", "\n", "function", " g=bisectfun(f,a,b,tol)\n% bisectfun.m函数为编写的利用二分法求解非线性方程组的函数\n% f为方程f(x)=", "0", "中的f(x)\n% a为区间的左端点\n% b为区间的右端点\n% tol为根的精度\n% g为求的根\n", "if", " (nargin==", "3", ")\n    tol=", "1.0e-6", ";\n", "end", "\ng=compute", "_bisect(", "f", ",", "a", ",", "b", ",", "tol", ")", ";\n\n", "function", " r=compute", "_bisect(", "f", ",", "a", ",", "b", ",", "tol", ")", "\n% 计算左端点函数值\nfa=subs(f,a);\n% 计算右端点函数值\n\n\nfb=subs(f,b);\n% 区间中点函数值\nfab=subs(f,(a+b)/", "2", ");\n", "if", "(fa*fab>", "0", ")\n    t=(a+b)/", "2", ";\n    %采用递归方法\n    r=compute", "_bisect(", "f", ",", "t", ",", "b", ",", "tol", ")", ";\n", "else", "\n    ", "if", "(fa*fab==", "0", ")\n        r=(a+b)/", "2", ";\n    ", "else", "\n        ", "if", "(abs(b-a)<=tol)\n            r=(b+", "3", "*a)/", "4", ";\n        ", "else", "\n            s=(a+b)/", "2", ";\n            r=compute", "_bisect(", "f", ",", "a", ",", "s", ",", "tol", ")", ";  \n        ", "end", "\n    ", "end", "\n", "end", "\n\n", "\n", "\n", "\n", "clear all;", "tol=1e-6;", "f=inline('x^3-3*x+1');a=-1;b=1;", "g=bisectfun(f,a,b,tol)", "错误使用 sym>tomupad (line 1229)", "Unable to convert 'inline' to 'sym'.", "\n", "\n", "\n", "出错 sym (line 211)", "                S.s = tomupad(x);", "\n", "出错 subs (line 68)", "    r_unique_name = subs(sym(f_unique_name),varargin{:});", "\n", "出错 bisectfun>compute_bisect (line 15)", "fa=subs(f,a);", "\n", "出错 bisectfun (line 11)", "g=compute_bisect(f,a,b,tol);", "\n", "\n", "\n", "clear all;", "g=bisectfun('x^3-3*x+1',-1,1,1e-6)", "错误使用 sym>convertChar (line 1448)", "Character vectors and strings in the first argument can only specify a variable or number. To evaluate character", "vectors and strings representing symbolic expressions, use 'str2sym'.", "\n", "\n", "\n", "出错 sym>tomupad (line 1214)", "        S = convertChar(x);", "\n", "出错 sym (line 211)", "                S.s = tomupad(x);", "\n", "出错 subs (line 68)", "    r_unique_name = subs(sym(f_unique_name),varargin{:});", "\n", "出错 bisectfun>compute_bisect (line 15)", "fa=subs(f,a);", "\n", "出错 bisectfun (line 11)", "g=compute_bisect(f,a,b,tol);", "\n", "\n", "\n", "\n", "\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;int len &amp;#61; C.length;&lt;br /&gt;这行代码有异常。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Student {\n    String[] &lt;span class=\"hljs-type\"&gt;Name&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[] Sex;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[] Hmath;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[] Lmath;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[] C;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[] &lt;span class=\"hljs-keyword\"&gt;Object&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; Creat() {\n        Scanner sc &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;请输入录入学生信息的数量&amp;#xff1a;&amp;#34;);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; sc.nextInt();\n         len&amp;#61;m;\n        &lt;span class=\"hljs-type\"&gt;Name&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; String[m];\n        Sex &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[m];\n        Hmath &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[m];\n        Lmath &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[m];\n        C &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[m];\n        &lt;span class=\"hljs-keyword\"&gt;Object&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt;[m];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;)\n        {\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;请输入第&amp;#34;&amp;#43;i&amp;#43;&amp;#34;组数据&amp;#34;);\n             &lt;span class=\"hljs-type\"&gt;Name&lt;/span&gt;[i] &amp;#61; sc.nextLine();\n             Sex[i] &amp;#61; sc.next().charAt(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n             Hmath[i] &amp;#61; sc.nextFloat();\n             Lmath[i] &amp;#61; sc.nextFloat();\n             C[i] &amp;#61; sc.nextFloat();\n             &lt;span class=\"hljs-keyword\"&gt;Object&lt;/span&gt;[i] &amp;#61; sc.nextFloat();\n         }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; Print() {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n        {\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;第&amp;#34;&amp;#43;i&amp;#43;&amp;#34;组&amp;#34;);\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-type\"&gt;Name&lt;/span&gt;[i]&amp;#43;&amp;#34;,&amp;#34;);\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(Sex[i]&amp;#43;&amp;#34;,&amp;#34;);\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(Hmath[i]&amp;#43;&amp;#34;,&amp;#34;);\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(Lmath[i]&amp;#43;&amp;#34;,&amp;#34;);\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(C[i]&amp;#43;&amp;#34;,&amp;#34;);\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-keyword\"&gt;Object&lt;/span&gt;[i]&amp;#43;&amp;#34;,&amp;#34;);\n         }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; Put() {\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Sum1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,Ave1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Sum2&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,Ave2&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Sum3&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,Ave3&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; Sum4&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,Ave4&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n             Sum1&amp;#43;&amp;#61;Hmath[i];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n             Sum2&amp;#43;&amp;#61;Lmath[i];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n             Sum3&amp;#43;&amp;#61;C[i];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n             Sum4&amp;#43;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;Object&lt;/span&gt;[i];\n        Ave1&amp;#61;Sum1/len;\n        Ave2&amp;#61;Sum2/len;\n        Ave3&amp;#61;Sum3/len;\n        Ave4&amp;#61;Sum4/len;\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;高等数学平均成绩为&amp;#34;&amp;#43;Ave1);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;线性代数平均成绩为&amp;#34;&amp;#43;Ave2);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;C语言平均成绩为&amp;#34;&amp;#43;Ave3);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;面对对象平均成绩为&amp;#34;&amp;#43;Ave4);\n    }\n}\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; TestStudent {\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        Student Stu &amp;#61; &lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Student();\n        Stu.Creat();\n        Stu.Put();\n        Stu.Print();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["希望有人解答这个Java问题", ["代码要求是线性表输入学生成绩信息", "\n", "import java.util.Scanner;\n", "class", " ", "Student", " {\n    String[] Name;\n    ", "char", "[] Sex;\n    ", "float", "[] Hmath;\n    ", "float", "[] Lmath;\n    ", "float", "[] C;\n    ", "float", "[] Object;\n    ", "int", " len = C.length;\n    ", "public", " ", "void", " ", "Creat", "(", ")", " {\n        Scanner sc = ", "new", " Scanner(System.", "in", ");\n        System.", "out", ".println(", "\"请输入录入学生信息的数量：\"", ");\n        ", "int", " m = sc.nextInt();\n        Name = ", "new", " String[m];\n        Sex = ", "new", " ", "char", "[m];\n        Hmath = ", "new", " ", "float", "[m];\n        Lmath = ", "new", " ", "float", "[m];\n        C = ", "new", " ", "float", "[m];\n        Object = ", "new", " ", "float", "[m];\n        ", "for", "(", "int", " i=", "0", ";i<m;i++)\n        {\n             System.", "out", ".println(", "\"请输入第\"", "+i+", "\"组数据\"", ");\n             Name[i] = sc.nextLine();\n             Sex[i] = sc.next().charAt(", "0", ");\n             Hmath[i] = sc.nextFloat();\n             Lmath[i] = sc.nextFloat();\n             C[i] = sc.nextFloat();\n             Object[i] = sc.nextFloat();\n         }\n    }\n    ", "public", " ", "void", " ", "Print", "(", ")", " {\n        ", "for", "(", "int", " i=", "0", ";i<len;i++)\n        {\n             System.", "out", ".println(", "\"第\"", "+i+", "\"组\"", ");\n             System.", "out", ".println(Name[i]+", "\",\"", ");\n             System.", "out", ".println(Sex[i]+", "\",\"", ");\n             System.", "out", ".println(Hmath[i]+", "\",\"", ");\n             System.", "out", ".println(Lmath[i]+", "\",\"", ");\n             System.", "out", ".println(C[i]+", "\",\"", ");\n             System.", "out", ".println(Object[i]+", "\",\"", ");\n         }\n    }\n    ", "public", " ", "void", " ", "Put", "(", ")", " {\n        ", "float", " Sum1=", "0", ",Ave1=", "0", ";\n        ", "float", " Sum2=", "0", ",Ave2=", "0", ";\n        ", "float", " Sum3=", "0", ",Ave3=", "0", ";\n        ", "float", " Sum4=", "0", ",Ave4=", "0", ";\n        ", "for", "(", "int", " i=", "0", ";i<len;i++)\n             Sum1+=Hmath[i];\n        ", "for", "(", "int", " i=", "0", ";i<len;i++)\n             Sum2+=Lmath[i];\n        ", "for", "(", "int", " i=", "0", ";i<len;i++)\n             Sum3+=C[i];\n        ", "for", "(", "int", " i=", "0", ";i<len;i++)\n             Sum4+=Object[i];\n        Ave1=Sum1/len;\n        Ave2=Sum2/len;\n        Ave3=Sum3/len;\n        Ave4=Sum4/len;\n        System.", "out", ".println(", "\"高等数学平均成绩为\"", "+Ave1);\n        System.", "out", ".println(", "\"线性代数平均成绩为\"", "+Ave2);\n        System.", "out", ".println(", "\"C语言平均成绩为\"", "+Ave3);\n        System.", "out", ".println(", "\"面对对象平均成绩为\"", "+Ave4);\n    }\n}\n", "public", " ", "class", " ", "TestStudent", " {\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String[] args", ")", " {\n        Student Stu = ", "new", " Student();\n        Stu.Creat();\n        Stu.Put();\n        Stu.Print();\n    }\n}\n...\n这个代码不知道为什么运行出现下面的错误\n```bash\nException ", "in", " thread ", "\"main\"", " java.lang.NullPointerException: Cannot read the array length because ", "\"this.C\"", " ", "is", " ", "null", "\n        at Student.<", "init", ">(Student.java:", "9", ")\n        at TestStudent.main(TestStudent.java:", "3", ")\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;zh-CN&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;link&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;rel&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;href&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;/static/css/bootstrap.css&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;link&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;href&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;/static/css/base.css&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;rel&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;学生登录&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;&amp;lt;!--引入使用--&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;iframe&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;./母版.html&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;width&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;100%&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;height&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;50&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;frameborder&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;iframe&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;container&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;row&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;col-md-6 col-md-offset-3&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;action&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;/studentlogin/&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;method&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;form-horizontal&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;role&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;form&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                {% csrf_token %}\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;form-group&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;label&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;for&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{  &lt;span class=\"hljs-name\"&gt;form_object.username.id_for_label&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;col-sm-2 control-label&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{ &lt;span class=\"hljs-name\"&gt;form_object.username.label&lt;/span&gt; }}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;label&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;col-sm-10&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{ &lt;span class=\"hljs-name\"&gt;form_object.username&lt;/span&gt; }}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;span&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;helpBlock2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;help-block&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n          &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;/static/jquery-3.3.1.js&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;/static/js/bootstrap.js&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n \n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["pycharm HTML编辑 母版页调用", ["母版", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"zh-CN\"", ">", "\n", "<", "head", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n    ", "<", "title", ">", "Title", "</", "title", ">", "\n    ", "<", "link", " ", "href", "=", "\"/static/css/bootstrap.css\"", " ", "rel", "=", "\"stylesheet\"", ">", "\n    ", "<", "script", " ", "src", "=", "\"/static/jquery-3.3.1.js\"", ">", "</", "script", ">", "\n    ", "<", "script", " ", "src", "=", "\"/static/js/bootstrap.js\"", ">", "</", "script", ">", "\n    ", "<", "link", " ", "rel", "=", "\"stylesheet\"", "  ", "href", "=", "\"/static/css/base.css\"", ">", "\n", "</", "head", ">", "\n", "<", "body", ">", "\n", "<", "div", " ", "class", "=", "\"base-div\"", ">", "\n\n    ", "<", "ul", " ", "class", "=", "\"list-inline\"", ">", "\n        ", "<", "li", ">", "<", "a", " ", "class", "=", "\"base-p\"", ">", "线性代数试卷生成系统", "</", "a", ">", "</", "li", ">", "\n        ", "<", "li", ">", "\n            ", "<", "button", " ", "type", "=", "\"button\"", " ", "class", "=", "\"btn btn-primary\"", " ", "id", "=", "\"button-student\"", ">", "学生登录", "</", "button", ">", "\n        ", "</", "li", ">", "\n        ", "<", "li", ">", "\n            ", "<", "button", " ", "type", "=", "\"button\"", " ", "class", "=", "\"btn btn-primary\"", " ", "id", "=", "\"button-teacher\"", ">", "教师登陆", "</", "button", ">", "\n        ", "</", "li", ">", "\n        ", "<", "li", ">", "\n            ", "<", "button", " ", "type", "=", "\"button\"", " ", "class", "=", "\"btn btn-primary\"", " ", "id", "=", "\"button-admin\"", ">", "管理员登录", "</", "button", ">", "\n        ", "</", "li", ">", "\n        ", "<", "li", " ", "class", "=", "\"message\"", ">", "\n            ", "{{ ", "student.name", " }}", "{{ ", "message", " }}", "\n        ", "</", "li", ">", "\n        ", "<", "li", ">", "\n            ", "<", "button", " ", "type", "=", "\"button\"", " ", "class", "=", "\"btn btn-danger\"", " ", "id", "=", "\"lagout\"", " >", "退出", "</", "button", ">", "\n        ", "</", "li", ">", "\n\n    ", "</", "ul", ">", "\n\n", "</", "div", ">", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n", "\n", "\n", "form表单：", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"zh-CN\"", ">", "\n", "<", "head", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n    ", "<", "link", " ", "rel", "=", "\"stylesheet\"", " ", "href", "=", "\"/static/css/bootstrap.css\"", ">", "\n    ", "<", "link", " ", "href", "=", "\"/static/css/base.css\"", " ", "rel", "=", "\"stylesheet\"", ">", "\n    ", "<", "title", ">", "学生登录", "</", "title", ">", "\n", "</", "head", ">", "\n", "<", "body", ">", "\n", "<", "div", ">", "\n\n", "</", "div", ">", "\n", "<", "div", " ", "class", "=", "\"container\"", " ", "id", "=", "\"username\"", " >", "\n    ", "<", "div", " ", "class", "=", "\"row\"", ">", "\n        ", "<", "div", " ", "class", "=", "\"col-md-6 col-md-offset-3\"", ">", "\n            ", "<", "form", " ", "action", "=", "\"/studentlogin/\"", " ", "method", "=", "\"post\"", " ", "class", "=", "\"form-horizontal\"", " ", "role", "=", "\"form\"", ">", "\n                {% csrf_token %}\n            ", "<", "div", " ", "class", "=", "\"form-group\"", ">", "\n            ", "<", "label", " ", "for", "=", "\"", "{{  ", "form_object.username.id_for_label", "}}", "\"", " ", "class", "=", "\"col-sm-2 control-label\"", ">", "{{ ", "form_object.username.label", " }}", "</", "label", ">", "\n            ", "<", "div", " ", "class", "=", "\"col-sm-10\"", ">", "\n                ", "{{ ", "form_object.username", " }}", "\n                ", "<", "span", " ", "id", "=", "\"helpBlock2\"", " ", "class", "=", "\"help-block\"", ">", "</", "span", ">", "\n            ", "</", "div", ">", "\n          ", "</", "div", ">", "\n            ", "</", "form", ">", "\n        ", "</", "div", ">", "\n    ", "</", "div", ">", "\n\n", "</", "div", ">", "\n\n\n", "<", "script", " ", "src", "=", "\"/static/jquery-3.3.1.js\"", ">", "</", "script", ">", "\n", "<", "script", " ", "src", "=", "\"/static/js/bootstrap.js\"", ">", "</", "script", ">", "\n\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n", "\n", "\n", "想请教一下，pycharm怎样调用自己弄好的模板HTML到新的HTML页面，我设计了一个在顶部的导航栏HTML，我想在设计其它HTML页面的时候保留顶部的导航栏"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/674382464646154.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["pycharm运行不出答案，安装插件了。以前可以运行，代码没有错误", ["这是代码", "\n", "\n", "''", "'非线性回归'", "''", "\nimport matplotlib.pyplot as plt\n", "from", " scipy.optimize import curve_fit\nimport numpy as np\n", "from", " numpy import pi\n", "from", " sklearn.metrics import mean_squared_error, r2_score\n\ndef func(x,a,b,c):\n    return a*np.sin(2*pi*x/12+b)+c\n\n", "x", "=np.linspace(1,12,12)\ny_max=[17, 19, 21, 28, 33, 38, 37, 37, 31, 23, 19, 18]\ny_min=[-62, -59, -56, -46, -32, -18, -9, -13, -25, -46, -52, -58]\n\n", "print", "(", "'时间与最高温度的相关系数矩阵：\\n'", ",np.corrcoef(x,y_max)) #计算相关系数\n", "print", "(", "'时间与最低温度的相关系数矩阵：\\n'", ",np.corrcoef(x,y_min)) #计算相关系数\n\nplt.figure(1)\nplt.scatter(x,y_max,", "color", "=", "'red'", ",marker='.',label='Max')\nplt.scatter(x,y_min,", "color", "=", "'blue'", ",marker='*',label='Min')\nplt.legend(", "loc", "=2)\nplt.xlabel(", "'Month'", ")\nplt.ylabel(", "'Temperature'", ")\nplt.show()\n\npopt1,", "pcov1", "=curve_fit(func,x,y_max)\n", "print", "(", "'最高温度的拟合系数='", ",popt1)\npopt2,", "pcov2", "=curve_fit(func,x,y_min)\n", "print", "(", "'最高温度的拟合系数='", ",popt2)\n\n", "xt", "=np.linspace(1,12,120)\n", "yhat1", "=func(xt,*popt1)\n", "yhat2", "=func(xt,*popt2)\n", "yh1", "=func(x,*popt1)\n", "yh2", "=func(x,*popt2)\n\n", "er1", "=mean_squared_error(y_max,yh1) #计算均方差\n", "er2", "=mean_squared_error(y_min,yh2) #计算均方差\n", "print", "(", "'最高温度的均方差='", ",er1)\n", "print", "(", "'最高温度的均方差='", ",er2)\n", "rt1", "=r2_score(y_max,yh1) #计算R方\n", "rt2", "=r2_score(y_min,yh2) #计算R方\n", "print", "(", "'最高温度的R2='", ",rt1)\n", "print", "(", "'最低温度的R2='", ",rt2)\n\nplt.figure(2)\nplt.scatter(x,y_max,", "color", "=", "'red'", ",marker='.',label='Max')\nplt.scatter(x,y_min,", "color", "=", "'blue'", ",marker='*',label='Mix')\nplt.xlabel(", "'Month'", ")\nplt.ylabel(", "'Temperature'", ")\nplt.plot(xt,yhat1,", "color", "=", "'red'", ",linestyle='dashed',label='Max regression", "')\nplt.plot(xt,yhat2,color='", "blue", "',label='", "Min regression", "')\nplt.legend(loc=2)\nplt.show()\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;有二个地方要改一下&amp;#xff0c;&lt;/p&gt;\n\n&lt;pre&gt;\nkernel_size[0],kernel_size[1]-&amp;gt;kernel_size&amp;#xff0c;要以元组形式参数传入.&lt;/pre&gt;\n\n&lt;p&gt;运行的片断&amp;#xff0c;准确率在98%左右&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\nEpoch 3/12\n60000/60000 [&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;] - 316s 5ms/step - loss: 0.0807 - accuracy: 0.9753 - val_loss: 0.0363 - val_accuracy: 0.9884&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;\n\n&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; keras.__version__&lt;br /&gt;\n&amp;#39;2.3.1&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; tensorflow.__version__&lt;br /&gt;\n&amp;#39;2.2.0&amp;#39;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["深度学习准确率很低的原因", ["\n", "代码如下：", "\n#使用keras训练一个深度神经网络\n#MNIST数据集预处理\n#\nimport numpy as np\nnp.random.seed(1337)\nfrom keras.datasets import mnist\n(X_train,y_train),(X_test,y_test)=mnist.load_data()\nimg_rows,img_cols=28,28\nX_train=X_train.reshape(X_train.shape[0],img_rows,img_cols,1)\nX_test=X_test.reshape(X_test.shape[0],img_rows,img_cols,1)\ninput_shape=(img_rows,img_cols,1)\n#确保矩阵中的数字是【0，1】之间的32位浮点型，而不是【0，255】之间的无符号整数\nX_train=X_train.astype('float32')/255.0\nX_test=X_test.astype('float32')/255.0\n#对训练标签进行独热编码\nfrom keras.utils import np_utils\nn_classes=10\ny_train=np_utils.to_categorical(y_train,n_classes)\ny_test=np_utils.to_categorical(y_test,n_classes)\n#创建一个卷积神经网络\nfrom keras.models import Sequential\nmodel=Sequential()\nfrom keras.layers import Convolution2D\nn_filters=32\nkernel_size=(3,3)\nmodel.add(Convolution2D(n_filters,kernel_size[0],kernel_size[1],padding='valid',input_shape=input_shape))\n#使用一个修正线性单元作为激活函数\nfrom keras.layers import Activation\nmodel.add(Activation('relu'))\n#\nmodel.add(Convolution2D(n_filters,kernel_size[0],kernel_size[1]))\nmodel.add(Activation('relu'))\n#对激活步骤进行池化并添加一个Dropout层\nfrom keras.layers import MaxPooling2D,Dropout\npool_size=(2,2)\nmodel.add(MaxPooling2D(pool_size=pool_size))\nmodel.add(Dropout(0.25))\n#\nfrom keras.layers import Flatten,Dense\nmodel.add(Flatten())\nmodel.add(Dense(128))\nmodel.add(Activation('relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(n_classes))\nmodel.add(Activation('softmax'))\n#\nmodel.compile(loss='categorical_crossentropy',optimizer='adadelta',metrics=['accuracy'])\n#拟合模型\nmodel.fit(X_train,y_train,batch_size=128,epochs=12,verbose=1,validation_data=(X_test,y_test))\nprint(model.evaluate(X_test,y_test,verbose=0))", "\n\n", "结果：", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import pandas as pd\nimport matplotlib&lt;span class=\"hljs-selector-class\"&gt;.pyplot&lt;/span&gt; as plt\ndata &amp;#61; pd&lt;span class=\"hljs-selector-class\"&gt;.read_excel&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;传感器.xlsx&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(data)&lt;/span&gt;&lt;/span&gt;\nx&amp;#61;data&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;]&lt;/span&gt;\ny&amp;#61;data&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;]&lt;/span&gt;\nz&amp;#61;data&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;State&amp;#39;&lt;/span&gt;]&lt;/span&gt;\nplt&lt;span class=\"hljs-selector-class\"&gt;.scatter&lt;/span&gt;(x,y,s&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,marker&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;color&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;,edgecolors&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;k&amp;#39;&lt;/span&gt;)\nplt&lt;span class=\"hljs-selector-class\"&gt;.gcf&lt;/span&gt;()&lt;span class=\"hljs-selector-class\"&gt;.autofmt_xdate&lt;/span&gt;()\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;,c &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; zip(x,y,z):\n    plt&lt;span class=\"hljs-selector-class\"&gt;.text&lt;/span&gt;(x&amp;#61;&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;,y&amp;#61;&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;,s&amp;#61;c,fontdict&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;family&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;Kaiti&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;size&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39;10&amp;#39;&lt;/span&gt;})\n\nplt&lt;span class=\"hljs-selector-class\"&gt;.show&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/188482966746141.PNG\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于python数据可视化的问题！", ["\n", "Time,Name,State", "2011/6/14 22:45,M1,ON", "2011/6/15 8:06,M1,OFF", "2011/6/15 8:09,M4,ON", "2011/6/15 8:09,M4,OFF", "2011/6/15 8:14,M4,ON", "2011/6/15 8:14,M4,OFF", "2011/6/15 8:45,M3,ON", "2011/6/15 8:45,M3,OFF", "2011/6/15 10:23,M3,ON", "2011/6/15 10:23,M3,OFF", "2011/6/15 10:24,M2,ON", "2011/6/15 11:12,M2,OFF", "2011/6/15 13:15,M2,ON", "2011/6/15 14:03,M2,OFF", "2011/6/15 14:03,M1,ON", "2011/6/15 15:21,M1,OFF", "2011/6/15 15:23,M2,ON", "2011/6/15 15:46,M2,OFF", "2011/6/15 15:46,M4,ON", "2011/6/15 15:46,M4,OFF", "2011/6/15 16:01,M4,ON", "2011/6/15 16:01,M4,OFF", "2011/6/15 17:05,M2,ON", "2011/6/15 18:12,M2,OFF", "2011/6/15 19:12,M4,ON", "2011/6/15 19:12,M4,OFF", "2011/6/15 19:15,M2,ON", "2011/6/15 20:54,M2,OFF", "2011/6/15 22:35,M1,ON", "2011/6/16 8:07,M1,OFF", "2011/6/16 8:10,M4,ON", "2011/6/16 8:10,M4,OFF", "2011/6/16 8:15,M4,ON", "2011/6/16 8:16,M4,OFF", "2011/6/16 8:47,M3,ON", "2011/6/16 8:47,M3,OFF", "2011/6/16 10:32,M3,ON", "2011/6/16 10:32,M3,OFF", "2011/6/16 10:35,M2,ON", "2011/6/16 11:18,M2,OFF", "2011/6/16 13:17,M2,ON", "2011/6/16 14:05,M2,OFF", "2011/6/16 14:05,M1,ON", "2011/6/16 15:23,M1,OFF", "2011/6/16 15:25,M2,ON", "2011/6/16 15:49,M2,OFF", "2011/6/16 15:47,M4,ON", "2011/6/16 15:47,M4,OFF", "2011/6/16 16:07,M4,ON", "2011/6/16 16:07,M4,OFF", "2011/6/16 17:08,M2,ON", "2011/6/16 18:21,M2,OFF", "2011/6/16 19:18,M4,ON", "2011/6/16 19:18,M4,OFF", "2011/6/16 19:17,M2,ON", "2011/6/16 20:59,M2,OFF", "2011/6/16 22:57,M1,ON", "2011/6/17 8:15,M1,OFF", "\n", "数据集是这样的，根据线性时间序列排列的传感器开关，M1-M4为传感器名称，ON/OFF为开/关，现想用python数据可视化展示为如下图所示，无论ON/OFF都标注在上面", "\n", "\n", "请问该如何实现呢"]], "Tag": "算法设计"}
{"Answer": "看这篇文章的例子\r\n\r\nhttp://www.blogjava.net/killme2008/archive/2007/09/14/145195.html", "Konwledge_Point": "线性规划简介", "Question": ["线程测试--疑惑", ["今天看了下线程中ReentrantLock类，便根据网上的资料写了个测试代码？ ", "\n结果发现每次运行速度都不一样很纳闷。。。。。特来求教--哪出问题了？ ", "\n另外第一次特别慢许多？", "\nps：网上说  Tim Peierls 用一个简单的线性全等伪随机数生成器（PRNG）构建了一个简单的评测 ", "\n    哪位大虾有这评测,能否提供，感激不尽！ ", "\n[code=\"java\"]public class ReentrantLockTest {", "\n        private CyclicBarrier barrier;", "\n        private Object objTest;", "\n        private int threadNum;  ", "\n\n", "    public ReentrantLockTest(int threadNum) {  \n        barrier = new CyclicBarrier(threadNum + 1);  \n        this.threadNum = threadNum;  \n    }  \n\n    public static void main(String args[]) {  \n        int threadCount = 5000;  \n        ReentrantLockTest test4 = new ReentrantLockTest(threadCount);  \n        test4.objTest = test4.new ReentrantLockUnFair();  \n        test4.test();             \n        ReentrantLockTest test2 = new ReentrantLockTest(threadCount);  \n        test2.objTest = test2.new ReentrantLockUnFair();  \n        test2.test();             \n        ReentrantLockTest test1 = new ReentrantLockTest(threadCount);  \n        test1.objTest = test1.new ReentrantLockFair();  \n        test1.test();  \n        ReentrantLockTest test3 = new ReentrantLockTest(threadCount);  \n        test3.objTest = test3.new SynchronizedTest();  \n        test3.test();  \n    }  \n\n    public void test() {  \n        try {  \n            for (int i = 0; i < threadNum; i++) {  \n                new TestThread(objTest).start();  \n            }  \n            barrier.await(); // 等待所有任务线程创建  \n            long start = System.currentTimeMillis();  \n            barrier.await(); // 等待所有任务计算完成  \n            long end = System.currentTimeMillis();  \n\n           //另外一种写发  \n", "\n\n", "//              long start = System.currentTimeMillis();", "\n//              barrier.await(); // 等待所有任务线程创建", "\n//              barrier.await(); // 等待所有任务计算完成", "\n//              long end = System.currentTimeMillis();    ", "\n\n", "            System.out.println(\"花费时间:\" + (end - start) + \"毫秒\");  \n        } catch (Exception e) {  \n            throw new RuntimeException(e);  \n        }  \n    }  \n\n    class TestThread extends Thread {  \n\n        private Object obj;  \n        public TestThread(Object obj) {  \n            this.obj = obj;  \n        }  \n\n        public void run() {  \n            try {  \n                barrier.await();  \n                obj.equals(\"\");  \n                barrier.await();  \n            } catch (Exception e) {  \n                throw new RuntimeException(e);  \n            }  \n        }  \n    }  \n    class ReentrantLockFair {  \n        public boolean equals(Object obj){  \n            final Lock lock = new ReentrantLock(true);  \n            lock.lock();  \n            try {  \n                for(int i=0 ; i<10 ; i++){  \n                }  \n            } finally {  \n                lock.unlock();  \n            }  \n            return true;  \n        }  \n    }  \n    class ReentrantLockUnFair {  \n        public boolean equals(Object obj){  \n            final Lock lock = new ReentrantLock(false);  \n            lock.lock();  \n            try {  \n                for(int i=0 ; i<10 ; i++){  \n                }  \n            } finally {  \n                lock.unlock();  \n            }  \n            return true;  \n        }  \n    }  \n    class SynchronizedTest {  \n        public boolean equals(Object obj){  \n            synchronized (obj) {  \n                for(int i=0 ; i<10 ; i++){  \n                }                     \n            }  \n            return true;  \n        }  \n    }  \n", "\n\n", "}  [/code]", "\n[b]问题补充：[/b]", "\n个人练习，无需求。。。", "\n弄不明白所以来求教，环境。。本机 :cry: ", "\n[b]问题补充：[/b]", "\n把94行   synchronized (obj) {   改成了 synchronized (this)", "\n\n", "每次测试都不一样，我就是按那篇修改来的", "\n可测试结果每次不一样，请问我这样的测试类有问题吗？问题在哪呢？"]], "Tag": "算法设计"}
{"Answer": "问题已解决，这只是一个思路，对照代码自己看一下，\r\n链接：https://pan.baidu.com/s/1mu_GOwwcvzVI1u1l1mK55Q \r\n提取码：ce12", "Konwledge_Point": "线性规划简介", "Question": ["fragment跳转另一个fragment的问题！", ["项目地址：", "\n链接: ", "https://pan.baidu.com/s/1OHSva0M5PIQMWNP0iwzlLg", " 提取码: csf5 ", "\n\n", "求大能帮我解决一下。我不知道怎么去写这个跳转。", "\n\n", "\n\n", "鼠标点击需要跳转（例如点击“苹果手机”）；", "\n\n", "public class MsgFragment extends Fragment {\n\n    View view;\n    TextView textView;\n    private int i;\n    private String str;\n\n\n    private String[] mVals = new String[] { \"苹果手机\", \"笔记本电脑\", \"电饭煲\", \"腊肉\",\n            \"特产\", \"剃须刀\", \"宝宝\", \"康佳\" };\n    private LayoutInflater mInflater;\n    private FlowLayout mFlowLayout;\n\n    //自定义recyclerveiw的适配器\n\n\n\n    @Override\n    public void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        mInflater = LayoutInflater.from(getContext());\n\n\n    }\n\n    public MsgFragment() {\n    }\n\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n\n       view = inflater.inflate(R.layout.fragment_msg, container, false);\n\n        mFlowLayout = view.findViewById(R.id.id_flowlayout);\n\n\n        initData();\n\n\n        return view;\n    }\n    public void initData() {\n        /**\n         * 找到搜索标签的控件\n         */\n        for (  i = 0; i < mVals.length; i++) {\n            final TextView tv = (TextView) mInflater.inflate(\n                    R.layout.search_label_tv, mFlowLayout, false);\n            tv.setText(mVals[i]);\n            str = tv.getText().toString();\n            //点击事件\n            tv.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    try {\n\n                        switch (str) {\n                            case \"苹果手机\":\n\n\n                                break;\n                            case \"笔记本电脑\":\n\n                                break;\n                            case \"电饭煲\":\n\n                                break;\n                            case \"腊肉\":\n\n                                break;\n                            case \"特产\":\n\n                                break;\n                            case \"剃须刀\":\n\n                                break;\n                            case \"宝宝\":\n\n                                break;\n                            case \"康佳\":\n\n                                break;\n                            default:\n\n                                break;\n                        }\n\n\n\n\n\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                    }\n\n                }\n            });\n            mFlowLayout.addView(tv);//添加到父View\n        }\n\n\n    }\n\n\n}\n", "\n\n", "需要跳转到的fragment", "\n\n", "public class CollectFragment extends Fragment {\n    private View view;//定义view用来设置fragment的layout\n    public RecyclerView mCollectRecyclerView;//定义RecyclerView\n    //定义以goodsentity实体类为对象的数据集合\n    private ArrayList<GoodsEntity> goodsEntityList = new ArrayList<GoodsEntity>();\n    //自定义recyclerveiw的适配器\n    private CollectRecycleAdapter mCollectRecyclerAdapter;\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        //获取fragment的layout\n        view = inflater.inflate(R.layout.item_content, container, false);\n        //对recycleview进行配置\n        initRecyclerView();\n        //模拟数据\n        initData();\n        return view;\n    }\n\n    /**\n     * TODO 模拟数据\n     */\n    private void initData() {\n        for (int i=0;i<10;i++){\n            GoodsEntity goodsEntity=new GoodsEntity();\n            goodsEntity.setGoodsName(\"模拟数据\"+i);\n            goodsEntity.setGoodsPrice(\"100\"+i);\n            goodsEntityList.add(goodsEntity);\n        }\n    }\n\n    /**\n     * TODO 对recycleview进行配置\n     */\n\n    private void initRecyclerView() {\n        //获取RecyclerView\n        mCollectRecyclerView=view.findViewById(R.id.collect_recyclerView);\n        //创建adapter\n        mCollectRecyclerAdapter = new CollectRecycleAdapter(getActivity(), goodsEntityList);\n        //给RecyclerView设置adapter\n        mCollectRecyclerView.setAdapter(mCollectRecyclerAdapter);\n        //设置layoutManager,可以设置显示效果，是线性布局、grid布局，还是瀑布流布局\n        //参数是：上下文、列表方向（横向还是纵向）、是否倒叙\n        mCollectRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));\n        //设置item的分割线\n        mCollectRecyclerView.addItemDecoration(new DividerItemDecoration(getActivity(),DividerItemDecoration.VERTICAL));\n        //RecyclerView中没有item的监听事件，需要自己在适配器中写一个监听事件的接口。参数根据自定义\n        mCollectRecyclerAdapter.setOnItemClickListener(new CollectRecycleAdapter.OnItemClickListener() {\n            @Override\n            public void OnItemClick(View view, GoodsEntity data) {\n                //此处进行监听事件的业务处理\n                Toast.makeText(getActivity(),\"我是item\",Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "用代码插入功能啊，指出哪一个函数有问题", "Konwledge_Point": "线性规划简介", "Question": ["c语言数据结构词索引表出了点问题，谁能帮忙看看呀", ["#include", "\n#include", "\n#include", "\n#include ", "\n#include ", "\n\n", "#define OK 1", "\n#define ERROR 0", "\n#define TRUE 1", "\n#define FALSE 0", "\n#define OVERFLOW -2", "\n\n", "#define MaxBookNum 1000 //假设只对1000本书建立索引表(1000)", "\n#define MaxKeyNum 2500 //索引表的最大容量(2500)", "\n#define MaxLineLen 500 //书目串的最大长度(500)", "\n#define MaxWordNum 10 //词表的最大容量", "\n#define MaxWordLength 30 //单词的最大长度", "\n\n", "typedef int Status;", "\ntypedef int ElemType; //定义链表的数据元素类型为整型", "\ntypedef int Boolean;", "\ntypedef struct", "\n{", "\nchar item[MaxWordNum][MaxWordLength]; //字符串的数组", "\nint last; //词表的长度", "\n}WordListType; //词表的类型（顺序表）", "\ntypedef struct", "\n{", "\nchar ", "ch; //如果是非空串，则按串长分配存储区，否则ch为NULL", "\nint length; //串长度", "\n}HString;", "\ntypedef struct LNode", "\n{", "\nElemType data;", "\nstruct LNode *next;", "\n}LNode,*Link,*Position;", "\ntypedef struct", "\n{", "\nLink head,tail;", "\nint len;", "\n}LinkList;", "\ntypedef struct", "\n{", "\nHString key; //关键词", "\nLinkList bnolist; //存放书号索引的链表", "\n}IdxTermType; //索引项类型", "\ntypedef struct", "\n{", "\nIdxTermType item[MaxKeyNum+1];", "\nint last;", "\n}IdxListType; //索引表类型", "\n//----------------主要变量--------------", "\nchar buf[MaxLineLen]; //书目串缓冲区", "\nWordListType wdlist; //关键字词表", "\nIdxListType idxlist; //索引表", "\nchar oftenwords[6][10] = {\"an\",\"a\",\"of\",\"and\",\"to\",\"the\"};", "\n/", "******************************声明部分****************************************/", "\n//--------------基本操作---------", "\nvoid InitIdxList (IdxListType ", "idxlist);", "\n//初始化操作，置索引表idxlist为空表，且在idxlist.item[0]设一空串", "\nvoid GetLine (FILE *f);", "\n//从文件F读入一个书目信息到书目串缓冲区buf", "\nvoid ExtractKeyWord (int *Num);", "\n//Status ExtractKeyWord(char", " Buffer,WordListType *w,int *Num);", "\n//从buf中提取书名关键词到词表wdlist，书号存入bno", "\nStatus InsIdxList (IdxListType *idxlist,ElemType bno);", "\n//将书号为bno的书名关键词按词典顺序插入索引表idxlist", "\nvoid PutText (FILE *g,IdxListType idxlist);", "\n//将生成的索引表idxlist输出到文件g", "\n//--------------为实现在索引表上进行插入，要先实现下列操作-----------", "\nvoid GetWord (int i,HString *wd);", "\n//用wd返回词表wdist中第i个关键词", "\nint Locate (IdxListType *idxlist,HString wd,Boolean *b);", "\n//在索引表idxlist中查询是否存在与wd相等的关键词。若存在，则返回其在索引表", "\n//中的位置，且b取值TRUE；否则返回插入位置，且b取值FALSE", "\nvoid InsertNewKey(int j,HString wd);", "\n//在索引表idxli的第i项上插入新关键词wd，并初始化书号索引的链表为空表", "\nStatus InsertBook (int i,int bno);", "\n//在索引表idxlist的第i项中插入书号为bno的索引", "\n//------------串的堆分配存储表示-----------", "\nStatus StrAssign(HString *T,char *chars);", "\n//生成一个其值等于串常量chars的串T", "\nint StrCompare(HString S,HString T);", "\n//若S>T，则返回值>0,若S=T，则返回值 = 0，若S<T，则返回值<0", "\nStatus StrCopy(HString *T, HString S);", "\n//由串S复制得串T", "\n\n", "//----------------带头结点的线性链表-------------", "\n\n", "Status InitList(LinkList *L);", "\n//构造一个空的线性链表L", "\n\n", "Status MakeNode(Link *p,ElemType e);", "\n//分配由p指向值e的结点，并返回OK；若分配失败，则返回ERROR", "\n\n", "Status Append (LinkList *L,Link s);", "\n//将指针s所指的一串结点链接在线性链表L的最后一个结点", "\n//之后，改变链表L的尾指针指向新的尾结点", "\n\n", "/*******************************函数部分****************************************/", "\nStatus StrAssign(HString ", "T,char *chars)", "\n{", "\nint i = strlen(chars);", "\nif((*T).ch)", "\nfree((*T).ch);", "\nif(!i){ //若chars为空", "\n(*T).ch = NULL;", "\n(*T).length = 0;", "\n}", "\nelse{ //chars不空", "\nif(!((*T).ch = (char *)malloc(i * sizeof(char)))) //为T分配chars所需的存储空间", "\nexit(OVERFLOW);", "\nint count;", "\nfor(count = 0;count <= i;count++) //把chars存入T中", "\n(*T).ch[count] = chars[count];", "\n(*T).length = i;", "\n} //else", "\nreturn OK;", "\n}", "\nvoid InitString(HString *T)", "\n{", "\n(*T).length = 0;", "\n(*T).ch = NULL;", "\n}", "\nint StrCompare(HString S,HString T)", "\n{", "\nint count;", "\nfor(count = 0;count<S.length && count<T.length;count++){", "\nif(S.ch[count] != T.ch[count])", "\nreturn S.ch[count]-T.ch[count] ;", "\n}", "\nreturn S.length-T.length;", "\n}", "\nStatus StrCopy(HString *T, HString S)", "\n{", "\nint j;", "\nif((*T).ch)", "\nfree((*T).ch); //删除T串中原有值", "\n(*T).ch = (char", ")malloc(S.length * sizeof(char));", "\nif(!(*T).ch)", "\nexit(OVERFLOW);", "\nfor(j = 0; j <= S.length; j++)", "\n(*T).ch[j] = S.ch[j];", "\n(*T).length = S.length;", "\nreturn OK;", "\n}", "\nStatus InitList(LinkList *L)", "\n{", "\nLink p;", "\np = (Link)malloc(sizeof(LNode));", "\nif(!p)", "\nexit(OVERFLOW);", "\np->next = NULL;", "\n(*L).head = (*L).tail = p;", "\n(*L).len = 0;", "\nreturn OK;", "\n}", "\nStatus MakeNode(Link *p,ElemType e)", "\n{", "\n*p = (Link)malloc(sizeof(LNode));", "\nif(!(*p))", "\nexit(OVERFLOW);", "\n(*p)->data = e;", "\n(*p)->next = NULL;", "\nreturn OK;", "\n}", "\nStatus Append (LinkList *L,Link s)", "\n{", "\nint i = 1;", "\n(*L).tail->next = s;", "\nwhile(s->next){", "\ns = s->next;", "\ni++;", "\n}", "\n(*L).tail = s;", "\n(*L).len += i;", "\nreturn OK;", "\n}", "\nvoid GetWord(int i,HString *wd)", "\n{", "\nchar *p;", "\np = *(wdlist.item +i);", "\nStrAssign(wd,p); //生成关键字字符串", "\n}", "\nint Locate(IdxListType *idxlist,HString wd,Boolean *b)", "\n{", "\nint i,m;", "\nfor(i = (*idxlist).last-1; ( m=StrCompare((*idxlist).item[i].key,wd) ) >0; --i);", "\n\n", "if(m == 0){ //找到", "b = TRUE;", "\nreturn i;", "\n}", "\nelse{", "\n*b = FALSE;", "\nreturn i+1;", "\n}", "\n}", "\nvoid InsertNewKey(int j,HString wd)", "\n{", "\nint count;", "\nInitList(&idxlist.item[idxlist.last+1].bnolist);", "\nfor(count = idxlist.last-1; count>=j; --count){ //后移索引项", "\nidxlist.item[count+1] = idxlist.item[count];", "\n}", "\nInitString(&idxlist.item[j].key);", "\nStrCopy(&idxlist.item[j].key,wd); //插入新的索引项 //串赋值", "\nInitList(&idxlist.item[j].bnolist); //初始化书号索引表为空表", "\n++idxlist.last;", "\n}", "\nStatus InsertBook (int i,int bookno)", "\n{", "\nLink p;", "\nif(!MakeNode(&p,bookno))", "\nreturn ERROR;", "\nAppend(&idxlist.item[i].bnolist,p);", "\nreturn OK;", "\n}", "\nStatus InsertIdxList(IdxListType *idxlist,int bno)", "\n{", "\nint i,j;", "\nHString wd;", "\nBoolean b;", "\nInitString(&wd);", "\nfor(i= 0;i<wdlist.last;++i){", "\nGetWord(i,&wd); //获取wdlist中保存的单词", "\nj = Locate(idxlist,wd,&b); //查找是否已存在于idxlist中", "\nif(!b) //不存在", "\nInsertNewKey(j,wd); //则插入新的关键词", "\nInsertBook(j,bno); //插入书号", "\n}", "\nreturn OK;", "\n}", "\nvoid InitIdxList (IdxListType *idxlist)", "\n{", "\nint i;", "\n(*idxlist).last = 0;", "\nfor(i = 0;i<MaxKeyNum;i++){", "\nInitList(&(*idxlist).item[i].bnolist); //初始化索引表项目中的书号的链表", "\n}", "\n}", "\nvoid ExtractKeyWord (int *BookNum)", "\n{", "\nint i = 0,j = 0,k = 0,m;", "\nwdlist.last = 0; //很重要", "\nBoolean Ignore;", "\nchar TempChar[30];", "\nfor(m = 0;m<=30;m++)", "\nTempChar[m] = '\\0'; //清空TempChat[]", "\nwhile(", "(buf+i) !=' '){ //提取书目串缓冲区其中的书号", "\nTempChar[i] = ", "(buf+i); //将书号以字符串类型保存在该数组中", "\ni++;", "\n}", "\nTempChar[i] ='\\0';", "\n*BookNum = atoi(TempChar); //将书号转为int", "\nfor(m = 0;m<=i;m++)", "\nTempChar[m] ='\\0'; //清空TempChat[]", "\ni++; //推进一位，当前", "(buf+i)开始为书名", "\nwhile(*(buf+i) !='\\n' && ", "(buf+i) != '\\0'){", "\n//每个字符串末尾都有结束符\\n", "\nif(", "(buf+i) != ' '){ //若非空字符", "\nif(*(buf+i) >'A'&& *(buf+i) <= 'Z'){", "\n*(buf+i) -= 'A' - 'a'; //若为大写，则转为小写", "\n}", "\nTempChar[j] = *(buf+i); //把当前字符加入TempChar中//------------", "\nj++;", "\ni++;", "\n} //if", "\nelse{ //若为空字符，则检索当前TempChar中保存的字符串是否为常用词", "\nIgnore = FALSE; //若Ignore为TRUE，则为常用词；为FALSE则不是常用词", "\n\n", "for(m = 0;m<6;m++){ //查找是否为常用词", "\nif(strcmp(TempChar,oftenwords[m]) == 0){", "\nIgnore = TRUE; //是常用词", "\nbreak;", "\n}//if", "\n}//for", "\nif(Ignore){", "\nfor(m = 0;m<=j;m++)", "\nTempChar[m] = '\\0'; //清空TempChat[]", "\ni++;", "\nj = 0;", "\n}//if", "\nelse{ //不是常用词", "\nfor(m = 0;m<=j;m++) //将该词插入wdlist中", "\nwdlist.item[wdlist.last][m] = TempChar[m];", "\nfor(m = 0;m<=j;m++)", "\nTempChar[m] = '\\0'; //清空TempChat[]", "\nk++;", "\nwdlist.last++;", "\ni++;", "\nj=0;", "\n}//else", "\n}//else", "\n\n", "}//while", "\n}", "\n\n", "void GetLine(FILE *f)", "\n{", "\nfgets(buf,MaxLineLen,f);", "\n}", "\n\n", "void PutText (FILE ", "g,IdxListType idxlist)", "\n{", "\nint i,j,k;", "\nLink p;", "\nfor(i = 0;i<=idxlist.last;i++){", "\nfor(j = 0;j<idxlist.item[i].key.length; j++)", "\nputc(", "(idxlist.item[i].key.ch + j),g);", "\nputc('\\t',g);", "\nif(idxlist.item[i].key.length < 8)", "\nputc('\\t',g);", "\np = idxlist.item[i].bnolist.head;", "\nfor(k = 0;k\np = p->next;", "\nfprintf(g,\"%03d\",p->data);", "\nputc(' ',g);", "\n}//for", "\nputc('\\n',g);", "\n}//for", "\n}", "\n\n", "void PrintFile(FILE *FileName)", "\n{", "\nchar ch;", "\nrewind(FileName);", "\nch = getc(FileName);", "\nwhile(ch != EOF){", "\nputchar(ch);", "\nch = getc(FileName);", "\n}", "\nprintf(\"\\n\");", "\nrewind(FileName);", "\n}", "\n\n", "/*******************************主函数部分**************************************/", "\n\n", "int main()", "\n{", "\nFILE *f,*g;", "\nint ct;", "\nint BookNo;", "\nif((f = fopen(\"BookName.txt\",\"r\")) == NULL){", "\nprintf(\"ERROR in open BookName.txt\\n\");", "\nexit(1);", "\n}", "\nif((g = fopen(\"KeyWordIndex_self.txt\",\"w\"))==NULL){", "\nprintf(\"ERROR in open KeyWordIndex_self.txt\\n\");", "\nexit(1);", "\n}", "\nprintf(\"书单文件：\\n\");", "\nPrintFile(f);", "\nInitIdxList(&idxlist);", "\nWordListType w;", "\nwhile(!feof(f)){", "\nGetLine(f); //读取书单文件中的一行到缓冲区", "\nExtractKeyWord(&BookNo);", "\nInsertIdxList(&idxlist,BookNo);", "\n}", "\nPutText(g,idxlist);", "\nfclose(f);", "\nfclose(g);", "\nprintf(\"\\n结果如下：\\n\");", "\nif((g = fopen(\"KeyWordIndex_self.txt\",\"r\"))==NULL){", "\nprintf(\"ERROR in open KeyWorkIndex_self.txt\\n\");", "\nexit(1);", "\n}", "\nPrintFile(g);", "\nfclose(g);", "\nreturn 0;", "\n}"]], "Tag": "算法设计"}
{"Answer": "（x,y），（x2， y2）分别表示线性渐变的起始点和结束点，globalCoord 为true 表示两个坐标点是绝对坐标", "Konwledge_Point": "线性规划简介", "Question": ["Echarts饼图x,y,x2,y2是什么含义？", ["\n", "color: {", "\n        type: 'linear',", "\n        x: 0,", "\n        y: 0,", "\n        x2: .1,", "\n        y2: 1,", "\n        colorStops: [{", "\n            offset: 0, color: '#4dcdfc' // 0% 处的颜色，蓝绿色", "\n        },", "\n        {", "\n            offset: 1, color: '#3F77FE' // 100% 处的颜色，蓝色", "\n        }],", "\n        globalCoord: true // 缺省为 false", "\n    }, ", "\n", "\n\n", "普通坐标是下图这种：", "\n\n", "\n\n", "饼图的X坐标的0起点是哪里，往哪个方向是增大的？Y坐标起点是哪里？往哪个方向是增大的？", "\n我尝试了一下，X好像是从左往右递增，Y是从往上下递增，取值范围不是0-1，而是可以更大，而且不能取负数。", "\n另外globalCoord是什么意思？", "\n\n", "完整代码如下：", "\n\n", "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>EChartsTest</title>\n    <!-- 引入 echarts.js -->\n    <script src=\"https://cdn.bootcss.com/echarts/4.2.1-rc1/echarts.min.js\"></script>\n</head>\n<body>\n    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->\n    <div id=\"main\" style=\"width: 600px;height:400px;background-color:#081C28\"></div>\n\n    <script type=\"text/javascript\">\n\n        // 基于准备好的dom，初始化echarts实例\n        var myChart = echarts.init(document.getElementById('main'));\n\n        var option = {\n        series: [\n            {\n                name: '',\n                type: 'pie',\n                radius: ['68%', '83%'], //半径\n                avoidLabelOverlap: true, //是否启用防止标签重叠策略\n                hoverAnimation: false,    //是否开启 hover 在扇区上的放大动画效果\n                color: [\"#ff726b\", \"#87da76\"], //默认色板：粉红色，绿色\n                //设置值域标签\n                label: {\n                    normal: {\n                        fontSize: '14',\n                        position: 'center', //'outer'在饼图外，'inner'在饼图上，'center'在饼图中心\n                        color: '#00FFFC',  //浅蓝色\n                        // formatter: '{b}\\n\\n{d}%' // {b}:数据名； {c}：数据值； {d}：百分比\n                        formatter: function (data) {\n                            return '{name|' + data.name + '}\\n\\n{num|' + data.percent + '%}';\n                        },\n                        //富文本编辑，用于设置文本样式\n                        rich: {\n                            name: {\n                                color: '#00FFFC',\n                                fontSize: '14',\n                                textShadowColor: 'rgba(0,255,252,1)', //浅蓝绿色\n                                textShadowBlur: '4' //文字光影模糊度，其实就是阴影外延出来的长度\n                            },\n                            num: {\n                                color: '#06BEFF',  //亮蓝绿色\n                                fontSize: '30'\n                            }\n                        }\n                    },\n                },\n                //标签的指向线\n                labelLine: {\n                    normal: {\n                        show: false\n                    }\n                },\n                data: [\n                    {\n                        value: 60,\n                        name: '授权使用率',\n                        itemStyle: {\n        //线性渐变，前四个参数分别是 x, y, x2, y2, 范围从 0 - 1，相当于百分比，如果 globalCoord 为'true'，则该四个值是绝对的像素位置，\n                        color: {\n                            type: 'linear',\n                            x: 0,\n                            y: 0,\n                            x2: .1,\n                            y2: 1,\n                            colorStops: [{\n                                offset: 0, color: '#4dcdfc' // 0% 处的颜色，蓝绿色\n                            },\n                            {\n                                offset: 1, color: '#3F77FE' // 100% 处的颜色，蓝色\n                            }],\n                            globalCoord: true // 缺省为 false\n                        }, \n                            shadowColor: 'rgba(0,62,198,0.75)', //饼图的阴影颜色(本例是环形图)，宝蓝色\n                            shadowBlur: 10 //光影模糊度，本质就是阴影外延出去的长度\n                        }\n                    }, {\n                        value: 28,\n                        name: '占位标签',\n                        itemStyle: {\n                            color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: .1,\n                                y2: 1,\n                                colorStops: [{\n                                    offset: 0, color: '#97d0fe' // 0% 处的颜色\n                                },\n                                {\n                                    offset: 1, color: '#8ecdfe' // 100% 处的颜色\n                                }],\n                                globalCoord: true // 缺省为 false\n                            }, \n                            shadowColor: 'rgba(0,62,198,0.75)',\n                            shadowBlur: 10\n                        }, \n                        //这部分用于填充空白，不显示标签。\n                        label: {\n                            normal: {\n                                show: false\n                            }\n                        }\n                    },\n                ]\n            }\n        ]\n    };\n\n        // 使用刚指定的配置项和数据显示图表。\n        myChart.setOption(option);\n\n    </script>\n\n</body>\n</html>\n"]], "Tag": "算法设计"}
{"Answer": "谢谢，你的这个是对的，结果是我想要的，不过跟我讲解下以后做这种嵌套查询的时候要注意什么问题么？还有思路应该怎么整理出来？ \r\n首先你要把表关系搞明白。\r\n其次要真正的明白你想要的结果\r\n不过在工作中用级联查询确实不太多", "Konwledge_Point": "线性规划简介", "Question": ["sql：寻找错误", ["环境： mysql 5.1.45 ", "\n\n", "题目: ", "\n\n", "  已知关系模式: S (SNO,SNAME) 学生关系。SNO 为学号，SNAME 为姓名 ", "\n\n", "  C (CNO,CNAME,CTEACHER) 课程关系。CNO 为课程号，CNAME 为课程名，CTEACHER 为任课教师 ", "\n\n", "  SC(SNO,CNO,SCGRADE) 选课关系。SCGRADE 为成绩", "\n\n", "问题： ", "\n\n", "  找出没有选修过“李明”老师讲授课程的所有学生姓名", "\n\n", "  ", "\n\n", "  ", "\n\n", "create database school;\n\nuse school\n\ncreate table s(\n  sno int not null auto_increment,\n  sname varchar(20) not null,\n  primary key(sno)\n);\n\ncreate table c(\n  cno int not null auto_increment,\n  cname varchar(20) not null,\n  cteacher varchar(20) not null,\n  primary key(cno)\n);\n\ncreate table sc(\n  sno int not null,\n  cno int not null,\n  scgrade int not null,\n  primary key(sno, cno)\n);\n\nalter table sc add constraint fk_s\nforeign key(sno) references s(sno);\n\nalter table sc add constraint fk_c\nforeign key(cno) references c(cno);", "\n", " 再向三张表中插入相应的数据，如下：", "\n", "  ", "\n", "insert into s(sname) values('魏东');\ninsert into s(sname) values('陈标');\ninsert into s(sname) values('张健');\ninsert into s(sname) values('丁翔');\ninsert into s(sname) values('徐章健');\ninsert into s(sname) values('陈燕翔');\ninsert into s(sname) values('单洪奇');\n\ninsert into c(cname, cteacher) values('大学英语', '邱俊敏');\ninsert into c(cname, cteacher) values('高等数学', '孙天川');\ninsert into c(cname, cteacher) values('线性代数', '孙敏');\ninsert into c(cname, cteacher) values('SQL基础', '肖浩');\ninsert into c(cname, cteacher) values('算法设计', '李明');\n\ninsert into sc(sno, cno, scgrade) values(1, 1, 100);\ninsert into sc(sno, cno, scgrade) values(1, 5, 98);\ninsert into sc(sno, cno, scgrade) values(2, 2, 60);\ninsert into sc(sno, cno, scgrade) values(3, 3, 48);\ninsert into sc(sno, cno, scgrade) values(3, 5, 68);\ninsert into sc(sno, cno, scgrade) values(4, 1, 100);\ninsert into sc(sno, cno, scgrade) values(4, 4, 50);\ninsert into sc(sno, cno, scgrade) values(5, 3, 89);\ninsert into sc(sno, cno, scgrade) values(5, 5, 68);\ninsert into sc(sno, cno, scgrade) values(6, 5, 100);\ninsert into sc(sno, cno, scgrade) values(7, 5, 80);\n", "\n\n", " ", "\n\n", "再做题目，进行查询：", "\n\n", " ", "\n\n", "  ", "\n\n", "select sname\nfrom s\nwhere sno in(\n  select sno \n  from sc\n  where cno not in(\n    select cno\n    from c\n    where cteacher = '李明'\n  )\n);", "\n\n", "查询结果是这样的：", "\n\n", "  +--------+", "| sname  |", "+--------+", "| 魏东   |", "| 陈标   |", "| 张健   |", "| 丁翔   |", "| 徐章健 |", "+--------+", "\n\n", "我这样做，为什么还是不能筛选出来人啊？", "\n\n", "而且其中学生：魏东、张健、徐章健都是选了李明老师的课程了的啊？", "\n\n", " ", "\n\n", "哪位能告诉我这个是为什么？", "\n\n", "正确的做法是怎么样的啊？", "\n\n", " ", "\n\n", "还有，对不起了，我现在还没有javaeye的论坛积分", "\n\n", " ", "\n\n", "问题补充：", "\n\n", "  我现在这里是想用嵌套查询，如果能有更加简单的方法，希望各位高手能贡献下。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你上面代码多了一个sort函数调用啊&amp;#xff0c;排序可能是O(n^2)&amp;#xff0c;比较耗时&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于时间复杂度的问题", ["这里用俩段代码，其执行的结果应该是一样的。", "但是代码执行的时间却不一样", "看看 为什么俩段代码时间花费差这么多。", "这段代码花了 1500ms左右", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "const", " ", "int", " N = ", "1e6", " + ", "5", ";\n", "#", "define", " ll long long", "\n", "int", " cnt = ", "0", ";\n", "bool", " isprime[N]{};\n", "int", " prime[N]{};\n", "int", " num[N]{};\n", "int", " sum[N];\n", "int", " dp[N]{};\n", "int", " size = ", "0", ";\n", "int", " not_prime[N]{};\n", "void", " ", "Solution", "(", "int", " n)", " ", "{\n    ", "//一开始假设全是素数，然后再筛掉", "\n    ", "memset", "(isprime, ", "true", ", ", "sizeof", "(isprime));\n    isprime[", "1", "] = ", "false", ";\n    ", "for", " (", "int", " i = ", "2", "; i <= n; ++i) {\n        ", "if", " (isprime[i])prime[++cnt] = i;\n        ", "for", " (", "int", " j = ", "1", "; j <= cnt && i * prime[j] <= n; ++j) {\n            ", "// 任何一个合数 = 质数 * 某一个数", "\n            ", "// i * prime[j]是一个合数", "\n            isprime[i * prime[j]] = ", "false", ";\n            not_prime[size++] = i * prime[j];\n            ", "//如果prime[j]是i的最小质因子，那么 不管 i*x(x:表示随便一个数）的最小质因子都是 prime[j]", "\n            ", "// 又因为 每一个合数都要由最小质因子筛去，所以 就 不让 i乘其他数了,直接break", "\n            ", "if", " (i % prime[j] == ", "0", ")", "break", ";\n        }\n    }\n}\n", "int", " ", "main", "()", "{\n    ", "int", " n;\n    cin >> n;\n    ", "Solution", "(n);\n    ", "sort", "(not_prime, not_prime + size);\n    size--;\n\n    ", "// for (int i = 0; i <= size;++i)", "\n    ", "//     cout << not_prime[i] << endl;", "\n\n    ", "for", " (", "int", " i = ", "0", "; i <= size; i++)\n    {\n        dp[not_prime[i]] = dp[not_prime[i] - ", "1", "] + ", "1", ";\n        num[dp[not_prime[i]]]++;\n    }\n    ", "// for (int i = 0; i <= size;++i){", "\n    ", "//     cout << dp[not_prime[i]] << endl;", "\n    ", "// }", "\n    ", "// for (int i = 1; i <= 3;++i){", "\n    ", "//     cout << num[i] << endl;", "\n    ", "// }", "\n\n    ", "for", " (", "int", " i = ", "sqrt", "(n); i >= ", "1", "; i--)\n        sum[i] += sum[i + ", "1", "] + num[i];\n\n    ", "int", " m;\n    ", "while", "(~", "scanf", "(", "\"%d\"", ",&m)){\n        cout << sum[m] << endl;\n    }\n    ", "//system(\"pause\");", "\n    ", "return", " ", "0", ";\n}\n\n\n\n\n\n", "\n", "这个就花了263ms左右", "\n", "\n", "#", "include", " ", "<bits/stdc++.h>", "\n", "#", "define", " INF 0x3f3f3f3f", "\n", "#", "define", " ll long long", "\n", "using", " ", "namespace", " std;\n", "int", " factor[", "1000005", "];", "//记录最小素因子", "\n", "int", " prime[", "1000005", "],vis[", "1000005", "];", "//记录素数", "\n", "int", " dp[", "1000005", "],cnt[", "1000005", "],sum[", "1000005", "];\n", "int", " p=", "0", ";\n", "// 线性筛", "\n", "void", " ", "init", "(", "int", " n)", "\n", "{\n    vis[", "1", "]=", "1", ";\n    ", "int", " i,j;\n    ", "for", "(i=", "2", ";i<=n;i++){\n        ", "if", "(factor[i]==", "0", "){\n            prime[p++]=i;\n            vis[i]=", "1", ";\n            factor[i]=i;\n        }\n        ", "for", "(j=", "0", ";j<p&&prime[j]*i<=n;j++){\n            factor[prime[j]*i]=prime[j];\n            ", "if", "(i%prime[j]==", "0", ")\n                ", "break", ";\n        }\n    }\n}\n", "int", " ", "main", "()", "{\n    ", "int", " n,m;\n    ", "scanf", "(", "\"%d\"", ",&n);\n    ", "init", "(n);\n    ", "for", "(", "int", " i=", "1", ";i<=n;i++){\n        ", "//dp 记录 连续的个数", "\n        ", "if", "(!vis[i])dp[i]=dp[i", "-1", "]+", "1", ";\n        ", "// cnt[i]: i个连续合数的个数  还不包括区间大于 i 个个数的情况", "\n        ", "// 1234  123 123   1234  cnt[3]=4;  其实3个连续合数的个数不止4个，还要加上 区间长度为4的个数", "\n        ", "// 区间长度为4的 ，是因为 234 也是属于3个连续合数", "\n        ", "// 至于那你为什么不算区间长度为5的？5的不是包含区间长度为3的吗？", "\n        ", "// 其实区间长度为5的，我们已经在算3之前，我们已经细分成 很多个 长度为4的区间了", "\n        cnt[dp[i]]++;\n    }\n    ", "// 3个连续合数的个数 = cnt[3] + 4个连续合数的个数", "\n\n    ", "for", " (", "int", " i = (n); i >= ", "1", "; i--)\n        sum[i] = sum[i + ", "1", "] + cnt[i];\n    ", "while", "(~", "scanf", "(", "\"%d\"", ",&m)){\n        ", "printf", "(", "\"%d\\n\"", ",sum[m]);\n    }\n    ", "return", " ", "0", ";\n\n}\n\n我觉得时间应该花的差不多呀，怎么提交结果的时候，上面的代码还时间超限了。\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用python-docx模块读取word文档&amp;#xff0c;&lt;/p&gt;\n\n&lt;p&gt;再用正则表达式提取需要的内容保存为列表再存入CSV&lt;/p&gt;\n\n&lt;p&gt;代码如下&amp;#xff1a;{如果对你有帮助&amp;#xff0c;可以给我个采纳吗&amp;#xff0c;谢谢!! 点击我这个回答右上方的【采纳】按钮}。&lt;br /&gt;\n &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import re\nimport csv\n# 我先用字符串代替了&amp;#xff0c;你可以改为用python-docx模块读取word文档&amp;#xff0c;\nwordtext &amp;#61; &amp;#39;&amp;#39;&amp;#39;\nIL6,IL10无断点\n\nVersion:1.0 StartHTML:0000000107 EndHTML:0000004359 StartFragment:0000000127 EndFragment:0000004341\n] &amp;#34;此时变量y 为&amp;#xff1a;&amp;#34;\n[1] &amp;#34;IL1b&amp;#34;\n[1] &amp;#34;IL1b&amp;#34;               &amp;#34;-0.107648809523819&amp;#34; &amp;#34;0.339014229656206&amp;#34;  &amp;#34;22.7457597598328&amp;#34;   &amp;#34;0.103020721767575&amp;#34;\n[6] &amp;#34;0.361098065608572&amp;#34;\n[1] &amp;#34;breakpoint:&amp;#34;\n[1] 22.74576\n[1] &amp;#34;-----------------------(end)-----------------------&amp;#34;\n[1] &amp;#34;-----------------------(start)-----------------?------&amp;#34;\n[1] &amp;#34;此时变量y 为&amp;#xff1a;&amp;#34;\n[1] &amp;#34;IL5&amp;#34;\n[1] &amp;#34;IL5&amp;#34;                 &amp;#34;0.0393546517271973&amp;#34;  &amp;#34;0.507875620155004&amp;#34;   &amp;#34;44.9984318923382&amp;#34;    &amp;#34;-0.0739995182265517&amp;#34;\n[6] &amp;#34;0.25727508099701&amp;#34;\n[1] &amp;#34;breakpoint:&amp;#34;\n[1] 44.99843\n[1] &amp;#34;-----------------------(end)-----------------------&amp;#34;\n[1] &amp;#34;-----------------------(start)-----------------?------&amp;#34;\n[1] &amp;#34;此时变量y 为&amp;#xff1a;&amp;#34;\n[1] &amp;#34;IL13&amp;#34;\n[1] &amp;#34;IL13&amp;#34;               &amp;#34;0.376060723360758&amp;#34;  &amp;#34;0.0653383537180709&amp;#34; &amp;#34;49.9999861005274&amp;#34;   &amp;#34;-0.542856877790935&amp;#34;\n[6] &amp;#34;0.0169611166504877&amp;#34;\n[1] &amp;#34;breakpoint:&amp;#34;\n[1] 49.99999\n[1] &amp;#34;-----------------------(end)-----------------------&amp;#34;\n[1] &amp;#34;-----------------------(start)-----------------?------&amp;#34;\n\n&amp;#39;&amp;#39;&amp;#39;\n\nli &amp;#61; re.findall(r&amp;#39;\\[1\\]\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*\\[6\\]\\s*&amp;#34;(.&amp;#43;?)&amp;#34;&amp;#39;,wordtext, re.M)\nprint(*li,sep&amp;#61;&amp;#34;\\n&amp;#34;)\n\nwith open(&amp;#34;data.csv&amp;#34;,&amp;#34;w&amp;#34;,newline&amp;#61;&amp;#34;&amp;#34;) as fileObj:\n    csv.writer(fileObj).writerows(li)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"134\" src=\"https://img-ask.csdnimg.cn/upload/1622471384218.png\" width=\"1012\" /&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["请教如何使用python从word中提取数字，存入CSV", ["分组：2 打印结果依次为 i,b1,P1,breakpoint,b2,P2", "\n和生物燃料的线性关系", "\n", "\nIL6,IL10无断点", "\n", "\nVersion:1.0 StartHTML:0000000107 EndHTML:0000004359 StartFragment:0000000127 EndFragment:0000004341", "\n] \"此时变量y 为：\"", "\n[1] \"IL1b\"", "\n[1] \"IL1b\"               \"-0.107648809523819\" \"0.339014229656206\"  \"22.7457597598328\"   \"0.103020721767575\"", "\n[6] \"0.361098065608572\"", "\n[1] \"breakpoint:\"", "\n[1] 22.74576", "\n[1] \"-----------------------(end)-----------------------\"", "\n[1] \"-----------------------(start)-----------------?------\"", "\n[1] \"此时变量y 为：\"", "\n[1] \"IL5\"", "\n[1] \"IL5\"                 \"0.0393546517271973\"  \"0.507875620155004\"   \"44.9984318923382\"    \"-0.0739995182265517\"", "\n[6] \"0.25727508099701\"   ", "\n[1] \"breakpoint:\"", "\n[1] 44.99843", "\n[1] \"-----------------------(end)-----------------------\"", "\n[1] \"-----------------------(start)-----------------?------\"", "\n[1] \"此时变量y 为：\"", "\n[1] \"IL13\"", "\n[1] \"IL13\"               \"0.376060723360758\"  \"0.0653383537180709\" \"49.9999861005274\"   \"-0.542856877790935\"", "\n[6] \"0.0169611166504877\"", "\n[1] \"breakpoint:\"", "\n[1] 49.99999", "\n[1] \"-----------------------(end)-----------------------\"", "\n[1] \"-----------------------(start)-----------------?------\"", "\n", "\n这个word文件，我想把  \"IL1b\"               \"-0.107648809523819\" \"0.339014229656206\"  \"22.7457597598328\"   \"0.103020721767575\"  这行中的字符串内容提取出来，还有下面那行[6]后面的 \"0.361098065608572\"提取出来，", "\n把这6项存入csv表格的一行中。", "\n然后再依次把\"IL5\" 、\"IL13\"后面的字符串也提出来，存入CSV中，请问，应该如何操作。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/460750051236137.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;下面函数定义和上面的声明对不上&lt;br /&gt;上面写的是&lt;code class=\"language-javascript\"&gt;creat_L&lt;/code&gt;,下面只剩&lt;code class=\"language-javascript\"&gt;creat&lt;/code&gt;了&lt;br /&gt;将下面函数声明时的函数名改为&lt;code class=\"language-javascript\"&gt;creat_L&lt;/code&gt;即可&lt;br /&gt;&lt;strong&gt;有帮助望采纳~&lt;/strong&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["C语言代码打完后出现两个错误，不知是哪出错，求解答！", ["1.未命名1.cpp:(.text+0xaf): undefined reference to `creat_L()'", "2.ld returned 1 exit status", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<conio.h>", "\n", "#", "include", "<math.h>", "\n", "typedef", " ", "int", " ElemType;\n", "typedef", " ", "struct", " ", "LNode", " \n {ElemType data;\n  ", "struct", " ", "LNode", " * next;\n } LNode;\nLNode * L;\n", "LNode * ", "creat_L", "()", ";\n", "void", " ", "out_L", "(LNode * L)", ";\n", "void", " ", "insert_L", "(LNode * L,", "int", " i,ElemType e)", ";\n", "ElemType ", "delete_L", "(LNode * L,", "int", " i)", ";\n", "int", " ", "locat_L", "(LNode * L,ElemType e)", ";\n", "main", "()\n{\n ", "int", " i,k,loc; ElemType e,x; ", "char", " ch;\n    ", "do", "{", "printf", "(", "\"\\n\\n\\n\"", ");\n        ", "printf", "(", "\"\\n\\n 1.建立线性链表\"", ");\n        ", "printf", "(", "\"\\n\\n 2.在i位置插入元素e\"", ");\n        ", "printf", "(", "\"\\n\\n 3.删除第i个元素，返回其值\"", "); \n        ", "printf", "(", "\"\\n\\n 4.查找值为e的元素\"", ");\n        ", "printf", "(", "\"\\n\\n 5.结束程序运行\"", ");\n        ", "printf", "(", "\"\\n============================\"", ");\n        ", "printf", "(", "\"\\n  请输入您的选择（1,2,3,4,5）\"", "); ", "scanf", "(", "\"%d\"", ",&k);\n        ", "switch", "(k)\n        {", "case", " ", "1", ":{  L=", "creat_L", "();  ", "out_L", "(L);\n                }", "break", ";\n         ", "case", " ", "2", ":{", "printf", "(", "\"\\n i,e=?\"", ");", "scanf", "(", "\"%d,%d\"", ",&i,&e);\n                  ", "insert_L", "(L,i,e);    ", "out_L", "(L);    \n                 }", "break", ";    \n         ", "case", " ", "3", ":{", "printf", "(", "\"\\n i=?\"", "); ", "scanf", "(", "\"%d\"", ",&i);\n                 x=", "delete_L", "(L,i);    ", "out_L", "(L);\n                 ", "if", "(x!=", "-1", ") ", "printf", "(", "\"\\n x=%d\\n\"", ",x);\n                 }", "break", ";\n         ", "case", " ", "4", ":{ ", "printf", "(", "\"\\n e=?\"", "); ", "scanf", "(", "\"%d\"", ",&e);\n                 loc=", "locat_L", "(L,e);\n                 ", "if", " (loc=", "-1", ") ", "printf", "(", "\"\\n未找到%d\"", ",loc);\n                 ", "else", " ", "printf", "(", "\"\\n已找到，元素位置是%d\"", ",loc);             \n                 }", "break", ";\n        } \n        ", "printf", "(", "\"\\n----------------------\"", ");\n    }", "while", "(k>=", "1", " && k<", "5", ");\n    ", "printf", "(", "\"\\n      再见\"", ");\n    ", "printf", "(", "\"\\n     按Enter键，返回.\"", ");ch=", "getch", "();     \n}\n", "LNode * ", "creat", "()", "\n", "{LNode * h,* p,* s; ElemType x;\n h=(LNode * )", "malloc", "(", "sizeof", "(LNode));\n h->next=", "NULL", ";\n p=h;\n ", "printf", "(", "\"\\n data=?\"", "); ", "scanf", "(", "\"%d\"", ",&x);\n ", "while", "(x!=", "-111", ")\n     {s=(LNode * )", "malloc", "(", "sizeof", "(LNode));\n      s->data=x; s->next=", "NULL", ";\n      p->next=s; p=s;\n      ", "printf", "(", "\"data=?(-111 end)\"", "); ", "scanf", "(", "\"%d\"", ",&x);\n     }\n     ", "return", "(h);    \n}\n\n", "void", " ", "out_L", "(LNode * L)", "\n", "{LNode * p;", "char", " ch;\n p=L->next;  ", "printf", "(", "\"\\n\\n\"", ");\n ", "while", "(p!=", "NULL", ") { ", "printf", "(", "\"%5d\"", ",p->data); p=p->next;\n                 };\n", "printf", "(", "\"\\n\\n 按Enter键,继续.\"", "); ch=", "getch", "(); \n} \n", "void", " ", "insert_L", "(LNode * L,", "int", " i,ElemType e)", "\n", "{LNode *s,*p,*q; ", "int", " j;\n p=L;\n j=", "0", ";\n ", "while", "(p!=", "NULL", " && j<i", "-1", ") { p=p->next;j++;}\n ", "if", "(p==", "NULL", " || j>i", "-1", ") ", "printf", " (", "\"\\n i ERROR !\"", ");\n ", "else", "{ s=(LNode * )", "malloc", "(", "sizeof", "(LNode));\n         s->data=e;\n         s->next=p->next;\n         p->next=s;\n    }     \n}\n", "ElemType ", "delete_L", "(LNode * L,", "int", " i)", "\n", "{LNode * p,* q;", "int", " j;ElemType x;\n    p=L;j=", "0", ";\n    ", "while", "(p->next!=", "NULL", " && j<i", "-1", "){p=p->next;j++;}\n    ", "if", "(p->next==", "NULL", ") {", "printf", "(", "\"\\n i ERROR !\"", ");", "return", "(", "-1", ");}\n        ", "else", "{q=p->next;x=q->data;\n             p->next=q->next; ", "free", "(q);\n             ", "return", "(x);\n        }\n}\n", "int", " ", "locat_L", "(LNode * L,ElemType e)", "\n", "{LNode * p;", "int", " j=", "1", ";\n  p=L->next;\n  ", "while", "(p!=", "NULL", " && p->data!=e){p=p->next; j++; }\n  ", "if", "(p!=", "NULL", ")", "return", "(j);", "else", " ", "return", "(", "-1", "); \n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;SELECT&lt;/span&gt; S.sn,&lt;span class=\"hljs-built_in\"&gt;MAX&lt;/span&gt;(g)\n&lt;span class=\"hljs-keyword\"&gt;FROM&lt;/span&gt; S,C\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;还是用了关联查询&amp;#xff0c;而且没加上on &lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["怎样把不嵌套mysql语言改成嵌套的", ["\n", "\n", "CREATE TABLE S (", "  sno   INT NOT NULL PRIMARY KEY,", "  sn    CHAR(20) NOT NULL,", "  sex    CHAR(8),", "  dep    INT", ");", "\n", "CREATE TABLE C (", "  cno   INT NOT NULL,", "  cn    CHAR(20),", "  tno   INT NOT NULL,", "  credit    INT,", "  PRIMARY KEY(cno,tno)", ");", "\n", "CREATE TABLE SC (", "  sno   INT NOT NULL,", "  cno   INT NOT NULL,", "  g     INT,", "  PRIMARY KEY(sno,cno)", ");", "\n", "CREATE TABLE Teacher (", "  tno   INT NOT NULL PRIMARY KEY,", "  tn    CHAR(8) NOT NULL,", "  dep    INT", ");", "\n", "CREATE TABLE Dept (", "  dep   INT NOT NULL PRIMARY KEY,", "  dn   CHAR(20) NOT NULL", ");", "\n", "ALTER TABLE S ADD age SMALLINT;", "ALTER TABLE S MODIFY age INT; ", "\n", "INSERT INTO S VALUES", "(1001,'喵喵','m',10,20),", "(1002,'汪汪','f',10,21),", "(1003,'咩咩','m',10,21),", "(1004,'哞哞','f',20,21),", "(1005,'呱呱','m',20,22),", "(1006,'嘎嘎','f',20,22),", "(1007,'咕咕哒','f',30,20),", "(1008,'西西','m',30,20),", "(1009,'哈哈','f',40,21),", "(1010,'张三','m',50,19),", "(1011,'李四','f',30,20),", "(1012,'王五', 'm',50,20),", "(1013,'马六','f',40,18),", "(1014,'伏七','m',20,20),", "(1015,'邢八','f',10,20),", "(1016,'刘九','m',20,21),", "(1017,'邹十','f',30,22),", "(1018,'吕十一','m',40,19),", "(1019,'吴十二','f',50,18),", "(1020,'陈十三','m',50,19),", "(1021,'姚十四','m',30,19);", "\n", "INSERT INTO C VALUES", "(1,'数据结构',101,4),", "(2,'数据库',102,4),", "(3,'离散数学',103,4),", "(4,'C语言程序设计',104,2),", "(5,'高等量子力学',105,3),", "(6,'高等数学',106,6),", "(7,'线性代数',107,4),", "(8,'管理统计学',108,4),", "(9,'财务管理学',109,3),", "(10,'商务智能',100,4);", "\n", "INSERT INTO SC VALUES", "(1001,1,80),", "(1001,2,85),", "(1001,3,78),", "(1002,1,72),", "(1002,2,82),", "(1002,3,86),", "(1003,1,92),", "(1003,3,90),", "(1004,1,87),", "(1004,4,90),", "(1005,1,85),", "(1005,4,92),", "(1006,5,99),", "(1006,2,100),", "(1007,1,80),", "(1007,3,91),", "(1008,7,82),", "(1008,3,59),", "(1009,10,73),", "(1009,9,78),", "(1010,1,92),", "(1010,3,87),", "(1011,10,85),", "(1011,6,88),", "(1012,6,90),", "(1012,8,76),", "(1013,10,59),", "(1013,7,95),", "(1014,6,79),", "(1014,10,97),", "(1015,8,66),", "(1015,3,70),", "(1016,4,69),", "(1016,5,85),", "(1017,10,97),", "(1017,9,96),", "(1018,7,83),", "(1018,5,86),", "(1019,4,90),", "(1019,10,78),", "(1020,9,84),", "(1020,1,99),", "(1021,3,77),", "(1021,7,88);", "INSERT INTO Teacher VALUES", "(101,'张小天',10),", "(102,'胡小伟',10),", "(103,'黄程',10),", "(104,'郭冰',20),", "(105,'钱祺',30),", "(106,'邢文',20),", "(107,'王笑',50),", "(108,'周思',40),", "(109,'庞锦',50),", "(100,'李想',30);", "\n", "INSERT INTO Dept VALUES", "(10,'计算机'),", "(20,'经管'),", "(30,'物理'),", "(40,'广告'),", "(50,'音录');", "\n", "SELECT S.sn,MAX(g)", "FROM S,SC", "WHERE S.sno = SC.sno", "GROUP BY cno;", "\n", "\n", "如果用嵌套结构\n", "SELECT", " S.sn,MAX(g)\n", "FROM", " S,C\n", "WHERE", " S.sno ", "IN", "(\n          ", "SELECT", " SC.sno\n          ", "FROM", " SC\n          ", "WHERE", " SC.cno=C.cno)\n", "GROUP", " ", "BY", " C.cno\n\n![img](https://img-mid.csdnimg.cn/", "release", "/static/image/mid/ask/", "122304252666135.", "png \"#left\")\n\n", "\n", "写出来的就是错的，该怎么改成正确的嵌套结构", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "RecyclerView可以完成你的需求\r\n```\r\n @Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\r\n\t\tMyScrollView rootView = new MyScrollView(this);\r\n\t\trootView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\r\n\r\n\t\tHorizontalScrollView horizontalScrollView = new HorizontalScrollView(this);\r\n\t\thorizontalScrollView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\r\n\r\n\t\tRecyclerView recyclerView = new RecyclerView(this){\r\n\t\t\t@Override\r\n\t\t\tprotected void onMeasure(int widthSpec, int heightSpec) {\r\n\t\t\t\tint expandSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE &gt;&gt; 2,\r\n\t\t\t\t\t\tMeasureSpec.AT_MOST);\r\n\t\t\t\tsuper.onMeasure(widthSpec, expandSpec);\r\n\t\t\t}\r\n\t\t};\r\n\t\trecyclerView.setLayoutManager(new LinearLayoutManager(this,LinearLayoutManager.VERTICAL,false));\r\n\r\n\r\n\t\trecyclerView.setAdapter(new MyAdapter());\r\n\r\n\r\n\t\thorizontalScrollView.addView(recyclerView);\r\n\t\trootView.addView(horizontalScrollView);\r\n\t\tsetContentView(rootView);\r\n\r\n\t}\r\n\r\n\tclass MyAdapter extends RecyclerView.Adapter {\r\n\t\tprivate int size=50;\r\n\t\t@Override\r\n\t\tpublic RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n\t\t\tView view = LayoutInflater.from(TestActivity.this).inflate(R.layout.activity_test, parent, false);\r\n\t\t\tTextView name = (TextView) view.findViewById(R.id.ct2r_1);\r\n\t\t\tview.setTag(name);\r\n\t\t\treturn new RecyclerView.ViewHolder(view) {};\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\r\n\t\t\tif (getItemViewType(position) ==1)\r\n\t\t\t((TextView)holder.itemView.getTag()).setText(\"这是第 \"+ position);\r\n\t\t\telse {\r\n\t\t\t\t((TextView) holder.itemView.getTag()).setText(\"这是第 \" + position / 10 + \"页\");\r\n\t\t\t\tholder.itemView.setBackgroundColor(Color.BLUE);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic int getItemViewType(int position) {\r\n\t\t\treturn (position == 0 || position % 10 !=0) ? 1:2;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic int getItemCount() {\r\n\t\t\tint num = size / 10;\r\n\t\t\treturn size+num;\r\n\t\t}\r\n\t}\r\n\t\r\n\tclass MyScrollView extends ScrollView {\r\n\r\n    private int downY;\r\n    private int mTouchSlop;\r\n\r\n    public MyScrollView(Context context) {\r\n        super(context);\r\n        mTouchSlop = ViewConfiguration.get(context).getScaledTouchSlop();\r\n    }\r\n\r\n    public MyScrollView(Context context, AttributeSet attrs) {\r\n        super(context, attrs);\r\n        mTouchSlop = ViewConfiguration.get(context).getScaledTouchSlop();\r\n    }\r\n\r\n    public MyScrollView(Context context, AttributeSet attrs, int defStyleAttr) {\r\n        super(context, attrs, defStyleAttr);\r\n        mTouchSlop = ViewConfiguration.get(context).getScaledTouchSlop();\r\n    }\r\n\r\n    @Override\r\n    public boolean onInterceptTouchEvent(MotionEvent e) {\r\n        int action = e.getAction();\r\n        switch (action) {\r\n            case MotionEvent.ACTION_DOWN:\r\n                downY = (int) e.getRawY();\r\n                break;\r\n            case MotionEvent.ACTION_MOVE:\r\n                int moveY = (int) e.getRawY();\r\n                if (Math.abs(moveY - downY) &gt; mTouchSlop) {\r\n                    return true;\r\n                }\r\n        }\r\n        return super.onInterceptTouchEvent(e);\r\n    }\r\n}\r\n```", "Konwledge_Point": "线性规划简介", "Question": ["Android 客户端 TextView表格分页显示数据", ["由于接口里面最多有100行数据（可能少于100），显示数据的xml布局文件是在线性布局下面定义了TextView", "\n,不是用的ListView，现在表格里面能显示100行数据出来，现在想在手机上面每个页面显示", "\n10行数据，下面要有页码显示最好，求大神给我指点，本人实在太菜，下面是表格的布局文件,只定义了一行,在代码里面动态添加的，本人QQ：1194660702，帮我解决这个", "\n问题，本人发大红包", "\n\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n              android:id=\"@+id/ct2r_root\"", "\n              android:layout_width=\"fill_parent\"", "\n              android:layout_height=\"wrap_content\"", "\n              android:background=\"#FFEEEEEE\"", "\n              android:orientation=\"vertical\"", "\n              android:padding=\"1px\"", "\n    >", "\n\n", "<LinearLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"horizontal\">\n\n    <TextView\n        android:id=\"@+id/ct2r_1\"\n        android:layout_width=\"130dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n    <TextView\n        android:id=\"@+id/ct2r_2\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_3\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_4\"\n        android:layout_width=\"350dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_5\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_6\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_7\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_8\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <RelativeLayout\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\">\n\n        <TextView\n            android:id=\"@+id/check\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"35dp\"\n            android:layout_centerInParent=\"true\"\n            android:layout_margin=\"0dp\"\n            android:background=\"@drawable/slidingmenu_ct2r_check\"\n            android:gravity=\"center\"/>\n    </RelativeLayout>\n\n    <TextView\n        android:id=\"@+id/ct2r_10\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_11\"\n        android:layout_width=\"200dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n    <TextView\n        android:id=\"@+id/ct2r_12\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\"\n        android:gravity=\"center\"/>\n\n\n    <RelativeLayout\n        android:layout_width=\"100dp\"\n        android:layout_height=\"35dp\"\n        android:layout_column=\"1\"\n        android:layout_margin=\"1px\"\n        android:background=\"#FF333333\">\n\n        <TextView\n            android:id=\"@+id/feedback\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"35dp\"\n            android:layout_centerInParent=\"true\"\n            android:layout_margin=\"0dp\"\n            android:background=\"@drawable/feed_back\"\n            android:gravity=\"center\"/>\n    </RelativeLayout>\n\n\n\n</LinearLayout>\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;官方pretrain的模型数据集是imagenet&amp;#xff0c;样本数是你这个数据集的很多倍&amp;#xff0c;这样的vgg网络卷积层的参数基本收敛到比较好的一个情况&amp;#xff0c;你直接用来finetune只要稍微微调一下最后的fc层就可以得到一个比较好的分类结果了。相比于你自己从0训练网络&amp;#xff0c;你的网络见过的数据比较少&amp;#xff0c;容易过拟合在见到过的数据上&amp;#xff0c;因此你自己从0训练的效果远远不如加载pretrain然后finetune的效果。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["为什么在pytorch中使用VGG16不用预训练，自己从头训练猫狗分类，正确率只有74%就上不去了？", ["这是我的代码。请大家过目。", "而且我在用训练好的pth模型进行单独测试时总会是第0类正确率很高（也就是猫的识别率很高 狗的识别率很低）", "测试集猫狗各500张，猫能识别出400多张而狗只能识别出十几张。", "不知道问题出在哪里？", "训练的loss会一直降，但是验真loss从0.7降到0.6，就趋于平滑，不再下降。", "我试了调整学习率，但是没用。", "\n", "\n", "import", " math\nfrom torch ", "import", " nn\nfrom torchvision ", "import", " models,datasets,transforms\n", "import", " torch\n", "import", " os\nfrom torch.autograd ", "import", " Variable\n", "import", " csv\n", "#import visdom", "\n\n\n", "#viz = visdom.Visdom()", "\ndata_dir = 'VGGTrain'\ndata_transform = {\n    '", "train'", ":transforms", ".Compose", "([transforms", ".Resize", "((224, 224)),\n                          transforms", ".ToTensor", "(),\n                          transforms", ".Normalize", "([0.485,0.456,0.406], [0.229,0.224,0.225]),\n                          transforms", ".RandomHorizontalFlip", "(p=0.5),#水平翻转\n                          transforms", ".RandomRotation", "(15),  # 随机旋转\n                          transforms", ".RandomCrop", "(224),  #随机剪裁\n                          transforms", ".Pad", "(padding=4, padding_mode='edge'),#边缘填充\n                          ]),\n        'valid':transforms", ".Compose", "([transforms", ".Resize", "((224, 224)),\n                          transforms", ".ToTensor", "(),\n                          transforms", ".Normalize", "([0.485,0.456,0.406], [0.229,0.224,0.225])\n                          ])\n}\n\nimage_datasets = {x:datasets", ".ImageFolder", "(root=os", ".path", ".join", "(data_dir, x), transform=data_transform[x])\n                    for x in ['train','valid']\n                    }\n\ndataloader = {x:torch", ".utils", ".data", ".DataLoader", "(dataset=image_datasets[x], batch_size=32, shuffle=True, num_workers=4)\n              for x in ['train','valid']\n}\n\nx_example, y_example = next(iter(dataloader['train']))\n\nexample_classes = image_datasets['train']", ".classes", "\n\nindex_classes = image_datasets['train']", ".class_to_idx", "\n\n\nmodel = models", ".vgg", "16(pretrained=False)\n\n\n# 遍历模型中的所有模块\nfor m in model", ".modules", "():\n    # 如果当前模块是卷积层或者线性层\n    if isinstance(m, nn", ".Conv", "2d):\n        #则进行xavier初始化\n        nn", ".init", ".kaiming_normal_", "(m", ".weight", ", mode='fan_out', nonlinearity='relu')\n        if m", ".bias", " is not None:\n            nn", ".init", ".constant_", "(m", ".bias", ", 0)\n    elif isinstance(m, nn", ".BatchNorm", "2d):\n        nn", ".init", ".constant_", "(m", ".weight", ", 1)\n        nn", ".init", ".constant_", "(m", ".bias", ", 0)\n    elif isinstance(m, nn", ".Linear", "):\n        nn", ".init", ".normal_", "(m", ".weight", ", 0, 0.01)\n        nn", ".init", ".constant_", "(m", ".bias", ", 0)\n\n\nmodel", ".classifier", " = torch", ".nn", ".Sequential", "(\n    torch", ".nn", ".Linear", "(25088,512),\n    torch", ".nn", ".ReLU", "(),\n    torch", ".nn", ".Dropout", "(p=0.6),\n    torch", ".nn", ".Linear", "(512,256),\n    torch", ".nn", ".ReLU", "(),\n    torch", ".nn", ".Dropout", "(p=0.6),\n    torch", ".nn", ".Linear", "(256,2)\n)\n\n\nuse_gpu = torch", ".cuda", ".is_available", "()\nif use_gpu :\n    model = model", ".cuda", "()\n\n\nloss_f = torch", ".nn", ".CrossEntropyLoss", "()\noptimizer = torch", ".optim", ".Adam", "(model", ".classifier", ".parameters", "(), lr=1e-4,weight_decay=0.01)\n\nepochs = 99999\n\n\n#viz", ".line", "([0], [-1], win='loss', opts=dict(title='loss'))\n#viz", ".line", "([0], [-1], win='val_acc', opts=dict(title='val_acc'))\nglobal_step = 0\nbest_acc = 0\nbest_epoch = 0\n\nwith open(\"loss2", ".txt", "\", \"w\") as f:\n    for epoch in range(epochs):\n\n        print('----' * 10)\n        print('Epoch {}/{}'", ".format", "(epoch + 1, epochs))\n\n        for phase in ['train', 'valid']:\n            if phase == 'train':\n                print('Training...')\n                model", ".train", "(True)\n\n            else:\n                print('Validing...')\n                model", ".train", "(False)\n\n            running_loss = 0.0\n            running_corrects = 0\n\n            for batch, data in enumerate(dataloader[phase]):\n\n                x, y = data\n                x, y = Variable(x", ".cuda", "()), Variable(y", ".cuda", "())\n\n                y_pred = model(x)\n\n                _, pred = torch", ".max", "(y_pred", ".data", ", 1)\n                optimizer", ".zero_grad", "()\n\n\n                loss = loss_f(y_pred, y)\n\n                running_loss += loss", ".data", "\n                if phase == 'train':\n                    global_step += 1\n                    loss", ".backward", "()\n                    optimizer", ".step", "()\n\n                running_corrects += torch", ".sum", "(pred == y", ".data", ")\n                    \n\n            epoch_loss = running_loss * 32 / len(image_datasets[phase])\n            epoch_acc = 100 * running_corrects / len(image_datasets[phase])\n\n            print('{} Loss:{} ACC:{}'", ".format", "(phase, epoch_loss, epoch_acc))\n            if(phase == 'train'):\n                f", ".writelines", "([str(epoch), ',', str(epoch_loss", ".item", "()),',',str(epoch_acc", ".item", "()), ','])\n                \n            if(phase == 'valid'):\n                f", ".writelines", "([str(epoch_acc", ".item", "()),',',str(epoch_loss", ".item", "()), ';'])\n                ", "f.flush()\n                if epoch_acc.item() > best_acc", ":\n                    torch", ".save", "(model, 'best3", ".pth", "')\n                    best_acc = epoch_acc", ".item", "()\n                    best_epoch = epoch\n                    print('最好的正确率是epoch：', best_epoch+1, '    正确率为：', best_acc)\n\n\nprint('最好的模型在epoch：', best_epoch)\ntorch", ".save", "(model, 'vggmodel2", ".pth", "')\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff0c;该异常java.util.ConcurrentModificationException表示在迭代列表时&amp;#xff0c;另一个线程修改了该列表&amp;#xff0c;导致迭代器失效。在你的代码中没有明显的多线程&amp;#xff0c;所以可能是因为在迭代mFruitList时在另一个地方修改了mFruitList。可能的原因是你在使用mFruitList的同时&amp;#xff0c;在另一个线程中对mFruitList进行了修改。可以尝试在对mFruitList进行迭代的时候对其进行同步&amp;#xff0c;以防止其他线程同时对其进行修改&amp;#xff0c;如下所示&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;List&amp;lt;MyFruit&amp;gt; mFruitList &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; ArrayList&amp;lt;MyFruit&amp;gt;&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\nMySQLiteOpenHelper mySQLiteOpenHelper&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;MySQLiteOpenHelper(&lt;span class=\"hljs-params\"&gt;this&lt;/span&gt;,DB_NAME,&lt;span class=\"hljs-params\"&gt;null&lt;/span&gt;,1)&lt;/span&gt;;\nSQLiteDatabase sqLiteDatabase&amp;#61;mySQLiteOpenHelper.get&lt;span class=\"hljs-constructor\"&gt;WritableDatabase()&lt;/span&gt;;\nCursor cursor&amp;#61;sqLiteDatabase.query(DB_TABLE,null,null,null,null,null,&lt;span class=\"hljs-string\"&gt;&amp;#34;_id DESC&amp;#34;&lt;/span&gt;);\n\nsynchronized (mFruitList) { &lt;span class=\"hljs-comment\"&gt;// 同步块&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (cursor.move&lt;span class=\"hljs-constructor\"&gt;ToNext()&lt;/span&gt;){                   \n        String _id &amp;#61; cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;_id&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String khmc &amp;#61; cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;khmc&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String gcmc&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;gcmc&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String sgbw&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;sgbw&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String ysrq&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ysrq&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String qddj&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;qddj&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String ksdj&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ksdj&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String bcfl&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;bcfl&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String ljfl&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ljfl&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String ysch&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ysch&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n        String jsy&amp;#61;cursor.get&lt;span class=\"hljs-constructor\"&gt;String(&lt;span class=\"hljs-params\"&gt;cursor&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;getColumnIndexOrThrow&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;jsy&amp;#34;&lt;/span&gt;)&lt;/span&gt;);\n\n        MyFruit bookStore&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;MyFruit(&lt;span class=\"hljs-params\"&gt;_id&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;khmc&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;gcmc&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;sgbw&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;ysrq&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;qddj&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;ksdj&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;bcfl&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;ljfl&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;ysch&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;jsy&lt;/span&gt;)&lt;/span&gt;;\n\n        mFruitList.add(bookStore);\n    }\n}\ncursor.close&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;另外&amp;#xff0c;也可以尝试使用CopyOnWriteArrayList类代替ArrayList类&amp;#xff0c;CopyOnWriteArrayList类是一个线程安全的ArrayList&amp;#xff0c;当有修改操作时&amp;#xff0c;它会创建一个新的副本来进行修改&amp;#xff0c;而不会影响到迭代操作&amp;#xff0c;从而避免了ConcurrentModificationException异常。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["android studio sqlite异常\njava.util.ConcurrentModificationException异常", ["java.util.ConcurrentModificationException异常", "刚刚转战Android，花了一个星期弄了个东西，", "\n", "一直正常编译运行，买包烟回来就不能运行了，买烟之前都还好好的，", "有备份，运行备份也是一样", "求帮忙。", "\n", "\n", "\n\n", "public", " ", "class", " ", "MainActivity2", " ", "extends", " ", "AppCompatActivity", " {\n    DBAdapter dbAdapter;\n    TextView text;\n    FloatingActionButton fab;\n\n\n\n\n    ", "@SuppressLint(\"MissingInflatedId\")", "\n    ", "@Override", "\n    ", "protected", " ", "void", " ", "onCreate", "(Bundle savedInstanceState)", " {\n        ", "super", ".onCreate(savedInstanceState);\n        supportRequestWindowFeature(Window.FEATURE_NO_TITLE);\n        setContentView(R.layout.activity_main2);\n        dbAdapter=", "new", " ", "DBAdapter", "(", "this", ");\n        text = findViewById(R.id.textView);\n        fab = findViewById(R.id.floatingActionButton);\n        fab.setOnClickListener(", "new", " ", "View", ".OnClickListener() {\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onClick", "(View v)", " {", "//点击悬浮按钮跳转到添加界面", "\n                ", "Intent", " ", "intent", " ", "=", " ", "new", " ", "Intent", "(MainActivity2.", "this", ",MainActivity.class);\n                startActivity(intent);\n\n            }\n        });\n\n        List<MyFruit> mFruitList = ", "new", " ", "ArrayList", "<MyFruit>();\n        MySQLiteOpenHelper mySQLiteOpenHelper=", "new", " ", "MySQLiteOpenHelper", "(", "this", ",DB_NAME,", "null", ",", "1", ");\n        SQLiteDatabase sqLiteDatabase=mySQLiteOpenHelper.getWritableDatabase();\n        Cursor cursor=sqLiteDatabase.query(DB_TABLE,", "null", ",", "null", ",", "null", ",", "null", ",", "null", ",", "\"_id DESC\"", ");\n        ", "while", " (cursor.moveToNext()){", "//报错行", "\n            ", "String", " ", "_id", " ", "=", " cursor.getString(cursor.getColumnIndexOrThrow(", "\"_id\"", "));\n            ", "String", " ", "khmc", " ", "=", " cursor.getString(cursor.getColumnIndexOrThrow(", "\"khmc\"", "));\n            String gcmc=cursor.getString(cursor.getColumnIndexOrThrow(", "\"gcmc\"", "));\n            String sgbw=cursor.getString(cursor.getColumnIndexOrThrow(", "\"sgbw\"", "));\n            String ysrq=cursor.getString(cursor.getColumnIndexOrThrow(", "\"ysrq\"", "));\n            String qddj=cursor.getString(cursor.getColumnIndexOrThrow(", "\"qddj\"", "));\n            String ksdj=cursor.getString(cursor.getColumnIndexOrThrow(", "\"ksdj\"", "));\n            String bcfl=cursor.getString(cursor.getColumnIndexOrThrow(", "\"bcfl\"", "));\n            String ljfl=cursor.getString(cursor.getColumnIndexOrThrow(", "\"ljfl\"", "));\n            String ysch=cursor.getString(cursor.getColumnIndexOrThrow(", "\"ysch\"", "));\n            String jsy=cursor.getString(cursor.getColumnIndexOrThrow(", "\"jsy\"", "));\n\n            MyFruit bookStore=", "new", " ", "MyFruit", "(_id,khmc,gcmc,sgbw,ysrq,qddj,ksdj,bcfl,ljfl,ysch,jsy);\n            mFruitList.add(bookStore);\n\n        }\n        text.setText(", "\"总车数：\"", "+allCaseNum()+", "\"        \"", "+", "\"累计方量:\"", "+(", "int", ") getsumdebt()+", "\"M³\"", ");\n        cursor.close();\n\n        ", "// 获取到 RecyclerView 实例", "\n        ", "RecyclerView", " ", "mRecyclerView", " ", "=", " findViewById(R.id.test_rv);\n        ", "// 创建 LinearLayoutManager 对象 ，即线性布局", "\n        ", "LinearLayoutManager", " ", "mManager", " ", "=", " ", "new", " ", "LinearLayoutManager", "(", "this", ");\n\n        mRecyclerView.setLayoutManager(mManager);\n        ", "// 创建自定义的 Adapter 实例", "\n        ", "MyFruitAdapter", " ", "mAdapter", " ", "=", " ", "new", " ", "MyFruitAdapter", "(mFruitList);\n        ", "//进场动画", "\n        ", "LayoutAnimationController", " ", "controller", " ", "=", " ", "new", " ", "LayoutAnimationController", "(AnimationUtils.loadAnimation(", "this", ",R.anim.my_anim));\n        mRecyclerView.setLayoutAnimation(controller);\n        ", "// 设置适配器", "\n        mRecyclerView.setAdapter(mAdapter);\n        ", "//itme 点击事件", "\n        mAdapter.setOnItemClick(", "new", " ", "MyFruitAdapter", ".OnItemClick() {\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onItemClick", "(", "int", " position)", " {\n                AlertDialog.", "Builder", " ", "dialog", " ", "=", " ", "new", " ", "AlertDialog", ".Builder(MainActivity2.", "this", ");\n                dialog.setTitle(", "\"请选择操作：\"", ");\n                dialog.setIcon(R.drawable.icon);\n                dialog.setPositiveButton(", "\"修改\"", ",\n                        ", "new", " ", "DialogInterface", ".OnClickListener() {\n                            ", "@Override", "\n                            ", "public", " ", "void", " ", "onClick", "(DialogInterface dialog, ", "int", " which)", " {\n                                ", "Intent", " ", "intent", " ", "=", " ", "new", " ", "Intent", "(MainActivity2.", "this", ",Update.class);\n                                ", "MyFruit", " ", "myFruit", "  ", "=", " mFruitList.get(position);\n                                intent.putExtra(", "\"_id\"", ",myFruit.get_id());\n                                intent.putExtra(", "\"khmc\"", ",myFruit.getKhmc());\n                                intent.putExtra(", "\"gcmc\"", ",myFruit.getGcmc());\n                                intent.putExtra(", "\"sgbw\"", ",myFruit.getSgbw());\n                                intent.putExtra(", "\"ysrq\"", ",myFruit.getYsrq());\n                                intent.putExtra(", "\"qddj\"", ",myFruit.getQddj());\n                                intent.putExtra(", "\"ksdj\"", ",myFruit.getKsdj());\n                                intent.putExtra(", "\"bcfl\"", ",myFruit.getBcfl());\n                                intent.putExtra(", "\"ljfl\"", ",myFruit.getLjfl());\n                                intent.putExtra(", "\"ysch\"", ",myFruit.getYsch());\n                                intent.putExtra(", "\"jsy\"", ",myFruit.getJsy());\n                                startActivity(intent);\n                                }\n                            });\n                dialog.setNeutralButton(", "\"删除\"", ",\n                        ", "new", " ", "DialogInterface", ".OnClickListener() {\n                            ", "@Override", "\n                            ", "public", " ", "void", " ", "onClick", "(DialogInterface dialog, ", "int", " which)", " {\n                                ", "MyFruit", " ", "myFruit", "  ", "=", " mFruitList.get(position);\n                                ", "String", " ", "id1", " ", "=", " myFruit.get_id();\n                                ", "boolean", " ", "shanchu", " ", "=", " deleteUser(id1);\n                                ", "if", " (shanchu == ", "true", "){\n                                    mFruitList.remove(position);\n                                    mAdapter.notifyItemRemoved(position);\n                                    mAdapter.notifyItemRangeChanged(position, mFruitList.size());\n                                    Toast.makeText(MainActivity2.", "this", ",", "\"删除成功！\"", ",Toast.LENGTH_SHORT).show();\n\n                                }", "else", " {Toast.makeText(MainActivity2.", "this", ",", "\"删除失败！！！\"", ",Toast.LENGTH_SHORT).show();}\n                                    }\n                                });\n                dialog.setNegativeButton(", "\"复制\"", ", ", "new", " ", "DialogInterface", ".OnClickListener() {\n                    ", "@Override", "\n                    ", "public", " ", "void", " ", "onClick", "(DialogInterface dialog, ", "int", " which)", " {\n                        ", "Intent", " ", "intent", " ", "=", " ", "new", " ", "Intent", "(MainActivity2.", "this", ",Copyone.class);\n                        ", "MyFruit", " ", "myFruit", "  ", "=", " mFruitList.get(position);\n                        intent.putExtra(", "\"_id\"", ",myFruit.get_id());\n                        intent.putExtra(", "\"khmc\"", ",myFruit.getKhmc());\n                        intent.putExtra(", "\"gcmc\"", ",myFruit.getGcmc());\n                        intent.putExtra(", "\"sgbw\"", ",myFruit.getSgbw());\n                        intent.putExtra(", "\"ysrq\"", ",myFruit.getYsrq());\n                        intent.putExtra(", "\"qddj\"", ",myFruit.getQddj());\n                        intent.putExtra(", "\"ksdj\"", ",myFruit.getKsdj());\n                        intent.putExtra(", "\"bcfl\"", ",myFruit.getBcfl());\n                        intent.putExtra(", "\"ljfl\"", ",myFruit.getLjfl());\n                        intent.putExtra(", "\"ysch\"", ",myFruit.getYsch());\n                        intent.putExtra(", "\"jsy\"", ",myFruit.getJsy());\n                        startActivity(intent);\n\n                    }\n                });\n                dialog.create();\n                dialog.show();\n            }\n        });\n    }\n\n\n\n\n    ", "public", " ", "double", " ", "getsumdebt", "()", " {", "//统计总方量", "\n        ", "int", " ", "total", " ", "=", " ", "0", ";\n        MySQLiteOpenHelper mySQLiteOpenHelper=", "new", " ", "MySQLiteOpenHelper", "(", "this", ",DB_NAME,", "null", ",", "1", ");\n        SQLiteDatabase sqLiteDatabase=mySQLiteOpenHelper.getWritableDatabase();\n        ", "Cursor", " ", "mCursor", " ", "=", " sqLiteDatabase.rawQuery(", "\" SELECT SUM(bcfl) FROM peopleinfo\"", ", ", "null", ");\n        ", "if", " (mCursor.moveToFirst())\n        {\n            total = mCursor.getInt(", "0", ");\n        }\n        ", "while", " (mCursor.moveToNext());\n        ", "return", " total;\n    }\n    ", "/**\n     * 查询数据库中的总条数.\n     */", "\n    ", "public", " ", "long", " ", "allCaseNum", "( )", "{\n        MySQLiteOpenHelper mySQLiteOpenHelper=", "new", " ", "MySQLiteOpenHelper", "(MainActivity2.", "this", ",DB_NAME,", "null", ",", "1", ");\n        SQLiteDatabase sqLiteDatabase=mySQLiteOpenHelper.getWritableDatabase();\n        ", "Cursor", " ", "cursor", " ", "=", " sqLiteDatabase.rawQuery(", "\"select count(*) from \"", "+DB_TABLE, ", "null", ");\n        cursor.moveToFirst();\n        ", "long", " ", "count", " ", "=", " cursor.getLong(", "0", ");\n        ", "return", " count;\n    }\n    ", "public", " ", "boolean", " ", "deleteUser", "(String  ID)", "{", "//删除方法", "\n\n        MySQLiteOpenHelper mySQLiteOpenHelper=", "new", " ", "MySQLiteOpenHelper", "(", "this", ",DB_NAME,", "null", ",", "1", ");\n        SQLiteDatabase sqLiteDatabase=mySQLiteOpenHelper.getWritableDatabase();\n        ", "long", " ", "id", " ", "=", " sqLiteDatabase.delete(DB_TABLE,KEY_ID+", "\"=\"", "+ID,", "null", ");\n        sqLiteDatabase.close();\n        ", "return", " id>", "0", "?", "true", ":", "false", ";\n\n    }\n    ", "public", " ", "long", " ", "update", " ", "(String id ,ContentValues updateValues)", "{\n\n        MySQLiteOpenHelper mySQLiteOpenHelper=", "new", " ", "MySQLiteOpenHelper", "(", "this", ",DB_NAME,", "null", ",", "1", ");\n        SQLiteDatabase sqLiteDatabase=mySQLiteOpenHelper.getWritableDatabase();\n        sqLiteDatabase.update(DB_TABLE,updateValues,KEY_ID+", "\"=\"", "+id,", "null", ");\n        ", "return", " ", "0", ";\n    }\n\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "# 已解决，原因：没处理好屏幕适配。深坑，谨记教训！！\r\n![图片说明](https://img-ask.csdn.net/upload/201703/27/1490578658_132734.png)", "Konwledge_Point": "线性规划简介", "Question": ["android 两个页面都用recyclerview,一个正常，另一个报错", ["第一个页面(没问题)", "\n\n", "     @BindView(R.id.title_tv)\n    TextView titleTv;\n    @BindView(R.id.recycler)\n    RecyclerView recyclerView;\n    @BindView(R.id.refresh)\n    SwipeRefreshLayout refreshLayout;\n    @BindView(R.id.no_details)\n    LinearLayout noDetails;\n    List<WalletDetailsBean.ResultBean.ListBean> transactionList = new ArrayList<WalletDetailsBean.ResultBean.ListBean>();\n    private TransactionListAdapter adapter;\n    private String token;\n    private int page = 1;\n        ....\n        protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_wallet_details);\n        ButterKnife.bind(this);\n\n        Intent intent = getIntent();\n        if(intent != null){\n            token = intent.getStringExtra(\"token\") != null ? intent.getStringExtra(\"token\") : \" \";\n        }\n        initTitle();\n        initView();\n        initData(token);\n    }\n        ....\n        private void initView() {\n        refreshLayout.setOnRefreshListener(this);\n        refreshLayout.setColorSchemeResources(android.R.color.holo_blue_bright,\n                android.R.color.holo_green_light,\n                android.R.color.holo_orange_light,\n                android.R.color.holo_red_light);\n        refreshLayout.setProgressBackgroundColor(R.color.refresh_bg);\n        initListView();\n    }\n\n    private void initListView() {\n        layoutManager = new LinearLayoutManager(this);\n        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);\n        recyclerView.setLayoutManager(layoutManager);\n        adapter = new TransactionListAdapter(this, transactionList);\n        recyclerView.setAdapter(adapter);\n        recyclerView.setBackgroundColor(Color.WHITE);\n        // 第一次进入页面的时候显示加载进度条\n        refreshLayout.setProgressViewOffset(true, 0,\n                (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 24,\n                        getResources().getDisplayMetrics()));\n        refreshLayout.setRefreshing(true);\n        //滚动监听\n        recyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\n                super.onScrollStateChanged(recyclerView, newState);\n                if (newState == RecyclerView.SCROLL_STATE_IDLE && lastVisibleItem + 1 == adapter.getItemCount()) {\n                    refreshLayout.setRefreshing(true);\n                    page++;\n                    if (page <= totalPage) { //根据后台接口   判断当前页是否小于总页\n                        L.e(\"pageNo:\" + page + \",totalPage:\" + totalPage);\n                        queryTransactionDetails(MywalletDetailActivity.this,token,page);\n                        showToast(getResources().getString(R.string.loading));\n                    } else {\n                        refreshLayout.setRefreshing(false);\n                        showToast(getString(R.string.no_more_data));\n                    }\n                }\n            }\n            @Override\n            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n                super.onScrolled(recyclerView, dx, dy);\n                lastVisibleItem = layoutManager.findLastVisibleItemPosition();\n            }\n        });\n    }\n", "\n\n", "两个页面的xml文件都差不多：", "\n\n", " <LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    ...\n    <android.support.v4.widget.SwipeRefreshLayout\n        android:id=\"@+id/refresh\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <android.support.v7.widget.RecyclerView\n            android:id=\"@+id/recycler\"\n            android:paddingTop=\"@dimen/common_10\"\n            android:background=\"#eaeaea\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"/>\n    </android.support.v4.widget.SwipeRefreshLayout>\n\n</LinearLayout>\n", "\n\n", "第二个页面：", "\n\n", "  @BindView(R.id.title_tv)\n    TextView titleTv;\n    @BindView(R.id.no_schedule_ll)\n    LinearLayout noScheduleLl;\n    @BindView(R.id.recycler)\n    RecyclerView recyclerView;\n    @BindView(R.id.refresh_myschedule)\n    SwipeRefreshLayout refreshLayout;\n        ...\n         @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_my_schedule);\n        ButterKnife.bind(this);\n\n        withRefreshView = setRefreshView();\n        intent = getIntent();\n        userid = intent.getStringExtra(\"userid\");\n        token = intent.getStringExtra(\"token\");\n        initView();\n        loadFromNet(token,pageNo);\n    }\n\n    /**\n     * 初始化控件\n     */\n    private void initView() {\n        titleTv.setText(getResources().getString(R.string.my_schedule));\n        needHelp.setVisibility(View.VISIBLE);\n        needHelp.setText(getResources().getString(R.string.need_help));\n\n        refreshLayout.setOnRefreshListener(this);\n\n        refreshLayout.setColorSchemeResources(android.R.color.holo_blue_bright,\n                android.R.color.holo_green_light,\n                android.R.color.holo_orange_light,\n                android.R.color.holo_red_light);\n        refreshLayout.setProgressBackgroundColor(R.color.refresh_bg);\n        refreshLayout.setRefreshing(true);\n        /*\n         *  第一次进入页面的时候显示加载进度条\n         */\n        refreshLayout.setProgressViewOffset(true, 0,\n                (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 24,\n                        getResources().getDisplayMetrics()));\n        refreshLayout.setRefreshing(true);\n        initListView();\n    }\n\n    private void initListView() {\n        recyclerView.setItemAnimator(new DefaultItemAnimator());//设置item动画\n        recyclerView.setHasFixedSize(true); //如果可以确定每个item的高度是固定的，设置这个选项可以提高性能\n        //创建默认的线性LayoutManage\n        layoutManager = new LinearLayoutManager(this);\n        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);\n        recyclerView.setLayoutManager(layoutManager);\n        recyclerView.setBackgroundColor(Color.WHITE);\n        recyclerView.addItemDecoration(new MyDecoration(this, MyDecoration.VERTICAL_LIST));//自定义的分隔线\n\n        adapter = new ScheduleAdapter(this, scheduleList);\n        adapter.setOnItemClickListener(new ScheduleAdapter.OnItemClickListener() {\n            @Override\n            public void onItemClick(View view, int position) {\n                startActivity(new Intent(MyScheduleActivity.this, ShowWebViewActivity.class)\n                        .putExtra(\"title\",getResources().getString(R.string.riding_details_title))\n                        .putExtra(\"share\",getResources().getString(R.string.riding_details_share))\n                        .putExtra(\"url\", Url.getMyScheduleDetailUrl(true) + \"?token=\" + token +\"&id=\" + rideId));\n            }\n        });\n        adapter.setOnItemLongClickListener(new ScheduleAdapter.OnItemLongClickListener() {\n            @Override\n            public void onItemLongClick(View view, int position) {\n\n            }\n        });\n        recyclerView.setAdapter(adapter);\n\n        recyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\n                super.onScrollStateChanged(recyclerView, newState);\n                if (newState == RecyclerView.SCROLL_STATE_IDLE && lastVisibleItem + 1 == adapter.getItemCount()) {\n                    refreshLayout.setRefreshing(true);\n                    pageNo++;\n                    if (pageNo <= totalPage) { //根据后台接口   判断当前页是否小于总页\n                        L.e(\"pageNo:\" + pageNo + \"newsTotalPage:\" + totalPage);\n                        loadFromNet(token, pageNo);\n                        showToast(getResources().getString(R.string.loading));\n                    } else {\n                        refreshLayout.setRefreshing(false);\n                        showToast(getString(R.string.no_more_data));\n                    }\n                }\n            }\n            @Override\n            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n                super.onScrolled(recyclerView, dx, dy);\n                lastVisibleItem = layoutManager.findLastVisibleItemPosition();\n            }\n        });\n    }\n", "\n\n", "跳转到第一个页面正常显示列表，跳转到第二个页面的时候报错", "\n\n", "请问是怎么回事，看了一天了还是看不出所以然来。", "\n谢谢~"]], "Tag": "算法设计"}
{"Answer": "把ImageAndTextListAdapter 这个类中的\r\nimageAndTexts 设置get/set方法\r\n\r\n\r\n\r\n将onPostExecute方法改成这样\r\ndataArray.addAll(this.getListResp.InfoList); \r\nadapter.setImageAndTexts(dataArray); \r\nadapter.notifyDataSetChanged();", "Konwledge_Point": "线性规划简介", "Question": ["大家帮我看下listview 异步加载数据 分页的问题！！！", ["网上有大量介绍listview分页的文章，但都是一些基础，下面我用的是 异步从服务端获取数据，然后绑定到listview里面，服务端程序也是一个大家常见的分页的程序，现在出现一些问题，滑动滚动条加载下一页内容时上一页的内容没有了，大家能不能帮着看看，先谢了!", "\n\n", "public class SearchList extends CommonActivity implements OnScrollListener,", "\n        OnClickListener ,OnItemClickListener{", "\n\n", "private String wherestr=\"\",orderstr=\" autoid desc\";\nprivate int lastItem = 0;\nImageAndTextListAdapter adapter;\nLinearLayout loadingLayout;\n/**\n * 设置布局显示属性\n */\nprivate LayoutParams mLayoutParams = new LinearLayout.LayoutParams(\n        LinearLayout.LayoutParams.WRAP_CONTENT,\n        LinearLayout.LayoutParams.WRAP_CONTENT);\n/**\n * 设置布局显示目标最大化属性\n */\nprivate LayoutParams FFlayoutParams = new LinearLayout.LayoutParams(\n        LinearLayout.LayoutParams.FILL_PARENT,\n        LinearLayout.LayoutParams.FILL_PARENT);\nprivate ProgressBar progressBar;\nprivate ListView list;\n// 获得数据集合\nprivate List<ImageAndText> dataArray = new ArrayList<ImageAndText>();\nprivate int mCurrentPage = Constants.PAGE_FIRST;\nprivate int mTotalPage, mTotalCount;\n// 组件声明\nprivate EditText searchTxt = null;\nprivate TextView recent_view_topnotifybar = null;\nprivate ImageView locate_my=null;//搜索确定\nprivate ImageView record_cordition=null; //搜索详细\nprivate ImageView go_filter2=null;\nprivate String Flag=\"\";\n\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    // TODO Auto-generated method stub\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.searchlist);\n\n    searchTxt = (EditText) findViewById(R.id.search_edittext);\n    recent_view_topnotifybar = (TextView) findViewById(R.id.recent_view_topnotifybar);\n    locate_my=(ImageView)findViewById(R.id.locate_my);\n    record_cordition=(ImageView)findViewById(R.id.record_cordition);\n    go_filter2=(ImageView)findViewById(R.id.go_filter2);\n\n    searchTxt.setOnClickListener(this);\n    locate_my.setOnClickListener(this);\n    record_cordition.setOnClickListener(this);\n    go_filter2.setOnClickListener(this);\n\n    // 线性布局\n    LinearLayout layout = new LinearLayout(this);\n    // 设置布局 水平方向\n    layout.setOrientation(LinearLayout.HORIZONTAL);\n    // 进度条\n    progressBar = new ProgressBar(this);\n    // 进度条显示位置\n    progressBar.setPadding(0, 0, 15, 0);\n    // 把进度条加入到layout中\n    layout.addView(progressBar, mLayoutParams);\n    // 文本内容\n    TextView textView = new TextView(this);\n    textView.setText(\"加载中...\");\n    textView.setGravity(Gravity.CENTER_VERTICAL);\n    // 把文本加入到layout中\n    layout.addView(textView, FFlayoutParams);\n    // 设置layout的重力方向，即对齐方式是\n    layout.setGravity(Gravity.CENTER);\n\n    // 设置ListView的页脚layout\n    loadingLayout = new LinearLayout(this);\n    loadingLayout.addView(layout, mLayoutParams);\n    loadingLayout.setGravity(Gravity.CENTER);\n    // =============================================\n    list = (ListView) findViewById(R.id.list);\n    list.setOnItemClickListener(this);\n\n}\n//\n@Override\nprotected void onResume() {\n    // TODO Auto-generated method stub\n    super.onResume();\n\n\n    // load\n    new QueryTask().execute();\n\n}\n\n// 单击事件\npublic void onClick(View v) {\n    // TODO Auto-generated method stub\n    Intent intent=null;\n    switch (v.getId()) {\n    case R.id.search_edittext://点击搜索文本框内容清空文本框\n        searchTxt.setText(\"\");\n        break;\n    case R.id.locate_my:// 搜索确定\n        String str=searchTxt.getText().toString();\n        if(str.equals(\"\")||str.equals(\"车辆品牌\"))\n            Toast.makeText(this, \"请输入查询关键词！\", Toast.LENGTH_LONG).show();\n        else\n        {   \n            this.wherestr=str;//查询条件\n            dataArray.clear();\n            new QueryTask().execute();\n        }\n        break;\n    case R.id.record_cordition:// 进入搜索的详细页\n        intent = new Intent(SearchList.this,\n                ZoneMain.class);\n\n        startActivity(intent);\n        break;\n    case R.id.go_filter2:// 点击筛选进入筛选页，但要返回筛选条件\n        intent = new Intent(SearchList.this,\n                FilterSearch.class);\n\n        startActivity(intent);\n        break;\n\n    }\n}\n\n//\npublic void onScroll(AbsListView view, int firstVisibleItem,\n        int visibleItemCount, int totalItemCount) {\n    //Log.e(\"onscroll adapter.coun\", adapter.count + \"\");\n    // TODO Auto-generated method stub\n    lastItem = firstVisibleItem + visibleItemCount - 1;\n            //如果当前页小于总页数 就需要加载\n    if (mCurrentPage <= mTotalPage) {\n        if (firstVisibleItem + visibleItemCount == totalItemCount) {\n            //adapter.count += 5;\n            mCurrentPage++;\n            new QueryTask().execute();\n\n            adapter.notifyDataSetChanged();\n            list.setSelection(lastItem);\n\n            // mCurrentPage=2;\n", "\n\n", "//              mCurrentPage = adapter.count / 5;// 当前页？", "\n//              Toast.makeText(getApplicationContext(),", "\n//                      \"第\" + mCurrentPage + \"页\", Toast.LENGTH_LONG).show();", "\n            }", "\n        } else {", "\n            list.removeFooterView(loadingLayout);", "\n        }", "\n\n", "}\n\n//\npublic void onScrollStateChanged(AbsListView view, int scrollState) {\n    // TODO Auto-generated method stub\n\n}\n\n// 加载数据\nclass QueryTask extends CommonTask<Void> {\n\n    private CarSearchListReq getListReq = null;\n    // 实例化此方法后就已经开始加载服务端的数据了\n    private CarSearchListResp getListResp = new CarSearchListResp();\n\n    public QueryTask() {\n        super(SearchList.this, getString(R.string.get_data));\n        // TODO Auto-generated constructor stub\n    }\n\n    protected Void doInBackground(Void... params) {\n        // TODO Auto-generated method stub\n        this.getListReq = new CarSearchListReq();\n        this.getListReq.wherestr = SearchList.this.wherestr;\n        this.getListReq.orderstr = SearchList.this.orderstr;\n        // 这个必须存在 mCurrentPage赋值改变记录查询\n        this.getListReq.pageIndex = mCurrentPage;\n\n        InputStream is = null;\n        HttpConnectWrapper httpCon = new HttpConnectWrapper();\n        try {\n            is = httpCon.httpPost(getListReq.getData(), getListReq\n                    .getNeedRespHeaderProps());\n\n            getListResp.parse(is);\n        } catch (Exception e) {\n\n        }\n        return super.doInBackground(params);\n    }\n\n    protected void onPostExecute(Void result) {\n        // TODO Auto-generated method stub\n        super.onPostExecute(result);\n        int hRet = this.getListResp.getData();\n\n        if (hRet == 1 || hRet == 1004) {\n            dataArray = this.getListResp.InfoList;\n            // 总记录数\n            mTotalCount = this.getListResp.count;\n            // 总页数\n            mTotalPage = mTotalCount % PAGE_MAX_LINE == 0 ? mTotalCount\n                    / PAGE_MAX_LINE : mTotalCount / PAGE_MAX_LINE + 1;\n\n            setPage();\n\n            if (hRet == 1004) {\n\n            }\n\n        } else {\n\n        }\n\n    }\n}\n\n/**\n * 设置ListView\n */\nprivate void setPage() {\n    adapter = new ImageAndTextListAdapter(this, dataArray, list);\n    // 添加到脚页显示\n    list.addFooterView(loadingLayout);\n\n    list.setAdapter(adapter);\n    // 给ListView注册滚动监听\n    list.setOnScrollListener(this);\n}\n\n//单击列表促发事件\npublic void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {\n    // TODO Auto-generated method stub\n\n    if (arg2 != -1) {\n        Intent intent=new Intent(SearchList.this,CarDetail.class);\n        intent.putExtra(\"AutoID\", dataArray.get(arg2).AutoId.toString());\n        startActivity(intent);\n    }\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;修改完善如下&amp;#xff0c;具体改动处见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;Linear Table On On Link List Structure\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;conio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;#define FAIL 1   //; 修改&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define OK 0     //; 修改&lt;/span&gt;\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;程序中反复出现的H&amp;#61;H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;是因为H的首地址不存数据 \n\ntypedef int ElemType; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;数据元素类型定义\ntypedef int DataType;\ntypedef struct Node &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;线性表链式存储结构的定义\n{\n    DataType data;\n    struct Node* &lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n\n}LNode, * LinkList; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n\n      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;Node LNode;  修改\n      &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;nt* px;     修改\n      &lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;nt i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, x &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;      修改\n     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;LinkList H, T, OriginH; 修改\n     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;LinkList p;             修改\n     \n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;注意&amp;#xff1a;下面的链表都采用带头节点的结构 \nLinkList CreateLinkList(int n); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;带n个节点的链表,返回链表的头指针\nvoid PrintList(LinkList L);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;以(a1,a2,...,an)格式输出链表  OK\nvoid EmptyList(LinkList L);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;把链表H清空&amp;#xff08;保留头结点&amp;#xff09;\nint ListLength(LinkList L);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;返回链表H的长度    OK\nNode* GetData(Node* L, int i, DataType* px);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;查找第i(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;≤i≤n)个元素&amp;#xff0c;查找成功返回OK并把元素放入*px,查找失败返回FAIL  \nNode* Locate(LinkList H, DataType x); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;查找元素x的位置&amp;#xff0c;找到返回指向该结点指针,否则返回NULL\nint InsList(LinkList H, int i, DataType x);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;在链表H的第i个位置上插入值为x的元素&amp;#xff0c;成功返回TRUE,否则FALSE\nint DelList(LinkList L, int i, ElemType* px); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;删除表中第i(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;≤i≤n)个元素&amp;#xff0c;删除元素值放入*px;删除成功返回OK,否则FAIL\n\nint main()\n{\n    LinkList H &amp;#61; NULL;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;定义一个链表指针   修改\n    int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, x &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;生成菜单 \n    char sel &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (sel !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;------线性表(链式存储结构)演示系统-------\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;   版本:1.0   作者:XXXXXX 日期:yyyy-mm-dd\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;------------------------------------------\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       1.创建线性表\\n&amp;#34;&lt;/span&gt;);   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;已经实现 \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       2.查找元素位置\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       3.按位置查找元素\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       4.插入一个元素\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       5.删除一个元素\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       6.打印线性表\\n&amp;#34;&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;已经实现 OK\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       7.打印线表长度\\n&amp;#34;&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;OK\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       8.清空线性表\\n&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       9.清空屏幕\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;已经实现 \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;       0.退出系统\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;已经实现 \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入选项[0-7]:&amp;#34;&lt;/span&gt;);\n        sel &amp;#61; getch();\n        switch (sel)\n        {\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;:\n            int n;\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;创建线性表操作.\\n&amp;#34;&lt;/span&gt;);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你要创建线性表的长度&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n            H &amp;#61; CreateLinkList(n);\n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;查找元素操作.\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;... \n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;按位置查找元素操作.\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;... \n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;4&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;插入一个元素操作.\\n&amp;#34;&lt;/span&gt;);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入所插入的位置与数据的值&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;, &amp;amp;i, &amp;amp;x);\n            InsList(H, i, x);\n\n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;删除一个元素操作.\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;... \n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;显示线性表操作.\\n&amp;#34;&lt;/span&gt;);\n            PrintList(H);\n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;显示线性表长度.\\n&amp;#34;&lt;/span&gt;);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;长度为&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;, ListLength(H));\n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;8&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;清空线性表操作.\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;... \n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按任意键继续 \n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;:\n            system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n谢谢使用&amp;#xff0c;再见&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        default:\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;您输入的选项不合法&amp;#xff0c;请重新选择&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        }\n    }\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;创建带n个节点的链表,返回链表的头指针\nLinkList CreateLinkList(int n)\n{\n    LinkList H &amp;#61; (LinkList)malloc(sizeof(LNode));       &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;申请一个LNode节点&amp;#xff0c;把H指向这个新申请的节点 void*\n    H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; NULL; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;(*H).&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; NULL;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;OriginH &amp;#61; H;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;统计长度或显示链表会导致地址后移&amp;#xff0c;OriginH存放原始H地址  修改\n    LinkList T &amp;#61; H;    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n    int i;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入%d个整数&amp;#xff1a;&amp;#34;&lt;/span&gt;, n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        int x;\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;x);\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;申请节点p&amp;#xff0c;放入x \n        LNode *p &amp;#61; (LinkList)malloc(sizeof(LNode));  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n        p-&amp;gt;data &amp;#61; x;\n        p-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; NULL;\n\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;把p点接入T后面\n        T-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; p;\n        T &amp;#61; p;\n    }\n    return H;\n}\n\nint ListLength(LinkList L)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;统计长度 \n{\n    int cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!L || !L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;)           &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改 \n        return cnt;\n    LinkList H &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;H &amp;#61; H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;  修改\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (H !&amp;#61; NULL)\n    {\n        H &amp;#61; H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n        cnt&amp;#43;&amp;#43;;\n    }\n                        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;H &amp;#61; OriginH;   修改\n    return cnt;\n}\n\nint InsList(LinkList H, int i, DataType x)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;插入 \n{\n    int length &amp;#61; ListLength(H);\n    int j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;         修改\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;gt; length || i &amp;lt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;超出范围&amp;#xff0c;无法插入&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        return FAIL;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        LinkList L &amp;#61; H, tmp &amp;#61; NULL;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (L &amp;amp;&amp;amp; j &amp;lt; i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n            L &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n            j&amp;#43;&amp;#43;;\n        }\n        tmp &amp;#61; (LinkList)malloc(sizeof(LNode));\n        tmp-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; NULL;\n        tmp-&amp;gt;data &amp;#61; x;\n        tmp-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n        L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; tmp;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;H &amp;#61; H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; j !&amp;#61; i; j&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    H &amp;#61; H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;后传直至找到第i个位置 \n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;x &amp;#61; x &amp;#43; H-&amp;gt;data;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;交换 x与 x&amp;#61;x&amp;#43;Tmp1-&amp;gt;data的值 可以少用一个变量 \n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;H-&amp;gt;data &amp;#61; x - H-&amp;gt;data;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;x &amp;#61; x - H-&amp;gt;data;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int k &amp;#61; i; k &amp;lt; length; k&amp;#43;&amp;#43;)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;交换x与H.data中的数据方便后移 \n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;{\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    H &amp;#61; H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;插入数据后将每一位数字后移 \n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    x &amp;#61; x &amp;#43; H-&amp;gt;data;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    H-&amp;gt;data &amp;#61; x - H-&amp;gt;data;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    x &amp;#61; x - H-&amp;gt;data;\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;}\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;插入成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;H &amp;#61; OriginH;\n        return OK;\n    }\n\n}\n\nvoid PrintList(LinkList L)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;打印链表 \n{\n    int flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;默认为第一位 \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!L || !L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;)           &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改 \n        return;\n    LinkList H &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;H &amp;#61; H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;; 修改\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#xff08;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (H !&amp;#61; NULL)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, H-&amp;gt;data);\n            flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#xff0c;%d&amp;#34;&lt;/span&gt;, H-&amp;gt;data);\n        H &amp;#61; H-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#xff09;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;H &amp;#61; OriginH;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;返回初始位置  修改\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["C语言链表 插入一个值 导致链表最后一位消失怎么办？", ["C语言链表 插入一个值 导致链表最后一位消失怎么办？", "比如链表中本身有（1,2,3） 插入99在第二位后 链表就变成了（1,99,3）", "\n", "\n", "//Linear Table On On Link List Structure", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<conio.h>", "\n", "#", "include", "<stdlib.h>", "\n\n", "#", "define", " FAIL 1;", "\n", "#", "define", " OK 0;", "\n\n", "//程序中反复出现的H=H->next是因为H的首地址不存数据 ", "\n\n", "typedef", " ", "int", " ElemType; ", "//数据元素类型定义", "\n", "typedef", " ", "int", " DataType; \n", "typedef", " ", "struct", " ", "Node", " ", "//线性表链式存储结构的定义", "\n{\n    DataType data;\n    ", "struct", " ", "Node", "* next;\n    \n}Node,*LinkList;\nNode LNode;\n", "int", " *px;\n", "int", " i=", "0", ",x=", "0", ";\nLinkList H,T,OriginH;\nLinkList p;\n", "//注意：下面的链表都采用带头节点的结构 ", "\n", "LinkList ", "CreateLinkList", "(", "int", " n)", "; ", "//带n个节点的链表,返回链表的头指针", "\n", "void", " ", "PrintList", "(LinkList L)", ";", "//以(a1,a2,...,an)格式输出链表  OK", "\n", "void", " ", "EmptyList", "(LinkList L)", ";  ", "//把链表H清空（保留头结点）", "\n", "int", " ", "ListLength", "(LinkList L)", ";  ", "//返回链表H的长度    OK", "\n", "Node* ", "GetData", "(Node *L, ", "int", " i, DataType*px)", ";", "//查找第i(1≤i≤n)个元素，查找成功返回OK并把元素放入*px,查找失败返回FAIL  ", "\n", "Node* ", "Locate", "(LinkList H, DataType x)", "; ", "//查找元素x的位置，找到返回指向该结点指针,否则返回NULL", "\n", "int", " ", "InsList", "(LinkList H, ", "int", " i, DataType x)", ";", "//在链表H的第i个位置上插入值为x的元素，成功返回TRUE,否则FALSE", "\n", "int", " ", "DelList", "(LinkList L,", "int", " i, ElemType*px)", "; ", "//删除表中第i(1≤i≤n)个元素，删除元素值放入*px;删除成功返回OK,否则FAIL", "\n\n", "int", " ", "main", "()", "\n", "{\n    LinkList H;  ", "//定义一个链表指针 ", "\n    \n    ", "//生成菜单 ", "\n    ", "char", " sel=", "' '", ";\n    ", "while", "(sel!=", "'0'", ")\n    {\n        \n        ", "printf", "(", "\"------线性表(链式存储结构)演示系统-------\\n\"", ");\n        ", "printf", "(", "\"   版本:1.0   作者:XXXXXX 日期:yyyy-mm-dd\\n\"", "); \n        ", "printf", "(", "\"------------------------------------------\\n\"", ");\n        ", "printf", "(", "\"       1.创建线性表\\n\"", ");   ", "//已经实现 ", "\n        ", "printf", "(", "\"       2.查找元素位置\\n\"", ");\n        ", "printf", "(", "\"       3.按位置查找元素\\n\"", ");\n        ", "printf", "(", "\"       4.插入一个元素\\n\"", ");\n        ", "printf", "(", "\"       5.删除一个元素\\n\"", ");\n        ", "printf", "(", "\"       6.打印线性表\\n\"", ");  ", "//已经实现 OK", "\n        ", "printf", "(", "\"       7.打印线表长度\\n\"", ");  ", "//OK", "\n        ", "printf", "(", "\"       8.清空线性表\\n\"", ");\n        ", "printf", "(", "\"       9.清空屏幕\\n\"", "); ", "//已经实现 ", "\n        ", "printf", "(", "\"       0.退出系统\\n\"", "); ", "//已经实现 ", "\n        ", "printf", "(", "\"请输入选项[0-7]:\"", "); \n        sel=", "getch", "();\n        ", "switch", "(sel)\n        {\n            ", "case", " ", "'1'", ":\n                ", "int", " n;\n                ", "printf", "(", "\"创建线性表操作.\\n\"", ");\n                ", "printf", "(", "\"请输入你要创建线性表的长度：\"", ");\n                ", "scanf", "(", "\"%d\"", ",&n);\n                H = ", "CreateLinkList", "(n);\n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'2'", ":\n                ", "printf", "(", "\"查找元素操作.\\n\"", ");   \n                ", "//... ", "\n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'3'", ":\n                ", "printf", "(", "\"按位置查找元素操作.\\n\"", ");\n                ", "//... ", "\n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'4'", ":\n                ", "printf", "(", "\"插入一个元素操作.\\n\"", ");\n                ", "printf", "(", "\"请输入所插入的位置与数据的值：\"", ");\n                ", "scanf", "(", "\"%d %d\"", ",&i,&x);\n                ", "InsList", "(H,i,x);\n                \n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'5'", ":\n                ", "printf", "(", "\"删除一个元素操作.\\n\"", ");\n                ", "//... ", "\n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'6'", ":\n                ", "printf", "(", "\"显示线性表操作.\\n\"", ");\n                ", "PrintList", "(H);\n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'7'", ":\n                ", "printf", "(", "\"显示线性表长度.\\n\"", ");\n                ", "printf", "(", "\"长度为：%d\\n\"", ",", "ListLength", "(H));\n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'8'", ":\n                ", "printf", "(", "\"清空线性表操作.\\n\"", ");\n                ", "//... ", "\n                ", "system", "(", "\"pause\"", "); ", "//按任意键继续 ", "\n                ", "break", ";\n            ", "case", " ", "'9'", ":\n                ", "system", "(", "\"cls\"", ");\n                ", "break", ";\n            ", "case", " ", "'0'", ":\n                ", "printf", "(", "\"\\n谢谢使用，再见！\\n\"", ");\n                ", "break", ";\n            ", "default", ":\n                ", "printf", "(", "\"您输入的选项不合法，请重新选择！\\n\"", ");\n        }\n    }\n\n    ", "return", " ", "0", ";\n} \n\n\n", "//创建带n个节点的链表,返回链表的头指针", "\n", "LinkList ", "CreateLinkList", "(", "int", " n)", "\n", "{\n    \n    H = (LinkList) ", "malloc", "(", "sizeof", "(LNode));  ", "//申请一个LNode节点，把H指向这个新申请的节点 void*", "\n    H->next = ", "NULL", "; ", "//(*H).next = NULL;", "\n    OriginH=H;", "//统计长度或显示链表会导致地址后移，OriginH存放原始H地址 ", "\n    T=H;\n    ", "int", " i;\n    ", "printf", "(", "\"请输入%d个整数：\"", ",n);\n    ", "for", "(i=", "0", ";i<n;i++)\n    {\n        ", "int", " x;\n\n        ", "scanf", "(", "\"%d\"", ",&x);\n        ", "//申请节点p，放入x ", "\n        p=(LinkList)", "malloc", "(", "sizeof", "(LNode));\n        p->data = x;\n        p->next = ", "NULL", ";\n        \n        ", "//把p点接入T后面", "\n        T->next = p;\n        T=p;\n    } \n    \n    ", "return", " H;\n}\n\n\n\n", "int", " ", "ListLength", "(LinkList L)", "//统计长度 ", "\n", "{\nH=H->next;\n", "int", " cnt=", "0", ";\n", "while", "(H!=", "NULL", ")\n    {H=H->next;\n    cnt++;\n    }\nH=OriginH;\n", "return", " cnt;\n}\n\n\n\n\n", "int", " ", "InsList", "(LinkList H, ", "int", " i, DataType x)", "//插入 ", "\n", "{\n\n\n", "int", " length=", "ListLength", "(H);\n", "int", " j=", "1", ";\n", "if", "(i>length||i<", "1", ")\n    {", "printf", "(", "\"超出范围，无法插入！\\n\"", ");\n    ", "return", " FAIL;\n    }\n        ", "else", "\n        {H=H->next;\n        ", "for", "(;j!=i;j++)\n        {H=H->next;", "//后传直至找到第i个位置 ", "\n        }\n                x=x+H->data;", "//交换 x与 x=x+Tmp1->data的值 可以少用一个变量 ", "\n                H->data=x-H->data;\n                x=x-H->data;\n                    ", "for", "(", "int", " k=i;k<length;k++)", "//交换x与H.data中的数据方便后移 ", "\n                    {H=H->next;", "//插入数据后将每一位数字后移 ", "\n                        x=x+H->data;\n                        H->data=x-H->data;\n                        x=x-H->data;                    \n                    \n                    }\n                    ", "printf", "(", "\"插入成功！\\n\"", ");\n                    H=OriginH;\n                    ", "return", " OK;\n        }\n    \n}\n\n\n", "void", " ", "PrintList", "(LinkList L)", "//打印链表 ", "\n", "{", "int", " flag=", "0", ";", "//默认为第一位 ", "\nH=H->next;\n", "printf", "(", "\"（\"", ");\n    ", "while", "(H!=", "NULL", ")\n    {", "if", "(flag==", "0", ")\n        {", "printf", "(", "\"%d\"", ",H->data);\n        flag=", "1", ";\n        }\n    ", "else", " ", "printf", "(", "\"，%d\"", ",H->data);\n    H=H->next;\n    }\n        ", "printf", "(", "\"）\"", ");\nH=OriginH;", "//返回初始位置 ", "\n}\n", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;就是把文件加载进来&amp;#xff0c;将YUV数据转换成RGB颜色&amp;#xff0c;然后用drawImage画出来&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["一段视频播放器文件代码，不明白", ["代码如下：", "import java.io.", ";", "import java.util.TreeSet;", "import java.awt.", ";", "import java.awt.event.", ";", "import java.awt.geom.AffineTransform;", "import java.awt.image.", ";", "import javax.imageio.", ";", "import javax.swing.", ";", "\n", "public class design1  extends Component {", "    DataInputStream data_in;", "    private byte[] yuv_array;", "    private int[] u_array, v_array;", "    private int[] rgb_array;", "    private BufferedImage img;", "    private int width, height;", "    private int frame_number;", "    private int frame_size, yuv_frame_size;", "\n", "public", " ", "design1", "(String filename, ", "int", " width, ", "int", " height, ", "int", " frame_number)", " {\n    ", "this", ".width = width;\n    ", "this", ".height = height;\n    frame_size = width * height;\n    ", "this", ".frame_number = frame_number;\n    yuv_frame_size = (width * height * ", "3", ")>>", "1", ";\n    ", "//在Heap分配空间", "\n    img = ", "new", " ", "BufferedImage", "(width, height, ", "1", ");", "//1:TYPE_INT_RGB", "\n    yuv_array = ", "new", " ", "byte", "[yuv_frame_size];\n    u_array = ", "new", " ", "int", "[frame_size];\n    v_array = ", "new", " ", "int", "[frame_size];\n    rgb_array = ", "new", " ", "int", "[frame_size];\n    \n    ", "try", " {\n        ", "FileInputStream", " ", "f_in", " ", "=", " ", "new", " ", "FileInputStream", "(", "new", " ", "File", "(filename));\n        f_in.skip(frame_number * yuv_frame_size);\n        data_in = ", "new", " ", "DataInputStream", "(f_in);\n        data_in.read(yuv_array, ", "0", ", yuv_frame_size);\n        ", "this", ".frame_number++;\n    } ", "catch", " (IOException e) {  \n        ", "// TODO Auto-generated catch block  ", "\n        e.printStackTrace();  \n    }\n    yuv2rgb();\n    img.setRGB(", "0", ", ", "0", ", width, height, rgb_array, ", "0", ", width);\n}\n\n", "private", " ", "void", " ", "yuv2rgb", "()", "\n{\n    ", "int", " h;\n    ", "int", " h2;\n    ", "int", " ", "frame_size2", " ", "=", " frame_size + (frame_size>>", "2", ");\n    ", "int", " ", "width2", " ", "=", " width<<", "1", ";\n    ", "int", " i2, j2;\n    \n    h = ", "0", ";\n    h2 = ", "0", ";\n    ", "for", " (", "int", " ", "j", " ", "=", " ", "0", "; j < (height>>", "1", "); j++)\n    {\n        ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < (width>>", "1", "); i++)\n        {\n            i2 = i<<", "1", ";\n            ", "int", " a, b;\n            u_array[h2 + i2]   = yuv_array[frame_size + h + i]&", "0xff", ";\n            v_array[h2 + i2]   = yuv_array[frame_size2 + h + i]&", "0xff", ";\n        }\n        h += width>>", "1", ";\n        h2 += width2;\n    }\n    ", "//执行双线性内插，把4:1:1的YUV扩大为4:4:4的YUV", "\n    h2 = ", "0", ";\n    ", "for", " (j2 = ", "0", "; j2 < height - ", "2", "; j2 += ", "2", ")\n    {\n        ", "for", " (i2 = ", "0", "; i2 < width - ", "2", "; i2 += ", "2", ")\n        {\n            ", "int", " a, b, ab;\n            \n            a = u_array[h2 + i2] + u_array[h2 + i2 + ", "2", "];", "//水平", "\n            b = u_array[h2 + i2] + u_array[h2 + i2 + width2];", "//垂直", "\n            ab = u_array[h2 + i2] + u_array[h2 + i2 + ", "2", "] + u_array[h2 + i2 + width2] + u_array[h2 + i2 + width2 + ", "2", "];", "//对角线", "\n            u_array[h2 + i2 + ", "1", "] = (a + ", "1", ")>>", "1", ";\n            u_array[h2 + i2 + width] = (b + ", "1", ")>>", "1", ";\n            u_array[h2 + i2 + width + ", "1", "] = (ab + ", "2", ")>>", "2", ";\n            \n            a = v_array[h2 + i2] + v_array[h2 + i2 + ", "2", "];", "//水平", "\n            b = v_array[h2 + i2] + v_array[h2 + i2 + width2];", "//垂直", "\n            ab = v_array[h2 + i2] + v_array[h2 + i2 + ", "2", "] + v_array[h2 + i2 + width2] + v_array[h2 + i2 + width2 + ", "2", "];", "//对角线", "\n            v_array[h2 + i2 + ", "1", "] = (a + ", "1", ")>>", "1", ";\n            v_array[h2 + i2 + width] = (b + ", "1", ")>>", "1", ";\n            v_array[h2 + i2 + width + ", "1", "] = (ab + ", "2", ")>>", "2", ";\n        }\n        u_array[h2 + i2 + ", "1", "] = u_array[h2 + i2];\n        u_array[h2 + i2 + width] = \n        u_array[h2 + i2 + width + ", "1", "] = (u_array[h2 + i2] + u_array[h2 + i2 + width2] + ", "1", ")>>", "1", ";\n        \n        v_array[h2 + i2 + ", "1", "] = v_array[h2 + i2];\n        v_array[h2 + i2 + width] = \n        v_array[h2 + i2 + width + ", "1", "] = (v_array[h2 + i2] + v_array[h2 + i2 + width2] + ", "1", ")>>", "1", ";\n        \n        h2 += width2;\n    }\n    ", "for", " (i2 = ", "0", "; i2 < width - ", "2", "; i2 += ", "2", ")\n    {\n        ", "int", " a, b, ab;\n        \n        u_array[h2 + i2 + ", "1", "] = \n        u_array[h2 + i2 + width + ", "1", "] = (u_array[h2 + i2] + u_array[h2 + i2 + ", "2", "] + ", "1", ")>>", "1", ";\n        u_array[h2 + i2 + width] = u_array[h2 + i2];\n        \n        v_array[h2 + i2 + ", "1", "] = \n        v_array[h2 + i2 + width + ", "1", "] = (v_array[h2 + i2] + v_array[h2 + i2 + ", "2", "] + ", "1", ")>>", "1", ";\n        v_array[h2 + i2 + width] = v_array[h2 + i2];\n    }\n    u_array[h2 + i2 + ", "1", "] =\n    u_array[h2 + i2 + width] = \n    u_array[h2 + i2 + width + ", "1", "] = u_array[h2 + i2];       \n    \n    v_array[h2 + i2 + ", "1", "] =\n    v_array[h2 + i2 + width] = \n    v_array[h2 + i2 + width + ", "1", "] = v_array[h2 + i2];\n    \n    ", "//彩色空间变换,从YUV转换到RGB", "\n    ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < frame_size; i++)\n    {\n        ", "int", " pixel_r, pixel_g, pixel_b;\n        ", "int", " ", "pixel_y", " ", "=", " yuv_array[i]&", "0xff", ";\n        ", "int", " ", "pixel_u", " ", "=", " u_array[i] - ", "128", ";\n        ", "int", " ", "pixel_v", " ", "=", " v_array[i] - ", "128", ";\n        ", "//YUV到RGB的矩阵变换运算", "\n        ", "double", " ", "R", " ", "=", " pixel_y - ", "0.001", " * pixel_u + ", "1.402", " * pixel_v;\n        ", "double", " ", "G", " ", "=", " pixel_y - ", "0.344", " * pixel_u - ", "0.714", " * pixel_v;\n        ", "double", " ", "B", " ", "=", " pixel_y + ", "1.772", " * pixel_u + ", "0.001", " * pixel_v;\n        ", "//限幅", "\n        ", "if", " (R > ", "255", ") pixel_r = ", "255", ";\n        ", "else", " ", "if", " (R < ", "0", ") pixel_r = ", "0", ";\n        ", "else", " ", "pixel_r", " ", "=", " (", "int", ")R;\n        ", "if", " (G > ", "255", ") pixel_g = ", "255", ";\n        ", "else", " ", "if", " (G < ", "0", ") pixel_g = ", "0", ";\n        ", "else", " ", "pixel_g", " ", "=", " (", "int", ")G;\n        ", "if", " (B > ", "255", ") pixel_b = ", "255", ";\n        ", "else", " ", "if", " (B < ", "0", ") pixel_b = ", "0", ";\n        ", "else", " ", "pixel_b", " ", "=", " (", "int", ")B;\n        rgb_array[i] = (pixel_r<<", "16", ") | (pixel_g<<", "8", ") | pixel_b;\n    }\n}\n\n", "public", " Dimension ", "getPreferredSize", "()", " {\n    ", "if", " (img == ", "null", ") {\n         ", "return", " ", "new", " ", "Dimension", "(width, height);\n    } ", "else", " {\n       ", "return", " ", "new", " ", "Dimension", "(img.getWidth(", "null", "), img.getHeight(", "null", "));\n   }\n}\n\n", "public", " ", "void", " ", "writeFile", "(String formatName, String filename)", " {\n    ", "try", " {\n        ImageIO.write(img, formatName, ", "new", " ", "File", "(filename));\n    } ", "catch", " (IOException e) {\n        e.printStackTrace();  \n    }\n}\n\n", "public", " ", "void", " ", "paint", "(Graphics g)", " {\n    g.drawImage(img, ", "0", ", ", "0", ", ", "null", ");\n}\n\n", "public", " ", "void", " ", "play", "(JFrame f)", " {\n    ", "while", "(", "true", "){\n        ", "try", " {\n            data_in.read(yuv_array, ", "0", ", yuv_frame_size);\n            f.setTitle(", "\"YUV Player of GDUT              #\"", " + frame_number + ", "\" frames\"", ");\n            frame_number++;\n        } ", "catch", " (IOException e) {  \n            ", "// TODO Auto-generated catch block  ", "\n            e.printStackTrace();\n        }\n        yuv2rgb();\n        img.setRGB(", "0", ", ", "0", ", width, height, rgb_array, ", "0", ", width);\n        repaint(); \n    }\n}\n\n", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n    ", "// TODO Auto-generated method stub", "\n    ", "JFrame", " ", "f", " ", "=", " ", "new", " ", "JFrame", "(", "\"YUV Player of GDUT\"", ");\n    f.addWindowListener(", "new", " ", "WindowAdapter", "() {\n        ", "public", " ", "void", " ", "windowClosing", "(WindowEvent e)", " {System.exit(", "0", ");}\n    });\n\n    \n    ", "design1", " ", "me", " ", "=", " ", "new", " ", "design1", "(", "\"ShuttleStart_1280x720.yuv\"", ", ", "1280", ", ", "720", ", ", "10", ");        \n    f.add(", "\"Center\"", ", me);\n    f.pack();\n    f.setVisible(", "true", ");\n\n    ", "//me.writeFile(\"jpg\", \"out.jpg\");", "\n    ", "//me.play(f);//连续读取并显示图像", "\n}\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "[quote]CONSTRAINT `dy_apply_ibfk_1` FOREIGN KEY (`UID`) REFERENCES `dy_use[/quote]\r\n这个是定义外健\r\n\r\n[quote]LOCK TABLES `dy_revert` WRITE[/quote]\r\n这个是锁表,他在插入前都锁了下,插完解锁[quote]UNLOCK TABLES; [/quote]", "Konwledge_Point": "线性规划简介", "Question": ["看别人的项目，就是数据库的表看不懂，帮忙解释下", ["-- MySQL dump 10.11", "\n\n", "-- Host: localhost    Database: zxdy", "\n\n", "-- Server version   5.0.41-community-nt", "\n\n", "/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT ", "/;", "\n/", "!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS ", "/;", "\n/", "!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION ", "/;", "\n/", "!40101 SET NAMES latin1 ", "/;", "\n/", "!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE ", "/;", "\n/", "!40103 SET TIME_ZONE='+00:00' ", "/;", "\n/", "!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 ", "/;", "\n/", "!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 ", "/;", "\n/", "!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' ", "/;", "\n/", "!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;", "\n\n", "\n\n", "-- Table structure for table ", "dy_apply", "\n", "\n\n", "DROP TABLE IF EXISTS ", "dy_apply", ";", "\nCREATE TABLE ", "dy_apply", " (", "AID", " int(11) NOT NULL auto_increment,", "UID", " int(11) default NULL,", "TGID", " int(11) default NULL,", "AReason", " varchar(200) NOT NULL,", "AFlag", " int(11) default '0',", "AStatus", " char(10) default '申请中',", "\n  PRIMARY KEY  (", "AID", "),", "\n  KEY ", "UID", " (", "UID", "),", "\n  KEY ", "TGID", " (", "TGID", "),", "\n [color=red] CONSTRAINT ", "dy_apply_ibfk_1", " FOREIGN KEY (", "UID", ") REFERENCES ", "dy_user", " (", "UID", ") ON DELETE CASCADE,", "\n  CONSTRAINT ", "dy_apply_ibfk_2", " FOREIGN KEY (", "TGID", ") REFERENCES ", "dy_topic_group", " (", "TGID", ") ON DELETE CASCADE", "\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;[/color]--", "\n\n", "-- Dumping data for table ", "dy_apply", "\n", "\n\n", "[color=red]LOCK TABLES ", "dy_apply", " WRITE;[/color]/*!40000 ALTER TABLE ", "dy_apply", " DISABLE KEYS ", "/;", "\nINSERT INTO ", "dy_apply", " VALUES (2,1,10002,'范德萨发大萨菲',1,'拒绝申请'),(3,1,10004,'范德萨发大',0,'申请中'),(4,1,10000,'fsfaf',1,'拒绝申请'),(5,1,10002,'dsf',1,'拒绝申请'),(7,3,10002,'范德萨发大是',1,'同意申请'),(8,1,10002,'feafdsafdsafdas',1,'同意申请'),(9,1,10000,'fefewfewa',1,'同意申请'),(10,1,10003,'21',0,'申请中'),(11,1,10008,'fdsa',0,'申请中'),(12,1,10006,'想学习',0,'申请中');", "\n/", "!40000 ALTER TABLE ", "dy_apply", " ENABLE KEYS */;", "\nUNLOCK TABLES;", "\n\n", "\n\n", "-- Table structure for table ", "dy_revert", "\n", "\n\n", "DROP TABLE IF EXISTS ", "dy_revert", ";", "\nCREATE TABLE ", "dy_revert", " (", "RID", " int(11) NOT NULL auto_increment,", "TID", " int(11) default NULL,", "UID", " int(11) default NULL,", "RTitle", " varchar(200) default NULL,", "RContent", " text NOT NULL,", "RDate", " datetime NOT NULL,", "\n  PRIMARY KEY  (", "RID", "),", "\n  KEY ", "TID", " (", "TID", "),", "\n  KEY ", "UID", " (", "UID", "),", "\n [color=red] CONSTRAINT ", "dy_revert_ibfk_1", " FOREIGN KEY (", "TID", ") REFERENCES ", "dy_topic", " (", "TID", ") ON DELETE CASCADE,", "\n  CONSTRAINT ", "dy_revert_ibfk_2", " FOREIGN KEY (", "UID", ") REFERENCES ", "dy_user", " (", "UID", ") ON DELETE CASCADE", "\n\n", ") ENGINE=InnoDB DEFAULT CHARSET=latin1;[/color]", "\n\n", "-- Dumping data for table ", "dy_revert", "\n", "\n\n", "[color=red]LOCK TABLES ", "dy_revert", " WRITE;[/color]/*!40000 ALTER TABLE ", "dy_revert", " DISABLE KEYS ", "/;", "\nINSERT INTO ", "dy_revert", " VALUES (1,2,3,'','看书，上网问问题','2008-12-08 11:08:31'),(2,1,3,'','传说新版本的JAVA 会自动缓存BYTE范围内的值.','2008-12-08 11:08:31'),(3,1,3,'','楼主懂了吗？可以参考Java里的源代码','2008-12-08 11:08:31'),(4,1,3,'','谢谢大家指教','2008-12-08 11:08:31'),(5,3,3,'','认真学习，专心研究的话就好学','2008-12-08 11:08:31'),(6,10,1,'','\\r\\n测试测试测试测试测试测试测试测试测试10\\r\\n测试测试测试测试测试测试测试测试测试10\\r\\n测试测试测试测试测试测试测试测试测试10','2008-12-08 20:13:07'),(7,10,1,'回答 xyz 的问题','\\r\\n测试测试测试测试测试测试测试测试测试10\\r\\n测试测试测试测试测试测试测试测试测试10\\r\\n测试测试测试测试测试测试测试测试测试10','2008-12-08 20:13:15'),(8,1,2,'','都是一个人????','2008-12-10 23:01:33'),(9,6,2,'','新版本会缓存的 呵呵','2008-12-11 23:24:32'),(10,8,1,'','再次测试啊啊啊 啊','2008-12-12 01:16:36'),(11,10,1,'','学生\\r\\n\\r\\n注册时间 2008-12-08\\r\\n\\r\\n最后登陆 2008-12-12\\r\\n 2楼  发表于 2008-12-08 20:13:15 回答 xyz 的问题\\r\\n测试测试测试测试测试测试测试测试测试10 测试测试测试测试测试测试测试测试测试10 测试测试测试测试测试测试测试测试测试10 ','2008-12-12 01:16:56'),(12,4,2,'','回答过的问题嘛算法','2008-12-12 10:58:57'),(13,10,2,'','回答过了，是不是没有了么','2008-12-12 13:08:35'),(14,3,2,'','回答了 谢谢 呵呵。。。','2008-12-12 13:27:24'),(15,15,1,'','bbbbbbbbbbbbbbbbb','2009-03-16 20:45:19'),(16,15,1,'','ccccccccccccccc','2009-03-16 20:59:07'),(17,17,1,'','ssssssssssssssssss','2009-03-16 21:00:10');", "\n/", "!40000 ALTER TABLE ", "dy_revert", " ENABLE KEYS */;", "\nUNLOCK TABLES;", "\n\n", "\n\n", "-- Table structure for table ", "dy_topic", "\n", "\n\n", "DROP TABLE IF EXISTS ", "dy_topic", ";", "\nCREATE TABLE ", "dy_topic", " (", "TID", " int(11) NOT NULL auto_increment,", "UID", " int(11) default NULL,", "TGID", " int(11) default NULL,", "TTitle", " varchar(200) NOT NULL,", "TContent", " text NOT NULL,", "TDate", " datetime NOT NULL,", "TReadCount", " int(11) default '0',", "\n  PRIMARY KEY  (", "TID", "),", "\n  KEY ", "UID", " (", "UID", "),", "\n  KEY ", "TGID", " (", "TGID", "),", "\n  CONSTRAINT ", "dy_topic_ibfk_1", " FOREIGN KEY (", "UID", ") REFERENCES ", "dy_user", " (", "UID", ") ON DELETE CASCADE,", "\n  CONSTRAINT ", "dy_topic_ibfk_2", " FOREIGN KEY (", "TGID", ") REFERENCES ", "dy_topic_group", " (", "TGID", ") ON DELETE CASCADE", "\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;", "\n\n", "\n\n", "-- Dumping data for table ", "dy_topic", "\n", "\n\n", "LOCK TABLES ", "dy_topic", " WRITE;", "\n/*!40000 ALTER TABLE ", "dy_topic", " DISABLE KEYS ", "/;", "\nINSERT INTO ", "dy_topic", " VALUES (1,1,10001,'怎样学习框架ssh','学习struts spring hibernate 的顺序是ssh吗  顺便根据我的情况推荐几本书','2008-12-08 11:07:16',31),(2,2,10003,'C++很难吗？应该怎么样学习呢','请给我推荐几本C++的书，给我讲些学习方法谢谢','2008-12-08 11:07:16',19),(3,2,10001,'测试','测试测试测试测试测试测试测试测试测试','2008-12-08 11:07:16',19),(4,1,10001,'JAVA很难吗？应该怎么样学习呢','请给我推荐几本JAVA的书，给我讲些学习方法谢谢','2008-12-08 11:07:16',14),(5,1,10002,'请教一句SQL这么写。。','这个SQL好难啊，应该怎么学呢','2008-12-08 11:07:16',12),(6,1,10001,'Integer类的一个小问题 ==比较','Integer内的值的大小在Byte范围内时，==比较返回true 在那范围之外返回false \\n这是为什么呢，为什么会这样》？ ','2008-12-08 11:07:34',32),(7,1,10002,'测试71','测试测试测试测试测试测试测试测试测试7','2008-12-08 11:08:09',13),(8,1,10001,'测试81','测试测试测试测试测试测试测试测试测试8','2008-12-08 11:08:09',21),(9,1,10002,'测试91','测试测试测试测试测试测试测试测试测试9','2008-12-08 11:08:09',16),(10,1,10001,'测试101','测试测试测试测试测试测试测试测试测试10','2008-12-08 11:08:09',29),(11,1,10002,'测试111','测试测试测试测试测试测试测试测试测试11','2008-12-08 11:08:09',12),(12,1,10001,'测试121','测试测试测试测试测试测试测试测试测试12','2008-12-08 11:08:09',13),(13,1,10005,'自动控制的课本是哪个？','自动控制的课本是哪个？自动控制的课本是哪个？自动控制的课本是哪个？','2008-12-12 01:18:07',2),(14,1,10000,'我是第一个来到这里的','第一个提问的哦 呵呵','2008-12-12 14:01:29',1),(15,1,10000,'aaaaaaaaaa','aabbbbbbbbbbbbbbbbbbbb','2009-03-16 20:44:05',6),(16,1,10000,'bbccccccccccccc','aaaaaaaaaaaaaa','2009-03-16 20:58:57',0),(17,1,10000,'11111111111111111','22222222222222222222','2009-03-16 21:00:00',2);", "\n/", "!40000 ALTER TABLE ", "dy_topic", " ENABLE KEYS */;", "\nUNLOCK TABLES;", "\n\n", "\n\n", "-- Table structure for table ", "dy_topic_group", "\n", "\n\n", "DROP TABLE IF EXISTS ", "dy_topic_group", ";", "\nCREATE TABLE ", "dy_topic_group", " (", "TGID", " int(11) NOT NULL auto_increment,", "TGName", " varchar(50) NOT NULL,", "TDetail", " varchar(200) NOT NULL,", "\n  PRIMARY KEY  (", "TGID", ")", "\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;", "\n\n", "\n\n", "-- Dumping data for table ", "dy_topic_group", "\n", "\n\n", "LOCK TABLES ", "dy_topic_group", " WRITE;", "\n/*!40000 ALTER TABLE ", "dy_topic_group", " DISABLE KEYS ", "/;", "\nINSERT INTO ", "dy_topic_group", " VALUES (10000,'Java网络编程','计算机与自动控制学院'),(10001,'数据库系统概论','计算机与自动控制学院'),(10002,'C语言程序设计','计算机与自动控制学院'),(10003,'高等数学','理学院'),(10004,'线性代数','理学院'),(10005,'自动控制原理','机械学院'),(10006,'大学英语1','外国语学院'),(10007,'运筹学','经济管理学院'),(10008,'运筹学','经济管理学院'),(10009,'大学物理','基础课程'),(10010,'高等数学','基础课程');", "\n/", "!40000 ALTER TABLE ", "dy_topic_group", " ENABLE KEYS */;", "\nUNLOCK TABLES;", "\n\n", "\n\n", "-- Table structure for table ", "dy_tu", "\n", "\n\n", "DROP TABLE IF EXISTS ", "dy_tu", ";", "\nCREATE TABLE ", "dy_tu", " (", "TUID", " int(11) NOT NULL auto_increment,", "UID", " int(11) default NULL,", "TGID", " int(11) default NULL,", "\n  PRIMARY KEY  (", "TUID", "),", "\n  KEY ", "UID", " (", "UID", "),", "\n  KEY ", "TGID", " (", "TGID", "),", "\n  CONSTRAINT ", "dy_tu_ibfk_1", " FOREIGN KEY (", "UID", ") REFERENCES ", "dy_user", " (", "UID", ") ON DELETE CASCADE,", "\n  CONSTRAINT ", "dy_tu_ibfk_2", " FOREIGN KEY (", "TGID", ") REFERENCES ", "dy_topic_group", " (", "TGID", ") ON DELETE CASCADE", "\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;", "\n\n", "\n\n", "-- Dumping data for table ", "dy_tu", "\n", "\n\n", "LOCK TABLES ", "dy_tu", " WRITE;", "\n/*!40000 ALTER TABLE ", "dy_tu", " DISABLE KEYS ", "/;", "\nINSERT INTO ", "dy_tu", " VALUES (1,2,10000),(2,2,10001),(3,2,10002),(4,1,10001),(6,1,10005),(10,3,10002),(12,1,10000),(13,1,10002),(14,3,10001),(15,4,10001),(17,7,10001);", "\n/", "!40000 ALTER TABLE ", "dy_tu", " ENABLE KEYS */;", "\nUNLOCK TABLES;", "\n\n", "\n\n", "-- Table structure for table ", "dy_user", "\n", "\n\n", "DROP TABLE IF EXISTS ", "dy_user", ";", "\nCREATE TABLE ", "dy_user", " (", "UID", " int(11) NOT NULL auto_increment,", "UName", " varchar(20) NOT NULL,", "UPwd", " varchar(20) NOT NULL,", "UGender", " char(2) default '男',", "UEmail", " varchar(40) default NULL,", "URole", " int(11) default '0',", "UHead", " varchar(50) default 'UserHead/no_head.jpg',", "URegDate", " date default NULL,", "ULastLogin", " datetime default NULL,", "ULastEmit", " datetime default NULL,", "UPermit", " int(11) default '1',", "\n  PRIMARY KEY  (", "UID", "),", "\n  UNIQUE KEY ", "UName", " (", "UName", ")", "\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;", "\n\n", "\n\n", "-- Dumping data for table ", "dy_user", "\n", "\n\n", "LOCK TABLES ", "dy_user", " WRITE;", "\n/*!40000 ALTER TABLE ", "dy_user", " DISABLE KEYS ", "/;", "\nINSERT INTO ", "dy_user", " VALUES (1,'xyz','123456','男','", "fgdsa@163.com", "',0,'UserHead/1.jpg','2008-12-08','2009-03-16 22:16:20','2009-03-16 21:00:10',1),(2,'zrk','123456','男','", "sfdsaga@163.com", "',1,'UserHead/2.JPG','2008-12-08','2009-03-16 23:12:04','2008-12-12 13:27:24',1),(3,'胡再芬','123456','女','", "wereq@163.com", "',0,'UserHead/3.jpg','2008-12-08','2008-12-12 09:26:47',NULL,1),(4,'wyf','123456','男','", "gr4eg@163.com", "',3,'UserHead/1.jpg','2008-12-08','2009-03-17 15:11:32','2008-12-12 14:01:29',1),(5,'fdsa','123123','男','", "rfews@3421.com", "',0,'UserHead/no_head.jpg','2009-03-16','2009-03-16 17:41:24','2009-03-16 17:41:24',1),(7,'wfa','123123','男','", "fdsa@123.com", "',0,'UserHead/no_head.jpg','2009-03-16','2009-03-16 17:44:32','2009-03-16 17:44:32',1),(8,'few','123123','男','", "fdsa@123.com", "',0,'UserHead/no_head.jpg','2009-03-16','2009-03-16 17:45:11','2009-03-16 17:45:11',1);", "\n/", "!40000 ALTER TABLE ", "dy_user", " ENABLE KEYS ", "/;", "\nUNLOCK TABLES;", "\n/", "!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;", "\n\n", "/*!40101 SET SQL_MODE=@OLD_SQL_MODE ", "/;", "\n/", "!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS ", "/;", "\n/", "!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS ", "/;", "\n/", "!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT ", "/;", "\n/", "!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS ", "/;", "\n/", "!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION ", "/;", "\n/", "!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;", "\n\n", "-- Dump completed on 2009-03-17  7:23:17", "\n\n", "红色部分不知道什么意思，如果能解释下这几个表的关系，就更好了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在多标签文本分类的训练过程中&amp;#xff0c;在多元文本分类的训练过程中&amp;#xff0c;Loss一般在0.1-0.2之间的时候&amp;#xff0c;模型基本上已经收敛。但是&amp;#xff0c;看题主的这个&amp;#xff0c;在多标签文本分类(这个框架下)的情况下&amp;#xff0c;Loss往往要达到0.0001-0.001之间&amp;#xff0c;模型才收敛。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["问下使用albert 进行多标签的文本分类[12个类别],为啥 acc 才这么点,是哪里没写对么?", ["import", " tensorflow ", "as", " tf\n \n", "tf", ".__version__\n", "\n", "'2.2.2", "'\n", "\n", "import keras\n", "print", "(keras.__version__)", "\n", "\n", "2", ".", "3", ".", "1", "\n\n\n", "Using", " TensorFlow backend.\n", "\n", "\n", "from", " tensorflow ", "import", " keras\n", "print", "(keras.__version__)\n", "\n", "2", ".", "3", ".", "0", "-tf\n", "\n", "from tensorflow.keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\n\nMAX_LENGTH = ", "1024", "\n#载入训练集和测试集数据\n# train = pd.read", "_csv(", "r", "'D:\\", "code", "\\", "python", "\\", "csdn_nlp", "\\", "data", "\\文本分类数据\\Texts_Classification\\", "train2", ".", "csv", "')", "\n# test = pd.read", "_csv(", "r", "'D:\\", "code", "\\", "python", "\\", "csdn_nlp", "\\", "data", "\\文本分类数据\\Texts_Classification\\", "test2", ".", "csv", "')", "\n\ntrain = pd.read", "_csv(", "r", "'", "/", "mnt", "/", "d", "/", "code", "/", "python", "/", "csdn_nlp", "/", "data", "/", "文本分类数据", "/", "Texts_Classification", "/", "train2", ".", "csv", "')", "\ntest = pd.read", "_csv(", "r", "'", "/", "mnt", "/", "d", "/", "code", "/", "python", "/", "csdn_nlp", "/", "data", "/", "文本分类数据", "/", "Texts_Classification", "/", "test2", ".", "csv", "')", "\n", "\n", "train", ".head(", "10", ")\n", "\n", "\n", "\n", "Unnamed: 0", "分类", "文章", "字数", "分词", "label", "0", "10000", "体育", "欧洲杯观察：足坛格局地震　东南欧已能占半边天 搜狐体育讯　土耳其与克罗地亚在本届欧洲杯１／４...", "1818", "['欧洲杯', '观察', '足坛', '格局', '地震', '东南欧', '已能', '...", "8", "1", "10001", "体育", "来源：搜狐体育　作者：雷欧 主队　比分　客队　进球视频青岛　１－１　武汉浙江　１－１　北京搜...", "2190", "['来源', '搜狐', '体育', '作者', '雷欧', '主队', '比分', '客队...", "8", "2", "10002", "体育", "欧洲杯－帕夫柳琴科范尼破门　荷兰１－１俄罗斯加时 搜狐体育讯　北京时间６月２２日，２００８欧...", "2078", "['欧洲杯', '帕夫', '柳琴', '科范尼', '破门', '荷兰', '俄罗斯', ...", "8", "3", "10003", "体育", "郅联璧合配合日臻完善　斯杯之前尤纳斯再谈裁员 ７年后重登上海滩，中国男篮来去匆匆。队长刘炜回...", "1810", "['郅', '联璧', '合', '配合', '日臻完善', '斯杯', '之前', '尤纳...", "8", "4", "10004", "体育", "盘踞世界第一逼近五百周　伍兹创造高尔夫里程碑 搜狐体育讯　下周一，老虎－伍兹将第４９９周稳坐...", "1893", "['盘踞', '世界', '第一', '逼近', '五百', '周伍', '兹', '创造'...", "8", "5", "10005", "体育", "第五日看点：郑洁挑战ＮＯ．１　费天王冲击男单１６强 搜狐体育讯　北京时间６月２７日晚，２００...", "2082", "['第五日', '看点', '郑洁', '挑战', '费', '天王', '冲击', '男单...", "8", "6", "10007", "体育", "王德显改变双姝命运　邢慧娜孙英杰成败均因一人 ２００７年年底，邢慧娜来到了北京。田管中心已经...", "1855", "['王德显', '改变', '双姝', '命运', '邢慧娜', '孙', '英杰', '成...", "8", "7", "10008", "体育", "半场实录：皮尔斯异军突起　湖人队领先凯尔特人 搜狐直播员：搜狐网友：赛式是２３２制的，还是主...", "8550", "['半场', '实录', '皮尔斯', '异军突起', '湖人队', '领先', '凯尔特人...", "8", "8", "10009", "体育", "温格：德国可成英格兰榜样　三狮军团差在意志力 晨报特派记者　甘慧（奥地利维也纳６月２９日电）...", "2162", "['温格', '德国', '可成', '英格兰', '榜样', '三狮', '军团', '差...", "8", "9", "10010", "体育", "欧洲杯－范尼斯内德建功　荷兰３－０狂屠意大利 搜狐体育讯　北京时间６月１０日凌晨２：４５，２...", "2643", "['欧洲杯', '范', '尼斯', '德', '建功', '荷兰', '狂屠', '意大利...", "8", "\n", "\n\n\n\n\n", "temp_train_data_list = train", "[[", "\"文章\"", ",", "\"label\"", "]", "]", ".values", ".tolist", "()\ntrain_data_list = ", "[tuple(x) for x in temp_train_data_list]", "\n\ntemp_test_data_list = test", "[[", "\"文章\"", ",", "\"label\"", "]", "]", ".values", ".tolist", "()\ntest_data_list = ", "[tuple(x) for x in temp_test_data_list]", "\ntrain_data_list", "[0]", "\n", "print", "(type(train_data_list)", ")\n", "\n", "<", "class", " ", "'list'", ">\n", "\n", "# ", "from", " sklearn.model_selection import train_test_split\n# ", "''", "'不采取分层抽样时的数据集分割'", "''", "\n# valid_data_list = train_test_split(train_data_list,test_size=0.3)\n# le", "n", "(valid_data_list)\n# valid_data_list[0]\nimport random\nbaifenbi = 80\n", "length", " = le", "n", "(train_data_list)\npr", "int", "(", "length", ")\nle", "n", "(train_data_list[", "int", "((", "length", "/100)", "*baifenbi):])", "\n", "\n", "23549", "\n\n\n\n\n\n", "4710", "\n", "\n", "# 加载数据集 这么取 值 标签训练会有问题,所以要随机打乱,然后选取", "\nimport ", "random", "\n", "random", ".shuffle(train_data_list)\ntrain_data = train_data_list[", "0", ":", "int", "((length/", "100", ")*baifenbi)]\nvalid_data = train_data_list[", "int", "((length/", "100", ")*baifenbi):]\n\n\n", "# random.seed(10)", "\n", "# valid_data = random.sample(train_data_list, 5) ", "\n\ntest_data = test_data_list\n", "\n", "import", " numpy ", "as", " np\n", "from", " sklearn ", "import", " metrics\n", "from", " bert4keras.tokenizers ", "import", " Tokenizer\n", "from", " bert4keras.backend ", "import", " keras, set_gelu\n", "from", " bert4keras.models ", "import", " build_transformer_model\n", "from", " bert4keras.snippets ", "import", " DataGenerator, sequence_padding\n", "from", " bert4keras.optimizers ", "import", " Adam, extend_with_piecewise_linear_lr\n", "from", " keras.layers ", "import", " Lambda, Dense\n", "from", " contextlib ", "import", " redirect_stdout\n", "\n", "set_gelu(", "'tanh'", ")  ", "# 切换gelu版本", "\n\n", "# 文本共计 12 个类别", "\nnum_classes = ", "12", "\n", "# 长文本,长一些,好像bert 类,最长 512? 所以编码的文字 应该去掉停用词", "\nmaxlen = ", "64", "\n\nbatch_size = ", "8", "\n\n", "# config_path = r\"D:/code/python/csdn_nlp/model/albert_xlarge_zh/albert_xlarge/albert_config.json\"", "\n", "# checkpoint_path =tf.train.latest_checkpoint(r\"D:/code/python/csdn_nlp/model/albert_xlarge_zh/albert_xlarge/\")", "\n", "# #checkpoint_path = r\"D:/code/python/csdn_nlp/model/albert_xlarge_zh/albert_xlarge/model\"", "\n", "# dict_path = r\"D:/code/python/csdn_nlp/model/albert_xlarge_zh/albert_xlarge/vocab_chinese.txt\"", "\n\n", "# linux 路径", "\nconfig_path = ", "r\"/mnt/d/code/python/csdn_nlp/model/albert_base/albert_config.json\"", "\n", "# albert-base-v2 的压缩包里面没有ckpt，windows 下面加载报错，所以应该在linux 下面使用", "\ncheckpoint_path =tf.train.latest_checkpoint(", "r\"/mnt/d/code/python/csdn_nlp/model/albert_base/model.ckpt-best.data-00000-of-00001\"", ")\n", "#checkpoint_path = r\"/mnt/d/code/python/csdn_nlp/model/albert_base/\"", "\ndict_path = ", "r\"/mnt/d/code/python/csdn_nlp/model/albert_base/vocab_chinese.txt\"", "\n\n", "# 建立分词器", "\ntokenizer = Tokenizer(dict_path, do_lower_case=", "True", ")\n\n\n", "class", " ", "data_generator", "(", "DataGenerator", "):\n    ", "\"\"\"数据生成器\n    \"\"\"", "\n    ", "def", " ", "__iter__", "(", "self, random=", "False", "):\n        batch_token_ids, batch_segment_ids, batch_labels = [], [], []\n        ", "for", " is_end, (text, label) ", "in", " self.sample(random):\n            token_ids, segment_ids = tokenizer.encode(text, maxlen=maxlen)\n            batch_token_ids.append(token_ids)\n            batch_segment_ids.append(segment_ids)\n            batch_labels.append([label])\n            ", "if", " ", "len", "(batch_token_ids) == self.batch_size ", "or", " is_end:\n                batch_token_ids = sequence_padding(batch_token_ids)\n                batch_segment_ids = sequence_padding(batch_segment_ids)\n                batch_labels = sequence_padding(batch_labels)\n                ", "yield", " [batch_token_ids, batch_segment_ids], batch_labels\n                batch_token_ids, batch_segment_ids, batch_labels = [], [], []\n\n\n", "# 加载预训练模型", "\nbert = build_transformer_model(\n    config_path=config_path,\n    checkpoint_path=checkpoint_path,\n    model=", "'albert'", ",\n    return_keras_model=", "False", ",\n)\n\noutput = Lambda(", "lambda", " x: x[:, ", "0", "], name=", "'CLS-token'", ")(bert.model.output)\noutput = Dense(\n    units=num_classes,\n    activation=", "'softmax'", ",\n    kernel_initializer=bert.initializer\n)(output)\n\nmodel = keras.models.Model(bert.model.", "input", ", output)\nmodel.summary()\n\n", "# 派生为带分段线性学习率的优化器。", "\n", "# 其中name参数可选，但最好填入，以区分不同的派生优化器。", "\nAdamLR = extend_with_piecewise_linear_lr(Adam, name=", "'AdamLR'", ")\n\nmodel.", "compile", "(\n    loss=", "'sparse_categorical_crossentropy'", ",\n    ", "# optimizer=Adam(1e-5),  # 用足够小的学习率", "\n    optimizer=AdamLR(learning_rate=", "1e-4", ", lr_schedule={\n        ", "1000", ": ", "1", ",\n        ", "2000", ": ", "0.1", "\n    }),\n    metrics=[", "'accuracy'", "],\n)\n\n", "# 转换数据集", "\ntrain_generator = data_generator(train_data, batch_size)\nvalid_generator = data_generator(valid_data, batch_size)\ntest_generator = data_generator(test_data, batch_size)\n\n\n", "def", " ", "evaluate", "(", "data", "):\n    total, right = ", "0.", ", ", "0.", "\n    ", "for", " x_true, y_true ", "in", " data:\n        y_pred = model.predict(x_true).argmax(axis=", "1", ")\n        y_true = y_true[:, ", "0", "]\n        total += ", "len", "(y_true)\n        right += (y_true == y_pred).", "sum", "()\n    ", "return", " right / total\n\n\n", "class", " ", "Evaluator", "(keras.callbacks.Callback):\n    ", "\"\"\"评估与保存\n    \"\"\"", "\n    ", "def", " ", "__init__", "(", "self", "):\n        self.best_val_acc = ", "0.", "\n\n    ", "def", " ", "on_epoch_end", "(", "self, epoch, logs=", "None", "):\n        val_acc = evaluate(valid_generator)\n        ", "if", " val_acc > self.best_val_acc:\n            self.best_val_acc = val_acc\n            model.save_weights(", "'best_model.weights'", ")\n        test_acc = evaluate(test_generator)\n        ", "print", "(\n            ", "u'val_acc: %.5f, best_val_acc: %.5f, test_acc: %.5f\\n'", " %\n            (val_acc, self.best_val_acc, test_acc)\n        )\n", "\n", "Model: \"model", "_6\"\n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nLayer (type)                    Output Shape         Param #     Connected to                     \n==================================================================================================\nInput-Token (InputLayer)        (None, None)         0                                            \n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\nInput-Segment (InputLayer)      (None, None)         0                                            \n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nEmbedding-Token (Embedding)     (None, None, 128)    2704384     Input-Token[", "0", "][", "0", "]                \n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\nEmbedding-Segment (Embedding)   (None, None, 128)    256         Input-Segment[", "0", "][", "0", "]              \n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nEmbedding-Token-Segment (Add)   (None, None, 128)    0           Embedding-Token[", "0", "][", "0", "]            \n                                                                 Embedding-Segment[", "0", "][", "0", "]          \n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\nEmbedding-Position (PositionEmb (None, None, 128)    65536       Embedding-Token-Segment[", "0", "][", "0", "]    \n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nEmbedding-Norm (LayerNormalizat (None, None, 128)    256         Embedding-Position[", "0", "][", "0", "]         \n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\nEmbedding-Mapping (Dense)       (None, None, 768)    99072       Embedding-Norm[", "0", "][", "0", "]             \n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nTransformer-MultiHeadSelfAttent (None, None, 768)    2362368     Embedding-Mapping[", "0", "][", "0", "]          \n                                                                 Embedding-Mapping[", "0", "][", "0", "]          \n                                                                 Embedding-Mapping[", "0", "][", "0", "]          \n                                                                 Transformer-FeedForward-Norm[0][0\n                                                                 Transformer-FeedForward-Norm[0][0\n                                                                 Transformer-FeedForward-Norm[0][0\n                                                                 Transformer-FeedForward-Norm[1][0\n                                                                 Transformer-FeedForward-Norm[1][0\n                                                                 Transformer-FeedForward-Norm[1][0\n                                                                 Transformer-FeedForward-Norm[2][0\n                                                                 Transformer-FeedForward-Norm[2][0\n                                                                 Transformer-FeedForward-Norm[2][0\n                                                                 Transformer-FeedForward-Norm[3][0\n                                                                 Transformer-FeedForward-Norm[3][0\n                                                                 Transformer-FeedForward-Norm[3][0\n                                                                 Transformer-FeedForward-Norm[4][0\n                                                                 Transformer-FeedForward-Norm[4][0\n                                                                 Transformer-FeedForward-Norm[4][0\n                                                                 Transformer-FeedForward-Norm[5][0\n                                                                 Transformer-FeedForward-Norm[5][0\n                                                                 Transformer-FeedForward-Norm[5][0\n                                                                 Transformer-FeedForward-Norm[6][0\n                                                                 Transformer-FeedForward-Norm[6][0\n                                                                 Transformer-FeedForward-Norm[6][0\n                                                                 Transformer-FeedForward-Norm[7][0\n                                                                 Transformer-FeedForward-Norm[7][0\n                                                                 Transformer-FeedForward-Norm[7][0\n                                                                 Transformer-FeedForward-Norm[8][0\n                                                                 Transformer-FeedForward-Norm[8][0\n                                                                 Transformer-FeedForward-Norm[8][0\n                                                                 Transformer-FeedForward-Norm[9][0\n                                                                 Transformer-FeedForward-Norm[9][0\n                                                                 Transformer-FeedForward-Norm[9][0\n                                                                 Transformer-FeedForward-Norm[10][\n                                                                 Transformer-FeedForward-Norm[10][\n                                                                 Transformer-FeedForward-Norm[10][\n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\nTransformer-MultiHeadSelfAttent (None, None, 768)    0           Embedding-Mapping[", "0", "][", "0", "]          \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[0][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[1][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[2][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[3][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[4][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[5][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[6][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[7][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[8][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[9][0\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward-Norm[10][\n                                                                 Transformer-MultiHeadSelfAttentio\n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nTransformer-MultiHeadSelfAttent (None, None, 768)    1536        Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\nTransformer-FeedForward (FeedFo (None, None, 768)    4722432     Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-MultiHeadSelfAttentio\n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nTransformer-FeedForward-Add (Ad (None, None, 768)    0           Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "0", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "1", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "2", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "3", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "4", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "5", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "6", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "7", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "8", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "9", "][", "0", "]    \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "10", "][", "0", "]   \n                                                                 Transformer-MultiHeadSelfAttentio\n                                                                 Transformer-FeedForward[", "11", "][", "0", "]   \n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\nTransformer-FeedForward-Norm (L (None, None, 768)    1536        Transformer-FeedForward-Add[", "0", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "1", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "2", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "3", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "4", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "5", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "6", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "7", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "8", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[", "9", "][", "0", "]\n                                                                 Transformer-FeedForward-Add[10][0\n                                                                 Transformer-FeedForward-Add[11][0\n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__\nCLS-token (Lambda)              (None, 768)          0           Transformer-FeedForward-Norm[11][\n__", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "\ndense_", "21 (Dense)                (None, 12)           9228        CLS-token[", "0", "][", "0", "]                  \n==================================================================================================\nTotal params: 9,966,604\nTrainable params: 9,966,604\nNon-trainable params: 0\n", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "____", "__", "\n", "\n", "evaluator = Evaluator()\nmodel.fit(\n        train_generator.forfit(),\n        steps_per_epoch=", "len", "(train_generator),\n        epochs=", "1", ",\n        callbacks=[evaluator]\n    )\n\nmodel.load_weights(", "'best_model.weights'", ")\n", "print", "(", "u'final test acc: %05f\\n'", " % (evaluate(test_generator)))\n", "\n", "Epoch", " ", "1", "/1", "\n", "2355", "/2355", " [", "==============================", "] ", "-", " ", "1663s 706ms/step - loss: 2.5211 - accuracy:", " ", "0.0876", "\n", "val_acc:", " ", "0.08493", ",", " ", "best_val_acc:", " ", "0.08493", ",", " ", "test_acc:", " ", "0.08333", "\n\n", "final test acc:", " ", "0.083333", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;应该是yz两个网络输出1&amp;#xff0c;x网络第一层计算之后3个值变为0&amp;#xff0c;唯一不为0的经过权重为0的乘积后也变成0 了&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["神经网络的简单问题。", ["考虑下面的神经网络，哪两个网络输出1?", "\n", "一道神经网络问题，比较急，回答秒采纳"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;上面说得很清楚啊。你都不知道哪里&amp;#xff0c;我们怎么知道。按照你发的错误图片&amp;#xff0c;那就是图片的那里&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["不知道怎么去找错误在哪里", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答通过自己思路及引用到GPTᴼᴾᴱᴺᴬᴵ搜索,得到内容具体如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;您好&amp;#xff01;根据您提供的代码&amp;#xff0c;这个问题是因为您没有指定求解器&amp;#xff0c;而默认情况下 MATLAB 会使用非线性最小二乘法&amp;#xff08;lsqnonlin&amp;#xff09;求解优化问题。但是&amp;#xff0c;由于您的问题是一个非线性无约束优化问题&amp;#xff0c;因此应该使用 fminunc 函数进行求解。\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;您可以使用以下代码将 fminunc 作为求解器来解决这个问题&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-attribute\"&gt;prob&lt;/span&gt; &amp;#61; optimproblem(&amp;#39;ObjectiveSense&amp;#39;,&amp;#39;min&amp;#39;);\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt; &amp;#61; optimvar(&amp;#39;a&amp;#39;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&amp;#39;LowerBound&amp;#39;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&amp;#39;UpperBound&amp;#39;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;f&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1531&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;9396&lt;/span&gt;*(-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0255493101686254&lt;/span&gt;*a*(&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;*a &amp;#43; &lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;) &amp;#43; a &amp;#43; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0255493101686254&lt;/span&gt;*a*(-a*(&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;*a &amp;#43; &lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;98&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;29&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;56&lt;/span&gt;*a)/(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - a) - &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0250383239652529&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; ;\n&lt;span class=\"hljs-attribute\"&gt;prob&lt;/span&gt;.Objective &amp;#61; f;\n&lt;span class=\"hljs-attribute\"&gt;show&lt;/span&gt;(prob);\n&lt;span class=\"hljs-attribute\"&gt;opts&lt;/span&gt; &amp;#61; optimoptions(&amp;#39;fminunc&amp;#39;,&amp;#39;Algorithm&amp;#39;,&amp;#39;quasi-newton&amp;#39;);&lt;span class=\"hljs-meta\"&gt;\n[sol,fval,flag,out] &amp;#61; solve(prob,&amp;#39;options&amp;#39;,opts);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的代码中&amp;#xff0c;我们使用了 optimoptions 函数为 fminunc 指定了一个选项&amp;#xff0c;其中 Algorithm 参数设置为 &amp;#39;quasi-newton&amp;#39;&amp;#xff0c;这是一种非常常用的无约束非线性优化算法。然后&amp;#xff0c;我们将这个选项作为第二个参数传递给 solve 函数&amp;#xff0c;以使用 fminunc 求解您的问题。&lt;/p&gt;\n&lt;p&gt;希望这可以帮助您解决问题&amp;#xff01;&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;如果以上回答对您有所帮助&amp;#xff0c;点击一下采纳该答案&amp;#xff5e;谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#MATLAB#的问题，如何解决？", ["MATLAB入门，对于求解非线性优化问题有一处报错不理解，望解答修改", "\n", "prob", " = optimproblem('ObjectiveSense','min');\n", "a", " = optimvar('a',", "1", ",", "1", ",'LowerBound',", "0", ",'UpperBound',", "1", ");\n", "f", " = ", "1531", ".", "9396", "*(-", "0", ".", "0255493101686254", "*a*(", "9", ".", "58", "*a + ", "19", ".", "98", ") + a + ", "0", ".", "0255493101686254", "*a*(-a*(", "9", ".", "58", "*a + ", "19", ".", "98", ") + ", "29", ".", "56", "*a)/(", "1", " - a) - ", "0", ".", "0250383239652529", ")^", "2", " \n", "prob", ".Objective = f;\n", "show", "(prob);", "\n[sol,fval,flag,out] = solve(prob);", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在路径前面加一个 r&amp;#39;路径&amp;#39;&amp;#xff0c;就可以了&amp;#xff0c;问题是出在其中的“\\”符号上&amp;#xff0c;会被当做转义字符的&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["如图   为什么指定路径总是提示错误？", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先用数据构建一个堆&amp;#xff0c;然后不断调整非叶子节点&amp;#xff08;也就是数据之间相互比较&amp;#xff0c;用较大的数做为根节点并交换&amp;#xff0c;交换后记得检查相关的节点&amp;#xff09;&amp;#xff0c;保证较大树做为根&amp;#xff0c;然后弹出堆顶元素&amp;#xff08;与最后一个元素交换&amp;#xff0c;然后忽略已排好的元素就可以了&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/777360471556113.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/42638047155617.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["这个怎么构建最大堆并描述升序过程、", ["对关键字表为{16,5,9,17,2,8,33,10,6,90}的无序序列进行累堆排序(升序) ,请构建最大堆,并描述累堆排序过程"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这是因为B样条曲线是由多个B样条基函数组成的&amp;#xff0c;每个B样条基函数只影响以该点为中心的邻近4段曲线&amp;#xff0c;因此改动特征多边形上的一个顶点&amp;#xff0c;也只会影响以该点为中心的邻近4段曲线。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["b样条问题b样条b样条", ["根据B样条曲线表达式及B样条基函数的性质，分析对于三次B-样条曲线，改动特征多边形上的一个顶点，为何至多只影响以该点为中心的邻近4段曲线？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;5&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数据结构导论二叉树度数", ["怎么做求解答"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;要在COMSOL中显示线性传输比例图像&amp;#xff0c;请按照以下步骤进行操作&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;点击“结果”选项卡&amp;#xff0c;选择要显示图像的结果集。&lt;/p&gt;\n&lt;p&gt;选择“表面绘图”或“体绘图”&amp;#xff0c;具体取决于您想要绘制的图像类型。&lt;/p&gt;\n&lt;p&gt;在“设置”窗口中&amp;#xff0c;找到“可视化”选项卡并单击。&lt;/p&gt;\n&lt;p&gt;在“颜色映射”下拉菜单中&amp;#xff0c;选择“传输比例”。&lt;/p&gt;\n&lt;p&gt;在“选择数据”下拉菜单中&amp;#xff0c;选择“线性传输比例”。&lt;/p&gt;\n&lt;p&gt;根据需要调整其他设置&amp;#xff0c;例如最小值和最大值&amp;#xff0c;颜色范围等。&lt;/p&gt;\n&lt;p&gt;单击“确定”以应用更改并显示线性传输比例图像。&lt;br /&gt;如果您的结果显示为透射率或吸收率图像&amp;#xff0c;您可以通过更改显示的结果类型来显示线性传输比例图像。在“结果”选项卡中&amp;#xff0c;选择“切换结果类型”选项卡&amp;#xff0c;然后选择“线性传输比例”作为结果类型。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["comsol的结果问题", ["在comsol里怎么显示线性传输比例图像？结果显示图像为透射率吸收率，怎么添加线性传输比例图像？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;单看这一部分&amp;#xff0c;只是在设置网络中的全连接层&amp;#xff0c;为了后续构造生成器模型进行训练&amp;#xff0c;详细说明为&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qq_42079689/article/details/102873766\" id=\"textarea_1662125953344_1662126030163_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;PyTorch的nn.Linear&amp;#xff08;&amp;#xff09;详解_风雪夜归人o的博客-CSDN博客_nn.linear&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;  PyTorch的nn.Linear&amp;#xff08;&amp;#xff09;是用于设置网络中的全连接层的&amp;#xff0c;需要注意的是全连接层的输入与输出都是二维张量&amp;#xff0c;一般形状为[batch_size, size]&amp;#xff0c;不同于卷积层要求输入输出是四维张量。其用法与形参说明如下&amp;#xff1a;  in_features指的是输入的二维张量的大小&amp;#xff0c;即输入的[batch_size, size]中的size。  out_features指的是输出的二维张量的大小&amp;#xff0c;即...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_42079689/article/details/102873766&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["求解，if score_func == 1:", ["\n", "一个代码初学者，感觉是在求加权数的，求帮忙解释这些代码是什么意思🙏"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在 changecolor 方法中的 setStrokeColor 方法调用失败&amp;#xff0c;可能是由于前端未正确获取到线性覆盖物对象或未正确设置线性覆盖物的属性。&lt;br /&gt;可以在方法调用之前使用 console.log 或者 Vue.js 的开发工具来打印相关对象&amp;#xff0c;以确保正确获取到了对应的对象&amp;#xff0c;可以在 changecolor 方法中添加一些调试信息或者直接在浏览器的开发者工具中调试代码&amp;#xff0c;以确保 setStrokeColor 方法可以被正确调用&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["vue根据后端数据动态修改界面组件属性的问题", ["最近在用Vue-element-admin调用百度地图，创建了许多线性覆盖物：", "\n", "<", "script", ">", "\n", "import", " speedApi ", "from", " ", "'@/api/speedsearch'", "\n", "export", " ", "default", " ", "{\n ", " name", ": ", "'BmapDemo'", ",\n  data() {\n    ", "return", " {\n      options: [{\n        value: ", "'15'", ",\n        label: ", "'15分后'", "\n      }", ", ", "{\n        value: ", "'30'", ",\n        label: ", "'30分后'", "\n      }", ", ", "{\n        value: ", "'45'", ",\n        label: ", "'45分后'", "\n      }", ", ", "{\n        value: ", "'60'", ",\n        label: ", "'60分后'", "\n      }", "],\n      ", "value", ": ", "''", ",\n      ", "speedlist", ": ", "{\n       ", " id", ": ", "''", ",\n        fif: ", "''", ",\n        thir: ", "''", ",\n        fou: ", "''", ",\n        six: ", "''", "\n      }", "\n    }\n  },\n  mounted() ", "{\n    // ", "2", ". 创建地图示例\n    var ", "map", " = new ", "window", ".BMapGL.Map(", "'container'", ")\n    // ", "3", ". 设置中心点坐标\n    var point = new ", "window", ".BMapGL.Point(", "116.400747", ", ", "39.983412", ")\n    // ", "4", ". 地图初始化，同时设置地图展示级别\n    ", "map", ".centerAndZoom(point, ", "15", ")\n    // ", "5", ". 开启鼠标滚轮缩放\n    ", "map", ".enableScrollWheelZoom", "(true", ")\n    var scaleCtrl = new ", "window", ".BMapGL.ScaleControl() // 添加比例尺控件\n    ", "map", ".addControl(scaleCtrl)\n    var zoomCtrl = new ", "window", ".BMapGL.ZoomControl() // 添加缩放控件\n    ", "map", ".addControl(zoomCtrl)\n    var cityCtrl = new ", "window", ".BMapGL.CityListControl() // 添加城市列表控件\n    ", "map", ".addControl(cityCtrl)\n    ", "map", ".addEventListener(", "'click'", ", (data) => {\n      // point包含了经纬度\n      console.log(data.point)\n      // polyline17.setStrokeColor(", "'green'", ")\n    }", ")\n    ", "var", " polyline1 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360431", ", ", "39.992534", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360899", ", ", "39.987103", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline1)\n    ", "var", " polyline2 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360899", ", ", "39.987103", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360827", ", ", "39.982182", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline2)\n    ", "var", " polyline3 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360827", ", ", "39.982182", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.361438", ", ", "39.973778", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline3)\n    ", "var", " polyline17 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.387632", ", ", "39.983316", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.38677", ", ", "39.974525", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline17)\n    ", "var", " polyline16 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.386626", ", ", "39.988457", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.387632", ", ", "39.983316", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.addOverlay(polyline16)\n  },\n  methods: ", "{\n    changecolor", "(id", ", speed) {\n      ", "if", " (speed >= ", "5", ") {\n        ", "window", "[", "'polyline'", " +", " id", "].setStrokeColor(", "'green'", ")\n      }", " ", "else", " ", "if", " (speed >= ", "2", " && speed < ", "5", ") ", "{\n        ", "window", "[", "'polyline'", " +", " id", "].setStrokeColor(", "'yellow'", ")\n      }", " ", "else", " ", "{\n        ", "window", "[", "'polyline'", " +", " id", "].setStrokeColor(", "'red'", ")\n      }", "\n    },\n    paintmap() ", "{\n      speedApi.paintmap(this.", "value", ").", "then", "(response => {\n        this.speedlist = response.data.row\n        console.log(this.speedlist)\n        ", "for", " (var i = ", "0", "; i < this.speedlist.length; i++) {\n          ", "if", " (this.speedlist[i].fif != null) {\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].fif)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].fif)\n          }", " ", "else", " ", "if", " (", "this", ".", "speedlist", "[i].", "thir", " != ", "null", ") ", "{\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].thir)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].thir)\n          }", " ", "else", " ", "if", " (", "this", ".", "speedlist", "[i].", "fou", " != ", "null", ") ", "{\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].fou)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].fou)\n          }", " ", "else", " ", "{\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].six)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].six)\n          }", "\n        }\n      })\n    }\n  }\n}\n", "</", "script", ">", "\n\n", "\n", "我的method里的changecolor是用来根据后端传回的ID和速度修改前端对应线性覆盖物的颜色的，但是运行一直报错，想请教下该怎么修改这个方法。", "这个是报错的内容"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;报错是关于优化设置的编译器警告信息&lt;br /&gt;1、首先检查代码中的错误&lt;/p&gt;\n&lt;p&gt;2、编译器优化设置&amp;#xff1a; &amp;#34;Current optimization/debug settings&amp;#34;&amp;#xff0c;检查当前的编译器优化设置是否正确。调整编译器的优化级别&amp;#xff0c;降低优化级别&amp;#xff0c;或者禁用某些优化选项&lt;/p&gt;\n&lt;p&gt;3、编译器的目标设置&amp;#xff1a;&amp;#34;#27010-D Not all available code size is b DCDCPlantF...&amp;#34; 和 &amp;#34;#27007-D Detecting compilation without DCDCPlantF...&amp;#34;&amp;#xff0c;这与编译器的目标设置有关。检查编译器的目标设置&amp;#xff0c;如目标芯片型号、编译器选项等是否正确配置&lt;/p&gt;\n&lt;p&gt;4、代码依赖关系&amp;#xff1a; &amp;#34;properties properties properties&amp;#34;&amp;#xff0c;是代码中存在的依赖关系问题导致的错误。检查代码中的依赖关系&amp;#xff0c;包括头文件引用、库文件链接等是否正确配置&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["ccs代码报错怎么办", ["\n", "在ccs代码《buck变换器线性化模型》中出现2个解决不了的bug，求帮忙"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;运行界面截个图看看呢&amp;#xff0c;除了这个press any key to continue&amp;#xff0c;还有啥&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["这个程序是顺序表（c++），建立学生信息表，现在的问题是程序不报错但是会出现’press any key to continue”", ["\n", "\n", "’press any key to continue” ’press any key to continue”", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;机器人的回答笑死了&amp;#xff0c;也不检查一下。。。哪里有什么乱七八糟的文字。&lt;br /&gt;第9题环形队列的话可以入队&amp;#xff0c;不然怎么叫环形。环形队列只需要检查队列不为空时&amp;#xff08;head和rear都是0&amp;#xff09;&amp;#xff0c;head和rear是否相等&amp;#xff0c;相等则说明队列已满&amp;#xff0c;不能入队。&lt;br /&gt;rear指针在i,j,k,l,m入队后就指向了0&amp;#xff0c;因为head和rear并不相同&amp;#xff0c;所以可以入队。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["假设CQ[0..10]是一个环形队列,初始状态为front=rear=0", ["假设CQ[0..10]是一个环形队列,初始状态为front=rear=0", "这两个第八题是不可以入队第二个可以入队吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你得先说清楚你函数的意思啊。为啥要修改呢&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;&lt;br /&gt;而且代码也没给完整&amp;#xff0c;你真有这需求&amp;#xff1f;&lt;br /&gt;if (flag &amp;#61; false)  这个flag从天而降&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["可不可以修改一下 但不改变函数意思 写一下解释", ["public void insert(Node head, Node new node)", "{", "boolean inserted = false; if (head == null) head = newnode; if (head.next==null) head.next=newnode; while(head.next!=null)", "{", "if (head.next.value>newnode.value)", "{", "Node temp = head.next; head.next=newnode; newnode.next=temp; inserted =true; break;", "\n", "else", "head = head.next;}", "if (flag = false)", "head.next=newnode"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你已经有t 值了&amp;#xff0c;那计算r 的话这个公式r&amp;#61;[t^2/(t^2&amp;#43;df)]^0.5 应该能看懂吧。df&amp;#61;n1&amp;#43;n2-2  ,n1,n2 就是两组样本的数量。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Meta分析t值、f值如何转换为r值？", ["很多文献只给了回归分析结果，有t值，但是不会转换为r值，比如这种：", "（n🟰561）", "\n", "还有这种", "\n", "\n", "再有的文献中写了怎么算，但是纯社科学渣一个，不会转换，那个自由度搞不清楚，比如：", "\n", "希望有有相关经验的朋友解释解释", "能算的话希望给个带入数值后的计算过程或者相关计算器", "万分感谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以看下帮助&amp;#xff0c;我不太懂‘x’这个参数设置的意义。&lt;a href=\"https://ww2.mathworks.cn/help/matlab/ref/diff.html\" id=\"textarea_1680106513806_1680106886750_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ww2.mathworks.cn/help/matlab/ref/diff.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["MATLAB函数求导报错", ["不太明白MATLAB中diff()函数有什么要求。", "或者有其他问题？", "\n", "%%%% 牛顿迭代法求非线性方程实根%%%%%\nclc;\n", "clear", "\n", "format", " short\ns=", "in", "\nput(", "'请输入函数表达式：f = '", ",", "'s'", ");\n", "global", " f;\nf=inline(s,", "'x'", ");\nX = input(", "'请输入初始点:x0='", ");\nfai(X)\nfunction f1=fai(x)\n", "global", " f;\ntempf=diff(f,", "'x'", ");\nf1=x-f/tempf;\nend\n", "\n", "还没写完，", "下面是命令与报错：", "\n", "请输入函数表达式：f = x*x\n请输入初始点:", "x0", "=1\n检查对函数 ", "'diff'", " 的调用中是否存在不正确的参数数据类型或缺少参数。\n\n出错 Newtonian_iterative_method>fai (第 16 行)\n", "tempf", "=diff(f,'x');\n\n出错 Newtonian_iterative_method (第 9 行)\nfai(a)\n \n16  ", "tempf", "=diff(f,'x');\nK>> \n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/weixin_64565994/article/details/125253331\" id=\"textarea_1677914859208_1677914925717_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://blog.csdn.net/weixin_64565994/article/details/125253331\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;一&amp;#xff09;快速排序的最好情况O&amp;#xff08;nlogn&amp;#xff09;&lt;br /&gt;&amp;#xff08;二&amp;#xff09;快速排序的最坏情况O&amp;#xff08;n^2&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["快速排序的时间复杂性不受数据初始状态影响，恒为O(nlog2n)。", ["快速排序的时间复杂性不受数据初始状态影响，恒为O(nlog2n)。（", "【答案】错", "不是对的吗，哪里错了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个用pandas处理&amp;#xff0c;用pandas读取excel然后处理数据就行了&amp;#xff0c;pandas教程可以网上搜索一下&amp;#xff0c;具体的代码这个要结合数据才能写得出。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["stata数据排序分组求均值", ["将公司的四个指标分年度排序分成十组并赋值1-10，然后加总除以4得到平均值，这个数据都要经过怎么处理？代码要怎么写啊？", "实在是看不懂这个数据具体是怎么操作的，希望有大神能给出具体的解答，谢谢各位了😭"]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;第一题&amp;#xff0c;可以用头插法进行原地逆置&amp;#xff0c;按顺序遍历链表&amp;#xff0c;每遍历一个就插入到头结点的后面。&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;void reverseList(nodeList &amp;amp;L) {\n Node*p &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;,*tmp;\n L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; NULL;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;这里是为了保证最后一个结点指向NULL\n &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {&lt;!-- --&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;遍历链表\n     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;)\n         tmp &amp;#61; p-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n     &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n         tmp &amp;#61; NULL;\n     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;插入到L头结点的后面\n     p-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n     L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; p;\n     p &amp;#61; tmp;\n }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;&lt;li&gt;第二题&lt;br /&gt;1&amp;#xff09;元素最多不会超过L长度&amp;#xff0c;我认为也可以插入到第0个数据之后&amp;#xff1a;i&amp;lt;0 || i&amp;gt;L.length&lt;br /&gt;2&amp;#xff09;初始化申请的最大空间为MAXSIZE&amp;#xff1a;L.length &amp;#61;&amp;#61; MAXSIZE&lt;br /&gt;3&amp;#xff09;把第i个后面的元素往后挪&amp;#xff0c;但数组下标从0开始所以是i-1&amp;#xff1a;j &amp;gt; i - 1&lt;br /&gt;4&amp;#xff09;数组下标从0开始所以第i&amp;#43;1个数位置是i下标&amp;#xff1a;L.elem[i] &amp;#61; e;&lt;br /&gt;5&amp;#xff09;L.length&amp;#43;&amp;#43;;&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划简介", "Question": ["这些空怎么填啊，初学者 ，有几个不会，有没有人解，决一下，不知道怎么做 不知道 不知道怎么做", ["\n", "不知道怎么做，有没有人解决一下 ，我还是初学者不会这些题目，有没有人解决一下"]], "Tag": "算法设计"}
{"Answer": "&lt;h2 id=\"h2_你说的没错&amp;#xff0c;直接选择排序的时间复杂度是on2&amp;#xff0c;而不是on。因此&amp;#xff0c;如果题目中要求时间复杂度为on的排序方法&amp;#xff0c;直接选择排序并不符合要求。_1676439520601\"&gt;你说的没错&amp;#xff0c;直接选择排序的时间复杂度是O(n^2)&amp;#xff0c;而不是O(n)。因此&amp;#xff0c;如果题目中要求时间复杂度为O(n)的排序方法&amp;#xff0c;直接选择排序并不符合要求。&lt;/h2&gt;\n&lt;h2 id=\"h2_另外&amp;#xff0c;在稳定性方面&amp;#xff0c;直接选择排序是不稳定的&amp;#xff0c;因为在选择最小元素的过程中&amp;#xff0c;可能会破坏相同元素之间的顺序关系。例如&amp;#xff0c;在排序序列5-8-5-2-9中&amp;#xff0c;第一次选择最小元素2会把第一个5和2交换位置&amp;#xff0c;因此两个5的相对顺序被破坏了。_1676439520601\"&gt;另外&amp;#xff0c;在稳定性方面&amp;#xff0c;直接选择排序是不稳定的&amp;#xff0c;因为在选择最小元素的过程中&amp;#xff0c;可能会破坏相同元素之间的顺序关系。例如&amp;#xff0c;在排序序列[5, 8, 5, 2, 9]中&amp;#xff0c;第一次选择最小元素2会把第一个5和2交换位置&amp;#xff0c;因此两个5的相对顺序被破坏了。&lt;/h2&gt;\n&lt;p&gt;因此&amp;#xff0c;题目中说时间复杂度为O(n)的排序方法不稳定&amp;#xff0c;很可能是错别字或者表述不准确&amp;#xff0c;应该是说某个特定的O(n)排序方法不稳定&amp;#xff0c;而不是说所有O(n)排序方法都不稳定。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["在时间复杂度为O(n)的排序方法中", ["在时间复杂度为O(n)的排序方法中，（）排序方法是不稳定的。", "这个怎么是直接选择排序，它的时间复杂度不是O(n平方)吗‘"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;回归分析需要满足一些基本原则&amp;#xff0c;以便保证结果的有效性和准确性。&lt;/p&gt;\n&lt;p&gt;如果你使用家庭数据作为一个自变量&amp;#xff0c;但是这些数据是由同一家庭内的多个个人数据累加起来的&amp;#xff0c;这样的数据可能会存在共线性问题&amp;#xff0c;因为两个变量相关性过高&amp;#xff0c;导致估计的系数不可靠。&lt;/p&gt;\n&lt;p&gt;此外&amp;#xff0c;在使用多元回归分析时&amp;#xff0c;也需要考虑独立性原则&amp;#xff0c;即自变量间应该相互独立&amp;#xff0c;不存在多重共线性问题。&lt;/p&gt;\n&lt;p&gt;因此&amp;#xff0c;如果你想使用家庭数据作为自变量&amp;#xff0c;建议检验家庭数据和个人数据之间的关系&amp;#xff0c;以确保不存在共线性问题。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["回归分析的自变量数据单位必须同一口径吗？", ["在实证分析时运用到了charls数据库，数据库里面是家庭、个人以及社区三种标签，自变量一共有四组，其中三组是个人的数据，另外一组是家庭的数据，都是同一群人，家庭的数据是将同一家庭的个人数据累加起来了，回归分析也有结果，但是符合回归分析的原则吗？不知道有没有将问题讲清楚，希望大家可以帮个忙"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这类问题默认都来用顺序查询&amp;#xff0c;需要要求折半回明确表示。&lt;br /&gt;200/4&amp;#61;50块&lt;br /&gt;&amp;#xff08;1&amp;#43;50&amp;#xff09;/2&amp;#61;25.5&lt;br /&gt;&amp;#xff08;1&amp;#43;4&amp;#xff09;/2&amp;#61;2.5&lt;br /&gt;这是查找成功的情况&amp;#xff01;&lt;br /&gt;查找失败是&amp;#xff08;1&amp;#43;51&amp;#43;1&amp;#43;5&amp;#xff09;/2&amp;#61;29&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["一个文件包含了200个记录，若采用分块查找法，每块长度为4，则平均查找长度为", ["一个文件包含了200个记录，若采用分块查找法，每块长度为4，则平均查找长度为（28）。", "计算这个题目，它又没说是顺序查找还是折半查找所在块，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;下面是一个简单的例子&amp;#xff0c;展示了如何在C&amp;#43;&amp;#43;中使用Eigen库求解一个稀疏线性方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;Eigen/Sparse&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;Eigen/Dense&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;// 创建稀疏矩阵和向量&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;Eigen::SparseMatrix&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;A&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;Eigen::VectorXd &lt;span class=\"hljs-title\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;// 设置矩阵和向量的值&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;// 创建求解器并求解方程组&lt;/span&gt;\n    Eigen::SparseLU&amp;lt;Eigen::SparseMatrix&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;&amp;gt; solver;\n    solver.&lt;span class=\"hljs-built_in\"&gt;analyzePattern&lt;/span&gt;(A);\n    solver.&lt;span class=\"hljs-built_in\"&gt;factorize&lt;/span&gt;(A);\n    Eigen::VectorXd x &amp;#61; solver.&lt;span class=\"hljs-built_in\"&gt;solve&lt;/span&gt;(b);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;接下来&amp;#xff0c;要把这个求解稀疏线性方程组的方法封装成dll&amp;#xff0c;在C#程序中调用。先要创建一个C&amp;#43;&amp;#43;的动态链接库&amp;#xff0c;其中包含你的求解方法。具体的步骤包括&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;创建一个新的C&amp;#43;&amp;#43;项目&amp;#xff0c;选择“DLL”作为项目类型。&lt;/li&gt;&lt;li&gt;在项目中添加您的求解方法的源代码。&lt;/li&gt;&lt;li&gt; 在项目属性中设置“生成-&amp;gt;配置类型”为“动态库(.dll)”&amp;#xff0c;以及其他必要的设置&amp;#xff0c;例如输出路径等。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;接下来要在C#程序中调用这个dll。具体的步骤包括&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;在C#程序中声明DllImport&amp;#xff0c;以便能够使用外部的dll。&lt;/li&gt;&lt;li&gt;创建一个C#类&amp;#xff0c;其中包含您要调用的C&amp;#43;&amp;#43;函数的签名。&lt;/li&gt;&lt;li&gt; 在C#程序中调用这个C&amp;#43;&amp;#43;函数。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;下面是一个简单的例子&amp;#xff0c;展示了如何在C#程序中调用你的C&amp;#43;&amp;#43;函数&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; System.Runtime.InteropServices;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;MyDll&lt;/span&gt;\n{\n    [&lt;span class=\"hljs-meta\"&gt;DllImport(&lt;span class=\"hljs-string\"&gt;&amp;#34;MyDll.dll&amp;#34;&lt;/span&gt;)&lt;/span&gt;]\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SolveSparseLinearEquation&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;\n        [In] &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n,\n        [In] &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] A,\n        [In] &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ia,\n        [In] &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ja,\n        [In] &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] b,\n        [Out] &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] x\n    &lt;/span&gt;)&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Example&lt;/span&gt;\n{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 创建稀疏矩阵和向量&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] A &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ia &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ja &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] x &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n\n        &lt;span class=\"hljs-comment\"&gt;// 设置矩阵和向量的值&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;// 调用C&amp;#43;&amp;#43;函数求解方程组&lt;/span&gt;\n        MyDll.SolveSparseLinearEquation(n, A, ia, ja, b, x);\n\n        &lt;span class=\"hljs-comment\"&gt;// 处理求解结果&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["找C++ C#的有缘人指导", ["想找一个会C++和C#的厉害的有缘人在线指导一下，最好还了解过Eigen库😭", "我现在需要用C++调用Eigen库，写一个求解稀疏线性方程组的方法，然后封装成dll在C#程序中调用，求指导😭快崩溃了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;up_and_down方法的第一条语句打印顺序是1,2,3,4&amp;#xff0c;最后一条语句打印是4,3,2,1&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["有一个递归函数不知道该怎么理解？", ["他最后这个输出结果到底是怎么从一变到四？然后从四再变到一的？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果您只有问卷调查的选项占比数据&amp;#xff0c;而没有原始数据&amp;#xff0c;那么无法直接使用 SPSS 进行回归分析。回归分析需要使用原始数据&amp;#xff0c;即每个样本的具体数值。而选项占比只是一种统计数据&amp;#xff0c;无法直接作为回归分析的输入数据。&lt;/p&gt;\n&lt;p&gt;如果您想进行回归分析&amp;#xff0c;您需要从其他渠道获取原始数据。例如&amp;#xff0c;您可以重新进行一次问卷调查&amp;#xff0c;收集每个样本的具体数值&amp;#xff0c;然后使用 SPSS 进行回归分析。另外&amp;#xff0c;您也可以尝试从其他数据来源中获取相关数据&amp;#xff0c;比如已有的研究报告、公共数据集等等。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;回归分析需要根据具体问题和研究目的进行设计和分析&amp;#xff0c;并不是简单地将数据输入 SPSS 中就能得到结果。因此&amp;#xff0c;在进行回归分析前&amp;#xff0c;建议您充分了解回归分析的原理和方法&amp;#xff0c;制定合理的分析方案&amp;#xff0c;并选择适当的统计工具进行分析。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["SPSS只知道问卷调查的数据百分比，能做回归分析嘛", ["只知道问卷调查的数据百分比，比如第一个选项30％第二个选项15％第三个选项45％第四个选项10％，所有的问题都只知道选项占比，我想用这种选项占比做SPSS回归分析，能做嘛"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/108928394086129.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;这是代码块&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\n\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; numpy as np\n\n&lt;span class=\"hljs-comment\"&gt;# 生成示例数据&lt;/span&gt;\nnp.random.seed(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; np.random.rand(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * x &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; np.random.randn(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 计算回归线&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;coef&lt;/span&gt; &amp;#61; np.polyfit(x, y, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;line_x&lt;/span&gt; &amp;#61; np.linspace(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;line_y&lt;/span&gt; &amp;#61; np.polyval(coef, line_x)\n\n&lt;span class=\"hljs-comment\"&gt;# 绘制回归图和数据点&lt;/span&gt;\nplt.figure()\nplt.scatter(x, y)\n\n&lt;span class=\"hljs-comment\"&gt;# 绘制回归线&lt;/span&gt;\nplt.plot(line_x, line_y, &lt;span class=\"hljs-attr\"&gt;c&amp;#61;&amp;#39;g&amp;#39;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 绘制每个数据点到回归线的距离&lt;/span&gt;\nfor i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(x)):\n    &lt;span class=\"hljs-attr\"&gt;x_val&lt;/span&gt; &amp;#61; x[i]\n    &lt;span class=\"hljs-attr\"&gt;y_val&lt;/span&gt; &amp;#61; y[i]\n    &lt;span class=\"hljs-attr\"&gt;y_pred&lt;/span&gt; &amp;#61; np.polyval(coef, x_val)\n    plt.plot([x_val, x_val], [y_val, y_pred], &lt;span class=\"hljs-attr\"&gt;c&amp;#61;&amp;#39;r&amp;#39;)&lt;/span&gt;\n\nplt.show()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["画出线性回归图每个点到直线的距离", ["怎么画出每个点到直线的距离", "\n", "import", " numpy as np\n", "import", " matplotlib.pyplot as plt\nfrom scipy ", "import", " stats\n\n", "# 构造训练数据", "\n", "x", " = np.arange(", "0", "., ", "10", "., ", "0.2", ")\n", "m", " = len(x)\n", "x0", " = np.full(m, ", "1.0", ")\n", "input_data", " = np.vstack([x0, x]).T\n", "target_data", " = ", "2", " * x + ", "5", " + np.random.randn(m)\n\n", "# 终止条件", "\n", "loop_max", " = ", "10000", "  ", "# 最大迭代次数", "\n", "epsilon", " = ", "1", "e-", "3", "    ", "# 收敛条件最小值", "\n\n", "# 初始化权值", "\nnp.random.seed(", "0", ")\n", "theta", " = np.random.randn(", "2", ")\n", "alpha", " = ", "0.001", "  ", "# 步长", "\n", "diff", " = ", "0", ".\n", "error", " = np.zeros(", "2", ")\n", "count", " = ", "0", "  ", "# 循环次数", "\n", "finish", " = ", "0", "  ", "# 终止标志", "\n\n", "# 迭代", "\nwhile count < loop_max:\n    count += ", "1", "\n    ", "# 在标准梯度下降中，权值更新的每一步对多个样例求和，需要更多的计算", "\n    ", "sum_m", " = np.zeros(", "2", ")\n    for i ", "in", " range(m):\n        ", "dif", " = (np.dot(theta, input_data[i]) - target_data[i]) * input_data[i]\n        ", "# 当alpha取值过大时,sum_m会在迭代过程中会溢出", "\n        ", "sum_m", " = sum_m + dif\n\n    ", "# 注意步长alpha的取值,过大会导致振荡", "\n    ", "theta", " = theta - alpha * sum_m\n\n    ", "# 判断是否已收敛", "\n    ", "if", " np.linalg.norm(theta - error) < epsilon:\n        ", "finish", " = ", "1", "\n        break\n    ", "else", ":\n        ", "error", " = theta\n\n    print('迭代次数 = %d' % count, '\\t w:', theta)\nprint('迭代次数 = %d' % count, '\\t w:', theta)\n\n", "# 用scipy线性回归进行检查", "\nslope, intercept, r_value, p_value, ", "slope_std_error", " = stats.linregress(x, \n                                                                       target_data)\nprint('截距 = %s 斜率 = %s' % (intercept, slope))\n\n", "# 用plot进行展示", "\nplt.plot(x, target_data, 'b*')\nplt.plot(x, theta[", "1", "] * x + theta[", "0", "], 'r')\nplt.xlabel(", "\"x\"", ")\nplt.ylabel(", "\"y\"", ")\nplt.show()\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;个数&amp;#xff1a;从1000--500--250--125--63--37 -- 19--9--5--3--2&amp;#xff0c;第一个比较的数是第1000个数据&amp;#xff0c;所以是11个单元&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数据结构导论数列二分查找法", ["\n", "为什么选C？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这题不是让你把f(x)的函数形式表达出来&amp;#xff0c;而是让你根据曲线图把g(x), h(x), k(x)函数是怎样从f(x)变换得到的关系写出来。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;g&lt;/span&gt;(x) &amp;#61; f(x-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;h&lt;/span&gt;(x) &amp;#61; -f(x-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;k&lt;/span&gt;(x) &amp;#61; -&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; * f(-x -&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["这种波浪函数的表达式怎么求", ["初步构想是使用三角函数的模板，构造一个类似的函数，但是不清楚是否可行"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你没有设置&amp;#xff0c;既然想显示年-月-日&amp;#xff0c;那就要设置date()函数的第二个参数如date(date, &amp;#34;YMD&amp;#34;)&lt;br /&gt;这里的YMD意思就是year month date即年月日 &lt;a href=\"https://cloud.tencent.com/developer/news/574226\" id=\"textarea_1676123100575_1676124524807_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://cloud.tencent.com/developer/news/574226&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["stata回归导入日期处理", ["为什么在excel里面是年、月、日，导入stata之后就变成了日、月、年", "？然后用date命令，结果显示的全是一个点"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;聚类分析例程&amp;#xff0c;你将X换成你的数据就可以用&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;%Matlab程序如下&amp;#xff1a;\nX&amp;#61;[&lt;span class=\"hljs-number\"&gt;244.42&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;412.04&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;459.63&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;512.21&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;160.45&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;43.51&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;89.93&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;48.55&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;48.63&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;435.77&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;724.85&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;376.04&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;381.81&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;210.39&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;71.82&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;150.64&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;23.74&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;188.28&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;321.75&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;665.80&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;157.94&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;172.19&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;147.16&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;52.44&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;78.16&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;10.90&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;93.50&lt;/span&gt;                                                                       \n&lt;span class=\"hljs-number\"&gt;152.29&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;258.60&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;83.42&lt;/span&gt;      &lt;span class=\"hljs-number\"&gt;85.10&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;75.74&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;26.75&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;63.47&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;5.89&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;47.02&lt;/span&gt;                                                                \n&lt;span class=\"hljs-number\"&gt;347.25&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;332.59&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;157.32&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;172.48&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;115.16&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;33.80&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;77.27&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;8.69&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;79.01&lt;/span&gt;                                                                    \n&lt;span class=\"hljs-number\"&gt;145.40&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;143.54&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;97.40&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;100.50&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;43.28&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;17.71&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;51.03&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;5.41&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;62.03&lt;/span&gt;                                                                  \n&lt;span class=\"hljs-number\"&gt;442.20&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;665.33&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;411.89&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;429.88&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;115.07&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;87.45&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;145.25&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;21.39&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;187.77&lt;/span&gt; ]&lt;span class=\"hljs-string\"&gt;&amp;#39;;\nY&amp;#61;pdist(X);\nSF&amp;#61;squareform(Y);\nZ&amp;#61;linkage(Y,&amp;#39;&lt;/span&gt;averag&lt;span class=\"hljs-string\"&gt;e&amp;#39;);\ndendrogram(Z);\nT&amp;#61;cluster(Z,&amp;#39;&lt;/span&gt;maxclust&lt;span class=\"hljs-string\"&gt;&amp;#39;,3)\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;详细参考&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/henu111/article/details/81512314\" id=\"textarea_1652333098980_1652333199332_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/henu111/article/details/81512314&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数学建模萌新小白求救", ["有20个土壤样品，分别给出5个变量的观测数据如下表所示，利用系统聚类法对其进行样品聚类分析"]], "Tag": "算法设计"}
{"Answer": "&lt;h4 id=\"h4_以下内容部分参考chatgpt模型&amp;#xff1a;_1681139395263\"&gt;以下内容部分参考ChatGPT模型&amp;#xff1a;&lt;/h4&gt;\n&lt;hr /&gt;\n&lt;p&gt;要计算影像组学R_Score评分&amp;#xff0c;可以按照以下步骤进行&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;确定特征对应的回归系数&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;使用机器学习算法训练模型&amp;#xff0c;得到特征与目标变量之间的关系&amp;#xff0c;从而得到每个特征对应的回归系数。&lt;/p&gt;\n&lt;ol start=\"2\"&gt;&lt;li&gt;计算每个影像组学评分&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;对于每个影像组学数据样本&amp;#xff0c;将其特征值代入回归方程中&amp;#xff0c;得到对目标变量的预测值&amp;#xff0c;即影像组学评分。&lt;/p&gt;\n&lt;ol start=\"3\"&gt;&lt;li&gt;线性组合计算总评分&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;将所有影像组学评分进行线性组合&amp;#xff0c;得到总评分。&lt;/p&gt;\n&lt;p&gt;以下是一个简单的例子&amp;#xff0c;使用线性回归算法训练模型&amp;#xff0c;计算影像组学R_Score评分&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;from sklearn.linear_model &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; LinearRegression\n\n&lt;span class=\"hljs-comment\"&gt;# 训练模型&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;X&lt;/span&gt; &amp;#61; [[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]] &lt;span class=\"hljs-comment\"&gt;# 特征矩阵&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;] &lt;span class=\"hljs-comment\"&gt;# 目标变量&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;model&lt;/span&gt; &amp;#61; LinearRegression().fit(X, y)\n\n&lt;span class=\"hljs-comment\"&gt;# 计算每个影像组学评分&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;image_features&lt;/span&gt; &amp;#61; [[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]]\n&lt;span class=\"hljs-attr\"&gt;image_scores&lt;/span&gt; &amp;#61; model.predict(image_features)\n\n&lt;span class=\"hljs-comment\"&gt;# 线性组合计算总评分&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;total_score&lt;/span&gt; &amp;#61; sum(image_scores)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;以上代码中&amp;#xff0c;首先使用LinearRegression算法训练模型&amp;#xff0c;得到每个特征对应的回归系数。然后&amp;#xff0c;将影像组学数据样本的特征值代入回归方程中&amp;#xff0c;得到对目标变量的预测值&amp;#xff0c;即影像组学评分。最后&amp;#xff0c;将所有影像组学评分进行线性组合&amp;#xff0c;得到总评分。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h3 id=\"h3_如果我的建议对您有帮助、请点击采纳、祝您生活愉快_1681139395305\"&gt;如果我的建议对您有帮助、请点击采纳、祝您生活愉快&lt;/h3&gt;", "Konwledge_Point": "线性规划简介", "Question": ["影像组学评分R_Score", ["用Python要怎么计算影像组学R_Score评分呀！", "（选定特征对应的回归系数，将所有影像组学评分经过线性组合计算出来）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误是因为在运行bwselect时参数不正确导致的。建议检查以下几个方面&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;参数 y、v、c(0) 是否正确。其中 y 和 v 是必须参数&amp;#xff0c;分别表示原始数据集和输出数据集。c(0) 是一个可选参数&amp;#xff0c;表示颜色变量&amp;#xff0c;如果原始数据集没有颜色变量&amp;#xff0c;可以省略该参数。&lt;/p&gt;\n&lt;p&gt;kernel(uni)bwselect(meserd) 中的参数是否正确。其中 kernel 表示使用的核函数&amp;#xff0c;这里是指使用的是 univariate 核函数&amp;#xff1b;bwselect 表示带宽选择方法&amp;#xff0c;这里是指使用的是 meserd 带宽选择方法。&lt;/p&gt;\n&lt;p&gt;检查是否已经安装了 bwselect 插件。可以使用命令 findit bwselect 来查找并安装 bwselect 插件。如果已经安装了插件&amp;#xff0c;可以尝试更新插件并重新运行命令。&lt;/p&gt;\n&lt;p&gt;如果以上都检查过了还是无法解决问题&amp;#xff0c;建议提供更详细的错误信息和数据集以便进行更具体的排查。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["stata bwselect报错", ["求问！stata 做断点回归", "运行这个 rdbwselect y v, c(0) kernel(uni) bwselect(mserd)", "一直出现   bwselect() incorrectly specified  已安装外部命令"]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;summarize *&lt;/li&gt;&lt;li&gt; summarize salary age comten sales profits mktval&lt;/li&gt;&lt;li&gt;bysort grad : summarize ceoten&lt;/li&gt;&lt;li&gt;graph hbox salary&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;gen losalary &amp;#61; log(salary)&lt;br /&gt;graph hbox losalary&lt;br /&gt;5. scatter salary sales&lt;br /&gt;6. scatter sales profits salary, mstyle(p9 p8)&lt;br /&gt;7. scatter sales profits salary, msymbol(O X p) mcolor(green blue black) msize(medium medium medium)&lt;br /&gt;8.  scatter sales profits salary, c(l) legend(pos(5) ring(0) col(1) lab(1 “ sales  ”) lab(2 “ profits ”)&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;)&lt;br /&gt;9. quietly regress salary sales&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;. predict hat&lt;/p&gt;\n&lt;p&gt;. predict stdf&lt;/p&gt;\n&lt;p&gt;. generate lo&amp;#61;hat-1.96*stdf&lt;/p&gt;\n&lt;p&gt;. generate hi&amp;#61;hat&amp;#43;1.96*stdf&lt;/p&gt;\n&lt;p&gt;. scatter salary sales || line hat lo hi sales , pstyle(p2 p3 p3) sort&lt;/p&gt;\n&lt;ol start=\"10\"&gt;&lt;li&gt; scatter salary sales || lfit salary sales&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划简介", "Question": ["用stata进行统计图形", ["用stata", "文件CEOSAL2.dta包含了177位首席执行官的数据，可以用来考查企业业绩对CEO薪水的影响。", "  要求：", "  1.描述整个数据文件，获得对变量的基本理解。", "2.对salary、age、comten、sales、profits、mktval等5个变量进行统计描述，要求必须包含最大值、最小值和平均数3个统计量。", "3.要求对研究生和非研究生（变量是grade）CEO进行对比描述。", "4.利用箱线图找出salary和log(salary)的可疑异常值。", "5.绘制salary和sales的散点图。", "6.绘制salary和sales以及salary与profits的散点图，要求前者使用整体样式p9，后者使用整体样式p8.", "7.绘制salary和sales以及salary与profits的散点图，要求散点图形状前者选择实心圆，后者选择大写字母X；散点颜色前者选择绿色，后者选择蓝色；散点大小均选择中等。", "8.绘制salary和sales以及salary与profits的散点图，要求将图例放置在五点钟方向，同时图例排成一列。", "9.通过散点图和曲线图的复合来绘制salary对sales一次线性回归的95%的预测置信区间。", "10绘制复合图，包括salary对sales的散点图以及salary对sales的一次拟合图。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;把代码发给我看看&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["R语言tb1.contineous.normal函数是哪个R包的？", ["各位，苦找这函数的R包却不得", "希望得到各位解惑～", "tb1.contineous.normal", "tb1.categorial", "tb1.contineous.not.normal", "\n", "源代码如下：", "\n", "chtable <-  function (design, ", "cv", " = NULL, cv.", "nn", " = NULL, ", "gv", " = NULL, ", "by", " = NULL, \n                     ", "c_meanSQse", " = FALSE, ", "c_meanPMse", " = FALSE, ", "c_ci", " = FALSE, ", "g_N", " = FALSE, \n                     ", "g_percent", " = FALSE, ", "g_perSQse", " = FALSE, ", "g_NSQper", " = FALSE, ", "g_nSQper", " = FALSE, \n                     ", "g_ci", " = FALSE, ", "g_direction", " = ", "\"v\"", ", ", "total", " = FALSE, ", "round", " = ", "2", ", \n                     ", "view", " = T, ", "xlsx", " = NULL) \n{\n  ck.by <- list(", "cv", " = cv, ", "gv", " = gv, cv.", "nn", " = cv.nn, ", "by", " = by)\n  (ck.by <- ck.by[!sapply(ck.by, is.", "null", ")])\n  ", "if", " (length(ck.by) > ", "1", ") {\n    for (i ", "in", " ", "1", ":(length(ck.by) - ", "1", ")) {\n      for (j ", "in", " (i + ", "1", "):length(ck.by)) {\n        ", "if", " (names(ck.by)[i] == ", "\"cv\"", " & names(ck.by)[j] == \n            ", "\"cv.nn\"", ") \n          (next)(j)\n        ck.common <- set::", "and", "(ck.by[[i]], ck.by[[j]])\n        ", "if", " (length(ck.common) > ", "0", ") \n          stop(names(ck.by)[i], ", "\" and \"", ", names(ck.by)[j], \n               ", "\" have the same variable: \"", ", paste0(ck.common, \n                                                   ", "collapse", " = ", "\", \"", "))\n      }\n    }\n  }\n  v <- c(cv, cv.nn, gv)\n  lv <- set::not(v, colnames(design$variables))\n  ", "if", " (length(lv) > ", "0", ") {\n    ", "if", " (do::cnOS()) \n      stop(tmcn::toUTF8(", "\"变量 \"", "), paste0(lv, ", "collapse", " = ", "\", \"", "), \n           tmcn::toUTF8(", "\" 输入错误\"", "))\n    ", "if", " (!do::cnOS()) \n      stop(", "\"variable \"", ", paste0(lv, ", "collapse", " = ", "\", \"", "), ", "\" not exist\"", ")\n  }\n  r1 <- NULL\n  ", "if", " (!is.", "null", "(cv)) {\n    r1 <- tb1.contineous.normal(design, cv, by, ", "meanSQse", " = c_meanSQse, \n                                ", "meanPMse", " = c_meanPMse, ", "ci", " = c_ci, total, round)\n  }\n  r2 <- NULL\n  ", "if", " (!is.", "null", "(cv.nn)) {\n    r2 <- tbl.contineous.not.normal(design, cv.nn, by, total, \n                                    round)\n  }\n  r3 <- NULL\n  ", "if", " (!is.", "null", "(gv)) {\n    r3 <- tb1.categorial(design, ", "x", " = gv, by, ", "value", " = g_N, \n                         ", "per", " = g_percent, ", "perSQse", " = g_perSQse, ", "NSQper", " = g_NSQper, \n                         ", "nSQper", " = g_nSQper, ", "ci", " = g_ci, ", "direction", " = g_direction, \n                         ", "total", " = total, round)\n  }\n  r <- plyr::rbind.fill(r1, r2)\n  r <- plyr::rbind.fill(r, r3)\n  row.names(r) <- NULL\n  ", "if", " (view) \n    nhs_view.svytableone(r)\n  r$variable <- do::Replace(r$variable, ", "\"~~~~\"", ", ", "\"    \"", ")\n  ", "if", " (!is.", "null", "(xlsx)) {\n    header_bold <- openxlsx::createStyle(", "textDecoration", " = ", "\"Bold\"", ")\n    wb <- openxlsx::createWorkbook()\n    openxlsx::addWorksheet(wb, ", "\"Sheet1\"", ")\n    for (i ", "in", " ", "1", ":ncol(r)) {\n      openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = colnames(r)[i], \n                          ", "startCol", " = i, ", "startRow", " = ", "1", ", ", "headerStyle", " = header_bold)\n      ", "if", " (", "i", " == ", "1", ") {\n        for (j ", "in", " ", "1", ":nrow(r)) {\n          ", "if", " (do::left(r[j, i], ", "4", ") == ", "\"    \"", ") {\n            openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[j, \n                                                     i], ", "startCol", " = i, ", "startRow", " = j + ", "1", ")\n          }\n          ", "else", " {\n            openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[j, \n                                                     i], ", "startCol", " = i, ", "startRow", " = j + ", "1", ", ", "headerStyle", " = header_bold)\n          }\n        }\n      }\n      ", "else", " ", "if", " (grepl(", "\"p\"", ", colnames(r)[i], T)) {\n        for (j ", "in", " ", "1", ":nrow(r)) {\n          ", "if", " (nchar(r[j, i]) > ", "0", ") {\n            ii <- tryCatch(as.numeric(r[j, i]), ", "warning", " = function(w) ", "\"w\"", ")\n            ", "if", " ((", "ii", " == ", "\"w\"", " | ii <= ", "0.05", ") & r[j, i] != \n                ", "\"ref\"", ") {\n              openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = ii, \n                                  ", "startCol", " = i, ", "startRow", " = j + ", "1", ", ", "headerStyle", " = header_bold)\n            }\n          }\n          ", "else", " {\n            openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[j, \n                                                     i], ", "startCol", " = i, ", "startRow", " = j + ", "1", ")\n          }\n        }\n      }\n      ", "else", " {\n        openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[, i], \n                            ", "startCol", " = i, ", "startRow", " = ", "2", ")\n      }\n    }\n    openxlsx::saveWorkbook(wb, xlsx, ", "overwrite", " = TRUE)\n  }\n  invisible(r)\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt; &amp;#61; int(input())\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(n):\n    &lt;span class=\"hljs-attribute\"&gt;row&lt;/span&gt; &amp;#61; list(range(n * i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) * n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;row&lt;/span&gt; &amp;#61; row[::-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(row)\n\n&lt;span class=\"hljs-attribute\"&gt;5&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[1, 2, 3, 4, 5]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[10, 9, 8, 7, 6]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[11, 12, 13, 14, 15]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[20, 19, 18, 17, 16]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[21, 22, 23, 24, 25]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#python#的问题", ["螺旋矩阵形式如下：必须按照同等形势", "5阶螺旋矩阵：", "【12345】", "【109876】", "[1112131415】", "【2019181716】", "【2122232425】", "求 n 阶螺旋矩阵的行列式。 n 由用户输入，程序输出螺旋矩阵及其行列式。", "要求：行列式的求法是线性代数的知识；螺旋矩阵的生成必须采用列表递推式；本程序不能使用除了 random 库之外的其它库"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;具体的没理解你最终需要的效果&amp;#x1f602;&amp;#xff0c;只发表一下自己的见解&amp;#xff1a;arcgis作图基本都是空间上展示&amp;#xff08;比如一个地域上的平面差异等&amp;#xff09;&amp;#xff0c;如果想要展现时间上的差异&amp;#xff0c;我觉得要么就是多时序的图片显示&amp;#xff0c;或者直接显示一段时间内的差异变化吧。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["arcgis每年递增的数据如何统一图例？", ["类似于gdp之类每年递增的数据，用arcgis作图如果按照自动分级的方法，感觉就不能体现出时间演变的趋势了，能否通过统一尺度的方法在地图中也展示出时间的演变趋势（色块的深浅）？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;数据比较可以简单的画一个图.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/736531889036152.png\" /&gt;&lt;/p&gt;&lt;br /&gt;。但是根据查找的大小。有些节点是大可不必画的。&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数据结构二叉排序树查找元素比较次数", ["这样的题该如何做，求详细步骤"]], "Tag": "算法设计"}
{"Answer": "&lt;h4 id=\"h4_以下内容部分参考chatgpt模型&amp;#xff1a;_1681259182330\"&gt;以下内容部分参考ChatGPT模型&amp;#xff1a;&lt;/h4&gt;\n&lt;hr /&gt;\n&lt;p&gt;在使用Python中linregress函数做线性回归时&amp;#xff0c;可以使用pandas库中的fillna()函数将缺失值填充为0或者均值、中位数等统计量。在进行线性回归时&amp;#xff0c;需要将缺失值对应的数据点剔除掉&amp;#xff0c;可以使用numpy库中的isnan()函数将缺失值对应的位置找出来&amp;#xff0c;然后使用pandas库中的dropna()函数将对应的数据点剔除掉。下面是一个简单的例子&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-title\"&gt;from&lt;/span&gt; scipy.stats &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; linregress\n\n&lt;span class=\"hljs-meta\"&gt;# 创建一个时间序列数据&amp;#xff0c;包含缺失值&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; pd.&lt;span class=\"hljs-type\"&gt;Series&lt;/span&gt;([1, 2, &lt;span class=\"hljs-title\"&gt;np&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;nan&lt;/span&gt;, 4, 5, 6, &lt;span class=\"hljs-title\"&gt;np&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;nan&lt;/span&gt;, 8, 9, 10])&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 将缺失值填充为0&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.fillna(0)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 找出缺失值对应的位置&amp;#xff0c;剔除掉&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;mask&lt;/span&gt; &amp;#61; np.isnan(&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt; &amp;#61; np.arange(len(&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;))[~mask]&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;[~mask]&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 进行线性回归&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;slope&lt;/span&gt;, intercept, r_value, p_value, std_err &amp;#61; linregress(x, y)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的例子中&amp;#xff0c;我们将缺失值填充为0&amp;#xff0c;然后使用isnan()函数找出缺失值对应的位置&amp;#xff0c;使用~mask可以将True和False进行反转&amp;#xff0c;得到非缺失值对应的位置&amp;#xff0c;然后从原始数据中取出对应的x和y&amp;#xff0c;进行线性回归。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h3 id=\"h3_如果我的建议对您有帮助、请点击采纳、祝您生活愉快_1681259182358\"&gt;如果我的建议对您有帮助、请点击采纳、祝您生活愉快&lt;/h3&gt;", "Konwledge_Point": "线性规划简介", "Question": ["Python用linregress时，我有缺失值，改怎么处理", ["在使用Python中linregress函数做线性回归时，我的时间序列数据中有缺失值，而且不同点的缺失值不一样，该怎么处理"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用最小二乘法或梯度下降法来比较和判断。&lt;br /&gt;case {1,&amp;#39;l&amp;#39;,&amp;#39;linear&amp;#39;}&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    N &amp;#61; size(x,1);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    bp &amp;#61; unique([1; double(bp(:)); N]);   % Include both endpoints&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    bp &amp;#61; bp(bp &amp;gt;&amp;#61; 1 &amp;amp; bp &amp;lt;&amp;#61;N);   % Should error in the future&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    lbp &amp;#61; length(bp);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    % Build regressor with linear pieces &amp;#43; DC&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;#61; zeros(N,lbp,class(x));&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a(1:N,1) &amp;#61; (1:N)./N;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for k &amp;#61; 2:(lbp-1)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        M &amp;#61; N - bp(k);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        a((bp(k)&amp;#43;1):end,k) &amp;#61; (1:M)./M;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    end&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a(1:N,end) &amp;#61; 1;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    y &amp;#61; x - a*(a\\x);   % Remove best fit&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["min f=||ax+bv³||2，迭代求a,b参数，x,v是自变量", ["如题，x,v是其它函数g(x,v)的值，g(x,v)已知且只能求出数值解，要用什么优化办法得到a,b参数，使得目标函数最小啊，就主要不知道x,v数值很多的情况下怎么优化。我看的优化方法都是a,b已知，求x,v的，比如f=3x+2v³这种，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第二生产总值的估计系数为负&amp;#xff0c;可能表明第二产业和港口吞吐量之间存在负相关关系。但是&amp;#xff0c;这并不能说明第二产业对港口吞吐量有负向影响。这只是一个单独的统计结论&amp;#xff0c;需要进一步考虑其他因素和数据&amp;#xff0c;并进行完整的统计分析和经济解释才能得出结论。另外&amp;#xff0c;由于第二产业比重却是显著正向的&amp;#xff0c;这可能表明在模型中缺少一些重要的影响因素或者数据有偏差&amp;#xff0c;导致结果的不一致。建议进行进一步的数据清理。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["第二生产总值的估计系数为负，但是第二生产总值比重却是正的，我这个固定效应回归模型是正常的吗？", ["港口吞吐量作为因变量，stata，面板数据是从1999-2021的不平稳面板数据。回归后很多估计指标不显著。然后通过控制数据选取范围，把估计系数的p值降到只有两个不显著，但是有一个第二产业的符号是负的 它这个指标的p值是0.042，这是不是说明，第二产业对港口吞吐量的作用是负向的？是不是不合理？因为跟通常的说法不一样。然而第二产业比重却是显著正向的。我是哪里错了？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;豪斯曼检验是用来检验随机效应模型是否适用于数据的一种方法&amp;#xff0c;它的基本原理是在随机效应和固定效应两种假设下&amp;#xff0c;比较不同变量的F值&amp;#xff0c;来确定哪种假设更适合数据。&lt;/p&gt;\n&lt;p&gt;针对你的情况&amp;#xff0c;有两个被解释变量&amp;#xff0c;你可以将其分别作为因变量&amp;#xff0c;进行两次豪斯曼检验。在每次检验中&amp;#xff0c;自变量C和四个控制变量保持不变&amp;#xff0c;分别计算出A和B的F值&amp;#xff0c;并比较其显著性水平&amp;#xff0c;以确定哪种假设更适用于对应的因变量。&lt;/p&gt;\n&lt;p&gt;如果A适合固定效应而B适合随机效应&amp;#xff0c;这意味着你需要使用混合效应模型来进行多元线性回归&amp;#xff0c;其中A作为固定效应&amp;#xff0c;B作为随机效应。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;多元线性回归分析的结果需要在豪斯曼检验的基础上综合考虑&amp;#xff0c;不能仅仅依据单个因变量的结果来确定模型的类型。另外&amp;#xff0c;豪斯曼检验只是一种基于统计方法的判断&amp;#xff0c;对于复杂数据情况下的模型选择&amp;#xff0c;还需要结合实际问题进行综合分析。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["有两个因变量应该怎么进行豪斯曼检验", ["如果有两个因变量A和B，一个自变量C，四个控制变量，应该如何做豪斯曼检验？", "我现在阶段是将两个被解释变量拆开，解释变量和控制变量都不变，分别进行检验,但结果显示一个p小于0.05，适合用固定效应，另一个大于它，适合随机效应", "但是我需要进行多元线性回归，这个样子的话就不知道应该怎么进行了", "请问有人知道如何处理吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def line(a:tuple, b:tuple)-&amp;gt;list&lt;span class=\"hljs-comment\"&gt;[tuple]&lt;/span&gt;:\n    if a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;:return &lt;span class=\"hljs-comment\"&gt;[(a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;,a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;i) for i in range(b&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;1)]&lt;/span&gt;\n    if a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;:return &lt;span class=\"hljs-comment\"&gt;[(a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;i,a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;) for i in range(b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;1)]&lt;/span&gt;\n    if a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;gt;b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;:a,b&amp;#61;b,a\n    return &lt;span class=\"hljs-comment\"&gt;[(a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;i, int(a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;i*(b&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;)/(b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;))) for i in range(b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;1)]&lt;/span&gt;\n\na &amp;#61; (10,10)\nb &amp;#61; (40,10)\nc &amp;#61; (20,30)\n\nac&amp;#61;line(a,c)\nbc&amp;#61;line(b,c)\nab&amp;#61;line(a,b)\n\nfor x, y in zip(ac&amp;#43;bc&lt;span class=\"hljs-comment\"&gt;[1:]&lt;/span&gt;, ab):\n    for i in range(x&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;-y&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;1):\n        print((y&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;,y&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;i))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划简介", "Question": ["关于#python#的问题：要求通过python编程，遍历三角区域内所有的整数点坐标", ["python遍历一个区域内的全部整数点并打印出来", "\n", "看图", "\n", "已知条件：在直角坐标系内有一个三角形，并直到三角形三个点的坐标位置。", "要求通过python编程，遍历三角区域内所有的整数点坐标，并打印出来。", "简洁快速，可以遍历方向都可以只要能遍历出来并打印即可"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这两个单词大小写错了&amp;#xff0c;跟你定义的不一致&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["数据结构线性表代码出现错误", ["出现了错误不知道怎么改", "Use of undeclared identifier ‘MaxSize’", "Unknown type name‘S q li s t’"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误通常是由于在模型训练过程中发生了数据类型或形状不匹配的错误导致的。要解决这个问题&amp;#xff0c;需要检查代码中的数据处理部分&amp;#xff0c;以确保输入和输出的形状和数据类型与模型的期望相匹配。&lt;br /&gt;以下是一些可能导致此错误的常见原因和解决方法&amp;#xff1a;&lt;br /&gt;&amp;#xff08;1&amp;#xff09;输入数据的形状或数据类型与模型期望的不匹配。检查输入数据的形状和数据类型&amp;#xff0c;并确保它们与模型期望的相同。&lt;br /&gt;&amp;#xff08;2&amp;#xff09;数据预处理或增强的过程中发生错误&amp;#xff0c;导致生成的数据形状或数据类型与模型期望的不匹配。检查数据预处理和增强代码&amp;#xff0c;并确保生成的数据与模型期望的形状和数据类型相同。&lt;br /&gt;&amp;#xff08;3&amp;#xff09;使用了不支持的数据类型或操作。检查代码中使用的所有数据类型和操作&amp;#xff0c;并确保它们都是支持的。&lt;/p&gt;", "Konwledge_Point": "线性规划简介", "Question": ["（python）如何解决 ValueError: in user code:这个问题，能解决一下吗？", ["\nmodel = Sequential()\n", "#conv layer", "\nmodel.", "add", "(Conv2D(6,(5,5),activation = ", "'relu'", "))\n", "#Maxpooling layer", "\nmodel.", "add", "(MaxPooling2D(pool_size=(2, 2), ", "strides", "=2, ", "padding", "=", "'same'", "))\n", "#conv layer", "\nmodel.", "add", "(Conv2D(16, (5, 5), ", "activation", "=", "'relu'", "))\n", "#Maxpooling layer", "\nmodel.", "add", "(MaxPooling2D(pool_size=(2, 2), ", "strides", "=2, ", "padding", "=", "'same'", "))\n", "#fully connected layer", "\nmodel.", "add", "(Flatten())  # 进行全连接之前要将多维变量变成二维变量，因为全连接层的输入只能是二维变量即平化层\nmodel.", "add", "(Dense(120, ", "activation", "=", "'relu'", "))  # 增加一个激活函数提高模型参数的非线性能力\nmodel.", "add", "(Dropout(0.5))  # 表示随机去掉50%的神经元连接\n", "# Flatten()  因为上一层的输出就是一个二维变量，所以这里不需要进行拉直操作了", "\nmodel.", "add", "(Dense(84, ", "activation", "=", "'relu'", "))  # 增加一个激活函数提高模型参数的非线性能力\nmodel.", "add", "(Dropout(0.5))  # 表示随机去掉50%的神经元连接\n", "#output layer ", "\nmodel.", "add", "(Dense(7, ", "activation", "=", "'softmax'", "))  # 增加这个激活函数便于多分类\n\n", "from", " tensorflow.keras.optimizers import SGD\n\nsgd = SGD(", "lr", "=0.01, ", "momentum", "=0.9, ", "nesterov", "=", "True", ")\nmodel.compile(", "loss", "=", "'categorical_crossentropy'", ",\n              ", "optimizer", "=sgd,\n              metrics=[", "'accuracy'", "])\n", "# #compile", "\n", "# model.compile(optimizer = 'adam',", "\n", "#              loss='sparse_categorical_crossentropy',", "\n", "#              metrics=['accuracy'])", "\n", "#fit", "\nmodel.fit(x_train, y_train,", "batch_size", "=20,epochs=20,validation_data=(x_test,y_test))\n"]], "Tag": "算法设计"}
