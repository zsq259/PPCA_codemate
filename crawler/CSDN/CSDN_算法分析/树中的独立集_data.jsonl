{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are meant to distinguish between subcommands first, and then call &lt;code&gt;Parse&lt;/code&gt; on the right &lt;code&gt;FlagSet&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f1 := flag.NewFlagSet(\"f1\", flag.ContinueOnError)\nsilent := f1.Bool(\"silent\", false, \"\")\nf2 := flag.NewFlagSet(\"f2\", flag.ContinueOnError)\nloud := f2.Bool(\"loud\", false, \"\")\n\nswitch os.Args[1] {\n  case \"apply\":\n    if err := f1.Parse(os.Args[2:]); err == nil {\n      fmt.Println(\"apply\", *silent)\n    }\n  case \"reset\":\n    if err := f2.Parse(os.Args[2:]); err == nil {\n      fmt.Println(\"reset\", *loud)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://play.golang.org/p/eaEEx_EReX\"&gt;http://play.golang.org/p/eaEEx_EReX&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在GoLang中定义独立的标志集", ["\n\n", "The Go documentation (", "http://golang.org/pkg/flag/", ") says:", "\n\n", "\n  ", "The FlagSet type allows one to define independent sets of flags, such as to implement subcommands in a command-line interface.", "\n", "\n\n", "I need this functionality but I can't figure out how to persuade the flag pkg to do it. When I define two FlagSets, parsing one of them will give me errors and warnings if the commandline has flags that are meant for the second one. Example:", "\n\n", "f1 := flag.NewFlagSet(\"f1\", flag.ContinueOnError)\napply := f1.Bool(\"apply\", false, \"\")\nsilent := f1.Bool(\"silent\", false, \"\")\nif err := f1.Parse(os.Args[1:]); err == nil {\n    fmt.Println(*apply, *silent)\n}\nf2 := flag.NewFlagSet(\"f2\", flag.ContinueOnError)\nreset := f2.Bool(\"reset\", false, \"\")\nif err := f2.Parse(os.Args[1:]); err == nil {\n    fmt.Println(*reset)\n}\n", "\n\n", "I get all sorts of warnings if I try to do ", "cmd -apply", " OR ", "cmd -reset", ". I want to keep these FlagSets separate because I want to only have ", "-silent", " work for ", "-apply", ".", "\n\n", "What am I missing?", "\n    "]], "Tag": "算法设计"}
{"Answer": "如果使用的是java8，可以使用lambda表达式哦", "Konwledge_Point": "树中的独立集", "Question": ["Java语言怎么在函数里定义独立的线程函数，或者不用函数定义线程呢，有没有例子参考", ["Java语言怎么在函数里定义独立的线程函数，或者不用函数定义线程呢，有没有例子参考"]], "Tag": "算法设计"}
{"Answer": "参考：http://zhidao.baidu.com/link?url=vfGzj4fDQL0ZDAvHwnD37WZrMOV6kmiwiFsCrv1gP2omsdDUsjNUb1GuSM4O6kxNL9pGYrwzVfBCWXWQL4wR5_", "Konwledge_Point": "树中的独立集", "Question": ["C++求最大加权独立集。只要思路就好了，代码我自己写", ["假设有A，它提供一个干扰半径，B为一个集合，集合中每一个元素提供位置坐标和一个权重。如果两个元素半径小于干扰半径，则不能放入一个集合中，如果两位置距离大于等于干扰半径，则可以。求出最大权重的集合，集合的权重为集合中元素的权重之和。", "\n\n", "我已经想了好久好久了QAQ 但是写出来的一个办法会导致内存泄漏。", "\n拜托大神给一个思路就好了，代码我自己写。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;if(max(2, 3) !&amp;#61; 3)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    …&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["c语言为什么“函数调用必须在一条独立的语句中完成”是错的，可以举个简单例子说明一下嘛", ["为什么c语言中“函数调用必须在一条独立的语句中完成”是错的，可以举个简单例子说明一下吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;多写写题&amp;#xff0c;自己动手慢慢写点小项目&amp;#xff0c;在实战中成长是最快的&lt;br /&gt;高人指点、秘籍宝典&lt;br /&gt;其实想想&amp;#xff0c;任何一项技术或者技能&amp;#xff0c;成为高手的学习过程和学习资源都差不多&amp;#xff0c;编程语言也是&amp;#xff1a;&lt;br /&gt;1.如果把学技术比作蚂蚁吃大象&amp;#xff0c;大处着眼可以让你站的远一点观察&amp;#xff0c;消除刚开始学习时候的恐惧感&amp;#xff0c;大象包括头、四肢、身体、尾巴这几个部分&amp;#xff0c;目前主流的编程语言也包括运行环境、开发工具、基本语法、开源框架这几样东西。&lt;br /&gt;2.蚂蚁吃大象很难&amp;#xff0c;但是吃一粒大米相对简单&amp;#xff0c;所以只需要把大象拆解成N个米粒大小的部小任务&amp;#xff0c;吃大象的任务就只是时间问题&amp;#xff0c;从小处着手就是从哪个部位开始吃&amp;#xff0c;可以解决你学习新技术无从下手的问题。&lt;br /&gt;一个编程语言基本的学习过程就是&amp;#xff1a;1&amp;#xff09;环境搭建和配置、2&amp;#xff09;HelloWorld、3&amp;#xff09;开发工具安装和使用&amp;#xff0c;4&amp;#xff09;代码编写和调试&amp;#xff0c;5&amp;#xff09;开源框架&amp;#xff0c;6&amp;#xff09;项目实践。这里面每个过程都可以分解成更小的目标任务&amp;#xff0c;学的时候如果觉得太难就继续拆解。把整个学习任务拆解成一天之内可以完成的小目标。&lt;br /&gt;3.任务拆解以后给自己制定详细计划&amp;#xff0c;一次一个目标&amp;#xff0c;严格执行&amp;#xff0c;密集性练习&amp;#xff0c;密集练习是加深记忆的最好方法。&lt;br /&gt;4.最好找个老师&amp;#xff0c;一句指点可以让你少走很多弯路&amp;#xff0c;或者买本书跟着课本学。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["话说自学独立编程能力，", ["话说大师们，自学，能独立编程了不😂，看完代码视频就忘，咋个操作的，独立编程"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;#include &amp;#34;STC12C5A60S2.h&amp;#34;//改你的单片机头文件&lt;br /&gt;#include &amp;#34;intrins.h&amp;#34;&lt;/p&gt;\n&lt;p&gt;typedef unsigned char uchar;&lt;br /&gt;typedef unsigned int uint;&lt;/p&gt;\n&lt;p&gt;sbit key_a&amp;#61;P3^1;//定义按键&amp;#xff08;从左向右&amp;#xff09;&lt;br /&gt;sbit key_b&amp;#61;P3^0;&lt;/p&gt;\n&lt;p&gt;#define LED P2//宏定义&amp;#xff0c;把整个P2口定义为LED&lt;/p&gt;\n&lt;p&gt;void delay(uchar i)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    while(i--);&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;\n&lt;p&gt;void main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    LED &amp;#61; 0xfe;//如果你的LED灯位高电平发亮&amp;#xff0c;值就是0x01&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    while(1)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(key_a!&amp;#61;1)//判断&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            delay(500);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            if(key_a!&amp;#61;1)//再次判断&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            {&lt;!-- --&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;            delay&lt;span class=\"hljs-comment\"&gt;(5000)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n            LED &amp;#61; _crol_&lt;span class=\"hljs-comment\"&gt;(LED,1)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//LED左移1位&amp;#xff0c;根据LED和管脚匹配&amp;#xff0c;灯右移&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(!key_a)&lt;/span&gt;;\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_a!&amp;#61;1 || key_b!&amp;#61;1)&lt;/span&gt;\n    {\n        delay&lt;span class=\"hljs-comment\"&gt;(500)&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_a!&amp;#61;1 || key_b!&amp;#61;1)&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_a!&amp;#61;1)&lt;/span&gt;\n            {\n                delay&lt;span class=\"hljs-comment\"&gt;(5000)&lt;/span&gt;;\n                LED &amp;#61; _crol_&lt;span class=\"hljs-comment\"&gt;(LED,1)&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(!key_a)&lt;/span&gt;;\n            }\n            \n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_b!&amp;#61;1)&lt;/span&gt;\n            {\n                delay&lt;span class=\"hljs-comment\"&gt;(5000)&lt;/span&gt;;\n                LED &amp;#61; _cror_&lt;span class=\"hljs-comment\"&gt;(LED,1)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//灯左移&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(!key_b)&lt;/span&gt;;\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C51单片机编程独立按键", ["问题遇到的现象和发生背景", "\n", "独立按键控制单颗LED灯位移", "烧录后只有D1LED灯亮；按按键没有反应", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include <REGX52.H>", "\n    unsigned char LEDNum;\nvoid Delay(int t)\n{\n    ", "while", "(t--)\n    {\n                unsigned char i, j;\n\n                i = 12;\n                j = 169;\n                ", "do", "\n                {\n                    ", "while", " (--j);\n                } ", "while", " (--i);\n  }\n}\nvoid mian()\n{\n    ", "P2", "=~0x01;\n    ", "while", " (1)\n    {\n            ", "if", "(", "P3_1", "==0)\n            {\n                Delay(20);\n                ", "while", "(", "P3_1", "==0);\n                Delay(20);\n                \n                LEDNum++;\n                ", "if", "(LEDNum>=8)\n                    ", "LEDNum", "=0;\n                ", "P2", "=~(0x01<<LEDNum);\n            }\n                \n                ", "if", "(", "P3_0", "==0)\n            {\n                Delay(20);\n                ", "while", "(", "P3_0", "==0);\n                Delay(20);\n                \n                ", "if", "(", "LEDNum", "==00)\n                    ", "LEDNum", "=7;\n                ", "else", "\n                    LEDNum--;\n                ", "P2", "=~(0x01<<LEDNum);\n            }\n        }\n}\n\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/96698899907616.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;这个里面可以设置显示工具栏&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["idea顶部工具栏独立成窗口", ["问题描述：IDEA打开项目会同时出现两个窗口，一个窗口没有了工具栏，一个窗口是空的，如下图一，二。", "造成原因：在一次插件更新后，重启IDEA，再次打开出现了现在情况。", "尝试的操作：关闭，重启IDEA，重启电脑都没用。", "请问大家有没有遇见过相似的问题，或者有好的解决办法呢？", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;“Devil组”引证GPT后的撰写&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;错误。数据独立性是指数据的逻辑独立性和物理独立性&amp;#xff0c;这两者是相互依存的&amp;#xff0c;而不是相互独立的。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;错误。第六个不满足1NF要求&amp;#xff0c;因为部门成员和部门总经理这两个属性是多值属性&amp;#xff0c;应该将其拆分成单值属性&amp;#xff0c;例如将部门成员拆分成员工编号和成员工姓名两个属性&amp;#xff0c;将部门总经理拆分成总经理编号和总经理姓名两个属性。这样才能满足1NF的要求&amp;#xff0c;即属性都是原子性的。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["数据独立性是指应用程序数据的逻辑和物理独立性是相互独立的", [" 判断题", "5.数据独立性是指应用程序数据的逻辑和物理独立性是相互独立的    (     )", "6.部门(部门号，部门名，部门成员，部门总经理)满足1NF要求。  (", "第6个为什么不是1nf，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;defineProps必须要放在setup里面才可以&amp;#xff0c;我们可以换个思路&amp;#xff0c;只将参数提出在一个独立文件中&amp;#xff0c;解决方法如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; props.js\n&lt;span class=\"hljs-keyword\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; {\n  apiData: {\n    type: &lt;span class=\"hljs-built_in\"&gt;Array&lt;/span&gt;,\n    default: &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt; {\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; [];\n    },\n  },\n  name: {\n    type: &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;,\n  },\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;//index.vue\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;User&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;index.vue页面&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-attr\"&gt;click&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleTest&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;点击获取props&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;setup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; propsData &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;./props&amp;#34;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; props &amp;#61; &lt;span class=\"hljs-title function_\"&gt;defineProps&lt;/span&gt;(propsData);\n&lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(props);\n&lt;span class=\"hljs-comment\"&gt;//按钮的点击事件&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;handleTest&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) &amp;#61;&amp;gt; {\n  &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(props.&lt;span class=\"hljs-property\"&gt;apiData&lt;/span&gt;);\n};\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/771518370456180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vue3组合api开发方式，想将props 内容独立放到一个js文件中，但是在import后获取不到", ["vue3组合api开发方式，想将props 内容独立放到一个js文件中，但是在import后获取不到", "\n", "问题相关代码", "\n", "//props.js\n", "import", " { defineProps } ", "from", " ", "'vue'", "\n\nconst props = defineProps({\n    apiData: {\n        type: ", "Array", ",\n        default: ", "()", " =>", " {\n            ", "return", " []\n        }\n    }\n})\n\n", "export", " ", "default", " props\n", "\n", "//index.vue\n", "<", "template", ">", "</", "template", ">", "\n", "<", "script", " ", "setup", ">", "\n", "import", " props ", "from", " ", "'./props'", "\n\n", "//按钮的点击事件", "\n", "const", " ", "handleTest", " = (", ")=> {\n  ", "console", ".", "log", "(props.", "apiData", ") ", "//这里会报错：Cannot read properties of null (reading 'apiData')", "\n}\n\n", "</", "script", ">", "\n", "\n", "我想要达到的结果", "\n", "将props, emits 可以独立放到一个js文件中，在xx.vue内import进来，不然xx.vue内的代码会非常多"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;reg52.h&amp;gt;&lt;/span&gt;\n\nsbit btn_reset &amp;#61; P1^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 复位按键\nsbit btn_display &amp;#61; P1^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示按键\nsbit btn_increment &amp;#61; P1^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 数字增加按键\nsbit buzzer &amp;#61; P2^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 蜂鸣器\n\nunsigned char seg_code[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;] &amp;#61; {\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x3F,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x06,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x5B,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x4F,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x66,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x6D,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x7D,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x07,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x7F,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x6F   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;\n};\n\nvoid delay(unsigned int time) {\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(time--);\n}\n\nvoid display(unsigned char digit) {\n    P0 &amp;#61; seg_code[digit];\n    delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n    P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n}\n\nvoid main() {\n    unsigned char num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (btn_reset &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 复位按键按下\n            display(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示学号后三位\n            display(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (btn_display &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示按键按下\n            display(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示 &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (btn_increment &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 数字增加按键按下\n            num&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 如果数字到达 &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#xff0c;则清零\n                num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            }\n            display(num);\n            buzzer &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 蜂鸣器响起\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            buzzer &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            delay(&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;用 P0 口控制数码管的显示&amp;#xff0c;使用 P1 口控制按键的输入&amp;#xff0c;使用 P2 口控制蜂鸣器的输出。&lt;/p&gt;\n&lt;p&gt;在主函数中&amp;#xff0c;使用一个无限循环来不断检测按键的状态。如果复位按键按下&amp;#xff0c;则显示学号后三位&amp;#xff1b;如果显示按键按下&amp;#xff0c;则显示 1 3 5 7&amp;#xff1b;如果数字增加按键按下&amp;#xff0c;则数字加一并显示&amp;#xff0c;同时蜂鸣器响起&amp;#xff0c;如果数字到达 10&amp;#xff0c;则清零。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["动态数码管与独立按键", ["1.按下复位键，数码管从左到右显示自己的学号后三位", "2.按下一个独立按键，数码管间隔一位显示1357。", "3.按下一个独立按键，数码管显示最右边数字加一，且蜂鸣器响起。若该到9则清零。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You probably want to use some CSS&lt;/p&gt;\n\n&lt;p&gt;Rewrite&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;center align=\"right\"&amp;gt;&amp;lt;img src='images/skins/&amp;lt;?php echo\n $data['SavSkin'] ?&amp;gt;.png' width=\"580\" height\"110\"&amp;gt; &amp;lt;/center&amp;gt;&amp;lt;/p&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;as&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;div style=\"float:right;\"&amp;gt;&amp;lt;img src=\"images/skins/&amp;lt;?php echo $data['SavSkin'] ?&amp;gt;.png\" width=\"580\" height\"110\" /&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["页面中的两个独立部分", ["\n\n", "I want to make two different portions for an image to be shown on the right side and some code on the left.", "\n\n", "Here is the code that you'll understand seeing", "\n\n", "<h2><?php echo $data['user'] ?> - Profile Page</h2>\n<center><p id =\"greet\" align=\"left\">Next Generation Gaming - <?php echo $title ?></p></center>\n<p><center align=\"right\"><img src='images/skins/<?php echo $data['SavSkin'] ?>.png' width=\"580\" height\"110\"> </center></p>\n\n<p id =\"greet\"><?php echo \"Banned : \".$pban ?></p>\n<p id =\"greet\">Money : <?php echo $data['money'] ?></p>\n<p id =\"greet\">Banked : <?php echo $data['Bank'] ?></p>\n<p id =\"greet\">Kills : <?php echo $data['kills'] ?></p>\n\n<p class='text-alert' id =\"greet\">Kill Death Ratio : <?php\n$kd = $data['kills'] / $data['deaths']; echo round($kd, 2); ?>\n</p>\n\n<p id =\"greet\">Admin Kills : <?php echo $data['AdminKills'] ?></p>\n<p id =\"greet\">Cookies : <?php echo $data['cookies'] ?></p>\n<p id =\"greet\">Cakes : <?php echo $data['cakes'] ?></p>\n<p id =\"greet\">Biscuits : <?php echo $data['biscuits'] ?></p>\n<p id =\"greet\">Icecreams : <?php echo $data['icecreams'] ?></p>\n<p id =\"greet\">Race Won : <?php echo $data['RaceWon'] ?></p>\n<p id =\"greet\">Quiz Won : <?php echo $data['ReactionTestWon'] ?></p>\n<p id =\"greet\">Command Used : <?php echo $data['TotalCmdsUsed'] ?></p>\n<p id =\"greet\">Total Warnings : <?php echo $data['TotalWarnings'] ?></p>\n<p id =\"greet\">Total Logins : <?php echo $data['TotalLogins'] ?></p>\n<p id =\"greet\">Registered Date : <?php echo $data['RegisteredDate'] ?></p>\n<p id =\"greet\">Last Login : <?php echo $data['LastOnlineDate'] ?></p>\n", "\n\n", "On the second like you could see that i have added an image", "\n\n", "<p><center align=\"right\"><img src='images/skins/<?php echo $data['SavSkin'] ?>.png' width=\"580\" height\"110\"> </center></p>\n", "\n\n", "What i was trying to do is make that image to be shown on the right side of the page and the rest of them to the left.\nThrough what way could it be possible?", "\n    "]], "Tag": "算法设计"}
{"Answer": "独立存储是只能将数据存储到应用的数据区，不能指定位置的，这是系统的限制。", "Konwledge_Point": "树中的独立集", "Question": ["Silverlight中通过独立存储，怎么将文件保存到指定路径下？", ["保存按钮的代码如下：", "\n\n", " private void btnSave_Click(object sender, RoutedEventArgs e)\n        {\n            string fileContent = this.txtContents.Text;\n            using (var storage = IsolatedStorageFile.GetUserStoreForApplication())\n            {\n                string filePath = System.IO.Path.Combine(@\"C:\\Users\\v-yanjxu\\Documents\\Visual Studio 2013\\Projects\", this.txtFileName.Text);\n                IsolatedStorageFileStream stream = storage.OpenFile(filePath, FileMode.OpenOrCreate);\n                StreamWriter sw = new StreamWriter(stream);\n                sw.Write(fileContent);\n                sw.Close();\n                stream.Close();\n            }\n            GetStorageData();\n\n        } \n", "\n\n", "原本filePath=“File1.txt”；,这样保存是没有问题的，可是我要是把filePath改成filePath=System.IO.Path.Combine(@\"C:\\Users\\v-yanjxu\\Documents\\Visual Studio 2013\\Projects\", this.txtFileName.Text);时，就会报“Operation not permitted on IsolatedStorageFileStream.”的异常。难道IsolatedStorageFile保存文件时不能指定路径么？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In broad terms, use abstraction. Provide interfaces for persistence, and write two implementations for that, one based on the datastore, and one based on local files. Then, write a separate main/init module for each platform, which instantiates the appropriate persistence interface, and passes it to your main application to use.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在Go中合并独立的网络应用和GAME", ["\n\n", "I'm working on a very simple web app, written in Go language.\nI have a standalone version and now port it to GAE. It seems like there is very small changes, mainly concerning datastore API (in the standalone version I need just files).\nI also need to include appengine packages and use init() instead of main().", "\n\n", "Is there any simple way to merge both versions? As there is no preprocessor in Go, it seems like I must write a GAE-compatible API for the standalone version and use this mock module for standalone build and use real API for GAE version. But it sounds like an overkill to me.", "\n\n", "Another problem is that GAE might be using older Go version (e.g. now recent Go release uses new template package, but GAE uses older one, and they are incompatible). So, is there any change to handle such differences at build time or on runtime?", "\n\n", "Thanks,\nSerge", "\n\n", "UPD:", " Now GAE uses the same Go version (r60), as the stable standalone compiler, so the abstraction level is really simple now.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;首先你要明白&amp;#xff0c;你所提到的问题存在两个概念&amp;#xff0c;一个是事件一个是概率。&lt;/li&gt;&lt;li&gt;独立针对概率&amp;#xff0c;只要满足于独立公式也就是&lt;code class=\"language-javascript\"&gt;两个事件概率相乘就得到两个事件同时发生的概率&lt;/code&gt;就独立&amp;#xff0c;而交集针对事件&amp;#xff0c;只要&lt;code class=\"language-javascript\"&gt;两个事件可以同时发生&lt;/code&gt;那就是有交集。&lt;/li&gt;&lt;li&gt;两者不存在什么直接关联&amp;#xff0c;只能说独立事件之间有可能有交集有可能没有&amp;#xff0c;那不就是讲废话吗。&lt;/li&gt;&lt;li&gt;举个例子只要其中一个为不可能事件那就不可能有交集了不是吗&amp;#xff0c;太阳从西边出来是一个事件&amp;#xff0c;且概率为0&amp;#xff0c;不管是广东人穿短袖也好还是穿棉裤也好都跟它是独立事件&amp;#xff0c;但是它穿啥和太阳西边出来都不可能同时发生对吗。&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立事件之间有交集吗？", ["从独立事件概率公式来看，应该是有的，因为联合概率为两个事件乘积。设两事件交为空，空的概率不-定为空，对吗？如，事件1为长沙人穿棉衣，事件2为广东人穿短袖，两事件独立，交集为空，联合概率为两者概率乘积，通常不为0。请指导。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这个涉及到外部中断的问题&amp;#xff0c;题主学到外部中断部分就可以自己写出来了。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["一个独立按键控制流水灯开关", ["如何用独立按键(k1)来控制流水灯", "按一下打开，在按一下关闭。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I do not know of any software to do this. It would probably not be hard to script this using the standard command line svn client. I.e. have a batch/shell script that runs regularly and checks in everything that has changed.&lt;/p&gt;\n\n&lt;p&gt;That said, I would &lt;em&gt;very strongly&lt;/em&gt; advise against doing this!&lt;/p&gt;\n\n&lt;p&gt;The normal working model of source control is that everyone has a local copy to work in, then checks in their changes to a central repository.&lt;/p&gt;\n\n&lt;p&gt;The explicit manual checkin makes sure you only check in stuff that works (generally) and lets you give valuable checkin comments.&lt;/p&gt;\n\n&lt;p&gt;Then the server can be updated with a known good version from the source control repository.&lt;/p&gt;\n\n&lt;p&gt;It sounds like you are working on a production system. I'd strongly advise considering using a dev environment(s) and the above approach.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["好的独立svn客户端", ["\n\n", "I'm currently working with partner on a PHP project.", "\n\n", "We both edit directly to a local server (all files are stored on the server, which is also running a WAMP stack).\nI'm looking for an SVN client that will monitor and save all changes to the htdocs folder, and will update a remote SVN repository, through the web.", "\n\n", "It would be a great bonus if I could manipulate the SVN client through a web-interface.", "\n\n", "For example, say I save ", "file1.php", " to the server. It would update ", "file1.php", " on the svn website.\nIf I would suddenly discover that my latest revisions to the file are bad, I could head over to the server (or use some web interface from my computer), and replace ", "file1.php", " with an older revision.", "\n\n", "I don't want to just install an SVN server on our local machine because I would always like to have a copy saved remotely with the latest changes.", "\n\n", "Any recommendations?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的python版本是什么&amp;#xff0c;我试了一下&amp;#xff0c;是不报错的我的版本是3.5。应该和你的python版本有关系&amp;#xff0c;有可能openpyxl在最新的版本下有bug。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["excel里面有很多个工作表，怎么用python,给每个表独立出单独的新表，并表名为文件名", ["excel里面有很多个工作表，怎么用python,给每个表独立出单独的新表，并表名为文件名"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;matplotlib支持交互式绘图&amp;#xff0c;这是我们最常使用的方式。此外&amp;#xff0c;matplotlib也可以方便地嵌入到多个GUI库中&amp;#xff0c;比如PyQt和wxPython等。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas\nfrom PyQt5 import QtCore, QtWidgets,QtGui\nimport sys\n\nmatplotlib.use(&amp;#39;Qt5Agg&amp;#39;)\n\n\nclass My_Main_window(QtWidgets.QDialog):\n    def __init__(self,parent&amp;#61;None):\n        super(My_Main_window,self).__init__(parent)\n        \n        self.figure &amp;#61; plt.figure()\n        self.canvas &amp;#61; FigureCanvas(self.figure)\n        self.button_plot &amp;#61; QtWidgets.QPushButton(&amp;#34;绘制&amp;#34;)\n\n        self.button_plot.clicked.connect(self.plot_)\n        \n        layout &amp;#61; QtWidgets.QVBoxLayout()\n        layout.addWidget(self.canvas)\n        layout.addWidget(self.button_plot)\n        self.setLayout(layout)\n\n    def plot_(self):\n        x &amp;#61; np.linspace(0, 2*np.pi, 200)\n        y &amp;#61; np.sin(x)\n        ax &amp;#61; self.figure.add_axes([0.1,0.1,0.8,0.8])\n        ax.plot(x, y)\n        self.canvas.draw()\n\nif __name__ &amp;#61;&amp;#61; &amp;#39;__main__&amp;#39;:\n    app &amp;#61; QtWidgets.QApplication(sys.argv)\n    main_window &amp;#61; My_Main_window()\n    main_window.show()\n    app.exec()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Matplotlib绘图窗口", ["用matplotlib画图，会单独弹出绘图窗口，有没有办法让图表在主窗口显示而不弹出独立窗口", "\n\n", "窗口的搭建用的是PyQt5，想把matplotlib的绘图结果直接在PyQt5搭建的图形界面里显示"]], "Tag": "算法设计"}
{"Answer": "不好意思 忽略了参数 :cry: \r\n\r\nfunction getDepInfoJson(depId){  \r\n    var ret;  \r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: urlHead +\"getDepInfo.act\",\r\n        data: {  \r\n            \"departmentId\":depId\r\n        },\r\n        success: function (data, status){  \r\n            if(\"success\"==status){  \r\n                ret = data;  \r\n                //alert(\"callBack data:\" + data +\"  ret:\"+ret);  \r\n            }else{  \r\n                $.messager.alert('系统信息',\"访部服务器发生错误！\",'warning');  \r\n            } \r\n        },\r\n        async: false        //改为同步请求\r\n    });\r\n    return ret;  \r\n}", "Konwledge_Point": "树中的独立集", "Question": ["如何将jqery ajax请求代码独立出来？", [" jsonResult = getDepInfoJson(Department.id);  //此处调用独立的 jquery post 请求", "\n\n", "function getDepInfoJson(depId){\n    var ret;\n    $.post(urlHead + 'getDepInfo.action', {\n        \"departmentId\":depId}, function(data, status){\n            if(\"success\"==status){\n                ret = data;\n                //alert(\"callBack data:\" + data +\"  ret:\"+ret);\n            }else{\n                $.messager.alert('系统信息',\"访部服务器发生错误！\",'warning');\n            }\n        }\n    );\n    alert(\"继续ret:\"+ ret);\n    return ret;\n}", "\n\n", " 为什么return前必须加alert()，才能返回值，且alert()时，输出为 “ret:undefined”?"]], "Tag": "算法设计"}
{"Answer": "外网独立ip是需要向isp租用的，哪里是什么架设虚拟机、vpn就有的。内网ip这个可以随便分配，在你的虚拟机的网卡上随便输入就可以了。", "Konwledge_Point": "树中的独立集", "Question": ["请教下怎么让VM虚拟机有独立的IP", ["请教下怎么让VM虚拟机有独立的IP，有人说VPN，但是不懂，请大神赐教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;接口只是一个规范&amp;#xff0c;不存在你说的循环应用问题。接口规定他的实现类必须实现接口中所有的抽象方法。如果有同名的方法只实现一个。&lt;/p&gt;\n\n&lt;p&gt;调用就是:&lt;/p&gt;\n\n&lt;p&gt;定义接口&amp;#xff0c;而创建他的任意一个实现类都可以。&lt;/p&gt;\n\n&lt;p&gt;A a &amp;#61; new B();&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C++ 接口定义与独立库实现的引用（循环引用）", ["现在假如有库A中主要是实现一系列业务处理，但是由于业务场景需要，部分业务会根据不同客户有不同的实现（即多态）。于是在A中定义了接口(多个)，项目在实施时根据不同的客户再新建库B（或更多的C、D。。。）中实现A中的接口。请问我在A中怎样调用B库的实现代码？", "\n\n", "相当于B继承A并实现接口，A又要引用B来调用具体的实现。烦请大侠们赐教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;手打了示意&amp;#xff0c;看一下。手打不易如有收获请采纳。&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-type\"&gt;bit&lt;/span&gt; g_flagkey1&amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;bit&lt;/span&gt; g_flagkey2&amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)\n{\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n  {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (key1 &amp;#61;&amp;#61; DOWN)\n    {\n      g_flagkey1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n      g_flagkey1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n    }\n\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (key2 &amp;#61;&amp;#61; DOWN)\n    {\n      g_flagkey2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n      g_flagkey2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((g_flagkey1 &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;) &amp;amp;&amp;amp; (g_flagkey2 !&amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;))\n    {\n      //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (g_flagkey2 &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;)\n    {\n      //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立按键控制程序之间的相互切换", ["如何实现按下按键1一直执行第一个程序，按下按键2执行第二个程序，重点是如何在已经按下按键一且执行时，检测到按下按键二，去执行第二个程序？也就是在程序执行过程中按下按键了，如何让单片机知道"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/xiaowen901018/article/details/51212347", "Konwledge_Point": "树中的独立集", "Question": ["求n个整数中倒数第二小的数。", ["Problem Description", "\n求n个整数中倒数第二小的数。", "\n每一个整数都独立看成一个数，比如，有三个数分别是1，1，3，那么，第二小的数就是1。", "\n\n", "Input", "\n输入包含多组测试数据。", "\n输入的第一行是一个整数C，表示有C测试数据；", "\n每组测试数据的第一行是一个整数n，表示本组测试数据有n个整数（2<=n<=10），接着一行是 n个整数 (每个数均小于100);", "\n\n", "Output", "\n请为每组测试数据输出第二小的整数，每组输出占一行。", "\n\n", "Sample Input", "\n2", "\n2", "\n1 2", "\n3", "\n1 1 3", "\n\n", "Sample Output", "\n2", "\n1"]], "Tag": "算法设计"}
{"Answer": "不同的cpui不同，比如对于支持smt（Intel 的商品名称叫做超线程技术）的cpu来说，每个核心有2个sa，独立2套寄存器，但是共享L1 L2缓存。\r\n任何情况下，一个cpu核心（逻辑 处理器，对于smt处理器的每个核心，有2个逻辑核心），只能执行一个线程。", "Konwledge_Point": "树中的独立集", "Question": ["单核CPU多线程中各个线程的缓存是否是独立的，是对这个CPU的高速缓存和寄存器做了逻辑划分吗？", ["假设单核CPU的情况下。（既高速缓存都是一样的）", "\n\n", "一 一个变量a被线程A和线程B共享，A、B线程同时做a++操作。CPU切换时间片实际还是顺序操作，会有问题吗？如何理解？", "\n二 一个变量a被线程A和线程B共享，A写，B读，会出现B读不到最新的值吗？", "\n\n", "无论是单核处理器还是多核处理器，当线程数量增多时，多个线程使用同一个核。还是这个例子，假设A线程和B线程共享主存数据a变量，A、B线程读入到CPU缓存后，到底是一个缓存呢？还是各自线程看到的缓存是不一样的？"]], "Tag": "算法设计"}
{"Answer": "System.Diagnostics.Process.Start(\"另一个exe的路径文件名.exe\");", "Konwledge_Point": "树中的独立集", "Question": ["wpf应用程序中如何实现点击某个按钮，打开另一个独立的wpf程序", ["如题，需要在一个wpf程序中实现点击按钮，打开另一个独立的WPF程序，wpf程序的地址是已知的，且两个程序间不需要关联操作，只需要打开即可。"]], "Tag": "算法设计"}
{"Answer": "&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"%&gt;\r\n\r\n这样就可以了，如果你是使用weblogic服务器，对页面检查严格，如果一个页面中有多个\r\npageEncoding=\"UTF-8\"就会报错的", "Konwledge_Point": "树中的独立集", "Question": ["在JSP文件中，相同的页面结构怎么制作？", [":D 大家好，又来麻烦各位了。", "\n\n", "之前在PHP中可以通过include这种方式来调用，比如说侧边的栏目，顶部的导航，页脚部份，但是在JSP中却发现一个问题：如果你的JSP文件不加页面的头部，在eclipse中是无法保存的（因为无法确定页面的编码问题）。。。纠结，如果加了，那么调用其它文件的这个文件最终编译出来就会有很多页面头部，这种结构看着很头疼啊。", "\n\n", "不知道各位前辈是怎么处理这个问题的呢？", "\n\n", "其实我想达到的目的很简单：一个系统里，通用一个头部、侧边导航、底部页脚，而且最终调用了这些文件的那个文件的结构是合理的。还请各位老师能够指点一下解决方法，先谢谢了。"]], "Tag": "算法设计"}
{"Answer": "在类申明里加上friend申明函数，在类外面定义函数。\r\nhttp://blog.chinaunix.net/uid-790245-id-2037327.html", "Konwledge_Point": "树中的独立集", "Question": ["C++ 如何提供独立的友元的函数声明？", ["《C++ Primer》第五版，中文版。242 页。", "\n能不能给个例子？看书上的描述看不明白。", "\n252 好像讲的就是这个问题。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If IE is not one of the trouble  browsers, you could create a small .NET app that embeds a web browser control and opens it to the desired page.&lt;/p&gt;\n\n&lt;p&gt;You might even be able to achieve this using Gecko:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://code.google.com/p/geckofx/\" rel=\"nofollow noreferrer\"&gt;http://code.google.com/p/geckofx/&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["将Web应用程序部署为独立可执行文件", ["\n\n", "I have a web application that I developed with the Google Web Toolkit (GWT), it is a utility application that helps make calculations when planning specific server deployments.  I want to be able to offer this application as a download on my website for people that want to use the application but don't always have internet access.", "\n\n", "I was previously able to achieve this by packaging all of files that GWT compiles (html and js) into a Nullsoft Installer Script (NSIS) that would just extract them to a temp directory and then tell Windows to open the main html file with whatever browser was the default.", "\n\n", "Recently this has given me problems, it seems that some browsers don't mind this at all while others have their own quirks and problems rendering the application useless.", "\n\n", "This application only makes 1 server call to fetch a xml file that contains the configuration data for how the calculations should be made.  There is a small php component that allows the user to save and load previous configurations but it is not a problem to disable this feature for offline standalone executable deployment.", "\n\n", "So my question is this, is there an existing framework that would allow my to package my application along with an embedded webserver so that when the application is ran it actually is running on a local web server?  Or is there an existing framework to embed a web application into a redistributable browser, so that when the user tries to open the application it automatically opens the packaged browser, that way I could be able to fine tune the offline experience to always work as desired with the packaged browser.", "\n\n", "Thanks for any replies", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先,你得确定这个你处理出来的sql是只查询一个1行中的1列,即1个值。&lt;br /&gt;由于动态sql不能直接在sql中查询出结果,必须用execute immediate或者dbms_sql去执行它,因此,可以先建立一个这样的函数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;create&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or replace&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; get_sql_value(i_sql varchar2) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; varchar2 &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt;\n  out_value varchar2(&lt;span class=\"hljs-number\"&gt;4000&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;execute&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;immediate&lt;/span&gt; i_sql\n    &lt;span class=\"hljs-keyword\"&gt;into&lt;/span&gt; out_value;\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; out_value;\n&lt;span class=\"hljs-keyword\"&gt;exception&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;when&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;no_data_found&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;\n    out_value :&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; out_value;\n  &lt;span class=\"hljs-keyword\"&gt;when&lt;/span&gt; others &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;\n    Raise_application_error(&lt;span class=\"hljs-number\"&gt;-20000&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sqlerrm&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;;\n/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;接下来,你就可以用这个函数把你处理的这个sql字符串包起来,它就能在你查询的时候返回对应sql的结果了,&lt;br /&gt;例:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-attribute\"&gt;select&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; a,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; b,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; c,get_sql_value(&amp;#39;select &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; from dual&amp;#39;) from dual;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["oracle数据集里某列存储了sql，如何通过select 直接查询数据集及数据集里sql执行后的值", ["  ", "select", " decode(t.AGENCY_CODE, ", "null", ", ", "''", ", t.AGENCY_CODE || ", "'-'", " || f.name) ,\n       decode(t.COLLECBANKGUID, ", "null", ", ", "''", ", d.code || ", "'-'", " || d.name) ,\n       b.WHERESQL 规则条件,\n       regexp_count(b.WHERESQL, ", "'select'", "),\n       instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "),\n       instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", "),\n       ", "substr", "(b.WHERESQL,\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "),\n              (instr(b.WHERESQL, ", "')'", ", instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", ")) -\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "))),\n       ", "substr", "(b.WHERESQL,\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", "),\n              (instr(b.WHERESQL, ", "')'", ", instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", ")) -\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", ")))\n  ", "from", " fasp_t_pubbankaccount t\n  ", "left", " ", "join", " BUSFW_T_RUACCOUNTLINK a\n    ", "on", " a.BANKACCOUNTGUID = t.GUID\n  ", "left", " ", "join", " FASP_T_BUSRURULE b\n    ", "on", " b.GUID = a.RULEID\n  ", "left", " ", "join", " V_ELE_VD00006 c\n", "on", " c.guid = t.BANKGUID\n  ", "left", " ", "join", " V_ELE_VD00006 d\n    ", "on", " d.guid = t.COLLECBANKGUID\n  ", "left", " ", "join", " FASP_T_PUPS_CS_0050 ", "e", "\n    ", "on", " ", "e", ".GUID = t.BANKACCOUNTTYPE\n  ", "left", " ", "join", " V_ELE_VD00010 f\n    ", "on", " f.guid = t.AGENCY_CODE  \n\n这个语句里", "substr", "(b.WHERESQL,\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "),\n              (instr(b.WHERESQL, ", "')'", ", instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", ")) -\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", ")))  列显示出来是一个独立的 ", "select", " 查询语句  \n\n我想直接在上面的结果集里显示这个独立sql运行后的值\n"]], "Tag": "算法设计"}
{"Answer": "因为你传的是值，在函数内修改不会影响函数外的值，c++可以用引用传值，c得传变量类型的指针（这里得是char**，因为变量类型是char*）\r\n```\r\nvoid change(char** s1, char** s2) {\r\n    char * temp;\r\n    if (strcmp(*s1, *s2)&gt;0) {\r\n        temp = *s1;\r\n        *s1 = *s2;\r\n        *s2 = temp;\r\n    }\r\n}\r\n```\r\nc++可以这么写\r\n```\r\nvoid change(char* &amp;s1, char* &amp;s2) {\r\n    char * temp;\r\n    if (strcmp(s1, s2)&gt;0) {\r\n        temp = s1;\r\n        s1 = s2;\r\n        s2 = temp;\r\n    }\r\n}\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["请问为什么我在函数里面可以传递值，而出来到了主函数中却没有改变？？", ["#include", "\n#include", "\nint main()", "\n{", "\n    void change(char* s1, char* s2);", "\n    int i, n;", "\n    char* a = \"fwfwfw\", * b = \"compare\", * c = \"zhangkewen\", * d = \"Consolee\";", "\n    char* name[] = { a,b,c,d };", "\n    for (n = 0; n < 3; n++)", "\n    {", "\n        for (i = 0; i < 3 - n; i++)", "\n        {", "\n            change(name[i], name[i + 1]);", "\n        }", "\n    }", "\n    for (i = 0; i < 4; i++)", "\n    {", "\n        printf(\"%s\\n\", name[i]);", "\n    }", "\n}", "\nvoid change(char* s1, char* s2)", "\n{", "\n    char * temp;", "\n    if (strcmp(s1, s2)>0)", "\n    {", "\n        temp = s1;", "\n        s1 = s2;", "\n        s2 = temp;", "\n    }", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;回答还可以的话 &amp;#xff0c;还请 采纳&amp;#xff1a;&lt;br /&gt;在使用独立显卡的情况下&amp;#xff0c;屏幕显示可能会占用一部分显存&amp;#xff0c;但这不会对深度学习的性能造成重大影响&amp;#xff0c;因为独立显卡通常有更多的显存。如果显存不够&amp;#xff0c;可以考虑升级独立显卡或者使用多块独立显卡。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Python深度学习的时候屏幕显示线插在独立显卡还是集成显卡好？", ["Python深度学习的时候屏幕显示线插在独立显卡还是集成显卡好？插在独立显卡上会不会导致屏幕占用一部分的显存？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1、把独显装好。2、在集显状态下把独显驱动装好。3、进BIOS屏蔽集显。4、独显可以正常显示了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["dell服务器R720加载独立显卡，进不去系统，UEIF报错", ["戴尔服务器dell R720的显卡问题。操作系统是win2008R2。", "\n现在是安装的华硕750ti，运行ok，多个屏幕。", "\n\n", "买了技嘉gtx1650，刚出的显卡安装了。在集成显卡情况下打了驱动，设备管理显示识别了。", "\n\n", "但是切换到GTX1650显卡下启动系统，系统死活进不去。卡", "\n在开机bios页面的“disconnecting UEFI driver，please waiting........”一直进不去系统，LCD报错的说slot calble没有连接。", "\n可是显卡LED等都亮了，风扇也转，背板很烫。", "\n\n", "是硬件不兼容？还是显卡驱动问题？", "\n显卡是今年6月出来的新卡，", "\n\n", "希望板上高手指点！谢谢", "\n\n", "\n\n", "\n\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;],i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i--)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["输入5个整数，逆序输出", ["示例：", "输入：", "1 2 3 4 5", "输出：", "5 4 3 2 1"]], "Tag": "算法设计"}
{"Answer": "你这个是UMP应用程序吧，需要windows 10特定版本的环境", "Konwledge_Point": "树中的独立集", "Question": ["VS2019 C# 程序怎么独立运行？", ["VS2019编译通过，并且在VS环境中编译运行都正常。", "\n生成的exe文件在bin\\x86\\Release\\AppX下，直接运行时提醒缺少m__rt100__app.dll，从下面目录拷贝到这个目录下，不提示了，但是程序还是不能正常运行出现界面。请问哪位大侠遇到过类似问题？", "\nC:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.8-rel-28605-00\\tools\\x86\\ilc\\Lib\\Runtime"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1、题主的消抖其实是无效的&amp;#xff0c;按键判断到低电平后&amp;#xff0c;延时20后&amp;#xff0c;仍然需要if判断&amp;#xff0c;然后才是while等待按键释放&amp;#xff0c;&lt;br /&gt;2、这里的取反操作是为了体现按键按下后的反应&amp;#xff0c;亮灭交替&amp;#xff0c;每次按下都改变当前led的状态&amp;#xff0c;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单片机中设置独立按键控制led状态为什么要取反", ["单片机中设置独立按键控制led状态为什么要取反", "\n", "这里取反是什么意思，求解答", "我试了不用这个取反也可以啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt; &amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-comment\"&gt;//structhttps://img-mid.csdnimg.cn/release/static/image/mid/ask/591763467946145.png &amp;#34;#left&amp;#34;)&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;\n{\n    T data &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt; &amp;lt;T&amp;gt;* next;\n    &lt;span class=\"hljs-built_in\"&gt;Node&lt;/span&gt;() :&lt;span class=\"hljs-built_in\"&gt;data&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;next&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) {}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; data &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n    }\n};\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LinkList&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;LinkList&lt;/span&gt;()\n    {\n        front &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Node &amp;lt;T&amp;gt;;\n        front-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;LinkList&lt;/span&gt;(T a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)\n    {\n        front &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Node&amp;lt;T&amp;gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n        {\n            Node &amp;lt;T&amp;gt;* s &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Node&amp;lt;T&amp;gt;;\n            s-&amp;gt;data &amp;#61; a[i];\n            s-&amp;gt;next &amp;#61; front-&amp;gt;next;\n            front-&amp;gt;next &amp;#61; s;\n        }\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;PrintList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;DeleteRe&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    Node &amp;lt;T&amp;gt;* front;\n};\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; LinkList&amp;lt;T&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;PrintList&lt;/span&gt;()\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (front-&amp;gt;next &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        Node&amp;lt;T&amp;gt;* p &amp;#61; front-&amp;gt;next;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n        {\n            p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;();\n            p &amp;#61; p-&amp;gt;next;\n        }\n    }\n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; LinkList&amp;lt;T&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;DeleteRe&lt;/span&gt;()\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (front &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    Node&amp;lt;T&amp;gt;* p &amp;#61; front;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p-&amp;gt;next)             &lt;span class=\"hljs-comment\"&gt;//&amp;amp;&amp;amp; p-&amp;gt;next-&amp;gt;next)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p-&amp;gt;next-&amp;gt;data &amp;#61;&amp;#61; p-&amp;gt;next-&amp;gt;next-&amp;gt;data)\n        {\n            Node&amp;lt;T&amp;gt;* q &amp;#61; p-&amp;gt;next-&amp;gt;next;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (q &amp;amp;&amp;amp; q-&amp;gt;data &amp;#61;&amp;#61; p-&amp;gt;next-&amp;gt;data)\n            {\n                Node&amp;lt;T&amp;gt;* r &amp;#61; q;\n                q &amp;#61; q-&amp;gt;next;\n                &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; r;\n            }\n            Node&amp;lt;T&amp;gt;* r &amp;#61; p-&amp;gt;next;\n            p-&amp;gt;next &amp;#61; q;\n            &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; r;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            p &amp;#61; p-&amp;gt;next;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len;\n    cin &amp;gt;&amp;gt; len;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (len &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* array &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[len];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; len; i&amp;#43;&amp;#43;)\n        {\n            cin &amp;gt;&amp;gt; array[i];\n        }\n        &lt;span class=\"hljs-function\"&gt;LinkList&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;L1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(array, len)&lt;/span&gt;&lt;/span&gt;;\n\n        L1.&lt;span class=\"hljs-built_in\"&gt;DeleteRe&lt;/span&gt;();\n        L1.&lt;span class=\"hljs-built_in\"&gt;PrintList&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["【单链表删除重复数据】在本地vs上运行没有问题，上传到oj系统是答案错误，请问有什么错误呀？实在找不出来了", ["题目内容", "\n", "给定一个升序的单链表，删除单链表中的重复数据项，只保留独立的元素。", "\n", "\n", "\n", "问题相关代码", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "template", " <", "class", " ", "T", ">\nstructhttps:", "//img-mid.csdnimg.cn/release/static/image/mid/ask/591763467946145.png \"#left\")", "\n Node\n{\n    T data = ", "0", ";                    \n    ", "struct", " ", "Node", " <T>* next;  \n    ", "Node", "() :", "data", "(", "0", "), ", "next", "(", "NULL", "){}\n    ", "void", " ", "print", "()", "\n    ", "{\n        cout << data <<", "\" \"", ";\n    }\n};\n\n", "template", "<", "class", " ", "T", ">\n", "class", " ", "LinkList", "\n{\n", "public", ":\n    ", "LinkList", "()\n    {\n        front = ", "new", " Node <T>;\n        front->next = ", "NULL", ";\n    }\n    ", "LinkList", "(T a[], ", "int", " n)\n    {\n        front = ", "new", " Node<T>;\n    ", "int", " i;\n    ", "for", " (i = n - ", "1", "; i >= ", "0", "; i--)\n    {\n        Node <T>* s = ", "new", " Node<T>;\n        s->data = a[i];\n        s->next = front->next;\n        front->next = s;\n    }\n    }\n    ", "void", " ", "PrintList", "()", ";\n    ", "void", " ", "DeleteRe", "()", ";\n", "private", ":\n    Node <T>* front;\n};\n\n", "template", "<", "class", " ", "T", ">\n", "void", " LinkList<T>::", "PrintList", "()\n{\n    ", "if", " (front->next == ", "NULL", ")\n    {\n        cout << ", "\"empty\"", " ;\n    }\n    ", "else", "\n    {\n        Node<T>* p = front->next;\n        ", "while", " (p)\n        {\n            p->", "print", "();\n            p = p->next;\n        }\n    }\n}\n\n", "template", "<", "class", " ", "T", ">\n", "void", " LinkList<T>::", "DeleteRe", "()\n{ \n    ", "if", " (front == ", "NULL", ")\n    {\n        ", "return", ";\n    }\n    Node<T>* p = front ;\n        ", "while", " (p->next&&p->next ->next)\n        {\n            \n            ", "if", " (p->next->data ==p->next->next->data)\n            {\n                Node<T>* q = p->next->next;\n                ", "while", " (q && q->data == p->next ->data)\n                {\n                    q = q->next;\n                }\n                p->next = q;\n            }\n            ", "else", "\n            {\n                p = p->next;\n            }\n        }\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " len;\n    cin >> len;\n    ", "if", " (len <= ", "0", ")\n    {\n        ", "return", " ", "0", ";\n    }\n    ", "else", "\n    {\n        ", "int", " *array=", "new", " ", "int", " [len];\n        ", "for", " (", "int", " i = ", "0", "; i < len; i++)\n        {\n            cin >> array[i];\n        }\n        ", "LinkList<", "int", "> ", "L1", "(array, len)", ";\n\n        L1.", "DeleteRe", "();\n        L1.", "PrintList", "();\n        ", "return", " ", "0", ";\n    }\n}\n", "\n", "运行结果及报错内容", "\n", "oj上看不到问题到底是什么", "\n", "要求用链表实现"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Okay, your problem is that you basically create three instances of application: one in &lt;code&gt;index.php&lt;/code&gt;, one in &lt;code&gt;users.php&lt;/code&gt;, one in &lt;code&gt;org.php&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Application instance is created by &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$app = new \\Slim\\App;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And that application is launched by &lt;code&gt;$app-&amp;gt;run&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;In &lt;code&gt;index.php&lt;/code&gt; you have &lt;code&gt;$app&lt;/code&gt;, which is overriten by &lt;code&gt;$app&lt;/code&gt; in &lt;code&gt;users.php&lt;/code&gt;, then overwritten by &lt;code&gt;$app&lt;/code&gt; in &lt;code&gt;org.php&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;This is the reason why &lt;code&gt;require '../src/routes/users.php';&lt;/code&gt; seems to be ignored - it's declaring &lt;code&gt;$app&lt;/code&gt;, adds routes and in the next file you overwrite &lt;code&gt;$app&lt;/code&gt; and add routes.&lt;/p&gt;\n\n&lt;p&gt;To fix this, simply remove &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$app = new \\Slim\\App;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;from everywhere but &lt;code&gt;index.php&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["将路由组织到Slim中无法正常工作的单独文件中", ["\n\n", "This is my ", "Index.php", " file:", "\n\n", "\n\n", "\n", "use \\Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse \\Psr\\Http\\Message\\ResponseInterface as Response;\nrequire '../vendor/autoload.php';\nrequire '../src/config/db.php';\n\n$app = new \\Slim\\App;\n//User Routes\nrequire '../src/routes/users.php'; // This not working\nrequire '../src/routes/org.php'; // Only This working\n\n$app->run();\n", "\n\n", ".htaccess", " file", "\n\n", "RewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^ index.php [QSA,L]\n", "\n\n", "When there is only one require file it's working fine but when adding two or multiple files then only last one working and others giving ", "page not found error", ". I'm new in slim and PHP so I have no idea what's wrong.", "\n\n", "users.php", "\n\n", "<?php\n/**\n * User: y34h1a\n * Date: 2/10/17\n * Time: 3:47 AM\n */\nuse \\Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse \\Psr\\Http\\Message\\ResponseInterface as Response;\n\n$app = new \\Slim\\App;\n\n//Get All Customers\n$app->get('/api/users', function (Request $request, Response $response){\n    $sql = \"Select * from users\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $users['users'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($users);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//GET SINGLE USER\n$app->get('/api/user/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $sql = \"Select * from users WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $user['user'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($user);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//ADD USER\n$app->post('/api/user/add', function (Request $request, Response $response){\n    $name = $request->getParam('name');\n    $email = $request->getParam('email');\n    $password = $request->getParam('password');\n    $sql = \"Insert into users(name,email, password) values (:name, :email, :password)\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $password);\n\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Customer Added\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n//UPDATE USER\n\n$app->put('/api/user/update/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $name = $request->getParam('name');\n    $email = $request->getParam('email');\n    $password = $request->getParam('password');\n\n    $sql = \"UPDATE users SET \n              name = :name, \n              email = :email, \n              password = :password \n            WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $password);\n\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Customr UPDATED\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//DELETE USER\n$app->get('/api/user/delete/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $sql = \"DELETE FROM users WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n        $stmt->execute();\n        $db = null;\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n", "\n\n", "org.php", "\n\n", "\n\n", "\n", "use \\Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse \\Psr\\Http\\Message\\ResponseInterface as Response;\n\n$app = new \\Slim\\App;\n\n//Get All Orgs\n$app->get('/api/orgs', function (Request $request, Response $response){\n    $sql = \"Select * from org\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $users['orgs'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($users);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n//GET SINGLE ORG\n$app->get('/api/org/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $sql = \"Select * from org WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $user['org'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($user);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n\n//ADD ORG\n$app->post('/api/org/add', function (Request $request, Response $response){\n    $user_id = $request->getParam('user_id');\n    $name = $request->getParam('name');\n    $address = $request->getParam('address');\n    $sql = \"Insert into org(user_id, name, address) values (:user_id, :name, :address)\";\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':address', $address);\n\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Organization Added\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//UPDATE ORG\n$app->put('/api/org/update/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $name = $request->getParam('name');\n    $address = $request->getParam('address');\n\n    $sql = \"UPDATE org SET \n              name = :name, \n              address = :address \n            WHERE id = $id\";\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':address', $address);\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Organization Deleted\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n//DELETE ORG\n$app->delete('/api/org/delete/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $user_id = $request->getParam('user_id');\n    $org_id = $request->getParam('org_id');\n    $sql = \"DELETE FROM org WHERE id = $id AND user_id = $user_id\";\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n        $stmt->execute();\n        $db = null;\n        echo '{\"notice\": {\"text\": \"Sheet Deleted\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/lengye7/article/details/90514430", "Konwledge_Point": "树中的独立集", "Question": ["flutter可以独立开发出一个完整的app了吗", ["走在最前面的闲鱼也只是部分页面或功能用的flutter吧？想入坑，但是时间很紧迫，想问大佬坑多不多"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Make the second regex group optional &lt;code&gt;?&lt;/code&gt;, i.e.:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   $string =\n    '&amp;lt;ul&amp;gt;\n    &amp;lt;li&amp;gt;\n    &amp;lt;a href=\"/nalcrom\"&amp;gt;Nalcrom&amp;lt;/a&amp;gt;\n            (Sodium Cromoglicate)\n    &amp;lt;/li&amp;gt;\n    &amp;lt;li&amp;gt;\n    &amp;lt;a href=\"/alimemazine\"&amp;gt;Alimemazine&amp;lt;/a&amp;gt;\n    &amp;lt;/li&amp;gt;\n    &amp;lt;li&amp;gt;\n    &amp;lt;a href=\"/xolair\"&amp;gt;Xolair&amp;lt;/a&amp;gt;\n            (Omalizumab)\n    &amp;lt;/li&amp;gt;\n    &amp;lt;/ul&amp;gt;';\n\n    preg_match_all('%\"&amp;gt;(.*?)&amp;lt;/a&amp;gt;\\s+(\\(.*?\\))?%i', $string, $match, PREG_PATTERN_ORDER);\n    for ($i = 0; $i &amp;lt; count($match[0]); $i++) {\n        echo  $match[1][$i] . \" \". $match[2][$i];\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Nalcrom (Sodium Cromoglicate)\nAlimemazine \nXolair (Omalizumab)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;a href=\"http://ideone.com/mxGthV\" rel=\"nofollow\"&gt;DEMO&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["PHP和正则表达式将字符串的两个独立部分提取为ONE重组变量", ["\n\n", "I have a PHP string consisting of HTML code as follows:", "\n\n", "$string =\n'<ul>\n<li>\n<a href=\"/nalcrom\">Nalcrom</a>\n        (Sodium Cromoglicate)\n</li>\n<li>\n<a href=\"/alimemazine\">Alimemazine</a>\n</li>\n<li>\n<a href=\"/xolair\">Xolair</a>\n        (Omalizumab)\n</li>\n</ul>';\n", "\n\n", "using", "\n\n", "preg_match_all($regex,$string,$matches, PREG_PATTERN_ORDER);\n\nfor ($i = 0; $i < count($matches[0]); ++$i)\n{ echo $i . \"    \" . $matches[0][$i]. \"<br>\"; }\n", "\n\n", "if I use", "\n\n", "$regex = \"^(?<=>).*?(?=(\\Q</a>\\E))^\";\n", "\n\n", "I get", "\n\n", "1 Nalcrom", "\n\n", "2 Alimemazine", "\n\n", "3 Xolair", "\n\n", "whereas if I use", "\n\n", "$regex = \"^\\(.*?\\)^\";\n", "\n\n", "I get", "\n\n", "1 (Sodium Cromoglicate)", "\n\n", "2 (Omalizumab)", "\n\n", "Trying", "\n\n", "$regex = \"^(?<=>).*?(?=(\\Q</a>\\E))(\\(.*?\\))^\";\n", "\n\n", "and variations upon it I get nothing but blank, whereas what I need is:", "\n\n", "1 Nalcrom (Sodium Cromoglicate)", "\n\n", "2 Alimemazine", "\n\n", "3 Xolair (Omalizumab)", "\n\n", "Any ideas on how I can do this? thnx", "\n    "]], "Tag": "算法设计"}
{"Answer": "es6中函数内有两层作用域，外层是创建函数参数的作用域（可以在这个作用域中设置参数的默认值）。内层是函数体的作用域，如果块作用域不算，加上全局作用域，就是三个作用域。\r\n就是说es6中函数的参数和函数体内用var声明的变量不在同一个作用域中，es5是不是也这样好像无法验证。\r\n一个函数所处的作用域是函数创建时的作用域，不是调用时的作用域。\r\n\r\n你的 y = function() { console.log(x);}是在创建函数参数的作用域中的，这里的x访问的是函数的参数x，参数x没有被赋值就是undefined，\r\n注意：参数x和函数体内用var x=3声明的变量不在同一个作用域中，不是同一个变量。\r\n如果你foo1函数没有参数x，就会在外层作用域（也就是全局作用域）中寻找x变量。\r\n\r\n用下面例子会好理解一些\r\n```\r\nvar x = 1;\r\nfunction foo1(x=2, y = function() { console.log(x); }) {//输出2\r\nvar x = 3;\r\nconsole.log(x);//输出3\r\ny();\r\n}\r\nfoo1();\r\nconsole.log(x);//输出1\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["es6 中函数参数独立作用域", ["如果参数是一个函数那么，这个函数有外层环境吗？还是说函数里能访问的变量只能是在这个作用域中声明的？", "\n例如：", "\nvar x = 1;", "\nfunction foo1(x, y = function() { console.log(x); }) {", "\n  var x = 3;", "\n  y();", "\n}", "\n\n", "foo1(); ", "\n\n", "\n", "\n\n", "上面中作为参数的匿名函数，有外层作用域吗？"]], "Tag": "算法设计"}
{"Answer": "android:orientation=\"horizontal\"改成android:orientation=\"vertical\"", "Konwledge_Point": "树中的独立集", "Question": ["如何设置 TextView 到独立的行 ?", ["程序中有 textviews：", "ramdomName 10.20 - 11.30 Monday, tue", "\n\n", "我想让 ", "ramdomName", " 在新的一行，", "10.20", " 在新的一样，", "Monday", " 也在新的一行，", "true", "在新的一行，如何设置呢？", "\n我用的下面的代码：", "\n\n", " <LinearLayout\n\n  android:id=\"@+id/widget38\"\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n android:layout_width=\"fill_parent\" \nandroid:layout_height=\"fill_parent\" \nandroid:layout_marginLeft=\"10dip\" \nandroid:layout_marginRight=\"10dip\" \nandroid:orientation=\"horizontal\"  >\n\n\n     <TextView\n       xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:id=\"@+id/text1\"\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n      android:gravity=\"center_vertical\"\n       android:textSize= \"30sp\"  />\n\n    <TextView\n           android:id=\"@+id/text2\"\n          android:layout_width=\"wrap_content\" \n    android:layout_height=\"wrap_content\" \n\n\n           android:textSize= \"30sp\"  />\n    <TextView\n           android:id=\"@+id/text6\"\n\n    android:layout_width=\"wrap_content\" \n    android:layout_height=\"wrap_content\"\n           android:text=\" - \"\n           android:textSize=\"30sp\" \n\n             />\n\n    <TextView\n           android:id=\"@+id/text3\"\n         android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n         android:textSize= \"30sp\"  />\n    <TextView\n           android:id=\"@+id/text6\"\n         android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:orientation=\"vertical\"\n      android:textSize= \"30sp\"  />\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这里讲思路哈&amp;#xff0c;按键首先要检测电平来判断是否按下&amp;#xff0c;看你这个图&amp;#xff0c;应该是检测P32为低电平表示按键按下&amp;#xff0c;然后要消抖10ms&amp;#xff0c;再次检测&amp;#xff0c;如果还是低电平那就证明不是抖动&amp;#xff0c;具体怎么消抖看你要用延时还是用定时器了&amp;#xff0c;消抖结束要判断按键是否松开&amp;#xff0c;可以用while死等&amp;#xff0c;也可以用状态法判断&amp;#xff0c;做完这些就可以处理数码管的值了&amp;#xff0c;数码管数值加一然后灯亮。这里单个数码管静态显示还是很简单的&amp;#xff0c;直接控制P2电平就能做到。如果有用&amp;#xff0c;希望点个采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立按键控制数码管，且按下灯亮，代码怎么编写", ["\n", "89c51单片机，需要通过独立按键控制单个数码管，按一下开关数码管加一，且按下后灯亮，不按的时候灯灭。"]], "Tag": "算法设计"}
{"Answer": "你指的是下载的资源都在你的web工程里面吗？\r\n那样的话，把资源文件提取出来，不考虑安全的话用其他的服务器如 nginx 配置上地址，即可\r\nweb工程的话需要建立一张表保存记录和文件url的对应关系", "Konwledge_Point": "树中的独立集", "Question": ["如何把项目中大文件独立出来，发布的时候只发布代码？", ["有一个web项目要部署到服务器的tomcat上。但是现在这个项目内有文件资源比较大，光是提供下载的文件都有900兆多。项目其实就几十兆。现在打包一个war包有1.2G。发布起来也是很费劲。如何能将文件单独处理？目前我的项目提供下载功能，下载是使用静态链接下载的。不是java流读取下载的。使用的是mysql数据库。大神们有什么高招给小弟建议建议"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;正确答案B&lt;br /&gt;理由:物理数据独立性(Physical Data Independence)指的是数据库的存储设备和存取方法的变化不影响到整体的逻辑结构。也就是说,用户和程序员不用关心数据是如何存储和组织的&amp;#xff0c;只需关心数据本身的逻辑结构。这样可以使得数据库系统更加稳定和易于维护。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["数据库中的数据独立性", ["问题遇到的现象和发生背景", "\n", "这个选B吧，答案选择D??", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "运行结果及详细报错内容", "\n", "我的解答思路和尝试过的方法，不写自己思路的，回答率下降 60%", "\n", "我想要达到的结果，如果你需要快速回答，请尝试 “付费悬赏”"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;That's just a wrapper for the C fork() function. It creates processes, not threads. PHP does not support multithreading.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["我可以在PHP中创建线程吗？  [重复]", ["\n\n", "\n  ", "Possible Duplicate:", "Does PHP have threading?", "  ", "\n", "\n\n\n\n", "I found this: ", "http://php.net/manual/en/function.pcntl-fork.php", "\n\n", "But I can't tell if those are threads or processes, I'm confused. They use both words.", "\n\n", "In case you have an alternate solution, this is what I need threads for: I want to create a real-time game using web sockets, and I thought of having a single process running in the background, that spawns one thread for each game (or room) on demand.", "\n    "]], "Tag": "算法设计"}
{"Answer": "使用JGroups作为通信机制，首先定义JGroupsFactory，详见JGroups的文档[url]http://www.jgroups.org/manual/html/user-advanced.html[/url]。\r\n注意TCP属性最好显式声明该节点的IP地址，免得与initial_hosts中的内容不一致，尤其是localhost的情况：\r\n\r\n&lt;cacheManagerPeerProviderFactory class=\"net.sf.ehcache.distribution.jgroups.JGroupsCacheManagerPeerProviderFactory\"\r\n\t\tproperties=\"connect=TCP(start_port=7800;bind_addr=localhost):\r\n\t\tTCPPING(initial_hosts=localhost[7800],localhost[7801];port_range=1;timeout=5000;num_initial_members=2):\r\n\t\tVERIFY_SUSPECT(timeout=1500):\r\n\t\tpbcast.NAKACK(gc_lag=100;retransmit_timeout=3000):\r\n\t\tpbcast.GMS(join_timeout=5000;shun=false;print_local_addr=true)\"\r\n\t\tpropertySeparator=\"::\" /&gt;\r\n\r\n每个Cache加入ListenerFactory，设置在缓存失效(被更新或删除)时只发送失效通知：因此他的 replcatePuts=false(新增时不通知),replcateUpdate=true, replicateUpdateViaCopy=false(更新时通知但不拷贝只发失效信息），replicateRemovals=true 失效时通知。\r\n\r\n&lt;cache name=\"org.springside.examples.miniweb.entity.security.User\" maxElementsInMemory=\"500\"\r\n\t\toverflowToDisk=\"true\" eternal=\"true\"&gt;\r\n\t\t&lt;cacheEventListenerFactory class=\"net.sf.ehcache.distribution.jgroups.JGroupsCacheReplicatorFactory\"\r\n\t\t\tproperties=\"replicateAsynchronously=true,replicatePuts=false,replicateUpdates=true,replicateUpdatesViaCopy=false,replicateRemovals=true\" /&gt;\r\n\t&lt;/cache&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请教各位前辈：ehcache的分步式怎么部署?", ["　　比如有两台服务器server1，server2，每台都装有tomcat服务器，web应用程序部署在server1上（如果需要的话，两台都　部署也可以），系统使用ssh框架，引入Ehcache缓存，缓存单独部署在一台上能跑。现在想使用缓存的分布式功能，通过RMI机制,请问需要怎么部署，要不要开启什么特别的服务(比如rmi,或缓存服务)。非常非常感谢您的回答", "\n\n", "[b]如果只是说下hibernate.cfg.xml和两个ehcache.xml文件的cacheManagerPeerProviderFactory、cacheManagerPeerListenerFactory和cacheEventListenerFactory等相关属性的配置就请您不要回答了。[/b]", "\n[b]问题补充：[/b]", "\n谢谢您的回答，不论是通过rmi,jms或是jroups的方式，仅仅靠配置这几个属性是根本不能实现分机式的，要不要启动rmi，jms或jroups服务器，或者cache server，如果需要，怎么启动这些服务器."]], "Tag": "算法设计"}
{"Answer": "是线程具体代码运行的入口，你不要在外部直接调用，否则就是同步的，达不到异步效果，你只需要start线程，它自己会执行run", "Konwledge_Point": "树中的独立集", "Question": ["java当中的run方法是线程及其子类独有的吗", ["java当中的run方法是线程及其子类独有的吗", "\n\n", "如果不是，其他类调用run方法需要注意些什么问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;添加slot函数&amp;#xff0c;然后连到Button的clicked信号上&amp;#xff0c;在slot函数里实现打开另一个文件&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在qt中如何用Button打开另一个独立的qt文件", ["在一个qt的ui界面中如何用Button打开另一个独立的qt文件"]], "Tag": "算法设计"}
{"Answer": "根据id标记点击的句子", "Konwledge_Point": "树中的独立集", "Question": ["萌新求助：小程序怎么使得每个id上的操作互相独立啊？", ["想请教各位前辈一个问题：小程序左右滑动，每滑动一次更新一句句子，我要怎么才能实现每个句子的收藏功能是独立的呢？", "我现在的收藏功能是一句话被收藏了，其他全部都被收藏了。", "\n那下面的代码是从网上借鉴的，侵删，但是我只是为了做练习和练手", "\n谢谢各位前辈指点！", "\n这是wxml", "\n\n", "<view class=\"container\">\n  <swiper class=\"sentence-swiper\">\n    <swiper-item class=\"word\" wx:for=\"{{weeklyrecommend}}\"wx:key=\"index\">\n      <text  class=\"{{isClick?'iconfont icon-collect-after collect-position':'iconfont icon-collect-before collect-position'}}\" catch:tap=\"haveSave\" data-id=\"{{item.id}}\"></text>\n      <view class=\"classic-word\">\n        <text>{{item.sentence}}</text>\n      </view>\n    </swiper-item>\n  </swiper>\n</view>     \n", "\n\n", "然后是js", "\n\n", "// pages/collect/collect.js\nPage({\n  data: {\n    job: [],\n    jobList: [],\n    id: '',\n    isClick: false,\n    jobStorage: [],\n    jobId: '',\n    weeklyrecommend: [\n      {\n        id: 0,\n        sentence: \"“为什么讨人喜的女人总是嫁给蠢物？”“因为有脑子的男人是不会娶讨人喜的女人的。”\"\n      },\n      {\n        id: 1,\n        sentence: \"只有坚信自己能改变世界的人，她才能改变世界。\"\n      },\n      {\n        id: 2,\n        sentence: \"“为什么讨人喜的女人总是嫁给蠢物？”“因为有脑子的男人是不会娶讨人喜的女人的。”\"\n    ]\n  },\n  haveSave(e) {\n    console.log(e)\n    if (!this.data.isClick == true) {\n      let jobData = this.data.jobStorage;\n      jobData.push({\n        jobid: jobData.length,\n        id: this.data.job.id,\n      })\n      console.log(this.data.job.id)\n      wx.setStorageSync('jobData', jobData);//设置缓存\n      wx.showToast({\n        title: '已收藏',\n      });\n    } else {\n      wx.showToast({\n        title: '已取消收藏',\n      });\n    }\n    this.setData({\n      isClick: !this.data.isClick\n    })\n  }\n\n})\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;报错信息是什么&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何通过python提取word里面的选择题和填空题", ["import pandas as pd@", "import re", "from docx import Document", "from collections import OrderedDict", "\n", "doc = Document(\"体育.docx\")", "\n", "black_char = re.compile(\"[\\s\\u3000\\xa0]+\")", "\n", "chinese_nums_rule = re.compile(\"[一二三四]、(.+?)(\")", "title_rule = re.compile(\"\\d+.\")", "option_rule = re.compile(\"([ABCDEF])\")", "option_rule_search = re.compile(\"([ABCDEF])[^(]+\")", "\n", "保存最终的结构化数据", "\n", "question_type2data = OrderedDict()", "\n", "从word文档的“一、单项选择题”开始遍历数据", "\n", "for paragraph in doc.paragraphs[5:]:", "    #  去除空白字符,将全角字符转半角字符，并给括号之间调整为中间一个空格", "    line = black_char.sub(\"\", paragraph.text).replace(", "        \"（\", \"(\").replace(\"）\", \")\").replace(\"．\", \".\").replace(\"()\", \"(  )\")", "    # 对于空白行就直接跳过", "    if not line:", "        continue", "    if title_rule.match(line):", "        options = title2options.setdefault(line, [])", "    elif option_rule.match(line):", "        options.extend(option_rule_search.findall(line))", "    else:", "        chinese_nums_match = chinese_nums_rule.match(line)", "        if chinese_nums_match:", "            question_type = chinese_nums_match.group(1)", "            title2options = question_type2data.setdefault(", "                question_type, OrderedDict())", "\n", "result = []", "max_options_len = 0", "for question_type, title2options in question_type2data.items():", "    for title, options in title2options.items():", "        result.append([question_type, title, *options])", "        options_len = len(options)", "        if options_len > max_options_len:", "            max_options_len = options_len", "df = pd.DataFrame(result, columns=[", "                  \"题型\", \"题目\"]+[f\"选项{i}\"for i in range(1, max_options_len+1)])", "\n", "题型可以简化下，去掉选择两个字", "\n", "df['题型'] = df['题型'].str.replace(\"选择\", \"\")", "df.to_excel(\"result.xlsx\", index=False)", "\n", "为什么会报错"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;在领导看来合理&amp;#xff0c;不然不会分配给你。&lt;/li&gt;&lt;li&gt;至于对于你&amp;#xff0c;需要自己衡量。我个人看法是小型项目&amp;#xff0c;在工期合理的前提下&amp;#xff0c;交给初级开发独立完成有合理性。&lt;/li&gt;&lt;li&gt;如果你觉得很不合理&amp;#xff0c;要及时沟通反馈&amp;#xff0c;说明到底是因为能力不足、人手不够还是工期过紧张导致不合理。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["进了一家公司，但公司不是互联网公司。公司领导交给我一个项目，要我独立开发(我是初级开发)。想知道合理不", ["进了一家公司，但公司不是互联网公司。公司领导交给我一个项目，要我独立开发(我是初级开发)。", "想知道合理不"]], "Tag": "算法设计"}
{"Answer": "源代码如何修改:\r\n\r\n1 把UserService类中和_userDAO有关的代码先注释，ValidateUser方法改成下面的\r\n\tpublic boolean ValidateUser(String name, String p_pwd) {\r\n\t\tif (\"hello\".equals(name) &amp;&amp; \"world\".equals(p_pwd)) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n2 spring-Service.xml\r\n先不加和DAO相关的属性，定义成下面的方式\r\n\r\n\t&lt;bean class=\"lf.Services.UserService\" id=\"userService\" /&gt;\r\n\r\n3 spring-WEB.xml\r\nbean定义改成scope=\"prototype\"，对每个请求生成一个Action\r\n\t&lt;bean class=\"lf.Actions.LoginAction\" id=\"LoginAction\" scope=\"prototype\"&gt;\r\n\t\t&lt;property name=\"userService\" ref=\"userService\"&gt;&lt;/property&gt;\r\n\t&lt;/bean&gt;\r\n\r\n\r\n4 struts.xml\r\n\t\t&lt;action name=\"*_\" class=\"lf.Actions.LoginAction\" method=\"{1}\"&gt;\r\n把上面一行改成\r\n\t\t&lt;action name=\"*_\" class=\"LoginAction\" method=\"{1}\"&gt;\r\n\r\nclass的值和spring里面的bean id一致。\r\n\r\n5 保证在WEB-INF/lib下加入struts2-spring-plugin-2.1.8.1.jar和spring.jar包。\r\n\r\n这样就应该没有问题了。", "Konwledge_Point": "树中的独立集", "Question": ["关于使用spring 注入问题，初使化时可以，运行时为null的问题", ["public class LoginAction extends ActionSupport {", "    /**", "     * ", "     */", "    private static final long serialVersionUID = -3017631247469843290L;", "    private User userModel;", "    private IUserService userService;", "    public String Login() throws Exception {", "        String _email = getUserModel().getEmail();", "        String _pwd = getUserModel().getPwd();", "        //", "        if (userService.ValidateUser(_email, _pwd)) {", "            ActionContext.getContext().getSession().put(\"K_UserName\", _email);", "            return \"OK\";", "        } else", "            return \"False\";", "    }", " ", "    public String Register() {", "        return \"Register\";", "    }", " ", "    public void setUserModel(User userModel) {", "        this.userModel = userModel;", "    }", "    public User getUserModel() {", "        return userModel;", "    }", "    public void setUserService(UserService userService) {", "       ", " this.userService = userService;", "    （这句在初使化时是可以注入的）", "    }", "}", "\n\n", " ", "\n\n", "但在运行时这句： if (", "userService", ".ValidateUser(_email, _pwd)) {，", "\n\n", " ", "\n\n", "userService总为Null，不知道为什么"]], "Tag": "算法设计"}
{"Answer": "可以实现，jsp+java类，编译过了会转到tomcat发布目录下，然后通过web形式来调用，起始jsp也是被编译成了.class文件了。原理都是一致的，你现在可以写一个测试类 Test.java，在这里面调用java类中的方法，但需要有main函数来执行。\r\n不过，必须强调一点，如果你用到数据库连接，并且是通过数据库连接池方式的话，肯定不行，因为连接池方式需要tomcat解析。", "Konwledge_Point": "树中的独立集", "Question": ["如何在web应用里的方法分离出来单独执行呢？", ["在一个web应用系统里(jsp+java类)，想单独调用该系统里java类的一个方法，比如在命令行里调用该方法，或者用swing做一个界面，在界面里调用该方法，该应用是部署在tomcat里的，如何做到呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以直接用&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;a&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;nationality&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;]&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;.join(a)&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这种形式将列表转化为字符串的集合&lt;br /&gt;对处理后的字典中的每个键做对应操作即可&lt;br /&gt;&lt;strong&gt;有帮助望采纳~&lt;/strong&gt;&lt;br /&gt;示例转换代码如下:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt; &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;Mary&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;John&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Murphy&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Sara&amp;#39;&lt;/span&gt;], &lt;span class=\"hljs-string\"&gt;&amp;#39;nationality&amp;#39;&lt;/span&gt;: [\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;Britain&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Norway&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Ireland&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Norway&amp;#39;&lt;/span&gt;], &lt;span class=\"hljs-string\"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;Female&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Male&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Female&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Female&amp;#39;&lt;/span&gt;]}\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;k&lt;/span&gt;, v in &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;items&lt;/span&gt;():\n    &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;[&lt;span class=\"hljs-keyword\"&gt;k&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;(v)\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/521394672336138.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python 如何查询字典中的列表中的元素/ 如何将嵌套列表的内部转化成独立的字符串", ["现有一个嵌套列表：", "[['name', 'nationality', 'gender'], ['Mary', 'Britain', 'Female'], ['John', 'Norway', 'Male'], ['Murphy', 'Ireland', 'Female'], ['Sara', 'Norway', 'Female']]，", "\n", "通过zip分配可以得到以列表形式完成的字典：", "{'name': ['Mary', 'John', 'Murphy', 'Sara'], 'nationality': ['Britain', 'Norway', 'Ireland', 'Norway'], 'gender': ['Female', 'Male', 'Female', 'Female']}", "\n", "但目的是为了做inverted index，所以希望获得的结果是：", "{'name': 'Mary, John, Murphy, Sara',", "'nationality': 'Britain, Norway, Ireland, Norway',", "'gender': 'Female, Male, Female, Female'}", "\n", "请问该如何操作？", "或者有什么办法可以直接查询列表形式字典中的元素吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to : &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Change your partial file to generate the HTML for only one payroll (fiche).&lt;/li&gt;\n&lt;li&gt;Update your code&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$mpdf = new mPDF(); \n$mpdf-&amp;gt;SetDisplayMode('fullpage'); \n\nforeach ($recuperationFiche as $i =&amp;gt; $fiche) {\n\n    if($i) { //If not the first payroll then add a new page\n        $mpdf-&amp;gt;AddPage();\n    }\n    $html = $this-&amp;gt;view-&amp;gt;partial(\n        'fiche/telechargerfiche.phtml', \n        array('fichep' =&amp;gt; $fiche)\n    );\n    $mpdf-&amp;gt;WriteHTML($html);\n\n}\n\n$mpdf-&amp;gt;SetHTMLFooter( \"\" ); \n$mpdf-&amp;gt;Output(); \nexit;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope it helps&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["MPDF：多页中的独立信息", ["\n\n", "I actually use MPDF in order to show my HTML code on a PDF.\nThe problem that I have a lot of  payroll employees , and I want to make each payroll on a page.\nThis code works well. ", "\n\n", "        $html  = $this->view->partial('fiche/telechargerfiche.phtml',\n            array('fichep' => $recuperationFiche));\n\n    $mpdf=new mPDF();\n    foreach ($recuperationFiche as $fiche) {\n\n    $mpdf->SetDisplayMode('fullpage');\n    $mpdf->WriteHTML($html);\n    $mpdf->SetHTMLFooter(\"<div style='text-align: center'><img src='pieddepage.jpg' /></div>\") ;\n    $mpdf->Output();\n    exit;\n", "\n\n", "But the problem is that my payrolls is shown successively in the same page.\nNow I want to make each payroll on an independant page .\nI have to use a foreach , but I don't know where is the error , because it's shown to me the same result :", "\n\n", "        $html  = $this->view->partial('fiche/telechargerfiche.phtml',\n            array('fichep' => $recuperationFiche));\n\n    $mpdf=new mPDF();\n    foreach ($recuperationFiche as $fiche) {\n\n    $mpdf->SetDisplayMode('fullpage');\n    $mpdf->WriteHTML($html);\n    $mpdf->SetHTMLFooter(\"<div style='text-align: center'><img src='pieddepage.jpg' /></div>\") ;\n    $mpdf->Output();\n    exit;\n    }\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "很重要的一点是自信。\r\n\r\n看得出来，楼主对于接下来的工作很有激情，但由于经验不足又有些胆怯，所以跑这来寻找组织的温暖来了。\r\n\r\n首先我要告诉你的是，每个人都是这样过来的。而且，从某种意义上说，没有独立完成过一个项目的程序员不能叫真正的程序员。\r\n\r\n你的感受我很清楚，我第一次独立做一个项目的时候，心里也没底，但是只要我们按照步骤，科学的计划，并有能够很好地去执行，胜利只是时间的事。\r\n\r\n第一次独立开发，会遇到很多问题，尤其是配置，以前都是别人帮你配好了，你会用，现在需要你自己来架设了，搭建过程可能会遇到以前从未碰到的错误，不要担心！因为这正是我们成长的机会，解决了一个，那以后再遇到我们就会宛然一笑了~\r\n\r\n第一次独立开发，可以多多讨教朋友，前辈，也可以来javaeye问答。最重要的是信心，然后是耐心，遇到问题要细心，大小写检查，一个逗号可能会引发血案，让你卡壳2、3天。如果一个问题看了1个小时以上还解决不了，那我们就先放在一边，先去做其他的，虽然我们心里耿耿于怀，没关系，我们缺少的只是灵感而已。\r\n\r\n数据库设计，不要紧，多多参考以前项目的经验，会发现，大家都很相似，只是换了个名字而已。最重要的，不外乎一个外键，因为外键，许多张独立的表被关系了起来。\r\n\r\n当你配置好项目后第一个hellworld跑起来之后，就成功了一半了。\r\n\r\nSo,do be afraid.Just do it!", "Konwledge_Point": "树中的独立集", "Question": ["一个人独立开发项目有点迷茫，请各位指点迷津", ["首先呢，请允许我自我介绍一下，小弟工作半年有余，之前在一家公司从事的是JAVA初级程序员的工作，负责一个模块的开发，经济模块，说大也不大，在开发之中偶尔参与了其他模块的编码，后来有余公司的原因（经济纠纷），我不得不离职，现在经朋友介绍来到了另一家公司，说起来大家也别笑，是一个婚介公司规模也蛮大，有十几年的历史，由于几个幕后老板想入IT行业，所以就找我和我的朋友（美工）2个人来试试这行的水，在我看来不管以后的结果或者薪资如何，对我来说都是一个不错的锻炼机会，但是现在就迷茫了，现在接的第一个项目是主要是用于以交友为基础的大型资讯平台，我大致分为了3个模块，会员管理员模块、新闻管理模块和活动模块，因为时间原因准备采取自己比较熟悉的技术Spring2.0+Struts1.2+JDBC(这个是之前公司项目经理所写的一个工具类，很齐全，很方便，用熟了很喜欢)，环境准备使用JDK5+Tomcat5.0+Mysql5.0+。", "\n说了这么多大家也应该有所了解了吧？需求文档我写了一个初始版本，也已经通过了，现在就是想问下大家，接下来我该如何规划我的项目，我该遵循一个什么样的步骤？因为都是我一个人来做，所以没有整个项目开发经验的我，真的是觉得好迷茫，好无助，对于以后功能的细节是否能完成这个我倒不是很担心，比较网上有那么多的前辈和开源代码，我对我自己的实力也比较有信心，只是这整个项目我该的规划我改如何呢？比方说框架搭好后我该从哪一个地方开始下手，设计数据库的步骤，等等，谢谢各位多多指点啊。", "\n这里我还要谢谢我的经理，感谢他给我这次锻炼机会，我一定会努力的完成的！", "\n[b]问题补充：[/b]", "\n这个，找几个朋友来也不是没有想过，我跟经理也有提议，他说你先把这个项目做出来，看效果如何在考虑。（PS：他们的态度完全在于试水），忘了说了，有一个美工和我一起开发，我也就是这个美工介绍过来的，囧。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I've had a good read through and found a class I didn't know existed before, which allows MongoDB to remember which class each object belongs to without having to explicitly set a type map. I changed my class objects that implemented &lt;code&gt;MongoDB\\BSON\\Serializable&lt;/code&gt; and &lt;code&gt;MongoDB\\BSON\\Unserializable&lt;/code&gt; to just implementing &lt;code&gt;MongoDB\\BSON\\Persistable&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;MongoDB\\BSON\\Persistable&lt;/code&gt; injects a &lt;code&gt;__pclass&lt;/code&gt; variable into the document, which is a reference to the class that was used during serialization. It uses that reference to decide which class to unserialize into and overrides the type map.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/class.mongodb-bson-persistable.php\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;MongoDB\\BSON\\Persistable&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["MongoDB / PHP在嵌入式文档中独立设置类型映射", ["\n\n", "I have had a good look around but I can't seem to find the answer to my question. If I have the following document with several different embedded document types, how do I set the type map for each document independently of the others? ", "\n\n", "{\n    _id : ObjectId(\"bf98321fba31233\"),\n    name : \"Example\", \n    comments : [\n         comment : { _id : ObjectId(\"bf98321fba31233\"), text : \"Example comment type\" },\n         comment : { _id : ObjectId(\"bf98321fba31233\"), text : \"Another example\" }\n    ],\n    attachments : [\n         attachment : { _id : ObjectId(\"bf98321fba31233\"), url : \"/var/www/blah/foo\" },\n         attachment : { _id : ObjectId(\"bf98321fba31233\"), url : \"/var/www/blah/bar\" }\n    ]\n}\n", "\n\n", "I know how I can set a type map for all embedded documents using the ", "PHP7 MongoDB driver", ":", "\n\n", "$cursor = $mongo->executeQuery(\"TestDB.TestCollection\", new MongoDB\\Driver\\Query([]));\n$cursor->setTypeMap(['root' => 'RootObj', 'document' => 'SomeOtherObj']);\n", "\n\n", "This will unserialize all of the embedded documents into instances of the SomeOtherObj class, and the root document into the RootObj class. What I really want to do is specify this for each type of embedded document.", "\n\n", "$cursor->setTypeMap(['root' => 'RootObj', 'comment' => 'CommentObj', 'attachment' => 'AttachmentObj']);\n", "\n\n", "Can it be done?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;When you find that you need the same code in many different controllers a \"custom library\" (class) is the perfect choice. Documentation for creating your own libraries is found &lt;a href=\"http://www.codeigniter.com/user_guide/general/creating_libraries.html\" rel=\"nofollow\"&gt;HERE&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Controllers should be using models to get data from the database. Custom libraries can also use models just like controllers. Here is a very basic custom library called &lt;code&gt;Sidebar&lt;/code&gt;. It depends on a model (&lt;code&gt;sidebar_model&lt;/code&gt;) that will not be shown. The purpose of the &lt;code&gt;Sidebar&lt;/code&gt; library is to return the variables need by the &lt;code&gt;sidebar_view&lt;/code&gt; file.&lt;/p&gt;\n\n&lt;p&gt;File: &lt;strong&gt;application/libraries/Sidebar.php&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\nclass Sidebar\n{\n    protected $CI; // Read the documentation link to see why this is needed.\n\n    public function __construct()\n    {\n        $this-&amp;gt;CI = &amp;amp; get_instance();\n        $this-&amp;gt;CI-&amp;gt;load-&amp;gt;database();  //only needed if not already done \n        $this-&amp;gt;CI-&amp;gt;load-&amp;gt;model('sidebar_model');\n    }\n\n    public function get_sidebar_data()\n    {\n        return $this-&amp;gt;CI-&amp;gt;sidebar_model-&amp;gt;get_sidebar();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The library method &lt;code&gt;get_sidebar_data()&lt;/code&gt; returns the variables for the view.&lt;/p&gt;\n\n&lt;p&gt;Here is a controller that uses the custom library. It will use the custom library and a view file (not shown) containing HTML for the sidebar.&lt;/p&gt;\n\n&lt;p&gt;File: &lt;strong&gt;application/controllers/Main.php&lt;/strong&gt;\n\n\n&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Main extends CI_Controller\n{\n    function __construct()\n    {\n        parent::__construct();\n        $this-&amp;gt;load-&amp;gt;library('sidebar'); //can also be autoloaded\n    }\n\n\n    public function index()\n    {\n        $data['sidebar'] = $this-&amp;gt;sidebar-&amp;gt;get_sidebar();\n        $this-&amp;gt;load\n             -&amp;gt;view('banner')\n             -&amp;gt;view('sidebar_view', $data)\n             -&amp;gt;view('main_view')\n             -&amp;gt;view('footer_view');\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any other controller that needs to show the sidebar would use this same pattern.&lt;/p&gt;\n\n&lt;p&gt;This controller loads four different view files and is using \"method chaining\" which is encouraged. Method chaining executes a tiny bit faster. But the best reason for using it? Less typing.&lt;/p&gt;\n\n&lt;p&gt;The method chaning could also be type like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$this-&amp;gt;load-&amp;gt;view('banner')-&amp;gt;view('sidebar_view', $data)-&amp;gt;view('main_view')-&amp;gt;view('footer_view');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But, IMO, putting each &lt;code&gt;-&amp;gt;view()&lt;/code&gt; on a separate line makes it easier to read.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何在视图中检索数据独立于codeigniter中的控制器", ["\n\n", "I have a sidebar in my site that receive some information from db and I can't use controller for retrieve data because I have different controller and same sidebar. How can I print this data in view page.\nwhen I wrote in P.h.P code in the view it shows an error that it cant define variables.", "\n\n", "How could I do this?", "\n    "]], "Tag": "算法设计"}
{"Answer": "是的，因为没那种需要", "Konwledge_Point": "树中的独立集", "Question": ["jQuery中基本过滤选择器，是不是只能以dom元素为基础，不能", ["jQuery中基本过滤选择器，是不是只能以dom元素为基础，不能以其它选择器为基础，也就是不能接在其它选择器后面？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以写个聊天室之类的东西,高并发客户端服务端,也可以写一些小游戏之类的&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于个人项目开发，想找可以独立开发、练手的项目", ["自己业余还算比较有时间，想开发开发一些个人项目，使用C++、音视频相关等，也可以服务器相关，但限于个人视野还不是很广，github那种太多人做过的又不感兴趣，不知道有什么项目可以上手的？"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/zkl99999/article/details/45486035", "Konwledge_Point": "树中的独立集", "Question": ["使用的是独立的堆内存，这个说法成立么？", ["操作系统消息通讯中内存指针的保护，使得消息发送避免了缓冲溢出问题，是因为它使用的是独立的堆内存，这个说法成立么？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Collect your results into an array like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require_once('db_connect.php');\n//Initalize the array\n$result = array(\n    'nickname_exists' =&amp;gt; 0,\n    'email_exists' =&amp;gt; 0\n);\nif(isset($_POST['nickname'])){\n    $nickname = $_POST['nickname'];\n    $st = $db-&amp;gt;prepare(\"SELECT * FROM users WHERE nickname=?\");\n    $st-&amp;gt;bindParam(1, $nickname);\n    $st-&amp;gt;execute();\n    if($st-&amp;gt;rowCount() &amp;gt; 0) { \n        $result['nickname_exists'] = 1;\n    }\n}\nif(isset($_POST['email'])){\n    $email = $_POST['email'];\n    $st = $db-&amp;gt;prepare(\"SELECT * FROM users WHERE email=?\");\n    $st-&amp;gt;bindParam(1, $email);\n    $st-&amp;gt;execute();\n    if($st-&amp;gt;rowCount() &amp;gt; 0) { \n        $result['email_exists'] = 1;\n    }\n}\n//Gives back the result in JSON.\necho json_encode($result);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then return back with the json.\nAfter this you can check all of them in your javascript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//Initialize the hasError\nvar hasError = false;\nif (data.nickname_exists == 1) {\n    //Set error for nickname\n    nickname.addClass('error');\n    hasError = true;\n}\nif (data.email_exists == 1) {\n    //Set error for email\n    email.addClass('error');\n    hasError = true;\n}\n//If we had no error:\nif (!hasError) {\n    registerMsg.html('');\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何单独回调ajax请求", ["\n\n", "I'm learning the way to work with ajax with php now i send request with;", "\n\n", "    $.ajax({\n        url: 'check_exists.php',\n        type: \"POST\",\n        data: registerForm.serialize(),\n        success: function(data) {\n            console.log(data)\n            registerMsg = $('.registerMsg');\n            if (data == 'nickname_exists') { \n                nickname.addClass('error'); \n            } else if (data == 'email_exists') { \n                email.addClass('error'); \n            } else {\n                registerMsg.html(''); \n            }\n        }\n    });\n", "\n\n", "Now this send to the php file and checks if data exists if i input nickname i get back ", "nickname_exist", " back and if i do the same with the email i get ", "email_exists", " back.", "\n\n", "But now if i get both data it console.log like ", "nickname_existsemail_exists", " this way it doesn't trigger the if statement. ", "\n\n", "i send from php file like;", "\n\n", "require_once('db_connect.php');\n\nif(isset($_POST['nickname'])){\n\n    $nickname = $_POST['nickname'];\n\n    $st = $db->prepare(\"SELECT * FROM users WHERE nickname=?\");\n\n    $st->bindParam(1, $nickname);\n    $st->execute();\n\n    if($st->rowCount() > 0) { echo 'nickname_exists';  }\n}\nif(isset($_POST['email'])){\n\n    $email = $_POST['email'];\n\n    $st = $db->prepare(\"SELECT * FROM users WHERE email=?\");\n\n    $st->bindParam(1, $email);\n    $st->execute();\n\n    if($st->rowCount() > 0) { echo 'email_exists';  }\n}\n", "\n\n", "How do i fix this, and is the way how i handle ajax to php the right way, can somebody help me a hand.", "\n\n", "I need to make it console.log like ", "\n\n", "nickname_exists", "\n\n", "email_exists", "\n\n", "INSTEAD OF ", "\n\n", "nickname_existsemail_exists", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I've never tried it, but you could take a look at &lt;a href=\"http://www.phpcompiler.org/\" rel=\"nofollow noreferrer\"&gt;PHC&lt;/a&gt;.  It appears to be able to do just that.&lt;/p&gt;\n\n&lt;p&gt;Also take a look at &lt;a href=\"http://wiki.github.com/facebook/hiphop-php/\" rel=\"nofollow noreferrer\"&gt;Hip-Hop&lt;/a&gt; by Facebook.  Looks good (and more recent).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; And for more PHP Compilers, see &lt;a href=\"http://en.wikipedia.org/wiki/PHP#Compilers\" rel=\"nofollow noreferrer\"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["有没有办法将PHP代码编译成可执行文件", ["\n\n", "i'm wondering about this possibility. Is it possible to make our code written in code and string compile and make it become Executable and can operate without the use of server such as Apache.", "\n\n", "The OS environment will be Windows family.", "\n    "]], "Tag": "算法设计"}
{"Answer": "独立的，这个是可以肯定的啊", "Konwledge_Point": "树中的独立集", "Question": ["ITEye现在还在独立运作吗？还是成为了CSDN的一个部门？", ["ITEye现在还在独立运作吗？还是成为了CSDN的一个部门？", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Working solution also,is I realise I should have used $newsarticle-&amp;gt;title instead of $newslistarticle-&amp;gt;title , this separates the contents of the two foreachloop. The new function contains&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function getNewsHTMLStructureIsland($newslist = array())\n    {\n        $html = '';\n        if (empty($newslist))\n            return NULL;\n        $html .= '&amp;lt;div role=\"main\" class=\"fluid flush split homepage\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"lc flush lc-island\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"l-two-col\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"l-main-container\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"l-main\"&amp;gt;';\n\n        //&amp;lt;!-- Begin: Channel Archive Page - Primary Island --&amp;gt;\n        $html .= '&amp;lt;div class=\"island plain-island\"&amp;gt;';\n        $newslistarticle = $newslist[0];\n        $html .= '&amp;lt;div class=\"plain-feature block block-inset\"&amp;gt;';\n\n        $html .= '&amp;lt;a href=\"'. site_url() .'news/'.$newslistarticle-&amp;gt;slug.' \" data-omni-sm=\"hp_featureddl\"&amp;gt;';\n        $html .= '&amp;lt;img class=\"thumb\" data-aspect-ratio=\"500x369\" height=\"369\" width=\"500\" alt=\"'.$newslistarticle-&amp;gt;title.'\" src=\"\" /&amp;gt;';\n        $html .= '&amp;lt;div class=\"block-title\"&amp;gt;';\n        $html .= '&amp;lt;h2&amp;gt;'.$newslistarticle-&amp;gt;title.'&amp;lt;/h2&amp;gt;';\n        $html .= '&amp;lt;div class=\"byline\"&amp;gt;by Alexia Tsotsis&amp;lt;/div&amp;gt;';\n        $html .= '&amp;lt;/div&amp;gt;';\n        $html .= '&amp;lt;/a&amp;gt;';\n        $html .= '&amp;lt;/div&amp;gt;';\n\n\n\n        $html .= '&amp;lt;ul class=\"plain-item-list\"&amp;gt;';\n        foreach (array_slice($newslist, 1, 3) as $newsarticle) {\n            //print_r($tweet);\n            $html .= '&amp;lt;li class=\"plain-item block block-small\"&amp;gt;';\n            $html .= '&amp;lt;a href=\"'. site_url() .'news/'.$newsarticle-&amp;gt;slug.' \" data-omni-sm=\"hp_featureddl\"&amp;gt;';\n            $html .= '&amp;lt;img class=\"thumb\" data-featured-thumb=\"1\" height=\"90\" width=\"145\" alt=\"\" src=\"\" /&amp;gt;';\n            $html .= '&amp;lt;div class=\"plain-title\"&amp;gt;';\n            $html .= '&amp;lt;h2 class=\"h-alt\"&amp;gt;'.$newsarticle-&amp;gt;title.'&amp;lt;/h2&amp;gt;';\n            $html .= '&amp;lt;p class=\"byline\"&amp;gt;by Jordan Crook&amp;lt;/p&amp;gt;';\n            $html .= '&amp;lt;/div&amp;gt;';\n            $html .= '&amp;lt;/a&amp;gt;';\n            $html .= '&amp;lt;/li&amp;gt;';\n\n        }\n\n            $html .= '&amp;lt;/ul&amp;gt;';\n            $html .= '&amp;lt;/div&amp;gt;';\n            ////&amp;lt;!-- End: Channel Archive Page - Primary Island --&amp;gt;\n        return $html;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在两个单独的foreach循环中分离变量的内容，所有这些都在一个函数中", ["\n\n", "I have two foreach loops in my function, each use the $newlist data passed to it, the first foreach loop, retrieves only one item from the database. The second foreach loop should/ought to independently retrieve separate three news items, however that is not the case, as in the html page, it only shows the first item retrieved in the first foreach loop three times, instead of three different items. How can I avoid this to achieve what I want?", "\n\n", "function getNewsHTMLStructureIsland($newslist = array())\n    {\n        $html = '';\n        if (empty($newslist))\n            return NULL;\n        $html .= '<div role=\"main\" class=\"fluid flush split homepage\">';\n        $html .= '<div class=\"lc flush lc-island\">';\n        $html .= '<div class=\"l-two-col\">';\n        $html .= '<div class=\"l-main-container\">';\n        $html .= '<div class=\"l-main\">';\n\n        //<!-- Begin: Channel Archive Page - Primary Island -->\n        $html .= '<div class=\"island plain-island\">';\n        foreach (array_slice($newslist, 0, 1) as $newslistarticle) {\n        $html .= '<div class=\"plain-feature block block-inset\">';\n\n        $html .= '<a href=\"'. site_url() .'news/'.$newslistarticle->slug.' \" data-omni-sm=\"hp_featureddl\">';\n        $html .= '<img class=\"thumb\" data-aspect-ratio=\"500x369\" height=\"369\" width=\"500\" alt=\"'.$newslistarticle->title.'\" src=\"\" />';\n        $html .= '<div class=\"block-title\">';\n        $html .= '<h2>'.$newslistarticle->title.'</h2>';\n        $html .= '<div class=\"byline\">by Alexia Tsotsis</div>';\n        $html .= '</div>';\n        $html .= '</a>';\n        $html .= '</div>';\n        }\n\n\n        $html .= '<ul class=\"plain-item-list\">';\n        foreach (array_slice($newslist, 1, 3) as $newsarticle) {\n            //print_r($tweet);\n            $html .= '<li class=\"plain-item block block-small\">';\n            $html .= '<a href=\"'. site_url() .'news/'.$newslistarticle->slug.' \" data-omni-sm=\"hp_featureddl\">';\n            $html .= '<img class=\"thumb\" data-featured-thumb=\"1\" height=\"90\" width=\"145\" alt=\"\" src=\"\" />';\n            $html .= '<div class=\"plain-title\">';\n            $html .= '<h2 class=\"h-alt\">'.$newslistarticle->title.'</h2>';\n            $html .= '<p class=\"byline\">by Jordan Crook</p>';\n            $html .= '</div>';\n            $html .= '</a>';\n            $html .= '</li>';\n\n        }\n\n            $html .= '</ul>';\n            $html .= '</div>';\n            ////<!-- End: Channel Archive Page - Primary Island -->\n        return $html;\n    }\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "https://zhidao.baidu.com/question/651169651015400045.html", "Konwledge_Point": "树中的独立集", "Question": ["控件内调用数组，数组必须独立么，能不能是嵌套的数组？              ", ["控件内调用数组，数组必须独立么，能不能是嵌套的数组？嵌套数组能不能作为控件事件的参数传给控件被调用？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;直接拖进去有用吗&amp;#xff0c;不行的话关闭后再通过菜单栏打开试试&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["UE4视口不知道怎么回事独立出来了，请问怎么还原回去呢？", ["如图，请问如何将这个窗口还原回中间那个位置呢？我已经试过卸载重新安装，但是没用。有没有哪位来解一下惑？谢谢了"]], "Tag": "算法设计"}
{"Answer": "传统的会话复制，效率比较低，因为每个节点都保留了一份会话数据，会话信息会在各节点之间复制。会话共享很好地解决了这个问题，会话共享顾名思义，所有的应用之间，只保留一份会话数据，这份数据可以存储在mongodb中，也可以在redis中，不存在复制时的问题，所以效率较高。\r\n\r\n通过这段时间和bboss开发团队的交流和对bboss的实际应用，采用会话共享效率还是比较高的，而且可以在会话共享时区分哪些会话数据（用户信息）需要在应用间共享，哪些会话数据是应用私有的，很好地保证了应用间私有会话数据的私密性，并有效防止私有数据的冲突问题。", "Konwledge_Point": "树中的独立集", "Question": ["真心求大牛帮助！两个完全独立的项目单点登陆的问题。", ["公司最近要整合两个产品到一起，情况是这样：", "\n两个产品都是跟金融有关的，所有对安全性都有要求。", "\n产品A使用的是公司自己写的框架，没怎么用开源框架，在session控制上用的是数据库存储的方式。", "\n产品B使用的是springsecurity，session还有权限控制都是框架来做。", "\n两个产品现在部署在不同的服务器上，数据库也是各自独立的。", "\n要实现的目标就是，我们把两个产品整合到一个域名下面，然后只开放产品A的登陆，当在A登陆之后，同时也保持B的登陆状态，然后可以在A,B上都正常访问，同时，还要保持session同步。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;小魔女参考了bing和GPT部分内容调写:&lt;br /&gt;要想在另一个工程中使用PSCAD中的自定义模块&amp;#xff0c;首先需要将该模块编译成一个独立的模块库文件&amp;#xff0c;然后在另一个工程中将该模块库文件导入&amp;#xff0c;这样就可以在另一个工程中使用该模块了。&lt;/p&gt;\n&lt;p&gt;具体步骤如下&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;在编译自定义模块的工程中&amp;#xff0c;点击“编译”按钮&amp;#xff0c;编译该模块&amp;#xff0c;生成一个模块库文件&amp;#xff0c;该文件以“.lib”为后缀&amp;#xff1b;&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;将该模块库文件复制到另一个工程的“lib”文件夹&amp;#xff1b;&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;在另一个工程中&amp;#xff0c;点击“编译”按钮&amp;#xff0c;编译该工程&amp;#xff0c;并将模块库文件导入&amp;#xff0c;这样就可以在另一个工程中使用该模块了。&lt;br /&gt;回答不易&amp;#xff0c;记得采纳呀。&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么将PSCAD中的自定义模块（在独立的一个工程里）用在另一个工程里？", ["怎么将PSCAD中的自定义模块（在独立的一个工程里）用在另一个工程里？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use yml or xml configuration to add constraints to your object.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://symfony.com/doc/current/book/validation.html#the-basics-of-validation\" rel=\"nofollow\"&gt;http://symfony.com/doc/current/book/validation.html#the-basics-of-validation&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;You do this by creating a file called &lt;code&gt;validation.yml&lt;/code&gt; in your Bundle configuration directory. Add the following content to validate your object:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Some\\Name\\Space\\Package:\n    properties:\n        name:\n            - NotBlank: ~\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That's one way to keep things you don't consider a responsibility for your object out of said object. It also removes the need for a custom validator class for every object you create. You can simply make use of the validator service already provided by the framework.&lt;/p&gt;\n\n&lt;h1&gt;Edit&lt;/h1&gt;\n\n&lt;p&gt;Alright I think I figured something out you might be looking for: you can create a &lt;code&gt;MetadataFactory&lt;/code&gt; to load &lt;code&gt;Metadata&lt;/code&gt; the way you want. There are a couple of examples here: &lt;a href=\"https://github.com/symfony/validator/tree/master/Mapping/Factory\" rel=\"nofollow\"&gt;https://github.com/symfony/validator/tree/master/Mapping/Factory&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It basically boils down to a Factory class that returns an instance of &lt;code&gt;MetadataInterface&lt;/code&gt; where you attach your constraints. This means that you can have the Factory read metadata from anything. You could for example do something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use Symfony\\Component\\Validator\\Constraints as Assert;\nuse Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\nuse Symfony\\Component\\Validator\\Mapping\\Factory\\MetadataFactoryInterface;\nuse Your\\Package;\n\nclass PackageMetadataFactory implements MetadataFactoryInterface\n{\n    /**\n     * Create a ClassMetaData object for your Package object\n     *\n     * @param object $value The object that will be validated\n     */\n    public function getMetadataFor($value)\n    {\n\n        // Create a class meta data object for your entity\n        $metadata = new ClassMetadata(Package::class);\n\n        // Add constraints to your metadata\n        $metadata-&amp;gt;addPropertyConstraint(\n            'namespace', new Assert\\Type(['type' =&amp;gt; 'string']));\n\n        // Return the class metadata object\n        return $metadata;\n    }\n\n    /**\n     * Test if the value provided is actually of type Package\n     *\n     * @param object $value The object that will be validated\n     */\n    public function hasMetadataForValue($value)\n    {\n        return $value instanceof Package::class;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then in your &lt;code&gt;PackageValidator&lt;/code&gt; all you have to do is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\nuse Symfony\\Component\\Validator\\Validation;\nuse Your\\PackageMetadataFactory;\n\nclass PackageValidator\n{\n    protected $subject;\n\n    public function PackageValidator($subject) {\n        $this-&amp;gt;subject = $subject;\n    }\n\n    public function getViolations() {\n        $validator = Validation::createValidatorBuilder()\n            -&amp;gt;setMetadataFactory(new PackageMetadataFactory())\n            -&amp;gt;getValidator();\n\n        $violations = $validator-&amp;gt;validate($this-&amp;gt;subject);\n\n        return !empty($violations) ? $violations : [];\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hopefully this is more in line of what you're looking for.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立应用程序中的Symfony Validator组件问题", ["\n\n", "I am realizing that perhaps the way I want to make use of the Validator Component from Symfony is not possible. Here is the idea.", "\n\n", "I have a class called Package which for now has only one property named namespace. Usually I would include the ClassMetadata and any constraint object I would like to validate against within my Package class. However, my idea is that instead of doing that I would rather keep my subject clean and only responsible for the things it must be responsible for.", "\n\n", "Below is a class I wrote and call it PackageValidater:", "\n\n", "<?php\n use Symfony\\Component\\Validator\\Constraints as Assert;\n use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n use Symfony\\Component\\Validator\\Validation;\n\n class PackageValidator\n {\n   protected $subject;\n\n   public function PackageValidator($subject){\n    $this->subject = $subject;\n   }\n\n   public static function loadMetadata(){\n    $metadata->addPropertyConstraint('namespace', new new Assert\\Type(['type' => 'string']));\n   }\n\n   public function getViolations(){\n    $validator = Validation::createValidatorBuilder()\n       ->addMethodMapping('loadMetadata')\n       ->getValidator();\n\n    $violations = $validator->validate($this->subject);\n\n    return !empty($violations) ? $violations : [];\n   }\n\n  }\n", "\n\n", "Despite of the fact that I am not sure about the usage of my constraint since most reference uses annotations and I do not we can ignore that part. I also am aware of the fact that my test fails due to this fact. However, my issue is with my design because I have not added the static function that the Validation object uses to build the validation. Instead of my method mapping where constraints reside being in the actual object it resides on a separate class.", "\n\n", "The idea is to enforce ", "separation of concerns", " and ", "single responsibility", " on my objects. Below is a diagram that depicts exactly what I am trying to achieve:", "\n\n", "\n\n", "I have written my test as shown below:", "\n\n", "$packageValidator = new PackageValidator(new Package([0 => 'test']));\n$this->assertTrue(true, empty($packageValidator->getViolations()));\n", "\n\n", "Above I have passed in an array instead of a string which would make my test fail because there can never be a single namespace that is in a form of array - at least not in what I am trying to achieve.", "\n\n", "The issue is with my getViolations method inside the PackageValidator object because I am not passing my subject outside the context of my validation process that is define the subject metadata inside the subject itself then when getting the validator object with the refence to the subject's metadata get the validation errors.", "\n\n", "All in all Package does not have loadMetadata method but PackageValidator. How can I make this possible without polluting every object I want to validate with the metadata functionality?", "\n\n", "Below is what I get from PHPUnit:", "\n\n", "\n  ", "SimplexTest\\Validate\\Package\\PackageValidatorTest::testIfValidatorInterfaceWorks\n  Symfony\\Component\\Validator\\Exception\\RuntimeException: Cannot\n  validate values of type \"NULL\" automatically. Please provide a\n  constraint.", "\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我觉得你说的整体性和独立性并没有可比性&amp;#xff0c;整体性就是方法之间的调用&amp;#xff0c;没有好坏之说&amp;#xff0c;独立性就是Java的三大类型的经典之一&amp;#61;封装&amp;#xff0c;将一个部分或类抽离出来&amp;#xff0c;提高他的复用性&amp;#xff0c;减少整个项目代码的冗余。整体性和独立性都可以用&amp;#xff0c;没有哪个重或哪个轻&amp;#xff0c;具体看后期项目规模合理搭配就好。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Java在一个类中写方法的时候，我是注重整体性，还是独立性好一点？", ["Java在一个类中写方法的时候，我是注重整体性，还是独立性好一点？", "\n", "整体性：在一个类中，写一个方法，可以为了简便，多调用前面所写的方法。", "独立性：在一个类中，写一个方法，要有强内聚性，这个方法直接提出来，就可以在其他地方使用。"]], "Tag": "算法设计"}
{"Answer": "写java代码吧， 选择java代码选项，做分表插入操作 \r\n1.直接用java代码处理\r\n2.使用sql语句的视图做处理", "Konwledge_Point": "树中的独立集", "Question": ["kettle从一张表抽取数据分别插入到多张表中", ["\n讲师表中需要生成UUID，中间表要存放这两张表的关联关系并且生成UUID", "\n这个该怎么做，跪求指导！！！"]], "Tag": "算法设计"}
{"Answer": "你说的画面是sheet吧\r\n\r\nhttp://www.cnblogs.com/dyllove98/archive/2013/08/06/3241515.html", "Konwledge_Point": "树中的独立集", "Question": ["请问制作的软件中输出数据到excel中能不能产生两个独立的画面？请问怎么做？谢谢", ["请问制作的软件中输出数据到excel中能不能产生两个独立的画面？请问怎么做？谢谢"]], "Tag": "算法设计"}
{"Answer": "方法一：a标签包裹住img标签\r\n方法二：js控制img点击事件：\r\n\r\n```\r\nonclick=\"Jump(1);\"\r\nfunction Jump(para)\r\n{\r\n   //这里判断链接的参数para，根据不同的参数跳转\r\n   要是本页跳转 location.href=...\r\n  开新网页window.open()\r\n}\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["怎么在轮播图的图片中加上链接？", ["怎么在轮播图的图片中加上链接？我看网上有写的用a标签，能否具体说下怎么用，本人小白"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建立一个FLAG&amp;#xff0c;检测按键信号&amp;#xff0c;第一次按下是FLAG 置1&amp;#xff0c;记录下当时的数码管的值&amp;#xff0c;然后一直发送这个数值&amp;#xff1b;按键下一次按下&amp;#xff0c;FLAG置0&amp;#xff0c;接着循环传递数值。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单片机如何实现独立按键暂停循环？", ["要求是这样的 静态数码管0-9循环显示，独立按键按下停止循环，停止循环时数码管显示按下时的数字，再次按下循环继续", "不知道怎样实现这个暂停循环继续循环"]], "Tag": "算法设计"}
{"Answer": "代理模式,监听器模式,观察者模式", "Konwledge_Point": "树中的独立集", "Question": ["iOS控件之间通信按照什么模式", ["请从iOS开发类库角度描述 这些控件指什么 最好有关系图 这与架构模式是否有联系"]], "Tag": "算法设计"}
{"Answer": "路由就普通的几百块钱的tp_link", "Konwledge_Point": "树中的独立集", "Question": ["公司，想用一个交换机和一个路由器完成下列组网", ["华为s5700s交换机", "\n在这个交换机上前12个端口划分vlan 10 网段是172.16.1.0", "\n13和14端口划分vlan 20 网段是172.16.2.0", "\n15和16端口划分vlan 30 网段是172.16.3.0", "\nvlan2 和vlan3要DHCP分配地址", "\n这个交换机通过一个路由接到外网", "\nvlan 20 和 30 上的主机同时需要上外网", "\nvlan 20 和 30 上的主机可以互通，并可以访问vlan 10 上的主机"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;&amp;lt;h3&amp;gt;Insertion des étape :&amp;lt;/h3&amp;gt;\n&amp;lt;form action=\"index.php\" method=\"post\"&amp;gt;\n    &amp;lt;input type=\"number\" name=\"quantity\" id=\"quantity\" min=\"1\" max=\"5\"&amp;gt; \n    &amp;lt;div id=\"formcontainer\"&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;input type=\"submit\" value=\"Valider\"&amp;gt;\n&amp;lt;/form&amp;gt;\n&amp;lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;script&amp;gt;\n    jQuery(function($) {\n        $(\"#quantity\").bind('keyup mouseup', function () {\n            var count = $('#quantity').val();\n            var htmlf = '';\n            for (i = 0; i &amp;lt; count; i++) {\n                htmlf += \"&amp;lt;h5&amp;gt;Nom de l'étape&amp;lt;/h5&amp;gt;&amp;lt;br/&amp;gt;\";\n                htmlf += '&amp;lt;input type=\"text\" name=\"NomEtape_\"'+i+' size=\"40\" maxlength=\"40\"&amp;gt;';\n                htmlf += \"&amp;lt;h5&amp;gt;Description de l'étape&amp;lt;/h5&amp;gt;&amp;lt;br/&amp;gt;\";\n                htmlf += '&amp;lt;textarea name=\"DescriptionEtape_\"'+i+' rows=\"8\" cols=\"80\"&amp;gt;&amp;lt;/textarea&amp;gt;';\n                htmlf += \"&amp;lt;br/&amp;gt;\"\n            }\n            $(\"#formcontainer\").html(htmlf);\n        });\n    });\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Simple Just run the code and you can find yourself easy.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何自动获取多个表单", ["\n\n", "I'm doing a HTML form, it's meant to create step to pass on a game and I want to be able to enter a number and when for example I enter 5 it instantly show me 5 form to fill and create new step but when I try it doesn't appear how can I do please?", "\n\n", "<h3>Insertion des étape :</h3>\n\n<form action=\"InsertionEtape.php\" method=\"post\">\n    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"5\">\n    <br>\n    <?php for ($i=0; $i < $_GET['quantity']; $i++) {\n       ?>\n        <h5>Nom de l'étape</h5>\n        <input type=\"text\" name=\"NomEtape\" size=\"40\" maxlength=\"40\">\n        <br>\n\n        <h5> Description de l'étape </h5>\n        <textarea name=\"DescriptionEtape\" rows=\"8\" cols=\"80\"></textarea>\n        <br>\n        <br>\n        <input type=\"submit\" value=\"Valider\">\n        <?php\n     } ?>\n</form>\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can transfer JSON encoded HTML newlines like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$return['message'] = 'First Entry: ' . $_POST['Name1'] . '&amp;lt;br /&amp;gt; '  . 'Second Entry: ' .    $_POST['Name2'] . '&amp;lt;br /&amp;gt; ' . 'Third Entry: ' . $_POST['Name3'];  \necho json_encode($return);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or convert newlines (\n) into newline tags. &lt;/p&gt;\n\n&lt;p&gt;The nicer way though would be to leave that kind of processing to the client by e.g. returning an array of messages:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$return['message'] = array();\n$return['message'][] = 'First Entry: ' . $_POST['Name1'];\n$return['message'][] = 'Second Entry: ' . $_POST['Name2'];\n$return['message'][] = 'Third Entry: ' . $_POST['Name3'];\necho json_encode($return);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And leave the processing to the client (maybe the client wants the messages wrapped in a paragraph tag later on):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function(data)\n{\n    $('&amp;lt;div id=\"output2\"&amp;gt;&amp;lt;/div&amp;gt;').insertAfter($('#agreement-information'));\n    $('#output2').html(data.message.join('&amp;lt;br /&amp;gt;')).show(500);\n    $('#ouput2').append(data);  \n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何使用jQuery和PHP在单独的行上显示JSON响应", ["\n\n", "I am using AJAX to submit a form, and would like to display a summary of the information on the page so that the user can confirm the information before submitting. I am having trouble getting the results to display on multiple lines. Any suggestions on the best way to do this? ", "\n\n", "Here is the PHP:", "\n\n", "$return['message'] = 'First Entry: ' . $_POST['Name1'] . ' '  . 'Second Entry: ' .    $_POST['Name2'] . ' ' . 'Third Entry: ' . $_POST['Name3'];  \n\necho json_encode($return);\n", "\n\n", "Here is the jQuery:", "\n\n", "$(\"#mark-form\").validate({\n    submitHandler: function(form) {\n            $(form).ajaxSubmit({                  \n                type: \"POST\",\n                data: {\n                    \"Name1\" : $('#Name1').val(),\n                    \"Name2\" : $('#Name2').val(),\n                    \"Name3\" : $('#Name3').val()\n                       },\n                dataType: 'json',\n                url: './includes/ajaxtest3.php',\n                error: function() {alert(\"Error\");},\n                success: \n                function(data) {\n                    $('<div id=\"output2\"></div>').insertAfter($('#agreement-information'));\n                    $('#output2').html(data.message).show(500);\n                    $('#ouput2').append(data);  \n                },       \n  });\n\nreturn false;   \n   },\n        errorPlacement: function(error,element) {\n                        return true;\n                },\n        rules: {\n            \"Name1\": {\n                required: true,\n                }\n        }       \n});\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;级联系统逻辑上是与的关系&lt;br /&gt;S1: LT1 &amp;amp;&amp;amp; !(LT1) &amp;#61;&amp;gt; !(!LT1 || LT1)&lt;br /&gt;S2: !(LT1) &amp;amp;&amp;amp; !(LT1) &amp;#61;&amp;gt; !(LT1 || LT1) &amp;#61;&amp;gt; !LT1&lt;br /&gt;因此S2正确&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["设T1、T2为两个独立系统，T为级联系统", ["设T1、T2为两个独立系统，T为级联系统:", "\n", "\n", "判断下列陈述是否正确(请考虑极端情况，因为这是一个棘手的问题)。", "S1:如果T1是LTI, T2不是LTI，那么T不是LTI。", "S2:如果T1不是LTI, T2也不是LTI，则T不是LTI。", "请问最终S1和S2谁是对的谁是错的？"]], "Tag": "算法设计"}
{"Answer": "电脑上装上JDK   配置环境变量   然后用新建一个TXT文档    把代码考进去     把文档后缀名改为.java   进入CMD窗口  进入你放置文件的位置  使用JDK进行1-编译2-运行", "Konwledge_Point": "树中的独立集", "Question": ["要求能在电脑中独立写出，并调试通过，大佬帮帮忙。", ["\n\n", "public interface Animal{", "\n    void call();", "\n}", "\n\n", "class Cat implements Animal{", "\n    public void call() {", "\n        System.out.println(\"喵喵喵..\");", "\n    }", "\n}", "\n\n", "class Dog implements Animal{", "\n    public void run() {", "\n        System.out.println(\"汪汪汪..\");", "\n    }", "\n\n", "public class TestAnimal {", "\n    public static void main(String[] args) {", "\n        Cat cat = new Cat();", "\n        cat.call();", "\n        Dog dog = new Dog();", "\n        dog.call();", "\n    }", "\n}"]], "Tag": "算法设计"}
{"Answer": "select name,bumen,max(salary) from user group by bumen;", "Konwledge_Point": "树中的独立集", "Question": ["sql查询问题 子查询。。。", ["\n我要查询每个部门工资前3名的"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两者都占用存储单元&amp;#xff0c;形参是函数调用的时候分配地址空间&amp;#xff0c;调用结束就释放了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请问C语言函数中实参和形参各占一个存储单元吗？", ["请问C语言函数中实参和形参各占一个存储单元吗？", "函数运用在一段程序中是不是包括int main()里面的调用和后面的函数定义两部分，然后定义的是形参，调用的是实参？"]], "Tag": "算法设计"}
{"Answer": "&lt;jsp:forward&gt;严格的来说是在jsp页面跳转，没有说你非得去用他，但是有的时候使用他可以给你带来方便，比如你一进到某个页面就要跳转到另一个URL。\r\n\r\n他的用法：\r\n&lt;jsp:forward&gt;操作将客户端所发出的请求从当前页面转交到另一个HTML或JSP页面。\r\n&lt;jsp:forward&gt;标签之后的程序将不会在执行。\r\n\r\n语法格式：\r\n&lt;jsp:forward page={“ relativeURL ” | “ &lt;%=urlExpress%&gt; ”}”  /&gt;\r\n或\r\n&lt;jsp: forward page={“ relativeURL ” | “ &lt;%=urlExpress%&gt; ”}”   &gt;\r\n                &lt;jsp:param name=“pn” value=“{ pv | &lt;%=expression %&gt;}”/&gt;*\r\n&lt;/jsp: forward &gt;\r\n\r\npage :可以是一个相对路径，即你所要重新导向的网爷位置，或是表达式能运算出来的相对路径", "Konwledge_Point": "树中的独立集", "Question": ["jsp动作元素的用处", ["问的有点菜鸟 我明白MVC模式 所以对jsp的动作元素不懂 跳转处理不是用servlet吗 jsp用来显示页面吗 为什么还要用到动作元素", "\n如", "jsp:forward", " "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to replace the URL in your embed code. like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;div class=\"fb-like\" data-href=\"&amp;lt;?=$current_url?&amp;gt;\" data-send=\"true\" data-width=\"450\" data-show-faces=\"true\"&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All you need to replace &lt;code&gt;$current_url&lt;/code&gt; variable with appropriate url&lt;/p&gt;\n\n&lt;p&gt;However, if you omit the the &lt;code&gt;data-href&lt;/code&gt; it will use the current URL (XFBML version). &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何在页面中添加动态的facebook like按钮？  [关闭]", ["\n\n", "I am new to this site. ", "\n\n", "The reason I said, \"Dynamic..\" is because, I know how to create the like button, but that is for one page. But, I am building a news website and instead of manually entering the Facebook code on each news and article, I would like that to happen automatically on the new and dynamically-created pages so I won't have to put them each time I publish an Article on the page. ", "\n\n", "Usually my pages URL will be like www.site.com/articles.php?id=12 ", "\n\n", "So the id, is the only thing it changes, so I don't know what to do after that. ", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You are meant to distinguish between subcommands first, and then call &lt;code&gt;Parse&lt;/code&gt; on the right &lt;code&gt;FlagSet&lt;/code&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;f1 := flag.NewFlagSet(\"f1\", flag.ContinueOnError)\nsilent := f1.Bool(\"silent\", false, \"\")\nf2 := flag.NewFlagSet(\"f2\", flag.ContinueOnError)\nloud := f2.Bool(\"loud\", false, \"\")\n\nswitch os.Args[1] {\n  case \"apply\":\n    if err := f1.Parse(os.Args[2:]); err == nil {\n      fmt.Println(\"apply\", *silent)\n    }\n  case \"reset\":\n    if err := f2.Parse(os.Args[2:]); err == nil {\n      fmt.Println(\"reset\", *loud)\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"http://play.golang.org/p/eaEEx_EReX\"&gt;http://play.golang.org/p/eaEEx_EReX&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在GoLang中定义独立的标志集", ["\n\n", "The Go documentation (", "http://golang.org/pkg/flag/", ") says:", "\n\n", "\n  ", "The FlagSet type allows one to define independent sets of flags, such as to implement subcommands in a command-line interface.", "\n", "\n\n", "I need this functionality but I can't figure out how to persuade the flag pkg to do it. When I define two FlagSets, parsing one of them will give me errors and warnings if the commandline has flags that are meant for the second one. Example:", "\n\n", "f1 := flag.NewFlagSet(\"f1\", flag.ContinueOnError)\napply := f1.Bool(\"apply\", false, \"\")\nsilent := f1.Bool(\"silent\", false, \"\")\nif err := f1.Parse(os.Args[1:]); err == nil {\n    fmt.Println(*apply, *silent)\n}\nf2 := flag.NewFlagSet(\"f2\", flag.ContinueOnError)\nreset := f2.Bool(\"reset\", false, \"\")\nif err := f2.Parse(os.Args[1:]); err == nil {\n    fmt.Println(*reset)\n}\n", "\n\n", "I get all sorts of warnings if I try to do ", "cmd -apply", " OR ", "cmd -reset", ". I want to keep these FlagSets separate because I want to only have ", "-silent", " work for ", "-apply", ".", "\n\n", "What am I missing?", "\n    "]], "Tag": "算法设计"}
{"Answer": "如果使用的是java8，可以使用lambda表达式哦", "Konwledge_Point": "树中的独立集", "Question": ["Java语言怎么在函数里定义独立的线程函数，或者不用函数定义线程呢，有没有例子参考", ["Java语言怎么在函数里定义独立的线程函数，或者不用函数定义线程呢，有没有例子参考"]], "Tag": "算法设计"}
{"Answer": "参考：http://zhidao.baidu.com/link?url=vfGzj4fDQL0ZDAvHwnD37WZrMOV6kmiwiFsCrv1gP2omsdDUsjNUb1GuSM4O6kxNL9pGYrwzVfBCWXWQL4wR5_", "Konwledge_Point": "树中的独立集", "Question": ["C++求最大加权独立集。只要思路就好了，代码我自己写", ["假设有A，它提供一个干扰半径，B为一个集合，集合中每一个元素提供位置坐标和一个权重。如果两个元素半径小于干扰半径，则不能放入一个集合中，如果两位置距离大于等于干扰半径，则可以。求出最大权重的集合，集合的权重为集合中元素的权重之和。", "\n\n", "我已经想了好久好久了QAQ 但是写出来的一个办法会导致内存泄漏。", "\n拜托大神给一个思路就好了，代码我自己写。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;if(max(2, 3) !&amp;#61; 3)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    …&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["c语言为什么“函数调用必须在一条独立的语句中完成”是错的，可以举个简单例子说明一下嘛", ["为什么c语言中“函数调用必须在一条独立的语句中完成”是错的，可以举个简单例子说明一下吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;多写写题&amp;#xff0c;自己动手慢慢写点小项目&amp;#xff0c;在实战中成长是最快的&lt;br /&gt;高人指点、秘籍宝典&lt;br /&gt;其实想想&amp;#xff0c;任何一项技术或者技能&amp;#xff0c;成为高手的学习过程和学习资源都差不多&amp;#xff0c;编程语言也是&amp;#xff1a;&lt;br /&gt;1.如果把学技术比作蚂蚁吃大象&amp;#xff0c;大处着眼可以让你站的远一点观察&amp;#xff0c;消除刚开始学习时候的恐惧感&amp;#xff0c;大象包括头、四肢、身体、尾巴这几个部分&amp;#xff0c;目前主流的编程语言也包括运行环境、开发工具、基本语法、开源框架这几样东西。&lt;br /&gt;2.蚂蚁吃大象很难&amp;#xff0c;但是吃一粒大米相对简单&amp;#xff0c;所以只需要把大象拆解成N个米粒大小的部小任务&amp;#xff0c;吃大象的任务就只是时间问题&amp;#xff0c;从小处着手就是从哪个部位开始吃&amp;#xff0c;可以解决你学习新技术无从下手的问题。&lt;br /&gt;一个编程语言基本的学习过程就是&amp;#xff1a;1&amp;#xff09;环境搭建和配置、2&amp;#xff09;HelloWorld、3&amp;#xff09;开发工具安装和使用&amp;#xff0c;4&amp;#xff09;代码编写和调试&amp;#xff0c;5&amp;#xff09;开源框架&amp;#xff0c;6&amp;#xff09;项目实践。这里面每个过程都可以分解成更小的目标任务&amp;#xff0c;学的时候如果觉得太难就继续拆解。把整个学习任务拆解成一天之内可以完成的小目标。&lt;br /&gt;3.任务拆解以后给自己制定详细计划&amp;#xff0c;一次一个目标&amp;#xff0c;严格执行&amp;#xff0c;密集性练习&amp;#xff0c;密集练习是加深记忆的最好方法。&lt;br /&gt;4.最好找个老师&amp;#xff0c;一句指点可以让你少走很多弯路&amp;#xff0c;或者买本书跟着课本学。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["话说自学独立编程能力，", ["话说大师们，自学，能独立编程了不😂，看完代码视频就忘，咋个操作的，独立编程"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;#include &amp;#34;STC12C5A60S2.h&amp;#34;//改你的单片机头文件&lt;br /&gt;#include &amp;#34;intrins.h&amp;#34;&lt;/p&gt;\n&lt;p&gt;typedef unsigned char uchar;&lt;br /&gt;typedef unsigned int uint;&lt;/p&gt;\n&lt;p&gt;sbit key_a&amp;#61;P3^1;//定义按键&amp;#xff08;从左向右&amp;#xff09;&lt;br /&gt;sbit key_b&amp;#61;P3^0;&lt;/p&gt;\n&lt;p&gt;#define LED P2//宏定义&amp;#xff0c;把整个P2口定义为LED&lt;/p&gt;\n&lt;p&gt;void delay(uchar i)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    while(i--);&lt;/span&gt;&lt;br /&gt;}&lt;/p&gt;\n&lt;p&gt;void main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    LED &amp;#61; 0xfe;//如果你的LED灯位高电平发亮&amp;#xff0c;值就是0x01&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    while(1)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(key_a!&amp;#61;1)//判断&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            delay(500);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            if(key_a!&amp;#61;1)//再次判断&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            {&lt;!-- --&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;            delay&lt;span class=\"hljs-comment\"&gt;(5000)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n            LED &amp;#61; _crol_&lt;span class=\"hljs-comment\"&gt;(LED,1)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//LED左移1位&amp;#xff0c;根据LED和管脚匹配&amp;#xff0c;灯右移&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(!key_a)&lt;/span&gt;;\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_a!&amp;#61;1 || key_b!&amp;#61;1)&lt;/span&gt;\n    {\n        delay&lt;span class=\"hljs-comment\"&gt;(500)&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_a!&amp;#61;1 || key_b!&amp;#61;1)&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_a!&amp;#61;1)&lt;/span&gt;\n            {\n                delay&lt;span class=\"hljs-comment\"&gt;(5000)&lt;/span&gt;;\n                LED &amp;#61; _crol_&lt;span class=\"hljs-comment\"&gt;(LED,1)&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(!key_a)&lt;/span&gt;;\n            }\n            \n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(key_b!&amp;#61;1)&lt;/span&gt;\n            {\n                delay&lt;span class=\"hljs-comment\"&gt;(5000)&lt;/span&gt;;\n                LED &amp;#61; _cror_&lt;span class=\"hljs-comment\"&gt;(LED,1)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//灯左移&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;(!key_b)&lt;/span&gt;;\n            }\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C51单片机编程独立按键", ["问题遇到的现象和发生背景", "\n", "独立按键控制单颗LED灯位移", "烧录后只有D1LED灯亮；按按键没有反应", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include <REGX52.H>", "\n    unsigned char LEDNum;\nvoid Delay(int t)\n{\n    ", "while", "(t--)\n    {\n                unsigned char i, j;\n\n                i = 12;\n                j = 169;\n                ", "do", "\n                {\n                    ", "while", " (--j);\n                } ", "while", " (--i);\n  }\n}\nvoid mian()\n{\n    ", "P2", "=~0x01;\n    ", "while", " (1)\n    {\n            ", "if", "(", "P3_1", "==0)\n            {\n                Delay(20);\n                ", "while", "(", "P3_1", "==0);\n                Delay(20);\n                \n                LEDNum++;\n                ", "if", "(LEDNum>=8)\n                    ", "LEDNum", "=0;\n                ", "P2", "=~(0x01<<LEDNum);\n            }\n                \n                ", "if", "(", "P3_0", "==0)\n            {\n                Delay(20);\n                ", "while", "(", "P3_0", "==0);\n                Delay(20);\n                \n                ", "if", "(", "LEDNum", "==00)\n                    ", "LEDNum", "=7;\n                ", "else", "\n                    LEDNum--;\n                ", "P2", "=~(0x01<<LEDNum);\n            }\n        }\n}\n\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/96698899907616.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;这个里面可以设置显示工具栏&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["idea顶部工具栏独立成窗口", ["问题描述：IDEA打开项目会同时出现两个窗口，一个窗口没有了工具栏，一个窗口是空的，如下图一，二。", "造成原因：在一次插件更新后，重启IDEA，再次打开出现了现在情况。", "尝试的操作：关闭，重启IDEA，重启电脑都没用。", "请问大家有没有遇见过相似的问题，或者有好的解决办法呢？", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;“Devil组”引证GPT后的撰写&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;错误。数据独立性是指数据的逻辑独立性和物理独立性&amp;#xff0c;这两者是相互依存的&amp;#xff0c;而不是相互独立的。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;错误。第六个不满足1NF要求&amp;#xff0c;因为部门成员和部门总经理这两个属性是多值属性&amp;#xff0c;应该将其拆分成单值属性&amp;#xff0c;例如将部门成员拆分成员工编号和成员工姓名两个属性&amp;#xff0c;将部门总经理拆分成总经理编号和总经理姓名两个属性。这样才能满足1NF的要求&amp;#xff0c;即属性都是原子性的。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["数据独立性是指应用程序数据的逻辑和物理独立性是相互独立的", [" 判断题", "5.数据独立性是指应用程序数据的逻辑和物理独立性是相互独立的    (     )", "6.部门(部门号，部门名，部门成员，部门总经理)满足1NF要求。  (", "第6个为什么不是1nf，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;defineProps必须要放在setup里面才可以&amp;#xff0c;我们可以换个思路&amp;#xff0c;只将参数提出在一个独立文件中&amp;#xff0c;解决方法如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; props.js\n&lt;span class=\"hljs-keyword\"&gt;export&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt; {\n  apiData: {\n    type: &lt;span class=\"hljs-built_in\"&gt;Array&lt;/span&gt;,\n    default: &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt; {\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; [];\n    },\n  },\n  name: {\n    type: &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;,\n  },\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;//index.vue\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;User&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;index.vue页面&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-attr\"&gt;click&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleTest&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;点击获取props&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;setup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; propsData &lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;./props&amp;#34;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; props &amp;#61; &lt;span class=\"hljs-title function_\"&gt;defineProps&lt;/span&gt;(propsData);\n&lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(props);\n&lt;span class=\"hljs-comment\"&gt;//按钮的点击事件&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;handleTest&lt;/span&gt; &amp;#61; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) &amp;#61;&amp;gt; {\n  &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(props.&lt;span class=\"hljs-property\"&gt;apiData&lt;/span&gt;);\n};\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/771518370456180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vue3组合api开发方式，想将props 内容独立放到一个js文件中，但是在import后获取不到", ["vue3组合api开发方式，想将props 内容独立放到一个js文件中，但是在import后获取不到", "\n", "问题相关代码", "\n", "//props.js\n", "import", " { defineProps } ", "from", " ", "'vue'", "\n\nconst props = defineProps({\n    apiData: {\n        type: ", "Array", ",\n        default: ", "()", " =>", " {\n            ", "return", " []\n        }\n    }\n})\n\n", "export", " ", "default", " props\n", "\n", "//index.vue\n", "<", "template", ">", "</", "template", ">", "\n", "<", "script", " ", "setup", ">", "\n", "import", " props ", "from", " ", "'./props'", "\n\n", "//按钮的点击事件", "\n", "const", " ", "handleTest", " = (", ")=> {\n  ", "console", ".", "log", "(props.", "apiData", ") ", "//这里会报错：Cannot read properties of null (reading 'apiData')", "\n}\n\n", "</", "script", ">", "\n", "\n", "我想要达到的结果", "\n", "将props, emits 可以独立放到一个js文件中，在xx.vue内import进来，不然xx.vue内的代码会非常多"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;reg52.h&amp;gt;&lt;/span&gt;\n\nsbit btn_reset &amp;#61; P1^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;      &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 复位按键\nsbit btn_display &amp;#61; P1^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示按键\nsbit btn_increment &amp;#61; P1^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 数字增加按键\nsbit buzzer &amp;#61; P2^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;         &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 蜂鸣器\n\nunsigned char seg_code[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;] &amp;#61; {\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x3F,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x06,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x5B,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x4F,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x66,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x6D,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x7D,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x07,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x7F,  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x6F   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;\n};\n\nvoid delay(unsigned int time) {\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(time--);\n}\n\nvoid display(unsigned char digit) {\n    P0 &amp;#61; seg_code[digit];\n    delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n    P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n}\n\nvoid main() {\n    unsigned char num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (btn_reset &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 复位按键按下\n            display(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示学号后三位\n            display(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (btn_display &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示按键按下\n            display(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 显示 &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            display(&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;);\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (btn_increment &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 数字增加按键按下\n            num&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) {  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 如果数字到达 &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#xff0c;则清零\n                num &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            }\n            display(num);\n            buzzer &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 蜂鸣器响起\n            delay(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\n            buzzer &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            delay(&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);\n            P0 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;x00;\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;用 P0 口控制数码管的显示&amp;#xff0c;使用 P1 口控制按键的输入&amp;#xff0c;使用 P2 口控制蜂鸣器的输出。&lt;/p&gt;\n&lt;p&gt;在主函数中&amp;#xff0c;使用一个无限循环来不断检测按键的状态。如果复位按键按下&amp;#xff0c;则显示学号后三位&amp;#xff1b;如果显示按键按下&amp;#xff0c;则显示 1 3 5 7&amp;#xff1b;如果数字增加按键按下&amp;#xff0c;则数字加一并显示&amp;#xff0c;同时蜂鸣器响起&amp;#xff0c;如果数字到达 10&amp;#xff0c;则清零。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["动态数码管与独立按键", ["1.按下复位键，数码管从左到右显示自己的学号后三位", "2.按下一个独立按键，数码管间隔一位显示1357。", "3.按下一个独立按键，数码管显示最右边数字加一，且蜂鸣器响起。若该到9则清零。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You probably want to use some CSS&lt;/p&gt;\n\n&lt;p&gt;Rewrite&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;center align=\"right\"&amp;gt;&amp;lt;img src='images/skins/&amp;lt;?php echo\n $data['SavSkin'] ?&amp;gt;.png' width=\"580\" height\"110\"&amp;gt; &amp;lt;/center&amp;gt;&amp;lt;/p&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;as&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;div style=\"float:right;\"&amp;gt;&amp;lt;img src=\"images/skins/&amp;lt;?php echo $data['SavSkin'] ?&amp;gt;.png\" width=\"580\" height\"110\" /&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["页面中的两个独立部分", ["\n\n", "I want to make two different portions for an image to be shown on the right side and some code on the left.", "\n\n", "Here is the code that you'll understand seeing", "\n\n", "<h2><?php echo $data['user'] ?> - Profile Page</h2>\n<center><p id =\"greet\" align=\"left\">Next Generation Gaming - <?php echo $title ?></p></center>\n<p><center align=\"right\"><img src='images/skins/<?php echo $data['SavSkin'] ?>.png' width=\"580\" height\"110\"> </center></p>\n\n<p id =\"greet\"><?php echo \"Banned : \".$pban ?></p>\n<p id =\"greet\">Money : <?php echo $data['money'] ?></p>\n<p id =\"greet\">Banked : <?php echo $data['Bank'] ?></p>\n<p id =\"greet\">Kills : <?php echo $data['kills'] ?></p>\n\n<p class='text-alert' id =\"greet\">Kill Death Ratio : <?php\n$kd = $data['kills'] / $data['deaths']; echo round($kd, 2); ?>\n</p>\n\n<p id =\"greet\">Admin Kills : <?php echo $data['AdminKills'] ?></p>\n<p id =\"greet\">Cookies : <?php echo $data['cookies'] ?></p>\n<p id =\"greet\">Cakes : <?php echo $data['cakes'] ?></p>\n<p id =\"greet\">Biscuits : <?php echo $data['biscuits'] ?></p>\n<p id =\"greet\">Icecreams : <?php echo $data['icecreams'] ?></p>\n<p id =\"greet\">Race Won : <?php echo $data['RaceWon'] ?></p>\n<p id =\"greet\">Quiz Won : <?php echo $data['ReactionTestWon'] ?></p>\n<p id =\"greet\">Command Used : <?php echo $data['TotalCmdsUsed'] ?></p>\n<p id =\"greet\">Total Warnings : <?php echo $data['TotalWarnings'] ?></p>\n<p id =\"greet\">Total Logins : <?php echo $data['TotalLogins'] ?></p>\n<p id =\"greet\">Registered Date : <?php echo $data['RegisteredDate'] ?></p>\n<p id =\"greet\">Last Login : <?php echo $data['LastOnlineDate'] ?></p>\n", "\n\n", "On the second like you could see that i have added an image", "\n\n", "<p><center align=\"right\"><img src='images/skins/<?php echo $data['SavSkin'] ?>.png' width=\"580\" height\"110\"> </center></p>\n", "\n\n", "What i was trying to do is make that image to be shown on the right side of the page and the rest of them to the left.\nThrough what way could it be possible?", "\n    "]], "Tag": "算法设计"}
{"Answer": "独立存储是只能将数据存储到应用的数据区，不能指定位置的，这是系统的限制。", "Konwledge_Point": "树中的独立集", "Question": ["Silverlight中通过独立存储，怎么将文件保存到指定路径下？", ["保存按钮的代码如下：", "\n\n", " private void btnSave_Click(object sender, RoutedEventArgs e)\n        {\n            string fileContent = this.txtContents.Text;\n            using (var storage = IsolatedStorageFile.GetUserStoreForApplication())\n            {\n                string filePath = System.IO.Path.Combine(@\"C:\\Users\\v-yanjxu\\Documents\\Visual Studio 2013\\Projects\", this.txtFileName.Text);\n                IsolatedStorageFileStream stream = storage.OpenFile(filePath, FileMode.OpenOrCreate);\n                StreamWriter sw = new StreamWriter(stream);\n                sw.Write(fileContent);\n                sw.Close();\n                stream.Close();\n            }\n            GetStorageData();\n\n        } \n", "\n\n", "原本filePath=“File1.txt”；,这样保存是没有问题的，可是我要是把filePath改成filePath=System.IO.Path.Combine(@\"C:\\Users\\v-yanjxu\\Documents\\Visual Studio 2013\\Projects\", this.txtFileName.Text);时，就会报“Operation not permitted on IsolatedStorageFileStream.”的异常。难道IsolatedStorageFile保存文件时不能指定路径么？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;In broad terms, use abstraction. Provide interfaces for persistence, and write two implementations for that, one based on the datastore, and one based on local files. Then, write a separate main/init module for each platform, which instantiates the appropriate persistence interface, and passes it to your main application to use.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在Go中合并独立的网络应用和GAME", ["\n\n", "I'm working on a very simple web app, written in Go language.\nI have a standalone version and now port it to GAE. It seems like there is very small changes, mainly concerning datastore API (in the standalone version I need just files).\nI also need to include appengine packages and use init() instead of main().", "\n\n", "Is there any simple way to merge both versions? As there is no preprocessor in Go, it seems like I must write a GAE-compatible API for the standalone version and use this mock module for standalone build and use real API for GAE version. But it sounds like an overkill to me.", "\n\n", "Another problem is that GAE might be using older Go version (e.g. now recent Go release uses new template package, but GAE uses older one, and they are incompatible). So, is there any change to handle such differences at build time or on runtime?", "\n\n", "Thanks,\nSerge", "\n\n", "UPD:", " Now GAE uses the same Go version (r60), as the stable standalone compiler, so the abstraction level is really simple now.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;首先你要明白&amp;#xff0c;你所提到的问题存在两个概念&amp;#xff0c;一个是事件一个是概率。&lt;/li&gt;&lt;li&gt;独立针对概率&amp;#xff0c;只要满足于独立公式也就是&lt;code class=\"language-javascript\"&gt;两个事件概率相乘就得到两个事件同时发生的概率&lt;/code&gt;就独立&amp;#xff0c;而交集针对事件&amp;#xff0c;只要&lt;code class=\"language-javascript\"&gt;两个事件可以同时发生&lt;/code&gt;那就是有交集。&lt;/li&gt;&lt;li&gt;两者不存在什么直接关联&amp;#xff0c;只能说独立事件之间有可能有交集有可能没有&amp;#xff0c;那不就是讲废话吗。&lt;/li&gt;&lt;li&gt;举个例子只要其中一个为不可能事件那就不可能有交集了不是吗&amp;#xff0c;太阳从西边出来是一个事件&amp;#xff0c;且概率为0&amp;#xff0c;不管是广东人穿短袖也好还是穿棉裤也好都跟它是独立事件&amp;#xff0c;但是它穿啥和太阳西边出来都不可能同时发生对吗。&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立事件之间有交集吗？", ["从独立事件概率公式来看，应该是有的，因为联合概率为两个事件乘积。设两事件交为空，空的概率不-定为空，对吗？如，事件1为长沙人穿棉衣，事件2为广东人穿短袖，两事件独立，交集为空，联合概率为两者概率乘积，通常不为0。请指导。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这个涉及到外部中断的问题&amp;#xff0c;题主学到外部中断部分就可以自己写出来了。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["一个独立按键控制流水灯开关", ["如何用独立按键(k1)来控制流水灯", "按一下打开，在按一下关闭。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I do not know of any software to do this. It would probably not be hard to script this using the standard command line svn client. I.e. have a batch/shell script that runs regularly and checks in everything that has changed.&lt;/p&gt;\n\n&lt;p&gt;That said, I would &lt;em&gt;very strongly&lt;/em&gt; advise against doing this!&lt;/p&gt;\n\n&lt;p&gt;The normal working model of source control is that everyone has a local copy to work in, then checks in their changes to a central repository.&lt;/p&gt;\n\n&lt;p&gt;The explicit manual checkin makes sure you only check in stuff that works (generally) and lets you give valuable checkin comments.&lt;/p&gt;\n\n&lt;p&gt;Then the server can be updated with a known good version from the source control repository.&lt;/p&gt;\n\n&lt;p&gt;It sounds like you are working on a production system. I'd strongly advise considering using a dev environment(s) and the above approach.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["好的独立svn客户端", ["\n\n", "I'm currently working with partner on a PHP project.", "\n\n", "We both edit directly to a local server (all files are stored on the server, which is also running a WAMP stack).\nI'm looking for an SVN client that will monitor and save all changes to the htdocs folder, and will update a remote SVN repository, through the web.", "\n\n", "It would be a great bonus if I could manipulate the SVN client through a web-interface.", "\n\n", "For example, say I save ", "file1.php", " to the server. It would update ", "file1.php", " on the svn website.\nIf I would suddenly discover that my latest revisions to the file are bad, I could head over to the server (or use some web interface from my computer), and replace ", "file1.php", " with an older revision.", "\n\n", "I don't want to just install an SVN server on our local machine because I would always like to have a copy saved remotely with the latest changes.", "\n\n", "Any recommendations?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的python版本是什么&amp;#xff0c;我试了一下&amp;#xff0c;是不报错的我的版本是3.5。应该和你的python版本有关系&amp;#xff0c;有可能openpyxl在最新的版本下有bug。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["excel里面有很多个工作表，怎么用python,给每个表独立出单独的新表，并表名为文件名", ["excel里面有很多个工作表，怎么用python,给每个表独立出单独的新表，并表名为文件名"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;matplotlib支持交互式绘图&amp;#xff0c;这是我们最常使用的方式。此外&amp;#xff0c;matplotlib也可以方便地嵌入到多个GUI库中&amp;#xff0c;比如PyQt和wxPython等。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas\nfrom PyQt5 import QtCore, QtWidgets,QtGui\nimport sys\n\nmatplotlib.use(&amp;#39;Qt5Agg&amp;#39;)\n\n\nclass My_Main_window(QtWidgets.QDialog):\n    def __init__(self,parent&amp;#61;None):\n        super(My_Main_window,self).__init__(parent)\n        \n        self.figure &amp;#61; plt.figure()\n        self.canvas &amp;#61; FigureCanvas(self.figure)\n        self.button_plot &amp;#61; QtWidgets.QPushButton(&amp;#34;绘制&amp;#34;)\n\n        self.button_plot.clicked.connect(self.plot_)\n        \n        layout &amp;#61; QtWidgets.QVBoxLayout()\n        layout.addWidget(self.canvas)\n        layout.addWidget(self.button_plot)\n        self.setLayout(layout)\n\n    def plot_(self):\n        x &amp;#61; np.linspace(0, 2*np.pi, 200)\n        y &amp;#61; np.sin(x)\n        ax &amp;#61; self.figure.add_axes([0.1,0.1,0.8,0.8])\n        ax.plot(x, y)\n        self.canvas.draw()\n\nif __name__ &amp;#61;&amp;#61; &amp;#39;__main__&amp;#39;:\n    app &amp;#61; QtWidgets.QApplication(sys.argv)\n    main_window &amp;#61; My_Main_window()\n    main_window.show()\n    app.exec()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Matplotlib绘图窗口", ["用matplotlib画图，会单独弹出绘图窗口，有没有办法让图表在主窗口显示而不弹出独立窗口", "\n\n", "窗口的搭建用的是PyQt5，想把matplotlib的绘图结果直接在PyQt5搭建的图形界面里显示"]], "Tag": "算法设计"}
{"Answer": "不好意思 忽略了参数 :cry: \r\n\r\nfunction getDepInfoJson(depId){  \r\n    var ret;  \r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: urlHead +\"getDepInfo.act\",\r\n        data: {  \r\n            \"departmentId\":depId\r\n        },\r\n        success: function (data, status){  \r\n            if(\"success\"==status){  \r\n                ret = data;  \r\n                //alert(\"callBack data:\" + data +\"  ret:\"+ret);  \r\n            }else{  \r\n                $.messager.alert('系统信息',\"访部服务器发生错误！\",'warning');  \r\n            } \r\n        },\r\n        async: false        //改为同步请求\r\n    });\r\n    return ret;  \r\n}", "Konwledge_Point": "树中的独立集", "Question": ["如何将jqery ajax请求代码独立出来？", [" jsonResult = getDepInfoJson(Department.id);  //此处调用独立的 jquery post 请求", "\n\n", "function getDepInfoJson(depId){\n    var ret;\n    $.post(urlHead + 'getDepInfo.action', {\n        \"departmentId\":depId}, function(data, status){\n            if(\"success\"==status){\n                ret = data;\n                //alert(\"callBack data:\" + data +\"  ret:\"+ret);\n            }else{\n                $.messager.alert('系统信息',\"访部服务器发生错误！\",'warning');\n            }\n        }\n    );\n    alert(\"继续ret:\"+ ret);\n    return ret;\n}", "\n\n", " 为什么return前必须加alert()，才能返回值，且alert()时，输出为 “ret:undefined”?"]], "Tag": "算法设计"}
{"Answer": "外网独立ip是需要向isp租用的，哪里是什么架设虚拟机、vpn就有的。内网ip这个可以随便分配，在你的虚拟机的网卡上随便输入就可以了。", "Konwledge_Point": "树中的独立集", "Question": ["请教下怎么让VM虚拟机有独立的IP", ["请教下怎么让VM虚拟机有独立的IP，有人说VPN，但是不懂，请大神赐教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;接口只是一个规范&amp;#xff0c;不存在你说的循环应用问题。接口规定他的实现类必须实现接口中所有的抽象方法。如果有同名的方法只实现一个。&lt;/p&gt;\n\n&lt;p&gt;调用就是:&lt;/p&gt;\n\n&lt;p&gt;定义接口&amp;#xff0c;而创建他的任意一个实现类都可以。&lt;/p&gt;\n\n&lt;p&gt;A a &amp;#61; new B();&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C++ 接口定义与独立库实现的引用（循环引用）", ["现在假如有库A中主要是实现一系列业务处理，但是由于业务场景需要，部分业务会根据不同客户有不同的实现（即多态）。于是在A中定义了接口(多个)，项目在实施时根据不同的客户再新建库B（或更多的C、D。。。）中实现A中的接口。请问我在A中怎样调用B库的实现代码？", "\n\n", "相当于B继承A并实现接口，A又要引用B来调用具体的实现。烦请大侠们赐教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;手打了示意&amp;#xff0c;看一下。手打不易如有收获请采纳。&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-type\"&gt;bit&lt;/span&gt; g_flagkey1&amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;bit&lt;/span&gt; g_flagkey2&amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)\n{\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n  {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (key1 &amp;#61;&amp;#61; DOWN)\n    {\n      g_flagkey1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n      g_flagkey1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n    }\n\n   &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (key2 &amp;#61;&amp;#61; DOWN)\n    {\n      g_flagkey2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n      g_flagkey2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;RESET&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((g_flagkey1 &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;) &amp;amp;&amp;amp; (g_flagkey2 !&amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;))\n    {\n      //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (g_flagkey2 &amp;#61;&amp;#61; &lt;span class=\"hljs-keyword\"&gt;SET&lt;/span&gt;)\n    {\n      //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        //&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; something\n    }\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立按键控制程序之间的相互切换", ["如何实现按下按键1一直执行第一个程序，按下按键2执行第二个程序，重点是如何在已经按下按键一且执行时，检测到按下按键二，去执行第二个程序？也就是在程序执行过程中按下按键了，如何让单片机知道"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/xiaowen901018/article/details/51212347", "Konwledge_Point": "树中的独立集", "Question": ["求n个整数中倒数第二小的数。", ["Problem Description", "\n求n个整数中倒数第二小的数。", "\n每一个整数都独立看成一个数，比如，有三个数分别是1，1，3，那么，第二小的数就是1。", "\n\n", "Input", "\n输入包含多组测试数据。", "\n输入的第一行是一个整数C，表示有C测试数据；", "\n每组测试数据的第一行是一个整数n，表示本组测试数据有n个整数（2<=n<=10），接着一行是 n个整数 (每个数均小于100);", "\n\n", "Output", "\n请为每组测试数据输出第二小的整数，每组输出占一行。", "\n\n", "Sample Input", "\n2", "\n2", "\n1 2", "\n3", "\n1 1 3", "\n\n", "Sample Output", "\n2", "\n1"]], "Tag": "算法设计"}
{"Answer": "不同的cpui不同，比如对于支持smt（Intel 的商品名称叫做超线程技术）的cpu来说，每个核心有2个sa，独立2套寄存器，但是共享L1 L2缓存。\r\n任何情况下，一个cpu核心（逻辑 处理器，对于smt处理器的每个核心，有2个逻辑核心），只能执行一个线程。", "Konwledge_Point": "树中的独立集", "Question": ["单核CPU多线程中各个线程的缓存是否是独立的，是对这个CPU的高速缓存和寄存器做了逻辑划分吗？", ["假设单核CPU的情况下。（既高速缓存都是一样的）", "\n\n", "一 一个变量a被线程A和线程B共享，A、B线程同时做a++操作。CPU切换时间片实际还是顺序操作，会有问题吗？如何理解？", "\n二 一个变量a被线程A和线程B共享，A写，B读，会出现B读不到最新的值吗？", "\n\n", "无论是单核处理器还是多核处理器，当线程数量增多时，多个线程使用同一个核。还是这个例子，假设A线程和B线程共享主存数据a变量，A、B线程读入到CPU缓存后，到底是一个缓存呢？还是各自线程看到的缓存是不一样的？"]], "Tag": "算法设计"}
{"Answer": "System.Diagnostics.Process.Start(\"另一个exe的路径文件名.exe\");", "Konwledge_Point": "树中的独立集", "Question": ["wpf应用程序中如何实现点击某个按钮，打开另一个独立的wpf程序", ["如题，需要在一个wpf程序中实现点击按钮，打开另一个独立的WPF程序，wpf程序的地址是已知的，且两个程序间不需要关联操作，只需要打开即可。"]], "Tag": "算法设计"}
{"Answer": "&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"%&gt;\r\n\r\n这样就可以了，如果你是使用weblogic服务器，对页面检查严格，如果一个页面中有多个\r\npageEncoding=\"UTF-8\"就会报错的", "Konwledge_Point": "树中的独立集", "Question": ["在JSP文件中，相同的页面结构怎么制作？", [":D 大家好，又来麻烦各位了。", "\n\n", "之前在PHP中可以通过include这种方式来调用，比如说侧边的栏目，顶部的导航，页脚部份，但是在JSP中却发现一个问题：如果你的JSP文件不加页面的头部，在eclipse中是无法保存的（因为无法确定页面的编码问题）。。。纠结，如果加了，那么调用其它文件的这个文件最终编译出来就会有很多页面头部，这种结构看着很头疼啊。", "\n\n", "不知道各位前辈是怎么处理这个问题的呢？", "\n\n", "其实我想达到的目的很简单：一个系统里，通用一个头部、侧边导航、底部页脚，而且最终调用了这些文件的那个文件的结构是合理的。还请各位老师能够指点一下解决方法，先谢谢了。"]], "Tag": "算法设计"}
{"Answer": "在类申明里加上friend申明函数，在类外面定义函数。\r\nhttp://blog.chinaunix.net/uid-790245-id-2037327.html", "Konwledge_Point": "树中的独立集", "Question": ["C++ 如何提供独立的友元的函数声明？", ["《C++ Primer》第五版，中文版。242 页。", "\n能不能给个例子？看书上的描述看不明白。", "\n252 好像讲的就是这个问题。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If IE is not one of the trouble  browsers, you could create a small .NET app that embeds a web browser control and opens it to the desired page.&lt;/p&gt;\n\n&lt;p&gt;You might even be able to achieve this using Gecko:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://code.google.com/p/geckofx/\" rel=\"nofollow noreferrer\"&gt;http://code.google.com/p/geckofx/&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["将Web应用程序部署为独立可执行文件", ["\n\n", "I have a web application that I developed with the Google Web Toolkit (GWT), it is a utility application that helps make calculations when planning specific server deployments.  I want to be able to offer this application as a download on my website for people that want to use the application but don't always have internet access.", "\n\n", "I was previously able to achieve this by packaging all of files that GWT compiles (html and js) into a Nullsoft Installer Script (NSIS) that would just extract them to a temp directory and then tell Windows to open the main html file with whatever browser was the default.", "\n\n", "Recently this has given me problems, it seems that some browsers don't mind this at all while others have their own quirks and problems rendering the application useless.", "\n\n", "This application only makes 1 server call to fetch a xml file that contains the configuration data for how the calculations should be made.  There is a small php component that allows the user to save and load previous configurations but it is not a problem to disable this feature for offline standalone executable deployment.", "\n\n", "So my question is this, is there an existing framework that would allow my to package my application along with an embedded webserver so that when the application is ran it actually is running on a local web server?  Or is there an existing framework to embed a web application into a redistributable browser, so that when the user tries to open the application it automatically opens the packaged browser, that way I could be able to fine tune the offline experience to always work as desired with the packaged browser.", "\n\n", "Thanks for any replies", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先,你得确定这个你处理出来的sql是只查询一个1行中的1列,即1个值。&lt;br /&gt;由于动态sql不能直接在sql中查询出结果,必须用execute immediate或者dbms_sql去执行它,因此,可以先建立一个这样的函数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-keyword\"&gt;create&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or replace&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; get_sql_value(i_sql varchar2) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; varchar2 &lt;span class=\"hljs-keyword\"&gt;is&lt;/span&gt;\n  out_value varchar2(&lt;span class=\"hljs-number\"&gt;4000&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;execute&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;immediate&lt;/span&gt; i_sql\n    &lt;span class=\"hljs-keyword\"&gt;into&lt;/span&gt; out_value;\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; out_value;\n&lt;span class=\"hljs-keyword\"&gt;exception&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;when&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;no_data_found&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;\n    out_value :&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; out_value;\n  &lt;span class=\"hljs-keyword\"&gt;when&lt;/span&gt; others &lt;span class=\"hljs-keyword\"&gt;then&lt;/span&gt;\n    Raise_application_error(&lt;span class=\"hljs-number\"&gt;-20000&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;sqlerrm&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;;\n/\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;接下来,你就可以用这个函数把你处理的这个sql字符串包起来,它就能在你查询的时候返回对应sql的结果了,&lt;br /&gt;例:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;&lt;span class=\"hljs-attribute\"&gt;select&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; a,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; b,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; c,get_sql_value(&amp;#39;select &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; from dual&amp;#39;) from dual;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["oracle数据集里某列存储了sql，如何通过select 直接查询数据集及数据集里sql执行后的值", ["  ", "select", " decode(t.AGENCY_CODE, ", "null", ", ", "''", ", t.AGENCY_CODE || ", "'-'", " || f.name) ,\n       decode(t.COLLECBANKGUID, ", "null", ", ", "''", ", d.code || ", "'-'", " || d.name) ,\n       b.WHERESQL 规则条件,\n       regexp_count(b.WHERESQL, ", "'select'", "),\n       instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "),\n       instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", "),\n       ", "substr", "(b.WHERESQL,\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "),\n              (instr(b.WHERESQL, ", "')'", ", instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", ")) -\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "))),\n       ", "substr", "(b.WHERESQL,\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", "),\n              (instr(b.WHERESQL, ", "')'", ", instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", ")) -\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "2", ")))\n  ", "from", " fasp_t_pubbankaccount t\n  ", "left", " ", "join", " BUSFW_T_RUACCOUNTLINK a\n    ", "on", " a.BANKACCOUNTGUID = t.GUID\n  ", "left", " ", "join", " FASP_T_BUSRURULE b\n    ", "on", " b.GUID = a.RULEID\n  ", "left", " ", "join", " V_ELE_VD00006 c\n", "on", " c.guid = t.BANKGUID\n  ", "left", " ", "join", " V_ELE_VD00006 d\n    ", "on", " d.guid = t.COLLECBANKGUID\n  ", "left", " ", "join", " FASP_T_PUPS_CS_0050 ", "e", "\n    ", "on", " ", "e", ".GUID = t.BANKACCOUNTTYPE\n  ", "left", " ", "join", " V_ELE_VD00010 f\n    ", "on", " f.guid = t.AGENCY_CODE  \n\n这个语句里", "substr", "(b.WHERESQL,\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", "),\n              (instr(b.WHERESQL, ", "')'", ", instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", ")) -\n              instr(b.WHERESQL, ", "'select'", ", ", "1", ", ", "1", ")))  列显示出来是一个独立的 ", "select", " 查询语句  \n\n我想直接在上面的结果集里显示这个独立sql运行后的值\n"]], "Tag": "算法设计"}
{"Answer": "因为你传的是值，在函数内修改不会影响函数外的值，c++可以用引用传值，c得传变量类型的指针（这里得是char**，因为变量类型是char*）\r\n```\r\nvoid change(char** s1, char** s2) {\r\n    char * temp;\r\n    if (strcmp(*s1, *s2)&gt;0) {\r\n        temp = *s1;\r\n        *s1 = *s2;\r\n        *s2 = temp;\r\n    }\r\n}\r\n```\r\nc++可以这么写\r\n```\r\nvoid change(char* &amp;s1, char* &amp;s2) {\r\n    char * temp;\r\n    if (strcmp(s1, s2)&gt;0) {\r\n        temp = s1;\r\n        s1 = s2;\r\n        s2 = temp;\r\n    }\r\n}\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["请问为什么我在函数里面可以传递值，而出来到了主函数中却没有改变？？", ["#include", "\n#include", "\nint main()", "\n{", "\n    void change(char* s1, char* s2);", "\n    int i, n;", "\n    char* a = \"fwfwfw\", * b = \"compare\", * c = \"zhangkewen\", * d = \"Consolee\";", "\n    char* name[] = { a,b,c,d };", "\n    for (n = 0; n < 3; n++)", "\n    {", "\n        for (i = 0; i < 3 - n; i++)", "\n        {", "\n            change(name[i], name[i + 1]);", "\n        }", "\n    }", "\n    for (i = 0; i < 4; i++)", "\n    {", "\n        printf(\"%s\\n\", name[i]);", "\n    }", "\n}", "\nvoid change(char* s1, char* s2)", "\n{", "\n    char * temp;", "\n    if (strcmp(s1, s2)>0)", "\n    {", "\n        temp = s1;", "\n        s1 = s2;", "\n        s2 = temp;", "\n    }", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;回答还可以的话 &amp;#xff0c;还请 采纳&amp;#xff1a;&lt;br /&gt;在使用独立显卡的情况下&amp;#xff0c;屏幕显示可能会占用一部分显存&amp;#xff0c;但这不会对深度学习的性能造成重大影响&amp;#xff0c;因为独立显卡通常有更多的显存。如果显存不够&amp;#xff0c;可以考虑升级独立显卡或者使用多块独立显卡。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Python深度学习的时候屏幕显示线插在独立显卡还是集成显卡好？", ["Python深度学习的时候屏幕显示线插在独立显卡还是集成显卡好？插在独立显卡上会不会导致屏幕占用一部分的显存？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1、把独显装好。2、在集显状态下把独显驱动装好。3、进BIOS屏蔽集显。4、独显可以正常显示了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["dell服务器R720加载独立显卡，进不去系统，UEIF报错", ["戴尔服务器dell R720的显卡问题。操作系统是win2008R2。", "\n现在是安装的华硕750ti，运行ok，多个屏幕。", "\n\n", "买了技嘉gtx1650，刚出的显卡安装了。在集成显卡情况下打了驱动，设备管理显示识别了。", "\n\n", "但是切换到GTX1650显卡下启动系统，系统死活进不去。卡", "\n在开机bios页面的“disconnecting UEFI driver，please waiting........”一直进不去系统，LCD报错的说slot calble没有连接。", "\n可是显卡LED等都亮了，风扇也转，背板很烫。", "\n\n", "是硬件不兼容？还是显卡驱动问题？", "\n显卡是今年6月出来的新卡，", "\n\n", "希望板上高手指点！谢谢", "\n\n", "\n\n", "\n\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;],i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i--)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,a[i]);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["输入5个整数，逆序输出", ["示例：", "输入：", "1 2 3 4 5", "输出：", "5 4 3 2 1"]], "Tag": "算法设计"}
{"Answer": "你这个是UMP应用程序吧，需要windows 10特定版本的环境", "Konwledge_Point": "树中的独立集", "Question": ["VS2019 C# 程序怎么独立运行？", ["VS2019编译通过，并且在VS环境中编译运行都正常。", "\n生成的exe文件在bin\\x86\\Release\\AppX下，直接运行时提醒缺少m__rt100__app.dll，从下面目录拷贝到这个目录下，不提示了，但是程序还是不能正常运行出现界面。请问哪位大侠遇到过类似问题？", "\nC:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.8-rel-28605-00\\tools\\x86\\ilc\\Lib\\Runtime"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1、题主的消抖其实是无效的&amp;#xff0c;按键判断到低电平后&amp;#xff0c;延时20后&amp;#xff0c;仍然需要if判断&amp;#xff0c;然后才是while等待按键释放&amp;#xff0c;&lt;br /&gt;2、这里的取反操作是为了体现按键按下后的反应&amp;#xff0c;亮灭交替&amp;#xff0c;每次按下都改变当前led的状态&amp;#xff0c;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单片机中设置独立按键控制led状态为什么要取反", ["单片机中设置独立按键控制led状态为什么要取反", "\n", "这里取反是什么意思，求解答", "我试了不用这个取反也可以啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt; &amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-comment\"&gt;//structhttps://img-mid.csdnimg.cn/release/static/image/mid/ask/591763467946145.png &amp;#34;#left&amp;#34;)&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;\n{\n    T data &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt; &amp;lt;T&amp;gt;* next;\n    &lt;span class=\"hljs-built_in\"&gt;Node&lt;/span&gt;() :&lt;span class=\"hljs-built_in\"&gt;data&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;), &lt;span class=\"hljs-built_in\"&gt;next&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) {}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n    &lt;/span&gt;{\n        cout &amp;lt;&amp;lt; data &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n    }\n};\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;LinkList&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;LinkList&lt;/span&gt;()\n    {\n        front &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Node &amp;lt;T&amp;gt;;\n        front-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;LinkList&lt;/span&gt;(T a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)\n    {\n        front &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Node&amp;lt;T&amp;gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n        {\n            Node &amp;lt;T&amp;gt;* s &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Node&amp;lt;T&amp;gt;;\n            s-&amp;gt;data &amp;#61; a[i];\n            s-&amp;gt;next &amp;#61; front-&amp;gt;next;\n            front-&amp;gt;next &amp;#61; s;\n        }\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;PrintList&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;DeleteRe&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    Node &amp;lt;T&amp;gt;* front;\n};\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; LinkList&amp;lt;T&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;PrintList&lt;/span&gt;()\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (front-&amp;gt;next &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;empty&amp;#34;&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        Node&amp;lt;T&amp;gt;* p &amp;#61; front-&amp;gt;next;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n        {\n            p-&amp;gt;&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;();\n            p &amp;#61; p-&amp;gt;next;\n        }\n    }\n}\n&lt;span class=\"hljs-keyword\"&gt;template&lt;/span&gt;&amp;lt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;T&lt;/span&gt;&amp;gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; LinkList&amp;lt;T&amp;gt;::&lt;span class=\"hljs-built_in\"&gt;DeleteRe&lt;/span&gt;()\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (front &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    Node&amp;lt;T&amp;gt;* p &amp;#61; front;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p-&amp;gt;next)             &lt;span class=\"hljs-comment\"&gt;//&amp;amp;&amp;amp; p-&amp;gt;next-&amp;gt;next)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p-&amp;gt;next-&amp;gt;data &amp;#61;&amp;#61; p-&amp;gt;next-&amp;gt;next-&amp;gt;data)\n        {\n            Node&amp;lt;T&amp;gt;* q &amp;#61; p-&amp;gt;next-&amp;gt;next;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (q &amp;amp;&amp;amp; q-&amp;gt;data &amp;#61;&amp;#61; p-&amp;gt;next-&amp;gt;data)\n            {\n                Node&amp;lt;T&amp;gt;* r &amp;#61; q;\n                q &amp;#61; q-&amp;gt;next;\n                &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; r;\n            }\n            Node&amp;lt;T&amp;gt;* r &amp;#61; p-&amp;gt;next;\n            p-&amp;gt;next &amp;#61; q;\n            &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt; r;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            p &amp;#61; p-&amp;gt;next;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len;\n    cin &amp;gt;&amp;gt; len;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (len &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* array &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;[len];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; len; i&amp;#43;&amp;#43;)\n        {\n            cin &amp;gt;&amp;gt; array[i];\n        }\n        &lt;span class=\"hljs-function\"&gt;LinkList&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;L1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(array, len)&lt;/span&gt;&lt;/span&gt;;\n\n        L1.&lt;span class=\"hljs-built_in\"&gt;DeleteRe&lt;/span&gt;();\n        L1.&lt;span class=\"hljs-built_in\"&gt;PrintList&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["【单链表删除重复数据】在本地vs上运行没有问题，上传到oj系统是答案错误，请问有什么错误呀？实在找不出来了", ["题目内容", "\n", "给定一个升序的单链表，删除单链表中的重复数据项，只保留独立的元素。", "\n", "\n", "\n", "问题相关代码", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "template", " <", "class", " ", "T", ">\nstructhttps:", "//img-mid.csdnimg.cn/release/static/image/mid/ask/591763467946145.png \"#left\")", "\n Node\n{\n    T data = ", "0", ";                    \n    ", "struct", " ", "Node", " <T>* next;  \n    ", "Node", "() :", "data", "(", "0", "), ", "next", "(", "NULL", "){}\n    ", "void", " ", "print", "()", "\n    ", "{\n        cout << data <<", "\" \"", ";\n    }\n};\n\n", "template", "<", "class", " ", "T", ">\n", "class", " ", "LinkList", "\n{\n", "public", ":\n    ", "LinkList", "()\n    {\n        front = ", "new", " Node <T>;\n        front->next = ", "NULL", ";\n    }\n    ", "LinkList", "(T a[], ", "int", " n)\n    {\n        front = ", "new", " Node<T>;\n    ", "int", " i;\n    ", "for", " (i = n - ", "1", "; i >= ", "0", "; i--)\n    {\n        Node <T>* s = ", "new", " Node<T>;\n        s->data = a[i];\n        s->next = front->next;\n        front->next = s;\n    }\n    }\n    ", "void", " ", "PrintList", "()", ";\n    ", "void", " ", "DeleteRe", "()", ";\n", "private", ":\n    Node <T>* front;\n};\n\n", "template", "<", "class", " ", "T", ">\n", "void", " LinkList<T>::", "PrintList", "()\n{\n    ", "if", " (front->next == ", "NULL", ")\n    {\n        cout << ", "\"empty\"", " ;\n    }\n    ", "else", "\n    {\n        Node<T>* p = front->next;\n        ", "while", " (p)\n        {\n            p->", "print", "();\n            p = p->next;\n        }\n    }\n}\n\n", "template", "<", "class", " ", "T", ">\n", "void", " LinkList<T>::", "DeleteRe", "()\n{ \n    ", "if", " (front == ", "NULL", ")\n    {\n        ", "return", ";\n    }\n    Node<T>* p = front ;\n        ", "while", " (p->next&&p->next ->next)\n        {\n            \n            ", "if", " (p->next->data ==p->next->next->data)\n            {\n                Node<T>* q = p->next->next;\n                ", "while", " (q && q->data == p->next ->data)\n                {\n                    q = q->next;\n                }\n                p->next = q;\n            }\n            ", "else", "\n            {\n                p = p->next;\n            }\n        }\n}\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " len;\n    cin >> len;\n    ", "if", " (len <= ", "0", ")\n    {\n        ", "return", " ", "0", ";\n    }\n    ", "else", "\n    {\n        ", "int", " *array=", "new", " ", "int", " [len];\n        ", "for", " (", "int", " i = ", "0", "; i < len; i++)\n        {\n            cin >> array[i];\n        }\n        ", "LinkList<", "int", "> ", "L1", "(array, len)", ";\n\n        L1.", "DeleteRe", "();\n        L1.", "PrintList", "();\n        ", "return", " ", "0", ";\n    }\n}\n", "\n", "运行结果及报错内容", "\n", "oj上看不到问题到底是什么", "\n", "要求用链表实现"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Okay, your problem is that you basically create three instances of application: one in &lt;code&gt;index.php&lt;/code&gt;, one in &lt;code&gt;users.php&lt;/code&gt;, one in &lt;code&gt;org.php&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Application instance is created by &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$app = new \\Slim\\App;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And that application is launched by &lt;code&gt;$app-&amp;gt;run&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;In &lt;code&gt;index.php&lt;/code&gt; you have &lt;code&gt;$app&lt;/code&gt;, which is overriten by &lt;code&gt;$app&lt;/code&gt; in &lt;code&gt;users.php&lt;/code&gt;, then overwritten by &lt;code&gt;$app&lt;/code&gt; in &lt;code&gt;org.php&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;This is the reason why &lt;code&gt;require '../src/routes/users.php';&lt;/code&gt; seems to be ignored - it's declaring &lt;code&gt;$app&lt;/code&gt;, adds routes and in the next file you overwrite &lt;code&gt;$app&lt;/code&gt; and add routes.&lt;/p&gt;\n\n&lt;p&gt;To fix this, simply remove &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$app = new \\Slim\\App;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;from everywhere but &lt;code&gt;index.php&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["将路由组织到Slim中无法正常工作的单独文件中", ["\n\n", "This is my ", "Index.php", " file:", "\n\n", "\n\n", "\n", "use \\Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse \\Psr\\Http\\Message\\ResponseInterface as Response;\nrequire '../vendor/autoload.php';\nrequire '../src/config/db.php';\n\n$app = new \\Slim\\App;\n//User Routes\nrequire '../src/routes/users.php'; // This not working\nrequire '../src/routes/org.php'; // Only This working\n\n$app->run();\n", "\n\n", ".htaccess", " file", "\n\n", "RewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^ index.php [QSA,L]\n", "\n\n", "When there is only one require file it's working fine but when adding two or multiple files then only last one working and others giving ", "page not found error", ". I'm new in slim and PHP so I have no idea what's wrong.", "\n\n", "users.php", "\n\n", "<?php\n/**\n * User: y34h1a\n * Date: 2/10/17\n * Time: 3:47 AM\n */\nuse \\Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse \\Psr\\Http\\Message\\ResponseInterface as Response;\n\n$app = new \\Slim\\App;\n\n//Get All Customers\n$app->get('/api/users', function (Request $request, Response $response){\n    $sql = \"Select * from users\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $users['users'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($users);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//GET SINGLE USER\n$app->get('/api/user/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $sql = \"Select * from users WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $user['user'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($user);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//ADD USER\n$app->post('/api/user/add', function (Request $request, Response $response){\n    $name = $request->getParam('name');\n    $email = $request->getParam('email');\n    $password = $request->getParam('password');\n    $sql = \"Insert into users(name,email, password) values (:name, :email, :password)\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $password);\n\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Customer Added\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n//UPDATE USER\n\n$app->put('/api/user/update/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $name = $request->getParam('name');\n    $email = $request->getParam('email');\n    $password = $request->getParam('password');\n\n    $sql = \"UPDATE users SET \n              name = :name, \n              email = :email, \n              password = :password \n            WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':email', $email);\n        $stmt->bindParam(':password', $password);\n\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Customr UPDATED\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//DELETE USER\n$app->get('/api/user/delete/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $sql = \"DELETE FROM users WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n        $stmt->execute();\n        $db = null;\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n", "\n\n", "org.php", "\n\n", "\n\n", "\n", "use \\Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse \\Psr\\Http\\Message\\ResponseInterface as Response;\n\n$app = new \\Slim\\App;\n\n//Get All Orgs\n$app->get('/api/orgs', function (Request $request, Response $response){\n    $sql = \"Select * from org\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $users['orgs'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($users);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n//GET SINGLE ORG\n$app->get('/api/org/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $sql = \"Select * from org WHERE id = $id\";\n\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n\n        $stmt = $db->query($sql);\n        $user['org'] = $stmt->fetchAll(PDO::FETCH_OBJ);\n        $db = null;\n        echo json_encode($user);\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n\n//ADD ORG\n$app->post('/api/org/add', function (Request $request, Response $response){\n    $user_id = $request->getParam('user_id');\n    $name = $request->getParam('name');\n    $address = $request->getParam('address');\n    $sql = \"Insert into org(user_id, name, address) values (:user_id, :name, :address)\";\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':user_id', $user_id);\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':address', $address);\n\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Organization Added\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n\n//UPDATE ORG\n$app->put('/api/org/update/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $name = $request->getParam('name');\n    $address = $request->getParam('address');\n\n    $sql = \"UPDATE org SET \n              name = :name, \n              address = :address \n            WHERE id = $id\";\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n\n        $stmt->bindParam(':name', $name);\n        $stmt->bindParam(':address', $address);\n        $stmt->execute();\n\n        echo '{\"notice\": {\"text\": \"Organization Deleted\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n\n//DELETE ORG\n$app->delete('/api/org/delete/{id}', function (Request $request, Response $response){\n    $id = $request->getAttribute('id');\n    $user_id = $request->getParam('user_id');\n    $org_id = $request->getParam('org_id');\n    $sql = \"DELETE FROM org WHERE id = $id AND user_id = $user_id\";\n    try{\n        //Get DB Object\n        $db = new db();\n        //Connect\n        $db = $db->connect();\n        $stmt = $db->prepare($sql);\n        $stmt->execute();\n        $db = null;\n        echo '{\"notice\": {\"text\": \"Sheet Deleted\"}}';\n    }catch(PDOException $e){\n        echo '{\"error\":{\"text\":'.$e->getMessage().'}';\n    }\n});\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/lengye7/article/details/90514430", "Konwledge_Point": "树中的独立集", "Question": ["flutter可以独立开发出一个完整的app了吗", ["走在最前面的闲鱼也只是部分页面或功能用的flutter吧？想入坑，但是时间很紧迫，想问大佬坑多不多"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Make the second regex group optional &lt;code&gt;?&lt;/code&gt;, i.e.:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   $string =\n    '&amp;lt;ul&amp;gt;\n    &amp;lt;li&amp;gt;\n    &amp;lt;a href=\"/nalcrom\"&amp;gt;Nalcrom&amp;lt;/a&amp;gt;\n            (Sodium Cromoglicate)\n    &amp;lt;/li&amp;gt;\n    &amp;lt;li&amp;gt;\n    &amp;lt;a href=\"/alimemazine\"&amp;gt;Alimemazine&amp;lt;/a&amp;gt;\n    &amp;lt;/li&amp;gt;\n    &amp;lt;li&amp;gt;\n    &amp;lt;a href=\"/xolair\"&amp;gt;Xolair&amp;lt;/a&amp;gt;\n            (Omalizumab)\n    &amp;lt;/li&amp;gt;\n    &amp;lt;/ul&amp;gt;';\n\n    preg_match_all('%\"&amp;gt;(.*?)&amp;lt;/a&amp;gt;\\s+(\\(.*?\\))?%i', $string, $match, PREG_PATTERN_ORDER);\n    for ($i = 0; $i &amp;lt; count($match[0]); $i++) {\n        echo  $match[1][$i] . \" \". $match[2][$i];\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Output:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Nalcrom (Sodium Cromoglicate)\nAlimemazine \nXolair (Omalizumab)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;&lt;a href=\"http://ideone.com/mxGthV\" rel=\"nofollow\"&gt;DEMO&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["PHP和正则表达式将字符串的两个独立部分提取为ONE重组变量", ["\n\n", "I have a PHP string consisting of HTML code as follows:", "\n\n", "$string =\n'<ul>\n<li>\n<a href=\"/nalcrom\">Nalcrom</a>\n        (Sodium Cromoglicate)\n</li>\n<li>\n<a href=\"/alimemazine\">Alimemazine</a>\n</li>\n<li>\n<a href=\"/xolair\">Xolair</a>\n        (Omalizumab)\n</li>\n</ul>';\n", "\n\n", "using", "\n\n", "preg_match_all($regex,$string,$matches, PREG_PATTERN_ORDER);\n\nfor ($i = 0; $i < count($matches[0]); ++$i)\n{ echo $i . \"    \" . $matches[0][$i]. \"<br>\"; }\n", "\n\n", "if I use", "\n\n", "$regex = \"^(?<=>).*?(?=(\\Q</a>\\E))^\";\n", "\n\n", "I get", "\n\n", "1 Nalcrom", "\n\n", "2 Alimemazine", "\n\n", "3 Xolair", "\n\n", "whereas if I use", "\n\n", "$regex = \"^\\(.*?\\)^\";\n", "\n\n", "I get", "\n\n", "1 (Sodium Cromoglicate)", "\n\n", "2 (Omalizumab)", "\n\n", "Trying", "\n\n", "$regex = \"^(?<=>).*?(?=(\\Q</a>\\E))(\\(.*?\\))^\";\n", "\n\n", "and variations upon it I get nothing but blank, whereas what I need is:", "\n\n", "1 Nalcrom (Sodium Cromoglicate)", "\n\n", "2 Alimemazine", "\n\n", "3 Xolair (Omalizumab)", "\n\n", "Any ideas on how I can do this? thnx", "\n    "]], "Tag": "算法设计"}
{"Answer": "es6中函数内有两层作用域，外层是创建函数参数的作用域（可以在这个作用域中设置参数的默认值）。内层是函数体的作用域，如果块作用域不算，加上全局作用域，就是三个作用域。\r\n就是说es6中函数的参数和函数体内用var声明的变量不在同一个作用域中，es5是不是也这样好像无法验证。\r\n一个函数所处的作用域是函数创建时的作用域，不是调用时的作用域。\r\n\r\n你的 y = function() { console.log(x);}是在创建函数参数的作用域中的，这里的x访问的是函数的参数x，参数x没有被赋值就是undefined，\r\n注意：参数x和函数体内用var x=3声明的变量不在同一个作用域中，不是同一个变量。\r\n如果你foo1函数没有参数x，就会在外层作用域（也就是全局作用域）中寻找x变量。\r\n\r\n用下面例子会好理解一些\r\n```\r\nvar x = 1;\r\nfunction foo1(x=2, y = function() { console.log(x); }) {//输出2\r\nvar x = 3;\r\nconsole.log(x);//输出3\r\ny();\r\n}\r\nfoo1();\r\nconsole.log(x);//输出1\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["es6 中函数参数独立作用域", ["如果参数是一个函数那么，这个函数有外层环境吗？还是说函数里能访问的变量只能是在这个作用域中声明的？", "\n例如：", "\nvar x = 1;", "\nfunction foo1(x, y = function() { console.log(x); }) {", "\n  var x = 3;", "\n  y();", "\n}", "\n\n", "foo1(); ", "\n\n", "\n", "\n\n", "上面中作为参数的匿名函数，有外层作用域吗？"]], "Tag": "算法设计"}
{"Answer": "android:orientation=\"horizontal\"改成android:orientation=\"vertical\"", "Konwledge_Point": "树中的独立集", "Question": ["如何设置 TextView 到独立的行 ?", ["程序中有 textviews：", "ramdomName 10.20 - 11.30 Monday, tue", "\n\n", "我想让 ", "ramdomName", " 在新的一行，", "10.20", " 在新的一样，", "Monday", " 也在新的一行，", "true", "在新的一行，如何设置呢？", "\n我用的下面的代码：", "\n\n", " <LinearLayout\n\n  android:id=\"@+id/widget38\"\n  xmlns:android=\"http://schemas.android.com/apk/res/android\"\n android:layout_width=\"fill_parent\" \nandroid:layout_height=\"fill_parent\" \nandroid:layout_marginLeft=\"10dip\" \nandroid:layout_marginRight=\"10dip\" \nandroid:orientation=\"horizontal\"  >\n\n\n     <TextView\n       xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       android:id=\"@+id/text1\"\n       android:layout_width=\"wrap_content\"\n       android:layout_height=\"wrap_content\"\n      android:gravity=\"center_vertical\"\n       android:textSize= \"30sp\"  />\n\n    <TextView\n           android:id=\"@+id/text2\"\n          android:layout_width=\"wrap_content\" \n    android:layout_height=\"wrap_content\" \n\n\n           android:textSize= \"30sp\"  />\n    <TextView\n           android:id=\"@+id/text6\"\n\n    android:layout_width=\"wrap_content\" \n    android:layout_height=\"wrap_content\"\n           android:text=\" - \"\n           android:textSize=\"30sp\" \n\n             />\n\n    <TextView\n           android:id=\"@+id/text3\"\n         android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n         android:textSize= \"30sp\"  />\n    <TextView\n           android:id=\"@+id/text6\"\n         android:layout_width=\"wrap_content\"\n           android:layout_height=\"wrap_content\"\n           android:orientation=\"vertical\"\n      android:textSize= \"30sp\"  />\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这里讲思路哈&amp;#xff0c;按键首先要检测电平来判断是否按下&amp;#xff0c;看你这个图&amp;#xff0c;应该是检测P32为低电平表示按键按下&amp;#xff0c;然后要消抖10ms&amp;#xff0c;再次检测&amp;#xff0c;如果还是低电平那就证明不是抖动&amp;#xff0c;具体怎么消抖看你要用延时还是用定时器了&amp;#xff0c;消抖结束要判断按键是否松开&amp;#xff0c;可以用while死等&amp;#xff0c;也可以用状态法判断&amp;#xff0c;做完这些就可以处理数码管的值了&amp;#xff0c;数码管数值加一然后灯亮。这里单个数码管静态显示还是很简单的&amp;#xff0c;直接控制P2电平就能做到。如果有用&amp;#xff0c;希望点个采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立按键控制数码管，且按下灯亮，代码怎么编写", ["\n", "89c51单片机，需要通过独立按键控制单个数码管，按一下开关数码管加一，且按下后灯亮，不按的时候灯灭。"]], "Tag": "算法设计"}
{"Answer": "你指的是下载的资源都在你的web工程里面吗？\r\n那样的话，把资源文件提取出来，不考虑安全的话用其他的服务器如 nginx 配置上地址，即可\r\nweb工程的话需要建立一张表保存记录和文件url的对应关系", "Konwledge_Point": "树中的独立集", "Question": ["如何把项目中大文件独立出来，发布的时候只发布代码？", ["有一个web项目要部署到服务器的tomcat上。但是现在这个项目内有文件资源比较大，光是提供下载的文件都有900兆多。项目其实就几十兆。现在打包一个war包有1.2G。发布起来也是很费劲。如何能将文件单独处理？目前我的项目提供下载功能，下载是使用静态链接下载的。不是java流读取下载的。使用的是mysql数据库。大神们有什么高招给小弟建议建议"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;正确答案B&lt;br /&gt;理由:物理数据独立性(Physical Data Independence)指的是数据库的存储设备和存取方法的变化不影响到整体的逻辑结构。也就是说,用户和程序员不用关心数据是如何存储和组织的&amp;#xff0c;只需关心数据本身的逻辑结构。这样可以使得数据库系统更加稳定和易于维护。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["数据库中的数据独立性", ["问题遇到的现象和发生背景", "\n", "这个选B吧，答案选择D??", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "运行结果及详细报错内容", "\n", "我的解答思路和尝试过的方法，不写自己思路的，回答率下降 60%", "\n", "我想要达到的结果，如果你需要快速回答，请尝试 “付费悬赏”"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;That's just a wrapper for the C fork() function. It creates processes, not threads. PHP does not support multithreading.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["我可以在PHP中创建线程吗？  [重复]", ["\n\n", "\n  ", "Possible Duplicate:", "Does PHP have threading?", "  ", "\n", "\n\n\n\n", "I found this: ", "http://php.net/manual/en/function.pcntl-fork.php", "\n\n", "But I can't tell if those are threads or processes, I'm confused. They use both words.", "\n\n", "In case you have an alternate solution, this is what I need threads for: I want to create a real-time game using web sockets, and I thought of having a single process running in the background, that spawns one thread for each game (or room) on demand.", "\n    "]], "Tag": "算法设计"}
{"Answer": "使用JGroups作为通信机制，首先定义JGroupsFactory，详见JGroups的文档[url]http://www.jgroups.org/manual/html/user-advanced.html[/url]。\r\n注意TCP属性最好显式声明该节点的IP地址，免得与initial_hosts中的内容不一致，尤其是localhost的情况：\r\n\r\n&lt;cacheManagerPeerProviderFactory class=\"net.sf.ehcache.distribution.jgroups.JGroupsCacheManagerPeerProviderFactory\"\r\n\t\tproperties=\"connect=TCP(start_port=7800;bind_addr=localhost):\r\n\t\tTCPPING(initial_hosts=localhost[7800],localhost[7801];port_range=1;timeout=5000;num_initial_members=2):\r\n\t\tVERIFY_SUSPECT(timeout=1500):\r\n\t\tpbcast.NAKACK(gc_lag=100;retransmit_timeout=3000):\r\n\t\tpbcast.GMS(join_timeout=5000;shun=false;print_local_addr=true)\"\r\n\t\tpropertySeparator=\"::\" /&gt;\r\n\r\n每个Cache加入ListenerFactory，设置在缓存失效(被更新或删除)时只发送失效通知：因此他的 replcatePuts=false(新增时不通知),replcateUpdate=true, replicateUpdateViaCopy=false(更新时通知但不拷贝只发失效信息），replicateRemovals=true 失效时通知。\r\n\r\n&lt;cache name=\"org.springside.examples.miniweb.entity.security.User\" maxElementsInMemory=\"500\"\r\n\t\toverflowToDisk=\"true\" eternal=\"true\"&gt;\r\n\t\t&lt;cacheEventListenerFactory class=\"net.sf.ehcache.distribution.jgroups.JGroupsCacheReplicatorFactory\"\r\n\t\t\tproperties=\"replicateAsynchronously=true,replicatePuts=false,replicateUpdates=true,replicateUpdatesViaCopy=false,replicateRemovals=true\" /&gt;\r\n\t&lt;/cache&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请教各位前辈：ehcache的分步式怎么部署?", ["　　比如有两台服务器server1，server2，每台都装有tomcat服务器，web应用程序部署在server1上（如果需要的话，两台都　部署也可以），系统使用ssh框架，引入Ehcache缓存，缓存单独部署在一台上能跑。现在想使用缓存的分布式功能，通过RMI机制,请问需要怎么部署，要不要开启什么特别的服务(比如rmi,或缓存服务)。非常非常感谢您的回答", "\n\n", "[b]如果只是说下hibernate.cfg.xml和两个ehcache.xml文件的cacheManagerPeerProviderFactory、cacheManagerPeerListenerFactory和cacheEventListenerFactory等相关属性的配置就请您不要回答了。[/b]", "\n[b]问题补充：[/b]", "\n谢谢您的回答，不论是通过rmi,jms或是jroups的方式，仅仅靠配置这几个属性是根本不能实现分机式的，要不要启动rmi，jms或jroups服务器，或者cache server，如果需要，怎么启动这些服务器."]], "Tag": "算法设计"}
{"Answer": "是线程具体代码运行的入口，你不要在外部直接调用，否则就是同步的，达不到异步效果，你只需要start线程，它自己会执行run", "Konwledge_Point": "树中的独立集", "Question": ["java当中的run方法是线程及其子类独有的吗", ["java当中的run方法是线程及其子类独有的吗", "\n\n", "如果不是，其他类调用run方法需要注意些什么问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;添加slot函数&amp;#xff0c;然后连到Button的clicked信号上&amp;#xff0c;在slot函数里实现打开另一个文件&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在qt中如何用Button打开另一个独立的qt文件", ["在一个qt的ui界面中如何用Button打开另一个独立的qt文件"]], "Tag": "算法设计"}
{"Answer": "根据id标记点击的句子", "Konwledge_Point": "树中的独立集", "Question": ["萌新求助：小程序怎么使得每个id上的操作互相独立啊？", ["想请教各位前辈一个问题：小程序左右滑动，每滑动一次更新一句句子，我要怎么才能实现每个句子的收藏功能是独立的呢？", "我现在的收藏功能是一句话被收藏了，其他全部都被收藏了。", "\n那下面的代码是从网上借鉴的，侵删，但是我只是为了做练习和练手", "\n谢谢各位前辈指点！", "\n这是wxml", "\n\n", "<view class=\"container\">\n  <swiper class=\"sentence-swiper\">\n    <swiper-item class=\"word\" wx:for=\"{{weeklyrecommend}}\"wx:key=\"index\">\n      <text  class=\"{{isClick?'iconfont icon-collect-after collect-position':'iconfont icon-collect-before collect-position'}}\" catch:tap=\"haveSave\" data-id=\"{{item.id}}\"></text>\n      <view class=\"classic-word\">\n        <text>{{item.sentence}}</text>\n      </view>\n    </swiper-item>\n  </swiper>\n</view>     \n", "\n\n", "然后是js", "\n\n", "// pages/collect/collect.js\nPage({\n  data: {\n    job: [],\n    jobList: [],\n    id: '',\n    isClick: false,\n    jobStorage: [],\n    jobId: '',\n    weeklyrecommend: [\n      {\n        id: 0,\n        sentence: \"“为什么讨人喜的女人总是嫁给蠢物？”“因为有脑子的男人是不会娶讨人喜的女人的。”\"\n      },\n      {\n        id: 1,\n        sentence: \"只有坚信自己能改变世界的人，她才能改变世界。\"\n      },\n      {\n        id: 2,\n        sentence: \"“为什么讨人喜的女人总是嫁给蠢物？”“因为有脑子的男人是不会娶讨人喜的女人的。”\"\n    ]\n  },\n  haveSave(e) {\n    console.log(e)\n    if (!this.data.isClick == true) {\n      let jobData = this.data.jobStorage;\n      jobData.push({\n        jobid: jobData.length,\n        id: this.data.job.id,\n      })\n      console.log(this.data.job.id)\n      wx.setStorageSync('jobData', jobData);//设置缓存\n      wx.showToast({\n        title: '已收藏',\n      });\n    } else {\n      wx.showToast({\n        title: '已取消收藏',\n      });\n    }\n    this.setData({\n      isClick: !this.data.isClick\n    })\n  }\n\n})\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;报错信息是什么&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何通过python提取word里面的选择题和填空题", ["import pandas as pd@", "import re", "from docx import Document", "from collections import OrderedDict", "\n", "doc = Document(\"体育.docx\")", "\n", "black_char = re.compile(\"[\\s\\u3000\\xa0]+\")", "\n", "chinese_nums_rule = re.compile(\"[一二三四]、(.+?)(\")", "title_rule = re.compile(\"\\d+.\")", "option_rule = re.compile(\"([ABCDEF])\")", "option_rule_search = re.compile(\"([ABCDEF])[^(]+\")", "\n", "保存最终的结构化数据", "\n", "question_type2data = OrderedDict()", "\n", "从word文档的“一、单项选择题”开始遍历数据", "\n", "for paragraph in doc.paragraphs[5:]:", "    #  去除空白字符,将全角字符转半角字符，并给括号之间调整为中间一个空格", "    line = black_char.sub(\"\", paragraph.text).replace(", "        \"（\", \"(\").replace(\"）\", \")\").replace(\"．\", \".\").replace(\"()\", \"(  )\")", "    # 对于空白行就直接跳过", "    if not line:", "        continue", "    if title_rule.match(line):", "        options = title2options.setdefault(line, [])", "    elif option_rule.match(line):", "        options.extend(option_rule_search.findall(line))", "    else:", "        chinese_nums_match = chinese_nums_rule.match(line)", "        if chinese_nums_match:", "            question_type = chinese_nums_match.group(1)", "            title2options = question_type2data.setdefault(", "                question_type, OrderedDict())", "\n", "result = []", "max_options_len = 0", "for question_type, title2options in question_type2data.items():", "    for title, options in title2options.items():", "        result.append([question_type, title, *options])", "        options_len = len(options)", "        if options_len > max_options_len:", "            max_options_len = options_len", "df = pd.DataFrame(result, columns=[", "                  \"题型\", \"题目\"]+[f\"选项{i}\"for i in range(1, max_options_len+1)])", "\n", "题型可以简化下，去掉选择两个字", "\n", "df['题型'] = df['题型'].str.replace(\"选择\", \"\")", "df.to_excel(\"result.xlsx\", index=False)", "\n", "为什么会报错"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;在领导看来合理&amp;#xff0c;不然不会分配给你。&lt;/li&gt;&lt;li&gt;至于对于你&amp;#xff0c;需要自己衡量。我个人看法是小型项目&amp;#xff0c;在工期合理的前提下&amp;#xff0c;交给初级开发独立完成有合理性。&lt;/li&gt;&lt;li&gt;如果你觉得很不合理&amp;#xff0c;要及时沟通反馈&amp;#xff0c;说明到底是因为能力不足、人手不够还是工期过紧张导致不合理。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["进了一家公司，但公司不是互联网公司。公司领导交给我一个项目，要我独立开发(我是初级开发)。想知道合理不", ["进了一家公司，但公司不是互联网公司。公司领导交给我一个项目，要我独立开发(我是初级开发)。", "想知道合理不"]], "Tag": "算法设计"}
{"Answer": "源代码如何修改:\r\n\r\n1 把UserService类中和_userDAO有关的代码先注释，ValidateUser方法改成下面的\r\n\tpublic boolean ValidateUser(String name, String p_pwd) {\r\n\t\tif (\"hello\".equals(name) &amp;&amp; \"world\".equals(p_pwd)) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n2 spring-Service.xml\r\n先不加和DAO相关的属性，定义成下面的方式\r\n\r\n\t&lt;bean class=\"lf.Services.UserService\" id=\"userService\" /&gt;\r\n\r\n3 spring-WEB.xml\r\nbean定义改成scope=\"prototype\"，对每个请求生成一个Action\r\n\t&lt;bean class=\"lf.Actions.LoginAction\" id=\"LoginAction\" scope=\"prototype\"&gt;\r\n\t\t&lt;property name=\"userService\" ref=\"userService\"&gt;&lt;/property&gt;\r\n\t&lt;/bean&gt;\r\n\r\n\r\n4 struts.xml\r\n\t\t&lt;action name=\"*_\" class=\"lf.Actions.LoginAction\" method=\"{1}\"&gt;\r\n把上面一行改成\r\n\t\t&lt;action name=\"*_\" class=\"LoginAction\" method=\"{1}\"&gt;\r\n\r\nclass的值和spring里面的bean id一致。\r\n\r\n5 保证在WEB-INF/lib下加入struts2-spring-plugin-2.1.8.1.jar和spring.jar包。\r\n\r\n这样就应该没有问题了。", "Konwledge_Point": "树中的独立集", "Question": ["关于使用spring 注入问题，初使化时可以，运行时为null的问题", ["public class LoginAction extends ActionSupport {", "    /**", "     * ", "     */", "    private static final long serialVersionUID = -3017631247469843290L;", "    private User userModel;", "    private IUserService userService;", "    public String Login() throws Exception {", "        String _email = getUserModel().getEmail();", "        String _pwd = getUserModel().getPwd();", "        //", "        if (userService.ValidateUser(_email, _pwd)) {", "            ActionContext.getContext().getSession().put(\"K_UserName\", _email);", "            return \"OK\";", "        } else", "            return \"False\";", "    }", " ", "    public String Register() {", "        return \"Register\";", "    }", " ", "    public void setUserModel(User userModel) {", "        this.userModel = userModel;", "    }", "    public User getUserModel() {", "        return userModel;", "    }", "    public void setUserService(UserService userService) {", "       ", " this.userService = userService;", "    （这句在初使化时是可以注入的）", "    }", "}", "\n\n", " ", "\n\n", "但在运行时这句： if (", "userService", ".ValidateUser(_email, _pwd)) {，", "\n\n", " ", "\n\n", "userService总为Null，不知道为什么"]], "Tag": "算法设计"}
{"Answer": "可以实现，jsp+java类，编译过了会转到tomcat发布目录下，然后通过web形式来调用，起始jsp也是被编译成了.class文件了。原理都是一致的，你现在可以写一个测试类 Test.java，在这里面调用java类中的方法，但需要有main函数来执行。\r\n不过，必须强调一点，如果你用到数据库连接，并且是通过数据库连接池方式的话，肯定不行，因为连接池方式需要tomcat解析。", "Konwledge_Point": "树中的独立集", "Question": ["如何在web应用里的方法分离出来单独执行呢？", ["在一个web应用系统里(jsp+java类)，想单独调用该系统里java类的一个方法，比如在命令行里调用该方法，或者用swing做一个界面，在界面里调用该方法，该应用是部署在tomcat里的，如何做到呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以直接用&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;a&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;nationality&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;]&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;.join(a)&lt;/span&gt;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这种形式将列表转化为字符串的集合&lt;br /&gt;对处理后的字典中的每个键做对应操作即可&lt;br /&gt;&lt;strong&gt;有帮助望采纳~&lt;/strong&gt;&lt;br /&gt;示例转换代码如下:&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt; &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;Mary&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;John&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Murphy&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Sara&amp;#39;&lt;/span&gt;], &lt;span class=\"hljs-string\"&gt;&amp;#39;nationality&amp;#39;&lt;/span&gt;: [\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;Britain&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Norway&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Ireland&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Norway&amp;#39;&lt;/span&gt;], &lt;span class=\"hljs-string\"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-string\"&gt;&amp;#39;Female&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Male&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Female&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;Female&amp;#39;&lt;/span&gt;]}\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;k&lt;/span&gt;, v in &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;items&lt;/span&gt;():\n    &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;[&lt;span class=\"hljs-keyword\"&gt;k&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;join&lt;/span&gt;(v)\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/521394672336138.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python 如何查询字典中的列表中的元素/ 如何将嵌套列表的内部转化成独立的字符串", ["现有一个嵌套列表：", "[['name', 'nationality', 'gender'], ['Mary', 'Britain', 'Female'], ['John', 'Norway', 'Male'], ['Murphy', 'Ireland', 'Female'], ['Sara', 'Norway', 'Female']]，", "\n", "通过zip分配可以得到以列表形式完成的字典：", "{'name': ['Mary', 'John', 'Murphy', 'Sara'], 'nationality': ['Britain', 'Norway', 'Ireland', 'Norway'], 'gender': ['Female', 'Male', 'Female', 'Female']}", "\n", "但目的是为了做inverted index，所以希望获得的结果是：", "{'name': 'Mary, John, Murphy, Sara',", "'nationality': 'Britain, Norway, Ireland, Norway',", "'gender': 'Female, Male, Female, Female'}", "\n", "请问该如何操作？", "或者有什么办法可以直接查询列表形式字典中的元素吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to : &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Change your partial file to generate the HTML for only one payroll (fiche).&lt;/li&gt;\n&lt;li&gt;Update your code&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$mpdf = new mPDF(); \n$mpdf-&amp;gt;SetDisplayMode('fullpage'); \n\nforeach ($recuperationFiche as $i =&amp;gt; $fiche) {\n\n    if($i) { //If not the first payroll then add a new page\n        $mpdf-&amp;gt;AddPage();\n    }\n    $html = $this-&amp;gt;view-&amp;gt;partial(\n        'fiche/telechargerfiche.phtml', \n        array('fichep' =&amp;gt; $fiche)\n    );\n    $mpdf-&amp;gt;WriteHTML($html);\n\n}\n\n$mpdf-&amp;gt;SetHTMLFooter( \"\" ); \n$mpdf-&amp;gt;Output(); \nexit;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope it helps&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["MPDF：多页中的独立信息", ["\n\n", "I actually use MPDF in order to show my HTML code on a PDF.\nThe problem that I have a lot of  payroll employees , and I want to make each payroll on a page.\nThis code works well. ", "\n\n", "        $html  = $this->view->partial('fiche/telechargerfiche.phtml',\n            array('fichep' => $recuperationFiche));\n\n    $mpdf=new mPDF();\n    foreach ($recuperationFiche as $fiche) {\n\n    $mpdf->SetDisplayMode('fullpage');\n    $mpdf->WriteHTML($html);\n    $mpdf->SetHTMLFooter(\"<div style='text-align: center'><img src='pieddepage.jpg' /></div>\") ;\n    $mpdf->Output();\n    exit;\n", "\n\n", "But the problem is that my payrolls is shown successively in the same page.\nNow I want to make each payroll on an independant page .\nI have to use a foreach , but I don't know where is the error , because it's shown to me the same result :", "\n\n", "        $html  = $this->view->partial('fiche/telechargerfiche.phtml',\n            array('fichep' => $recuperationFiche));\n\n    $mpdf=new mPDF();\n    foreach ($recuperationFiche as $fiche) {\n\n    $mpdf->SetDisplayMode('fullpage');\n    $mpdf->WriteHTML($html);\n    $mpdf->SetHTMLFooter(\"<div style='text-align: center'><img src='pieddepage.jpg' /></div>\") ;\n    $mpdf->Output();\n    exit;\n    }\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "很重要的一点是自信。\r\n\r\n看得出来，楼主对于接下来的工作很有激情，但由于经验不足又有些胆怯，所以跑这来寻找组织的温暖来了。\r\n\r\n首先我要告诉你的是，每个人都是这样过来的。而且，从某种意义上说，没有独立完成过一个项目的程序员不能叫真正的程序员。\r\n\r\n你的感受我很清楚，我第一次独立做一个项目的时候，心里也没底，但是只要我们按照步骤，科学的计划，并有能够很好地去执行，胜利只是时间的事。\r\n\r\n第一次独立开发，会遇到很多问题，尤其是配置，以前都是别人帮你配好了，你会用，现在需要你自己来架设了，搭建过程可能会遇到以前从未碰到的错误，不要担心！因为这正是我们成长的机会，解决了一个，那以后再遇到我们就会宛然一笑了~\r\n\r\n第一次独立开发，可以多多讨教朋友，前辈，也可以来javaeye问答。最重要的是信心，然后是耐心，遇到问题要细心，大小写检查，一个逗号可能会引发血案，让你卡壳2、3天。如果一个问题看了1个小时以上还解决不了，那我们就先放在一边，先去做其他的，虽然我们心里耿耿于怀，没关系，我们缺少的只是灵感而已。\r\n\r\n数据库设计，不要紧，多多参考以前项目的经验，会发现，大家都很相似，只是换了个名字而已。最重要的，不外乎一个外键，因为外键，许多张独立的表被关系了起来。\r\n\r\n当你配置好项目后第一个hellworld跑起来之后，就成功了一半了。\r\n\r\nSo,do be afraid.Just do it!", "Konwledge_Point": "树中的独立集", "Question": ["一个人独立开发项目有点迷茫，请各位指点迷津", ["首先呢，请允许我自我介绍一下，小弟工作半年有余，之前在一家公司从事的是JAVA初级程序员的工作，负责一个模块的开发，经济模块，说大也不大，在开发之中偶尔参与了其他模块的编码，后来有余公司的原因（经济纠纷），我不得不离职，现在经朋友介绍来到了另一家公司，说起来大家也别笑，是一个婚介公司规模也蛮大，有十几年的历史，由于几个幕后老板想入IT行业，所以就找我和我的朋友（美工）2个人来试试这行的水，在我看来不管以后的结果或者薪资如何，对我来说都是一个不错的锻炼机会，但是现在就迷茫了，现在接的第一个项目是主要是用于以交友为基础的大型资讯平台，我大致分为了3个模块，会员管理员模块、新闻管理模块和活动模块，因为时间原因准备采取自己比较熟悉的技术Spring2.0+Struts1.2+JDBC(这个是之前公司项目经理所写的一个工具类，很齐全，很方便，用熟了很喜欢)，环境准备使用JDK5+Tomcat5.0+Mysql5.0+。", "\n说了这么多大家也应该有所了解了吧？需求文档我写了一个初始版本，也已经通过了，现在就是想问下大家，接下来我该如何规划我的项目，我该遵循一个什么样的步骤？因为都是我一个人来做，所以没有整个项目开发经验的我，真的是觉得好迷茫，好无助，对于以后功能的细节是否能完成这个我倒不是很担心，比较网上有那么多的前辈和开源代码，我对我自己的实力也比较有信心，只是这整个项目我该的规划我改如何呢？比方说框架搭好后我该从哪一个地方开始下手，设计数据库的步骤，等等，谢谢各位多多指点啊。", "\n这里我还要谢谢我的经理，感谢他给我这次锻炼机会，我一定会努力的完成的！", "\n[b]问题补充：[/b]", "\n这个，找几个朋友来也不是没有想过，我跟经理也有提议，他说你先把这个项目做出来，看效果如何在考虑。（PS：他们的态度完全在于试水），忘了说了，有一个美工和我一起开发，我也就是这个美工介绍过来的，囧。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I've had a good read through and found a class I didn't know existed before, which allows MongoDB to remember which class each object belongs to without having to explicitly set a type map. I changed my class objects that implemented &lt;code&gt;MongoDB\\BSON\\Serializable&lt;/code&gt; and &lt;code&gt;MongoDB\\BSON\\Unserializable&lt;/code&gt; to just implementing &lt;code&gt;MongoDB\\BSON\\Persistable&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;MongoDB\\BSON\\Persistable&lt;/code&gt; injects a &lt;code&gt;__pclass&lt;/code&gt; variable into the document, which is a reference to the class that was used during serialization. It uses that reference to decide which class to unserialize into and overrides the type map.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://php.net/manual/en/class.mongodb-bson-persistable.php\" rel=\"nofollow noreferrer\"&gt;&lt;code&gt;MongoDB\\BSON\\Persistable&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["MongoDB / PHP在嵌入式文档中独立设置类型映射", ["\n\n", "I have had a good look around but I can't seem to find the answer to my question. If I have the following document with several different embedded document types, how do I set the type map for each document independently of the others? ", "\n\n", "{\n    _id : ObjectId(\"bf98321fba31233\"),\n    name : \"Example\", \n    comments : [\n         comment : { _id : ObjectId(\"bf98321fba31233\"), text : \"Example comment type\" },\n         comment : { _id : ObjectId(\"bf98321fba31233\"), text : \"Another example\" }\n    ],\n    attachments : [\n         attachment : { _id : ObjectId(\"bf98321fba31233\"), url : \"/var/www/blah/foo\" },\n         attachment : { _id : ObjectId(\"bf98321fba31233\"), url : \"/var/www/blah/bar\" }\n    ]\n}\n", "\n\n", "I know how I can set a type map for all embedded documents using the ", "PHP7 MongoDB driver", ":", "\n\n", "$cursor = $mongo->executeQuery(\"TestDB.TestCollection\", new MongoDB\\Driver\\Query([]));\n$cursor->setTypeMap(['root' => 'RootObj', 'document' => 'SomeOtherObj']);\n", "\n\n", "This will unserialize all of the embedded documents into instances of the SomeOtherObj class, and the root document into the RootObj class. What I really want to do is specify this for each type of embedded document.", "\n\n", "$cursor->setTypeMap(['root' => 'RootObj', 'comment' => 'CommentObj', 'attachment' => 'AttachmentObj']);\n", "\n\n", "Can it be done?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;When you find that you need the same code in many different controllers a \"custom library\" (class) is the perfect choice. Documentation for creating your own libraries is found &lt;a href=\"http://www.codeigniter.com/user_guide/general/creating_libraries.html\" rel=\"nofollow\"&gt;HERE&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Controllers should be using models to get data from the database. Custom libraries can also use models just like controllers. Here is a very basic custom library called &lt;code&gt;Sidebar&lt;/code&gt;. It depends on a model (&lt;code&gt;sidebar_model&lt;/code&gt;) that will not be shown. The purpose of the &lt;code&gt;Sidebar&lt;/code&gt; library is to return the variables need by the &lt;code&gt;sidebar_view&lt;/code&gt; file.&lt;/p&gt;\n\n&lt;p&gt;File: &lt;strong&gt;application/libraries/Sidebar.php&lt;/strong&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\nclass Sidebar\n{\n    protected $CI; // Read the documentation link to see why this is needed.\n\n    public function __construct()\n    {\n        $this-&amp;gt;CI = &amp;amp; get_instance();\n        $this-&amp;gt;CI-&amp;gt;load-&amp;gt;database();  //only needed if not already done \n        $this-&amp;gt;CI-&amp;gt;load-&amp;gt;model('sidebar_model');\n    }\n\n    public function get_sidebar_data()\n    {\n        return $this-&amp;gt;CI-&amp;gt;sidebar_model-&amp;gt;get_sidebar();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The library method &lt;code&gt;get_sidebar_data()&lt;/code&gt; returns the variables for the view.&lt;/p&gt;\n\n&lt;p&gt;Here is a controller that uses the custom library. It will use the custom library and a view file (not shown) containing HTML for the sidebar.&lt;/p&gt;\n\n&lt;p&gt;File: &lt;strong&gt;application/controllers/Main.php&lt;/strong&gt;\n\n\n&lt;/p&gt;&lt;pre&gt;&lt;code&gt;class Main extends CI_Controller\n{\n    function __construct()\n    {\n        parent::__construct();\n        $this-&amp;gt;load-&amp;gt;library('sidebar'); //can also be autoloaded\n    }\n\n\n    public function index()\n    {\n        $data['sidebar'] = $this-&amp;gt;sidebar-&amp;gt;get_sidebar();\n        $this-&amp;gt;load\n             -&amp;gt;view('banner')\n             -&amp;gt;view('sidebar_view', $data)\n             -&amp;gt;view('main_view')\n             -&amp;gt;view('footer_view');\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Any other controller that needs to show the sidebar would use this same pattern.&lt;/p&gt;\n\n&lt;p&gt;This controller loads four different view files and is using \"method chaining\" which is encouraged. Method chaining executes a tiny bit faster. But the best reason for using it? Less typing.&lt;/p&gt;\n\n&lt;p&gt;The method chaning could also be type like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$this-&amp;gt;load-&amp;gt;view('banner')-&amp;gt;view('sidebar_view', $data)-&amp;gt;view('main_view')-&amp;gt;view('footer_view');\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But, IMO, putting each &lt;code&gt;-&amp;gt;view()&lt;/code&gt; on a separate line makes it easier to read.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何在视图中检索数据独立于codeigniter中的控制器", ["\n\n", "I have a sidebar in my site that receive some information from db and I can't use controller for retrieve data because I have different controller and same sidebar. How can I print this data in view page.\nwhen I wrote in P.h.P code in the view it shows an error that it cant define variables.", "\n\n", "How could I do this?", "\n    "]], "Tag": "算法设计"}
{"Answer": "是的，因为没那种需要", "Konwledge_Point": "树中的独立集", "Question": ["jQuery中基本过滤选择器，是不是只能以dom元素为基础，不能", ["jQuery中基本过滤选择器，是不是只能以dom元素为基础，不能以其它选择器为基础，也就是不能接在其它选择器后面？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以写个聊天室之类的东西,高并发客户端服务端,也可以写一些小游戏之类的&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于个人项目开发，想找可以独立开发、练手的项目", ["自己业余还算比较有时间，想开发开发一些个人项目，使用C++、音视频相关等，也可以服务器相关，但限于个人视野还不是很广，github那种太多人做过的又不感兴趣，不知道有什么项目可以上手的？"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/zkl99999/article/details/45486035", "Konwledge_Point": "树中的独立集", "Question": ["使用的是独立的堆内存，这个说法成立么？", ["操作系统消息通讯中内存指针的保护，使得消息发送避免了缓冲溢出问题，是因为它使用的是独立的堆内存，这个说法成立么？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Collect your results into an array like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require_once('db_connect.php');\n//Initalize the array\n$result = array(\n    'nickname_exists' =&amp;gt; 0,\n    'email_exists' =&amp;gt; 0\n);\nif(isset($_POST['nickname'])){\n    $nickname = $_POST['nickname'];\n    $st = $db-&amp;gt;prepare(\"SELECT * FROM users WHERE nickname=?\");\n    $st-&amp;gt;bindParam(1, $nickname);\n    $st-&amp;gt;execute();\n    if($st-&amp;gt;rowCount() &amp;gt; 0) { \n        $result['nickname_exists'] = 1;\n    }\n}\nif(isset($_POST['email'])){\n    $email = $_POST['email'];\n    $st = $db-&amp;gt;prepare(\"SELECT * FROM users WHERE email=?\");\n    $st-&amp;gt;bindParam(1, $email);\n    $st-&amp;gt;execute();\n    if($st-&amp;gt;rowCount() &amp;gt; 0) { \n        $result['email_exists'] = 1;\n    }\n}\n//Gives back the result in JSON.\necho json_encode($result);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then return back with the json.\nAfter this you can check all of them in your javascript:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//Initialize the hasError\nvar hasError = false;\nif (data.nickname_exists == 1) {\n    //Set error for nickname\n    nickname.addClass('error');\n    hasError = true;\n}\nif (data.email_exists == 1) {\n    //Set error for email\n    email.addClass('error');\n    hasError = true;\n}\n//If we had no error:\nif (!hasError) {\n    registerMsg.html('');\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何单独回调ajax请求", ["\n\n", "I'm learning the way to work with ajax with php now i send request with;", "\n\n", "    $.ajax({\n        url: 'check_exists.php',\n        type: \"POST\",\n        data: registerForm.serialize(),\n        success: function(data) {\n            console.log(data)\n            registerMsg = $('.registerMsg');\n            if (data == 'nickname_exists') { \n                nickname.addClass('error'); \n            } else if (data == 'email_exists') { \n                email.addClass('error'); \n            } else {\n                registerMsg.html(''); \n            }\n        }\n    });\n", "\n\n", "Now this send to the php file and checks if data exists if i input nickname i get back ", "nickname_exist", " back and if i do the same with the email i get ", "email_exists", " back.", "\n\n", "But now if i get both data it console.log like ", "nickname_existsemail_exists", " this way it doesn't trigger the if statement. ", "\n\n", "i send from php file like;", "\n\n", "require_once('db_connect.php');\n\nif(isset($_POST['nickname'])){\n\n    $nickname = $_POST['nickname'];\n\n    $st = $db->prepare(\"SELECT * FROM users WHERE nickname=?\");\n\n    $st->bindParam(1, $nickname);\n    $st->execute();\n\n    if($st->rowCount() > 0) { echo 'nickname_exists';  }\n}\nif(isset($_POST['email'])){\n\n    $email = $_POST['email'];\n\n    $st = $db->prepare(\"SELECT * FROM users WHERE email=?\");\n\n    $st->bindParam(1, $email);\n    $st->execute();\n\n    if($st->rowCount() > 0) { echo 'email_exists';  }\n}\n", "\n\n", "How do i fix this, and is the way how i handle ajax to php the right way, can somebody help me a hand.", "\n\n", "I need to make it console.log like ", "\n\n", "nickname_exists", "\n\n", "email_exists", "\n\n", "INSTEAD OF ", "\n\n", "nickname_existsemail_exists", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I've never tried it, but you could take a look at &lt;a href=\"http://www.phpcompiler.org/\" rel=\"nofollow noreferrer\"&gt;PHC&lt;/a&gt;.  It appears to be able to do just that.&lt;/p&gt;\n\n&lt;p&gt;Also take a look at &lt;a href=\"http://wiki.github.com/facebook/hiphop-php/\" rel=\"nofollow noreferrer\"&gt;Hip-Hop&lt;/a&gt; by Facebook.  Looks good (and more recent).&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; And for more PHP Compilers, see &lt;a href=\"http://en.wikipedia.org/wiki/PHP#Compilers\" rel=\"nofollow noreferrer\"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["有没有办法将PHP代码编译成可执行文件", ["\n\n", "i'm wondering about this possibility. Is it possible to make our code written in code and string compile and make it become Executable and can operate without the use of server such as Apache.", "\n\n", "The OS environment will be Windows family.", "\n    "]], "Tag": "算法设计"}
{"Answer": "独立的，这个是可以肯定的啊", "Konwledge_Point": "树中的独立集", "Question": ["ITEye现在还在独立运作吗？还是成为了CSDN的一个部门？", ["ITEye现在还在独立运作吗？还是成为了CSDN的一个部门？", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Working solution also,is I realise I should have used $newsarticle-&amp;gt;title instead of $newslistarticle-&amp;gt;title , this separates the contents of the two foreachloop. The new function contains&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function getNewsHTMLStructureIsland($newslist = array())\n    {\n        $html = '';\n        if (empty($newslist))\n            return NULL;\n        $html .= '&amp;lt;div role=\"main\" class=\"fluid flush split homepage\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"lc flush lc-island\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"l-two-col\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"l-main-container\"&amp;gt;';\n        $html .= '&amp;lt;div class=\"l-main\"&amp;gt;';\n\n        //&amp;lt;!-- Begin: Channel Archive Page - Primary Island --&amp;gt;\n        $html .= '&amp;lt;div class=\"island plain-island\"&amp;gt;';\n        $newslistarticle = $newslist[0];\n        $html .= '&amp;lt;div class=\"plain-feature block block-inset\"&amp;gt;';\n\n        $html .= '&amp;lt;a href=\"'. site_url() .'news/'.$newslistarticle-&amp;gt;slug.' \" data-omni-sm=\"hp_featureddl\"&amp;gt;';\n        $html .= '&amp;lt;img class=\"thumb\" data-aspect-ratio=\"500x369\" height=\"369\" width=\"500\" alt=\"'.$newslistarticle-&amp;gt;title.'\" src=\"\" /&amp;gt;';\n        $html .= '&amp;lt;div class=\"block-title\"&amp;gt;';\n        $html .= '&amp;lt;h2&amp;gt;'.$newslistarticle-&amp;gt;title.'&amp;lt;/h2&amp;gt;';\n        $html .= '&amp;lt;div class=\"byline\"&amp;gt;by Alexia Tsotsis&amp;lt;/div&amp;gt;';\n        $html .= '&amp;lt;/div&amp;gt;';\n        $html .= '&amp;lt;/a&amp;gt;';\n        $html .= '&amp;lt;/div&amp;gt;';\n\n\n\n        $html .= '&amp;lt;ul class=\"plain-item-list\"&amp;gt;';\n        foreach (array_slice($newslist, 1, 3) as $newsarticle) {\n            //print_r($tweet);\n            $html .= '&amp;lt;li class=\"plain-item block block-small\"&amp;gt;';\n            $html .= '&amp;lt;a href=\"'. site_url() .'news/'.$newsarticle-&amp;gt;slug.' \" data-omni-sm=\"hp_featureddl\"&amp;gt;';\n            $html .= '&amp;lt;img class=\"thumb\" data-featured-thumb=\"1\" height=\"90\" width=\"145\" alt=\"\" src=\"\" /&amp;gt;';\n            $html .= '&amp;lt;div class=\"plain-title\"&amp;gt;';\n            $html .= '&amp;lt;h2 class=\"h-alt\"&amp;gt;'.$newsarticle-&amp;gt;title.'&amp;lt;/h2&amp;gt;';\n            $html .= '&amp;lt;p class=\"byline\"&amp;gt;by Jordan Crook&amp;lt;/p&amp;gt;';\n            $html .= '&amp;lt;/div&amp;gt;';\n            $html .= '&amp;lt;/a&amp;gt;';\n            $html .= '&amp;lt;/li&amp;gt;';\n\n        }\n\n            $html .= '&amp;lt;/ul&amp;gt;';\n            $html .= '&amp;lt;/div&amp;gt;';\n            ////&amp;lt;!-- End: Channel Archive Page - Primary Island --&amp;gt;\n        return $html;\n    }\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在两个单独的foreach循环中分离变量的内容，所有这些都在一个函数中", ["\n\n", "I have two foreach loops in my function, each use the $newlist data passed to it, the first foreach loop, retrieves only one item from the database. The second foreach loop should/ought to independently retrieve separate three news items, however that is not the case, as in the html page, it only shows the first item retrieved in the first foreach loop three times, instead of three different items. How can I avoid this to achieve what I want?", "\n\n", "function getNewsHTMLStructureIsland($newslist = array())\n    {\n        $html = '';\n        if (empty($newslist))\n            return NULL;\n        $html .= '<div role=\"main\" class=\"fluid flush split homepage\">';\n        $html .= '<div class=\"lc flush lc-island\">';\n        $html .= '<div class=\"l-two-col\">';\n        $html .= '<div class=\"l-main-container\">';\n        $html .= '<div class=\"l-main\">';\n\n        //<!-- Begin: Channel Archive Page - Primary Island -->\n        $html .= '<div class=\"island plain-island\">';\n        foreach (array_slice($newslist, 0, 1) as $newslistarticle) {\n        $html .= '<div class=\"plain-feature block block-inset\">';\n\n        $html .= '<a href=\"'. site_url() .'news/'.$newslistarticle->slug.' \" data-omni-sm=\"hp_featureddl\">';\n        $html .= '<img class=\"thumb\" data-aspect-ratio=\"500x369\" height=\"369\" width=\"500\" alt=\"'.$newslistarticle->title.'\" src=\"\" />';\n        $html .= '<div class=\"block-title\">';\n        $html .= '<h2>'.$newslistarticle->title.'</h2>';\n        $html .= '<div class=\"byline\">by Alexia Tsotsis</div>';\n        $html .= '</div>';\n        $html .= '</a>';\n        $html .= '</div>';\n        }\n\n\n        $html .= '<ul class=\"plain-item-list\">';\n        foreach (array_slice($newslist, 1, 3) as $newsarticle) {\n            //print_r($tweet);\n            $html .= '<li class=\"plain-item block block-small\">';\n            $html .= '<a href=\"'. site_url() .'news/'.$newslistarticle->slug.' \" data-omni-sm=\"hp_featureddl\">';\n            $html .= '<img class=\"thumb\" data-featured-thumb=\"1\" height=\"90\" width=\"145\" alt=\"\" src=\"\" />';\n            $html .= '<div class=\"plain-title\">';\n            $html .= '<h2 class=\"h-alt\">'.$newslistarticle->title.'</h2>';\n            $html .= '<p class=\"byline\">by Jordan Crook</p>';\n            $html .= '</div>';\n            $html .= '</a>';\n            $html .= '</li>';\n\n        }\n\n            $html .= '</ul>';\n            $html .= '</div>';\n            ////<!-- End: Channel Archive Page - Primary Island -->\n        return $html;\n    }\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "https://zhidao.baidu.com/question/651169651015400045.html", "Konwledge_Point": "树中的独立集", "Question": ["控件内调用数组，数组必须独立么，能不能是嵌套的数组？              ", ["控件内调用数组，数组必须独立么，能不能是嵌套的数组？嵌套数组能不能作为控件事件的参数传给控件被调用？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;直接拖进去有用吗&amp;#xff0c;不行的话关闭后再通过菜单栏打开试试&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["UE4视口不知道怎么回事独立出来了，请问怎么还原回去呢？", ["如图，请问如何将这个窗口还原回中间那个位置呢？我已经试过卸载重新安装，但是没用。有没有哪位来解一下惑？谢谢了"]], "Tag": "算法设计"}
{"Answer": "传统的会话复制，效率比较低，因为每个节点都保留了一份会话数据，会话信息会在各节点之间复制。会话共享很好地解决了这个问题，会话共享顾名思义，所有的应用之间，只保留一份会话数据，这份数据可以存储在mongodb中，也可以在redis中，不存在复制时的问题，所以效率较高。\r\n\r\n通过这段时间和bboss开发团队的交流和对bboss的实际应用，采用会话共享效率还是比较高的，而且可以在会话共享时区分哪些会话数据（用户信息）需要在应用间共享，哪些会话数据是应用私有的，很好地保证了应用间私有会话数据的私密性，并有效防止私有数据的冲突问题。", "Konwledge_Point": "树中的独立集", "Question": ["真心求大牛帮助！两个完全独立的项目单点登陆的问题。", ["公司最近要整合两个产品到一起，情况是这样：", "\n两个产品都是跟金融有关的，所有对安全性都有要求。", "\n产品A使用的是公司自己写的框架，没怎么用开源框架，在session控制上用的是数据库存储的方式。", "\n产品B使用的是springsecurity，session还有权限控制都是框架来做。", "\n两个产品现在部署在不同的服务器上，数据库也是各自独立的。", "\n要实现的目标就是，我们把两个产品整合到一个域名下面，然后只开放产品A的登陆，当在A登陆之后，同时也保持B的登陆状态，然后可以在A,B上都正常访问，同时，还要保持session同步。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;小魔女参考了bing和GPT部分内容调写:&lt;br /&gt;要想在另一个工程中使用PSCAD中的自定义模块&amp;#xff0c;首先需要将该模块编译成一个独立的模块库文件&amp;#xff0c;然后在另一个工程中将该模块库文件导入&amp;#xff0c;这样就可以在另一个工程中使用该模块了。&lt;/p&gt;\n&lt;p&gt;具体步骤如下&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;在编译自定义模块的工程中&amp;#xff0c;点击“编译”按钮&amp;#xff0c;编译该模块&amp;#xff0c;生成一个模块库文件&amp;#xff0c;该文件以“.lib”为后缀&amp;#xff1b;&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;将该模块库文件复制到另一个工程的“lib”文件夹&amp;#xff1b;&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;在另一个工程中&amp;#xff0c;点击“编译”按钮&amp;#xff0c;编译该工程&amp;#xff0c;并将模块库文件导入&amp;#xff0c;这样就可以在另一个工程中使用该模块了。&lt;br /&gt;回答不易&amp;#xff0c;记得采纳呀。&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么将PSCAD中的自定义模块（在独立的一个工程里）用在另一个工程里？", ["怎么将PSCAD中的自定义模块（在独立的一个工程里）用在另一个工程里？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use yml or xml configuration to add constraints to your object.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://symfony.com/doc/current/book/validation.html#the-basics-of-validation\" rel=\"nofollow\"&gt;http://symfony.com/doc/current/book/validation.html#the-basics-of-validation&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;You do this by creating a file called &lt;code&gt;validation.yml&lt;/code&gt; in your Bundle configuration directory. Add the following content to validate your object:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Some\\Name\\Space\\Package:\n    properties:\n        name:\n            - NotBlank: ~\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;That's one way to keep things you don't consider a responsibility for your object out of said object. It also removes the need for a custom validator class for every object you create. You can simply make use of the validator service already provided by the framework.&lt;/p&gt;\n\n&lt;h1&gt;Edit&lt;/h1&gt;\n\n&lt;p&gt;Alright I think I figured something out you might be looking for: you can create a &lt;code&gt;MetadataFactory&lt;/code&gt; to load &lt;code&gt;Metadata&lt;/code&gt; the way you want. There are a couple of examples here: &lt;a href=\"https://github.com/symfony/validator/tree/master/Mapping/Factory\" rel=\"nofollow\"&gt;https://github.com/symfony/validator/tree/master/Mapping/Factory&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It basically boils down to a Factory class that returns an instance of &lt;code&gt;MetadataInterface&lt;/code&gt; where you attach your constraints. This means that you can have the Factory read metadata from anything. You could for example do something like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use Symfony\\Component\\Validator\\Constraints as Assert;\nuse Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\nuse Symfony\\Component\\Validator\\Mapping\\Factory\\MetadataFactoryInterface;\nuse Your\\Package;\n\nclass PackageMetadataFactory implements MetadataFactoryInterface\n{\n    /**\n     * Create a ClassMetaData object for your Package object\n     *\n     * @param object $value The object that will be validated\n     */\n    public function getMetadataFor($value)\n    {\n\n        // Create a class meta data object for your entity\n        $metadata = new ClassMetadata(Package::class);\n\n        // Add constraints to your metadata\n        $metadata-&amp;gt;addPropertyConstraint(\n            'namespace', new Assert\\Type(['type' =&amp;gt; 'string']));\n\n        // Return the class metadata object\n        return $metadata;\n    }\n\n    /**\n     * Test if the value provided is actually of type Package\n     *\n     * @param object $value The object that will be validated\n     */\n    public function hasMetadataForValue($value)\n    {\n        return $value instanceof Package::class;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Then in your &lt;code&gt;PackageValidator&lt;/code&gt; all you have to do is:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\nuse Symfony\\Component\\Validator\\Validation;\nuse Your\\PackageMetadataFactory;\n\nclass PackageValidator\n{\n    protected $subject;\n\n    public function PackageValidator($subject) {\n        $this-&amp;gt;subject = $subject;\n    }\n\n    public function getViolations() {\n        $validator = Validation::createValidatorBuilder()\n            -&amp;gt;setMetadataFactory(new PackageMetadataFactory())\n            -&amp;gt;getValidator();\n\n        $violations = $validator-&amp;gt;validate($this-&amp;gt;subject);\n\n        return !empty($violations) ? $violations : [];\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hopefully this is more in line of what you're looking for.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立应用程序中的Symfony Validator组件问题", ["\n\n", "I am realizing that perhaps the way I want to make use of the Validator Component from Symfony is not possible. Here is the idea.", "\n\n", "I have a class called Package which for now has only one property named namespace. Usually I would include the ClassMetadata and any constraint object I would like to validate against within my Package class. However, my idea is that instead of doing that I would rather keep my subject clean and only responsible for the things it must be responsible for.", "\n\n", "Below is a class I wrote and call it PackageValidater:", "\n\n", "<?php\n use Symfony\\Component\\Validator\\Constraints as Assert;\n use Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n use Symfony\\Component\\Validator\\Validation;\n\n class PackageValidator\n {\n   protected $subject;\n\n   public function PackageValidator($subject){\n    $this->subject = $subject;\n   }\n\n   public static function loadMetadata(){\n    $metadata->addPropertyConstraint('namespace', new new Assert\\Type(['type' => 'string']));\n   }\n\n   public function getViolations(){\n    $validator = Validation::createValidatorBuilder()\n       ->addMethodMapping('loadMetadata')\n       ->getValidator();\n\n    $violations = $validator->validate($this->subject);\n\n    return !empty($violations) ? $violations : [];\n   }\n\n  }\n", "\n\n", "Despite of the fact that I am not sure about the usage of my constraint since most reference uses annotations and I do not we can ignore that part. I also am aware of the fact that my test fails due to this fact. However, my issue is with my design because I have not added the static function that the Validation object uses to build the validation. Instead of my method mapping where constraints reside being in the actual object it resides on a separate class.", "\n\n", "The idea is to enforce ", "separation of concerns", " and ", "single responsibility", " on my objects. Below is a diagram that depicts exactly what I am trying to achieve:", "\n\n", "\n\n", "I have written my test as shown below:", "\n\n", "$packageValidator = new PackageValidator(new Package([0 => 'test']));\n$this->assertTrue(true, empty($packageValidator->getViolations()));\n", "\n\n", "Above I have passed in an array instead of a string which would make my test fail because there can never be a single namespace that is in a form of array - at least not in what I am trying to achieve.", "\n\n", "The issue is with my getViolations method inside the PackageValidator object because I am not passing my subject outside the context of my validation process that is define the subject metadata inside the subject itself then when getting the validator object with the refence to the subject's metadata get the validation errors.", "\n\n", "All in all Package does not have loadMetadata method but PackageValidator. How can I make this possible without polluting every object I want to validate with the metadata functionality?", "\n\n", "Below is what I get from PHPUnit:", "\n\n", "\n  ", "SimplexTest\\Validate\\Package\\PackageValidatorTest::testIfValidatorInterfaceWorks\n  Symfony\\Component\\Validator\\Exception\\RuntimeException: Cannot\n  validate values of type \"NULL\" automatically. Please provide a\n  constraint.", "\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我觉得你说的整体性和独立性并没有可比性&amp;#xff0c;整体性就是方法之间的调用&amp;#xff0c;没有好坏之说&amp;#xff0c;独立性就是Java的三大类型的经典之一&amp;#61;封装&amp;#xff0c;将一个部分或类抽离出来&amp;#xff0c;提高他的复用性&amp;#xff0c;减少整个项目代码的冗余。整体性和独立性都可以用&amp;#xff0c;没有哪个重或哪个轻&amp;#xff0c;具体看后期项目规模合理搭配就好。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Java在一个类中写方法的时候，我是注重整体性，还是独立性好一点？", ["Java在一个类中写方法的时候，我是注重整体性，还是独立性好一点？", "\n", "整体性：在一个类中，写一个方法，可以为了简便，多调用前面所写的方法。", "独立性：在一个类中，写一个方法，要有强内聚性，这个方法直接提出来，就可以在其他地方使用。"]], "Tag": "算法设计"}
{"Answer": "写java代码吧， 选择java代码选项，做分表插入操作 \r\n1.直接用java代码处理\r\n2.使用sql语句的视图做处理", "Konwledge_Point": "树中的独立集", "Question": ["kettle从一张表抽取数据分别插入到多张表中", ["\n讲师表中需要生成UUID，中间表要存放这两张表的关联关系并且生成UUID", "\n这个该怎么做，跪求指导！！！"]], "Tag": "算法设计"}
{"Answer": "你说的画面是sheet吧\r\n\r\nhttp://www.cnblogs.com/dyllove98/archive/2013/08/06/3241515.html", "Konwledge_Point": "树中的独立集", "Question": ["请问制作的软件中输出数据到excel中能不能产生两个独立的画面？请问怎么做？谢谢", ["请问制作的软件中输出数据到excel中能不能产生两个独立的画面？请问怎么做？谢谢"]], "Tag": "算法设计"}
{"Answer": "方法一：a标签包裹住img标签\r\n方法二：js控制img点击事件：\r\n\r\n```\r\nonclick=\"Jump(1);\"\r\nfunction Jump(para)\r\n{\r\n   //这里判断链接的参数para，根据不同的参数跳转\r\n   要是本页跳转 location.href=...\r\n  开新网页window.open()\r\n}\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["怎么在轮播图的图片中加上链接？", ["怎么在轮播图的图片中加上链接？我看网上有写的用a标签，能否具体说下怎么用，本人小白"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建立一个FLAG&amp;#xff0c;检测按键信号&amp;#xff0c;第一次按下是FLAG 置1&amp;#xff0c;记录下当时的数码管的值&amp;#xff0c;然后一直发送这个数值&amp;#xff1b;按键下一次按下&amp;#xff0c;FLAG置0&amp;#xff0c;接着循环传递数值。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单片机如何实现独立按键暂停循环？", ["要求是这样的 静态数码管0-9循环显示，独立按键按下停止循环，停止循环时数码管显示按下时的数字，再次按下循环继续", "不知道怎样实现这个暂停循环继续循环"]], "Tag": "算法设计"}
{"Answer": "代理模式,监听器模式,观察者模式", "Konwledge_Point": "树中的独立集", "Question": ["iOS控件之间通信按照什么模式", ["请从iOS开发类库角度描述 这些控件指什么 最好有关系图 这与架构模式是否有联系"]], "Tag": "算法设计"}
{"Answer": "路由就普通的几百块钱的tp_link", "Konwledge_Point": "树中的独立集", "Question": ["公司，想用一个交换机和一个路由器完成下列组网", ["华为s5700s交换机", "\n在这个交换机上前12个端口划分vlan 10 网段是172.16.1.0", "\n13和14端口划分vlan 20 网段是172.16.2.0", "\n15和16端口划分vlan 30 网段是172.16.3.0", "\nvlan2 和vlan3要DHCP分配地址", "\n这个交换机通过一个路由接到外网", "\nvlan 20 和 30 上的主机同时需要上外网", "\nvlan 20 和 30 上的主机可以互通，并可以访问vlan 10 上的主机"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;&amp;lt;h3&amp;gt;Insertion des étape :&amp;lt;/h3&amp;gt;\n&amp;lt;form action=\"index.php\" method=\"post\"&amp;gt;\n    &amp;lt;input type=\"number\" name=\"quantity\" id=\"quantity\" min=\"1\" max=\"5\"&amp;gt; \n    &amp;lt;div id=\"formcontainer\"&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;input type=\"submit\" value=\"Valider\"&amp;gt;\n&amp;lt;/form&amp;gt;\n&amp;lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;script&amp;gt;\n    jQuery(function($) {\n        $(\"#quantity\").bind('keyup mouseup', function () {\n            var count = $('#quantity').val();\n            var htmlf = '';\n            for (i = 0; i &amp;lt; count; i++) {\n                htmlf += \"&amp;lt;h5&amp;gt;Nom de l'étape&amp;lt;/h5&amp;gt;&amp;lt;br/&amp;gt;\";\n                htmlf += '&amp;lt;input type=\"text\" name=\"NomEtape_\"'+i+' size=\"40\" maxlength=\"40\"&amp;gt;';\n                htmlf += \"&amp;lt;h5&amp;gt;Description de l'étape&amp;lt;/h5&amp;gt;&amp;lt;br/&amp;gt;\";\n                htmlf += '&amp;lt;textarea name=\"DescriptionEtape_\"'+i+' rows=\"8\" cols=\"80\"&amp;gt;&amp;lt;/textarea&amp;gt;';\n                htmlf += \"&amp;lt;br/&amp;gt;\"\n            }\n            $(\"#formcontainer\").html(htmlf);\n        });\n    });\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Simple Just run the code and you can find yourself easy.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何自动获取多个表单", ["\n\n", "I'm doing a HTML form, it's meant to create step to pass on a game and I want to be able to enter a number and when for example I enter 5 it instantly show me 5 form to fill and create new step but when I try it doesn't appear how can I do please?", "\n\n", "<h3>Insertion des étape :</h3>\n\n<form action=\"InsertionEtape.php\" method=\"post\">\n    <input type=\"number\" name=\"quantity\" min=\"1\" max=\"5\">\n    <br>\n    <?php for ($i=0; $i < $_GET['quantity']; $i++) {\n       ?>\n        <h5>Nom de l'étape</h5>\n        <input type=\"text\" name=\"NomEtape\" size=\"40\" maxlength=\"40\">\n        <br>\n\n        <h5> Description de l'étape </h5>\n        <textarea name=\"DescriptionEtape\" rows=\"8\" cols=\"80\"></textarea>\n        <br>\n        <br>\n        <input type=\"submit\" value=\"Valider\">\n        <?php\n     } ?>\n</form>\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can transfer JSON encoded HTML newlines like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$return['message'] = 'First Entry: ' . $_POST['Name1'] . '&amp;lt;br /&amp;gt; '  . 'Second Entry: ' .    $_POST['Name2'] . '&amp;lt;br /&amp;gt; ' . 'Third Entry: ' . $_POST['Name3'];  \necho json_encode($return);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or convert newlines (\n) into newline tags. &lt;/p&gt;\n\n&lt;p&gt;The nicer way though would be to leave that kind of processing to the client by e.g. returning an array of messages:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$return['message'] = array();\n$return['message'][] = 'First Entry: ' . $_POST['Name1'];\n$return['message'][] = 'Second Entry: ' . $_POST['Name2'];\n$return['message'][] = 'Third Entry: ' . $_POST['Name3'];\necho json_encode($return);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And leave the processing to the client (maybe the client wants the messages wrapped in a paragraph tag later on):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function(data)\n{\n    $('&amp;lt;div id=\"output2\"&amp;gt;&amp;lt;/div&amp;gt;').insertAfter($('#agreement-information'));\n    $('#output2').html(data.message.join('&amp;lt;br /&amp;gt;')).show(500);\n    $('#ouput2').append(data);  \n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何使用jQuery和PHP在单独的行上显示JSON响应", ["\n\n", "I am using AJAX to submit a form, and would like to display a summary of the information on the page so that the user can confirm the information before submitting. I am having trouble getting the results to display on multiple lines. Any suggestions on the best way to do this? ", "\n\n", "Here is the PHP:", "\n\n", "$return['message'] = 'First Entry: ' . $_POST['Name1'] . ' '  . 'Second Entry: ' .    $_POST['Name2'] . ' ' . 'Third Entry: ' . $_POST['Name3'];  \n\necho json_encode($return);\n", "\n\n", "Here is the jQuery:", "\n\n", "$(\"#mark-form\").validate({\n    submitHandler: function(form) {\n            $(form).ajaxSubmit({                  \n                type: \"POST\",\n                data: {\n                    \"Name1\" : $('#Name1').val(),\n                    \"Name2\" : $('#Name2').val(),\n                    \"Name3\" : $('#Name3').val()\n                       },\n                dataType: 'json',\n                url: './includes/ajaxtest3.php',\n                error: function() {alert(\"Error\");},\n                success: \n                function(data) {\n                    $('<div id=\"output2\"></div>').insertAfter($('#agreement-information'));\n                    $('#output2').html(data.message).show(500);\n                    $('#ouput2').append(data);  \n                },       \n  });\n\nreturn false;   \n   },\n        errorPlacement: function(error,element) {\n                        return true;\n                },\n        rules: {\n            \"Name1\": {\n                required: true,\n                }\n        }       \n});\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;级联系统逻辑上是与的关系&lt;br /&gt;S1: LT1 &amp;amp;&amp;amp; !(LT1) &amp;#61;&amp;gt; !(!LT1 || LT1)&lt;br /&gt;S2: !(LT1) &amp;amp;&amp;amp; !(LT1) &amp;#61;&amp;gt; !(LT1 || LT1) &amp;#61;&amp;gt; !LT1&lt;br /&gt;因此S2正确&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["设T1、T2为两个独立系统，T为级联系统", ["设T1、T2为两个独立系统，T为级联系统:", "\n", "\n", "判断下列陈述是否正确(请考虑极端情况，因为这是一个棘手的问题)。", "S1:如果T1是LTI, T2不是LTI，那么T不是LTI。", "S2:如果T1不是LTI, T2也不是LTI，则T不是LTI。", "请问最终S1和S2谁是对的谁是错的？"]], "Tag": "算法设计"}
{"Answer": "电脑上装上JDK   配置环境变量   然后用新建一个TXT文档    把代码考进去     把文档后缀名改为.java   进入CMD窗口  进入你放置文件的位置  使用JDK进行1-编译2-运行", "Konwledge_Point": "树中的独立集", "Question": ["要求能在电脑中独立写出，并调试通过，大佬帮帮忙。", ["\n\n", "public interface Animal{", "\n    void call();", "\n}", "\n\n", "class Cat implements Animal{", "\n    public void call() {", "\n        System.out.println(\"喵喵喵..\");", "\n    }", "\n}", "\n\n", "class Dog implements Animal{", "\n    public void run() {", "\n        System.out.println(\"汪汪汪..\");", "\n    }", "\n\n", "public class TestAnimal {", "\n    public static void main(String[] args) {", "\n        Cat cat = new Cat();", "\n        cat.call();", "\n        Dog dog = new Dog();", "\n        dog.call();", "\n    }", "\n}"]], "Tag": "算法设计"}
{"Answer": "select name,bumen,max(salary) from user group by bumen;", "Konwledge_Point": "树中的独立集", "Question": ["sql查询问题 子查询。。。", ["\n我要查询每个部门工资前3名的"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两者都占用存储单元&amp;#xff0c;形参是函数调用的时候分配地址空间&amp;#xff0c;调用结束就释放了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请问C语言函数中实参和形参各占一个存储单元吗？", ["请问C语言函数中实参和形参各占一个存储单元吗？", "函数运用在一段程序中是不是包括int main()里面的调用和后面的函数定义两部分，然后定义的是形参，调用的是实参？"]], "Tag": "算法设计"}
{"Answer": "&lt;jsp:forward&gt;严格的来说是在jsp页面跳转，没有说你非得去用他，但是有的时候使用他可以给你带来方便，比如你一进到某个页面就要跳转到另一个URL。\r\n\r\n他的用法：\r\n&lt;jsp:forward&gt;操作将客户端所发出的请求从当前页面转交到另一个HTML或JSP页面。\r\n&lt;jsp:forward&gt;标签之后的程序将不会在执行。\r\n\r\n语法格式：\r\n&lt;jsp:forward page={“ relativeURL ” | “ &lt;%=urlExpress%&gt; ”}”  /&gt;\r\n或\r\n&lt;jsp: forward page={“ relativeURL ” | “ &lt;%=urlExpress%&gt; ”}”   &gt;\r\n                &lt;jsp:param name=“pn” value=“{ pv | &lt;%=expression %&gt;}”/&gt;*\r\n&lt;/jsp: forward &gt;\r\n\r\npage :可以是一个相对路径，即你所要重新导向的网爷位置，或是表达式能运算出来的相对路径", "Konwledge_Point": "树中的独立集", "Question": ["jsp动作元素的用处", ["问的有点菜鸟 我明白MVC模式 所以对jsp的动作元素不懂 跳转处理不是用servlet吗 jsp用来显示页面吗 为什么还要用到动作元素", "\n如", "jsp:forward", " "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You need to replace the URL in your embed code. like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;div class=\"fb-like\" data-href=\"&amp;lt;?=$current_url?&amp;gt;\" data-send=\"true\" data-width=\"450\" data-show-faces=\"true\"&amp;gt;&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;All you need to replace &lt;code&gt;$current_url&lt;/code&gt; variable with appropriate url&lt;/p&gt;\n\n&lt;p&gt;However, if you omit the the &lt;code&gt;data-href&lt;/code&gt; it will use the current URL (XFBML version). &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何在页面中添加动态的facebook like按钮？  [关闭]", ["\n\n", "I am new to this site. ", "\n\n", "The reason I said, \"Dynamic..\" is because, I know how to create the like button, but that is for one page. But, I am building a news website and instead of manually entering the Facebook code on each news and article, I would like that to happen automatically on the new and dynamically-created pages so I won't have to put them each time I publish an Article on the page. ", "\n\n", "Usually my pages URL will be like www.site.com/articles.php?id=12 ", "\n\n", "So the id, is the only thing it changes, so I don't know what to do after that. ", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can put the connection information in a separate file called, say, conn.php where you mention the code related to database opening, including credentials. Then, in the calling file, say putdata.php, you use the \"require\" or \"require_once\" command to include that conn.php. Let the conn.php file return a connection. Somewhat like this : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nfunction GetMyConn() {\n    $server_name = \"localhost\";\n    $db_name = \"db_name_goes_here\";\n    $db_user = \"user_name_goes_here\";\n    $db_pass = \"password_goes_here_muahhhaa\";\n    $db_full_addr = \"mysql:host=\" . $server_name . \";\" . \"dbname=\" . $db_name;\n\n    $MyConn = new PDO($db_full_addr, $db_user, $db_pass);\n    $MyConn-&amp;gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);   \n    return $MyConn;\n}\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the calling file, you would say, something like : &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;require_once \"GetConn.php\";\n\n$MyConnHere = GetMyConn();\n$SqlHere = \"Sql Statemetn goes here....\"\n$SqlHere2 = $MyConnHere-&amp;gt;prepare($SqlHere);\n$SqlHere2-&amp;gt;execute();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also, I suggest you can download the source code of some open source PHP application, such as mantissa, and see how they have organized their code files, folders and settings. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["我如何重新组织我的PHP代码以包含单独的数据库信息文件", ["\n\n", "Can any of you guys help me to reorganize this code? I'll try to explain the problem below.", "\n\n", "I have a db_connection.php wich includes the following (just my db info and don't worry, i am just using it locally):", "\n\n", "<?php\ntry {\n    $db = new PDO('mysql:host=localhost;dbname=webappeind;charset=utf8','root','');\n}\ncatch(PDOException $e) {\n    echo $e->getMessage();\n}\n?>\n", "\n\n", "But the problem is i have the following file that also includes my db info, but i do not know how to reorganize my code to get it working with my separate php file. ", "\n\n", "<?php\n    $servername = \"localhost\";\n    $username = \"root\";\n    $password = \"\";\n    $dbname = \"webappeind\";\n\n    // Create connection\n    $conn = new mysqli($servername, $username, $password, $dbname);\n    $sql = \"SELECT * FROM zoekopdrachten ORDER BY titel DESC LIMIT 3\";\n    $result = $conn->query($sql);\n\n    if ($result->num_rows > 0) {\n        // output gegevens van elke rij\n        while($row = $result->fetch_assoc()) {\n            echo \"<div class='recenttoegevoegd'>\".\"<a href='#'>\".$row[\"titel\"].\"</a>\".\"</div>\";\n        }\n    } else {\n        echo \"0 resultaten\";\n    }\n?>\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It sounds like you want to use either an &lt;code&gt;inner join&lt;/code&gt; or an &lt;code&gt;outer join&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Join_(SQL)\" rel=\"nofollow\"&gt;http://en.wikipedia.org/wiki/Join_(SQL)&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Or possibly a &lt;code&gt;union&lt;/code&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Union_(SQL)#UNION_operator\" rel=\"nofollow\"&gt;http://en.wikipedia.org/wiki/Union_(SQL)#UNION_operator&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在mysql中选择两个独立的表[关闭]", ["\n\n", "$results = $mysqli->query(\"SELECT product_name,price FROM herbs an WHERE product_code='$product_code' LIMIT 1\");\n    $obj = $results->fetch_object();\n", "\n\n", "This is my code I want to get the two table form the database which is \"herbs\" and \"fruits\" and update my shopping cart.", "\n\n", "How can I select two table product_name, price from two independent tables? ", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;举个例子&amp;#xff0c;如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;int &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(int a)&lt;/span&gt;&lt;/span&gt;;\n\nint main() \n{\n      int a &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n      int b &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n      int c &amp;#61; b &amp;#43; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(a)&lt;/span&gt;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 这里fun 函数调用 就不是独立的语句&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\nint &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fun&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(int a)&lt;/span&gt;&lt;/span&gt;\n{\n    &lt;span class=\"hljs-comment\"&gt;// ....&lt;/span&gt;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["调用函数必须在一条独立的语句中完成？", ["D为什么 错了，谁来详细解释一下？asfcsdbrvgtroiuvrwdfd"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;动态拼接 sql &amp;#xff0c;然后 sp_executesql 啊&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-sql\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;declare&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&amp;#64;n&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&amp;#64;n&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;20230320&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;declare&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&amp;#64;sql&lt;/span&gt; nvarchar(max)\n&lt;span class=\"hljs-keyword\"&gt;select&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&amp;#64;sql&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;select top 10 * from pv_&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;convert&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;varchar&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;&amp;#64;n&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;exec&lt;/span&gt; sp_executesql &lt;span class=\"hljs-variable\"&gt;&amp;#64;sql&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/777805626976144.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何用存储过程查询不同年份独立表中的数据", ["如何用存储过程查询不同年份独立表中的数据，比如查询时输入2023就可以查2023年表中的数据"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;刚刚随手撸的代码&amp;#xff0c;供参考&amp;#xff08;io配置基于MCS51普中A2开发板&amp;#xff0c;软件延时版本&amp;#xff09;&lt;br /&gt;关键点是两个&amp;#xff0c;一个是按键切换任务&amp;#xff0c;一个是设定一个变量控制时间间隔&lt;br /&gt;有更具体的要求可以私聊&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-regexp\"&gt;/* Head Line ------------------------------------------------------------------- */&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;reg52.h&amp;gt; //51单片机的头文件&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;intrins.h&amp;gt; //程序中需要使用到空指令_nop_ ();字符循环移位指令_crol_等时使用&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;/* Type Def -------------------------------------------------------------------- */&lt;/span&gt;\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;typedef 为C语言的关键字&amp;#xff0c;作用是为一种数据类型定义一个新名字&amp;#xff0c;这里的数据类型包括内部数据类型&amp;#xff08;int&amp;#xff0c;char等&amp;#xff09;和自定义的数据类型&amp;#xff08;struct等&amp;#xff09;。\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;typedef 本身是一种存储类的关键字&amp;#xff0c;与 auto、extern、static、register 等关键字不能出现在同一个表达式中。\n&lt;span class=\"hljs-regexp\"&gt;/* IO Define ------------------------------------------------------------------- */&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define LED   P2&lt;/span&gt;\nsbit HX_LED&amp;#61;P2^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nsbit KEY1&amp;#61;P3^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nsbit KEY2&amp;#61;P3^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;_sbit  定义特殊功能寄存器的位变量。bit和sbit都是C51扩展的变量类型。\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;_sbit 的应用相当于给一个特定的引脚一个名字&amp;#xff0c;其意义在于方便位操作\n&lt;span class=\"hljs-regexp\"&gt;/* Var ------------------------------------------------------------------------- */&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define TaskNum 2 &lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define SpeedLevel 5&lt;/span&gt;\nu8    SL[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;};\nu8    Sset &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nu8  Snum &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\nu8  fTask &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;/* Functions ------------------------------------------------------------------- */&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;/* Delays -------------------------------- */&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;利用stc-isp软件内置的软件延时代码生成器生成代码\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;可以自行加以修改实现更便利的操作\nvoid Delayus(u16 i)        &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&amp;#64;&lt;span class=\"hljs-number\"&gt;12.000&lt;/span&gt;MHz\n{\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n        _nop_();\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (--i);\n}\n\nvoid Delayms(u16 i)        \n{\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n        Delayus(&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;);\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (--i);\n}\n&lt;span class=\"hljs-regexp\"&gt;/* LED Flow ------------------------------- */&lt;/span&gt;\nvoid LED_Flow(void)\n{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(fTask&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; KEY1!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; KEY2!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        Delayms(SL[Sset]*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;延时xxms\n        LED &amp;#61; _crol_(LED,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    }\n}\n&lt;span class=\"hljs-regexp\"&gt;/* LED Brth ------------------------------- */&lt;/span&gt;\nvoid LED_Brth(void)\n{\n    u8 hxflag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    u16 hxjg&amp;#61;&lt;span class=\"hljs-number\"&gt;150&lt;/span&gt;;\n    LED&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xfe;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(fTask&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; KEY1!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; KEY2!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(hxflag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) hxjg--;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(hxflag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) hxjg&amp;#43;&amp;#43;;\n        \n        HX_LED &amp;#61; !HX_LED;\n        Delayus((hxjg)*SL[Sset]);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;延时xxms\n        HX_LED &amp;#61; !HX_LED;\n        Delayus((&lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;-hxjg)*SL[Sset]);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;延时xxms\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(hxjg&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;290&lt;/span&gt;||hxjg&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)hxflag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-hxflag;\n    }\n}\n&lt;span class=\"hljs-regexp\"&gt;/* KEY Scan ------------------------------- */&lt;/span&gt;\nvoid KEY_Scan(void)\n{\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;KEY2\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(KEY2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        Delayms(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;消抖\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(KEY2&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            Sset&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(Sset&amp;#61;&amp;#61;Snum)Sset&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!KEY2);\n    }\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;KEY1\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(KEY1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        Delayms(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;消抖&amp;#xff0c;时间&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;ms均可\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(KEY1&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;程序块内写按下按键后执行的内容\n        {\n            fTask&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(fTask&amp;#61;&amp;#61;TaskNum)fTask&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(!KEY1);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;阻塞&amp;#xff0c;按键松开后程序继续运行\n    }\n}\n&lt;span class=\"hljs-regexp\"&gt;/* Main ------------------------------------------------------------------------ */&lt;/span&gt;\nvoid main(void)\n{\n    LED &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;xfe;\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        KEY_Scan();&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;调用 按键扫描 函数\n            \n        switch(fTask)\n        {\n            case &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;: LED_Flow(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;自定义工作状态&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; 流水灯\n            case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: LED_Brth(); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;自定义工作状态&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; 呼吸灯\n        }\n        \n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        Delay10us(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;延时缓冲&amp;#xff0c;个人习惯&amp;#xff0c;可加可不加\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["51单片机独立按键控制led灯", ["51单片机实现通过独立按键切换流水灯和呼吸灯两种模式 且通过独立按键控制流水灯和呼吸灯的速度 普中开发版"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;独立开发者&amp;#xff0c;你得有比参与工作的更强的实力和绝对敏锐的商业头脑&amp;#xff0c;前者是资本后者是资本变现&amp;#xff0c;你要知道如何用你的能力做出一些让人能够愿意掏出腰包问你要的产品。我认为很难&amp;#xff0c;至少即便我也想要实现我也会选择在工作之余给自己创造增值内容&amp;#xff0c;而不是放弃手头上的工作。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何称为一名独立开发者", ["从事编程行业三年了，最近在想如何称为一名独立开发者，或者说自由工作者"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\nsbit &lt;span class=\"hljs-attribute\"&gt;led1&lt;/span&gt;&amp;#61;P1^0;sbit &lt;span class=\"hljs-attribute\"&gt;led2&lt;/span&gt;&amp;#61;P1^1;sbit &lt;span class=\"hljs-attribute\"&gt;led3&lt;/span&gt;&amp;#61;P1^2;\nsbit &lt;span class=\"hljs-attribute\"&gt;k1&lt;/span&gt;&amp;#61;P1^5;sbit &lt;span class=\"hljs-attribute\"&gt;k2&lt;/span&gt;&amp;#61;P1^6;sbit &lt;span class=\"hljs-attribute\"&gt;k3&lt;/span&gt;&amp;#61;P1^7;\nvoid main()\n{\nunsigned char &lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;0;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(1)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;k1&lt;/span&gt;&amp;#61;&amp;#61;0&amp;amp;&amp;amp;&amp;#43;&amp;#43;c&amp;#61;&amp;#61;0)led1&amp;#61;~led1;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(led)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;k2&lt;/span&gt;&amp;#61;&amp;#61;0&amp;amp;&amp;amp;&amp;#43;&amp;#43;c&amp;#61;&amp;#61;0){&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;led2&lt;/span&gt;&amp;#61;1;led3&amp;#61;0;}\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;k3&lt;/span&gt;&amp;#61;&amp;#61;0&amp;amp;&amp;amp;&amp;#43;&amp;#43;c&amp;#61;&amp;#61;0){&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;led3&lt;/span&gt;&amp;#61;1;led2&amp;#61;0;}\n}\n}\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单片机51按键控制灯，电机控制系统", ["有一电机控制系统，有3个按键，一个按键控制上电，上电用红灯指示；一个按键控制电机正转，电机正转用绿灯指示；一个按键控制电机反转，电机反转用绿灯指示。请完成单片机硬件连接设计图并编写程序。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在STM32系列的芯片中&amp;#xff0c;RTC模块的使能是由两个不同的寄存器来控制的。一个是RTC域控制寄存器(RCC_BDCR)&amp;#xff0c;另一个是RTC配置寄存器(RTC_CR)。其中&amp;#xff0c;RCC_BDCR寄存器的BDRST位用于使能或失能RTC域&amp;#xff0c;该位为0时RTC域被使能&amp;#xff0c;为1时RTC域被失能。而RTC_CR寄存器的WUTE位用于使能或失能RTC时钟&amp;#xff0c;该位为0时RTC时钟被失能&amp;#xff0c;为1时RTC时钟被使能。&lt;/p&gt;\n&lt;p&gt;在STM32的电源管理模块(PWR)中&amp;#xff0c;也有一个控制RTC域的寄存器(PWR_CR)&amp;#xff0c;其中DBP位用于控制RTC域的使能和失能。该位为1时RTC域被使能&amp;#xff0c;为0时RTC域被失能。当该位被置为0时&amp;#xff0c;RTC域的所有寄存器都将无法访问。因此&amp;#xff0c;如果需要关闭RTC域&amp;#xff0c;可以将该位置为0&amp;#xff0c;然后再将RTC_CR中的WUTE位清零。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;一旦RTC域被使能&amp;#xff0c;RTC时钟就会一直运行&amp;#xff0c;无论是否给它提供时钟源。因此&amp;#xff0c;为了节省电力&amp;#xff0c;可以在不需要RTC时关闭RTC域。而在需要使用RTC时&amp;#xff0c;则需要先使能RTC域&amp;#xff0c;并设置好RTC时钟源&amp;#xff0c;然后再使能RTC时钟。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于#stm32#的问题：为什么RTC没有控制寄存器来使能和失能RTC，这样的话如何确定开启还是关闭状态呢，个人猜测是一直是通电状态，一旦给与一个时钟源就会开始工作", ["为什么RTC没有控制寄存器来使能和失能RTC，这样的话如何确定开启还是关闭状态呢，个人猜测是一直是通电状态，一旦给与一个时钟源就会开始工作？"]], "Tag": "算法设计"}
{"Answer": "谁回答的[color=red]最多[/color]给谁，嘿嘿", "Konwledge_Point": "树中的独立集", "Question": ["工作了1.5年的java程序员如果提高？", ["本人目前在一国企业，平时工作基本没什么具体的事. 平常也自己看一些关于设计模式、uml之类的书籍，学习一些以前没接触到的知识, 但有时候还是感觉很迷茫，不知道该做什么。请指点。", "\n[b]问题补充：[/b]", "\n本人目前在一国企业，平时工作基本没什么具体的事. 平常也自己看一些关于设计模式、uml之类的书籍，学习一些以前没接触到的知识, 但有时候还是感觉很迷茫，不知道该做什么。请指点。", "\n\n", "是打算辞职的，可是合同到明年4月份才到期啊", "\n[b]问题补充：[/b]", "\n当时这份工作是一个朋友介绍的，当时说谈好最少必须到明年四月份，不好驳朋友的面子啊", "\n[b]问题补充：[/b]", "\nto: jones", "\n以前找过几份工作，面试倒没多大问题。", "\n[b]问题补充：[/b]", "\n一直都是从事的j2ee方面的开发", "\n[b]问题补充：[/b]", "\nTo wmteo77 :", "\n是的，平常一般都没什么事，有可能一个月都没什么工作上的任务安排", "\n[b]问题补充：[/b]", "\n[color=red]怎样加入java开源组织，有什么要求或限制没？[/color]", "\n[b]问题补充：[/b]", "\n[color=red]刚大概了解了下SpringSide这个项目，感觉水平不够啊[/color]", "\n[b]问题补充：[/b]", "\n[color=red]非常感谢各位热心的朋友，准备结贴的。问题是这个分该怎么分配呢？ 难题。要是像csdn可以每人给一些多好啊[/color]"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;They're the same thing (in API Level 8+). Use &lt;code&gt;match_parent&lt;/code&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;FILL_PARENT (renamed MATCH_PARENT in API Level 8 and higher), which means that the view wants to be as big as its parent (minus padding)&lt;/p&gt;\n  \n  &lt;p&gt;...&lt;/p&gt;\n  \n  &lt;p&gt;&lt;code&gt;fill_parent&lt;/code&gt;: The view should be as big as its parent (minus padding). This constant is deprecated starting from API Level 8 and is replaced by &lt;code&gt;match_parent&lt;/code&gt;.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html\" rel=\"noreferrer\"&gt;http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["配对父母和填充父母之间有什么区别？", ["\n\n", "I'm a little confused about two XML properties: ", "match_parent", " and ", "fill_parent", ". It seems that both are the same. Is there any difference between them?", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/5761960/what-is-the-difference-between-match-parent-and-fill-parent"]], "Tag": "算法设计"}
{"Answer": "所谓递归，其实人类是做不到的，因为递归嵌套多了，人就乱了，有点像是盗梦空间里的深层梦境limbo，到那就几乎回不到现实了。\r\n但是计算机不像人类想法那么多，尤其是基于过程的设计，你教我怎么走我就怎么走，不会混乱，但是你得给我定个边界条件，要不我还是回不来。\r\n汉诺塔的确是一个经典的递归问题，而人类做的最伟大的一步在于，把f(n)的问题转化为f(n-1)，推本溯源，总要找到一个origin起始点（也是结束点）。\r\n在这方面，计算机做的比人类强太多。然而，编程的时候，写递归还是挺痛苦的，主要在于边界条件设置要很小心，错了程序就傻傻地一去不复返啦！\r\n至于理解一系列递归问题，先百度，再谷歌，多找几个范例~", "Konwledge_Point": "树中的独立集", "Question": ["汉诺塔是怎么思考出来的", ["本人菜鸟，看到这个算法的时候觉得好巧妙，但是自己怎么也想不出来啊。。。"]], "Tag": "算法设计"}
{"Answer": "&lt;bean id=\"transactionManager\"\r\n\t\tclass=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"&gt;\r\n\t\t&lt;property name=\"dataSource\" ref=\"dataSource\" /&gt;\r\n\t&lt;/bean&gt;\r\n\r\n\t&lt;tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\"&gt;\r\n\t\t&lt;tx:attributes&gt;\r\n\t\t\t&lt;tx:method name=\"save*\" propagation=\"REQUIRED\" /&gt;\r\n\t\t\t&lt;tx:method name=\"del*\" propagation=\"REQUIRED\" /&gt;\r\n\t\t\t&lt;tx:method name=\"update*\" propagation=\"REQUIRED\" /&gt;\r\n\t\t\t&lt;tx:method name=\"*\" read-only=\"true\" /&gt;\r\n\t\t&lt;/tx:attributes&gt;\r\n\t&lt;/tx:advice&gt;\r\n\t&lt;aop:config&gt;\r\n\t\t&lt;aop:pointcut id=\"allManagerMethod\"\r\n\t\t\texpression=\"execution(* byd.service.impl.*.*(..))\" /&gt;\r\n\t\t&lt;aop:advisor advice-ref=\"txAdvice\" pointcut-ref=\"allManagerMethod\" /&gt;\r\n\t&lt;/aop:config&gt;", "Konwledge_Point": "树中的独立集", "Question": ["spring对多个事务进行统一回滚怎么配置？", ["如题，在action中注入多个service进行事务操作，要求所有事务一次性成功或者失败？失败数据怎么回滚？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这个题目其实就是判断str1是否包含str2啊&amp;#xff0c;如果包含&amp;#xff0c;就输出str2(str3包含str2的所有字符&amp;#xff0c;也就是str2)。&lt;br /&gt;比如str1&amp;#61;&amp;#34;tehaha&amp;#34;&amp;#xff0c;str2&amp;#61;&amp;#34;test&amp;#34;&amp;#xff0c;输出的是&amp;#34;&amp;#34;&amp;#xff0c;而不是te这个最短匹配。&lt;br /&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/145330032746162.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;std&lt;/span&gt;;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getMinString&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; str1, &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; str2&lt;/span&gt;)&lt;/span&gt; {\n    &lt;span class=\"hljs-comment\"&gt;// write code here&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str2.empty()) { &lt;span class=\"hljs-comment\"&gt;//修改1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; str1;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; ans;\n    &lt;span class=\"hljs-comment\"&gt;//int maxlen &amp;#61; 0; //最大匹配字符长度&lt;/span&gt;\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; str1.length(); i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; ( j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; str2.length(); j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str1[i &amp;#43; j] &amp;#61;&amp;#61; str2[j]) \n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        } \n        &lt;span class=\"hljs-comment\"&gt;//如果找到str2的所有字符&amp;#xff0c;直接返回str2就可以了&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; str2.length())\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; str2;\n        &lt;span class=\"hljs-comment\"&gt;/*if (j &amp;gt; maxlen) {\n                    maxlen &amp;#61; j;\n                    ans &amp;#61; str1.substr(i, maxlen);\n                }*/&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;/*if (maxlen &amp;#61;&amp;#61; 0)\n        return &amp;#34;&amp;#34;;\n    else\n        return ans;*/&lt;/span&gt;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; s1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;te123sttest123&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; s2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;test&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; getMinString(s1,s2);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果你要输出最短匹配&amp;#xff0c;也就是&amp;#xff1a;string s1 &amp;#61; &amp;#34;te123st123&amp;#34;;    string s2 &amp;#61; &amp;#34;test&amp;#34;;输出te&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/899903032746159.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;std&lt;/span&gt;;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getMinString&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; str1, &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; str2&lt;/span&gt;)&lt;/span&gt; {\n    &lt;span class=\"hljs-comment\"&gt;// write code here&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str2.empty()) { &lt;span class=\"hljs-comment\"&gt;//修改1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; str1;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; ans;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; maxlen &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//最大匹配字符长度&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; str1.length(); i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; str2.length(); j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str1[i &amp;#43; j] &amp;#61;&amp;#61; str2[j])\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;//如果找到str2的所有字符&amp;#xff0c;直接返回str2就可以了&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; str2.length())\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; str2;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;gt; maxlen) {\n            maxlen &amp;#61; j;\n            ans &amp;#61; str1.substr(i, maxlen);\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (maxlen &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ans;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; s1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;te123st123&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt; s2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;test&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; getMinString(s1, s2);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["寻找最小子字符串：要从大字符串str1里找到包含独立小字符串str2中所有字符的最小子字符串str3；", ["1、str1中有可能没有完整包含str2所有字符的情况，此时返回\"\"，即为空字符串；", "2、str1不会为空，但str2有可能为空，此时返回整个str1；", "3、str2可能存在重复的字符，此时str3需要包含相等数量该字符；", "示例", "输入", "te123sttest123", "test", "输出", "test", "\n", "string getMinString(string str1, string str2) {\n    // ", "write", " code here\n    ", "if", " (str2 == \"\") {\n        ", "return", " str1;\n    }\n    string ans;\n    ", "int", " start = ", "0", ", ", "index", " = ", "0", ", end = str1.length();\n    ", "for", " (", "int", " i = ", "0", "; i < str1.length(); i++) {\n        ", "for", " (", "int", " j = ", "0", "; j < str2.length(); j++) {\n            ", "if", " (str1[i] == str2[j]) {\n                ", "if", " (i > ", "start", ")\n                    start = i;\n                ", "if", " (i < ", "end", ")\n                    end = i;\n                ", "index", "++;\n                break;\n            }\n                \n        }        \n    }\n    ", "if", " (", "index", " < str2.length())\n        ", "return", " \"\";\n    ", "return", " str1.substr(", "end", ", ", "start", " - ", "end", " + ", "1", ");\n}\n"]], "Tag": "算法设计"}
{"Answer": "https://www.cnblogs.com/yangguang-it/p/7229565.html", "Konwledge_Point": "树中的独立集", "Question": ["stm32   + freertos   独立看门狗", ["main 函数中初始化独立看门狗，时间64ms,程序中没有喂狗代码。", "\n问题1：程序刚刚起来就关机了，为什么没有重启而是直接关机了？", "\n问题2：程序下载不了，提示stlink 连接失败。怎么解决？", "\n谢谢！看门狗代码如下：", "\n\n", "void IWDG_Init(u8 prer,u16 rlr) ", "\n{", "\n    IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);  //使能对寄存器IWDG_PR和IWDG_RLR的写操作", "\n    IWDG_SetPrescaler(prer);  //设置IWDG预分频值:设置IWDG预分频值为64", "\n    IWDG_SetReload(rlr);  //设置IWDG重装载值", "\n    IWDG_ReloadCounter();  //按照IWDG重装载寄存器的值重装载IWDG计数器", "\n    IWDG_Enable();  //使能IWDG", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Branches are for organizing different aspects of development on a project.  &lt;/p&gt;\n\n&lt;p&gt;For example:\nYou have your framework working.  You decide that you want to reorganize the code for a new feature or want to work on a feature that you aren't sure about releasing.  So you create a branch and work on it there.  Meanwhile, you find that your framework has a bug in it.  You are able to go back to the original branch, create the bug fix and release that.  &lt;/p&gt;\n\n&lt;p&gt;You can have multiple avenues of development going on at the same time keeping them separate until you are ready to do something with them.&lt;/p&gt;\n\n&lt;p&gt;The use case that you are talking with an app and a framework would be to have seperate repositories for those.  Rather than branching.  &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Git分支帮助/建议", ["\n\n", "I think I'm not quite grasping the reason behind branches in Git.", "\n\n", "I'm developing an application which makes use of a framework.", "\n\n", "Could I run two branches one with the app and another branch for the framework? Or should I branch away when I want to update the framework, fix any possible bugs and then merge it back in?", "\n\n", "Thanks!", "\n    "]], "Tag": "算法设计"}
{"Answer": "http://kb.cnblogs.com/page/144561/\r\n关键点就是，先创建一个解决方案，然后创建两个项目，然后合并global.asax和web.config", "Konwledge_Point": "树中的独立集", "Question": ["asp.net mvc 如何area独立到类库中，结构关系新建问题，先提前感谢指点的大神！！！", ["问题描述：我新建了一个mvc项目，项目中需要体现前台以及后台，为此我新建了一个(web application )Shop.Web以及一个类库项目Shop.Web.Admin,通过查阅资料得知，需要使用Area,网上有一篇文章说的比较详细，", "http://www.th7.cn/Program/net/201602/761513.shtml，这篇讲的是如何将area独立成一个项目，我需要的正是这种效果，但是不知道每一步的建立流程，不知道怎么做才能建立出这样的效果，大神们给看看这个怎么做，最好就是每一步都给截图加说明，", "\n越详细越好。", "\n注：我不需要大家说怎么去实现他的具体功能，我只需要知道**如何新建才能达到这种结构效果**。", "\n具体效果以及问题如下：", "\n第一张图问题是：**如何设置图中所说的目录结构和编译设置，如何将后台工具集中到这个类库中，大神们指点的时候请截图，小弟看得懂些**。", "\n2、**第二张图的问题是HealthDemo.Web.Admin这个类库的文件夹如何设置在administration文件夹下面，**并且并且并且**在解决方案中看得见HealthDemo.Web.Admin，但是在本地物理路径下面只有administration这个文件夹。**", "\n\n", "感谢各位大神指点，提前谢谢大家。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;You have already declared a type of &lt;code&gt;MyInterface&lt;/code&gt; inside &lt;code&gt;src/interfaces/my_interface.go&lt;/code&gt;. You don't have to redeclare it and you don't have to explicitly assign &lt;code&gt;MyImplementation&lt;/code&gt; to the interface. All you have to make sure is that your &lt;code&gt;MyImplementation&lt;/code&gt; implements all the methods from the interface. As long as both files are in the same package and same folder level, your implementation automatically becomes your interface.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;As long they are both in the same package and folder you do not have to import interface inside implementation&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;At time of this writing Gogland is in Early Access Program which is just another name for BETA :). I don't think SO allows commenting on anything in beta. Sorry.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ol start=\"4\"&gt;\n&lt;li&gt;Based on the structure of your code, you are taking bit wrong approach when trying to use subfolders. If you are using subfolders, those subfolders should be independent packages. So let's say your GOPATH is &lt;code&gt;~/go&lt;/code&gt;. You need a structure like this: &lt;code&gt;~/go/src/github.com/user/mylib&lt;/code&gt;. So if you want a subfolder/subpackage you would have something like this &lt;code&gt;~/go/src/github.com/user/mylib/util&lt;/code&gt; and util would be its own package. It's wrong to try to have Implementations in one folder and interfaces in another. Rather group them logically and create subpackages. Then in your test you can use them like this:&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;hr&gt;\n\n&lt;pre&gt;&lt;code&gt;import(\n  \"github.com/user/mylib\"\n  \"github.com/user/mylib/util\"\n)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;github.com or any other repo service is important specially if you are writing library that is suppose to be reusable in any project.&lt;/p&gt;\n\n&lt;p&gt;Besides that, I'd suggest to use more stable IDE or editor.&lt;/p&gt;\n\n&lt;p&gt;Hope this helps&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["库的单独文件中的MyInterface和MyImplementation", ["\n\n", "The project structure requires to define interface and implementations in separate files.", "\n\n", "It's best to download a small isolated test case to get a picture, but here's the code too. It's a library project that's why ", "mylib", " is declared as package for each file. I wanted to have subpackages but golang doesn't allow that, so instead I put everything under one package while files are in separate directories. ", "\n\n", "Download Test Project", " ", "\n\n", "src/interfaces/my_interface.go", "\n\n", "package mylib\n\ntype MyInterface interface {\n    foo()\n    bar()\n}\n", "\n\n", "src/interfaces/my_implementation.go", " how to import interface here?", "\n\n", "package mylib\n\ntype MyImplementation struct {}\n\n// possible to declare *MyInteface here?\nfunc (imp *MyImplementation) foo() {} \n\nfunc (imp *MyImplementation) bar() {}\n", "\n\n", "test/implementations/implementation_test.go", "\n\n", "package implementations\n\nimport (\n    \"testing\"\n    \"fmt\"\n    \"implementations\"\n    mylib2 \"interfaces\"  // why mylib2 here?\n)\n\nfunc TestImplementation(t *testing.T) {\n\n    // how to declare variable of type `MyInterface` and assign an object `MyImplementation` to it\n    interface_type_var := mylib2.MyInterface() // error\n    interface_type_var := mylib.MyImplementation{} // error\n\n    fmt.Println(\"Test successful\")\n}\n", "\n\n", "Question", "\n\n", "\n", "How can I declare a type of MyInterface and assign object of MyImplementation to it.", "\n", "how to import and interface in the implementation file", "\n", "Autocomplete of IDE put this under imports automatically as I was importing interface type. not sure why. ", "mylib2 \"interfaces\"", ". i learned it's an alias but why do we need alias here?", "\n", "Help fix the code in the ", "implementation_test", " please", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看架构设计&amp;#xff0c;业务比较小建议写在一起&amp;#xff0c;拆成多个工程是为了复用方便&amp;#xff0c;比如多个服务调用同一个service&amp;#xff0c;依赖同一个子模块就行。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Maven聚合工程，将service，controller,dao配置成模块，而不是包，这样有什么好处？", ["\n", "一般项目中，service,controller，dao,都放在各自的包里面，调用起来非常方便，而maven聚合工程，将service，controller,dao配置成模块，而不是包，这样有什么好处，感觉和直接使用普通的包没什么区别"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建议多巩固下java基础。java中调用一个方法&amp;#xff0c;是调用一个类的静态方法或者一个对象的实例方法。想要调用一个实例方法&amp;#xff0c;就必须先要有一个对应的对象&amp;#xff0c;getResources是Context下的实例方法&amp;#xff0c;在Activity中可以直接调用&amp;#xff0c;是因为Activity最终继承于Context。Fragment中也可以调用&amp;#xff0c;不过Fragment中的getResources方法是通过requireContext获取Context再调用Context的getResources方法。所以想在一个类中调用getResources方法&amp;#xff0c;就得获取Context对象&amp;#xff0c;context可以作为参数传进来&amp;#xff0c;不同的对象执行方法结果肯定有区别&amp;#xff0c;但是获取资源图片&amp;#xff0c;肯定是一样的&amp;#xff0c;所以你也可以直接用Applicatio&amp;#xff0c;就不用传context了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["[Android 开发]如何在一个静态类中调用getResources", ["//假设这是一个独立于各种View的静态类 ImageManager", "\n", "//中的static", "\nstatic{\nstaticBmp1 = ", "BitmapFactory", ".", "decode", "Resource(", "getResources", "()", ", ", "R", ".", "drawable.bg1);\n}\n", "\n", "我想要在这个静态类中进行统一的图片管理，请问可以怎么调用getResources?"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Create a javascript either function or add it directly to the submit button.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;input type='button' value='submit' onClick=\"document.formName.submit()\" &amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;-- or --&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;a href=\"javascript:document.formName.submit();\"&amp;gt;Click Here&amp;lt;/a&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立表单提交按钮", ["\n\n", "I've a form and I've a submit button in it.", "\n\n", "What I want is to place the submit button outside the  tag (because of design issues) but still want to be able to submit the form when I click on it.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Check this code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$collection1 = [ 'file1', 'file2' ];\n$collection2 = [ 'property1' =&amp;gt; 'value1', 'property2' =&amp;gt; 'value2' ];\n\n$newCollection = collect($collection1)-&amp;gt;flip()-&amp;gt;map(function() use ($collection2) { \nreturn $collection2;\n        });\n\ndd($newCollection);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or this code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$collection1 = collect([]);\n$collection2 = [ 'property1' =&amp;gt; 'value1', 'property2' =&amp;gt; 'value2' ];\n\n\n$collection1-&amp;gt;put('file1', $collection2);\n$collection1-&amp;gt;put('file2', $collection2);\n\ndd($collection1);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or this code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$collection1 = [ 'file1', 'file2' ];\n$collection2 = [ 'property1' =&amp;gt; 'value1', 'property2' =&amp;gt; 'value2' ];\n\n$test = collect($collection1)-&amp;gt;map(function ($file) use ($collection2) {\n    return [$file =&amp;gt; $collection2];\n});\n\ndd($test);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;or this code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$collection1 = [ 'file1', 'file2' ];\n$collection2 = [ 'property1' =&amp;gt; 'value1', 'property2' =&amp;gt; 'value2' ];\n\n\n$newCollection = collect($collection1)-&amp;gt;flatMap(function ($file) use ($collection2) {\n    return [$file =&amp;gt; $collection2];\n});\n\ndd($newCollection);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Laravel如何从两个独立的集合中创建一个对象？", ["\n\n", "I've got an collection:", "\n\n", "$collection1 = [ 'file1', 'file2' ];\n", "\n\n", "I want to add properties to ", "collection1", "\n\n", "$collection2 = [ 'property1' => 'value1', 'property2' => 'value2' ];\n", "\n\n", "to have:", "\n\n", "$collection1 = [ 'file1' => [ 'property1' => 'value1', 'property2' => 'value2' ],\n 'file2' => [ 'property1' => 'value1', 'property2' => 'value2' ] ];\n", "\n\n", "how can I do it?", "\n\n", "I tried something like:", "\n\n", " $collection1[0]->push($collection2);\n $collection1[1]->push($collection2);\n", "\n\n", "But it's not working. I don't know why this is not working out-of-the-box like in javascript. :/", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第一个for循环 i&amp;lt;len1 改成&amp;lt;len2  还有没有处理大小写字母转换&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。", ["问题遇到的现象和发生背景", "\n", "（为什么我的代码有错误）一般的文本编辑器都有查找单词的功能，该功能可以快速定位特定单词在文章中的位置，有的还能统计出特定单词在文章中出现的次数。", "\n", "现在，请你编程实现这一功能，具体要求是：给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同（参见样例 1），如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例 2）。", "输入格式", "共 22 行。", "\n", "第 11 行为一个字符串，其中只含字母，表示给定单词；", "\n", "第 22 行为一个字符串，其中只可能包含字母和空格，表示给定的文章。", "\n", "输出格式", "一行，如果在文章中找到给定单词则输出两个整数，两个整数之间用一个空格隔开，分别是单词在文章中出现的次数和第一次出现的位置（即在文章中第一次出现时，单词首字母在文章中的位置，位置从 00 开始）；如果单词在文章中没有出现，则直接输出一个整数 -1−1。", "\n", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "char", " a[", "1000", "], b[", "1000", "];\n    ", "int", " count1[", "100", "];\n    ", "int", " k=", "0", ";\n    ", "gets", "(a);\n    ", "gets", "(b);\n    ", "int", " len1 = ", "strlen", "(a);\n    ", "int", " len2 = ", "strlen", "(b);\n    ", "for", " (", "int", " i = ", "0", "; i < len1; i++)\n    {\n        ", "if", " (a[", "0", "] == b[i])\n        {\n            ", "int", " flag=", "1", ";\n            ", "for", " (", "int", " j = ", "0", "; j < len1; j++)\n            {\n                ", "if", " (a[j] != b[i + j])\n                {\n                    flag=", "0", ";\n                    ", "break", ";\n                }\n            }\n            ", "if", " (flag)\n            {\n                count1[k] = i;\n                k++;\n                ", "continue", ";\n            }\n        }\n    }\n    ", "if", " (k > ", "0", ")\n    {\n        ", "printf", "(", "\"%d \"", ", k);\n        ", "printf", "(", "\"%d\\n\"", ", count1[", "0", "]);\n    }\n    ", "else", "\n        ", "printf", "(", "\"-1\\n\"", ");\n    ", "return", " ", "0", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "原本的正确运行结果应该是这样的", "\n", "但是我的运行结果是这样的", "\n"]], "Tag": "算法设计"}
{"Answer": "需要用文件选择器让用户指定位置，否则程序没有权限访问根路径的。", "Konwledge_Point": "树中的独立集", "Question": ["WP8.1可以操作非独立存储空间吗？", ["我有一个需求，就是向手机存储的根目录里拷贝几张图片和视频。", "\n\n", "查了好多教程与资料发现都是对独立存储空间的操作。", "\n\n", "请问有没有对非独立存储中进行文件读写操作的方法？谢谢！"]], "Tag": "算法设计"}
{"Answer": "加个while循环，然后在choice == 1时候弄个break；，==2时候不做跳出就行了\r\n\r\n```\r\n while（true）\r\n {\r\n\t\t\tif(choice == 1)\r\n\t\t\t{\r\n\t\t\t\t//相关操作\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse if(choice == 2)\r\n\t\t\t{\r\n\t\t\t\t//显示学生信息\r\n\t\t\t}\r\n\t\t\tif(choice == 3)\r\n\t\t\t{\r\n\t\t\t\t//相关操作\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n }\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["C语，如何将choice 2 循环独立出来？", ["目标是如果choice=2，那么显示学生信息后再一次让用户输入选择并运行所选选项，目前如果第一次是2，这个if中就没有下文了，怎么才能让它正确循环？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem is that in your html you're setting the &lt;code&gt;id&lt;/code&gt; of all of the sales mode dropdowns to &lt;code&gt;txtHint&lt;/code&gt;. Aside from being invalid html, it's causing your ajax call back to always update the first element it finds with that id, which happens to be the one for Apple in your example. What you want to do is give each of them a unique id, and use that in your callback.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在表AJAX，PHP中每行显示独立的多个ajax查询结果", ["\n\n", "Objective:", "\nTo show a new, unique set of options in a drop-down box, for each row in the table, by using AJAX and PHP.", "\n\n", "Details:", "\nI have a table written in PHP, where, I create the rows of the table in for loop:", "\n\n", "Code:", "\n\n", "<table>\nforeach ($mylist as $i)\n{\n<tr>\n  <td>\n       echo '<select name=\"product[]\" onchange=\"showItems(this.value,'.$i.')\" >';\n       echo \"<option value='APPLE'>APPLE</option>\";\n       echo \"<option value='ORANGE'>ORANGE</option>\";\n       echo \"<option value='PLUM'>PLUM</option>\";\n       echo '</select>';\n  </td>\n  <td>\n       echo '<select name=\"sales[]\" id=\"txtHint\">';\n       echo '</select>';\n  </td>\n</tr>\n}\n</table>\n", "\n\n", "This creates a table that looks like this:", "\n\n", "No.   Product                sales mode\n---   -------                -------\n 1    (Drop-down list here)  (drop-down list here)\n 2    (Drop-down list here)  (drop-down list here)\n", "\n\n", "There are ", "N", " no. of table rows.", "\n\n", "When user selects a particular option, say, \"APPLE\" from the drop-down list, in the ", "Product", " column, for ", "row 1", ",  then the corresponding ", "sales mode", " column for the same ", "row 1", " is updated with options using AJAX, relevant to the ", "APPLE", " product selected in the first column.", "\n\n", "That is, Based on option in ", "Product", " column, the options in ", "sales mode", " column will change.(And not vice-versa).", "\n\n", "The problem I am facing is, whenever, I select a new different product,in the second row of the table, the first row's ", "sales mode", " column also changes, based on the second row's ", "Product", " selection.", "\n\n", "In the first step:", "\n\n", "No.  Product   sales mode\n---  ----      ----------\n 1   Apple     EXPRESS\n 2   (Select)  (Select)\n", "\n\n", "When I do this next[Choosing ", "Orange", " option in the ", "product", " column]:", "\n\n", "No.  Product   sales mode\n---  ----      ----------\n 1   Apple     EXPRESS//This is the default option for Apple\n 2   Orange    (select)\n", "\n\n", "It becomes this:", "\n\n", "No.  Product   sales mode\n---  ----      ----------\n 1   Apple     REGULAR//This is the default option for Orange \n 2   Orange    (select)\n", "\n\n", "AJAX code:", "\n\n", "function showItems(str,val)\n{\nif (str==\"\")\n  {\n  document.getElementById(\"txtHint\").innerHTML=\"\";\n  return;\n  }\nif (window.XMLHttpRequest)\n  {// code for IE7+, Firefox, Chrome, Opera, Safari\n  xmlhttp=new XMLHttpRequest();\n  }\nelse\n  {// code for IE6, IE5\n  xmlhttp=new ActiveXObject(\"Microsoft.XMLHTTP\");\n  }\nxmlhttp.onreadystatechange=function()\n  {\n  if (xmlhttp.readyState==4 && xmlhttp.status==200)\n    {\n    document.getElementById(\"txtHint\").innerHTML=xmlhttp.responseText;\n    }\n  }\nxmlhttp.open(\"GET\",\"getuser.php?q=\"+str+\"&val=\"+val,true);\nxmlhttp.send();\n}\n", "\n\n", "How do I achieve this? [Fairly new to AJAX]", "\n\n", "Appreciate your help, suggestions. \nLet me know, if you need further information.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;As you are not using the full application, the &lt;code&gt;ViewPluginManager&lt;/code&gt; will not be provided with the names of the &lt;em&gt;form&lt;/em&gt; view helpers by default; as they live the &lt;code&gt;Zend\\Form\\View&lt;/code&gt; namespace.&lt;/p&gt;\n\n&lt;p&gt;You can easily register the missing services with a few lines best placed in your 'render factory' if you have one.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$viewPluginManager = $render-&amp;gt;getHelperPluginManager();\n\n$formConfig = new \\Zend\\Form\\View\\HelperConfig();\n$formConfig-&amp;gt;configureServiceManager($viewPluginManager);\n\necho $render-&amp;gt;form($this-&amp;gt;form);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何在我的PHP应用程序中使用ZF2表单作为独立模块？", ["\n\n", "Looking at any kind of basic example on ZF2 forms, I have something like this:", "\n\n", "In Controller", " (any basic tutorial example)", "\n\n", "    $username = new Element\\Text('username');\n    $username->setLabel('Username')->setAttributes(array(\n        'class' => 'username',\n        'size' => '30'\n    ));\n\n    $form = new Form('my-form');\n    $form->add($username);\n    return $this->partial(\"xxx.phtml\", array(\n        'form' => $form\n    ));\n", "\n\n", "In View", "\n\n", "/**\n * inside view template\n *\n * @var \\Zend\\View\\Renderer\\PhpRenderer $this\n */\necho $this->form($this->form);\n", "\n\n", "Error I get", "\n\n", "\n", "PHP Fatal error:  Uncaught exception 'Zend\\ServiceManager\\Exception\\ServiceNotFoundException' with message 'Zend\\View\\HelperPluginManager::get was unable to fetch or create an instance for form' in vendor\\zendframework\\zend-servicemanager\\src\\ServiceManager.php:557\nStack trace:\n#0 vendor\\zendframework\\zend-servicemanager\\src\\AbstractPluginManager.php(161): Zend\\ServiceManager\\ServiceManager->get('form', true)\n#1 vendor\\zendframework\\zend-view\\src\\Renderer\\PhpRenderer.php(372): Zend\\ServiceManager\\AbstractPluginManager->get('form', NULL)\n#2 vendor\\zendframework\\zend-view\\src\\Renderer\\PhpRenderer.php(390): Zend\\View\\Renderer\\PhpRenderer->plugin('form')\n#3 module\\XXX\\view\\xxx\\xxx.phtml(8): Zend\\View\\Renderer in vendor\\zendframework\\zend-servicemanager\\src\\ServiceManager.php on line 557\n", "\n", "\n\n", "I suspect that some fundamental plugin is not set up.  Perhaps even the service that must register the plugin is not set up (ServiceManager)", "\n\n", "What can I do to get ZF2 forms working in my otherwisely non-ZF2 app?", "\n\n", "My intent is to use ZF2 form component to build forms, and to use them in my php application.", "\n    "]], "Tag": "算法设计"}
{"Answer": "cloudyzhao所说方案实现简单有效，此处列一个基础的写法，不依赖正则库\r\n    s = \"Abc34g8\"\r\n\t\tresult = 0\r\n\t\ti = 0\r\n\t\twhile  i &lt; len(s):\r\n\t\t    tmp_num = 0\r\n\t\t\t\twhile i &lt; len(i) and s[i] &gt;= '0' and s[i] &lt;= '9':\r\n\t\t\t\t    tmp_num = tmp_num*10 + int(s[i])\r\n\t\t\t\t\t\ti += 1\r\n\t\t\t\ti+= 1\r\n\t\t\t\tresult += tmp_num\r\n\t\tprint(result)", "Konwledge_Point": "树中的独立集", "Question": ["Python：字符串中数字求和", ["1.输入一个字符串，取出这个字符串中所有的数字并求和。每个数字都是*独立的，*不连续。", "\n现在只知道如何提取字符串中的数字", "\n例：s=‘Abc34g8’", "\n         for I in s：", "\n                I.isdigit()", "\n或者      for I in s", "\n                if I in [1,2,3,4,5,6,7,8,9]", "\n但是如何让提取出来的数字按照要求相加呢？   按照这种方法结果应是：15", "\n 2.输入一个字符串，取出这个字符串中所有的数字并求和。其中相邻的数字是*连续*的的。    按照这种方法结果应是：42", "\n 问如何求和？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;/tmp目录是flink默认的临时文件目录。&lt;br /&gt;这三个参数的目录指定未自己创建的目录&amp;#xff0c;给权限。&lt;br /&gt;state.checkpoints.dir&lt;br /&gt;state.savepoints.dir&lt;br /&gt;io.tmp.dirs&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["flink独立集群运行报错", ["\n", "\n", "\n", "谁这个问题？是由于什么原因导致的呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/726907906436135.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["为什么不显示独立的模拟机", ["Androidstudio模拟机是已经创建好的，一直没有什么问题，但是被我不知道设置了什么，不独立显示了，显示在Emulator上，也不能对模拟机进行控制", "\n", "就是这样，怎么才能让模拟机独立显示出来啊"]], "Tag": "算法设计"}
{"Answer": "你看下你的电脑的硬盘，是不是有两个接口，一个比较小的是数据线，一个黑色扁平的接头，是电源线。然后看看你的主板有没有类似这样的扁平的接头了。\r\n如果有，你需要购买一个sata-&gt;显卡的转接线。注意看下显卡那头，有两种，一种是8个孔的，一种是6个孔的，不要买错。\r\n如果没有，你除了需要购买一个sata-&gt;显卡的转接线，还需要购买一个sata 1分2 的线。\r\n以上转接线价格在1~3元左右，电脑城有卖，带上你的显卡去买，不要买错。\r\n如果不想去电脑城或者所在城市没有电脑城，可以某宝搜索“sata 转显卡6p线”和卖家沟通好，不要买错。\r\n另外，检查下你电脑电源的铭牌，看下它的功率是否&gt;=300W，如果小于300W，以上线都不要买了，直接换一个电源，350W以上，并且带显卡6pin/8pin输出的（有的8pin支持拆开来兼容6pin），大约价格在40~50元。", "Konwledge_Point": "树中的独立集", "Question": ["主机没有独显电源线的接口？", ["如题，新买了一块GTX750i独显，但是在安装的时候在主机箱里找不到显卡供电线的接口，", "\n图中白色的接头就是不知道该接到哪的一端，另一端已经接在了显卡上", "\n找遍了主机箱，也没有找到合适的接口，求助，怎么处理", "\n主机箱内部图："]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在if_else嵌套的结构中&amp;#xff0c;else总是与离它最近的上一个未配对的if配对&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["为什么这边else可以单独用或者说为什么else为什么会和if有关联", ["num=[];", "\n", "i=2", "\n", "for i in range(2,100):", "\n", "   j=2", "\n", "   for j in range(2,i):", "\n", "  ", "if", "(i", "%j", "==", "0", "):\n\n     ", "break", "\n", "\n", "   else:", "\n", "  ", "num", ".", "append", "(i)\n", "\n", "print(num)"]], "Tag": "算法设计"}
{"Answer": "将画线的起始点和结束点保存下来，下次画线的时候将之前所画线重新绘制出来，笨办法，不要吐槽\r\n```\r\n bool startDraw = true;\r\n        bool sdraw = false;\r\n        private Point currentpoint = new Point();\r\n        private Point startpoint = new Point();\r\n        private Pen p = new Pen(Color.Red, 12);\r\n        List&lt;Point&gt; startPoints = new List&lt;Point&gt;();\r\n        List&lt;Point&gt; endPoints = new List&lt;Point&gt;();\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n        private void panel1_MouseDown(object sender, MouseEventArgs e)\r\n        {\r\n            if (startDraw)\r\n            {\r\n                startpoint.X = e.X;\r\n                startpoint.Y = e.Y;\r\n                startPoints.Add(startpoint);\r\n                sdraw = true;\r\n            }\r\n        }\r\n        private void button3_Click(object sender, EventArgs e)\r\n        {\r\n            startDraw = false;\r\n        }\r\n        private void button1_Click_1(object sender, EventArgs e)\r\n        {\r\n            startDraw = true;//点击按钮鼠标处于画线状态\r\n        }\r\n\r\n        private void panel1_MouseUp(object sender, MouseEventArgs e)\r\n        {\r\n            if (startDraw)\r\n            {\r\n                endPoints.Add(currentpoint);\r\n                sdraw = false;\r\n            }\r\n        }\r\n\r\n        private void panel1_MouseMove(object sender, MouseEventArgs e)\r\n        {\r\n            if (startDraw)\r\n            {\r\n                if (sdraw)\r\n                {\r\n                    currentpoint.X = e.X;\r\n                    currentpoint.Y = e.Y;\r\n                    Refresh();\r\n                }\r\n            }\r\n        }\r\n        private void panel1_Paint(object sender, PaintEventArgs e)\r\n        {\r\n            Graphics newgraphics = e.Graphics;\r\n            Rectangle r = new Rectangle(0, 0, 795, 400);//是创建画矩形的区域 \r\n            newgraphics.DrawRectangle(Pens.Red, r);\r\n            if (sdraw &amp;&amp; startDraw)\r\n            {\r\n                for (int i = 0; i &lt; startPoints.Count; i++)\r\n                {\r\n                    if (i&lt;endPoints.Count)\r\n                    {\r\n                        newgraphics.DrawLine(p, startPoints[i], endPoints[i]); \r\n                    }\r\n                }\r\n                newgraphics.DrawLine(p, startpoint, currentpoint);\r\n            }\r\n        }\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["请教，C# winform根据鼠标移动画多条直线", ["各位大佬，麻烦帮我看看哪里不对劲，根据MouseDowm、MouseMove、MouseUp画下直线，但再画另一条之前画的一条就消失了。请教怎么画多条直线？只画直线就行", "\n            private void panel1_MouseDown(object sender, MouseEventArgs e)", "\n        {", "\n            if(startDraw)", "\n            {", "\n                startpoint.X=e.X;", "\n                startpoint.Y= e.Y;", "\n                sdraw = true;", "\n            }", "\n        }", "\n\n", "    private void button3_Click(object sender, EventArgs e)\n    {\n        startDraw = false;\n    }\n            private void button1_Click_1(object sender, EventArgs e)\n    {\n        startDraw = true;//点击按钮鼠标处于画线状态\n    }\n\n    private void panel1_MouseUp(object sender, MouseEventArgs e)\n    {\n        if (startDraw)\n        {\n            sdraw = false ;\n        }\n    }\n\n    private void panel1_MouseMove(object sender, MouseEventArgs e)\n    {\n        if (startDraw)\n        {\n            if (sdraw)\n            {\n                currentpoint.X = e.X;\n                currentpoint.Y = e.Y;\n                Refresh();\n            }\n        }\n                    private void panel1_Paint(object sender, PaintEventArgs e)\n    {\n        Graphics newgraphics = e.Graphics; \n        Rectangle r = new Rectangle(0, 0, 795, 400);//是创建画矩形的区域 \n        newgraphics.DrawRectangle(Pens.Red, r);\n        if (sdraw && startDraw)\n        {\n            newgraphics.DrawLine(p, startpoint, currentpoint);\n        }\n    }\n"]], "Tag": "算法设计"}
{"Answer": "创业公司的风险是很高的，创业成功是小概率事件，但回报也是很高的，高到你几年之内就成为百万富翁。\r\n\r\n主要还是看你自己的选择，想当小概率的人，还是想当大概率的人。", "Konwledge_Point": "树中的独立集", "Question": ["创业型公司靠谱否", ["本人本科毕业已有5年了。一直做java，用过一点点C。前台后台，C/S、B/S、手机、Eclipse插件都做过，外派去过惠普、oracle、IBM。08年工作满3年的时候是9k税前（软通外派IBM的职位）。", "\n\n", "去年这个时候被前部门经理拉我去加盟创业，当时有一个职业分析师说如果我不创业继续留守软通或跳槽，凭借资历和4年java经验，待遇会10k+。但是当时我选择了加盟创业，被那哥哥（大我5岁吧）忽悠进去了。待遇没变化还是9k税前，本应该降薪的，因为公司是靠风投活着，但考虑到那哥哥的关系待遇持平。当时他忽悠我的时候这么说的：安于现状还是展望未来；公司是做移动互联网业务的，手机必然是未来的主流；等公司上市了，待遇是你现在没法比的。", "\n\n", "这样过了1年了，我工作5年了也，待遇依然是9k税前，看着其他同行都15k、18k的拿，钱多活少，准点回家，真眼红啊。也不知道当初的决定对错。"]], "Tag": "算法设计"}
{"Answer": "使用isEqualToString: 可以比较两个字符串是否相同\r\n\r\n    NSString *str1=@\"Šämplé Štrïñg\";\r\n    NSString *str2=@\"Sample String\";\r\n    if ([str1 isEqualToString:str2]) {\r\n         //...todo\r\n    }", "Konwledge_Point": "树中的独立集", "Question": ["NSString独立比较特殊字符", ["如何单独比较两个NSSTring的字符？", "\n\n", "NSPredicate", " 提供了", "==[d]", "比较。", "\n\n", "但是不知道有没有方法可以直接比较NSString。", "\n\n", "比如：这两个字符应该是相同的。", "\n\n", "Šämplé Štrïñg\n\nSample String\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;创建并进入独立的conda 虚拟环境是我们在使用python完成工程项目中经常会遇到的&amp;#xff0c;掌握下面的两条命令&amp;#xff0c;你就可以轻松完成。&lt;/p&gt;\n\n&lt;p&gt;(1) 创建一个新的虚拟环境&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;conda create -n env_name python&amp;#61;3.7&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(2) 进入创建好的虚拟环境&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;conda activate env_name&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何创建并进入独立的conda 虚拟环境", ["如何创建并进入独立的conda 虚拟环境？"]], "Tag": "算法设计"}
{"Answer": "filterChainProxy肯定是可以加的，你想绕过认证的话，肯定得把你的认证作为一个filter加入到filterChainProxy里面去，要不然SecurityContextHolder.getContext()肯定不能获得数据", "Konwledge_Point": "树中的独立集", "Question": ["关于security2的问题", ["老系统是security2.0权限实现的,现在有一个系统需要调用老系统的页面,如何能绕过登录呢?我写了个过滤器然后再里面判断是否用户信息存在,希望有代码示例,网上找了很久没找到!谢谢大家"]], "Tag": "算法设计"}
{"Answer": "左右两边是按钮，控制中间的色块改变颜色，封装到一个文件中去", "Konwledge_Point": "树中的独立集", "Question": ["duilib中像这种独立的控件怎么实现亮度加减功能啊，求指教，在线等", ["之前接触过一个使用Slider，但是这个控件是单独的，不知道应该怎么弄，求指教，最好能有伪代码，拜托拜托"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I'm guessing you are using VirtualBox on Windows or Mac OS X.&lt;/p&gt;\n\n&lt;p&gt;What is likely causing this is the slow volume sharing performance of VirtualBox. Some references:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://news.ycombinator.com/item?id=10052837\" rel=\"nofollow noreferrer\"&gt;https://news.ycombinator.com/item?id=10052837&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/boot2docker/boot2docker/issues/593\" rel=\"nofollow noreferrer\"&gt;https://github.com/boot2docker/boot2docker/issues/593&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"https://superuser.com/questions/859149/slow-disk-performance-in-docker-container\"&gt;https://superuser.com/questions/859149/slow-disk-performance-in-docker-container&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Basically, you will need to experiment with some other sharing methods (NFS, xhyve, Vagrant rsync) to get up to more native performance.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Php应用程序开始与docker一起慢慢运行", ["\n\n", "I am sure it is too general question. But still hope to get some helpful advice.", "\n\n", "So I use vagrant to run our php application, we use postgres, rabbitmq and memcached. I set up docker environment. Here's my docker-compose.yml", "\n\n", "web:\n  build: app\n  ports: \n    - \"80:80\" \n  volumes:\n    - /Users/ihorsamusenko/my/project:/var/www/app\n  links:\n    - db\n    - rabbit\n    - memcached\ndb:\n  build: postgres\n  ports:\n    - 5432:5432\n  environment:\n    POSTGRES_PASSWORD: postgres\n    POSTGRES_USER: postgres\nrabbit:\n  image: rabbitmq\nmemcached:\n  image: memcached\n", "\n\n", "But with such setup application started working much slower than it used to do. \nI understand that probably my problem is application specific. But still, maybe there are some common tips for such problems.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;try using $_SESSION instead of $HTTP_SESSION_VARS when checking the session.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["代码忽略了之前成功登录的有效会话", ["\n\n", "I have a login script that when successful, should check to see if the session exists, if not, display login form, once posted, authenticate, if successful, set session.", "\n\n", "After I successfully post the form, and it binds successfully, then go back to the page, it completely ignores the session and displays the login page.", "\n\n", "I don't know what I am doing wrong, do I have the conditionals in the wrong order? Should I be looking for the session before testing to see if the form was posted?", "\n\n", "<?\nsession_start();\n\n// using ldap bind\nif(isset($_POST['username']) && isset($_POST['password'])) {\n    $username = $_POST['username'];\n    $password = $_POST['password'];  // associated password\n\n    // connect to ldap server\n    $ldapconn = ldap_connect(\"ldap://ldap.server\")\n        or die(\"Could not connect to LDAP server.\");\n\n    if ($ldapconn) {\n        // binding to ldap server\n        $ldapbind = ldap_bind($ldapconn,$username,$password);\n        // verify binding\n        if ($ldapbind) {\n            echo \"LDAP bind successful...\";\n            $_SESSION['valid_username'] = $username; \n        } else {\n            echo \"LDAP bind failed...\";\n        }\n    }\n} else {\n\n    if(isset($HTTP_SESSION_VARS['valid_username'])) {\n        print 'you are logged in - congrats';\n    } else {\n    ?>\n    <h1>Login</h1>\n    <form method=\"post\" action=\"<?=$_SERVER[\"PHP_SELF\"]?>\">\n        <p>username: <input type=\"text\" name=\"username\" /><br />\n            password: <input type=\"password\" name=\"password\" /></p>\n            <p><input type=\"submit\" name=\"submit\" value=\"submit\" /></p>\n    </form><?\n    }\n}\n?>\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Modify your PHP code to this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;a href=\"/thanks&amp;lt;?php echo rand_string( 5 ); ?&amp;gt;.php\" target=\"_blank\"&amp;gt;Thank you&amp;lt;/a&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Put this code your &lt;code&gt;DOCUMENT_ROOT/.htaccess&lt;/code&gt; file:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;RewriteEngine On\n\nRewriteRule ^(thanks)[0-9]+(\\.php)$ /$1$2 [L,NC]\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["为每个Thank You页面生成随机URL", ["\n\n", "I'm fiddeling around with a problem and cant find a solution. What is basically needed is that I have a site where download button inserts a random code in the end of the URL, example", "\n\n", "<a href=\"/thanks.php?uq=<?php echo rand_string( 5 ); ?>\" target=\"_blank\">Thank you</a>\n", "\n\n", "But currently the url will look like ", "xx.mydomain.com/thanks.php?uq=2js98", " or etc, what I would like to do, is that the url would look ", "xx.mydomain.com/thanks2js98.php", " or just ", "xx.mydomain.com/thanks2js98", "\n\n", "I have tried all the info I can find, but I think I'm not at home with all the code :(", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;其他的cpp呢&amp;#xff0c;你只放这一个我们也看不到原因啊。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["同一源文件下不同cpp独立运行，C++报错", ["VS   C++报错", "\n", "感觉代码完全没有问题，只能把所有的cpp设置成从生成中排除，方可运行其中的一个cpp。而且运行其他的cpp时，也会跳转到这个唯一能运行的cpp中。", "\n", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 ", "50", "%\n\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", " \n", "{\n    ", "//选择结构 单行语句", "\n    ", "//举例：输入一个分数，如果大于六百，则输出。", "\n          ", "//步骤一，输入一个分数", "\n    \n    ", "int", " a = ", "0", ";\n    cout << ", "\"请输入一个分数\"", " << endl;\n    cin >> a;\n\n          ", "//步骤二，打印出输入的分数", "\n    \n    cout << ", "\"您输入的分数为 \"", " << a << endl;\n\n          ", "//步骤三，判断分数是否大于600", "\n    \n    ", "if", " (a >= ", "600", ")", "//千万注意此处没有分号！！！！！！！", "\n    {\n        cout << ", "\"考上一本\"", " << endl;\n    }\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n\n}\n", "\n", "\n", "\n", "\n", "自己尝试过修改从生成中排除和修改main函数的名", "\n", "各个cpp独立运行，代码没有错误"]], "Tag": "算法设计"}
{"Answer": "http://www.evolife.cn/html/2015/83522.html", "Konwledge_Point": "树中的独立集", "Question": ["windows编程独立程序音量控制或选择？", ["windows编程独立程序音量控制或选择？怎么选择前台的应用程序发声，所有后台和系统不发声？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; success():\n    &lt;span class=\"hljs-attribute\"&gt;p&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in p:\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt; *&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-i\n    &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-t\n\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(f&amp;#39;成功概率&amp;#xff1a;{success():.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;f}&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;答案&amp;#xff1a; 0.600&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["用编程做数学题三人独立破译密码", ["用编程做数学题：三个人独立地去破译一份密码，每人能独立译出这份密码的概率分别为1/5  1/3  1/4则这份密码被译出的概率为（ ）。"]], "Tag": "算法设计"}
{"Answer": "、、。引起中断肯定要设置触发事件，键盘的话你肯定要设置低电平中断或者下降沿中断，然后打开该接口对应的中断，再打开总中断，首先确定该键盘对应的接口是中断接口，传统51一共有两个外部中断接口，中断0（P3.2）和中断1(P3.3)\r\n也就是说你的按键必须接到这两个口才能引起中断。\r\nvoid EX0Init()\r\n{\r\n IT0 = 1; //外部中断0为下降沿中断\r\n EX0  = 1;//外部中断0对应的中断打开\r\n EA = 1; //打开总中断。\r\n}\r\n//一旦有按键按下引起中断，MCU就会自动进入到下面这个程序里\r\nvoid EX0Isr() interrupt 0\r\n{\r\n  //要执行的代码\r\n}", "Konwledge_Point": "树中的独立集", "Question": ["关于51单片机的独立键盘检测", ["在51单片机中，怎么用中断的方式检测按键是否按下？希望最好能有代码。谢谢。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;那就  sudo ./start-cluster.sh&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["flink启动独立会话程序权限不够怎么解决呀", ["启动flink独立集群错误，麻烦大家帮我看看这个是什么问题，怎么解决？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第一点&amp;#xff0c;如果自己知道哪儿不足&amp;#xff0c;就可以报班学习不足的地方&amp;#xff0c;免费的自己不会珍惜&amp;#xff0c;但是花钱的相对比较珍惜&amp;#xff0c;我以前也是这样&amp;#xff1b;第二点&amp;#xff0c;尽可能去大公司&amp;#xff0c;哪怕工资低点&amp;#xff0c;相信我。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["工作四年的程序员，怎么提升自己并确定一个职业方向走下去，目前从事开发工作", ["16年到现在，已经四年多的时间了，但是一直从事的是开发的工作，并且一些深入的技术也在工作中没有用到过，现在挺迷茫的，不知道针对现在的情况怎么样能够在现在的基础上提升自己，因为现在总是觉得有点止步不前了。", "\n\n", "另外没有一个明确的职业方向，大家有什么好的意见跟建议吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Bert模型可以用于训练多标签分类问题&amp;#xff0c;也就是将一个文本样本分为多个标签类别。但是&amp;#xff0c;对于一个中文长句子有多个含义的情况&amp;#xff0c;需要先对句子进行分词&amp;#xff0c;将其转换为一系列的词汇&amp;#xff0c;然后针对每个词汇训练一个标签分类器。这个过程需要使用到多标签分类器的方法&amp;#xff0c;例如Multi-Label Classification with Bert等。&lt;/p&gt;\n&lt;p&gt;具体来说&amp;#xff0c;可以使用Bert模型对每个词汇进行编码&amp;#xff0c;然后针对每个词汇训练一个二元分类器&amp;#xff0c;判断它是否属于某个标签类别。最终&amp;#xff0c;将多个二元分类器的输出合并起来&amp;#xff0c;就可以得到一个多标签分类器&amp;#xff0c;用于将输入的长句子分为多个标签类别。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;对于一个中文长句子有多个含义的情况&amp;#xff0c;可能存在歧义或不确定性&amp;#xff0c;导致分类器输出的结果也具有一定的不确定性。此外&amp;#xff0c;训练多标签分类器需要大量的标注数据和计算资源&amp;#xff0c;因此需要耗费较多的时间和精力。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["一个中文长句子，使用Bret模型可以训练出来添加多个独立的标签吗？", ["一个中文长句子，有多个含义，使用Bert模型可以训练出来添加多个不同的标签吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建议去了解一下外部中断的概念&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于使用独立按键来控制流水灯的暂停问题", ["本人初学51单片机，今天心血来潮想在流水灯的基础上使用独立按键达到暂停的效果，具体表现为：四个独立按键任意有一个被按下，流水灯暂停流动，再任意按下四个独立按键的任意一个，流水灯继续流动。但是代码改了又改，仍然不能达到预期效果，希望可以有人提供一个思路，附上代码最好。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以的&lt;br /&gt;华为的也可以&amp;#xff0c;或者360天擎&lt;br /&gt;多口的就可以&lt;br /&gt;比如6口的防火墙&amp;#xff0c;你可以设置1口是配置口&lt;br /&gt;2和3是一组&amp;#xff0c;2接内网3接外网&lt;br /&gt;4和5是一组&amp;#xff0c;4接内网5接外网&lt;br /&gt;不同的组可以使用不同的策略&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["两个独立网络能否共用一个防火墙", ["前后两栋楼，用的是两个独立的网络，现在想添加防火墙，为了省钱，能不能两个网络共用一个防火墙？同时还保持两个网络的独立。如果可以，请推荐一个防火墙的型号。（5万元左右的）无论可行与否，劳请各位大家给解释一下。"]], "Tag": "算法设计"}
{"Answer": "您好独立模式不支持创建用户操作。", "Konwledge_Point": "树中的独立集", "Question": ["sequoiadb独立模式支不支持创建用户吗？", ["我在独立模式下使用如下创建用户命令时报错： ", "\ndb.createUsr(, ); ", "\n(nofile): 0 uncaught exception: -6 ", "\nInvalid Argument", "\nsequoiadb独立模式支不支持创建用户吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, b;\n    std::cout&amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Enter two; numbers:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;;\n    std::cin&amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a &amp;gt; b)\n        std::cout&lt;span class=\"hljs-string\"&gt;&amp;#34;a is bigger than b&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        std::cout&lt;span class=\"hljs-string\"&gt;&amp;#34;a is not bigger than b&amp;#34;&lt;/span&gt;;\n}\n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["初次独立使用vs报错如何解决", ["问题遇到的现象和发生背景", "\n", "独立使用vs然后凭借记忆凑出了一段代码。F5开始报错", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<iostream>", "\n", "#", "define", " min=a-b", "\n", "int", " ", "main", "()", ";\n{\n    ", "int", " a, b;\n    std::cout<< ", "\"Enter two; numbers:\"", " << ", "'\\n'", ";\n    std::cin>> a >> b;\n    ", "if", " min>", "0", ":\n        std::cout", "\"a is bigger than b\"", ";\n    ", "else", ":\n        std::cout", "\"a is not bigger than b\"", ";\n}\n\n", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "开始cout和cin有问题然后按照提示改了std::但是剩下不清楚发生什么", "\n", "我想要达到的结果", "\n", "总体是希望达成一个简洁无错的程序"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我能实现&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立按键实现显示学号后八位，显示100，实现流水灯。", ["怎么使用独立按键来控制八位数码管显示八位数，用独立按键来控制数码管显示100？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Do you have the php for windows executables somewhere on your PC? If yes then you can simply goto to IIS\nAdd Managed Handler\nand add \n*.php as the Request Path\nModule : FastCgiModule\nExecutable :\nF:\\Program Files (x86)\\PHP\\php-cgi.exe\nand restart IIS.&lt;/p&gt;\n\n&lt;p&gt;This should do it for you.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立在IIS上安装PHP", ["\n\n", "I use IIS7 and Windows7 ultimate, and I need to install PHP on IIS in this machine, but the problem is I don't have any internet access in this computer, so the first step is search on standalone version, the result is nothing, then I try to install PHP on another machine (with internet access) and copy ", "AppData", " files to target machine. So I install successfully in first machine and copy all the ", "Web Platform Installer", " folder from ", "AppData", " to target machine, but unfortunately  the installation failed and need to connect to internet. ", "\n\n", "So how can I install PHP on IIS without internet access?\nI also have ", "Web Platform Installer", " folder from first machine? does any one have any idea about this?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Simple answer: you can't do that.&lt;/p&gt;\n\n&lt;p&gt;Static members are \"bound\" to the  given class, not an object. So every change performed on them will be visible on every alias/object created from your class.&lt;/p&gt;\n\n&lt;p&gt;You have to rethink your code.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["具有独立属性的类别名", ["\n\n", "I'm trying to create instances of a class but I'm having difficulties to have them have their own independent property values.  ", "\n\n", "class A{\n    public static $value = NULL;\n}\n\nfor ($i=0; $i <= 1; $i++) { \n    class_alias('A', 'A'.$i);\n}\n\nA0::$value = 1;\necho A0::$value; // echo 1\nA1::$value = 9;\necho A1::$value; // echo 9\necho A0::$value; // echo 9\n", "\n\n", "Here, ", "A0::$value", " should echo the value '1'.", "\n\n", "I know they are alias so the only thing that changes is the name they are called by.  ", "\n\n", "The ", "class", " I'm working on has lots of static ", "methods", " and ", "properties", " and I need to be able to call it like this ", "A0::method()", " from any part of the code so I can't just create instances of the class inside variables like this:", "\n\n", "$A1 = new A();\n$A2 = new A();\n", "\n\n", "How can I create instances of a class where I can call it statically without the use of variables and have it with its own property values independent from other alias?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Not sure where you read that it was discontinued. A new beta version was just released:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.bluestatic.org/blog/2011/01/15/macgdbp-1-4-beta-2/\" rel=\"nofollow\"&gt;https://www.bluestatic.org/blog/2011/01/15/macgdbp-1-4-beta-2/&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Mac GDB客户端独立应用程序", ["\n\n", "Since MacGDBp from bluestatic.org seems to be discontinued, is there another way to debug PHP applications with xDebug using a a standalone app for Mac OS X? ", "\n\n", "I use TextMate as my primary editor, and I'd rather not switch to NetBeans or Eclipse.", "\n    "]], "Tag": "算法设计"}
{"Answer": "首先，，线程只要活着，，就三种状态，就绪，阻塞，运行\r\n\r\n运行，，cpu同一时间只能运行一个线程，，所以不可能是运行\r\n阻塞，，被强占资源会首先变为阻塞状态（如果了解操作系统的话，会有个阻塞队列的概念，排队等待进入运行状态）\r\n就绪。。阻塞队列拍完了，会自动进入就绪状态（还有个就绪队列的概念，）\r\n注意：这里说的队列，并非先进先出的队列，只是一种叫法，，，排序是由规则的（例如，短作业优先，优先级优先，先来先服务才和数据结构中的队列类似）\r\n\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201708/13/1502588918_286121.png)\r\n此图出自，操作系统课间，\r\n\r\n\r\n纯手码，，，对你有帮助，，请给个采纳。。。。。。。。。。。^.^", "Konwledge_Point": "树中的独立集", "Question": ["java中被抢占cpu资源，的线程处于什么状态？", ["最近看到多线程这一章节，有时遇到多线程交互执行，一个线程被另外一个线程抢占了cpu资源，那么这个线程被进去阻塞状态，再转入就绪状态。还是一直处于运行状态呢？求解答！"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It looks fine so I am guessing it's this:&lt;/p&gt;\n\n&lt;p&gt;Checkboxes don't get posted if they are not checked, you need to check there are any&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (isset($_POST['graphicdetails'])){\n    foreach($_POST['graphicdetails'] as $value1) {\n        $webdetails_msg .= \"$value1\n\";\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But in any case&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (isset($_POST['graphicdetails'])){\n    $webdetails_msg .= implode(\"\n\", $_POST['graphicdetails']).\"\n\";\n} // you don't need the curly braces for 1 line but SO has a small code width\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;is less to write&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["结合两个独立的阵列", ["\n\n", "I have two separate arrays in my PHP mail form that are different sets of checkboxes: ", "webdetails", " and ", "graphicdetails", ". Only one set will be filled out (the other will be hidden unless a previous radio button is selected.) I'm wondering how to reference them correctly in my PHP.", "\n\n", "This is what I used to get one to post, but not two:", "\n\n", "foreach($_POST['webdetails'] as $value1) {\n    $webdetails_msg .= \"$value1\n\";\n}\n", "\n\n", "How do I add graphicdetails in there? Duplicating the snippet gives me ", "Warning: Invalid argument supplied for foreach()", "\n\n", "I don't know much more PHP than this, so an explanation would be appreciated.", "\n\n", "--", "\n\n", "Here's the PHP I get an error with:", "\n\n", "<?php\n/* Set mail headers */\n$myemail  = \"my.email@gmail.com\";\n$subject    = \"New Request\";\n\n$webdetails         = $_POST['webdetails'];\n$graphicdetails     = $_POST['graphicdetails'];\n\nforeach($_POST['webdetails'] as $value1) {\n    $webdetails_msg .= \"$value1\n\";\n}\nforeach($_POST['graphicdetails'] as $value2) {\n    $graphicdetails_msg .= \"$value2\n\";\n}\n\n/* Let's prepare the message for the e-mail */\n$message = \"\nDetails:\n$webdetails_msg\n$graphicdetails_msg\n\";\n\n/* Send the message using mail() function */\nmail($myemail, $subject, $message);\n\n<?php exit(); } ?>\n", "\n\n", "HTML for webdetails:", "\n\n", "<input type=\"checkbox\" name=\"webdetails[ ]\" id=\"design\" value=\"Design\" />\n<input type=\"checkbox\" name=\"webdetails[ ]\" id=\"development\" value=\"Development\" />\n<input type=\"checkbox\" name=\"webdetails[ ]\" id=\"web-updates\" value=\"Web Updates\" />\n<input type=\"checkbox\" name=\"webdetails[ ]\" id=\"forum-template\" value=\"Forum Template (Full)\" />\n<input type=\"checkbox\" name=\"webdetails[ ]\" id=\"forum-graphics\" value=\"Forum Graphics\" />\n<input type=\"checkbox\" name=\"webdetails[ ]\" id=\"web-other\" value=\"Other\" />\n", "\n\n", "HTML for graphicdetails:", "\n\n", "<input type=\"checkbox\" name=\"graphicdetails[ ]\" id=\"graphic-logo\" value=\"Logo Design\" />\n<input type=\"checkbox\" name=\"graphicdetails[ ]\" id=\"graphic-social\" value=\"Social Media Graphics\" />\n<input type=\"checkbox\" name=\"graphicdetails[ ]\" id=\"graphic-other\" value=\"Other\" />\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It is a good idea to install phpunit on a per project basis, as version differences could come up if you have multiple projects.&lt;/p&gt;\n\n&lt;p&gt;(1) &lt;code&gt;composer require phpunit/phpunit --dev&lt;/code&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;I saw some solutions over the web that requires to create a bootstrap.php with autoload but even with this, it doesn't work...&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You can use composer's autoloader as a bootstrap. A custom bootstrap might come in handy in some cases, but not necessary.&lt;/p&gt;\n\n&lt;p&gt;(2) Create a &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file, something like this (your current one does not specify a bootstrap):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&amp;gt;\n\n&amp;lt;phpunit bootstrap=\"./vendor/autoload.php\"&amp;gt;\n&amp;lt;testsuites&amp;gt;\n    &amp;lt;testsuite name=\"MyBundle test suite\"&amp;gt;\n        &amp;lt;directory suffix=\"Test.php\"&amp;gt;./Tests&amp;lt;/directory&amp;gt;\n    &amp;lt;/testsuite&amp;gt;\n&amp;lt;/testsuites&amp;gt;\n\n&amp;lt;filter&amp;gt;\n    &amp;lt;whitelist&amp;gt;\n        &amp;lt;directory&amp;gt;./&amp;lt;/directory&amp;gt;\n        &amp;lt;exclude&amp;gt;\n            &amp;lt;directory&amp;gt;./Resources&amp;lt;/directory&amp;gt;\n            &amp;lt;directory&amp;gt;./Tests&amp;lt;/directory&amp;gt;\n            &amp;lt;directory&amp;gt;./vendor&amp;lt;/directory&amp;gt;\n        &amp;lt;/exclude&amp;gt;\n    &amp;lt;/whitelist&amp;gt;\n&amp;lt;/filter&amp;gt;\n&amp;lt;/phpunit&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also check out &lt;code&gt;vendor/bin/phpunit --generate-configuration&lt;/code&gt; which is nice.&lt;/p&gt;\n\n&lt;p&gt;(3) Run &lt;code&gt;vendor/bin/phpunit&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;It should find the config file automatically, but you can also specify it with the &lt;code&gt;--configuration&lt;/code&gt; option&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何测试Symfony独立捆绑包", ["\n\n", "I have developped some bundles i.e. ", "https://github.com/975L/EmailBundle", " and I want to add tests for them. So, I have created the file ", "Tests/Service/EmailServiceTest.php", " that contains  one test.", "\n\n", "I have installed phpunit using ", "sudo apt install phpunit", " on my Ubuntu computer, but when I ", "cd", " to my bundle's folder and run ", "phpunit", " I have the following error:", "\n\n", "\n  ", "1)\n  c975L\\EmailBundle\\Tests\\Service\\EmailServiceTest::testCreateEmailObject\n  Error: Class 'c975L\\EmailBundle\\Service\\EmailService' not found", "\n", "\n\n", "It looks like the autoload can't find the class, even if declared at the top with ", "use", ".", "\n\n", "I saw some solutions over the web that requires to create a ", "bootstrap.php", " with autoload but even with this, it doesn't work...", "\n\n", "So my question is ", "how do we test a standalone Symfony Bundle with phpunit?", "\n    "]], "Tag": "算法设计"}
{"Answer": "main.py 是类似于主函数，然后重写一个init方法，将你要执行的另外几个程序写入。在你调用main.py的时候，自然就一起调用了。调试的话，如果你是跟我一样用的PyDev的话，你可以用debug模式。在你需要调试的地方打一个断点，当你进入debug模式的时候，他会执行该步，返回各个参数给你看的。你可以根据你需要的内容来看程序哪里出错。", "Konwledge_Point": "树中的独立集", "Question": ["关于怎么运行python 有以下几个程序 怎么放一起运行得出结果", ["\n\n", "\n怎么调试这些程序"]], "Tag": "算法设计"}
{"Answer": "不只是要复制setting.xml,整个maven源码都要复制,放在两个不同的地方,然后不同的开发工具分别配置,设置不同的setting.xml,实现不同项目不同的本地库", "Konwledge_Point": "树中的独立集", "Question": ["maven中的 setting.xml 可以配置多个么？", ["我建了两个工作空间，两个不同的项目A/B，通过配置不同的setting.xml，", "\n指定不同的本地仓库，然后我A项目的setting.xml放在了A 项目本地仓库中（d:\\report），B项目", "\nsetting.xml放在了c盘.m2文件夹中，结果是B项目可以使用，A项目不能使用maven打包了，", "\n然后，我把B项目中.m2中的setting删除，A项目又能打包了，我想问，改怎样配置两个setting，", "\n才能让每个项目独立使用？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Doing this is possible. PHP connects to a database using a host name or IP address, port number, database, DB user name and password. Usually DB connections are limited to the same server (i.e. only a script that calls the database from the same server can connect. If your hosting provider allows you to change this (which would be insecure, that's why it's limited) you can connect to a central DB from wherever you want.&lt;/p&gt;\n\n&lt;p&gt;As long as database access is open to the IP of site B, you just have to figure out the queries and you're good to go.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Magento Store与其他网站共享数据库", ["\n\n", "Is it possible to a single database across multiple websites on different servers?\nWhat I am trying to do is. ", "\n\n", "For example I have website A and B\nI have this online store website for example A and i want to allow only users of store A who have purchased this certain product from store A to access Website B.\nWebsite A and B are both on different servers. ", "\n\n", "So I want to run mysql queries on website B at the login page like ...\nselect all the users from website A who has purchased this product are allowed to log in. ", "\n\n", "Any ideas will be appreciated.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1.int是可以的&amp;#xff0c;但是但凡玩单片机的都会注意内存管理。int太大了&amp;#xff0c;而且不同的平台下&amp;#xff0c;int的长度也不相同。&lt;br /&gt;为什么用unsigned char&amp;#xff1f;unsigned char值是0-255,16进制为0-0xff&amp;#xff0c;只占用一个字节&amp;#xff0c;除了bit以外的最小单位&amp;#xff0c;省空间而且够用啊&lt;br /&gt;2. 如果放在if外&amp;#xff0c;那就在P3_1为低电平的情况下&amp;#xff0c;就一直执行&amp;#xff1b;放在if内&amp;#xff0c;则在p3_1被拉高时&amp;#xff0c;进入第二级while&amp;#xff0c;并在p3_1被松开时&amp;#xff0c;执行&lt;br /&gt;显然&amp;#xff0c;你想做个按键控制&amp;#xff0c;就必须放在if内&lt;br /&gt;ps.你确定要P2 &amp;#61; ~NUM嘛&amp;#xff1f;如果我没猜错&amp;#xff0c;P2应该也是一个引脚&amp;#xff0c;引脚的类型一般是bit&amp;#xff0c;只有1位。而NUM可是一个有8位的unsigned char啊&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["51单片机独立按键控制LED二进制", ["独立按键控制LED二进制", "STC89C52以及普中51的开发板", "第一个问题 为什么要定义为unsigned char，int可不可以", "第二个 为什么        NUM++;P2=~NUM;放在if的大括号外边就不型，在里面就可以", "\n", "\n", "#", "include", " ", "<REGX52.H>", "\n", "#", "include", "<INTRINS.H>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "//        P2=0XFE;", "\n    ", "void", " ", "Delay1ms", "(", "int", " x)", ";\n    ", "unsigned", " ", "char", " NUM=", "0", ";\n    ", "while", "(", "1", ")\n    {\n        ", "if", "(P3_1)\n        {\n            ", "Delay1ms", "(", "20", ");\n            ", "while", "(P3_1)\n            {\n                ", "Delay1ms", "(", "20", ");\n\n            }\n        NUM++;\n        P2=~NUM;\n        }\n\n\n    }\n    ", "return", " ", "0", ";\n}\n\n", "void", " ", "Delay1ms", "(", "int", " x)", "        ", "//@11.0592MHz", "\n", "{\n    ", "while", "(x)\n    {\n        ", "unsigned", " ", "char", " i, j;\n\n        _nop_();\n        _nop_();\n        _nop_();\n        i = ", "11", ";\n        j = ", "190", ";\n        ", "do", "\n        {\n            ", "while", " (--j);\n        } ", "while", " (--i);\n        x--;\n    }\n    \n}\n\n"]], "Tag": "算法设计"}
{"Answer": "例：\r\n未改之前：http://localhost:8080/sc/save\r\n修改：server.servlet.context-path = /a\r\n改动之后：http://localhost:8080/a/sc/save\r\n你说到的页面请求路径的那些，如果之前是写的死路径，那么一个一个的改是必然的，如果是IDEA的话，可以用ctrl+shift+r进行路径全部替换。\r\n但是个人建议的话，还是写一个JS公共配置文件，用于配置路径这些共有属性，方便以后再次改动之后不会一个一个的改。", "Konwledge_Point": "树中的独立集", "Question": ["spring boot指定了server.servlet.context-path之后 各种url 应该如何设置。", ["在做spring boot 项目 东西都整一多半了公司忽然说会有多个项目同时部署到tomcat上让配置上下文路径  我在配置文件里加了个上下文路径  加完之后项目连controller都进不去了 页面跳转也找不到页面  那些路径我应该怎样设置？ 是一个一个改还是有更好的办法？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;什么叫类似但不是?&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/395694587056135.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Multisim  按键问题", ["这个按键在哪里啊  大家来一 下  找了一个下午都没找到  这个按键有一个类似的但是不是  "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你没有判断按键抬起&amp;#xff0c;所以会比较快去执行多次按下。&lt;br /&gt;解决的办法是加一个按键抬起判断&amp;#xff0c;如果有抬起&amp;#xff0c;再进行下次按下判断。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;    &lt;span class=\"hljs-comment\"&gt;/******************KEY mode按下 *******************/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attr\"&gt;MenuKey_Mode&amp;#61;&amp;#61;0)//extern&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attr\"&gt;KeyMode_status&amp;#61;&amp;#61;0)&lt;/span&gt; //确定已经松开\n        {        \n            KeyMode_counter&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attr\"&gt;KeyMode_counter&lt;/span&gt; &amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)//消抖\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attr\"&gt;MenuKey_Mode&amp;#61;&amp;#61;0)//再次确认按键按下&lt;/span&gt;\n                {&lt;!-- --&gt;&lt;span class=\"hljs-attr\"&gt;KeyMode_counter&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-attr\"&gt;KeyMode_flag&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-attr\"&gt;KeyMode_status&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;}    \n            }                           \n        } \n    } \n    &lt;span class=\"hljs-comment\"&gt;/******************KEY enter松开 *******************/&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attr\"&gt;MenuKey_Mode&lt;/span&gt; &amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)//extern\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attr\"&gt;KeyMode_status&amp;#61;&amp;#61;1)&lt;/span&gt;\n        {\n            KeyMode_counter&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attr\"&gt;KeyMode_counter&lt;/span&gt; &amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(MenuKey_Mode !&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                {&lt;!-- --&gt;&lt;span class=\"hljs-attr\"&gt;KeyMode_counter&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-attr\"&gt;KeyMode_flag&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-attr\"&gt;KeyMode_status&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;}    \n            }     \n        }    \n    } \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果有帮助请点采纳&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于单片机独立按键实验的问题！", ["\n", "#include\"reg52.h\"", "\n\ntypedef unsigned int u16;\ntypedef unsigned char u8;\n                                                \nsbit ", "K1", "=P3^1;\nsbit ", "LED", "=P2^0;\n\n", "#define K1_press 1", "\n", "#define KEY_UNPRESS 0", "\nvoid delay(u16 m)\n{\n  ", "while", "(m--);\n}\nu8 key_scan(u8 mode)\n{\n  static u8 ", "key", "=1;\n  ", "if", "(mode) ", "key", "=1;\n  ", "if", "(", "key", "==1&&K1==0)\n  {\n    delay(1000);\n    ", "key", "=0;\n    return K1_press;\n  }\n  ", "else", " ", "key", "=1;\n  return KEY_UNPRESS;\n\n}\nvoid main()\n{\n  u8 ", "key", "=0;\n  ", "while", "(1)\n  {\n  ", "key", "=key_scan(0);\n  ", "if", "(", "key", "==K1_press)\n   ", "LED", "=!LED;\n  }\n}\n", "\n", "对于这个代码，我的理解是按一下独立按键，LED1就会亮起，再按一下LED就会熄灭。但是实验现象是LED这个亮灭不按套路出牌，找不到规律，所以想问问这是怎么回事"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/weixin_30341121/article/details/113411223\" id=\"textarea_1633049068890_1633049093378_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;一个按键控制8个led灯_51单片机实现4个按键控制8个LED灯四种状态_MaxwellGeng的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;电路原理图元件清单程序&amp;#xff08;C语言&amp;#xff09;#include&amp;lt;reg51.h&amp;gt;sbit p3_0&amp;#61;P3^0;sbit p3_1&amp;#61;P3^1;sbit p3_2&amp;#61;P3^2;sbit p3_3&amp;#61;P3^3;void delay(unsigned char i);void main(){   unsigned char ledctr;  P3&amp;#61;0xff;  while(1)  {  ...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_30341121/article/details/113411223&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C51单片机 用3个按键实现8种LED变化状态", ["用3个独立按键可产生8种状态，每种状态设一个LED灯的不同点亮方式，包括闪烁、正向流水、反向流水、正向偶数灯亮反向奇数灯亮的流水方式。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;常用惯例,  P3.0, P3.1 会是 UART TX/RD.&lt;br /&gt;怀疑你硬件干扰,  或是51零件本身初始化干扰。&lt;br /&gt;main程序改成&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-cpp\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;( &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; )&lt;/span&gt;\n  &lt;/span&gt;{\n    P3 &amp;#61; &lt;span class=\"hljs-number\"&gt;0xFF&lt;/span&gt;;   &lt;span class=\"hljs-comment\"&gt;/*  初始 P3, 避免预设错误 */&lt;/span&gt;\n    P2 &amp;#61; &lt;span class=\"hljs-number\"&gt;0x00&lt;/span&gt;;   &lt;span class=\"hljs-comment\"&gt;/*  全亮, 表示LED 驱动OK.  也确认51有动作 */&lt;/span&gt;   \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n     {\n        KeyNum  &amp;#61;  &lt;span class=\"hljs-built_in\"&gt;Key&lt;/span&gt;( );\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; !&amp;#61; KeyNum )\n          {\n               P2 &amp;#61; KeyNum;  &lt;span class=\"hljs-comment\"&gt;/* 看灯号对按键  */&lt;/span&gt;                               \n          }\n      }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2022/08/14&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    这几个指令没指值  KeyNumber &amp;#61; 1;      &amp;lt;- 是  &amp;#61; , 不是 &amp;#61;&amp;#61;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    if(k1 &amp;#61;&amp;#61; 0){Delay(10);if(k1&amp;#61;&amp;#61;0){**KeyNumber &amp;#61;&amp;#61; 1; **}while(!k1);}&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    if(k2 &amp;#61;&amp;#61; 0){Delay(10);if(k2&amp;#61;&amp;#61;0){&lt;!-- --&gt;&lt;/span&gt;&lt;strong&gt;KeyNumber &amp;#61;&amp;#61; 2;&lt;/strong&gt;}while(!k2);}&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    if(k3 &amp;#61;&amp;#61; 0){Delay(10);if(k3&amp;#61;&amp;#61;0){&lt;!-- --&gt;&lt;/span&gt;&lt;strong&gt;KeyNumber &amp;#61;&amp;#61; 3;&lt;/strong&gt;}while(!k3);}&lt;/p&gt;\n&lt;p&gt;指值用 &amp;#61;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  P3  &amp;#61;  0xFF;&lt;/span&gt;&lt;br /&gt;逻辑比较符 &amp;#61;&amp;#61; ,  返回 1 or 0 ( TRUE, FALSE )&lt;br /&gt;( 0 &amp;#61;&amp;#61; k1 )  使用时, 要注意 “强制型别转换” 所带来的隐性错误&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["代码烧录后独立按钮不起作用", ["51单片机 独立按键", "代码烧录到开发板不起作用怎么回事？", "\n", "#", "include", " ", "<regx52.h>", "\n                    ", "void", " ", "Delay", " ", "(", "unsigned", " ", "int", " xms)", "{\n           ", "unsigned", " ", "char", " k , j;\n           ", "while", "(xms){\n           k = ", "2", ";\n           j = ", "236", ";\n           ", "do", "{\n           ", "while", "(--k);}\n           ", "while", "(--j);\n           \n               xms--;\n           }\n           }\n                sbit k1 = P3^", "1", "; \n                   sbit k2 = P3^", "0", ";\n                   sbit k3 = P3^", "2", ";\n                   sbit k4 = P3^", "3", ";\n\n ", "unsigned", " ", "char", " ", "Key", "()", "{\n                   ", "unsigned", " ", "char", " KeyNumber = ", "0", ";\n                   ", "if", "(k1 == ", "0", "){", "Delay", "(", "10", ");", "if", "(k1==", "0", "){KeyNumber == ", "1", ";}", "while", "(!k1);}\n                   ", "if", "(k2 == ", "0", "){", "Delay", "(", "10", ");", "if", "(k2==", "0", "){KeyNumber == ", "2", ";}", "while", "(!k2);}\n                   ", "if", "(k3 == ", "0", "){", "Delay", "(", "10", ");", "if", "(k3==", "0", "){KeyNumber == ", "3", ";}", "while", "(!k3);}\n                   ", "if", "(k4 == ", "0", "){", "Delay", "(", "10", ");", "if", "(k4==", "0", "){KeyNumber == ", "4", ";}", "while", "(!k4);}\n                    ", "return", " KeyNumber;\n                   }\n            ", "unsigned", " ", "char", " KeyNum;\n            \n            ", "int", " ", "main", "(", "void", ")", "{\n                 \n                 ", "while", " (", "1", "){\n                  KeyNum =  ", "Key", "();\n                  ", "if", "(KeyNum == ", "1", "){P2 = ", "0xfe", ";}\n                                        \n                 }\n                 }\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "zhangbinghao,看看这个吧!\r\n\r\n用户登陆时会产生一个唯一的随机码，如果此用户登陆后在别的地方登陆，那么就会修改这个随机码，这时原来登陆的用户在ServletContext中保存的随机码就改变了(与用户sesion中的随机码不同)，那么其就被迫下线（这个工作由过滤器来做）\r\n\r\n具体的请参考:\r\nhttp://www.iteye.com/topic/190617\r\n\r\n\r\n哦,另外,你也可以看看SSO(有些复杂)\r\nhttp://www.blogjava.net/rosen/archive/2005/08/12/9876.html", "Konwledge_Point": "树中的独立集", "Question": ["单用户登陆", ["　　同时只允许一个账号登陆。", "\n　　", "\n　　关键问题是　判断用户离线的事情，　貌似用SESSION的LISTENER　可以监听到TIMEOUT这个事情", "\n　　但对于特殊的退出场景，可能无法获取到这个离线状态。", "\n\n", "　　想问下有没有通过别的方式实现的。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;有四种不同的情况会导致死锁。&lt;br /&gt;互斥, 持有并等待, 无抢占和循环等待。我们可以通过防止其中任何一种情况来防止死锁&lt;br /&gt;如果以上四个条件同时发生&amp;#xff0c;就会发生死锁。&lt;br /&gt;这四个条件也称为科夫曼条件&amp;#xff0c;这些条件并不相互排斥&lt;br /&gt;&lt;a href=\"https://afteracademy.com/blog/what-is-deadlock-and-what-are-its-four-necessary-conditions\" id=\"textarea_1665142548268_1665143018414_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;What is Deadlock and what are its four necessary conditions?&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;In this blog, we will learn about the concept of deadlock in the Operating System and we will also see what are the four necessary conditions of deadlock. Let&amp;#39;s learn.&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://afteracademy.com/blog/what-is-deadlock-and-what-are-its-four-necessary-conditions&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["死锁的四个必要条件是彼此独立的吗？", ["死锁的四个必要条件是彼此独立的吗？最少的必要条件？我在网上无法查询到相关的信息，请各位解惑"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;strong&gt;To the first part:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Openssh.exe found in apache bin directory.&lt;/p&gt;\n\n&lt;p&gt;Server name found in apache/conf/extra/httpd-ahssl.conf file in the virtualserver directive. In my case it is localhost.&lt;/p&gt;\n\n&lt;p&gt;Openssh.cnf is in apache conf directory.&lt;/p&gt;\n\n&lt;p&gt;Generate Key and CRT files and copy these to conf/ssl dir and restart the server.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;openssl req -new -newkey rsa:2048 -sha256 -days 365 -nodes -x509 -keyout server.key -out server.crt -config \"C:\\wamp_p\\Apache_2.4.34\\conf\\openssl.cnf\"\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;To the second part (for phpmyadmin):&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;MySQL Server 8 has a new password authentication plugin by default.\nTo apply the original password plugin create my.ini to the mysql dir root.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[mysqld]\ndefault_authentication_plugin=mysql_native_password\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If you had already created the users you need to alter it.\nYou can check the Password authentication plugin for user with&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;USE MYSQL;\nSELECT user,host,plugin from user;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Bye!&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立的Wamp服务器ssl auth设置", ["\n\n", "Want to setup a portable server from Apache, PHP and MySQL, all of them from the newest binary.", "\n\n", "Downloaded and configured each other, but have 2 issue, which i think is only one.\nFirst:\nI set the loglevel to Info in httpd.conf, and started the server.\nError.log contains:", "\n\n", "[Sat Aug 25 17:32:35.246609 2018] [ssl:info] [pid 13736:tid 592] AH01887: Init: Initializing (virtual) servers for SSL\n[Sat Aug 25 17:32:35.246609 2018] [ssl:info] [pid 13736:tid 592] AH01914: Configuring server servertwo.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.247609 2018] [ssl:info] [pid 13736:tid 592] AH02568: Certificate and private key servertwo.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.key\n[Sat Aug 25 17:32:35.247609 2018] [ssl:info] [pid 13736:tid 592] AH01914: Configuring server serverone.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.247609 2018] [ssl:info] [pid 13736:tid 592] AH02568: Certificate and private key serverone.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.key\n[Sat Aug 25 17:32:35.249606 2018] [ssl:info] [pid 13736:tid 592] AH01914: Configuring server localhost:443 for SSL protocol\n[Sat Aug 25 17:32:35.250605 2018] [ssl:warn] [pid 13736:tid 592] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name\n[Sat Aug 25 17:32:35.250605 2018] [ssl:info] [pid 13736:tid 592] AH02568: Certificate and private key localhost:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/server.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/server.key\n[Sat Aug 25 17:32:35.250605 2018] [ssl:info] [pid 13736:tid 592] AH01876: mod_ssl/2.4.34 compiled against Server: Apache/2.4.34, Library: OpenSSL/1.1.0h\n[Sat Aug 25 17:32:35.284684 2018] [socache_shmcb:info] [pid 13736:tid 592] AH00830: Shared memory socache initialised\n[Sat Aug 25 17:32:35.284684 2018] [ssl:info] [pid 13736:tid 592] AH01887: Init: Initializing (virtual) servers for SSL\n[Sat Aug 25 17:32:35.284684 2018] [ssl:info] [pid 13736:tid 592] AH01914: Configuring server servertwo.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.285683 2018] [ssl:info] [pid 13736:tid 592] AH02568: Certificate and private key servertwo.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.key\n[Sat Aug 25 17:32:35.285683 2018] [ssl:info] [pid 13736:tid 592] AH01914: Configuring server serverone.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.285683 2018] [ssl:info] [pid 13736:tid 592] AH02568: Certificate and private key serverone.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.key\n[Sat Aug 25 17:32:35.286682 2018] [ssl:info] [pid 13736:tid 592] AH01914: Configuring server localhost:443 for SSL protocol\n[Sat Aug 25 17:32:35.286682 2018] [ssl:warn] [pid 13736:tid 592] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name\n[Sat Aug 25 17:32:35.286682 2018] [ssl:info] [pid 13736:tid 592] AH02568: Certificate and private key localhost:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/server.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/server.key\n[Sat Aug 25 17:32:35.286682 2018] [ssl:info] [pid 13736:tid 592] AH01876: mod_ssl/2.4.34 compiled against Server: Apache/2.4.34, Library: OpenSSL/1.1.0h\n[Sat Aug 25 17:32:35.297671 2018] [mpm_winnt:notice] [pid 13736:tid 592] AH00455: Apache/2.4.34 (Win64) OpenSSL/1.1.0h PHP/7.2.9 configured -- resuming normal operations\n[Sat Aug 25 17:32:35.297671 2018] [mpm_winnt:notice] [pid 13736:tid 592] AH00456: Server built: Jul 10 2018 10:15:24\n[Sat Aug 25 17:32:35.297671 2018] [mpm_winnt:info] [pid 13736:tid 592] AH80000: Distributed by: The Apache Haus\n[Sat Aug 25 17:32:35.297671 2018] [mpm_winnt:info] [pid 13736:tid 592] AH80001: Compiled with: Visual Studio 2015\n[Sat Aug 25 17:32:35.297671 2018] [core:notice] [pid 13736:tid 592] AH00094: Command line: 'Apache_2.4.34/bin/httpd.exe -d C:/wamp_p/Apache_2.4.34'\n[Sat Aug 25 17:32:35.300667 2018] [mpm_winnt:notice] [pid 13736:tid 592] AH00418: Parent: Created child process 14088\n[Sat Aug 25 17:32:35.660294 2018] [ssl:info] [pid 14088:tid 652] AH01887: Init: Initializing (virtual) servers for SSL\n[Sat Aug 25 17:32:35.660294 2018] [ssl:info] [pid 14088:tid 652] AH01914: Configuring server servertwo.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.661293 2018] [ssl:info] [pid 14088:tid 652] AH02568: Certificate and private key servertwo.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.key\n[Sat Aug 25 17:32:35.661293 2018] [ssl:info] [pid 14088:tid 652] AH01914: Configuring server serverone.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.661293 2018] [ssl:info] [pid 14088:tid 652] AH02568: Certificate and private key serverone.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.key\n[Sat Aug 25 17:32:35.662292 2018] [ssl:info] [pid 14088:tid 652] AH01914: Configuring server localhost:443 for SSL protocol\n[Sat Aug 25 17:32:35.662292 2018] [ssl:warn] [pid 14088:tid 652] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name\n[Sat Aug 25 17:32:35.662292 2018] [ssl:info] [pid 14088:tid 652] AH02568: Certificate and private key localhost:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/server.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/server.key\n[Sat Aug 25 17:32:35.662292 2018] [ssl:info] [pid 14088:tid 652] AH01876: mod_ssl/2.4.34 compiled against Server: Apache/2.4.34, Library: OpenSSL/1.1.0h\n[Sat Aug 25 17:32:35.688265 2018] [socache_shmcb:info] [pid 14088:tid 652] AH00830: Shared memory socache initialised\n[Sat Aug 25 17:32:35.688265 2018] [ssl:info] [pid 14088:tid 652] AH01887: Init: Initializing (virtual) servers for SSL\n[Sat Aug 25 17:32:35.688265 2018] [ssl:info] [pid 14088:tid 652] AH01914: Configuring server servertwo.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.688265 2018] [ssl:info] [pid 14088:tid 652] AH02568: Certificate and private key servertwo.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/servertwo.key\n[Sat Aug 25 17:32:35.688265 2018] [ssl:info] [pid 14088:tid 652] AH01914: Configuring server serverone.tld:443 for SSL protocol\n[Sat Aug 25 17:32:35.689264 2018] [ssl:info] [pid 14088:tid 652] AH02568: Certificate and private key serverone.tld:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/serverone.key\n[Sat Aug 25 17:32:35.689264 2018] [ssl:info] [pid 14088:tid 652] AH01914: Configuring server localhost:443 for SSL protocol\n[Sat Aug 25 17:32:35.689264 2018] [ssl:warn] [pid 14088:tid 652] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name\n[Sat Aug 25 17:32:35.689264 2018] [ssl:info] [pid 14088:tid 652] AH02568: Certificate and private key localhost:443:0 configured from C:/wamp_p/Apache_2.4.34/conf/ssl/server.crt and C:/wamp_p/Apache_2.4.34/conf/ssl/server.key\n[Sat Aug 25 17:32:35.689264 2018] [ssl:info] [pid 14088:tid 652] AH01876: mod_ssl/2.4.34 compiled against Server: Apache/2.4.34, Library: OpenSSL/1.1.0h\n[Sat Aug 25 17:32:35.703250 2018] [mpm_winnt:notice] [pid 14088:tid 652] AH00354: Child: Starting 64 worker threads.\n", "\n\n", "The ", "[ssl:warn] [pid 14088:tid 652] AH01909: localhost:443:0 server certificate does NOT include an ID which matches the server name", " line says something is wrong with the certificate.", "\n\n", "The httpd.conf contains the following relevant lines:", "\n\n", "LoadModule ssl_module modules/mod_ssl.so\n<IfModule ssl_module>\n#Include conf/extra/httpd-ssl.conf\nInclude conf/extra/httpd-ahssl.conf\nSSLRandomSeed startup builtin\nSSLRandomSeed connect builtin\n</IfModule>\n", "\n\n", "The ahssl.conf is exists, and the linked certificate exists too in ", "\n\n", "C:\\wamp_p\\Apache_2.4.34\\conf\\ssl\\server.crt\nC:\\wamp_p\\Apache_2.4.34\\conf\\ssl\\server.key\n", "\n\n", "The httpd-ahssl.conf is original, not changed.", "\n\n", "The PHPinfo relevant output is ", "here", "\n\n", "When i install Apache as a system service it is not started due to this error, but i can start it manually or net start command, and it is working.", "\n\n", "Second:\nI installed phpmyadmin, but not configured a server (no ini copied).\nWhen i try to login with test account it is cannot login.\nThe error can seen ", "here", "\n\n", "When i open a cmd and login with ", "mysql -u test -p", " ,it works, and i can log in with phpmyadmin as well.\nUntil the sql server and or the http server not restarted anytime can login with that user which logged in in console too in this session.", "\n\n", "Is that belong the ssl?", "\n\n", "I commented it at php.ini and httpd.conf too, servers restarted, but the login problem stayed the same.", "\n\n", "What need i to do?\nThanks!", "\n\n", "Update 1:", "\n\n", "I tried to generate new certificates, but i run into trouble. It cannot find the config file, but it is there where it search for it. Checked double:", "\n\n", "c:\\wamp_p\\Apache_2.4.34\\bin>openssl req -new -x509 -nodes -out server.crt -keyout server.key\nCan't open 'C:\\wamp_p\\Apache_2.4.34\\conf\\openssl.cnf' for reading, Invalid argument\n1664:error:0200107B:system library:fopen:Unknown error:crypto\\bio\\bss_file.c:74:fopen(''C:\\wamp_p\\Apache_2.4.34\\conf\\openssl.cnf'','rb')\n1664:error:2006D002:BIO routines:BIO_new_file:system lib:crypto\\bio\\bss_file.c:83:\n1664:error:0E078002:configuration file routines:def_load:system lib:crypto\\conf\\conf_def.c:152:\n1664:error:0200107B:system library:fopen:Unknown error:crypto\\bio\\bss_file.c:74:fopen(''C:\\wamp_p\\Apache_2.4.34\\conf\\openssl.cnf'','r')\n1664:error:2006D002:BIO routines:BIO_new_file:system lib:crypto\\bio\\bss_file.c:83:\nGenerating a 2048 bit RSA private key\n......+++\n..........................................................+++\nwriting new private key to 'server.key'\n-----\nunable to find 'distinguished_name' in config\nproblems making Certificate Request\n1664:error:0E06D06A:configuration file routines:NCONF_get_string:no conf or environment variable:crypto\\conf\\conf_lib.c:272:\n", "\n\n", "I installed an xampp setup, and take the server.key and server.crt files from it, nad copied to my apache conf/ssl directory and original files are overwritten.", "\n\n", "No SSL:Warn record was found after this in the error.log after I started the server.", "\n\n", "The PhpMyAdmin still cannot login until i not login with mysql.exe with the test user. I not understand what is the connection between the windows terminal and webbrowser phpmyadmin.", "\n\n", "When i successfully logged in with phpmyadmin a ", "take a shot", ", and saw the ssl is not being used...", "\n\n", "Update 2:", "\n\n", "I dont think this is an ssl certificate problem.\nThis is a test code step-by-step in console and webbrowser:", "\n\n", "----------------- Windows command line ----------------- \nc:\\wamp_p\\mysql_8.0.12\\bin>net stop mysql\nThe MySQL service is stopping.\nThe MySQL service was stopped successfully.\n\n----------------- Chrome browser with sqltest.php ----------------- \nWarning: mysqli_connect(): (HY000/2002): No connection could be made because the target machine actively refused it. in C:\\wamp_p\\htdocs\\sql.php on line 3\nError: Unable to connect to MySQL. Debugging errno: 2002 Debugging error: No connection could be made because the target machine actively refused it.\n\n----------------- Windows command line ----------------- \nc:\\wamp_p\\mysql_8.0.12\\bin>net start mysql\nThe MySQL service is starting.\nThe MySQL service was started successfully.\n\n----------------- Chrome browser with sqltest.php ----------------- \nWarning: mysqli_connect(): PHP was built without openssl extension, can't send password encrypted in C:\\wamp_p\\htdocs\\sql.php on line 3\nWarning: mysqli_connect(): (HY000/1045): Access denied for user 'test'@'localhost' (using password: YES) in C:\\wamp_p\\htdocs\\sql.php on line 3\nError: Unable to connect to MySQL. Debugging errno: 1045 Debugging error: Access denied for user 'test'@'localhost' (using password: YES)\n\n----------------- Windows command line ----------------- \nc:\\wamp_p\\mysql_8.0.12\\bin>mysql -u test -p\nEnter password: ****\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 9\nServer version: 8.0.12 MySQL Community Server - GPL\n\nCopyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql>\n\n----------------- Chrome browser with sqltest.php ----------------- \nWarning: mysqli_connect(): (HY000/1049): Unknown database 'my_db' in C:\\wamp_p\\htdocs\\sql.php on line 3\nError: Unable to connect to MySQL. Debugging errno: 1049 Debugging error: Unknown database 'my_db'\n\n----------------- Windows command line ----------------- \nmysql> quit\nBye\n\nc:\\wamp_p\\mysql_8.0.12\\bin>\n\n----------------- Chrome browser with sqltest.php ----------------- \nWarning: mysqli_connect(): (HY000/1049): Unknown database 'my_db' in C:\\wamp_p\\htdocs\\sql.php on line 3\nError: Unable to connect to MySQL. Debugging errno: 1049 Debugging error: Unknown database 'my_db'\n", "\n\n", "Update 3:", "\n\n", "The Mysql server 8 change the ", "authentication method", ", so making it force fallback to the old password plugin solve the login issue.\nMake to mysql server installation an my.ini with the following content:", "\n\n", "[mysqld]\ndefault_authentication_plugin=mysql_native_password\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "可以，配置tomcat\\conf\\server.xml\r\n[color=red]一[/color]。在\r\n      &lt;/Host&gt;\r\n    &lt;/Engine&gt;\r\n之间添加\r\n\r\n&lt;Host name=\"www.xxoo.com\"&gt; \r\n&lt;Context path=\"\" docBase=\"E:/workspace/test/WebRoot\" reloadable=\"true\" crossContext=\"true\"/&gt; \r\n&lt;/Host&gt; \r\n\r\n其中E:/workspace/test/WebRoot是你的web项目路径\r\n[color=red]二[/color]配置\r\nC:\\WINDOWS\\system32\\drivers\\etc\\hosts文件\r\n在里面添加127.0.0.1              www.xxoo.com\r\n这样就可以了\r\n\r\n如果不明白，可以百度搜索“tomcat 虚拟主机”", "Konwledge_Point": "树中的独立集", "Question": ["tomcat 可以独立配制host吗？", ["我在window server2003下tomcat5.5+jdk1.6", "\n不用iis和apache可以吗？", "\n\n", "怎么做？谢谢"]], "Tag": "算法设计"}
{"Answer": "适用ClassLoader获得当前war包的路径，然后适用 ../../不断的获取上级目录直到读取到default目录然后在输入访问properties路径就可以了", "Konwledge_Point": "树中的独立集", "Question": ["关于资源文件配置能否配置到 war 包外？", ["项目是 struts1 项目，请问能否配置资源文件到 war 包的外面？怎样配置？"]], "Tag": "算法设计"}
{"Answer": "struts1也有action链的", "Konwledge_Point": "树中的独立集", "Question": ["bean:write 乱码", ["我现在想在一个页面中包含一个action。", "\n使用jsp:include出错了。", "\nstruts Cannot forward after response has been committed", "\n\n", "看到了[url]", "http://www.iteye.com/problems/8210[/url]，所以使用bean:include来解决", " 。。", "\n\n", "但出现乱码现象。不知道是为什么，我直接访问这个action,却没有出现乱码？不知道这是什么原因。", "\n[b]问题补充：[/b]", "\n首先谢谢大家。", "\n但还是没有解决我的问题。。", "\n\n", "我的所有地方都是utf-8的，在直接访问这个action的时候，是没有乱码的", "\n\n", "但在一个页面中使用", "\n包含一个action的时候，就出现乱码了。。很是奇怪。。", "\n\n", "不知道大家是怎么在一个页面中引用一个action的。", "\n[b]问题补充：[/b]", "\n[quote]这种行不通,你就不要用include撒.你引用action无非就是想执行这个action ", "\n\n", "你为何不先把action执行完了再跳转到这个页面来呢？这样做好像正统一些[/quote]", "\n\n", "比如每个页面中都需要个商品分类，那么每个Action中都是写个调用service的方法，那这个可以提取出来的放到一个独立的action啊。", "\n[b]问题补充：[/b]", "\nrequest.setCharacterEncoding(\"utf-8\")", "\nresponse..setCharacterEncoding(\"utf-8\")", "\n都试过了。", "\n\n", "现在我找到了一种解决的方法，但是不优雅。", "\n[url]", "http://topic.csdn.net/t/20061011/12/5074664.html[/url]", "\n\n", "希望能有更好的解决方法。", "\n[b]问题补充：[/b]", "\n[quote]forward的结果页面的字符集改成   gb2312或gbk,其它的仍为utf-8就行了[/quote]", "\n是的，我这样子之后，得确是可以了。。很是奇怪。。。", "\n[b]问题补充：[/b]", "\n[quote]他的方法不觉得有什么别扭的.就用他的[/quote]", "\n\n", "这个原理是什么呢？我很是别扭。。我找不出这个理由啊。", "\n[b]问题补充：[/b]", "\n[quote]它觉得不舒服.想要你换一个新鲜点的编码:) [/quote]", "\n\n", "哈哈。。奇了怪了啊。。。。不知道兄弟一般怎么复用action的？", "\n\n", "比如这个问答频道，它右边的显示都是一样的，怎么减少代码量呢？", "\n[b]问题补充：[/b]", "\n在struts2中，可直接使用s:action来做。。。但我现在还是struts1。。。。。郁闷啊"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can study MVC structure.&lt;/p&gt;\n\n&lt;p&gt;Also have a look at &lt;a href=\"http://www.smarty.net/\" rel=\"nofollow noreferrer\"&gt;smarty&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["编写独立于模板的PHP代码", ["\n\n", "How can I write php codes independent from XHTML codes?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Add the include header from the wordpress's site.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n    define('WP_USE_THEMES', false);\n    require('wp-blog-header.php');\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何从单独的PHP文件访问当前登录的Wordpress用户？", ["\n\n", "I have a simple separate PHP page hosted in the same directory as my Wordpress blog. This page is standalone so it knows nothing of Wordpress, but will of course receive the same cookies since it's on the same host.", "\n\n", "The question is simple: ", "How do I access the logged in Wordpress user's ID from this standalone page?", " ", "\n\n", "I know you can access logged in user data via ", "get_currentuserinfo", ", but that assumes you're running within Wordpress. How do I access this info on a PHP page that isn't delivered from Wordpress, but is on the same host?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;您好&amp;#xff01;&lt;br /&gt;请问这样的需求是有什么目的呢&amp;#xff1f;USB 无线网卡&amp;#xff0c;只要虚拟机里面的系统支持&amp;#xff0c;那么就可以直接使用。&lt;br /&gt;内置无线网卡在虚拟机里面无法直接使用&amp;#xff0c;只能共享主机的无线网卡连接。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["除了usb网卡还有什么方式可以给虚拟机独立连接WIFI", ["除了usb网卡还有什么方式可以给虚拟机独立连接WIFI", "不是直接桥接物理机网络（要虚拟机可以搜索信号", "是否可以用什么方法将笔记本上的网卡接到虚拟机"]], "Tag": "算法设计"}
{"Answer": "用pyinstaller打包Django，自动的就把sqlite数据库打包进去了。可以运行，就是打包的文件太大。\r\n下面就是我再csdn上下载的word文件里的做法，作者名字我给忘了。亲测可用。\r\n\r\n Django项目打包exe程序。\r\n（一）、安装pyinstaller\r\npip install pyinstaller\r\n（二）、制作项目的.spec文件\r\n进入django项目所在路径，运行 \r\npyi-makespec -D manage.py\r\n在路径下，生成一个.spec文件。\r\n（三）、以文本的方式打开.spec文件，spec文件格式如下。\r\n具体spec的使用，可以查看官网：\r\nhttps://pyinstaller.readthedocs.io/en/stable/spec-files.html\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201902/28/1551336290_141671.png)\r\n\r\n\r\n（四）、不修改.spec文件，直接运行以下语句 \r\npyinstaller manage.spec\r\n我们可以发现能够打包成功，但是在manage.exe所在路径下，在cmd中运行manage.exe runserver，会发现以下错误：\r\nImportError: No module named admin\r\n这种错误的原因是 django.contrib.admin在django项目中是隐式导入的，所以pyinstaller打包时，并不能识别这种库或者模块，导致打包出来的.exe中并不包括这样隐式导入的库。\r\n如果碰到这样的错误，只需要将这个库添加到.spec文件中的hiddenimports中即可。在接下来打包django项目缺少很多这样的隐式库，所以我.spec文件中一并修改了，修改如下：(如果缺少什么，直接在hiddenimports中加就可以了)\r\n\r\n![图片说明](https://img-ask.csdn.net/upload/201902/28/1551336265_200320.png)\r\n\r\n\r\n注：这里有个坑，特别需要关注\r\n如果打包好的.exe运行后，报错ImportError: No module named apps，当你在hiddenimports中加入了'django.contrib.admin.apps'，结果还是报同样的错误。这是因为添加的apps模块不完整，要在hiddenimports中加入以下全部的apps模块：(这些apps在django项目中的settings.py文件中可以全部找到，照着添加就可以了，另处还有context_processors模块，middleware模块也需要注意)\r\n'django.contrib.admin.apps',\r\n'django.contrib.auth.apps',\r\n'django.contrib.contenttypes.apps',\r\n'django.contrib.sessions.apps', 'django.contrib.messages.apps', 'django.contrib.staticfiles.apps',\r\n如下是我配置的manage.spec文件内容：\r\n# -*- mode: python -*-\r\n\r\nblock_cipher = None\r\n\r\n\r\na = Analysis(['manage.py'],\r\n             pathex=['E:\\\\work\\\\PyCharmWorkSpace\\\\FirstLogin'],\r\n             binaries=[(r'E:\\work\\PyCharmWorkSpace\\FirstLogin\\front\\static_root',r'.\\front\\static_root'), (r'E:\\work\\PyCharmWorkSpace\\FirstLogin\\front\\templates', r'.\\front\\templates')],\r\n\t\t\t datas=[(r'E:\\work\\PyCharmWorkSpace\\FirstLogin\\front\\static_root',r'.\\front\\static_root'),(r'E:\\work\\PyCharmWorkSpace\\FirstLogin\\front\\templates', r'.\\front\\templates')],\r\n             hiddenimports=['django.contrib.admin','django.contrib.auth','django.contrib.contenttypes',\r\n\t\t\t'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles',\r\n\t\t\t'login','login2',\r\n\t\t\t'FirstLogin.database_router',\r\n\t\t\t'login.urls','login2.urls',\r\n\t\t\t],\r\n             hookspath=[],\r\n             runtime_hooks=[],\r\n             excludes=[],\r\n             win_no_prefer_redirects=False,\r\n             win_private_assemblies=False,\r\n             cipher=block_cipher,\r\n             noarchive=False)\r\npyz = PYZ(a.pure, a.zipped_data,\r\n             cipher=block_cipher)\r\nexe = EXE(pyz,\r\n          a.scripts,\r\n          a.binaries,\r\n          a.zipfiles,\r\n          a.datas,\r\n          [],\r\n          name='manage',\r\n          debug=False,\r\n          bootloader_ignore_signals=False,\r\n          strip=False,\r\n          upx=True,\r\n          runtime_tmpdir=None,\r\n          console=True )\r\ncoll = COLLECT(exe,\r\n\t\t\ta.binaries,\r\n\t\t\ta.zipfiles,\r\n            a.datas,\r\n\t\t    strip=False,\r\n\t\t\tupx=True,\r\n\t\t\tname='manage',\r\n)\r\n\r\n\t注意：标蓝部分，执行pyinstaller manage.spec后，cd dist然后执行manage.exe runserver,提示缺少什么往hiddenimports加入什么。\r\n\t（五）、以上hiddenimports弄好后，运行后会出现以下的错误TemplateDoesNotExist。  \r\n\t这个是因为没有找到templates文件\r\n\t\r\n\t![图片说明](https://img-ask.csdn.net/upload/201902/28/1551336191_278457.png)\r\n\r\n\t可以根据错误提示将templates文件添加至对应的路径下，刷新即可。其中front是我工程下一个放所有前端东西的文件，templates是用来放html的一个文件夹。(所以具体的添加要根据错误提示是在哪里找不到就添加至哪里)\t\r\n（六）、在第五步后，可以发现页面已经出来，但是发现页面没有css和js。\r\n这是因为Pyinstaller 能找到templates(html files文件)，但不能找到css和js文件。我的解决方案是参考了以下 ：https://github.com/pyinstaller/pyinstaller/issues/2368\r\n我的具体操作是在django项目的settirngs.py文件中加入\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'front', 'static_root')\r\n其中front是我的文件夹，static_root是我在front下创建的一个空子文件，用来收集工程中所有的静态文件。\r\n在django项目路径下执行manage.py collectstatic会自动地将STATICFILES_DIRS列出的目录以及各个App下的static子目录的所有文件复制到STATIC_ROOT。因为复制过程可能会覆盖掉原来的文件，所以，一定不能把我们辛苦做出来静态文件放这边！\r\n然后来到urls.py文件下，加入下面的一句话，加入的同时要导入static库\r\nfrom django.conf.urls import static\r\nurlpatterns += static.static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\r\n这句话的意思就是将STATIC_ROOT目录的静态文件复制一份到网页 STATIC_URL路径下\r\n最后我们还需要将STATIC_ROOT中的静态文件打包到.exe中。这一步是在.spec文件中的datas中加入下面一个元组\r\ndatas=[(r'E:\\G48\\G48\\front\\static_root',r'.\\front\\static_root'), (r'E:\\G48\\G48\\front\\templates', r'.\\front\\templates')],\r\n上边有我配置的spec文件可以观看。\r\n考虑到第5步，再这里我也直接将templates文件打包到了对应的文件。所以第五步就不用自己再复制templates文件到指定的文件夹了，此处需要注意的是需要改动settings中templates DIRS的配置改为：\r\n        'DIRS': [os.path.join(BASE_DIR,'front', 'templates')]\r\n意思是查找front中的templates静态文件，front\\static文件是用来手机样式文件的（执行命令），front\\templates中存放页面静态文件（需手动）。\r\n注意：请勿将页面静态文件放入front\\static文件中。\r\n最后.spec文件看起来如上边我附上的manage.spec代码。\r\n\r\n一切准备好后，执行下面语句就OK\r\npyinstaller manage.spec\r\n然后cd dist 执行manage.exe runserver\r\n\r\npyinstaller打包django项目\r\nhttps://blog.csdn.net/qq_34809033/article/details/81873896\r\n\r\n\r\n七、Django 浏览器打开警告Not Found: /favicon.ico\r\nhttps://blog.csdn.net/u013251992/article/details/77855956\r\n浏览器打开http://127.0.0.1:8000/\r\n终端显示警告：\r\n[05/Sep/2017 12:24:59] \"GET /hello HTTP/1.1\" 404 1947\r\nNot Found: /favicon.ico\r\n\r\n解决方法：\r\n本机路径C:\\Python36\\Lib\\site-packages\\django\\contrib\\admin\\static\\admin\\img\r\n找一个图片以favicon命名，且将后缀改为.ico格式，放到此路径中重启服务即可解决。", "Konwledge_Point": "树中的独立集", "Question": ["如何把Django+sqlite应用打包发布成可独立运行的桌面程序？", ["如何把Django+sqlite应用打包发布成可独立运行的桌面程序？需求：在pc上运行django+sqlite应用，无须安装django python 数据库 web服务器"]], "Tag": "算法设计"}
{"Answer": "实践少了，多动手，多参考别人的代码", "Konwledge_Point": "树中的独立集", "Question": ["不会的题目不能看懂后独立写出代码", ["不会的题目看懂答案代码后自己还是写不出来，是不是理解的还不够透彻，怎么办呢？是不是多看几遍直至自己能独立写出代码？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;10  c  100&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C语言//结构体问题合集", ["1.有如下定义：", "\n", "struct", "\n", "{  int  x;", "\n", "   char  *y;", "\n", "}table[2]={{10,”ab”},{20,”ch”}},*p=table;", "\n", "void main()", "\n", "{  printf(“%d”,(*p++).x);", "\n", "   printf(“%c”,*p->y);", "\n", "   printf(“%d\\n”,++*p->y);", "\n", "}", "\n", "则程序的结果是", "2.有如下定义：", "\n", "struct ", "\n", "{  int  x;", "\n", "   int  y;", "\n", "}s[2]={{1,6},{3,9}},  *p=s;", "\n", "则以下表达式的结果是（各句彼此独立，无顺序关系）：", "\n", "  p->y++的结果是___________________________", "\n", "   (++p)->y的结果是____________________________", "\n", "   ++p->x的结果是______________________________", "\n", "   (++p)->x的结果是____________________________", "3.以下程序的执行结果是_____________________", "\n", "struct  stru", "\n", "{  int x;", "\n", "   char  ch; };", "\n", "void  main()", "\n", "{  struct  stru  a={10,’x’} ，*p=&a;", "\n", "   func(p);", "\n", "   printf(“%d,%c\\n”, a.x , a.ch);", "\n", "}", "\n", "func(struct stru  *b)", "\n", "{   b->x=200;", "\n", "b->ch", "=", "’y’", ";  ", "\n", "\n", "}", "4.以下程序的执行结果是____________________", "\n", "   struct mn", "\n", "   {  int  x , *y;", "\n", "   }  *p;", "\n", "   int  a[ ]={15,20,25,30};", "\n", "  struct mn aa[]={35,&a[0],40,&a[1],45,&a[2],50,&a[3]};", "\n", "  void main()", "\n", "  {  p=aa;", "\n", "printf(“%d”,++p->x);", "\n", "printf(“%d”,(++p)->x);", "\n", "printf(“%d\\n”,(*p->y));", "\n", "   }"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;web.config放在Areas/m/web.config下无效的&amp;#xff0c;题主是不是根目录下建立了m目录&amp;#xff0c;然后将web.config放m目录中了&amp;#xff1f;这样就是贴出来的错误。&lt;/p&gt;\n&lt;p&gt;而且注意&amp;#xff1a;元素节点只能在应用程序的根文件夹中的 web.config中配置。如果在子文件夹中使用这个节点就会报错。这也说明了每个应用程序只能定义一个身份验证类型。&amp;#xff08;引用自&amp;#xff1a;&lt;a href=\"https://www.cnblogs.com/goodsunny/archive/2013/06/02/3114318.html\" id=\"textarea_1675929125194_1675931046712_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/goodsunny/archive/2013/06/02/3114318.html&lt;/span&gt;&lt;/a&gt;&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;可以考虑~/Login/Index根目录路由代码中判断是否移动端ua&amp;#xff0c;是的话跳转到移动端控制器&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; LoginController : Controller\n    {\n        // &lt;span class=\"hljs-keyword\"&gt;GET&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;Login&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; ActionResult &lt;span class=\"hljs-keyword\"&gt;Index&lt;/span&gt;()\n        {\n            var ua &amp;#61; Request.UserAgent;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ua.IndexOf(&amp;#34;Android&amp;#34;) !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; || &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.Text.RegularExpressions.Regex.IsMatch(ua, &amp;#34;AppleWebKit.*Mobile&amp;#34;))\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; Redirect(&amp;#34;/m/login?&amp;#34; &amp;#43; Request.QueryString);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;View&lt;/span&gt;();\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["asp.net mvc Areas里面怎么添加独立的登录页面", ["asp.net mvc Areas里面怎么添加独立的登录页面", "\n", "    ", "<", "authentication", " ", "mode", "=", "\"Forms\"", ">", "\n      ", "<", "forms", " ", "defaultUrl", "=", "\"~/Home/Index\"", " ", "loginUrl", "=", "\"~/Login/Index\"", ">", "</", "forms", ">", "\n    ", "</", "authentication", ">", "\n", "\n", "在网站根目录下，web.config里面添加上面的代码，开启Forms身份登录认证。", "开启后 未登录情况下 访问 Home/Index Action会自动跳转到登录页面", "但是", "尝试添加了一个Area 名为 m", "在m区域里面同样添加了HomeController indexView", "访问m/Home/Index 并没有跳转到~/Login/Index.", "\n", "现在的问题是，怎么让Forms认证对m区域内的Controller起作用？能不能在Areas区域里面添加该区域自己的登录页面？", "按我的理解，一个区域，相当于一个独立的网站，比如全部的后台管理员功能，如果需要给管理员添加独立的管理员的登录页面。"]], "Tag": "算法设计"}
{"Answer": "句柄只是一个引用，你创建一个对象，就会引用一块内存，你创建了两个对象，肯定会有两个句柄，如果只有一个句柄，那不是两个对象其实在一个内存地方，就是同一个地方，那又何来多个对象。至于你说的句柄池，没理解错的话，jvm是将不同的类，对象或属性，常量分开放着的。即使不同的线程有不同的内存，但是不同线程的计数器也是在同一个jvm中的一个计数器区", "Konwledge_Point": "树中的独立集", "Question": ["请问在 JVM 堆中使用，可以有几个句柄池，句柄池中又可以有多少句柄？", ["请问在 JVM 堆中使用句柄引用，是为每一个对象创建一个独立句柄池，还是在说在堆中只存在一个句柄池，所有对象都在这唯一的句柄池中创建句柄？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以的。Sentinel 可以简单的分为 Sentinel 核心库和 Dashboard。核心库不依赖 Dashboard&amp;#xff0c;但是结合&lt;br /&gt;Dashboard 可以取得最好的效果。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Spring Cloud Alibaba Sentinel 能否使用代码独立配置规则，而不使用控制台", ["请问一下，Spring Cloud 熔断限流组件 Alibaba Sentinel 能否使用代码独立配置规则，而不接入官方的控制台服务"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是你的按键松手检测那里导致的&amp;#xff0c;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/574710922446195.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;可以将&amp;#xff0c;数码管的显示函数也放在这个while里面&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单片机独立按键按键控制数码管数值变化的问题", ["我写的程序在板子上能对数字进行增加但是按下按键改变某一部分的数字时数码管都灭了松开就亮了请问怎么改进能使按下过程中不影响其他数码管的变化", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "log4j不是能指定直接路径和相对路径嘛，多调试几次就行了。", "Konwledge_Point": "树中的独立集", "Question": ["jboss的单个应用用能生成独立的log文件么", ["某个app部署到jboss中，假如路径是 E:\\jboss-4.2.3.GA\\server\\default\\deploy\\app.war  , war文件中能产生日志么？如何把生成的日志生成到war中，因为里面有日志查看下载模块，放到war文件中比较便于操作，配置文件log4j.appender.FILE.File=./file.log,在源码文件中生成了日志文件，怎么能把日志文件部署到war文件呢 "]], "Tag": "算法设计"}
{"Answer": "linux ,unix 由执行权限的程序，才可以运行\r\n如果跟着无关，可能是需要 输入文件，而相应的目录下没有", "Konwledge_Point": "树中的独立集", "Question": ["codeblocks可运行代码，而生成的exe文件不能运行", ["用codeblocks能够运行的源代码（可以从固定路径下的文件读取信息），在bin/debug目录下找到生成的exe文件却显示打开文件失败这是怎么回事？求大神们指导"]], "Tag": "算法设计"}
{"Answer": "https://zhidao.baidu.com/question/711351998557763485.html", "Konwledge_Point": "树中的独立集", "Question": ["怎么将二维数组定义成混合类型并且可以独立计算的数组呢？", ["怎么使用二维数组的每一维独立成一个数组的类型？怎么将二维数组定义成混合类型并且可以独立计算的数组呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use use AccessControl in your controller &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;yii\\filters\\AccessControl;\n\n\n\nclass YourSiteController extends Controller\n{\n    public function behaviors()\n    {\n        return [\n            'access' =&amp;gt; [\n                'class' =&amp;gt; AccessControl::className(),\n                'rules' =&amp;gt; [\n                    [\n                        'actions' =&amp;gt; ['login','profile'],\n                        'allow' =&amp;gt; true,\n                        'roles' =&amp;gt; ['*'],\n                    ],\n                    // allow authenticated users\n                    [\n                        'allow' =&amp;gt; true,\n                        'roles' =&amp;gt; ['@'],\n                    ],   \n                ],\n            ],         \n            'verbs' =&amp;gt; [\n                'class' =&amp;gt; VerbFilter::className(),\n                'actions' =&amp;gt; [\n                    'delete' =&amp;gt; ['post'],\n                ],\n            ],\n        ];\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;see this guide for more  &lt;a href=\"http://www.yiiframework.com/doc-2.0/yii-filters-accesscontrol.html\" rel=\"nofollow\"&gt;http://www.yiiframework.com/doc-2.0/yii-filters-accesscontrol.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;and in the related actionView &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function actionView($id)\n{\n   if ($id != Yii::$app-&amp;gt;user-&amp;gt;id){\n     // not allowed  ... perform the action you need in this case \n   } else {\n      return $this-&amp;gt;render('view', [\n          'model' =&amp;gt; $this-&amp;gt;findModel($id),\n      ]);\n   }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何只访问一个特定的页面YII2（高级模板）？", ["\n\n", "I have a special case for the user in my project. if user's subscription is expired (I check this in ", "login action", "), he will be redirected to his ", "profile", " to edit some choices. How can I prevent him from access any page except his ", "profile", ". This is my code in ", "login action", "\n\n", " if($subPaymentType == 'free'){\n                    $subHours = $data[0]['sub_hours'];\n\n                    $minutes = $subHours * 60 * 60;\n                    $start_time = date('d-m-Y H:i:s', $startDate);\n                    $endDate = $minutes + strtotime($start_time);\n                    $endDate = date('d-m-Y H:i:s', $endDate);\n\n                    if(strtotime(date('d-m-Y:')) < strtotime($endDate)){\n                        $model->login();\n                    }else{\n                        $model->login();\n                        //User can access this only page only\n                        return $this->redirect(['user/view/?id='.Yii::$app->user->id]);\n\n                    }\n\n                }\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不影响的&amp;#xff0c;新建一个&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么我的vue2项目不自带独立配置文件，明明创建的时候勾选了", ["vue2项目 明明vue create x  的时候勾选了独立的配置文件 为什么我的结构目录里没有独立的config文件 只有babel的配置文件"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;由于pyspark不在python的环境变量下&amp;#xff0c;将资源的目录配置到python的环境变量下即可。&lt;br /&gt;例如&amp;#xff1a;export PYTHONPATH&amp;#61;${SPARK_HOME}/python:${SPARK_HOME}/python/pyspark.zip:${SPARK_HOME}/python/lib/py4j-0.10.8.1-src.zip:$PYTHONPATH&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于独立应用程序的问题如何解决", ["编写独立应用程序实现数据去重", "对于两个输入文件A和B，编写Spark独立应用程序，对两个文件进行合并，并剔除其中重复的内容，得到一个新文件R。", "已经创建好A.txt和B.txt", "下面是创建R.py的", "\n", "输入python3 R.py后", "对于", "\n", "```scala", "from spark import SparkContex", "\n", "```t出现ModuleNotFoundError: No module named 'pyspark'的问题", "求解"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;is_enemy会返回一个被碰撞的精灵组,遍历is_enemy并对其中的精灵分别设置血量试试&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["pygame飞机大战如何对敌机精灵设置独立的血量", ["我的敌机精灵是放在一个精灵组里的，然后我在敌机类的__init里面设立了一个属性血量，但我在碰撞检测时，发现这个血量是所有敌机通用的，既第一个敌机的血量减少后，后面所有的敌机血量都会减少，所有我想知道如何设置在精灵组里对每个精灵设置一个独立的属性，并且怎么调用它", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;OK, well after sometime messing around with standalone symfony forms to render forms in Twig templating system and not really getting anywhere fast i decided that for my project which is just a personal project where i am taking my first real steps into OOP and proper (however that can be defined for a web application) MVC principles i decided to ditch Symfony standalone component and build up my own form builder class from scratch.&lt;/p&gt;\n\n&lt;p&gt;My form builder class covers allsorts of eventualities should i need them and is kept in a Helpers directory, i call it from a seperate controller class (Registration for example) and process data via a Registration Model.&lt;/p&gt;\n\n&lt;p&gt;Im actually quite pleased at how it turned out, it is simpler for me to use than Symfony and Twig handles it perfectly, i just need to set up some error handling and XSS protection etc and its good to go.&lt;/p&gt;\n\n&lt;p&gt;Many thanks to the contributers, right now Symfony seemed a little too intense for my needs which doesn't mean to say i wont be getting some practice at it at some point later as my skill set develops. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立的Twig表单和自定义MVC模式", ["\n\n", "just a pretty simple question regarding Twig standalone templating system, I have it installed as a package with my private project which is a php MVC, as it goes i am pleased with Twig, however when it comes to Forms im a little confused by it.", "\n\n", "Basically Google after Google seems to return the same thing that it requires the Symfony Forms package to render the forms, however on the ", "Twig website", " there is barely a mention of Symfony and to be honest it does seem to point that it is indeed a standalone package.", "\n\n", "Now the issue is that i can render any form i like using plain html but as soon as i use any kind of Twig syntax to build the form then it just throws out Twig error after Twig error and obviously kills any rendering stone dead.", "\n\n", "So i installed the Symfony forms package and to be honest it just seems to fly in the face of what would be acceptable MVC pattern and apart from that its just downright confusing and seems to be overkill.", "\n\n", "Has anyone any experience in what i am saying regarding the Twig form syntax as standalone and actually get it to work or is plain html inside the Twig template the only option?.", "\n\n", "thanks.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It's happens because PHP and C# differently used memory for save variables.\nRead &lt;a href=\"https://entwickler.de/webandphp/how-php-manages-variables-125644.html\" rel=\"nofollow noreferrer\"&gt;How PHP manages variables&lt;/a&gt;.\nSo PHP not duplicated zval memory for variable \"$a\" and value of $a changed when &lt;code&gt;($a = $a +5)&lt;/code&gt; has been completed so we have that &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$a = 5;\necho $a + ($a = $a + 5);  //20\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;and C# has duplicated memory for &lt;code&gt;a&lt;/code&gt; variables read answer &lt;a href=\"https://stackoverflow.com/questions/27937789/whats-happening-with-this-expression-b-a-a-a-5\"&gt; What's happening with this expression? b = a + (a = a + 5)&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["运算符优先级取决于lanaguage或独立", ["\n\n", "I have seen a question on stack over flow. \n", "What's happening with this expression? b = a + (a = a + 5)", "\n\n", "It shows the value of b will be 15. But when i run this code on Php, value of b is 20.", "\n\n", "Why there is difference of output in php and C#", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You will probably have refactor your code.&lt;/p&gt;\n\n&lt;p&gt;The basic rule of thumb will be anywhere you depend on an AppEngine package define your own interface for the way you use it. This will allow you decouple the app from the appengine libraries.&lt;/p&gt;\n\n&lt;p&gt;Once you've defined those interfaces then you can start providing alternatives that satisfy the interfaces. You'll be able to plugin any Datastore or Memcache that satisfies the interfaces and your app will be able to both run on appengine or as a standalone with the alternatives.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["使Go Webapp独立于Google App Engine", ["\n\n", "This question comes from working on my webapp, a feed reader written in Go. The code is available at ", "http://github.com/matthewbauer/rivulet", " although that should not be necessary to answer the question.", "\n\n", "I have a webapp written in Go that is running on Google's App Engine. It uses the usual common App Engine libraries like datastore, memcache, and user.", "\n\n", "Is there any way to let my users run this app on their own without breaking App Engine compatibility?", "\n\n", "Go now provides ", "build constraints", " that exclude/include files based on target build platform:", "\n\n", "// +build !appengine\n", "\n\n", "So, I know that this is possible. But, my biggest problem is with my libraries that depend on App Engine: datastore, memcache, and user. I know other libraries provide datastore and memcache, and I can implement user on my own, but how would I go about wrapping it up?", "\n\n", "I know that I can have them set up a development server with the SDK, but that might be too involved for some users. I want a single executable that normal Go projects provide. IS that possible?", "\n\n", "If any examples exist, I haven't found them yet; any examples of App Engine independent webapps would be appreciated. I can learn by example.", "\n    "]], "Tag": "算法设计"}
{"Answer": "他的意思是\r\n\r\n\r\n```\r\n#include &lt;stdio.h&gt;\r\n\r\nint main()\r\n{\r\n\tchar ch2 = 'FATE';\r\n\tchar grade = 'B';\r\n\tprintf(\"%c\\n\", grade);\r\n   \tgrade = ch2;\r\n\tprintf(\"%c\\n\", grade);\r\n\treturn 0;\r\n}\r\n```\r\n结果是\r\nB\r\nE\r\n\r\n短短一小段程序，你要理解内存怎么分布的，ascii怎么回事，还有，你用的X86 CPU是一种little endian的处理器。所以明明是 FATE 结果  E 跑前面去了，你一个不理解，就完全不理解。更糟糕的是，万一你用了手机写程序，而手机是 big endian的，那么结果输出就是BF了。\r\n\r\n初学者学 C语言能学到怀疑人生。\r\n\r\n顺便说一下，C语言不适合自学，学了也没啥卵用。\r\n很多人反驳说，C语言可以写操作系统啊，问题是你一个初学者又不是奔着为国家编写操作系统的使命去的，写操作系统和你有一毛钱关系不？\r\n如果你学C语言感觉困难很大，建议你换一种语言。", "Konwledge_Point": "树中的独立集", "Question": ["请大家帮帮萌新！！！", ["C语言自学中。。。。。", "\n\n", "C primer plus第三章中写道：", "\n\n", "奇怪的是C语言将字符常量视为int类型而非char类型。", "\n例如在int位32位 char为8位的ASCII系统中有下面代码", "\n\n", "char grade = ‘B‘，", "\n\n", "    本来‘B’对应的66储存在32位的储存单元中，现在却可以储存在八位的单元中（grade）。利用字符常量的这种特性，可以定义一个字符常量'FATE',即把四个独立的八位ASCII码储存在一个32位存储单元中。如果把这样的字符常量赋给char类型变量grate,只有最后八位有效。因此，grade的值是'E'。\n\n    这段话怎么理解，为什么B就变成了E了，\n    66的二进制是1000010 八位储存是01000010\n    那FATE就是四个01000010\n    那么后八位是不是还是01000010吗？\n    那么为什么grade的值会变成‘E’\n    E的ASCII是69，换成二进制储存是01000101难道后八位是这个？\n    求解答！！！！！！！谢谢！！！！！！\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;showData 应为 canceData 子级就可以了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["当有多个时，怎么让添加时都是独立的", ["当有多个时，怎么让添加时都是独立的，现在添加多个后，再给其他添加数据时，其他的也会跟着一起变", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The statements&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;c2 := make(chan int)\nc2 &amp;lt;- 1\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;will always block. &lt;a href=\"http://play.golang.org/p/Cq1KPovjaq\" rel=\"nofollow\"&gt;Link to Playground&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Because the channel &lt;code&gt;c2&lt;/code&gt; is unbuffered, the send operation cannot proceed until another goroutine has received the value from the channel. There is no goroutine that can receive from the channel, therefore the send blocks forever.&lt;/p&gt;\n\n&lt;p&gt;The &lt;a href=\"https://golang.org/doc/effective_go.html#channels\" rel=\"nofollow\"&gt;channels section in Effective Go&lt;/a&gt; is a good place to read about unbuffered channels. Also see the sections on channels and send in the &lt;a href=\"https://golang.org/ref/spec\" rel=\"nofollow\"&gt;Go Language Specification&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The program will work as I think you are expecting if you make &lt;code&gt;c2&lt;/code&gt; a buffered channel:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    c2 := make(chan int, 1)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;With this change, the send can proceed without synchronizing with a receiver. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://play.golang.org/p/atlNItDcai\" rel=\"nofollow\"&gt;Link to Playground&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["第二通道导致死锁，即使独立", ["\n\n", "This is more a follow up question from ", "this other post", "\n\n", "I do not understand why adding a second channel (c2 in my case) will cause a deadlock. Channels are independent and I don't see why c2 is supposed to be blocked", "\n\n", "Link to playground", "\n\n", "func do_stuff(done chan bool) {\n    fmt.Println(\"Doing stuff\")\n    done <- true\n}\n\nfunc main() {\n    fmt.Println(\"Main\")\n    done := make(chan bool)\n    go do_stuff(done)\n    <-done\n    //Up tp here everything works\n    c2 := make(chan int)\n    c2 <- 1\n    fmt.Println(\"Exit \",<-c2)\n\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can simple create a product&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Set 'Visibility'  to 'Catalog'&lt;/li&gt;\n&lt;li&gt;Don't add the product to any category &lt;/li&gt;\n&lt;/ol&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Magento修改某些产品的产品可见性", ["\n\n", "I want to add New product visibility option so product visible but only for direct URL. website visitors not able to find product / search product on website. if i send link to someone then he can see the product only.", "\n\n", "i was thinking to create one hidden category and add product under this category and call block under cms page. please suggest.", "\n\n", "Thanks", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两个程序都是按键按下去就执行&amp;#xff0c;只不过第一个不带松手检测&amp;#xff0c;按下去之后if条件成立会一直循环&amp;#xff0c;也就是LED的状态会一直反转。第二个带松手检测&amp;#xff0c;按键按下LED电平反转&amp;#xff0c;程序等在while&amp;#xff08;&amp;#xff01;k&amp;#xff1f;&amp;#xff09;里&amp;#xff0c;不松手的的话程序不会继续往下执行&amp;#xff0c;每次按键按下LED状态翻转一次&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["下面两种代码是不是51单片机独立按键控制LED的，有啥子区别?", ["下面两种代码是不是51单片机独立按键控制LED的，有啥子区别?求各位指点", "1.", "\n", "2."]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You would be better off having a download table which links to your file table. The download table would create a record each time a file is downloaded.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;id\nfile_id\nip_address\nuser_agent\ncreated\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;etc. &lt;/p&gt;\n\n&lt;p&gt;Then write a query to determine how many downloads happened a day would be quite an easy task.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在过去30天创建一个表有效还是有更好的方法？", ["\n\n", "Basically I have a site where users can upload and share files. I would like it so users can keep track how many downloads were made in the last 30 days and be able to view each of those 30 days individually.", "\n\n", "I was thinking of creating a table that'll have 31 columns, 1 column being the id and the rest being day1, day2, day3,etc... Updating this table every day moving the downloads of 1 day to the day before.", "\n\n", "My question is would this be efficient or is there a better way of going about this?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;只用UI设计师无法做到你所说的。&lt;/p&gt;\n&lt;p&gt;Qt中的多页面切换组件QTabWidget&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;能够在同一个窗口中自由切换不同页面的内容。&lt;br /&gt;是一个容器类型的组件&amp;#xff0c;同时提供友好的页面切换方式。&lt;/p&gt;\n&lt;p&gt;ctrl&amp;#43;r 可预览界面&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如果使用信号和槽编辑器 连接两个独立的UI窗口？", ["如果使用信号和槽编辑器 连接两个独立的UI窗口？或者如果在不写代码的情况下，使用UI设计师实现多窗口切换？", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以啊&amp;#xff0c;甚至你把python拷贝一份放其他地方都能直接用&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立配置Python版本可以和Anaconda下的python一个版本吗？", ["想问下anaconda下的Python是3.7版本的，但是cmd搜已配置的环境时只能看到C盘下的Anaconda3这一个虚拟环境，看不到python的环境。要像给其他版本独立配置环境一样给python37独立配个环境吗？还是直接用Anaconda3的环境呢？如果要在独立给python37配环境是直接在cmd输入conda activate py37还是先输入create  -n py37  python=3.7 在输入 conda activate py37呢？"]], "Tag": "算法设计"}
{"Answer": "https://www.zhihu.com/question/31380177", "Konwledge_Point": "树中的独立集", "Question": ["能不能用二维数组制作混合类型的数组并且独立排序？", ["二维数组可以每一个维指定一种数据类型么？能不能用二维数组制作混合类型的数组并且独立排序？"]], "Tag": "算法设计"}
{"Answer": "你不止用tomcat是自带的，，jdk也是myeclipse自带的", "Konwledge_Point": "树中的独立集", "Question": ["jaxws，WebService，布署到独立Tomcat7，无法启动", ["工具：MyEclipse2014 for spring", "\n问题：", "\n使用jaxws开发的WebService服务端，布署到独立的Tomcat7.0.54时，无法启动。", "\n日志", "\n严重: Error configuring application listener of class com.sun.xml.ws.transport.http.servlet.WSServletContextListener", "\njava.lang.ClassNotFoundException: com.sun.xml.ws.transport.http.servlet.WSServletContextListener", "\nat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1720)", "\nat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1571)", "\nat org.apache.catalina.core.DefaultInstanceManager.loadClass(DefaultInstanceManager.java:529)", "\nat org.apache.catalina.core.DefaultInstanceManager.loadClassMaybePrivileged(DefaultInstanceManager.java:511)", "\nat org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:139)", "\nat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4888)", "\nat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5467)", "\nat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)", "\nat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:901)", "\nat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:877)", "\nat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:632)", "\nat org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:1247)", "\nat org.apache.catalina.startup.HostConfig$DeployDirectory.run(HostConfig.java:1898)", "\nat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)", "\nat java.util.concurrent.FutureTask.run(Unknown Source)", "\nat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)", "\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)", "\nat java.lang.Thread.run(Unknown Source)", "后来搜索了一下，说是jdk不带jaxws的包，下载了jaxws-ri-2.2.10.zip把lib的jar放到项目lib下成功启动。", "\n但是在用MyEclipse开发时运行就没有问题，用的是MyEclipse自己带的Tomcat", "**我的问题是：为什么在Myeclipse自带的Tomcat中它就能启动，我搜索了整个Myeclipse文件夹，也没找到WSServletContextListener这个类，为什么它就能加载这个类，MyEclipse的Tomcat从哪里加载这个类？*", "*"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你问的是C语言标准库吧&amp;#xff1f;标准库是可以和编译器分开的&amp;#xff0c;甚至不同的编译器还可以使用同一个标准库&amp;#xff0c;但是编译器一般都自带标准库&amp;#xff0c;因为没有标准库&amp;#xff0c;你连基本的输入输出都很难实现。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C语言中的头文件到底存放在哪?", ["C语言中的头文件有的人说存在于编译器中.我想知道头文件是编译器的一部分呢？还是互不相干.独立存在?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果你想招聘一个开发工程师来独立完成从微信小游戏的开发到上线运营&amp;#xff0c;以下是一些可能需要的技能和条件&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;技能&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;熟练掌握微信小游戏开发的技术和工具&amp;#xff0c;包括开发工具、框架和API等。&lt;/li&gt;&lt;li&gt;精通前端开发技术&amp;#xff0c;如HTML5、CSS、JavaScript等。&lt;/li&gt;&lt;li&gt;熟练掌握后端开发技术&amp;#xff0c;如Node.js、PHP等。&lt;/li&gt;&lt;li&gt;熟悉微信小游戏的运营和推广策略&amp;#xff0c;能够开发出有较好用户体验和运营能力的游戏。&lt;/li&gt;&lt;li&gt;熟悉小程序和微信公众号的开发和接入。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;&lt;strong&gt;条件&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;有一定的项目经验和成功的案例&amp;#xff0c;有一定的开发规模和上线经验。&lt;/li&gt;&lt;li&gt;具有较好的团队协作和沟通能力&amp;#xff0c;能够独立完成项目。&lt;/li&gt;&lt;li&gt;学历要求本科及以上&amp;#xff0c;计算机相关专业优先。&lt;/li&gt;&lt;li&gt;有较好的英语读写能力&amp;#xff0c;能够查阅和理解英文文档和技术资料。&lt;/li&gt;&lt;li&gt;有良好的学习能力和技术积累能力&amp;#xff0c;能够跟进最新技术和趋势。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;除此之外&amp;#xff0c;你可以根据你的具体需求和公司文化&amp;#xff0c;在招聘条件中加入其他的要求和条件。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立开发微信小游戏需要满足哪些条件", ["想请问一下如果想做一个微信小游戏，从开发到上线运营，只招一个开发工程师，招聘条件应该怎么写？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I solved this issue simply by replacing localhost with 127.0.0.1 in my.cnf file.&lt;br&gt;\nAs &lt;a href=\"https://stackoverflow.com/users/4461980/fmashiro\"&gt;Fmashiro&lt;/a&gt; pointed out, this could have happened due to missing / corrupted socket file.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["使用XAMPP 1.6.2附带的PHP独立MySQL安装", ["\n\n", "I have installed XAMPP 1.6.2 (need this use this specific version) at /opt/lampp in Ubuntu 16.0.4.\nI have installed Mysql 5.7.18-0ubuntu0.16.04.1 using apt-get. \nI need to use the installed version of MySQL with PHP that came with XAMPP. ", "\n\n", "When I try to connect PHP with MySQL (independent installation), I get this error:", "\n\n", "\n  ", "Can't connect to local MySQL server through socket\n  '/opt/lampp/var/mysql/mysql.sock'", "\n", "\n\n", "I am still getting this error after trying the following things:", "\n\n", "\n", "Replaced all occurrences of '/opt/lampp/var/mysql/mysql.sock' with '/var/run/mysqld/mysqld.sock' in /opt/lampp directory.", "\n", "Restarted Apache, MySQL.", "\n", "Rebooted system.", "\n", "Searched on Stackoverflow, and tried existing solutions (eg. edit my.cnf)", "\n", "\n", "Please help me out;\nThanks.", "\n    "]], "Tag": "算法设计"}
{"Answer": "首先Customer与Order不是一对多的关系吗?一个客户可以有多个订单,一个订单只能属于一个客户,如果像我说的,首先表的设计就有问题\r\n不过如果你真要这么设计的话...\r\n首先考虑客户类型和订单状态字段是否有做索引的需要,\r\nselect t3.* from(\r\n  select * from Customer where customer_type=80 \r\n) t1 inner join Customer_Order t2 on t1.customer_id=t2.customer_id\r\ninner join (\r\n  select * from Order where order_state='已经到帐'\r\n) t3 on t2.order_id=t3.order_id", "Konwledge_Point": "树中的独立集", "Question": ["多对多表结构的设计有什么优点？", ["最近看到一个朋友说自己公司使用的表结构为多对多的关系，现在他们的customer已经860万了，而中间表m_customer_category 也有900多万了，如果按类型查找客户资料的话巨慢，就是customer，m_customer_category,custoemr_category三张表多对多关系，现在使用客户类型快速查找非常慢。", "\n然后自己也想了想这种设计，感觉查询确实非常郁闷，而且想不出它到底有什么优势。", "\n希望大家一起来讨论讨论。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个 列表应该是循环出来的 。那你 可以用 移出 元素 。或者删除 掉数组里的这一项数据。然后重新渲染&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["要求独立完成的怎么全部删除这个会，但是要求是我们自己制作一个独立删除的功能", ["要求独立完成的怎么全部删除这个会，但是要求是我们自己制作一个独立删除的功能，就是通过点击每个展示的数据的点击按钮来删除展示的对应数据其他一起展示的不受影响，只删除，删除按钮对应的数据（数组）；", "删除按钮是采用事件委托的形式实现的点击功能打印数据是有效的就是无法实现上述功能。", "\n", "\n", "<", "div", " ", "id", "=", "\"sh_for_rmd_rods\"", ">", "\n                        ", "<", "div", " ", "class", "=", "\"rods_font-del_box\"", ">", "\n                                ", "<", "span", " ", "class", "=", "\"rods_font\"", ">", "搜索历史", "</", "span", ">", "\n                                ", "<", "span", " ", "id", "=", "\"Rod_Del\"", " ", "class", "=", "\"rods_del\"", ">", "全部删除", "</", "span", ">", "\n                        ", "</", "div", ">", "\n                        ", "<", "ul", " ", "id", "=", "\"ShowHistory\"", ">", "\n                        ", "</", "ul", ">", "\n                ", "</", "div", ">", "\n            ", "</", "div", ">", "        \n", "\n", "    ", "SearchBtn", ".", "onclick", " = ", "function", "(", "){\n        ", "let", " userVal = ", "SearchInput", ".", "value", ";\n        ", "let", " localCon = ", "localStorage", ".", "getItem", "(", "'SearchInputValue'", ");\n        arr = ", "localStorage", ".", "getItem", "(", "'SearchInputValue'", ") ? arr = ", "JSON", ".", "parse", "(", "localStorage", ".", "getItem", "(", "'SearchInputValue'", ")) : [];\n        ", "if", "(userVal == ", "null", "||userVal == ", "''", "||userVal == ", "undefined", "||userVal.", "replace", "(", "/(^\\s*)|(\\s*$)/g", ", ", "\"\"", ")==", "''", "){\n            ", "return", ";\n        }", "else", "{\n            ", "let", " arr = [];\n        }\n        ", "if", "(arr.", "indexOf", "(userVal)== -", "1", "){\n            arr.", "unshift", "(userVal);\n         };\n         ", "if", "(arr.", "length", " >= ", "15", "){\n            arr.", "splice", "(arr.", "indexOf", "(", "14", "),", "1", ");\n         };\n         ", "localStorage", ".", "setItem", "(", "'SearchInputValue'", ",", "JSON", ".", "stringify", "(arr));\n    };\n    rods_del.", "onclick", " = ", "function", " (", ") {\n        ", "localStorage", ".", "clear", "(", "'SearchInputValue'", ");\n    };\n    inputRecommendation.", "onclick", " = ", "function", "(", "shwHir", "){\n        ", "SearchInput", ".", "focus", "();\n        shwHir.", "cancelBubble", " = ", "true", ";\n        ", "let", " locaShow = ", "JSON", ".", "parse", "(", "localStorage", ".", "getItem", "(", "'SearchInputValue'", ")) || [];\n        ", "if", "(", "localStorage", ".", "getItem", "(", "'SearchInputValue'", ") !== ", "null", "){\n            sh_for_rmd_rods.", "style", ".", "display", " = ", "'block'", ";\n        }", "else", "{\n            sh_for_rmd_rods.", "style", ".", "display", " = ", "''", ";\n        };\n        ", "let", " ", "Showhtml", " = ", "''", ";\n        ", "for", "(", "let", " i = ", "0", "; i < locaShow.", "length", "; i++){\n            ", "Showhtml", " += ", "`<li class='SearchHiy_font'data-key='SearchInputValue' data-index=", "${i}", ">", "${locaShow[i]}", "<span class='SearchiconDelBin'id='delhiy' data-index=", "${i}", " data-value=", "${locaShow[i]}", ">删除", "`;\n        ", "ShowHistory", ".", "innerHTML", " = ", "Showhtml", "; \n    };\n};\n", "ShowHistory", ".", "onclick", " = ", "function", "(", "d", "){", "/*这个是采用事件委托来实现 span class='SearchiconDelBin' 点击效果*/", "\n    ", "if", "(d.", "target", ".", "className", " == ", "'SearchiconDelBin'", "){\n        ", "let", " localDel = ", "JSON", ".", "parse", "(", "localStorage", ".", "getItem", "(", "'SearchInputValue'", "));\n         ", "console", ".", "log", "(d.", "target", ".", "dataset", "[", "'value'", "]);\n    };\n};\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;作为未入行的阶段&amp;#xff0c;还是以找工作为前提&amp;#xff0c;不建议前期做大量的学习&amp;#xff0c;这样会消耗时间和耐心&amp;#xff0c;三大件掌握之后&amp;#xff0c;搞清楚ajax&amp;#xff0c;会使用Vue&amp;#xff0c;就可以准备面试题&amp;#xff0c;面试&amp;#xff0c;找到一份工作之后&amp;#xff0c;再查缺补漏&amp;#xff0c;可以根据业务需要作为学习导向&amp;#xff0c;也可以按照兴趣&amp;#xff0c;学学node或者一些桌面端&amp;#xff0c;移动端的拓展&amp;#xff0c;nginx之类的服务器配置&amp;#xff0c;了解mysql&amp;#xff0c;mongoDB&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["前端按照实际工作的标准，需要达到什么样的水平，包括技术栈", ["有兴趣的可以互相沟通了解一下哦！希望能够帮助到正在学习前端的朋友们"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用Costura.Fody&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["用C#写软件，怎么独立编译成一个exe，不需要运行时库", ["我现在在用Visual Studio写C#的软件，本来说我会独立编译的，但是根本不行。", "独立编译是什么意思，在我做好这个软件的时候，我运行【dotnet publish】，但是这样的话，在publish里面就会有除了exe以外的4个运行时文件。这让我很苦恼。独立编译的意思就是使得所有dll和pdb和json文件全部都包含在exe里面，但是exe依旧是要.NET Framework框架运行的。", "\n", "大家应该都用过《我的世界：PCL2启动器》吧，差不多的也都用过了，这个软件也是用C#写的，它也同样需要.NET Framework框架，但是有个问题，这个软件发布出来，只有一个exe文件，并没有周围所谓的4个运行时文件。我也想做一个这样的软件，至少我认为这个就是独立编译。【因为易语言里面将所有运行时文件包含进exe也叫独立编译】", "之前查过百度和搜狗，好多人都说打包成安装包的形式，这样完全不行，还有百度和搜狗上基本都是关于C/C++的，我不需要啊，还有一些都是需要依赖库的，这完全不行啊，.还有一些说需要用到一些制作安装包的软件，这种也不行，NET Framework是电脑自带的一种运行库吧，不需要重新下载吧。", "\n", "用Visual Studio确实是有办法做到独立编译一个exe的，但是我只是找不对方法而已，有人来帮个忙吗？非常感谢！"]], "Tag": "算法设计"}
{"Answer": "重复一下你的需求：\r\n前端客户端会请求后台接口要展示广告列表，服务器端这时候把数据拼装好把广告信息返回，在这个时候服务器端可以拿到用户的ip地址和广告列表，现在希望按照ip为维度统计。\r\n如果希望查询pv记录，需要将所有的记录全部存下，然后统计，优化方案只把这些数据库操作异步化，给两个思路：\r\n1、本地创建线程池，一旦消息来了，直接投递到队列，然后生产者消费者处理就可以解决\r\n2、使用消息队列异步化\r\n3、将数据打入到日志异步化，然后使用logstah处理\r\n\r\n如果产品经理希望实时查询uv，不要pv，这时候可以做相关优化\r\n1、使用布隆过滤器，在前面拦截一道，毕竟二八准则，这一步就可以拦截很多请求\r\n2、数据库层面优化，一天120W，这个量不算大，还是有优化方案\r\n\t2.1 数据库索引所以必须要加，而且根据你的需求，需要ip + 广告id联合索引\r\n\t2.2 如果前端显示统计对实时要求是不是特别搞，建议批量插入数据，这样可以减小对mysql的压力\r\n\t2.3 如果mysql确实hold不住，可以换成hbase或者mongo", "Konwledge_Point": "树中的独立集", "Question": ["最想项目碰到一个问题,希望大家给个思路", ["需求是这样的:", "\n        统计广告的展示量,点击量,独立ip展示量,独立ip点击量", "\n\n", "    现在的方法是\n           点击时 请求接口,后台判断当前ip 当前广告id 当前日期 是否在数据库中有数据\n                 没有数据插入\n                这个方法导致数据库中的数据量每日增加在120w左右\n    有什么方法可以改进吗?\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;最多多少学生数据&amp;#xff0c;根据数据量决定如何调整设计&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立构建一个存放删除信息的表格是否合适？", ["独立构建一个存放删除信息的表格是否合适", "\n", "求问一个数据表设计的问题", "\n", "目前负责一个物联网相关的项目，通过人脸设备获取信息的管理平台", "\n", "背景设定是校园出入的考勤场景，每年都有大量的学生进校离校。学生信息关联出入校门的权限。正常来说，离校就删除学生信息，但是有个需求，希望能恢复过往的学生信息（类似校庆之类的允许进校）。考虑过逻辑删，但领导说长时间的数据积累会导致查询效率低下，目前系统使用的是，将删除信息单独放置到一个信息删除表里。每次删除信息就在用户表（正常是用得查询表）复制数据到删除表，再删除用户表的信息。恢复数据就反过来。", "\n", "目前这样的表结构导致增删操作比正常的情况麻烦，我总感觉不对劲。想问问各位这样的结构在这种需求下是否合适，直接放一个表使用逻辑删，通过建立状态索引会不会是更好的办法？"]], "Tag": "算法设计"}
{"Answer": "你的赋值只是一个引用的赋值，所以t会随着A的改变而改变。\r\n不想受其影响，可以使用深度拷贝，将A的第二向量的值赋予t。", "Konwledge_Point": "树中的独立集", "Question": ["Python的矩阵赋值问题", ["定义矩阵A后，给变量t赋值为A矩阵的第二行向量，但是当改变原本矩阵第二行向量，变量t也发生改变。请问如果修改代码可以让t的值不被覆盖呢？", "\n\n", "谢谢！！！", "\n\n", "A = np.array([1,1,3,2,3,0]).reshape(2,3)\nindex = 1\nj = 0\nt = A[index,:]\nprint(t)\nA[index,:] = A[j,:]\nprint(t)\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;帮你改了一下&amp;#xff0c;不会受原文件行数限制&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas as pd\ndf &amp;#61; pd.read_csv(&lt;span class=\"hljs-string\"&gt;&amp;#39;data.csv&amp;#39;&lt;/span&gt;)\ni &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; v &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; df.values:&lt;span class=\"hljs-type\"&gt;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;df&lt;/span&gt; &amp;#61; pd.DataFrame(columns&amp;#61;df.columns)\n    &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;df&lt;/span&gt;.loc[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; v\n    &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;&lt;span class=\"hljs-type\"&gt;df&lt;/span&gt;.to_csv(f&lt;span class=\"hljs-string\"&gt;&amp;#39;data{str(i)}.csv&amp;#39;&lt;/span&gt;,index&amp;#61;None)\n    i&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["使用pandas将csv文件逐行写入独立csv文件", ["csv文件一共32行，想使用pandas把每一行数据写入一个单独csv文件，32行变成32个csv文件，使用了以下代码，结果储存的每一个csv文件都包含了全部行的数据，头大了。", "\n", "import pandas ", "as", " pd\n\nfile = pd.read", "_csv('", "data", ".", "csv", "',", "header", "=None)", "\ndf = pd.", "DataFrame(", "file", ")", "\n\n", "for", " i ", "in", " range(", "32", "):\n    df.iloc", "[[", "i", "]", ",]\n    df.", "to", "_csv('", "data", "{}.", "csv", "'.", "format", "(", "i", ")", ", index=False)\n\n"]], "Tag": "算法设计"}
{"Answer": "修改conf/jetty.xml\r\n\r\n找到Connector并且修改为\r\n&lt;bean id=\"Connector\" class=\"org.eclipse.jetty.server.ssl.SslSelectChannelConnector\"&gt;\r\n\r\njava bin/run.jar start\r\n\r\n看到错误提示，提示缺少keystore\r\n\r\n按照http://activemq.apache.org/how-do-i-use-ssl.html这篇帖子产生keystore就好了，就可以用了。。", "Konwledge_Point": "树中的独立集", "Question": ["如何向嵌入在ActiveMQ中的Jetty添加HTTPS支持？", ["目前正在研究应该如何配置ActiveMQ（5.4.2）才能让它支持在HTTPS协议上传输的JMS消息，也看了官方的文档http://activemq.apache.org/http-and-https-transports-reference.html和http://docs.codehaus.org/display/JETTY/How%20to%20configure%20SSL，但是后面这个文档应该是针对独立运行的Jetty server的，不知哪位朋友成功地向嵌入在ActiveMQ里的Jetty添加过HTTPS支持，能否分享一下具体的配置方式？非常感谢！\n"]], "Tag": "算法设计"}
{"Answer": "那样会多调用一次拷贝构造函数浪费性能，如果没有定义拷贝构造函数，操作不会作用到原来的变量上，也就是不会自增。", "Konwledge_Point": "树中的独立集", "Question": ["关于类中的运算符重载中this指针使用的问题", ["    const Byte& operator++()\n    {\n        b++;\n        return *this;// 前缀形式 返回改变后的对象\n    }\n\n    const Byte& operator--()\n    {\n        b--;\n        return *this;\n    }\n\n    const Byte operator++(int)\n    {\n        Byte before(b);\n        b++;\n        return before;//后缀形式 返回改变前的对象 创建一个独立的类类返回先前的值 所以采用的是按值进行返回\n    }\n\n    const Byte operator--(int)\n    {\n        Byte before(b);\n        b--;\n        return before;\n    }\n", "\n\n", "为什么返回this指针的解引用的时候函数的返回值要定义为类的引用类型呢？ 可以直接定义为按值进行返回吗？"]], "Tag": "算法设计"}
{"Answer": "楼上说的分层控件，2种方式都是分层设计的思路。\r\n我认为是真正做到了设计与实现分离，API项目只定义接口和抽象类，这样设计的好处就像JDBC API一样，JAVA API 只定义接口，实现交由各个数据库厂\r\n商去实现， 在这里service项目就是数据库厂商。", "Konwledge_Point": "树中的独立集", "Question": ["一个SSM项目可以拆分为多个项目，但是这样做有什么好处？", ["一个SSM项目可以拆分为多个项目，比如API一个项目，service一个项目，controller一个项目，但是这样做有什么好处？二者又有什么区别？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先&amp;#xff0c;js那些原生的api你得熟练背过&amp;#xff0c;做到牢记于心&lt;br /&gt;其次就是&amp;#xff0c;你得多多练习&amp;#xff0c;去找几个免费开源的项目&amp;#xff0c;着重看一下他们的js交互是怎么实现的。多敲几遍&amp;#xff0c;慢慢就掌握了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["为什么自己独立写代码就是不行呢？", ["正在学前端的", "刚刚学完js", "课堂上一讲就懂了", "然后自己写就脑袋空白", "求问", "怎么办？"]], "Tag": "算法设计"}
{"Answer": "关系不是很好的同学，随便找个理由搪塞过去就好了...(1.不回应，他自然懂； 2.他要是过几天还问你要，你就说上次考的时候被领导发现，不敢再搞了。)\r\n\r\n关系很好的朋友，如实说明，说这是违反公司规定的，你总不是想让我丢工作吧；并且主动跟他推荐一个值得学习的开源框架；有可能的话给他一些指导......如果他不理解，这样的朋友也就不叫朋友了。", "Konwledge_Point": "树中的独立集", "Question": ["公司的一个独立系统，同学非问我要源码学习，怎么办？", ["公司的一个独立的javaee项目，做了很长时间，一个同学今天非问我要源码，他想学习一下系统的框架什么的。给他的话严重不严重？不给的话该怎么拒绝？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Okay, found the answer here: &lt;a href=\"https://stackoverflow.com/questions/18669613/my-session-ids-stopped-working?rq=1\"&gt;My session ID's stopped working&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;One page was localhost:8001, while the second was 127.0.0.1:8001, which are treated by the server as two separate pages for the purpose of sessions, while serving the same page.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["两个单独页面的不需要的独立会话", ["\n\n", "I am stumped. Everybody says if you use session_start that you should get a single session even when you open multiple browser windows. However, it seems that my sessions are page specific.", "\n\n", "When I load page one (index.php), it gives as a Session ID: sr51j9hhrjjrvbrfboek15l4e4 with an empty $_SESSION array", "\n\n", "I then log in on a webpage (login.php) that generates a new Session ID: v2t8844nglg7uvnsrbr6k9ms43 with a $_SESSION array with various variables.", "\n\n", "When I then reload page one, it will display the old session ID, not the new one as expected. It is page linked because if I copy load page two in tab one, it will give the same session ID as the page in tab 2, and visa versa. ", "\n\n", "I have added the rule ", "\n\n", "\n  ", "CacheDisable /local_files", "\n", "\n\n", "to the httpd.conf file with no effect.", "\n\n", "I uses Apache 2.4 (XAMPP installation for windows), with the ", "http://php-login.net", " advanced login script.", "\n\n", "Top of page (before the HTML tag):", "\n\n", "\n  ", "session_start();", "\n  \n  ", "require_once('includes/connection.php');", "\n", "\n\n", "followed by:", "\n\n", "\n  ", "echo var_dump($_SESSION);", "\n  \n  ", "echo session_save_path();", "\n  \n  ", "echo 'Session ID: '.session_id();", "\n", "\n\n", "at the top of the page in the body tag.\nAny suggestions?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I'm not quite sure what you mean by outside of the framework but it pretty much comes down to this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Get your Illuminate\\Routing\\Router from somewhere.\n// This could either be from the container instance or\n// an instance you instantiated yourself somewhere\n$router = new Illuminate\\Routing\\Router(....\n// or in case you plan on doing this in a service provider for example\n$router = $this-&amp;gt;app['router'];\n\n// Now you add your middleware using the following syntax\n$router-&amp;gt;middleware('name', My\\Middleware::class);\n\n// It's also possible to add a middleware group\n$router-&amp;gt;middlewareGroup('group_name', [\n    'name',\n    My\\Other\\Middleware::class\n]);\n\n// It's also possible to do this using the Laravel Facade's\nRoute::middleware(...\nRoute::middlewareGroup(...\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何使用照明/路由独立包注册中间件？", ["\n\n", "Docs say to register middleware in ", "app/Http/Kernel.php", ". How do I register middleware outside of the framework? ", "\n    "]], "Tag": "算法设计"}
{"Answer": "https://weibo.com/rmrb\r\n以上这个路径其实是：\r\nhttps://weibo.com/?id=rmrb\r\n也就只有@RequestMapping的写法不同而已 @RequestMapping(value = \"/:id\")，控制器没有@RequestMapping,或者@RequestMapping(\"\")\r\n这个id值是创建用户时自动生成的只是生成的比较好看", "Konwledge_Point": "树中的独立集", "Question": ["一个账号就独立的一个uri，这是什么技术？", ["微博，每个人都有唯一的uri,比如:", "\n科比的主页：", "https://weibo.com/kobebryantmamba。", "\n人民日报主页：", "https://weibo.com/rmrb，", "\n前面域名后的第一个路由一个账号一个独立的，从外面看，感觉每申请一个账号，就增加了一个controller似的", "\n类似的还有gitee等。", "\n特别想知道这是什么技术？如何实现的？", "\n还有淘宝，每增加一个店铺，该店铺就会有唯一的域名，难道每申请一个店铺，该店铺就会是一个独立的服务吗？类似于微服务吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is good practice, as it allows people using your library to handle errors properly. It's always a good idea to throw an exception when an exceptional circumstance occurs (such as important values being null).&lt;/p&gt;\n\n&lt;p&gt;The only improvement I could suggest to use a more specific exception class. For this case, you might want to throw an &lt;code&gt;InvalidArgumentException&lt;/code&gt; or &lt;code&gt;UnexpectedValueException&lt;/code&gt;. Using a more specific exception class means that people can check more specifically for that class in &lt;code&gt;catch&lt;/code&gt; blocks. For more complex applications defining your own exception classes to handle specific exceptions types is a good idea.&lt;/p&gt;\n\n&lt;p&gt;Also, it's very helpful for people using IDEs if you annotate the methods which throw exceptions with &lt;code&gt;@throws&lt;/code&gt; tags.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立的PHP类应该抛出异常吗？", ["\n\n", "I'm currently building a stand-alone PHP class to wrap the Instagram API with a few custom code for the types of projects I work on at my company. As I develop my code, I often find myself writing sutff like this:", "\n\n", "if (!$this->accessToken)\n    throw new Exception(\"Instagram: Access Token can't be NULL\", 1);\n", "\n\n", "Is this a bad practice? If so, what's the recommended approach to situations like these?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I consider this bad practise because it violates &lt;a href=\"http://martinfowler.com/bliki/CommandQuerySeparation.html\" rel=\"noreferrer\"&gt;CommandQuerySeparation&lt;/a&gt;. Setting a value is changing state (Command). Getting a value is asking for state (Query). A method should not do both, but one thing only.&lt;/p&gt;\n\n&lt;p&gt;Also, it's not really obvious what a method does when it's just called username, e.g. does not have a verb, like get or set. This gets even worse in your example, because the return value is either the object itself or the property value, so its not consistent.&lt;/p&gt;\n\n&lt;p&gt;Moreover, &lt;a href=\"http://martinfowler.com/bliki/GetterEradicator.html\" rel=\"noreferrer\"&gt;getters (and setters) should be used sparingly&lt;/a&gt; as they will quickly convolute your API. The more getters and setters you have, the more knowledge about an object is required by collaborators of that object. If you find your objects asking other objects about their internals, chances are you misplaced the responsibilities.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["独立的getter / setter方法，还是组合？", ["\n\n", "While working on a project, I've been making some changes and browsing around existing framework API docs for insight.", "\n\n", "While perusing the Kohana docs, I noticed that the getters/setters of any given class are typically combined:", "\n\n", "public function someProperty($value = null){\n    if(is_null($value){\n        return $this->_someProperty;\n    }\n    $this->_someProperty = $value;\n    return $this;\n}\n", "\n\n", "Rather than:", "\n\n", "public function setSomeProperty($value){\n    $this->_someProperty = $value;\n    return $this;\n}\n\npublic function getSomeProperty(){\n    return $this->_someProperty;\n}\n", "\n\n", "Is there any value in doing this (", "the former", "), beyond lessening the method count of a given class? I was always under the understanding that methods (", "functions in general", ") should be more descriptive of an action. Do other experienced developers cringe, even a tiny bit, when they see this?", "\n\n", "I was just surprised to see a popular framework use such conventions (", "I haven't used Kohana of course", ")", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Something like this should work:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if( $_SERVER['SCRIPT_FILENAME'] == __FILE__)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;$_SERVER['SCRIPT_FILENAME']&lt;/code&gt; refers to the script that is currently executing - if we're in an included file, this still references the initial script, the one doing the including.&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;__FILE__&lt;/code&gt;, on the other hand, is a magic constant which will always be the current file, whether included or run directly.&lt;/p&gt;\n\n&lt;p&gt;If they're the same, then we're in the directly-called script.&lt;/p&gt;\n\n&lt;p&gt;Otherwise... well, you get the idea :)&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Python就像独立与库一样使用PHP检查", ["\n\n", "I know Python has name=\"__main__\" check to test if the script is called as a standalone unit of execution or is included in another file to use as a library. Does PHP have a similar test?  One way to do this would be:", "\n\n", "define('ASLIBRARY', true);\nrequire('foobar.php');\n", "\n\n", "And in foobar.php", "\n\n", "$aslibrary = defined('ASLIBRARY');\nif (!aslibrary) {\n    ....\n}\n", "\n\n", "If PHP provides something of the sort, this would obviously be redundant. ", "\n    "]], "Tag": "算法设计"}
{"Answer": "```\r\n #include &lt;cstdlib&gt;\r\n#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\n#include &lt;cstdio&gt;\r\n\r\nusing namespace std;\r\n\r\nconst int MAX = 10000;\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n    vector&lt;int&gt; vec;\r\n    \r\n    for(int i=2; i&lt;MAX; i++)\r\n    {    \r\n        int sum = 0;\r\n        \r\n        for(int j=1; j&lt;=i/2; j++)\r\n        {\r\n            if(i % j ==0)\r\n                sum += j;\r\n        }\r\n        \r\n        if(sum == i)\r\n            vec.push_back(i);                   \r\n    }\r\n     \r\n    int n;   \r\n    while(cin &gt;&gt; n)\r\n    {      \r\n        cout &lt;&lt; n &lt;&lt;\":\";\r\n        int count = vec.size();\r\n            \r\n        for(int i=0; i&lt;count; i++)\r\n        {\r\n            if(vec[i] &lt;= n)\r\n                cout &lt;&lt; \" \" &lt;&lt; vec[i];\r\n            else\r\n                break;\r\n        }\r\n        \r\n        cout &lt;&lt; endl;\r\n    }\r\n\r\n    return EXIT_SUCCESS;\r\n}\r\n\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["一道openjudge的题目问下，", ["列出完数的一个题目问下", "\n查看 提交 统计 提问", "\n总时间限制: 1000ms 内存限制: 1024kB", "\n描述", "\n自然数中，完数寥若晨星，请在从1 到某个整数范围中打印出所有的完数来。所谓“完数”是指一个数恰好等于它的所有不同因子之和。例如，6 是完数，因为6=1+2+3。而24不是完数，因为24≠ +2+3+4+6+8+12（=36）。", "\n\n", "输入", "\n输入数据中含有一些整数n（1", "\n输出", "\n对于每个整数n，输出所有不大于n 的完数。每个整数n 的输出由n 引导，跟上冒号，然后是由空格开道的一个个完数，每个n 的完数列表应占独立的一行。", "\n样例输入", "\n100", "\n5000", "\n0", "\n样例输出", "\n100: 6 28", "\n5000: 6 28 496", "\n————————————————————————————————", "\n我写的代码一直没办法accept", "\n————————————————————————————", "\n#include “stdio.h”", "\n#include  \"math.h\"", "\nint main()", "\n{", "\n    long long int sum=1;", "\n    int i,j,k;", "\n    char ch;", "\n    int count=0;", "\n    long long int b[100];", "\n    for(i=1;i<=12;i++)", "\n    {", "\n        sum*=i;", "\n    }", "\n    while(scanf(\"%ld\",&b[i])==1)", "\n    {", "\n        if((ch=getchar())==EOF)", "\n        {", "\n            break;", "\n        }", "\n        i++;", "\n    }", "\n    for(j=0;j<i;j++)", "\n     for(k=j+1;k<i;k++)", "\n     {", "\n        if(b[k]*b[j]==sum)", "\n        {", "\n          count++;", "\n        }", "\n     } ", "\n   printf(\"%d\",count);", "\n    return 0;", "\n}——————————————————————", "\n不知道怎么改好。。。", "\n题目网址。。", "\n——————————————", "http://jmu.openjudge.cn/stl/T2/", "\n——————————————————————"]], "Tag": "算法设计"}
{"Answer": "可能有些还没有生效，或者有些节点任然是缓存的IP。静静等待观察两天！！", "Konwledge_Point": "树中的独立集", "Question": ["DNS 设置后 ping出两个主机ip", ["网站访问不到   解析的服务器IP是正确的   但是 ping 网站 有些地方通的有些不通 ，在网上用工具 ping 网站  出现了 两个主机IP 但是我只设置了1个 请问是什么原因啊"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I solved this question and created a repo for anyone who is interested a more in depth explanation or proof of concept.&lt;/p&gt;\n\n&lt;p&gt;Please see my repo: &lt;a href=\"https://github.com/dambrogia/docker-testing\" rel=\"nofollow noreferrer\"&gt;https://github.com/dambrogia/docker-testing&lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;TL; DR&lt;/h2&gt;\n\n&lt;p&gt;The approach I used to solve this was proxying all apache requests to any &lt;code&gt;.php&lt;/code&gt; files to PHP-FPM via &lt;code&gt;fcgi://php:9000&lt;/code&gt;. Port 9000 is the default &lt;/p&gt;\n\n&lt;p&gt;You can see this Apache setting in action &lt;a href=\"https://github.com/dambrogia/docker-testing/blob/master/.setup/apache/docker.apache.conf#L19\" rel=\"nofollow noreferrer\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;The &lt;code&gt;/var/www/html/$1&lt;/code&gt; portion of the setting is where the files are mapped within the PHP container.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["使用Docker容纳Apache，MySQL和PHP", ["\n\n", "I've been searching the web and reading manuals and I just can't seem to get my head around what is wrong with my Docker setup.", "\n\n", "The Goal", "\n\n", "To container-ize Apache, PHP and MySQL allowing them to be customized on a per-project basis. The ", "only", " dependency to deploy the stack should be docker. All other dependencies / actions should be able to be able to be built / run via ", "Dockerfile", ". ", "\n\n", "The Proof of Concept", "\n\n", "From my Apache + MySQL + PHP stack via ", "docker-compose.yml", " file - I'd like to target an ", "index.php", " page to successfully render ", "Hello Docker!", " along with a list of all available databases.", "\n\n", "The Problem", "\n\n", "When I visit ", "docker.dev/index.php", " in my browser, rather than the PHP code running, I can only view the PHP source code. This is what I see:", "\n\n", "<?php\n\n/**\n * This file:\n *     Has not been tested\n *     Does not use prepared statements\n *     Is for Proof of Concept only!\n */\n\n$host = '127.0.0.1';\n$user = 'root';\n$pass = 'docker';\n\n$conn = new mysqli($host, $user, $pass);\n\n$sql = 'show databases';\n$results = $conn->query($sql);\n\n?>\n\n<h1>Hello Docker!</h1>\n\n<ul>\n    <?php while ($row = $results->fetch_assoc()) : ?>\n        <li><?= $row['Database'] ?></li>\n    <?php endwhile ?>\n</ul>\n", "\n\n", "My understanding (which may be mistaken) is that Apache is correctly handling the virtual host, but doesn't know to load the PHP file through an Apache PHP Module.", "\n\n", "I have setup Apache to ", "depends_on", " PHP and I have linked them through a ", "network", " (along with MySQL) but obviously I'm missing something or else everything would be working just as I want it to).", "\n\n", "I have created an repo on github that should allow you to test my setup with a few simple commands:", "\n\n", "git clone https://github.com/dambrogia/docker-testing.git\ncd docker-testing\ndocker-compose up -d\n", "\n\n", "You will also have to edit add ", "docker.dev", " to ", "127.0.0.1", " in your hosts file on your host machine!", "\n\n", "How can I render the PHP rather than read the source of it when I visit ", "docker.dev/index.php", "? ", "\n\n", "I do not want", " to use a PHP and Apache combined image if at all possible. I would like to have three separate containers - PHP, Apache, MySQL. ", "\n    "]], "Tag": "算法设计"}
{"Answer": "这个建议你还是用工作流吧。比如使用wwf，它能很好地支持这种审批流程。", "Konwledge_Point": "树中的独立集", "Question": ["link环境下制作一款《订餐软件》，门店独立批单的设定请问如何从系统走？", ["link环境下制作一款《订餐软件》，门店独立批单的设定请问如何从系统走？"]], "Tag": "算法设计"}
{"Answer": "# 问题解决的话，请点采纳\r\n```\r\nvoid CQ1064139Dlg::OnBnClickedButton1()\r\n{\r\n\t// TODO: Add your control notification handler code here\r\n\tHWND hNotepad = ::FindWindow(_T(\"Notepad\"), NULL);\r\n\t::SetWindowLong(this-&gt;m_hWnd, GWL_HWNDPARENT, (LONG)hNotepad);\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202004/18/1587141365_459605.gif)", "Konwledge_Point": "树中的独立集", "Question": ["两个独立进程窗口怎么始终浮在另一个上面（）不是置顶，只是在指定窗口上面）", ["两个独立进程窗口怎么始终浮在另一个上面（不是置顶，只是在指定窗口上面）？知道需要悬浮窗口的句柄"]], "Tag": "算法设计"}
{"Answer": "共同的部分放在服务器上，不同的部分放在各自的数据库中，通过网络连接起来", "Konwledge_Point": "树中的独立集", "Question": ["link环境下制作一款《订餐软件》，请问多门店数据汇总，加盟独立账套怎么实现？", ["link环境下制作一款《订餐软件》，请问多门店数据汇总，加盟独立账套怎么实现？"]], "Tag": "算法设计"}
{"Answer": "http://wentao365.iteye.com/blog/1740691\r\n数据库水平切分(拆库拆表)的实现原理解析\r\n\r\n看下有没有帮助", "Konwledge_Point": "树中的独立集", "Question": ["link环境下制作一款订餐软件，请问拆库后如何判断哪些数据需要保留，如何独立？", ["link环境下制作一款订餐软件，请问拆库后如何判断哪些数据需要保留，如何独立？"]], "Tag": "算法设计"}
{"Answer": "Java 的 日历类定义了获取时、分、秒、年月日方法了的，直接用就可以了。", "Konwledge_Point": "树中的独立集", "Question": ["Java语言如何取当前电脑的系统时间，并且分别传给小时、分钟、秒三个独立的变量", ["Java语言如何取当前电脑的系统时间，并且分别传给小时、分钟、秒三个独立的变量"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;find_char&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; **strings, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; strings[i][j]; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (strings[i][j] &amp;#61;&amp;#61; c) {\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; i;\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *strings[] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;world&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;goodbye&amp;#34;&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(strings) / &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(strings[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]);\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; index &amp;#61; &lt;span class=\"hljs-built_in\"&gt;find_char&lt;/span&gt;(strings, n, c);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (index !&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Character &amp;#39;%c&amp;#39; found in string %d: %s\\n&amp;#34;&lt;/span&gt;, c, index, strings[index]);\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Character &amp;#39;%c&amp;#39; not found in any strings\\n&amp;#34;&lt;/span&gt;, c);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["多个字符串中查找某个字符", ["编写一个独立函数在多个字符串中查找某个字符，并判断该字符最先出现在哪个字符串中。", "注：函数原型 int fun(char **,int n,char);"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;双重循环筛呗&amp;#xff0c;你要用c语言那只能用链表或者数组&amp;#xff0c;只能遍历比较&amp;#xff0c;没有什么简单的办法&lt;br /&gt;或者你先把数据丢进数据库里&amp;#xff0c;然后去重&amp;#xff0c;group by取最大最小&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["对一组存放在表格中的数据（约2w）进行操作，提取出想要的数据", ["有没有朋友提供一下优秀解决思路？", "表格为20000行*6列", "每列数据相互独立，且存在重复值，其中1,2,3,4列为字符串类型，5列为双精度浮点型，6列为整形。", "我们要做这样的操作，①将1-6列完全相同的行筛选出来，仅保留一行，多余行删除", "②对①操作结果进行操作，对只有1-4列相同的行，比较第5列，找出最小值，比较第6列，找出最大值，保留这两行，如果6列最大值和5列最小值一致，仅保留一行。", "注意：以上所有数据要求保留原表数据，将计算结果输出到一个新的表格中。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I think you want:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$array = array_chunk((array)$object, $chunkSize = 3, $preserveKeys = true);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;(&lt;code&gt;$object&lt;/code&gt; is your object above)&lt;/p&gt;\n\n&lt;p&gt;This will cast your object to an array, and split it into smaller arrays of 3 elements each&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["PHP  - 将数组转换为新数组", ["\n\n", "CURRENT ARRAY:", "\n\n", "stdClass Object (\n[name1] => Someting very useful\n[text1] => Description of something useful\n[url1] => link.to/useful\n[name2] => Someting very useful2\n[text2] => Description of something useful2\n[url2] => link.to/useful2\n[name3] => Someting very useful3\n[text3] => Description of something useful3\n[url3] => link.to/useful3\n) \n", "\n\n", "I NEED:", "\nTo create multidimensional array where keys like name1, text1, url1 (and so on) will be putted into own array. How to accomplish that?", "\n    "]], "Tag": "算法设计"}
{"Answer": "Java 自定义线程可直接继承 Thread 类实现的。\r\n建议了解一下线程自定义的基础知识，参考：https://gitbook.cn/gitchat/activity/5d4bce7cdbdeb4514b4b15df", "Konwledge_Point": "树中的独立集", "Question": ["高分悬赏：Java语言怎么定义独立的线程函数，而不是在主程序里面定义run的方式的函数", ["高分悬赏：Java语言怎么定义独立的线程函数，而不是在主程序里面定义run的方式的函数", "\n高分悬赏：Java语言怎么定义独立的线程函数，而不是在主程序里面定义run的方式的函数"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;每条线都添加一个addgraph()图层就好了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["qcustomplot怎么绘制多条曲线在一张图上？", ["想要做64通道的显示窗口，效果如图：", "\n\n", "但是如果直接添加graph的话因为每一条曲线的横纵坐标都差不多会重合到一起，有什么办法可以画出来和图片上差不多的曲线图呢"]], "Tag": "算法设计"}
{"Answer": "如果是全局变量，不会回收，但是函数内定义的局部变量，会。", "Konwledge_Point": "树中的独立集", "Question": ["两个孤立的js对象相互引用,会被回收吗", ["如题。", "\n(function() {", "\n    var a = {};", "\n    var b = {};", "\n    a.b = b;", "\n    b.a = a;", "\n})();"]], "Tag": "算法设计"}
{"Answer": "http://bbs.csdn.net/topics/350196067", "Konwledge_Point": "树中的独立集", "Question": ["使用谓词限定符语法在vb中能不能阻止相同的数据在一个数组中重复存在2次", ["使用谓词限定符语法在vb中能不能阻止相同的数据在一个数组中重复存在2次，怎么保持数组中所有元素全部都是独立不同的？"]], "Tag": "算法设计"}
{"Answer": "可以跨进程访问内存，也可以通过注入线程的方法给进程添加代码\r\n对于windows来说，前者用ReadMemoryProcess，后者用CreateRemoteThread", "Konwledge_Point": "树中的独立集", "Question": ["进程都有自己独立的栈，那为什么gdb等调试工具可以修改其他进程栈里的变量值", ["如题   进程都有自己独立的栈，那为什么gdb等调试工具可以修改其他进程栈里的变量值"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果任务为多个&amp;#xff0c;那么standalone模式下&amp;#xff0c;资源隔离做的较差。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["flink运行是用独立模式还是用yarn模式呢", ["两种模式貌似没啥区别 本质都是flink做事情 那如果我只用flink的话 是不是直接用standalone模式比较好呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;blockquote&gt;\n  &lt;p&gt;Would it be better to have two different resources to handle creating a user?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I wouldn't create two different resources that both represent the &lt;code&gt;user&lt;/code&gt; and both model its creation process. Since a user is a user, in my opinion they should be created trough the same resource.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Manual creation, admin adds a user with usual data &lt;em&gt;AND any extra data as required&lt;/em&gt;.&lt;/p&gt;\n  \n  &lt;p&gt;When manually creating a user &lt;em&gt;other metadata and the user's permissions&lt;/em&gt;, as well as data in the other tables, can be changed.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If it makes sense, you could model this extra data as a separate (sub)resource. The same goes for permissions. This sub resource can then have its own URL (for instance &lt;code&gt;/users/{id}/meta&lt;/code&gt; and &lt;code&gt;/users/{id}/permissions&lt;/code&gt;) to which the client issues separate &lt;code&gt;POST&lt;/code&gt; requests, or it can be nested in the data structure that is sent to the API, like so:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n    \"name\": \"John\",\n    \"email-address\": \"john@doe.com\",\n    \"permissions\": {\n        \"read\": true,\n        \"write\": false\n    },\n    \"meta-data\": {\n        \"date-of-birth\": \"2000-01-01\"\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The approach with separate sub resources at their own URLs makes access control and validation a bit easier. On the other hand, it puts a bigger burden on the client. It can also put you in the position where an admin creates a user, the basic information is saved, but there is an error saving permissions; depending on your use case you may or may not need to somehow handle that automatically.&lt;/p&gt;\n\n&lt;p&gt;The approach where the sub resources are nested in the data structure makes the logic to handle the &lt;code&gt;POST&lt;/code&gt; request a bit more complex, but it does make the client side of things easier and gives you the option to make the whole action atomic by wrapping it in a transaction and rolling back if anything goes wrong.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Note: These two approaches are not mutually exclusive; you can do both if you want.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;Which of these approaches is best will depend on how many sub resources there are, how complex they are and how complex the access control to the sub resources is; the more sub resources there are and/or the more complex access control is, the more likely I would be to setup different URLs for the sub resources.&lt;/p&gt;\n\n&lt;p&gt;In this specific case, I would net the sub resources in the data structure and have the clients &lt;code&gt;POST&lt;/code&gt; all the data at once.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["REST API两个独立的资源来创建用户？", ["\n\n", "Currently building a REST API and one of the functions of it will be to create users. There are two ways my application will create users:", "\n\n", "\n", "Register, users add themselves with the usual data: email, password, username, date of birth.", "\n", "Manual creation, admin adds a user with usual data AND any extra data as required.", "\n", "\n", "My setup is a ", "users", " table, ", "users_metadata", " table and ", "users_permissions", " table, as well as a few others. The email and password are stored in the ", "users", " table, the username and date of birth in the ", "users_metadata", " table. When manually creating a user other metadata and the user's permissions, as well as data in the other tables, can be changed.", "\n\n", "Would it be better to have two different resources to handle creating a user?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can perform this auth in PHP &lt;a href=\"http://www.php.net/manual/en/features.http-auth.php\"&gt;as shown in the manual&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nif (!isset($_SERVER['PHP_AUTH_USER']) || $_SERVER['PHP_AUTH_USER'] != 'admin' || $_SERVER['PHP_AUTH_PW'] != 'foobar') {\n    header('WWW-Authenticate: Basic realm=\"My Realm\"');\n    header('HTTP/1.0 401 Unauthorized');\n    echo 'Unauthorized';\n    exit;\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["密码使用Apache2和PHP独立保护单个PHP文件", ["\n\n", "Dear folks,\nInside folder ", "images", " I would like to password protect a single php file ", "render.php", " \nI already have in that folder my .htaccess as well as my .htpasswd files however they dont work", "\n\n", ".htaccess", " in folder /images", "\n\n", "// does not work ??\n<Files render.php>\n  AuthName \"Login\"\n  AuthType Basic\n  AuthUserFile /var/www/vhosts/site.com/httpdocs/images/.htpasswd\n  require valid-user\n</FilesMatch>\n", "\n\n", ".htpasswd", "\n\n", "admin:818jp2uNLY6ZW     \n# generated with http://www.4webhelp.net/us/password.php\n", "\n\n", "As soon as I set the rules in htaccess of that folder, all stuff in that folder seems get weirdly processed, css files insite that folder get corrupted etc.  Why does this not work ? ", "\n\n", "PS I am also perfectly fine (in fact would prefer, if possible at all)  to use a password setting within php file itself, that way I will be sure nothing else gets affected than only that php file no matter its name or location ( probably more elegant and timess ) though I saw everyone using htaccess so there must be an advantage there, right?", "\n\n", "Thanks very much for your suggestions!", "\n    "]], "Tag": "算法设计"}
{"Answer": ":oops: 这个就比较麻烦了啊\r\n 这个在应用层 我想应该没法做到···\r\n  AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);\r\n\r\nAudioManager 只提供了 \r\nint\tSTREAM_ALARM\tThe audio stream for alarms\r\nint\tSTREAM_DTMF\tThe audio stream for DTMF Tones\r\nint\tSTREAM_MUSIC\tThe audio stream for music playback\r\nint\tSTREAM_NOTIFICATION\tThe audio stream for notifications\r\nint\tSTREAM_RING\tThe audio stream for the phone ring\r\nint\tSTREAM_SYSTEM\tThe audio stream for system sounds\r\nint\tSTREAM_VOICE_CALL\tThe audio stream for phone calls\r\n这么多的 stream ，你现在的需求是想，实现自己的audio stream\r\n 这个得读读AudioManager  看看实现的原理啊··", "Konwledge_Point": "树中的独立集", "Question": ["android下,怎么把播放器音量和其他系统音量分开??????", ["android下有 通话音量/系统音量/铃声音量/提示声音音量 等等;", "\n我写的小程序里面也有音量调节,但是我不想让其他的音量受到影响,", "\n该怎么做??"]], "Tag": "算法设计"}
{"Answer": "http://myeducs.cn/bianchengwendang/ASPNET/TextBox-kongjiande-Undo-shuxing/", "Konwledge_Point": "树中的独立集", "Question": ["怎么设置textbox的undo中的文本             ", ["怎么设置textbox的undo中的文本，当一个textbox共享多个控件的时候，redo希望独立设置怎么做？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这个应该是只显示最后一个吧。后面的覆盖前面的了你在每个图表function里搜友重新声明myChart&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["插入三个不同的echarts图表只有一个显示？", [" 三个echarts只有一个正常显示其他两个显示不出来", "\n\n", "\n\n", "\n", "$(function () {\n    ceshis();\n    ceshis1();\n    ceshis2();\n  \n    function ceshis() {\n\n        var myChart = echarts.init(document.getElementById('chart1'));\n        option = {\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            grid: {\n                top: '10%',\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            xAxis: [\n\n                {\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            color: '#c3dbff',  //更改坐标轴文字颜色\n                        }\n                    },\n                    type: 'category',\n                    data: null,\n                    // ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n                    axisTick: {\n                        alignWithLabel: true\n                    }\n                }\n            ],\n            yAxis: [\n                {\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            color: '#c3dbff',  //更改坐标轴文字颜色\n                        }\n                    },\n                    type: 'value'\n                }\n            ],\n            series: [\n                {\n                    name: '直接访问',\n                    type: 'bar',\n                    barWidth: '60%',\n                    data: null,\n                }\n            ]\n        };\n\n         $(function a() {\n            // myChart.setOption(option); //必须要有\n            $.ajax({\n                //请求方式为get\n                type: \"get\",\n                //json文件位置\n                url: \"./json/echarts1.json\",\n                //返回数据格式为json\n                dataType: \"json\",\n                //请求成功完成后要执行的方法\n                success: function (data) {\n\n                    var m1 = new Array();\n                    var m2 = new Array();\n\n                    for (var i = 0; i < data.length; i++) {\n                        m1.push(data[i].time);\n                        m2.push(data[i].val[0]);\n\n                    }\n                    option.xAxis.data = m1;\n                    option.series[0].data = m2;\n                    myChart.setOption(option, true);//刷新执行\n                }\n            });\n\n        });\n    }\n\n    function ceshis1() {\n\n        var color = [\"#8d7fec\", \"#5085f2\", \"#e75fc3\", \"#f87be2\", \"#f2719a\", \"#fca4bb\", \"#f59a8f\", \"#fdb301\", \"#57e7ec\", \"#cf9ef1\"]\n        option = {\n            /*backgroundColor: \"rgba(255,255,255,1)\",*/\n            color: color,\n            legend: {\n                orient: \"vartical\",\n                x: \"left\",\n                top: \"center\",\n                left: \"53%\",\n                bottom: \"0%\",\n                data: null,\n                itemWidth: 8,\n                itemHeight: 8,\n                textStyle: {\n                    color: '#fff'\n                },\n                /*itemGap: 16,*/\n                /*formatter:function(name){\n                  var oa = option.series[0].data;\n                  var num = oa[0].value + oa[1].value + oa[2].value + oa[3].value+oa[4].value + oa[5].value + oa[6].value + oa[7].value+oa[8].value + oa[9].value ;\n                  for(var i = 0; i < option.series[0].data.length; i++){\n                      if(name==oa[i].name){\n                          return ' '+name + '    |    ' + oa[i].value + '    |    ' + (oa[i].value/num * 100).toFixed(2) + '%';\n                      }\n                  }\n                }*/\n\n                formatter: function (name) {\n                    return '' + name\n                }\n            },\n            series: [{\n                type: 'pie',\n                clockwise: false, //饼图的扇区是否是顺时针排布\n                minAngle: 2, //最小的扇区角度（0 ~ 360）\n                radius: [\"20%\", \"60%\"],\n                center: [\"30%\", \"45%\"],\n                avoidLabelOverlap: false,\n                itemStyle: { //图形样式\n                    normal: {\n                        borderColor: '#ffffff',\n                        borderWidth: 1,\n                    },\n                },\n                label: {\n                    normal: {\n                        show: false,\n                        position: 'center',\n                        formatter: '{text|{b}}\\n{c} ({d}%)',\n                        rich: {\n                            text: {\n                                color: \"#fff\",\n                                fontSize: 14,\n                                align: 'center',\n                                verticalAlign: 'middle',\n                                padding: 8\n                            },\n                            value: {\n                                color: \"#8693F3\",\n                                fontSize: 24,\n                                align: 'center',\n                                verticalAlign: 'middle',\n                            },\n                        }\n                    },\n                    emphasis: {\n                        show: true,\n                        textStyle: {\n                            fontSize: 24,\n                        }\n                    }\n                },\n                data: null\n            }]\n        };\n\n        myChart = echarts.init(document.getElementById(\"chart2\"));\n\n        $(function a() {\n\n            // myChart.setOption(option); //必须要有\n            $.ajax({\n                //请求方式为get\n                type: \"post\",\n                //json文件位置\n                url: \"./json/echarts1.json\",\n                //返回数据格式为json\n                dataType: \"json\",\n                //请求成功完成后要执行的方法\n                success: function (data) {\n                    var m1 = new Array();\n                    var m2 = new Array();\n                    for (var i = 0; i < data.length; i++) {\n                        m1.push(data[i]);\n                        m2.push(data[i].name);\n                    }\n                    option.series[0].data = m1;\n                    option.legend.data = m2;\n                    myChart.setOption(option, true);//刷新执行\n                }\n            });\n        });\n    }\n\n    function ceshis2() {\n        var myChart = echarts.init(document.getElementById('chart3'));\n\n        var colors = ['rgb(46, 199, 201)', 'rgb(90, 177, 239)', 'rgb(255, 185, 128)'];\n\n        option = {\n            color: colors,\n\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'cross'\n                },\n                formatter: function (params) {\n                    // 系列\n                    let html = params[0].name + \"<br>\";\n\n                    for (var i = 0; i < params.length; i++) {\n\n                        // 获取每个系列对应的颜色值\n                        html += '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:' + params[i].color + ';\"></span>';\n\n                        // 通过判断指定系列增加 % 符号\n                        if (option.series[params[i].seriesIndex].type == \"line\") {\n                            html += params[i].seriesName + \": \" + params[i].value + \"%<br>\";\n                        } else {\n                            html += params[i].seriesName + \": \" + params[i].value + \"<br>\";\n                        }\n                    }\n                    return html;\n                }\n            },\n            grid: {\n                right: '20%'\n            },\n            toolbox: {\n                feature: {\n                    dataView: {\n                        show: true,\n                        readOnly: false\n                    },\n                    restore: {\n                        show: true\n                    },\n                    saveAsImage: {\n                        show: true\n                    }\n                }\n            },\n            legend: {\n                textStyle: {\n                    color: '#fff'\n                },\n                data: ['蒸发量', '降水量', '平均温度']\n            },\n            // 缩放组件\n            /*dataZoom: {\n                type: 'slider'\n            },*/\n            xAxis: [{\n                type: 'category',\n                axisTick: {\n                    alignWithLabel: true\n                },\n                axisLabel: {\n                    formatter: '{value} ',\n                    textStyle: {\n                        color: \"#ffffff\" //X轴文字颜色\n                    }\n                },\n                data: null,\n                //['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n            }],\n            yAxis: [{\n                type: 'value',\n                name: '蒸发量',\n                min: 0,\n                max: 350,\n                position: 'right',\n                axisLine: {\n                    lineStyle: {\n                        color: colors[0]\n                    }\n                },\n                axisLabel: {\n                    formatter: '{value} ml'\n                }\n            },\n                {\n                    type: 'value',\n                    name: '降水量',\n                    min: 0,\n                    max: 350,\n                    position: 'right',\n                    offset: 80,\n                    axisLine: {\n                        lineStyle: {\n                            color: colors[1]\n                        }\n                    },\n                    axisLabel: {\n                        formatter: '{value} ml'\n                    }\n                },\n                {\n                    type: 'value',\n                    name: '温度',\n                    min: 0,\n                    max: 325,\n                    position: 'left',\n                    axisLine: {\n                        lineStyle: {\n                            color: colors[2]\n                        }\n                    },\n                    axisLabel: {\n                        formatter: '{value} °C'\n                    }\n                }\n            ],\n            series: [{\n                name: '蒸发量',\n                type: 'bar',\n                data: null,\n                //[2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],\n                itemStyle: {\n                    normal: {\n                        barBorderRadius: 2\n                    }\n                }\n            },\n                {\n                    barGap: '-50%', // 增加偏移量使重叠显示\n                    name: '降水量',\n                    type: 'bar',\n                    yAxisIndex: 1,\n                    data: null,\n                    //[2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],\n                    itemStyle: {\n                        normal: {\n                            barBorderRadius: 2\n                        }\n                    }\n                },\n                {\n                    name: '平均温度',\n                    type: 'line',\n                    yAxisIndex: 2,\n                    data: null,\n                    // [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4, 23.0, 16.5, 12.0, 6.2],\n                }\n            ]\n        };\n\n        $(function a() {\n\n            // myChart.setOption(option); //必须要有\n            $.ajax({\n                //请求方式为get\n                type: \"post\",\n                //json文件位置\n                url: \"./json/echarts3.json\",\n                //返回数据格式为json\n                dataType: \"json\",\n                //请求成功完成后要执行的方法\n                success: function (data) {\n                    var m1 = new Array();\n                    var m2 = new Array();\n                    var m3 = new Array();\n                    var m4 = new Array();\n                    for (var i = 0; i < data.length; i++) {\n\n                        m1.push(data[i].time);\n                        m2.push((data[i].val).split(',')[0]);\n                        m3.push((data[i].val).split(',')[1]);\n                        m4.push((data[i].val).split(',')[2]);\n                    }\n                    option.xAxis.data = m1;\n                    option.series[0].data = m2;\n                    option.series[1].data = m3;\n                    option.series[2].data = m4;\n                    myChart.setOption(option, true);//刷新执行\n                }\n            });\n\n        });\n\n    }\n});"]], "Tag": "算法设计"}
{"Answer": "两个this都是指window.\r\nfunction outer(){\r\nthis.i = 10;\r\n\talert(this === window)\r\nalert(this.i);\r\n(function(){\r\nalert(this.i);\r\n\talert(this === window)\r\n}());\r\n};\r\nouter();\r\n\r\n想要出现undefined,改成new outer();", "Konwledge_Point": "树中的独立集", "Question": ["js闭包中this指向的问题", ["下面是百度今年的一个笔试题：", "\n[code=\"javascript\"]", "\nvar myObject = {", "\nfoo:\"bar\",", "\nfunc: function() {", "\nvar self = this;", "\nconsole.log(\"outer func: this.foo = \" + this.foo);", "\nconsole.log(\"outer func: self.foo = \" + self.foo);", "\n\n", "(function (){", "\n    console.log(\"inner func: this.foo = \" + this.foo);", "\n    console.log(\"inner func: self.foo = \" + self.foo);", "\n }());", "\n}", "\n}", "\nmyObject.func();", "\n[/code]", "\n结果是 bar bar undefined bar", "\n关于第三个undefined我是这样理解的：func是myObject对象的属性方法，所以其内部this指向myObject对象本身。而此属性方法内部的匿名立即执行函数是独立的，其this指向自身的执行上下文，引用不到外部的foo，所以是undefined。但由于作用域链使用self可以通过self引用到外部，所以第四个是bar。", "\n\n", "我是这样理解的，并且我做了个推论：", "\n\n", "[code=\"javascript\"]", "\nfunction outer(){", "\nthis.i = 10;", "\nalert(this.i);", "\n(function(){", "\nalert(this.i);", "\n}());", "\n};", "\nouter();", "\n[/code]", "\n\n", "按道理第二次弹出对话框是undefined才对，可是它却是10！它这里怎么又能通过this引用外部的i了呢？why?", "\n\n", "请大神不吝赐教！"]], "Tag": "算法设计"}
{"Answer": "共同的部分放在服务器上，不同的部分放在各自的数据库中，通过网络连接起来", "Konwledge_Point": "树中的独立集", "Question": ["link环境下制作一款《订餐软件》，请问加盟合作的门店如何保持数据独立，但是软件能连接？", ["link环境下制作一款《订餐软件》，请问加盟合作的门店如何保持数据独立，但是软件能连接？"]], "Tag": "算法设计"}
{"Answer": "https://zhidao.baidu.com/question/431458552680454364.html", "Konwledge_Point": "树中的独立集", "Question": ["数组数据的截取怎么把截取后的数组独立存入变量，原始数组剩下的数据一个变量？", ["数组数据的截取怎么把截取后的数组独立存入变量，原始数组剩下的数据一个变量，两个变量作为返回怎么实现？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;跨进程共享全局变量是可以实现&amp;#xff0c;用python的多进程&amp;#xff0c;加一个一个进程级共享锁就可以了&amp;#xff0c;可以参考这个例子&lt;br /&gt;&lt;a href=\"https://www.cnblogs.com/lsdb/p/10815319.html\" id=\"textarea_1631978645260_1631978930975_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;Python3多进程共享变量实现方法 - 诸子流 - 博客园&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;今天同事反映一个问题让帮忙看一下&amp;#xff1a;多进程共用一个变量&amp;#xff0c;在一个进程中修改后&amp;#xff0c;在另外的进程中并没有产生修改。 一、错误的实现方式 最初以为是没添加global声明导致修改未生效&amp;#xff0c;但实际操作发现global&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://common.cnblogs.com/favicon.svg\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/lsdb/p/10815319.html&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;但是&amp;#xff0c;如果要是独立运行的python文件&amp;#xff0c;这种是无法实现的&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请问Python中设置 跨进程 跨文件 的 全局变量 方法", ["需求是这样的：设置一个全局变量N，N用在多个独立运行的python文件中。在任何一个python文件中都可以修改N的值，同时其他的python文件中也都可以读取到修改后的N的值。请问该用什么方法设置这个全局变量，谢谢！", "\n", "我试过python的单例模式，也只是在同一个进程中有效。一旦在不同文件中运行，就是跨进程了，就失效了。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考这个吧 &lt;a href=\"https://blog.csdn.net/qq_46095164/article/details/121645608?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522165337865616781435479653%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id&amp;#61;165337865616781435479653&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-3-121645608-null-null.142^v10^control,157^v8^control&amp;amp;utm_term&amp;#61;pyinstaller%E6%89%93%E5%8C%85%E6%96%87%E4%BB%B6%E5%A4%B9exe&amp;amp;spm&amp;#61;1018.2226.3001.4449\" id=\"textarea_1653378560214_1653378762932_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_46095164/article/details/121645608?ops_request_misc&amp;#61;%257B%2522request%255Fid%2522%253A%2522165337865616781435479653%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;amp;request_id&amp;#61;165337865616781435479653&amp;amp;biz_id&amp;#61;0&amp;amp;utm_medium&amp;#61;distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-3-121645608-null-null.142^v10^control,157^v8^control&amp;amp;utm_term&amp;#61;pyinstaller%E6%89%93%E5%8C%85%E6%96%87%E4%BB%B6%E5%A4%B9exe&amp;amp;spm&amp;#61;1018.2226.3001.4449&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何将表格和Python代码打包成可独立运行的exe文件", ["-", "- coding=gbk -", "-", "\n", "import pandas as pd", "from pyecharts import options as opts", "from pyecharts.charts import Map", "from pyecharts.charts import Timeline", "\n", "datafile = u'E:\\毕设\\新建文件夹\\PythonApplication1\\全国人口数据.xlsx'", "data = pd.read_excel(datafile)", "def a():", "    name = data['省份'].tolist()[1:]", "    value1 = data['1953年第一次人口普查'].tolist()[1:]", "    value2 = data['1964年第二次人口普查'].tolist()[1:]", "    value3 = data['1982年第三次人口普查'].tolist()[1:]", "    value4 = data['1990年第四次人口普查'].tolist()[1:]", "    value5 = data['2000年第五次人口普查'].tolist()[1:]", "    value6 = data['2010年第六次人口普查'].tolist()[1:]", "    value7 = data['2020年第七次人口普查'].tolist()[1:]", "    provinces = [i.replace(\"\\u3000\",\"\") for i in name]", "    print(provinces)", "\n", "t = Timeline()\nc1 = (\n    Map()\n        .", "add", "(", "\"\"", ", [list(z) ", "for", " z ", "in", " zip(provinces, value1)], ", "\"china\"", ")\n        .set_global_opts(\n        ", "title_opts", "=opts.TitleOpts(title=\"第一次人口普查不同省份总人口\",subtitle=\"数据来自国家统计网\"),\n        ", "visualmap_opts", "=opts.VisualMapOpts(max_=130000000, ", "split_number", "=10, ", "is_piecewise", "=", "True", "),\n        ", "toolbox_opts", "=opts.ToolboxOpts(is_show=True,\n                                      ", "pos_top", "=", "\"top\"", ",\n                                      ", "pos_left", "=", "\"right\"", ",\n                                      feature={", "\"saveAsimage\"", ":{} ,\n                                          ", "\"dataZoom\"", ":{", "\"yAxisIndex\"", ":", "\"none\"", "},\n                                          ", "\"restore\"", ":{},\n                                          ", "\"magicType\"", ":{", "\"show\"", ":True, ", "\"type\"", ":[", "\"line\"", ",", "\"bar\"", "]},\n                                          ", "\"dataView\"", ":[]})\n    )\n)\nt.", "add", "(c1, ", "\"第一次人口普查不同省份总人口\"", ")\n\nc2 = (\n    Map()\n        .", "add", "(", "\"\"", ", [list(z) ", "for", " z ", "in", " zip(provinces, value2)], ", "\"china\"", ")\n        .set_global_opts(\n        ", "title_opts", "=opts.TitleOpts(title=\"第二次人口普查不同省份总人口\",subtitle=\"数据来自国家统计网\"),\n        ", "visualmap_opts", "=opts.VisualMapOpts(max_=130000000, ", "split_number", "=10, ", "is_piecewise", "=", "True", "),\n        ", "toolbox_opts", "=opts.ToolboxOpts(is_show=True,\n                                      ", "pos_top", "=", "\"top\"", ",\n                                      ", "pos_left", "=", "\"right\"", ",\n                                      feature={", "\"saveAsimage\"", ":{} ,\n                                          ", "\"dataZoom\"", ":{", "\"yAxisIndex\"", ":", "\"none\"", "},\n                                          ", "\"restore\"", ":{},\n                                          ", "\"magicType\"", ":{", "\"show\"", ":True, ", "\"type\"", ":[", "\"line\"", ",", "\"bar\"", "]},\n                                          ", "\"dataView\"", ":[]})\n    )\n)\nt.", "add", "(c2, ", "\"第二次人口普查不同省份总人口\"", ")\n\nc3 = (\n    Map()\n        .", "add", "(", "\"\"", ", [list(z) ", "for", " z ", "in", " zip(provinces, value3)], ", "\"china\"", ")\n        .set_global_opts(\n        ", "title_opts", "=opts.TitleOpts(title=\"第三次人口普查不同省份总人口\",subtitle=\"数据来自国家统计网\"),\n        ", "visualmap_opts", "=opts.VisualMapOpts(max_=130000000, ", "split_number", "=10, ", "is_piecewise", "=", "True", "),\n        ", "toolbox_opts", "=opts.ToolboxOpts(is_show=True,\n                                      ", "pos_top", "=", "\"top\"", ",\n                                      ", "pos_left", "=", "\"right\"", ",\n                                      feature={", "\"saveAsimage\"", ":{} ,\n                                          ", "\"dataZoom\"", ":{", "\"yAxisIndex\"", ":", "\"none\"", "},\n                                          ", "\"restore\"", ":{},\n                                          ", "\"magicType\"", ":{", "\"show\"", ":True, ", "\"type\"", ":[", "\"line\"", ",", "\"bar\"", "]},\n                                          ", "\"dataView\"", ":[]})\n    )\n)\nt.", "add", "(c3, ", "\"第三次人口普查不同省份总人口\"", ")\n\nc4 = (\n    Map()\n        .", "add", "(", "\"\"", ", [list(z) ", "for", " z ", "in", " zip(provinces, value4)], ", "\"china\"", ")\n        .set_global_opts(\n        ", "title_opts", "=opts.TitleOpts(title=\"第四次人口普查不同省份总人口\",subtitle=\"数据来自国家统计网\"),\n        ", "visualmap_opts", "=opts.VisualMapOpts(max_=130000000, ", "split_number", "=10, ", "is_piecewise", "=", "True", "),\n        ", "toolbox_opts", "=opts.ToolboxOpts(is_show=True,\n                                      ", "pos_top", "=", "\"top\"", ",\n                                      ", "pos_left", "=", "\"right\"", ",\n                                      feature={", "\"saveAsimage\"", ":{} ,\n                                          ", "\"dataZoom\"", ":{", "\"yAxisIndex\"", ":", "\"none\"", "},\n                                          ", "\"restore\"", ":{},\n                                          ", "\"magicType\"", ":{", "\"show\"", ":True, ", "\"type\"", ":[", "\"line\"", ",", "\"bar\"", "]},\n                                          ", "\"dataView\"", ":[]})\n    )\n)\nt.", "add", "(c4, ", "\"第四次人口普查不同省份总人口\"", ")\n\nc5 = (\n    Map()\n        .", "add", "(", "\"\"", ", [list(z) ", "for", " z ", "in", " zip(provinces, value5)], ", "\"china\"", ")\n        .set_global_opts(\n        ", "title_opts", "=opts.TitleOpts(title=\"第五次人口普查不同省份总人口\",subtitle=\"数据来自国家统计网\"),\n        ", "visualmap_opts", "=opts.VisualMapOpts(max_=130000000, ", "split_number", "=10, ", "is_piecewise", "=", "True", "),\n        ", "toolbox_opts", "=opts.ToolboxOpts(is_show=True,\n                                      ", "pos_top", "=", "\"top\"", ",\n                                      ", "pos_left", "=", "\"right\"", ",\n                                      feature={", "\"saveAsimage\"", ":{} ,\n                                          ", "\"dataZoom\"", ":{", "\"yAxisIndex\"", ":", "\"none\"", "},\n                                          ", "\"", "\n", "\n", "需要的数据在Excel表格中，但是不会打包，求解救，图中代码是部分"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/euxnijuoh/article/details/54649590?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;8个独立按键控制LED&lt;/font&gt;&lt;/a&gt; 中也许有你想要的答案&amp;#xff0c;请看下吧&lt;/li&gt;&lt;li&gt;除此之外, 这篇博客: &lt;a href=\"https://blog.csdn.net/m0_50679156/article/details/120045480?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;51单片机 之 8*8 LED点阵&amp;#xff08;解决程序烧录没反应、显示拖影问题、取字模软件&amp;#xff09;&lt;/font&gt;&lt;/a&gt;中的 &lt;strong&gt;三、显示复杂的数字&lt;/strong&gt; 部分也许能够解决你的问题, 你可以仔细阅读以下内容或跳转源博客中阅读: &lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;pre&gt;&lt;code class=\"prism language-c\"&gt;&lt;span class=\"token comment\"&gt;//显示一个零&lt;/span&gt;\n&lt;span class=\"token macro property\"&gt;&lt;span class=\"token directive-hash\"&gt;#&lt;/span&gt;&lt;span class=\"token directive keyword\"&gt;include&lt;/span&gt;&lt;span class=\"token string\"&gt;&amp;lt;reg51.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"token macro property\"&gt;&lt;span class=\"token directive-hash\"&gt;#&lt;/span&gt;&lt;span class=\"token directive keyword\"&gt;include&lt;/span&gt;&lt;span class=\"token string\"&gt;&amp;lt;intrins.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"token keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"token keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"token keyword\"&gt;char&lt;/span&gt; u8&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n&lt;span class=\"token keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"token keyword\"&gt;unsigned&lt;/span&gt; &lt;span class=\"token keyword\"&gt;int&lt;/span&gt; u16&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\nsbit SRCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; P3&lt;span class=\"token operator\"&gt;^&lt;/span&gt;&lt;span class=\"token number\"&gt;6&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt; \nsbit RCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; P3&lt;span class=\"token operator\"&gt;^&lt;/span&gt;&lt;span class=\"token number\"&gt;5&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;  \nsbit SER &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; P3&lt;span class=\"token operator\"&gt;^&lt;/span&gt;&lt;span class=\"token number\"&gt;4&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\nu16 led_x&lt;span class=\"token punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;&lt;span class=\"token number\"&gt;0x7f&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0xbf&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0xdf&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0xef&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0xf7&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0xfb&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0xfd&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0xfe&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\nu8 led_y&lt;span class=\"token punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;&lt;span class=\"token number\"&gt;0x00&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0x00&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0x3e&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0x41&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0x41&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0x41&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0x3e&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"token number\"&gt;0x00&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\n&lt;span class=\"token keyword\"&gt;void&lt;/span&gt; &lt;span class=\"token function\"&gt;delay&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;u16 i&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n\t&lt;span class=\"token keyword\"&gt;while&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;i&lt;span class=\"token operator\"&gt;--&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"token keyword\"&gt;void&lt;/span&gt; &lt;span class=\"token function\"&gt;hc595sendbyte&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;u8 a&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt; \n&lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\t \n\tu16 i &lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\tSRCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;0&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\tRCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;0&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\t&lt;span class=\"token keyword\"&gt;for&lt;/span&gt; &lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;0&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt; i &lt;span class=\"token operator\"&gt;&amp;lt;&lt;/span&gt; &lt;span class=\"token number\"&gt;8&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt; i&lt;span class=\"token operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n\t\tSER &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; a &lt;span class=\"token operator\"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"token number\"&gt;7&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;  \n\t\ta &lt;span class=\"token operator\"&gt;&amp;lt;&amp;lt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;1&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;    \n\t\tSRCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;1&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\t\t&lt;span class=\"token function\"&gt;_nop_&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\t\t&lt;span class=\"token function\"&gt;_nop_&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\t\tSRCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;0&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\t&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;\n\tRCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;1&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;  \n\t&lt;span class=\"token function\"&gt;_nop_&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\t&lt;span class=\"token function\"&gt;_nop_&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\tRCLK &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;0&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"token keyword\"&gt;void&lt;/span&gt; &lt;span class=\"token function\"&gt;main&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt; \n&lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\tu16 i&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;\n\t&lt;span class=\"token keyword\"&gt;while&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token number\"&gt;1&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n\t&lt;span class=\"token keyword\"&gt;for&lt;/span&gt; &lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"token number\"&gt;0&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt; i &lt;span class=\"token operator\"&gt;&amp;lt;&lt;/span&gt; &lt;span class=\"token number\"&gt;8&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt; i&lt;span class=\"token operator\"&gt;&amp;#43;&amp;#43;&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n\t\tP0&lt;span class=\"token operator\"&gt;&amp;#61;&lt;/span&gt;led_x&lt;span class=\"token punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"token punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt; &lt;span class=\"token comment\"&gt;//(1)&lt;/span&gt;\n\t\t&lt;span class=\"token function\"&gt;hc595sendbyte&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;led_y&lt;span class=\"token punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"token punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt; &lt;span class=\"token comment\"&gt;//(2)&lt;/span&gt;\n\t\t&lt;span class=\"token function\"&gt;delay&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token number\"&gt;100&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;  &lt;span class=\"token comment\"&gt;//(3)&lt;/span&gt;\n\t\t&lt;span class=\"token function\"&gt;hc595sendbyte&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"token number\"&gt;0x00&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"token punctuation\"&gt;;&lt;/span&gt;  &lt;span class=\"token comment\"&gt;// (4)&lt;/span&gt;\n\t&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;\n\t&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;\n&lt;span class=\"token punctuation\"&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;注释&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;P0控制阴极&amp;#xff0c;我们从左到右进行扫描&amp;#xff0c;依次给每一列阴极低电平。&lt;/li&gt;&lt;li&gt;当列阴极是低电平时&amp;#xff0c;我们就响应给以列提供预设号的状态。&lt;/li&gt;&lt;li&gt;把延时函数加大&amp;#xff0c;你将看到led灯从左边第一列依次向右亮起。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;这就是消除拖影的操作。&lt;/strong&gt; 很简单&amp;#xff0c;不多说了。&lt;br /&gt;\n&lt;img src=\"https://img-blog.csdnimg.cn/1bd0000e8a604a2499c739274051158c.jpg?x-oss-process&amp;#61;image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA77yN5Yqb55-p77yN,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\" /&gt;&lt;/li&gt;&lt;/ol&gt;\n&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["51单片机利用独立按键控制8*8LED矩阵显示图案", ["图案能自己运行但不能利用按键控制，如何利用按键控制LED显示特定的图案"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你确定是判断来路&amp;#xff08;referer&amp;#xff09;而不是主机头&amp;#xff08;host&amp;#xff09;么&amp;#xff1f;按理说你多个域名最好用主机头区分&amp;#xff0c;因为来路可能是空的。&lt;br /&gt;不管怎么说&amp;#xff0c;简单写几句&amp;#xff0c;你参考下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;from flask &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; Flask, &lt;span class=\"hljs-type\"&gt;request&lt;/span&gt;\n\n&lt;span class=\"hljs-variable\"&gt;app&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; Flask(__name__)\n\n&lt;span class=\"hljs-meta\"&gt;&amp;#64;app&lt;/span&gt;.route(&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;)\ndef &lt;span class=\"hljs-title function_\"&gt;index&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;:\n    host &amp;#61; request.&lt;span class=\"hljs-type\"&gt;host&lt;/span&gt;\n    &lt;span class=\"hljs-variable\"&gt;referer&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; request.referrer\n\n    &lt;span class=\"hljs-type\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;host&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;domain1.com&amp;#34;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;You are visiting Domain 1&amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;elif&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;host&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;domain2.com&amp;#34;&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;You are visiting Domain 2&amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;You are visiting an unknown domain&amp;#34;&lt;/span&gt;\n\n&lt;span class=\"hljs-type\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;__name__&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    app.run(debug&amp;#61;True)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python flask 绑定多个独立域名并自动判断域名来路", ["python flask 绑定多个独立域名并自动判断域名来路显示页面信息"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;前期学习阶段确实是这样&amp;#xff0c;即使是工作之后也会有这种情况&amp;#xff0c;原因是工作经验少&amp;#xff0c;见识过很多业务场景之后会熟能生巧&amp;#xff0c;所以也不用沮丧&amp;#xff0c;做好当下&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["JS要学多久啊，独立写代码能力差怎么办", ["最近学js遇到个问题，在学习的时候看教学视频看着懂了，实际上在自己独自写代码就没有头绪了该怎么办"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;To change the message you can add the following to your &lt;code&gt;FormRequest&lt;/code&gt; class.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;protected function failedAuthorization()\n{\n    throw new AuthorizationException('Your new message goes here.');\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Hope this helps!&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["自定义Laravel FormRequest自动调整方法验证", ["\n\n", "Laravel allow us to authorize, or not, a FormRequest to be processed via the ", "authorize method", ". If the request isn't authorized, it will through a ", "\\Illuminate\\Auth\\Access\\AuthorizationException", " exception, with a message:", "\n\n", "\n  ", "This action is unauthorized.", "\n", "\n\n", "Is there somehow to customize this message?", "\n\n", "See that I want to customize the message itself. ", "Customizing the error messages of attributes", " I know it is possible!", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Since the &lt;code&gt;net/http&lt;/code&gt; package runs each request you do not need to worry about blocking the request goroutine. The real question you should ask myself is \"Do I need to do this before I return a response to the client, or can it be deferred until later\". Generally if I need to fetch from a database to serve a response that will block the request goroutine, and that is ok. If I can return a response now and put a message on a queue to do stuff later, that can be ok too.&lt;/p&gt;\n\n&lt;p&gt;Since the request goroutine has little cost to exist, and it is isolated from other requests, you really don't need to worry about it that much. Do what makes sense for the client.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["是否应该在http请求goroutine之外处理所有独立任务？", ["\n\n", "Since golang handles incoming requests in separate goroutines, it's unclear to me which types of tasks should be deferred for processing by a message queue e.g. NSQ consumers and which should be handled within the http request goroutine.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;java只能实现商场的业务功能,,但是界面需要前端包装,数据需要读取数据库 就比如 一个人, java 等于  这个人的身子 以及体内的各个器官,那么 这个人 是光溜溜的走出去吗, 肯定要穿衣服,那就要前端vue,html这些进行包装, 那血液呢,没有血液流动,人能活的下去吗, 那血液就是数据库(mysql, oracle等),当血液在体内流窜时, 才是一个真正的人 .所以说 做一个项目需要一下几点&lt;/p&gt;\n&lt;p&gt;1:  前端技术  html css  js jq vue这些 衣服&lt;br /&gt;2:  java  ssm  这些内脏&lt;br /&gt;3:  数据库   mysql oracle  这些血液&lt;br /&gt;话糟理不糙 ,希望我的大白话 你可以理解,&lt;br /&gt;如果有用,请采纳&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["学习阶段，想独立完成一项完整的项目。", ["起步阶段，感觉无从下手，目前学校里学到的知识算是比较熟练的只有java，我想问一下，可以只考java一门语言开发出一款商城app吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The &lt;code&gt;$size&lt;/code&gt; parameter of the &lt;code&gt;array_chunk&lt;/code&gt; function is actually the number of items in each chunk, &lt;em&gt;not&lt;/em&gt; the number of chunks. In order to get three, you should first calculate the number of items in each chunk by dividing the size of the array by 3 and then using that count, rounded up, in the &lt;code&gt;array_chunk&lt;/code&gt; function. And when you iterate over the array, you need a nested loop to output each list item of each column.&lt;/p&gt;\n\n&lt;p&gt;Like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$ar_list = array(\"&amp;lt;li&amp;gt;Item 1&amp;lt;/li&amp;gt;\",\"&amp;lt;li&amp;gt;Item 2&amp;lt;/li&amp;gt;\",\"&amp;lt;li&amp;gt;Item 3&amp;lt;/li&amp;gt;\",\"&amp;lt;li&amp;gt;Item 4&amp;lt;/li&amp;gt;\",\"&amp;lt;li&amp;gt;Item 5&amp;lt;/li&amp;gt;\");\n$rows = ceil(count($ar_list) / 3);\n$lists  = array_chunk($ar_list, $rows);\n\nforeach ( $lists as $column) {\n    echo '&amp;lt;ul&amp;gt;';\n    foreach ($column as $item) {\n        echo $item;\n    }\n    echo '&amp;lt;/ul&amp;gt;';\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["PHP将数组拆分为3个独立的UL和列", ["\n\n", "I am having trouble working out the logic for what I need to achieve ", "\n\n", "On the web page I have a dynamically generated array from a set of results. The array count can be any number. For example on one page there could be 11 items whereas on another 211.", "\n\n", "What I need is to split this into 3 columns and 3 UL's. ", "\n\n", "Lets say the array holds 23 items, The desired output would be: ", "\n\n", "    <div class=\"column\">\n        <ul>\n            <li>Item 1</li>\n            <li>Item 2</li>\n            <li>Item 3</li>\n            <li>Item 4</li>\n            <li>Item 5</li>\n            <li>Item 6</li>\n            <li>Item 7</li>\n            <li>Item 8</li>\n        </ul>\n    </div>\n    <div class=\"column\">\n        <ul>\n            <li>Item 9</li>\n            <li>Item 10</li>\n            <li>Item 11</li>\n            <li>Item 12</li>\n            <li>Item 13</li>\n            <li>Item 14</li>\n            <li>Item 15</li>\n            <li>Item 16</li>\n        </ul>\n    </div>\n    <div class=\"column\">\n        <ul>\n            <li>Item 17</li>\n            <li>Item 18</li>\n            <li>Item 19</li>\n            <li>Item 20</li>\n            <li>Item 21</li>\n            <li>Item 22</li>\n            <li>Item 23</li>\n        </ul>\n    </div>\n", "\n\n", "Where the items are in order, and they are split as equally as possible. If there is an odd number, that is fine as the last column will be less as shown above.", "\n\n", "I have tried using the array_chunk()", "\n\n", "$ar_list = array(\"<li>Item 1</li>\",\"<li>Item 2</li>\",\"<li>Item 3</li>\",\"<li>Item 4</li>\",\"<li>Item 5</li>\");\n$lists = array_chunk($ar_list, 3);\n\n\n\nforeach ($lists as $list) {\n  echo '<ul>';\n  echo $list;\n  echo '</ul>';\n}\n", "\n\n", "However, this returns: ", "\n\n", "\n  ", "Array", "\n  \n  ", "Array", "\n  \n  ", "Array", "\n  \n  ", "Array", "\n  \n  ", "Array", "\n", "\n\n", "Can someone please help me get the contents of: $ar_list to output like the desired effect?", "\n\n", "Thank you in advance", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It looks like you're trying to use a button to let the user download some sort of file. For this situation AJAX won't work as it's not capable of saving files to a users computer. &lt;/p&gt;\n\n&lt;p&gt;What you want to do is to create just the anchor tag.  The function linkButton is designed for is to be a button that will submit the current form. If you're using bootstrap the below will also make it look like a button.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;CHtml::link('Download', array('controller/action', 'myparam' =&amp;gt; 'paramvalue'), array('class', 'btn btn-primary'));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Make sure you set the correct headers for downloading the file. &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Yii独立linkBut​​ton不在表单标签内工作", ["\n\n", "I am using Yii and I have a form wrapped in tabs. In one of these tabs I need to put a link (call a ", "controller/action", " with parameters) independent from the form content.\nI've tried to use ", "CHtml::linkButton", " but it doesn't work.", "\n\n", "The code scheme of the form is the following: ", "\n\n", "<?php $form=$this->beginWidget('CActiveForm', array(\n    'id'=>'project-form',\n    'enableAjaxValidation'=>true,\n)); ?>\n\n//...input elements\n\n<?php echo CHtml::linkButton('Download',\n    array(\n        'submit'=>$this->createUrl('controller/action'),\n        'params'=>array(\n                'results'=>CJSON::encode(array('foo'=>'bar'))\n        ))\n); ?>\n\n//...other input elements\n\n<?php $this->endWidget(); ?>\n", "\n\n", "When I click on the link nothing happens. If I put the ", "linkButton", " code outside the form it works properly.", "\n\n", "Is there a workaround for this?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem is that the plugin creates table id's &lt;code&gt;member_currentseason_vals_inner&lt;/code&gt;, &lt;code&gt;member_pastseason_vals_inner&lt;/code&gt; etc. Rendering 6 of each means 6 duplicate id's, whereas id's should be unique! The ajax puts its result in the first table it finds with that id, so all results will go into the 'NFL Football' tables.&lt;/p&gt;\n\n&lt;p&gt;The randomness you see is because for each sports the memberresults are fetched seperately via ajax, which is asynchronous, ie the content is rendered as it arrives in the browser. Any of the results may arrive last, and that's what you'll see in the NFL tables.&lt;/p&gt;\n\n&lt;p&gt;This could be fixed with a wrapper that serves as a context for js/jquery to find the correct table, but it's better to fix the unique id's. As I don't think you want each sport to be displayed more than once I propose appending the php &lt;code&gt;$sport&lt;/code&gt; number to the table id's and adjusting the js to use that. The js memberresults() already receives this number as its 2nd parameter.&lt;/p&gt;\n\n&lt;p&gt;In the php memberresults function, change the following line, 4 times:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;table id='member_&amp;lt;?=$data_type;?&amp;gt;season_vals_inner' class='hdr_3 inner_result'&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;table id='member_&amp;lt;?=$data_type;?&amp;gt;season_vals_inner&amp;lt;?=$sport;?&amp;gt;' class='hdr_3 inner_result'&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In the javascript memberresults change the following, 2 times:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;jQuery(\"#member_\" + seasontype + \"season_vals_inner\").html ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;jQuery(\"#member_\" + seasontype + \"season_vals_inner\" + sport).html ...\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["短代码冲突。 如何让每个组独立加载？", ["\n\n", "Maybe I'm not asking the right question but I must be missing something simple. My short codes display fine if I place one sport grouping, lets say 'NFL', on a page but as soon as I add a second sport group, lets say 'baseball', the generated tables that display the 3 types of data ($data_type==\"current\", $data_type==\"past\", $data_type==\"detailed\") in the php file memberresults function  I provided below, for that sport group do not display. Furthermore the data that does generate for the first group of short code, in this case 'NFL', is randomly selected from any one of the groups/sports.", "\n\n", "How can I get all of these short codes to display and load the 3 data types per sport all on one page without them conflicting with one another? To see what is happening on the page itself you can go here after you login: https://wsplays-members.com/short-code-test/ Login with this temp Username \"test\" Password \"password\". For reference I will display my code below. Thank you in advance.", "\n\n", "Short code entered in wordpress page", "\n\n", "[get_biddata type='current' sport='NFL Football']\n[get_biddata type='past' sport='NFL Football']\n[get_biddata type='detailed' sport='NFL Football']\n\n[get_biddata type='current' sport='NCAA Football']\n[get_biddata type='past' sport='NCAA Football']\n[get_biddata type='detailed' sport='NCAA Football']\n\n[get_biddata type='current' sport='CFL Football']\n[get_biddata type='past' sport='CFL Football']\n[get_biddata type='detailed' sport='CFL Football']\n\n[get_biddata type='current' sport='NBA Basketball']\n[get_biddata type='past' sport='NBA Basketball']\n[get_biddata type='detailed' sport='NBA Basketball']\n\n[get_biddata type='current' sport='NCAA Basketball']\n[get_biddata type='past' sport='NCAA Basketball']\n[get_biddata type='detailed' sport='NCAA Basketball']\n\n[get_biddata type='current' sport='MLB Baseball']\n[get_biddata type='past' sport='MLB Baseball']\n[get_biddata type='detailed' sport='MLB Baseball']\n", "\n\n", "php file memberresults function", "\n\n", "<?php\nfunction memberresults($sport_val,$data_type){\nglobal $wpdb;\n  $bidsys_options = get_option('bidsys_options');\n   for($i=1;$i<11;$i++){\n        if($bidsys_options->sportsstatus[$i]!=\"Disabled\"){\n             if($sport_val==$bidsys_options->sportsname[$i])\n             $sport = $i;\n   }}\n  $user = get_current_user_id();\n  $currentsportaccess =   get_user_meta($user,\"sport_\".$sport ,true);\n    if($currentsportaccess==\"No\"){\n        ?>\n        <div class=\"pmpro_content_message\">Your access plan is valid but does not give you access to view this section.<br /> You may <a href=\"<?=home_url();?>/purchase/\">purchase another access plan here</a>.</div>\n        <?php\n\n    } else {\n\n\n    if($data_type==\"current\"){\n      if (pmpro_hasMembershipLevel() ) {\n   ?>\n   <script type='text/javascript'>\njQuery(document).ready(function(){\n    memberresults(\"current\",\"<?php echo $sport;?>\",\"\");\n});\n</script>\n<h1 class=\"post-title\"><?php echo $sport_val; ?> Picks</h1>\n<h2 class=\"post-title\">Current Season</h2>\n<table class='inner_result'>\n<td colspan='5' >\n<table id='member_<?=$data_type;?>season_vals_inner' class='hdr_3 inner_result'>\n</table>\n</td>\n</table>\n   <?php\n        } else {\n\n            ?>\n        <h1 class=\"post-title\"><?php echo $sport_val; ?> Picks</h1>\n        <h2 class=\"post-title\">Current Season Record</h2>\n        <div class=\"pmpro_content_message\">You must be logged in to view this section.  Please <a href=\"<?=home_url();?>/login/\">log in</a> or <a href=\"<?=home_url();?>/register/\">register here</a>.</div>\n        <?php\n\n        }\n    } else  if($data_type==\"past\"){\n     if (pmpro_hasMembershipLevel() ) {\n\n    $result = \"SELECT * FROM \".$wpdb->prefix.\"bidsys_sport_seasons WHERE sport=  '\".$sport.\"' AND current_season = 'NO'   ORDER BY start_date DESC\";\n     $newmeta = $wpdb->get_results($result);\n    ?>\n<script type='text/javascript'>\njQuery(document).ready(function(){\n    memberresults(\"past\",\"<?php echo $sport;?>\",\"season_<?php echo $newmeta[0]->id;?>\");\n});\n</script>\n<h1 class=\"post-title\"><?php echo $sport_val; ?> Picks</h1>\n<h2 class=\"post-title\">Previous Seasons</h2>\n    <form action='' method='post' class=\"f_p_filter_frm outside_table\">\n    <select  name='f_p_filter' class=\"f_p_filter\" onchange='memberresults(\"past\",\"<?php echo $sport; ?>\",this.value)' >\n    <?php $i = 0; foreach($newmeta as $seasons ){\n        if($i == 0){  $sel =  'selected=\"\"'; } else { $sel = \"\"; }\n        ?>\n    <option value='season_<?php echo $seasons->id;?>' <?php echo $sel;?>><?php echo $seasons->season_name;?></option>\n    <?php $i++; } ?>\n    </select>\n    </form>\n\n<table class='inner_result'>\n<td colspan='5' >\n<table id='member_<?=$data_type;?>season_vals_inner' class='hdr_3'>\n</table>\n</td>\n</table>\n   <?php\n        } else {\n\n            ?>\n        <h1 class=\"post-title\"><?php echo $sport_val; ?> Picks</h1>\n        <h2 class=\"post-title\">Previous Seasons Records</h2>\n        <div class=\"pmpro_content_message\">You must be logged in to view this section.  Please <a href=\"<?=home_url();?>/login/\">log in</a> or <a href=\"<?=home_url();?>/register/\">register here</a>.</div>\n        <?php\n\n        }\n\n    } else  if($data_type==\"detailed\"){\n     if (pmpro_hasMembershipLevel() ) {\n   ?>\n   <script type='text/javascript'>\njQuery(document).ready(function(){\n    memberresults(\"detailed\",\"<?php echo $sport;?>\",\"yesterday\");\n});\n</script>\n<style>\n.imgwin {\n    background: url('/wp-content/plugins/bid-sys/customgif/winningPick.gif');\n     height: 16px; width: 16px; margin:8px;\n}\n.imgloss {\n    background: url('/wp-content/plugins/bid-sys/customgif/losingPick.gif');\n     height: 16px;  width: 16px;  margin:8px;\n}\n.imgpush {\n    background: url('/wp-content/plugins/bid-sys/customgif/pushedPick.gif');\n     height: 16px;  width: 16px; margin:8px;\n}\n\n</style>\n<h1 class=\"post-title\"><?php echo $sport_val; ?> Picks</h1>\n<h2 class=\"post-title\">Detailed History</h2>\n<form action='' method='post' class=\"f_p_filter_frm outside_table\">\n    <select  name='f_p_filter' class=\"f_p_filter\" onchange='memberresults(\"detailed\",\"<?php echo $sport; ?>\",this.value)' >\n    <?php\n    $result = \"SELECT * FROM \".$wpdb->prefix.\"bidsys_sport_seasons WHERE sport=  '\".$sport.\"' AND current_season = 'NO'   ORDER BY start_date DESC\";\n     $newmeta = $wpdb->get_results($result);\n\n    foreach($newmeta as $seasons ){\n        ?>\n    <option value='season_<?php echo $seasons->id;?>' ><?php echo $seasons->season_name;?></option>\n    <?php  }\n    ?>\n    <option value='playoftheday30' >Play of the Day (L30 Days)</option>\n    <option value='playoftheday365' >Play of the Day (L365 Days)</option>\n    <option value='latebreakingplay30' >VIP Late Info Play (L30 Days)</option>\n    <option value='latebreakingplay365' >VIP Late Info Play (L365 Days)</option>\n    <option value='vipplays30' >VIP Plays (L30 Days)</option>\n    <option value='vipplays365' >VIP Plays (L365 Days)</option>\n    <option value='yesterday' selected=\"\">Yesterday</option>\n    <!--<option value='thisweek' >This Week</option>-->\n    <option value='past7days' >Past 7 Days</option>\n    <!--<option value='thismonth' >This Month</option>-->\n    <option value='past30days' >Past 30 Days</option>\n    <!-- <option value='thisyear' >This Year</option> -->\n    <option value='current' >Current Season</option>\n    <option value='past365days' >Past 365 Days</option>\n    </select>\n    </form>\n<div style=\"width: 56px; float: right; background: #F8F8F8;\"><img src=\"/wp-content/plugins/bid-sys/customgif/pushedPick.gif\" />  Push</div><div style=\" margin: -2px 3% 0; padding-bottom: 2px; float: right;\">|</div>\n<div style=\"width: 56px; float: right; background: #F8F8F8;\"><img src=\"/wp-content/plugins/bid-sys/customgif/losingPick.gif\" />  Loss</div><div style=\" margin: -2px 3% 0; padding-bottom: 2px; float: right;\">|</div>\n<div style=\"width: 48px; float: right; background: #F8F8F8;\"><img src=\"/wp-content/plugins/bid-sys/customgif/winningPick.gif\" />  Win</div>\n<table class='inner_result detailed_history'> \n<tr class=\"hdr_2\">\n<td>Game Date</td>\n<td colspan=\"2\">Game/Pick Details</td>\n<td>Result</td>\n<td>Unit Change</td>\n</tr>\n<table id='member_<?=$data_type;?>season_vals_inner' class='hdr_3'>\n</table>\n</table>\n   <?php\n        } else {\n\n            ?>\n        <h1 class=\"post-title\"><?php echo $sport_val; ?> Picks</h1>\n        <h2 class=\"post-title\">Detailed History</h2>\n        <div class=\"pmpro_content_message\">You must be logged in to view this section.  Please <a href=\"<?=home_url();?>/login/\">log in</a> or <a href=\"<?=home_url();?>/register/\">register here</a>.</div>\n        <?php\n\n        }\n\n    } else  if($data_type==\"pending\"){\n      if (pmpro_hasMembershipLevel() ) {\n   ?>\n<script type='text/javascript'>\njQuery(document).ready(function(){\n    memberresults(\"pending\",\"<?php echo $sport;?>\",\"\");\n});\n</script>\n<h1 class=\"post-title\">Today's <?php echo $sport_val; ?> Picks</h1>\n<table id='member_<?=$data_type;?>season_vals_inner' class='hdr_3'>\n</table>\n   <?php \n      }\n        } else  if($data_type==\"unauthorized\"){\n            if (pmpro_hasMembershipLevel() ) {\n        ?>\n<h1 class=\"post-title\">Today's <?php echo $sport_val; ?> Picks</h1>\n<div class=\"members-only\">\nPicks posted here are for <strong>PAID MEMBERS ONLY</strong>.<br> Your current membership level is not authorized to view this section.</strong><br> <a href=\"<?=home_url();?>/subscription-options/\">Click Here</a> to upgrade your membership and view today's <?php echo $sport_val; ?> picks.</p></div>\n        <?php\n        }\n      }\n\n        else if($data_type==\"defaultMessage\"){\n            if (pmpro_hasMembershipLevel() ) {\n        ?>\n        <!--INTENTIONALLY LEFT BLANK SO WHEN A MEMBER LOGS IN THE MESSAGE BELOW DISAPPEARS-->\n        <?php\n\n        } else {\n\n        ?>\n<div class=\"loggedout-members-only\">\n<p>Picks posted here are for <strong>PAID MEMBERS ONLY</strong>.<br>\n<a href=\"http://wsplays-members.com/login/\">Log In</a> &nbsp;-<strong>or</strong>-&nbsp; <a href=\"http://wsplays-members.com/subscription-options/\">View/Purchase Subscriptions Here</a>.</p>\n<p><a href=\"http://wsplays-members.com/membership-account/membership-checkout/?level=23\">Click Here</a> to register for <strong>FREE PICKS</strong> and gain <strong>FREE ACCESS</strong><br> to our Pick History &amp; Detailed Records </p>\n</div>\n        <?php\n        }\n      }\n   }\n}\n?>\n", "\n\n", "php file shortcode", "\n\n", "include('ajax_member_support.php');\nfunction ajax_member_support( $atts ) {\n    extract( shortcode_atts( array(\n        'sport' => '',\n        'type' => '',\n    ), $atts ) );\n\n     $sport_val = $sport;\n     $data_type = $type;\n\nob_start();\nmemberresults($sport_val,$data_type);\n$output_string=ob_get_contents();;\nob_end_clean();\n\nreturn $output_string;\n\n}\nadd_shortcode('get_biddata', 'ajax_member_support');\n", "\n\n", "Javascript file", "\n\n", "var memberresults =\n        function memberresults(seasontype, sport, seasonrange) {\n            \"use strict\";\n            var ajaxl = '<img src=\"/wp-content/plugins/bid-sys/customgif/ajax-loader.gif\" alt=\"\" />',\n                dataURL = \"seasontype=\" + seasontype + \"&sport=\" + sport + \"&seasonrange=\" + seasonrange;\n            jQuery(\"#member_\" + seasontype + \"season_vals_inner\").html(ajaxl);\n            jQuery.ajax({\n                type: \"POST\",\n                url: \"/wp-content/plugins/bid-sys/ajax_member.php\",\n                data: dataURL,\n                success: function (msg) {  // alert(msg);\n                    jQuery(\"#member_\" + seasontype + \"season_vals_inner\").html(msg);\n                }\n            });\n        };\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "按住ctrl按键时候，在工具箱里面点控件，可以实现你现在的效果，如果取消的话，在不按ctrl点一下其他控件，就可以恢复了；\r\n目前我测试是这样的你可以试试。", "Konwledge_Point": "树中的独立集", "Question": ["关于C#的一个窗体复制控件问题", ["\n            不小心弄出来这个效果，点一下，就出来一个按钮，我想知道这个功能是如何实现的，以及如何取消"]], "Tag": "算法设计"}
{"Answer": "你这需求似乎没有必要重新new线程吧！\r\n假设线程ChatControl有如下状态：初始态、运行态、结束态。\r\n当触发刷新的时候，直接将线程ChatControl状态由运行态回退\r\n为初始态并重新进入运行态不就得了", "Konwledge_Point": "树中的独立集", "Question": ["多线程，保证用户只存在一个线程。困扰很久，实在没有办法", ["servlet，用户请求的地址。当用户请求之后，会调用control.start();进入一个耗时的操作，循环等待。直到超时或者是打断循环退出继续执行。问题出在else语句块，原来意思是如果是刷新，结束该用户的上一个等待线程，该次请求挂起，这样保证了一个用户只存在一个线程。执行顺序应该是先结束上一个线程再new一个新线程。但执行的接是先new一个线程再结束上一个进程。结束线程我也用线程来控制，但还是不行。希望大家能帮我解决一下、谢谢。这个问题困扰很久了。[code=\"java\"]PrintWriter out = response.getWriter();", "\n            HttpSession session = request.getSession();", "\n            String receiver = String.valueOf(session.getAttribute(\"User\"));", "\n\n", "        ChatControl control = null;\n        if (ChatListener.threadMap.get(receiver) == null) {\n            System.out.println(\"============================ threadMap.get(receiver) == null\");\n            control= new ChatControl();\n            ChatListener.threadMap.put(receiver , control);//线程对象塞进map\n            control.start();//启用线程\n", "\n\n", "//              control.join();", "\n                ChatListener.threadMap.remove(receiver);", "\n            }else {", "\n                System.out.println(\"============================ threadMap.get(receiver) != null\");", "\n                //如果是刷新,结束上一个长连接，此连接挂起", "\n                StopThreadControl stopThread = new StopThreadControl();", "\n                stopThread.setPriority(Thread.NORM_PRIORITY+2);", "\n                stopThread.setUser(receiver);", "\n                stopThread.start();", "\n                stopThread.join();//等待停止线程之后再执行new新的线程，但程序没有按照这样执行", "\n                /*", "\n                control = new ChatControl();", "\n                control.update(receiver);//有可能抢cpu资源引起的，无法控制", "\n                control = null;", "\n                */", "\n                //挂起", "\n                ChatControl control2 = new ChatControl();", "\n                ChatListener.threadMap.put(receiver, control2);", "\n                control2.start();", "\n//              control2.join();", "\n                ChatListener.threadMap.remove(receiver);", "\n            }", "\n            ChatHelper.updateChatToReceived(receiver);//更新到已收到[/code]", "\n\n", "ChatControl.java 继承 Thread，run是一个耗时的操作。用户请求会进入此等待 ", "\n[code=\"java\"]public void run() ", "\n    {   String threadName = Thread.currentThread().getName();", "\n        log.info(\"当前启动线程是：\"+threadName);", "\n        Date newDate = DateUtil.getNowDateAndTime();", "\n        int i = 0;", "\n        while(!done){", "\n            try {", "\n                System.out.println(\"循环ing。。。。\"+i++);", "\n                //睡眠1秒继续等待", "\n                sleep(1*1000); ", "\n                //5分钟返回一次,避免资源一直在占用", "\n                if(DateUtil.getTwoTimeSub(DateUtil.getNowDateAndTime(), newDate) >= 5){", "\n                    break ;", "\n                }", "\n            } catch (Exception e) {", "\n                log.error(Constants.getExceptionString(\"run()\", ChatControl.class));", "\n                break;//退出", "\n            }", "\n        }", "\n        log.info(\"当前结束线程：\"+threadName);", "\n    }[/code]", "\n\n", "StopThreadControl 继承Thread， 让上一个线程退出循环，结束进程", "\n[code=\"java\"]   String user;", "\n    public void run() {", "\n        System.out.println(\"进入StopThreadControl..........................\");", "\n        ChatControl control= (ChatControl) ChatListener.threadMap.get(user);", "\n        ChatListener.threadMap.remove(user);", "\n        if (control != null ) {", "\n            control.breakThread();", "\n            System.out.println(\"打断循环.........................................\");", "\n        }", "\n        return ;", "\n    }[/code]", "\n\n", "[code=\"java\"]public class ChatListener {", "\n      static public Map threadMap = new HashMap() ;//保存线程", "\n\n", "}[/code]", "\n\n", "我查了很多关于多线程编程的资料，但还是不会很好运用。还有多线程异步调用。需要使用内部类吗？希望大家能帮我解决一下，指出代码的问题所在，谢谢、"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Change the lookahead to include the slashes as well:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;~.*?(?=/hello/)~i\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Code:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var_dump(preg_match('~.*?(?=/hello/)~i', $string));\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://eval.in/219024\" rel=\"nofollow\"&gt;Working demo on eval.in&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://regex101.com/r/yB4vG2/1\" rel=\"nofollow\"&gt;Regex101 demo with explanation&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["PHP preg_match  - 匹配一个完全独立的关键字？", ["\n\n", "How can I match a keyword that is completely on its own?", "\n\n", "For instance I only want to match ", "hello", " in a string like these,", "\n\n", "/say/hello/world/\n/say/hello/\n", "\n\n", "but ", "not", " in these,", "\n\n", "/say/helloworld/\n/say/hello-world/\n/say/hello+world/\n/say_hello_world/\n", "\n\n", "So far with this pattern,", "\n\n", "var_dump(preg_match('~.*?(?=hello)~i', $string)); // int 1\n", "\n\n", "It matches all of them!", "\n\n", "I only want ", "/something/hello/world/", " to be ", "int 1", " - is it possible?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Each XSLT library implements or interfaces a given XSLT processor. All libraries (should) support a given minimum API regardless of what XSLT processor it implements. This minimum API is what is referred to in the documentation.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["“与XSLT转换的处理器独立API”是什么意思？", ["\n\n", "I got this phrase in PHP manual page, but can't understand precisely.", "\n\n", "Here is the link: ", "http://www.php.net/manual/en/intro.xslt.php", "\n\n", "What's the association between XSLT processor and XSLT library?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your controller action:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    public function gridAction( $criteria ) {\n        $entities = $this-&amp;gt;getDoctrine()\n        -&amp;gt;getManager()\n        -&amp;gt;getRepository( 'Bundle:Entity' )\n        -&amp;gt;findbyCriteria( $criteria );\n        // criteria presumably involves some gneration from routing \n        // and may not be a parameter at all\n\n        if ( array() != $entities-&amp;gt;toArray() ) {\n            throw \n            $this-&amp;gt;createNotFoundException( 'Unable to find any entities.' );\n        }\n\n        $forms = array_map(function($element) use ($this) {\n            return $this-&amp;gt;createForm(new EntityType()\n                , $element\n                , array()  // form parameters here\n                );\n        });\n\n        return $this-&amp;gt;render( 'Bundle:Entity:grid.html.twig'\n            , array(\n                'forms'          =&amp;gt; $forms\n            ) );\n    }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And your twig:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;table class=\"records_list dataTable\" id=\"CaseloadTable\"&amp;gt;\n    &amp;lt;thead&amp;gt;\n        &amp;lt;tr&amp;gt;\n        &amp;lt;/tr&amp;gt;\n    &amp;lt;/thead&amp;gt;\n    &amp;lt;tbody&amp;gt;\n        {% for form in forms %}\n        &amp;lt;tr&amp;gt;\n            {{form_widget(form)}}\n        &amp;lt;/tr&amp;gt;   \n        {% endfor %}\n    &amp;lt;/tbody&amp;gt;\n&amp;lt;/table&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, you might be better served looking at this:\n&lt;a href=\"https://github.com/Abhoryo/APYDataGridBundle\" rel=\"nofollow\"&gt;https://github.com/Abhoryo/APYDataGridBundle&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Symfony2  - 是否可以创建一个独立的表单集合？", ["\n\n", "I have a table of data I want to be able to edit row-by-row.  The most sensible thing do do would be to have each row be its own form.  Can I do that in Symfony2 ", "without", " a linked parent entity?  The ", "documentation", " only shows how to do it with a parent.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff0c;如有帮助&amp;#xff0c;请采纳一下&amp;#xff0c;谢谢。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string.h&amp;gt;\n#define MAXNMB 20\nstruct StProduct\n{\n\tchar name[20]; //商品名称\n\tfloat price;   //单价\n\tchar id[20];   //条形码\n};\n//录入商品信息\nvoid InputProduct(struct StProduct arr[],int nmb[],int *szie)\n{\n\tchar isgo;\n\tint ss &amp;#61; 0;\n\tdo \n\t{\n\t\tprintf(&amp;#34;请录入商品名称:&amp;#34;);\n\t\tscanf(&amp;#34;%s&amp;#34;,arr[ss].name);\n\t\tprintf(&amp;#34;请录入商品单价:&amp;#34;);\n\t\tscanf(&amp;#34;%f&amp;#34;,&amp;amp;arr[ss].price);\n\t\tprintf(&amp;#34;请输入条形码:&amp;#34;);\n\t\tscanf(&amp;#34;%s&amp;#34;,arr[ss].id);\n\t\tprintf(&amp;#34;请输入商品数量:&amp;#34;);\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;nmb[ss]);\n\t\tss&amp;#43;&amp;#43;;\n\t\tprintf(&amp;#34;是否继续添加商品(Y/N)?:&amp;#34;);\n\t\tscanf(&amp;#34;%c%*c&amp;#34;,&amp;amp;isgo);\n\t\tif(isgo &amp;#61;&amp;#61; &amp;#39;N&amp;#39; || isgo &amp;#61;&amp;#61; &amp;#39;n&amp;#39;)\n\t\t\tbreak;\n\t} while (1);\n\t*szie &amp;#61; ss;\n}\n//修改产品数量\nvoid ChangeNmb(struct StProduct arr[],int nmb[],int *szie)\n{\n\tint i &amp;#61; 0;\n\tchar name[20] &amp;#61; {0};\n\tprintf(&amp;#34;请输入需要修改数量产品的名称:&amp;#34;);\n\tscanf(&amp;#34;%s&amp;#34;,name);\n\tfor (; i &amp;lt; *szie;i&amp;#43;&amp;#43;)\n\t{\n\t\tif (strcmp(arr[i].name,name)&amp;#61;&amp;#61;0)\n\t\t{\n\t\t\tprintf(&amp;#34;请输入产品的数量:&amp;#34;);\n\t\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;nmb[i]);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n//删除商品\nvoid DeletePro(struct StProduct arr[],int nmb[],int *szie)\n{\n\tint i,j;\n\tint ss &amp;#61; *szie;\n\tchar name[20] &amp;#61; {0};\n\tprintf(&amp;#34;请输入需要删除的商品名称:&amp;#34;);\n\tscanf(&amp;#34;%s&amp;#34;,name);\n\tfor (i &amp;#61; 0;i &amp;lt; ss; i&amp;#43;&amp;#43;)\n\t{\n\t\tif (strcmp(arr[i].name,name) &amp;#61;&amp;#61; 0)\n\t\t{\n\t\t\tif(i &amp;lt; ss -1)\n\t\t\t{\n\t\t\t\tarr[i] &amp;#61; arr[i&amp;#43;1]; //商品前移\n\t\t\t\tnmb[i] &amp;#61; nmb[i&amp;#43;1];\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\tss &amp;#61; ss -1;\n\t*szie &amp;#61; ss;\n}\n \n//付钱\nvoid Pay(struct StProduct arr[],int nmb[],int *szie)\n{\n\tint i;\n\tint ss &amp;#61; *szie;\n\tfloat total &amp;#61; 0.0;    //应付总金额\n\tfloat money &amp;#61; 0.0;    //实际给的钱\n\tfloat zhaoling &amp;#61; 0.0; //找零\n\tfor (i &amp;#61; 0; i &amp;lt; ss; i&amp;#43;&amp;#43;)\n\t{\n\t\ttotal &amp;#43;&amp;#61; arr[i].price * nmb[i];\n\t}\n\tprintf(&amp;#34;应付款:%f\\n&amp;#34;,total);\n\tprintf(&amp;#34;请输入付款金额:&amp;#34;);\n\tscanf(&amp;#34;%f&amp;#34;,&amp;amp;money);\n\tzhaoling &amp;#61; money - total;\n\tprintf(&amp;#34;找零:%f\\n&amp;#34;,zhaoling);\n\tprintf(&amp;#34;欢迎下次光临!&amp;#34;);\n}\n//结账\nvoid Deal(struct StProduct arr[],int nmb[],int *szie)\n{\n\tint i,opt;\n\tint bgo &amp;#61; 1;\n\t\n\tprintf(&amp;#34;请核对商品信息:\\n&amp;#34;);\n\tfor (i &amp;#61; 0; i &amp;lt; *szie; i&amp;#43;&amp;#43;)\n\t{\n\t\tprintf(&amp;#34;%s\\t%.1f\\t%d\\n&amp;#34;,arr[i].name,arr[i].price,nmb[i]);\n\t}\n\twhile(bgo)\n\t{\n\t\tprintf(&amp;#34;1.结账  2.修改产品数量  3.删除商品\\n&amp;#34;);\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;opt);\n\t\tswitch(opt)\n\t\t{\n\t\tcase 1:\n\t\t\tPay(arr,nmb,szie);\n\t\t\tbgo &amp;#61; 0;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tChangeNmb(arr,nmb,szie);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tDeletePro(arr,nmb,szie);\n\t\t\tbgo &amp;#61; 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n}\n \nint main()\n{\n\tstruct StProduct arr[MAXNMB];  //存储商品\n\tint nmb[MAXNMB];               //存储对应商品的数量\n\t\n\tint opt;\n\tint count &amp;#61; 0;        //商品实际数量\n\tint bgo &amp;#61; 1;\n\twhile(bgo)\n\t{\n\t\tprintf(&amp;#34;------------简易超市收银系统--------\\n&amp;#34;);\n\t\tprintf(&amp;#34;|      1.录入商品信息              |\\n&amp;#34;);\n\t\tprintf(&amp;#34;|      2.结账                      |\\n&amp;#34;);\n\t\tprintf(&amp;#34;|      3.退出系统                  |\\n&amp;#34;);\n\t\tprintf(&amp;#34;------------------------------------\\n&amp;#34;);\n\t\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;opt);\n\t\tswitch(opt)\n\t\t{\n\t\tcase 1:\n\t\t\tInputProduct(arr,nmb,&amp;amp;count);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tDeal(arr,nmb,&amp;amp;count);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tbgo &amp;#61; 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么用c语言写一个超市收银系统", ["开发一个简单的超市收银系统，要求", "\n\n", "1、定义结构体数组，条目包含商品名称，单价，条形码；", "\n\n", "2、结帐时，输入每件商品的名称或条形码，输入数量，最后输出所有商品的总价格；", "\n\n", "3、顾客付款后，给出找零金额；", "\n\n", "4、结帐时，一旦发现商品数量有误，可以修改数量或删除相应的商品；"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;\n\t&lt;li&gt;打开 Settings -&amp;gt; Version Control -&amp;gt; Commit\n\t&lt;div style=\"text-align:center\"&gt;\n\t&lt;figure class=\"image\" style=\"display:inline-block\"&gt;&lt;img alt=\"\" height=\"1057\" src=\"https://img-ask.csdnimg.cn/upload/1604895509964.png\" width=\"1477\" /&gt;\n\t&lt;figcaption&gt;标题&lt;/figcaption&gt;\n\t&lt;/figure&gt;\n\t&lt;/div&gt;\n\n\t&lt;p&gt;勾选圈中的这一项，即可。&lt;/p&gt;\n\t&lt;/li&gt;\n\t&lt;li&gt;\n\t&lt;p&gt;同时也可以还原到独立窗口进行提交，如图：选中的两项，第一项则是独立框操作，第二项则是显示在工具栏上。&lt;/p&gt;\n\n\t&lt;div style=\"text-align:center\"&gt;\n\t&lt;figure class=\"image\" style=\"display:inline-block\"&gt;&lt;img alt=\"\" height=\"788\" src=\"https://img-ask.csdnimg.cn/upload/1604895659417.png\" width=\"930\" /&gt;\n\t&lt;figcaption&gt;标题&lt;/figcaption&gt;\n\t&lt;/figure&gt;\n\t&lt;/div&gt;\n\n\t&lt;p&gt;旧版没有提供可以选择的选项，此版本是2020.2。不限于该版本后所有的版本，具体版本不了解。&lt;/p&gt;\n\t&lt;/li&gt;\n&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["IntelliJ IDEA  commit窗口分离", ["\n\n", "\n\n", "求助啊！IntelliJ IDEA开始的commit是在左侧，图一的位置，不知道咋搞的成了分离出来了，图二这样。那位大神知道怎么恢复回去啊！！谢谢啦"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;懂了。代码编写中。&lt;/p&gt;\n\n&lt;p&gt;基本搞定。&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://paste.ubuntu.com/p/PkPcp3QYSX/\"&gt;https://paste.ubuntu.com/p/PkPcp3QYSX/&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么让两个独立选中的select option互换（可以实时）", ["我想用一个按键互换select选中的内容", "\n\n", "\n\n", "像这样", "\n\n", "有数据的时候也可以实时变化", "\n\n", "\n\n", "最好用js", "\n\n", "我的代码", "\n\n", "\n", "<TABLE>\n<TBODY> \n<TR class=\"inputa\"> \n\t<TH><b></b></TH>\n<TD> \n<INPUT name=input onchange=\"convert(this.form,form.measure1, form.measure2)\" size=30>\n</TD>\n<TD> \n<SELECT name=measure1 \n onchange=\"convert(this.form,this, form.measure2)\">\n<OPTION selected value=0.0001>cm ^2\n\n<OPTION value=1>m ^2\n\n<OPTION value=10000>km ^2\n\n<OPTION value=0.0929>feets ^2\n\n<OPTION value=0.8361>yds ^2 \n\n<OPTION value=2589988.11>mi ^2\n\n</OPTION>\n</SELECT>\n</TD>\n</TR>\n<TR class=\"inputb\"> \n\t<TH ><b></b></TH>\n<TD> \n<INPUT name=display size=30>\n</TD>\n<TD> \n<SELECT name=measure2 \n onchange=\"convert(this.form,form.measure1, this)\">\n <OPTION value=0.0001>cm ^2\n\n    <OPTION value=1>m ^2\n    \n    <OPTION value=10000>km ^2\n    \n    <OPTION selected value=0.0929>feets ^2\n    \n    <OPTION value=0.8361>yds ^2 \n    \n    <OPTION value=2589988.11>mi ^2\n\n    </OPTION>\n</SELECT>\n</TD>\n</TR>\n</TBODY> \n</TABLE>"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;对照&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/734247314666148.png\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;a href=\"https://img-blog.csdnimg.cn/c7dfe3341eb74115abf14c49d6b509b9.png\" id=\"textarea_1666413733922_1666413761241_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://img-blog.csdnimg.cn/c7dfe3341eb74115abf14c49d6b509b9.png&lt;/span&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["利用2个独立按键和2个数码管，用Proteus仿真软件设计一个单片机静态显示程序。显示内容自定。上传实验代码及仿真截图。", ["利用2个独立按键和2个数码管，用Proteus仿真软件设计一个单片机静态显示程序。显示内容自定。"]], "Tag": "算法设计"}
{"Answer": "如果单独开发的话 就修改FB中项目的输出目录 \r\n\r\n可以把输出目录修改为服务器的发布目录 这样修改了代码以后 也可以在浏览器中实时的查看修改结果", "Konwledge_Point": "树中的独立集", "Question": ["如何将FlashBuilder4.5中做好的界面集成到MyEclipse6.5中呢？", ["我想前台和后台分开来做，独立使用FlashBuilder4.5和MyEclipse6.5,不想用插件版，菜鸟求教，谢谢大家！", "\n\n", "还有一个问题就是做GIS方面的开发，通常用到的工具有哪些啊？如ArcGis Server;还需要装ArcGis中的其它东西么，例如：arcmap,arcims等等 :oops: "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;显卡&amp;#xff08;GPU&amp;#xff09;&amp;#xff0c;你这个是两个显卡&amp;#xff0c;第一个应该是集成显卡&amp;#xff0c;第二个是独立显卡。你的电脑是什么牌子的。&lt;br /&gt;大部分牌子的电脑都有性能监控的&amp;#xff0c;如果你在玩游戏或需要显示方面的就会启动独立显卡。平时就使用集成显卡。&lt;br /&gt;如果你硬要用也行&amp;#xff0c;去显示设置里设置显卡&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["求解，为什么电脑有两个GPU", ["电脑有两个gpu，但是一直只有GPU0利用率那个有点动静，那个GPU1利用率一直在百分之0，请问一下，怎么才能让它动起来，毕竟不知道他有什么用，谢谢！", "\n"]], "Tag": "算法设计"}
{"Answer": "1、统一认证中心，与其他系统进行集成时要求其他系统中的用户与cas单点登录认证中心保持一致；这个会涉及到与其他系统同步用户的工作。\r\n2、各个系统进行各自保持用户信息，但是与cas单点登录时就需要各个系统各自去设计一个用户对照关系，保证单点登录过来的用户能在各自系统中有对应用户；涉及各个系统的功能改造。\r\n3、还是给个系统保持用户信息，cas单点登录服务端改造以适应各个系统的用户，同样需要cas单点登录服务端设计绑定功能，比较复杂。", "Konwledge_Point": "树中的独立集", "Question": ["CAS 单点登录集成问题，集成其他系统软件，其他系统都有自己独立的用户模块（数据库也不是不同的）", ["CAS 单点登录集成问题，服务端搭建好后，集成其他系统软件，其他系统都有自己独立的用户模块（数据库也不是不同的），有什么办法能解决一下吗。", "\n还是只能修改其他系统的模块代码。"]], "Tag": "算法设计"}
{"Answer": "修改下包名，也就是packageName就可以了。", "Konwledge_Point": "树中的独立集", "Question": ["二次开发的app，希望成为一个独立的app，目前每次安装都会提示应用市场有新版本", ["这个app属于多公司共同使用的app，我公司使用的是3.6.6版本，应用市场已经有3.8.8版本了，我修改我手上3.6.6版本代码后安装回提示应用市场有新版本，我想删掉这个和应用市场的关联，成为一个独立是app"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以通过循环的方法实现。可以把收件人的邮箱地址存储在数组中&amp;#xff0c;然后每次循环发送一封邮件&amp;#xff0c;把数组中的邮件地址逐一作为收件人发送邮件。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; SendEmail()\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; recipients As Variant\nrecipients &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#64;gmail.com,B&amp;#64;gmail.com,C&amp;#64;gmail.com&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; i As Integer\n&lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;UBound&lt;/span&gt;(recipients)\nsendMail recipients(i)\n&lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt; i\n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt; sendMail(recipient As String)\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; OutApp As Object\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; OutMail As Object\n&lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt; OutApp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;CreateObject&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Outlook.Application&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt; OutMail &amp;#61; OutApp.CreateItem(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;On&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Error&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Resume&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;With&lt;/span&gt; OutMail\n.&lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &amp;#61; recipient\n.Subject &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Subject&amp;#34;&lt;/span&gt;\n.Body &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Email Body&amp;#34;&lt;/span&gt;\n.Send\n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;With&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;On&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Error&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;GoTo&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt; OutMail &amp;#61; &lt;span class=\"hljs-literal\"&gt;Nothing&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Set&lt;/span&gt; OutApp &amp;#61; &lt;span class=\"hljs-literal\"&gt;Nothing&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;安装Microsoft Outlook实现&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vba批量发送邮件多个收件人之间如何相互独立呢", ["使用VBA批量发送邮件时，有多个收件人时用逗号隔开（如邮箱A,B,C），但是实际发送出去后是一封邮件，各个收件人之间相互可以看到邮箱。在保持收件人仍为邮箱A,B,C的情况下，有没有办法可以发成三封邮件，单独对邮箱A\\B\\C的呢？"]], "Tag": "算法设计"}
{"Answer": "可以试一下梦行Monxin商城系统，除了卖自己的产品也可以招商入驻，使商城产品更全面市场\r\n\r\n更广，有货源的可以上自己的商品，没有时间还可以招商。第三方登录和支付方式，减少注\r\n\r\n册付款时繁琐程序。支付方式比京东、天猫等还要方便些，具体的你可以去免费试用感受一\r\n\r\n下，希望能帮到你", "Konwledge_Point": "树中的独立集", "Question": ["想开一个独立的网络商城，像JD的、天猫、淘宝之类那样的商城系统哪家做的比较好？？？", ["刚开始接触没有头绪，请好心人帮忙", "\n想开一个独立的网络商城，像JD的、天猫、淘宝之类那样的商城系统哪家做的比较好？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;当然要把multiIndex设置成二维数组,添加的时候multiIndex push一个默认一维数组(注意对象地址啥的不要一样了)&amp;#xff0c;给picker添加&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"language-xml\"&gt;value&amp;#61;&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;multiIndex&lt;/span&gt;[index]}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&amp;#34; data-index&amp;#61;&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;index&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&amp;#34;\n\n\n&amp;#96;&amp;#96;&amp;#96;,触发绑定的函数获取dataset的index,修改multiIndex对应index的子数组&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["小程序 多级联动picker + 按钮增加选项行", ["\n", "如图，要做一个多级联动+增加行的功能", "\n", "就是每一行都是一个多级联动，让客户选择，然后再一个按钮可以多一行，让客户再添加", "\n", "现在多级联动已经做好了，就是小程序官网的模板改了改，增加一个行现在只是用了一个wx:for 循环，显然是不行的。。它只是重复显示了，但在任何一行修改之后，所有的数据都会变，我想要每一行都是独立的选项，应该再怎么改造一下？非常感谢！！求专家给点思路，谢谢", "\n", "\n  addOneMoreRow(){\n    let ", "range", "=this.", "data", ".", "range", "\n    ", "range", "+=", "1", "\n    this.setData({\n      ", "range", ":", "range", "\n    })\n  },\n", "\n", "\n```html\n", "<", "view", " ", "class", "=", "\"section__title\"", ">", "多列选择器", "</", "view", ">", "\n  ", "<", "picker", " ", "mode", "=", "\"multiSelector\"", " ", "bindchange", "=", "\"bindMultiPickerChange\"", "  ", "wx:for", "=", "\"", "{{", "range", "}}", "\"", " ", "bindcolumnchange", "=", "\"bindMultiPickerColumnChange\"", " ", "value", "=", "\"", "{{", "multiIndex", "}}", "\"", " ", "range-key", "=", "\"product_name\"", " ", "range", "=", "\"", "{{", "multiArray", "}}", "\"", ">", "\n    ", "<", "view", " ", "class", "=", "\"picker\"", ">", "\n      当前选择：", "{{", "multiArray", "[0][multiIndex[0]].product_name}}", "，", "{{", "multiArray", "[1][multiIndex[1]].product_name}}", "\n    ", "</", "view", ">", "\n  ", "</", "picker", ">", "\n\n", "\n", "\n", "```"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem was the line endings. Changing the line endings to \"Linux line endings\" makes the problem disapear&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["“每个PHP语句必须独立于一行”Sonarqube模式错误", ["\n\n", "I'm analyzing a PHP code using Sonarqube, and I've noticed that in almost all files I have this error:", "\n\n", "\"Each PHP statement must be on a line by itself\" (DisallowMultipleStatementsSameLine)", "\n\n", "But when I check this files seems that there is no error.", "\n\n", "For example, in this file the error is raised:", "\n\n", "<?php\n/**\n * Category of the question\n */\nclass Category {\n    public $categoryId;\n    public $name;\n}\n?>\n", "\n\n", "How can be?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Java只有值传递&amp;#xff0c;main()方法中的 int[] nums &amp;#61; { 1, 2, 3, 4, 5, 6, 7 };   可以看成有一个指针nums 指向了数组&amp;#xff0c;当你将 nums 传参进rotate()方法时&amp;#xff0c;复制了另一个指针&amp;#xff08;这个指针刚好也叫nums&amp;#xff09;指向了数组&amp;#xff0c;当你直接将rotate()方法的 nums指向 ret 时&amp;#xff0c;跟main()方法的nums指针没有任何关系&amp;#xff0c;还是指向了原来的数组。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Java：数组为什么不是引用传递的？", ["LeetCode 第 189 题要求将数组 nums 中元素均向右移动 k 位", "\n\n", "\n", "public class Solution {\n\tpublic static void main(String[] args) {\n\t\tint[] nums = { 1, 2, 3, 4, 5, 6, 7 };\n\t\tnew Solution().rotate(nums, 3);\n\t}\n\tpublic void rotate(int[] nums, int k) {\n\t\tint[] ret = new int[nums.length];\n\t\tfor (int i = 0; i <= nums.length - 1; i++) {\n\t\t\tret[(i + k) % nums.length] = nums[i];\n\t\t}\n\t\tSystem.arraycopy(ret, 0, nums, 0, nums.length); // 正确\n        // nums = array; // 错误\n\t}\n\n}", "\n\n", "我的疑问是为什么最后的步骤需要通过 System.arraycopy 复制数组元素，而不能直接写成 nums = array 呢？我直接将 nums 这个引用指向 array 的内存地址不可以吗？求解", "\n\n", "------------------------------------------- 分割线 -------------------------------------------", "\n\n", "看完《深入理解Java虚拟机》回来复盘这个问题，其实不用理解与区分", "值传递", "、", "引用传递", "的概念与二者在Java与C++的区别，理解Java虚拟机的", "运行时数据区", "即可，罗列几点对我自己理解这个问题的知识点：", "\n\n", "数组", "和", "普通对象", "没有区别，只是", "数组", "中会存储附加字段记录当前数组长度而已，所以", "数组", "与", "普通对象", "都是存储在", "堆", "中的", "不同", "方法", "会对应不同的", "栈帧", "，", "栈帧", "中有私有的", "局部变量表", "用于存储当前方法涉及到的变量，main 方法中的 nums 已预先添加至 main 方法的", "栈帧", "的", "局部变量表", "，main 方法调用 rotate 方法时，形参会添加至 rotate 方法的", "栈帧", "的", "局部变量表", "，也就是说目前全局会有两个 nums 引用，分别存储在 main 方法的", "局部变量表", "与 rotate 方法的", "局部变量表", "**，互相独立，因此将 rotate 方法中的 nums 指向 ret 时，main 方法中的 nums 并不受影响", "Java虚拟机中的数据类型除了我们常见的boolean、byte、char、short，还有一种叫做reference，也就是我们通常理解的引用", "\n\n", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "从面向对象的角度看，最好是抽象出一个接口，用spring等AOP注入，不要自己传参数，更不要作为公共方法任何地方获取\r\n道理很简单，一旦你那样做，意味着“当前用户”这个功能基本上和所有的类斗耦合上了，再也不能修改了。\r\n特别是你希望将来为了性能用多机方案，不用session，或者要匹配第三方登录等功能性扩展的时候，代码美发动，会很痛苦。", "Konwledge_Point": "树中的独立集", "Question": ["当前用户大家怎么设计？是在Service层方法中作为参数传入，还是作为公共方法任何地方获取？", ["当前用户是系统中很特别的一个对象，其实就是会话跟踪，可以用session或者请求中带token，通常统一处理比如在过滤器中，得到当前用户对象放在request的属性中（或者线程变量中），然后", "\n方式1：设计一个静态方法得到当前用户，controller和Service层代码均可访问；     方式2：Controller可以访问得到，service层代码则作为方法参数传入。", "\n请问你们是怎么实现的？", "\n方式2作为Service方法参数缺点是所用用到的方法都要加一个当前用户参数，优点是较为独立通用特别是RPC调用时，rpc调用时并不走过滤器等统一处理，rpc调用是直接访问Service层，所以避免与会话牵扯更好吧。", "\n这里我比较纠结，获取当前用户在很多方法中都会用到，作为参数传递是否太繁琐？请指导，谢谢！", "\n琢磨半天，决定用service方法参数，有数据权限控制的方法就要传入当前用户id，这样会话层只在Controller而不侵入service层，接口远程调用时比较简单，远程我们用dubbo或hessian，方法参数中有了，就不必用外部方法传递用户了（比如通过dubbo的filter或hessian的header传递附件的值）。", "\n但是随后，我想到了一个安全问题。“当前用户”应由系统产生和维护的，不应像普通用户是随便调用的，在方法参数中就会面临调用者传入错误的用户id的问题？无论是查到了别人的数据还是把操作者置为了其他用户都是严重问题。算了吧，还是不要用参数方式了，就算是远程调用，也要通过filter或header传递token。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Yes this is is possible through the use of &lt;a href=\"http://php.net/manual/en/language.variables.variable.php\" rel=\"nofollow\"&gt;&lt;code&gt;variable variables&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;foreach($table_names as $n) {\n    if(isset($$n) &amp;amp;&amp;amp; is_array($$n)) {\n        print_r($$n);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;a href=\"https://eval.in/173067\" rel=\"nofollow\"&gt;&lt;strong&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;hr&gt;\n\n&lt;p&gt;Basically variable variables are used like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$VARIABLENAME\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Since we loop through &lt;code&gt;$table_names&lt;/code&gt; as a 1D array, you can check &lt;code&gt;$$n&lt;/code&gt; to see if it exists and is an array, if so, &lt;code&gt;print_r()&lt;/code&gt; it.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The manual shows this warning:&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Please note that variable variables cannot be used with PHP's\n  Superglobal arrays within functions or class methods. The variable\n  $this is also a special variable that cannot be referenced\n  dynamically.&lt;/p&gt;\n&lt;/blockquote&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何检查作为数组元素存储的名称是否作为独立数组本身存在", ["\n\n", "Suppose I have the following arrays:", "\n\n", "$table_names = array('foo', 'bar');\n", "\n\n", "And I have some other arrays:", "\n\n", "$foo = array('1', '2', '3');\n\n$bar = array('4', '5', '6');\n", "\n\n", "I want to check if the names stored in $table_names exist as independent arrays. For example:", "\n\n", "foreach($table_names as $names) {\n\n    // Check if array exists with name $names\n\n}\n", "\n\n", "Can anyone please tell me if it's possible?", "\n\n", "I'm basically exporting my database in PHP array format. I upload the file using the script and then I want to use those arrays in my code so I can show particular information on screen without having to add data into database.", "\n\n", "Thank you in advance!\nCheers", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;回答&amp;#xff1a;代码如下&lt;br /&gt;第一问&amp;#xff0c;set和get函数都一样&amp;#xff0c;就没写全&amp;#xff0c;可以自己补充一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Pizza&lt;/span&gt; {\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    string size;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; milknumber;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; italynumber;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; hotnumber;\n\n    &lt;span class=\"hljs-built_in\"&gt;Pizza&lt;/span&gt;(string n1, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n2, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n3, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n4) {\n        size &amp;#61; n1;\n        milknumber &amp;#61; n2;\n        italynumber &amp;#61; n3;\n        hotnumber &amp;#61; n4;\n    }\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setsize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string n)&lt;/span&gt; &lt;/span&gt;{\n        size &amp;#61; n;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;string &lt;span class=\"hljs-title\"&gt;getsize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; size;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;calCost&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; price;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum;\n\n        sum &amp;#61; milknumber &amp;#43; italynumber &amp;#43; hotnumber;\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (size &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;小&amp;#34;&lt;/span&gt;) {\n            price &amp;#61; &lt;span class=\"hljs-number\"&gt;10.0&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * sum;            \n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (size &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;中&amp;#34;&lt;/span&gt;) {\n            price &amp;#61; &lt;span class=\"hljs-number\"&gt;12.0&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * sum;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (size &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;大&amp;#34;&lt;/span&gt;) {\n            price &amp;#61; &lt;span class=\"hljs-number\"&gt;14.0&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * sum;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;没有该尺寸&amp;#34;&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; price;\n    }\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;写一半哈&amp;#xff0c;第二问加一个类&amp;#xff0c;创建几个对象&amp;#xff0c;再写一下测试主函数&amp;#xff0c;你先试试看&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["用C++编写程序，并添加注释", ["1、创建一个名为Pizza的类，用它来存储单个比萨饼的信息。这个类应包含以下内容：", "几个私有变量，分别用来存储比萨的尺寸（小，中，大）、奶酪配料数量、意大利腊香肠配料数量和火腿配料数量。", "一个（或多个）构造函数，用于设置所有变量的数值。", "几个公有函数，用于获取和设置变量的数值。", "一个名为calcCost () 的公有函数，用于返回一个表示比萨饼价格的double值。", "比萨饼价格由以下内容决定：", "小：10美元＋每份配料2美元", "中：12美元＋每份配料2美元", "大：14美元＋每份配料2美元", "编写测试代码来生成几个比萨饼信息并输出对这些披萨的价格。例如，一个大比萨饼外加一份奶酪配料、一份意大利腊香肠配料及两份火腿配料的总价格应为22美元", "要求写程序注释。", "2、对程序1进行扩充，需要你创建一个PizzaOrder类，这个类允许一个订单里最多存储三个披萨饼的信息。每个存储进来的披萨饼信息都应该是一个披萨饼对象。除了合适的变量和构造函数外，还要有以下的函数：", "public int getNumPizzas()—返回订单中的披萨的个数。", "public Pizza* getPizza1()—返回订单中的第一个披萨，如果pizza1未设置就返回null。", "public Pizza* getPizza2()— 返回订单中第二个披萨，如果pizza2未设置就返回null。", "public Pizza* getPizza3()— 返回订单中第三个披萨，如果pizza3未设置就返回null。", "对于带有另一个PizzaOrder对象并为其比萨创建一个独立的复制构造函数。", "使用旧订单作为新订单的起始点可能很有用。", "编写一个main函数来测试这个类。如果订单中有两个或者三个披萨饼，则会用到setPizza2和setPizza3函数。下面的代码示例对函数进行了说明。注意代码不完整。作为程序的一部分，你必须补充完整。例如：", "Pizza pizza1 = // 这一行代码创建一个大披萨饼，一份奶酪，一份火腿", "Pizza pizza2 = // 这一行代码创建一个中披萨饼，两份奶酪，两份意大利腊香肠。", "PizzaOrder order1 = // 这一行代码创建一个订单", "order1.setNumPizzas(2); // 订单中有两个披萨", "order1.setPizza1(pizza1); // 设置第一个披萨", "order1.setPizza2(pizza2); // 设置第二个披萨", "double total = order1.calcTotal(); // 计算订单的总价格：18+20 = 38", "要求写程序注释。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;windows做不到完全隔离&amp;#xff0c;要想隔离只能再安装个vmware workstation 类似的东西&amp;#xff0c;每个人单独创建个虚拟机&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["有一台服务器，导师让我分配给同学使用，相互独立，互不影响，各自有自己的账号，请问怎么做？", ["这台服务器目前装了windows server 2016，我想的是大家可以共用全部的硬件资源，但是软件互不影响，安装软件，编写文档之间相互独立，请问怎么做？"]], "Tag": "算法设计"}
{"Answer": "将JSON对象转为字符串传递给C#方法，C#通过字符串转为对象\r\nhttps://www.cnblogs.com/mfc-itblog/p/5192689.html", "Konwledge_Point": "树中的独立集", "Question": ["JS中调用WinForm中方法怎么传递对象过去？现在能传参数，但是不能传对象，集合", ["JS中调用c#函数示例", "\n\n", "C#函数如下：", "\npublic void ShowMessage(string message)", "\n{", "\nMessageBox.Show(“免费开网店，携购独立网店系统诚邀您的加盟！”);", "\n}", "\n\n", "JS里的调用方法：", "\n\n\nfunction InvokeFunc()\n{\nwindow.external.ShowMessage(‘呵呵’);\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一个game合成一个类。主函数中通过菜单选择运行游戏。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["使用VS，c++，在一个文字交互类的游戏中插入小游戏", ["用了easyX的图形库，先做了一个文字交互类的游戏，以及很多的mini_game，", "mini_game 可以独立运行，分别都是独立的项目，", "现在该怎样把这些mini_game插入到主游戏中啊？"]], "Tag": "算法设计"}
{"Answer": "```\r\nimport re\r\n\r\ns='Abc34g8'\r\n\r\nptn = re.compile('\\d+')\r\nnums = ptn.findall(s)\r\ny = 0 \r\nfor x in nums:\r\n    y += int(x)\r\n\r\nprint(y)\r\n\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["Python：字符串中数字求和", ["1.输入一个字符串，取出这个字符串中所有的数字并求和。每个数字都是独立的，不连续。", "\n现在只知道如何提取字符串中的数字", "\n例如：", "\n(1)s=‘Abc34g8’", "\n       for  I   in  s：", "\n            I.isdigit()", "\n(2)     for I in s :", "\n   if I in [0,1,2,3,4,5,6,7,8,9]     计算出结果应该是：15", "\n但是如何将提取出来的数字按照要求进行计算呢？", "\n\n", "2.输入一个字符串，取出这个字符串中所有的数字并求和。其中相邻的数字是连续的。", "\n            按照这样的方法，计算出来的结果应该是：42", "\n    求方法，谢谢大佬！"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;$string1&lt;/code&gt; and &lt;code&gt;$string2&lt;/code&gt; will be references to the same object right up until you try to convert the value to a string, so any changes you make will be applied to both strings. I think you would have to explicitly convert the object to a string to prevent this, e.g.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$string1 = (string) $class -&amp;gt; input($_POST['name']) -&amp;gt; mysql_escape();\n$string2 = (string) $class -&amp;gt; input($_POST['age']) -&amp;gt; mysql_escape();\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I'm not sure using a 'fluent' interface is appropriate here because you don't really want the object to be maintaining state between calls if you want to use the same instance in multiple places at the same time. It would be better to use a different object for each string.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["php：来自同一个类的两个对象彼此独立地工作", ["\n\n", "Good morning,", "\n\n", "I would like the code in my controller to look something like this:", "\n\n", "<?php\n$class = new sanitizeInput()\n\n$string1 = $class -> input($_POST[name]) -> mysql_escape();\n$string2 = $class -> input($_POST[age]) -> mysql_escape();\n\nprint \"\n     String1: $string1 <br />\n     String2: $string2\"\n?>\n", "\n\n", "It seems with my sanitizeInput class, any change to $string2 is applied to $string1. \nWhat ways can I change this? I would preferably like to make the changes within the class to make my controller as easily read as possible.", "\n\n", "Sure, I know I can instantiate twice, but I would like to use the same object if possible.", "\n\n", "It would be great if my class:", "\n\n", "\n", "Instantiate once,", "\n", "Set input,", "\n", "Tell it to mysql_escape, and return __toString to $string1.", "\n", "Set input leaving $string2 alone, mysql_escape and return __toString string to $string2.", "\n", "\n", "EDIT:\nThis is my full code as requested by comment:", "\n\n", "$name = $sanitize -> setInput($name) -> stripTags() -> mySql() -> replaceLinks('[ En webadresse ble sensurert her ]') -> trimWhitespace();\n$age = $sanitize -> setInput($age) -> stripTags() -> mySql() -> replaceLinks('[ En webadresse ble sensurert her ]') -> trimWhitespace();\n\n\nclass Sanitizer {\n\n    protected $_data;\n\n    public function setInput($input) {\n        $this -> _data = $input;\n        return $this;\n    }\n\n\n    public function stripTags($array = NULL) {\n        if (!is_null($array) and is_array($array)) {\n            $allowedTags = implode('', $array);\n            $this -> _data = strip_tags($this -> _data, $allowedTags);\n        }\n        else {\n            $this -> _data = strip_tags($this -> _data);\n        }\n        return $this;\n    }\n\n    public function mySql() {\n        $this -> _data = mysql_escape_string($this -> _data);\n        return $this;\n    }\n\n    public function replaceLinks($replacement = NULL) {\n        if (is_null($replacement)) {\n            $replacement = '[ Potential web-address censored here ]';\n        }\n        $this -> _data = preg_replace('~[a-z0-9:/._-]+\\.(biz|com|edu|gov|info|mil|net|org|as|eu|no|se|uk)[/a-z]{0,}~i', $replacement, $this -> _data);\n        return $this;\n    }\n\n    public function trimWhitespace() {\n        $this -> _data = trim($this -> _data);\n        return $this;\n    }\n\n    protected function __toString() {\n        $str = $this -> _data;\n        return $str;\n    }\n}\n", "\n\n", "Thank you for your time.", "\n\n", "Kind regards,", "\nMarius", "\n    "]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/xiaowen901018/article/details/51212347/", "Konwledge_Point": "树中的独立集", "Question": ["第二小整数                       ", ["Problem Description", "\n求n个整数中倒数第二小的数。", "\n每一个整数都独立看成一个数，比如，有三个数分别是1，1，3，那么，第二小的数就是1。", "\n\n", "Input", "\n输入包含多组测试数据。", "\n输入的第一行是一个整数C，表示有C测试数据；", "\n每组测试数据的第一行是一个整数n，表示本组测试数据有n个整数（2<=n<=10），接着一行是 n个整数 (每个数均小于100);", "\n\n", "Output", "\n请为每组测试数据输出第二小的整数，每组输出占一行。", "\n\n", "Sample Input", "\n2", "\n2", "\n1 2", "\n3", "\n1 1 3", "\n\n", "Sample Output", "\n2", "\n1"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;k代表什么&amp;#xff0c;你的代码里确实没有赋值或相应计算式。是不是k1&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请问MATLAB中报错：未定义函数或变量 'k'。该怎么样解决？", ["问题遇到的现象和发生背景", "\n", "计算三相短路的短路电流、各节点电压、各支路的电流", "\n", "问题相关代码，请勿粘贴截图 NF=input('请输入短路点的数目：NF=');", "\n", "n=input('请输入独立节点数：n=');", "nl=input('请输入支路数：nl=');", "B=input('请输入由线路参数形成的矩阵：B=');", "V0=input('请输入由各节点的初电压标幺值形成的列矩阵：V0=');", "D=input('请输入由短路号，短路点阻抗组成的矩阵：D=');", "m=0;Z=zeros(n);V=zeros(n);I=zeros(nl);", "for k1=1:nl", "    p=B(k1,1);q=B(k1,2);", "    if B(k1,6)==0", "        i=1./B(k1,5);", "    else i=B(k1,5);", "    end", "    if p==0", "        if q>m", "             Z(q,q)=B(k1,3);m=m+1;", "        else", "            for i=1:m", "                Z(i,m+1)=-Z(i,q);Z(m+1,i)=-Z(q,i);", "            end", "            Z(m+1,m+1)=Z(q,q)+B(k1,3);", "            for i=1:m", "                for j=1:m", "                    Z(i,j)=Z(i,j)-Z(i,m+1)", "Z(m+1,j)./Z(m+1,m+1);", "                end", "                Z(i,m+1)=0;", "            end", "            for i=1:m+1", "                Z(m+1,i)=0;", "            end", "    end", "    else if q>m", "            for i=1:m", "                Z(i,q)=Z(i,p)", "k;", "                Z(q,i)=Z(p,i)", "k;", "            end", "            Z(q,q)=k^2", "Z(p,p)+k^2", "B(k1,3);", "            m=m+1;", "        else", "            for i=1:m", "                Z(i,m+1)=k", "Z(i,p)-Z(i,q);", "                Z(m+1,i)=k", "Z(p,i)-Z(q,i);", "            end", "            Z(m+1,m+1)=k^2", "Z(p,p)+Z(q,q)-2", "k", "Z(p,q)+k^2*B(k1,3);", "            for i=1:m", "                for j=1:m", "                    Z(i,j)=Z(i,j)-Z(i,m+1)*Z(m+1,j)./Z(m+1,m+1);", "                end", "                Z(i,m+1)=0;", "            end", "                for i=1:m+1", "                    Z(m+1,i)=0;", "                end", "            end", "        end", "end", "for i=1:NF", "    I(D(i,1),D(i,1))=V0(D(i,1),1)./(Z(D(i,1),D(i,1))+D(i,2));", "    ft=num2str(D(i,1));", "    tsl=('点短路时');", "    ts2=('电流的标幺值If=');", "    dn=strcat(ft,ts1,ts2);", "    disp(dn);", "    disp(I(D(i,1),D(i,1)));", "    for i=1:n", "        V(i,i)=V0(i,1)-I(D(i,1),D(i,1))*Z(i,D(i,1));", "    end", "end", "\n", "运行结果及报错内容", "\n", "未定义函数或变量 'k'。", "\n", "出错 sanxiang (line 34)", "                Z(i,q)=Z(i,p)*k;", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "算法设计"}
{"Answer": "就是websocket通讯的使用，网页使用js进行注册链接，后台维护一个Session的Map，查到数据后就想各个Session发送数据。\r\n如果需要代码，可以私信我。", "Konwledge_Point": "树中的独立集", "Question": ["怎么调用websocket作为通道发送数据", ["1.现有多个线程查询不同的设备获取不同的数据。", "\n2.当网页打开后自动产生一个websocket连接。", "\n\n", "上面12两点已经完成，但是现在对我来说查询线程和websocket它们相互独立，怎么才能在查询线程中调用websocket的send方法把数据传到前台网页呢。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这种自动编号&amp;#xff0c;有一个最大的问题&amp;#xff0c;就是数据行物理删除后&amp;#xff0c;序号的问题&amp;#xff0c;比如现在有 a001,a002,a003&amp;#xff0c;如果物理删除了 a002&amp;#xff0c;再次插入&amp;#xff0c;应该是 a004&amp;#xff0c;而不是通过count得到的a003&amp;#xff0c;如果删除了 a003&amp;#xff0c;再次插入&amp;#xff0c;也应该是 a004&amp;#xff0c;而不是 根据当前最大序号计算出来的 a002&amp;#43;1得到的a003&lt;/p&gt;\n&lt;p&gt;所以&amp;#xff0c;最好的办法&amp;#xff0c;是做一个冗余表&amp;#xff0c;专门用来计算和存储序号&amp;#xff0c;表结构可以是这样&lt;/p&gt;\n&lt;p&gt;id,商品类型,流水号年份,商品流水对应的流水id&lt;/p&gt;\n&lt;p&gt;然后根据流水id&amp;#xff0c;获得这个序号表中对应行的 row_number 结果&amp;#xff0c;并与年份组合成流水号&amp;#xff0c;只要这个表的数据不物理删除&amp;#xff0c;即不会出现其他问题&lt;/p&gt;\n&lt;p&gt;所以&amp;#xff0c;整个方案是&amp;#xff1a;建立一个流水号表&amp;#xff0c;建立一个根据流水ID获取流水号的自定义函数&amp;#xff0c;建立一个触发器&amp;#xff0c;禁止流水号表的修改和删除&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["SQL SERVER同一个表中，流水号根据不同条件进行编号？", ["假设一个数据库表中有10中类型商品，每个商品的流水号是独立的，比如新增2个A商品的流水号为0001和0002，新增1个B商品流水号从0001开始，之后又新增1个A商品，流水号从0003开始，再新增1个B商品流水号从0002开始，之后又新增1个C商品，流水号从0001开始。"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You can use another function that modifies the router to do that.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;//In another file\nfunc addSignHandler(r *mux.Router) {\n    r.HandleFunc(\"/signup\", signupGetHandler).Methods(\"GET\")\n    r.HandleFunc(\"/signup\", signupPostHandler).Methods(\"POST\")\n    r.HandleFunc(\"/signin\", signinGetHandler).Methods(\"GET\")\n    r.HandleFunc(\"/signin\", signinPostHandler).Methods(\"POST\")\n    r.HandleFunc(\"/signout\", signoutGetHandler).Methods(\"GET\")\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And to use it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func NewRouter() *mux.Router {\n    r := mux.NewRouter()\n    r.HandleFunc(\"/\", middleware.AuthRequired(indexGetHandler)).Methods(\"GET\")\n    r.HandleFunc(\"/\", middleware.AuthRequired(indexPostHandler)).Methods(\"POST\")\n\n    addSignHandler(r)\n\n    r.HandleFunc(\"/services\", middleware.AuthRequired(servicesHandler)).Methods(\"GET\")\n    fs := http.FileServer(http.Dir(\"./static/\"))\n    r.PathPrefix(\"/static/\").Handler(http.StripPrefix(\"/static/\", fs))\n    return r\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Or even better, you can refactor your code to make it more consistent:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func addMainHandler(r *mux.Router) {\n    r.HandleFunc(\"/\", middleware.AuthRequired(indexGetHandler)).Methods(\"GET\")\n    r.HandleFunc(\"/\", middleware.AuthRequired(indexPostHandler)).Methods(\"POST\")\n    r.HandleFunc(\"/services\", middleware.AuthRequired(servicesHandler)).Methods(\"GET\")\n    fs := http.FileServer(http.Dir(\"./static/\"))\n    r.PathPrefix(\"/static/\").Handler(http.StripPrefix(\"/static/\", fs))\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And simplify the &lt;code&gt;NewRouter&lt;/code&gt; to:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func NewRouter() *mux.Router {\n    r := mux.NewRouter()\n    addMainHandler(r)\n    addSignHandler(r)\n    return r\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何将GO Gorilla Mux路线拆分为同一包的2个独立文件", ["\n\n", "I have separate file routes.go (package routes) where I store all my routes and handlers.\nBut I want to split this file in 2 files. I want to rename my routes.go to main.go and create new additional file moduleX.go (package routes).\nHow can I do that?\nI want to store all my routes in multiple files of the same \"package routes\".", "\n\n", "\n", "\n", "\n", "package routes\n\nimport (\n    \"github.com/gorilla/mux\"\n    \"net/http\"\n    \"github.com/---/001/models\"\n    \"github.com/---/001/sessions\"\n    \"github.com/---/001/utils\"\n    \"github.com/---/001/middleware\"\n)\n\nfunc NewRouter() *mux.Router {\n    r := mux.NewRouter()\n    r.HandleFunc(\"/\", middleware.AuthRequired(indexGetHandler)).Methods(\"GET\")\n    r.HandleFunc(\"/\", middleware.AuthRequired(indexPostHandler)).Methods(\"POST\")\n    r.HandleFunc(\"/signup\", signupGetHandler).Methods(\"GET\")\n    r.HandleFunc(\"/signup\", signupPostHandler).Methods(\"POST\")\n    r.HandleFunc(\"/signin\", signinGetHandler).Methods(\"GET\")\n    r.HandleFunc(\"/signin\", signinPostHandler).Methods(\"POST\")\n    r.HandleFunc(\"/signout\", signoutGetHandler).Methods(\"GET\")\n    r.HandleFunc(\"/services\", middleware.AuthRequired(servicesHandler)).Methods(\"GET\")\n    fs := http.FileServer(http.Dir(\"./static/\"))\n    r.PathPrefix(\"/static/\").Handler(http.StripPrefix(\"/static/\", fs))\n    return r\n}", "\n", "\n\n", "\n", "\n\n", "I want move all \"/signup\" and \"/signin\" routes and handlers outside of this main file. And then somehow to pass them back to this NewRouter function.\nYou can provide me just a book or some online example.", "\n\n", "</div>\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;对方给你发数据的话&amp;#xff0c;量小直接走接口&amp;#xff0c;量大就走MQ&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["分别独立的两个springboot项目，如何通过restful风格的webservice进行沟通？", ["比如别人的项目A想要向我的项目B定期发送数据，那么项目B作为接受方应该怎么实现？", "\n", "这是我的接受方项目B，使用了restful风格，现在是可以实现和前端VUE项目进行数据交互，但和别人的spring boot项目应该怎么通信呢？", "\n", "下面这种是另一种风格实现了接口的开放，如果想用restful来实现相似功能，应该怎么实现呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为在Blank类的初始化函数里&amp;#xff0c;content &amp;#61; StringVar() 相当于是一个常量&amp;#xff0c;每个Blank实例如果不指定content实参&amp;#xff0c;都会默认指向同一个StringVar实例。&lt;br /&gt;如果你在传参的时候创建StringVar()实例就没这个问题了。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attr\"&gt;name_blk&lt;/span&gt; &amp;#61; Blank(&lt;span class=\"hljs-string\"&gt;&amp;#39;姓名&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,StringVar())\n&lt;span class=\"hljs-attr\"&gt;age_blk&lt;/span&gt; &amp;#61; Blank(&lt;span class=\"hljs-string\"&gt;&amp;#39;年龄&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,StringVar())\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["用tkinter制作填空项目，为什么本来应该各自独立的空格却显示同样的内容？", ["我需要实现这个功能：当在空格填入任何内容后，自动把空格的内容更新到一个字典里。", "\n", "我用面向编程思路编写，运行正常，达到我的目的。", "\n", "from", " tkinter ", "import", " *\n", "from", " tkinter.ttk ", "import", " *\n\n", "# 新建窗口", "\nroot = Tk()\n\n", "# 默认数据", "\nname = ", "'张三'", "\nage = ", "'40'", "\nrecord = {", "'姓名'", ": name, ", "'年龄'", ": age}\n\n\n", "def", " ", "refresh_name", "(", "self, *args", "):\n    ", "'''\n    更新字典里的名字\n    '''", "\n    record[", "'姓名'", "] = content_name.get()\n    ", "print", "(record)\n\n", "def", " ", "refresh_age", "(", "self, *args", "):\n    ", "'''\n    更新字典里的年龄\n    '''", "\n    record[", "'年龄'", "] = content_age.get()\n    ", "print", "(record)\n\n", "# 新建姓名标签与空格", "\nLabel(root, text=", "'姓名'", ").grid(pady=", "10", ", row = ", "1", ", column = ", "1", ", sticky = E)\ncontent_name = StringVar()\ncontent_name.", "set", "(record[", "'姓名'", "])\ncontent_name_blk = Entry(root, textvariable = content_name, width = ", "10", ")\ncontent_name_blk.grid(pady=", "10", ", row = ", "1", ", column = ", "2", ", sticky = W)\ncontent_name_blk.bind(", "'<KeyRelease>'", ", refresh_name)  ", "# 当输入文字后更新字典", "\n\n", "# 新建年龄标签与空格", "\nLabel(root, text=", "'年龄'", ").grid(pady=", "10", ", row = ", "1", ", column = ", "3", ", sticky = E)\ncontent_age = StringVar()\ncontent_age.", "set", "(record[", "'年龄'", "])\ncontent_age_blk = Entry(root, textvariable = content_age, width = ", "10", ")\ncontent_age_blk.grid(pady=", "10", ", row = ", "1", ", column = ", "4", ", sticky = W)\ncontent_age_blk.bind(", "'<KeyRelease>'", ", refresh_age)  ", "# 当输入文字后更新字典", "\n\n\nroot.mainloop()\n", "\n", "但是当我用面向对象思路编写后，2个空格的内容居然同步了，而且当我在其中一个空格填写时，另外一个空格也跟着一起刷新相同的内容。", "\n", "from", " tkinter ", "import", " *\n", "from", " tkinter.ttk ", "import", " *\n\n", "# 新建窗口", "\nroot = Tk()\n\n", "# 默认数据", "\nname = ", "'张三'", "\nage = ", "'40'", "\nrecord = {", "'姓名'", ": name, ", "'年龄'", ": age}\n\n\n", "class", " ", "Blank", ":\n    ", "'''\n    新建填空类，由标签和空格2部分组成。功能：每输入一个字，自动更新record字典。\n    '''", "\n    ", "def", " ", "__init__", "(", "self, name, row, column, content = StringVar(", ")", "):\n        self.name = name  ", "# 标签名", "\n        self.row = row\n        self.column = column\n        Label(root, text=self.name).grid(pady=", "10", ", row = self.row, column = self.column, sticky = E)  ", "# 新建标签", "\n        self.content = content\n        self.content.", "set", "(record[self.name])  ", "# 根据record字典填入空格内容", "\n        a = Entry(root, textvariable = self.content, width = ", "10", ")  ", "# 新建空格，自动填写空格内容", "\n        a.grid(pady=", "10", ", row = self.row, column = self.column + ", "1", ", sticky = W)\n        a.bind(", "'<KeyRelease>'", ", self.refresh)  ", "# 当输入文字后更新字典", "\n    ", "def", " ", "refresh", "(", "self, *args", "):\n        ", "'''\n        更新字典\n        '''", "\n        record[self.name] = self.content.get()\n        ", "print", "(record)\n\n\nname_blk = Blank(", "'姓名'", ", ", "1", ", ", "1", ")\nage_blk = Blank(", "'年龄'", ", ", "1", ", ", "3", ")\n\n\nroot.mainloop()\n\n", "\n", "Blank类生成的对象应该是独立的，为什么空格显示的内容会同步，而字典里却又按照各自的不同变量显示呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果说图片太大了&amp;#xff0c;是否上传图片这一块耗时比较长呢&amp;#xff0c;你用eclipse调试的时候应该是直接读取的磁盘上的文件&amp;#xff0c;而发布到服务器的话&amp;#xff0c;应该是客户用前端上传的图片&amp;#xff0c;上传这一块耗时应该也是存在的&amp;#xff0c;再其次Thumbnails对图片的压缩也是比较耗时&amp;#xff0c;可以优化下&amp;#xff0c;图片在什么情况下才压缩&amp;#xff0c;或者在前端控制下&amp;#xff0c;图片上传的大小&amp;#xff0c;至于阿里接口处理时间&amp;#xff0c;你可以单独去监控下&amp;#xff0c;接口返回时间&amp;#xff0c;并且ocr文字识别的话&amp;#xff0c;应该对图片也是有要求的&amp;#xff0c;压缩后的图片清晰度不太行的话&amp;#xff0c;阿里这边处理的时间是否相同呢&amp;#xff0c;建议看看 在相同图片&amp;#xff0c;相同逻辑下监控下&amp;#xff0c;tomcat服务下阿里接口处理时间和eclipse调试下阿里处理时间 是否相同&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["tomcat独立部署项目后调用阿里的图片转文字接口特别慢（Windows环境）", ["为什么我用tomcat部署到别人的服务上调用接口特别慢，但是在他们服务器上使用eclipse启动调用这个接口就很快"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建议将需要交叉部分的函数单独写一个文件&amp;#xff0c;然后其他文件使用的时候就都包含这个头文件就好了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["程序设计中如何避免头文件循环包含？", ["如题，写小组zy时几个人分别写了程序的仓库管理部分，资金管理部分，登录系统和商品购买系统。本来打算四个部分搞成四个头文件，然后主cpp文件包含这四个头文件。问题是商品购买系统需要资金管理部分的函数，资金管理部分需要商品购买系统的函数，这样两个头文件就循环包含了，结果编译失败。虽然把四个部分全整合到一个头文件中可以解决问题，但我认为那样破坏了系统间的独立性，有什么更好的办法解决这个问题吗？一般的程序开发过程中是如何避免这个问题的呢？"]], "Tag": "算法设计"}
{"Answer": "可以啊，直接调用其中的函数就可以了。但是这种情况没必要绕一个圈子。没有这个应用场景。", "Konwledge_Point": "树中的独立集", "Question": ["function object的一些问题", ["function object是不是只能作为一些函数（比如sort之类的）的参数来用于比较？", "\n不能独立为一个函数，比如bind1st绑定之后能不能直接和一个数去比较了呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_student&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id; &lt;span class=\"hljs-comment\"&gt;//学号&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; name[&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n}Student;\n\n&lt;span class=\"hljs-comment\"&gt;//输入&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Student a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个学生的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i].id);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个学生的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, a[i].name);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个学生的年龄&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i].age);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;录入完毕&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;output&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Student a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; ave &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        ave &amp;#43;&amp;#61; a[i].age;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i].age &amp;lt; a[min].age)\n            min &amp;#61; i;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;平均年龄&amp;#xff1a;%.2f\\n&amp;#34;&lt;/span&gt;, ave / n);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;年龄最小的学生信息&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号&amp;#xff1a;%d,姓名&amp;#xff1a;%s,年龄&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;, a[min].id, a[min].name, a[min].age);\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Student a[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(a, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;output&lt;/span&gt;(a, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["c设计一个保存学生情况的结构,学生情况包括姓名,学号,年龄,输入五个学生的情况,输出学生的平均年龄和年龄最小的学生情况,要求输入和输出分别编写独立的函数input和output", ["设计一个保存学生情况的结构,学生情况包括姓名,学号,年龄,输入五个学生的情况,输出学生的平均年龄和年龄最小的学生情况,要求输入和输出分别编写独立的函数input和output"]], "Tag": "算法设计"}
{"Answer": "循环的时候从集合里面找个变量当id或name，用id或name隐藏显示就行。", "Konwledge_Point": "树中的独立集", "Question": ["c:foreach循环出多个div如何控制单个div的显示隐藏", ["<c:forEach items=\"${requestScope.newList}\" var=\"newList\">\n                                <!--消息 -->\n                                <div class=\"s-msg-item s-msg-temp i-msg-downup conceal1\">\n                                    <h6 class=\"s-msg-bar\"><span class=\"s-name\">每日新闻</span></h6>\n                                    <div class=\"s-msg-content i-msg-downup-wrap\">\n                                        <div class=\"i-msg-downup-con\">\n                                            <a class=\"i-markRead\" target=\"_blank\"\n                                               href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                <img src=\"/static/images/${newList.pic}\">\n                                                <p class=\"s-main-content\">\n                                                        ${newList.activityTitle}\n                                                </p>\n                                                <p class=\"s-row s-main-content\">\n                                                    <a href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                        阅读全文 <i class=\"am-icon-angle-right\"></i>\n                                                    </a>\n                                                </p>\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <a class=\"i-btn-forkout conceal\" ref=\"${newList.id}\" href=\"javascript:;\"><i class=\"am-icon-close am-icon-fw\"></i></a>\n                                </div>\n                                </c:forEach>\n\n", "\n\n", "jQuery代码", "\n\n", "\n    $(function () {\n        $(document).ready(function(){\n            $(\".conceal\").click(function(){\n                $(\".conceal1\").hide();\n            });\n        });\n        });\n", "\n\n", "修改后：", "\n\n", "  <c:forEach items=\"${requestScope.newList}\" var=\"newList\">\n                                <!--消息 -->\n                                <div class=\"s-msg-item s-msg-temp i-msg-downup conceal1\" id=\"${newList.id}\" onclick=hide(this)>\n                                    <h6 class=\"s-msg-bar\"><span class=\"s-name\">每日新鲜事</span></h6>\n                                    <div class=\"s-msg-content i-msg-downup-wrap\">\n                                        <div class=\"i-msg-downup-con\">\n                                            <a class=\"i-markRead\" target=\"_blank\"\n                                               href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                <img src=\"/static/images/${newList.pic}\">\n                                                <p class=\"s-main-content\">\n                                                        ${newList.activityTitle}\n                                                </p>\n                                                <p class=\"s-row s-main-content\">\n                                                    <a href=\"/person/mynest/blog?blog=${newList.id}\">\n                                                        阅读全文 <i class=\"am-icon-angle-right\"></i>\n                                                    </a>\n                                                </p>\n                                            </a>\n                                        </div>\n                                    </div>\n                                    <a class=\"i-btn-forkout conceal\" ref=\"${newList.id}\" href=\"javascript:;\"><i class=\"am-icon-close am-icon-fw\"></i></a>\n                                </div>\n                                </c:forEach>\n", "\n\n", "JS", "\n\n", " function hide(obj){\n        $(obj).toggle();\n    }\n", "\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;简单来讲&amp;#xff0c;可以有两种方式来实现&amp;#xff1a;&lt;br /&gt;1、网页前端使用一个定时器去后台轮询&amp;#xff0c;请求数据&amp;#xff0c;当有新数据时&amp;#xff0c;就在网页上展示更新。&lt;br /&gt;2、使用websocket技术&amp;#xff0c;在后台讲新数据推送到前端来。&lt;br /&gt;以上这两种技术都是可以的&amp;#xff0c;流量不大&amp;#xff0c;可以选择1&amp;#xff0c;流量大或者考虑性能&amp;#xff0c;建议用2&lt;br /&gt;希望可以帮到您。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何在Shopify的页面中实现实时显示数据(语言-javascript)", ["目前刚起步做独立站，因为需要将销售所得中的一部分给慈善机构捐赠，而Shopify要求将捐赠款项及证明透明公开化，想着直接在站内加入一个页面负责实时更新我做的捐赠，但是现在不知道需要哪一方面的技术支持，所以舔着脸来这里问问各位牛人指点迷津"]], "Tag": "算法设计"}
{"Answer": "49是字符串1的acsic码的值", "Konwledge_Point": "树中的独立集", "Question": ["字符串存储在字符指针中遇到的问题", ["用一个结构体", "\n\n", "存储算式中的每一个独立标志", "\n如：算式“123+5*6”   那么就依次将123、+、5、*、6分别存储在每一个RPNNode的token中。", "\n初始化为", "\n\n", "运行程序", "\n\n", "调用函数", "\n\n", "函数中再调用函数", "\n\n", "然后运行程序时总是报错，设置了断点并调试结果如下", "\n\n", "按正常来说pstr[i]的值应该为“1”，为什么会是\"49'1'\"呢？49是怎么回事，求大神解答"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;map&amp;lt;string, string&amp;gt; &lt;span class=\"hljs-title\"&gt;fun1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string* p_str)&lt;/span&gt;&lt;/span&gt;;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n\n    string str;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入字符串&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(cin,str);\n\n    map&amp;lt;string, string&amp;gt; maps;\n    maps &amp;#61; &lt;span class=\"hljs-built_in\"&gt;fun1&lt;/span&gt;(&amp;amp;str);\n\n    map&amp;lt;string, string&amp;gt;::iterator iter &amp;#61; maps.&lt;span class=\"hljs-built_in\"&gt;begin&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (iter !&amp;#61; maps.&lt;span class=\"hljs-built_in\"&gt;end&lt;/span&gt;()) {\n        cout &amp;lt;&amp;lt; iter-&amp;gt;first &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; iter-&amp;gt;second &amp;lt;&amp;lt; endl;\n        iter&amp;#43;&amp;#43;;\n    }\n\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n\n&lt;span class=\"hljs-function\"&gt;map&amp;lt;string,string&amp;gt; &lt;span class=\"hljs-title\"&gt;fun1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string* p_str)&lt;/span&gt; &lt;/span&gt;{\n    string temp &amp;#61; *p_str;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; temp.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(); i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ( (temp[i] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; temp[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;) || ( temp[i] &amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; temp[i] &amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt; ) ) {\n            sum&amp;#43;&amp;#43;; &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (temp[i] &amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; temp[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;) {\n            sum&amp;#43;&amp;#43;; &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        }\n        sum&amp;#43;&amp;#43;;\n    }\n    \n    map&amp;lt;string,string&amp;gt; maps;\n    maps.&lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;pair&lt;/span&gt;&amp;lt;string,string&amp;gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;英文字符&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;));\n    maps.&lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;pair&lt;/span&gt;&amp;lt;string, string&amp;gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数字字符&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;));\n    maps.&lt;span class=\"hljs-built_in\"&gt;insert&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;pair&lt;/span&gt;&amp;lt;string, string&amp;gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;其它字符&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;));\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; temp.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(); i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; ((temp[i] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; temp[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;) || (temp[i] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; temp[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;)) {\n            string value &amp;#61; maps[&lt;span class=\"hljs-string\"&gt;&amp;#34;英文字符&amp;#34;&lt;/span&gt;];\n            maps[&lt;span class=\"hljs-string\"&gt;&amp;#34;英文字符&amp;#34;&lt;/span&gt;] &amp;#61; value &amp;#43; temp[i];\n            &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (temp[i] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; temp[i] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;) {\n            string value &amp;#61; maps[&lt;span class=\"hljs-string\"&gt;&amp;#34;数字字符&amp;#34;&lt;/span&gt;];\n            maps[&lt;span class=\"hljs-string\"&gt;&amp;#34;数字字符&amp;#34;&lt;/span&gt;] &amp;#61; value &amp;#43; temp[i];\n            &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        }\n        string value &amp;#61; maps[&lt;span class=\"hljs-string\"&gt;&amp;#34;其它字符&amp;#34;&lt;/span&gt;];\n        maps[&lt;span class=\"hljs-string\"&gt;&amp;#34;其它字符&amp;#34;&lt;/span&gt;] &amp;#61; value &amp;#43; temp[i];\n        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; maps;\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["编写一个函数，把字符串中的数字字符、英文字母字符和其它字符分开。", ["编写一个函数，把字符串中的数字字符、英文字母字符和其它字符分开。如对于字符串“12a:?3b", "yu98!”，将其分解为三个独立的字符串“12398”、“abyu”和“:?", "!”。要求主函数输入原字符串，分解后的三个字符串在主函数打印输出。"]], "Tag": "算法设计"}
{"Answer": "ApplicationContextAware 在容器初始化完成后将ApplicationContext注入， 如果你只读ApplicationContext 肯定是线程安全的。", "Konwledge_Point": "树中的独立集", "Question": ["Spring中通过ApplicationContextAware的实现类获得的ApplicationContext是线程安全的吗？", ["项目中我需要根据登陆用户动态修改Spring的数据源配置，即通过实现ApplicationContextAware接口来获取ApplicationContext，并将用户对应的数据源bean覆盖这个ApplicationContext的数据源bean。在多线程的情况下，是否会发生同步问题？Spring是否做到了每个线程持有独立的一份ApplicationContext，或者说我通过实现ApplicationContextAware而获得的ApplicationContext是否经过了ThreadLocal的封装优化？"]], "Tag": "算法设计"}
{"Answer": "按照LZ所说，Hibernate目前好像没有一个完美的方式来解决LZ的问题。\r\n通常需要建立其他对象来对应单表或者单表中的部分，然后通过继承、内部类的方式来解决问题。\r\n\r\n当然，如果一定要不建立新的对象来对应其他表，通过formula可以来在一个Model对象中引用其他表的字段，这种只适用于部分字段，并且只是用来查询，无法执行持久化。\r\n\r\n举例：\r\n两个表:人员，部门\r\nUSER(id,username,deptid)\r\nDEPARTMENT(id,deptname)\r\n\r\n两个MODEL:User,Department\r\n如果要在User对象中增加deptmentname变量，可以通过formula来解决：\r\n\r\n\r\npublic class User{\r\n   private Integer id;\r\n   private String username;\r\n   private String deptname;\r\n   .....\r\n   .....\r\n   @Formula(\"(select a.deptname from Department a where a.id=deptid)\") \r\n   public String getDeptName() {\r\n\t\treturn deptame;\r\n   }\r\n\r\n}", "Konwledge_Point": "树中的独立集", "Question": ["Hibernate中如何实现一个model和多个表关联", ["RT, 如何能不创建额外的对象的前提下,把一个对象拆到多个表中?", "\n[b]问题补充：[/b]", "\n示例model", "\n[code=\"java\"]", "\npublic class ModelA{", "\n    private long id;", "\n    private String description = \"\";", "\n    private String title = \"\";", "\n    .....", "\n\n", "}", "\n[/code]", "\n\n", "现在想把description独立到另外的表中,如何修改映射文件", "\n[code=\"java\"]", "\n\n", "    <property name=\"description\" type=\"java.lang.String\">\n        <column name=\"description\" sql-type=\"MediumBLOB\"/>\n    </property>\n", "\n\n", "[/code]"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;引用作为函数参数&amp;#xff0c;形参就是实参。&lt;br /&gt;你传引用&amp;#xff0c;通过函数改变了你传递的实参的值。&lt;br /&gt;你传值&amp;#xff0c;这个变量是不能出参的&amp;#xff0c;就是你的实参传递进去&amp;#xff0c;并没有从函数中传递出来&amp;#xff0c;所以猜测此时乱码值就是你变量未初始化时的值。&lt;br /&gt;所以你的形参得改成引用或者指针&amp;#xff0c;另外如果你这里形参确定不被修改&amp;#xff0c;是可以加上const&amp;#xff0c;增加程序的可读性&amp;#xff0c;const &amp;amp;也是常见的参数传递方式&lt;br /&gt;你可以自己写个Demo试试引用作为函数参数的作用。&lt;br /&gt;&lt;a href=\"https://www.cnblogs.com/mylinux/p/4091583.html\" id=\"textarea_1637054913582_1637055015674_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/mylinux/p/4091583.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["问问c++中的引用传递问题", ["Vector是我自己定义的一个顺序数组类，然后v是一个形参，HuffmanTree是个构造函数，这个函数主要的内容就是把v中每个元素变为独立的一个HuffmanTree类后，都赋值给DuList（链表）类上每个结点，", "\n", "\n", "\n", "当我形参前面加引用时，赋值完后，该函数的该实参一切正常,该实参的ch='A',w=2（下面的调试界面）", "\n", "\n", "当我没加引用时，函数结束后，实参的的成员ch和w都变成?,", "\n", "\n", "这是为啥"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1、那肯定是写一个公用的&amp;#xff0c;这样大家就不用重复写了&amp;#xff0c;后面维护起来也方便&amp;#xff0c;只需要改一个地方即可&amp;#xff0c;大大提高了开发效率&amp;#xff1b;&lt;br /&gt;2、如果写多个话&amp;#xff0c;维护麻烦&amp;#xff0c;需要挨个找&amp;#xff0c;有时候会漏掉&amp;#xff1b;&lt;br /&gt;3、如果某一个地方的上传比较特殊&amp;#xff0c;有很多限制&amp;#xff0c;但是对于上传的底层功能是不变的&amp;#xff0c;只需要多一些限制&amp;#xff0c;比如只能上传pdf、大小限制在2M等&amp;#xff0c;这种特殊的只需要单打写个check。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["最近在写一个项目，很多地方要用到上传图片，直接写一个总的上传文件（包含独立的文件数据库表，controller等）这样，还是在各个有用到的地方复制粘贴这个方法啊？", ["最近在写一个项目，很多地方要用到上传图片，直接写一个总的上传文件（包含独立的文件数据库表，controller等）这样，还是在各个有用到的地方复制粘贴这个方法啊？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;yes it does need to be fired from a page on a website (from a html or PHP file).  You can also fire it via a cron job.&lt;/p&gt;\n\n&lt;p&gt;There are lots more details here:\n&lt;a href=\"http://members.dwalker.co.uk/forum/viewtopic.php?f=1&amp;amp;t=919\" rel=\"nofollow\"&gt;http://members.dwalker.co.uk/forum/viewtopic.php?f=1&amp;amp;t=919&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;BTW - hope you like phpjobscheduler, I first created it over 10 years ago:\n&lt;a href=\"http://www.phpjobscheduler.co.uk/demo/readme.html#history\" rel=\"nofollow\"&gt;http://www.phpjobscheduler.co.uk/demo/readme.html#history&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何配置PHP JobScheduler以在预定的时间间隔内执行作业，独立于访问您网站的人", ["\n\n", "I'm using phpjobscheduler to run a JSON fetching php script after every minute. However on its README its stated that it only runs your jobs provided that someone accesses the link to the php file where you have included the job scheduler script. How do I set it so that its scheduling goes on whether or not someone accesses your website?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;写一个BaseService&amp;#xff0c;然后其他所有的service都继承它&amp;#xff0c;抽出来的公共方法用protected修饰&amp;#xff0c;这样只有它的子类可以使用&amp;#xff0c;这种比较简单直观。&lt;br /&gt;更高级一点的写法就是定义interface&amp;#xff0c;然后定义这个公共方法A和其他业务方法&amp;#xff0c;然后写一个抽象类实现interface&amp;#xff0c;只实现这个公共方法A&amp;#xff0c;其他方法不实现&amp;#xff0c;其他所有service都继承这个抽象类并实现其他业务方法&amp;#xff0c;直接调用公共方法A&amp;#xff0c;调用方式就是super.A。如果后续还有别的公共方法B&amp;#xff0c;也好扩展并且代码阅读也比较容易。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["service层有一个可以公用的代码，准备把它抽出来封装成一个方法，但是不知道放哪个包下", ["放util包？它是需要注入dao层bean查询数据库的，即它本身有@Component注解，", "那么不能算是util工具类吧，放util包感觉怪怪的。", "\n", "放service包？它也不能算是一个独立的service吧？感觉也怪", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1.需要看程序&amp;#xff0c;正常的需要调一下css就OK&lt;/p&gt;\n\n&lt;p&gt;2.需要看程序&amp;#xff0c;一般的&amp;#xff0c;加图片就可以&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于vant weapp 框架中tabs样式的修改问题", ["最近在使用vant weapp 搭小程序开发的页面。其中有个标签怎么的搞不好，颜色边框啥的都能改，带还是有几个不知道在哪改效果如下", "\n\n", "\n\n", "问题一：怎么能把标签1234分开来变成独立的一块块的样式", "\n\n", "问题二：怎么在标签1、标签2的前面加一个小图标"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;请看&amp;#x1f449; &amp;#xff1a;&lt;a href=\"https://blog.csdn.net/k3661617/article/details/122187336\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;关于51单片机中的C语言使用及总结&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;你还可以看下c语言参考手册中的 &lt;a href=\"https://zh.cppreference.com/w/c/numeric/math/exp\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;c语言-exp()&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;除此之外, 这篇博客: &lt;a href=\"https://blog.csdn.net/weixin_43431593/article/details/124064129\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;C语言&amp;#xff1a;51单片机看这一篇就够了&lt;/font&gt;&lt;/a&gt;中的 &lt;strong&gt;九、单片机实操七&amp;#xff1a;独立按键控制LED显示二进制&lt;/strong&gt; 部分也许能够解决你的问题, 你可以仔细阅读以下内容或跳转源博客中阅读: &lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;1、在指定路径下创建工程并添加新文件&lt;/p&gt;\n\n&lt;p&gt;2、编写程序&lt;/p&gt;\n\n&lt;p&gt;通过不停的按下按键&amp;#xff0c;使得灯以二进制的方式&amp;#xff0c;不断往上加一&amp;#xff0c;达到用灯来表示按键次数&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include &amp;lt;STC89C5xRC.H&amp;gt;\n\nvoid Delay(unsigned int xms)\t\t//&amp;#64;12.000MHz\n{\n\tunsigned char i, j;\n\twhile(xms)\n\t{\n\ti &amp;#61; 2;\n\tj &amp;#61; 239;\n\tdo\n\t{\n\t\twhile (--j);\n\t} while (--i);\n\txms--;\n\t}\n}\n\nvoid main()\n{\n\tunsigned char LEDNum&amp;#61;0;  // char max num is 255\n\twhile(1)\n\t{\n\tif(P31&amp;#61;&amp;#61;0)\n\t{\n\t\tDelay(20);\n\t\twhile(P31&amp;#61;&amp;#61;0);\n\t\tDelay(20);\n\t\tLEDNum&amp;#43;&amp;#43;;\n\t\tP2&amp;#61;~LEDNum;\n\t}\n\t}\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["c语言和51单片机有关的问题", ["通过独立键盘分别控制四个led灯的亮灭（在一个主函数中实现）。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这个软件不能生成exe的吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Rider怎么打包exe分发给别人", ["我在使用Jetbrains Rider来编写C#程序，然后我完成了一个WinForms窗体应用。现在我已经做好了所有的窗体以及代码，准备传到网上供别人下载，但是我在网上查找Rider怎么把做好的软件打包成一个独立的exe的时候，我没找到，所以提一个问题。如果说原版的dotnet指令里面就有打包的指令的话，能告诉我一下么？谢谢！", "我知道用Visual Studio有一个打包的功能，但是我用Rider习惯了，不想来回切换。", "有人能够帮帮忙解决这个问题么？？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;K折交叉验证每次训练都是独立的&amp;#xff0c;这样取平均才有意义。&lt;/p&gt;\n&lt;p&gt;你说的上一次训练的基础上是xgboost模型本身特点&amp;#xff0c;和交叉验证没有关系的。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["xgboost的k折交叉验证训练的问题", ["k折交叉验证训练中，k次训练相关独立还是每次训练在上一次训练的基础上？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以用&lt;code class=\"language-javascript\"&gt;taskset -c&lt;/code&gt;来指定进程的cpu affinity。比如下面命令就是让a.out, b.out, c.out, d.out分别在cpu的&amp;#xff14;个核里运行。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-variable\"&gt;$ &lt;/span&gt;taskset -c &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; a.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt; &amp;amp;\n&lt;span class=\"hljs-variable\"&gt;$ &lt;/span&gt;taskset -c &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; b.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt; &amp;amp;\n&lt;span class=\"hljs-variable\"&gt;$ &lt;/span&gt;taskset -c &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; c.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt; &amp;amp;\n&lt;span class=\"hljs-variable\"&gt;$ &lt;/span&gt;taskset -c &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; d.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt; &amp;amp;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["ubuntu中给多个.out文件各分配一个核同时运行", ["假设系统有4个核，我编写了4个独立的.cpp文件，编译后生成4个独立的.out文件，如何给这4个.out文件各分配一个核让它们同时运行"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; tar[&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; art[&lt;span class=\"hljs-number\"&gt;100005&lt;/span&gt;];\n    cin.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(tar,&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;);\n    cin.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(art,&lt;span class=\"hljs-number\"&gt;100005&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(art);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m&amp;#61;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(tar);\n    &lt;span class=\"hljs-comment\"&gt;//先统一转小写&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(art[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;art[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;)art[i]&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(tar[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&amp;amp;&amp;amp;tar[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;)tar[i]&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,count&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j,k;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-comment\"&gt;//不是第一个字母或前面没空格&amp;#xff0c;不用比较&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;amp;&amp;amp;art[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)&lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n        j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        k&amp;#61;i;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(tar[j&amp;#43;&amp;#43;]&amp;#61;&amp;#61;art[k&amp;#43;&amp;#43;]&amp;amp;&amp;amp;j&amp;lt;m){}\n        &lt;span class=\"hljs-comment\"&gt;//找到相同的&amp;#xff0c;并且后面是空格或者是最后一个字母&amp;#xff0c;则是一样的单词&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;#61;&amp;#61;m &amp;amp;&amp;amp; (art[k]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;||k&amp;#61;&amp;#61;n)){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(f&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)f&amp;#61;i;\n            count&amp;#43;&amp;#43;;\n            i&amp;#61;k&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(count&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,count,f);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["找单词 (Language:C++)", ["Description", "给定一个单词及一段文章作为输入，请你编程输出这个单词在文章中出现的次数，和单词第一次出现时首字母位于文章中的位置（文章中第一个字符位置为 0，第二个字符位置为1，依此类推，字符包含空格)。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须是文章中独立的单词，不能是某个单词中的一部分。例如：to 和 tomato 不能匹配。", "\n", "Input", "第 1 行为一个字符串，其中只含字母，表示给定单词(1≤字符串长度≤10)第 2 行为一个字符串，其中只包含字母和空格，表示给定的文章(1≤ 文章长度≤100000)。", "\n", "Output", "如果在文章中找到给定单词则输出两个整数，分别是单词在文章中出现的次数和第一次出现的位置，两个整数之间用一个空格隔开。如果单词在文章中没有出现，则直接输出一个整数-1。", "\n", "Sample Input", "To", "to be or not to be is a question", "\n", "Sample Output", "2 0"]], "Tag": "算法设计"}
{"Answer": "首先不要用面向对象的思考方式去看js\r\n因为js是偏向函数式语言的。\r\n因此所谓的基本类型和引用类型只是为了类比java等语言而来的东东。\r\n\r\njs中是函数当道，比如这个Number他实际上是一个函数名字，不是类型的概念。\r\n函数和普通的变量都是对象。（具有属性和方法的封装体)\r\njs中的“继承”是通过原型链完成的。\r\n基本类型就是这个链条的末端。如同一棵树的叶子节点。\r\n\r\n记住js中没有类型的概念。\r\n只有对象。\r\n这才是动态性的真谛。\r\n下面为了描述方便成为类型\r\n\r\n比如Number和 var a=3\r\nNumber是函数名字，也是一个函数对象\r\n这个变量a所谓的“基本类型”就是从Number的原型来的\r\nNumber.prototype\r\n\r\n所以基本类型就是  该变量对应的上层函数的prototype\r\n\r\n比如  数字123  它的类型是  Number.prototype\r\n         字符串   他的类型是  String.prototype\r\n\t\t\t\t数组   他的类型是  Array.prototype\r\n\t\t\t\t\r\n\t\t\t\t等等。\r\n但是上面的Number,String等都是函数，不是类型哦\r\n\r\n下面的例子可以看出基本类型也可以有方法的所以不要用java的观点去看\r\n比如 a=123\r\n让a可以调用一个toString()方法打印出  [123]来\r\n使用nodejs平台进行试验：下面方法中的this就是我们的叶子的值，看到this你还认为他是简单的基本类型吗？\r\n```javascript\r\n Number.prototype.toString = function(){\r\n    console.log(\"[\"+this+\"]\");\r\n  }\r\n\tvar a = 123;\r\n\ta.toString();\r\n```\r\n从上面可以看出基本类型也是可以有方法的。\r\n可以通过原型来扩充方法\r\n那么他和所谓的引用类型又有多大的区别呢？\r\n\r\n记住一切都是函数\r\n这些常见的值都是函数生成的对象\r\n没有类型只说", "Konwledge_Point": "树中的独立集", "Question": ["javascript中基本类型和引用类型的关系是什么？", ["他们是谁包含谁的关系，还是相互独立的关系？", "\n为什么说Number 对象是 Number 原始类型的引用类型？"]], "Tag": "算法设计"}
{"Answer": "indexed是决定 你的content是否在solr中建立索引，也就是是否分词，而 stored的意思是 你是否要将该字段以及所对应的值存储到solr服务器", "Konwledge_Point": "树中的独立集", "Question": ["solr中 field的 indexed是什么意思 ", ["在网上查，介绍indexed为fasle时，此属性就不参与查询。", "\n\n", "可是我的代码如下：", "\n\n", "<field name=\"content\" type=\"string\" indexed=\"false\" required=\"true\" stored=\"true\"/>\n", "\n\n", "查询时参数为：", "\n        query = new SolrQuery();", "\n    query.setQuery(\"content:它对外提供类似于Web-service的API接口\");", "\n\n", "待查询数据：", "\n{", "\n        \"id\":\"10\",", "\n        \"content\":\"Solr是一个独立的企业级搜索应用服务器\",", "\n        \"_version_\":1549166342956908544},", "\n      {", "\n        \"id\":\"11\",", "\n        \"content\":\"它对外提供类似于Web-service的API接口\",", "\n        \"_version_\":1549166342988365824},", "\n      {", "\n        \"id\":\"12\",", "\n        \"content\":\"用户可以通过http请求\",", "\n        \"_version_\":1549166342988365825},", "\n      {", "\n        \"id\":\"13\",", "\n        \"content\":\"向搜索引擎服务器提交一定格式的XML文件生成索引\",", "\n        \"_version_\":1549166342989414400},", "\n      {", "\n        \"id\":\"14\",", "\n        \"content\":\"也可以通过Http Get操作提出查找请求\",", "\n        \"_version_\":1549166342990462976},", "\n      {", "\n        \"id\":\"15\",", "\n        \"content\":\"并得到XML格式的返回结果\",", "\n        \"_version_\":1549166342990462977}]", "\n  }", "\n\n", "查询结果为：\n{\n    \"id\":\"11\",\n    \"content\":\"它对外提供类似于Web-service的API接口\",\n    \"_version_\":1549166342988365824}]\n", "\n\n", "为什么还能检索出来呢？是我理解的不对么？indexed到底是什么意思呢？"]], "Tag": "算法设计"}
{"Answer": "只要都是同一个组织来访问这些系统和软件的话，完全可以采用sso来实现单点登录\r\n\r\n只要一种权限模块就搞定所有的系统权限问题", "Konwledge_Point": "树中的独立集", "Question": ["对于SSO大家有什么想法吗？", ["如题，看看各位在开发的时候都是怎么处理的？", "问题补充", "最近一直在考虑一个问题，现在很多ERP软件、OA软件，上面罗列了一大堆功能，比如什么人事管理系统、客户关系、行政等等吧，然后通过权限来控制访问级别。", "我个人一直信奉简单的原则，觉得这些系统其实都可以拆分成独立的系统，和管理体系也匹配，体现出什么部门做什么业务，为了避免频繁登陆，本着以用户为本的精神，采用SSO来进行控制，这就是对上面的问题一个想法初衷。望各位斑竹能给出指点。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;数组&amp;#xff1a;&lt;br /&gt;int[] i &amp;#61; {12,0,-34,9,0,-53,9,99,0,0};&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么用int去定义n个整数，求解", ["题目描述", "统计一组数中负数、零、正数的个数。", "\n", "输入描述", "第一行是一个整数n，第二行是n个整数", "\n", "输出描述", "在一个独立的行中输出n个整数中负数、零、正数的个数，其中的标点为中文标点。", "\n", "输入样例", "10", "12 0 -34 9 0 -53 9 99 0 0", "\n", "输出样例", "负数：2，零：4，正数：4"]], "Tag": "算法设计"}
{"Answer": "如果这两个方法你是写在一个Bean里面的开启事物是REQUIRED，那调用还是REQUIRED，你可以吧REQUIRES_NEW的方法写的另一个service\r\n中。这样才能自治。同时，spring默认是对unchecked事物回滚的。", "Konwledge_Point": "树中的独立集", "Question": ["Spring 事务嵌套问题 Propagation.REQUIRES_NEW", [" @Transactional(propagation=Propagation.REQUIRED)\n    public void insertEmploye(Employe emp) {\n        this.getSqlSession().insert(\"insert\", emp);\n        this.updateDep(emp);\n        throw new Exception(\"My Exception\");\n    }\n\n    @Transactional(propagation=Propagation.REQUIRES_NEW)\n    public void updateDep(Employe emp){\n        this.getSqlSession().update(\"updateCount\", emp);\n    }\n", "\n\n", "请问为什么updatedCount没有更新  Propagation.REQUIRES_NEW 不是启动新的事务 隔离外围的吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;a href=\"http://www.exeoutput.com/\" rel=\"nofollow\"&gt;http://www.exeoutput.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This will make your php  website as an executable files &lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如果我想将PHP / MySQL“测验”应用程序迁移到独立项目，我应该使用什么方法？  [关闭]", ["\n\n", "I developed a PHP / MySQL based testing engine for studying purposes.  I want to migrate this functionality to a standalone application for things that cannot be published on the web publicly.", "\n\n", "Overall, I am very fluent with PHP as a language and feel very comfortable working with it.  Can any of you suggest what some of the easier development paths are to choose from?  I thought about C#, but I think that may be overkill for what I want to do, in addition to the learning curve of the language coming from PHP (namespaces, public / private functions, etc).", "\n\n", "tl;dr :  What's the easiest language to write a standalone windows application in if you are already familiar with PHP?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以做到&amp;#xff0c;使用thread里面的event函设置等待事件&amp;#xff0c;比如说在一个线程&amp;#xff08;一个游览器&amp;#xff09;完成点击事件后设置一个等待&amp;#xff08;event().wait()&amp;#xff09;&amp;#xff0c;只有在全部完成后才能进行下一步&amp;#xff0c;这儿要在主线程里面设置一个判断&amp;#xff0c;判断所有线程的点击事件是否都完成&amp;#xff0c;完成后使用event().set()放开拦截&amp;#xff0c;线程继续运行&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python selenium 多开浏览器能够同步做一样的动作吗", ["在使用selenium多开浏览器(同chrome多个),", "但每个网页加载的时间尽不相同", "所以操作下一步时每个开始的时间不一样", "我想问能不能让前面做完某步的浏览器等全部浏览器跑完再一起进行下一步", "ex: 第一个网页点完按钮,等待2,3...n个浏览器都点完按钮在执行点下一个按钮的动作。", "我的代码示例如下", "\n", "from datetime import datetime\nfrom selenium import webdriver\nimport threading\nfrom multiprocessing import Queue\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.wait import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions ", "as", " EC\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.chrome.service import Service\nfrom selenium.webdriver.chrome.options import Options\n\ndef selenium", "_mult()", ":\n    chrome_options = ", "Options()", "\n    chrome_options.add", "_argument(", "\"--headless\"", ")", " \n    ser=", "Service('.", "/", "chromedriver", "')", "\n    driver = webdriver.", "Chrome(", "service", " = ", "ser", ",", "options", "=", "chrome_options", ")", "\n    driver.set", "_window_size(540,480)", "\n    driver.get('https:/website') \n\n    ", "WebDriverWait(", "driver", ",10,1)", ".until(", "EC", ".", "visibility", "_of_element_located((By.XPATH, '", "/", "/", "*", "[@", "id", "=", "\"btn\"", "]", "/", "div", "/", "div", "[3]", "/", "button", "[1]')", ")) \n    driver.find", "_element(By.XPATH, '", "/", "/", "*", "[@", "id", "=", "\"btn\"", "]", "/", "div", "/", "div", "[3]", "/", "button", "[1]')", ".click", "()", "  #click button ", "1", "\n    Ftime = datetime.now", "()", "\n\n    ", "WebDriverWait(", "driver", ",30,1)", ".until(", "EC", ".", "visibility", "_of_element_located((By.XPATH, '", "/", "/", "*", "[@", "id", "=", "\"btn\"", "]", "/", "div", "/", "div", "[2]", "/", "div", "[1]", "/", "div", "[6]", "/", "div", "')", ")) \n    driver.find", "_element(By.XPATH, '", "/", "/", "*", "[@", "id", "=", "\"btn\"", "]", "/", "div", "/", "div", "[2]", "/", "div", "[1]", "/", "div", "[6]", "/", "div", "')", ".click", "()", " #click button ", "2", "\n\n", "if", " __name__", " == ", "'__main__':\n    ", "for", " i ", "in", " range(", "5", "):\n        t = threading.", "Thread(", "target", "=", "selenium_mult", ")", "\n        t.start", "()", "\n    \n\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/dingpc/article/details/119348690\" id=\"textarea_1647589733388_1647589748506_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;C# Visual Studio 打包程序为单个可执行exe_dingpc的博客-CSDN博客_c#打包成单个exe&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;文章目录前言一、Nuget二、Fody及Costura.Fody三、打包exe前言基本都是做的asp.net开发&amp;#xff0c;很少写窗口程序&amp;#xff0c;最近有需要&amp;#xff0c;写了一个发现&amp;#xff0c;除了exe文件还要带一堆dll文件才能运行。怎样才能打包成单独的绿色的执行文件呢&amp;#xff1f;本文介绍了如果在VS中使用Costura.Fody进行打包。我电脑安装的VS2010&amp;#xff0c;够老吧&amp;#xff0c;这么老的版本能够用上Nuget&amp;#xff0c;着实得折腾一番。一、NugetNuGet&amp;#xff08;发音&amp;#xff1a;New-Get&amp;#xff09;是一个 Visual Stud...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/dingpc/article/details/119348690&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;这是打包成单个exe的方法&amp;#xff0c;按图索骥&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["visual studio2019如何生成一个exe应用程序，不是打包。", ["visual studio2019如何生成一个exe应用程序，不是打包。", "就是把所有的文件都编辑到一个exe中就能打开的那种。", "WinForm   程序中有附加的dll和STL文件。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这样吗&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/666734782266159.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;names &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#34;李华&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;王二&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;小花&amp;#34;&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;words&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#34;你好0&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#xff0c;你在哪个城市&amp;#xff1f;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#xff0c;你喜欢花吗&amp;#xff1f;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;再见&amp;#xff0c;0&amp;#34;&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; name &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; names:\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;word&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;words&lt;/span&gt;:\n        message &amp;#61; &lt;span class=\"hljs-built_in\"&gt;word&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;replace&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, f&lt;span class=\"hljs-string\"&gt;&amp;#39;{name}&amp;#39;&lt;/span&gt;)\n        print(message)\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Python代码如何实现邮件合并的功能", ["如何将列表中的姓名每个生成一个独立的句子，有较为简单的代码么(Python初学者)"]], "Tag": "算法设计"}
{"Answer": "Hystrix请求合并用于应对服务器的高并发场景，通过合并请求，减少线程的创建和使用，降低服务器请求压力，提高在高并发场景下服务的吞吐量和并发能力", "Konwledge_Point": "树中的独立集", "Question": ["Hystrix包裹请求的作用是什么？", ["Hystrix解决依赖隔离的方式之一是包裹请求：使用HystrixCommand（或者HystrixObservableCommand）包裹对依赖的调用逻辑，每个命令在独立线程中执行。用到了设计模式中的“命令模式”。", "\n\n", "那么包裹请求到底有什么好处呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;用Python实现的序贯概率比检验的示例&amp;#xff0c;针对几何分布的情况。代码中使用蒙特卡罗方法估计错误类型 I 和 II 的概率&amp;#xff0c;以及条件预期样本大小。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;import&lt;/span&gt; numpy as np\n\n&lt;span class=\"hljs-attribute\"&gt;def&lt;/span&gt; sequential_probability_ratio_test(sample, threshold, alpha, beta):\n    &lt;span class=\"hljs-comment\"&gt;# 初始化统计量&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt; &amp;#61; len(sample)\n    &lt;span class=\"hljs-attribute\"&gt;log_l&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;log_f&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;decision&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;# 计算参数&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;p0&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; / (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; threshold)\n    &lt;span class=\"hljs-attribute\"&gt;p1&lt;/span&gt; &amp;#61; threshold / (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; threshold)\n\n    &lt;span class=\"hljs-comment\"&gt;# 进行SPRT测试&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;while&lt;/span&gt; decision &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; and t &amp;lt; n:\n        &lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &amp;#61; sample[t]\n        &lt;span class=\"hljs-attribute\"&gt;log_l&lt;/span&gt; &amp;#43;&amp;#61; np.log(p1 * (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - p0)**x)\n        &lt;span class=\"hljs-attribute\"&gt;log_f&lt;/span&gt; &amp;#43;&amp;#61; np.log(p0 * (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - p1)**x)\n        &lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;# 判断是否需要停止测试&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; log_l - log_f &amp;gt;&amp;#61; np.log(beta / alpha):\n            &lt;span class=\"hljs-attribute\"&gt;decision&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;elif&lt;/span&gt; log_f - log_l &amp;gt;&amp;#61; np.log(beta / alpha):\n            &lt;span class=\"hljs-attribute\"&gt;decision&lt;/span&gt; &amp;#61; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;# 返回统计信息&lt;/span&gt;\n    &lt;span class=\"hljs-attribute\"&gt;return&lt;/span&gt; decision, t\n\n&lt;span class=\"hljs-comment\"&gt;# 进行蒙特卡罗模拟&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;n_simulations&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;alpha&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;05&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;beta&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;theta&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;threshold&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n\n&lt;span class=\"hljs-attribute\"&gt;n_false&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;n_miss&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;false_count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;miss_count&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(n_simulations):\n    &lt;span class=\"hljs-attribute\"&gt;sample_size&lt;/span&gt; &amp;#61; sequential_probability_ratio_test(np.random.geometric(theta, &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;), threshold, alpha, beta)[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; sample_size &amp;lt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;n_false&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;false_count&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; - sample_size\n    &lt;span class=\"hljs-attribute\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;n_miss&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;miss_count&lt;/span&gt; &amp;#43;&amp;#61; sample_size - &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 计算误差率和平均停顿时间&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;false_rate&lt;/span&gt; &amp;#61; n_false / n_simulations\n&lt;span class=\"hljs-attribute\"&gt;miss_rate&lt;/span&gt; &amp;#61; n_miss / n_simulations\n&lt;span class=\"hljs-attribute\"&gt;avg_false_count&lt;/span&gt; &amp;#61; false_count / n_false if n_false &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; else &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;avg_miss_count&lt;/span&gt; &amp;#61; miss_count / n_miss if n_miss &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; else &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 打印结果&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;错误类型 I 的概率&amp;#xff1a;&amp;#34;&lt;/span&gt;, false_rate)\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;错误类型 II 的概率&amp;#xff1a;&amp;#34;&lt;/span&gt;, miss_rate)\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;条件预期样本大小&amp;#xff08;平均失踪观测值数量&amp;#xff09;&amp;#xff1a;&amp;#34;&lt;/span&gt;, avg_miss_count)\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;错误警报的数量&amp;#xff1a;&amp;#34;&lt;/span&gt;, avg_false_count)\n\n&lt;span class=\"hljs-comment\"&gt;# 计算阈值为2时的 alpha 和 beta&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;p0&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; / (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; threshold)\n&lt;span class=\"hljs-attribute\"&gt;p1&lt;/span&gt; &amp;#61; threshold / (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; threshold)\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt; &amp;#61; (np.log(beta / alpha) &amp;#43; np.log((&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - p1) / p1)) / np.log((&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - p0) / p0)\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt; &amp;#61; (np.log(alpha / beta) &amp;#43; np.log((&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - p0) / p0)) / np.log((&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - p1) / p1)\n&lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;阈值为2时的 alpha 和 beta&amp;#xff1a;&amp;#34;&lt;/span&gt;, alpha**a, beta**b)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先定义了一个名为 sequential_probability_ratio_test 的函数&amp;#xff0c;该函数接受样本、阈值、α和β等参数&amp;#xff0c;然后进行SPRT测试并返回决策和观测样本数等统计信息。&lt;/p&gt;\n&lt;p&gt;然后进行蒙特卡罗模拟&amp;#xff0c;使用 np.random.geometric 生成一个参数为 theta 的几何分布样本&amp;#xff0c;并调用 sequential_probability_ratio_test 函数进行SPRT测试。如果测试结果表明样本数小于100&amp;#xff0c;则认为是错误类型 I&amp;#xff0c;统计错误数和错误警报的数量&amp;#xff1b;否则认为是错误类型 II&amp;#xff0c;统计错失数和条件预期样本大小等信息。&lt;/p&gt;\n&lt;p&gt;最后&amp;#xff0c;计算错误类型 I 和 II 的概率&amp;#xff0c;以及条件预期样本大小和错误警报的数量等统计信息&amp;#xff0c;并打印输出。&lt;/p&gt;\n&lt;p&gt;此外&amp;#xff0c;该代码还计算了阈值为2时的α和β&amp;#xff0c;并将其打印输出。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["实施CUSUM求解规则，以检测观察流中的不连续性", ["问题遇到的现象和发生背景", "\n", "实施CUSUM求解规则，以检测观察流中的不连续性（观察值的概率分布中的一次性跳跃变化）。观察流的数据应该用 \"没有不连续 \"和 \"在时间$/nu$有不连续 \"两种方式建模。", "与提问问题1和问题2类似，使用蒙特卡洛方法为已实现的求解器估计误报概率和故障后到做出决定的平均延迟（以观测次数计）。考虑在没有篡改的情况下对所构建的解算器的约束（避免无限等待）。", "独立设置问题的参数：阈值、衰减时间等。", "调查阈值和两个备选参数值的接近程度对性能的影响（错误警报的概率，故障后决定前的平均失踪观测值数量）。", "问题1", "在 2 个简单假设的情况下，用计算机实施序贯概率比检验 (SPRT)。", "使用蒙特卡洛方法估计其错误类型 I 和 II 的概率，以及条件预期样本大小（运行测试 10 000 次，$H_0$ 为真，", "计算有利于 $H_1$ 的 FALSE 决策的数量，除以 10 000 -> 你得到 $\\alpha$ 的估计值；启动一个计数器，", "将你停止测试的观察次数添加到一个计数器，每次运行时 $H_0$ 为真，然后除以 10 000 ->", "你将得到 $ 的估计值t_0$；$\\beta$ 和 $t_1$ 的估计是相似的）。", "\n", "实现：几何分布，$\\theta$ 是它唯一的参数。", "分析错误概率和假设接近度的预期样本大小的依赖关系。将 $\\alpha$ 和 $\\beta$ 用于您选择的阈值计算", "\n", "尝试过的解决方法", "\n", "与上两个提问问题类似", "\n", "我想要达到的结果", "\n", "用Python编写写一下注释，使用蒙特卡洛方法，对几何分布进行检验，同时满足题目的要求。"]], "Tag": "算法设计"}
{"Answer": "ServletActionContext.getRequest()\r\n在action中使用这个方法就能得到request，就是通过action的上下文去得就可以了。然后就能得到session，还有你提到struts2的拦截器，我个人感觉尽量不去用它，没必要", "Konwledge_Point": "树中的独立集", "Question": ["struts2的action问题", ["之前一直用的struts1 没用过struts2", "\n而最近的项目要用struts2 我大概看了下它的设计", "\n有个关于session问题想请问下大家", "\n\n", "比如一个简单权限判定 一般做法都是把权限的信息发到bean中 然后保存在session中", "\n用struts1的话 就直接在action去用session就可以了", "\n不过struts2推崇的是把action跟servlet独立开 于是直接在action中使用session感觉不合适", "\n那么根据struts2拦截器机制 能不能在拦截器中把权限的bean注入到action中呢？", "\n我对struts2只是个大概了解 觉得用值栈和ognl应该能这样实现吧？"]], "Tag": "算法设计"}
{"Answer": "http://www.jb51.net/css/367136.html", "Konwledge_Point": "树中的独立集", "Question": ["img srcset 如何在高像素比的屏幕中有最佳的显示效果？", ["\n\n", "设备物理像素=设备独立像素       这样图片width:100px; 在手机不同的像素比中会有相同的显示效果。", "\n\n", "但是高分辨率的屏幕显示达到最佳效果肯定会要求图片是高清的", "\n\n", "如果在高分辨率屏幕上     有图片设置上面的  width=device-width, initial-scale=1;", "\n\n", "那么我如何写srcset   如果单纯根据  w，h 来进行设定    可能会出现高分辨率的屏幕展示的图片并不是高清图片而是一般的图片", "\n\n", "而如果使用   x 来进行设定    又无法根据当前屏幕的width，height设定展示不同尺寸的图片", "\n\n", "​", "\n\n", "主要是还是对像素比不了解", "\n\n", "对    也不了解"]], "Tag": "算法设计"}
{"Answer": "不知道你具体的报错，参考官方的看下吧：\r\n\r\nhttps://docs.spring.io/spring-session/docs/2.0.0.BUILD-SNAPSHOT/reference/html5/#httpsession-redis", "Konwledge_Point": "树中的独立集", "Question": ["springsession配置中如何指定redisFactory？", ["按照网上的写法配置spring-session，但是意外发现引用的一个jar包里独立配置了一个redisFactory。导致启动后spring-session发现2个Factory报错。目前没发现哪里有出现多个Factory时spring-session的配置方式。求指点。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我加了一个&lt;code class=\"language-javascript\"&gt;git&lt;/code&gt;&amp;#xff0c;用他重做一遍^_^&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["pygame.sprite.Group().update()参数报错问题", ["问题遇到的现象和发生背景", "\n", "我在编写《python编程：从入门到实践（第二版）》的项目一<外星人入侵>（用pygame开发）第12.8.3小节时，要求将子弹添加进一个编组中，并且用", "pygame.sprite.Group().update()", "方法更新编组。", "\n", "问题相关代码，请勿粘贴截图", "\n", "主程序：（alien_invasion.py）", "\n", "import", " pygame\n", "import", " pygame.display\n", "import", " pygame.event\n\n", "from", " .settings ", "import", " Settings\n", "from", " .ship ", "import", " Ship\n", "from", " .bullet ", "import", " Bullet\n", "import", " sys\n\n\n\n", "class", " ", "AlienInvasion", ":\n    ", "\"\"\"\n    Game main\n    \"\"\"", "\n\n    ", "def", " ", "__init__", "(", "self", "):\n        pygame.init()\n        self.settings = Settings()\n        self.screen = pygame.display.set_mode(\n            (self.settings.screen_width, self.settings.screen_height)\n        )\n        pygame.display.set_caption(", "\"Alien Invasion\"", ")\n\n        self.bg_color = (", "180", ", ", "200", ", ", "200", ")\n\n        self.ship = Ship(self)\n        self.bullets = pygame.sprite.Group\n\n\n    ", "def", " ", "run_game", "(", "self", "):\n        ", "\"\"\"\n        Game's main While\n        \"\"\"", "\n        ", "while", " ", "True", ":\n            self._check_events()\n            self.ship.update()\n            self.bullets.update()   ", "#这里报错", "\n            self._update_screen()\n\n    ", "def", " ", "_check_events", "(", "self", "):\n        ", "for", " event ", "in", " pygame.event.get():\n            ", "if", " event.", "type", " == pygame.QUIT:\n                sys.exit()\n\n            ", "elif", " event.", "type", " == pygame.KEYDOWN:  ", "# Key Down", "\n                ", "if", " event.key == pygame.K_RIGHT:\n                    self.ship.moving_right = ", "True", "\n                ", "if", " event.key == pygame.K_LEFT:\n                    self.ship.moving_left = ", "True", "\n\n                ", "if", " event.key == pygame.K_SPACE:\n                    self._fire_bullet()\n\n            ", "elif", " event.", "type", " == pygame.KEYUP:\n                ", "if", " event.key == pygame.K_RIGHT:\n                    self.ship.moving_right = ", "False", "\n                ", "if", " event.key == pygame.K_LEFT:\n                    self.ship.moving_left = ", "False", "\n\n    ", "def", " ", "_fire_bullet", "(", "self", "):\n        new_bullet = Bullet(self)\n        self.bullets.add(new_bullet)\n\n    ", "def", " ", "_update_screen", "(", "self", "):\n        self.screen.fill(self.settings.bg_color)\n\n        self.ship.blitme()\n        ", "for", " bullet ", "in", " self.bullets.sprites():\n            bullet.draw_bullet()\n\n        pygame.display.flip()\n", "\n", "子弹：（bullet.py）", "\n", "import", " pygame\n", "from", " pygame.sprite ", "import", " Sprite\n\n\n", "class", " ", "Bullet", "(", "Sprite", "):\n\n    ", "def", " ", "__init__", "(", "self, ai_game", "):\n        ", "super", ".__init__()\n        self.screen = ai_game.screen\n        self.settings = ai_game.settings\n        self.color = ai_game.bullet_color\n\n        self.rect = pygame.Rect(", "0", ", ", "0", ", self.settings.bullet_width,\n                                self.settings.bullet_height)\n        self.rect.midtop = ai_game.ship.midtop\n\n        self.y = ", "float", "(self.rect.y)\n\n    ", "def", " ", "update", "(", "self", "):\n        self.y -= self.settings.bullet_speed\n\n        self.rect.y = self.y\n\n    ", "def", " ", "draw_bullet", "(", "self", "):\n        pygame.draw.rect(self.screen, self.color, self.rect)\n", "\n", "其他源文件我放在了", "\n", "\n      \n        ", "星圆 / Alien Invasion ·  GitCode", "\n        \n      ", "GitCode——开源代码托管平台，独立第三方开源社区，Git/Github/Gitlab", "\n      ", "\n      ", "\n        ", "\n          ", "https://gitcode.net/XingYuan/Alien_invasion/", "\n        ", "\n      ", "\n", "，先看 README.md。", "\n", "运行结果及报错内容", "\n", "Traceback (most recent ", "call", " ", "last", "):\n  File ", "\"D:/py_proj/Ailen_Invasion/Alien_invasion.py\"", ", ", "line", " ", "4", ", in ", "<module>", "\n    ai.run_game()\n  File ", "\"D:\\py_proj\\Ailen_Invasion\\codes\\ailen_invasion.py\"", ", ", "line", " ", "38", ", in run_game\n    self.bullets.", "update", "()\nTypeError: ", "update", "() missing ", "1", " required positional ", "argument", ": ", "'self'", "\n", "\n", "也就是", "\n", "def", " ", "run_game", "(", "self", "):\n    ", "\"\"\"\n    Game's main While\n    \"\"\"", "\n    ", "while", " ", "True", ":\n        --snip--\n        self.bullets.update()   ", "#这里报错", "\n        \n", "\n", "告诉我", "update()", "需要一个参数", "self", "，但是书上、网上说这个方法没有参数啊，还说self应该是", "pygame.sprite .AbstractGroup", "类的。", "\n", "事实上应该在alien_invasion.py的第70行", "\n", " ", "def", " ", "_update_screen(self):", "\n        --", "snip", "--\n        ", "for", " ", "bullet", " ", "in", " ", "self", ".", "bullets", ".", "sprites():", "\n            ", "bullet", ".", "draw_bullet()", "\n\n        --", "snip", "--\n", "\n", "也有错，其他地方可能也有。", "\n", "我的解答思路和尝试过的方法", "\n", "哪里也没有出现AbstractGroup类，于是我把AbstractGroup放到括号里，Pycharm给我红了，也报错：", "\n", "TypeError: sprites() missing 1 required positional argument: 'self'", "\n", "我把Sprite类也放里，结果", "AttributeError: type object 'Sprite' has no attribute 'sprites'", "\n", "应该是子弹没有正确存到编组里。", "\n", "我想要达到的结果", "\n", "让子弹存储到编组里，能发射出去。"]], "Tag": "算法设计"}
{"Answer": "public class Test {\r\n\t\r\n\t\tpublic static void main(String args[]){\r\n\t\t\tString s=\"AAA ratingAA\";\r\n\t\t\tint number=getNumber(s,'A');\r\n\t\t\tSystem.out.println(number);\r\n\t\t}\r\n\t\tpublic static int getNumber(String s,char a){\r\n\t\t\tint number=0;\r\n\t\t\tif(s.indexOf(a)!=-1){\r\n\t\t\t\ts=s.substring(s.indexOf(a)+1,s.length());\r\n\t\t\t\tnumber=getNumber(s,a)+1;\r\n\t\t\t}\r\n\t\t\treturn number;\r\n\t\t}\r\n\t}", "Konwledge_Point": "树中的独立集", "Question": ["计算字符串中某个字符的个数，要用到递归", ["请写出各自独立的三段代码来计算给定文本内字符“A”的个数，其中一段代码要使用到递归方式。例如：假设给定文本为“AAA ratingA”，则返回结果为“4”。"]], "Tag": "算法设计"}
{"Answer": "[quote]\r\n那么这个Message-Diriven POJO作为什么部署在应用服务器里呢？JAR吗？ \r\n[/quote]\r\n是的，以class文件或jar包形式都可以，我一般都是以类文件形式，放到Tomcat下。", "Konwledge_Point": "树中的独立集", "Question": ["如何在J2EE服务器中部署非Message-Driven Bean的JMS consumer/producer", ["一个独立的业务组件，希望通过消息通信的方式与其他组件协作，但又不想实现为MDB，那么将以何种形式部署在J2EE应用服务其中呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;给你编了一个专属函数ecdf2&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;[X, Y, CDF]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;ecdf2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x,y,nx,ny,xminmax,yminmax)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% x&amp;#xff1a;x的值&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% y&amp;#xff1a;y的值&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% nx&amp;#xff1a;x方向划分段数&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% ny&amp;#xff1a;y方向划分段数&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% xminmax &amp;#61; [xmin, xmax]&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% yminmax &amp;#61; [ymin, ymax]&lt;/span&gt;\nnum &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num~&amp;#61;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(y))\n   error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入的x和y长度必须相等&amp;#39;&lt;/span&gt;) \n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;gt;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数大于6个&amp;#xff0c;太多了&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;太多输入变量&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;elseif&lt;/span&gt;(nargin&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于2个&amp;#xff0c;太少了&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入变量数目不足!!&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数等于6个&amp;#xff0c;赋值给ymin和ymax&lt;/span&gt;\n    ymin &amp;#61; yminmax(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    ymax &amp;#61; yminmax(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数大于等于5个&amp;#xff0c;赋值给xmin和xmax&lt;/span&gt;\n    xmin &amp;#61; xminmax(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    xmax &amp;#61; xminmax(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于等于4个&amp;#xff0c;自定义xmin和xmax&lt;/span&gt;\n    xmin &amp;#61; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(x);\n    xmax &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(x)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;;\n    ymin &amp;#61; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(y);\n    ymax &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(y)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于等于3个&amp;#xff0c;自定义y方向划分段数ny&lt;/span&gt;\n    ny &amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数等于2个&amp;#xff0c;自定义x方向划分段数nx&lt;/span&gt;\n    nx &amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nxg &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(xmin, xmax, nx);&lt;span class=\"hljs-comment\"&gt;%x方向的点&lt;/span&gt;\nyg &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(ymin, ymax, ny);&lt;span class=\"hljs-comment\"&gt;%y方向的点&lt;/span&gt;\n[X,Y] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(xg, yg);&lt;span class=\"hljs-comment\"&gt;%形成网格&lt;/span&gt;\n[I,J] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:nx, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:ny);&lt;span class=\"hljs-comment\"&gt;%下标网格&lt;/span&gt;\nCDF &amp;#61; arrayfun(&amp;#64;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)sum(x&amp;lt;X(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)&amp;amp;y&amp;lt;Y(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;))/num,I,J);&lt;span class=\"hljs-comment\"&gt;%形成经验分布&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后调用就行&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;clc&lt;span class=\"hljs-comment\"&gt;;clear&lt;/span&gt;\nnum &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1000000&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; randn(num&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;% 为了说明弄了两个正态分布搞联合&amp;#xff0c;实际数据会更好&lt;/span&gt;\ny &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; randn(num&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n[X&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; Y&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; CDF] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ecdf&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;y)&lt;span class=\"hljs-comment\"&gt;;% ,50,50,[-3, 3],[-3, 3]&lt;/span&gt;\nsurf(X&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;Y&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;CDF)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以看到效果杠杠的&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/199961498436175.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["matlab中，有一组二维数据，如何绘制三维的联合经验分布函数图", ["如果是一维数据X，就能直接用[f,x] = ecdf(X)来绘制经验分布函数图，但如果是二维的数据数据[X,Y]，要如何绘制二维数据的三维联合经验分布函数图。最开始我是直接分别算ecdf 得到两个f和x，y。结果的x，y做X轴Y轴的值，两个f相乘做Z轴。代码如下，绘制的图比较相近。", "但是我问了下导师，我这种求法前提是X和Y是相互独立的。我的数据[X Y]中的X和Y不是独立的，不能简单地分别用ecdf来求然后概率相乘。想问下大神们，一组二维数据，要如何绘制三维的联合经验分布函数图", "\n", "Z", "=xlsread('Linton3.xlsx')\n", "X", "=Z(:,1);\n", "Y", "=Z(:,2);\n[f1,x] = ecdf(X);\n[f2,y] = ecdf(Y);\n[XX,YY]=meshgrid(x,y);\n[ff1,ff2]=meshgrid(f1,f2);\n", "ZZ", "=ff1.*ff2\nsurf(XX,YY,ZZ,", "'EdgeColor'", ",", "'none'", ");\n", "\n"]], "Tag": "算法设计"}
{"Answer": "你说的是不是partition啊？你要现在server的配置里面添加partition，然后你可以看到Root DSE里面看到一个namingContexts就是你添加的partition，比如默认的有个example的partition。你对着Root DSE右键New Context Entry--&gt;create entry from scratch-&gt;选择相应的object(比如example是domain)-&gt;你就可以看到example出现在Root DSE里面了。", "Konwledge_Point": "树中的独立集", "Question": ["如何在apcheds 2.0.0 M8目录服务器中添加partition", ["进来研究apacheds 2.0.0 M8，遇partition概念。大概是分区的意思，区分各种不同的业务数据。", "\n为了更好地保证业务的独立性，现欲添加两个在Root DSE下添加两个独立partion，dn分别为ou=staffs,ou=customers，分别用来存储员工和客户信息，但是,分别采用apache directory studio和原始jndi代码，经过N次尝试之后，未能成功，望有接触过apacheds的仁兄给点帮助，谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这界面有关系吗例如父子&amp;#xff0c;祖孙可以试试组件传参或则vuex&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vue写一个界面按钮怎么调用另一个界面的弹窗", ["我想在这在这个就界面的按钮下调用另一个界面的弹窗是怎么样写咧", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsemaphorea\"&gt;https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsemaphorea&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;可以理解为多进程或多进程间的同步机制。命名信号量可以解决。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["自己编写的DLL，不想被两个进程同时调用，怎么在DLL代码中写限制呢？", ["如题，自己写了一个A.dll，有一个程序Demo.exe，调用A.dll。我想这个程序只能一次调用我dll中的一个功能，不能同时调用两次。", "\n\n", "为了防止它开两个进程调用A.dll，我在编写A.dll这个库的时候该怎么检测或者限制它自己被两个进程或者线程同时调用呢？", "\n\n", "用的VS2015 C++编写的", "\n\n", "补充：", "\n\n", "增加具体描述：我的dll中有两个函数，func1和func2。我的目的是，不让调用者去同时调用这两个函数，因为可能引起冲突。不让它在多线程也好，多进程也好同时调这俩函数。", "\n\n", "我试过多进程互斥锁，但是没用，查了下是因为写实拷贝，每个进程都有独立的进程空间（私有的虚拟内存），所以互斥锁并不是同一个。我又使用共享数据段加互斥锁，但是还是没用，不知道是不是我使用的方法有问题。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;算是记录一下吧。自己搞定了。花了两天&lt;br /&gt;需要把配置文件放到src/main/resources目录下&amp;#xff0c;才读取的到配置文件&amp;#xff0c;虽然不知道为什么我的项目有两个src目录&amp;#xff0c;所以指定路径不行。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Idea中maven项目druid连接池加载druid.properties文件时报 inStream parameter is null异常", ["我敲，有说法说放在src目录下，我在测试文件夹、src目录、测试文件夹的上级目录都放了druid.properties。你是一个都加载不到啊。我麻了。这个demo的java文件是独立于maven项目之外的，是我看能不能连接到数据库弄得一个独立的demo，加载不到这配置文件。。maven项目也是"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;scanf 函数输入保存在v4变量&amp;#xff0c;然后调用了函数loc_E08处理&amp;#xff0c; 点进去看loc_E08&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["ELF文件逆向分析的一个问题", ["一个ELF文件逆向分析问题", "\n", "1、准备一台Android root后的设备，CrackMe1是一个ELF可执行文件，可在Android中独立执行", "2、通过adb(Android SDK中默认带有adb工具)将CrackMe1 push到远程Android设备中，建议放在/data/local/tmp目录下", "3、打开adb shell，执行su命令进入root权限的shell，使用“chmod 777 /data/local/tmp/CrackMe1”命令给予CrackMe1可执行权限", "4、在shell中执行CrackMe1程序，提示\"Input Your Answer\"", "5、输入正确字符串，回车，如果程序输出\"True Answer\"则表示通过，输出\"Wrong Answer\"则表示失败", "\n", "IDA 反编译结果：", "\n", "\n", "在main函数中看不到有关字符串验证的信息，不知道该如何下手", "\n", "文件的下载地址：", "链接：", "https://pan.baidu.com/s/1Tfbtk792UgYLj9XxUmb8yg?pwd=49ff", "提取码：49ff"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; tkinter\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; tkinter.messagebox &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; *\n\nwindow &amp;#61; tkinter.Tk()\nwindow.withdraw()  &lt;span class=\"hljs-comment\"&gt;# 退出默认 tk 窗口&lt;/span&gt;\n\nresult &amp;#61; showinfo(&lt;span class=\"hljs-string\"&gt;&amp;#39;提示&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;这是一个提示框&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;提示: &lt;span class=\"hljs-subst\"&gt;{result}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python如果单独使用messagebox提示窗就会生成一个多余的窗口", ["from tkinter import messagebox", "messagebox.showinfo(\"\",\"提示窗\")", "\n", "\n", "是不是因为messagebox本身就是依赖于tkinter的，所以只要使用messagebox就一定会有tkinter的窗口？有没有能独立的提示窗口？"]], "Tag": "算法设计"}
{"Answer": "public void plugin(PatientInfo patientInfo)；作为一个前置通知执行，你可以绑定连接点（spring只能是方法）的参数。\r\n\r\n而作为连接点的patient.base.action.CreatePatientAction.execute(..)方法的参数应该是HttpServletRequest request, HttpServletResponse response等，并没有PatientInfo类型的参数，所以你是不可能从连接点的执行获得PatientInfo类型的对象。\r\n\r\n我想你的连接点应该是包含PatientInfo类型的参数的业务层类吧，而不是action的方法，\r\n楼上绑定参数的方法应该都是对的", "Konwledge_Point": "树中的独立集", "Question": ["spring AOP中如何给通知传递参数", ["我想在不修改原对象代码的情况下，插入对域模型的数据搜集方法，需要传入1个参数。 ", "\n例如：病人信息(PatientInfo)与病人信息操作日志(PatientInfoOperationLog)，二者存在一对多的关系。 ", "\nORM映射配置中采用了级联，病人信息操作日志为被动插入操作。 ", "\n在CreatePatientAction中采集病人信息的数据，并对病人信息执行显式的save。 ", "\n这样看来，病人信息操作日志的信息与Action并没有什么关联，可以视为独立运作单元；而且，如果以后不打算采用这个日志的时候，可以修改配置直接修改或删除AOP和ORM映射配置就可以了。 ", "\n前段时间考虑过spring是否可以注入方法，经过讨论发现是不可行的。这样我打算使用AOP，但我尝试了AOP配置，在没有传递参数的情况下，可以正常执行通知。但我需要配置2个对象之间的关系，不得不传入病人信息作为参数来完成任务，但不知道怎么配置这个参数。 ", "\n\n", "我尝试过加入arg-names属性，但服务器启动时就报错，没加这个属性也会报错，因为通知调用的方法是有参数的。 ", "\n\n", "而且还有个疑问，这个参数是否可以是一个已经实例化的引用？我需要的是这个引用，而不能是新创建的对象，因为这没有意义。 ", "\n\n", "我的配置如下，这里是没有加arg-names属性： ", "aop:config", " ", "/aop:aspect", " ", "/aop:config", " ", "\n\n", "PatientInfoOpeLogPlugin类代码如下： ", "\n\n", "public void plugin(PatientInfo patientInfo){ ", "\n\n", "log.setOperation(defaultOperation); ", "\nlog.setOperateTime(this.now()); ", "\nlog.setOperator(\"admin\"); ", "\nlog.setPatientInfo(patientInfo); ", "\nSet  logSet= new HashSet (); ", "\nlogSet.add(log); ", "\npatientInfo.setOperationLog(logSet); ", "\n\n", "} ", "\n\n", "服务器启动错误概要信息如下： ", "\n有没有配置arg-names的情况都一样： ", "\n…… Constructor threw exception; nested exception is java.lang.IllegalArgumentException: error at ::0 formal unbound in pointcut ", "\n…… ", "\n\n", "[b]问题补充：[/b]", "\n请一楼给个例子我试试，谢谢！", "\n[b]问题补充：[/b]", "\n[size=small][color=blue]三楼whistler的例子是标准例子。看后我考虑了一下，如果对Service类的相关方法进行拦截，确实可以达到我想要的结果，而且还可以不受Struts2的自带拦截器影响。其实，我原来的想法集中在如何让AOP拦截Action了，但后来经过查询资料和测试，发现无法达到，因为Struts2本身也对Action做了处理，与AOP的拦截发生了冲突。如果不拦截Action，就没有这个问题了。", "\n谢谢你、谢谢大家的回复！[/color][/size]"]], "Tag": "算法设计"}
{"Answer": "你都已经给他浮动了，就不要再用display：inline-block；了。浮动已经让他变成行内块元素了，把display去掉。或者加个vertical-align: middle;\r\n建议去掉。因为那句代码没有用，还给你带来了困扰。", "Konwledge_Point": "树中的独立集", "Question": ["表单中的下拉框出现不对齐的问题", ["为了实现:缩放窗口 自动换行，并且换行的时候空间名称(label)与控件保持同一行。", "\n使用了以下样式", "\n\n", "<style>\n    .form-group{\n        font-size:14px;\n        display: inline-block;\n        margin:4px 0;\n    }\n\n        </style>\n", "\n\n", "都是input与label的情况下是达到要求了", "\n\n", "但是:", "\n控件如果出现下拉框，就出问题:", "\n问题1:下拉框位置会高一些，出现不对齐的情况。见gif", "\n问题2:下拉框同级的label会消失，原因不知道", "\n\n", "不知道是不是因为**form-group**  与 ", "inline-block", "的问题", "\n\n", "希望哪个知道的帮忙知道一二。", "\n\n", "\n\n", "\n\n", "我的代码是:", "\n\n", "<form>\n\n        <div>\n            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">商品名称：</label>\n                <input  type=\"text\" class=\"show\" name=\"AAA\" id=\"AAA\"  />\n            </div>\n\n            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">商品大类【label独立出】：</label>\n            </div>\n\n            <div class=\"form-group\" >\n                <select  type=\"text\" class=\"show\" ltype=\"select\"  name=\"CLASS_1_S\" id=\"CLASS_1_S\">\n                    <option selected=\"selected\" value=\" \">-- 查询全部【label独立出】 --</option>\n                     <#list CLASS_1 as p>\n                         <option value=\"${p.DID}\">${p.DNAME}</option>\n                     </#list>\n                </select>\n            </div>\n\n            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">label不见了：</label>\n                <select  type=\"text\" class=\"show\" ltype=\"select\"  name=\"CLASS_1_S\" id=\"CLASS_1_S\">\n                    <option selected=\"selected\" value=\" \">-- 查询全部【label不见了】 --</option>\n                     <#list CLASS_1 as p>\n                         <option value=\"${p.DID}\">${p.DNAME}</option>\n                     </#list>\n                </select>\n            </div>\n\n\n", "\n\n", ".", "\n.", "\n.", "\n.", "\n.", "\n.", "\n.", "\n.", "\n非常感谢  妖王令剑  和 Chappell_ycp  的指导。", "\n我试验了一下，不能去除display: inline-block;，去除了这一句就乱了", "\n见下图", "\n\n", "即使加上  vertical-align: middle; 也是不行的", "\n最后是 同时保留，可以解决下拉框往上跑的问题", "\ndisplay: inline-block;", "\nvertical-align: middle;", "\n\n", "只是为什么", "下拉框前的那个同级的label还是会消失", "，", "\n就不大清楚了，有机会再想想法子了，", "\n\n", "最后我通过重新使用js生成下拉框的方法凑合着解决问题了", "\n大概的改写过程以以下这一段为例", "\n\n", "            <div class=\"form-group\" >\n                <label  for=\"demand_jira_url\" style=\"float:left\">label不见了：</label>\n                <select  type=\"text\" class=\"show\" ltype=\"select\"  name=\"CLASS_1_S\" id=\"CLASS_1_S\">\n                    <option selected=\"selected\" value=\" \">-- 查询全部【label不见了】 --</option>\n                     <#list CLASS_1 as p>\n                         <option value=\"${p.DID}\">${p.DNAME}</option>\n                     </#list>\n                </select>\n            </div>\n", "\n\n", "在js中", "\n1.删除id为ddd下的所有内容", "\n2.通过append的方式给id为ddd的div添加一个下属的label，也就是  label不见了：", "\n3.通过append的方式给id为ddd的div添加一个下属的select", "\n4.通过append的方式给这个select添加option", "\n这样子凑合着", "\n\n", "问题就是，没有找出原因，会增加好多的代码啊！！！！！"]], "Tag": "算法设计"}
{"Answer": "[quote]session.save() 一个对象的时候，没有commit() 事务 可以查到这个对象生成的ID 吗？ [/quote]\r\n&gt;&gt;:可以, see:\r\n\r\n\t\tSession s = openSession();\r\n\t\tTransaction tx = s.beginTransaction();\r\n\t\tint testLength = 3;\r\n\t\tLong lastId = null;\r\n\t\tfor (int i = 0; i &lt; testLength ; i++) {\r\n\t\t\tCar car = new Car();\r\n\t\t\tcar.setColor( \"color \" + i );\r\n\t\t\ts.save( car );\r\n\t\t\tlastId = car.getId();\r\n\t\t}\r\n\r\n[quote]你好！persist 用这个方法 先保存新对象，然后再 用getter 能得到新生成的这个对象ID 么？[/quote] \r\n&gt;&gt;：\r\n\r\n可以, see:\r\n\r\n\t\tSession s = openSession();\r\n\t\tTransaction tx = s.beginTransaction();\r\n\t\tRadio radio = new Radio();\r\n\t\tradio.setFrequency(\"32 MHz\");\r\n\t\ts.persist(radio);\r\n\t\tassertEquals( new Integer(1), radio.getId() );\r\n\t\tradio = new Radio();\r\n\t\tradio.setFrequency(\"32 MHz\");\r\n\t\ts.persist(radio);\r\n\t\tassertEquals( new Integer(2), radio.getId() );\r\n\t\ttx.commit();\r\n\t\ts.close();", "Konwledge_Point": "树中的独立集", "Question": ["关于hibernate 事务提交的问题", ["近期做项目，遇到了一个问题，用hibernate做数据持久化，可是有的业务逻辑要求是这样的，三张表是独立的。", "\n如何将三张表的增删改放到一个事务里面？", "\n比如：我先保存一个新的人员信息。然后再查询出保存完之后的人员信息同时要update另外一张表里面。", "\n问题就是：session.save(obj) 之后再查询的话。这个对象还是游离状态。会查询不到。", "\n所以就不能后面的update操作"]], "Tag": "算法设计"}
{"Answer": "首先你要确保SQLite和.NET环境已经在你的测试机器上正确安装并且配置OK。\r\n然后你写一个很简单的测试小程序，试一下能否正常调用SQLite，注意不是用的项目，而是一个干净的测试程序。\r\n这样你可以确认运行环境是否正常。\r\n如果能跑起来，说明不是这两个导致的问题。那么你需要再看下是否数据库的地址写的不对，还有就是要检查是否依赖了其他的组件，逐一排查即可。", "Konwledge_Point": "树中的独立集", "Question": ["VS2010开发C#的程序，换在新环境下无法运行", ["目前情况如下", "\n开发机器上安装了VS2010， 自带了.Net Framework 4.0", "\n程序中使用了SQLite数据库，调用了4.0中的SQL处理库，也调用了SQLite自带的库", "\n\n", "在纯净环境下进行安装时，安装了SQLite的配置程序和.Net Framework 4.0（独立安装包，不是VS2010带的那个），程序能运行，但无法读取数据库。如果在纯净环境下安装VS2010后，程序能正常运行。", "\n\n", "有没有大牛能告知这种状况怎么处理？", "\n\n", "PS. 开发机上用到的其他支持软件和库，都已安装在测试机上(包括独立的Framework4.0安装包)，除了VS2010。", "\n但在测试机上无法跑通，而且在测试机上装上VS2010后，程序立马能正常运行。"]], "Tag": "算法设计"}
{"Answer": "放books.html在public/caring目录下，访问http://localhost:3000/caring/books.html即可。\r\n\r\n静态文件可以直接显示。", "Konwledge_Point": "树中的独立集", "Question": ["ruby on rails 的public下的文件是如何显示的？", ["我想建立一个新文件夹，里面直接显示html文档？不知可以不可以？", "\n如在public下建立caring,里面是一些独立的html文档，能否在IE中直接显示？", "\n\n", "我知道所有url均是要经过路由的", "\n但我看网站中不少地址，如css，公用图片，也没指定控制器和视图，一样能显示，只是在后加面了一些数字？", "\n\n", "路由中也没定义，他们是如何显示的？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;您可以参考&lt;a href=\"https://blog.csdn.net/FRIGIDWINTER/article/details/115404656?spm&amp;#61;1001.2014.3001.5502\" id=\"textarea_1644375970444_1644375988002_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/FRIGIDWINTER/article/details/115404656?spm&amp;#61;1001.2014.3001.5502&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;我在其中进行了推导。此外&amp;#xff0c;贝叶斯网络条件独立性判断的通用方法是道德图法&amp;#xff0c;这样不需要考虑3种形式。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["贝叶斯网络三种形式怎么理解", ["我用#CSDN#这个app发现了有技术含量的博客，小伙伴们求同去《马尔可夫网络和贝叶斯网络的一些总结》, 一起来围观吧 ", "https://blog.csdn.net/qq_43654303/article/details/105585485?utm_source=app&app_version=5.0.1&code=app_1562916241&uLinkId=usr1mkqgl919blen", "文章中网络的三种形式表述中，已知P(C)，则独立或𣎴独立；未知则独立或不独立，好难理解。谁能更清晰通俗吗？"]], "Tag": "算法设计"}
{"Answer": "你每次需要merge的时候，把remote的改动pull拉下来，然后可以用git merge --squash来合并merge到你的分支，这样就会只生成一个merge点。你可以添加comments表示这是一次合入改动。这样你的commit树就比较清晰了", "Konwledge_Point": "树中的独立集", "Question": ["关于git分支的问题，怎么操作才能达到这种效果", ["我这里一个repo，需要用到另一个repo的一部分代码。另一个repo是随时更新的，所以我这里remote加了那个repo，随时从那个分支把代码pull过来。", "\n这两个repo的内容是独立的，我不关心另一个repo的commit树，想全部给整成一条线。现在问题就来了，merge的话会留下一堆冗余的commit，rebase的话，好像我自己这里的commit就没了，只剩下它的了。我应该怎么做，才能达到只留我的commit不留他的的效果？", "\n刚学git，懂得比较少，请多指教了。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两个项目都拉下来&amp;#xff0c;最简单的办法还是直接把b仓库的代码一口气复制进a仓库的子目录&amp;#xff0c;以后只开发a仓库&amp;#xff0c;废弃b仓库&amp;#xff0c;把a仓库对那个子目录的修改可以创一个开发分支&amp;#xff0c;你想让谁只进行那个目录的修改就让他开发那个分支就够了&amp;#xff0c;提交的时候也不会冲突&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["git怎么同步另一个仓库中某个目录下的代码到当前仓库？", ["先有仓库 B，是前端的独立代码", "后有仓库 A，是整个项目代码，前端的代码作为其中一个子目录，后续都在 A里面开发前端", "现在想把 A里面的前端代码同步到原来的 B仓库里去"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;执行完return  函数就退出了  后面的语句全部不执行&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于Python的return问题", ["判断质数的小问题：", "\n\n", "from math import sqrt", "\ndef is_prime(a):", "\n    try:", "\n        n=eval(a)", "\n    ", "\n        if type(n)!=type(1):", "\n            print('请确认您输入的是整数！')#保证输入是整数", "\n        else:", "\n            if n==1:", "\n                return False", "\n            for i in range(2,int(sqrt(n))+1):", "\n                if n%i==0:", "\n                    return False", "\n            return True         ", "\n    except:", "\n        print('请确认您输入的是数字！')#保证输入是数字", "\n\n", "while True:", "\n    a=input('请输入一个整数，键入“q”退出：')", "\n    if a=='q':", "\n            break", "\n    else:", "\n        print(is_prime(a))", "\n ", "\n\n", "请问大佬们：except上面那两行，return False和return True这里有点疑惑： 如果输入是9，那么肯定执行return False，但是接下来应该顺序执行return True才对啊，那么结果应该是先出现False后出现True。但是为啥结果只有一个False呢，是什么使得程序跳过了这个return True的执行呢，按理说return True是独立于最里面那个小循环的啊。", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;进程是系统层面的东西&amp;#xff0c;c是开发语言&amp;#xff0c;是用来写一个程序的&lt;br /&gt;c写好一个程序&amp;#xff0c;编译成可执行文件&amp;#xff0c;然后系统把它当一个进程来运行&lt;br /&gt;总体上是这样的结构&lt;br /&gt;至于用c表示进程&amp;#xff0c;我觉得你可能不了解到底什么是进程&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于计算机进程的具体的用程序表示的问题", ["现代计算机系统中.一般以进程作为分配资源的基本单位.独立运行的基本单位也是进程.具体举例说明进程的存在.最好用C表示"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/superdog007/article/details/43482427", "Konwledge_Point": "树中的独立集", "Question": ["SpringContextUtil.getBean获取的类，没有hibernate的session", ["背景", "\n    一个任务， 需要开启多个线程，同时跑，", "\n    我开启的线程中， 用SpringContextUtil.getBean(\"\")获取了一个service类， ", "\n    这个service中， 有许多的service和dao 用来处理任务", "\n    在这个处理方法中，        Transaction trans = this.creditchanneldao.getCSession().getTransaction();", "\n    通过提取出事务控制，来进行每个线程的独立事务控制", "\n    但是，抛异常", "\n    No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here"]], "Tag": "算法设计"}
{"Answer": "这个要看具体的程序，你可以使用远程终端服务，每个程序在一个终端会话中运行", "Konwledge_Point": "树中的独立集", "Question": ["window程序多开限制的破除怎么实现？", ["window程序多开限制的破除怎么实现？怎么在窗体嵌入式程序中每个进程都能独立运行程序，互相不干涉，比如qq这种限制多开的怎么破除？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;圈出来的代码试试用setTimeout延时执行看看&amp;#xff0c;可能对应内容块尚未完全初始化导致高度未定&amp;#xff0c;设置scrollTop无法滚动到需要的位置&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;setTimeout&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&amp;#61;&amp;gt;&lt;/span&gt;{\n&lt;span class=\"hljs-regexp\"&gt;///圈出来的代码块\n},200)\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/432092358036178.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["tab栏切换 导致滚动位置 赋值失败 问题，求解开疑惑。", ["组件是被循环创建多个Tab栏， 为组件开启了组件缓存实现返回获取滚动位置 。", " 使用 activated() {", "    this.$refs.articlelist.scrollTop = this.scroll", "  },", "this.scroll 保存的组件滚动位置 现在实现了进入详情页或者其它离开组件的行为 ，返回组件保证滚动位置。", "但是组件的Tab栏点击时 会导致进入组件的scrollTop为0 ，", "原因是 进入组件时 activated多个组件触发但是 this.$refs.articlelist.scrollTop = this.scroll 这段无法给其它组件赋值只能为当前Tab栏组件赋值。", "也能获取到不同的组件DOM 也能获取scrollTop 值 就是赋值不上。", "\n", "为什么不能赋值？是我使用了overflow-y: auto;导致每个组件的滚动条都是独立的吗？", "\n", "\n", "\n", "正常切换组件 离开 进入 没问题 ", "\n", "当切换tab栏在离开组件然后进入组件就有问题了", "\n", "我现在的解决方案是", "强制为它赋值。", "\n", "我的问题就是为什么切换tab栏 然后离开组件，  进入组件时多个组件触发activated()后无法为this.$refs.articlelist.scrollTop赋值？"]], "Tag": "算法设计"}
{"Answer": "id这个东西是要尽量避免的.并不是你的就一定要getCmp ,你也同样可以用组件的items来访问的,具体去翻api吧.我也不想多说了.累呀,感觉回答问题的比提问的还要热情!", "Konwledge_Point": "树中的独立集", "Question": ["Ext中组件加载问题", ["在使用Ext的时候,我在一个js文件定义了一个form表单组件,在另一个js文件中通过组件的id来获得组件(Ext.Cmp())在ie7下能够获得组件,但是在ie6和ff3下都不能找到这个组件,错误提示这个组件未定义.", "\n通过我自己的测试:", "\nExt.ComponentMgr.all.each(function(r){alert(r.id)})  发现定义的form表单在ie6和ff下都没有被加载.", "\n在定义form表单的js文件里面我做的测试", "\n\n", "alert(\"aa\");", "\nvar form  = new Ext.FormPanel({", "\n  ...", "\n});", "\nalert(\"bb\");", "\n\n", "alert(\"aa\")执行了的,但是alert(\"bb\");未执行", "\n请问这个是怎么回事?", "\n\n", "[b]问题补充：[/b]", "\n是我写错了,是用的Ext.getCmp();", "\n[b]问题补充：[/b]", "\njs代码:", "\n\n", "第一次用Ext ,不足之处请指教", "\n\n", "//用户痕迹统计树形菜单", "\nvar statisticsTree = new Ext.tree.TreePanel({", "\n        id:'statisticsTree',", "\n        frame:false,", "\n        border:false,", "\n        autoScroll:true, ", "\n        enableDD:false,//是否支持拖拽效果", "\n        containerScroll: true,//是否支持滚动条", "\n        split:true,", "\n        rootVisible:false,//是否显示跟节点", "\n        //collapseMode:'mini',//在分割线处出现按钮", "\n        collapsible: true,", "\n        margins:'0 0 5 5',", "\n        loader:new Ext.tree.TreeLoader({", "\n            dataUrl:'js/extjs/statisticsTree.json'", "\n        })", "\n    });", "\n    var statisticsRoot = new Ext.tree.AsyncTreeNode({", "\n        text:'统计',", "\n        draggable:false,", "\n        id:'statisticsRoot'", "\n    });", "\n    statisticsTree.setRootNode(statisticsRoot);", "\n\n", "//ippv统计", "\n    var ippv_ds = new Ext.data.Store({", "\n        proxy: new Ext.data.HttpProxy({", "\n            //url:'/platform/management/statistics/statisticsIpPv.htm',", "\n            method:'post'", "\n        }), ", "\n        autoLoad:false,", "\n        remoteSort:false,  //服务器端排序", "\n        reader: new Ext.data.JsonReader({root:'list',totalProperty:'pagination.count'}, [", "\n            {name: '_date'},", "\n            {name: 'visitorquantity',type:'int'},", "\n            {name: 'ipquantity',type:'int'},", "\n            {name: 'pvquantity',type:'float'}", "\n            ])", "\n    });", "\n    ippv_ds.load({params:{'pagination.begin':0,'pagination.pageSize':20}}); ", "\n    var sm=new Ext.grid.CheckboxSelectionModel();//表格复选列", "\n    var ippv_cm = new Ext.grid.ColumnModel([", "\n        {header:'日期',dataIndex:'_date',renderer: function(value){", "\n            if(value!=null&&value.length>0){", "\n                var d = value.split('T');", "\n                return d[0];", "\n            }", "\n            return value;", "\n        }},", "\n        {header:'访客数',dataIndex:'visitorquantity'},", "\n        {header:'独立IP数',dataIndex:'ipquantity'},", "\n        {header:'PV',dataIndex:'pvquantity'}", "\n    ]);", "\n    ippv_cm.defaultSortable = true;", "\n\n", "var ippv_form = new Ext.FormPanel({\n    id:'ippv_form',\n    border: false,\n    labelAlign:'right',\n    region:'north',\n    height:80,\n    frame:true,\n    items:[new Ext.form.FieldSet({\n        title:'查询',\n        columnWidth: 1,\n        layout: 'column',\n        border: true,\n        anchor:'50%',\n        labelWidth: 50,\n        items:[{\n            columnWidth:.4,\n            layout: 'form',\n            border:false,\n            items: [{\n                xtype:'datefield',\n                fieldLabel: '日期:从',\n                name: 'beginDate1',\n                format:'Y-m-d',\n                id:'beginDate1',\n                anchor: '90%'\n            }]\n        },{\n            columnWidth:.4,\n            layout: 'form',\n            border:false,\n            items: [{\n                xtype:'datefield',\n                fieldLabel: '到',\n                name: 'endDate1',\n                format:'Y-m-d',\n                id:'endDate1',\n                anchor:'90%'\n            }]\n        },{\n            columnWidth:.2,\n            layout: 'form',\n            border:false,\n            items: [{\n                xtype:'button',\n                text:'查询',\n                handler: function(){\n                    var beginDate = document.getElementById('beginDate1').value;\n                    var endDate = document.getElementById('endDate1').value;\n                    var url = \"/platform/management/statistics/statisticsIpPv.htm?beginDate=\"+beginDate+\"&endDate=\"+endDate;\n                    ippv_ds.proxy = new Ext.data.HttpProxy({\n                        url:url,   \n                        method:'post'  \n                    });\n                    ippv_ds.reload();\n                    ippv_grid.reconfigure(ippv_ds,ippv_cm);\n                }\n            }]\n        }]\n    })]\n});\nvar ippv_grid = new Ext.grid.GridPanel({\n    id: 'ippv_grid',\n    region:'center',\n    loadMask:true,\n    ds: ippv_ds,\n    cm: ippv_cm,\n    height:500,\n    layout:'fit',\n    frame:true, \n    bbar: new Ext.PagingToolbar({\n        pageSize: 20,\n        store: ippv_ds,\n        paramNames:{start: 'pagination.begin', limit: 'pagination.pageSize'},\n        displayInfo: true,\n        displayMsg: '显示第 {0} 条到 {1} 条记录，一共 {2} 条',\n        emptyMsg: \"没有记录\"\n    })       \n});\n", "\n\n", "//联盟-搜索引擎统计", "\n    var union_search_ds = new Ext.data.Store({", "\n        proxy: new Ext.data.HttpProxy({", "\n            //url:'/platform/management/statistics/statisticsFrom.htm',", "\n            method:'post'", "\n        }), ", "\n        remoteSort:true,  //服务器端排序", "\n        reader: new Ext.data.JsonReader({root:'list',totalProperty:'pagination.count'}, [", "\n            {name: '_from'},", "\n            {name: 'request_quantity',type:'int'},", "\n            {name: 'average_request_page_quantity',type:'float'},", "\n            {name: 'bounce_rate',type:'float'},", "\n            {name: 'register_visitor',type:'int'},", "\n            {name: 'registration_rate',type:'float'},", "\n            {name: 'order_generation_quantity',type:'int'},", "\n            {name: 'listprice',type:'float'},", "\n            {name: 'visitor_back_quantity',type:'int'},", "\n            {name: 'visitor_quantity',type:'int'},", "\n            {name: 'average_back_quantity',type:'float'}", "\n            ])", "\n    });", "\n    union_search_ds.load({params:{'pagination.begin':0,'pagination.pageSize':20}}); ", "\n    var union_search_cm = new Ext.grid.ColumnModel([", "\n        {header:'来源地',dataIndex:'_from'},", "\n        {header:'访问量',dataIndex:'request_quantity'},", "\n        {header:'平均访问页面',dataIndex:'average_request_page_quantity'},", "\n        {header:'跳出率',dataIndex:'bounce_rate'},", "\n        {header:'注册率',dataIndex:'registration_rate'},", "\n        {header:'注册人数',dataIndex:'register_visitor'},", "\n        {header:'下单人数',dataIndex:'order_generation_quantity'},", "\n        {header:'销售码洋',dataIndex:'listprice'},", "\n        {header:'回访客数量',dataIndex:'visitor_back_quantity'},", "\n        {header:'访客数量',dataIndex:'visitor_quantity'},", "\n        {header:'平均回访次数',dataIndex:'average_back_quantity'}", "\n    ]);", "\n    union_search_cm.defaultSortable = true;", "\n\n", "var union_search_form = new Ext.FormPanel({\n    id:'union_search_form',\n    border: false,\n    labelAlign:'right',\n    region:'north',\n    height:80,\n    frame:true,\n    items:[new Ext.form.FieldSet({\n    title:'查询',\n    columnWidth: 1,\n    layout: 'column',\n    border: true,\n    anchor:'50%',\n    labelWidth: 50,\n    items:[{\n        columnWidth:.4,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'datefield',\n            fieldLabel: '日期:从',\n            name: 'beginDate2',\n            format:'Y-m-d',\n            id:'beginDate2',\n            anchor: '90%'\n        }]\n    },{\n        columnWidth:.4,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'datefield',\n            fieldLabel: '到',\n            name: 'endDate2',\n            format:'Y-m-d',\n            id:'endDate2',\n            anchor:'90%'\n        }]\n    },{\n        columnWidth:.2,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'button',\n            text:'查询',\n            handler: function(){\n                var beginDate = document.getElementById('beginDate2').value;\n                var endDate = document.getElementById('endDate2').value;\n                var url = \"/platform/management/statistics/statisticsFrom.htm?beginDate=\"+beginDate+\"&endDate=\"+endDate;\n                union_search_ds.proxy = new Ext.data.HttpProxy({\n                    url:url,   \n                    method:'post'  \n                });\n                union_search_ds.reload();\n                union_search_grid.reconfigure(union_search_ds,union_search_cm);\n            }\n        }]\n    }]\n})]\n});\nvar union_search_grid = new Ext.grid.GridPanel({\n    id: 'union_search_grid',\n    region:'center',\n    loadMask:true,\n    ds: union_search_ds,\n    cm: union_search_cm,\n    height:500,\n    layout:'fit',\n    frame:true, \n    bbar: new Ext.PagingToolbar({\n        pageSize: 20,\n        store: union_search_ds,\n        paramNames:{start: 'pagination.begin', limit: 'pagination.pageSize'},\n        displayInfo: true,\n        displayMsg: '显示第 {0} 条到 {1} 条记录，一共 {2} 条',\n        emptyMsg: \"没有记录\"\n    })       \n});\n", "\n\n", "//搜索引擎关键字统计", "\n\n", "var keyword_ds = new Ext.data.Store({\n    proxy: new Ext.data.HttpProxy({   \n        //url:'/platform/management/statistics/statisticsKeyword.htm',   \n        method:'post'  \n    }), \n    autoLoad:false,\n    remoteSort:true,  //服务器端排序\n    reader: new Ext.data.JsonReader({root:'list',totalProperty:'pagination.count'}, [\n        {name: '_from'},\n        {name: 'keyword',type:'string'},\n        {name: 'search_quantity',type:'int'}\n        ])\n});\nkeyword_ds.load({params:{'pagination.begin':0,'pagination.pageSize':20}}); \nvar keyword_cm = new Ext.grid.ColumnModel([\n    {header:'来源地',dataIndex:'_from'},\n    {header:'关键字',dataIndex:'keyword'},\n    {header:'搜索次数',dataIndex:'search_quantity'}\n]);\nkeyword_cm.defaultSortable = true;\nvar keyword_form = new Ext.FormPanel({\n    id:'keyword_form',\n    border: false,\n    labelAlign:'right',\n    region:'north',\n    height:80,\n    frame:true,\n    items:[new Ext.form.FieldSet({\n    title:'查询',\n    columnWidth: 1,\n    layout: 'column',\n    border: true,\n    anchor:'50%',\n    labelWidth: 50,\n    items:[{\n        columnWidth:.4,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'datefield',\n            fieldLabel: '日期:从',\n            name: 'beginDate3',\n            format:'Y-m-d',\n            id:'beginDate3',\n            anchor: '90%'\n        }]\n    },{\n        columnWidth:.4,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'datefield',\n            fieldLabel: '到',\n            name: 'endDate3',\n            format:'Y-m-d',\n            id:'endDate3',\n            anchor:'90%'\n        }]\n    },{\n        columnWidth:.2,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'button',\n            text:'查询',\n            handler: function(){\n                var beginDate = document.getElementById('beginDate3').value;\n                var endDate = document.getElementById('endDate3').value;\n                var url = \"/platform/management/statistics/statisticsKeyword.htm?beginDate=\"+beginDate+\"&endDate=\"+endDate;\n                keyword_ds.proxy = new Ext.data.HttpProxy({\n                    url:url,   \n                    method:'post'  \n                });\n                keyword_ds.reload();\n                keyword_grid.reconfigure(keyword_ds,keyword_cm);\n            }\n        }]\n    }]\n})]\n});\nvar keyword_grid = new Ext.grid.GridPanel({\n    id: 'keyword_grid',\n    ds: keyword_ds,\n    cm: keyword_cm,\n    region:'center',\n    loadMask:true,\n    height:500,\n    layout:'fit',\n    frame:true,\n    bbar: new Ext.PagingToolbar({\n        pageSize: 20,\n        store: keyword_ds,\n        paramNames:{start: 'pagination.begin', limit: 'pagination.pageSize'},\n        displayInfo: true,\n        displayMsg: '显示第 {0} 条到 {1} 条记录，一共 {2} 条',\n        emptyMsg: \"没有记录\"\n    })       \n});\n", "\n\n", "// 页面访问数量统计", "\n\n", "var access_quantity_ds = new Ext.data.Store({\n    proxy: new Ext.data.HttpProxy({   \n        //url:'/platform/management/statistics/statisticsPage.htm',   \n        method:'post'  \n    }), \n    autoLoad:false,\n    remoteSort:true,  //服务器端排序\n    reader: new Ext.data.JsonReader({root:'list',totalProperty:'pagination.count'}, [\n        {name: 'page'},\n        {name: 'quantity',type:'int'}\n        ])\n});\naccess_quantity_ds.load({params:{'pagination.begin':0,'pagination.pageSize':20}}); \nvar access_quantity_cm = new Ext.grid.ColumnModel([\n    {header:'页面',dataIndex:'page'},\n    {header:'访问数量',dataIndex:'quantity'}\n]);\naccess_quantity_cm.defaultSortable = true;\nvar access_quantity_form = new Ext.FormPanel({\n    id:'access_quantity_form',\n    border: false,\n    labelAlign:'right',\n    region:'north',\n    height:80,\n    frame:true,\n    items:[new Ext.form.FieldSet({\n    title:'查询',\n    columnWidth: 1,\n    layout: 'column',\n    border: true,\n    anchor:'50%',\n    labelWidth: 50,\n    items:[{\n        columnWidth:.4,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'datefield',\n            fieldLabel: '日期:从',\n            name: 'beginDate4',\n            format:'Y-m-d',\n            id:'beginDate4',\n            anchor: '90%'\n        }]\n    },{\n        columnWidth:.4,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'datefield',\n            fieldLabel: '到',\n            name: 'endDate4',\n            format:'Y-m-d',\n            id:'endDate4',\n            anchor:'90%'\n        }]\n    },{\n        columnWidth:.2,\n        layout: 'form',\n        border:false,\n        items: [{\n            xtype:'button',\n            text:'查询',\n            handler: function(){\n                var beginDate = document.getElementById('beginDate4').value;\n                var endDate = document.getElementById('endDate4').value;\n                var url = \"/platform/management/statistics/statisticsPage.htm?beginDate=\"+beginDate+\"&endDate=\"+endDate;\n                access_quantity_ds.proxy = new Ext.data.HttpProxy({\n                    url:url,   \n                    method:'post'  \n                });\n                access_quantity_ds.reload();\n                access_quantity_grid.reconfigure(access_quantity_ds,access_quantity_cm);\n            }\n        }]\n    }]\n})]\n});\nvar access_quantity_grid = new Ext.grid.GridPanel({\n    id: 'access_quantity_grid',\n    ds: access_quantity_ds,\n    cm: access_quantity_cm,\n    region:'center',\n    loadMask:true,\n    height:500,\n    layout:'fit',\n    frame:true,\n    bbar: new Ext.PagingToolbar({\n        pageSize: 20,\n        store: access_quantity_ds,\n        paramNames:{start: 'pagination.begin', limit: 'pagination.pageSize'},\n        displayInfo: true,\n        displayMsg: '显示第 {0} 条到 {1} 条记录，一共 {2} 条',\n        emptyMsg: \"没有记录\"\n    })     \n});\n", "\n\n", "//各来源地销售统计    ", "\n\n", "var from_ds = new Ext.data.Store({\n    proxy: new Ext.data.HttpProxy({   \n        //url:'/platform/management/statistics/statisticsCommodity.htm',   \n        method:'post'  \n    }), \n    autoLoad:false,\n    remoteSort:true,  //服务器端排序\n    reader: new Ext.data.JsonReader({root:'list',totalProperty:'pagination.count'}, [\n        {name: '_from'},\n        {name: 'commodity.name',type:'string'},\n        {name: 's',type:'int'}\n        ])\n});\nfrom_ds.load({params:{'pagination.begin':0,'pagination.pageSize':20}}); \nvar from_cm = new Ext.grid.ColumnModel([\n    {header:'来源地',dataIndex:'_from'},\n    {header:'商品名',dataIndex:'commodity.name',sortable:false},\n    {header:'销售数量',dataIndex:'s'}\n]);\nfrom_cm.defaultSortable = true;\n\nvar from_form = new Ext.FormPanel({\n    id:'from_form',\n    border: false,\n    labelAlign:'right',\n    region:'north',\n    height:140,\n    frame:true,\n    items:[new Ext.form.FieldSet({\n    title:'查询',\n    columnWidth: 1,\n    layout: 'column',\n    border: true,\n    anchor:'50%',\n    labelWidth: 60,\n    items:[{\n        columnWidth:.4,\n        layout: 'form',\n        border:false,\n            items: [{\n                width:130,\n                xtype:'datefield',\n                fieldLabel: '日期,从',\n                name: 'beginDate5',\n                format:'Y-m-d',\n                id:'beginDate5'\n            }, {\n                width:130,\n                xtype:'textfield',\n                fieldLabel: '来源地',\n                allowBlank: false,\n                blankText:'来源地不能为空',                    \n                name: 'from',\n                id:'from'\n            }]\n        },{\n            columnWidth:.4,\n            layout: 'form',\n            items: [{\n                width:130,\n                xtype:'datefield',\n                fieldLabel: '到',\n                format:'Y-m-d',\n                name: 'endDate5',\n                id:'endDate5'\n            },{\n                width:130,\n                xtype:'numberfield',\n                fieldLabel: '商品编号',\n                name: 'commodityId',\n                id:'commodityId'\n            }]\n    },{\n        columnWidth:.4,\n        layout: 'form', bodyStyle:'padding:20px 5px 0',\n        border:false,\n        items: [{\n            xtype:'button',\n            text:'查询',\n            handler: function(){\n                if (!from_form.getForm().isValid()) {\n                    return;\n                }\n            var beginDate = document.getElementById('beginDate5').value;\n            var endDate = document.getElementById('endDate5').value;\n            var from = from_form.getForm().findField(\"from\").getValue();\n            var commodityId = from_form.getForm().findField(\"commodityId\").getValue();\n            var url = \"/platform/management/statistics/statisticsCommodity.htm?beginDate=\"+beginDate+\"&endDate=\"+endDate+\"&from=\"+from+\"&commodityId=\"+commodityId;\n                from_ds.proxy = new Ext.data.HttpProxy({\n                    url:url,   \n                    method:'post'  \n                });\n                from_ds.reload();\n                from_grid.reconfigure(from_ds,from_cm);\n            }\n        }]\n    }]\n})]\n});\nvar from_grid = new Ext.grid.GridPanel({\n    id: 'from_grid',\n    ds: from_ds,\n    cm: from_cm,\n    region:'center',\n    loadMask:true,\n    layout:'fit',\n    height:500,\n    frame:true,\n    bbar: new Ext.PagingToolbar({\n        pageSize: 20,\n        store: from_ds,\n        paramNames:{start: 'pagination.begin', limit: 'pagination.pageSize'},\n        displayInfo: true,\n        displayMsg: '显示第 {0} 条到 {1} 条记录，一共 {2} 条',\n        emptyMsg: \"没有记录\"\n    })       \n});\n", "\n\n", "[b]问题补充：[/b]", "\n2个alert()之间的代码,是user_trace.statistics.js 里面ippv_form", "\n[b]问题补充：[/b]", "\n页面太简单了嘛,直接引用2个js文件就可以了", "\n[b]问题补充：[/b]", "\n请问怎么才是js封装到位了,给个例子嘛 "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可能是变量id的问题。把线程相关代码附出来看看&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python写入文本的问题", ["我写了一个gui界面，用多线程爬虫，设置了四个按钮，每个按钮对应一组参数，并且每个按钮对应一个独立的函数，程序是一样的，只不过变量名做了修改，跟按钮对应。分别写入对应的文本中。但是现在发现四个线程同时启用时，文本是写入最后一个启用的线程对应的文本中的。（比如我顺序点击按钮1234，按钮2启动线程2后，线程1的数据就写入线程2的文本中了，同理，线程3启用后，线程1  2的数据就写入线程3的文本中了，最后线程4启用，所有的数据都写入了线程4的文本中。并且采集了1827天的数据，四个线程应该有7308条数据才对，但是数据缺失了28条）", "我已经设置好数据写入对应的文本中，为什么会失效？一个程序不能同时写入几个文本吗？怎么解决数据写入的问题？还有数据缺失的问题？", "用的tkinter写的gui"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;给 live.html 加路由了没有&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于AJAX实现网页中某个div模块的局部刷新", ["本来想实现在下述的index.html中单击左边的菜单栏实现右边div块的刷新，然后参考了一个博主的代码，自己改了改，大概如下：", "\n", "index.html", "\n", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"zh-CN\"", ">", "\n", "<", "head", ">", "\n  ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n  ", "<", "title", ">", "主页面", "</", "title", ">", "\n  ", "<", "link", " ", "rel", "=", "\"stylesheet\"", " ", "href", "=", "\"/static/css/bootstrap.css\"", ">", "\n  ", "<", "link", " ", "rel", "=", "\"stylesheet\"", " ", "href", "=", "\"/static/css/nprogress.css\"", ">", "\n  ", "<", "script", " ", "src", "=", "\"/static/js/nprogress.js\"", ">", "</", "script", ">", "\n", "</", "head", ">", "\n", "<", "body", ">", "\n  ", "<", "div", " ", "class", "=", "\"container pt-4\"", ">", "\n    ", "<", "h1", ">", "会员中心", "</", "h1", ">", "\n    ", "<", "hr", ">", "\n    ", "<", "div", " ", "class", "=", "\"row\"", ">", "\n      ", "<", "aside", " ", "class", "=", "\"col-md-3\"", ">", "\n        ", "<", "div", " ", "class", "=", "\"list-group\"", ">", "\n          ", "<", "a", " ", "class", "=", "\"list-group-item list-group-item-action\"", " ", "href", "=", "\"/cb/refresh/\"", ">", "个人信息", "</", "a", ">", "\n          ", "<", "a", " ", "class", "=", "\"list-group-item list-group-item-action\"", " ", "href", "=", "\"/cb/work/\"", ">", "工作经验", "</", "a", ">", "\n          ", "<", "a", " ", "class", "=", "\"list-group-item list-group-item-action\"", " ", "href", "=", "\"/cb/live/\"", ">", "图表展示", "</", "a", ">", "\n        ", "</", "div", ">", "\n      ", "</", "aside", ">", "\n      ", "<", "main", " ", "id", "=", "\"main\"", " ", "class", "=", "\"col-md-9\"", " ", "style", "=", "\"width: 800px\"", ">", "\n        ", "<", "h2", ">", "这是我的个人信息界面", "</", "h2", ">", "\n        ", "<", "hr", ">", "\n          ", "<", "div", " ", "id", "=", "\"container\"", ">", "</", "div", ">", "\n      ", "</", "main", ">", "\n    ", "</", "div", ">", "\n  ", "</", "div", ">", "\n  ", "<", "script", " ", "src", "=", "\"/static/js/jquery.min.js\"", ">", "</", "script", ">", "\n  ", "<", "script", ">", "\n    $(", "function", " (", "$", ") {\n        ", "// 入口函数带参数$,原因是有一个独立的作用域，顺便确保页面加载完成执行", "\n\n        ", "//全局AJAX事件处理", "\n      $(", "document", ")\n        .", "ajaxStart", "(", "function", " (", ") {\n          NProgress.", "start", "()\n        })\n        .", "ajaxStop", "(", "function", " (", ") {\n          NProgress.", "done", "()\n        });\n      $(", "'.list-group-item'", ").", "on", "(", "'click'", ", ", "function", " (", ") {\n        ", "var", " url = $(", "this", ").", "attr", "(", "'href'", ")\n        ", "//后面的 #main 指的是载入页面的 id", "\n        $(", "'#main'", ").", "load", "(url + ", "' #main > *'", ")\n        ", "//列表组中是 a 标签，禁止它跳转到相应界面", "\n        ", "return", " ", "false", "\n      })\n    })\n  ", "</", "script", ">", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n\n\n", "\n", "work.html(在django中配的路由是/cb/work/)", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"zh-CN\"", ">", "\n", "<", "head", ">", "\n  ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n  ", "<", "title", ">", "主页面", "</", "title", ">", "\n", "</", "head", ">", "\n", "<", "body", ">", "\n      ", "<", "main", " ", "id", "=", "\"main\"", ">", "\n        ", "<", "h2", ">", "这是工作经验界面", "</", "h2", ">", "\n        ", "<", "hr", ">", "\n          ", "<", "img", " ", "src", "=", "\"/static/image/banner.jpg\"", ">", "\n      ", "</", "main", ">", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n\n\n", "\n", "live.html", "\n", "<!--\n    THIS EXAMPLE WAS DOWNLOADED FROM https://echarts.apache.org/examples/zh/editor.html?c=bar-polar-label-tangential\n-->", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", ">", "\n    ", "<", "head", ">", "\n        ", "<", "script", " ", "type", "=", "\"text/javascript\"", " ", "src", "=", "\"https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js\"", ">", "</", "script", ">", "\n        ", "<", "link", " ", "rel", "=", "\"stylesheet\"", " ", "href", "=", "\"/static/css/bootstrap.css\"", ">", "\n        ", "<", "script", " ", "src", "=", "\"/static/js/jquery.min.js\"", ">", "</", "script", ">", "\n        ", "<", "meta", " ", "charset", "=", "\"utf-8\"", ">", "\n    ", "</", "head", ">", "\n    ", "<", "body", ">", "\n        ", "<", "div", " ", "id", "=", "\"main\"", " ", "class", "=", "\"col-md-9\"", " ", "style", "=", "\"width: 800px\"", ">", "\n                    ", "<", "div", " ", "id", "=", "\"container\"", " ", "style", "=", "\"height:500px;width: 500px\"", ">", "</", "div", ">", "\n                    ", "<", "script", " ", "type", "=", "\"text/javascript\"", ">", "\n                        ", "var", " dom = ", "document", ".", "getElementById", "(", "\"container\"", ");\n                        ", "var", " myChart = echarts.", "init", "(dom);\n                        ", "var", " app = {};\n                        ", "var", " option;\n                        option = {\n                          ", "title", ": [\n                            {\n                              ", "text", ": ", "'活动物(或动物产品)'", "\n                            }\n                          ],\n                          ", "polar", ": {\n                            ", "radius", ": [", "30", ", ", "'50%'", "]\n                          },\n                          ", "angleAxis", ": {\n                            ", "max", ": ", "5000", ",\n                            ", "startAngle", ": ", "0", "\n                          },\n                          ", "radiusAxis", ": {\n                            ", "type", ": ", "'category'", ",\n                            ", "data", ": [\n                              ", "'活动物'", ",\n                              ", "'肉及食用杂碎'", ",\n                              ", "'鱼、甲壳动物、软体动物及其他水生无脊椎动物'", ",\n                              ", "'乳品蛋品天然蜂蜜;其他'", ",\n                              ", "'其他动物产品'", "\n                            ]\n                          },\n                          ", "tooltip", ": {},\n                          ", "series", ": {\n                            ", "type", ": ", "'bar'", ",\n                            ", "data", ": [", "4556.46", ", ", "85.44", ", ", "2148.47", ", ", "1598.69", ", ", "544.29", ", ", "179.58", "],\n                            ", "coordinateSystem", ": ", "'polar'", ",\n                            ", "label", ": {\n                              ", "show", ": ", "false", ",\n                              ", "position", ": ", "'middle'", ",\n                              ", "formatter", ": ", "'{b}: {c}'", "\n                            }\n                          }\n                        };\n\n\n                        ", "if", " (option && ", "typeof", " option === ", "'object'", ") {\n                            myChart.", "setOption", "(option);\n                        }\n                    ", "</", "script", ">", "\n                ", "</", "div", ">", "\n\n    ", "</", "body", ">", "\n\n", "</", "html", ">", "\n    \n\n", "\n", "单击左侧”工作经验“时 work.html可以刷新出来", "\n", "但是单击左侧”图表展示“时，右侧加载不出live.html,为这样：", "\n", "\n", "而该网页本来是可以显示图的：", "\n", "\n", "想要问问是为什么", "\n", "参考文章：", "https://blog.csdn.net/weixin_40292154/article/details/105963037#comments_20371925"]], "Tag": "算法设计"}
{"Answer": "是好的选择之一，osworkflow也挺好，只是它很久没有更新了。让用户自定义流程，你需要研究jbpm的数据库结构，最好连代码也看一下。看明白了，就会发现其实和普通的数据库编程也差不多。而且，用它做简单很多，因为Hibernate不用自己配置，POJO也不用自己写了，用它的就可以。\r\n如果要做一个图形化的自定义流程设计器，而且放在Web页面上就复杂多了，印象中有人曾经用js做过。\r\n如果不做图形化的，就像我前面所说，和普通Hibernate数据库编程类似。\r\n其实，就算你做出来了，这个设计器也是开发人员用，用户根本不用的，偶尔有拿来玩玩的，也会把已经做好的流程改的乱七八糟。呵呵，反正我们的用户就是这样。\r\n你的用户必须很年轻，俺们的用户，连打字都不愿意，要求手写-_-!", "Konwledge_Point": "树中的独立集", "Question": ["用户自定义业务一定要使用工作流？", ["      最近有一个项目功能，要求用户能通过一个设计器来划自己的流程。中间涉及到权限，所属部门，能进行的操作。考虑来考虑去，决定使用JBPM的工作流引擎，可是小弟研究了一个礼拜，恕我愚钝，实在不知道JBPM能给项目带来什么？反倒是让我觉得，这个引擎对于我们的工程来说，好像是一个独立出来的模块。光一个引擎对我什么用处都没有，各位有这样的感觉么？？？", "问题补充：", "那么请教一下 cats_tiger 用户能通过一个设计器来划自己的流程 也就是说用户的业务逻辑是由用户自己顶，我们做出来的产品，相当于一个半自动的东西。中间又夹杂着权限控制这些东西。用JBPM是个好选择么？", "问题补充：", "    哈哈，但是我们也这么考虑的，不做设计器，可是没办法啊，上面要求做，那就做一个咯，还好我的JS功底还不错（走运啊）。。。。。。", "    不过貌似这次的客户是一个什么厅的地方，政府部门，应该都是些长辈了，估计对这个新东西的接受程度。。。。。。我就怕最后浪费了时间还不讨好哦。", "    不过还是谢谢了。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;照着去改吧&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/yxt18234833756/article/details/110475567\" id=\"textarea_1659280876470_1659280937634_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/yxt18234833756/article/details/110475567&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何用python编写计算三角形、矩形、圆形的面积的程序", ["综合闭合与生成器相关内容，构建一个圆形、三角形和矩形面积计算器。", "功能需求：", "新建一个areas.txt文档，里面内容为：", "circular       math.pi", "r**2", "triangle       w", "h/2", "rectangle      w*h", "\n", "采用闭合技术和生成器技术，读取txt文档里的字符串，设计可以求圆形（给出半径），三角形（给出底和高），长方形（给出长和宽）面积的程序。该程序由3个函数构成，分别为闭合函数（大函数里面有小函数），生成器函数和返回面积的函数。", "提示：这里要用到python内置的eval函数，eval() 函数用来执行一个字符串表达式，并返回表达式的值。", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你win10版本不一样吧&amp;#xff0c;win10有种ltsc版本&amp;#xff0c;是精简版的&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["为什么我的win10，win加G调不出来xbox gamebar，而且就算我手动调出来录屏按钮也是灰的。", ["我的电脑之前重装过，我不知道为什么，可能是好奇，装了个专业版win10，上面没有自带的微软 store（下的盗版然后激活的），自然也没有xbox ，然后我手动下了一个Microsoft store，，随后在Microsoft store 里手动下了一个xbox 和xbox game bar，。", "\n", "然后问题就来了，我不能使用win加G打开Xbox game。而且就算我手动打开录屏按钮也是灰的。有关Xbox的东西在Xbox里都下了包括什么xbox live 还是不行。包括在游戏界面。", "这是为什么呢，该怎么办呢。", "今天找了许多方法，都不行。", "\n"]], "Tag": "算法设计"}
{"Answer": "告诉你个小技巧, 不过看你相不相信我了\r\n首先 先把经验写成2年， 然后项目时间可以改长一点.\r\n面试的时候没人关注你到底工作了几年 毕业了多久时间是不是合得上\r\n一般先面技术, 2年是个死要求(很多时候是这样)\r\n然后面人事, 人事连技术问了什么都不知道 也不会关心 他只关心技术过了 大概的薪资水平（技术面试完成之后一般会有个建议的薪资）\r\n人事会看看性格之类的东西 然后尽量用漂亮的言辞来压低点薪水.\r\n所以要想有回应 当然先得修改这两点\r\n因为简历面试通知由人事负责 她们不知道技术 只看哪个数字是不是2+ 而不会看下面\r\n下面的项目描述是给技术人面试的参考  而面试技术的人只会面试要求的技术 不会关心时间\r\n有两种公司除外,第一像google oracle那样的 第二就是老板兼程序员那种2、3个人的所谓'公司' 其他的基本使用, 多年经验 刚出道确实会受益匪浅的。", "Konwledge_Point": "树中的独立集", "Question": ["java工作1年要达到什么程度？ 51job上很多公司都写工作经验1年，结果投了没反应。", ["2011/2-至今 陕西、山西XX系统XX模块 共1000万", "\n◆ 环境与工具：aix、weblogic、java、jsp、jquery、oracle、ssh架构", "\n◆ 项目简介：山西XX系统XX模块。", "\n◆ 责任描述：", "\n1 完成XX功能的设计与实现，并完成与XX系统等外部系统的部分接口开发。在开发过程中，首先对业务有了深入理解，使用了JBPM工作流。", "\n\n", "2 独立完成陕西XX系统计划进度填报、调整部分等模块的实现。利用第三方包JXL分析用户填写excel中的数据b并校验后导入XX系统的数据库，并将导入数据以页面和报表的形式展现。", "\n\n", "3 完成陕西单点登录，组织机构同步等接口开发和调试。开发组织机构同步中。从LDAP数据库中，读出相关数据写入计划管理系统中的数据库。，接口使用中间库和WS的方式交互数据，并完成相关文档。", "\n\n", "2010/9-2011/1 移动XX系统接口平台 1000万", "\n◆ 环境与工具：aix、websphere、java、jsp、jquery、oracle、ssh架构", "\n◆ 项目简介：采购系统增加接口平台模块，便于对接口进行管理。", "\n◆ 责任描述：", "\n1   参与XX部分模块的编码。负责使用第三方包dom4j分析xml文件和提供压缩组件接口，以及测试和完成测试文档。", "\n\n", "2 全程参与接口平台的设计、开发与调试。学会常用设计模式如何应用到实际项目中，实践概要设计文档、详细设计文档以及UML图。并将自己负责的接口调用成功率等统计模块结合到电子采购平台中。在该系统中采用的log4j，quartz，Aop等技术，我也有了实践经验。"]], "Tag": "算法设计"}
{"Answer": "从ALL_INDEXES,ALL_TABLES,ALL_SEGMENT中去找好看，把相关的tablespace删除掉就好了\r\n\r\n\r\n其实还可以另外一种暴力的办法，从v$datafile中找到相关的数据文件，把数据文件删除掉，重起数据库，用命令offline drop 数据文件，然后就可以删除表空间了", "Konwledge_Point": "树中的独立集", "Question": ["ORA-25183: 索引表的顶级索引段在不同的表空间中", ["今天在删除一个表空间时，使用删除语句drop tablespace flyy including contents and datafiles cascade contraints;", "\n报出错误：ORA-25183: 索引表的顶级索引段在不同的表空间中。", "\n查找文档得得结果如下：", "\n[quote]ORA-25183: index-organized table top index segment is in a different tablespace ", "\nCause: An attempt was made to drop a tablespace which contains an index only table\"s overflow segment but not the top index segment\"", "\nAction: find index-organized tables which span the tablespace being dropped and some other tablespace(s). Drop these tables.[/quote]", "\n提示要先找到索引表，先删除索引表再删除表空间。但是因为先执行了语句drop user flyy cascade;", "\n已经无法找到用户下的表了，怎么办?", "\n[b]问题补充：[/b]", "\n不能了，用户被删了，没开flashback。", "\n只是想知道有什么办法可以删掉独立的IOT", "\n[b]问题补充：[/b]", "\n王者之剑 可能没碰到过这个问题。", "\n这个是因为在原有的表是索引表，并设置了溢出段。那么溢出段会在SYS表空间生成一个对应的SYS_IOT_OVER_1234这样子的表。", "\n默认维护SYS_IOT_OVER_1234的方式必须通过alter table 原表 (purge)等操作。而通过直接操作SYS_IOT_OVER_1234表都是非法的操作。", "\n\n", "当使用drop user flyy cascade;后，原索引表和表主键都会被删除掉，但是这个存在于SYS表空间的表是不被删除掉的。", "\n但是关键的是，原用户里的内容全部删除了，也没有原索引表可以来操作SYS_IOT_OVER_1234表了。", "\n[b]问题补充：[/b]", "\n嗯，我描述不够清，主要是概念也很模糊。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以考虑用 pyecharts 实现&amp;#xff0c; 例子非常详细。可以用 faker来生成模拟数据。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["大数据可视化 五个可视化方法", [" 题目为大数据可视化方法，基于python语言完成数据的可视化 。要求:根据给定数据集 自行选择构建可视化方法 选择合适的第三方库进行可视化 ，可视化结果必须包含折线图 注形图 饼图 散点图 词云图五个可视化结果 ，每个可视化功能由独立的python文件实现，"]], "Tag": "算法设计"}
{"Answer": "你说得没错，进程是独立的，所以一般都是先注入代码，也就是把要执行的代码先写入目标进程，然后再让它执行（比如说修改系统例程的入口地址表，指向你注入的代码），因为这个代码是进程内的了，所以就不存在跨进程的问题。", "Konwledge_Point": "树中的独立集", "Question": ["api hook的底层实现是怎样的？", ["有谁知道hook底层的具体实现吗？进程地址空间是彼此独立的，那么hook技术怎么突破这种独立空间检测将一个进程的代码注入到另一个进程中的呢？", "\n    具体来说，比如安卓有沙箱机制，那么hook是怎么绕过沙箱将一个进程的代码注入到另一个进程中的？", "\n    请不要拿hook就像“钩子”之类的比喻来说事儿，然后上那张经典的钩子图，这种比喻让寻求本质的人感到迷茫。我想知道具体的底层实现，特别是怎么突破进程空间独立这一限制的。"]], "Tag": "算法设计"}
{"Answer": "答案：可以。\r\n注意：\r\n1.问题：一个7000多人的企业会拿不起钱买WebLogic?\r\n\r\n2.问题：系统出了问题谁负责跟进？\r\n\r\n3.建议：下面内容仅供参考，有不准确的地方，多担待了。\r\n    员工7000多人，按10%-20%的并发算，预估一下并发数在700-1400人左右。\r\n3.1 负载均衡、集群。Apache + Tomcat，具体怎么玩，google或者百度一下，看个人偏好来了。\r\n3.2 Tomcat的优化。线程池、数据库连接池、JVM虚拟机参数。\r\n3.3 系统源码的优化。累死人不偿命的活，这个就算是用WebLogic或WebSphere也免不了的，慢慢来吧，O(∩_∩)O哈！\r\n3.4 系统采用框架。如果就十几个用例jsp+servlet就够了。有几十个用例的话，就要开始考虑框架了，问题也就开始来了。懒点呢，就用SSH，不过性能优化比较头疼。还有其他的比如iBATIS等，都可以考虑的。\r\n3.5 数据库oracle、db2、sqlserver、mysql等等，选团队里会使用的人最多的，因为还有数据库的优化、数据的维护等淘气的家伙等着呢。\r\n3.6 操作系统，linux、windows\r\n3.7 上线前，多做压力了测试。LR两台机器跑的话压到1000应该是没有问题的。\r\n\r\n4.总结：压力大了就免不了负载均衡、集群。玩玩java的JVM参数优化也挺有意思的。java的框架太多，够用就好。数据库是重点调优对象。系统上线钱，要多测试，能cut掉不少上线后修bug的工作。\r\n\r\n    在下拙见，希望能抛砖引玉啊。", "Konwledge_Point": "树中的独立集", "Question": ["7000人的企业使用的OA系统,可以使用tomcat做应用服务器吗", ["请问一个七千人的企业，使用的OA系统，用TOMCAT可行吗，需不需要使用商业应用服务器？", "请讲一下会有什么隐患或者需要注意的地方，还是性能不可靠呢？", "问题补充：", "可以买起weblogic或者websphere", "问题是：", "1.项目组里没人用过商用服务器，得考虑学习曲线和成本，还有项目比较急，能来得及吗？", "2.搞出来能维护得了吗 ", "3.客户也希望节约成本", "4.如果不用EJB，JTA，用商业服务器，是不是浪费,商业服务器的优势在哪？", "谢谢所有人的回答", "问题补充：", "还有一点就是Apache+Tomcat做LB是可以，但是我对于这种群集感觉是存在隐患的，有个问题不太好解决，如果tomcat下要生成独立的文件的，那么如何使多个tomcat实现资源的同步？"]], "Tag": "算法设计"}
{"Answer": "1、不是一个事务。\r\n2、配置好像有点问题，execution(* com.*.*.bl.*.*.*(..))，我觉得去掉public就会正常的。或者直接像下面那样写不行么？\r\npublic void saveData1(long id) \r\n{ \r\n    testDao.deleteA1ById(id);  \r\n    testDao.addA1(A1对象);    \r\n}", "Konwledge_Point": "树中的独立集", "Question": ["请教spring的事务控制", ["1：spring的事务配置", "tx:attributes", "/tx:attributes", "/tx:advice", "\n\n", "<aop:config>  \n    <aop:pointcut id=\"interceptorPointCuts\"  \n    expression=\"execution(public * com.*.*.bl.*.*.*(..))\" />  \n    <aop:advisor advice-ref=\"txAdvice\"  pointcut-ref=\"interceptorPointCuts\" />  \n</aop:config> \n", "\n\n", "2：业务层的代码", "\n\n", "private TestDao testDao;", "\npublic void saveData1(long id)", "\n{", "\n    delData2(id);", "\n    testDao.addA1(A1对象);", "\n}", "\n\n", "private void delData2(long id)", "\n{", "\n  testDao.deleteA1ById(id);", "\n}", "\n\n", "3：控制层action调用", "\nprivate TestSverice testSvercie;", "\ntestSvercie.saveData1(id);", "\n\n", "请问：1：", "\n业务层的业务控制：", "\nsaveData1和delData2是不是共用一个事务", "\n\n", "2:如果saveData1和delData2不是共用一个事务，当特定的情况下，如果saveData1和delData2获取的不是同一个连接，导致testDao.deleteA1ById(id);的操作无法提交，而testDao.addA1(A1对象);   则一直等待。业务delData2是私有方法，没有事务控制，而此刻他的数据库连接又是一个独立的。这样就导致锁表。", "\n如果delData2的数据库连接和saveData1的数据库连接是同一个，则会被提交或回滚。", "\n\n", "现在的问题是：action调用testSvercie.saveData1(id);会在非常底概率下发生private void delData2(long id)", "\n{", "\n  testDao.deleteA1ById(id);", "\n}", "\n这个方法的事务不提交，导致死锁。", "\n\n", "请各位帮忙分析一下真正的原因。谢谢。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;js用 XMLHttpRequest &amp;#43; FormData实现文件上传&lt;br /&gt;题主服务器端是java&amp;#xff1f;是的话参考下面这个示例&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/weixin_30567471/article/details/94848971\" id=\"textarea_1646664047826_1646664053748_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;利用XMLHttpRequest实现文件上传_weixin_30567471的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;微软最早以ActiveX对象的形式在IE5中引入了XMLHttpRequest对象&amp;#xff0c;经Google发扬光大之后&amp;#xff0c;目前所有的浏览器都已经支持XMLHttpRequest了&amp;#xff0c;目前W3C正在制定XMLHttpRequest Level 2标准草案&amp;#xff0c;相对于原来的XMLHttpRequest&amp;#xff0c;新标准的XMLHttpRequest有了很大的改进&amp;#xff0c;提供了很多新的功能。本文就新旧XMLHttpRequest对...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_30567471/article/details/94848971&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/241394005546146.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["纯HTML+JS实现文件上传并保存到本地文件夹", ["问题", "\n", "我是初学者，前端界面样子如下，使用的服务器是tomcat", "\n", "\n", "我想要达到的结果", "\n", "我想要的结果是当我点击检测按钮的时候将为上面两个上传的文件上传并保存到的本地路径的文件夹里面，方便以后的使用，现在的问题是这个js代码和服务器响应保存文件的代码不知道咋弄，希望各位能人能指点一下。"]], "Tag": "算法设计"}
{"Answer": "要有关系，没有关系只能通过服务器或者cookie，localstorage进行内容共享了，需要用到计时器定时检查cookie或者localstorage，你采纳我的帮写你个demo", "Konwledge_Point": "树中的独立集", "Question": ["不同页面之间javascript 通过传参控制iframe的src动态改变", ["\n以上是被控制页面代码。被控制页面名称：l1r1.html", "\n\n", "需要实现：", "\n1、通过调用语句：“javascript:goleftURL('test3.html');”实现iframe  id=\"left1\" 中的src=\"test1.html\"改变成src=\"test3.html\"", "\n2、通过条用语句：“javascript:gorightURL('test4.html');”实现iframe  id=\"right1\" s中的src=\"test2.html\"改变成src=\"test4.html\"", "\n3、通过调用语句：“javascript:goallURL('test5.html'，'test6.html');”实现iframe  id=\"left1\" 中的src=\"test1.html\"改变成src=\"test5.html\"、实现iframe  id=\"right1\" 中的src=\"test2.html\"改变成src=\"test6.html\"", "\n\n", "PS：需注意", "\n1、调用语句是在test1.html、test2.html页面中使用。来控制l1r1.html中的iframe。", "\n2、调用页面的（test1.html、test2.html）条件、传值、取值语句写在一个独立的JS中。l1r1.html的条件、传值、取值语句直接写在本页即可。", "\n3、请各位大神帮忙写出具体实例代码，本人超级小二白。劳烦了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;关于第一类的问题&lt;/strong&gt;&amp;#xff0c;其实现在这些也在逐渐的融合&amp;#xff0c;界限会越来越模糊。&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;比如我们办公都离不开的Office软件套装&amp;#xff0c;word、excel、powerpoint等&amp;#xff0c;现在他基本上是融入了你说的这三种情况。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;比如office老旧的版本就只能在windows系统运行&amp;#xff0c;现在可以在mac上运行了&amp;#xff0c;通过office 365已经可以在全平台全终端运行了...&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;这里就涉及到了你问道的这些方方面面了... &lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;当然office本身也提供对外接口的&amp;#xff0c;开发者可以整合比如word、excel等到自己的应用程序中。只是一般大家都不会涉及到。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;现在office 365 可以整合slack、Team等等各类2B的软件这些都是基于开放的网络服务接口实现的...&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;&lt;strong&gt;关于第二个问题&lt;/strong&gt;&amp;#xff0c;其实明确告诉你这个不是技术原因的问题&amp;#xff0c;这个是商业决策问题。&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;很简单&amp;#xff0c;如果是技术问题那么这里就涉及你购买服务后&amp;#xff0c;汽车本身的硬件需要更换升级&amp;#xff1f;但是特斯拉是这样子做的吗&amp;#xff1f;很明显不是&amp;#xff01;为什么&amp;#xff1f;因为你买的这台车本身硬件已经具备完整的自动驾驶硬件条件的&amp;#xff0c;那么为啥你不付费就享受不到这个服务呢?? 这就好比CSDN的VIP服务一样&amp;#xff0c;你购买了VIP服务包&amp;#xff0c;你就可以享受到VIP服务包的更多服务&amp;#xff0c;儿Tesla的AP也一样&amp;#xff0c;功能本身就在哪里&amp;#xff0c;只是你没付费&amp;#xff0c;那么就暂时享受不了这个服务而已。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;其次还需要说明的是每个国家针对自动驾驶的法律法规也是不一样的&amp;#xff0c;那么你在选择自动驾驶AP服务时就需要签署相应的责权利等&amp;#xff0c;商家是不会为你买单的。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;再有就是你买车时AP功能付费少&amp;#xff0c;和后期升级费用高的问题&amp;#xff0c;说白了就是商家要一次性获得利润的最大化&amp;#xff0c;比如你买车时候签署的服务、合约啥的&amp;#xff0c;这些都一个包都搞定了&amp;#xff0c;后期你升级&amp;#xff0c;差不多人家还要重新走一次流程&amp;#xff0c;要付出更多的成本进去等....多收你钱不就是这点事儿么&amp;#xff1f;还有就是比如维保啥的&amp;#xff0c;这些都是车厂愿意让你一次性购买的原因等...&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;而对于OTA来说&amp;#xff0c;只不过就是在给你交付汽车时通过管控端给你下发哪些可想用开启的服务而已... 不要把OTA想的太神秘化&amp;#xff0c;咋们的手机隔三岔五的更新不就是OTA实现的么&amp;#xff1f; 汽车这么干不就是运用了手机OTA成熟的技术体系而已...&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "树中的独立集", "Question": ["软件工程问题，要求详细回答", ["举一个基于 \"集成和配置 \"模式的软件的例子。在这种模式下，通常集成的软件类型的例子有。", "\n", "为特定环境编写的独立应用程序，并提供大部分功能。", "为其他开发者使用/再使用（或继承）而编写的对象和类，以增强其应用程序的功能。", "通过互联网提供的网络服务。开发人员可以用指定的输入调用这些服务，并在他们的程序中使用输出。", "在你的回答中，请提及上述三种方式中的哪一种（或多种）在软件中使用。", "\n", "第二个", "\n", "以特斯拉汽车为例。他们得到空中OTA更新，改进并有时增加功能，即自动驾驶。汽车最初出售时有硬件，但没有在软件中启用自动驾驶功能。如果你今天从工厂得到一辆带有自动驾驶功能的特斯拉，你将支付大约10,000美元。然而，如果你在交付后决定需要自动驾驶，你将被收取更多费用。", "\n", "如果你在售后选择自动驾驶，你认为特斯拉为什么要向你收取额外的费用，因为它所要做的只是在空中推送更新？", "\n", "想想技术原因吧。", "\n", "可以加我w， x交流， 一个月的软件工程问题 ，有， 酬"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第一个问题&amp;#xff0c;可以看看下面这篇文章&amp;#xff0c;希望对你有所帮助&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"https://blog.csdn.net/weixin_44226181/article/details/125815277\" id=\"textarea_1668488733686_1668489057244_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_44226181/article/details/125815277&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;关于第三个问题&amp;#xff0c;你可以&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/384459884866173.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;这样设置&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/458289884866187.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;这样就会脱离编辑器了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["AVD Manager是被替换成 Device Manager了吗？", ["AVD Manager是被替换成 Device Manager 了吗？", "\n", "Android Studio的版本是 Dolphin 2021.3.1 Patch 1.", "\n", "在Device Manager中初始创建的一个AVD，就已经 8.6 GB 大了。", "这个默认的位置是在系统盘 C盘，能否改到D盘？或者在新建AVD时指定位置？", "否则，建立几个AVD debug，C盘很容易就给搞爆了哦。", "我的Android SDK是在D盘，Android Studio也是安装在了D盘。", "\n", "现在在Device Manager中启动一个AVD，非常地慢几乎起不来，而在Android Studio中显示连接time out。", " 怎么加大指定内存什么的让它能快点？Win10本身有 8 GB 内存。", "\n", "启动的AVD，只能嵌在Android Studio画面中吗？", " 能不能像以前，在AVD Manager启动后，是一个独立的手机模拟画面。", "\n", "\n", "谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/zeo112140/article/details/8822495'&gt;Sql Server 2005 UNION ALL查询的排序问题集锦&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/dhx20022889/article/details/4393425'&gt;Sql Server 模糊查询的性能问题&lt;/a&gt;&lt;br/&gt;&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/love_you_99/article/details/8964492'&gt;SQL Server 查询时间段问题&lt;/a&gt;&lt;br/&gt;----------------------biu~biu~biu~~~在下问答机器人小D，这是我依靠自己的聪明才智给出的答案，如果不正确，你来咬我啊！", "Konwledge_Point": "树中的独立集", "Question": ["sql server查询的难题的问题", ["请问在sql server 2000中分组以后，按照某一列排序取得最大值对应的那一整行的数据怎么做？注意是取一整行，如果是max，那么取得的是分组每个独立的最大值，不是我要的"]], "Tag": "算法设计"}
{"Answer": "如果文章没提交就比较困难了，除非在添加还没保存之前加一个临时的文章保存，或者放在session里，或者单独存一个表里面。在未保存到数据库之前，也得有记录可查才行。", "Konwledge_Point": "树中的独立集", "Question": ["删除文章时，怎样删除里面的图片.... ", ["删除文章时，怎样删除里面的图片.... ", "\n  在文章插入图片，上传完图片后，可是又不想要了， ", "\n  把文章中的图片路径删除掉，可是我怎样把服务器的图片删除掉？？", "\n[b]问题补充：[/b]", "\n关联的只是文章里的图片地址", "\n图片的数据库是独立的", "\n\n", "[b]问题补充：[/b]", "\n在文章没有提交时，我怎样监听这张图片是否在文章中删除掉了。"]], "Tag": "算法设计"}
{"Answer": "可不可以这么做\r\n\r\n如果单纯的是向另外一个系统添加用户 并且仅仅靠用触发器无法实现\r\n\r\n可不可以考虑以下方式：\r\n\r\n1. 数据库中添加一个表UserNeedSync\r\n主要字段如下\r\nUserID、From、To、ChangeType、Done（如果需要还可以添加password等其他信息）\r\nChangeType表示修改类型（增删改）\r\nDone表示是否同步完成\r\n然后为两个系统各自的用户表各添加一个触发器\r\n有更改（新增、修改、删除）的话 则向这个表里写一条记录\r\n\r\n2. 新增一个Service 对UserNeedSync进行轮询\r\n如果有记录的话则根据记录信息进行同步\r\n完成后给Done字段标识\r\n\r\n\r\n这样的话 仅仅是新增了代码\r\n并没有修改原有的程序结构\r\n\r\n能否满足lz的要求呢？", "Konwledge_Point": "树中的独立集", "Question": ["两个web应用协同问题", ["各位大侠，小弟我在开发中遇到这么一个问题，请大侠们过目，给点建议。", "\n\n", "场景描述：", "\n当前有两个web 工程，两者是独立的，没有任何关系，", "\n现在的任务是需要把这两个工程整合下，达到两个系统协同，如在一个系统中增加了一个帐号，另一个系统也要增加同一个帐号。", "\n前提是尽量不要修改现有代码。", "\n\n", "请各位大侠帮小弟出出主意，不胜感激！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;matlab独立自由变量&amp;#xff0c;你只要测试一下就知道了&lt;br /&gt;第一个是w&lt;br /&gt;第二个是x&lt;br /&gt;第三个是z&lt;br /&gt;用symvar函数也可以确定&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;syms w &lt;span class=\"hljs-literal\"&gt;t&lt;/span&gt; a x z theta\nf1 &amp;#61; sin(&lt;span class=\"hljs-name\"&gt;w*t&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nf2 &amp;#61; a*exp(&lt;span class=\"hljs-name\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nf3 &amp;#61; z*exp(&lt;span class=\"hljs-name\"&gt;j*theta&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nsymvar(&lt;span class=\"hljs-name\"&gt;f1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\nsymvar(&lt;span class=\"hljs-name\"&gt;f2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\nsymvar(&lt;span class=\"hljs-name\"&gt;f3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以看到结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;ans&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n \nw\n \n \n&lt;span class=\"hljs-attribute\"&gt;ans&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n \nx\n \n \n&lt;span class=\"hljs-attribute\"&gt;ans&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n \nz\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["遇到了自个解决不掉的问题了，家人们", ["在不加专门指定的情况下", "，以下符号表达式中的哪一个变量被认为是独立自由变量？", "sym(‘sin(w", "t)’)    sym(‘a", "exp(_x)‘)     sym(‘z", "exp(j", "theta)‘)"]], "Tag": "算法设计"}
{"Answer": "var reGetPng = /(^\\S+\\.png$)|(^icon_skill_\\S+_png$)/;\r\n\r\nif (reGetPng.test(需要匹配的值)){\r\n\r\n    console.log('匹配成功')\r\n\t\tif(RegExp.$1){\r\n\t\t    console.log('我是第一种类型，我的值是:' + RegExp.$1)\r\n\t\t}\r\n\t\tif(RegExp.$2){\r\n\t\t    console.log('我是第二种类型，我的值是:' + RegExp.$2)\r\n\t\t}\r\n}", "Konwledge_Point": "树中的独立集", "Question": ["js提取字符串中所有含有png资源的名称。", ["各位大神好，我有个需求就是用js提取字符串中所有含有png资源的名称。包括两种类型", "\nxx.png  类型和this.ui(\"iconSpr\").startLoad(\"icon_skill_\"+this._model.getValue(\"cId\")+\"_\"+d[\"idx\"]+\"_png\");这种拼接类型的。有这方面的经验的大神 ，给我指点指点", "\n小弟赶紧不尽。"]], "Tag": "算法设计"}
{"Answer": "1、你要换的显卡，注意显存的数值，要使用独立内存，大于1GH。不要使用共享内在，共享内在就是使用计算机的内存，当作显存。\r\n因为显存的速度，要快于内存，才能不出现屏幕阻塞。\r\n\r\n2、因为惠普的机箱大多数是集成式的，空间较小。你要探明将主机是否有安装显卡的空间。最好，带机箱比划一下。才能购买。", "Konwledge_Point": "树中的独立集", "Question": ["要玩游戏  显卡 不行 想换一个独显", ["请问一下 各位大神  惠普的 Pavilion Dv3   可以换独立显卡吗"]], "Tag": "算法设计"}
{"Answer": "首先，尽量不要用try{}catch去捕捉能用判断规避的异常，那样会影响效率，每次出现异常，虚拟机要抓错误调用堆栈。所以，最好的方式是通过判断去规避。\r\n按你的思路，可以先判断getIntent.getExtras()是否为null。\r\n        Intent _getIntent = this.getIntent();\r\n        if( _getIntent.getExtras() != null){\r\n            Log.i(\"YuryLog\",\"理论上只有点了确认键才执行\");\r\n            receiveName = _getIntent.getExtras().getString(\"sendName\");\r\n            receiveEatSomething = _getIntent.getExtras().getString(\"sendeatSomething\");\r\n            receiveCopies = _getIntent.getExtras().getString(\"sendcopies\");\r\n\t\t\t\t\t\t......\r\n\t\t\t\t\t\r\n\r\n要指出的是，上述代码，最好使用getXXXExtra这类方法，它不会出现空指针（除了少数几个，比方说getStringExtra）。\r\n需要设定默认值的，在没有值时它会返回默认值；没有设置默认值的，在没有值时会返回null，针对这类判空一下。\r\n可以看下getBooleanExtra的源码：\r\n    public boolean getBooleanExtra(String name, boolean defaultValue) {\r\n        return mExtras == null ? defaultValue :\r\n            mExtras.getBoolean(name, defaultValue);\r\n    }\r\n\r\n而getExtras()在没有值时会返回null，看下源码：\r\n    public Bundle getExtras() {\r\n        return (mExtras != null)\r\n                ? new Bundle(mExtras)\r\n                : null;\r\n    }\r\n\t\t\r\n所以，最好不要用getIntent().getExtras()这种方式，换用getIntent().getXXXExtras()，这样针对有设置默认值的就不需要判空了。\r\n\r\nactivity之间传值，是没有机制可以确定哪个activity传过来的。这是考虑到代码的可扩展性，解耦。要确定哪个activity发过来，在intent创建那里多传个布尔值就行，比方说下面的代码。\r\n\t\t\t\t发送\r\n\t\t\t\tintent.putExtra(\"fromXXActivity\", true);\r\n\t\t\t\t\r\n        接收\r\n        if (getIntent().getBooleanExtra(\"fromXXActivity\", false)) {\r\n            ......\r\n\t\t\t\t\t\t// 这里，你就可以安全的接收那个activity发过来的所有值。\r\n        }", "Konwledge_Point": "树中的独立集", "Question": ["Android Intent 如何接收到指定的Intent传递过来的值呢？", ["写了2个Activity，A、B，2个Activity之间可以相互跳转。", "\n1、A中有一个发送按钮可实现传值到B中，同时还有一个独立的跳转按钮。", "\n2、在B中有接收A传值过来的的代码", "\n3、执行中，如果直接执行了跳转按钮，B的接收Intent代码中，就会出现空指针异常，目前通过 try{}catch临时确保能正常运行。", "\n想请问：能否有方法可以让B接收传值的代码能够识别那个Intent才是传值过来的，避免空指针异常出现。", "\n\n", "A传值代码如下：", "\n /*", "\n    * 1、获取到界面中输入的信息", "\n    * 2、将获取到的值，传递到ReceiveActivity中。", "\n    * */", "\n        Button _OkSend = (Button)findViewById(R.id.buttonOkSend);", "\n        _OkSend.setOnClickListener(new View.OnClickListener() {", "\n            @Override", "\n            public void onClick(View v) {", "\n                EditText editText1 = (EditText)findViewById(R.id.editText);", "\n                name=editText1.getText().toString();", "\n                Log.i(\"YuryLog\",\"SendActivity name： \"+name);", "\n\n", "            EditText editText2 = (EditText)findViewById(R.id.editText2);\n            eatSomething = editText2.getText().toString();\n            Log.i(\"YuryLog\",\"SendActivity eatSomething： \"+eatSomething);\n\n            EditText editText3 = (EditText)findViewById(R.id.editText3);\n            copies = editText3.getText().toString();\n            Log.i(\"YuryLog\",\"SendActivity copies： \"+copies);\n", "\n\n", "//                将值传递到ReceiveActivity中", "\n                Intent _intent = new Intent(SendActivity.this, ReceiveActivity.class) ;", "\n                _intent.putExtra(\"sendName\",name);", "\n                _intent.putExtra(\"sendeatSomething\",eatSomething);", "\n                _intent.putExtra(\"sendcopies\",copies);", "\n\n", "           startActivity(_intent);\n        }\n    });\n", "\n\n", "B接收代码如下：", "\n  //        接收SendActivity中传递过来的值；", "\n//        需要确定，只有SendActivity中传递过来的值才能触发，否则第一次执行的时候会出现空指针异常；", "\n        try {", "\n            Intent _getIntent = this.getIntent();", "\n            if( _getIntent.getExtras().getString(\"sendName\") != null){", "\n                Log.i(\"YuryLog\",\"理论上只有点了确认键才执行\");", "\n                receiveName = _getIntent.getExtras().getString(\"sendName\");", "\n                receiveEatSomething = _getIntent.getExtras().getString(\"sendeatSomething\");", "\n                receiveCopies = _getIntent.getExtras().getString(\"sendcopies\");", "\n\n", "            Log.i(\"YuryLog\",receiveName + receiveEatSomething + receiveCopies);\n            //        在界面中显示接收到的值\n            //        获取到TextView的id，再动态的更改它的值\n            TextView _textView =(TextView) findViewById(R.id.textView4);\n            TextView _textView2 =(TextView) findViewById(R.id.textView5);\n\n            _textView.setText(receiveName+\": \");\n            _textView2.setText(\"来\" + receiveCopies + \"份\" + receiveEatSomething);\n        }\n    }catch (Exception e){\n        e.printStackTrace();\n    }\n", "\n\n", "万分感谢各位能提供一个思路，谢谢。"]], "Tag": "算法设计"}
{"Answer": "当从 A 中启动 Activity B时，你可以传递一些 boolean 值到B，说明它已经从 A 中启动。\r\n从B 中启动 activity A：\r\n\r\n    Bundle b = new Bundle();\r\n    Intent intent = new Intent(Intent.ACTION_MAIN);\r\n    intent.setComponent(new ComponentName(\"package name\", \"package name.BActivity\"));\r\n    b.putBoolean(\"fromA\", true);\r\n    intent.putExtras(b);\r\n    startActivity(intent);\r\n在 Activity B 中检查在 onCreate() 中是否有 bundle。\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Bundle extras = getIntent().getExtras();\r\n        if (extras != null)\r\n        {\r\n            // Activity launched from Activity A\r\n        } else\r\n        {\r\n            // Actitivity launched from launcher  \r\n                // clear the global variables\r\n        }\r\n    }", "Konwledge_Point": "树中的独立集", "Question": ["A_app 单独启动 B_app", ["在 B 的 manifest 中：", "\n\n", "<activity android:name=\"BActivity\" >\n    <intent-filter>\n        <action android:name=\"ACTION_TEST\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n    </intent-filter>\n</activity>\n", "\n\n", "还有一个全局变量。", "\nA 的启动代码", "\n\n", "Intent intent = new Intent(Intent.ACTION_MAIN);\nintent.setComponent(new ComponentName(\"package name\",\"package name.BActivity\"));\nstartActivity(intent);\n", "\n\n", "它可以启动 B_app。", "\n但是当我从 A 中启动 B 时，并且通过点击 B 的图标来直接启动 B 时，全局变量时相同的。", "\n我想从 A 中启动 B，并且直接启动两个独立的程序。", "\n如何实现？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,p&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s1[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;],s2[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;],c;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,s1);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;()!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s1);i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s1[i]&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; s1[i]&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;)s1[i]-&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;-&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;\n    }\n    s1[i]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n        c&amp;#61;&lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n        n&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; c&amp;lt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;)c-&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;-&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;||c&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;){\n            s2[i&amp;#43;&amp;#43;]&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(s1,s2)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(p&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)p&amp;#61;n-i;\n                t&amp;#43;&amp;#43;;\n            }\n            i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            s2[i&amp;#43;&amp;#43;]&amp;#61;c;\n        }\n    }&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(c!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t&amp;gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,t,p);\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C/C++查找单词C/C++", ["小民喜欢和同学玩查找单词游戏，游戏规则是这样的：同学任意给定一个单词，他想知道该单词在某一文章中出现的次数和第一次出现的位置，小民说这个问题很容易用程序解决。请你帮助小民编程求解该问题。", "说明：文章中首字母的位置为0，以此类推。如果单词在文章中没有出现，则输出整数", "-1.", "注意：单词匹配时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同（参见样例1)，如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例2)。", "【输入形式】", "共2行。", "第1行为一个字符串，其中只含字母（大小写字母都有可能），表示给定单词；", "第2行为一个字符串，其中只可能包含字母（大小写字母都有可能）和空格，表示给定", "的文章。【输出形式】", "1行，包含两个整数，两个整数之间用一个空格隔开，表示给定单词在给定文章中出现的次数和第一次出现的位置。", "输入样例1:", " To", " You have to jump high to play this sport 输出样例1", "2 9", "输入样例2", " sun", " You Are My Sunshine", "输出样例2", "-1", "分析：首先将给定的单词 word 与文章都转换为小写字母，再调用 string 类的 find 函数，从 pos =0位置处查找给定的单词，如果 find 函数调用的返回值 ret 为﹣1，则直接输出﹣1，否则单词数加1，记录单词第一次出现的位置 first ，并修改 pos = ret + word . length ()-1，重复以上步骤，不断循环调用 find 函数，直到返回值为﹣1。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;以Y1为例&amp;#xff0c;其他类似。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-m\"&gt;&lt;span class=\"hljs-attribute\"&gt;fun&lt;/span&gt; &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-number\"&gt;96&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;014&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;27&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;lb&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-meta\"&gt; [-1,-1,-1];\nub &amp;#61; [1,1,1];\n% 没有线性约束&amp;#xff0c;因此将这些参数设置为 []。\nA &amp;#61; [];\nb &amp;#61; [];\nAeq &amp;#61; [];\nbeq &amp;#61; [];\n% 尝试使用一个位于区域中部的初始点。\nx0 &amp;#61; (lb &amp;#43; ub)/2;\nx &amp;#61; fmincon(fun,x0,A,b,Aeq,beq,lb,ub);\nY1_min &amp;#61; 96.18&amp;#43;0.15*x(1)-4.59*x(2)&amp;#43;0.12*x(3)-0.12*x(1)*x(2)-0.13*x(1)*x(3)-0.014*x(2)*x(3)-0.27*x(1)*x(1)-1.19*x(2)*x(2)&amp;#43;0.19*x(3)*x(3);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["最优化相关的或者数据处理，求最小值", ["问题遇到的现象和发生背景", "\n", "问一下下面这种情况怎么求Y1，Y2和Y3的最小值，三个方程中A，B，C取值独立", "\n", "问题相关代码，请勿粘贴截图", "\n", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;insert into orders (name, type, seqno) values (&amp;#39;A01&amp;#39;, &amp;#39;A&amp;#39;, select max(seqno) &amp;#43; 1 from orders where type &amp;#61; &amp;#39;A&amp;#39;);&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["SQL server根据不同的商品类型来插入流水号", ["假设一个数据库表中有10中类型商品，每个商品的流水号是独立的，流水号的格式为年份+编号，比如插入2个A类型的商品的数据流水号为20210001和20210002，插入1个B类型商品流水号从20210001开始，之后又插入1个A商品流水号从20210003开始，再插入1个B商品流水号从20210002开始，之后又插入1个C类型商品，流水号20210001开始。当年份变为2022时，每种商品的流水号又从0001开始。", "最好有代码演示下，刚刚入门。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这是《操作系统》里面的概念。&lt;br /&gt;线程是进程的可执行单元&amp;#xff0c;是计算机分配CPU机时的基本单元&amp;#xff0c;线程隶属于进程&amp;#xff0c;是进程之内运行的一个单元&amp;#xff0c;同一个进程的多个线程共享该进程的资源和操作系统分配给该进程的内存空间。&lt;br /&gt;&lt;strong&gt;分析&amp;#xff1a;不矛盾。&lt;br /&gt;两个问题是从不同角度考虑的&amp;#xff0c;问题1在进程的内部&amp;#xff0c;线程是独立运行的最小单元。&lt;br /&gt;问题2,在进程之间&amp;#xff0c;线程是要依附于某个线程下执行的。&lt;/strong&gt;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/andy6355/article/details/2506171\" id=\"textarea_1631622426268_1631622444806_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;进程和线程的区别_Andy-老周的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;进程和线程都是由操作系统所体会的程序运行的基本单元&amp;#xff0c;系统利用该基本单元实现系统对应用的并发性。进程和线程的区别在于&amp;#xff1a;简而言之,一个程序至少有一个进程,一个进程至少有一个线程. 线程的划分尺度小于进程&amp;#xff0c;使得多线程程序的并发性高。另外&amp;#xff0c;进程在执行过程中拥有独立的内存单元&amp;#xff0c;而多个线程共享内存&amp;#xff0c;从而极大地提高了程序的运行效率。线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/andy6355/article/details/2506171&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python进程与线程", ["１。线程是进程的一个实体，是ＣＰＵ调度和分派的基本单位，它是比进程更小的能独立运行的基本单位。", "２．线程不能够独立执行，必须依存在进程中", "３．刚接触学习python相关知识，今天在逛论坛时看到一位作者写的这二句话，请问各路大大们，这二句话不矛盾吗？若是不矛盾请解释一下"]], "Tag": "算法设计"}
{"Answer": "需要学习下如何使用jsp（当然也可以用php python c# asp等语言，但是因为你会android，所以学jsp最简单），jdbc连数据库，通过web service返回数据。\r\nandroid用httpclient调用。", "Konwledge_Point": "树中的独立集", "Question": ["安卓开发学习路线的一些小困惑，希望有过来人指导一下", ["我现在在自己开发一个类似QQ的聊天APP，想把之前的学的知识梳理一遍，但是遇到了一些问题，就是不知道如何从服务器中获取数据，我猜想流程就是在服务器搭建一个数据库，然后访问服务器，服务器返回数据库中的数据给客户端。但是我不知道具体该怎么做，所以想系统的学习一下，所以想前辈们指导一下需要什么知识，例如如何连接服务器，如何获取服务器的数据库的信息。", "\n我现在有一个独立的服务器，数据库知识比较薄弱，望指教！！！"]], "Tag": "算法设计"}
{"Answer": "我是这样子做，如果获取到的IP是局域网的，那么我会调用一个访问www.ip138.com这个网站，然后解析它，从而得到你的外网IP。", "Konwledge_Point": "树中的独立集", "Question": ["从JSP中得到访问者的真实IP（很急）！", ["现在手头开发一个网站，有这么一个功能，就是根据访问者的IP自动显示访问者所在的区域；", "\n现在遇到了一问题，我得到客户端IP的代码如下：", "\n[code=\"java\"]", "\npublic String getIpAddr(HttpServletRequest request) {", "\n    String ip = request.getHeader(\"x-forwarded-for\");", "\n    if (ip == null || ip.length() == 0 || \"unknown\".equalsIgnoreCase(ip) ", "\n                  || \"null\".equalsIgnoreCase(ip))    {", "\n        ip = request.getHeader(\"Proxy-Client-IP\");", "\n    }", "\n    if (ip == null || ip.length() == 0 || \"unknown\".equalsIgnoreCase(ip) ", "\n                  || \"null\".equalsIgnoreCase(ip)) {", "\n        ip = request.getHeader(\"WL-Proxy-Client-IP\");", "\n    }", "\n    if (ip == null || ip.length() == 0 || \"unknown\".equalsIgnoreCase(ip) ", "\n                  || \"null\".equalsIgnoreCase(ip)) {", "\n        ip = request.getRemoteAddr();", "\n    }", "\n    return ip;", "\n}", "\n[/code]", "\n\n", "该代码得到的结果如下：", "\n1.如果应用发布到局域网，在局域网内访问，得到的是我局域网的IP，如： 192.168.0.2", "\n2.如果我将应用发布到独立IP的外网服务器上面，在任何地方访问，得到的IP总是 192.168.198.1，这一类局域网的IP段", "\n\n", "我现在就是想在第二种情况下能够得到访问者的外网ip，请问各位有什么高招？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先你要有能力获取到这些码&amp;#xff0c;我印象里这些健康码之类的没给第三方提供接口。所以靠你个人基本没啥可能。&lt;/p&gt;\n&lt;p&gt;如果你有途径获取到各种二维码信息那只需要在前端展示就可以了&amp;#xff0c;有点前端基础在看着微信小程序的文档写一个小程序倒是不难&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么做一个一键打开各种码的小程序呢？", ["微信中经常要打开粤康码，粤核酸码，学校的外出码（需要打开当前时段有申请的码），想问一下如果想要能够独立写一个能一键打开这些码的小程序，要具备哪些前置知识呢？目前会C和python，懂一些数据结构。"]], "Tag": "算法设计"}
{"Answer": "```\r\n &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\r\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\r\n&lt;head&gt;\r\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\r\n&lt;title&gt;无标题文档&lt;/title&gt;\r\n&lt;script&gt;\r\nfunction MM_over(mmObj) {\r\n\tvar mSubObj = mmObj.getElementsByTagName(\"div\")[0];\r\n\tmSubObj.style.display = \"block\";\r\n\tmSubObj.style.backgroundColor = \"#f60\";\r\n}\r\nfunction MM_out(mmObj) {\r\n\tvar mSubObj = mmObj.getElementsByTagName(\"div\")[0];\r\n\tmSubObj.style.display = \"none\";\r\n\t\r\n}\r\n&lt;/script&gt;\r\n\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n&lt;div onmouseover=\"MM_over(this)\" onmouseout=\"MM_out(this)\" style=\"width:100px;position:relative;\"&gt;sdfsdf\r\n\t&lt;div style=\"width:100px;height:100px;display:none;position:absolute;left:0;top:15px;z-inde:5;\"&gt;&lt;p&gt;&lt;a href=\"#\"&gt;ssss&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=\"#\"&gt;ssss&lt;/a&gt;&lt;/p&gt;\r\n\t&lt;/div&gt;\r\n&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["如何用JS获取div下的子div", ["有多个独立的外层div，每个外层div内嵌一个内层的div，内层div在显示在外层div的下部。我要的效果是，当鼠标移入到一个外层div中时，改变这个外层div内的那个内层div。用Js怎么写代码？求大神指导"]], "Tag": "算法设计"}
{"Answer": "X509Certificate[] certs = (X509Certificate[]) request.getAttribute(\"javax.servlet.request.X509Certificate\");\r\n\r\n双向认证之后，在服务器的tomcat的server.xml文件中要有truststoreType=\"JKS\"这一句。", "Konwledge_Point": "树中的独立集", "Question": ["https双向认证，如何在服务端获取当前请求的客户端证书id", ["RT，在https双向认证的环境下，服务端配置了客户端证书的可信任证书列表，每个客户，一个独立的客户端证书。那么当一个请求到达服务端后，在服务端的代码中，如何来获取当前请求的客户端证书是哪一个？", "\n高人可以结合某个特定的容器配置来说明，万分感谢"]], "Tag": "算法设计"}
{"Answer": "```\r\n class 悬挂\r\n{\r\n    public:\r\n\t\tchar 悬挂类型[20];\r\n}\r\nclass 变速器\r\n{\r\n    public:\r\n\t\t类型 type;\r\n\t\tint 档;\r\n\t\tvoid start() {}\r\n\t\tvoid stop() {}\r\n};\r\nclass 发动机\r\n{\r\n    public:\r\n\t\tdouble 排量;\r\n\t\tvoid start() {}\r\n\t\tvoid stop() {}\r\n};\r\nclass 汽车\r\n{\r\n    public:\r\n\t\t发动机 e;\r\n\t\t变速器 g;\r\n\t\t悬挂 s;\r\n};\r\n\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["用C++组合类编写汽车模拟程序", ["从发动机、变速器和悬挂等三个方面出发模拟汽车。发动机包含发动机排量属性，变速器主要有变速器的类型（自动和手动）与及几档变速器两个属性，悬挂主要是独立悬挂和非独立悬挂两种类型； 发动机、变速器除了初始化和做清理工作的函数外 ，还有两个行为运行和停止。", "\n运用组合写出汽车类，并在main()中申明对象调用。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/048414607936137.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["java查找指定类型的数组元素", ["题目描述", "输入一个整数n，然后输入n个字符串，将这n个字符串保存在数组中。寻找上述字符串中长度最长并且以b开头的字符串，在一个独立行中输出这个字符串在数组中的下标、字符串本身的值，中间用空格分开。如果有多个满足要求的元素，只需输出其中下标最小的那个元素的相关内容。如果没有以b开头的字符串，则输出-1。", "\n", "输入样例", "5", "wonderful beauty peace bit am", "\n", "输出样例", "1  beauty", "下面这个是我以前学的寻找数组元素中按字典顺序比较最小的字符串的代码，希望能在这个基础上进行修改", "\n", "\n```java\n", "import", " java.util.Scanner;\n", "public", " ", "class", " ", "Main", "{\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(String[] args)", " {\n        ", "int", " ", "min_index", " ", "=", " ", "0", ";\n\n        ", "Scanner", " ", "n_scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        ", "int", " ", "n", " ", "=", " n_scanner.nextInt();\n\n        ", "Scanner", " ", "str_scanner", " ", "=", " ", "new", " ", "Scanner", "(System.in);\n        String[] str_arr = ", "new", " ", "String", "[n];        \n         ", "for", "(", "int", " ", "i", " ", "=", " ", "0", "; i < n; i++) {\n            str_arr[i] = str_scanner.next();\n        }\n\n        ", "for", " (", "int", " ", "i", " ", "=", " ", "0", "; i < str_arr.length - ", "1", "; i++) {\n            ", "if", "(str_arr[", "0", "].compareTo(str_arr[i + ", "1", "]) >= ", "0", "){\n                str_arr[", "0", "] = str_arr[i + ", "1", "];\n                min_index = i + ", "1", ";\n            }\n        }\n        System.out.println(min_index + ", "\" \"", " + str_arr[", "0", "]);\n    }\n}\n\n\n", "\n", "```"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;解决了 我是局部引用 没注册这个&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["用elementui的骨架屏为什么报错说我没注册这个组件", ["但是我是引入的是整个 Element 照理说直接用他自带的标签不就完了 可是用骨架屏这个标签就报错 用el-card都不会报错 这该怎么解决", "我的代码是这样写的", "\n", "报错", "\n", "官网的骨架屏", "\n", "地址", "https://element.eleme.io/#/zh-CN/component/skeleton"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff01;谢谢&amp;#xff01;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/707503207176120.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/248892207176148.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/550903654176141.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/870064654176177.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; WZ[&lt;span class=\"hljs-number\"&gt;1000001&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;};                &lt;span class=\"hljs-comment\"&gt;//改&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; DC[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;}, tDC[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;}; &lt;span class=\"hljs-comment\"&gt;//改&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; cnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, pCnt &amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//改 i是多余的删掉了&lt;/span&gt;\n\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%10[^\\n^\\r]s&amp;#34;&lt;/span&gt;, DC); &lt;span class=\"hljs-comment\"&gt;//改&lt;/span&gt;\n\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %1000000[^\\n^\\r]s&amp;#34;&lt;/span&gt;, WZ); &lt;span class=\"hljs-comment\"&gt;//改&lt;/span&gt;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; lenWZ &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(WZ), lenDC &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(DC);\n\n    &lt;span class=\"hljs-comment\"&gt;//转换成小写&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; lenDC; j&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (DC[j] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; DC[j] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//改&lt;/span&gt;\n        {\n            DC[j] &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; lenWZ; j&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//改  用&amp;#xff01;不好理解容易预判&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (WZ[j] &amp;lt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Z&amp;#39;&lt;/span&gt; &amp;amp;&amp;amp; WZ[j] &amp;gt;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;)\n        {\n            WZ[j] &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;32&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; lenWZ - lenDC &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;)\n    { &lt;span class=\"hljs-comment\"&gt;//大修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;strncpy&lt;/span&gt;(tDC, WZ &amp;#43; j, lenDC);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(tDC, DC) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (WZ[j &amp;#43; lenDC] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; || WZ[j &amp;#43; lenDC] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;))\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                cnt&amp;#43;&amp;#43;;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cnt &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                    pCnt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (WZ[j - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n            {\n                cnt&amp;#43;&amp;#43;;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cnt &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                    pCnt &amp;#61; j;\n            }\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cnt !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d\\n&amp;#34;&lt;/span&gt;, cnt, pCnt);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-1\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;ctype.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; M 512&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 20&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;tolowers&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *s)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (*s !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;isupper&lt;/span&gt;(*s))\n            *s &amp;#61; &lt;span class=\"hljs-built_in\"&gt;tolower&lt;/span&gt;(*s);\n        s&amp;#43;&amp;#43;;\n    }\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;tj&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *s, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *&lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *index)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; w[N] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;};\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; word0[N] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;};\n\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *p0 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strstr&lt;/span&gt;(s, &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p0 &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    index[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    index[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; p0 - s;\n\n    &lt;span class=\"hljs-built_in\"&gt;strncpy&lt;/span&gt;(word0, &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;));\n    &lt;span class=\"hljs-built_in\"&gt;tolowers&lt;/span&gt;(word0);\n\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *p &amp;#61; s;\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (*p &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n        p&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (*p !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;sscanf&lt;/span&gt;(p, &lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, w);\n        &lt;span class=\"hljs-built_in\"&gt;tolowers&lt;/span&gt;(w);\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(w, word0) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            index[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        p &amp;#43;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(w);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (*p &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n            p&amp;#43;&amp;#43;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s[M], &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;[N];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; index[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];    \n    \n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%[^\\n^\\r]s&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;getchar&lt;/span&gt;();\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%[^\\n^\\r]s&amp;#34;&lt;/span&gt;, s);\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-built_in\"&gt;tj&lt;/span&gt;(s, &lt;span class=\"hljs-type\"&gt;word&lt;/span&gt;, index);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-1&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n%d %d\\n&amp;#34;&lt;/span&gt;, index[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], index[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["[NOIP2011 普及组] 统计单词数的疑问", ["[NOIP2011 普及组] 统计单词数", "\n", "题目描述", "\n", "一般的文本编辑器都有查找单词的功能，该功能可以快速定位特定单词在文章中的位置，有的还能统计出特定单词在文章中出现的次数。", "现在，请你编程实现这一功能，具体要求是：给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同（参见样例 1），如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例 2）。", "\n", "输入格式", "\n", "共 2行。", "第 1 行为一个字符串，其中只含字母，表示给定单词；", "第 2行为一个字符串，其中只可能包含字母和空格，表示给定的文章。", "\n", "输出格式", "\n", "一行，如果在文章中找到给定单词则输出两个整数，两个整数之间用一个空格隔开，分别是单词在文章中出现的次数和第一次出现的位置（即在文章中第一次出现时，单词首字母在文章中的位置，位置从 0 开始）；如果单词在文章中没有出现，则直接输出一个整数 -1。", "\n", "样例 #1", "\n", "样例输入 #1", "\n", "To\n", "to", " ", "be", " ", "or", " not ", "to", " ", "be", " ", "is", " ", "a", " question\n", "\n", "样例输出 #1", "\n", "2 ", "0", "\n", "\n", "样例 #2", "\n", "样例输入 #2", "\n", "to", "\nDid ", "the", " Ottoman Empire lose ", "its", " power ", "at", " ", "that", " ", "time", "\n", "\n", "样例输出 #2", "\n", "-1", "\n", "\n", "我的测评如下：", "\n", "\n", "我的代码如下：", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "//o(10^6)", "\n", "char", " WZ[", "1000001", "]={", "0", "};\n", "char", " DC[", "11", "] = {", "0", "}, tDC[", "11", "] = {", "0", "}, s;\n", "int", " ", "main", "()", " ", "{\n    \n    ", "scanf", "(", "\"%s\\n\"", ", &DC);\n    ", "int", " i = ", "-1", ", cnt = ", "0", ", pCnt = ", "0", ";\n    ", "fgets", "(WZ,", "1000001", ",stdin);\n    ", "int", " lenWZ = ", "strlen", "(WZ), lenDC = ", "strlen", "(DC);\n    ", "//转换成小写", "\n    ", "for", " (", "int", " j = ", "0", "; j < lenDC; j++) {\n        ", "if", " (!(DC[j] <= ", "'z'", " && DC[j] >= ", "'a'", ") && DC[j] != ", "' '", ") {\n            DC[j] += ", "32", ";\n        }\n    }\n    ", "for", " (", "int", " j = ", "0", "; j < lenWZ; j++) {\n        ", "if", " (!(WZ[j] <= ", "'z'", " && WZ[j] >= ", "'a'", ") && WZ[j] != ", "' '", ") {\n            WZ[j] += ", "32", ";\n        }\n    }\n    ", "//复制到另一个数组再进行比较，先特判一下", "\n    ", "strncpy", "(tDC, WZ, lenDC);\n    ", "if", " (", "strcmp", "(tDC, DC) == ", "0", " && WZ[ lenDC] == ", "' '", ") {\n        cnt++;\n    }\n    ", "for", " (", "int", " j = ", "1", "; j < lenWZ - lenDC + ", "1", "; j++) {\n        ", "strncpy", "(tDC, WZ + j, lenDC);\n        ", "if", " (", "strcmp", "(tDC, DC) == ", "0", " && WZ[j - ", "1", "] == ", "' '", " && WZ[j + lenDC] == ", "' '", ") {\n            cnt++;\n        }\n        ", "if", " (WZ[j] == ", "' '", " && cnt == ", "0", ") {\n            pCnt++;\n        }\n    }\n    ", "if", " (cnt != ", "0", ") {\n        ", "printf", "(", "\"%d %d\\n\"", ", cnt, pCnt);\n    } ", "else", " {\n        ", "printf", "(", "\"-1\\n\"", ");\n    }\n    ", "return", " ", "0", ";\n}\n\n", "\n", "求神犇教教我，万分感谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;C&lt;br /&gt;printf()函数的返回值为实际输出的字符数量。&lt;br /&gt;printf(&amp;#34;OK\\n&amp;#34;)共输出三个字符&amp;#xff0c;就是&amp;#39;O&amp;#39;,&amp;#39;K&amp;#39;,&amp;#39;\\n&amp;#39;&amp;#xff0c;所以选C&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["这是什么意思呀？为什么选C呀？", ["设有如下语句：", "\n", "int k=0;", "\n", "k=printf(\"OK\\n\");", "\n", "则以下叙述中正确的是（）。", "\n", "A", "\n\nprintf必须作为独立语句出现\n", "B", "\n\n变量k得到的是输出的可见字符个数", "2", "\nC\n\n变量k得到的是输出字符的总个数", "3", "\nD\n\n变量k仍保持初值", "0", "\n"]], "Tag": "算法设计"}
{"Answer": "可以不依赖第三方框架的，框架只是封装了基本的API并且提供了更多的功能而已。你可以参考这篇文章、http://www.cnblogs.com/yjmyzz/p/javaee-jax-rs-tutorial.html", "Konwledge_Point": "树中的独立集", "Question": ["关于jax-rs的三个困惑", ["我有两个不解的问题", "\n1.有没有可能只用jax-rs开发，不用cxf也不用Jersey之类的框架，如果有的话，怎么在web.xml中配置", "\n2.jax-rs可以独立开发吗，不依赖其他的框架", "\n3.怎么将jax-rs与struts整合起来， 不使用struts的restful插件"]], "Tag": "算法设计"}
{"Answer": "收银机一般来说安装的也是windows操作系统，也有用android的（早期有dos/wince的，现在应该都淘汰了）\r\n所以可以安装一个你编写的软件，看它本地的数据库的格式，一般也没有加密，读取然后同步出来即可。", "Konwledge_Point": "树中的独立集", "Question": ["关于在收银机上获取数据的问题。", ["需求及场景:", "\n在各种收银机上收款,想在另一个系统中记录收银数据(支付方式:支付宝/微信/银联 ;收款金额 等)", "\n问题:", "\n这种问题要怎么解决呀,收银机是独立的,在不对接或者更改收银机系统的情况下怎么能解决这个问题呀.", "\n\n", "感谢各位大佬了!!!"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以在同一网页中设置两个字典对象, 根据选择中文或者英文。在网页上显示更新不同字典对象的内容。&lt;br /&gt;可以用vue的机制动态自动更新网页上显示的内容&lt;br /&gt;需要在切换页面的时候保持选择的语言环境&amp;#xff0c;可以把选择语言的状态保存在localStorage中&amp;#xff0c;下次打开页面时从localStorage中获取语言状态。&lt;br /&gt;给你写了个例子&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;lt;!doctype &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;http-equiv&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;IE&amp;#61;edge,chrome&amp;#61;1&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt; 页面名称 &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;src&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;app&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;lang.word2&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;lang.word1&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;选择中文&amp;#34;&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-attr\"&gt;click&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;changeLang(&amp;#39;cn&amp;#39;)&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;选择英文&amp;#34;&lt;/span&gt; &amp;#64;&lt;span class=\"hljs-attr\"&gt;click&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;changeLang(&amp;#39;en&amp;#39;)&amp;#34;&lt;/span&gt; /&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; cn &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;10月9号&amp;#xff0c;今天老板吃了好多饭。&amp;#34;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;你好&amp;#34;&lt;/span&gt;,\n};\n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; en &amp;#61; {\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;word1&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;Oct 9th, my boss ate too much today.&amp;#34;&lt;/span&gt;,\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;word2&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;,\n};\n \n&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; vm &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Vue&lt;/span&gt;({\n    &lt;span class=\"hljs-attr\"&gt;el&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;#app&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: {\n        &lt;span class=\"hljs-attr\"&gt;cn&lt;/span&gt;:cn,\n        &lt;span class=\"hljs-attr\"&gt;en&lt;/span&gt;:en,\n        &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;:{},\n    },\n    &lt;span class=\"hljs-attr\"&gt;created&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;lang&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;localStorage&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;lang&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;?&lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;en&lt;/span&gt;:&lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;cn&lt;/span&gt;;\n    },\n    &lt;span class=\"hljs-attr\"&gt;methods&lt;/span&gt;: {\n        &lt;span class=\"hljs-attr\"&gt;changeLang&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;name&lt;/span&gt;) {\n            &lt;span class=\"hljs-variable language_\"&gt;localStorage&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;lang&lt;/span&gt; &amp;#61; name;\n            &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;lang&lt;/span&gt; &amp;#61; name&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;?&lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;en&lt;/span&gt;:&lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;cn&lt;/span&gt;;\n        }\n    }\n});\n&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答&lt;strong&gt;右上方的【采纳】&lt;/strong&gt;按钮&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["html网页多语言动态切换", [" ", "电脑xiao白，研究室要更新多语言主页。", "之前研究室用的都是静态切换方式，中英文分开设置页面。更新内容太繁琐，英文界面就年久失修了。", "\n", "这次我想设置一个动态切换方式。", "理想环境是，设置一个全局函数，用来选择中文或者英文。在网页上弄一个语言切换开关。", "然后", "针对需要多语言的词条", "，提供中文英文两种内容，依据全局函数来显示内容。（有些内容不需要多语言）", "\n", "研究室主页更新的内容不多，之前看到过在网页文件目录下分别设置cn.json和en.json文件的方式，还是觉得太麻烦了。", "最好就是，每次更新的时候，都只在", "同一网页文件", "上更新。", "比如今天发生了一件事，我要添加的内容只有：", "（", "cn", "） 10月9号，今天老板吃了好多饭。", "（", "en", "） Oct 9th, my boss ate too much today.", "然后根据选择的语言显示相应内容。", "\n", "还有就是主页有不同的Tab，人员、研究课题介绍等等。这些页面文件相互", "独立", "。", "需要在切换不同Tab的时候，保持选择的语言环境。", "比如主页选了英文环境，这时候点击\"Member\"，希望跳转的\"Member\"页面仍然是英文，而不是中文\"人员\"。", "\n", "请问可不可以提供", "相应的html代码", "然后这么做有啥缺点吗，比如加载网页慢之类的？", "\n", "谢谢"]], "Tag": "算法设计"}
{"Answer": "```\r\n#include &lt;stdio.h&gt;\r\nint luck(int n)\r\n{\r\n  while (n &gt; 0)\r\n  {  \r\n    if (n % 10 == 7) return 1;\r\n    n /= 10;\r\n  }\r\n  return 0;\r\n}\r\nint main()\r\n{\r\nint a, b;\r\nscanf(\"%d%d\", &amp;a, &amp;b);\r\nfor (int i = a; i &lt;= b; i++)\r\n{\r\nif (luck(i)) printf(\"%d \", i);\r\n}\r\nreturn 0;\r\n}\r\n```", "Konwledge_Point": "树中的独立集", "Question": ["c++幸运数有偿求速解谢谢", ["问题 C: 关键数7", "\n、、", "\n\n", "题目描述", "\n小茗童鞋最近在数学课上学到了幸运数，他想编写一个程序来看看，但是他刚开始学，不能自己独立的写出一个程序，希望作为好朋友的你帮帮他：", "\n给定一个区间[a,b]，求出区间中幸运数并数出来。幸运数的定义是这个数字里面含有数字7。例如27,37,77等他们都是幸运数", "\n输入", "\n输入两个整数a,b", "\n输出", "\n输出所有在区间中的幸运数, 如果幸运数的个数大于1，以空格分隔输出", "\n样例输入 Copy", "\n10 20", "\n样例输出 Copy", "\n17"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我的C和C&amp;#43;&amp;#43;专栏中&amp;#xff0c;刚好有一篇&amp;#xff0c;演讲比赛流程管理系统的博文&amp;#xff0c;希望可以帮到你&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["c语言的题目，请给位大神解答", ["编程实现一评分程序,设有6位选手参赛,比赛分3个分项,每个分项独立计分,程序能接收键盘输入各选手的分项得分,存入数组中。然后对各选手的分项一得分分别以30%,30%,40%计算总分,再找出并显示总分最高选手的选手号码和总分。"]], "Tag": "算法设计"}
{"Answer": "使用事件：在界面软件中用 CreateEvent 创建一个命名事件，然后用Winexec或者ShellExecuteEx打开接收软件。在接收软件中用 OpenEvent （传入 CreateEvent 创建的事件名称）打开在界面软件中已经创建了的事件。接收完成后，设置该事件信号，界面软件即可知道已经完成接收。", "Konwledge_Point": "树中的独立集", "Question": ["vc6.0如何在工程内调用另一个工程", ["就是说我有两个独立的工程，一个是系统界面软件，一个是接收数据的软件。我想要在系统界面中点击一个按钮打开接收数据的软件，并且在接收完成后再系统界面上显示下载完成。看到网上虽然可以在系统界面软件按钮处用Winexec或者ShellExecuteEx打开接收软件进行接收，但是不知道接收软件要怎么在下载完成后给系统界面一个返回值，用来执行显示下载完成，要在系统界面显示下载完成。", "\n还有一个办法就是合并，不过不知道具体怎么操作，是把Source Files，Header Files，Resource Files的文件都添加到界面软件代码中吗？我是新手，还请多多指教。"]], "Tag": "算法设计"}
{"Answer": "[quote]http://tapestry.apache.org/[/quote]", "Konwledge_Point": "树中的独立集", "Question": ["关于WEB组件(高手请进)", ["我们开发的系统中功能模块很多, 现在计划把里面的一个功能模块作成一个组件, 页面再通过对这些组件的配置来完成. 要求组件相对独立...请问各位哪个WEB框架适合?", "问题补充", "忘记说了, 组件之间可以嵌套..."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;无法将原有全量包项目改为增量包项目&amp;#xff0c;只能重新建项目&amp;#xff0c;来只更新增量文件&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["VS打包如何设置打增量包", ["VS2010可以打全量包，可以打增量包吗？项目属性中有一个功能是是否移除上一个版本，如果移除，则是先卸载之前的版本，再安装。不移除则是两个版本都作为独立程序运行。所以我想问，vs2010是否能制作补丁形式的安装包，这样可以减小每次的安装包大小"]], "Tag": "算法设计"}
{"Answer": "在两页之间插入一个分页符，这样无论前面有多少页，“第二页”始终单独一页。\r\n还有一个办法，在第一页上放一个文本框，你的第一页的数据放在文本框中，就算数据多，那么后面的数据显示不下不显示，不会放入第二页。", "Konwledge_Point": "树中的独立集", "Question": ["Word文档 有两个模板，怎么设置无论模板1数据多少，都不影响模板2", ["如题，我word中 新建了两个模板，可以理解为2页，每一页一个模板，我模板1的数据是动态产生的，所以会很多，模板会称很长，这样会影响模板二，使模板二被分成2页显示，问下怎么设置，无论模板1数据有多少，模板2独立页面不会改变？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;vscode点击界面左下角&amp;#xff0c;可以切换不同的python环境。&lt;br /&gt;选择不同的python环境&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vscode和anaconda同时安装，python环境和包共享", ["我的电脑同时安装了vscode和anaconda，我用cmd安装了包，发现anaconda里的base里也存在这个包，也就是两个软件共享了，而且python也是共享的，我想让这两个软件python版本和包能独立开，该怎么做？（只有anaconda中的base环境与VScode共用了，其他环境不受影响）谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT &lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;1、开启远程桌面并授权remote账户进行远程桌面访问&amp;#xff1a;&lt;br /&gt;步骤&amp;#xff1a;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;&amp;#xff08;1&amp;#xff09;在服务器上打开“远程桌面服务配置”&amp;#xff08;运行“control system”或者“mstsc”命令&amp;#xff09;&amp;#xff0c;选择“允许远程连接到此计算机”&amp;#xff0c;勾选“允许远程桌面连接”&amp;#xff0c;并选择“选择用户”按钮。&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;2&amp;#xff09;在“选择用户或组”窗口中&amp;#xff0c;点击“添加”按钮&amp;#xff0c;输入“remote”并点击“检查名称”按钮&amp;#xff0c;然后选择“remote”用户账户&amp;#xff0c;点击“确定”按钮&amp;#xff0c;再点击“关闭”按钮。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;2、禁止remote账户本地登录&amp;#xff0c;取消remote账户远程关机权限并将电源对话框中的“断开连接”选项隐藏&amp;#xff1a;&lt;br /&gt;步骤&amp;#xff1a;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;(1)使用本地安全策略编辑器&amp;#xff08;secpol.msc&amp;#xff09;打开本地安全策略&amp;#xff0c;选择“本地策略”-“用户权限分配”。&lt;br /&gt;(2)找到“允许本地登录”的策略&amp;#xff0c;双击进入编辑界面&amp;#xff0c;然后从“remote”账户列表中删除该策略。&lt;br /&gt;(3)找到“关机系统”的策略&amp;#xff0c;双击进入编辑界面&amp;#xff0c;然后从“remote”账户列表中删除该策略。&lt;br /&gt;(4)使用组策略编辑器&amp;#xff08;gpedit.msc&amp;#xff09;打开“用户配置”-“管理模板”-“开始菜单和任务栏”。&lt;br /&gt;(5)找到“移除和禁止访问关闭计算机”策略&amp;#xff0c;双击进入编辑界面&amp;#xff0c;选择“已启用”&amp;#xff0c;然后在下面的“选项”中勾选“断开”&amp;#xff0c;点击“确定”按钮保存设置。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;3、设置远程桌面连接无时间限制&amp;#xff1a;&lt;br /&gt;步骤&amp;#xff1a;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;(1)使用组策略编辑器&amp;#xff08;gpedit.msc&amp;#xff09;打开“计算机配置”-“管理模板”-“Windows组件”-“远程桌面服务”-“远程桌面会话主机”。&lt;br /&gt;(2)找到“连接超时限制”策略&amp;#xff0c;双击进入编辑界面&amp;#xff0c;选择“已启用”&amp;#xff0c;然后将超时限制设置为“从不断开连接”&amp;#xff0c;点击“确定”按钮保存设置。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;4、开放远程桌面3389端口的进出站连接&amp;#xff0c;阻止139&amp;#xff0c;445共享端口以及系统高危端口137&amp;#xff0c;138端口的入站连接&amp;#xff0c;以端口号命名规则&amp;#xff1a;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;(1)创建阻止139&amp;#xff0c;445共享端口以及系统高危端口137&amp;#xff0c;138端口的入站连接规则&amp;#xff1a;&lt;br /&gt;(2)规则类型选择“端口”。&lt;br /&gt;(3)选择“TCP”协议。&lt;br /&gt;(4)指定端口号为“139、445、137、138”。&lt;br /&gt;(5)阻止连接。&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;5、在防火墙入站规则中&amp;#xff0c;禁止预定义的文件和打印机共享连接&amp;#xff1a;&lt;br /&gt;步骤&amp;#xff1a;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;(1)在“高级安全中心”中&amp;#xff0c;选择“入站规则”-“新建规则”。&lt;br /&gt;(2)创建禁止预定义的文件和打印机共享连接的规则&amp;#xff1a;&lt;br /&gt;(3)规则类型选择“文件和打印机共享”。&lt;br /&gt;(4)选择“任何网络”。&lt;br /&gt;(5)阻止连接。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["网络安全管理员操作技能考核三级", ["公司新增一台服务器用来运行独立的业务系统，该系统为了安全只需要开放远程桌面进行管理，你作为网络安全防护人员需要对服务器进行相关配置。相关用户账户已配置完毕，你仅需对一下具体要求进行配置：", "（1）开启远程桌面，并授权remote账户进行远程桌面访问", "（2）禁止remote账户本地登录，取消remote账户远程关机权限并将电源对话框中的“断开连接”选项隐藏", "（3）设置远程桌面连接无时间限制", "（4）开放远程桌面3389端口的进出站连接，阻止139，445共享端口以及系统高危端口137，138端口的入站连接，以端口号命名规则", "（5）在防火墙入站规则中，禁止预定义的文件和打印机共享连接", "要详细过程，不会做来学过程的"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; name;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; isMale;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Student&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; name,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age,&lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; isMale,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score)&lt;/span&gt;&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.name&amp;#61;name;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.age&amp;#61;age;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.isMale&amp;#61;isMale;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.score&amp;#61;score;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;show&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(name&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&amp;#43;age&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&amp;#43;(isMale?&lt;span class=\"hljs-string\"&gt;&amp;#34;女&amp;#34;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#34;男&amp;#34;&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&amp;#43;score);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["【问题描述】定义一个学生类Student", ["【问题描述】定义一个学生类Student，其中包括4个成员变量：姓名name，年龄age，性别isMale，成绩score；一个带4个参数的构造方法用来创建学生对象，一个实例方法show()用来将学生的姓名、年龄、性别和成绩独立地显示在一个行中（每个信息之间用英文状态的逗号隔开，输完成绩后要求换行，输出样例：李明，15岁，女，100 分）。再定义一个演示类Test，在其中输入10个学生的信息，并将创建的学生对象保存到数组stu中，然后遍历数组，找到成绩最高和最低的学生，调用show方法将他们的信息显示出来。", "\n", "【输入形式】10个学生的姓名、年龄、性别和成绩", "\n", "【输出形式】成绩最高和最低的学生信息（如有并列的，只输出下标较小的那个学生的信息），注意：其中冒号为中文状态，逗号为英文状态", "\n", "【样例输入】", "\n", "FANG  15  false   98", "LEE    14  true    84", "WANG    15  true    90", "SUN  15  false   86", "QIAN  16  false   76", "LI  15  false   100", "GU  14  true    86.5", "XU  15  true    60", "LIANG  15  true    99", "AN  14  true    80", "【样例输出】", "\n", "MAX:LI,15,FEMALE,100.0", "MIN:XU,15,MALE,60.0"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n        Scanner sc&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Scanner&lt;/span&gt;(System.in);&lt;span class=\"hljs-comment\"&gt;//键盘录入数据&lt;/span&gt;\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入性别&amp;#xff0c;年龄&amp;#xff0c;体重&amp;#xff0c;身高并用空格隔开&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; isMale&amp;#61;sc.&lt;span class=\"hljs-built_in\"&gt;nextBoolean&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//性别&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; age&amp;#61;sc.&lt;span class=\"hljs-built_in\"&gt;nextInt&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//年龄&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; weight&amp;#61;sc.&lt;span class=\"hljs-built_in\"&gt;nextDouble&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//体重&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; height&amp;#61;sc.&lt;span class=\"hljs-built_in\"&gt;nextDouble&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//身高&lt;/span&gt;\n        sc.&lt;span class=\"hljs-built_in\"&gt;nextLine&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//换行结束录入数据&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; strong;&lt;span class=\"hljs-comment\"&gt;//默认true强壮 false不强壮&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (isMale&amp;#61;&amp;#61;&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//isMale&amp;#61;&amp;#61;true该数据为男生数据&amp;#xff0c;判断是否符合强壮的标准&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (height &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;180&lt;/span&gt; &amp;amp;&amp;amp; weight &amp;gt; &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;) {\n                strong&amp;#61;&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                strong&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            }\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//否则为女生&amp;#xff0c;判断是否符合强壮的标准&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (height&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;170&lt;/span&gt; &amp;amp;&amp;amp; weight&amp;gt;&lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;){\n                strong&amp;#61;&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                strong&amp;#61;&lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;//输出数据&lt;/span&gt;\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;isMale:&amp;#34;&lt;/span&gt;&amp;#43;isMale&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;; age:&amp;#34;&lt;/span&gt;&amp;#43;age&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;; weight:&amp;#34;&lt;/span&gt;\n                &amp;#43;weight&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;; height:&amp;#34;&lt;/span&gt;&amp;#43;height&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;; strong:&amp;#34;&lt;/span&gt;&amp;#43;strong);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["大师们帮我看看这题，解答", ["题目描述", "\n", "编写一个程序Main.java，要求运行时通过键盘输入一个人的性别、年龄、身高、体重到变量isMale （类型为boolean）、age（类型为int） 、height （类型为double） 、weight （类型为double） 中。如果男性身高超过180CM（含）、体重超过80KG（不含），则表示这个人很强壮；女性身高超过170CM（含）、体重超过65KG（不含），则表示这个人很强壮（用boolean类型的strong变量表示）。最后输出他/她的完整信息。", "\n", "输入描述", "\n", "在同一行中输入一个布尔型的值、一个整数和两个浮点数，每个值之间用空格分隔", "\n", "输出描述", "\n", "在一个独立的行中，按性别、年龄、身高、体重、强壮的顺序输出详细信息，每个部分包含变量名和变量值，变量名和变量值之间用英文状态的冒号分隔开。不同特征们之间用英文状态的分号加两个空格分隔开。", "\n", "样例输入", "\n", "true 20 186 99", "样例输出", "\n", "isMale:true;  age:20;  height:186.0;  weight:99.0;  strong:true"]], "Tag": "算法设计"}
{"Answer": "使用的是tomcat5吗？是针对post请求吗？\r\n如果上述都是的话，那么使用楼上的过滤器设置一下编码就可以了。\r\n如果是tomcat5的get请求那么就只用改服务器的配置文件了。\r\n如果是其他服务器如：weblogic、jboss啥的话还可以使用服务器自身的配置文件来设置请求的编码。", "Konwledge_Point": "树中的独立集", "Question": ["关于编码的问题", ["我们有 独立的门户系统 和管理系统。以前 门户和 管理系统 两边都是用的iso8859-1，门户这边一个form 提交到管理这边。", "\n现在门户改版 全改成 utf-8了 ，中文的 用户名 登陆就出现问题了，试了很多在 管理这边转换编码的方式都不行，请大家处处主意。", "\n[b]问题补充：[/b]", "\n第二种 ", "\ntomcat的server.xml中 ", "\n\n", "这个显然没有法用，用了n久的系统 太庞大 这些哪里可以改哦。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;按照你的需求的意图来提取文本&amp;#xff0c;我还没实现。不过我通过一种逆向思维&amp;#xff0c;把全部的标签文本能识别出来&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/749309922576185.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;然后可以使用js方法&amp;#xff0c;替换掉标签内容&amp;#xff0c;即可拿到文本内容&amp;#xff1a;&lt;br /&gt;&lt;code class=\"language-javascript\"&gt;str.replace(&amp;#39;&amp;lt;(.|n)&amp;#43;?&amp;gt;&amp;#39;, &amp;#39;&amp;#39;);&lt;/code&gt;&lt;/p&gt;\n&lt;p&gt;有帮助的话&amp;#xff0c;麻烦高抬贵手给个采纳&amp;#xff0c;谢谢~&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["正则表达式怎么获取标签前后的内容", ["原神中", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "池和常驻", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "池保底", "</", "span", ">", "是不", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "互通", "</", "span", ">", "的，无论是", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "池还是常驻池，都是90抽，必定出现五星角色。同时在", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "池中，180抽必定出现当期五星", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "角色。同时保底的次数是会继承的，但是", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "池保底", "</", "span", ">", "与常驻", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "池保底", "</", "span", ">", "是互相独立的，互不影响。 在原神中，", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "池和常驻", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "池保底", "</", "span", ">", "是不", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "互通", "</", "span", ">", "的。 玩家进行抽取角色的时候，无论是", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "池还是常驻池，都是90抽，必定出现五星角色。同时在", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "池中，180抽必定出现当期五星", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "角色。同时保底的次数是会继承的，但是", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "up", "</", "span", ">", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "池保底", "</", "span", ">", "与常驻", "<", "span", " ", "style", "=", "\"color:#ff0000\"", ">", "池保底", "</", "span", ">", "是互相独立的，互不影响。\n\n", "\n", "\n", "用这个正则没法获取标签前后文本内容"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Rectangle类&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Rectangle&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; width;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; height;\n    \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;perimeter&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-comment\"&gt;//    求周长&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; (width &amp;#43; height) * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;area&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-comment\"&gt;//    求面积&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; width * height;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;price&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;草皮的总价为&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;.format(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;area&lt;/span&gt;()*&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;元&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setRectangle&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; width, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; height)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-comment\"&gt;//有参构成&amp;#xff0c;输入参数放到对象里&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.height &amp;#61; height;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.width &amp;#61; width;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;defaultRectangle&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-comment\"&gt;//无参构造&amp;#xff0c;设置默认值&amp;#xff0c;调用方法&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.height &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.width &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;r1的周长为&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;.format(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;perimeter&lt;/span&gt;())&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;米&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;perimeter&lt;/span&gt;();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;主方法&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.*;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n\n        Scanner sc &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Scanner&lt;/span&gt;(System.in);\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;草皮的长和宽&amp;#xff0c;中间用空格分隔&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; width &amp;#61; sc.&lt;span class=\"hljs-built_in\"&gt;nextFloat&lt;/span&gt;();\n        &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; height &amp;#61; sc.&lt;span class=\"hljs-built_in\"&gt;nextFloat&lt;/span&gt;();\n        Rectangle r2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Rectangle&lt;/span&gt;();\n        &lt;span class=\"hljs-comment\"&gt;//把参数放入到对象里&lt;/span&gt;\n        r2.&lt;span class=\"hljs-built_in\"&gt;setRectangle&lt;/span&gt;(width, height);\n        &lt;span class=\"hljs-comment\"&gt;//计算地皮价格&lt;/span&gt;\n        r2.&lt;span class=\"hljs-built_in\"&gt;price&lt;/span&gt;();\n        &lt;span class=\"hljs-comment\"&gt;//ri周长独立计算&lt;/span&gt;\n        Rectangle r1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Rectangle&lt;/span&gt;();\n        r1.&lt;span class=\"hljs-built_in\"&gt;defaultRectangle&lt;/span&gt;();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;计算结果\n\n草皮的长和宽&amp;#xff0c;中间用空格分隔&amp;#xff1a;\n&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;\n草皮的总价为&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;360.00&lt;/span&gt;元\n&lt;span class=\"hljs-built_in\"&gt;r1&lt;/span&gt;的周长为&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;6.00&lt;/span&gt;米\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["定义长方形的类 帮解 解答代码", ["题目描述", "定义一个表示长方形的类Rectangle,要求其中有长length和宽width两个属性，有求周长perimeter和面积area的两个方法。", "定义一个带两个参数的构造方法用来创建指定长和宽的长方形；一个不带参数的构造方法，用来创建默认长和宽的长方形，默认的长为2，宽为1。", "请编写一个Main类，在其中调用不带参数的构造方法创建一个Rectangle类的对象r1，并调用成员方法计算它的周长在独立的行中输出。再定义一个Rectangle类的变量r2表示一块草坪，在“请输入草坪的长和宽：”提示信息后输入草坪的长和宽，并调用带两个参数的构造方法来创建草坪对象，计算其面积，输出种植这块草皮的价格 (草皮的单价为12元/平方米)。周长和面积的输出小数点后面输出2位。", "\n", "输入描述", "草皮的长和宽，中间用空格分隔：", "\n", "输出描述", "样例中的：为中文状态的冒号；周长和面积的输出小数点后面输出2位。", "\n", "输出样例", "r1的周长为：00.00米", "请输入草坪的长和宽：", "草皮的总价为：00.00元"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;进程是一种特殊的线程。&lt;br /&gt;进程的资源是独享的&amp;#xff0c;线程则共享所属进程的资源。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Java编程进程和线程的区别？", ["进程：是并发执行的程序在执行过程中分配和管理资源的基本单位，是一个动态概念，竞争计算机系统资源的基本单位。", "线程：是进程的一个执行单元，是进程内科调度实体。比进程更小的独立运行的基本单位。线程也被称为轻量级进程。", "一个程序至少一个进程，一个进程至少一个线程。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;那你认为他的依赖关系应该是什么样子的呢&amp;#xff1f;child4 和 child 5 合并&amp;#xff0c;变成一个依赖吗&amp;#xff1f;&lt;/p&gt;\n\n&lt;p&gt;面向对象中的准则啊&amp;#xff0c;高内聚低耦合。都保持单向依赖&amp;#xff0c;这样&amp;#xff0c;每个模块都是独立的。&lt;/p&gt;\n\n&lt;p&gt;优势在于&amp;#xff0c;这样设计&amp;#xff0c;提高模块的复用性&amp;#xff0c;可以使你更改需求的时候&amp;#xff0c;只需要更改某一层的代码就可以了&amp;#xff0c;不需要更新全部的代码。&lt;/p&gt;\n\n&lt;p&gt;比如&amp;#xff0c;你有一天&amp;#xff0c;你发现child4 不满足你的需求了&amp;#xff0c;但是呢&amp;#xff0c;child5里的大部分功能还是你需要的&amp;#xff0c;这个时候&amp;#xff0c;你就可以直接依赖child5了&amp;#xff0c;然后自己重写child4就可以了。如果child4 和 child5 变成一个依赖&amp;#xff0c;那你要做的就是重写一个大的依赖。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["springboot多模块依赖是否更合理？如果多入口，是否有什么影响？", ["1、springboot项目多模块，互相存在依赖关系，比如parent工程<packing>pom<packing>，下面有五个子工程分别为child1-5。", "\n\n", "2、依赖关系如图所示:", "\n\n", "\n\n", " ", "\n\n", "从上到下依赖，child1-3互相没有依赖，都可以独立打包。", "\n\n", "3、我想请教的问题就是，为何要这样设置？优势在哪里？child1-3是可以独立出来的，只是都依赖了child4->child5，那么即使放在一个工程中，也只是少了一部分依赖关系代码。没看出明显优势，还加大了理解难度。"]], "Tag": "算法设计"}
{"Answer": "你没有考虑连续召唤的问题，试试下面这个输入\r\n```\r\n5\r\n1 1 2 3 4\r\n1\r\n1 2 3 4 5\r\n```\r\n这就是判断一个多叉树里根节点有几个子节点的问题，输入数据后从每个节点向父节点方向遍历，经过的节点的总召唤数加一。\r\n抽卡时从手牌节点向上遍历，遇到的节点对应的值加一。\r\n\r\n```\r\n#include &lt;iostream&gt;\r\n#include &lt;algorithm&gt;\r\n\r\nusing namespace std;\r\n\r\n#define max(a,b) ((a)&gt;(b)?(a):(b))\r\n\r\nint main(){\r\n    int n, m;\r\n    int a[100], b[5], call[100] = {0};\r\n    bool choose[100] = {0};\r\n\t\r\n    cin &gt;&gt; n;\r\n    for( int i = 0; i &lt; n; i++ )\r\n        cin &gt;&gt; a[i];\r\n\t\r\n    cin &gt;&gt; m;\r\n    for( int i = 0; i &lt; m; i++ ){\r\n        memset(choose, false, 100);\r\n        memset(call, 0, 100);\r\n\t\t\t\r\n        for(int j = 0; j &lt; 5; j++){\r\n            cin &gt;&gt; b[j];\r\n            choose[b[j]] = true;\t\r\n        }\r\n\t\t\t\t\r\n        for(int j = 0; j &lt; 5; j++){\r\n            int temp = b[j];\r\n            while(a[temp]!=temp &amp;&amp; choose[a[temp]]){\r\n                call[a[temp]]++;\r\n                temp = a[temp];\r\n            }\r\n        }\r\n        \r\n        int mCall = 0;\r\n        for( int j = 0; j &lt; 5; j++ ){\r\n            mCall = max(mCall, call[b]);\r\n        }\r\n        cout &lt;&lt; mCall + 1 &lt;&lt; endl;\r\n    }\r\n\t\r\n    return 0;\r\n} \r\n```", "Konwledge_Point": "树中的独立集", "Question": ["这道题为什么A不了，应该用什么算法", ["hwf有一套卡组，一共有 n 张不同的卡片，编号从 1 到 n，每张卡片都是一只效果怪兽。", "\n\n", "编号为 i 的卡片的效果是：当编号 ai 的卡片在场上时，可以把手中的这张卡片特殊召唤到场上。", "\n\n", "现在有 m 次互相独立的询问，对于每次询问:", "\n\n", "hwf会从卡组中抽取 5 张卡片作为手卡。", "\n\n", "在每次询问的开始，他可以选择手中的某一张卡片无条件召唤到场上，其他的手卡只能由卡片的效果特殊召唤上场。", "\n\n", "每次询问开始时，场上没有卡片。", "\n\n", "求他每次最多能召唤出多少张卡片？", "\n\n", "输入数据", "\n第一行为一个整数n，代表卡组中卡的数量（5≤n≤60）。", "\n第二行有n个整数a1,a2...an，代表第i张怪兽可以在怪兽ai在场时特殊召唤到场上。（1≤ai≤n）。", "\n第三行为一个整数m，代表询问次数（1≤m≤100）。", "\n接下来每行有五个整数，b1,b2,b3,b4,b5（1≤bi≤n）代表手中的怪兽卡的编号。", "\n\n", "输出数据", "\n一共m 行", "\n每行输出一个整数，代表每次询问中最多召唤出的怪兽数量。", "\n\n", "样例输入", "\n5", "\n1 1 1 1 1", "\n1", "\n1 2 3 4 5", "\n样例输出", "\n5", "\n\n", "这道题应该怎么解，一直A不了，不知道问题在哪儿", "\n\n", "#include <iostream>\n#include <string.h>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    int a[65];\n    for(int i = 1;i <= n;i++){\n        cin >> a[i];     //存储所有卡片的技能\n    }\n    int m;\n    cin >> m;\n    int b[105][5];\n    for(int i = 1;i <= m;i++){\n        for(int j = 0;j < 5;j++){\n            cin >> b[i][j];    //存储m组，每组5个的抽到的卡片\n        }\n    }\n    int d[5];    //用来保存放出第i张卡片时最多能够上场的数量\n    for(int i = 1;i <= m;i++){\n        memset(d,0,sizeof(d));    //将其原始值置为0\n        int max = 1;     //至少1张牌在场\n        for(int k = 0;k < 5;k++){\n            for(int h = 0;h < 5;h++){\n                if(a[b[i][k]] == b[i][h]){     //判断如果存在技能和手中牌有重合时，总上场牌数增加\n                    d[h]++;\n                }\n                if(d[h] > max){\n                    max = d[h];\n                }\n            }\n        }\n        cout << max << endl;\n    }\n    return 0;\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一个项目里程序只认一个main()函数&amp;#xff0c;这是程序运行的起点&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["为什么codeblocks同一个项目里一直运行上一个程序，无法运行第二个", ["为什么codeblocks同一个项目里一直运行上一个程序，无法运行第二个，怎么独立运行多个程序"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;检查元素看是否有该样式&amp;#xff0c;以判断是否成功引入&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/933009852146168.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["element container无法达到官方例子效果", ["示例", "\n", "我的", "aside就是独立成为一行，怎么改都不行", "贴上我的引用……", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "首先你需要了解每个进程的进程名称，通过\r\nps   -ef  |  grep  加进程名 得到进程的ID\r\n然后使用\r\ngdb  atach  加进程号 进入该进程进行调试", "Konwledge_Point": "树中的独立集", "Question": ["GDB调试多守护进程的问题", ["情况是这样的：我现在手上有一个Linux C程序，这个程序一共由三个模块组成，这三个模块分别是一个独立的进程，这三个进程之间使用消息队列来通信，每一个模块都会转变为守护进程，然后这个三个模块是使用一个shell脚本同时启动，请问要使用GDB调试这三个模块中的某一个模块我该怎么做？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;万物都是对象&amp;#xff0c;f是对象&amp;#xff0c;h也是对象&amp;#xff0c;f和h里的b也是对象&amp;#xff0c;所有的对象都是独立的&amp;#xff0c;这句话没错&amp;#xff0c;所以&amp;#xff0c;所有的对象都有自己独立的空间&amp;#xff0c;而f里面包含了b&amp;#xff0c;这叫对象的组合&amp;#xff0c;嵌套&amp;#xff0c;所以即使b在f里面&amp;#xff0c;b也有自己独立的地址&amp;#xff0c;而不是说b在f里面&amp;#xff0c;b就失去了自己&amp;#xff0c;没有自己的地址了。&lt;br /&gt;而至于f里的b和h里的b为啥hashCode相同&amp;#xff0c;请查看String类重写的hashCode方法&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["java不同对象的hashcode为什么一样", ["class", " ", "A", "{\n    ", "private", " ", "String", " b;\n    A (", "String", " q){\n        ", "this", ".", "b", "=q;\n    }\n    ", "A", "(", "){};\n   ", "void", " ", "xianShi", "(", "){\n       ", "System", ".", "out", ".", "println", "(b.", "hashCode", "());\n   }\n}\n", "public", " ", "class", " ", "Main", " ", "extends", " ", "A", "{\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[]args", "){\n      A f=", "new", " ", "A", "(", "\"3232\"", ");\n      A g=", "new", " ", "A", "(", "\"32321\"", ");\n      A h=", "new", " ", "A", "(", "\"3232\"", ");\n     f.", "xianShi", "();\n     g.", "xianShi", "();\n     h.", "xianShi", "();\n    }\n}\n\n", "\n", "我的理解是，f和h是两个处于独立内存空间的对象，他们内部各有一个String b；，也就是无论他们的b赋什么值，他们的b的内存都不一样。但是请看，这个码中，对象f和h中的b的哈希值为何时相同的"]], "Tag": "算法设计"}
{"Answer": "鸡蛋都放一个篮子里面，篮子坏了就都打了。\r\n要看你们这些系统是否能接受同时不能使用的情况。\r\n分开也有分开的好处，至少可以独立作业，一个数据库坏了或者数据出问题了不会影响别的系统。\r\n个人认识：\r\n与其把数据库作为统一平台，不如做一个数据的接口服务平台。\r\n所有数据交互都要走这个接口（怎么实现随便了，可以是WEB-API，可以是Web-Service）\r\n这样的话，至少你可以选择隐藏在这层接口后的数据库是现在一样的大家被动同步的方式，还是你想做的统一数据库平台。\r\n\r\n在短期内，做出这个服务层之后，别的模块只需要少量修改，就可以按照目前的业务流程持续作业，然后慢慢修改这个服务层后面的数据组织方式。这样至少可以平滑过渡，不至于大家突然变换业务流程不习惯，也可以在缓慢过渡过程中及时发现新问题，及时解决。", "Konwledge_Point": "树中的独立集", "Question": ["企业多个系统能否整合为一个数据库", ["我们公司现在有多个独立的系统在运行中，这些独立的系统又会有很多共同的基础数据，如：人员，组织，角色，还有一些共同的业务数据，现状是A系统的数据通过跑批或存储过程同步到B系统，B系统经过一些业务加工又会把数据同步给C系统，这样在系统间同步数据总会出现各种各样的问题。", "\n现在公司想把这些系统重新开发，我的想法是把所有系统的数据集中到一起，做一个统一的数据库平台，然后其他系统都是基于这个数据库平台进行开发，这样就可以避免系统间同步数据的苦恼，不知道这样的方案可行性怎么样"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;有的资料好像还真是对于数据完整性的定义有所不同&amp;#xff0c;就和你说的数据库系统概论这本书&amp;#xff0c;所以本来这道题看根据参考哪些资料来定义这个答案了&amp;#xff0c;是有一些歧义&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关系数据库中的数据完整性是指", ["关系数据库中的数据完整性是指 （ A   ）", "A. 数据的正确性", "B. 数据的独立性、可控性", "C. 数据的一致性", "D. 数据的有效性和相容性", "这个题目好奇怪，我看数据库系统概论书上写着有效性和相容性，有些资料又说包括正确性、有效性、相容性，这个题目只是正确性，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;mdi应用吗&amp;#xff1f;要显示在mdi容器中&amp;#xff0c;表单需要设置form的MdiParent属性为mdi容器&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nvar f&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;new FormA()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nf.MdiParent&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;this&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nf.Show()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C#子窗口调用同级子窗口时怎么将该子窗口显示在父级窗口上", ["我使用一个父级窗口调用一个子窗口A来实现读取数据库并显示在A窗口中的datagridview控件上，现在父级窗口调用子窗口B实现筛选查询功能，B窗口实现调用同等级的子窗口A，并将其显示在父级窗口上。", "现在的问题是，窗口B实现调用了窗口A , 但是显示的窗口A 为独立弹窗，并没有在父级窗口上显示出来，有哪位同事能够指点一下迷津！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;问题一&amp;#xff1a;写一个项目&amp;#xff0c;通过权限管理&amp;#xff1b;&lt;br /&gt;问题二&amp;#xff1a;写一个项目。一般的前端登录页面都会有一个角色选项&amp;#xff0c;或者用户名密码登录后&amp;#xff0c;后端判断用户角色。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["开发中管理层和用户层该如何编写", ["问题一：在真实开发中，后端一般有面向用户和面向管理员的区别，那么对于这两个不同的人群，后端项目是分开写，比如说写成两个不同的独立的项目上线，还是写成一个项目，比如说通过权限管理来规定不同的群体能够访问的接口，还是一些其他的方式？", "问题二：对于这两种 不同的人群，前端是写成一个项目还是写成两个独立的项目呢？"]], "Tag": "算法设计"}
{"Answer": "如果不包含函数，可以JSON.stringify转为字符串，在JSON.parse刚才生成的字符串得到，否则就要for深度拷贝http://snandy.iteye.com/blog/842097", "Konwledge_Point": "树中的独立集", "Question": ["js 如何获取引用传递的值", ["复杂类型如Object的传递是引用传递，如何获得相同值的独立的一份拷贝呢？"]], "Tag": "算法设计"}
{"Answer": "好吧 我贴个以前写的代码给你看看！！里面有设置串口协议的  反正自己留着也没用给大家看吧 这个是linux C的\r\n\r\n1. //短信接收端\r\n//2013-11-6\r\n//yang\r\n//完成于2013-11-7\r\n#include&lt;stdio.h&gt;\r\n#include&lt;sys/types.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n#include&lt;string.h&gt;\r\n#include&lt;fcntl.h&gt;\r\n#include&lt;sys/stat.h&gt;\r\n#include&lt;termios.h&gt;\r\n#include &lt;locale.h&gt;\r\nchar *change(char *p);\r\nint jiema(char *q);\r\nchar * unicode_utf8(char *ch);\r\nint utf_unicode(char *output,char* input,int x);\r\n\r\nint setS0(void)\r\n{\r\nint fd=0,ret=0;\r\n\tstruct termios old,new;\r\n\tfd = open(\"/dev/ttyS0\",O_RDWR);\t\t//U转串\r\n\tif(fd == -1)\r\n\t{\r\n\tperror(\"open\");\r\n\t//exit(0);\r\n\t}\r\n\tint g = tcgetattr(fd,&amp;old);\r\n\tif(g == -1)\r\n\t{\r\n\tprintf(\"COM get fail\\n\");\r\n\t//exit(0);\r\n\t}\r\n\tnew = old;\r\n\t\r\n\tcfsetispeed(&amp;new,B9600); \r\n\tcfsetospeed(&amp;new,B9600); \r\n\tnew.c_cflag |= (CLOCAL | CREAD);\r\n\t\r\n\tnew.c_cflag &amp;= ~PARENB;\r\n\tnew.c_cflag &amp;= ~CSTOPB;\r\n\tnew.c_cflag &amp;= ~CSIZE;\t\t//取消原有设置\r\n\tnew.c_cflag |= CS8;\r\n\ttcsetattr(fd,TCSANOW,&amp;new);\t//立即生效\r\n\treturn fd;\r\n}\r\n\r\nint main()\r\n{\r\n\t//char chr[350]=\"0891683108200945F7240D91688186929197F5000831116001516423044F60597D4F60597D\";\r\n\tchar chr[350]={'\\0'};\r\n\tint a=0,b=0,ret=0;\r\n\tchar ch[350]=\"\",ch1[25]=\"\",ch2[25]=\"\",ch3[25]=\"\";\r\n\tchar *pn=NULL;\r\n\tint fd=setS0();\t\t//设置端口\r\n    char *p=NULL, *q=NULL;\r\n\twrite(fd,\"ate0\\r\",5);\t\t//关闭回显\r\n\tsleep(1);\r\n\twrite(fd,\"at+cmgf=0\\r\",10);\t//设置读取格式\r\n\tsleep(1);\r\n\t\r\n\t\r\n\ttcflush(fd, TCIOFLUSH);\r\n\tsleep(1);\r\n\tret = 0;\r\n\twhile(1)\r\n\t{\r\n//*\t\t\r\n\t\tret=read(fd,ch3+strlen(ch3),20-strlen(ch3));\r\n\t\tif(ret &lt;= 0)\r\n\t\tcontinue;\r\n\t\tprintf(\"read===[%s]\\n\",ch3);\r\n\t\tif(strstr(ch3,\"+cmti:\") == NULL)\r\n\t\t{\r\n\t\t\tprintf(\"未发现新短信信息\\n\");\r\n\t\t\tsleep(2);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\r\n\t\t\tp=strchr(ch3,',');\t\r\n\t\t\tif(p == NULL)\r\n\t\t\tcontinue;\r\n\r\n\t\t\tq = strchr(p, '\\r');\r\n\t\t\tif(q == NULL)\r\n\t\t\tq = strchr(p, '\\n');\r\n\t\t\tif(q == NULL)\r\n\t\t\tcontinue;\r\n\t\t\tmemset(ch2,'\\0',25);\r\n\t\t\tprintf(\"len = %d\\n\",q-p-1);\r\n\t\t\tmemcpy(ch2,p+1,(q-p-1));\r\n\t\t\twrite(fd,\"at+cmgr=\",strlen(\"at+cmgr=\"));\r\n\t\t\twrite(fd,ch2,strlen(ch2));\r\n\t\t\twrite(fd, \"\\r\", 1);\r\n\t\t\tprintf(\"write:===[at+cmgr=%s]\\n\",ch2);\r\n\t\t\tsleep(1);\r\n\t\t\tmemset(chr,'\\0',sizeof(chr));\r\n\t\t\tret = read(fd,chr,350);\r\n\t\t\tprintf(\"read_ret: %d\\n\", ret);\r\n\t\t\tprintf(\"rcv mesg is [%s]\\n\",chr);\r\n\t\r\n//*/\t\r\n//9168\r\n//08\r\n\r\n\t\t\t//p = strstr(chr, \"9168\");\t\t//查找9168\r\n\t\t\tp = strstr(chr, \"9168\");\r\n\t\t\tif(p == NULL)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"can fand 9168\\n\");\r\n\t\t\t\texit(0);\r\n\t\t\t}\r\n\t\t\tpn=p-2;\r\n\t\t\tprintf(\"%s\\n\",pn);\r\n\t\t\tprintf(\"ch2:%s\\n\",ch2);\r\n\t\t\tmemcpy(ch2,pn,2);\r\n\t\t\tsscanf(ch2,\"%02X\",&amp;a);\r\n\t\t\ta=(a*2-4);\r\n\t\t\tprintf(\"a===%d\\n\",a);\r\n\t\t\tmemset(ch,'\\0',350);\r\n\t\t\tmemcpy(ch,pn+6,a);\r\n\t\t\tprintf(\"ch====%s\\n\",ch);\r\n\t\t\tchange(ch);\r\n\t\t\tch[strlen(ch)-1]='\\0';\r\n\t\t\tprintf(\"center num==%s\\n\",ch);\r\n\t\r\n\t\t\tmemset(ch2,'\\0',25);\r\n\t\t\tmemcpy(ch2,pn+8+a,2);\r\n\t\t\t//printf(\"0d==%s\\n\",ch);\r\n\t\t\tsscanf(ch2,\"%02X\",&amp;b);\r\n\t\t\tprintf(\"来源号码长度=%d\\n\",b);\r\n\t\r\n\t\t\tmemset(ch1,'\\0',25);\r\n\t\t\tmemcpy(ch1,(pn+(14+a)),b);\r\n\t\t\tchange(ch1);\r\n\t\t\tch1[strlen(ch1)-2]='\\0';\r\n\t\t\tprintf(\"message is from :%s\\n\",ch1);\r\n\t\r\n\t\t\tmemset(ch1,'\\0',25);\r\n\t\t\tmemcpy(ch1,(pn+(17+a+b)),14);\r\n\t\t\tputs(ch1);\r\n\t\t\tchange(ch1);\r\n\r\n\t\t\tint year=0,month=0,day=0,hour=0,mine=0,secort=0;\r\n\t\t\tsscanf(ch1,\"%2d%2d%2d%2d%2d%2d\",&amp;year,&amp;month,&amp;day,&amp;hour,&amp;mine,&amp;secort);\r\n\t\t\tprintf(\"send messages time is :%02dyear%02dmonth%02dday\\t%2d:%2d:%2d\\n\",year,month,day,hour,mine,secort);\r\n\t\t\tmemset(ch,'\\0',350);\r\n\t\t\tmemcpy(ch,pn+(a+b+17+14),2);\t//拷贝信息长度16进制\r\n\t\t\tprintf(\"16len===%s\\n\",ch);\r\n\t\t\tsscanf(ch,\"%02X\",&amp;a);\r\n\t\t\tprintf(\"rcv message len is: %d bit\\n\",a);\r\n\t\t\tmemset(ch,'\\0',350);\r\n\t\t\tmemcpy(ch,pn+(a+b+41),350);\r\n\t\r\nprintf(\"ch: [%s]\\n\", ch);\r\n\t\t\tchar *s=unicode_utf8(ch);\r\nprintf(\"rcv message is: [%s]\\n\",s);\r\n\t\t}\t\r\n\t}\r\n\r\n}\r\n\r\n/*___________________________changed_______________________________*/\r\nchar *change(char *p)\r\n{\r\n\tint i=0,j=0;\r\n\tchar tem[2]={'\\0'};\r\n\tfor(j=0;j&lt;strlen(p)/2;j++)\r\n\t{\r\n\t\ttem[0]=*(p+i);\r\n\t\t*(p+i)=*(p+i+1);\r\n\t\t*(p+i+1)=tem[0];\r\n\t\ti+=2;\r\n\t}\r\n\tprintf(\"p==%s\\n\",p);\r\n}\r\n\r\nchar * unicode_utf8(char *ch)  //----------------解码函数\r\n{\r\n\tint x=0;\r\n\tint n;\r\n\tint unicode_len=strlen(ch); //计算传入的字符长度\r\n\twchar_t wch[70]=L\"\\0\";\r\n\tchar *utf=(char *)malloc(70);\r\n\tsetlocale(LC_ALL,\"zh_CN.UTF-8\"); //设置本地编码格式\r\n\tfor(x=0;x&lt;unicode_len-1;x++)\r\n\t{\r\n\t\tsscanf(ch+4*x,\"%04X\",wch+x);  //将十六进制转换成宽整形\r\n\t}\r\n\t*(wch+x)='\\0';             //在宽整形后面追加上结束标志\r\n\tn=wcstombs(utf,wch,unicode_len);   //将宽整形转换成汉字,让utf指针指向他\r\n\t*(utf+x)='\\0';\r\n\tputs(utf);\r\n\treturn utf;   //返回指针\r\n}", "Konwledge_Point": "树中的独立集", "Question": ["求大神，linux串口通信方面！！！7445CPU串口和CC2530通信验证", ["我现在有一块7444的开发板，想实现7444通过串口传输命令给7444开发板上的另一模块cc2530（zigbee中的协调器），然后发送给给第三方开发板（只要当前cc2530能接收到命令就能直接发送数据到zigbee终端，以实现），然后终端zigbee模块的温度数据回传到7444开发板上的CC2530协调器，再从串扣回传给7445，已知我当前的串口设备文件是tty1，怎么编写C程序读取改开发板上cc2530传来的温度数据，和通过串口给cc2530发送命令！", "\n\n", "上图是zigbee协议栈的串口程序，主要是", "\n1、 接收到数据 ", "\n\n", "2、 判断长度然后给数据包   pMsg 分配内存 ", "\n3、 打包发送给上层 OSAL待处理 ", "\n4、 释放内存 ", "\n其中数据包中的数据部分格式是", "\ndatalen + data", "\n\n", "本来CC2530是个独立的zigbee模块，直接通过RS232转串口可以直接在串口工具中显示终端发送来的温度数据和写入命令控制终端了，而现在在PC和CC2530之间加了一个arm的CPU，这个cpu和CC2530之间是通过串口连接通信的，问题就出现在这里了，这部分我没接触过个，所以不会，现在求个大神帮忙解决下。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;二维数组就是三维数组的一个元素啊&amp;#xff0c;本来就互相独立的&lt;br /&gt;比如 int a[10][100][100]&amp;#xff0c;就是10个二维数组的一个组合&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["c语言数组或指针问题", ["请问怎么在一个三维数组里存放几个二维数组，并且能够相互独立地调用"]], "Tag": "算法设计"}
{"Answer": "你参考一下吧。\r\n\r\n```\r\n HWND hFig1 = ::FindWindow(NULL,“对话框1名称”);\r\n HWND hFig2 = ::FindWindow(NULL,“对话框2名称”);\r\n \r\n \tRECT Rect1; // 获取位置和大小\r\n\tCWnd *pArea1 = (CWnd*)FromHandle(hFig1);\r\n\tpArea1-&gt;GetWindowRect(&amp;Rect1); \r\n\tlong Width = Rect1.right - Rect1.left;\r\n\tlong Height = Rect1.bottom - Rect1.top;\r\n::SetWindowPos(hFig,NULL,1,1,Width-3,Height+25,SWP_NOZORDER | SWP_NOACTIVATE);\r\n \r\n```", "Konwledge_Point": "树中的独立集", "Question": ["MFC中对话框如何用函数实现可以调整位置？", ["有两个对话框，都在主窗口的右下角想要的效果是两个对话框不重叠，一个在另一个的上面显示，但是我做出来都重叠了！！想问一下如何调整对话框位置并用函数实现调整？菜鸟在这谢谢了如图"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;前端即网站前台部分&amp;#xff0c;运行在PC端&amp;#xff0c;移动端等浏览器上展现给用户浏览的网页。&lt;br /&gt;如下界面就算前端&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/weixin_43151418/article/details/124746163\" id=\"textarea_1652616435648_1652616639054_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_43151418/article/details/124746163&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;大数据&amp;#xff0c;或称巨量资料&amp;#xff0c;指的是所涉及的资料量规模巨大到无法透过主流软件工具&amp;#xff0c;在合理时间内达到撷取、管理、处理、并整理成为帮助企业经营决策更积极目的的资讯&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/weixin_43151418/article/details/124624827\" id=\"textarea_1652616435648_1652616639054_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_43151418/article/details/124624827&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["前端是什么？大数据是什么？", ["我也写个代码，只用手机不用电脑！不要动我的手机，独立的人最年轻！"]], "Tag": "算法设计"}
{"Answer": "模板方法时一种模式，属于静态表现对象的结构关系。其中的抽象模板方法是构成一个整体行为中的一部分，这部分的行为抽象已经确定，而只是将具体的实现延迟到子类完成。\n     回调不算是模式，它更多地是处理对象间的相互调用关系。回调一般是行为已经确定，而不确定调用者时常用。回调也就是把具体的行为传递给调用者。因为模板和回调都是将实际的对象调用关系延迟，所以会让人有一种错觉。其实很多时候，回调是用在事件处理、消息通知等，比如我们都知道的钩子程序。从这个角度说，回调是与观察器模式相似的，或者应该说回调是观察器模式的主要构成。\n      在spring 的jdbctempate中确实用了回调，但是，它其实是一种变异的模板方法模式，只是因为用了无名内部类，所以让人忽略了对于callback中模板方法的实现而已。而所谓的回调其实只是通过一个统一的方法将模板实现类注入而已，将callback中模板方法所在的整体行为从callback中抽取到独立的template中了。\n      不知道是否说得够清楚了，不过spring这个设计是一个蛮经典的设计。唯一的缺点就是随着方法调用的增多会导致JVM的OldGen中，匿名class对象会增多，每次full GC都会导致class unloading的情况。", "Konwledge_Point": "树中的独立集", "Question": ["模板方法和回调方法的困惑", ["我对他们的理解：", "先看一个例子：", "引用", "jdbcTemplate.update（）的源码", "1. public int update(final String sql) throws DataAccessException {   ", "2.       Assert.notNull(sql, \"SQL must not be null\");   ", "3.        if (logger.isDebugEnabled()) {   ", "4.          logger.debug(\"Executing SQL update [\" + sql + \"]\");   ", "5.     }   ", "6.     ", "7.     class UpdateStatementCallback implements StatementCallback, SqlProvider {   ", "8.           public Object doInStatement(Statement stmt) throws SQLException {   ", "9.              int rows = stmt.executeUpdate(sql);   ", "10.                if (logger.isDebugEnabled()) {   ", "11.                 logger.debug(\"SQL update affected \" + rows + \" rows\");   ", "12.             }   ", "13.              return new Integer(rows);   ", "14.          }   ", "15.          public String getSql() {   ", "16.               return sql;   ", "17.            }   ", "18.      }   ", "19.      return ((Integer) <SPAN style=\"COLOR: #888888\">execute</SPAN>(new UpdateStatementCallback())).intValue();   ", "20.  } ", "1.    public Object execute(StatementCallback action) throws DataAccessException {   ", "2.       Assert.notNull(action, \"Callback object must not be null\");   ", "3.   ", "4.     Connection con = DataSourceUtils.getConnection(getDataSource());   ", "5.        Statement stmt = null;   ", "6.      try {   ", "7.           Connection conToUse = con;   ", "8.          if (this.nativeJdbcExtractor != null &&   ", "9.                 this.nativeJdbcExtractor.isNativeConnectionNecessaryForNativeStatements()) {   ", "10.               conToUse = this.nativeJdbcExtractor.getNativeConnection(con);   ", "11.          }   ", "12.          stmt = conToUse.createStatement();   ", "13.         applyStatementSettings(stmt);   ", "14.          Statement stmtToUse = stmt;   ", "15.            if (this.nativeJdbcExtractor != null) {   ", "16.                stmtToUse = this.nativeJdbcExtractor.getNativeStatement(stmt);   ", "17.         }   ", "18.          Object result = <SPAN style=\"COLOR: #000000\">action.doInStatement(stmtToUse);</SPAN>   ", "19.           handleWarnings(stmt.getWarnings());   ", "20.            return result;   ", "21.     }   ", "22.      catch (SQLException ex) {   ", "23.          // Release Connection early, to avoid potential connection pool deadlock   ", "24.           // in the case when the exception translator hasn't been initialized yet.   ", "25.          JdbcUtils.closeStatement(stmt);   ", "26.            stmt = null;   ", "27.           DataSourceUtils.releaseConnection(con, getDataSource());   ", "28.           con = null;   ", "29.            throw getExceptionTranslator().translate(\"StatementCallback\", getSql(action), ex);   ", "30.     }   ", "31.      finally {   ", "32.          JdbcUtils.closeStatement(stmt);   ", "33.            DataSourceUtils.releaseConnection(con, getDataSource());   ", "34.       }   ", "35.  }  ", "eg:A回调方法。B模板方法", "怎样才能把B中的动态代码写成固定的啊？？？？？", "我们可以采用多态的方法，上面的代码就是采用多态的方法，", "回调的方法是多态的(这样我们就可以写不同的代码了)", "刚开时时，我认为模块和回调是为了代码的复用.我们可以把重复的代码写在模板中，把变化的写在回调方法中，", "现在感觉模块和回调确实可以复用代码，但这不是他存在的主要原因。", "谁能说说他主要的用途", "貌似一切皆在他的名字中 模板（可以理解为相同的流程）", "我们可以吧流程中不同的内容提取出来，", "                       回调：貌似可以‘动态’的加入代码", "希望高手来交流", "问题补充", "unsid 写道", "另外,区别是回调还是模板方法,还有一个很重要的依据,你所变化的类是不是具有\"一次性特征\",思考一下comparable接口,为什么不设计在list之上?因为list里的元素排序方式单一性一次性,比如这次按价格排序只代表这次,下次按出厂日期排序.而你的例子里,适合用模板方法,因为你的实现类相对稳定,总共不会有太多种类的操作.其实回调就是\"访问者\"模式最简单的实现.", "不明白，模板和回调是一起使用的吧？？？", "我在模板方法中去回调。", "你说的貌似他们是分开的，可以单独存在，", "问题补充", "凤舞凰扬 写道", "     模板方法时一种模式，属于静态表现对象的结构关系。其中的抽象模板方法是构成一个整体行为中的一部分，这部分的行为抽象已经确定，而只是将具体的实现延迟到子类完成。", "     回调不算是模式，它更多地是处理对象间的相互调用关系。回调一般是行为已经确定，而不确定调用者时常用。回调也就是把具体的行为传递给调用者。因为模板和回调都是将实际的对象调用关系延迟，所以会让人有一种错觉。其实很多时候，回调是用在事件处理、消息通知等，比如我们都知道的钩子程序。从这个角度说，回调是与观察器模式相似的，或者应该说回调是观察器模式的主要构成。", "      在spring 的jdbctempate中确实用了回调，但是，它其实是一种变异的模板方法模式，只是因为用了无名内部类，所以让人忽略了对于callback中模板方法的实现而已。而所谓的回调其实只是通过一个统一的方法将模板实现类注入而已，将callback中模板方法所在的整体行为从callback中抽取到独立的template中了。", "      不知道是否说得够清楚了，不过spring这个设计是一个蛮经典的设计。唯一的缺点就是随着方法调用的增多会导致JVM的OldGen中，匿名class对象会增多，每次full GC都会导致class unloading的情况。", "感觉你说的和我理解的相差好大，我在好好看看，设计模式", "问题补充", "凤舞凰扬 写道", "     模板方法时一种模式，属于静态表现对象的结构关系。其中的抽象模板方法是构成一个整体行为中的一部分，这部分的行为抽象已经确定，而只是将具体的实现延迟到子类完成。", "     回调不算是模式，它更多地是处理对象间的相互调用关系。回调一般是行为已经确定，而不确定调用者时常用。回调也就是把具体的行为传递给调用者。因为模板和回调都是将实际的对象调用关系延迟，所以会让人有一种错觉。其实很多时候，回调是用在事件处理、消息通知等，比如我们都知道的钩子程序。从这个角度说，回调是与观察器模式相似的，或者应该说回调是观察器模式的主要构成。", "      在spring 的jdbctempate中确实用了回调，但是，它其实是一种变异的模板方法模式，只是因为用了无名内部类，所以让人忽略了对于callback中模板方法的实现而已。而所谓的回调其实只是通过一个统一的方法将模板实现类注入而已，将callback中模板方法所在的整体行为从callback中抽取到独立的template中了。", "      不知道是否说得够清楚了，不过spring这个设计是一个蛮经典的设计。唯一的缺点就是随着方法调用的增多会导致JVM的OldGen中，匿名class对象会增多，每次full GC都会导致class unloading的情况。", "unsid 写道", "实现功能差不多,回调简洁一些,因为模板方法要为每个类型生成一个最终实现类,回调类可以用无名内隐类来代替.另外使用回调的话可以放心地把主类声明为final而避免因子类复写了不该复写的方法而导致的错误.用回调还是模版方法,我觉得看情况吧,如果动态的方法中要用到好多类的变量,那么回调函数要有一个很长的参数表,非常不好理解,如果回调函数要实现多于一个的方法,那么无法用内隐类,也没有简洁性了,总之在设计过程中,能不用继承就不用.", "你们两个是正确的。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;下面是一个可能的 R 代码实现&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-r\"&gt;&lt;span class=\"hljs-comment\"&gt;# Load required libraries&lt;/span&gt;\nlibrary&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;glmnet&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Load data&lt;/span&gt;\ndata &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;file.csv&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Define parameters&lt;/span&gt;\nwindow_size &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; 3000\nlambda &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; 1\n\n&lt;span class=\"hljs-comment\"&gt;# Split data into X and y&lt;/span&gt;\ny &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; data&lt;span class=\"hljs-operator\"&gt;$&lt;/span&gt;VIX\nX &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;Intercept &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;rep&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; Lag &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; head&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Loop through the data using a rolling window&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n  y_train &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; y&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;\n  X_train &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; X&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;\n  \n  &lt;span class=\"hljs-comment\"&gt;# Fit Lasso and Ridge models&lt;/span&gt;\n  fit_lasso &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; glmnet&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X_train&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; y_train&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; alpha &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; lambda &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; lambda&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  fit_ridge &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; glmnet&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X_train&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; y_train&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; alpha &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; lambda &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; lambda&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  \n  &lt;span class=\"hljs-comment\"&gt;# Predict next step&lt;/span&gt;\n  y_lasso_pred &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; predict&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;fit_lasso&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; newx &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  y_ridge_pred &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; predict&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;fit_ridge&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; newx &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  \n  &lt;span class=\"hljs-comment\"&gt;# Do something with the predictions (e.g. store them, compare them, etc.)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;对于每次滚动&amp;#xff0c;您可以存储 Lasso 和 Ridge 模型的预测结果&amp;#xff0c;然后可以使用这些预测结果进行评估。具体而言&amp;#xff0c;您可以计算预测值与实际值的误差&amp;#xff0c;并计算误差的平均值、方差、中位数等。此外&amp;#xff0c;您还可以使用图形和散点图来可视化预测结果。&lt;/p&gt;\n&lt;p&gt;例如&amp;#xff0c;下面是存储预测结果和评估预测误差的代码示例&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-r\"&gt;&lt;span class=\"hljs-comment\"&gt;# Load required libraries&lt;/span&gt;\nlibrary&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;glmnet&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\nlibrary&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;ggplot2&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Load data&lt;/span&gt;\ndata &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;file.csv&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Define parameters&lt;/span&gt;\nwindow_size &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; 3000\nlambda &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; 1\n\n&lt;span class=\"hljs-comment\"&gt;# Split data into X and y&lt;/span&gt;\ny &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; data&lt;span class=\"hljs-operator\"&gt;$&lt;/span&gt;VIX\nX &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; data.frame&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;Intercept &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;rep&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; Lag &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; head&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Initialize vectors to store predictions&lt;/span&gt;\ny_lasso_preds &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; numeric&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\ny_ridge_preds &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; numeric&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Loop through the data using a rolling window&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;{&lt;!-- --&gt;&lt;/span&gt;\n  y_train &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; y&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;\n  X_train &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; X&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;\n  \n  &lt;span class=\"hljs-comment\"&gt;# Fit Lasso and Ridge models&lt;/span&gt;\n  fit_lasso &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; glmnet&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X_train&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; y_train&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; alpha &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; lambda &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; lambda&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  fit_ridge &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; glmnet&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X_train&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; y_train&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; alpha &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; lambda &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; lambda&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  \n  &lt;span class=\"hljs-comment\"&gt;# Predict next step&lt;/span&gt;\n  y_lasso_preds&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; predict&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;fit_lasso&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; newx &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n  y_ridge_preds&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; predict&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;fit_ridge&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; newx &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; as.matrix&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;X&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;i &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; window_size&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-punctuation\"&gt;}&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# Calculate prediction errors&lt;/span&gt;\nerrors_lasso &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; y&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;window_size &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; y_lasso_preds\nerrors_ridge &lt;span class=\"hljs-operator\"&gt;&amp;lt;-&lt;/span&gt; y&lt;span class=\"hljs-punctuation\"&gt;[&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;window_size &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;:&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;y&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;]&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; y_ridge_preds\n\n&lt;span class=\"hljs-comment\"&gt;# Plot prediction errors&lt;/span&gt;\nggplot&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;data.frame&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;error &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; errors_lasso&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; model &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Lasso&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; aes&lt;span class=\"hljs-punctuation\"&gt;(&lt;/span&gt;x &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; error&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;)&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; \n  geom_histogram\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;以及&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-r\"&gt;ggplot(&lt;span class=\"hljs-name\"&gt;data&lt;/span&gt;.frame(&lt;span class=\"hljs-name\"&gt;error&lt;/span&gt; &amp;#61; errors_ridge, model &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;Ridge&amp;#34;&lt;/span&gt;), aes(&lt;span class=\"hljs-name\"&gt;x&lt;/span&gt; &amp;#61; error)) &amp;#43; \n  geom_histogram &amp;#43; \n  ggtitle(&lt;span class=\"hljs-string\"&gt;&amp;#34;Histogram of Prediction Errors&amp;#34;&lt;/span&gt;) &amp;#43; \n  xlab(&lt;span class=\"hljs-string\"&gt;&amp;#34;Error&amp;#34;&lt;/span&gt;) &amp;#43; \n  ylab(&lt;span class=\"hljs-string\"&gt;&amp;#34;Frequency&amp;#34;&lt;/span&gt;) &amp;#43; \n  facet_wrap(~ model)\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;您可以使用上面的代码示例作为起点&amp;#xff0c;并根据您的需求进行修改。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["R语言时间序列 滚动窗口预测", ["给定时间序列csv文件data1：", "https://pan.baidu.com/s/1NE2Hm17Knid4uaBBkEjw8g", "提取码：us7d", "因变量y为文件中的VIX，独立变量x的第一列和第二列为截点项和VIX滞后(x_0=0)，进行提前一步的滚动窗口练习。", "需要将窗口长度设置为3000，并对下一个期间y_t+1进行预测；从头开始，一直滚到最后；对于每次滚动，使用lasso和ridge进行预测，λ=1。", "请问一下这个问题应该怎么解决？"]], "Tag": "算法设计"}
{"Answer": "你既然做过开发，那么应该明白，闲了两年，又没有c++的工作经历，目前疫情期间，要找工作有多麻烦。\r\n你现在应该从c++基本语法学起，windows下编译环境，以vs为主，2010到2019都可以，通用，可以选择一个适合你电脑的下载进行学习。\r\nqt则下一套教程，学习qt5的使用，这是目前应用较多的qt版本。\r\n无论mfc还是qt，至少掌握一种界面开发方法，掌握ado连接数据库的方法，还有基本的文件、通讯、进程线程等操作，掌握这些，再编排一下自己为何空了2年时间等理由，也许运气好能找到工作，但还是要做好长期学习的准备。\r\n我是做c++方向的，有问题可以留言交流。", "Konwledge_Point": "树中的独立集", "Question": ["我是几年前的Delphi程序员，想转C/C++， 应该做哪些准备？", ["因为之前我个人创业项目结束了，现在玩了2年， 有一点空白期， 最近想出来找工作，毕竟主要的兴趣和积累在winodws平台，却发现本省市(昆明)大多都是JAVA，NET等安卓平台或网站系统的招聘。", "\n\n", "WIN平台的只有 C/C++ 的工作招聘了。", "\n\n", "求推介2020年 C++工作时需要掌握哪些编程环境工具， 如何快速的进行图形化程序开发？  QT如何快速入门，假设开发HTTP应用，C++中怎么使用现成的控件使用get,post方法，你认为作为训练作业，需要开发一个什么样的程序才能达到胜任工作的水平。  最好能提供一些精炼的教程地址，谢谢了。", "   ", "\n\n", "我大概有1-3个月的时间学习， 之前用delphi独立开发过小型的商业程序，也会开发外挂，小工具，C/S模型程序，喜欢逆向分析安全方面的东西。 但中大型商业应用，数据库应用等经验不足。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;定义函数里面好像不能包函数吧&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单选题：假如有函数定义头部为int fun(int x)，则关于该函数的说法错误的是？", ["A 函数调用可以作为独立的语句存在，比如：fun(a);单独作为一条语句", "\n\n", "B函数调用可以作为另一个函数的实际参数，比如：printf(\"%d\",fun(a));", "\n\n", "C函数调用可以出现在表达式中，比如：x=fun(a);", "\n\n", "D函数调用可以作为另一个函数的形式参数，比如：void myFun(fun(a));", "\n\n", "求助大佬们，这道题选错误的选项。感觉应该选B或者D但不确定选哪个"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是时候了解一下docker了&amp;#xff0c; 你会打开新世界的&amp;#xff0c;docker可以创建多个container&amp;#xff0c;每个container里你可以放一个环境。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何在ubuntu管理多个项目", ["实际工程中，一个服务器配置了ubuntu系统，但是我想要在这个系统上管理不同的项目。由于每个项目都会安装各种依赖库，比如使用apt-get进行安装，而不同项目之间有时会使用不同的依赖库版本，甚至有些版本之间是冲突的。请问如何做到一个项目一个纯净的环境呢？比如一个项目需要opencv2一个需要3，使不同的环境之间保持独立，应该如何操作？难道是建立不同的用户？。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以这么理解&amp;#xff0c;因为a,b,c存储的地址都不一样.而且a&amp;#xff0c;b为f函数内变量&amp;#xff0c;f函数结束调用就释放掉了.&lt;/p&gt;\n&lt;p&gt;举个简单的例子题主试试&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tmp &amp;#61; b;\n    b &amp;#61; c;\n    c &amp;#61; tmp;\n}\n&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(a&amp;#xff0c;b);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出下a&amp;#xff0c;b看看值有没有交换&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["结构体变量和结构体指针作参数为什么一个实参不变，一个变？", ["在结构体变量作参数的时候，c的值在主函数经过调用后再输出，没有变化。可以认为函数f的参数a，f内定义的变量b，和主函数内定义的变量c是相互独立的吗？c的值传递给a，b的值赋值给a，但是c不变，这样理解对吗？", "\n", "\n", "但是结构体指针作参数时主函数中定义的结构体变量c却发生了变化。c的地址传递给a，b的值赋值给", "a，这里的", "a能代表c吗？", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;区域必须具有相同的行、列数&amp;#xff0c;B3:D144有三列&amp;#xff0c;而L3:M144只有两列。&lt;br /&gt;感觉你没有理解这个函数的意思&amp;#xff0c;是要在所有区域相同偏移量的位置上分别满足对应条件的才会计1。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["excel countifs多条件运行出错", ["问题遇到的现象和发生背景", "\n", "=COUNTIFS(监考表!B3:D144,监考安排生成表!E1,监考表!L3:M144,监考安排生成表!A3)", "E1是某考试时间，监考表!B3:D144是所有监考时间。A3是某教师姓名，监考表!L3:M144区域范围是所有监考安排表中教师姓名。目的是统计该时间段这名教师的监考次数", "excel 公式 countifs运用，每单个条件都能独立运行，现两个条件同时运用报错。为何两个条件同时使用时不行呢？", "\n", "操作环境、软件版本等信息", "\n", "excel2016", "\n", "尝试过的解决方法", "\n", "条件分开运行，成立。比如：=COUNTIFS(监考表!L3:M144,监考安排生成表!A3)   结果8", "A3是某教师姓名，监考表!L3:M144区域范围是所有监考安排表中教师姓名", "\n", "=COUNTIFS(监考表!B3:D144,E1) 结果37", "E1是某考试时间，监考表!B3:D144是所有监考时间", "\n", "为了求", "证明条件本身没有问题", "\n", "我想要达到的结果", "\n", "用countifs两个条件一起正常运行"]], "Tag": "算法设计"}
{"Answer": "模板技术，模板引擎，和它类似的还有velocity，基于模板配置和表达式生成页面文件，可以像jsp一样被客户端访问，这时就是网页模板，也可以生成文件，比如自动代码生成器等，用的比较多的是产品化的软件，比如站点内容发布软件，可以自动根据后台配置生成前台页面或者其他配置页面甚至一些代码，甚至可以java自动生成php，还有电商网站，因为访问的需要，大都是静态页面配合ajax访问，如果为商品配置了模板，那所有新增的商品都能根据模板生成一个商品页，还能够根据配置快速替换模板，模板的开发要求比jsp的开发要求要低，最适合开发程序员与前台美工拆页程序员分工合作的场景，一个html文件稍微改动一下就成了模板，模板可以动态生成或者静态持久化。", "Konwledge_Point": "树中的独立集", "Question": ["FreeMarker 技术应用在哪些场景", ["上网搜了一下关于FreeMarker的介绍，【在Jspxcms中，后台使用的是大家都很熟悉的JSP，前台考虑到要生成静态化页面，使用的是FreeMarker。FreeMarker是非常优秀的模板语言，它可以脱离servlet容器独立运行，所以用它来做前台页面的模板并生成静态页，是非常合适的】", "\n\n", "JSP生成的界面数据是动态获取的，比如查询3次 每次参数都不用 那么数据也不同。如果使用FreeMarker难道要生成3个静态界面？", "\n\n", "有知道的请给讲一下谢谢？"]], "Tag": "算法设计"}
{"Answer": "主项目时以web项目的形式的存在的 一个web项目还可以分成几个小的web项目 比如管理后台的和前台展示的 分成两个模块 方便维护 倒是后直接替换包就可以了 不需要重启服务 但是重启不重启不那么确定 项目出问题了 难免要重启服务", "Konwledge_Point": "树中的独立集", "Question": ["关于项目更新的问题", ["最近做了一个Java web service 后台。后台包括好几个部分，比如，租房管理，留学管理等等，他们在一个项目里，且是独立的。", "现在我打包成 .war文件，并部署到Tomcat上。今后想更新，如添加其他的功能模块（也是独立的），只更新我添加的功能模块。", "我不知道如何实现这只更新一部分的功能模块。", "总结而来，就是想只更新.war文件中的部分内容。或者有其他打包的方式可以解决。请教各位了。", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;AutoJsPro&amp;#xff0c;它好像是通过Android手机的无障碍服务实现的&amp;#xff0c;不过有些页面和app&amp;#xff0c;可能无法通过无障碍服务获取页面UI元素控件&amp;#xff0c;但是可以去尝试&amp;#xff0c;毕竟有js&amp;#xff0c;也很方便编写代码。&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;可以脱离电脑的APP&lt;/strong&gt;:&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;com.google.android.apps.accessibility.maui.actionblocks\" id=\"textarea_1673432622662_1673433120393_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;Action Blocks&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;com.llamalab.automate\" id=\"textarea_1673432622662_1673433120393_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;Automate&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;AutomateIt.mainPackage\" id=\"textarea_1673432622662_1673433120393_2\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;AutomateIt&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;com.ifttt.ifttt\" id=\"textarea_1673432622662_1673433120393_3\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;IFTTT&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;com.arlosoft.macrodroid\" id=\"textarea_1673432622662_1673433120393_4\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;MacroDroid&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;net.dinglisch.android.taskerm\" id=\"textarea_1673432622662_1673433120393_5\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;Tasker&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;com.amazon.clouddrive.photos\" id=\"textarea_1673432622662_1673433120393_6\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;Many individual apps&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://play.google.com/store/apps/details?id&amp;#61;com.ecobee.athenamobile\" id=\"textarea_1673432622662_1673433120393_7\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;Smart home apps&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://www.samsung.com/us/apps/bixby/\" id=\"textarea_1673432622662_1673433120393_8\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;OEM features like Bixby&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://www.androidauthority.com/android-automation-792812/\" id=\"textarea_1673432622662_1673433120393_9\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;Your Android settings&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;希望采纳&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["手机自动化脚本框架有哪些?", ["目前主流, 可以脱离电脑在手机上独立自动运行的脚本框架有哪些?", "AutoJsPro怎么样?", "谢谢!"]], "Tag": "算法设计"}
{"Answer": "我的经验：\r\n1、使用自增流水号 作为主键  少用复合主键 \r\n比如 a表是一个复合主键表 b参照a 那么b必须也有那两个\r\n\r\n2、自增主键 可以优化查询 \r\n因为主键是自增的 所以比如查询时 可以带上 最后一次的id  这样查询效率会提高不少 \r\n\r\n3、复合主键 改成唯一索引 进行约束即可\r\n\r\n4、好切分  \r\n比如我要分表 如果简单的话 可以直接根据id 取模划分 简单 而且 均匀", "Konwledge_Point": "树中的独立集", "Question": ["针对hibernate应用的表设计，最好设计一个非逻辑主键id吗？大家怎么做的啊", ["\n", "hibernate的应用，一定需要主键的。", "\n", " ", "\n", "很多书上或网页都推荐针对hibernate的表设计时，设计一个独立的主键id，跟业务逻辑无关系的。但是我在实际应用中，发现有些业务涉及主外时，使用跟业务逻辑有关的主键很方便。", "\n"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/baidu_29950065/article/details/53671867", "Konwledge_Point": "树中的独立集", "Question": ["萌新求问关于C++统计文本文档数据问题", ["读取英文文档\"data.txt\"（见附件data.zip）中的字符，并统计：", "\n1）英文字母的总数（不区分大小写）；", "\n2）单词总数（短语缩写和连词符连接的复合词都算为独立单词，如I'm、grass-green等）；", "\n3）数字总数（非数字字符总数，如123只统计为1个数字。小数也是一个数）。", "\n\n", "我想通过统计标点符号的方法来统计单词总数，无奈一直提示是0qwq……请大佬指教啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可参&lt;a href=\"https://blog.csdn.net/xianfajushi/article/details/80307175\"&gt;https://blog.csdn.net/xianfajushi/article/details/80307175&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["单片机问题，请求回答.", ["若ATS51的P3.3引脚连接独立按键作为中断源，请写出该中断服务函数的函数定义语句"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这和Tomcat有关系吗&amp;#xff1f;&lt;br /&gt;这应该是网页上的数据一刷就失的特性吧&amp;#xff0c;&lt;br /&gt;所以要把他存放到数据库里&lt;br /&gt;下次登录的时候&amp;#xff0c;去数据库里面拿&lt;br /&gt;不知道我理解的对不对呢&amp;#xff1f;&lt;br /&gt;有用记得采纳呐&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["用Tomcat发布的localhost如何保存下来", ["\n", "\n", "\n", "加入模型后，如何保存下来，作为独立项目，通过什么方式关掉后打开还能再次看见这个坦克?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;当然&amp;#xff0c;你能理解内存模型亦或是理解堆栈相关知识&amp;#xff0c;其实就蛮好理解的。&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  p2.name &amp;#61; p.name;  这里赋值&amp;#xff0c;对于引用类型&amp;#xff0c;只是将p2.name的引用 指向了p.name引用的那块内存地址中的值。此时他们指向的是内存中的同一个地址。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  p.name &amp;#61;&amp;#34;xyz&amp;#34;; 当你把p.name重新赋值&amp;#xff0c;并不是将原来的地址的值改变了&amp;#xff0c;而是将p.name指向了内存中所谓的&amp;#34;xyz&amp;#34;的这个地址。此时p.name和p2.name的指向是不同的地址&amp;#xff0c;当然就不一样了。&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    在内存模型中&amp;#xff0c;堆是线程共享的&amp;#xff08;引用类型&amp;#xff0c;如对象&amp;#xff0c;类中的全局变量&amp;#xff09;&amp;#xff0c;而栈是线程私有的&amp;#xff08;常见的有局部变量&amp;#xff09;。你所说的是改变栈中的值&amp;#xff0c;那就会一起变。引用类型赋值改变的是内存地址&amp;#xff0c;也就是一个引用指向。要真正改变内存堆中或常量池中的值才会真的改变。&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["专家解答一下为什么在第二十行代码对p的name属性改了以后，p2的name属性还是milan，而没有变成和p的一样是xyz？", ["\n\n```java\n    //编写一个方法copyPerson，可以复制一个Person对象，返回复制的对象。克隆对象， \n    //注意要求得到新对象和原来的对象是两个独立的对象，只是他们的属性相同\n", "public", " ", "class", " test { \n\n    //编写一个main方法\n    ", "public", " static ", "void", " main(String[] args) {\n        \n        Person p = ", "new", " Person();\n        p.name = \"milan\";\n        p.age = ", "100", ";\n        //创建tools\n        MyTools tools = ", "new", " MyTools();\n        Person p2 = tools.copyPerson(p);\n\n        //到此 p 和 p2是Person对象，但是是两个独立的对象，属性相同\n        ", "System", ".", "out", ".println(\"p的属性 age=\" + p.age  + \" 名字=\" + p.name);\n        ", "System", ".", "out", ".println(\"p2的属性 age=\" + p2.age  + \" 名字=\" + p2.name);\n        //这里老师提示： 可以同 对象比较看看是否为同一个对象\n        ", "System", ".", "out", ".println(p == p2);//", "false", "\n        p.name =\"xyz\";\n        ", "System", ".", "out", ".println(\"======================\");//用来区分上面的输出\n        ", "System", ".", "out", ".println(\"p的属性 age=\" + p.age  + \" 名字=\" + p.name);\n        ", "System", ".", "out", ".println(\"p2的属性 age=\" + p2.age  + \" 名字=\" + p2.name);\n\n    }\n}\n\n", "class", " Person {\n    String ", "name", ";\n    ", "int", " age;\n}\n\n", "class", " MyTools {\n    ", "public", " Person copyPerson(Person p) {\n        //创建一个新的对象\n        Person p2 = ", "new", " Person();\n        p2.name = p.name; //把原来对象的名字赋给p2.name\n        p2.age = p.age; //把原来对象的年龄赋给p2.age\n        ", "return", " p2;\n    }\n}\n在学习方法的内存机制的时候，教程说对象中的属性如果是字符串，那么这个字符串会存放在方法区，在对象中存的是存字符串的地址，那么如果是这样的话，p对象改", "name", "属性的时候，方法区中的字符串会变成xyz，那么访问p2对象的", "name", "应该也会变成xyz才对呀，因为访问", "name", "的时候是一个地址，到地址中去找位于方法区的字符串变成了xyz，但是通过运行代码发现，p2的", "name", "依然是milan，并没有变成xyz，麻烦解答一下，谢谢\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_43158059/article/details/115052795\" id=\"textarea_1649933893295_1649933929207_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;matlab一求解一维数组元素拟合概率密度函数_紫钺-高山仰止的博客-CSDN博客_一维概率密度函数公式&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;本文解决的用matlab实现数组的概率分布函数拟合。一维数组不知道他的分布情况下。对数的频率分布直方图尽可能拟合。数组我们用matlab自带的函数来生成。频数统计区间默认划首先生成一个服从&amp;#xff08;0&amp;#xff0c;0.5^2&amp;#xff09;的高斯分布随机产生10000个数x&amp;#61;normrnd(0,1,1,10000);%产生一个[10000*1]的矩阵按照高斯&amp;#xff08;0&amp;#xff0c;1^2&amp;#xff09;分布 plot(x,&amp;#39;*&amp;#39;)%R &amp;#61; normrnd(Mu, Sigma, m, n)产生服从N&amp;#xff08;Mu&amp;#xff0c;Sigma^2&amp;#xff09;分布的m行n列的随机数组R数组x为一个&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_43158059/article/details/115052795&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["利用matlab求解两个一维函数的联合密度分布函数", ["比如一个y1一个y2如何求他们的联合密度分布函数，已知他们分别符合两个分布函数且相互独立。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;明确的说, 是不行的, 它的GPU加速本质上底层用的CUDA, 而CUDA必须基于NVIDIA 显卡/GPU, 目前你的Mac上应该没有NVIDIA显卡&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["macOS 可以使用Numba实现GPU加速运算吗？", ["macOS 可以使用Numba实现GPU加速运算吗？希望做机器学习或者深度学习的时候可以用上mac的独立gpu。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Java源文件由若干个书写形式互相独立的类组成&amp;#xff0c;是因为Java语言是面向对象的编程语言。在面向对象编程中&amp;#xff0c;一个程序通常由多个类组成&amp;#xff0c;每个类都是一个独立的对象。每个类都可以定义自己的属性和方法&amp;#xff0c;这些属性和方法可以被其他类调用和使用。&lt;/p&gt;\n&lt;p&gt;在Java中&amp;#xff0c;每个类通常都被定义在一个独立的源文件中&amp;#xff0c;这样做的好处是可以方便地组织和管理代码&amp;#xff0c;同时也方便代码的复用和维护。如果将所有的类都定义在同一个源文件中&amp;#xff0c;代码会变得非常冗长和混乱&amp;#xff0c;难以维护。&lt;/p&gt;\n&lt;p&gt;因此&amp;#xff0c;Java源文件由若干个书写形式互相独立的类组成&amp;#xff0c;每个类都可以在其他类中被实例化和调用&amp;#xff0c;这样可以方便地组织和管理代码&amp;#xff0c;提高代码的复用性和可维护性。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["谁能解释一下下面的问题呀？", ["为什么Java源文件是由若干个书写形式互相独立的类组成？（刚开始学，想知道为什么？）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;最简单的办法&lt;br /&gt;import threading&lt;br /&gt;t&amp;#61;threading.Thread(target&amp;#61;custom)&lt;br /&gt;t.Start()&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请问一个Python异步或者多线程的问题", ["如下， on_message() 这个函数 的名称和定义形式不能更改，且该函数会反复循环运行。on_message()函数体内有一个函数custom()，如下：", "\n", "\n", "def", " ", "on_message", "()", "：\n\n     ", "#省略的代码块", "\n\n     custom() \n\n     ", "#省略的代码块 ", "\n\n", "\n", "如上，on_message() 中，我想让程序运行到custom()函数时，将这个custom() 摘出去独立同步运行，不影响 on_message() 其他代码块的运行。该对这个custom()函数用什么解决方案呢？谢谢！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不需要两个服务器或域名的&amp;#xff0c;最多只不过是需要在服务器上部署两个项目。&lt;br /&gt;如果你的第二步链接互动需要一些用户的基本信息&amp;#xff0c;是不是可以在第一步互动的时候获取到&amp;#xff0c;直接使用读取会比较方便。&lt;br /&gt;如果两个比较独立的话可以部署运行两个项目服务就可以了。&lt;br /&gt;有帮助请采纳&amp;#xff0c;还有不懂的可以继续追问~&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["公众号开发自动回复+其他链接数据处理", ["微信公众号开发能否同时实现自动回复+其他链接操作", "我目前有一个云服务器，然后用python做了一个自动回复的后台。我现在想实现在自动回复用户信息时，加入链接或超链接，用户点链接后，我后台进行数据处理，实现再次与用户的互动。", "所以我想问下，能否在一个后台程序中，同时接收微信发送的消息，同时又接收用户点击链接的消息？", "还是只能是两个独立的程序，一个专门监听+自动回复微信公众号消息，然后再另外用个域名，用来接收点击链接发送过来的消息？"]], "Tag": "算法设计"}
{"Answer": "已解决，根据官方文档 https://conda.io/docs/user-guide/tasks/manage-environments.html#create-env-file-manually 创建环境时不指定一个版本，如\r\n```\r\nconda create -n myenv\r\n```\r\n而不是\r\n```\r\nconda create -n myenv python=3.6\r\n```\r\n则创建出来的环境与主环境完全共享，\r\n使用 pip 安装也只会安装在主环境，\r\n只有成功使用conda\r\n```\r\nconda install something\r\n```\r\n成功了一次之后，这个环境才独立出来", "Konwledge_Point": "树中的独立集", "Question": ["python】有requirements.txt文件后，如何创建对应的conda虚拟环境？可以使用pip命令来安装吗？", ["尝试在创建环境并激活", "\n\n", "    conda create envname\n        activate envname\n", "\n\n", "后，使用pip安装requirements.txt", "\n\n", "     pip install -r requirements.txt\n", "\n\n", "然后测试运行（newhello.py需要的包在requirements.txt中国，之前并未安装)", "\n\n", "     python newhello.py\n", "\n\n", "结果可以运行。", "\n但发现", "\n\n", "     conda list\n", "\n\n", "显示没有任何包安装，", "\n\n", "     pip list\n", "\n\n", "显示的包与主环境一致（增加了requirements.txt的内容）。", "\n\n", "这是什么原因？pip和conda是怎么管理的？是完全独立的吗？", "\n在conda虚拟环境中安装包时应该用conda install吗？", "\n如果要依据requirements.txt并使用environment.yml来创建conda环境，应该怎么做？channel，dependencies要如何填写"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在data里边定义一个对象drop_down_obj&amp;#61;{},然后在获取table的list数据的同时初始化这个drop_down_obj&amp;#xff0c;其key是你说的每行的id&amp;#xff0c;其值可以是”“&amp;#xff0c;也可以是你想要的其他初始值。然后在table渲染的时候每行下拉框的v-model绑定到drop_down_obj[&amp;#39;某个id&amp;#39;]呢&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于elementui select实现动态列+动态下拉的问题！", ["这是工作上遇到的一个问题，困扰了一周没解决。", "需求：在table表格中需要动态的新增列并正确展示数据，并且动态列要实现下拉可多选。", "当时没意识到这个需求这么复杂。", "动态添加列并正确展示数据这个好办，直接读取后台接口数据即可，多选也可以通过mutiple解决，现在难点是如何实现每个动态列独立的下拉。", "问题如图：", "\n", "当时查了下百度，一度认为scope.row.(动态列数据)的方法不错，但最终依然无法识别动态列，和动态下拉选项.", "因此现在有几个难点：", "1.如果用循环动态添加列的话，那么每个动态列的v-model该如何动态绑定？(动态列数据后台返回)，这是第一个难点，如上图所示，如果用循环添加的话，v-model该如何绑定，因为后台返回的数据是：该列的id:['123','456']这种，即每列的id不同，v-model也需要动态的识别绑定，不然会出现改一个选项，其余动态列的选项都会一起改变.", "2.动态列的下拉选项如何处理？当时的想法是后台直接将下拉选项数据放在返回值中，然后通过scope.row来读取，但后来发现不知道怎么能对应上。然后又试了如果动态列的下拉选项全部放在另外一个接口中，可还是不知道怎么对应上.", "3.如果走循环的话，动态列的v-model,下拉选项该如何一一对应上？", "\n", "思考：一开始真的没意识到双动态这么难实现，导致这个问题困扰了一周都没解决.由于关乎着工作上的原因，如果有优质回答，可以追加悬赏。"]], "Tag": "算法设计"}
{"Answer": "http://jingyan.baidu.com/article/4f34706ed12612e387b56d98.html", "Konwledge_Point": "树中的独立集", "Question": ["关于将程序的运行图标添加到控制面板界面的问题？", ["关于将程序的运行图标添加到控制面板界面的问题？请问怎么在控制面板里添加一个独立的设置界面？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;随机数函数&amp;#xff0c;严格来说并不是随机的。其实就是一个普通的函数&amp;#xff0c;根据输入的种子给出输出。所以种子一样产生的数也是一样的。因此一般情况下可以用时间函数当种子&amp;#xff0c;因为时间是一直在变的嘛&amp;#xff0c;结果跟真的随机数差不多&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于srand的函数的一些小问题", ["每次使用rand产生随机数时，都用 srand 函数重新独立设置随机数种子点,会使产生的随机数相同,为什么呢"]], "Tag": "算法设计"}
{"Answer": "```\r\n select t.Id_p,t.LastName,COUNT(OrderNo) as ItemCount from \r\n(\r\nselect t1.OrderNo,ISNULL(t1.Id_p,t2.Id_p) as Id_p,isnull(t2.LastName,'Unknown') as LastName from Orders t1\r\nfull join  Person t2\r\non t1.Id_p = t2.Id_p\r\n) t group by t.Id_p,t.LastName\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201508/04/1438667275_623274.png)", "Konwledge_Point": "树中的独立集", "Question": ["SQL新手求教一个关于数据库的问题，着急！在线等！各位大牛们，感激不尽！", ["实习生，TeamLeader给了那么一个数据库题目：", "\n给了如下两张独立的表：", "\nPerson", "\n\n", "Orders", "\n\n", "要求从这两张表中选出以下结果：", "\n\n", "ItemCount是购买的总数！", "\n求救！在线等！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是这样吗&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; random\n \n \ndef &lt;span class=\"hljs-title\"&gt;create_word&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;:\n    i &amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    word_name &amp;#61; {}\n    word_all &amp;#61; {}\n    word_num &amp;#61; random.&lt;span class=\"hljs-built_in\"&gt;randint&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i &amp;lt; word_num:\n        a &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(i)\n        xx &amp;#61; {a:random.&lt;span class=\"hljs-built_in\"&gt;randint&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)}\n        word_name.&lt;span class=\"hljs-built_in\"&gt;update&lt;/span&gt;(xx)\n        i &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n \n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(word_name)\n \n&lt;span class=\"hljs-built_in\"&gt;create_word&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python我怎么才能自动生成字典嵌套呢？", ["我创建了一个word_name的字典，我希望这个字典每次生成的随机内容都可以生成一个独立的字典，然后将这些字典归到word_all字典中进行存储\n", "#!/usr/bin/python3", "\n", "import", " random\n\n\ndef create_word():\n    ", "i", " = ", "0", "\n    ", "word_name", " = {}\n    ", "word_all", " = {}\n    ", "word_num", " = random.randint(", "0", ",", "100", ")\n\n    while i < word_num:\n        ", "a", " = 'a'+str(i)\n        ", "xx", " = {a:", "123", "}\n        word_name.update(xx)\n        ", "i", " = i + ", "1", "\n\n    print(word_name)\n\ncreate_word()\n\n"]], "Tag": "算法设计"}
{"Answer": "所有方法 不过我觉得这种东西不应该测试人员干预 这种测试应该是程序员作的事。", "Konwledge_Point": "树中的独立集", "Question": ["请问TestCase是用来测试方法的还是类的？", ["刚刚学习测试有个菜鸟问题请java测试老鸟指点。", "\n请问一个TestCase是用来测试 XxxManager类中的所有方法，还是XxxManager.xx()（某一个）方法的？", "\n说白点就是问一个 TestCase对应的测试的目的是一个“方法”还是一个“类”？", "\n[b]问题补充：[/b]", "\n  如果Manager就是service层，一个manager里面包含很多业务功能（如：记录订单，审批，权限管理），这些业务功能又同时操作DB和远端服务器；", "\n类似这样的业务方法，有很复杂的业务逻辑性，输入的参数也有合法与不合法的情况，如果只用一个TestCase那么这个TestCase就一定会很大，而且要在setUp tearDown的时候所要做的事情也都不太一样，很难统一呀？", "\n  再有从字面意思来讲，Test Case =“测试用例”，每一个测试用例都对应“测试用例测试文档”中定义的一堆条件，这些条件的不同组合都具有独立行为逻辑，从测试用例的文档的角度来看一个TestCase == 一套业务逻辑 == Service层某一方法。", "\n\n", "以上都是用来跟各位达人讨论，请大家思考后参与讨论！谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;安装报错是什么&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Proteus7.5安装出现的问题", ["安装到一半就出现Windows更新独立程序错误找不到证书是怎么回事？要怎么解决呢？麻烦各位师傅帮忙解答一下"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;加个循环是为了让单片机反复执行&amp;#xff0c;如果不加循环&amp;#xff0c;单片机执行完你这些程序后&amp;#xff0c;还会继续往后面跑的&amp;#xff0c;但后面的空闲的flash里的内容按指令执行的话&amp;#xff0c;往往都是不会产生什么外部输出&amp;#xff0c;也不影响程序执行流程的指令&amp;#xff0c;虽然也有几十K&amp;#xff0c;但是以单片机的工作频率&amp;#xff0c;单片机在毫秒级的时间内就会执行完&amp;#xff0c;执行完成后&amp;#xff0c;硬件逻辑会让单片机重头开始执行&amp;#xff0c;所以看上去效果也是在循环&amp;#xff0c;和加个while循环差不多。&lt;br /&gt;但是后面的空闲flash的内容有一定的不确定性&amp;#xff0c;所以实际做产品的时候不要这么干。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于c51单片机的一个疑惑", ["请问这个独立按键控制led灯的程序为什么要加while循环？去掉while循环之后我发现单片机还是能正常运行的。"]], "Tag": "算法设计"}
{"Answer": "没错。\r\n\r\nJava很少使用clone。\r\n就算clone，也不要深clone。\r\n就算深clone，也不要对那种层级很深的对象深clone。\r\n实在要如此的话，你还可以序列化/反序列化实现呢。。。", "Konwledge_Point": "树中的独立集", "Question": ["关于原型模式clone浅拷贝的疑问", ["在看原型模式", "\nJava中clone方法为浅拷贝，也就是只复制了引用，如果拷贝的对象改变了，所有的都会变掉", "\n如果是这样的话，那我使用原型模式拷贝A创建一个新的对象B，当我改动A时，是不是B也会受影响，这样是不是会不符合我需要的初衷", "\n看到很多介绍原型模式的都只是简单的用clone去复制一个对象，如果需要创建的对象各自独立的话，就需要使用深拷贝", "\n也就是要重新再写一个深拷贝方法，是这样么", "\n\n", "是不是我理解有问题还是这种担心是多余的 希望有人解答一下 谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;大家平常说的基站&amp;#xff0c;其实可以理解为一个小的网络中转站。&lt;br /&gt;手机使用移动数据或者打电话&amp;#xff0c;并不是直接连接“基站”&amp;#xff0c;而是先连接手机附近的信号覆盖设备&amp;#xff0c;室内有室分&amp;#xff0c;室外有大型的信号发送站。室分系统再与基站通过光纤连接传输数据。&lt;/p&gt;\n&lt;p&gt;跟无线AP一样&amp;#xff0c;无线AP提供你连接WIFI信号&amp;#xff0c;但是没法让你直接上网。无线AP需要将你的数据转发给可以上网的设备。&lt;/p&gt;\n&lt;p&gt;室分系统就是有很多小的AP和物理馈线或者光纤连接起来。室外的话&amp;#xff0c;就是手机连接大型的信号发送站。&lt;/p&gt;\n&lt;p&gt;基站里面真正的设备有UPS系统、网络交换机等。&lt;/p&gt;\n&lt;p&gt;如果以上有帮助&amp;#xff0c;望采纳。谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["手机的移动数据是直接和基站进行连接吗？", ["手机打电话是手机独立能够无线连接基站，wifi是手机连接室内的路由，那移动数据也是连接到室外的基站吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;上微前端吧&amp;#xff0c; 乾坤、MicroApp都是比较简单好上手的&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vue项目整体(包括路由、vuex这些)打包成npm包  在别的项目使用", ["vue项目有多个，每一个都是一个独立的项目", "现在想把每一个vue项目都打包成一个个独立的npm包", "多个npm包随意组成一个新的项目", "这种方法合适吗:?有类似的项目可以参考一下没？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两个数组合并是怎么合并的&amp;#xff1f;按照升序合并的么&amp;#xff1f;你也可以将合并后的数组再升序一次&amp;#xff0c;然后再输出&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["有序数组的合并，升序排列", ["为什么将两个数组合并后，输出还是两个数组是独立在输出啊，还是按照的原来两个数组在输出"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先将10位评委分数存储在一维数组中并对数组排序 。然后根据输入的情况&amp;#xff0c;确定去掉几个最高分、最低分&amp;#xff0c;最后计算平均分。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;func&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* p)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; - i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; temp;\n            temp &amp;#61; p[j];\n            p[j] &amp;#61; p[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n            p[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; temp;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;js&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* p)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        sum &amp;#43;&amp;#61; p[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sum / &lt;span class=\"hljs-number\"&gt;6.0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;ys&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* p)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        sum &amp;#43;&amp;#61; p[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; sum / &lt;span class=\"hljs-number\"&gt;8.0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; \n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;* p &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        cin &amp;gt;&amp;gt; p[i];\n    }\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x;\n    cin &amp;gt;&amp;gt; x;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;ys&lt;/span&gt;(p);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-built_in\"&gt;js&lt;/span&gt;(p);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;delete&lt;/span&gt;[]p;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C++ 歌手大赛 注意判断预赛和决赛", ["歌手大奖赛共有10位评委，为每位选手打分（double型）。预赛部分歌手的分数，为去掉1个最高分、1个最低分后其余8个分数的平均值；决赛部分歌手的分数，为去掉2个最高分、2个最低分后其余6个分数的平均值。通过键盘输入10位评委的打分，以及当前处于哪个阶段（预赛部分用1表示，决赛部分用2表示）。主函数中，只负责输入数据、调用分数计算函数、输出结果，评分计算部分编写独立函数完成。", "输入样例", "98.5 88 90 93 94 90.4 89 92 88.6 97 2", "结尾无空行", "输出样例", "91.4", "结尾无空行", "输入样例", "98.5 88 90 93 94 90.4 89 92 88.6 97 1", "结尾无空行", "输出样例", "91.75", "结尾无空行"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看你这个图针对的方向不一样&lt;br /&gt;“数据湖”主要是对大数据量的聚合处理&amp;#xff0c;类似于ETL数仓&amp;#xff08;比如IoT的实时采集数据等&amp;#xff09;&amp;#xff1b;&lt;br /&gt;而你的ROMA是数据各个云应用系统集成&amp;#xff08;主要是业务方面数据&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["数据湖运营平台DAYU和企业集成平台ROMA 有关系吗？区别是什么？", ["数据湖运营平台DAYU和企业集成平台ROMA 有哪些联系？", "\n", "一个刚入职软件公司的员工门外汉。在学习的时候遇到这些问题，对一些名词傻傻分不清，有点乱，主要是数据湖和Roma，DGC和ROMA是独立的吗？有联系吗？", "DGC、MES、SAAS、DWS、公有云、私有云", "数据湖清理后的数据和Roma怎么联系？提供给第三方使用。", "或者说数据治理的整个过程是什么样的？", "数据如何入湖，标准如何？视频监控数据非结构化的也可以入湖的吧？等等好多关于数据对接，对数据从入湖到应用端使用过程中DGC、ROMA在过程中什么时候起作用的架构图。", "\n", "下面这两个图我基本上可以看得懂，就是数据对接的时候基本都是是从Roma对接，是不是可以这么理解：", "数据湖：数据结构化/非结构化等都入湖后DWG对数据集成、数据管理、开发、统一数据标准等上传到华为云里面，DWG支持云上云下的数据进出。", "Roma：Roma核心组件LINK、FDI、MQS、APIC可以对iot设备数据获取将ot/it打通然后将所有数据统一标准共第三方使用，上传到云，支持云上云下集成", "\n", "那如果这样的话Roma和数据湖的区别是什么？", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;划分为/26掩码 255.255.255.192就好&amp;#xff0c;每个段可用地址数量62个&lt;br /&gt;可用地址&amp;#xff1a;202.178.68.1-62 网络位&amp;#xff1a;202.178.68.0 广播位&amp;#xff1a;202.178.68.63&lt;br /&gt;可用地址&amp;#xff1a;202.178.68.65-126 网络位&amp;#xff1a;202.178.68.64 广播位&amp;#xff1a;202.178.68.127&lt;br /&gt;可用地址&amp;#xff1a;202.178.68.129-190 网络位&amp;#xff1a;202.178.68.128 广播位&amp;#xff1a;202.178.68.191&lt;br /&gt;剩下的一个段可以用做扩展使用&lt;br /&gt;可用地址&amp;#xff1a;202.178.68.193-254 网络位&amp;#xff1a;202.178.68.192 广播位&amp;#xff1a;202.178.68.255&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["某单位有三个部门，每个部门有40台主机，先已申请一个C类网：202.178.68.0，请完成子网划分", ["某单位有三个部门，每个部门有40台主机，先已申请一个C类网：202.178.68.0，请完成子网划分"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;C 错误&amp;#xff0c;ServletConfig 表示 Servlet 的配置&amp;#xff0c;每个 Servlet 都有一个自己的 ServletConfig&amp;#xff0c;和请求无关。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["下列关于ServletConfig对象的说法错误的是    ", ["下列关于ServletConfig对象的说法错误的是    。", "A) 可以通过ServletConfig对象获取ServletContext对象", "B)  每个Servlet都拥有自己独立的ServletConfig对象", "C)  同一个Servlet的每个用户请求都拥有独立的ServletConfig对象", "D) ServletConfig对象可以获取Servlet初始化参数"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我觉得是分析B材料在一定范围内磨损效果等同于A&amp;#xff0c;也就是在α&amp;#61;0.05&amp;#xff08;&amp;#xff1f;&amp;#xff09;的检验条件下&amp;#xff0c;认为A&amp;#61;B&amp;#xff0c;这样B便宜就选B&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于数学实验题用SPSS分析替换材料后数据是否会增加的问题", ["问题遇到的现象和发生背景", "\n", "这是一个卑微大学生的数学实验题目，用SPSS操作", "\n", "1、表4是鞋底磨损试验数据，试验的鞋底由两种不同材料A和B制成，其中A为标准材料，B为成本更低的新材料，试验采用了10对特别制造的鞋子，分别给10个男孩子穿着进行正常的日常活动，其每一对鞋子中，一只的鞋底由材料A制成，则另一只的鞋底由材料B制成，选用材料A还是B由抛硬币决定，表中L为左脚的鞋子，R代表右脚的鞋子。研发人员希望用材料B替换材料A，鞋底磨损度不会增加，请选择恰当的统计方法分析试验数据，说明你选择该统计方法的原因，给出你的结论（共10分）", "提示：做相关性检验，若相关，则采用配对样本 T 检验，否则采用独立样本 T 检验。", "\n", "\n", "“研发人员希望用材料B替换材料A，鞋底磨损度不会增加，请选择恰当的统计方法分析试验数据”这一句不会做", "\n", "操作环境、软件版本等信息", "\n", "SPSS 25", "\n", "尝试过的解决方法", "\n", "不会知道用什么来解决", "这是我前面做的", "\n", "\n", "\n", "\n", "我想要达到的结果", "\n", "有没有友友可以解决一下最后那句“研发人员希望用材料B替换材料A，鞋底磨损度不会增加”，对应的操作，感激不尽"]], "Tag": "算法设计"}
{"Answer": "1）独立模式：在本机模式下测试和调试，适宜用在开发阶段。\r\n2）伪分布模式：hadoop守护进程运行在本机上，模拟一个小规模的集群。\r\n3）全分布模式：守护进程运行在一个集群上，生产模式", "Konwledge_Point": "树中的独立集", "Question": ["一台物理机开三台虚拟机做hadoop的小项目，请问hadoop要选什么模式的？", ["最近刚刚着手，准备在电脑上用VM装三台虚拟机", "\n网上看到hadoop的运行模式有独立、伪分布、全分布模式", "\n请问我初期学习的时候要用什么模式的？", "\n项目开发后期需不需要再修改成其他模式？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;下面是答案&amp;#xff0c;答题不易帮忙关注下博客&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;0x27A5F&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; flag &amp;#61; (n &amp;gt;&amp;gt;&amp;gt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; &amp;amp; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n1 &amp;#61; n &amp;amp; &lt;span class=\"hljs-number\"&gt;0xFFFF&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n2 &amp;#61; n | (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n3 &amp;#61; n &amp;amp; (~(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;));\n\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;flag:&amp;#34; &amp;#43; flag);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n1:&amp;#34; &amp;#43; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toHexString(n1));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n2:&amp;#34; &amp;#43; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toHexString(n2));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n3:&amp;#34; &amp;#43; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toHexString(n3));\n\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;以下二进制输出&amp;#xff0c;方便验证题目要求&amp;#34;);\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n :&amp;#34; &amp;#43; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toBinaryString(n));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n1:&amp;#34; &amp;#43; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toBinaryString(n1));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n2:&amp;#34; &amp;#43; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toBinaryString(n2));\n    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;n3:&amp;#34; &amp;#43; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;.toBinaryString(n3));\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["希望有大师能帮我详细讲解一下", ["定义一个int类型的变量n，将其赋值为0x27A5F；定义一个boolean的变量flag，如果n从右边往左边数过来第9位（首位为第0位）为1，则其值为true，否则为false；再定义3个int变量n1、n2、n3。n1右边的16位来自n1，左边的16位为全0；n2的值也来自n，但它从右边往左边数过来第5位（首位为第0位）被置为1；n3的值也来自n，但它从右边往左边数过来第4位（首位为第0位）被清为0。", "将上述变量再独立的行中输出出来，其中整数用16进制的方式输出。"]], "Tag": "算法设计"}
{"Answer": "你们的SESSION是怎么放的", "Konwledge_Point": "树中的独立集", "Question": ["在weblogic集群环境下,如何统计在线人数? ", ["在weblogic集群环境下,如何统计在线人数? ", "\n统计在线人数,单机情况是存一个application变量,可在集群环境下,每个节点都是相对独立的,不能通过变量存取. ", "\n如果放到数据库的话,如果服务器宕机,或数据库的问题,有可能导致一些垃圾数据,如用户已下线,但数据库中的数据还是标识在线. ", "\n\n", "有什么好的解决方案? "]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/dj0379/article/details/38356773", "Konwledge_Point": "树中的独立集", "Question": ["xutils框架 httputils请求后数据调出怎么实现", ["下列代码是通过httputils执行一次post请求，result为反馈数据，", "\n 我发现http.send（）这个函数是在一个独立线程中完成的，", "\n result不能通过return返回。", "\n 难道只能用 broadreceiver  然后intent传输，或者定义handler looper传输，", "\n 有其他直接可以传出的方法吗，刚接触框架", "\n\n", "public void http(){\n            HttpUtils http = new HttpUtils();\n    http.send(HttpRequest.HttpMethod.POST,\n            Url_News,\n            params,\n            new RequestCallBack<Object>() {\n\n                @Override\n                public void onSuccess(ResponseInfo<Object> objectResponseInfo) {\n                     result = objectResponseInfo.result.toString();\n                }\n\n                @Override\n                public void onFailure(HttpException e, String s) {\n                    MyLog.v(\"fail\");\n                }\n            });\n                            return result; //直接执行， http.send为线程执行\n}\n"]], "Tag": "算法设计"}
{"Answer": "这种需求可以用open flash chart来做，开源产品，商用免费，特别是2.0支持json格式的数据，和任何web框架都很容易集成。", "Konwledge_Point": "树中的独立集", "Question": ["我是新人有一些关于Flex的困惑，希望能够得到各位的解答", ["    最近这一两年Web客户端技术比较火，Ajax和Flex这两个名词到处都是。因为工作的关系我选需要学习J2EE开发，也利用空闲时间学习了些JavaScript，能够解决一些不太复杂的客户端交互问题。对于Flex虽然也一直关注但因为公司不用这方面做开发，加上自己是新人，需要学的东西太多了精力有限也就一直没能对Flex进行研究。", "      让我对Flex感兴趣是最近的一个项目。项目中需要一些比较漂亮的报表，当时我们首选了一个Flash控件叫AanyChart，效果没的说，但价格绝对可以杀人，最后只能选择自己开发了。当时我们的同事就推荐用Flex做，他也确实做了很快做了个折线图出来，效果还可以，可是和项目整合的时候就犯难了。不知道是我们设置有问题还是，Flex程序就这样，整个页面都在FlashPlayer里边了。我的同事也是按照帮助手册的例子稍加改造写的，对于这些具体的设置也不会，项目非常紧容不得我们耽搁，只能放弃。最好还是用JFreeChart来动态绘制图片来实现的，样子", "难看了些，但没有办法。", "      我想问一下各位以下几个问题：", "      1.)Flex程序一般是怎样在项目中应用的，是不是一旦采用了Flex客户端的东西就只能用Flex去写，而不能用HTML了", "      2.)Flex中用XML文件定义的程序好像能被编译成swf文件，这个文件能不能独立出来运行。也就是把编译好的swf文件部署到项目中，象使用一般用Flash开发的文件那样去使用，里边的JavaScript交互接口也不受影响。说白了也就是", "        想用Flex中成熟的类库去开发一些图表显示程序，数据由JS传入，swf作为外壳程序负责图像的渲染和显示。", "      3.)Flex中通过Ajax或其他技术访问后台的能力如何？", "      4.)Flex开发的费用如何（不考虑IDE费用我们可以用盗版），有什么商业上的限制没有？", "      4.)想我们单位这样的情况（以j2EE Ajax开发Web企业应用程序），是否适合在在项目的某些模块使用Flex？", "    这些问题困扰了我有一阵了。网上连篇累牍的资料大部分都是介绍ActionScript 或 Flex的一些简单入门更有的甚至直接Copy FlexBuilder的帮助文档，很少有介绍Flex如何在项目中使用或与原有旧项目整合的。象我们这种小公司，要一下子转换到Flex开发几乎是不可能的，只能在局部合适的模块使用。问题可能幼稚了些，但我对这一块没有什么概念，希望高手能够解答。", "[color=brown][/color]", "问题补充", "谢谢楼上的高手，那个控件我看过，很不错能满足我们部分需求。但我还是想问下Flex", "是否可以象我所期望的那样去使用。毕竟用人家的控件有时候是有局限的。而且更重要", "的一点就是，公司开发的都是内网应用程序，我们可以在局部用这种技术来小试牛刀，", "如果效果好的话可以慢慢推广或者慢慢的完全转移，毕竟RIA是大势所趋，Flex的界面", "效果也没的说。从我自己的角度来说我很喜欢这方面的技术，掌握它以后求职也是一种", "资本。但从公司角度来说，更换开发方式是有代价的，需要有一个充分的理由，但这种", "渐进的方式是大家都可以接受的。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看视频教程是第一步&amp;#xff0c;最关键还是要自己做&amp;#xff0c;自己试&amp;#xff0c;有问题了百度或者电子书找答案自己解决。自己多做几个就印象深刻了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["自学爬虫入门过程咋学的啊？", ["话说已经从事的程序员咋学的python爬虫啊？我已经干了2，3个月了，但是入门案列比如豆瓣等这些还不会独立编程呢，都是跟着代码敲啊，干了几天框架更难，😪咋学的呢，智商不行啊😂，别人2，3个月都可以独立编程了"]], "Tag": "算法设计"}
{"Answer": "http://www.cnblogs.com/wxfasdic/archive/2010/09/23/1833522.html", "Konwledge_Point": "树中的独立集", "Question": ["关于MFC调多线程，线程锁定的原理", ["如果调用的全局变量的数组都是独立的，按理说不锁定也不会冲突啊，为什么运算结果不稳定？系统锁定到底是做了什么？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建议写到一个&amp;#xff0c;有些逻辑还是可以复用的&amp;#xff0c;你把controller写两套就行了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["APP端和管理端的相同业务用一个服务还是两个服务？", ["问题遇到的现象和发生背景", "\n", "新项目有APP端和管理端，因为账号体系是分开的，所以我认为算是两个比较独立的项目，主张app端有独立的order服务，管理端有独立的orderManage服务。但是同事认为这样会造成代码的重复冗余，认为虽然是不同的账号体系，但是也可以写在同一个微服务里面，减少代码的重复开发。", "\n", "我想要达到的结果", "\n", "请问一下两种方案哪种会更好一点以及选择的思路是什么？"]], "Tag": "算法设计"}
{"Answer": "你真幸运，被我看到这个问题。去CMD100啊，可以免费发布到美国GoogleMarket，我都发布了好几个了。", "Konwledge_Point": "树中的独立集", "Question": ["国内上传android market有什么路径？", ["我是一个独立开发者。发现google都介绍很麻烦也有很多地方没搞明白？", "\n希望各位能提供一个好的方式或者途径来上传软件销售？"]], "Tag": "算法设计"}
{"Answer": "o，我对 erlang 了解不多 …… 献丑了", "Konwledge_Point": "树中的独立集", "Question": ["为撒Erlang要设置\"变量不变\"这个特性?", ["Erlang中的变量大部分情况下是\"不可变\"的(进程数据区域等特殊的除外), 据称是和并行相关, 不过这里我比较困惑, 既然Erlang进程设置了消息系统, 理论上讲消息都是一个一个处理的, 即:同一个进程中的消息处理不存在并行情况, 因此无需要\"边量不变\". 如果是在多进程情况下, 由于进程的数据之间是切分开的, 看起来也不太需要\"变量不变\"这个特性, why???", "\n可否举个例子说明在哪种情况下需要\"变量不变\"这个特性???", "\n\n", "备注: 本人初学Erlang, 理解错误的地方希望前辈们指点.", "\nThanks.", "\n\n", "[b]问题补充：[/b]", "\n根据night_stalker的回答, 看起来immutable是和\"并行\"没有太大关系的了... 还有别的方面的特性决定需要使用immutable的么???", "\n[b]问题补充：[/b]", "\n感谢night_stalker, 又去查了下资料, 应该是和进程调度有关, 详细见这里 : ", "http://hi.baidu.com/timeless/blog/item/3f3dafc3cb84835db319a8ae.html", "\n感觉上是由于immutable的特性决定进程可以比较轻松的进行调度而不消耗太多资源, 想比传统的进程/线程方式就有了很多好出.", "\n\n", "另, to night_stalker, Erlang里应该不直接支持global-var的把...每个进程都有自己独立的数据区域, 相互之间应该是不share的...", "\n\n", "再次感谢, 对这个问题有了更深入的认识:)~"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码无错误后编译即可生产exe。&lt;br /&gt;闪退是因为没有暂停。有两种方法&amp;#xff0c;一是在程序return前加上两句getchar()。一句也行&amp;#xff0c;两句更保险。&lt;br /&gt;另一种方法是在return前加一句system(&amp;#34;pause&amp;#34;)&amp;#xff0c;需要包含头文件stdlib.h&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vs2019怎么生成一个可运行的exe文件？", ["可以帮我看看怎么处理吗，我写好一段代码后怎么生成一个可以独立运行的exe文件，release设置也设置过，但是还是双击闪退，无法运行。"]], "Tag": "算法设计"}
{"Answer": "我也是PHP新手，目前在看php和mysql web开发（第四版）感觉还不错，在同事那看到一本PHP5与MYSQL WEB开发技术详解，参考一下啊...", "Konwledge_Point": "树中的独立集", "Question": ["能否提供一下PHP学习路线？哪些书籍较好，入手较快？", ["能否提供一下PHP学习路线？哪些书籍较好，入手较快？", "\n从最初学习php，到独立完成一个容纳300人同时在线购物的网站，需要多长时间？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;支持&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["面向海外销售上架appstore还需要版号吗？", ["估计是不需要版号的，因为毕竟不是在国内销售；", "但是不知道苹果是否支持国内独立手游开发者，发布手游，仅面向海外销售。", "\n", "有知道的吗？"]], "Tag": "算法设计"}
{"Answer": "人是感情动物,谁能没有情绪呢,可是有一句话说,要做事,先做人\r\n我也是个性情中人,但有个故事我看了后印象很深刻,现分享与你\r\n\r\n在张良年轻的时候，国家被秦始皇消灭，他倾其所有雇用了一个大力士，想暗杀秦始皇，却没能成功，后来被通缉跑路,他就藏在一个小山村里，他有一次去散步，经过一座桥，有一个老人看到了张良，就把自己的鞋子从桥上扔了下去，然后让张良帮他捡上来,张良当时年轻气盛,很是生气，可是他忍了,没有跟老人计较，而是下去把鞋子捡上来,可是老人又刁难,让张良把鞋给他穿上,张良还是忍了,他想,反正已经捡回来了，就帮他穿上好了，鞋子穿上之后，老人很高兴的说,孺子可教也！五天以后到这桥上来，我会报答你。张良五天后又来到了这座桥，老人说,年轻人跟老头子约会还会迟到，五天以后再来！,张良只好回去,又过了五天,张良又来到了这座桥，看到老人又比他先到，老人还是那句话,五天以后再来！又过了五天，这一次张良没有等到天亮了才去,而是半夜就去桥上了，这次他比老人先到了,过了会老人来了，看到张良很高兴，就说,孺子可教！之后就送了张良一本&lt;&lt;兵书&gt;&gt;。\r\n    这位老人在传给张良兵书之前，一遍一遍的刁难他，为什么呢？因为一个人学问再好，如果性情不好，情绪管理的能力不好，有了学问也白搭\r\n    情绪管理，就是控制自己的情绪,让自己的情绪适当表达，也就是中庸说的,将喜怒哀乐各种情绪能表达得恰到好处！但是要记住,情绪管理不是情绪压抑\r\n\r\nps:张良是中国第一策略家,第一兵法家以及公认的汉代开国三杰之首，刘邦推崇张良--运筹帷幄之中，决胜千里之外", "Konwledge_Point": "树中的独立集", "Question": ["如何管理情绪，希望大家的经验能给我有所帮助", ["在日常工作和学习中大家都会有负情绪产生，良好的工作习惯，生活习惯能使人受益匪浅。", "\n大家有什么建议。", "\n本人缺点如下：", "\n1. 做任何事情负情绪太多，以至于影响自己正常的学习工作和生活。", "\n\n", "本人的简介。", "\n1. java开发3年，常用的技术标准，struts,spring,hibernate,ibatis,flex 都使用过，带领团队独立开发项目。", "\n\n", "\n", "经常阅读各方面的书籍。中国哲学，医学，心理学，经济学，文学。西方的管理学，生物能医学，哲学。", "\n", "个人的目标：", "\n1. 能够自由的支配自己的精神和精力去做一些认为重要的事情。", "\n\n", "附加：", "\n因为负情绪太高，导致精力不够使用，不能同时做几件事情。", "\n个人认为一个合理工作习惯学习习惯，就是能在同一间时间，纵向横向的穿插自由的阅读学习工作生活。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果一次输入的方法已经是最优的情况下&amp;#xff0c;可以用48个线程分别执行48个二位数组将时间压缩到一次输入的时间&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Python大量数据处理", ["我有48个维度不同的二维数组，每个大约是2×600（48个数组是独立的），，，我用的是循环48次，每次把一个数组作为一次输入来计算，画图。48次计算结果是独立的，单独一次计算需要2秒，48次循环就花了大量时间，有什么办法可以优化吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第二行掩码是192那个错了&amp;#xff0c;192是1100  0000&amp;#xff0c;广播地址是应该是主主机 位全是1,79时0100 1111&amp;#xff0c;主机位后6位&amp;#xff0c;显然不是全1&amp;#xff0c;&lt;br /&gt;第四行也不对&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["子网划分题，带佬们康康指错", ["1、某企业设有行政部（12台机）、业务部（50台机）、研发部（4台机）和生产部（100台机）4个部门，希望每个部门都工作于相对独立的局域网。现企业拥有一个C类地址，需要进行IP地址规划，为每个部门分配一个独立的IP子网地址。", "\n", "\n", "这样是可以的吗？"]], "Tag": "算法设计"}
{"Answer": "SSH结合使用以后,同样也是可以根据领域模型生成数据库表,在applicationContext中的hibernate配置部分完成。\r\n\t&lt;!-- Mysql数据源配置,主要用于开发测试环境--&gt; \r\n\r\n\t&lt;bean id=\"dataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\"&gt;\r\n\t\t&lt;property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\" /&gt;\r\n\t\t&lt;property name=\"url\" value=\"jdbc:mysql://172.16.125.9/expert\" /&gt;\r\n\t\t&lt;property name=\"username\" value=\"root\" /&gt;\r\n\t\t&lt;property name=\"password\" value=\"root\" /&gt;\r\n\t&lt;/bean&gt;\r\n&lt;!-- Hibernate配置 --&gt;\r\n\t&lt;bean id=\"sessionFactory\" class=\"org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean\"&gt;\r\n\t\t&lt;property name=\"dataSource\" ref=\"dataSource\" /&gt;\r\n\t\t&lt;property name=\"namingStrategy\"&gt;\r\n\t\t\t&lt;bean class=\"org.hibernate.cfg.ImprovedNamingStrategy\" /&gt;\r\n\t\t&lt;/property&gt;\r\n\t\t&lt;property name=\"hibernateProperties\"&gt;\r\n\t\t\t&lt;props&gt;\t\t\r\n&lt;!-- hibernate连接数据库表时对表结构的识别 --&gt;\r\n\t&lt;prop name=\"hibernate.hbm2ddl.auto\"&gt;update&lt;/prop&gt;\t\t\r\n\t\t\t\t&lt;!-- mysql --&gt;\r\n\t\t\t\t&lt;prop key=\"hibernate.dialect\"&gt;org.hibernate.dialect.MySQLDialect&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"hibernate.show_sql\"&gt;true&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"hibernate.cache.use_query_cache\"&gt;true&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"hibernate.cache.provider_class\"&gt;org.hibernate.cache.EhCacheProvider&lt;/prop&gt;\r\n\t\t\t\t&lt;prop key=\"hibernate.cache.provider_configuration_file_resource_path\"&gt;/ehcache-hibernate.xml&lt;/prop&gt;\r\n\t\t\t&lt;/props&gt;\r\n\t\t&lt;/property&gt;\r\n\t\t&lt;property name=\"packagesToScan\" value=\"cn.com.sise.expert.entity.*\"/&gt;\t\t\r\n\t&lt;/bean&gt;", "Konwledge_Point": "树中的独立集", "Question": ["有关SSH框架结合使用的问题！", ["独立使用hibernate的时候可以先创建领域模型，然后通过代码来生成表到数据库，这种方法应该是比较常用的方法吧。 ", "\n但Struts和Spring还有hibernate结合以后不能用configuration读取hibernate.cfg.xml了，请问创建好领域模型后如何去读取生成数据库表？ （因为hibernate的配置信息集合到了spring的applicationcontext配置中，让configuration读取applicationcontext还是？） ", "\n\n", "//============================================= ", "\n\n", "以上是hibernate的创建问题..在捎带问个ibatis的问题； ", "\n\n", "ibatis也是ORM的一种框架，请问ibatis如果单独使用的话，先创建领域模型然后通过模型生成表到数据库的操作怎样操作呢？ ", "\n\n", "然后和struts及spring结合后怎样操作呢？ ", "\n\n", "麻烦各位了 ( ⊙ o ⊙ ) "]], "Tag": "算法设计"}
{"Answer": "对于Tomcat(Win下一般内存分配JDK都有限制,一般是1024M,Unix或者64除外);\r\nJVM添加参数:\r\n-Xms1024m \r\n-Xmx1048m\r\n\r\n其他不用设置;\r\n\r\n如果可能,可采用垂直集群(1台服务器,跑多个Tomcat实例);", "Konwledge_Point": "树中的独立集", "Question": ["怎样最大限度的发挥服务器的性能？", ["计算机：", "IBM", "BC_8853", "Intel(R) Xeon(R) CPU ", "  5130 @ 2.00GHz", "2.00 GHz", "3.25 GB 的内存", "CPU是四核的", "我写的代码主要是操作数据库和导出成excel，测试发现导成excel时（用jxl导的）花费的时间很长，7k条数据花了6分钟（包括导出数据和打成zip包），目前eclipse.ini的配置为：", "-clean", "-showsplash", "com.genuitec.myeclipse.product.ide", "--launcher.XXMaxPermSize", "256m", "-vmargs", "-Xms256m", "-Xmx512m", "-Duser.language=en ", "-XX:PermSize=128M ", "-XX:MaxPermSize=1024M", "我会继续修改代码提高效率，但还有个问题想请教大家，我的代码是一个web工程的一部分，将来会被一起放到Tomcat容器中，要怎样配置Tomcat容器才能最大限度的发挥这台服务器的性能。谢谢！", "问题补充", "yyjn12 写道", "为什么是在eclipse里弄？", "另外 maxpermsize好象不需要1024M那么大吧，不过这个应该没什么影响。", "我的代码目前还没有放到Tomcat容器中，我在自己的电脑上用JUnit测试，所有目前改的是eclipse.ini", "问题补充：", "引用", "\n", "我想说的是， LZ误解eclipse的内存配置了， 你在eclipse里运行， 不管是junit还是Main程序， 都启用的是独立的jvm. JUnit可以在运行的配置里设jvm 参数。", "sdh5724 (中级程序员) 2009-01-07 采纳为答案", "\n", "你把我弄糊涂了，那部署普通java工程时都是采用命令行带设置内存参数部署的？eclipse.ini中也能设置JVM参数，那这些参数是在什么情况下起作用的？", "谢谢！"]], "Tag": "算法设计"}
{"Answer": "1.设计上应该综合考虑，如用户权限等，应该是全局考虑的，而各个模块的功能可以分开设计，没有什么问题。\r\n2.一般一个模块到了一定规模，使用独立的域名，是有必要的，当然，我觉得这个是次要的。\r\n3.放在一个数据库，比较容易管理，而且技术上要考虑的问题也要少一些，比如，多数据源的事务问题。\r\n4.技术上选择，应该综合各种因素考虑，比如各人员熟悉程度，技术趋势，扩展性和维护性等。对struts,ibatis,spring，可以选择appfuse作为项目基础，省去了项目初期的配置，它内建了完整构建生命。另外，它是基于maven构建的，你可以将你的项目按模块等划分成几个maven module来开发。", "Konwledge_Point": "树中的独立集", "Question": ["3个网站该如何整合设计", ["我有3个网站(人力资源，博客，资讯)，", "\n环境是三个linux,oracle,apache,resin.", "\n之前这三个网站是独立开发的。域名是独立的。", "\n 现在进行改版。把三个项目整合起来。不知道该如何设计会合理些。", "\n\n", "问题一：是把三个项目作为三个模块设计成一个网站，还是分开设计好些，分开设计不利于管理", "\n\n", "问题二：如果设计在一起，apache2，resin2.17如何设置二级域名指向子目录？", "\n域名的格式是这样的。", "www.myweb.com", "    myweb", "\nhr.myweb.com     myweb/hr/", "\nblog.myweb.com   myweb/blog/", "\nnews.myweb.com   myweb/news/", "\n\n", "问题三：数据库问题，三个模块是使用一个数据库用户，还是独立使用。oracle数据库。", "\n\n", "问题四：技术选择", "\n因为之前是别人的，开发时间紧，设计不合理。未采用框架。现在代码比较乱。我计划使用strut,spring,ibatis（因为自如掌控hibernate，而且ibatis比较容易上手）.来进行改版。", "\n\n", "请哥们给点意见，方法。", "\n[b]问题补充：[/b]", "\n问题一：我计划把三个网站作为模块设计为一个站点", "\n问题二：设计为一个站点后，不知道apache+resin的域名改如何配置指向之目录。麻烦哥们能给个详细的配置方法。", "\n问题三：数据库设计设计在同一个库的同一个用户下", "\n问题四：ibatis是初学，不知道在使用的过程中有哪些需要特别注意的地方，和难点。", "\n\n", "哥们们请点拨。谢谢。"]], "Tag": "算法设计"}
{"Answer": "jquery.load函数是将一个请求地址的响应结果，追加到另外一个jsp页面当中，所以，你说的脚本代码 定义的变量/对象等 ，这些只有html和js是共享的，等同于是同一个页面的，至于你想使用到共享的&lt;%%&gt;jsp代码或者el表达式肯定不会共享的，jsp代码会在编译成html之后，追加进来，所以共享的只能是前端代码，如果想共享的话，可以使用jstl中&lt;c:import /&gt;", "Konwledge_Point": "树中的独立集", "Question": ["在.jsp文件里面，通过jquery load方法加载另一个.jsp文件，请问这2个.jsp文件是否共享数据呢？", ["1.问题里面的共享数据是指，在.jsp里的脚本代码 定义的变量/对象等", "\n\n", "举例，", "\n[code=\"java\"]<%", "\nCart cart = request.getAttribute(\"cart\");", "\n\n", "……", "\n%>[/code]", "\n\n", "2.再打个比方————包含文件，有2种方法：", "\n1).jsp指令", "   //这样包含进来的.jsp文件不共享数据，因为2个.jsp文件 各自独立！", "\n\n", "2).jsp标准动作", "\n<%@ include file=\"XXX.jsp\"%>    //这样包含进来的.jsp文件，共享数据，因为相当于是合成了一个.jsp文件！", "\n\n", "【问题】jquery里的load方法，加载的.jsp文件，是否共享数据？它相当于是2中的哪一种包含文件方法的呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;显示数据的时候做了一下优化&amp;#xff0c;入校/出校不是显示的0/1&amp;#xff0c;而是直接用中文显示的&amp;#xff0c;看着更直观。&lt;br /&gt;运行结果&amp;#xff1a;&lt;br /&gt;&amp;#xff08;1&amp;#xff09;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/512973006076140.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;2&amp;#xff09;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/42688300607613.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;3&amp;#xff09;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/576493006076186.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;4&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/179824006076137.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;5&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/574044006076161.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;6&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/476564006076114.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;7&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/310374006076112.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define OUT_SCHOOL (int)0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define IN_SCHOOL (int)1&lt;/span&gt;\n\n//身份类型\nenum eType\n{\n    e_student&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,\n    e_teacher&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,\n    e_other\n};\n\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;日期\ntypedef struct _date\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,m,d;\n}Date;\n\ntypedef struct _person\n{\n    eType type;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;人员身份\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;姓名\n    char id[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;编号 不能超过&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;位数\n    char phone[&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;];&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;联系方式\n    char sfz[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;身份证号\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; op; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;出/入校\n    Date &lt;span class=\"hljs-keyword\"&gt;time&lt;/span&gt;;\n}Person;\n\nvoid save(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;先声明一下\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; menu()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; op;\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;************欢迎使用校园出入管理系统**************\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;--------------------------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------1.录入出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------2.保存出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------3.浏览出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------4.查询出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------5.增加出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------6.删除出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------7.修改出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------8.统计出入校园人员信息-------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------9.对出入校园人员信息进行排序-------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;---------10.退出----------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;--------------------------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*****************谢谢使用*************************\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择(1-10): &amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;op);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; op;\n}\n\n//&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.录入信息\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; input(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; t;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入人员身份(1.学生 2.教职工 3.其他)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;t);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            {\n                ps[n].type &amp;#61; e_student;\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[n].id);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n            {\n                ps[n].type &amp;#61; e_teacher;\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入教职工号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[n].id);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n            {\n                ps[n].type &amp;#61; e_other;\n                ps[n].id[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[n].name);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入联系方式&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[n].phone);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入身份证号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[n].sfz);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0.出校 1.入校&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;ps[n].op);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[n].op &amp;#61;&amp;#61; OUT_SCHOOL)\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入离校时间(YYYY/MM/DD):&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入入校时间(YYYY/MM/DD):&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d/%d&amp;#34;&lt;/span&gt;,&amp;amp;ps[n].time.y,&amp;amp;ps[n].time.m,&amp;amp;ps[n].time.d);\n\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;录入成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        n&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否继续录入(1.是 0.否)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;flag);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n\n    }\n    save(ps,n); &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存信息\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; n;\n}\n\n//&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;.保存\nvoid save(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    FILE* fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;data.txt&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-regexp\"&gt;//s&lt;/span&gt;ystem(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; e_student)\n            fprintf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;1 %s %s %s %s %d %d %d %d\\n&amp;#34;&lt;/span&gt;,ps[i].name,ps[i].id,ps[i].phone,ps[i].sfz,ps[i].op,ps[i].time.y,ps[i].time.m,ps[i].time.d);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; e_teacher)\n            fprintf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;2 %s %s %s %s %d %d %d %d\\n&amp;#34;&lt;/span&gt;,ps[i].name,ps[i].id,ps[i].phone,ps[i].sfz,ps[i].op,ps[i].time.y,ps[i].time.m,ps[i].time.d);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            fprintf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;1 %s %s %s %s %d %d %d %d\\n&amp;#34;&lt;/span&gt;,ps[i].name,&lt;span class=\"hljs-string\"&gt;&amp;#34;无&amp;#34;&lt;/span&gt;,ps[i].phone,ps[i].sfz,ps[i].op,ps[i].time.y,ps[i].time.m,ps[i].time.d);\n    }\n    fclose(fp);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;数据已保存到data.txt中&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}\n\n\n//显示单条信息\nvoid showSingle(Person ps)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps.type &amp;#61;&amp;#61; e_student)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps.op &amp;#61;&amp;#61; OUT_SCHOOL)\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-6s %-10s %-9s %s %s %s %d/%d/%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;学生&amp;#34;&lt;/span&gt;,ps.name,ps.id,ps.phone,ps.sfz,&lt;span class=\"hljs-string\"&gt;&amp;#34;出校&amp;#34;&lt;/span&gt;,ps.time.y,ps.time.m,ps.time.d);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-6s %-10s %-9s %s %s %s %d/%d/%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;学生&amp;#34;&lt;/span&gt;,ps.name,ps.id,ps.phone,ps.sfz,&lt;span class=\"hljs-string\"&gt;&amp;#34;入校&amp;#34;&lt;/span&gt;,ps.time.y,ps.time.m,ps.time.d);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps.type &amp;#61;&amp;#61; e_teacher)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps.op &amp;#61;&amp;#61; OUT_SCHOOL)\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-6s %-10s %-9s %s %s %s %d/%d/%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;教职工&amp;#34;&lt;/span&gt;,ps.name,ps.id,ps.phone,ps.sfz,&lt;span class=\"hljs-string\"&gt;&amp;#34;出校&amp;#34;&lt;/span&gt;,ps.time.y,ps.time.m,ps.time.d);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-6s %-10s %-9s %s %s %s %d/%d/%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;教职工&amp;#34;&lt;/span&gt;,ps.name,ps.id,ps.phone,ps.sfz,&lt;span class=\"hljs-string\"&gt;&amp;#34;入校&amp;#34;&lt;/span&gt;,ps.time.y,ps.time.m,ps.time.d);\n\n    }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps.op &amp;#61;&amp;#61; OUT_SCHOOL)\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-6s %-10s %-9s %s %s %s %d/%d/%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;其他&amp;#34;&lt;/span&gt;,ps.name,&lt;span class=\"hljs-string\"&gt;&amp;#34;无&amp;#34;&lt;/span&gt;,ps.phone,ps.sfz,&lt;span class=\"hljs-string\"&gt;&amp;#34;出校&amp;#34;&lt;/span&gt;,ps.time.y,ps.time.m,ps.time.d);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-6s %-10s %-9s %s %s %s %d/%d/%d\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;其他&amp;#34;&lt;/span&gt;,ps.name,&lt;span class=\"hljs-string\"&gt;&amp;#34;无&amp;#34;&lt;/span&gt;,ps.phone,ps.sfz,&lt;span class=\"hljs-string\"&gt;&amp;#34;入校&amp;#34;&lt;/span&gt;,ps.time.y,ps.time.m,ps.time.d);\n    }\n}\n\n//&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.浏览\nvoid show(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        showSingle(ps[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}\n\n//&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;.查询\nvoid search(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,t;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; op;\n    char sel;\n    char tmp[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) //多次操作\n    {\n        &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        flag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A.按人员身份查询\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B.按姓名查询\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C.按出/入校查询\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D.退出\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请选择(A-D):&amp;#34;&lt;/span&gt;);\n        sel &amp;#61; getchar();\n        getchar();\n        switch(sel)\n        {\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入人员身份(1.学生 2.教职工 3.其他)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;t);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; t)\n                {\n                    flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    showSingle(ps[i]);\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到符合条件的人员信息\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入人员姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,tmp);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strcmp(ps[i].name,tmp) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                {\n                    flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    showSingle(ps[i]);\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到符合条件的人员信息\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1.出校  2.入校 \\n请选择:&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;op);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].op &amp;#61;&amp;#61; op)\n                {\n                    flag &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    showSingle(ps[i]);\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到符合条件的人员信息\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-string\"&gt;&amp;#39;D&amp;#39;&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ;\n\n        }\n        &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    }\n}\n//&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;.增加人员信息&amp;#xff0c;input函数中可以修改信息数量&amp;#xff0c;所以这个功能&amp;#xff0c;直接调用input函数即可\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; add(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; input(ps,n);\n}\n//&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;.删除\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; del(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j;\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],sfz[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; op;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,m,d;\n    char ch;\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    rewind(stdin);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清空输入缓存\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入姓名、身份证号、出/入校、出/入校时间: &amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %d %d/%d/%d&amp;#34;&lt;/span&gt;,name,sfz,&amp;amp;op,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,&amp;amp;m,&amp;amp;d);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strcmp(ps[i].name,name)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; strcmp(ps[i].sfz,sfz)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; ps[i].op&amp;#61;&amp;#61;op &amp;amp;&amp;amp; ps[i].time.y &amp;#61;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt; &amp;amp;&amp;amp; ps[i].time.m &amp;#61;&amp;#61;m &amp;amp;&amp;amp; ps[i].time.d &amp;#61;&amp;#61;d)\n        {\n            showSingle(ps[i]);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;n)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;没有该人员信息\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;确认删除(y/n)? &amp;#34;&lt;/span&gt;);\n            rewind(stdin);\n            ch &amp;#61; getchar();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i;j&amp;lt;n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n                    ps[j] &amp;#61; ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;删除成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n                n--;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        save(ps,n);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; n;\n}\n\n//&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;.修改\nvoid change(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j,t;\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],sfz[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; op;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,m,d;\n    char ch;\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清屏\n    rewind(stdin);&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;清空输入缓存\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入姓名、身份证号、出/入校、出/入校时间: &amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s %d %d/%d/%d&amp;#34;&lt;/span&gt;,name,sfz,&amp;amp;op,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,&amp;amp;m,&amp;amp;d);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strcmp(ps[i].name,name)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; strcmp(ps[i].sfz,sfz)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; ps[i].op&amp;#61;&amp;#61;op &amp;amp;&amp;amp; ps[i].time.y &amp;#61;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt; &amp;amp;&amp;amp; ps[i].time.m &amp;#61;&amp;#61;m &amp;amp;&amp;amp; ps[i].time.d &amp;#61;&amp;#61;d)\n        {\n            showSingle(ps[i]);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;n)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;没有该人员信息\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改身份类型(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            ch &amp;#61; getchar(); getchar();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入人员身份(1.学生 2.教职工 3.其他)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;t);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                    ps[i].type &amp;#61; e_student;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n                    ps[i].type &amp;#61; e_teacher;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n                    ps[i].type &amp;#61; e_other;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改姓名(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        ch &amp;#61; getchar(); getchar();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[i].name);\n        }\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; e_student)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改学号(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            ch &amp;#61; getchar(); getchar();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[i].id);\n            }\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; e_teacher)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改教职工编号(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            ch &amp;#61; getchar(); getchar();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入教职工编号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[i].id);\n            }\n        }\n\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改联系方式(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        ch &amp;#61; getchar(); getchar();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入联系方式&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[i].phone);\n        }\n\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改身份证号(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        ch &amp;#61; getchar(); getchar();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入身份证号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,ps[i].sfz);\n        }\n\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改出/入校(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        ch &amp;#61; getchar(); getchar();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入0.出校 / 1.入校&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;ps[i].op);\n        }\n\n        rewind(stdin);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否修改出/入校时间(y/n)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        ch &amp;#61; getchar(); getchar();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ch &amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt; || ch&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入出入校时间(YYYY/MM/DD)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d/%d&amp;#34;&lt;/span&gt;,&amp;amp;ps[i].time.y,&amp;amp;ps[i].time.m,&amp;amp;ps[i].time.d);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;修改成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        save(ps,n);\n    }\n}\n\n\n//统计\nvoid tongji(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&amp;#61;&lt;span class=\"hljs-string\"&gt;{0}&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; op;\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入0.出校  1.入校&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;op);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].op &amp;#61;&amp;#61; op)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; e_student)\n                a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; e_teacher)\n                a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].type &amp;#61;&amp;#61; e_other)\n                a[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]&amp;#43;&amp;#43;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(op &amp;#61;&amp;#61; OUT_SCHOOL)\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;出校统计结果: &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;入校统计结果: &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学生%d人&amp;#xff0c;教职工%d人&amp;#xff0c;其他人%d人\\n&amp;#34;&lt;/span&gt;,a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],a[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[i].op &amp;#61;&amp;#61; op)\n        {\n            showSingle(ps[i]);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}\n\n//比较时间\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; cmp(Date d1,Date d2)\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d1.y &amp;lt; d2.y)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d1.y &amp;gt; d2.y)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d1.m &amp;lt; d2.m)\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d1.m &amp;gt; d2.m)\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d1.d &amp;lt; d2.d)\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d1.d &amp;gt; d2.d)\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n    }\n}\n\n\n//&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;.排序\nvoid sortByName(Person ps[],&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n)\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j;\n    Person t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;n-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strcmp(ps[j].name,ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].name)&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                t &amp;#61; ps[j];\n                ps[j] &amp;#61; ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strcmp(ps[j].name,ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].name)&amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(ps[j].op &amp;#61;&amp;#61; IN_SCHOOL &amp;amp;&amp;amp; ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].op &amp;#61;&amp;#61; IN_SCHOOL)\n                {\n                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按入校时间排序\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(cmp(ps[j].time,ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].time) &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    {\n                        t &amp;#61; ps[j];\n                        ps[j] &amp;#61; ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                        ps[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n                    }\n                }\n                \n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;排序后&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    show(ps,n);\n}\n\n\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; op;\n    Person ps[&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;]; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存所有信息\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;信息条数\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        op &amp;#61; menu();\n        switch(op)\n        {\n        case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: n &amp;#61; input(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;录入\n        case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: save(ps,n); &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;保存\n        case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: show(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;浏览\n        case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: search(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;查询\n        case &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;: n &amp;#61; add(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;增加\n        case &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;: n &amp;#61; del(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;删除\n        case &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;: change(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;修改\n        case &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;: tongji(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;统计\n        case &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:sortByName(ps,n);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;排序\n        case &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;退出\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["用c语言编写校园出入管理系统", ["一、总体介绍", "\n", "项目名称:校园出入管理系统", "项目简介: 随着信息化时代的到来，人员信息管理都趋向智能化、系统化。为方便进出校园信", "息的管理，设计与开发一个校园出入管理系统。 该系统基本信息包括:人员身份、姓名、编号、联系方式、身份证号、出/入校，", "出/入校时间。人员身份分为学生、教职工和其他三种类型;人员身份为学生时编号为 学号，教职工的编号是职工号，其他身份编号填无;出/入校用 0/1 表示，0 代表出校， 1 代表入校;出/入校时间格式为年/月/日。", "二、具体要求", "系统功能要求", "以菜单的方式完成以下功能，菜单形式参考下图。", "\n", " (1)录入出入校园人员信息", "提示用户按一定格式以及需要输入的各项信息。", "(2)保存出入校园人员信息", "将人员信息存入文件，并提示保存是否成功。", "(3)浏览出入校园人员信息 在屏幕上显示所有出入校园人员信息，并注意将各项数据对齐，若无信息，则给出", "相关提示。", "(4)查询出入校园人员信息", "提示用户可分别按照人员身份、姓名、出/入校进行信息查询，并根据用户提供的 选择进行查询结果显示，下图仅供参考。", "(5)增加出入校园人员信息 提示用户按一定格式输入要增加的出入校园人员信息，并提示是否添加成功。 (6)删除出入校园人员信息 提示用户输入姓名、身份证号、出/入校、出/入校时间，根据输入确定要删除的人", " 员信息，若没有该人员信息，则提示系统没有该人员信息;如有，先输入该人员的全部", "\n", "信息，后提示用户是否确认删除该数据 y/n? 输入 y 后则删除人员信息，并提示相应信 息。下图仅供参考。", "(7)修改出入校园人员信息", "提示用户输入姓名、身份证号、出/入校、出/入校时间，根据输入确定要修改的人 员信息，若没有该人员信息，则提示系统没有该人员信息;若有，则先输出该人员的全 部信息，并询问用户修改哪项信息，选择后，输入新信息，并提示用户确实要修改吗 y/n?输入 y 后则修改人员信息。下图仅供参考。", "注意:对于增加、删除、修改的人员信息均需更新保存至文件中，并提示保存是否 成功。", "  (8)统计出入校园人员信息", "提示用户输入需要统计的出校信息或入校信息，输入 0 或 1，然后对出校或入校人 员信息进行统计，按人员身份进行统计人数，并输出统计结果以及统计的所有人员信 息。下图仅供参考。", " (9)按出入校园人员信息进行排序 按姓名对出入校园人员信息进行升序显示，同名人员按入校时间进行升序显示。 (10)退出", "\n", "提示用户是否退出该系统。", "2. 程序设计要求 (1)要合理使用枚举、结构体、结构体数组、结构体指针访问数组。 (2)逻辑独立的功能定义在函数中，并利用指针进行参数传递。 (3)要有合理提示，例如修改、删除需提示确认。 (4)考虑程序鲁棒性，对不合法数据要有错误处理机制。 (5)所有数据保存在文件中。", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1.你的子窗口是弹出显示&amp;#xff0c;还是在主窗口里显示。如果是弹出那么子窗口用Window。如果你的子窗口要镶嵌在主窗口中。就把他们定义为UserControl。然后你的主窗口添加这个控件。&lt;br /&gt;2.你可以把这些子窗口定义成一个dll。新建一个项目。把所有的子窗口都写在那里。然后在主窗口项目中引用这个子窗口项目即可。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C# WPF 子窗口能否保存为单独文件，主窗口通过菜单控件调用该文件打开子窗口", ["本人外行，最近准备用C# WPF写一个小工具，一个主窗口里面通过菜单控件调用不同功能的独立模块，主窗口和子窗口都写好了，遇到如下问题：", "如何把子窗口“封装”成一个独立的文件（比如dll，瞎猜的见笑了），在主窗口上通过菜单控件调用这个子窗口？", "\n", "望各位不吝赐教。", "感谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a class=\"md_call_user\" href=\"https://blog.csdn.net/ccystewart\" type=\"user\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&amp;#64;CCCCCCCYYY_ &lt;/a&gt; 你可以帮我看看这个问题吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请问，如何实现二级评论分页功能？", ["问题遇到的现象和发生背景", "\n", "（为了方便区分，这里把一级评论称为 评论，把二级评论 和 @ 某人 称为 回复）", "\n", "最近要重写评论功能，因为测试过程中，发现二级评论多了，会占满整个屏幕，要下拉很久才能看到第二条评论，所以要给二级评论添加一个横向按页码分页功能。", "\n", "开始，评论和回复是一张表，后来百度了一篇技术文章，说评论一张表、回复一张表，方便给回复做分页。", "确实，一张表，既做评论分页，也做回复分页，我尝试了好久，没写出来。", "\n", "于是，我分表了，在条件分页查询评论列表的方法里，遍历评论列表，取出评论ID，去查询回复列表，并添加了回复的分页功能。", "现在，回复是可以分页了，但我切换页码，发现整个评论区所有回复列表记录超过 10条的，跟着一起分页了， 这种牵一发动全身的感觉把我给吓了一跳。", "\n", "请问，如何才能让每条评论下的回复列表独立切换分页？"]], "Tag": "算法设计"}
{"Answer": "看看show parameter [color=red]optimizer_mode[/color]\r\n试试\r\nSELECT A.*\r\nFROM B,C ,A", "Konwledge_Point": "树中的独立集", "Question": ["ORACLE三表查询优化问题", ["有表A，2000多行", "\n表B，15w行", "\n表C,18W行", "\n数据库为ORACLE9I。", "\n现以表A连接表B，表B连接表C做查询，但经过分析，ORACLE始终计划是表A与C产生MERGE JOIN，要知道A表和C表是没有关联的，只能产生笛卡尔集。这样就会产生2000×180000条记录，导致查询性能大大降低，临时表巨大。", "\n请问有什么好办法，使表A先连接表B之后再去连接表C，或者B先连接C之后再连接A都可以。", "\n注：连接字段都建有独立索引。", "\n\n", "语句如下：", "\nSELECT A.* ", "\nFROM A ,B,C", "\nWHERE A.COL_A = B.COL_B1 AND B.COL_B2 = C.COL_C", "\n\n", "SELECT A.*", "\nFROM A JOIN (B JOIN C ON (B.COL_B2 = C.COL_C)) ON (A.COL_A = B.COL_B1)", "\n\n", "SELECT A.*", "\nFROM (A JOIN B ON A.COL_A = B.COL_B1) JOIN C ON B.COL_B2 = C.COL_C", "\n\n", "执行计划截图:", "\n[img]", "http://dl.iteye.com/upload/attachment/211218/067f82fa-9fe3-3239-a89c-3d481ef0cc3b.png[/img]"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;肯定是方案二呀&amp;#xff0c;这是通用做法了&amp;#xff0c;通过权限控制可以达到你想要的需求。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["多门店的数据库表设计", ["假如有50个门店，用户可以去不同门店消费，不同门店财务独立，用户消费后的数据存在数据库表中，现在有两种设计方式：1.50个门店，50张消费表；2.50个门店公用一张表。方案一，单个表的数据量比方案二较少，查询速度相对快些，但是查询本门店用户去外门店的消费时需要查49个表，查询速度较慢；方案二，查询本门店用户去外门店的消费时只需要查1个表，查询速度相对较快。想问下各位，你们会怎么设计？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;使用信号和槽&amp;#xff0c;qwidget有信号和槽&amp;#xff0c;qml也有信号和槽&amp;#xff0c;当slider1的值改变了&amp;#xff0c;会触发valueChanged信号&amp;#xff0c;获取到slider1的值&amp;#xff0c;然后发送到slider2&amp;#xff0c;就可以了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Qt 开发使用qml问题", ["qml里面放了很多个Slider控件,我想让Slider1 的值改变时,让Slider2的值也改变", "但是每个控件是相互独立的,怎么样才能把值共享出来"]], "Tag": "算法设计"}
{"Answer": "提供JSP空间的，好像都支持独立JVM,独立TOMCAT的吧，估计有专门这种虚拟技术\r\n这种空间一般来说都能用，至于稳定性与性能上就说不准了。\r\n\r\n应该会用试用时间的啊，你试一下就知道了", "Konwledge_Point": "树中的独立集", "Question": ["麻烦高手识别下，这个卖JAVA空间的是骗子不？", ["http://idc.jeecms.com/grwzkj/index.htm", "\n我想入手个java 空间", "\n我也是搞JAVA的，知道linux下只有一个80端口，而且jvm也是空享的，可是他这个却是", "\n\n", "独立JVM,独立TOMCAT容器的JSP虚拟主机", "\n·可更改JSP虚拟主机配制server.xml ", "\n·用户FTP根目录即为TOMCAT的根目录", "\n·可自由启动和关闭TOMCAT", "\n·用户互换隔离,独立访问权限保证安全", "\n·可查看catalina.log日志", "\n·使用性能比Apache强十倍的NGINX", "\n\n", "有点怀疑，如果是真的，他是怎么实现的呢？"]], "Tag": "算法设计"}
{"Answer": "html\r\n\r\n```\r\n &lt;div id=\"div1\" style=\"background: aqua;width: 50px;height: 50px;\"&gt;\r\n\t\t\t\t\r\n\t\t\t\t&lt;/div&gt;\r\n\t\t\t\t&lt;div id=\"div2\" style=\"background: navy;width: 100px;height: 100px;\"\"&gt;\r\n\t\t\t\t\r\n\t\t\t\t&lt;/div&gt;\r\n```\r\n\r\n\r\njs\r\n\r\n```\r\n $(\"#div1\").mouseenter(function(e){\r\n    \t\t\t$(\"#div2\").slideDown(500);\r\n    \t\t\t$(\"#div1\").mouseleave(function(e){\r\n    \t\t\t\tvar array = new Array();\r\n    \t\t\t\tarray.push($(\"#div1\")[0]);\r\n    \t\t\t\tarray.push($(\"#div2\")[0]);\r\n    \t\t\t\tvar flag = checkIn(e,array)\r\n    \t\t\t\tif (!flag) {\r\n    \t\t\t\t\t$(\"#div2\").slideUp(500);\r\n    \t\t\t\t}\r\n    \t\t\t});\r\n    \t\t\t$(\"#div2\").mouseenter(function(e){\r\n    \t\t\t\t$(\"#div2\").mouseleave(function(e){\r\n    \t\t\t\t\tvar array = new Array();\r\n    \t\t\t\t\tarray.push($(\"#div1\")[0]);\r\n    \t\t\t\t\tarray.push($(\"#div2\")[0]);\r\n    \t\t\t\t\tvar flag = checkIn(e,array)\r\n    \t\t\t\t\tif (!flag) {\r\n    \t\t\t\t\t\t$(\"#div2\").slideUp(500);\r\n    \t\t\t\t\t}\r\n    \t\t\t\t});\r\n    \t\t\t});\r\n    \t\t});\r\n            function checkIn(e,objs){\r\n            \ttry {\r\n            \t\tconsole.log(objs.length);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\talert(1);\r\n\t\t\t\t}\r\n            \t\r\n            \tvar x = e.clientX;\r\n            \tvar y = e.clientY;\r\n            \tfor (i = 0; i &lt; objs.length; i++) {\r\n            \t\tvar obj = objs[i];\r\n            \t\tif (x &gt; obj.offsetLeft &amp;&amp; x &lt; (obj.offsetLeft + obj.clientWidth) &amp;&amp; y &gt; obj.offsetTop &amp;&amp; y &lt; (obj.offsetTop + obj.clientHeight)) {\r\n            \t\t\treturn true;\r\n            \t\t} else {\r\n            \t\t}\r\n            \t}\r\n            \treturn false;\r\n            }\r\n```\r\n\r\n初始化隐藏效果我没写，你自己加上就好", "Konwledge_Point": "树中的独立集", "Question": ["利用JS和CSS如何实现div1和具有滑动出场效果的div2互联？", ["\n\n", "要实现的效果：", "\n初始化，div2不显示，只显示div1。鼠标进入div1，那么div2显示（出现效果为下拉动画jQuery中表现为（$(\"#div2\").slideDown(500）；如果鼠标从div1进入div2，div2保持不变。如果鼠标离开div1并且不进入div2，div2消失（最好有缓慢消失效果）。如果鼠标从div2进入div1，div2不变（div2不产生任何变化）；如果鼠标从div2离开并且不进入div1，div2消失（最好有缓慢消失效果（$(\"#div2\").slideUp(500)））", "\n\n", "div1 和div2 是相互独立的，", "\n\n", "原本想问的就是这个问题，上一个问题没有把关键点（具有动画效果）说清楚，给大家造成不便请谅解。"]], "Tag": "算法设计"}
{"Answer": "osgi.core.jar是osgi核心规范的java API，它是规范的API;而osgi的实现比如Equinox就是实现这些规范的。他们的关系相当于接口和实现类的关系。", "Konwledge_Point": "树中的独立集", "Question": ["osgi组织提供的osgi.core.jar,是起什麽作用的?", ["osgi组织官网提供的osgi.core.jar,是起什麽作用的?", "\n那些osgi的实现,也就是那些个容器,不是都能独立运行吗? 那么正常jar文件是干什么的?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你参考一下这篇文章应该就可以了&amp;#xff1a;&lt;a href=\"https://link.csdn.net/?target&amp;#61;https://blog.csdn.net/wangpeng322/article/details/80843597\" id=\"md_link_card\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  &lt;span class=\"md_link_title\"&gt;https://blog.csdn.net/wangpeng322/article/details/80843597&lt;/span&gt;\n  \n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/wangpeng322/article/details/80843597&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;idea启动本地tomcat之前&amp;#xff0c;一定要将本地独立启动的tomcat关闭&amp;#xff0c;否则回报进程被占用&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么使用https访问IDEA上的tomcat？", ["server.xml配置完毕，独立启动tomcat可以使用https访问，但在ieda里启动就无法连接，http可以正常访问。目前只设置过端口号和url，没有用，是不是漏掉了什么？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;问题&amp;#xff1a;没有JDBC的驱动包。&lt;br /&gt;解决方法&amp;#xff1a;&lt;br /&gt;1.去Mysql官网下载最新版的驱动包&lt;br /&gt;2.创建项目环境&amp;#xff0c;导入数据库驱动&lt;/p&gt;\n&lt;p&gt;在Eclipse中新建一个java项目&amp;#xff0c;使用鼠标右键单击项目名称&lt;br /&gt;然后选择【New】→【Folder】&amp;#xff0c;在弹出的窗口中将该文件命名为lib并单击【Finish】按钮&lt;br /&gt;将下载好的Mysql数据库驱动文件mysql-connector-java-5.1.49-bin.jar复制到项目lib目录中&lt;br /&gt;使用鼠标右键单击该JAR包&amp;#xff0c;在弹出框中选择二【Build Path】→【Add to Build Path】&amp;#xff0c;此时Eclipse会将该JAR包发布到类路径下。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Java连接MySQL数据库加载驱动报错java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver", ["问题遇到的现象和发生背景", "\n", "Java连接MySQL数据库，在加载驱动过程中出现报错java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver", "\n", "问题相关代码，请勿粘贴截图", "\n", "package com.tjl.jdbc;", "public class JDBC {", "    public static void main(String[] args) {", "        //连接两个独立的软件，用Java控制数据库，需要加载驱动", "        try {", "            Class.forName(\"com.mysql.cj.jdbc.Driver\");", "            System.out.println(\"驱动加载成功\");、", "\n", "    } ", "catch", " (", "ClassNotFoundException", " ", "e", ") {\n        ", "System", ".", "out", ".", "println", "(", "\"驱动加载失败\"", ");\n        ", "e", ".", "printStackTrace", "();\n    }\n}\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "驱动加载失败", "java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver", "    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:583)", "    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)", "    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)", "    at java.base/java.lang.Class.forName0(Native Method)", "    at java.base/java.lang.Class.forName(Class.java:315)", "    at StudnetMS/com.tjl.jdbc.JDBC.main(JDBC.java:8)", "\n", "我的解答思路和尝试过的方法", "\n", " mysql-connector-java已导入，已Add to Build path", "mysql-connector-java jar版本为8.0.28 MySQL版本为 8.0.28", "\n", "我想要达到的结果", "\n", "如何解决此问题？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我建议使用这种&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;inline&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;check&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; end&amp;#61;&lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(x);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;lt;&amp;#61;end;&amp;#43;&amp;#43;i)&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x%i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,ans&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;&amp;#43;&amp;#43;i)&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;check&lt;/span&gt;(i))&amp;#43;&amp;#43;ans;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,ans);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;一个数n一定可以被分解为两个实数的乘积。所以实际上只需要检查根号n以内的数是不是它的因数就可以了。&lt;br /&gt;因为若一个大于根号n的数是n的因数的话&amp;#xff0c;那么那个数一定要和一个小于根号n的数相乘得到n&amp;#xff0c;所以证明完毕&amp;#xff0c;OK&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["救命啊，程序超时了，可是想不出别的方法了", ["素数知多少？", "Time Limit: 1000MS        Memory Limit: 65536K", "Total Submissions: 1232        Accepted: 330", "Description", "\n", "在给定区间[1,n]中有多少个素数？", "\n", "Input", "\n", "每行一个整数n(1<=n<=1000000)", "\n", "Output", "\n", "[1,n]之间素数的个数，独立一行", "\n", "Sample Input", "\n", "1013", "100", "Sample Output", "\n", "170", "25", "\n", "\n", "#", "include", "<stdio.h>", "\n", "int", " arr[", "1000000", "] = { ", "0", " };\n", "int", " ", "main", "()", "\n", "{\n    \n    ", "int", " n;\n    ", "while", " (", "scanf", "(", "\"%d\"", ", &n))\n    {\n        ", "for", " (", "int", " i = ", "2", "; i <= n; i++)\n        {\n            ", "if", " (arr[i]==", "0", ")\n            {\n                ", "for", " (", "int", " j = i+i; j <= n; j+=i)\n                {\n                    arr[j] = ", "1", ";\n                }\n            }\n        }\n        ", "int", " cot = ", "0", ";\n        ", "for", " (", "int", " i = ", "2", "; i <= n; i++)\n        {\n            ", "if", " (arr[i] == ", "0", ")\n            {\n                cot++;\n            }\n        }\n        ", "printf", "(", "\"%d\\n\"", ", cot);\n    }    \n    ", "return", " ", "0", ";\n}\n"]], "Tag": "算法设计"}
{"Answer": "java复用最主要的就是打成公共jar的方式，而公司框架可能就是一些公司将开源技术整合成公共开发平台供公司内部开发使用的。", "Konwledge_Point": "树中的独立集", "Question": ["一些公司自己封装的框架是什么样的？", ["一些公司自己封装的框架，是不是就相当于把一套完整独立的模块压成jar包，然后谁想用这个功能，就直接导入jar就ok了，就跟网上的开源jar包一样？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;分好区域&amp;#xff0c;然后画div就好了&amp;#xff0c;用flex布局简单。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/196180292936110.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;如有帮助&amp;#xff0c;麻烦点个【采纳此答案】 谢谢啦^0^&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;lt;!DOCTYPE &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-css\"&gt;\n    *{\n        &lt;span class=\"hljs-attribute\"&gt;margin&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;padding&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.main&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100vh&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;background-color&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;#87CEEB&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: flex;\n        &lt;span class=\"hljs-attribute\"&gt;align-items&lt;/span&gt;: center;\n        &lt;span class=\"hljs-attribute\"&gt;flex-wrap&lt;/span&gt;: nowrap;\n        &lt;span class=\"hljs-attribute\"&gt;padding-top&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;40px&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.header&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;text-align&lt;/span&gt;: center;\n        &lt;span class=\"hljs-attribute\"&gt;background&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;#DEB887&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;line-height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;40px&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;position&lt;/span&gt;: fixed;\n        &lt;span class=\"hljs-attribute\"&gt;top&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;left&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.left&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;10%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid;\n        &lt;span class=\"hljs-attribute\"&gt;text-align&lt;/span&gt;: center;\n        writing-mode: vertical-lr;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.right&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;30%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid;\n        \n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.center&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;flex&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: flex;\n        &lt;span class=\"hljs-attribute\"&gt;justify-content&lt;/span&gt;: center;\n        &lt;span class=\"hljs-attribute\"&gt;align-items&lt;/span&gt;: center;\n        &lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.r&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid;\n        &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: flex;\n        &lt;span class=\"hljs-attribute\"&gt;justify-content&lt;/span&gt;: center;\n        &lt;span class=\"hljs-attribute\"&gt;align-items&lt;/span&gt;: center;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.r_top&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;30%&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.r_center&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;40%&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-selector-class\"&gt;.r_bottom&lt;/span&gt;{\n        &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100%&lt;/span&gt;;\n        &lt;span class=\"hljs-attribute\"&gt;height&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;30%&lt;/span&gt;;\n    }\n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;header&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;header&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;标题&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;left&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n                &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;超链接&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;center&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;canvas动画&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;right&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n              &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;r r_top&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;svg动画&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n              &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;r r_center&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;视频&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n              &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;class&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;r r_bottom&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;字幕&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["使用盒模型制作网页设计", ["怎么用使用盒模型制作总体布局如图所示的网页 CSS3样式要独立写在CSS文件里面，通过链接样式使用，设置背景为淡蓝色，标题的背景颜色不能与背景的颜色相同"]], "Tag": "算法设计"}
{"Answer": "我猜是  '21111 元/m²'有问题，换一个123进去试试", "Konwledge_Point": "树中的独立集", "Question": ["python cx_Oracle 将sql使用游标执行编码问题", ["将python爬取到的信息使用format填入设定的sql中，再使用游标执行这串sql。", "\n\n", "sql = \"INSERT INTO SPIDER_BJ_ATTRIBUTE(jj, hxjg, jzmj, szlc, JZSJ, cx, zxqk, id, fbsj ,zj, dj, sf, fwhx) VALUES(。。。。）\n\n            print(sql)\n            cursorObj.execute(sql)\n            connectObj.commit()\n\n", "\n\n", "最终打印的sql是", "\n\n", "INSERT INTO SPIDER_BJ_ATTRIBUTE(jj, hxjg, jzmj, szlc, JZSJ, cx, zxqk, id, fbsj ,zj, dj, sf, fwhx) VALUES('沿湖小区 精装南北通透 独立两室 客厅通阳台 无税', '2室2厅','90m²', '中层(共6层)','2000年建造', '南北','精装修', ' 1525906959', '2018年12月08日','190万', '21111 元/m²', '57.00万', '普通住宅')\n", "\n\n", "但是最终执行游标时出现了错误", "\nUnicodeEncodeError: 'gbk' codec can't encode character '\\xb2' in position 145: illegal multibyte sequence", "\n\n", "刚开始学python，基础也不是很好的我。在网上看了一些帖子也没有把问题解决。", "\n\n", "请各位大佬帮忙看一下。"]], "Tag": "算法设计"}
{"Answer": "服务器是本机对吧。本机访问tomcat 当然没问题，如果需要局域网其他用户通过ip形式\r\n例如：\r\nhttp://192.168.9.1:8080/prjname/demo**\r\n就无法访问，你测试时候不要用本机测试\r\nRuntime.getRuntime().exec(\"mspaint.exe\"); \r\n貌似可以这样。你把exe放在tomcat的jsp目录下\r\n例如：webapps/项目名/mspaint.exe\r\n例如：tomcat 目录是：D:/apache-tomcat-6.0.20/webapps/项目名/mspaint.exe\r\n可以通过：\r\nRuntime.getRuntime().exec(\"D:/apache-tomcat-6.0.20/webapps/项目名/mspaint.exe\"); \r\n绝对路径的方式来调用。", "Konwledge_Point": "树中的独立集", "Question": ["jsp调用服务器端程序运行。", ["想用jsp远程启动服务器上的程序，程序是后台计算的，计算结果实时更新到数据库中供查询。", "\n现有的方式是写了一个bean来计算，但是这样很占用tomcat的资源，导致其他人登陆不稳定。想脱离tomcat独立运行。", "\n\n", "用的是Runtime.getRuntime().exec(）这个。", "\n\n", "问题1：通过java直接运行这个方法比如运行画板Runtime.getRuntime().exec(\"mspaint.exe\"); 可以正常打开，", "\n但是通过jsp远程调用的时候就没有界面，任务管理器里可以看到有进程。怎么能让他有界面呢。。。", "\n\n", "问题2：计算的程序是启动了自动计算的，用cmd>java -jar ***.jar没有问题，但是通过jsp调用的话  就会自动退出，计算执行了，但是没有执行完毕就退出了，怀疑是jsp网页关闭了就退出了……", "\n\n", "实在是没用弄明白怎么回事。求个解决方法。 :) ", "\n\n", "看到有好多人提问都是怎么提前关闭的。。。我这个是求正常运行的……"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你使用的是同级目录下&amp;#xff0c;在test.html中可以下载是因为要下载的文件和html在同级目录下。&lt;br /&gt;在项目中&amp;#xff0c;可能就不在同目录下了。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["django项目：前端下载任务（用到了fetch，但是下载失败）", ["希望有da lao可以帮我解决一下这个问题，做项目卡在这里好几天了 :(", "\n", "问题如下：", "我是直接把下载任务放到了前端的js里，没有向后台请求下载。我要下载的docx文档是放在了项目文件里，其中包含文字和图片。", "\n", "代码如下：", "\n", "<", "script", ">", "\n       ", "function", " ", "aaa", "(", "url, filename", ") {\n           ", "return", " ", "fetch", "(url).", "then", "(", "res", " =>", " res.", "blob", "().", "then", "(", "blob", " =>", " {\n                 ", "let", " a = ", "document", ".", "createElement", "(", "'a'", ");\n                 ", "let", " url = ", "window", ".", "URL", ".", "createObjectURL", "(blob);\n                 ", "console", ".", "log", "(url)\n                 a.", "href", " = url;\n                 a.", "download", " = filename;\n                 a.", "click", "();\n                 ", "window", ".", "URL", ".", "revokeObjectURL", "(url);\n             }))\n       }\n       ", "aaa", "(", "'./全球互联网信息挖掘报告.docx'", ",", "'测试.docx'", ")\n", "</", "script", ">", "\n", "\n", "结果浏览器控制台报错：", "说是找不到文件。", "\n", "但是我把上面的js代码放在项目的test.html中，这个test.html我独立运行是可以下载文件的", "然后放到项目里就出了上面的问题。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;多系统引导是个麻烦问题&amp;#xff0c;如果怕麻烦&amp;#xff0c;Linux系统又不常用&amp;#xff0c;不如考虑装虚拟机。&lt;br /&gt;如果不需要图形界面&amp;#xff0c;其实WSL也是个不错的选择。&lt;/p&gt;\n&lt;p&gt;如果一定要装双系统&amp;#xff0c;建议先把新盘的文件备份&amp;#xff0c;然后在在新盘装Linux&amp;#xff0c;安装的时候在Linux下做一下分区&amp;#xff0c;留一部分分区&amp;#xff0c;格式化成Windows可以识别的格式。&lt;br /&gt;一定要先备份。虽然有磁盘工具可以直接重新分区&amp;#xff0c;但不推荐这种操作&amp;#xff0c;万一中间出点差错&amp;#xff0c;数据就没了。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["系统分区与多系统安装问题", ["问题： 我的 电脑 原 512 GB", "后来加了个 1T 的 固态， 这1T 的 固态 是独立的 新加卷 上面 已经 有不少文件了 ， 能不能 把  这个盘 分开 ，然后 再装个 linux 上去"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;32岁了&amp;#xff0c;如果你还只顾着眼前的利益&amp;#xff0c;那等你42岁的时候就没的可选了&lt;br /&gt;人要么要让自己的选择变多&amp;#xff0c;要么让自己选择的东西变化&lt;br /&gt;比如年轻的时候选钱多还是钱少&amp;#xff0c;等到了一定年龄你在工资不变的前提下可以选离家近还是离家远&lt;br /&gt;只为了现在的一点工资&amp;#xff0c;而让未来的选择可能性变少&amp;#xff0c;那就是把自己走进死胡同里去了&lt;br /&gt;软件开发这个行业更新迭代很快&amp;#xff0c;你不趁年轻多学&amp;#xff0c;想等40多岁才去学新技术吗&lt;br /&gt;找个能学新东西的岗位&amp;#xff0c;学上一年半载就再换&lt;br /&gt;公司大小根本不是考虑的范围&amp;#xff0c;你又不是去养老的&amp;#xff0c;那不过是个跳板&lt;br /&gt;-&amp;#61;-&amp;#61;-&lt;br /&gt;ps&amp;#xff1a;学新东西&amp;#xff0c;不是让你完全放弃现有的东西另谋赛道&lt;br /&gt;你要能够在现有的水平上提高&amp;#xff0c;或者新能力能够补足现有的能力&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["大公司低工资和小公司高工资怎么选择？", ["我是做软件开发的 9 年了，32 岁，工作地郑州，面试了 2 家公司，都通过了，现在有些纠结选择哪个，请大家帮忙看看选择哪个：", "\n", "A 公司有独立办公楼，试用期交五险一金，13 薪，试用期 12K，转正 12K+项目绩效，绩效是每个月都会评的（HR 说大概 1000 到 3000）；九点上班，中午休息 1 个小时，晚上六点下班，面试官说每周可能会有 2 天左右的加班。加班不算调休和工资，而是算到每个月的绩效评价中，公司有上班下班免费班车，正好经过我住的小区。", "\n", "B 公司相对来说小一点，是派到国家电网公司做项目，工资 13.5K，转正交五险一金，早上 8：30 上班，中午休息 2 个小时，晚上六点下班，加班不能调休和算工资，年底会根据工作情况发年终奖，HR 说国家电网项目会一直做，是个长期的项目，不会换工作地点。", "\n", "现在有些纠结选择哪个，毕竟 32 岁了，A 公司可能比较累，B 公司相对来说轻松"]], "Tag": "算法设计"}
{"Answer": "我工作也是两三年，运气没你好，工作中项目做得实在少。\r\n水平不够啊，回答仅供参考，我认为项目小的话而且逻辑简单，还真没必要死死的分成好多层。但是要是项目代码量比较大逻辑复杂，或者项目用来做二次开发的话还是分清楚点好啊，因为其他人接手时，看代码时要花好多时间来理清逻辑，搞得不好还要打电话问写代码的人，这样太浪费大家时间了。", "Konwledge_Point": "树中的独立集", "Question": ["谁能告诉我怎么办", ["最近很有挫败感，然后忽然发现自己很蠢。工作快两年了，小项目做了不少，但是纷繁复杂，PHP，JS+HTML+CSS，甚至还做过逆向，动态语言之类的。终于，开始可以安心做Java EE了，耐心的学，把之前一直都在学习的Struts2，Maven2用起来。上周又是一个小项目接近尾声，我的头儿要看我代码，看完之后，说result type的类型要修改，不要用领域模型，要分层，DAO一层，service一层，action一层。而我把iBatis的query全部写在service中的。明天周一，要再检查代码。\n其实，这些东西我并不清楚，茫茫多的框架，已经让我很迷惑了。本来想好不容易终于像模像样的完成了一个项目，结果就是你重构吧，时间够的话可以重写了。\n上这儿来浪费大家时间我不是故意的，实在是不知道该怎么办了。result type的分别真的这么重要？DAO一定要独立出来一层？这么做的好处是？\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你看这样行不,&lt;br /&gt;每个用户使用自己的表,  所有单词存放在一个总的单词表中, 用户表和总表建立关系, 增加删除只操作用户自己的表&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何去设计一个大型的背单词软件的数据库呢？", ["假设我这里有几万个单词，然后每个注册的人都有自己的独立的几万个单词库，然后可以对自己单词库增加删除，有没有人给我提供一种思路呢？谢谢", "？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;要注意&amp;#xff0c;回归分析可以拟合曲线来描述&amp;#xff0c;方差分析由于自变量是类别变量&amp;#xff0c;在横轴上无大小意义&amp;#xff0c;拟合曲线就没有意义。所以你说的建模并不应该是拟合的建模&amp;#xff0c;你可能将其与回归分析混淆了&amp;#xff0c;虽然方差分析确实是一种特殊的拟合分析&amp;#xff0c;但两者的差别还是很明显的。&lt;br /&gt;方差分析主要的情况有四种&amp;#xff1a;1. 单因素方差分析&amp;#xff1b;2. 多因素方差分析&amp;#xff1b;3.多元的方差分析&amp;#xff1b;4.协方差分析。&lt;br /&gt;它们的解决步骤&amp;#xff1a;首先要提出假设&amp;#xff1b;然后构造检验统计量&amp;#xff1b;最后进行统计决策。&lt;br /&gt;&lt;strong&gt;是根据合理的假设以及专业的数学公式的论证进行的分析检验&amp;#xff0c;最终决策&amp;#xff1b;并非单纯地建模然后拟合再计算&amp;#xff0c;这就需要有平时数学的积累&amp;#xff0c;算法的研究。&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["如何通俗又正确去理解方差分析", ["最近在学这个方差分析，一直感觉挺迷糊的。。从一些评论或说法来看，方差分析，对针对自变量（不论是几个）进行的分析，找出各个自变量对因变量的影响程度大小。", "\n", "按照这种说法，我是否可以这么理解：", "\n", "方差分析一般都需要对数据进行建模，不然的话，如何计算这个离差平方和呢？", "如果是多个自变量，可能建模的数量也更多，可能需要对独立的每个自变量和因变量，都建一次模，然后组合多个自变量再和因变量建一次模型？？-因为对多个自变量的情况来说，单个自变量可能可以拟合到70%的因变量的数值，而如果是几个自变量组合起来后，再建模的情况下，原先可拟合70%因变量的自变量，其可能在组合模型中，只能拟合到50%的因变量数值了。这种情况下，到底又是如何计算各个自变量的SSR的呢？还是说，只计算组合情况下的SSR呢？？", "恳请指点下迷津。。"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/k3661617/article/details/122187336?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;关于51单片机中的C语言使用及总结&lt;/font&gt;&lt;/a&gt; 中也许有你想要的答案&amp;#xff0c;请看下吧&lt;/li&gt;&lt;li&gt;同时&amp;#xff0c;你还可以查看手册&amp;#xff1a;&lt;a href=\"https://zh.cppreference.com/w/c/numeric/math/exp\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;c语言-exp()&lt;/font&gt;&lt;/a&gt; 中的内容&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["51单片机和c语言的应用", ["利用独立键盘和矩阵键盘输入数字并用数码管显示，上电数码管默认显示数字0，S2到S21依次对应数字数字1到20。例如按下S2数码管显示数字1，按下按下S10数码管显示数字9。"]], "Tag": "算法设计"}
{"Answer": "数据库记录好啊，查一下ID然后下载", "Konwledge_Point": "树中的独立集", "Question": ["文件下载上传问题的一些疑惑", ["最近在实现文件上传下载功能，我想文件上传时，怕文件名重复，然后把上传的文件名加上uuid保证独立性。", "\n然后就有一个疑问，当文件下载时我们应该怎么去辨认那个文件是那个呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这是一个偏实践的行业&amp;#xff0c;然后&amp;#xff0c;从不会到会的过程中&amp;#xff0c;都是先学理论&amp;#xff0c;然后有你这样的迷惑&amp;#xff0c;然后就是一边迷惑&amp;#xff0c;一边抄代码&amp;#xff0c;当抄到一定阶段&amp;#xff0c;在别人的代码基础上按自己的思路试着实现&amp;#xff0c;然后再到自己能完全理解自己写代码。&lt;/p&gt;\n&lt;p&gt;迷茫都会有&amp;#xff0c;但只要一直学习&amp;#xff0c;练习着就没问题。&lt;br /&gt;学书有用&amp;#xff0c;只是前期积累最基本的理论&amp;#xff0c;但理论变成实践&amp;#xff0c;真得靠你多敲敲代码&amp;#xff0c;多实践了。&lt;br /&gt;没事儿&amp;#xff0c;不会你就找个源码&amp;#xff0c;抄一抄&amp;#xff0c;先运行起来&amp;#xff0c;再分析逻辑照着敲&amp;#xff08;想想为什么&amp;#xff0c;可以试着改改&amp;#xff09;&amp;#xff0c;再重新自己实现。&lt;/p&gt;\n&lt;p&gt;同时&amp;#xff0c;我经历过&amp;#xff0c;练习书上的课后题&amp;#xff0c;牛客网上的实践&amp;#xff0c;慕课网上的实践&amp;#xff0c;再到leetcode上的自己写代码&amp;#xff0c;再到看书写项目&amp;#xff0c;最后就不怕这个了&amp;#xff0c;&lt;br /&gt;不要怕&amp;#xff0c;抄代码&amp;#xff0c;自己写代码&amp;#xff0c;多总结&amp;#xff0c;多谢博客整理知识点。。。&lt;br /&gt;现在的你如果两年内能写百八十篇博客&amp;#xff0c;我觉得你一定不会太差。&amp;#xff08;做就完了&amp;#xff0c;不要想太多&amp;#xff0c;一段时间后就会发现不再迷茫&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["提问  关于学习C语言方面的", ["朋友们 自学到现在会运用基础的东西了 比如链表 指针 函数啥的 然后学的那本书学完了", "现在就很迷茫 书最后给的让写五子棋啥的游戏", "独立自己也写不出来", "请问各位现在应该干啥 "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;input是一个组件 后面的状态也可以是一个组件 。input 就最需要获取到内容 &amp;#xff0c;然后 给到 状态显示组件&amp;#xff0c;这个组件根据 值来显示状态。也可以input和状态是一个组件&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["制作按状态表达的录入验证", ["动态验证输入的数据是否正确，入门小白求回答！组件化思维能力的考核，因为内容页面为多人协同开发，各自具备独立性，当整合显示时要求不用调整代码即能实现效果。故组件化要求。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第一&amp;#xff0c;确定你的主攻方向&amp;#xff0c;具体看看适合哪种岗位&lt;br /&gt;第二&amp;#xff0c;与岗位要求对照&amp;#xff0c;看看自己欠缺什么&lt;br /&gt;第三&amp;#xff0c;对通信原理&amp;#xff0c;计算机原理&amp;#xff0c;多下功夫&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["通信/电子信息专业本科毕业如何就业？", ["目前准大四，就读于中部某211，通信工程专业，本科课程附在下面了，同学现在绝大多数都选择了保/考研", "\n", "我想直接就业，但是三年下来好像什么都学了，又好像什么都没学，没参加过比赛，除了应付双创把单片机pcb什么的学了点皮毛外基本没学什么课程外的知识和技能，没参加过项目，非要说最大的项目也就是电子设计实验独立用FPGA做了个波形频率幅值可调的ask，psk，fsk，lfm等信号的发生器吧，MATLAB用的应该还算熟练，光纤通信和电磁场学的一塌糊涂", "\n", "\n", "完全想不到这个专业我这个水平就业到了公司里能干什么，这个暑假到现在把学过的专业课都又巩固了一遍，不清楚自己喜欢/适合哪个方向，也不知道为了就业现在应该自学什么知识技能，所在的城市本身技术产业就不发达，现在疫情就业更是难，很焦虑", "\n", "这个专业就业有什么好的方向吗，需要自学些什么东西呢，到了公司里具体是做什么呢，本科生到了公司里是继续着重学习知识技能还是就要硬跟着做项目啊，生活中完全了解不到相关从业人员的工作环境和工作内容啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1.不同算法有不同的实现逻辑&amp;#xff0c;不同的功能&amp;#xff08;或者叫实现的东西是什么&amp;#xff09;&amp;#xff1b;&lt;br /&gt;2.既然逻辑和功能不同&amp;#xff0c;那么某个算法和另外一个算法可以共同去实现某一项功能&amp;#xff0c;在这里他们实现的是防止。。。。&lt;br /&gt;3.具体目的可以百度查一下他们的1&amp;#xff0c;看完你就理解了。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["拥塞避免算法和慢启动算法的目的一样吗", ["《TCP/IP 详解 卷一》里说“拥塞避免算法和慢启动算法是两个目的不同、独立的算法”，为什么说它们目的不同呢，不都是为了防止网络拥塞吗？请问还有什么其他目的吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你可以弄个私有库&amp;#xff0c;有必要的时候就把扩展的配置推上去&amp;#xff0c;如果有新功能的话或者冲突建个分支&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Vue每次建新项目都要重新添加常用依赖包", ["Vue 每次创建新项目都需要一个个去重新添加常用依赖包和配置，请问有什么解决办法，或者能否像Android开发那样搞个独立Model把常用的依赖包和配置扔进去，需要的时候直接依赖这个Model？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;那各位大神，我还需要什么学习什么才好找工作啊？实习也成，我就想找个工作积累经验而已&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["这种水平可以找工作吗？", ["本人是刚入行的php新手，前端会html，css，js，jquery，ajax，后端会php，MySQL（基础语法），tp框架，lunix的基础操作，独立开发过个人博客项目，这种水平能找工作吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/454579812826142.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["Vue如何点击li变颜色，再点击一次同一个li再变回来？", ["我是拿ul li写的", "\n", "\n", "我问一下这边我是拿 ui li写的 怎么使得点击一个li变颜色然后在摁一下变回来，每个立互相独立。用for循环码？", "\n", "\n", "我这边是这样写的 发现只能点一次"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第二个class类的public修饰词去掉&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["032-封装后的程序报错了，问题不知道出在哪里？", ["//import java.util.People;", "\n\n", "public class People", "\n\n", "{", "\n\n", "    private double height;", "\n\n", "    ", "\n\n", " ", "\n\n", "public double getHeight(){", "\n\n", "    return height;", "\n\n", "    }", "\n\n", "public void setHeight(double newHeight){", "\n\n", "    height = newHeight;", "\n\n", "    }", "\n\n", "}", "\n\n", "public class NewObject{", "\n\n", "    public static void main(String[] args){", "\n\n", "        People LiLei = new People();", "\n\n", "        LiLei.setHeight(150.0);", "\n\n", "        System.out.println(\"LiLei的身高是\"+LiLei.getHeight());", "\n\n", " ", "\n\n", "    }", "\n\n", "}", "\n\n", " ", "\n\n", "运行报错：", "\n\n", "shiyanlou:project/ $ javac NewObject.java                     [0:48:46]", "\nNewObject.java:2: 错误: 类People是公共的, 应在名为 People.java 的文件中声明", "\npublic class People", "\n       ^", "\n1 个错误", "\n\n", " ", "\n\n", "把两个程序单独成独立程序也是报错，之间使用import.java.util.People.不管用"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不能&amp;#xff0c;必须得HTML、CSS、JavaScript同时使用&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["问一下大家我想提一个前端问题", ["编写一个网站例如淘宝，京东这样的动态网站需要用到那些语言，看别人跟我说需要用HTML5+css+Java script，这三种结合才可以，我想问问直接用Java script能不能直接独立写出来动态网页的效果。"]], "Tag": "算法设计"}
{"Answer": "在 https://ask.csdn.net/questions/710166 回答你了，如果满意，请点我回答左上角的箭头和采纳。谢谢", "Konwledge_Point": "树中的独立集", "Question": ["tensorflow-gpu为何无法调用GPU进行运算？", ["如题，本人是小白级别的爱好者，使用的是联想台式机，win10系统，有一块GeForce GT730的独立显卡，想尝试安装tensorflow-gpu 进行加速。", "\n   在参考官网方法后，升级了显卡驱动，安装了CUDA9.0 及配套的cudnn7", "\n并添加了环境变量。然后pip 安装tensorflow-gpu", "\n   安装成功后，import tensorflow as tf 不报错，但是运行如下代码时，始终显示GPU使用率为0", "\n\n", "import tensorflow as tf\nwith tf.device('/cpu:0'):\n    a=tf.constant([1.0,2.0,3.0,4.0,5.0,6.0],shape=[2,3],name='a')\n    b=tf.constant([1.0,2.0,3.0,4.0,5.0,6.0],shape=[3,2],name='b')\n    c=tf.matmul(a, b)\n    sess=tf.Session(config=tf.ConfigProto(allow_soft_placement=False, log_device_placement=True))\n    print(sess.run(c))\n", "\n\n", "试用如下代码检查是否有GPU可以被使用：", "\n\n", "import os\nfrom tensorflow.python.client import device_lib\nos.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"99\"\n\nif __name__ == \"__main__\":\n    print(device_lib.list_local_devices())\n", "\n\n", "显示 只有一个CPU可以被调用", "\n\n", "[name: \"/device:CPU:0\"\ndevice_type: \"CPU\"\nmemory_limit: 268435456\nlocality {\n}\nincarnation: 15723487639721858299\n]\n", "\n\n", "那么问题来了。。既然已经成功安装了tensorflow-gpu，为什么仍然无法调用gpu进行计算呢。。", "\n\n", "而且，装好tensorflow-gpu之后，双击程序会闪退，但是从IDLE中run是可以运行的，也不报错，但就是不分配给GPU运算。", "\n\n", "查看了一下cuda，显示GPU not supported", "\n这就愈发郁闷了。。。。。。", "\n\n", "深知肯定是自己还有什么地方没设置好，但是网上也找不到对应的教程了，只好在此想各位大了！！！！", "\n万望赐教！！！！", "\n感激不尽！！！！"]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;静态IP是指IP不会动态发生改变&amp;#xff0c;比如我们的手机连不同的wifi&amp;#xff0c;我们手机的ip地址是动态改变的。原生IP&amp;#xff0c;IP注册地与服务器注册地区一致。独立ip&amp;#xff0c;就是一台主机一个ip,不和其他主机(服务器)共用。&lt;/li&gt;&lt;li&gt;代理ip理论上是不会被查出来的&amp;#xff0c;但是有追踪工具可以追踪的。但是ip通过多次代理转发之后&amp;#xff0c;追踪难度会加大。原理其实就是&amp;#xff0c;我在china发送一个请求&amp;#xff0c;请求到达日本服务器上&amp;#xff0c;这台服务器再把我的请求发送到他们日本本土的网站上。最后就变成日本服务器A访问日本服务器B&amp;#xff0c;ip所在地为日本。实际上大部分黑客就是这么玩的&amp;#xff0c;经过层层代理避免被追踪。&lt;/li&gt;&lt;li&gt;查询ip所在区域&amp;#xff0c;这个太简单的&amp;#xff0c;方法一&amp;#xff0c;直接百度ip&amp;#xff0c;方法二&amp;#xff0c;根据ip网段就可以知道是那个国家和区域的&lt;br /&gt;还有不懂的尽管问&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "树中的独立集", "Question": ["计算机网络几乎0基础 求一个懂ip知识的朋友回答下疑问", ["1.静态ip 原生ip 独立ip的关系和区别。", "2.代理ip的话会不会被被服务商检查出来（比如我登日本的电商网站，就会提醒你不在日本）。", "3.如何查询ip地址所在区域。", "如能解答 感激不尽！"]], "Tag": "算法设计"}
{"Answer": "你的问题是这样吗：进程A（JAVA前台）和进程/服务B（C++后台），AB都要访问数据库C，如何实现AB的协同？\r\n个人认为可以有两种方式：\r\n（1）AB间通过网络通信或其它进程间通信方式进行同步和协同，如A向C中写入数据后就通知B，B处理完再通知A；\r\n（2）B启动一个线程，这个线程监控C的变化，在发现C变化时进行处理。\r\n个人推荐采用方式1。\r\n不知理解的对不对。", "Konwledge_Point": "树中的独立集", "Question": ["如何将窗体应用程序的前后台连接起来", ["我用java写的前台，C++写的后台，但现在两者只能独立运行。前台倒是能把数据传到", "\n数据库，但是后台只有我自己启动。如何才能做到前台数据传到数据库，后台程序自动", "\n检测数据库，发现新数据就自己运行处理？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\n//输出逆序整数\nint convert(int x)\n{\n\tint sum &amp;#61; 0;\n\tint d;\n\twhile(x &amp;gt; 0)\n\t{\n\t\td &amp;#61; x%10;\n\t\tsum &amp;#61; sum * 10 &amp;#43; d;\n\t\tx &amp;#61; x/10;\n\t}\n\treturn sum;\n}\n\n//输出位字符串形式&amp;#xff0c;如x&amp;#61;123,则buf中是&amp;#39;1&amp;#39;&amp;#39;2&amp;#39;&amp;#39;3&amp;#39;\nvoid trans(int x,char buf[])\n{\n\tint i,n&amp;#61;0;\n\tint d &amp;#61; x;\n\twhile(d&amp;gt;0){n&amp;#43;&amp;#43;;d/&amp;#61;10;}//计算位数\n\tbuf[n] &amp;#61; &amp;#39;\\0&amp;#39;;\n\tn--;\n\twhile(n&amp;gt;&amp;#61;0)\n\t{\n\t\tbuf[n] &amp;#61; x%10 &amp;#43; &amp;#39;0&amp;#39;;\n\t\tx &amp;#61; x/10;\n\t\tn--;\n\t}\n}\n\n//如果x&amp;#61;123&amp;#xff0c;那么buf中是&amp;#39;3&amp;#39;&amp;#39;2&amp;#39;&amp;#39;1&amp;#39;\nvoid trans2(int x,char buf[])\n{\n\tint d &amp;#61; x;\n\tint i &amp;#61; 0;\n\twhile(d&amp;gt;0)\n\t{\n\t\tbuf[i] &amp;#61; d%10 &amp;#43; &amp;#39;0&amp;#39;;\n\t\td &amp;#61; d/10;\n\t\ti&amp;#43;&amp;#43;;\n\t}\n}\n\nint main()\n{\n\tint x,number;\n\tchar buf[10];\n\tprintf(&amp;#34;请输入一个数:&amp;#34;);\n\tscanf(&amp;#34;%d&amp;#34;,&amp;amp;x);\n\tnumber &amp;#61; convert(x);\n\tprintf(&amp;#34;%d\\n&amp;#34;,number);\n\n\ttrans(number,buf);\n\tprintf(&amp;#34;字符:%s\\n&amp;#34;,buf);\n\n\ttrans2(number,buf);\n\tprintf(&amp;#34;字符:%s\\n&amp;#34;,buf);\n\treturn 0;\n}&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["将一个整数化为倒序后输出为字符串格式", ["\n\n", "\n\n", "\n\n", "我试了下先把整数倒序然后再输出为字符串，但是输出时第二个功能函数无法用我第一个功能函数得到的倒序得整数进行运算，最后输出了两个独立的结果，问问哪个大佬能帮看下哪里出了问题"]], "Tag": "算法设计"}
{"Answer": "GT730有好几种，一个是GT640的马甲卡，采用Kepler核心，384 CUDA Cores，叫做GK208/GK107，反正有个K，这个支持CUDA 3.0，可以跑TF（但是相当慢）\r\n还有一个是GT450的马甲，采用Femi核心，192 CUDA Cores，叫做GF104，反正是 F，这个支持 CUDA 2.0，不能跑 TF\r\n你可以下载一个gpu-z看下，你的卡应该是不支持了。\r\n如果不支持，你可以去某宝买一个GT650，大概100元人民币的样子，肯定支持。", "Konwledge_Point": "树中的独立集", "Question": ["tensorflow-gpu为何无法调用GPU进行运算???", ["如题，本人是小白级别的爱好者，使用的是联想台式机，win10系统，有一块GeForce GT730的独立显卡，想尝试安装tensorflow-gpu 进行加速。", "\n在参考官网方法后，升级了显卡驱动，安装了CUDA9.0 及配套的cudnn7", "\n并添加了环境变量。然后pip 安装tensorflow-gpu", "\n安装成功后，import tensorflow as tf 不报错，但是运行如下代码时，始终显示GPU使用率为0", "\n\n", "import tensorflow as tf\nwith tf.device('/cpu:0'):\n    a=tf.constant([1.0,2.0,3.0,4.0,5.0,6.0],shape=[2,3],name='a')\n    b=tf.constant([1.0,2.0,3.0,4.0,5.0,6.0],shape=[3,2],name='b')\n    c=tf.matmul(a, b)\n    sess=tf.Session(config=tf.ConfigProto(allow_soft_placement=False, log_device_placement=True))\n    print(sess.run(c))\n", "\n\n", "试用如下代码检查是否有GPU可以被使用：", "\n\n", "import os\nfrom tensorflow.python.client import device_lib\nos.environ[\"TF_CPP_MIN_LOG_LEVEL\"] = \"99\"\n\nif __name__ == \"__main__\":\n    print(device_lib.list_local_devices())\n", "\n\n", "显示 只有一个CPU可以被调用", "\n\n", "[name: \"/device:CPU:0\"\ndevice_type: \"CPU\"\nmemory_limit: 268435456\nlocality {\n}\nincarnation: 15723487639721858299\n]\n", "\n\n", "那么问题来了。。既然已经成功安装了tensorflow-gpu，为什么仍然无法调用gpu进行计算呢。。", "\n而且，装好tensorflow-gpu之后，双击程序会闪退，但是从IDLE中run是可以运行的，也不报错，但就是不分配给GPU运算。", "\n查看了一下cuda，显示GPU not supported", "\n\n", "这就愈发郁闷了。。。。。。", "\n深知肯定是自己还有什么地方没设置好，但是网上也找不到对应的教程了，只好在此想各位大了！！！！", "\n万望赐教！！！！", "\n感激不尽！！！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用什么语言开发的&amp;#xff0c;没准就是系统里没有对应的API&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["找人开发了个工具，但是打开就提示服务器识别错误", ["找人开发了个加解密工具，然后我本地打开提示程序运行成功，Windows2003服务器识别错误。问了开发人员，他说底层算法结构就是这样，说是我得弄个独立的服务器2003系统才能跑，然后我就去找人开了台服务器，结果无论怎么样还是提示这个。然后让他给我测试也不给弄，说是结单了。所以，请问各位精英，这个独立服务器2003系统到底啥意思。我开的物理机装的2003，还是不行，有人能帮测一下么"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/61275285292617.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["noip2017普及组初试单项选择T19", ["19.一家四口人，至少两个人生日属于同一月份的概率是（  )", "\n", "(假定每个人生日属于每个月份的概率相同且不同人之间相互独立)", "\n", "A.  1/12     B.  1/144     C.  41/96   D.   3/4"]], "Tag": "算法设计"}
{"Answer": "foxpro的DLL运行时可能必须保留原来生成DLL的文件，但你可以以下方法：\r\nhttp://www.cnblogs.com/maxchan/archive/2007/10/12/922129.html\r\nFLL – C++与VFP 双向混合编程", "Konwledge_Point": "树中的独立集", "Question": ["VFP9编译的多线程文件（DLL）的问题", ["VFP9编译的多线程文件（DLL），能不能独立与程序结全，而不要原来的.PRG文件，如果能相对会保密一些重要的程序，我一旦将生成的它的.PRG程序移开，整个程序一编译，马上就出错了？"]], "Tag": "算法设计"}
{"Answer": "静态页面可以放到apache,nginx等服务 中\r\n\r\n[url]http://www.cnblogs.com/JemBai/archive/2009/12/11/1621770.html[/url]", "Konwledge_Point": "树中的独立集", "Question": ["关于门户网站静态页面存储方式", ["这段做B2B网站，有行业资讯，生成静态页面，如果把放在工程下不大好，像新浪，腾讯，对静态HTML文件的存储路径怎么处理，如果是存在一个独立的磁盘空间下，又是如何读取呢？请各位大侠，多多发表一下建议"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果您有两个具有相同网关地址的内网&amp;#xff0c;您可以考虑使用下面几种方法来让这两个内网互通&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;使用路由器&amp;#xff1a;您可以使用一个路由器将两个内网隔离开&amp;#xff0c;并为每个内网分配不同的网关地址。\n\n使用 VPN&amp;#xff1a;您可以使用虚拟专用网络&amp;#xff08;VPN&amp;#xff09;来连接两个内网&amp;#xff0c;使得它们在网络上看起来像一个整体。\n\n使用子网&amp;#xff1a;您可以使用子网来划分您的网络&amp;#xff0c;每个子网都有自己的网关地址。\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["两个网关一样的内网如何互通", ["有两个独立的局域网，局域网1和局域网2，网关相同都是192.168.1.1，局域网1可以上外网，局域网2不可以上外网，想用局域网1的电脑远程桌面连接局域网2的电脑，如何在不改变任何IP地址的情况下让他们互通，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;其实你现在的阶段很尴尬&amp;#xff0c;怎么讲呢&amp;#xff1f;说你会了吧&amp;#xff0c;不满足企业要求&amp;#xff0c;说你不会吧&amp;#xff0c;学了一点。&lt;br /&gt;事实上&amp;#xff0c;你现在最缺的就是时间&amp;#xff0c;就是没有进行大量的练习&amp;#xff0c;说白了&amp;#xff0c;你只是学了一点皮毛&amp;#xff0c;我觉得你现在最需要做的就是先做一个简单的增删改查的小功能&amp;#xff0c;别管页面多丑。&lt;br /&gt;1、增&amp;#xff1a;最主要的就是将页面的输入框的值传到后端&amp;#xff0c;将这些数据添加到数据库中。输入框input有个属性v-model&amp;#61;&amp;#34;name&amp;#34;绑定这个值&amp;#xff0c;在下面的js里面的data里面写name:&amp;#39;&amp;#39;.&lt;br /&gt;2、删&amp;#xff1a;在你的列表中选择一个数据进行删除&amp;#xff0c;点击删除的时候将这个数据的id传给后端。&lt;br /&gt;3、改&amp;#xff1a;其实和【增】差不多&amp;#xff0c;【增】的话是不需要id的&amp;#xff0c;【改】的话是需要id的&amp;#xff0c;不然会全表修改。&lt;br /&gt;4、查&amp;#xff1a;SQL语句是这样&amp;#xff1a;select id,name,..... from 表名 where 条件。后台返回的是list&amp;#xff0c;在你的vue页面将返回值接收&amp;#xff0c;data里面定义list:[].&lt;/p&gt;\n&lt;p&gt;核心是多练习&amp;#xff0c;不会的问别人或者上百度查。加油&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["应该怎么写一个前后端分离的项目", ["大家好，我想问大家一个问题，就是我学完springboot之后，想自己独立做一个项目，然后花了点时间入门了一下vue，写起来还是比较困难，请问大家这个阶段都是怎么过来的，真的很迷茫，不知道从什么地方开始"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以先用tkinter或者qt实现图形用户界面&amp;#xff0c;然后再用PyInstaller生成可运行的exe文件&lt;br /&gt;&lt;a href=\"https://zhuanlan.zhihu.com/p/81335813?from&amp;#61;singlemessage\" id=\"textarea_1672277791670_1672277957185_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://zhuanlan.zhihu.com/p/81335813?from&amp;#61;singlemessage\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/zyx_1988/article/details/10691533#comments\" id=\"textarea_1672277791670_1672277957185_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://blog.csdn.net/zyx_1988/article/details/10691533#comments\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["对建立识别软件的困惑", ["我想要制作一个.exe的工具，是关于跨模态识别方面的。", "需要导入算法、数据", "对现在图形用户界面编程不是很了解，应用python的一些模块框架是不是不能形成独立软件？", "必须学QT嘛？", "需要一个整体介绍和指明道路，谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;尝试下下面代码&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;代码如下&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;发送端&amp;#xff1a;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;sys/ipc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;sys/msg.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;mymesg&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mtype;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; mtext[&lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;];\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;mymesg&lt;/span&gt; ckxmsg;\n    &lt;span class=\"hljs-type\"&gt;key_t&lt;/span&gt; key &amp;#61; &lt;span class=\"hljs-built_in\"&gt;ftok&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;/tmp&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;66&lt;/span&gt;);\n    id &amp;#61; &lt;span class=\"hljs-built_in\"&gt;msgget&lt;/span&gt;(key,IPC_CREAT | &lt;span class=\"hljs-number\"&gt;0666&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(id &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;create msg error \\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; msg[&lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;memset&lt;/span&gt;(msg,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(msg));\n        ckxmsg.mtype &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;input message:&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;fgets&lt;/span&gt;(msg,&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(msg),stdin);\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(ckxmsg.mtext,msg);\n \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;msgsnd&lt;/span&gt;(id,(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; *)&amp;amp;ckxmsg,&lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;send msg error \\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strncmp&lt;/span&gt;(msg,&lt;span class=\"hljs-string\"&gt;&amp;#34;QUIT&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;msgctl&lt;/span&gt;(id,IPC_RMID,&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;) &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;del msg error \\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;接收端&amp;#xff1a;&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;sys/ipc.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;sys/msg.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;mymesg&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mtype;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; mtext[&lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;];\n};\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; id &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;mymesg&lt;/span&gt; ckxmsg;\n    &lt;span class=\"hljs-type\"&gt;key_t&lt;/span&gt; key &amp;#61; &lt;span class=\"hljs-built_in\"&gt;ftok&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;/tmp&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;66&lt;/span&gt;);\n    id &amp;#61; &lt;span class=\"hljs-built_in\"&gt;msgget&lt;/span&gt;(key,&lt;span class=\"hljs-number\"&gt;0666&lt;/span&gt;|IPC_CREAT);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(id &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;){\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;open msg error \\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;msgrcv&lt;/span&gt;(id,(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; *)&amp;amp;ckxmsg,&lt;span class=\"hljs-number\"&gt;512&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;receive msg error \\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;data:%s\\n&amp;#34;&lt;/span&gt;,ckxmsg.mtext);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strncmp&lt;/span&gt;(ckxmsg.mtext,&lt;span class=\"hljs-string\"&gt;&amp;#34;QUIT&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;参考资料&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/u010304442/article/details/90440079\" id=\"textarea_1652153592202_1652153601602_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;Linux多进程通讯之消息队列_浪里个浪の的博客-CSDN博客_linux 多进程通信 消息队列&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;消息队列&amp;#xff0c;Unix的通信机制之一&amp;#xff0c;可以理解为是一个存放消息&amp;#xff08;数据&amp;#xff09;容器。将消息写入消息队列&amp;#xff0c;然后再从消息队列中取消息&amp;#xff0c;一般来说是先进先出的顺序。可以解决两个进程的读写速度不同&amp;#xff08;处理数据速度不同&amp;#xff09;&amp;#xff0c;系统耦合等问题&amp;#xff0c;而且消息队列里的消息哪怕进程崩溃了也不会消失。在系统中可以运行 ipcs -q 的命令查询消息队列。1.键值生成每一个消息队列都有一个对应的键值&amp;#xff08;key&amp;#xff09;相关联&amp;#xff0c;如同共享内存和信号量一...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/u010304442/article/details/90440079&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;如有问题&amp;#xff0c;及时沟通。&lt;br /&gt;如有帮助&amp;#xff0c;欢迎点赞。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["linux多个进程通过消息队列进行通信", ["多个进程通过消息队列进行通信，通过多个进程（至少3个；独立创建多个codeblocks程序），实现以下内容：1）消息队列及其管理（创建消息、插入消息和获取消息）；2）进程之间关于消息队列的互斥与同步。不能使用系统自带的消息通信机制"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你应该说一下你的具体问题比如到哪儿里遇到了障碍&amp;#xff0c;我们可以提供帮助。&lt;/p&gt;\n\n&lt;p&gt;我提供一些思路给你&amp;#xff0c;你选偿试一下。&lt;/p&gt;\n\n&lt;p&gt;1)接收用户输入的整数n 用scanf来接收就可以了。不会scanf的话要去了解一下。&lt;/p&gt;\n\n&lt;p&gt;2)接收到用户的n,需要做一个从1到n的循环。接收用户输入的学员数据。这个循环变量就可以用做学号了。&lt;/p&gt;\n\n&lt;p&gt;3)总分&amp;#xff0c;三科成绩的变量相加即可得总分。&lt;/p&gt;\n\n&lt;p&gt;4)排序可以用冒泡排序。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["萌新学c程序学哭了，有没有大佬帮帮忙", ["c++结构体", "\n写程序完成如下功能：", "\n 写程序完成如下功能：", "\n      用户输入整数n，再让用户输入n个学员的数据，将n个学员按总分从高到低排序后输出。", "\n   学员应包含如下数据成员：学号（整数）、姓名、性别、语文成绩、数学成绩、英语成绩。", "\n   要求：", "\n   1)学号增一形式自动产生", "\n   2)成员不含总分，但输出要求有总分", "\n   3)输入n个学员数据写成独立函数", "\n   4)输出n个学员所有数据写成独立函数", "\n   5)求单个学员的总分写成独立函数   ", "\n   6)排序写成独立函数", "\n   7)禁止用下标法访问学员"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;就是每个学生你给贴个标签&amp;#xff0c;然后通过rfid&amp;#xff0c;接收数据&amp;#xff0c;解析出跑步距离和时间&amp;#xff1f;我不知道你得迟缓有多大&amp;#xff0c;但是这种底层的即时通讯python不太适合&amp;#xff0c;不可能太精确&amp;#xff0c;影响因素比较多&amp;#xff0c;rfid也是串口传输数据&amp;#xff0c;queue也有先进先出后进先出&amp;#xff0c;串口传出来的数据迟缓&amp;#xff0c;基本没办法解决&amp;#xff0c;硬件&amp;#xff0c;信号问题都有可能&amp;#xff0c;如果你数据不是跟界面分离的&amp;#xff0c;而是写在gui里面的&amp;#xff0c;gui的反馈刷新也会是性能的瓶颈&amp;#xff0c;另外还要考虑你一次多少个学生一起跑&amp;#xff0c;线程开的太多&amp;#xff0c;切换也是开销&amp;#xff0c;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python 进程间实时传输数据问题", ["正在折腾用python来写一个跑步计圈系统，遇到一个进程数据传递问题", "\n", "问题相关代码，请勿粘贴截图", "\n", "首先说明我是一个业余爱好者，正职是一名体育老师，由于学校场地原因，田径场只有160米一圈，所以人工去记录学生跑圈数是一件比较难的问题，所以想用python 写一个系统来解决这问题，硬件方面我已经购买了rfid超高频读写器和一些电子便签，这足够我在田径场第一二道的读写距离了.这是前提", "\n", "我用pyqt5写ui界面，里边包括秒表、循环读串口数据、数据库展示、还有一些小控件", "\n", "遇到的问题是，读取串口数据跟秒表同一进程会出现卡死ui界面的现象，所以我就运用多进程，问题所在就是进程间通信，我把秒表独立一个进程，要是把秒表跟其他小控件一个进程会出现秒表迟缓不准现象，接着就是把此时此刻秒表的秒数实时的传输到读取串口数据的进程中，我用queue来完成这操作，发现传输过来的秒数跟接收到的并加入到此时此刻的串口数据列表当中时秒数也是有点迟缓，同时queue是队列方式，也就是说拿到的秒数是队伍后面的数据，导致迟缓的产生。\n", "\n", "我想要达到的结果：能不能是实时秒表的这变量能实时传输到rfid串口数据进程里面去，而不是queue那种队列方式，用一个数据删除一个数据同时也不是最新的数据。。"]], "Tag": "算法设计"}
{"Answer": "对于构架上，我的一点浅见：\r\n\r\n首先需要建立的是一个数据交换中心，数据交换中心的职责是定义传输协议和通道、数据的标准格式和通过标准协议转发数据。数据交换中心需要建立一些公共通道和专有通道，包括A，B，C，D 系统1 各公司间数据相互通信的通道、A根据信息地址单向传送到B、C、D的通道、B、C、D将自己地址+信息单向传送到A的通道等。\r\n\r\n各个系统之间通信不直接通信，各个系统只跟数据交换中心通信，子系统与数据交换中心通信需要一个防崩溃层，也就是一个转换器。转换器的作用是把子系统的协议和数据格式与数据交换中心定义的标准传输协议和数据格式互转，以及其他一些系统优化工作。\r\n\r\n通讯方式可以是webservice或建立信息可靠传输通道。\r\n\r\n这样可以达到任何子系统的变化都不会影响其他系统通信，如果子系统变化了，只需要它的防崩溃层（也就是适配器）变化就可以了。\r\n\r\n看看我画的图会清晰一点：\r\n[img]http://www.iteye.com/upload/attachment/50459/73a391f4-b037-36ae-abdd-b254f8b500e5.gif[/img]", "Konwledge_Point": "树中的独立集", "Question": ["如何整合3个系统", ["在一整合项目中，需要整合的涉及到一个集团和下属三个子公司（不同城市），具体情况如下： ", "1、 用A 表示集团。子公司分别用B、C、D表示。 ", "2、 需要整合的数据主要形式为数据库（ORACLE），和文本文件。 ", "3、 网络拓扑图如下： A，B，C在同一专网内，D通过Internet连接到专网，各公司都有自己的局域网。 ", "4、 数据整合具体需要如下： ", "各子公司系统由自己的数据库（ORACLE），集团使用集中数据库（ORACLE） ", "输入整合见下表： ", "所设公司 系统 传送关系 ", "A，B，C，D 系统1 各公司间数据互为双向 ", "A，B，C，D 系统2 A根据信息地址单向传送到B、C、D ", "A，B，C，D 系统3 B、C、D将自己地址+信息单向传送到A ", "请给出你认为合理的解决方案架构和可能出现的问题？", "\n\n", " ", "问题补充：", "在一整合项目中，需要整合的涉及到一个集团和下属三个子公司（不同城市），具体情况如下： ", "1、 用A 表示集团。子公司分别用B、C、D表示。 ", "2、 需要整合的数据主要形式为数据库（ORACLE），和文本文件。 ", "3、 网络拓扑图如下： A，B，C在同一专网内，D通过Internet连接到专网，各公司都有自己的局域网。 ", "4、 数据整合具体需要如下： ", "各子公司系统由自己的数据库（ORACLE），集团使用集中数据库（ORACLE） ", "输入整合见下表： ", "所设公司 系统 传送关系 ", "A，B，C，D 系统1 各公司间数据互为双向 ", "A，B，C，D 系统2 A根据信息地址单向传送到B、C、D ", "A，B，C，D 系统3 B、C、D将自己地址+信息单向传送到A ", "请给出你认为合理的解决方案架构和可能出现的问题？", "\n\n", "?", "那么数据交换中心又是基于什么来实现呢？独立的一个系统或是其他？", "问题补充：", "在一整合项目中，需要整合的涉及到一个集团和下属三个子公司（不同城市），具体情况如下： ", "1、 用A 表示集团。子公司分别用B、C、D表示。 ", "2、 需要整合的数据主要形式为数据库（ORACLE），和文本文件。 ", "3、 网络拓扑图如下： A，B，C在同一专网内，D通过Internet连接到专网，各公司都有自己的局域网。 ", "4、 数据整合具体需要如下： ", "各子公司系统由自己的数据库（ORACLE），集团使用集中数据库（ORACLE） ", "输入整合见下表： ", "所设公司 系统 传送关系 ", "A，B，C，D 系统1 各公司间数据互为双向 ", "A，B，C，D 系统2 A根据信息地址单向传送到B、C、D ", "A，B，C，D 系统3 B、C、D将自己地址+信息单向传送到A ", "请给出你认为合理的解决方案架构和可能出现的问题？", "?", "问题补充：", "在一整合项目中，需要整合的涉及到一个集团和下属三个子公司（不同城市），具体情况如下： ", "1、 用A 表示集团。子公司分别用B、C、D表示。 ", "2、 需要整合的数据主要形式为数据库（ORACLE），和文本文件。 ", "3、 网络拓扑图如下： A，B，C在同一专网内，D通过Internet连接到专网，各公司都有自己的局域网。 ", "4、 数据整合具体需要如下： ", "各子公司系统由自己的数据库（ORACLE），集团使用集中数据库（ORACLE） ", "输入整合见下表： ", "所设公司 系统 传送关系 ", "A，B，C，D 系统1 各公司间数据互为双向 ", "A，B，C，D 系统2 A根据信息地址单向传送到B、C、D ", "A，B，C，D 系统3 B、C、D将自己地址+信息单向传送到A ", "请给出你认为合理的解决方案架构和可能出现的问题？", " ", "回 上一站，火星：", "那么数据交换中心又是基于什么来实现呢？独立的一个系统或是其他？", "问题补充：", "回 上一站，火星：", "那么数据交换中心又是基于什么来实现呢？独立的一个系统或是其他？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看起来是CUDA语法。.cuh是CUDA的头文件后缀&amp;#xff0c;ParaCellsObject揭示了这是一个并行程序&amp;#xff0c;device是CUDA的一个关键字。这个程序需要运行在合理安装了NVIDIA闭源驱动的机器上&amp;#xff08;当然你的硬件也得有NVIDIA的相应显卡&amp;#xff0c;而且显卡版本和驱动版本和CUDA驱动版本得匹配。顺带一提&amp;#xff0c;驱动、CUDA驱动、CUDNN是三个不同的东西&amp;#xff0c;需要先安装NVIDIA闭源驱动再安装CUDA驱动&amp;#xff0c;CUDNN的话&amp;#xff0c;我没装过&amp;#xff0c;不清楚&amp;#xff09;。&lt;br /&gt;virtual xxx(xxx) &amp;#61; 0;是声明纯虚函数的语法&amp;#xff0c;相当于java的抽象方法。&lt;br /&gt;&lt;strong&gt;不要听信其他回答的“__device__virtual是一个整体”的想法&lt;/strong&gt;&amp;#xff0c;这个东西就是CUDA的关键字&amp;#xff0c;__device__指示这段代码运行在显卡上&amp;#xff0c;__host__指定的是运行在主机&amp;#xff08;CPU&amp;#xff09;上的。virtual则是C&amp;#43;&amp;#43;关键字&amp;#xff0c;指示这个函数是虚函数。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["提问c++代码语义语法问题", ["已知Environment是一个独立的类，那么请问", "device", " virtual ParaCellsObject *proliferate(Environment *env)=0;", "这句话是在干什么？", "求助，这是本菜鸟接的一个小的项目，这句话对于理解整个工程结构非常重要，不知道这是什么语法，在做什么。"]], "Tag": "算法设计"}
{"Answer": "不拷贝库则需要静态编译，很麻烦的一般，之前编译过一次花了将近两天时间（编译很慢）\r\n\r\nQt资料参考：\r\n[Qt实战一二三](http://blog.csdn.net/liang19890820/article/details/50277095 \"Qt实战一二三\")\r\n[Qt资料大全](http://blog.csdn.net/liang19890820/article/details/51752029 \"Qt资料大全\")", "Konwledge_Point": "树中的独立集", "Question": ["初学者关于QT的几个疑问。", ["初学windows编程   实在受不了mfc的繁琐，转向想学习简洁的QT   但是  是不是用QT写出来的程序，能不能独立编译，(就是说如果用户电脑上如果没安装QT环境 我难道只能烤一堆depend dll到程序目录下嘛)  第二个问题，我看到有vs的QT插件   我是否可以在vs的环境下使用QT插件开发环境，   另外能不能QT只做页面，然后功能用纯C++和windows sdk完成   (这个QT designer是不是就是实现这个只做页面的。)如果是只用QT做页面  还用不用拷QT的dll到程序目录下。  "]], "Tag": "算法设计"}
{"Answer": "你可以这样嘛，为每个用户生成一个spring配置比如：用户javaeye,就生成javaeye-spring.xml，这个文件可以用dom4j去写spring的数据源配置等，要得到就用spring的ApplicationContext去解析这个文件，把信息读到内存嘛，这样每个用户的配置都是分开的，不会搞在一起很乱", "Konwledge_Point": "树中的独立集", "Question": ["怎么在不重启服务的情况下修改spring配置文件", ["我们有个项目要根据不同的注册用户，动态为这个用户生成数据库。所以就必须在系统中生成新的数据源，这一切都要在不重启服务的情况下完成。我现在是根据注册的不同用户，在spring的配置文件内添加数据源配置，可对spring的配置文件修改后不能得到相应的内容。请问怎样才能重新获得修改过的配置文件？或者用别的方案来实现？", "\n[b]问题补充：[/b]", "\n如果根据不同的用户生成相应的配置文件，那我怎么才能根据不同的访问用户获得相应的数据源呢？", "\n[b]问题补充：[/b]", "\n根据不同用户生成配置文件，spring根本就获取不到啊", "\n[b]问题补充：[/b]", "\nUnhandled Exception thrown: class org.springframework.beans.factory.BeanCreationException", "\n[b]问题补充：[/b]", "\n我怎么给spring指定这个数据源，就是操作DAO的时候使用指定的数据源。", "\n[b]问题补充：[/b]", "\n这样配置是不是用的都是一个Sessionfactory？", "\n[b]问题补充：[/b]", "\n问题还是没解决，谁能给说详细一点，给个具体思路。", "\n[b]问题补充：[/b]", "\n谢谢你的帮助，按照你的方案，问题已经解决。我根据不同的用户产生相应的配置文件，然后对相应的用户产生一个ApplicationContext放进Application池进行管理。这样就是每个用户都有一个独立的ApplicationContext。但有个问题同时出现了，就是每次在getBean()时都要指定ApplicationContext，很是麻烦，能有什么好的指导意见吗？"]], "Tag": "算法设计"}
{"Answer": "[quote]我们那几台机器上的weblogic虽然配置都一样，但都是彼此独立的，我想知道的其实是，为什么我这里出错，会连累到他们。他们的server上虽然也有与送信模块相关的基础配置，但并没有发布和运行我的测试程序。我现在想有可能是数据库的原因，因为我们使用的数据库是一个，难道我在发信的时候，程序向数据库插入了数据，然后启动server的时候，发信模块会首先检索数据库，以至于我们每次启动server，每个人都会出异常。但我看代码也没发现发信模块与数据库有关联，还得继续调查。[/quote]\r\n先把与数据库配置相关的应用先停掉。只跑JMS相关的。请再试试！ \r\n[quote]如果跟数据库没有关系的话，为什么JMS会一直发那？它是在哪里记录有发送失败的消息的？因为重启server时它还是会重发消息。[/quote]\r\nJMS肯定要做persistence的，以保证Message不会丢失。至于是持久化到数据库还是文件，曾经见过两种方式都有。这就是为何要重发的原因。怎么设置重发间隔，还是Weblogic的参考说明吧！", "Konwledge_Point": "树中的独立集", "Question": ["关于JMS的一个怪异的问题（高分求教）", ["最近项目里有一个邮件模块，过程基本上就是通过JMS调用EJB来发信。", "\n工程是发布到weblogic8.1上，MailSession，JMS和EJB都配好了。", "\n开始时没有问题，但有一次我写了一个测试程序来发信，那封信的各个项目（发信人收信人等等）都是乱填的。", "\n结果信没法出去，程序出现异常，weblogic控制台开始不停的输出异常信息，然后我就把weblogic给停了。", "\n第二天，我再启动weblogic，控制台上又开始疯狂的输出异常，感觉就像死循环。", "\n因为我们要进行单体测试，所以我们小组里的每个人的机器上都有一份weblogic服务器的拷贝，基础配置都是一样的，以便在自己的机器上发布程序来测试，避免互相影响。", "\n现在最奇怪的地方就在这里，自从我这边server发疯之后，其他人的server启动时也都开始发疯，最后没有办法，只好把发布的EJB给删掉，服务器才启动起来。", "\n个人感觉是JMS的问题，信息发送失败，JMS会不停地继续尝试吗？如何关闭？", "\n\n", "不知谁能给解释一下，或给一个解决方案，不胜感激。", "\n[b]问题补充：[/b]", "\nto lewhwa：", "\n\n", "我们那几台机器上的weblogic虽然配置都一样，但都是彼此独立的，我想知道的其实是，为什么我这里出错，会连累到他们。他们的server上虽然也有与送信模块相关的基础配置，但并没有发布和运行我的测试程序。我现在想有可能是数据库的原因，因为我们使用的数据库是一个，难道我在发信的时候，程序向数据库插入了数据，然后启动server的时候，发信模块会首先检索数据库，以至于我们每次启动server，每个人都会出异常。但我看代码也没发现发信模块与数据库有关联，还得继续调查。", "\n\n", "如果跟数据库没有关系的话，为什么JMS会一直发那？它是在哪里记录有发送失败的消息的？因为重启server时它还是会重发消息。", "\n\n", "[b]问题补充：[/b]", "\n找到问题的症结所在了。共享一下：", "\nWeblogic确实会将将JMS发送信息记录下来，有数据库和文件系统两种方式。", "\n我这边是记录在数据库中，在配置JMS的时候，会建立JMSStore，weblogic会要求输入一个数据库连接池名。然后，weblogic会自动的在数据库中建立", "\nmyserverjmsstore", "\njms_storewlstore", "\nmyserverjmsstore", "\n三张表，来存储JMS信息。", "\n（我是照着环境构筑书构筑的环境，根本就没看这些配置是啥意思，哎！）", "\n\n", "这样的话，上面怪异现象的原因就不难解释了。", "\n\n", "to：lewhwa", "\n感谢你的回答，在Weblogic 的JMS设置里确实找到了重发设置，我那里面默认被设置成了-1，意思是无限重发，结果server就疯了，呵呵。"]], "Tag": "算法设计"}
{"Answer": "只要不是GPL，就可以用于商业软件，否则就不能。\r\n\r\n而且GPL 是有传播性的，也就是说，只要你的软件中有任何一个第三方库使用了GPL的软件，那么所有间接使用软件的代码都必须以不潍坊GPL形式的方式开源。", "Konwledge_Point": "树中的独立集", "Question": ["关于JS库使用的版权问题", ["对版权问题不是很明白。", "\n\n", "我们知道JS文件是暴露给客户端的，从某种意义上说用户都可以获得JS文件的源代码。", "\n\n", "问题：", "\n\n", "如果一个项目中使用了开源（GPL,GPL2等）的JS文件，项目服务器端的代码也需要开源么？", "\n\n", "对于MIT,GPL或者MIT,GPL2双协议的又怎么样呢？", "如果使用的JS文件不和项目在同一个域名里，比如直接引用原开发者的地址，又或者单独弄一个域名有如何呢？", "问题补充", "谢谢两位的解释，那这样，比如我使用jQuery，并且采用MIT协议，由于js文件本身就具有源代码暴露的特点，我可以把所有写的js代码都采用MIT协议。", "而事实上JS代码运行是在客户端的，这些代码和后台服务器的调用是通过网络通信完成的。", "虽然在同一个项目里，可这前后台两部分代码是完全独立的，难道这样后台代码也受开源协议约束么？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;怎么post的&amp;#xff1f;浏览器直接表单post信息到b系统页面&amp;#xff1f;如果是通过服务器端webrequest post数据到b.com&amp;#xff0c;生成的cookie只是针对此webrequest有效&amp;#xff0c;浏览器是不知道有这个cookie的。必须要要在a.com输出表单&amp;#xff0c;然后表单post到b.com&amp;#xff0c;b.com生成cookie后再返回a.com或者显示其他提示页面才行。&lt;br /&gt;而且b.com生成的cookie对象加了expires属性&amp;#xff08;有效期&amp;#xff09;没有&amp;#xff1f;不加的是话是内存cookie&amp;#xff0c;浏览器关闭后cookie会被删除。还有path也加上&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n        HttpCookie cookie &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;HttpCookie(&lt;span class=\"hljs-string\"&gt;&amp;#34;test&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;test&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n        cookie.Expires &amp;#61; DateTime.Now.&lt;span class=\"hljs-constructor\"&gt;AddDays(1)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//有效期一天&lt;/span&gt;\n        cookie.Path &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//所有页面可以访问&lt;/span&gt;\n        Response.Cookies.&lt;span class=\"hljs-constructor\"&gt;Add(&lt;span class=\"hljs-params\"&gt;cookie&lt;/span&gt;)&lt;/span&gt;;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["第三方系统写入Cookie", ["已知：A系统（a.com）与B系统（b.com）为两个独立网站", "A系统通过API接口（不是通过Ajax）把已登录的信息 Post到B系统，B系统把传过来的参数保存Cookie，", "为什么已保存的Cookie信息 第二次在打开B系统时 却没有该Cookie信息？？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nstart  &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;  &lt;span class=\"hljs-string\"&gt;&amp;#34;360浏览器路径&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;--new-window&lt;/span&gt; www&lt;span class=\"hljs-selector-class\"&gt;.baidu&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.com&lt;/span&gt;\nstart &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;  &lt;span class=\"hljs-string\"&gt;&amp;#34;360浏览器路径&amp;#34;&lt;/span&gt;  &lt;span class=\"hljs-attr\"&gt;--new-window&lt;/span&gt; www&lt;span class=\"hljs-selector-class\"&gt;.baidu&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.com&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎么批量打开网址浏览器多开", ["批量打开网址", "例如：我想打开10个", "http://www.baidu.com/", "用360极速浏览器同时打开，然后是10个360极速浏览器独立进程，也就是10个360极速浏览器窗口，而不是1个浏览器10个标签，可以用bat 批处理 vbs等脚本实现都可以，或者有多开的小工具也可以，感谢"]], "Tag": "算法设计"}
{"Answer": "用/deep/可以解决", "Konwledge_Point": "树中的独立集", "Question": ["请问怎么改element的默认样式？", ["vue脚手架搭配element怎么修改默认的css样式呀？我在style标签里直接用element的类名写 样式页面不生效，去掉scoped属性的话就会生效，可是所有页面的相关元素也会跟着改变，这不是我想要的。我想每个页面有每个页面的独立样式。", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;《礼记·学记》有言&amp;#xff1a;“独学而无友则孤陋而寡闻”。一群志同道合的小伙伴在一起&amp;#xff0c;有着共同的目标&amp;#xff0c;才能够一起坚持&amp;#xff0c;一起牛&amp;#xff01;&lt;/p&gt;\n\n&lt;p&gt;在小组学习过程中&amp;#xff0c;相比个人的独立学习&amp;#xff0c;协作、沟通、讨论、分享过程中可以学到更多&amp;#xff0c;也可以积累人脉&amp;#xff0c;夯实友情。同时&amp;#xff0c;协作并不是一件容易的事。一般来讲&amp;#xff0c;高效协作少不了以下五要素&amp;#xff1a;共享注意力、倾听、分享、协同以及换位思考。在小组合作中&amp;#xff0c;需要一个磨合过程&amp;#xff0c;这也是工作必备基础能力之一。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["C1考试后要分组学习，不分组自己学习行不行？", ["我报考了C1考试，听说考过了之后就要分组学习；我比较喜欢个人学习，只要给我资料我自己慢慢摸索，不懂就网上查资料，感觉这样对于独立学习对于我比较好。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;正确写法&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;href&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;javascript:void(0);&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;onclick&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;openWin(&amp;#39;http://www.baidu.com/&amp;#39;);&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;点击咨询&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["wordpress的文章页面无法使用javascript:void(openWin)", ["wordpress的文章页面无法在", "独立的窗口", "打开链接（非target=\"_blank\"）。", "\n", "<", "p", ">", "<", "a", " ", "href", "=", "\"javascript:void(openWin('http://www.baidu.com/'));\"", ">", "点击咨询", "</", "a", ">", "</", "p", ">", "\n", "\n", "在手写静态的html可以使用，但是在wordpress生成的文章html页面就无法使用。求"]], "Tag": "算法设计"}
{"Answer": "最简单的方案 就是做单点登录（sso） 推荐一个框架 cas3 专门解决你的问题的", "Konwledge_Point": "树中的独立集", "Question": ["如何获取其他系统登录的用户信息(系统是多系统集成)", ["因为用户信息都是存放在服务器的AD上，用户登录是验证服务器AD的用户信息，验证通过则登录成功。我的工程搭建在一个工程上，工程是多工程构建。但是相互独立。", "\n   现在想做到的是：在用户需要登录我的工程时，只要是他登录过其他的分支工程，就不需要再次验证，直接登录。", "\n   我的难点在于：无法获取其他系统的用户信息，因为是相互独立的构成，不可能去获取其他工程的session信息。", "\n   项目经理的意思是，可以寻找一个IE插件，强制用户安装，用户登录时，来存放他之前填写的登录信息。", "\n   请问是否能提供某个能实现该功能的插件，或者给我一个其他解决办法？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;unordered_map&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt;  DXS&amp;#61;unordered_map&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; ;\nDXS &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; DXS&amp;amp; lh, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; DXS rh) {\n    DXS result;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;auto&lt;/span&gt; x : lh) {\n        result[x.first] &amp;#43;&amp;#61; x.second;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;auto&lt;/span&gt; y : rh) {\n        result[y.first] &amp;#43;&amp;#61; y.second;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; a &amp;#61; { &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;-4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;-18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; };\n    vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; b &amp;#61; { &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;-7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;17&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;-10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; ,&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;-7&lt;/span&gt; };\n    DXS dxs1;\n    DXS dxs2;\n    DXS result;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; a.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; a[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            dxs1[a[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]]&amp;#43;&amp;#61;a[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; b.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b[i] !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; b[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            dxs2[b[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]] &amp;#43;&amp;#61; b[i];\n    }\n    result &amp;#61; dxs1 &amp;#43; dxs2;\n    vector&amp;lt;pair&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt;&amp;gt; ans;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;auto&lt;/span&gt; x : result) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x.second !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            ans.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;make_pair&lt;/span&gt;(x.second, x.first));\n    }\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(ans.&lt;span class=\"hljs-built_in\"&gt;begin&lt;/span&gt;(), ans.&lt;span class=\"hljs-built_in\"&gt;end&lt;/span&gt;(), [](&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; pair&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt;&amp;amp; lh,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; pair&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt;&amp;amp; rh) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; lh.second &amp;gt; rh.second;\n        });\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;auto&lt;/span&gt; x : ans) {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;[&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; x.first &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; x.second &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;]&amp;#34;&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["多项式相加(C++）", ["  我们经常遇到两多项式相加的情况，在这里，我们就需要用程序来模拟实现把两个多项式相加到一起。首先，我们会有两个多项式，每个多项式是独立的一行，每个多项式由系数、幂数这样的多个整数对来表示。", "\n", "\n", " 为了标记每行多项式的结束，在表达式后面加上了一个幂数为负数的整数对。", "同时输入表达式的幂数大小顺序是随机的。", "我们需要做的就是把所给的两个多项式加起来。", "输入", "输入包括多行。 第一行整数n,表示有多少组的多项式需要求和。(1 < n < 100) 下面为2n行整数，每一行都是一个多项式的表达式。表示n组需要相加的多项式。 每行长度小于300。", "输出", "输出包括n行，每行为1组多项式相加的结果。 在每一行的输出结果中，多项式的每一项用“[x y]”形式的字符串表示，x是该项的系数、y 是该项的幂数。要求按照每一项的幂从高到低排列，即先输出幂数高的项、再输出幂数低的项。 系数为零的项不要输出。", "样例输入", "2", "-1 17 2 20 5 9 -7 7 10 4 22 2 -15 0 16 5 0 -1", "2 19 7 7 3 17 4 4 15 10 -10 5 13 2 -7 0 8 -8", "-1 17 2 23 22 2 6 8 -4 7 -18 0 1 5 21 4 0 -1", "12 7 -7 5 3 17 23 4 15 10 -10 5 13 5 2 19 9 -7", "样例输出", "[ 2 20 ] [ 2 19 ] [ 2 17 ] [ 15 10 ] [ 5 9 ] [ 6 5 ] [ 14 4 ] [ 35 2 ] [ -22 0 ]", "[ 2 23 ] [ 2 19 ] [ 2 17 ] [ 15 10 ] [ 6 8 ] [ 8 7 ] [ -3 5 ] [ 44 4 ] [ 22 2 ] [ -18 0 ]"]], "Tag": "算法设计"}
{"Answer": "pom.xml 打包用assembly插件\r\n```\r\n&lt;build&gt;\r\n\t\t&lt;finalName&gt;${artifactId}&lt;/finalName&gt;\r\n\t\t&lt;plugins&gt;\r\n\t\t\t&lt;!-- jar打包相关插件 --&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;2.4&lt;/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;archive&gt;\r\n\t\t\t\t\t\t&lt;manifestEntries&gt;\r\n\t\t\t\t\t\t\t&lt;Class-Path&gt;conf/&lt;/Class-Path&gt;\r\n\t\t\t\t\t\t&lt;/manifestEntries&gt;\r\n\t\t\t\t\t\t&lt;manifest&gt;\r\n\t\t\t\t\t\t\t&lt;addClasspath&gt;true&lt;/addClasspath&gt;\r\n\t\t\t\t\t\t\t&lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;\r\n\t\t\t\t\t\t\t&lt;mainClass&gt;com.****ceMain&lt;/mainClass&gt;\r\n\t\t\t\t\t\t&lt;/manifest&gt;\r\n\t\t\t\t\t&lt;/archive&gt;\r\n\t\t\t\t\t&lt;excludes&gt;\r\n\t\t\t\t\t\t&lt;exclude&gt;*.xml&lt;/exclude&gt;\r\n\t\t\t\t\t\t&lt;exclude&gt;*.properties&lt;/exclude&gt;\r\n\t\t\t\t\t&lt;/excludes&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;2.4&lt;/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;appendAssemblyId&gt;false&lt;/appendAssemblyId&gt;\r\n\t\t\t\t\t&lt;descriptors&gt;\r\n\t\t\t\t\t\t&lt;descriptor&gt;assembly.xml&lt;/descriptor&gt;\r\n\t\t\t\t\t&lt;/descriptors&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t\t&lt;executions&gt;\r\n\t\t\t\t\t&lt;execution&gt;\r\n\t\t\t\t\t\t&lt;id&gt;make-assembly&lt;/id&gt;\r\n\t\t\t\t\t\t&lt;phase&gt;package&lt;/phase&gt;\r\n\t\t\t\t\t\t&lt;goals&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;single&lt;/goal&gt;\r\n\t\t\t\t\t\t&lt;/goals&gt;\r\n\t\t\t\t\t&lt;/execution&gt;\r\n\t\t\t\t&lt;/executions&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;skip&gt;true&lt;/skip&gt;\r\n\t\t\t\t\t&lt;includes&gt;\r\n\t\t\t\t\t\t&lt;include&gt;**/*Test.java&lt;/include&gt;\r\n\t\t\t\t\t&lt;/includes&gt;\r\n\t\t\t\t&lt;/configuration&gt;\r\n\t\t\t&lt;/plugin&gt;\r\n\t\t&lt;/plugins&gt;\r\n\t&lt;/build&gt;\r\n```\r\n\r\nassembly.xml文件：\r\n\r\n\r\n```\r\n&lt;assembly\r\n\txmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd\"&gt;\r\n\t&lt;id&gt;distribution&lt;/id&gt;\r\n\t&lt;formats&gt;\r\n\t\t&lt;format&gt;zip&lt;/format&gt;\r\n\t&lt;/formats&gt;\r\n\r\n\t&lt;fileSets&gt;\r\n\t\t&lt;fileSet&gt;\r\n\t\t\t&lt;directory&gt;src/main/bin&lt;/directory&gt;\r\n\t\t\t&lt;outputDirectory&gt;&lt;/outputDirectory&gt;\r\n\t\t&lt;/fileSet&gt;\r\n\t\t&lt;fileSet&gt;\r\n\t\t\t&lt;directory&gt;src/main/resources&lt;/directory&gt;\r\n\t\t\t&lt;outputDirectory&gt;conf&lt;/outputDirectory&gt;\r\n\t\t&lt;/fileSet&gt;\r\n\t\t&lt;fileSet&gt;\r\n\t\t\t&lt;directory&gt;data&lt;/directory&gt;\r\n\t\t\t&lt;outputDirectory&gt;data&lt;/outputDirectory&gt;\r\n\t\t&lt;/fileSet&gt;\r\n\t\t&lt;fileSet&gt;\r\n\t\t\t&lt;directory&gt;${project.build.directory}&lt;/directory&gt;\r\n\t\t\t&lt;outputDirectory&gt;/&lt;/outputDirectory&gt;\r\n\t\t\t&lt;includes&gt;\r\n\t\t\t\t&lt;include&gt;*.jar&lt;/include&gt;\r\n\t\t\t&lt;/includes&gt;\r\n\t\t&lt;/fileSet&gt;\r\n\t&lt;/fileSets&gt;\r\n\t&lt;dependencySets&gt;\r\n\t\t&lt;dependencySet&gt;\r\n\t\t\t&lt;outputDirectory&gt;/lib&lt;/outputDirectory&gt;\r\n\t\t\t&lt;excludes&gt;\r\n\t\t\t\t&lt;exclude&gt;${pom.groupId}:${pom.artifactId}&lt;/exclude&gt;\r\n\t\t\t&lt;/excludes&gt;\r\n\t\t&lt;/dependencySet&gt;\r\n\t&lt;/dependencySets&gt;\r\n&lt;/assembly&gt;\r\n```\r\n\r\n想打成什么都行", "Konwledge_Point": "树中的独立集", "Question": ["java项目打包。问题不难，只是我急要。", ["项目用的maven，本地jar，以及资源文件。用的eclipse打jar包，但是要求资源文件必须导出的jar包同级。否则图片等资源文件加载不出来。", "\n\n", "    要求提供合适的方法将资源本件整合到jar包里面，没必要把资源文件漏在外面。还保留Runable jar的风格，把所有import JAR放在JAR外面独立的一个文件夹。\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这俩网卡芯片都是MAC&amp;#43;PHY 集成在一起的&lt;br /&gt;可以这么说都属于MAC层&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["网卡为什么会分MAC和PHY", ["网上查了一些资料，网卡其实分MAC和PHY，这两个是独立的，有些芯片会将MAC和PHY集成在一块芯片里，有些是cpu集成mac，phy是单独分开一个芯片。刚看到intel的两颗网卡芯片，分别为I219-LM和I211，能帮我看下这两颗网卡分别属于mac还是phy芯片"]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;单独的static变量在java里&amp;#xff0c;其实并不常用&amp;#xff0c;甚至都不推荐你使用&amp;#xff0c;因为缺点就如你所说&lt;/li&gt;&lt;li&gt;一般来说&amp;#xff0c;变量的static总是和final一起使用&amp;#xff0c;代表了一个常量&lt;/li&gt;&lt;li&gt;对于一个包作者来说&amp;#xff0c;应该使用良好的作用域&amp;#xff0c;减少使用者出错的概率。最简单的比如&amp;#xff0c;不应该让使用者获取的变量设置为private&amp;#xff0c;可以读取的变量赋予get方法&amp;#xff0c;可以设置的变量赋予set方法&amp;#xff0c;所以很少会出现你说的“对别人中的代码进行提取时&amp;#xff0c;要判断原来的类是否是单例引用还是多例引用。要采取不同的处理手段。”&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "树中的独立集", "Question": ["记录一下关于static关键字作为全局变量的作用。自己的理解，不知道对不对？", ["记录一下关于static关键字作为全局变量的作用。自己的理解，不知道对不对？", "如果不对希望可以指正一下，thanks", "static作为的全局变量可以共享，例如。", "\n", "public", " ", "class", " ", "a", " {\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args)", " ", "{\n\n        Person p1 = Person.", "person", "();\n        p1.map.", "remove", "(", "\"11\"", ");\n        Person p2 = Person.", "person", "();\n        System.out.", "println", "(p1.map);\n        System.out.", "println", "(p2.map);\n    }\n}\n\n@Data\n", "class", " ", "Person", " {\n    ", "public", " ", "static", " Map<", "String", ", ", "String", "> map = ", "new", " HashMap<>();\n    ", "private", " Integer age = ", "1", ";\n\n    ", "static", " {\n        map.", "put", "(", "\"11\"", ",", "\"11\"", ");\n    }\n    ", "public", " ", "static", " Person ", "person", "()", "{\n        ", "return", " ", "new", " ", "Person", "();\n    }\n}\n", "\n", "这里打印的结果是：", "{}", "{}", "new 两个对象，将其中一个对象的map给remove调了，另外一个对象也存在了。", "对于非static修饰的，再创建对象时，是独立维护的。例如", "\n", "\n", "public", " ", "class", " ", "a", " {\n\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args", ") {\n\n        ", "Person", " p1 = ", "new", " ", "Person", "();\n        ", "Person", " p2 = ", "new", " ", "Person", "();\n        p1.", "removeMap", "(", "\"11\"", ");\n        ", "System", ".", "out", ".", "println", "(p1.", "map", "());\n        ", "System", ".", "out", ".", "println", "(p2.", "map", "());\n       }\n}\n\n", "@Data", "\n", "class", " ", "Person", "{\n    ", "private", " ", "Map", "<", "String", ",", "String", "> map = ", "new", " ", "HashMap", "<>();\n\n    ", "private", " ", "Integer", " age=", "1", ";\n\n    ", "public", " ", "Person", "() {\n        map.", "put", "(", "\"11\"", ",", "\"11\"", ");\n    }\n\n    ", "public", " ", "Map", "<", "String", ",", "String", "> ", "map", "(", "){\n        ", "return", " map;\n    }\n\n    ", "public", " ", "void", " ", "removeMap", "(", "String", " key", "){\n        map.", "remove", "(key);\n    }\n\n}\n", "\n", "这里打印的结果是：", "{}", "{11=11}", "引用场景：对别人中的代码进行提取时，要判断原来的类是否是单例引用还是多例引用。要采取不同的处理手段。", "单例：", "\n", "多例：", "\n"]], "Tag": "算法设计"}
{"Answer": "https://www.cnblogs.com/puqing/p/10867934.html", "Konwledge_Point": "树中的独立集", "Question": ["layDate 日期与时间组件点击显示时间按钮后时间被日期挡住了", ["layDate 日期与时间组件点击显示时间按钮后时间被日期挡住了，是哪里问题？", "\n用的是 layDate 独立版，没用layUI。在线等……", "\n\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不用怕&amp;#xff0c;基础有了&amp;#xff0c;先找份工作顶着&amp;#xff0c;实践了才知道自己的不足&amp;#xff0c;都是这样过来的&amp;#xff0c;最好是先找一份实习生的&amp;#xff0c;进去有人带你会更好&amp;#xff0c;思路很模糊主要是你项目做得少&amp;#xff0c;遇到不懂的自己先思考一下&amp;#xff0c;实在不懂可以问下同事。自信一点。说不定你找到工作后&amp;#xff0c;能很好有胜任呢&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["自学前端四个月，仍然感觉能力不足，不敢投简历，请问怎样的能力才能达到工作水平呢", ["学完三剑客，学了学vue，下载了别人的代码，自己只是对接了数据接口，对返回的数据做了进一步展示，简单使用了element-ui调通了，独立开发前端的话，思路感觉很模糊，想请大家分享下工作经验，自己学的也不快，技术栈有不会的，就感觉压力很大，比如要求uniapp的，less也会的"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;学习了这么多&amp;#xff0c;够用了&amp;#xff0c;看看招聘网站都需要些什么技术&amp;#xff0c;投简历去面试就完事了&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["迷茫的java学习者", ["一本计科学生一枚，如今刚刚大三，已经学习了html，css，js，vue，java基础，数据库sql，mysql，redis，spring springmvc，mybatis，springboot，springcloud，微服务，java高并发多线程，数据结构，虚拟机，独立做过项目，看到今年就业形式实在是恐怖，java都找不到实习，想问问过来人后续该朝哪个方向去学习。"]], "Tag": "算法设计"}
{"Answer": "用Ajax的话也不好实现，因为Ajax只能客户端向服务端发请求，然后等待服务器返回结果。但是DWR可以实现推送技术就是服务端向客户端主动推送信息，具体的你可以去学习DWR框架，DWR也整合了Ajax，很简单的。DWR可以实现通过java类调用页面JS脚本，从而获得用户要收到的信息。\r\n我以前做过这种网页即时通讯的小例子，主要就是通过登陆用户ID和SessionID来获取要收发的页面。我做的只能传送文本，如果要做语音的话肯定就没那么简单了，希望采纳！", "Konwledge_Point": "树中的独立集", "Question": ["JSP实现即时通信功能！！", ["请问各位大虾，在JSP如何实现即时通信？？？？", "\n\n", "现在又如下需求：", "\n\n", "                     要做一个办公管理系统，要实现即时通信功能，用户可以跟所有在线的用户进行通信，通信的方式可以是文本，最好可以提供语音。", "\n\n", " ", "\n\n", "                     每个用户可以同时和几个用户进行通信，和每个用户通信都弹出一个独立的聊天框。", "\n\n", " ", "\n\n", "                    这个需求应该如何实现呢？？？？要用到什么技术？？？", "\n\n", " ", "\n\n", "                    有人说用JSP+Ajax实现，但是我不懂怎么和服务器端交互。。。。。。。。。。", "\n\n", " ", "\n\n", "                   用户点击提交，把信息发送到服务器中保存起来，但怎么发给其他用户？？？其他用户又怎么知道有信息来？？？完全搞不懂啊！！！！", "\n\n", " ", "\n\n", "                  望各位指点一下！！！！！！"]], "Tag": "算法设计"}
{"Answer": "appfuse最近变得很强悍了，应该能满足你的要求了。用maven的appfuse插件吧，对于项目依赖，父子项目，组件管理都很方便的，然后再eclipse装个m2eclipse插件就好了。\r\n不过我还是强烈建议你使用springside，国产，流行，强悍，中文文档齐全，javaeye上好多介绍他的文章，实在不行你就直接找江南白衣大大。呵呵", "Konwledge_Point": "树中的独立集", "Question": ["appfuse 创建项目问题", ["如果需要建一个项目，类似ERP那样的稍微大一点且有很多子系统的项目，各个子系统都是先独立开发，然后到时候用一些共有的接口把各个子系统进行整合。", "\n\n", "但是我现在需要建一个整个项目的大框架，请问appfuse有没有这个功能，如果有用Appfuse该怎么建？最好能给个项目的文档看看。", "\n\n", "谢谢了~"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;js&amp;#43;html5&lt;br /&gt;div 拖动 合并&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["做一个衣服设计模块 求一思路", ["\n", "模仿网址  ", "\n      \n        ", "SDS定制选品平台-跨境电商POD柔性定制供应链平台", "\n        \n      ", "sds定制选品平台，POD柔性定制创意定制选品平台，提供一站式跨境电商定制供应链服务，全品类定制、女装版型定制，一件代发，满足亚马逊独立站等跨境电商卖家各类产品定制服务", "\n      ", "\n      ", "\n        ", "\n          ", "http://www.sdsdiy.com/", "\n        ", "\n      ", "   里面的在线设计模块  用什么来做呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答内容部分引用GPT&amp;#xff0c;GPT_Pro更好的解决问题&lt;br /&gt;上传头像和图片墙这种&amp;#xff0c;在前后端分离的系统中是一个比较常见的需求&amp;#xff0c;其实也不难实现。首先&amp;#xff0c;前端使用Vue&amp;#43;ElementUI来实现&amp;#xff0c;可以使用ElementUI提供的上传组件来进行文件上传&amp;#xff0c;具体代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&amp;lt;el-upload\n  action&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;upload.php&amp;#34;&lt;/span&gt;\n  list-type&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;picture-card&amp;#34;&lt;/span&gt;\n  &lt;span class=\"hljs-symbol\"&gt;:on-preview&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handlePreview&amp;#34;&lt;/span&gt;&lt;/span&gt;\n  &lt;span class=\"hljs-symbol\"&gt;:on-remove&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleRemove&amp;#34;&lt;/span&gt;&lt;/span&gt;\n  &lt;span class=\"hljs-symbol\"&gt;:file-list&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;fileList&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &amp;lt;i class&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;el-icon-plus&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/i&amp;gt;\n&amp;lt;/el-upload&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后再后端&amp;#xff0c;我们可以使用SpringBoot来实现上传图片的功能&amp;#xff0c;具体代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&amp;#64;&lt;span class=\"hljs-constructor\"&gt;PostMapping(&lt;span class=\"hljs-string\"&gt;&amp;#34;/upload&amp;#34;&lt;/span&gt;)&lt;/span&gt;\npublic ResponseEntity&amp;lt;?&amp;gt; upload&lt;span class=\"hljs-constructor\"&gt;File(&amp;#64;RequestParam(&lt;span class=\"hljs-string\"&gt;&amp;#34;file&amp;#34;&lt;/span&gt;)&lt;/span&gt; MultipartFile file) {\n    String fileName &amp;#61; fileStorageService.store&lt;span class=\"hljs-constructor\"&gt;File(&lt;span class=\"hljs-params\"&gt;file&lt;/span&gt;)&lt;/span&gt;;\n\n    String fileDownloadUri &amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;ServletUriComponentsBuilder&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;from&lt;span class=\"hljs-constructor\"&gt;CurrentContextPath()&lt;/span&gt;\n                              .path(&lt;span class=\"hljs-string\"&gt;&amp;#34;/downloadFile/&amp;#34;&lt;/span&gt;)\n                              .path(fileName)\n                              .&lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;UriString()&lt;/span&gt;;\n\n    return &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; ResponseEntity&amp;lt;&amp;gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;UploadFileResponse(&lt;span class=\"hljs-params\"&gt;fileName&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;fileDownloadUri&lt;/span&gt;)&lt;/span&gt;, HttpStatus.OK);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果回答有帮助&amp;#xff0c;望采纳。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["vue springboot 如何上传头像、图片墙？", ["vue springboot 上传头像、图片墙？", "这怎么上传图片，干脆特地写一个独立的后端方法，然后在各个需要使用上传文件的时候再调用这个方法可以吗？目前需要的有上传头像，上传店铺景点等的图片，请问要怎么写啊？后端的。。之前写了一个，结果界面不显示图片，图片裂开了，好像没下载下来，不会写了。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;很少银行会自己去开发系统&amp;#xff0c;而是使用别的公司开发好的产品继续二次开发&amp;#xff0c;并投入使用就算自己开发的也是已经自己封装好了的&amp;#xff0c;不可能从零开始&amp;#xff0c;所以对于你这个新人来讲核心业务就别想了&amp;#xff0c;你只要拿来使用即可&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["邮储银行信用卡中心科技部java软开，求问发展趋势、加班强度", ["刚刚收到邮储银行信用卡中心科技部的offer，是总部，在北京石景山鲁谷那边，卡中心是2020年12月独立的新部门，理论上和总行平级。网上找不到相关的资讯，有没有了解实情的，java软件加班什么程度呢？", "听说卡中心在建新核心系统，2024年上线，本人觉得可以接触到核心业务对自身的技术和业务都会有帮助。请支招。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff0c;实现通过Arduino驱动键盘需要做以下几个步骤&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1  连接硬件&amp;#xff1a;将Arduino与计算机连接并将键盘电路连接到Arduino的数字输出针脚上。&lt;/p&gt;\n&lt;p&gt;2  编写代码&amp;#xff1a;编写Arduino代码&amp;#xff0c;使其在数字输出针脚上输出按键信号。您可以使用 Keyboard.h 库&amp;#xff0c;该库允许您模拟键盘按键。例如&amp;#xff0c;您可以使用 Keyboard.press() 和 Keyboard.release() 函数模拟按下和释放按键。&lt;/p&gt;\n&lt;p&gt;3  驱动Arduino&amp;#xff1a;您需要编写脚本或应用程序&amp;#xff0c;通过串口连接将命令发送到Arduino&amp;#xff0c;以控制它的行为。您可以使用 Serial 库&amp;#xff0c;该库允许您在计算机和Arduino之间进行串口通信。例如&amp;#xff0c;您可以使用 Serial.write() 函数将指令发送到Arduino&amp;#xff0c;并使用 Serial.read() 函数读取从Arduino返回的数据。&lt;br /&gt;至于开发板的选择&amp;#xff0c;MEGA2560是一个不错的选择&amp;#xff0c;因为它具有足够的数字输出针脚&amp;#xff0c;可以独立控制每个键位。其他可选的开发板包括Arduino UNO和Arduino Leonardo等。&lt;/p&gt;\n&lt;p&gt;最后&amp;#xff0c;为了将C&amp;#43;&amp;#43;或易语言编写的游戏脚本与Arduino驱动程序集成起来&amp;#xff0c;您需要使用某种方法将两者连接起来。您可以使用Python或其他编程语言编写一个中介程序&amp;#xff0c;将游戏脚本和Arduino驱动程序连接起来&amp;#xff0c;或者直接在游戏脚本中使用串口通信来控制Arduino。具体实现方式取决于您的游戏脚本和Arduino驱动程序的编写语言和特定需求。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["怎样用arduino或别的开发板做物理按键盘和移动鼠标？", ["现在想用脚本驱动Arduino的数字输出针脚让键盘通电实现物理按键盘，考虑用一台电脑控制arduino按键另一台电脑。因为不是很懂尝试了好几个开发板，只知道MEGA2560数字输出引脚较多，方便独立控制每个键位，但是由于C++或易语音写出来的游戏脚本不知道要怎么驱动arduino让其实现按键，具体应该怎么做，或者是不是开发板需要选别的。"]], "Tag": "算法设计"}
{"Answer": "http://baike.baidu.com/link?url=ZOaUxiONDY8YrxKAajD9jXFqA8EVukdyDvegzUlkfnR-loa4nhC_hOwpjpY-7qrY", "Konwledge_Point": "树中的独立集", "Question": ["多个网站之间如何共享会员帐户及基本信息？请高人指点", ["两个地方门户网站，相互独立，目前有意向合作，让会员之间可以相互登录帐号，这是第一步；以后如何服务能够跟上的话或者效果不错的，可以会员信息共享，甚至活动记录等信息都可以。", "\n\n", "目前，准备用接口使会员相互可以登录，不知道如何做是比较安全一点的！", "\n\n", "如果可以以后的话，是否有更好的办法？", "\n\n", "请多多指点？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以实现&amp;#xff0c;运行python文件就不用说了&amp;#xff0c;停止运行是当程序运行的时候会生成一个进程id&amp;#xff0c;把这个进程id杀死就行&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["请问python web 的flask框架 可以实现这个需求吗？", ["假设html页面上一个", "表单框", "，一个表单", "提交按钮", "，一个", "停止按钮", "。", "\n", "当点击", "提交按钮", "的时候，触发运行一个独立的python文件，假设为 a.py ，并把表单框里的值，做为参数提交给 a.py文件里的 aaa()函数。当按停止按钮的时候，a.py这个文件停止运行。", "\n", "请问可以实现吗？该怎么做呢？谢谢"]], "Tag": "算法设计"}
{"Answer": "望远镜的倍率 = 物镜焦距 / 目镜焦距\r\n如果目镜焦距不可变，那么变物镜焦距就是变倍，", "Konwledge_Point": "树中的独立集", "Question": ["变焦过程不是变倍的过程吗？", ["前段时间唱过一系列的资料查找，了解到变焦过程就是变倍的过程，意思就是把", "\n变倍看作是当前焦距是最小焦距的多少倍数。但是今天看到一个论文内参数估计时，", "\n作者把变焦，变倍当作两个独立的参数自变量，让我很不解~~~求指导。不明白，", "\n反问我的别来~    今天看到别人设计的软件，居然变倍和变焦可以单独调节我就懵逼了"]], "Tag": "算法设计"}
{"Answer": "如果使用的session，那是做不到的。因为persistent context会根据identifier来保证context里一个identifier只能对应一个entity。\r\n\r\n你可以试试statelesssession。关闭persistent context。这样就可保证独立性了。但是这样会带来额外的工作量。请慎重。\r\n\r\n又或者你显示的evict 某个entity，这当然要你小心设计代码了。", "Konwledge_Point": "树中的独立集", "Question": ["hibernate 用交叉连接查询的重复数据问题。表达不清，请进来看", ["现在使用交叉连接查询出一个list，list里面放的是对象：A、B、C、D、E", "\n其中A和C、B和D的主键是一样，所以AC和BD分别指向了同一个对象，改变A跟B的属性，C跟D都会跟着改变", "\n现在的问题是我想各个对象都独立出来，改那一个其它的都不会受影响。应该怎样做啊", "\n不知道有没有表达清楚"]], "Tag": "算法设计"}
{"Answer": "public static int dip2px(Context context, float dpValue) {\r\n\t\tfinal float scale = context.getResources().getDisplayMetrics().density;\r\n\t\treturn (int) (dpValue * scale + 0.5f);\r\n\t}\r\n\t\r\n\tpublic static int px2dip(Context context, float pxValue) {\r\n\t\tfinal float scale = context.getResources().getDisplayMetrics().density;\r\n\t\treturn (int) (pxValue / scale + 0.5f);\r\n\t}", "Konwledge_Point": "树中的独立集", "Question": [" px到dp和dp到px的转换问题", ["我在计算一个像素的变换量，然后想定义独立的像素密度。格式如下：", "\n\n", "(px to dp): dp = (int)(px / (displayMetrics.densityDpi / 160)); \n", "\n\n", "但是不能运行，显示的不能被0整除.", "\n我用如下方法实现dp到px的转换：", "\n\n", "px = (int)(dp * (displayMetrics.densityDpi / 160));\n", "\n\n", "大家能给我点指点吗？不胜感激。"]], "Tag": "算法设计"}
{"Answer": "肯定得设置专人 写总体的css 然后各自独立的css自己维护 这样页面才能统一。", "Konwledge_Point": "树中的独立集", "Question": ["小型团队，如何协调统一CSS文件?", ["一个小型项目团队(<8人)，每个人负责多个业务，按照如下三种方法来设计样式", "\n\n", "方法一：按照页面区分CSS文件", "\n\n", "方法二：按照业务区分CSS文件", "\n\n", "方法三：设置独立前端开发者做此事", "\n\n", "结果经常出现CSS文件过多，或者命名不统一，", "\n\n", "或者样式重复，项目后期还要进行合并和重新命名等问题，在项目运行时很难维护。", "\n\n", "是否有更好的方法，解决这些问题?"]], "Tag": "算法设计"}
{"Answer": "Rails 2.3开始支持Rails Engines plugin，即你可以把一个应用当作plugin嵌入到另一个应用中。http://railscasts.com/episodes/149-rails-engines中有详细的介绍。", "Konwledge_Point": "树中的独立集", "Question": ["关于多个rails app整合？", ["我们都知道，PHP,ASP网站多个app整合比较简单，比如已有一个site,需要增加一个bbs，只需要在site下增加一个bbs目录，就可以独立安装bbs并正常运行。", "\n\n", "问题来了：如果我用rails做好了一个网站site，现在我需要把例如Beast之类的bbs整合进site，有没有什么好的办法？", "\n\n", "自己重新写代码毕竟要花点时间..呵呵", "\n\n", "谢谢大家！！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;br /&gt;你说的应该是Ubuntu。其实是连接的Vsftp/ftp服务【默认端口21】&lt;br /&gt;filezilla只是客户端工具&amp;#xff0c;类似你的QQ访问QQ服务器一样。&lt;br /&gt;具体参考&amp;#xff1a;&lt;a id=\"textarea_1674486418736_1674486733266_0\" target=\"_blank\"&gt;&lt;span class=\"md_link_url\"&gt;http://t.csdn.cn/CDGYe&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于Linux，Win的filezilla问题", ["环境：Linux的乌班图", "Win XP", "\n", "网课上面教了win安装filezilla，然后打开，然后连接乌班图输入了IP，用户名和端口，在端口这里人家填了21，filezilla的默认端口是21，这里我知道。我对端口的理解是应用的独立编号，如果说乌班图没有安装FileZilla，那他这个应该连不上，既然能连接成功，是因为网课人家自己给乌班图安装了filezilla还是乌班图自带FileZilla？"]], "Tag": "算法设计"}
{"Answer": "你就是纳闷父子进程是独立的，但是为什么信号量操作却可以共用是吧。\r\n\r\n是这样的，你不管在哪个进程创建了信号量，对这个信号量分配的句柄是由操作系统统一管理的。\r\n\r\n你应该把父子进程看成两个独立的进程，不管是谁创建的信号量，对于一个操作系统内，都是一样的。", "Konwledge_Point": "树中的独立集", "Question": ["想请问linux应用程序使用信号量实现PV操作的问题", ["我的问题是，比如实现进程的同步，我在创建子进程之间创建信号量，在fork之后，不是父子进程拥有独立的数据空间吗？", "\n那么父子进程的PV操作如何影响同一个信号量的呢，比如父进程先P操作，若信号量初始值为0，此时为0-1=-1，但是这个不是父进程的吗？", "\n子进程为什么其中的信号量也-1了呢？", "\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先对牌进行排序&amp;#xff0c;再逐个比较就可以了哈&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"hljs language-cpp\"&gt;PUKE p[3];\n\tPUKETYPE pukeType;\n\tvoid calcType()//计算牌力\n\t{\n\t\tif(p[0].num &amp;#61;&amp;#61; p[1].num)\n\t\t{\n\t\t\tif(p[1].num &amp;#61;&amp;#61; p[2].num)\n\t\t\t\tpukeType &amp;#61; TN;  //三张相同&amp;#xff0c;三张\n\t\t\telse\n\t\t\t\tpukeType &amp;#61; DZ;\t//两张相同&amp;#xff0c;对子\n\t\t}\n\t\telse if(p[1].num &amp;#61;&amp;#61; p[2].num) //两张相同&amp;#xff0c;对子\n\t\t\tpukeType &amp;#61; DZ;\n\t\telse  //三张都不相同的情况&amp;#xff0c;先比较是否顺子&amp;#xff0c;再比较是否同花\n\t\t{\n\t\t\t//特例判定&amp;#xff0c;不符合递减顺序的顺子\n\t\t\tif(p[0].num &amp;#61;&amp;#61; 14 &amp;amp;&amp;amp; p[1].num &amp;#61;&amp;#61; 3 &amp;amp;&amp;amp; p[2].num &amp;#61;&amp;#61; 2)\n\t\t\t{\n\t\t\t\tif(p[0].huase !&amp;#61; p[1].huase || p[1].huase !&amp;#61; p[2].huase)\n\t\t\t\t\tpukeType &amp;#61; SZ;\n\t\t\t\telse\n\t\t\t\t\tpukeType &amp;#61; THS;\n\t\t\t}\n\t\t\telse if((p[0].num - p[1].num)&amp;#61;&amp;#61;1 &amp;amp;&amp;amp; (p[1].num - p[2].num)&amp;#61;&amp;#61; 1) //如果递减排序\n\t\t\t{\n\t\t\t\tif(p[0].huase !&amp;#61; p[1].huase || p[1].huase !&amp;#61; p[2].huase)\n\t\t\t\t\tpukeType &amp;#61; SZ;\n\t\t\t\telse\n\t\t\t\t\tpukeType &amp;#61; THS;\n\t\t\t}\n\t\t\telse if(p[0].huase &amp;#61;&amp;#61; p[1].huase &amp;amp;&amp;amp; p[1].huase &amp;#61;&amp;#61; p[2].huase) //如果花色相同为同花\n\t\t\t{\n\t\t\t\tpukeType &amp;#61; TH;\n\t\t\t}\n\t\t\telse \n\t\t\t\tpukeType &amp;#61; ZP;\n\t\t}\n\t\t//\n\t}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;参考一下&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["三张牌比大小游戏，怎么计算牌力？", ["9\n\nWeb版式规费大锅6惠重时。\n\n0步面口安\n\n.扑克牌作业\n\n规则复杂度的最低标准，比大小，要求如下。\n\n扑克牌。使用一副去掉大小王的扑克牌，共52张牌。\n\n2-4人， 可只支持固定人数，每人三张牌，比大小\n\n牌型，由大到小分别为:。\n\n1)同花顺:花色相同的顺子，黑桃456.红桃A23.。\n\n(2)三张:三张点相同的牌，AAA. 222\n\n3)顺子，花色不完全相同的顺子，里桃5红桃6万片7。 “\n\n(4)同色:花色相同，非顺子，呈桃368, 方片945.。\n\n(5) 对子:对子:带有两张点相同的牌，223, 334.\n\n(6) 收牌，三张牌不组成以上任何类型的牌。。\n\n牌点从大到小依次为，A. K、Q、小10.9.8.7.6、5.4.3.2.先比牌型，牌型靠前面的胜:同样牌型则比牌点大小。 例如。\n\n” (1)甲，同色，已:对子，甲胜(花色靠前的花色大)。\n\n(2甲，对223. 已对子334.已胜(对子大)，\n\n3)甲， 对于885己对子884.甲胜(对子相等，单牌大)，\n\n司甲，触牌087.己散牌094.已胜(最大牌相等，第二大牌大)“可以用规则复杂度高于上述要求的某种朴克牌打法完成扑克牌程序。要求建议两人一组。也可以独立完成。。\n\n面g 100%0\n\n中文中国"]], "Tag": "算法设计"}
{"Answer": "内核里就没有进程调度、线程的概念了，它们当然是有并发的。因为windows不是开源的，所以具体的实现没法得知，但是你可以参考reactos的实现。", "Konwledge_Point": "树中的独立集", "Question": ["新手，请教WINDOWS内核的一个问题。", ["新手，请问WINDOWS内核里的进程线程管理器组件，内存管理器组件，I/O管理器组件，等等这些组件都是一个个独立的模块吗？", "\n如果是，这些模块不都是在一个程序ntoskrnl.exe里的吗？没有办法并行运行啊？在一个程序里这些模块只能依次顺序执行啊？可是按道理这些模块应该同时运行啊？难道这些模块是形成了线程并行运行的吗？请专家给解释一下，谢谢了！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;好多排序方法都是针对一维数组的&amp;#xff0c;你都可以直接用啊&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;void sorts(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a[],&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;)\n{\n      for(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n          for(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-built_in\"&gt;n&lt;/span&gt;-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n          {\n                &lt;span class=\"hljs-built_in\"&gt;if&lt;/span&gt;(a[j] &amp;gt; a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n                {\n                    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt; &amp;#61; a[j];\n                    a[j] &amp;#61; a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                    a[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;;\n                }\n          }\n}\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; main()\n{\n      &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;#61;  { {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;},{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;},{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;} };\n      for(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;i&amp;#43;&amp;#43;)\n            sorts(a[i],&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n      return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["c语言关于二维数组的排序", ["比如我有一个二维数组，为 { {2,1,3},{4,2,3},{2,5,1} }", "如何根据二维数组的每一个一维数组元素排序呢", "像上面的我就想得到{{1,2,3},{2,3,4},{1,2,5}}这种形式，每一个一维数组为间隔开独立的，根据每一个一维数组里面的元素进行排序", "\n", "希望能够教导下这样的void函数怎么写"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你说的后者的模式其实也是常用的&amp;#xff0c;个人感觉feature分支其实更主要还是用于临时修复一个bug&amp;#xff0c;所以临时创建一个分支&amp;#xff0c;用完就删&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于git多人协作分支管理的疑问", ["百度上的模式都是 一个开发分支develop，然后每个成员都以develop分支创建feature分支，功能开发完成后就删除自己的feature分支。 感觉这样就有很多feature分支在创建、删除。", "\n", "有个疑问是，为什么不能每个成员就一个独立开发分支，所有自己负责的功能都在自己的分支，完成一个功能点就合并到develop分支，不用删除，继续开发下一个功能。这样分支不就比较少，也可以管理吧？"]], "Tag": "算法设计"}
{"Answer": "基本上没有几个网站还会用frame，frame与css的设计没有关系，不会影响，主要是由于frame在一个界面中你会用到多个html文件，请求的文件过多（假设每个html文件都有各自的CSS文件）影响加载的速度，在布局上，也没有使用frame的必要，都能实现", "Konwledge_Point": "树中的独立集", "Question": ["现在的页面用html的iframe标签多吗，使用iframe会影响css设计吗", ["比如这个页面：", "http://keenthemes.com/preview/metronic/theme/admin_1/index.html", "\n\n", "它整个页面其实分成上工具条、左菜单栏和右边的实际内容。", "\n我想把菜单和实际内容都各用一个iframe框起来", "\n\n", "这样会不会影响css的设计？", "\n这个页面是bootstrap框架做的一个范例，但是它一个frame都没用，左菜单所有按钮都对应一个独立的页面。不知道它这样设计是不是因为frame会影响css效果？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;截个图吧&amp;#xff0c;启动好了怎么会找不到呢&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["创建的AVD虚拟机，找不到 设置 与 文件管理 启动图标", ["创建的AVD虚拟机，找不到 设置 与 文件管理 启动图标，怎么安装APK呢？", "\n", "创建的AVD，已经能作为独立的应用启动起来了。", "用的硬件配置是Pixel 6 Pro，系统映像是 API 28的。", "\n", "现在的问题是：", "启动好的AVD里，找不到像手机上的 设置 启动图标，也找不到 文件管理 启动图标。", "在Device Manager中将apk传到 AVD的Download文件夹后，如何在AVD里定位到它，并开始安装呢？", "\n", "谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你前面的测试完了&amp;#xff0c;就不要再测试了&amp;#xff0c;把test去掉&amp;#xff0c;然后后面的要先调用前面的函数&lt;br /&gt;不管你后续是多复杂的一个功能&amp;#xff0c;总要从先登录开始吧&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["python自动化测试时，怎么让每个用例都保持登录状态？", ["现在正在学习自动化测试，用python编写代码，现在可以在京东商城实现自动登录。但是如果想执行其他用例，就是登录后的点击什么的，我不知道如何让每个独立的用例都保持登录状态", "这是自动登录代码：", "获取cookie：", "\n", "# -*- coding: utf-8 -*-", "\n\n", "from", " selenium ", "import", " webdriver\n", "from", " time ", "import", " sleep\n", "def", " ", "get_cookies", "():\n    driver = webdriver.Chrome()\n    driver.maximize_window()  ", "# 窗口最大化", "\n    driver.implicitly_wait(", "5", ")  ", "# 设置隐式等待", "\n    url = ", "'https://www.jd.com/'", "\n    driver.get(url)\n    driver.find_element_by_class_name(", "'link-login'", ").click()  ", "# 不要加s", "\n    driver.find_element_by_link_text(", "'账户登录'", ").click() ", "# a标签可以直接用文本", "\n    ", "# driver.find_element_by_id('longname').click()", "\n    username = driver.find_element_by_id(", "'loginname'", ")\n    username.clear() ", "#如果有默认值，需要清空", "\n    username.send_keys(", "'15230199768'", ")\n    password =driver.find_element_by_id(", "'nloginpwd'", ")\n    password.clear()\n    password.send_keys(", "'liqiushui123'", ")\n    sleep(", "20", ")\n    cookies = driver.get_cookies()\n    ", "print", "(cookies)\n", "if", " __name__ == ", "'__main__'", ":\n    get_cookies()\n    ", "# sleep(100)", "\n\n\n\n这是用cookie登录代码：\n\n\n```python\n", "# -*- coding: utf-8 -*-", "\n", "from", " selenium ", "import", " webdriver\n", "from", " time ", "import", " sleep\n\n", "'''\n1、通过selenium获取登录成功后的cookie信息\n2、管理cookie信息\n3、调用cookie信息，实现自动登录，从而完成其他需要登陆的测试用例\n'''", "\n\n", "def", " ", "login", "():\n    ", "# 这是一个新打开的页面， 用getJingDongLogin中获取的cookie", "\n    ", "# expiry是cookie的有效期，想要永久使用：", "\n    ", "# 1、可以删除expiry 2、或者再去getJingDongLogin获取新的cookie复制过来", "\n\n\n\n    cookies =[‘我的cookie’]\n\n    driver = webdriver.Chrome()\n    driver.maximize_window()\n    driver.implicitly_wait(", "5", ")  ", "# 设置隐式等待", "\n    url = ", "'http://www.jd.com'", "\n    driver.get(url)\n    sleep(", "5", ")\n    ", "# 清除浏览器中存在的cookie信息", "\n    driver.delete_all_cookies()\n\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    login()\n\n\n", "\n", "↑上面就登录成功了\n**以下是其他用例的代码**\n\n```python\n", "# -*- coding: utf-8 -*-", "\n", "import", " os\n", "import", " time\n", "import", " unittest\n", "from", " selenium ", "import", " webdriver\n", "from", " dateutil.parser ", "import", " parse\n", "from", " BeautifulReport ", "import", " BeautifulReport\n", "import", " loginWithCookies\n\n", "class", " ", "Test", "(unittest.TestCase):\n\n    ", "# 启动函数，每个用例测试前，都会执行该函数", "\n    ", "def", " ", "setUp", "(", "self", "):\n        self.browser = webdriver.Chrome()\n        self.browser.set_window_size(", "1920", ", ", "1080", ")\n        self.starttime = parse(time.strftime(", "\"%Y-%m-%d %H:%M:%S\"", ", time.localtime()))\n        ", "print", "(", "\"开始测试时间：\"", ", self.starttime)\n        self.browser.get(", "\"https://www.jd.com/\"", ")\n        time.sleep(", "3", ")\n\n    ", "# 结束函数，每个用例测试结束后，都会执行该函数", "\n    ", "def", " ", "tearDown", "(", "self", "):\n        time.sleep(", "3", ")\n        self.browser.quit()\n        self.endtime = parse(time.strftime(", "\"%Y-%m-%d %H:%M:%S\"", ", time.localtime()))\n        ", "print", "(", "\"测试结束时间：\"", ", self.endtime)\n        totaltime = (self.endtime - self.starttime).total_seconds()\n        ", "print", "(", "\"总时长：\"", ", totaltime, ", "\"秒\"", ")\n\n\n\n\n    ", "# 测试用例1：以test_开头", "\n    ", "def", " ", "test_01", "(", "self", "):\n        ", "u\"\"\"测试用例1\"\"\"", "\n        ", "# self.save_img('测试用例1')", "\n        self.browser.find_element_by_partial_link_text(", "'秒杀'", ").click()\n        ", "# self.browser.find_element_by_id(\"loginname\").send_keys(\"15230199768\")", "\n        time.sleep(", "1", ")\n\n", "if", " __name__ == ", "'__main__'", ":\n    unittest.main()\n\n\n", "\n", "这样的test_01没办法保持登录，我也不知道咋搞，现在脑子比较混乱，求解答"]], "Tag": "算法设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/txiejun/article/details/4861257'&gt;Flex（AS 3.0）实现快捷键功能--监听键盘事件&lt;/a&gt;&lt;br/&gt;----------------------biu~biu~biu~~~在下问答机器人小D，这是我依靠自己的聪明才智给出的答案，如果不正确，你来咬我啊！", "Konwledge_Point": "树中的独立集", "Question": ["as3.0键盘事件监听不响应", ["\n在祯上写代码上的时候可以响应人物可以走，但是要求必须做独立的as文件，所以我放在了主类里面，但是怎么放都不响应键盘事件，只运行ENTERFRAME。求问这是为什么。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;无线无源,通讯距离又长&amp;#xff1f; 这么好的产品&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["无线传感器节点NLM300通讯距离有多远？", ["网关中继器，是通过LORA传输。", "   NLM300 是专门为工业或工程现场大量使用的传感监测系统而设计。 提出了“ 无线无源” 的解决方案，“ 无线” 是指利用自建网络物理线缆使普通传感器具备无线功能， “ 无源” 是指设备内置了自放电率较低的电池并且具有低功耗设计，可长时间独立工作。", "\n", "   无线传感器节点NLM300最多可连接4通道传感器信号，每个通道可配置为电压、电流（20mA）、振弦、热敏电阻NTC、脉冲、差阻，几乎适用于目前所有原理的传感器。无线传感器节点NLM300的无线网络为Lora，并有对应的网络转换汇集服务器设备，将多台无线传感器节点NLM300的数据汇集后转为手机网络远传到数据中心。无线传感器节点NLM300有两种工作模式，定时自动采集发送和被动式无线唤醒采集发送。无线传感器节点NLM300内置电池，更换一次电池可独立工作3~5年，若连接外部电池扩展，基本可实现一次安装永久采发。"]], "Tag": "算法设计"}
{"Answer": "这个应该是网站对压力的抵抗能力不足，你可以检测一下访问人数多的情况下内存耗用情况，估计应该是消耗得比较厉害，升级的思路我觉得还是要从代码下手，减少与数据库的交互，减少前后端的交互，还有一些变量不需要时及时释放，减少后台的打印语句，增加缓存方案等等", "Konwledge_Point": "树中的独立集", "Question": ["PHP程序，访问人一多，就一会能正常访问，一会访问不了，页面变成空白。", ["今天用一个PHP的网站程序做了个小活动，人数不多还能正常访问，人数稍微多一点，就不行了。", "\n网站程序访问不了，现象是： 点击页面，进度条读取很慢，等了个十几秒就变成了空白页。", "\n\n", "过一会自动 就好了（重启服务器，或者 回收应用池也会好）", "\n\n", "是不是服务器配置的问题？ 配置是 4G内存，4核CPU, 4M独立带宽。  要升级的话，应该升级哪里哦？", "\n\n", "或者是程序有问题？ 怎么才能检测出问题来呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;把第26行的continue换成break就可以啦&lt;br /&gt;因为第24行的判断已经说明第一次进入的i&amp;#43;1是最少的数量了&amp;#xff0c;所以不需要继续吃苹果&amp;#xff0c;直接退出循环&amp;#xff0c;进行下一次输入&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["谁能帮我看看出什么问题了", ["有没有", "da lao", "帮我看下", "zhe ti", "为什么错了", "\n", "Description", "lao shi", "给里面的小朋友们布置了一场游戏，A第一个站了出来，游戏是这样的，总共有n个苹果，吃第i个苹果可以得到a[i]的分数。", "假设A是大胃王，意味着他可以一直吃不会吃撑。", "现在会有q次询问，每次询问最少吃多少个苹果可以得到不小于x的得分，无法满足就输出-1.", "注意：在每次询问中，不能多次吃同一个苹果，每次询问互相独立，不会因为第一次询问吃了几个后苹果不够的情况。", "Format", "Input", "第一行输入n和q，代表苹果总数和询问次数", "第二行nn个数字a[i],代表吃第ii个苹果的得分。", "接下来q行qq个数字，每次输入一个xx，代表得分。具体可参考题目描述", "Output", "一共输出qq行，每行一个数字。", "若可以得到xx的得分，则输出最少吃的苹果数量。", "否则输出-1", "Samples", "输入数据 1", "8 7", "4 3 3 1 1 4 5 9", "1", "10", "50", "14", "15", "22", "30", "输出数据 1", "1", "2", "-1", "2", "3", "4", "8", "输入数据 2", "4 1", "1 2 3 4", "3", "输出数据 2", "1", "Explain", "针对样例2，只有一次询问，需要达到的得分是3，此时我们可以选择吃1和2，或者单独吃3或者单独吃4都可达到目标，由于选择最少的数量，所以单独吃3或者4都可以。", "\n", "我的代码：", "​", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std; \n", "bool", " ", "cmp", "(", "int", " x,", "int", " y)", "{\n    ", "return", " x>y;\n}\n", "int", " ", "main", "()", "{\n    ", "int", " n,qs,num=", "0", ";\n    cin>>n>>qs;\n    ", "int", " a[n];\n    ", "for", "(", "int", " i=", "0", ";i<n;i++){\n        cin>>a[i];\n        num+=a[i];\n    }\n    ", "sort", "(a,a+n,cmp);\n    ", "for", "(", "int", " p=", "0", ";p<qs;p++){\n        ", "int", " m,sum=", "0", ";\n        cin>>m;\n        ", "if", "(m>num) cout<<", "\"        \"", "<<", "-1", "<<endl;\n        ", "else", " ", "if", "(m==num) cout<<", "\"        \"", "<<n<<endl;\n        ", "else", " ", "if", "(m==", "0", ") cout<<", "\"        \"", "<<", "0", "<<endl;     ", "//9 5 4 4 3 3 1 1", "\n        ", "else", "{\n            ", "for", "(", "int", " i=", "0", ";i<n;i++){\n                sum+=a[i];\n                ", "if", "(sum>=m){\n                    cout<<", "\"        \"", "<<i+", "1", "<<endl;\n                    ", "continue", ";\n                }\n            }\n        }\n    }\n    ", "return", " ", "0", ";\n}\n", "\n", "运行后(前面有一长串空格的是输出，用的是测试样例1)：", "\n", "\n", "粗体是屏蔽词，忽略就好"]], "Tag": "算法设计"}
{"Answer": "对还款计划进行判断，有两个办法：\r\n1） 如果还款计划已经确定，就将其读入；然后按时间顺序排列，将就近的一个设置为 Alarm 之类；\r\n2） 按你所说，使用线程/应用进行定时检测。", "Konwledge_Point": "树中的独立集", "Question": ["关于系统架构的问题，请诸公教我", ["有个P2P系统，用户借款成功之后，要还款，还款的时候有可能是分期还得。", "\n比如今天12点还100，明天8点还200.这个还款计划都是动态的，时间都不一样。", "\n\n", "请问这个 部分应该怎么设计？", "\n\n", "定时任务，马上就想到quartz啊，但是这么多怎么弄？", "\n要不然在写一个独立的应用，死循环一直跑，一分钟跑一次，每次运行查询最新的还款计划，有的话，就执行之？", "\n\n", "如何做，请诸公教我！"]], "Tag": "算法设计"}
{"Answer": "不是很清楚你这是什么意思，但是感觉上a b c是三个进程。", "Konwledge_Point": "树中的独立集", "Question": ["这是一个关于操作系统记录型信号量的问题", ["\n\n", "这是我写的一个记录信号量代码的例子，只是通过start和end完成A,B,C函数的并发，没有完成进程同步。", "\nA,B,C是原语，然后等待用户进程调用吗？可是这样的话，start和end对它并发干嘛；A,B,C是进程，然后不用调用，自己独立被cpu执行吗？这样的话如何开启多进程呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;构建了VLAN或者局域网分开了没有&amp;#xff1f;没有&amp;#xff0c;就把不同局域网主机段分开&amp;#xff0c;或者网关设置成分开。网络设备与网络设备之间用比较好的网线&amp;#xff08;千兆网线&amp;#xff09;。前面都试过&amp;#xff0c;你就换交换机或者路由器吧。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["企业局域网上网速度慢，怎么解决", ["两个核心路由器分别组构成两个小的局域网之间独立不互通，问题是构建局域网线路都是通的，上网速度提不上去，还会出现打不开网页的问题，接入的是一根百兆企业宽带、两根500兆家用宽带 ，供90台电脑设备，另外小组网 由三个500兆家用带宽接三个TP 路由器分别供三个办公室，每个办公室30-40人左右 不到，出现早上集体上线会卡，打开网页打不开，没有接入无线设备。求解决方案。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;同问&amp;#xff1f;如何解决&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于this指向的面试题", ["想问的问题是这个this指向的面试题中第三个person.foo2()的结果为什么是person1呢，为什么往上层作用域查找后的this指向person1呢？请详细解答一下", "\n", "var name = 'window'", "function Person(name) {", "this.name = name", "this.foo1 = function() {", "console.log(this.name)", "}", "this.foo2 = () => console.log(this.name)", "this.foo3 = function() {", "return function() {", "console.log(this.name)", "}", "}", "this.foo4 = function() {", "return ()=>{", "console.log(this.name)", "}", "}", "}", "\n", "var person1 = new Person('person1')", "var person2 = new Person('person2')", "\n", "person1.foo1()", "person1.foo1.call(person2)", "\n", "person1.foo2()", "person1.foo2.call(person2)", "\n", "person1.foo3()()", "person1.foo3.call(person2)()", "person1.foo3().call(person2)", "\n", "person1.foo4()()", "person1.foo4.call(person2)()", "person1.foo4().call(person2)", "\n", "面试题三主要考察的是new绑定this的指向", "\n", "person1.foo1(): person1对象调用，隐式绑定，this指向person1，所以输出person1", "person1.foo1.call(person2): 有person1调用，隐式绑定，但是person2的call方法的显式绑定优先级更高，所以输出person2", "person1.foo2(): person1对象调用foo2，foo2是箭头函数没有this，从上层作用域查找，函数是有作用域的，与面试题二中的第三题不同，所以是隐式绑定，输出person1", "person1.foo2.call(person2): 尽管使用call方法试图显式绑定person2，但foo2是箭头函数没有this，还是用的隐式绑定，输出person1", "person1.foo3()(): 调用了foo3，返回了一个方法，又执行了，是独立函数调用，默认绑定，输出window", "person1.foo3.call(person2)(): person1的foo3用call显式绑定了person2，但是独立函数调用，默认绑定，输出window", "person1.foo3().call(person2): person1.foo3()直接执行了，再显式绑定，this指向的就是person2，输出person2", "person1.foo4()(): person1先执行了foo4，返回的是一个箭头函数，没有this，需要从上层作用域找，隐式绑定person1，输出person1", "person1.foo4.call(person2)(): 给foo4这个函数显式绑定了person2，再执行这个函数，执行的是箭头函数，没有this，从上层作用域找，找的是先前绑定的person2，输出person2", "person1.foo4().call(person2): 执行foo4，使用隐式绑定person1，因为执行的函数是箭头函数，所以后面的显式绑定person2不生效，输出person1", "\n", "想问的问题是第三个person.foo2()的结果为什么是person1呢，为什么往上层作用域查找后的this指向person1呢？请详细解答一下"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;能用springboot写一个带数据库的用户注册和登录的功能就可以找初级工作了。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["求解应届毕业生入职java开发岗的技术要求", ["如题，十分迷惑，到底应届大学生需要掌握什么知识，掌握到什么程度才可以找到一份Java开发岗的工作？", "条件：目标广州，薪资4.5～6k", "\n", "Java需要掌握多线程，注解反射，设计模式，jdbc，Tomcat,mybatis,spring,springboot,springmvc,springcloud的这些所有东西才可以吗？还是其中一部分？", "然后计算机网络协议方面，前端，JVM，linux指令一些内容，还有算法？", "项目这一块需要用到框架自己独立开发部署啥的嘛？", "\n", "十分疑惑，望过来人解惑。某顿首。"]], "Tag": "算法设计"}
{"Answer": "filter", "Konwledge_Point": "树中的独立集", "Question": ["后台流量统计", ["后台流量统计功能增加：", "\n（1）每日的IP访问量（独立IP）统计；", "\n（2）当日平均每个访问者浏览的页数；", "\n（3）日、月、年总数统计（IP和PV）；", "\n（4）访问明细：IP、上站时间、来路、入口网地；", "\n（5）搜索引擎分布状况以及各占总访问量的百分比；", "\n（6）关键词排序；", "\n（7）访问者地区排名及所占百分比；（8）回头率分析。", "\n胡培提供技术支持", "\n\n", "JSP如何入手，提供思路即可，各位XDJM?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/810609399246156.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["探究realloc用法，realloc函数对同一个地址重复操作会返回NULL！", ["一、在程序设计中，某次意外操作realloc操作同一个地址，造成了其返回NULL异常。", "realloc传入的指针与pCommandTemp指针所赋值不一致，在第三次realloc时必出现异常，", "重启10次，现象稳定。", "\n", "for", "(StopActionChild=mxmlFindElement(AutoChild,tree,", "\"command\"", ",NULL,NULL,MXML_DESCEND);\n                        StopActionChild!=NULL;\n                        StopActionChild=StopActionChild->next->next)\n                    {\n                        ", "pCommandTemp", " = ", "(CommandInfo_t *)", "realloc", "((m_ProcInfos + m_ProcInfoNum)->ProcStopActions,sizeof(CommandInfo_t)*(CommandNum+", "1", "))", ";\n                        ", "if", "(!pCommandTemp)", "\n                        {\n                            ", "LOG_ERR", "(", "\"[appAutoProcLoadConfig-->realloc] pCommandTemp realloc error.\\n\"", ")", ";\n                            ", "free", "(m_ProcInfos)", ";\n                            ", "m_ProcInfos", "=", "NULL", ";\n                            ", "mxmlDelete", "(tree)", ";                                /*删除", "xml", "文件句柄*/\n                            ", "fclose", "(fp)", ";                                        /*关闭文件*/    \n                            ", "return", " -1;\n                        }\n                        ", "(m_ProcInfos+m_ProcInfoNum)", "->", "JudgeParamInfos->StopCommands = pCommandTemp;\n                        memcpy", "(((m_ProcInfos+m_ProcInfoNum)->JudgeParamInfos->StopCommands+CommandNum)->Name, mxmlElementGetAttr(StopActionChild,", "\"name\"", "),", "30", ")", ";\n                        ", "memcpy", "(((m_ProcInfos+m_ProcInfoNum)->JudgeParamInfos->StopCommands+CommandNum)->Type, mxmlElementGetAttr(StopActionChild,", "\"type\"", "),", "30", ")", ";\n                        ", "((m_ProcInfos+m_ProcInfoNum)->JudgeParamInfos->StopCommands+CommandNum)", "->", "Tab = atoi(mxmlElementGetAttr(StopActionChild,", "\"tab\"", "));\n                        ", "((m_ProcInfos+m_ProcInfoNum)->JudgeParamInfos->StopCommands+CommandNum)", "->", "Code = atoi(mxmlElementGetAttr(StopActionChild,", "\"code\"", "));\n                        CommandNum++;", "/*停止动作计数递增*/", "\n                    }\n                    ", "(m_ProcInfos+m_ProcInfoNum)", "->", "JudgeParamInfos->StopCmdNum = CommandNum;\n\n", "\n", "调试结果：", "\n", "\n", "二、编写独立realloc测试程序，首先malloc一个commad结构体，然后重复用commad地址realloc，会在第三个循环出现异常，重启10次，故障现象稳定。", "\n", "void exam_01()\n{\n       CommandInfo_t * pCommandTemp=NULL;\n       CommandInfo_t *  command=(CommandInfo_t *  )malloc(sizeof(CommandInfo_t *));\n       ", "int", " i;\n       ", "for", "(i=", "0", ";i<", "100", ";i++)\n        {\n              pCommandTemp=(CommandInfo_t *)realloc(command,sizeof(CommandInfo_t )*(i+", "1", "));\n              LOG_WARN(", "\"\\n<>realloc test: < pCommandTemp:0x%x,m_ProcInfoNum:%d,CommandNum:%d>\n              \\n\"", ",pCommandTemp,", "0", ",i);\n             ", "if", "(!pCommandTemp)\n              {\n                        LOG_ERR(", "\"pCommandTemp realloc error.\\n\"", ");\n                        ", "return", ";\n              }\n        }\n}\n", "\n", "调试结果：", "\n", "\n", "关于realloc对同一个地址重复操作会出现返回NULL结果疑问，目前寻找资料未能找到合理解释，该种现象的原理？"]], "Tag": "算法设计"}
{"Answer": "var constructor = function(){\r\n  var name='eric';\r\n\r\n  constructor.property.getName = function(){\r\n    return name;\r\n  }\r\n\r\n  constructor.property.setName= function(inName){\r\n    name= inName;\r\n  }\r\n  return this;\r\n}\r\n\r\nvar obj = constructor();\r\nobj.getName();//eric\r\nobj.setName('naruto');//naruto\r\n\r\nvar obj2 = constructor();\r\nobj2.getName();//eric\r\n\r\n手写，未测试\r\n如果有疑问，看完下面的链接你一定会了。\r\n[url]http://www.w3school.com.cn/js/pro_js_object_defining.asp[/url]", "Konwledge_Point": "树中的独立集", "Question": ["关于变量共享和不共享的问题", ["var constructor = function(){", "\n  var name='eric';", "\n  function getName(){", "\n    return name;", "\n  }", "\n  function setName(inName){", "\n    name= inName;", "\n  }", "\n  return function(){", "\n    return{", "\n      getName:getName,", "\n      setName:setname", "\n    }", "\n  }", "\n}()", "\n\n", "var obj = constructor();", "\nobj.getName();//eric", "\nobj.setName('naruto');//naruto", "\n\n", "var obj2 = constructor();", "\nobj2.getName();//naruto   但我希望obj1,obj2互相独立，只有getName方法共享，如何才能办到？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;从你的描述来看&amp;#xff0c;你主要担心的是代码安全问题及后期融资问题的话倒不是一定必须马上组建研发团队&amp;#xff0c;理由&amp;#xff1a;&lt;br /&gt;1、关于代码安全问题&amp;#xff0c;虽然代码一直在外包团队那里&amp;#xff0c;你可以通过合作协议、版权协议、保密协议等来保障&amp;#xff1b;事实上你自已组建团队&amp;#xff0c;代码也是在程序员手里&amp;#xff0c;也是要通过保密协议来约定且保障安全、版权&amp;#xff1b;如果要绝对安全只有你自个写代码了&amp;#xff0c;其它都不会知道&amp;#xff0c;哈哈&amp;#xff1b;再从另一个角度上看&amp;#xff0c;外包团队只是根据你的需求产生代码&amp;#xff0c;你是产品的设计者&amp;#xff0c;是产品生态的缔造的者&amp;#xff0c;这才是核心&amp;#xff0c;没有你的指挥产品就无法再进行&amp;#xff0c;这才是产品经理的作用&amp;#xff0c;牛逼的程序员不一定能造出牛逼的产品&amp;#xff0c;程序员很大程度上只是机械的代码生产者。&lt;br /&gt;2、关于后期融资问题&amp;#xff0c;降低成本提高效率等因素考量&amp;#xff0c;只是想做一个产品能演示、能试用或基础使用给投资人看的话&amp;#xff0c;不急着建研发团队也是可以的&amp;#xff0c;等拿到投资了再组建研发团队&amp;#xff1b;对于担心投资人质问技术团队问题&amp;#xff0c;我认为投资人固然会考量技术团队&amp;#xff0c;但如果产品不行&amp;#xff0c;没有市场&amp;#xff0c;再好的技术团队也啥意义&amp;#xff0c;投资人投的是预期的回报&amp;#xff0c;不是投牛逼的技术&amp;#xff1b;另外&amp;#xff0c;可在多次与投资人接触后来验证你的产品的&amp;#xff0c;万一要是不行&amp;#xff0c;调转车头也更容易。&lt;br /&gt;以上我对你担心问题的回复&amp;#xff0c;以下是我对整体发展的一些建议&amp;#xff1a;&lt;br /&gt;1、从长远来看必须要组建自已的技术研发团队&amp;#xff0c;提高沟通效率&amp;#xff0c;才能快速地进行产品版本迭代&amp;#xff1b;&lt;br /&gt;2、这个研发团队最好是能收编现在开发队伍&amp;#xff0c;如果做不到这一点在项目交接方面多费点心&amp;#xff08;比如文档管理方面&amp;#xff1a;详细的系统文档才可以让新团队接手项目进行维护&amp;#xff0c;熟悉系统架构等&amp;#xff0c;进而进行二次开发&amp;#xff09;&amp;#xff1b;&lt;br /&gt;3、可以在外包的同时&amp;#xff0c;自已开始慢慢组建团队&amp;#xff0c;技术团队的组建也不是搭积木&amp;#xff0c;有效的协作也是很重要&amp;#xff0c;当你的自建团队有能力完全进行迭代时就可以不外包了&amp;#xff1b;&lt;br /&gt;4、资金雄厚&amp;#xff0c;当然是组建技术团队好&amp;#xff0c;有好产品又有牛逼的技术团队&amp;#xff0c;肯定是更容易获得投资人的青睐。&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["外包开发1.0版本之后自建技术团队的必要性", ["问题：", "我们在开发一款财务系统软件，将系统拆分成CRM和智能账务处理两个大模块（都开接API接口，统一使用mysql库），委托了两个外包团队。在春节前后会完成1.0版本。（1.0版本不具备实际推广价值，我们将在1.0版本基础上进行试用、总结并开始2.0的开发。2.0与1.0会有较大的改善，也才真正具备市场推广的可能性）", "\n", "由于此款系统我们打算进行市场推广与销售，前期外包是考虑到成本与时效。但后期的代码安全性也是我们不得不考虑的问题，如果一直交由外包公司进行维护与二次开发，这样其手里会一直有最新的源码，这对我们的风险也极大。所以我们在想是不是现在就要开始筹备自有技术团队的搭建。我们初步设想是每个人负责某一块的修改，同时库交由独立的人维护等策略来确保每个人手头的源码都独立且无法运行。", "\n", "想请教的", "\n", "所以想请教，我们如果考量代码的安全性以及后期融资的问题，是不是必须要搭建自己的技术团队？而且现在就要开始筹备。", "感谢。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的输入部分有问题&amp;#xff0c;导致最后的的brr返回为空&amp;#xff0c;puts()输出空字符串报错。&lt;br /&gt;我没太看得懂你do while 循环部分是在做什么&amp;#xff1f;getchar每次只能接收一个字符&amp;#xff0c;但是看你的意思应该是接收一个字符串&amp;#xff0c;而你里面的for循环限定了你的i不可超过20&amp;#xff0c;那么你for上面的那句*(brr &amp;#43; j) &amp;#61; arr &amp;#43; i;有什么作用呢&amp;#xff1f;你的j自增呢&amp;#xff1f;每次都是0你觉得对吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["指针数组赋值，vs15弹出strlen.asm文件", ["C primer plus上一道课后题：", "题目：创建一个函数，实现功能：键入一句话，返回一个指针数组，每个指针数组内元素指向一个独立单词。", "\n", "运行结果及报错内容 ：", "功能基本都实现了，回调指针数组赋值的时候出错。", "\n", "这个是报错框：", "基于vs2015；", "\n", "之后调试几次后vs15不报错了，直接弹出了strlen.asm文件", "\n", "\n", "查阅资料：”请注意，strlen的主循环部分，是以 4 个 char 为一组作为一个DWORD (32 bits) 送到 eax 去检测的，因此要求必须读取 DWORD 时以 4 bytes 对齐，所以如果字符串地址并不对齐，则前面的1~3个char必须逐个字节检测。进入主循环的循环条件相当于以下代码：“", "以下是资料出处", "https://www.cnblogs.com/hoodlum1980/archive/2010/08/04/1792322.html", "\n", "我的理解是在37行处        *(brr + j) = arr + i; 用指针赋值时，每一段指针长度不定，没有对齐导致程序卡住？（一个不是很成熟的想法，汇编才开始学）如果是这个问题，又应该如何解决；或者是尽量避免在指针数组中存储并处理长度不等的指针？", "\n", "源码如下：", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n\n", "char", "** ", "get_alpha", "(", "char", "*, ", "int", " number)", ";\n\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "char", " arr[", "200", "];\n    ", "int", " number;\n    ", "int", " i;\n\n    ", "printf", "(", "\"How many words do you wish to enter?\"", ");\n    ", "scanf", "(", "\"%d\"", ", &number);\n\n    ", "char", "** crr = ", "NULL", ";\n\n    crr = ", "get_alpha", "(arr, number);\n    ", "for", " (i = ", "0", "; i<number; ++i)\n        ", "puts", "(crr[i]);\n    ", "free", "(crr);\n    \n    ", "getchar", "();\n    ", "return", " ", "0", ";\n}\n\n", "char", "** ", "get_alpha", "(", "char", "* arr, ", "int", " number)", "\n", "{\n    ", "char", " ** brr;\n    ", "int", " i = ", "0", ";\n    ", "int", " j = ", "0", ";\n    ", "int", " time = ", "0", ";\n\n    brr = (", "char", "**)", "malloc", "(number*", "sizeof", "(", "char", "*));\n\n    ", "printf", "(", "\"Enter %d words now:\"", ", number);\n    ", "do", " {\n        *(brr + j) = arr + i;\n        ", "for", " (i; i < ", "20", "; ++i)\n        {\n            ", "if", " (i == ", "0", ")\n                ", "for", " (", "int", " u = ", "0", "; u<", "200", "; u++)\n                    arr[u] = ", "0", ";\n            ", "if", " ((arr[i] = ", "getchar", "()) == ", "' '", ")\n            {\n                arr[i] = ", "0", ";\n                ++i;\n                ", "break", ";\n            }\n            ", "else", " ", "if", " (arr[i] == ", "'\\n'", ")", "break", ";\n        }\n        ++time;\n    } ", "while", " (time != number);\n\n    ", "return", " brr;\n}\n\n", "\n", "看了好几遍感觉都没什么问题，还请各位老哥帮帮忙🤦‍♂️，谢谢！"]], "Tag": "算法设计"}
{"Answer": "google搬家，有些服务产生了一定影响，建议到google论坛上发帖问问。", "Konwledge_Point": "树中的独立集", "Question": ["我的网站PR值变0了", ["已经很久没有关注过自己的网站PR值了，今天一个偶然的机会看了一篇文章，文中提到最近google对PR值进行了更新，于是查询了一下，想不到我的网站的PR值由几个月前的2变成0了，但我通过google analysis查看网站的情况时却发现日平均独立访问IP比几个月前翻了一番，真是纳闷！不知道各位javaeye友有没有遇到这样的情况？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/weixin_44847387/article/details/108225668\" id=\"textarea_1629617736847_1629617811911_0\" class=\"md_link_card\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n  &lt;span class=\"md_link_title\"&gt;.bin文件的反汇编记录_neko是只小菜鸡-CSDN博客_bin文件&lt;/span&gt;\n  &lt;span class=\"md_link_desc\" style=\"\"&gt;前言原本打算把IDA的使用与技巧写完&amp;#xff0c;发现其实网上也有很多&amp;#xff0c;这就以后再议吧(主要还是懒&amp;#43;拖延症吧…)工作需要接触的逆向&amp;#xff0c;从开始到现在做的一直是elf格式文件&amp;#xff0c;也不需要脱壳&amp;#xff0c;感觉也比较简单。前两天朋友托帮忙看一个.bin&amp;#xff0c;发现自己现在掌握的其实仅仅冰山一角。将此次工作记录&amp;#xff0c;便于日后学习查阅。一、 一些相关知识点bin、hex、elf文件bin文件是二进制文件&amp;#xff0c;是文件格式binary的缩写&amp;#xff0c;后缀名为&amp;#34;.bin&amp;#34;的文件&amp;#xff0c;表式它是binary格式。通常来说&amp;#xff0c;它的内容是机器代码&amp;#xff0c;汇编语言编译后的结果。&lt;/span&gt;\n  &lt;span class=\"md_flex_card\"&gt;\n  &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n    &lt;span class=\"flex-1\"&gt;\n      &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_44847387/article/details/108225668&lt;/span&gt;\n    &lt;/span&gt;\n  &lt;/span&gt;&lt;/a&gt;&lt;br /&gt;试试这个?&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["谁有“解编译器”？？", ["这几天开发操作系统，想添加读写磁盘的功能，在百度上找了好多，但都要include windows.h", "最近整理文件时，在我的虚拟机旁边发现了这个文件", "据说是16位机器语言编译的，各位兄长有没有“解编译器”转成汇编？32位机器语言也可以", "\n", "文件地址：", "\n  ", "bios.bin", "\n  ", "CODE CHINA——开源代码托管平台，独立第三方开源社区，Git/Github/Gitlab", "\n  ", "\n  ", "\n    ", "\n      ", "https://codechina.csdn.net/neptune/system/-/blob/master/Tools/qemu/bios.bin", "\n    ", "\n  ", "环境：QEMU虚拟机"]], "Tag": "算法设计"}
{"Answer": "首先，管理菜单、权限、登陆这个三种功能可以抽取成公共模块来维护的，它们的功能是相对独立的。\r\n其次，跟项目相关的业务还是保留。\r\n你提出的问题，应该是一个网站发展过程中需要面临的一个问题，可以参考下淘宝技术总监曾宪杰著《 大型网站系统与Java中间件实践》。", "Konwledge_Point": "树中的独立集", "Question": ["java web系统拆分的思路", ["我们有个后台管理系统，现在里面功能太多了，为了维护方便，解除发布依赖，现在想要针对每个组的功能拆分出独立的web。", "\n现在的大致思路：", "\n1、在类似portal的总web上，管理菜单、权限、登陆", "\n2、在各个子web上分布具体功能", "\n3、通过网页链接的形式进行系统间的关联", "\n\n", "问题：", "\n1、有没有更好的思路？总觉得目前的想法不够高大上", "\n2、想要统一页面风格，jsp页面，子系统与portal如何关联。。iframe是个思路，但太老了点"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/k3661617/article/details/122187336?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;关于51单片机中的C语言使用及总结&lt;/font&gt;&lt;/a&gt; 也许有你想要的答案&amp;#xff0c;你可以看看&lt;/li&gt;&lt;li&gt;同时&amp;#xff0c;你还可以查看手册&amp;#xff1a;&lt;a href=\"https://zh.cppreference.com/w/c/numeric/math/exp\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;c语言-exp()&lt;/font&gt;&lt;/a&gt; 中的内容&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "树中的独立集", "Question": ["51单片机和c语言的应用", ["利用独立键盘和矩阵键盘设计简易计算器，S2代表置零，S6到S15代表数字0到9，S16代表删除（如某一个数字输入错误可以删除，123删除一位变为12），S17代表等于，S18到S21分别代表加减乘除。要求可以实现对整数的加减乘除运算（输入数字及计算结果的数值不超过65535）并在数码管上正确显示。在按下代表运算符的按键之前显示第一个数，按下代表运算符的按键之后显示第二个数，在按下代表“=”的按键后显示计算结果。"]], "Tag": "算法设计"}
{"Answer": "看看这样的是否符合要求。。。\r\npublic static int Abc(int input1, int input2, int output,\r\n\t\t\tString methodName, int from, int to) {\r\n\t\tint count = 0;\r\n\t\tString prefix = \"D\";\r\n\t\tfor(int i=from; i&lt;=to; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tClass clazz = Class.forName(prefix + i);\r\n\t\t\t\tObject instance = clazz.newInstance();\r\n\t\t\t\tMethod method = clazz.getDeclaredMethod(methodName, Integer.class, Integer.class);\r\n\t\t\t\tInteger res = (Integer)method.invoke(instance, input1, input2);\r\n\t\t\t\tif(res == output) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tSystem.out.println(\"pick \" + prefix + i);\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count;\r\n\t}", "Konwledge_Point": "树中的独立集", "Question": ["一道关于getMethod的编程题，请高手赐招！", ["在默认包下，有若干个独立的，已经编译好的\".class\"文件。这些文件的类有两", "\n\n", "个共同特点：它们的名字都是\"D+数字\"的形式,例如，D1,D123,等等。这些类都有", "\n\n", "一个类似的方法(name可变):", "\npublic Integer name(Integer a, Integer b)", "\n其功能是将输入的a和b经过函数处理，得到另外一个Integer类型的数据后返回。", "\n你的任务是编写一个程序，该程序的功能是创建一个新的类Abc,实现它的静态方", "\n\n", "法是：", "\npublic static int Abc(int input1,int input2, int output, String ", "\n\n", "methodName, int from, int to)", "\n其中，input1表示第一个参数，input2表示第二个参数，output表示输出值。", "\n\n", "methodName表示方法的名称，from是类名后面数字的起始序号，to是类名后面数", "\n\n", "字的终止序号。", "\n该方法要统计出默认包下有多少程序符合类和方法的命名要求，对输入input1和", "\n\n", "input2能够正确输出output值（当然都是相应的Integer）", "\n提示1：例如，假设默认包下有如下4个程序编译生成的.class文件：", "\npublic class D1{", "\n public Integer add(Integer a, Integer b)", "\n{", "\n return a.intValue()+b.intValue()+1;", "\n}", "\n}", "\npublic class D5{", "\n public Integer add(Integer a, Integer b)", "\n{", "\n return a.intValue()+b.intValue();", "\n}", "\n}", "\npublic class D6{", "\n public Integer add(Integer a, Integer b)", "\n{", "\n int result=a.intValue()+b.intValue();", "\nresult++;", "\nreturn result;", "\n}", "\n}", "\npublic class D11{", "\npubic Integer adding(Integer a, Integer b)", "\n{", "\n return a.intValue()+b.intValue();", "\n}", "\n}", "\n\n", "你编写的程序运行后，如果方法Abc的参数值input1为1,input2为6，output为8，", "\n\n", "methodName为\"add\"，from为1, to 为15，则对默认包下的上述4个程序，你编写的方法返回值勤应该是2，因为只有D1，D6完全符合要求并且正确，而程序D5和D11不正确，因为D5的结果错误，D11的函数\"adding\"名字与输入函数名\"add\"不符。这就是说，默认包下有几个完全符合要求并且正确的程序，你的方法就返回几。", "\n提示2：编写该程序主要用到类Class，这个类中的如下几个方法对编写该程序有用：", "\n(1) public static Class forName(String className) throws ClassNotFoundException", "\n(2)public Object newInstance() throws InstantionException, IllegalAccessException", "\n(3)public Method getMethod(String name, Class[] parameterTypes)throws NoSuchMethodException, SecurityException"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include &amp;#34;stdio.h&amp;#34;\nint main() {\n\tint a,b; \n\tint i,j; \n\tint num;\n\tint cnt&amp;#61;0;\n\tprintf(&amp;#34;请输入a,b的值:&amp;#34;);\n\tscanf(&amp;#34;%d %d&amp;#34;,&amp;amp;a,&amp;amp;b);\n\tif(b&amp;gt;100000){\n\t\tb &amp;#61; 100000;\t\n\t}\n\tfor(i&amp;#61;a;i&amp;lt;b;i&amp;#43;&amp;#43;){\n\t\t//计算素数\n\t\tfor(j&amp;#61;2;j&amp;lt;i;j&amp;#43;&amp;#43;) { \n\t\t\tif(i % j&amp;#61;&amp;#61;0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t} \n\t\tif(j&amp;#61;&amp;#61;i) {\n\t\t\tcnt&amp;#43;&amp;#43;;\n\t\t\tprintf(&amp;#34;%d\\t&amp;#34;,i);\n\t\t\t//每打印6个换行\n\t\t\tif(cnt % 6&amp;#61;&amp;#61;0){\n\t\t\t\tprintf(&amp;#34;\\n&amp;#34;);\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n} &lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;运行结果如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"442\" src=\"https://img-ask.csdnimg.cn/upload/1622681984588.png\" width=\"677\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["求大神解此题，c语言", ["编写一个C程序，功能为输出a~b之间的全部素数。该题目代码的具体实现要求:", "\n\n", "●其中下限a和上限b应由用户从键盘输入，b最大为100000以内;", "\n\n", "●每行显示6个素数;", "\n\n", "●程序界面友好;", "\n\n", "●其中，判断某数是否为素数的功能，请用一个独立的函数实现。"]], "Tag": "算法设计"}
{"Answer": "这要看，怎么理解“应用层”这个概念了。\r\n\r\n我理解的应用层就是真正的应用了，按照SOA的理念，概念模型和数据库访问等，都会被包装的Service里面，而应用层，只会去访问Service，而Service暴露出来的只是概念模型，底下的数据库存取是透明的，看不见的。", "Konwledge_Point": "树中的独立集", "Question": ["关于领域模型 我的理解对不对", ["最近在研究领域模式设计方面，想问下：", "\n是不是领域模型应该与数据持久层独立，由应用层application层来负责数据库的存取，并创建领域模型，然后由应用层调用数据层接口来持久化领域模型。", "\n那应用层的代码量其实很多啊，和数据层比如DAO或ORM通信都在应用层，为什么 martlin 和 领域驱动设计 一书的作者说应用层是很薄的一层呢？", "\n[b]问题补充：[/b]", "\n如果不是应用层负责，那谁负责存取呢？我看领域驱动设计里讲的就是应用层负责数据存取啊？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以使用Docker&amp;#xff0c;或者给虚拟机拍摄一个快照&amp;#xff0c;需要的时候还原就可以。&lt;br /&gt;有帮助请采纳&amp;#xff0c;还有不懂的可以继续追问~&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["做实验时，配置新的环境之后，能否回退到配置环境之前重新进行配置？", ["做实验时，配置新的环境之后，能否回退到配置环境之前重新进行配置？", "\n", "使用环境Linux，往往在做实验之前，需要配置环境，例如运行实验给定的一个shell的脚本文件，会下各种软件或进行各种配置，会影响原来的配置。当我想回退到配置环境之前是不太可能了，我也不太清楚它到底做了那些更改。有没有在linux平台上可以独立出一个新的环境，在这上面进行配置，不影响原来的环境，当想回退到配置环境之前，只需要删掉或重新建一个环境即可。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个不是很简单的事情吗&amp;#xff0c;不需要整个三维矩阵&amp;#xff0c;你只需要会&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;s&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nfor &lt;span class=\"hljs-attr\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:n\n&lt;span class=\"hljs-attr\"&gt;a&lt;/span&gt; &amp;#61; load([&amp;#39;yourfolder\\&amp;#39;, &amp;#39;yourfilename&amp;#39;, num2str(i),&amp;#39;.txt&amp;#39;]);\n&lt;span class=\"hljs-attr\"&gt;s&lt;/span&gt; &amp;#61; s &amp;#43; a;\nend\n&lt;span class=\"hljs-attr\"&gt;m&lt;/span&gt; &amp;#61; s/n; % 这就是平均值\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;思路就是这个样子&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["现在共有n个txt文件，46行1540列，如何把这n组数据导入从而组成一个三维矩阵", ["现在共有n个txt文件，46行1540列，如何把这n组数据导入从而组成一个三维矩阵；", "因为我需要计算xy平面上每个点在z轴平均值，", "原本我打算把每个TXT文件逐列提出，然后重新生成1540个TXT文件，然后当成2维矩阵用mean函数计算，但是工程量太大了最后绘图仍需整合成，所以想直接用三维矩阵实现，但是无法实现三维数据组建，这n个TXT文件各自独立，我无法在matlab里 将他们整合。", "请问如何将n个文件在matlab里形成三维，然后对其进行平均值计算。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;+ 摘自《MySQL技术内幕 &amp;nbsp;InnoDB存储引擎 》 第2版 P287 页描述的事务的持久性，这个是比较准确的，网上哪些博客里面的都是不知道从哪里抄的。&lt;/p&gt;\n\n&lt;p&gt;&amp;gt;&amp;nbsp; 当然也可以理解为回滚后，数据没有变化，保存个空。&amp;nbsp;&lt;/p&gt;\n\n&lt;p style=\"text-align:center\"&gt;&lt;img alt=\"\" height=\"214\" src=\"https://img-ask.csdnimg.cn/upload/1605682726980.png\" width=\"580\" /&gt;&lt;/p&gt;", "Konwledge_Point": "树中的独立集", "Question": ["关于数据库的一些问题，麻烦各位看一下", [" 事务的四大特征：", "\n        1. 原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败。", "\n        2. 持久性：当事务提交或回滚后，数据库会持久化的保存数据。", "\n        3. 隔离性：多个事务之间。相互独立。", "\n        4. 一致性：事务操作前后，数据总量不变", "\n\n", "我在看到数据库的事务四大特征的时候，第二条那个回滚有点不明白，回滚不是表明发生错误然后回到事务开启的地方的吗，那么这个时候数据不应该被永久保存啊，不是应该通过回滚这个操作将因为错误而导致的错误的数据恢复到之前的状态吗"]], "Tag": "算法设计"}
{"Answer": "1。\r\n方案一：\r\n在A系统里面，有个类是操作数据库的叫AAA,那么就实现另一个类BBB实现和AAA一样的接口，BBB是AAA的代理，操作数据库就直接调用AAA的方法，如果操作成功就操作B系统的存储系统，否则就不操作。然后用BBB替换掉系统里的AAA就行了。\r\n优点：及时同步\r\n缺点：要修改现有系统\r\n方案二：\r\n自动在后台操作，类似检测数据库，然后同步到存储系统里面去。\r\n\r\n2。代码看了，流程大概清楚了，但是不大知道怎么描述。\r\nlz从测试类里面的DefaultStageTest那里入手看，脉络会比较容易把握。\r\n\r\n3.不了解google map的实现。。。", "Konwledge_Point": "树中的独立集", "Question": ["三个很牛的面试题，请朋友们解答些", ["此三到面试题，小弟不胜感激啊，最近就要用了", "1.至少设计2个思路实现如下需求，同时给出它们的优点、缺点。", "     有一个系统A对应一个数据库D1，数据库D1有n张表，同时有一个独立系统B，B对应对应一个存储系统M，M有同样的n张表，表结构同数据库D1，存储系统M只接收本地方式的表数据操作。下面的场景是实现同对数据库D1的n张表的操作要及时的同步到系统B中。具体如下：", "      一个业务场景要求对系统A的n张表数据的操作，就是完成数据库D1里n张表数据的增删改，同时要同步到给系统B对应的存储系统M，实现M里的n张表的操作，", "实现时要考虑性能、稳定性、数据的完整性、系统的可维护性。", "2. 分析源代码", "svn checkout ", "http://nanoseda.googlecode.com/svn/trunk/", " nanoseda-read-only", "要求：", "提交一篇分析文档， 指出这个代码是干什么的， 架构是什么样的， 并阐述至少一个重要的对象调用关系。", "3.设计一个类似GOOGLE MAPS的WEB应用，使得用户在放大地图、缩小地图、按地名查找时速度最优。给出你的架构设计和重要的技术点等。", "问题补充", "whao189 写道", "这是在面试 。。。。。技术经理么？？还是 CTO 。。。。", " 是啊，感觉比较的难，拿不下来，有高人吗，帮弄下", "问题补充", "aws 写道", " 一个业务场景要求对系统A的n张表数据的操作，就是完成数据库D1里n张表数据的增删改，同时要同步到给系统B对应的存储系统M，实现M里的n张表的操作， ", "实现时要考虑性能、稳定性、数据的完整性、系统的可维护性", "事务方面要一致么", "即时性要求高那就系统间用同步的远程方法交互或者干脆dblink+触发器算了", "否则那就系统间用异步访问用队列处理或者dblink+job", "\n", "  事务方面他们没有说，能说的详细一些吗？大哥"]], "Tag": "算法设计"}
{"Answer": "其实很多人说java桌面开发速度慢，是对用Swing开发来说的（开发效率和执行效率），但是这些问题现在已经不是最主要的了，可以通过高配置来解决。再说用Swing开发，她的灵活性足够好，只要你水平够，什么样的效果都是可以弄出来的。\r\n\r\n后来又了SWT以后，觉得SWT比Swing方便些，所以很多人选择SWT。\r\n\r\n而JavaFX出来后很大程度上简化了Java GUI 的开发，如果Java对多媒体支持好一点，启动速度快一些。如：Swing没有坐标的概念，做动画就非常困难，用JavaFX就很简单了。\r\n\r\n现在Flex比较受欢迎，在UI方面与用户视觉感受方面那是没得说的。至于它的运行效率感觉还可以。", "Konwledge_Point": "树中的独立集", "Question": ["桌面开发，java　vs delphi，谁胜一筹？", ["我是开发大型监控软件的，团队有十几个人。开发模式是c/s结构：数据库+几个客户端。每个客户端完成不同的监控功能。开发工具用的是delphi。其实以前我做了两年j2ee应用，给河南国家税务局做税务软件。　在做监控软件时，我对java开发桌面的成熟度心里没有谱，所以选择了delhi。到现在，我们的系统已经基本成型，程序很庞大。在做的过程中呢，我发现delphi在做小的东西还挺快，而在做大的东西时，不是我期望的效率。我会下意识地把它和java比较，总感觉到java更合理：", "\n\n", "delphi类的管理、加载方式不如java好：一个单元里面可以塞很多类，这样多个人在修改一个单元时会有一些麻烦。且没有包的概念，我试着按文件夹把不同的单元分开，可是，发现其他人总是忘了在工程中加入一个单元，而引起错误。这和delphi的类加载机制有关系。我感觉还是java的方便。", "\n\n", "delphi资料太少：这是我最痛苦的一点，遇到一个问题，从网上搜个资料很是不容易，我的问题基本上都是在国外的网站上搜到的。到如今，我需要一个连接池，很不容易地搜了一些资料，且发现都不是我想要的。", "\n\n", "……", "\n\n", "现在，想请问高手，到目前为止，java在桌面开发方面发展成熟了没有，是否可以用来开发一个大的系统，如整个省的高速公路监控系统，系统大概结构：全省有很多监控中心，每个监控中心有若干个监控软件，它们是独立的桌面程序，互相也会有一些交互。用户要求界面美观、大方、操作方面。　请问java现在能实现不？和delphi比怎么样？", "\n\n", "多谢各位解答，跪谢！！！！", "\n[b]问题补充：[/b]", "\n说实话，我想用java，而.net我是绝对不会选的。我不想对windows有太强的依赖。但是就是对java做大型、复杂的桌面程序到底性能了、效率了之类的因素心里没谱。", "\n[b]问题补充：[/b]", "\nto:FengShen_Xia", "\n\n", "这绝对不是喜欢哪个就用哪个的问题，一个好的架构师，应该对未来行业的发展有所预测，在选择开发工具时，要根据自己的实际情况的需要，从各个方面对开发工具的一些因素进行评估比较，最后选择一个合适的。", "\n\n", "加入我喜欢c语言的话，我难道用c语言去做一个监控系统，那不把所以的开发人员累坏了。领导肯定也不愿意，他难道会让我们用做一个操作系统的时间去做一个监控软件，他岂不疯掉？？？ ", "\n[b]问题补充：[/b]", "\n我已经说了我的应用背景，是做一个监控软件（这个软件还比较复杂），不是做一个操作系统，或自己在家里玩着做一个程序。所以，请各位大侠根据我的应用背景去讨论。", "\n[b]问题补充：[/b]", "\nto:FengShen_Xia ", "\n\n", "\"但是如果要大规模的用于桌面应用开发，那么速度上就不能得到保证。\"为什么你会这么说，我想知道他速度慢的原因。请给小弟解释一下，谢谢！ ", "\n\n", "[b]问题补充：[/b]", "\nto:FengShen_Xia，Devin.Chenzx两位大侠，目前用java开发的桌面应用有没有典型的、复杂一点的例子让我看一下，不用让我看eclipse，这个我当然见过，还有哪个免费的日程计划工具我也看了，那个不是很复杂，估计体现不了java的优点。 请举一两个经典、复杂一点应用软件。", "\n[b]问题补充：[/b]", "\nto:night_stalker.GUI开发的效率、效果是我选开发工具的一个方面，还有其他很多方面。请大师们帮小弟综合分析一下，注意：一定要综合。", "\n[b]问题补充：[/b]", "\nto:RednaxelaFX这个大侠，感谢你的参与。我看了里面的几幅图，效果不错。", "\n[b]问题补充：[/b]", "\nto:night_stalker，非常感谢你的参与。除了GUI的效果及其效率，还有是否跨平台外，我其实最关注的是[b]整个软件的开发效率与运行效果的整体权衡[/b]。所以，才有了咱们这个讨论的话题。", "\n[b]问题补充：[/b]", "\n非常感谢前面多位热心人的讨论。但是，到目前为止，我还是没有得到两者的详细分析比较的结果。[size=medium][b]期待高手做详细的分析。。。。。。[/b][/size]", "\n[b]问题补充：[/b]", "\nto:liujunsong.如果我给领导说要做一个界面解释器的话，他肯定会问：“得多长时间，能带来什么好处，难道一定要做吗，这不是浪费工期吗，算了算了，直接用delphi不就得了，你们这个搞技术的，成天爱捉弄一些没用的。要知道，快速实现需求才是最重要的。唉……”", "\n[b]问题补充：[/b]", "\nto:liujunsong.我相信你的编程能力一定很强！", "\n[b]问题补充：[/b]", "\n问题讨论结束。通过上面的讨论，我决定选用java."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;原理是这样用%和/就可以计算个位数、十位数和百位数&amp;#xff0c;我也是新手这写的应该符合题目&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;public  &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Test&lt;/span&gt;&lt;/span&gt;{\n    public &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(&lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;[] args) {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//用于保存用户输入的正整数&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; bit; &lt;span class=\"hljs-comment\"&gt;//用于保存个位数&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; tens;&lt;span class=\"hljs-comment\"&gt;//用于保存十位数&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; Hundreds;&lt;span class=\"hljs-comment\"&gt;//用于保存百位数&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;/*\n        *用户输入不规范提示错误并重新输入&amp;#xff0c;正确则输出\n        */&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;//利用while死循环获得多次输入机会&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//通过Scanner获得一个正整数并用num来保存它&lt;/span&gt;\n            Scanner scanner &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n            &lt;span class=\"hljs-comment\"&gt;//提醒用户输入整数&lt;/span&gt;\n            System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入三位整数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-comment\"&gt;// 得到用户输入整数&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61; scanner.nextInt();\n            &lt;span class=\"hljs-comment\"&gt;//转换数据类型便于判断长度&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt; newNum &amp;#61; &lt;span class=\"hljs-built_in\"&gt;String&lt;/span&gt;.valueOf(&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;);\n            &lt;span class=\"hljs-comment\"&gt;//判断输入整数长度是否为3&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (newNum.length() !&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) {\n                System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误!请输入一个三位正整数\\n&amp;#34;&lt;/span&gt;);\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; { &lt;span class=\"hljs-comment\"&gt;//输入正确则输出&amp;#xff0c;并结束循环&lt;/span&gt;\n                bit &amp;#61; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 模10得到个位&lt;/span&gt;\n                tens &amp;#61; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//除10得到百位和十位 模10得到十位&lt;/span&gt;\n                Hundreds &amp;#61; &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//除100得到百位&lt;/span&gt;\n                System.out.println(&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt; &amp;#43; Hundreds &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;#43; tens &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;#43; bit);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "树中的独立集", "Question": ["输入一个自然数n，后面跟n个三位正整数，求每个三位正整数的个位数、十位数和百位数，将它们按要求的格式输出来。", ["题目描述", "输入一个自然数n，后面跟n个三位正整数，求每个三位正整数的个位数、十位数和百位数，将它们按要求的格式输出来。", "\n", "输入描述", "一行输入，第一个是自然数n，后面跟n个三位正整数。", "\n", "输出描述", "每个三位整数占独立的一行，先输出这个三位整数，然后依次输出其百位数、十位数和个位数，中间用空格分隔。如果输入的数不是三位整数，则对应的那行输出为”输入错误“", "\n", "输入样例", "3 456 790 2100", "\n", "输出样例", "456 4 5 6", "790 7 9 0", "输入错误"]], "Tag": "算法设计"}
