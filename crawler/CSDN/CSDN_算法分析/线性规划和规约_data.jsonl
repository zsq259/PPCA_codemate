{"Answer": "&lt;p&gt;您可以使用非线性规划库&amp;#xff0c;例如 Math.NET Numerics 中的 NLopt 或者 Accord.NET 中的 Nelder-Mead 和 Simplex 方法来实现非线性规划。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;using &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Math&lt;/span&gt;;\nusing &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Optimization&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; NonlinearProgrammingExample\n{\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Program&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] args)\n        {\n            &lt;span class=\"hljs-comment\"&gt;// Define the objective function&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * (x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]),\n                &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// number of variables&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Define the constraints&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;LessThanOrEqualToZero&lt;/span&gt;\n            );\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;GreaterThanOrEqualToZero&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Create the solver&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt; solver &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;[] { constraint1, constraint2 });\n\n            &lt;span class=\"hljs-comment\"&gt;// Solve the problem&lt;/span&gt;\n            double[] result &amp;#61; solver.&lt;span class=\"hljs-title class_\"&gt;Solve&lt;/span&gt;();\n\n            &lt;span class=\"hljs-comment\"&gt;// Print the results&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Result: x &amp;#61; [{0}], f(x) &amp;#61; {1}&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Join&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;, &amp;#34;&lt;/span&gt;, result), &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Value&lt;/span&gt;(result));\n        }\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["c#如何解决非线性规划", ["目前想要用c#做一个求解简单的非线性规划的程序", "之前试过用matlab，但是似乎不能转换文件格式"]], "Tag": "算法设计"}
{"Answer": "http://www.acmerblog.com/hdu-1931-Target-Practice-3006.html", "Konwledge_Point": "线性规划和规约", "Question": ["一个有关于线性规划的问题，具体问题请看下面的问题描述", ["Problem Description", "\nThere are many forms of contests where the contestants (shooters) try to hit targets, either moving or still. In this version there are a number of small balloons sitting on the tops of poles that are in turn stuck in the ground at various points in a large field. These poles are not all the same height. The shooter circles the field and fires at the balloons, the goal being to burst all the balloons with as few shots as possible. Since the balloons offer almost no resistance to a bullet, the bullet will pass right through and possibly hit one or more other balloons. So, by judiciously taking shots, the shooter might need only a very few shots to hit all the targets (provided the shooter is a good marksman, which we will assume is the case).", "\nFor example, the following field of 10 targets can be covered in only four shots, as shown. (The first two numbers at each position indicate the position of the balloon, and the third number the height.)", "\nYour job is to determine the fewest number of shots necessary to hit all the targets in a given field.", "\n\n", "Input", "\nThere will be multiple test cases. Each test case will consist of an integer n (<= 50) indicating the number of target positions to follow. A value of n = 0 indicates end of input. There will follow n integer triples, x y h, indicating a balloon at position (x, y) in the field at height h. (There will be at most one balloon at any position (x, y).) All integers are greater than 0 and no greater than 100. Furthermore assume that the shooter can take shots from anywhere on the field at any height. For simplification, assume here that the balloons are points and that the bullets can pass through the poles on which the balloons are perched.", "\n\n", "Output", "\nEach test case should produce one line of output of the form:", "\nTarget set k can be cleared using only s shots.", "\nwhere k is the number of the test case, starting at 1, and the value of s is the minimum number of shots needed to hit all the targets in the set.", "\n\n", "Sample Input", "\n10", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 85 40 58 100 75 7", "\n9", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 100 75 7", "\n0", "\n\n", "Sample Output", "\nTarget set 1 can be cleared using only 4 shots.", "\nTarget set 2 can be cleared using only 3 shots."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;目标函数不是线性函数&amp;#xff0c;这个优化问题不是线性规划&amp;#xff0c;可以使用有约束非线性优化方法来求求解&amp;#xff0c;使用fmincon函数&amp;#xff0c;代码如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;fun &amp;#61; &amp;#64;(x) 12*x(1) &amp;#43; 3*x(1)*ceil(x(2)-1) - 1.5*ceil(x(2)-1)*x(1);\nA &amp;#61; [1 0\n     0 1\n     -1 0\n     0 -1];\nb &amp;#61; [1\n     30\n     0\n     0];\nx0 &amp;#61; [0.5 15]&amp;#39;;\nx &amp;#61; fmincon(fun,x0,A,b);\ng &amp;#61; fun(x)\n\nw &amp;#61; x(1)\nxx &amp;#61; x(2)\np &amp;#61; w/3&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;结果&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;g &amp;#61;\n\n   2.0001e-08\n\n\nw &amp;#61;\n\n   1.6667e-09\n\n\nxx &amp;#61;\n\n    0.0983\n\n\np &amp;#61;\n\n   5.5557e-10&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["MATLAB线性规划问题", ["如何使用MATLAB求下列方程最优解\nmin f(x)=12*ω+3*ω*ceil (x-1)-1.5*ceil (x-1)\nω=3*p\n0≤x≤30\n0＜ω＜1\n求最优 x 和 ω 以及 p\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;只有5个元素&amp;#xff0c;分别是0,1,2,3,4&amp;#xff0c;下标为5超出了上限&amp;#xff0c;请检查一下代码。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python小白上路，用pso算法解决多元带约束的非线性规划，", ["用pso算法解决多元带约束的非线性规划，一直错误，盼望各位大佬多多指点我一下.", "\n\n", "照猫画虎，还没有人解答，还不知道去看什么，也不知道怎么办，救救孩子吧", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;11&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-comment\"&gt;%fun1.m文件&lt;/span&gt;\n function f&amp;#61;fun1(x)\nf&amp;#61;sum(x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;\nend\n\n&lt;span class=\"hljs-comment\"&gt;%fun2.m文件&lt;/span&gt;\nfunction [g,h]&amp;#61;fun2(x)\ng&amp;#61;[-x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-20&lt;/span&gt;];\nh&amp;#61;[x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-3&lt;/span&gt;,-x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\nend\n\n命令行输入\n\nclear\nx0&amp;#61;[&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;];    &lt;span class=\"hljs-comment\"&gt;%初值&lt;/span&gt;\nlb&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\nub&amp;#61;[inf,inf,inf];\n&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;&amp;#61;[];b&amp;#61;[];&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;&amp;#61;[];beq&amp;#61;[];\n[x,fval]&amp;#61;fmincon(&lt;span class=\"hljs-string\"&gt;&amp;#39;fun1&amp;#39;&lt;/span&gt;,x0,&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;,b,&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;,beq,lb,ub,&lt;span class=\"hljs-string\"&gt;&amp;#39;fun2&amp;#39;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;22&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;[x,y]&amp;#61;ode45(&amp;#64;cal,[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\nplot(x,y(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));\n \n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-title function_\"&gt;cal&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;~,y&lt;/span&gt;)\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title function_\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)&amp;#61;&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;)&amp;#61;-&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;)&amp;#61;-0.5*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;);\n&lt;span class=\"hljs-title function_\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用matlab求非线性规划和常微分方程组", ["11．求下列非线性规划，初值为（0.5，0.5,0.5）", "\n", "\n", "12.求常微分方程组的解。", "范围[0 10]"]], "Tag": "算法设计"}
{"Answer": "这句话是正确的，因为栈和队列都必须在两头进行操作而不能随机的存取内部任何一个结点，所以是顺序存取的线性表。栈只能在栈顶进行存取，而队列只能从队尾插入结点队头删除结点，所以存取位置限制不同。", "Konwledge_Point": "线性规划和规约", "Question": ["栈和队列都是限制存取点的线性结构", ["栈和队列都是限制存取点的线性结构这句话是什么意思？", "\n不太理解，求教"]], "Tag": "算法设计"}
{"Answer": "http://muchong.com/t-4879914-1", "Konwledge_Point": "线性规划和规约", "Question": ["求助非线性环节线性化", ["对于双容水箱液位控制系统，如何对描述水箱输出方程中的非线性环节进行线性化？两个水箱对应输出描述方程如图一，系统描述方式如图2.急求大佬解答！！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;非线性系统不能用ss函数来建模了&amp;#xff0c;ss只能描述线性状态方程&amp;#xff0c;非线性系统需要用微分方程描述&amp;#xff0c;使用ode45来求解响应。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何使用matlab解决非线性状态空间的问题", ["在状态空间系统中，如E\\dot x=Ax+Bu,y=Cx+Du中，A矩阵内含有x2，该如何修改matlab程序，使得程序可以运行。", "\n\n", " ", "\n\n", "E=[1 1;0 0]", "\nA=[-2 0;1 x2];%x=[x1;x2]", "\nB=[-1;0];", "\nC=[-1 -1];", "\nD=0;", "\nt=0:0.01:5;", "\nw=exp(-t);", "\nsys1=dss(A,B,C,D,E);", "\n[y,t,x]=lsim(sys1,w,t);", "\nplot(t,x)", "\n "]], "Tag": "算法设计"}
{"Answer": "参考http://blog.sina.com.cn/s/blog_7671b3eb01013vma.html", "Konwledge_Point": "线性规划和规约", "Question": ["怎样求2个变量的非线性相关性(nonlinear correlation)？", ["线性的用correlation coefficient", "\n非线性的呢？", "\ninformation gain（信息增益）、CHI suqare（卡方分布）、mutual information（互信息）,期望交叉熵 好像只能用来检测feature和class的关联度，不能检测feature和feature之间的", "\nT-Test和F-test算出来的那个值不知道如何利用，我能根据T-Test的结果反映出2个变量的相关度高低吗"]], "Tag": "算法设计"}
{"Answer": "MatrixEquation me = new MatrixEquation(x点的数组， y点的数组, n);\r\nme.XXX调用，具体看你上面注释", "Konwledge_Point": "线性规划和规约", "Question": ["c#实现最小二乘法线性拟合", ["public class MatrixEquation", "\n    {", "\n        private double[,] gaussMatrix;", "\n        private int coe;", "\n\n", "    public MatrixEquation()\n    {\n    }\n\n    public MatrixEquation(double[] arrX, double[] arrY, int n)\n    {\n        coe = n;\n        gaussMatrix = GetGauss(GetXPowSum(arrX, n), GetXPowYSum(arrX, arrY, n), n);\n    }\n\n    public double[,] GetGaussMatrix()\n    {\n        return gaussMatrix;\n    }\n\n    public double[] GetResult()\n    {\n        return ComputeGauss(gaussMatrix, coe);\n    }\n\n    /// <summary> 计算获取x散点的幂次和数组 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"n\">函数拟合次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowSum(double[] arrX, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xPow = new double[2 * n + 1]; //存储X散点的幂次值\n\n        for (int i = 0; i < xPow.Length; i++)\n        {\n            if (i == 0)\n            {\n                xPow[i] = m;\n            }\n            else\n            {\n                //计算x的i次方和\n\n                double max = 0;\n                for (int j = 0; j < m; j++)\n                {\n                    if (arrX[j] == 0)\n                        max = max + 1;\n                    else\n                        max = max + Math.Pow(arrX[j], i);\n                }\n                xPow[i] = Math.Round(max, 4);\n            }\n        }\n        return xPow;\n    }\n\n    /// <summary>计算获取xy的幂次和序列 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"arrY\">y散点序列</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowYSum(double[] arrX, double[] arrY, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xyPow = new double[n + 1]; //仓储X散点的幂次值\n\n        for (int i = 0; i < xyPow.Length; i++)\n        {\n            //计算xy的i次方和\n\n            double max = 0;\n            for (int j = 0; j < m; j++)\n            {\n                if (arrX[j] == 0)\n                    max = max + 1;\n                else\n                    max = max + Math.Pow(arrX[j], i) * arrY[j];\n            }\n            xyPow[i] = Math.Round(max, 4);\n        }\n        return xyPow;\n    }\n\n    /// <summary> 获取高斯矩阵(增广矩阵) </summary>            \n    /// <param name=\"arrX\">X的幂次和</param> \n    /// <param name=\"arrXY\">XY的幂次和</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[,] GetGauss(double[] arrX, double[] arrXY, int n)\n    {\n        double[,] gauss = new double[n + 1, n + 2];\n        for (int i = 0; i < n + 1; i++)\n        {\n            int j;\n            int m = i;\n            for (j = 0; j < n + 1; j++)\n            {\n                gauss[i, j] = arrX[m];\n                m++;\n            }\n            gauss[i, j] = arrXY[i];\n        }\n\n        return gauss;\n    }\n\n    /// <summary> 求解拟合曲线的系数 </summary>                  \n    /// <param name=\"gauss\">线性方程的增广矩阵</param> \n    /// <param name=\"n\">方程次数</param> \n    /// <returns></returns> \n    protected double[] ComputeGauss(double[,] gauss, int n)\n    {\n        double[] a = new double[n + 1];\n        double s;\n        int matrixLine = n + 1;\n        for (int i = 0; i < n + 1; i++)\n            a[i] = 0;\n        //循环每列\n\n        for (int j = 0; j < matrixLine; j++)\n        {\n            //每列J行以后的绝对值最大值\n\n            double max = 0;\n            int k = j;\n            for (int i = j; i < matrixLine; i++)\n            {\n                if (Math.Abs(gauss[i, j]) > max)\n                {\n                    max = gauss[i, j];\n                    k = i;\n                }\n            }\n            //判断j行否为最大值行 若不是将j行调换为最大值行\n\n            if (k != j)\n            {\n                double temp; for (int m = j; m < matrixLine + 1; m++)\n                {\n                    temp = gauss[j, m];\n                    gauss[j, m] = gauss[k, m];\n                    gauss[k, m] = temp;\n                }\n            }\n            if (max == 0)\n            {\n                //奇异矩阵无解\n\n                return a;\n            }\n            //进行初等行变换得到上三角矩阵\n\n            for (int i = j + 1; i < matrixLine; i++)\n            {\n                s = gauss[i, j];\n                for (int m = j; m < matrixLine + 1; m++)\n                {\n                    gauss[i, m] = Math.Round(gauss[i, m] - gauss[j, m] * s / gauss[j, j], 6);\n                }\n            }\n        }\n        //根据倒推方式一次计算现行方程的解\n\n        for (int i = matrixLine - 1; i >= 0; i--)\n        {\n            s = 0;\n            for (int j = i + 1; j < matrixLine; j++)\n            {\n                s += gauss[i, j] * a[j];\n            }\n            a[i] = Math.Round((gauss[i, matrixLine] - s) / gauss[i, i], 6);\n        }\n        //返回方程的解即拟合曲线的系数\n\n        return a;\n    }\n}\n    ------------------------\n    以上是本人在网上看到的一个例子，但是不理解该怎么样测试这个类，请各位大神赐教！或者可以提供相关参考链接也可以。\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;拟合的时候可以加一点惩罚因子&amp;#xff0c;意思就是可以允许有一两个错误点&amp;#xff0c;这样可以避免离群点&amp;#xff0c;这也是正则化的思想&amp;#xff0c;你可以搜搜拉格朗日优化。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性回归/拟合直线如何去除离群点/噪声？", ["对于图1中这种散点，需要拟合出图2中的两条直线，怎么处理噪声点？", "\n", "最小二乘法受离群点的影响较大，请问一下大家这种情况有没有什么好回归方法可以拟合？或者说在回归之前有没有什么方法能去除掉这种离群点？", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "function  linprog2_1\r\nf=[1000,1000,1000,1000];\r\nA=[13.9,13.0,13.6,15.7;\r\n    0.17,0.04,0.08,0.11;\r\n    0.41,0.39,0.48,0.92;\r\n    0.13,0.21,0.14,0.24;\r\n    0.15,0.10,0.15,0.18;\r\n    0.3,0.44,0.52,0.58;\r\n    0.49,0.39,0.49,0.39;\r\n    3390,3240,3210,2240;\r\n    -13.9,-13.0,-13.6,-15.7;\r\n    -0.17,-0.04,-0.08,-0.11;\r\n    -0.41,-6.39,-0.48,-0.92;\r\n    -0.13,-0.21,-0.14,-0.24;\r\n    -0.15,-0.10,-0.15,-0.18;\r\n    -0.3,-0.44,-0.52,-0.58;\r\n    -0.49,-0.39,-0.49,-0.39;\r\n    -3390,-3240,-3210,-2240;];%负号指把不等式两边同时乘以-1把大于等于号转化为小于等于号\r\nb=[16,0.9,0.8,100,0.5,1.2,0.6,3310,-14,-0.1,-0.4,0,-0.1,-0.4,-0.32,-3110];\r\nAeq=[1,1,1,1];\r\nbeq=1;%组成之和为1\r\nlb=[0,0,0,0];\r\nub=[];\r\n[x,fval]=linprog(f,A,b,Aeq,beq,lb,ub)\r\n\r\n\r\nend\r\n![图片说明](https://img-ask.csdn.net/upload/201708/15/1502793328_544601.jpg)", "Konwledge_Point": "线性规划和规约", "Question": ["Matlab 不等式 线性方程式最优解", ["单价都是1000，X1到X4是4中原料占比，总和为100%，求解成本最低的最优解", "\n答案(X1=26.26%，X2=0.00%，X3=58.15%，X4=15.25%)", "\nMin s = 1000 * X1 + 1000 * X2 + 1000 * X3 + 1000 * X4;", "\n\n", "14<= 13.9 * X1 + 13.0 * X2 + 13.6 * X3 + 15.7 * X4 <=16;", "\n0.1<= 0.17 * X1 + 0.04 * X2 + 0.08 * X3 + 0.11 * X4 <= 0.9", "\n0.4<= 0.41 * X1 + 0.39 * X2 + 0.48 * X3 + 0.92 * X4 <=0.8;", "\n0<=0.13 * X1 + 0.21 * X2 + 0.14 * X3 + 0.24 * X4 <= 100;", "\n0.1<=0.15 * X1 + 0.10 * X2 + 0.15 * X3 + 0.18 * X4 <= 0.5;", "\n0.4<=0.3 * X1 + 0.44 * X2 + 0.52 * X3 + 0.58 * X4 <= 1.2;", "\n0.32<=0.49 * X1 + 0.39 * X2 + 0.49 * X3 + 0.39 * X4 <=0.6;", "\n3110<=3390 * X1 + 3240 * X2 + 3210 * X3 + 2240 * X4 =3310;", "\n\n", "帮忙看看，我写的肯定有问题，这个方法（linprog）能这么用吗？还有更好的方法吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;可以这样&amp;#xff01;&lt;br /&gt;令&lt;code class=\"language-javascript\"&gt;x&amp;#61;[y1,y2,y3,epsilon]&lt;/code&gt;&lt;br /&gt;现在就是要目标函数是&lt;code class=\"language-javascript\"&gt;epsilon &amp;#61; 0*x(1)&amp;#43;0*x(2)&amp;#43;0*x(3)&amp;#43;1*x(4)&lt;/code&gt;最小&lt;br /&gt;不等式约束和等式约束分别为&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/682036604236186.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;化成代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;A &amp;#61; [&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;];%不等式约束的A\nb &amp;#61; [0; 0; 0; 0.314272; &lt;span class=\"hljs-string\"&gt;-0&lt;/span&gt;.830297; &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;.088269];%不等式约束的b【满足A*x≤b】\nAeq &amp;#61; [1,1,1,0];%等式约束的Aeq\nbeq &amp;#61; [3.942592];%等式约束的beq\nf &amp;#61; [0,0,0,1];%目标函数的线性组合&amp;#xff0c;即epsilon &amp;#61; 0*x(1)&lt;span class=\"hljs-string\"&gt;&amp;#43;0&lt;/span&gt;*x(2)&lt;span class=\"hljs-string\"&gt;&amp;#43;0&lt;/span&gt;*x(3)&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;*x(4)\nmin_epsilon &amp;#61; linprog(f,A,b,Aeq,beq)%求解\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;计算结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;min_epsilon &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n  -&lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问如图线性规划问题 如何用matlab求解呀", ["\n", "想请问下这个线性规划问题 整么用matlab的linprog()函数求解呀， 着实谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;下面是一个示例&amp;#xff0c;用矩阵求逆的方法来求解这个线性方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;将系数矩阵和常数向量分别存储在 A 和 b 的变量中&amp;#xff0c;如下所示&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 3 -1 2; 12 3 0];&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 10; 8];&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后&amp;#xff0c;可以通过计算 A 的逆来求解方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; inv(A) * b&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样&amp;#xff0c;就可以得到方程组的解&amp;#xff0c;即 x &amp;#61; [1; 2; -1]。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;注意&amp;#xff1a;求矩阵逆是一个计算量比较大的操作&amp;#xff0c;在实际应用中应该尽量避免使用。此外&amp;#xff0c;如果方程组不存在解或者有多个解&amp;#xff0c;那么求逆法就不能用了。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用矩阵求逆法求线性方程组的解", ["4x1+2x2−x3=2    3x1−x2+2x3=10  12x1+3x2=8"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;convhull是凸包计算函数&amp;#xff0c;k是选择的点和连接顺序&amp;#xff0c;v是面积&amp;#xff0c;也可以自己写源码。有用麻烦采纳一下&amp;#xff0c;谢谢&amp;#xff0c;有问题可以私聊&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["MATLAB中的convhull函数的使用说明", ["\n", "P", " = [", "0", " ", "0", "; ", "1", " ", "1", "; ", "1", ".5", " ", "0", ".5", "; ", "1", ".5", " ", "-0.5", "; ", "1", ".25", " ", "0", ".3", "; ", "1", " ", "0", "; ", "1", ".25", " ", "-0.3", "; ", "1", " ", "-1", "];\n[k,v] = convhull(", "P", "); \nplot(", "P", "(:,", "1", "),", "P", "(:,", "2", "),", "'*'", ") \nhold on\n plot(", "P", "(k,", "1", "),", "P", "(k,", "2", "))\n", "\n", "这里面的k，v，都是分别是什么含义啊，为什么就可以把这外围的一圈点都围起来啊？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;br /&gt; &lt;br /&gt;&lt;br /&gt;本次提问扣除的有问必答次数&amp;#xff0c;已经为您补发到账户&amp;#xff0c;我们后续会持续优化&amp;#xff0c;扩大我们的服务范围&amp;#xff0c;为您带来更好地服务。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["非线性规划的专业课排课问题研究", ["问题如下：", "\n", "\n", "\n", "这是提示：", "\n", "\n", "希望是用python或者matlab求解出来。目前我表达式都写不出来，想了好久没明白，希望得到帮助。", "\n", "我的思考：开始我查资料是希望通过遗传算法来求解的，我看这一篇文章挺像的：", "https://blog.csdn.net/weixin_42062229/article/details/94504604", "他的比我这个复杂很多 。但是我还是没看懂 。不知道怎么用遗传算法。", "\n", "于是我就想根据题目提示用非线性规划中的01规划求解，但我表达式一直列不出来，所以不知道代码咋写。", "\n", "以下是我二维转一维的部分", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;注意到第六行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;prob&lt;/span&gt;.Constraints.cons1 &amp;#61; &lt;span class=\"hljs-number\"&gt;280&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60000&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;但对应的是第二个约束&amp;#xff0c;应该改为&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;prob&lt;/span&gt;.Constraints.cons2 &amp;#61; &lt;span class=\"hljs-number\"&gt;280&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60000&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行后的结果为[64.5161290322581,167.741935483871,0]与lingo结果差异不大&lt;br /&gt;完整代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;prob &amp;#61; optimproblem(&lt;span class=\"hljs-string\"&gt;&amp;#39;ObjectiveSense&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;max&amp;#39;&lt;/span&gt;);\n\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &amp;#61; optim&lt;span class=\"hljs-meta\"&gt;var&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;,3,&lt;span class=\"hljs-string\"&gt;&amp;#39;LowerBound&amp;#39;&lt;/span&gt;,0);\nprob.Objective &amp;#61; 2&lt;span class=\"hljs-comment\"&gt;*x(1) &amp;#43; 3*x(2) &amp;#43; 4*x(3);&lt;/span&gt;\n\ncons1 &amp;#61; 1.5&lt;span class=\"hljs-comment\"&gt;*x(1) &amp;#43; 3*x(2) &amp;#43; 5*x(3) &amp;lt;&amp;#61; 600;&lt;/span&gt;\ncons2 &amp;#61; 280&lt;span class=\"hljs-comment\"&gt;*x(1) &amp;#43; 250*x(2) &amp;#43; 400*x(3) &amp;lt;&amp;#61; 60000;&lt;/span&gt;\nprob.Constraints.cons1 &amp;#61; cons1;\nprob.Constraints.cons2 &amp;#61; cons2;\n\n[sol,fval,flag,&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;] &amp;#61; solve(prob);\nsol.&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;\ntx&amp;#61;&lt;span class=\"hljs-meta\"&gt;round&lt;/span&gt;(sol.&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["看下Matlab怎么求解线性规划方程，为啥跟lingo偏差这么大", ["为什么我用matlab 和lingo求一个线性规划问题答案完全不一样，我知道lingo答案应该是对的，Matlab是错在哪里了，我后面加取整也不对，初学Matlab", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;自己已解决&lt;br /&gt;记录一下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1.思路如下图&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/755989613946124.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/597600713946198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/258030713946176.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/129861713946128.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;2.两个二维数组每一行的数据分别做线性回归 的 代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import numpy as np\nfrom scipy import stats, linalg\n\ng &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[[1,6,8]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[3,2,1]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[2,6,10]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[8,9,11]&lt;/span&gt;])\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;g:&amp;#34;&lt;/span&gt;, g)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;g第一行:&amp;#34;&lt;/span&gt;, g[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; g&lt;span class=\"hljs-selector-class\"&gt;.shape&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a(行数):&amp;#34;&lt;/span&gt;, a)&lt;/span&gt;&lt;/span&gt;\nm &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[[2,7,9]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[6,5,2]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[4,8,12]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[10,12,15]&lt;/span&gt;])\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;m:&amp;#34;&lt;/span&gt;, m)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;m(第一行):&amp;#34;&lt;/span&gt;, m[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(a):\n    res &amp;#61; stats&lt;span class=\"hljs-selector-class\"&gt;.linregress&lt;/span&gt;(g&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;, m&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;)\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;res:&amp;#34;&lt;/span&gt;, res)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["对二维数组，逐元素地线性拟合，调用 stats.linregress(x, y)", ["问题遇到的现象和发生背景", "\n", "我需要对长时间序列的栅格数据逐象元地做线性拟合。即x轴为第1", "n年第一个传感器的栅格数据，轴为第1", "n年第二个传感器的栅格数据。", "简化下来相当于就是两个二维数组对应元素做线性拟合，但是出现了问题：", "ValueError: too many values to unpack (expected 4)", "\n", "于是我尝试例举了二维数组进行线性拟合出现了同样的问题：", "\n", "是stats.linregress(x, y)函数无法实现对二维数组的线性拟合吗？有没有能直接对二维数组直接线性拟合的办法？", "转换成一维的话又怎么回到二维的状态呢？该如何解决呢？", "\n", "问题相关代码", "\n", "import numpy as np\nfrom scipy import stats, linalg\n\ndef f(a):\n     b = np.array(", "[[5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]", ")\n     n = np.array(", "[[9, 10, 11, 12], [13, 14, 15, 16],[17, 18, 19, 20]]", ")\n     y = np.concatenate((b,n), axis=", "0", ")\n     ", "print", "(", "\"y:\"", ", y)\n     res = stats.linregress(a, y)\n     ", "return", " res\n\nc = np.array(", "[[1,2,3,4],[5,6,7,8],[9,10,11,12]]", ")\nd = np.array(", "[[5,6,7,8],[9,10,11,12],[13,14,15,16]]", ")\nm = np.concatenate((c, d), axis=", "0", ")\n", "print", "(", "\"m:\"", ", m)\nres = f(m)\n", "\n", "谢谢！"]], "Tag": "算法设计"}
{"Answer": "看来很少有人做这个，自己给自己顶一下", "Konwledge_Point": "线性规划和规约", "Question": ["有关非线性最优化手眼标定的求助帖", ["最近在做标定手眼关系（eye in hand ）中用到非线性最优化来求解方程AX=XB，", "\n但对于非线性最优化了解不多，理解困难。", "\n参考文中中定义函数f，对函数f进行非线性最优化", "\n函数f定义可见附图", "\n始终q为四元数（用来表示旋转矩阵），t表示平移向量，R表示旋转矩阵", "\n要优化的元素为q，t（即旋转矩阵和平移向量）", "\n这里如何求解真是不懂，请各位赐教   help"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;问题分析&lt;br /&gt;出现复数解应该是因为你的“zw”函数中有1.5次方和0.5次方&amp;#xff0c;而fsolve搜索解的时候对应幂的底数可能是负的&amp;#xff0c;这样对应的1.5次方和0.5次方就会出现复数&amp;#xff0c;进而导致目标函数值为复数&amp;#xff0c;最终导致得到的解为复数。&lt;br /&gt;&amp;#xff08;2&amp;#xff09;问题的可能改进代码&lt;br /&gt;考虑在zw中将最后的函数值取模&amp;#xff0c;这样可以得到实数解&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;function&lt;/span&gt; F &amp;#61; zw_real(X)\n&lt;span class=\"hljs-attribute\"&gt;da&lt;/span&gt;&amp;#61; X(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;dr&lt;/span&gt;&amp;#61; X(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;ct&lt;/span&gt;&amp;#61; X(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;dc&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;Dw&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;303&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;627&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;dm&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;*pi;\n&lt;span class=\"hljs-attribute\"&gt;Kn&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0363&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;^&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;ri&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;405&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;Ri&lt;/span&gt;&amp;#61;dm/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;(ri-Dw/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*cos(a);\n\n&lt;span class=\"hljs-attribute\"&gt;Fr&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;4500&lt;/span&gt;;Fa&amp;#61;&lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;;M&amp;#61;&lt;span class=\"hljs-number\"&gt;800000&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;p1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;p2&lt;/span&gt; &amp;#61; pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; Fa-Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;#43;Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; Fr-Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p1)&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)-Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p2)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&amp;#61;M-dm/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)-dc/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p1)&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;#43;dm/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;#43;dc/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p2)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;&amp;#61;abs(F);  %给函数返回值取模\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;clear;clc;\n&lt;span class=\"hljs-attribute\"&gt;h&lt;/span&gt;&amp;#61;optimset;\nh.&lt;span class=\"hljs-attribute\"&gt;Display&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;;\nh.&lt;span class=\"hljs-attribute\"&gt;TolX&lt;/span&gt;&amp;#61;1e-6;\nformat long;\n[jg,fval,exitflag]&amp;#61;fsolve(&lt;span class=\"hljs-string\"&gt;&amp;#39;zw_real&amp;#39;&lt;/span&gt;,[0,0,0],h) %求解\nformat short;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#xff08;3&amp;#xff09;代码运行结果截图&lt;br /&gt;这是将zw的返回值取模得到的结果&amp;#xff0c;不知道能不能对上你的理论解&amp;#xff0c;欢迎讨论&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/58539584806615.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab fsolve求解非线性方程组为什么得到复数解", ["用matlab fsolve求解非线性方程组得到的是复数解，该方程组有实数解，而且发现求得的复数解的实部和答案基本吻合，这是为什么呢？下面是我建立的方程和fsolve求解的程序", "\n", "function", " F = zw(X)\n", "da", "= X(", "1", ");\n", "dr", "= X(", "2", ");\n", "ct", "= X(", "3", ");\n", "dc", "=", "31", ";\n", "Dw", " = ", "12", ".", "303", ";\n", "A", " = ", "0", ".", "627", "; \n", "dm", " = ", "58", ";\n", "a", "=", "35", "/", "180", "*pi;\n", "Kn", "=", "3", ".", "0363", "*", "10", "^", "5", ";\n", "ri", "=", "6", ".", "405", ";\n", "Ri", "=dm/", "2", "+(ri-Dw/", "2", ")*cos(a);\n\n    ", "Fr", "=", "4500", ";Fa=", "3000", ";M=", "800000", ";\n    ", "p1", " = ", "0", ":", "2", "*pi/", "13", ":", "24", "*pi/", "13", ";\n    ", "p2", " = pi/", "13", ":", "2", "*pi/", "13", ":", "25", "*pi/", "13", ";\n    ", "F", "(", "1", ") = Fa-Kn*A^", "1", ".", "5", "*sum((sin(a) + da/A+Ri*(ct/A)*cos(p1)).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")+Kn*A^", "1", ".", "5", "*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).^", "2", ").^", "0", ".", "5", ");\n    ", "F", "(", "2", ") = Fr-Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p1)+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")-Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p2)-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ");\n    ", "F", "(", "3", ")=M-dm/", "2", "*Kn*A^", "1", ".", "5", "*sum((sin(a) + da/A+Ri*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")-dc/", "2", "*Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p1)+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")+dm/", "2", "*Kn*A^", "1", ".", "5", "*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).^", "2", ").^", "0", ".", "5", ")+dc/", "2", "*Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p2)-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ");\n  \n", "end", "\n\n", "h", "=optimset;\n", "h", ".Display='", "off", "';\n", "h", ".TolX=", "1", "e-", "6", ";", "\n[jg,fval,exitflag]=fsolve('zw',[0,0,0],h) %求解", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;fmincon默认是求最小值&amp;#xff0c;你需要求解的是最大值&amp;#xff0c;所以目标函数f中应该取个负号。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问如图非线性规划问题 如何用matlab求解呀", ["\n", "我原本想用fmincon函数求解，先建立目标函数：", "\n", "\n", "然后由于约束条件都是线性的，没有非线性条件，所以就直接将线性约束加进去求解", "\n", "\n", "但最终得到的结果不对，请问是哪里错了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用RecyclerView啊&amp;#xff0c;然后加载两种子布局就OK了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["安卓相对布局和线性布局规划问题", ["\n", "如图所示布局该如何规划？是全部采用相对布局还是全部采用线性布局比较好？刚接触XML不久"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;#define N 2&lt;/span&gt;\nstruct student{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; id;\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; kaoqun;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biaoxian;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; zuoye;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biji;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; sum;\n}stud[N],t;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个学生信息\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].id,&amp;amp;stud[i].name);\n        fflush(stdin);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].kaoqun,&amp;amp;stud[i].biaoxian,&amp;amp;stud[i].zuoye,&amp;amp;stud[i].biji);\n        stud[i].sum &amp;#61; stud[i].kaoqun*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biaoxian*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].zuoye*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biji*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    \n    //排序\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - i; j&amp;#43;&amp;#43;){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按成绩对学生信息进行排序\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (stud[j].sum &amp;gt; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].sum){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;整型数字的比较\n                t &amp;#61; stud[j];\n                stud[j] &amp;#61; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n        }\n    }\n    //打印\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号\\t姓名\\t考勤\\t表现\\t作业\\t笔记\\t总分\\t\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].id);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t&amp;#34;&lt;/span&gt;, stud[i].name);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].kaoqun);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biaoxian);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].zuoye);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biji);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d \\n&amp;#34;&lt;/span&gt;, stud[i].sum);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["文件操作＋线性链表＋直接插入排序", ["1）文件操作+线性链表+直接插入排序操作实验室。", "现有结构体定义如下：", "struct stuInfo", "{", "    char id[12];            //数据成员", "    char name[15];", "    float score;", "\n", "struct stuInfo *", "next", ";   ", "//", "指针成员\n", "\n", "};", "任务及要求：", "（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；", "（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，信息如下；", "00001 张三 100", "00002 李四 99", "00003 王五 100", "00004 王六 89", "00005 江涛 98", "00006 陈琪 88", "00007 祁廷 91", "（3）接下来，利用键盘输入，动态开辟节点存储空间，将00008 赵四 88信息存在一个节点中，并插入到学号是‘00005’和‘00006’之间；", "（4）再接下来，利用直接插入排序，对链表继续升序排序；", "（5）将完整的线性链表信息从头到尾依"]], "Tag": "算法设计"}
{"Answer": "字段计算器中可以算出所有点的坐标值，然后导出到Excel中。距离计算和线性回归都可以用Excel的公式计算。", "Konwledge_Point": "线性规划和规约", "Question": ["arcgis计算距离，线性回归分析的问题", ["想问下已经在ARCGIS上标注了点并连成线，想知道怎么计算每个点到起始点的距离，并能把距离、时间放在坐标里，进行线性回归分析"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;能不能请把代码附上&amp;#xff0c;不要截图&amp;#xff0c;这样真的看不出来呀&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab的fmincon函数求解非线性规划问题，我实在搞不懂呀(哭)", ["以下有问题的方法都是我自己琢磨的(菜)", "想写一个非线性规划的求解代码，但是那个非线性规划问题的目标函数比较复杂，带积分长这样", "\n", "\n", "然后我就把这个积分先一个个算出来再加上(不知道这样对不对），", "得到目标函数z = 79", "q(1) + (398", "q(2))/5 + (398", "q(3))/5 + (801", "q(4))/10 + (11", "q(0)^2)/20 + (13", "q(1)^(7/5))/28 + (13", "q(2)^(7/5))/28 + (13", "q(3)^(7/5))/28 + (13*q(4)^(7/5))/28", "\n", "后面我就建了fun1(当然是看的网上的一步步来的)", "\n", "fun2", "\n", "\n", "然后写了主代码(我不知道这么写对不对，但是我写出来报好多错，该怎么写呀，这个代码是我找的，我不会写)", "\n", "\n", "后面我又换了一个主代码", "\n", "\n", "当然又是一堆错", "我不理解，这个错误fmincon", "\n", "第一次提问，求指点，小的这厢谢过了！(非编程专业的很多都不懂望理解！)"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/weixin_45012973/article/details/107282323\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;MATLAB遗传算法工具箱的使用及实例(线性规划)&lt;/font&gt;&lt;/a&gt; 也许能够解决你的问题&amp;#xff0c;你可以看下&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab做线性规划中一个报错无法解决望各位解惑！", ["用matlab做一个关于线性规划的问题，但是出现以下形况望各位解惑！", "matlab版本为2022a", "代码：", "clc,clear", "x = optimvar('x',4,3,'LowerBound',0);", "wh = [18,15,23,12];", "wj = [10,16,8];", "vj = [6800,8700,5300];", "rou = [18/480,15/650,23/580,12/390];", "lirun = [3100,3800,3500,2850];", "a = sum(x,2);", "b = sum(x);", "z = lirun*a;", "prob = optimproblem('Objective',z,'ObjectiveSense','max');", "prob.Constraints.c1 = a <= wh';", "prob.Constraints.c2 = b' <= wj';", "prob.Constraints.c3 = sum(x(1:4,1)./rou') <= 6800;", "prob.Constraints.c4 = sum(x(1:4,2)./rou') <= 8700;", "prob.Constraints.c5 = sum(x(1:4,3)./rou') <= 5300;", "prob.Constraints.c6 = vj(1)/b(1) == vj(2)/b(2);", "prob.Constraints.c7 = vj(1)/b(1) == vj(3)/b(3);", "[sol,fval] = solve(prob);", "sol.x", "fval", "报错：", "错误使用 optim.problemdef.OptimizationProblem/solve", "SOLVE requires a non-empty initial point structure to solve a nonlinear problem."]], "Tag": "算法设计"}
{"Answer": "http://datakung.com/?p=50&amp;replytocom=5", "Konwledge_Point": "线性规划和规约", "Question": ["怎么判定线性回归的好坏", ["分类器的好坏在于准确率。", "\n那线性回归呢？", "\n我现在有10个特征和1个回归值，我想比较一下，用前5个特征做回归好，还是用后5个特征做回归好，该比较什么值呢？"]], "Tag": "算法设计"}
{"Answer": "现在的处理器支持SMT（intel商标化的名称叫“超线程”），也就是说你看到的计算机上的逻辑处理器核心的数量比物理的要多（一般是2倍，在一些处理器上是4倍或者更多）\r\n但是逻辑处理器因为共享计算核心，所以并不能成倍提高性能。比如一个8逻辑处理器的计算机，实际上只有4个内核，那么它充其量只能比单个处理器内核提高大约5倍的性能。\r\n\r\n另一个问题是，虽然你的处理器可以并行，但是磁盘还是只有一个，如果两个进程需要同时访问磁盘完成查询，那么显然只能轮流访问而不是同时访问，这部分无法并行。别的资源也类似。\r\n因此，一个程序能加速到什么程度，取决于可以并行的代码的比例。\r\n假设一个程序中有50%的操作不能并行，那么即便你有无穷多个处理器，并发无穷多个进程，那么你的程序的运行速度相比较单进程也最多提高2倍。\r\n（50%无法并行的部分所用的时间假设是t/2，50%可以并行的操作用时是t/2，总时间是t/2+t/2=t，假设你有无穷多个进程，那么总时间就是t/2+0=t/2）", "Konwledge_Point": "线性规划和规约", "Question": ["Node使用了多进程，但QPS（每秒查询率）没有线性增长", ["阅读《深入浅出Node.js》10.2.3小节，里面测试了单进程和多进程下QPS的对比，性能确实提高了，但是却没有解释为什么性能并没有与CPU的数量成线性增长。", "\n我自己也试了，确实如此。"]], "Tag": "算法设计"}
{"Answer": "http://ask.csdn.net/questions/270851", "Konwledge_Point": "线性规划和规约", "Question": ["合并两个单链表的算法", ["设带头结点的线性单链表A＝（a1,a2,⋯⋯am）,B＝(b1,b2⋯⋯bm),试编写一个按下列规则合并A,B为线性单链表C的算法，使得C＝(a1,b1,⋯⋯,bm,bm+1,⋯⋯,bn),m小于等于或者C＝(b1,a1,⋯⋯bn,an,an+1,…,am),m大于n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;your code is doing a linear search , a binary search require that the data is sorted , in your case its a regular file , plus in a binary search you start the search from the middle and compare the value your searching with the value in the middle and decide whether to go left or right depending on how your data is sorted .\ni hope it helped a little.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性或二进制搜索??  -PHP", ["\n\n", "I have some code that I wrote and it works really well. Except I am not sure whether what i have written is linear or bineary searching?! I get really confused about the differences. Could someone please clarify the differences and what my code is so I can explain it to someone?", "\n\n", "-The code below searches a value inputted by the user. And goes through a csv file of data. I then saves all values into a new array which has the results. Hopefully that makes sense.", "\n\n", "I just want to know whether my code is linear or binary? I get so confused about them *", "\n\n", "$SearchThis = isset($_POST['Search']) ? $_POST['Search'] : '';\n//empty()\n$SearchThis = !empty($_POST['Search']) ? $_POST['Search'] : '';\n\n\n\n// Grabs the csv file (and its existing data)  and makes it into an array\n$csv = array();\n$lines = file('data/StaffData.csv', FILE_IGNORE_NEW_LINES);\nforeach ($lines as $key => $value)\n{\n    $csv[$key] = str_getcsv($value);\n}\n\n\n\n//A new array which will display the search results\n$new_csv = array(); \n\n//This displays which rows have matched the search (it is put in an array)\n\n//Looks through full names\n$keys = array_keys(array_column($csv, 0), $SearchThis);  //  original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n//Looks through phone numbers\n$keys = array_keys(array_column($csv, 1), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n//Looks through gender\n$keys = array_keys(array_column($csv, 2), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n//Looks through Birthday\n$keys = array_keys(array_column($csv, 3), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n\n//Looks through Type of work\n$keys = array_keys(array_column($csv, 4), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;肯定会变化&amp;#xff0c;这是正常现象&amp;#xff0c;是因为你没有指定随机种子&amp;#xff0c;所以每次训练的参数初始化是不同的。导致分数不同&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问python建模-线性回归，每运行一次，r2值会变化吗", ["请问python建模-线性回归，每运行一次，r2值会变化，是正常的吗？", "\n", "import pandas as pd\nimport xlrd\n", "survey", "=pd.read_excel(\"D:\\data\\第26节数据源-survey.xlsx\")\nsurvey.head()\n\n", "survey_suv", "=survey[survey[", "'category'", "]==", "'SUV'", "]\nsurvey_suv\n\nsurvey_suv.corr()\n\nimport seaborn as sns\nsns.heatmap(", "data", "=survey_suv.corr())\n\nsns.scatterplot(", "data", "=survey_suv,x='price_ratio',y='price')\n\n", "#创建自变量和因变量", "\n", "x", "=survey_suv[", "'price_ratio'", "]\n", "y", "=survey_suv[", "'price'", "]\n\n", "#导入机器学习交叉验证包的分割模块", "\n", "from", " sklearn.model_selection import train_test_split\n\n", "#二八分，拆分过程", "\nx_train,x_test,y_train,", "y_test", "=train_test_split(x,y,train_size=0.8,test_size=0.2)\n\n", "#检查拆分结果", "\n", "print", "(", "'原始数据集大小：'", ",x.shape,", "'训练数据集大小:'", ",x_train.shape,", "'测试训练集大小:'", ",x_test.shape)\n\n", "#导入线性模型包", "\n", "from", " sklearn.linear_model import LinearRegression\n\n", "#创建模型", "\n", "model", "=LinearRegression()\n\n", "#训练模型", "\nmodel.fit(x_train,y_train)\n\nx_train\n\n", "x_train", "=x_train.values.reshape(-1,1)\n", "x_test", "=x_test.values.reshape(-1,1)\nx_train\n\nmodel.fit(x_train,y_train)\n\n", "a", "=model.intercept_\n", "b", "=model.coef_\n", "a", "=round(float(a),2)\n", "b", "=round(float(b),2)\n", "#print('一元一次方程为：y={}{}x'.format(a,b))", "\n\n", "r2", "=model.score(x_test,y_test)\nr2\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性系统有两个属性&amp;#xff1a;齐次性和叠加性&amp;#xff0c;若系统为y&amp;#xff08;n&amp;#xff09;&amp;#61;T[f(n)]&amp;#xff0c;齐次&amp;#xff1a;T[af(n)]&amp;#61;aT[f(n)],叠加&amp;#xff1a;T[f1(n)&amp;#43;f2(n)]&amp;#61;T[f1(n)]&amp;#43;T[f2(n)]&amp;#xff0c;所以既齐次又叠加的系统为线性系统&amp;#xff0c;亦可用此判断。  【望采纳】&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何判断是否为线性系统", ["零状态线性如何判断，导数和积分部分应该怎么计算，是求导和求积分一定是零吗，是需要带公式吗", "![img](", "https://img-mid.csdnimg.c", "\n", "n/release/static/image/mid/ask/162075222366153.jpg \"#left\")"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;clc,clear,&lt;span class=\"hljs-keyword\"&gt;close&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;all&lt;/span&gt;;\n%hamming窗\nM&amp;#61;&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;;alpha&amp;#61;(M&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:M&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\nhd&amp;#61;(cos(pi*(n-alpha)))./(n-alpha);hd(alpha&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nw_ham&amp;#61;(hamming(M))&lt;span class=\"hljs-string\"&gt;&amp;#39;; h&amp;#61;hd.*w_ham; [Hr,w,P,L]&amp;#61;Hr_Type3(h);\n%plots\nsubplot(221);stem(n,hd);\ntitle(&amp;#39;&lt;/span&gt;Ideal Impulse Respons&lt;span class=\"hljs-string\"&gt;e&amp;#39;) \naxis([-1 M -1.2 1.2]);\nxlabel(&amp;#39;&lt;/span&gt;n&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;hd(n)&lt;span class=\"hljs-string\"&gt;&amp;#39;) \nsubplot(222);stem(n,w_ham);\ntitle(&amp;#39;&lt;/span&gt;Hamming &lt;span class=\"hljs-keyword\"&gt;Window&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;) \naxis([-1 M 0 1.2]);xlabel(&amp;#39;&lt;/span&gt;n&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;w(n)&lt;span class=\"hljs-string\"&gt;&amp;#39;) \nsubplot(223);stem(n,h);\ntitle(&amp;#39;&lt;/span&gt;Actual Impulse Respons&lt;span class=\"hljs-string\"&gt;e&amp;#39;) \naxis([-1 M -1.2 1.2]);xlabel(&amp;#39;&lt;/span&gt;n&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;h(n)&lt;span class=\"hljs-string\"&gt;&amp;#39;)\nsubplot(224);plot(w/pi,Hr/pi);\ntitle(&amp;#39;&lt;/span&gt;Amplitude Respons&lt;span class=\"hljs-string\"&gt;e&amp;#39;);grid;\naxis([0 1 0 1]);xlabel(&amp;#39;&lt;/span&gt;frenquency &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; pi units&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;slope &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; pi units&lt;span class=\"hljs-string\"&gt;&amp;#39;);\n\n\n%子函数&amp;#xff1a;\nfunction [Hr,w,c,L] &amp;#61; Hr_Type3(h);\n% Computes Amplitude response of Type-3 LP FIR filter\n% -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  ---\n% [Hr,w,c,L] &amp;#61; Hr_Type3(h)\n\n% Hr &amp;#61; Amplitude Response\n%  w &amp;#61; frequencies between [0 pi] over which Hr is computed\n%  c &amp;#61; Type-3 LP filter coefficients\n%  L &amp;#61; Order of Hr\n%  h &amp;#61; Type-3 LP impulse response\n%\nM &amp;#61; length(h);\nL &amp;#61; (M-1)/2;\nc &amp;#61; [2*h(L&amp;#43;1:-1:1)];\nn&amp;#61;[0:1:L];\nw &amp;#61; [0:1:500]&amp;#39;&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;;\nHr &amp;#61; sin(w*n)*c&lt;span class=\"hljs-string\"&gt;&amp;#39;;\nend&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/959299082666183.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何利用海明窗设计N=24（23阶）的FIR线性相位数字微分器（用matlab），并求出h（n）（传递函数），并求出h（n）（传递函数），并画出幅频特性和相频特性", ["这个FIR线性相位数字微分器怎么用matlab设计？", "\n", "如何利用海明窗设计N=24（23阶）的FIR线性相位数字微分器（用matlab实现），并求出h（n）（传递函数），并画出幅频特性和相频特性。", "\n", "好难啊，怎么做教一下，请给出matlab代码和图，谢谢啦"]], "Tag": "算法设计"}
{"Answer": "是可以的，我发现我一直显示不出来是因为我没有给标题设置宽度比和高度比，所以显示不出来，因为不知道layout__below怎么引用布局就重新倒着重写了一遍布局\r\n```&lt;include layout=\"@layout/title\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"8%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_2\"\r\n        android:text=\"      \"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"20%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/enter\"\r\n        android:text=\"登录\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toLeftOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/register\"\r\n        android:text=\"注册\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toRightOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_1\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/enter\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"55%\"\r\n        app:layout_heightPercent=\"2%\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/key\"\r\n        android:text=\"密码\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/null_1\"\r\n        android:layout_alignLeft=\"@id/null_1\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_key\"\r\n        android:layout_alignTop=\"@id/key\"\r\n        android:layout_toRightOf=\"@id/key\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的密码\"\r\n        android:maxLines=\"1\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/account\"\r\n        android:text=\"账户\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/key\"\r\n        android:layout_alignLeft=\"@id/key\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n    /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_account\"\r\n        android:layout_alignTop=\"@id/account\"\r\n        android:layout_toRightOf=\"@id/account\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的手机号\"\r\n        android:maxLines=\"1\"\r\n    /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/null_3\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/account\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id/image_1\"\r\n        android:src=\"@drawable/image_1\"\r\n        android:layout_above=\"@id/null_3\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"30%\"\r\n        /&gt;\r\n\r\n```\r\n最后得图![图片说明](https://img-ask.csdn.net/upload/201905/30/1559211604_22833.png)", "Konwledge_Point": "线性规划和规约", "Question": ["请问百分比布局可以引用线性布局的标题栏吗？求大神解答！！！", ["想在百分比布局里尝试引用线性布局的标题栏，怎么也不成功，我是按照第一行代码那本书的引用布局部分做的，怎么也弄不出来，好懵", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;&lt;br /&gt;(1)这是非线性函数求最小值&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;format long%设置显示的小数位长一点\nf &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) (&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;cos(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;*log&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;))/exp(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fminsearch(f&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;)%初值给&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;0.663769531250000&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(2)因为目标函数不是未知数的线性组合&amp;#xff0c;所以需要用到fmincon函数求解&lt;br /&gt;代码供参考&amp;#xff0c;注释的都注释了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;function main()\nfunc &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-5&lt;/span&gt;*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%目标函数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%给初始值&lt;/span&gt;\nA&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;; b &amp;#61; -6;%线性约束A和b&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fmincon(func&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;A&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;b&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-title\"&gt;&amp;#64;nonlinfun&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nfunction [&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ceq] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; nonlinfun(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) %定义非线性约束函数\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%非线性约束条件&lt;/span&gt;\nceq &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; []&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果是&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;1.333333116738571&lt;/span&gt;\n  -&lt;span class=\"hljs-number\"&gt;0.988889101134474&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;即x1 &amp;#61;  1.333333116738571&amp;#xff1b; x2&amp;#61; -0.988889101134474&lt;/p&gt;\n&lt;p&gt;有帮助望题主给个采纳&amp;#xff0c;先行谢谢啦&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何在matlab上实现线性规划问题", ["无约束", "（1）min f(x)＝(x³＋cos x＋x lgx)/e× (0<x<1)", "（2）min x(1)²＋x(2)²－x(1) x(2)－2 x(1)－5(2)", "        { －(x（1）－1)²＋x(2)≥0", "           2 x(1)－3 x(2)＋6≥0", "如何在matlab中输入，求步骤。谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;仿佛看到会计学&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Excle 运筹学 线性规划 正常步骤。", ["\n\t", "\n\t", "\n\n", "2、", "\n\n", "\n\n", "某企业生产甲、乙、丙三种产品，其每单位所消耗工时分别为1.6、 2.0、 2.5小时，每单位所需原料A分别为24、20、 12 kg,所需原料B分别为14、10、18kg。生产线每月正常工作时间为240小时，原料A、B的总供应量限制为2400kg 和1500kg。生产一个甲、乙、丙产品各可获利润525、678、 812元。", "\n", "\n已知因为每单位丙产品不完全反应会产生5kg副产品丁，每kg需要排污费200元。", "\n副产品丁的需求量为每月不超过150kg。应如何确定生产计划，可使总利润最大"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;选特征&amp;#xff0c;打标签&amp;#xff0c;调sklearn 包训练&amp;#xff0c;预测&amp;#xff0c;结束&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["机器学习如何利用线性回归预测鲍鱼数据的年龄和利用贝叶斯预测鲍鱼的性别啊", ["数据描述性统计（包括数据来源，数据计量方法，每个变量的最大最小值、均值、方差、标准差等）、定量分析（包括所用方法的特点、选用标准或依据、模型计算步骤、代码展示、结果）、结论。"]], "Tag": "算法设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201504/09/1428565544_388835.png)这个地方错了，改一下！", "Konwledge_Point": "线性规划和规约", "Question": ["线性布局问题 计算器布局", ["4/09/1428560451_585625.png)", "\n\n", "为什么没有出现第一张效果，求解", "\n代码如下：", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n    android:layout_width=\"match_parent\"", "\n    android:layout_height=\"match_parent\"", "\n    android:orientation=\"vertical\" >", "\n\n", "<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n    <EditText \n        android:id=\"@+id/msg\" android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:hint=\"@null\" />\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"@+string/m_c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m+\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"mr\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+/-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"/*\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"*\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"7\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"8\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"9\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"-\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"4\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"5\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"6\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+    \"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\n    android:layout_weight=\"0\">\n\n        <LinearLayout android:layout_width=\"wrap_content\"\n             android:layout_height=\"wrap_content\" android:orientation=\"vertical\"\n             > \n\n            <LinearLayout android:layout_width=\"match_parent\"\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\">\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n            </LinearLayout>  \n\n\n\n        </LinearLayout>             \n</LinearLayout>  \n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;malloc需要头文件stdlib.h&lt;br /&gt;GenerateRandomMatrix 函数名少了个m。&lt;br /&gt;GenerateRandomMatrix 中 随机数初始化函数名写错了&amp;#xff0c;这个初始化提出来&amp;#xff0c;放到main中。&lt;br /&gt;srand(time(NULL));//strabd(time(NULL));&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["C语言编写矩阵运算函数", ["问题遇到的现象和发生背景", "\n", "矩阵运算：线性代数中的矩阵可以用C语言中的二维数组来表示，编写下列函数实现5*5矩阵的运算。（提示：为了简化编程，不用考虑动态创建二维数组，以指针形式传入即可）。", "（1）函数MatrixGenerate（利用srand函数和Rand函数生成一个随机矩阵）；", "（2）MatrixShow（以二维数组的形式显示矩阵）；", "（3）MatrixAdd（矩阵的加法）；", "（4）MatrixSub（矩阵的减法）；", "（5）MatrixMultiple（矩阵的乘法）；", "（6）MatrixTran（矩阵的转置）；", "（7）MatrixMultiple2（矩阵的数乘）；", "\n", "编制生成随机矩阵及矩阵相加的函数，但是运行不出来，一直报错，检查后又没发现什么错误", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include<stdio.h>", "#include<math.h>", "#define max 5", "int ShowMatrixEx(int ** a,int m,int n)//以二维数组形式显示矩阵 。", "{", "    int i,j;", "    for(i=0;i<m;i++)", "    {", "        for(j=0;j<n;j++)", "        {", "            printf(\"%4d\",a[i][j]);", "        }", "        printf(\"\\n\");", "    }", " }", " int ** GenerateRandoMatrix(int m,int n)//生成随机矩阵 。", " {", "     int ** result=(int**)malloc(m", "sizeof(int", "));", "     int i;", "     for(i=0;i<m;i++)", "     {", "         result[i]=(int*)malloc(sizeof(int)*n);", "    }", "    int j=0;", "    strabd(time(NULL));", "    for(i=0;i<m;i++)", "    {", "\n", "     for(j", "=", "0", ";j<n;j++)", "\n     {\n         result[i][j]", "=", "rand()%", "10", ";", "\n     }\n}\n return result", ";", "\n", "\n", "}", "int ** MatrixAdd(int ** a,int ** b,int m,int n)//矩阵相加", "{", "    int ** result=(int **)malloc(m*sizeof(int ", "));", "    int i,j;", "    for(i=0;i<m;i++)", "    {", "        result[i]=(int", ")malloc(sizeof(int)*n);", "    }", "    for(i=0;i<m;i++)", "    {", "        for(j=0;j<n;j++)", "        {", "            result[i][j]=a[i][j]+b[i][j];", "        }", "    }", "    return result;", "}", "int main()", "{", "    int **a=GenerateRandomMatrix(max,max);", "    int **b=GenerateRandomMatrix(max,max);", "    ShowMatrixEx(a,max,max);", "    ShowMatrixEx(b,max,max);", "    int i,result;", "    for(i=0;i<max;i++)", "    {", "        free(a[i]);", "        free(b[i]);", "        free(result[i]);", "    }", "    free(a);", "    free(b);", "    free(result);", "    return 0;", "}", "\n", "运行结果及报错内容", "\n", "18    24    D:\\C语言实践\\矩阵运算.c    [Warning] incompatible implicit declaration of built-in function 'malloc' [enabled by default]", "38    24    D:\\C语言实践\\矩阵运算.c    [Warning] incompatible implicit declaration of built-in function 'malloc' [enabled by default]", "55    10    D:\\C语言实践\\矩阵运算.c    [Warning] initialization makes pointer from integer without a cast [enabled by default]", "56    10    D:\\C语言实践\\矩阵运算.c    [Warning] initialization makes pointer from integer without a cast [enabled by default]", "62    3    D:\\C语言实践\\矩阵运算.c    [Warning] incompatible implicit declaration of built-in function 'free' [enabled by default]", "66    2    D:\\C语言实践\\矩阵运算.c    [Warning] incompatible implicit declaration of built-in function 'free' [enabled by default]", "68    2    D:\\C语言实践\\矩阵运算.c    [Warning] passing argument 1 of 'free' makes pointer from integer without a cast [enabled by default]", "64    14    D:\\C语言实践\\矩阵运算.c    [Error] subscripted value is neither array nor pointer nor vector", "68    2    D:\\C语言实践\\矩阵运算.c    [Warning] passing argument 1 of 'free' makes pointer from integer without a cast [enabled by default]", "\n", "我的解答思路和尝试过的方法", "\n", "尝试过确定result数组的变量值", "\n", "我想要达到的结果", "\n", "函数成功编制可以运行。", "可以实现生成随机数组并实现矩阵相加。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;就是四个不等约束加一个目标函数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;9000&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;150&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];&lt;span class=\"hljs-meta\"&gt;\n[x,fval]&amp;#61;linprog(-c,a,b);% 由于要获得最大值&amp;#xff0c;所以c取负号\nx\nfval &amp;#61; -fval % 最大值\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;Optimal&lt;/span&gt; solution found.\n\n\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &amp;#61;\n\n   &lt;span class=\"hljs-attribute\"&gt;6&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;428571428571425&lt;/span&gt;\n   &lt;span class=\"hljs-attribute\"&gt;4&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;285714285714288&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;fval&lt;/span&gt; &amp;#61;\n\n     &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;028571428571428&lt;/span&gt;e&amp;#43;&lt;span class=\"hljs-number\"&gt;05&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性规划问题是这样解吗？总感觉方向不对", ["clear", "\n", "\n", "\n", "c=[10000;9000];a=[6,5;10,20];b=[60;150];", "Aeq=[6 5];beq=60;", "[x,fval]=linprog(c,a,b,Aeq,beq,zeros(2,1))", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这里的无约束条件不是图片中了的吧&amp;#xff0c;被你修改了的&amp;#xff0c;运行程序没错&amp;#xff0c;你可以看看是不是参数上设置错了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["fmincon函数非线性优化问题", ["clear;\nclc;\n\nlb = [", "1", ";", "0.625", ";", "25", ";", "25", "];\nub = [", "1.375", ";", "1", ";", "150", ";", "240", "];\n\nA=[-", "1", " ", "0", " ", "0.0193", " ", "0", ";\n    ", "0", " -", "1", " ", "0.00954", " ", "0", ";\n    ", "0", " ", "0", " ", "0", " ", "1", ";\n    -", "1", " ", "0", " ", "0", " ", "0", ";\n    ", "0", " -", "1", " ", "0", " ", "0", "];\nb=[", "0", ";", "0", ";", "240", ";-", "1.1", ";-", "0.6", "];\n\n", "function", " [", "c", ",", "ceq", "] = ", "mycon", "(x)", "\n", "c", "=-", "pi", "*", "x", "(3)", "*", "x", "(3)", "-4/3*", "pi", "*", "x", "(3)", "*", "x", "(3)", "*", "x", "(3)", "+1296000;", "\nceq = [];\n", "end", "\n\n", "function", " [ ", "f7", " ] = ", "mypeaks", "( x )", "\n", "f7", "=0.6224*", "x", "(1)", "*", "x", "(3)", "*", "x", "(4)", "+1.7781*", "x", "(2)", "*", "x", "(3)", "^2+3.1661*", "x", "(1)", "^2*", "x", "(4)", "+19.84*", "x", "(1)", "^2*", "x", "(3)", ";", "\n", "end", "\n\n", "for", " i=", "1", ":", "50", "\n    x0 = [", "1", ";", "0", ";", "0", ";", "0", "]+", "1", ".*rand(", "4", ",", "1", ");  % randomly determine the initial point\n%     x0 = [", "0.5", " -", "1.5", "];\n    % sqp\n    sqp_opts = optimset(", "'Algorithm'", ",", "'sqp'", ",", "'Display'", ",", "'iter-detailed'", " );\n    [x,fval,exitflag,output]=fmincon(@mypeaks,x0,A,b,[],[],lb,ub,@mycon,sqp_opts);\n%     %% ga\n%     ga_opts = gaoptimset(", "'Display'", ",", "'off'", ",", "'PopulationSize'", ",", "100", ");\n%     [x,fval,exitflag,output]=ga(@mypeaks,", "4", ",A,b,[],[],lb,ub,@mycon,ga_opts);\n%     %% ", "Record", " data\n    recordY(i) = fval;\n    recordNfe(i) = output.funcCount;\n", "end", "\n\n", "\n", "\n", "最优解答案应该在8960，但是我的sqp算法算出来50个都是8949，没有变化很不对啊，请问哪里出了问题呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;倒幂函数曲线y &amp;#61; a &amp;#43; b ⋅ 1 x y&amp;#61;a&amp;#43;b \\cdot \\dfrac{1}{x}y&amp;#61;a&amp;#43;b⋅&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; 型&lt;br /&gt;令x ′ &amp;#61; 1 x {x}&amp;#39;&amp;#61;\\dfrac{1}{x}x&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; , 则得y &amp;#61; a &amp;#43; b ⋅ x ′ y&amp;#61;a&amp;#43;b \\cdot {x}&amp;#39;y&amp;#61;a&amp;#43;b⋅x&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;双曲线1 y &amp;#61; a &amp;#43; b ⋅ 1 x \\dfrac{1}{y}&amp;#61;a&amp;#43;b \\cdot \\dfrac{1}{x}&lt;br /&gt;y&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; &amp;#61;a&amp;#43;b⋅&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; 型&lt;br /&gt;令x ′ &amp;#61; 1 x , y ′ &amp;#61; 1 y {x}&amp;#39;&amp;#61;\\dfrac{1}{x}, {y}&amp;#39;&amp;#61;\\dfrac{1}{y}x&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; ,y&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;y&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; , 则得y ′ &amp;#61; a &amp;#43; b ⋅ x ′ {y}&amp;#39;&amp;#61;a&amp;#43;b \\cdot {x}&amp;#39;y&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;b⋅x&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;幂函数曲线y &amp;#61; d ⋅ x b y&amp;#61;d \\cdot x^by&amp;#61;d⋅x&lt;br /&gt;b&lt;br /&gt; 型&lt;br /&gt;令y ′ &amp;#61; I n y , x ′ &amp;#61; I n x , a &amp;#61; I n d {y}&amp;#39;&amp;#61;Iny, {x}&amp;#39;&amp;#61;Inx, a&amp;#61;Indy&lt;br /&gt;′&lt;br /&gt; &amp;#61;Iny,x&lt;br /&gt;′&lt;br /&gt; &amp;#61;Inx,a&amp;#61;Ind, 则得y ′ &amp;#61; a &amp;#43; b x ′ {y}&amp;#39;&amp;#61;a&amp;#43;b{x}&amp;#39;y&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;bx&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;指数曲线y &amp;#61; d ⋅ e b x y&amp;#61;d \\cdot e^{bx}y&amp;#61;d⋅e&lt;br /&gt;bx&lt;br /&gt; 型&lt;br /&gt;令y ′ &amp;#61; I n y , a &amp;#61; I n d {y}&amp;#39;&amp;#61;Iny, a&amp;#61;Indy&lt;br /&gt;′&lt;br /&gt; &amp;#61;Iny,a&amp;#61;Ind, 则得y ′ &amp;#61; a &amp;#43; b x {y}&amp;#39;&amp;#61;a&amp;#43;bxy&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;bx.&lt;br /&gt;倒指数曲线y &amp;#61; d ⋅ e b x y&amp;#61;d \\cdot e^{\\dfrac{b}{x}}y&amp;#61;d⋅e&lt;br /&gt;x&lt;br /&gt;b&lt;br /&gt;​&lt;/p&gt;\n&lt;p&gt; 型&lt;br /&gt;令y ′ &amp;#61; I n y , x ′ &amp;#61; 1 x , a &amp;#61; I n d {y}&amp;#39;&amp;#61;Iny, {x}&amp;#39;&amp;#61;\\dfrac{1}{x}, a&amp;#61;Indy&lt;br /&gt;′&lt;br /&gt; &amp;#61;Iny,x&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; ,a&amp;#61;Ind, 则得y ′ &amp;#61; a &amp;#43; b x ′ {y}&amp;#39;&amp;#61;a&amp;#43;b{x}&amp;#39;y&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;bx&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;————————————————&lt;br /&gt;版权声明&amp;#xff1a;本文为CSDN博主「Mestarxh」的原创文章&amp;#xff0c;遵循CC 4.0 BY-SA版权协议&amp;#xff0c;转载请附上原文出处链接及本声明。&lt;br /&gt;原文链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/wumian0123/article/details/81677076\" id=\"textarea_1646733412386_1646733450457_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/wumian0123/article/details/81677076&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["选择用哪一种非线性回归模型？", ["选择用哪一种非线性回归模型？", "怎么进行选择的啊？", "根据图形还是？", "感谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这只是以防万一的写法&amp;#xff0c;也不会有count &amp;gt; n的出现&amp;#xff0c;只是防止一些没法预想到的情况或者有时候程序写得不那么好会导致不应该发生的结果&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性表链式存储的查找元素", ["如图 在线性表的链式存储中 查找第n个元素", "图中圈出来的地方 count > n 这个条件 是不是多余啊 通过上面的while循环后 count 最多 = n", "什么时候会出现 count > n 呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误是使用了未定义的变量.&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["初学者求助：用python解一阶线性微分方程组", ["目标：由f3，f4求解i（t），e（t）的数值解（给定初值）", "\n\n", "想拜托大佬们帮我看看这个思路是否可行，以及为何报错：", "\n\n", "from sympy import *", "\n\n", "t=symbols('t')", "\n\n", "f3=Eq(i(t).diff(t),1/5.1*e(t)-11.45*t**-1.662*i(t))", "\n\n", "f4=Eq(e(t).diff(t),-1/5.1*e(t)+4*i(t))", "\n\n", "eq=(f3,f4)", "\n\n", "# 第一步求解i(t),e(t)的结果：", "\n\n", "# i(t)=C1*x0(t) + C2*x0(t)*Integral(0.196078431372549*exp(m)*exp(n)/x0(t)**2, t)", "\n\n", "# e(t)=C1*y0(t) + C2*(y0(t)*Integral(0.196078431372549*exp(m)*exp(n)/x0(t)**2, t) + exp(m)*exp(n)/x0(t))", "\n\n", "# 其中：", "\n\n", "# m=Integral(-0.196078431372549, t)=-0.196078431372549*t", "\n\n", "# n=Integral(-11.45*t**(-1.662), t)=17.2960725075529*t**(-0.662)", "\n\n", "# 第二步赋初值：C1=4156,C2=25000,将原方程组转换为求解未知函数x0(t),y0(t)的方程组(在下面程序中用x,y分别代替x0,y0)：", "\n\n", "x,y=symbols('x,y',cls=Function)", "\n\n", "f3=Eq(4900.0*Derivative(x(t),t)*Integral(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + 4156*Derivative(x(t),t) + 4900.0*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t),1/5.1*(4156*y(t) + 25000*(y(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + exp(-0.196*t)*exp(17.296*t**(-0.662))/x(t)))-11.45*t**-1.662*(4156*x(t) + 25000*x(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t)))", "\n\n", "f4=Eq(-286248.8*t**(-1.662)*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t) + 4900.0*Derivative(y(t), t)*Integral(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2, t) + 4156*Derivative(y(t), t) - 4900.0*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t) + 4900.0*y(t)*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2 - 25000*exp(17.296*t**(-0.662))*exp(-0.196*t)*Derivative(x(t), t)/x(t)**2,-1/5.1*(4156*y(t) + 25000*(y(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + exp(-0.196*t)*exp(17.296*t**(-0.662))/x(t)))+4*(4156*x(t) + 25000*x(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t)))", "\n\n", "eq=(f3,f4)", "\n\n", "results=dsolve(eq)", "\n\n", "for result in results:", "\n\n", "    print(result)", "\n\n", " ", "\n\n", "报错：", "\n\n", "Traceback (most recent call last):", "\n  File \"c:/Users/lenovo/Desktop/1.py\", line 96, in <module>", "\n    results=dsolve(eq)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 588, in dsolve", "\n    match = classify_sysode(eq, func)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 1971, in classify_sysode", "\n    type_of_equation = check_nonlinear_2eq_order1(eq, funcs, func_coef)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 2106, in check_nonlinear_2eq_order1", "\n    (r1[f].subs(x(t),u).subs(y(t),v))/", "\nTypeError: 'NoneType' object is not subscriptable"]], "Tag": "算法设计"}
{"Answer": "最后一段，没环境，没有测试过。layout_weight注意一下，如果一个区域分2部分，其中一个要占4分之3，则那个区域要设1（越小占比越大)，另一个要设3\r\n\r\n```\r\n &lt;LinearLayout android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\r\n    &gt;\r\n\r\n        &lt;LinearLayout android:layout_width=\"wrap_content\"\r\n             android:layout_height=\"wrap_content\" android:orientation=\"vertical\"\r\n             android:layout_weight=\"1\"&gt; \r\n\r\n            &lt;LinearLayout android:layout_width=\"match_parent\"\r\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\"&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"1\"&gt;&lt;/Button&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"2\"&gt;&lt;/Button&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"3\"&gt;&lt;/Button&gt;\r\n\r\n            &lt;/LinearLayout&gt;  \r\n\r\n\t\t\t\t\t\t&lt;LinearLayout android:layout_width=\"match_parent\"\r\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\"&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\r\n                    android:text=\"0\"&gt;&lt;/Button&gt;\r\n                 &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"2\"\r\n                    android:text=\".\"&gt;&lt;/Button&gt;\r\n\r\n            &lt;/LinearLayout&gt;\r\n\r\n        &lt;/LinearLayout&gt;    \r\n        &lt;LinearLayout android:layout_width=\"wrap_content\"\r\n             android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\r\n             android:layout_weight=\"3\"&gt;\r\n             &lt;Button android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" \r\n                    android:text=\"=\"&gt;&lt;/Button&gt;\r\n        &lt;/LinearLayout&gt;         \r\n&lt;/LinearLayout&gt;  \r\n```", "Konwledge_Point": "线性规划和规约", "Question": ["android线性布局（计算器ui）", ["\n以上是效果图：", "\n下面是我的代码，求指教：", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n    android:layout_width=\"match_parent\"", "\n    android:layout_height=\"match_parent\"", "\n    android:orientation=\"vertical\" >", "\n\n", "<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n    <EditText \n        android:id=\"@+id/msg\" android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:hint=\"@null\" />\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"@+string/m_c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m+\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"mr\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+/-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"/*\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"*\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"7\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"8\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"9\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"-\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"4\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"5\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"6\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+    \"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\n    >\n\n        <LinearLayout android:layout_width=\"wrap_content\"\n             android:layout_height=\"wrap_content\" android:orientation=\"vertical\"\n             android:layout_weight=\"3\"> \n\n            <LinearLayout android:layout_width=\"match_parent\"\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\">\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n\n            </LinearLayout>  \n\n\n\n        </LinearLayout>             \n</LinearLayout>  \n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/i1020/article/details/53469317", "Konwledge_Point": "线性规划和规约", "Question": ["最小花费计算的问题？这是线性规划实现么？", ["Problem Description", "\nAs far as we known,there are so many people in this world,expecially in china.But many people like LJ always insist on that more people more power.And he often says he will burn as much babies as he could.Unfortunatly,the president XiaoHu already found LJ's extreme mind,so he have to publish a policy to control the population from keep on growing.According the fact that there are much more men than women,and some parents are rich and well educated,so the president XiaoHu made a family planning policy:", "\nAccording to every parents conditions to establish a number M which means that parents can born M children at most.But once borned a boy them can't born other babies any more.If anyone break the policy will punished for 10000RMB for the first time ,and twice for the next time.For example,if LJ only allowed to born 3 babies at most,but his first baby is a boy ,but he keep on borning another 3 babies, so he will be punished for 70000RMB(10000+20000+40000) totaly.", "\n\n", "Input", "\nThe first line of the input contains an integer T(1 <= T <= 100) which means the number of test cases.In every case first input two integers M(0<=M<=30) and N(0<=N<=30),N represent the number of babies a couple borned,then in the follow line are N binary numbers,0 represent girl,and 1 represent boy.", "\n\n", "Output", "\nForeach test case you should output the total money a couple have to pay for their babies.", "\n\n", "Sample Input", "\n2", "\n2 5", "\n0 0 1 1 1", "\n\n", "2 2", "\n0 0", "\n\n", "Sample Output", "\n70000 RMB", "\n0 RMB"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/your_answer/article/details/79234275\"&gt;https://blog.csdn.net/your_answer/article/details/79234275&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/linshen1213/article/details/99433348\"&gt;https://blog.csdn.net/linshen1213/article/details/99433348&lt;/a&gt;&lt;br /&gt;如果对你有帮助&amp;#xff0c;可以点击我这个回答右上方的【采纳】按钮&amp;#xff0c;给我个采纳吗&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["求解一阶线性微分方程组，matlab或者python都可以。", ["有如下微分方程组：", "\n", "\n", "矩阵D全是数值，存在一些边界条件,当0<=Z<=10时，有Zmn（0）= -10，Xmn（0）=Ymn（0）=Xmn（10）=Ymn（10）=Zmn（10）=0,如何用matlab求解Rmn（z），数值解和解析解都可以。", "\n", "D=[0,0,0,0.00166666666666667,0,-2.19911485751286;0,0,0,0,0.00200000000000000,-2.19911485751286;0,0,0,2.19911485751286,2.19911485751286,0;51566.8828791659,4118.29417355141,-0.691545552676999,0,0,0;4118.29417355141,7768.18561244484,-0.567067353195139,0,0,0;0.691545552676999,0.567067353195139,0.000927672955974843,0,0,0]", "\n", "Thanks！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;既然你知道了y和x那么数值求到了dy/dt和dx/dt&amp;#xff0c;自然就可以通过插值方法得到与x和y等长的dy/dt和dx/dt&amp;#xff0c;然后直接进行拟合就好了啊&amp;#xff0c;lsqcurvefit也好&amp;#xff0c;最小二乘法加上fminsearch求解也罢&amp;#xff0c;都可以做啊&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Matlab 非线性最小二乘法 求解微分方程", ["如下微分方程，求解微分方程系数（a1, a2, a3）", "\n", "\n", "\n", "1）没有dx/dt 的方程", "2）yexp是实验值", "3）先假定a1,a2,a3，应用ode45计算解析值y,然后用lsqcurvefit求系数", "\n", "代码如下：", "\n", "t = data(:,1);\nx = data(:,2);\ny_exp = data(:,3);\n\ndt = t(2) - t(1);\nlen = length(x);\ndx_dt(1) = x(1)/dt;\n", "dx_dt(2:len) = diff(x) / dt;", "\ndy_exp(1) = y_exp(1)/dt;\n", "dy_exp(2:len) = diff(y_exp) / dt;", "\n\na1 = 10.74;\na2 = 0.91;\na3 = 290;\n\nget_dx_dt = @(t_sim) interp1(t(1:end), dx_dt, t_sim);\ndy_dt = @(t,y)(get_dx_dt(t)-sign(y)*(abs(y)/a1)^(1/a2))*a3;\n[tout, y] = ode4(dy_dt, t(1), dt, t(end), y_exp(1));\n\nlen_y = length(y);\nx1 = dx_dt(1:len_y);\nx2 = y';\nY =dy_exp(1:len_y);\nX=[x1;x2]';\na0=rand(1,3);\nfunc=@(a,X)(x1-sign(x2).*(abs(x2)/a(1)).^(1/a(2)))*a(3);\na=lsqcurvefit(func,a0,X,Y);\n\n", "\n", "计算得到的a为复数。", "请问:", "1.思路是否正确；", "2.如果思路不正确，能否指明正确思路", "\n", "谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一般是看你需要哪个&amp;#xff0c;应该是实际情况而定&lt;br /&gt;比方说你要第一个解&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;U1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solU1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;V1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solV1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你要第二个解&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;U2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solU1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;V2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solV1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["非线性方程组有多个解的问题", ["问题遇到的现象和发生背景", "\n", "非线性方程组有两个解，怎么才能只保留一个", "\n", "问题相关代码，请勿粘贴截图", "\n", "clc,clear", "syms u v; % 定义u v 是未知量", "eqns=[(u+1.25)/(v+0.69) == 4533269482901803/4503599627370496,64/49 == (v + 0.69)^2 + (u+ 1.25)^2]; % 定义方程组", "vars=[u,v]; % 定义求解的未知量", "[solU,solV]=solve(eqns,vars) % 求解eqns中的vars未知量，分别存储", "sol=fzero(eqns,vars); % 求解eqns中的vars未知量，以结构体的形式存储到sol中", "solU1=sol.u % 从sol结构体中取出变量u的解", "solV1=sol.v % 从sol结构体中取出变量v的解", "\n", "想保留一个解，怎么操作啊，求"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;计算多元线性回归中每个回归系数的t检验结果对应的Cohen&amp;#39;s d需要以下步骤&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1.计算每个回归系数的t值&amp;#xff1a;将回归系数除以它的标准误差。&lt;/p&gt;\n&lt;p&gt;2.计算每个回归系数对应的Cohen&amp;#39;s d&amp;#xff1a;将每个回归系数的t值除以样本的标准差的根号。&lt;/p&gt;\n&lt;p&gt;3.评估Cohen&amp;#39;s d的大小&amp;#xff1a;Cohen&amp;#39;s d的大小表示因变量的变化对自变量的影响&amp;#xff0c;通常认为0.2是小的、0.5是中等的&amp;#xff0c;0.8是大的。&lt;/p&gt;\n&lt;p&gt;4.计算Cohen&amp;#39;s d&amp;#xff1a;Cohen&amp;#39;s d是回归系数的t值除以因变量的标准差的根号&amp;#xff0c;即d &amp;#61; t / sqrt(n)&amp;#xff0c;其中n为样本的大小。&lt;/p&gt;\n&lt;p&gt;注意&amp;#xff1a;上述步骤需要使用样本数据以及其他相关的统计信息&amp;#xff0c;如样本的标准差、样本的数量等。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["多元线性回归系数回归系数显著性检验（t检验）怎么求每个t检验的cohen‘d", ["多元线性回归系数回归系数显著性检验（t检验）怎么求每个t检验的cohen‘d"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; &lt;a href=\"https://blog.csdn.net/weixin_43905191/article/details/104677945?utm_source&amp;#61;app&amp;amp;app_version&amp;#61;5.2.1&amp;amp;code&amp;#61;app_1562916241&amp;amp;uLinkId&amp;#61;usr1mkqgl919blen\" id=\"textarea_1647840617915_1647840630063_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_43905191/article/details/104677945?utm_source&amp;#61;app&amp;amp;app_version&amp;#61;5.2.1&amp;amp;code&amp;#61;app_1562916241&amp;amp;uLinkId&amp;#61;usr1mkqgl919blen&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["想知道能不能用Python实现克莱姆公式求解线性方程组啊", ["就自己瞎写了些，好像都不太行，想看看有没有什么方法实现用程序来计算克莱姆方程对线性方程组的求解"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我明白了&amp;#xff0c;后面的&amp;#43;/-0n的意思就是小数点往后/前移n位&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问matlab非线性规划模型拟合stats的p这个属于是什么", ["如图，请问这个数应该怎么看？", "这个模型拟合的可以吗", "球秋有时间而且愿意解答的朋友答疑解惑指点迷津"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;model.predict(pp.fit_transform([[16]])) 这个是一个数还是一组数的预测&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["非线性回归的模型的预测是负数，如何解决", ["x轴是1到12", "y轴是20W到50W", "打算用非线性回归的相关库来预测数据", "from sklearn.linear_model import LinearRegression", "from sklearn.preprocessing import PolynomialFeatures as pf", "\n", "pp=pf(degree=3)", "list_grade=np.array(list_grade).reshape(-1,1)", "trainx=pp.fit_transform(list_grade)", "model=LinearRegression()", "model.fit(trainx,list_time)", "a=model.score(trainx,list_time)", "\n", "然后用预测函数预测下后面的值，但是出现了问题", "model.predict(pp.fit_transform([[16]]))", "后面都是负数了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我今天遇到了&amp;#xff0c;网上找了一圈也没有对策。&lt;br /&gt;后面猜可能是y轴的数据类型有问题&amp;#xff0c;就将数据转为float就行了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Python matplotlib画图总是一条直线", ["如图", "\n\n", "\n\n", "不论怎么画都是一条直线，但明显这不是线性关系。不明白怎么控制这个y轴的刻度，去网上找了半天也没找到解决方案。求解答这是为什么，该怎么处理"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Considering you want last row to always be id 1000:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function linear($step) {\n\n $query = \"SELECT * FROM TABLE WHERE id IN (1000, 1000 - $step, 1000 - $step * 2, 1000 - $step * 3)\"\n $result = mysql_query($query)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In case you do not know what is the last ID:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function linear($step) {\n $lastId = mysql_fetch_assoc(mysql_query(\"SELECT id FROM TABLE ORDER BY id DESC LIMIT 1\"))['id']\n $query = \"SELECT * FROM TABLE WHERE id IN ($lastId, $lastId - $step, $lastId - $step * 2, $lastId - $step * 3)\"\n $result = mysql_query($query)\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Feel free to ask if you need more information.\nYou are welcome.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何在MySQL中获取线性函数行？", ["\n\n", "I have a MySQL table with 1000 rows. And I want to get 4 specific rows based on linear function as step (get value of row, last position must be the last row, row number 1000). Example:", "\n\n", "---------------------\n id  | value\n---------------------\n  1  | 3\n  2  | 1\n  3  | 5\n  4  | 4\n ... | ...\n 997 | 2\n 998 | 0\n 999 | 7\n1000 | 4\n--------------------\n", "\n\n", "Step as linear function (1,2,3....,N)", "\n\n", "*) step=1  =>  i will get 4 rows of id : 997,998,999,1000   \n       first row to get is row number 997, last row is row number 1000\n       result = 2,0,7,4\n*) step=2  =>  i will get 4 rows of id : 994,996,998,1000\n*) step=3  =>  i will get 4 rows of id : 991,994,997,1000\n*) step=4  =>  i will get 4 rows of id : 988,992,996,1000\n*) step=5  =>  i will get 4 rows of id : 985,990,995,1000\n.....\n*) step=330 => i will get 4 rows of id : 10,340,670,1000\n*) step=331 => i will get 4 rows of id : 7,338,669,1000\n*) step=332 => i will get 4 rows of id : 4,336,668,1000\n*) step=333 => i will get 4 rows of id : 1,334,667,1000\n", "\n\n", "How to do it in PHP?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;warning信息问题不大&amp;#xff0c;做测试看结果的话可以忽略&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性回归，运行时出现一个问题", ["刚接触，复制别人的代码熟悉，遇到这样的问题，有能帮我看看嘛，需要改什么或者还是有什么问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;出现了新手常见的问题&amp;#xff0c;可以参考参考这篇文章&lt;br /&gt;&lt;a href=\"https://www.zhihu.com/question/309028363/answer/582638696\" id=\"textarea_1680155538176_1680155647233_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.zhihu.com/question/309028363/answer/582638696&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["为什么spss数据分析正相关的回归线系数是负的呀？", ["如图，分析是有显著的正向影响，但是回归系数B是负的，这有什么影响吗？我能改成正的吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;datetools好像已经弃用了 要么用别的 要么降版本&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["大数据一元线性回归代码提示错误", ["整个代码其他部分运行没问题，只有图示部分提示错误信息，不明白是什么意思，但又不影响整个代码正常运行。", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用运筹学&amp;#xff0c;Lingo软件&amp;#xff0c;具体咋用网上有运筹学的书&amp;#xff0c;里面有很相似的问题&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问这个问题应该用什么方法解决？线性规划？运筹学？控制论？？求答", ["本人不是数学相关专业，请大家尽量讲解的白话一点", "问题 一天24小时，周期7天，居民自由出行的时长为6点-11点   15点-21点之间，可以出行体育锻炼，共计11小时", "目标：居民需要在一周7天内进行不少于共计5次的锻炼", "其中:中年人有890422*8.38%（746174）人，30%偏好广场舞，23%偏好羽毛球，14%偏好游泳，2%偏好篮球，20%偏好跑步，11%偏好乒乓球", "为了保证居民使用场地进行锻炼时的尺度适宜，其中广场舞每人占地1平方米，一个羽毛球场地可同时容纳2或4人，一条50米泳道至多同时6人，篮球场10人，乒乓球2或4人，每100米跑道10人。", "假设居民进行每项活动在30-150分钟范围内，要保证满足居民活动时长，类型和只要想进行活动就基本上不用排队的需求，设施应该具有的数量大致是多少？", "\n", "以上问题目前是一个年龄段的问题，若需要计算满足3个年龄段锻炼需求的设施数量（活动偏好比例不同、可出行锻炼时长不同）需要用怎样的方法得出？", "请问用什么方法求解"]], "Tag": "算法设计"}
{"Answer": "http://www.zybang.com/question/7743c5097ab383da2608b909488a4498.html", "Konwledge_Point": "线性规划和规约", "Question": ["VS2010 求一个线性方程组A.x=b的解，用了Eige n库，可是我更新A，b后解没有更新", ["代码 这里tub就是x (", "https://img-ask.csdn.net/upload/201607/29/1469795830_353711.png", ")", "\nA是矩阵，b是向量。for循环后A,b的值都变了，但是调试发现方程解tub不变。求指点"]], "Tag": "算法设计"}
{"Answer": "不是，因为new的过程就是动态申请内存的过程，就像C中的malloc一样动态的申请内存的，应该是链式的结构吧，但是数组不一样的，数组是线性的结构，不正确的地方欢迎指正，交流啊", "Konwledge_Point": "线性规划和规约", "Question": ["对象在内存中分配的时候，其属性是线性分配的吗？", ["比如说：", "\nclass A", "\n{", "\n    int i=1;", "\n    double j=2.0;", "\n    String s=\"xyz\";", "\n\n", "public void function()\n{\n}\n", "\n\n", "}", "\n我的问题是：假如int是4字节，double是8字节，String是X个字节，请问4,8，X这些内存是连续分配的吗？像数组那样？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The problem in your solution is that you are using \"linear probing\" for insert operation, but you are not using the same approach for retrieving it.&lt;/p&gt;\n\n&lt;p&gt;First of all - I would change your underlining storage to keep whole struct instead of value:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;var hasharray [15]Item\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Second, I would change the retrieve method to check value of the item with calculated hash index, and after that iterate items one by one to find actual item if there was a collision:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func retrieve(key string) {\n    index := hashmethod(key)\n    found := false\n    for !found {\n        item:= hasharray[index];\n        if key == item.key {\n         found = true;\n         fmt.Println(index, item)\n        } else if index != size-1 {\n            index++\n        } else {\n            index = 0\n        }\n    }   \n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See here: &lt;a href=\"https://play.golang.org/p/8JfTpbJcWx\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/8JfTpbJcWx&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["使用线性探测解决冲突后，如何从哈希表中检索值？", ["\n\n", "I am trying to implement a hash program in go, I did insertion and resolved collisions using linear probing. When I'm trying to retrieve values back, i'm getting different values as I used linear probing to fix collisions.", "\n\n", "This is my program : ", "https://play.golang.org/p/7Pmqu6A313", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;请问你解决这个问题了吗&amp;#xff0c;能否教一下咋计算yolov5的map&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["yolov5中mAP的计算和coco中mAP的计算有什么区别", ["yolov5官方计算的是mAP0.5和mAP0.5:0.95,这两个跟大部分论文里面计算的方法都不太一样,比如coco里面的,会计算一个总的mAP,怎么处理这个问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性调频脉冲信号可以采用和差波束原理进行测角。&lt;/p&gt;\n&lt;p&gt;和差波束原理是一种通过将多个天线的信号进行加权相加或相减来形成不同方向的波束的方法。当两个或更多的天线接收到同一个信号时&amp;#xff0c;它们会产生相位差异&amp;#xff0c;这可以通过改变天线之间的距离或方向来实现。通过调整相位差异&amp;#xff0c;可以使得某个方向上的信号强度最大&amp;#xff0c;从而实现测角。&lt;/p&gt;\n&lt;p&gt;对于线性调频脉冲信号&amp;#xff0c;可以使用和差波束原理来实现测角。首先&amp;#xff0c;将接收到的信号分别输入到不同的天线中。然后&amp;#xff0c;将这些信号进行加权相加或相减&amp;#xff0c;以产生一个特定方向上的波束。通过改变权重系数&amp;#xff0c;可以得到不同方向的波束。最后&amp;#xff0c;通过检测不同方向上的波束强度&amp;#xff0c;可以确定信号来自哪个方向。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;线性调频脉冲信号的测角精度受到多个因素的影响&amp;#xff0c;如信号频率、天线之间的距离和方向、以及接收到的噪声水平等。因此&amp;#xff0c;在实际应用中&amp;#xff0c;需要进行适当的调整和校准&amp;#xff0c;以获得最佳的测角精度。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问线性调频脉冲信号可以采用和差波束原理进行测角吗", ["请问线性调频脉冲信号可以采用和差波束原理进行测角吗？和差波束如何测角？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;都是 O&amp;#xff08;1&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["new和delete的时间复杂度怎么看啊，是常数阶还是线性阶？", ["new空间和delete删空间的时间复杂度怎么看啊，是常数阶还是线性阶？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一、实验目的&lt;br /&gt;(1)加深对离散傅里叶变换(DFT)基本性质的理解。&lt;/p&gt;\n&lt;p&gt;(2)了解有限长序列傅里叶变换(DFT)性质的研究方法。&lt;/p&gt;\n&lt;p&gt;(3)掌握用MATLAB语言进行离散傅里叶变换性质分析时程序编写的方法。&lt;/p&gt;\n&lt;p&gt;二、实验原理&lt;/p&gt;\n&lt;p&gt;1.线性性质&lt;br /&gt;如果两个有限长序列分别为x1(n)和x2(n)&amp;#xff0c;长度分别为N1和N2&amp;#xff0c;且y(n)&amp;#xff1d;ax1(n)&amp;#xff0b;bx2(n) (a、b均为常数)&lt;/p&gt;\n&lt;p&gt;则该y(n)的N点DFT为Y(k)&amp;#xff1d;DFT&amp;#xff3b;y(n)&amp;#xff3d;&amp;#xff1d;aX1(k)&amp;#xff0b;bX2(k) 0≤k≤N&amp;#xff0d;1&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff1a;N&amp;#xff1d;max&amp;#xff3b;N1&amp;#xff0c;N2&amp;#xff3d;&amp;#xff0c;X1(k)和X2(k)分别为x1(n)和x2(n)的N点DFT。&lt;/p&gt;\n&lt;p&gt;例1&amp;#xff1a;&lt;br /&gt;已知x1(n)&amp;#xff1d;&amp;#xff3b;0&amp;#xff0c;1&amp;#xff0c;2&amp;#xff0c;4&amp;#xff3d;&amp;#xff0c;x2(n)&amp;#xff1d;&amp;#xff3b;1&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;0&amp;#xff0c;1&amp;#xff3d;&amp;#xff0c;求&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;(1)y(n)&amp;#xff1d;2x1(n)&amp;#xff0b;3x2(n)&amp;#xff0c;再由y(n)的N点DFT获得Y(k)&amp;#xff1b;&lt;/p&gt;\n&lt;p&gt;(2)由x1(n)、x2(n)求X1(k)、X2(k)&amp;#xff0c;再求Y(k)&amp;#xff1d;2X1(k)&amp;#xff0b;3X2(k)。&lt;/p&gt;\n&lt;p&gt;用图形分别表示以上结果&amp;#xff0c;将两种方法求得的Y(k)进行比较&amp;#xff0c;由此验证有限长序列傅里叶变换(DFT)的线性性质&lt;br /&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-attribute\"&gt;xn1&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]; %建立xn1序列\n&lt;span class=\"hljs-attribute\"&gt;xn2&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];%建立xn2序列\n&lt;span class=\"hljs-attribute\"&gt;N1&lt;/span&gt;&amp;#61;length(xn1);\n&lt;span class=\"hljs-attribute\"&gt;N2&lt;/span&gt;&amp;#61;length(xn2);\n&lt;span class=\"hljs-attribute\"&gt;N&lt;/span&gt;&amp;#61;max(N1,N2);%确定N\n&lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; N1&amp;gt;N2\n    &lt;span class=\"hljs-attribute\"&gt;xn2&lt;/span&gt;&amp;#61;[xn2,zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,N1-N2)];%对长度短的序列补&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;elseif&lt;/span&gt; N2&amp;gt;N1 \n    &lt;span class=\"hljs-attribute\"&gt;xn1&lt;/span&gt;&amp;#61;[xn1,zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,N2-N1)];\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;yn&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*xn1&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*xn2;%计算yn\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:N-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:N-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;Yk1&lt;/span&gt;&amp;#61;yn*(exp(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;j*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/N)).^(n&amp;#39;*k);%求yn的N点DFT\n&lt;span class=\"hljs-attribute\"&gt;Xk1&lt;/span&gt;&amp;#61;xn1*(exp(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;j*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/N)).^(n&amp;#39;*k);%求xn1的N点DFT\n&lt;span class=\"hljs-attribute\"&gt;Xk2&lt;/span&gt;&amp;#61;xn2*(exp(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;j*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/N)).^(n&amp;#39;*k);%求xn2的N点DFT\n&lt;span class=\"hljs-attribute\"&gt;Yk2&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Xk1&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*Xk2;%由Xk1、Xk2求Yk\n\n&lt;span class=\"hljs-attribute\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);stem(xn1);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;x1(n)&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);stem(xn2);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;x2(n)&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);stem(yn);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;y(n)&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);stem(k,Yk1);\n&lt;span class=\"hljs-attribute\"&gt;axis&lt;/span&gt;([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;DFT(y(n))&amp;#39;)\n\n&lt;span class=\"hljs-attribute\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);stem(k,Xk1);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;Xk1&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);stem(k,Xk2);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;Xk2&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);stem(k,Yk2);\n&lt;span class=\"hljs-attribute\"&gt;axis&lt;/span&gt;([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;Yk&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出&amp;#xff1a;&lt;br /&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/874252381626122.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;详细内容可以查看&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/linzch3/article/details/71107284\"&gt;https://blog.csdn.net/linzch3/article/details/71107284&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab编程验证图像傅里叶变换的相关定理", ["matlab编程验证图像傅里叶变换性质中的相关定理，希望可以给出代码，是相关定理，不是其他性质，是性质中的相关定理，相！关！定！理！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一个线性变换就是对应于一个变换矩阵&amp;#xff0c;假设变换矩阵为A&amp;#xff0c;从三维到二维&amp;#xff0c;所以是一个2x3的矩阵&amp;#xff0c;把已知的值带入&amp;#xff0c;列出一个六元一次方程组求出矩阵A。&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/69420890485618.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#算法#的问题：高等数学求解，R的三次方变R的平方", ["高等数学求解，R的三次方变R的平方，然后求a和b两个问题的解"]], "Tag": "算法设计"}
{"Answer": "```\r\n#include &lt;stdio.h&gt;\r\n#include &lt;string.h&gt;\r\n#define MAX_N 20\r\nint main()\r\n{\r\n    int arr[MAX_N][MAX_N],n;\r\n    memset(arr,0x0,sizeof(arr));\r\n    scanf(\"%d\",&amp;n);\r\n    for(int i=0;i&lt;n;i++)\r\n        for(int j=0;j&lt;n;j++)\r\n            scanf(\"%d\",&amp;arr[i][j]);\r\n    int sum = 0;\r\n    for(int i=0;i&lt;n;i++)\r\n        for(int j=0;j&lt;n;j++)\r\n        {\r\n            if(i == j)\r\n                sum += arr[i][j];\r\n            else if(i == ((n-1)-j))\r\n                sum += arr[i][j];\r\n        }\r\n    printf(\"%d\\n\",sum);\r\n    return 0;\r\n}\r\n```", "Konwledge_Point": "线性规划和规约", "Question": ["C语言关于数组循环的问题", ["\n[题目描述]", "\n在线性代数中，矩阵的计算是一种常见运算。在程序设计中矩阵常用二维数组表示，现在，给你一个N x N的方阵，请编程计算矩阵中两条对角线上元素的和。", "\n[输入]", "\n有多行，第一行是一个正整数N (N<20)，表示矩阵的行数和列数，后面N行每行N个整数", "\n[输出]", "\n一个整数，表示矩阵对角线上元素的和", "\n[样例输入]", "\n4", "\n1 2 3 4", "\n5 6 7 8", "\n4 3 2 1", "\n3 4 5 6", "\n[样例输出]", "\n32"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-comment\"&gt;/**************************************************************\n要求&amp;#xff1a;\n1、管理学生的信息&amp;#xff0c;包括&amp;#xff0c;学号&amp;#xff0c;姓名&amp;#xff0c;各科成绩\n2、将信息保存成文件&amp;#xff0c;能反复使用\n3、对信息操作&amp;#xff0c;包括&amp;#xff0c;添加学生信息&amp;#xff0c;修改&amp;#xff0c;删除&amp;#xff0c;\n   按学号、姓名查询学生信息\n4、能进行科目成绩排序&amp;#xff0c;科目分数段查询\n附data文件实例&amp;#xff1a;\n001  小黑  语文  60.00  英语  70.00  数学  90.00\n002  小天  语文  70.00  英语  90.00  数学  80.00\n003  小芳  语文  80.00  英语  80.00  数学  70.00\n004  小鱼  语文  90.00  英语  70.00  数学 100.00\n***************************************************************/&lt;/span&gt;\n \n#include&amp;lt;stdio.h&amp;gt;\n#include&amp;lt;stdlib.h&amp;gt;\n#include&amp;lt;string.h&amp;gt;\n \n&lt;span class=\"hljs-comment\"&gt;//链表结点结构体声明&lt;/span&gt;\ntypedef struct subjects\n{\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    float score;\n}sub;\n \ntypedef struct student\n{\n    int num;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    sub  subject[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    struct student* next;\n}stu,*pstu;\n \n#define SIZE sizeof(stu)\n \n&lt;span class=\"hljs-comment\"&gt;//函数申明&lt;/span&gt;\npstu LoadInfo();\nvoid PrintMenu();\npstu AddStu(pstu );\npstu DeleStu(pstu );\npstu RwrStu(pstu );\nvoid FindStu(pstu , char );\nvoid Count(pstu ,char * ,float ,float );\nvoid Rank(pstu ,char * );\nvoid SaveQuit(pstu );\n \n&lt;span class=\"hljs-comment\"&gt;//主函数&lt;/span&gt;\nint main()\n{ \n    float score1,score2;\n    char n,j;\n    char subname[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    pstu head,ptr;\n    \n    head &amp;#61; LoadInfo();\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n \n    &lt;span class=\"hljs-comment\"&gt;//创建菜单&amp;#xff0c;进入选择循环&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        PrintMenu();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的选择编号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        getchar();                       &lt;span class=\"hljs-comment\"&gt;//接收上次输入选择后的回车输入,不致影响下一次输入&lt;/span&gt;\n        switch(n)\n        {\n        case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: \n            {\n                &lt;span class=\"hljs-comment\"&gt;//信息管理&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);                &lt;span class=\"hljs-comment\"&gt;//清屏&lt;/span&gt;\n                j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;!&amp;#61;j)               &lt;span class=\"hljs-comment\"&gt;//循环进入子菜单选择&lt;/span&gt;\n                {\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入信息管理版块&amp;#xff01;\\n\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 1、添加学生\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 2、删除学生\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 3、修改学生信息\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 4、返回\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的选择编号&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n                    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;j);\n                    getchar();\n                    \n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;     ( &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#61;&amp;#61; j) head &amp;#61; AddStu(head);        &lt;span class=\"hljs-comment\"&gt;//添加学生&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; j) head &amp;#61; DeleStu(head);        &lt;span class=\"hljs-comment\"&gt;//删除学生&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; j) head &amp;#61; RwrStu(head);        &lt;span class=\"hljs-comment\"&gt;//修改重写学生信息&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; j) ;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误,请重新输入!\\n&amp;#34;&lt;/span&gt;);\n                    \n                }\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入回车键返回主菜单&amp;#xff01;&amp;#34;&lt;/span&gt;);     &lt;span class=\"hljs-comment\"&gt;//此处本意按任意键返回&amp;#xff0c;但是任意键的话&amp;#xff0c;需要按键A&amp;#xff0c;再按回车确定&lt;/span&gt;\n                getchar();            &lt;span class=\"hljs-comment\"&gt;//则会连续收到两个按键&amp;#xff0c;造成错误读入&amp;#xff0c;可以改进scanf接收字符串&amp;#xff0c;&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);            &lt;span class=\"hljs-comment\"&gt;//以下所有getchar()、system(&amp;#34;cls&amp;#34;)同理&lt;/span&gt;\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//信息查询&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入信息查询版块!\\n&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查询的学生编号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;j);\n                getchar();\n                &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%d\\n&amp;#34;,j);           //检测输入是否成功,调试程序用&lt;/span&gt;\n                FindStu(head,j);            &lt;span class=\"hljs-comment\"&gt;//查询并输出&lt;/span&gt;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入回车键返回主菜单&amp;#xff01;&amp;#34;&lt;/span&gt;);\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//成绩统计&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入成绩统计版块!\\n&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入科目&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入分数范围(score1,score2)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f,%f&amp;#34;&lt;/span&gt;,&amp;amp;score1,&amp;amp;score2);\n                getchar();\n                &lt;span class=\"hljs-comment\"&gt;/*printf(&amp;#34;%s %5.2f %5.2f\\n&amp;#34;,subname,\n                         score1,score2);   */&lt;/span&gt;          &lt;span class=\"hljs-comment\"&gt;//检测输入是否成功&amp;#xff0c;调试程序用&lt;/span&gt;\n                Count(head,subname,score1,score2);          &lt;span class=\"hljs-comment\"&gt;//统计并输出&lt;/span&gt;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入回车键返回主菜单&amp;#xff01;&amp;#34;&lt;/span&gt;);\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//成绩排序&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入成绩排序版块&amp;#xff0c;请输入科目&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname);\n                getchar();\n                Rank(head,subname);              &lt;span class=\"hljs-comment\"&gt;//排序并输出&lt;/span&gt;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入回车键返回主菜单&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//保存退出&lt;/span&gt;\n                SaveQuit(head);                &lt;span class=\"hljs-comment\"&gt;//文件操作&amp;#xff0c;保存并退出&lt;/span&gt;\n                free(head);\n                return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            }\n        default: \n            {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#xff0c;按回车键重新选择&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);    &lt;span class=\"hljs-comment\"&gt;//主菜单错误输出检测&lt;/span&gt;\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n            }\n        }\n    }\n    \n      \n}\n \n&lt;span class=\"hljs-comment\"&gt;//加载data数据 &amp;#xff0c;文件操作&lt;/span&gt;\npstu LoadInfo()\n{\n    int   num;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char sub1[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char sub2[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char sub3[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    float score1;\n    float score2;\n    float score3;\n    \n    char filename[] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;D:\\\\编程学习\\\\编程实践\\\\c语言课程设计1 学生信息管理\\\\data.txt&amp;#34;&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//文件名,此处为简化编程&amp;#xff0c;采用固定地址名称&amp;#xff0c;未作输入&lt;/span&gt;\n       FILE *fp; \n    pstu head,ptr;\n    \n    &lt;span class=\"hljs-comment\"&gt;//创建带表头结点的空单链表head&amp;#xff0c;用来存放载入信息&lt;/span&gt;\n    head &amp;#61; (pstu)malloc(SIZE);\n    ptr &amp;#61; head;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    \n    \n    &lt;span class=\"hljs-comment\"&gt;//加载data文件&amp;#xff0c;存入head链表&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( NULL &amp;#61;&amp;#61; (fp &amp;#61; fopen(filename,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)) )             &lt;span class=\"hljs-comment\"&gt;//判断文件是否存在及可读&lt;/span&gt;\n    { \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;error!&amp;#34;&lt;/span&gt;); \n        exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;); \n    } \n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!feof(fp)) \n    { \n        fscanf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %s %f %s %f %s %f\\n&amp;#34;&lt;/span&gt;,&amp;amp;num,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,\n              &amp;amp;sub1,&amp;amp;score1,&amp;amp;sub2,&amp;amp;score2,&amp;amp;sub3,&amp;amp;score3); &lt;span class=\"hljs-comment\"&gt;//读取一行&amp;#xff0c;采用格式化读取&amp;#xff0c;避免了其他各种读取方法的数据处理问题&lt;/span&gt;\n                                                                &lt;span class=\"hljs-comment\"&gt;//该方法缺点明显&amp;#xff0c;对数据格式要求教研&amp;#xff0c;故data文件规定数据格式&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (pstu)malloc(SIZE);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n        \n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; num;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,sub1);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; score1;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,sub2);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; score2;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,sub3);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; score3;\n        \n    } \n    \n    fclose(fp);                                         &lt;span class=\"hljs-comment\"&gt;//关闭文件,已得到保存data信息的链表head&lt;/span&gt;\n    \n    return head;\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//打印主菜单&lt;/span&gt;\nvoid PrintMenu()    \n{\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;***************************************\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;           枫枫学生信息管理系统        \\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;***************************************\\n&amp;#34;&lt;/span&gt;);\n    putchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;菜单\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 1、信息管理\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 2、信息查询\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 3、成绩统计\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 4、成绩排序\\n&amp;#34;&lt;/span&gt;);    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 5、保存退出\\n&amp;#34;&lt;/span&gt;);\n}\n \n&lt;span class=\"hljs-comment\"&gt;//添加学生&lt;/span&gt;\npstu AddStu(pstu x)  \n{\n    char namestu[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char *p;\n    char subname1[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname2[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname3[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    pstu head,ptr;\n    \n    head &amp;#61; x;\n    ptr &amp;#61; head;\n    \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;( NULL !&amp;#61; ptr-&amp;gt;&lt;/span&gt;next )                    &lt;span class=\"hljs-comment\"&gt;//遍历链表&amp;#xff0c;找到链尾结点&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    }\n    \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (pstu)malloc(SIZE);                &lt;span class=\"hljs-comment\"&gt;//默认在链表末追加添加信息&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的信息&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%d&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;num);\n    getchar();\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,namestu);\n    getchar();\n    p &amp;#61; namestu;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目1名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname1);\n    getchar();\n    p &amp;#61; subname1;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目1成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score);\n    getchar();\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目2名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname2);\n    getchar();\n    p &amp;#61; subname2;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目2成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score);\n    getchar();\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目3名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname3);\n    getchar();\n    p &amp;#61; subname3;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目3成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n    getchar();\n    \n    putchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    return head;\n}\n \n&lt;span class=\"hljs-comment\"&gt;//删除学生&lt;/span&gt;\npstu DeleStu(pstu x)   \n{\n    int num;\n    pstu head,ptr,qtr;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    qtr &amp;#61; head;\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要删除的学生的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num);\n    getchar();\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ptr!&amp;#61;NULL)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( ptr-&amp;gt;&lt;/span&gt;num !&amp;#61; num)                &lt;span class=\"hljs-comment\"&gt;//遍历查找链表结点&amp;#xff0c;未找到跳过该结点&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;                        &lt;span class=\"hljs-comment\"&gt;//找到则删除结点&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; ptr;\n            break;\n        }\n    }\n    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;该学生信息已删除&amp;#xff01;\\n\\n&amp;#34;&lt;/span&gt;);\n    return head;\n}\n \n&lt;span class=\"hljs-comment\"&gt;//修改学生信息&lt;/span&gt;\npstu RwrStu(pstu x)   \n{\n    char namestu[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char *p;\n    char subname1[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname2[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname3[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    int num;\n    pstu head,ptr;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要修改的学生的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num);\n    getchar();\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ptr!&amp;#61;NULL)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( ptr-&amp;gt;&lt;/span&gt;num &amp;#61;&amp;#61; num )\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;已找到该学生信息&amp;#xff0c;请填入修改项目&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,namestu);\n            getchar();\n            p &amp;#61; namestu;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目1名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,subname1);\n            getchar();\n            p &amp;#61; subname1;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目1成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score);\n            getchar();\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目2名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,subname2);\n            getchar();\n            p &amp;#61; subname2;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目2成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score);\n            getchar();\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目3名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,subname3);\n            getchar();\n            p &amp;#61; subname3;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目3成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n            getchar();\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;该学生信息已修改&amp;#xff01;\\n\\n&amp;#34;&lt;/span&gt;);\n            break;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        }\n    }\n    \n    return head;\n}\n \n&lt;span class=\"hljs-comment\"&gt;//查找学生&amp;#xff0c;参数为链表指针&amp;#xff0c;和学生学号&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//不好&amp;#xff0c;应该将学号输入放进子函数&amp;#xff0c;简化主函数结构&amp;#xff0c;减少子函数参数&lt;/span&gt;\nvoid FindStu(pstu x,char y)    \n{\n    pstu head,ptr;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( ptr-&amp;gt;&lt;/span&gt;num &amp;#61;&amp;#61; (int)y)        &lt;span class=\"hljs-comment\"&gt;//因主函数中为节省空间&amp;#xff0c;学号输入采用char数据&amp;#xff0c;故强行准换&lt;/span&gt;\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;已找到该学生信息!\\n如下&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%03d  %s  %s  %5.2f  %s  %5.2f  %s  %5.2f\\n&amp;#34;&lt;/span&gt;,\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);            break;            &lt;span class=\"hljs-comment\"&gt;//注意此处找到并输出信息后要手动退出循环&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( ptr &amp;#61;&amp;#61; NULL )                &lt;span class=\"hljs-comment\"&gt;//查询成功检测&amp;#xff0c;while循环中若找到&amp;#xff0c;则ptr停留在当前学生的结点上&lt;/span&gt;\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未能找到该学生信息&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//统计科目分数区间段的学生,参数为链表指针&amp;#xff0c;科目名称&amp;#xff0c;分数区间上下限&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//同理&amp;#xff0c;参数的录入应放入子函数&amp;#xff0c;简化结构和编程&lt;/span&gt;\nvoid Count(pstu x,char *y,float q,float p)    \n{\n    pstu head,ptr;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;                   &lt;span class=\"hljs-comment\"&gt;//手动设置的查找结果flag&lt;/span&gt;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    strcpy(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,y);\n    \n    &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%s %5.2f %5.2f\\n&amp;#34;,name,q,p);     //检测输入参数的传递&amp;#xff0c;调试程序用&lt;/span&gt;\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL)            &lt;span class=\"hljs-comment\"&gt;//开始查找统计&amp;#xff0c;科目查找用strcmp函数比较科目字符串,返回值0为字符串相等&lt;/span&gt;\n    {                                                            &lt;span class=\"hljs-comment\"&gt;//此处while循环体中&amp;#xff0c;重复的查找步骤太多&amp;#xff0c;应设置科目匹配flag&amp;#xff0c;参照rank()函数&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )     &lt;span class=\"hljs-comment\"&gt;//通过flag将科目确认放在while之外&amp;#xff0c;循环体内只做分数区间的扫描和输出&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( q &amp;lt;&amp;#61; ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;amp;&amp;amp; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score&amp;lt;&amp;#61; p )\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%03d  %s  %s  %5.2f\\n&amp;#34;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score);\n                flag&amp;#43;&amp;#43;;\n            }\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( q &amp;lt;&amp;#61; ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;amp;&amp;amp; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score&amp;lt;&amp;#61; p )\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%03d  %s  %s  %5.2f\\n&amp;#34;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score);\n                flag&amp;#43;&amp;#43;;\n            }\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( q &amp;lt;&amp;#61; ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;amp;&amp;amp; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score&amp;lt;&amp;#61; p )\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%03d  %s  %s  %5.2f\\n&amp;#34;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n                flag&amp;#43;&amp;#43;;\n            }\n        }\n        \n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    }\n \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未能找到该课程该区间分数段的学生&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//学科成绩排名,采用交换数据的方法,参数为链表指针&amp;#xff0c;科目名称&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//同理参数问题&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//链表排序问题&amp;#xff0c;此处用交换结点数据方法&amp;#xff0c;还有其他多种排序方法&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//如&amp;#xff0c;交换结点&amp;#xff0c;辅助指针数组排序(未实现&amp;#xff0c;过程繁杂)&amp;#xff0c;插入法排序等&lt;/span&gt;\nvoid Rank(pstu x,char *y)     \n{\n    pstu head,ptr,qtr;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char len&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    char flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;                    &lt;span class=\"hljs-comment\"&gt;//简化算法,设置科目查找结果判断值,flag&amp;#61;0表示科目输入为未知科目&amp;#xff0c;不存在&lt;/span&gt;\n    int i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;                                                    &lt;span class=\"hljs-comment\"&gt;//i、j循环次数控制参数&lt;/span&gt;\n    int j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;  \n    char temp_name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];            &lt;span class=\"hljs-comment\"&gt;//数据交换时的暂存信息变量&lt;/span&gt;\n    float temp0,temp1,temp2;\n    int temp_num;\n \n    strcpy(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,y);\n    head &amp;#61; x;\n \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL)               &lt;span class=\"hljs-comment\"&gt;//测链表长度,不包括表头结点&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        len&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;              &lt;span class=\"hljs-comment\"&gt;//指针ptr用过之后记得回原位&lt;/span&gt;\n                \n \n    &lt;span class=\"hljs-comment\"&gt;//开始查找科目&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到该科目!&amp;#34;&lt;/span&gt;);\n        return;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//开始排序,冒泡法比较各结点数据&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//此处3个并列的if用switch case更清晰结构&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;    &lt;span class=\"hljs-comment\"&gt;//每一次内循环之后&amp;#xff0c;ptr、qtr必然在最后两个节点上&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;        &lt;span class=\"hljs-comment\"&gt;//故在进行内循环之前&amp;#xff0c;要重新复位ptr、qtr&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;len-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;lt; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score )\n                {\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp_num&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;num;    &lt;span class=\"hljs-comment\"&gt;//交换数据,因数据格式(科目顺序)明确规定&amp;#xff0c;故不再做科目名称的替换&lt;/span&gt;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(temp_name,qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp0&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp1&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp2&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; temp_num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,temp_name);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; temp0;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; temp1;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; temp2;\n                }\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            }\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;len-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;lt; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score )\n                {\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp_num&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(temp_name,qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp0&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp1&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp2&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; temp_num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,temp_name);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; temp0;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; temp1;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; temp2;\n                }\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            }\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;len-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;lt; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score )\n                {\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp_num&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(temp_name,qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp0&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp1&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp2&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; temp_num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,temp_name);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; temp0;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; temp1;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; temp2;\n                }\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            }\n        }\n    }\n \n    &lt;span class=\"hljs-comment\"&gt;//输出排序过后的链表&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL )\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%03d  %s  %s  %5.2f  %s  %5.2f  %s  %5.2f\\n&amp;#34;&lt;/span&gt;,\n              &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score,\n              &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score,\n              &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    }\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//保存文件并退出&amp;#xff0c;文件操作&lt;/span&gt;\nvoid SaveQuit(pstu x)    \n{\n    pstu head,ptr;\n    FILE *fp;\n    char filename[] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;D:\\\\编程学习\\\\编程实践\\\\c语言课程设计1 学生信息管理\\\\data.txt&amp;#34;&lt;/span&gt;;\n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( NULL &amp;#61;&amp;#61; (fp &amp;#61; fopen(filename,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;)) )             &lt;span class=\"hljs-comment\"&gt;//判断文件是否存在及可读&lt;/span&gt;\n    { \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;error!&amp;#34;&lt;/span&gt;); \n        exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;); \n    } \n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ptr !&amp;#61; NULL)                        &lt;span class=\"hljs-comment\"&gt;//遍历链表结点&amp;#xff0c;按data约定格式输出数据&lt;/span&gt;\n    {\n        fprintf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;%03d  %s  %s  %5.2f  %s  %5.2f  %s  %5.2f\\r&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score,\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["文件操作+线性链表+直接插入排序操作实验室", ["有结构体定义如下：\nstruct stuInfo\n{    char id[12];            //数据成员", "      char name[15];", "      float score;", "      struct stuInfo *next;   //指针成员\n};\n任务及要求：\n（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，\n信息如下；\n00001 张三100\n00002 李四 99\n00003 王五 100\n00004 王六 89\n00005 江涛 98\n00006 陈琪 88\n00007 祁廷 91\n（3）接下来，利用键盘输入，动态开辟节点存储空间，将00008 赵四 88信息存在一个节点中，并插入到学号是‘00005’和‘00006’之间；\n（4）再接下来，利用直接插入排序，对链表继续升序排序；\n（5）将完整的线性链表信息从头到尾依次存储到磁盘某个路径下的“score.txt”文件中，存储格式和“stuinfo.txt”文件相同。\n（6）最终将“score.txt”的内容复制粘贴到实验报告的实验结果中。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ? &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;x&lt;/span&gt;(n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;3.0&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;8.0&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(n - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.5lf\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;$ gcc -Wall &lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.c&lt;/span&gt;\n$ ./&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.out&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;0.46875&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性常系数差分方程相关解答。", ["考虑线性常系数差分方程如图所示。", "\n", "\n", "求y [4]，当条件如下图时。", "请给出5个有效数字。"]], "Tag": "算法设计"}
{"Answer": "android:layout_alignParentLeft=\"true\"\r\n android:layout_alignParentRight=\"true\"\r\n\r\n在你的两个`TextView`标签里分别加上这两个属性就可以了", "Konwledge_Point": "线性规划和规约", "Question": ["在一个按钮上方左右排放 textview", ["relative layout:", "\n\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:gravity=\"center\" \nandroid:orientation=\"vertical\">\n<RelativeLayout\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\" >\n<TextView\n    android:id=\"@+id/tv2\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"TextView\"\n    android:layout_alignLeft=\"@id/button1\"/>\n<TextView\n    android:id=\"@+id/tv1\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"TextView\"\n    android:layout_alignRight=\"@id/button1\" />\n</RelativeLayout>\n<Button\n    android:id=\"@+id/button1\"\n    android:layout_width=\"200dp\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Button\" />\n</LinearLayout>\n", "\n\n", "我用了上面的代码没有达到下面的效果：", "\n\n", "tv1--------------tv2", "\n|------Button------|", "\n\n", "想让textview1 在按钮的左上角， textview2 在按钮的右上角，如何实现呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;The code in the question is unsafe because it reads a variable in one goroutine and modifies the variable in another goroutine without synchronization.&lt;/p&gt;\n\n&lt;p&gt;Here's one way to make the code safe:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;type Obj struct {\n   mu sync.Mutex // add mutex\n   ... // other fields as before\n}\n\nfunc (o *Obj) Reader() {\n    o.mu.Lock()\n    data := o.data\n    o.mu.Unlock()\n    for i, value := range data {\n      log.Printf(\"got data[%v] = %v\", i, value)\n    }\n}\n\nfunc (o *Obj) Writer() {\n     o.mu.Lock()\n     o.data = append(o.data, 1234)\n     o.mu.Unlock()\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It's safe for &lt;code&gt;Reader&lt;/code&gt; to range over the local slice variable &lt;code&gt;data&lt;/code&gt; because the &lt;code&gt;Writer&lt;/code&gt; does not modify the local variable &lt;code&gt;data&lt;/code&gt; or the backing array visible through the local variable &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["将append（）附加到另一个线程正在读取的切片上是否安全？", ["\n\n", "Let's say I have many goroutines doing something like this:", "\n\n", "func (o *Obj) Reader() {\n  data := o.data;\n  for i, value := range data {\n    log.Printf(\"got data[%v] = %v\", i, value)\n  }\n}\n", "\n\n", "And one doing this:", "\n\n", "func (o *Obj) Writer() {\n    o.data = append(o.data, 1234)\n}\n", "\n\n", "If ", "data := o.data", " means the internal structure of the slice is copied, this looks like it could be safe, because I'm never modifying anything in the accessible range of the copy. I'm either setting one element outside of the range and increasing the length, or allocating a completely new pointer, but the reader would be operating on the original one.", "\n\n", "Are my assumptions correct and this is safe to do?", "\n\n", "I'm aware that slices are not meant to be \"thread-safe\" in general, the question is more about how much does ", "slice1 := slice2", " actually copy.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;直接写出系数矩阵、然后用反除&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;4,0,2,3&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;  0,3,2,3; 2,0,0,1; 0,-2,1,3];%系数矩阵&lt;/span&gt;\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;9;8;10;7&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;\\b\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;1.7174&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;1.9565&lt;/span&gt;\n   -&lt;span class=\"hljs-number\"&gt;8.7826&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;6.5652&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;还望给个采纳哟&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何用matlab编码下面的线性方程组", ["求下列线性方程组的数值解     ", "\n", "4x1 +2x3 +3x4 = 9        ", "\n", "3x2 +2x3 + 3x4 = 8        ", "\n", "2x1 + x4 = 10        ", "\n", "x3 -2x2 + 3x4 =7"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;同学&amp;#xff0c;之前已经回答过了&amp;#xff0c;都是类似的办法&lt;br /&gt;&lt;a href=\"https://ask.csdn.net/questions/7553073?spm&amp;#61;1005.2025.3001.5141\" id=\"textarea_1635849688238_1635849735358_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;如何用matlab编码下面的线性方程组-编程语言-CSDN问答&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;CSDN问答为您找到如何用matlab编码下面的线性方程组相关问题答案&amp;#xff0c;如果想了解更多关于如何用matlab编码下面的线性方程组 matlab 技术问题等相关问答&amp;#xff0c;请访问CSDN问答。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7553073?spm&amp;#61;1005.2025.3001.5141&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何用matlab编码这个线性方程组", ["求下列线性方程组的数值解         ", "\n", "4x1 +2x3 +3x4 = 9        ", "\n", "3x2 +2x3 + 3x4 = 8        ", "\n", "2x1 + x4 = 10        ", "\n", "x3 -2x2 + 3x4 =7"]], "Tag": "算法设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201809/04/1536025650_882146.jpg)", "Konwledge_Point": "线性规划和规约", "Question": ["最小二乘法 求导，公式不太理解", ["这个公式推导过程不理解，求指导。", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;C&lt;br /&gt;A,B,D结束时&amp;#xff0c;i值都为10&amp;#xff1b;C结束时&amp;#xff0c;i值为11&lt;br /&gt;或者说A&amp;#xff0c;B&amp;#xff0c;D都是循环结束后i才加1&lt;br /&gt;C是循环开始时i就加1了&lt;br /&gt;比如代码块是&amp;#xff1a;&lt;br /&gt;for(int i&amp;#61;0;i&amp;#43;&amp;#43;&amp;lt;10;)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;%d&amp;#34;,i);&lt;/span&gt;&lt;br /&gt;}&lt;br /&gt;A,B,D输出是0到9&lt;br /&gt;而C输出是1到10&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["以下哪个循环和其他三条循环不等价（假设循环体都是一样的）？", ["以下哪个循环和其他三条循环不等价（假设循环体都是一样的）？(请问c怎么理解)", "A.for ( i=0; i<10; i++ ) {...}", "B.for ( i=0; i<10; ++i ) {...}", "C.for ( i=0; i++<10;  ) {...}", "D.for ( i=0; i<=9; i++ ) {...}", "请问c怎么理解"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这篇文章讲的很详细&amp;#xff0c;请看&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/Startapi/article/details/106504162\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;多元线性回归解决机器学习问题的一般方法&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["机器学习一元线性回归错误", ["当我再用一元线性回归画散点图的时候报了这个错", "\n", "import", " pandas ", "as", " pd\n", "import", " matplotlib.pyplot ", "as", " plt\ndf=pd.read_csv(", "'chage.csv'", ")\ndf[", "'Deaths'", "]=df[", "'Deaths'", "].", "str", ".replace(", "','", ",", "''", ")\ndf[", "'Total'", "]=df[", "'Total'", "].", "str", ".replace(", "','", ",", "''", ")\n", "from", " sklearn ", "import", " linear_model\ndf[", "'Deaths'", "].astype(", "float", ") \ndf[", "'Total'", "].astype(", "float", ") \n", "# 设定x和y的值", "\nx = df[[", "'Deaths'", "]] \ny = df[[", "'Total'", "]]\nregr=linear_model.LinearRegression()  \n", "# 拟合fit()", "\nregr.fit(x,y)\n", "print", "(regr.coef_)    ", "# 权重", "\n", "print", "(regr.intercept_)\n", "import", " matplotlib.pyplot ", "as", " plt\nplt.rcParams[", "'font.sans-serif'", "] = [", "'SimHei'", "] \nplt.rcParams[", "'axes.unicode_minus'", "] = ", "False", "\nplt.xlabel(", "'Deaths'", ")\nplt.ylabel(", "'Total'", ")\n", "# 画出原始点:散点图scatter", "\nplt.scatter(x, y, color=", "'black'", ")\n", "# 画出预测点，预测点的宽度为1，颜色为红色", "\nplt.scatter(x, regr.predict(x), color=", "'red'", ",linewidth=", "1", ")\nplt.legend([", "'原始值'", ",", "'预测值'", "], loc = ", "2", ")\nplt.show()\n\n", "\n", "这是我的数据集"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;您可以使用非线性规划库&amp;#xff0c;例如 Math.NET Numerics 中的 NLopt 或者 Accord.NET 中的 Nelder-Mead 和 Simplex 方法来实现非线性规划。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;using &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Math&lt;/span&gt;;\nusing &lt;span class=\"hljs-title class_\"&gt;Accord&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;Optimization&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; NonlinearProgrammingExample\n{\n    &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Program&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;[] args)\n        {\n            &lt;span class=\"hljs-comment\"&gt;// Define the objective function&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearObjectiveFunction&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * (x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]),\n                &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;// number of variables&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Define the constraints&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] * x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;LessThanOrEqualToZero&lt;/span&gt;\n            );\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt; constraint2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearConstraint&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt; &amp;#61;&amp;gt;&lt;/span&gt;\n                x[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] - x[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n                &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,\n                &lt;span class=\"hljs-title class_\"&gt;GreaterThanOrEqualToZero&lt;/span&gt;\n            );\n\n            &lt;span class=\"hljs-comment\"&gt;// Create the solver&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt; solver &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;NonlinearProgram&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt;[] { constraint1, constraint2 });\n\n            &lt;span class=\"hljs-comment\"&gt;// Solve the problem&lt;/span&gt;\n            double[] result &amp;#61; solver.&lt;span class=\"hljs-title class_\"&gt;Solve&lt;/span&gt;();\n\n            &lt;span class=\"hljs-comment\"&gt;// Print the results&lt;/span&gt;\n            &lt;span class=\"hljs-title class_\"&gt;Console&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;WriteLine&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Result: x &amp;#61; [{0}], f(x) &amp;#61; {1}&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;string&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Join&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;, &amp;#34;&lt;/span&gt;, result), &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;.&lt;span class=\"hljs-title class_\"&gt;Value&lt;/span&gt;(result));\n        }\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["c#如何解决非线性规划", ["目前想要用c#做一个求解简单的非线性规划的程序", "之前试过用matlab，但是似乎不能转换文件格式"]], "Tag": "算法设计"}
{"Answer": "http://www.acmerblog.com/hdu-1931-Target-Practice-3006.html", "Konwledge_Point": "线性规划和规约", "Question": ["一个有关于线性规划的问题，具体问题请看下面的问题描述", ["Problem Description", "\nThere are many forms of contests where the contestants (shooters) try to hit targets, either moving or still. In this version there are a number of small balloons sitting on the tops of poles that are in turn stuck in the ground at various points in a large field. These poles are not all the same height. The shooter circles the field and fires at the balloons, the goal being to burst all the balloons with as few shots as possible. Since the balloons offer almost no resistance to a bullet, the bullet will pass right through and possibly hit one or more other balloons. So, by judiciously taking shots, the shooter might need only a very few shots to hit all the targets (provided the shooter is a good marksman, which we will assume is the case).", "\nFor example, the following field of 10 targets can be covered in only four shots, as shown. (The first two numbers at each position indicate the position of the balloon, and the third number the height.)", "\nYour job is to determine the fewest number of shots necessary to hit all the targets in a given field.", "\n\n", "Input", "\nThere will be multiple test cases. Each test case will consist of an integer n (<= 50) indicating the number of target positions to follow. A value of n = 0 indicates end of input. There will follow n integer triples, x y h, indicating a balloon at position (x, y) in the field at height h. (There will be at most one balloon at any position (x, y).) All integers are greater than 0 and no greater than 100. Furthermore assume that the shooter can take shots from anywhere on the field at any height. For simplification, assume here that the balloons are points and that the bullets can pass through the poles on which the balloons are perched.", "\n\n", "Output", "\nEach test case should produce one line of output of the form:", "\nTarget set k can be cleared using only s shots.", "\nwhere k is the number of the test case, starting at 1, and the value of s is the minimum number of shots needed to hit all the targets in the set.", "\n\n", "Sample Input", "\n10", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 85 40 58 100 75 7", "\n9", "\n5 15 4 10 60 52 17 27 4 33 20 10 33 85 31 42 52 4 70 70 22", "\n78 88 4 100 75 7", "\n0", "\n\n", "Sample Output", "\nTarget set 1 can be cleared using only 4 shots.", "\nTarget set 2 can be cleared using only 3 shots."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;只有5个元素&amp;#xff0c;分别是0,1,2,3,4&amp;#xff0c;下标为5超出了上限&amp;#xff0c;请检查一下代码。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python小白上路，用pso算法解决多元带约束的非线性规划，", ["用pso算法解决多元带约束的非线性规划，一直错误，盼望各位大佬多多指点我一下.", "\n\n", "照猫画虎，还没有人解答，还不知道去看什么，也不知道怎么办，救救孩子吧", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;11&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-comment\"&gt;%fun1.m文件&lt;/span&gt;\n function f&amp;#61;fun1(x)\nf&amp;#61;sum(x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;\nend\n\n&lt;span class=\"hljs-comment\"&gt;%fun2.m文件&lt;/span&gt;\nfunction [g,h]&amp;#61;fun2(x)\ng&amp;#61;[-x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#43;x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-20&lt;/span&gt;];\nh&amp;#61;[x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-3&lt;/span&gt;,-x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\nend\n\n命令行输入\n\nclear\nx0&amp;#61;[&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;];    &lt;span class=\"hljs-comment\"&gt;%初值&lt;/span&gt;\nlb&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\nub&amp;#61;[inf,inf,inf];\n&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;&amp;#61;[];b&amp;#61;[];&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;&amp;#61;[];beq&amp;#61;[];\n[x,fval]&amp;#61;fmincon(&lt;span class=\"hljs-string\"&gt;&amp;#39;fun1&amp;#39;&lt;/span&gt;,x0,&lt;span class=\"hljs-symbol\"&gt;A&lt;/span&gt;,b,&lt;span class=\"hljs-symbol\"&gt;Aeq&lt;/span&gt;,beq,lb,ub,&lt;span class=\"hljs-string\"&gt;&amp;#39;fun2&amp;#39;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;22&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;[x,y]&amp;#61;ode45(&amp;#64;cal,[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]);\nplot(x,y(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;));\n \n&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-title function_\"&gt;cal&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;~,y&lt;/span&gt;)\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title function_\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)&amp;#61;&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;)&amp;#61;-&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;res&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;/span&gt;)&amp;#61;-0.5*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;/span&gt;)*&lt;span class=\"hljs-title function_\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;/span&gt;);\n&lt;span class=\"hljs-title function_\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用matlab求非线性规划和常微分方程组", ["11．求下列非线性规划，初值为（0.5，0.5,0.5）", "\n", "\n", "12.求常微分方程组的解。", "范围[0 10]"]], "Tag": "算法设计"}
{"Answer": "这句话是正确的，因为栈和队列都必须在两头进行操作而不能随机的存取内部任何一个结点，所以是顺序存取的线性表。栈只能在栈顶进行存取，而队列只能从队尾插入结点队头删除结点，所以存取位置限制不同。", "Konwledge_Point": "线性规划和规约", "Question": ["栈和队列都是限制存取点的线性结构", ["栈和队列都是限制存取点的线性结构这句话是什么意思？", "\n不太理解，求教"]], "Tag": "算法设计"}
{"Answer": "参考http://blog.sina.com.cn/s/blog_7671b3eb01013vma.html", "Konwledge_Point": "线性规划和规约", "Question": ["怎样求2个变量的非线性相关性(nonlinear correlation)？", ["线性的用correlation coefficient", "\n非线性的呢？", "\ninformation gain（信息增益）、CHI suqare（卡方分布）、mutual information（互信息）,期望交叉熵 好像只能用来检测feature和class的关联度，不能检测feature和feature之间的", "\nT-Test和F-test算出来的那个值不知道如何利用，我能根据T-Test的结果反映出2个变量的相关度高低吗"]], "Tag": "算法设计"}
{"Answer": "MatrixEquation me = new MatrixEquation(x点的数组， y点的数组, n);\r\nme.XXX调用，具体看你上面注释", "Konwledge_Point": "线性规划和规约", "Question": ["c#实现最小二乘法线性拟合", ["public class MatrixEquation", "\n    {", "\n        private double[,] gaussMatrix;", "\n        private int coe;", "\n\n", "    public MatrixEquation()\n    {\n    }\n\n    public MatrixEquation(double[] arrX, double[] arrY, int n)\n    {\n        coe = n;\n        gaussMatrix = GetGauss(GetXPowSum(arrX, n), GetXPowYSum(arrX, arrY, n), n);\n    }\n\n    public double[,] GetGaussMatrix()\n    {\n        return gaussMatrix;\n    }\n\n    public double[] GetResult()\n    {\n        return ComputeGauss(gaussMatrix, coe);\n    }\n\n    /// <summary> 计算获取x散点的幂次和数组 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"n\">函数拟合次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowSum(double[] arrX, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xPow = new double[2 * n + 1]; //存储X散点的幂次值\n\n        for (int i = 0; i < xPow.Length; i++)\n        {\n            if (i == 0)\n            {\n                xPow[i] = m;\n            }\n            else\n            {\n                //计算x的i次方和\n\n                double max = 0;\n                for (int j = 0; j < m; j++)\n                {\n                    if (arrX[j] == 0)\n                        max = max + 1;\n                    else\n                        max = max + Math.Pow(arrX[j], i);\n                }\n                xPow[i] = Math.Round(max, 4);\n            }\n        }\n        return xPow;\n    }\n\n    /// <summary>计算获取xy的幂次和序列 </summary> \n    /// <param name=\"arrX\">x散点序列</param> \n    /// <param name=\"arrY\">y散点序列</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[] GetXPowYSum(double[] arrX, double[] arrY, int n)\n    {\n        int m = arrX.Length;//X散点的个数\n\n        double[] xyPow = new double[n + 1]; //仓储X散点的幂次值\n\n        for (int i = 0; i < xyPow.Length; i++)\n        {\n            //计算xy的i次方和\n\n            double max = 0;\n            for (int j = 0; j < m; j++)\n            {\n                if (arrX[j] == 0)\n                    max = max + 1;\n                else\n                    max = max + Math.Pow(arrX[j], i) * arrY[j];\n            }\n            xyPow[i] = Math.Round(max, 4);\n        }\n        return xyPow;\n    }\n\n    /// <summary> 获取高斯矩阵(增广矩阵) </summary>            \n    /// <param name=\"arrX\">X的幂次和</param> \n    /// <param name=\"arrXY\">XY的幂次和</param> \n    /// <param name=\"n\">拟合曲线次数</param> \n    /// <returns></returns> \n    protected double[,] GetGauss(double[] arrX, double[] arrXY, int n)\n    {\n        double[,] gauss = new double[n + 1, n + 2];\n        for (int i = 0; i < n + 1; i++)\n        {\n            int j;\n            int m = i;\n            for (j = 0; j < n + 1; j++)\n            {\n                gauss[i, j] = arrX[m];\n                m++;\n            }\n            gauss[i, j] = arrXY[i];\n        }\n\n        return gauss;\n    }\n\n    /// <summary> 求解拟合曲线的系数 </summary>                  \n    /// <param name=\"gauss\">线性方程的增广矩阵</param> \n    /// <param name=\"n\">方程次数</param> \n    /// <returns></returns> \n    protected double[] ComputeGauss(double[,] gauss, int n)\n    {\n        double[] a = new double[n + 1];\n        double s;\n        int matrixLine = n + 1;\n        for (int i = 0; i < n + 1; i++)\n            a[i] = 0;\n        //循环每列\n\n        for (int j = 0; j < matrixLine; j++)\n        {\n            //每列J行以后的绝对值最大值\n\n            double max = 0;\n            int k = j;\n            for (int i = j; i < matrixLine; i++)\n            {\n                if (Math.Abs(gauss[i, j]) > max)\n                {\n                    max = gauss[i, j];\n                    k = i;\n                }\n            }\n            //判断j行否为最大值行 若不是将j行调换为最大值行\n\n            if (k != j)\n            {\n                double temp; for (int m = j; m < matrixLine + 1; m++)\n                {\n                    temp = gauss[j, m];\n                    gauss[j, m] = gauss[k, m];\n                    gauss[k, m] = temp;\n                }\n            }\n            if (max == 0)\n            {\n                //奇异矩阵无解\n\n                return a;\n            }\n            //进行初等行变换得到上三角矩阵\n\n            for (int i = j + 1; i < matrixLine; i++)\n            {\n                s = gauss[i, j];\n                for (int m = j; m < matrixLine + 1; m++)\n                {\n                    gauss[i, m] = Math.Round(gauss[i, m] - gauss[j, m] * s / gauss[j, j], 6);\n                }\n            }\n        }\n        //根据倒推方式一次计算现行方程的解\n\n        for (int i = matrixLine - 1; i >= 0; i--)\n        {\n            s = 0;\n            for (int j = i + 1; j < matrixLine; j++)\n            {\n                s += gauss[i, j] * a[j];\n            }\n            a[i] = Math.Round((gauss[i, matrixLine] - s) / gauss[i, i], 6);\n        }\n        //返回方程的解即拟合曲线的系数\n\n        return a;\n    }\n}\n    ------------------------\n    以上是本人在网上看到的一个例子，但是不理解该怎么样测试这个类，请各位大神赐教！或者可以提供相关参考链接也可以。\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;拟合的时候可以加一点惩罚因子&amp;#xff0c;意思就是可以允许有一两个错误点&amp;#xff0c;这样可以避免离群点&amp;#xff0c;这也是正则化的思想&amp;#xff0c;你可以搜搜拉格朗日优化。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性回归/拟合直线如何去除离群点/噪声？", ["对于图1中这种散点，需要拟合出图2中的两条直线，怎么处理噪声点？", "\n", "最小二乘法受离群点的影响较大，请问一下大家这种情况有没有什么好回归方法可以拟合？或者说在回归之前有没有什么方法能去除掉这种离群点？", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "df1是你的数据，df1.loc[:, 'd']在最后面的列添加列名‘d’的一列数据，然后将数组d赋值即可\r\n\r\n```\r\ndf1 = pd.DataFrame(np.random.randn(8, 3), columns=['a', 'b', 'c'])\r\n    print(df1)\r\n    d=range(8)\r\n    df1.loc[:, 'd'] = d\r\n    print(df1)\r\n \r\n```", "Konwledge_Point": "线性规划和规约", "Question": ["python dataframe如何线性插值缺省值", ["编程小白一枚，想问下如何对缺省值线性插值，网上查到都是直接填充平均值，线性插值有什么简便的方法吗？", "\n\n", "示例：", "\n2017/11/7   1", "\n2017/11/8   2 ", "\n2017/11/9   None", "\n2017/11/10  None", "\n2017/11/11  5", "\n2017/11/12  None", "\n2017/11/13  None", "\n2017/11/14  None", "\n2017/11/15  None", "\n2017/11/16  15", "\n2017/11/17  None", "\n2017/11/18  None", "\n2017/11/19  None", "\n2017/11/20  11", "\n\n", "我想让缺省值填充成", "\n2017/11/7   1", "\n2017/11/8   2 ", "\n2017/11/9   3", "\n2017/11/10  4", "\n2017/11/11  5", "\n2017/11/12  7", "\n2017/11/13  9", "\n2017/11/14  11", "\n2017/11/15  13", "\n2017/11/16  15", "\n2017/11/17  14", "\n2017/11/18  13", "\n2017/11/19  12", "\n2017/11/20  11", "\n\n", "PS：类似如果想三次样条插值呢？"]], "Tag": "算法设计"}
{"Answer": "function  linprog2_1\r\nf=[1000,1000,1000,1000];\r\nA=[13.9,13.0,13.6,15.7;\r\n    0.17,0.04,0.08,0.11;\r\n    0.41,0.39,0.48,0.92;\r\n    0.13,0.21,0.14,0.24;\r\n    0.15,0.10,0.15,0.18;\r\n    0.3,0.44,0.52,0.58;\r\n    0.49,0.39,0.49,0.39;\r\n    3390,3240,3210,2240;\r\n    -13.9,-13.0,-13.6,-15.7;\r\n    -0.17,-0.04,-0.08,-0.11;\r\n    -0.41,-6.39,-0.48,-0.92;\r\n    -0.13,-0.21,-0.14,-0.24;\r\n    -0.15,-0.10,-0.15,-0.18;\r\n    -0.3,-0.44,-0.52,-0.58;\r\n    -0.49,-0.39,-0.49,-0.39;\r\n    -3390,-3240,-3210,-2240;];%负号指把不等式两边同时乘以-1把大于等于号转化为小于等于号\r\nb=[16,0.9,0.8,100,0.5,1.2,0.6,3310,-14,-0.1,-0.4,0,-0.1,-0.4,-0.32,-3110];\r\nAeq=[1,1,1,1];\r\nbeq=1;%组成之和为1\r\nlb=[0,0,0,0];\r\nub=[];\r\n[x,fval]=linprog(f,A,b,Aeq,beq,lb,ub)\r\n\r\n\r\nend\r\n![图片说明](https://img-ask.csdn.net/upload/201708/15/1502793328_544601.jpg)", "Konwledge_Point": "线性规划和规约", "Question": ["Matlab 不等式 线性方程式最优解", ["单价都是1000，X1到X4是4中原料占比，总和为100%，求解成本最低的最优解", "\n答案(X1=26.26%，X2=0.00%，X3=58.15%，X4=15.25%)", "\nMin s = 1000 * X1 + 1000 * X2 + 1000 * X3 + 1000 * X4;", "\n\n", "14<= 13.9 * X1 + 13.0 * X2 + 13.6 * X3 + 15.7 * X4 <=16;", "\n0.1<= 0.17 * X1 + 0.04 * X2 + 0.08 * X3 + 0.11 * X4 <= 0.9", "\n0.4<= 0.41 * X1 + 0.39 * X2 + 0.48 * X3 + 0.92 * X4 <=0.8;", "\n0<=0.13 * X1 + 0.21 * X2 + 0.14 * X3 + 0.24 * X4 <= 100;", "\n0.1<=0.15 * X1 + 0.10 * X2 + 0.15 * X3 + 0.18 * X4 <= 0.5;", "\n0.4<=0.3 * X1 + 0.44 * X2 + 0.52 * X3 + 0.58 * X4 <= 1.2;", "\n0.32<=0.49 * X1 + 0.39 * X2 + 0.49 * X3 + 0.39 * X4 <=0.6;", "\n3110<=3390 * X1 + 3240 * X2 + 3210 * X3 + 2240 * X4 =3310;", "\n\n", "帮忙看看，我写的肯定有问题，这个方法（linprog）能这么用吗？还有更好的方法吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;可以这样&amp;#xff01;&lt;br /&gt;令&lt;code class=\"language-javascript\"&gt;x&amp;#61;[y1,y2,y3,epsilon]&lt;/code&gt;&lt;br /&gt;现在就是要目标函数是&lt;code class=\"language-javascript\"&gt;epsilon &amp;#61; 0*x(1)&amp;#43;0*x(2)&amp;#43;0*x(3)&amp;#43;1*x(4)&lt;/code&gt;最小&lt;br /&gt;不等式约束和等式约束分别为&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/682036604236186.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;化成代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;A &amp;#61; [&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; \n    0,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;];%不等式约束的A\nb &amp;#61; [0; 0; 0; 0.314272; &lt;span class=\"hljs-string\"&gt;-0&lt;/span&gt;.830297; &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;.088269];%不等式约束的b【满足A*x≤b】\nAeq &amp;#61; [1,1,1,0];%等式约束的Aeq\nbeq &amp;#61; [3.942592];%等式约束的beq\nf &amp;#61; [0,0,0,1];%目标函数的线性组合&amp;#xff0c;即epsilon &amp;#61; 0*x(1)&lt;span class=\"hljs-string\"&gt;&amp;#43;0&lt;/span&gt;*x(2)&lt;span class=\"hljs-string\"&gt;&amp;#43;0&lt;/span&gt;*x(3)&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;*x(4)\nmin_epsilon &amp;#61; linprog(f,A,b,Aeq,beq)%求解\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;计算结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;min_epsilon &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n   &lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n  -&lt;span class=\"hljs-number\"&gt;1.314197333333333&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问如图线性规划问题 如何用matlab求解呀", ["\n", "想请问下这个线性规划问题 整么用matlab的linprog()函数求解呀， 着实谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;下面是一个示例&amp;#xff0c;用矩阵求逆的方法来求解这个线性方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;将系数矩阵和常数向量分别存储在 A 和 b 的变量中&amp;#xff0c;如下所示&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 3 -1 2; 12 3 0];&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; 10; 8];&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;然后&amp;#xff0c;可以通过计算 A 的逆来求解方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; inv(A) * b&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这样&amp;#xff0c;就可以得到方程组的解&amp;#xff0c;即 x &amp;#61; [1; 2; -1]。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;注意&amp;#xff1a;求矩阵逆是一个计算量比较大的操作&amp;#xff0c;在实际应用中应该尽量避免使用。此外&amp;#xff0c;如果方程组不存在解或者有多个解&amp;#xff0c;那么求逆法就不能用了。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用矩阵求逆法求线性方程组的解", ["4x1+2x2−x3=2    3x1−x2+2x3=10  12x1+3x2=8"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;convhull是凸包计算函数&amp;#xff0c;k是选择的点和连接顺序&amp;#xff0c;v是面积&amp;#xff0c;也可以自己写源码。有用麻烦采纳一下&amp;#xff0c;谢谢&amp;#xff0c;有问题可以私聊&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["MATLAB中的convhull函数的使用说明", ["\n", "P", " = [", "0", " ", "0", "; ", "1", " ", "1", "; ", "1", ".5", " ", "0", ".5", "; ", "1", ".5", " ", "-0.5", "; ", "1", ".25", " ", "0", ".3", "; ", "1", " ", "0", "; ", "1", ".25", " ", "-0.3", "; ", "1", " ", "-1", "];\n[k,v] = convhull(", "P", "); \nplot(", "P", "(:,", "1", "),", "P", "(:,", "2", "),", "'*'", ") \nhold on\n plot(", "P", "(k,", "1", "),", "P", "(k,", "2", "))\n", "\n", "这里面的k，v，都是分别是什么含义啊，为什么就可以把这外围的一圈点都围起来啊？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;br /&gt; &lt;br /&gt;&lt;br /&gt;本次提问扣除的有问必答次数&amp;#xff0c;已经为您补发到账户&amp;#xff0c;我们后续会持续优化&amp;#xff0c;扩大我们的服务范围&amp;#xff0c;为您带来更好地服务。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["非线性规划的专业课排课问题研究", ["问题如下：", "\n", "\n", "\n", "这是提示：", "\n", "\n", "希望是用python或者matlab求解出来。目前我表达式都写不出来，想了好久没明白，希望得到帮助。", "\n", "我的思考：开始我查资料是希望通过遗传算法来求解的，我看这一篇文章挺像的：", "https://blog.csdn.net/weixin_42062229/article/details/94504604", "他的比我这个复杂很多 。但是我还是没看懂 。不知道怎么用遗传算法。", "\n", "于是我就想根据题目提示用非线性规划中的01规划求解，但我表达式一直列不出来，所以不知道代码咋写。", "\n", "以下是我二维转一维的部分", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;注意到第六行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;prob&lt;/span&gt;.Constraints.cons1 &amp;#61; &lt;span class=\"hljs-number\"&gt;280&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60000&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;但对应的是第二个约束&amp;#xff0c;应该改为&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;prob&lt;/span&gt;.Constraints.cons2 &amp;#61; &lt;span class=\"hljs-number\"&gt;280&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;250&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;*x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;60000&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行后的结果为[64.5161290322581,167.741935483871,0]与lingo结果差异不大&lt;br /&gt;完整代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;prob &amp;#61; optimproblem(&lt;span class=\"hljs-string\"&gt;&amp;#39;ObjectiveSense&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;max&amp;#39;&lt;/span&gt;);\n\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &amp;#61; optim&lt;span class=\"hljs-meta\"&gt;var&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;,3,&lt;span class=\"hljs-string\"&gt;&amp;#39;LowerBound&amp;#39;&lt;/span&gt;,0);\nprob.Objective &amp;#61; 2&lt;span class=\"hljs-comment\"&gt;*x(1) &amp;#43; 3*x(2) &amp;#43; 4*x(3);&lt;/span&gt;\n\ncons1 &amp;#61; 1.5&lt;span class=\"hljs-comment\"&gt;*x(1) &amp;#43; 3*x(2) &amp;#43; 5*x(3) &amp;lt;&amp;#61; 600;&lt;/span&gt;\ncons2 &amp;#61; 280&lt;span class=\"hljs-comment\"&gt;*x(1) &amp;#43; 250*x(2) &amp;#43; 400*x(3) &amp;lt;&amp;#61; 60000;&lt;/span&gt;\nprob.Constraints.cons1 &amp;#61; cons1;\nprob.Constraints.cons2 &amp;#61; cons2;\n\n[sol,fval,flag,&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;] &amp;#61; solve(prob);\nsol.&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;\ntx&amp;#61;&lt;span class=\"hljs-meta\"&gt;round&lt;/span&gt;(sol.&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["看下Matlab怎么求解线性规划方程，为啥跟lingo偏差这么大", ["为什么我用matlab 和lingo求一个线性规划问题答案完全不一样，我知道lingo答案应该是对的，Matlab是错在哪里了，我后面加取整也不对，初学Matlab", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;自己已解决&lt;br /&gt;记录一下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1.思路如下图&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/755989613946124.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/597600713946198.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/258030713946176.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/129861713946128.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;2.两个二维数组每一行的数据分别做线性回归 的 代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import numpy as np\nfrom scipy import stats, linalg\n\ng &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[[1,6,8]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[3,2,1]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[2,6,10]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[8,9,11]&lt;/span&gt;])\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;g:&amp;#34;&lt;/span&gt;, g)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;g第一行:&amp;#34;&lt;/span&gt;, g[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; g&lt;span class=\"hljs-selector-class\"&gt;.shape&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a(行数):&amp;#34;&lt;/span&gt;, a)&lt;/span&gt;&lt;/span&gt;\nm &amp;#61; np&lt;span class=\"hljs-selector-class\"&gt;.array&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[[2,7,9]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[6,5,2]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[4,8,12]&lt;/span&gt;,&lt;span class=\"hljs-selector-attr\"&gt;[10,12,15]&lt;/span&gt;])\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;m:&amp;#34;&lt;/span&gt;, m)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;m(第一行):&amp;#34;&lt;/span&gt;, m[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(a):\n    res &amp;#61; stats&lt;span class=\"hljs-selector-class\"&gt;.linregress&lt;/span&gt;(g&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;, m&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;)\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;res:&amp;#34;&lt;/span&gt;, res)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["对二维数组，逐元素地线性拟合，调用 stats.linregress(x, y)", ["问题遇到的现象和发生背景", "\n", "我需要对长时间序列的栅格数据逐象元地做线性拟合。即x轴为第1", "n年第一个传感器的栅格数据，轴为第1", "n年第二个传感器的栅格数据。", "简化下来相当于就是两个二维数组对应元素做线性拟合，但是出现了问题：", "ValueError: too many values to unpack (expected 4)", "\n", "于是我尝试例举了二维数组进行线性拟合出现了同样的问题：", "\n", "是stats.linregress(x, y)函数无法实现对二维数组的线性拟合吗？有没有能直接对二维数组直接线性拟合的办法？", "转换成一维的话又怎么回到二维的状态呢？该如何解决呢？", "\n", "问题相关代码", "\n", "import numpy as np\nfrom scipy import stats, linalg\n\ndef f(a):\n     b = np.array(", "[[5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]", ")\n     n = np.array(", "[[9, 10, 11, 12], [13, 14, 15, 16],[17, 18, 19, 20]]", ")\n     y = np.concatenate((b,n), axis=", "0", ")\n     ", "print", "(", "\"y:\"", ", y)\n     res = stats.linregress(a, y)\n     ", "return", " res\n\nc = np.array(", "[[1,2,3,4],[5,6,7,8],[9,10,11,12]]", ")\nd = np.array(", "[[5,6,7,8],[9,10,11,12],[13,14,15,16]]", ")\nm = np.concatenate((c, d), axis=", "0", ")\n", "print", "(", "\"m:\"", ", m)\nres = f(m)\n", "\n", "谢谢！"]], "Tag": "算法设计"}
{"Answer": "看来很少有人做这个，自己给自己顶一下", "Konwledge_Point": "线性规划和规约", "Question": ["有关非线性最优化手眼标定的求助帖", ["最近在做标定手眼关系（eye in hand ）中用到非线性最优化来求解方程AX=XB，", "\n但对于非线性最优化了解不多，理解困难。", "\n参考文中中定义函数f，对函数f进行非线性最优化", "\n函数f定义可见附图", "\n始终q为四元数（用来表示旋转矩阵），t表示平移向量，R表示旋转矩阵", "\n要优化的元素为q，t（即旋转矩阵和平移向量）", "\n这里如何求解真是不懂，请各位赐教   help"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;除了线性调频脉冲&amp;#xff0c;PD雷达的发射脉冲还可以是&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;频率跳变脉冲&amp;#xff08;FMCW脉冲&amp;#xff09;&amp;#xff1a;它通过改变发射信号的频率&amp;#xff0c;从而实现距离测量和速度测量。与LFM脉冲相比&amp;#xff0c;FMCW脉冲的带宽较窄&amp;#xff0c;但可以实现更高的距离测量精度。&lt;/p&gt;\n&lt;p&gt;矩形脉冲&amp;#xff1a;一种时间宽度和幅度相等的脉冲&amp;#xff0c;可以用于雷达探测和测距。&lt;/p&gt;\n&lt;p&gt;窄带脉冲&amp;#xff1a;一种带宽很窄的脉冲&amp;#xff0c;可以用于目标检测和跟踪。与LFM脉冲相比&amp;#xff0c;窄带脉冲的距离分辨率较差&amp;#xff0c;但可以实现更高的信噪比。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["PD雷达的发射脉冲是线性调频脉冲？", ["PD雷达是脉冲多普勒雷达，PD雷达的发射脉冲除了是线性调频脉冲还可以是什么脉冲？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;问题分析&lt;br /&gt;出现复数解应该是因为你的“zw”函数中有1.5次方和0.5次方&amp;#xff0c;而fsolve搜索解的时候对应幂的底数可能是负的&amp;#xff0c;这样对应的1.5次方和0.5次方就会出现复数&amp;#xff0c;进而导致目标函数值为复数&amp;#xff0c;最终导致得到的解为复数。&lt;br /&gt;&amp;#xff08;2&amp;#xff09;问题的可能改进代码&lt;br /&gt;考虑在zw中将最后的函数值取模&amp;#xff0c;这样可以得到实数解&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;function&lt;/span&gt; F &amp;#61; zw_real(X)\n&lt;span class=\"hljs-attribute\"&gt;da&lt;/span&gt;&amp;#61; X(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;dr&lt;/span&gt;&amp;#61; X(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;ct&lt;/span&gt;&amp;#61; X(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;dc&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;Dw&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;303&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;627&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;dm&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;35&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;*pi;\n&lt;span class=\"hljs-attribute\"&gt;Kn&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;0363&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;^&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;ri&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;405&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;Ri&lt;/span&gt;&amp;#61;dm/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;(ri-Dw/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*cos(a);\n\n&lt;span class=\"hljs-attribute\"&gt;Fr&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;4500&lt;/span&gt;;Fa&amp;#61;&lt;span class=\"hljs-number\"&gt;3000&lt;/span&gt;;M&amp;#61;&lt;span class=\"hljs-number\"&gt;800000&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;p1&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;p2&lt;/span&gt; &amp;#61; pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; Fa-Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;#43;Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; Fr-Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p1)&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)-Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p2)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&amp;#61;M-dm/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)-dc/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p1)&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p1)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;#43;dm/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;#43;dc/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Kn*A^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*sum((cos(a) &amp;#43; (dr/A)*cos(p2)-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p2)/A-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*ct*cos(p2)/A).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;./((sin(a) &amp;#43; da/A&amp;#43;Ri*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; (cos(a) &amp;#43; dr* cos(p1)/A&amp;#43;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;*dc*(ct/A)*cos(p1)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt;&amp;#61;abs(F);  %给函数返回值取模\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;clear;clc;\n&lt;span class=\"hljs-attribute\"&gt;h&lt;/span&gt;&amp;#61;optimset;\nh.&lt;span class=\"hljs-attribute\"&gt;Display&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;;\nh.&lt;span class=\"hljs-attribute\"&gt;TolX&lt;/span&gt;&amp;#61;1e-6;\nformat long;\n[jg,fval,exitflag]&amp;#61;fsolve(&lt;span class=\"hljs-string\"&gt;&amp;#39;zw_real&amp;#39;&lt;/span&gt;,[0,0,0],h) %求解\nformat short;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#xff08;3&amp;#xff09;代码运行结果截图&lt;br /&gt;这是将zw的返回值取模得到的结果&amp;#xff0c;不知道能不能对上你的理论解&amp;#xff0c;欢迎讨论&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/58539584806615.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab fsolve求解非线性方程组为什么得到复数解", ["用matlab fsolve求解非线性方程组得到的是复数解，该方程组有实数解，而且发现求得的复数解的实部和答案基本吻合，这是为什么呢？下面是我建立的方程和fsolve求解的程序", "\n", "function", " F = zw(X)\n", "da", "= X(", "1", ");\n", "dr", "= X(", "2", ");\n", "ct", "= X(", "3", ");\n", "dc", "=", "31", ";\n", "Dw", " = ", "12", ".", "303", ";\n", "A", " = ", "0", ".", "627", "; \n", "dm", " = ", "58", ";\n", "a", "=", "35", "/", "180", "*pi;\n", "Kn", "=", "3", ".", "0363", "*", "10", "^", "5", ";\n", "ri", "=", "6", ".", "405", ";\n", "Ri", "=dm/", "2", "+(ri-Dw/", "2", ")*cos(a);\n\n    ", "Fr", "=", "4500", ";Fa=", "3000", ";M=", "800000", ";\n    ", "p1", " = ", "0", ":", "2", "*pi/", "13", ":", "24", "*pi/", "13", ";\n    ", "p2", " = pi/", "13", ":", "2", "*pi/", "13", ":", "25", "*pi/", "13", ";\n    ", "F", "(", "1", ") = Fa-Kn*A^", "1", ".", "5", "*sum((sin(a) + da/A+Ri*(ct/A)*cos(p1)).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")+Kn*A^", "1", ".", "5", "*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).^", "2", ").^", "0", ".", "5", ");\n    ", "F", "(", "2", ") = Fr-Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p1)+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")-Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p2)-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ");\n    ", "F", "(", "3", ")=M-dm/", "2", "*Kn*A^", "1", ".", "5", "*sum((sin(a) + da/A+Ri*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")-dc/", "2", "*Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p1)+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).*cos(p1).*(((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*ct*cos(p1)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ")+dm/", "2", "*Kn*A^", "1", ".", "5", "*sum((sin(a) - da/A-Ri*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) - da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).^", "2", ").^", "0", ".", "5", ")+dc/", "2", "*Kn*A^", "1", ".", "5", "*sum((cos(a) + (dr/A)*cos(p2)-", "0", ".", "5", "*dc*(ct/A)*cos(p2)).*cos(p2).*(((sin(a) -da/A-Ri*(ct/A)*cos(p2)).^", "2", " + (cos(a) + dr* cos(p2)/A-", "0", ".", "5", "*dc*ct*cos(p2)/A).^", "2", ").^", "0", ".", "5", " - ", "1", ").^", "1", ".", "5", "./((sin(a) + da/A+Ri*(ct/A)*cos(p1)).^", "2", " + (cos(a) + dr* cos(p1)/A+", "0", ".", "5", "*dc*(ct/A)*cos(p1)).^", "2", ").^", "0", ".", "5", ");\n  \n", "end", "\n\n", "h", "=optimset;\n", "h", ".Display='", "off", "';\n", "h", ".TolX=", "1", "e-", "6", ";", "\n[jg,fval,exitflag]=fsolve('zw',[0,0,0],h) %求解", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;fmincon默认是求最小值&amp;#xff0c;你需要求解的是最大值&amp;#xff0c;所以目标函数f中应该取个负号。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问如图非线性规划问题 如何用matlab求解呀", ["\n", "我原本想用fmincon函数求解，先建立目标函数：", "\n", "\n", "然后由于约束条件都是线性的，没有非线性条件，所以就直接将线性约束加进去求解", "\n", "\n", "但最终得到的结果不对，请问是哪里错了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用RecyclerView啊&amp;#xff0c;然后加载两种子布局就OK了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["安卓相对布局和线性布局规划问题", ["\n", "如图所示布局该如何规划？是全部采用相对布局还是全部采用线性布局比较好？刚接触XML不久"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;#define N 2&lt;/span&gt;\nstruct student{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; id;\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; kaoqun;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biaoxian;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; zuoye;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biji;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; sum;\n}stud[N],t;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个学生信息\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].id,&amp;amp;stud[i].name);\n        fflush(stdin);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].kaoqun,&amp;amp;stud[i].biaoxian,&amp;amp;stud[i].zuoye,&amp;amp;stud[i].biji);\n        stud[i].sum &amp;#61; stud[i].kaoqun*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biaoxian*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].zuoye*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biji*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    \n    //排序\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - i; j&amp;#43;&amp;#43;){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按成绩对学生信息进行排序\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (stud[j].sum &amp;gt; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].sum){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;整型数字的比较\n                t &amp;#61; stud[j];\n                stud[j] &amp;#61; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n        }\n    }\n    //打印\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号\\t姓名\\t考勤\\t表现\\t作业\\t笔记\\t总分\\t\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].id);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t&amp;#34;&lt;/span&gt;, stud[i].name);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].kaoqun);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biaoxian);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].zuoye);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biji);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d \\n&amp;#34;&lt;/span&gt;, stud[i].sum);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["文件操作＋线性链表＋直接插入排序", ["1）文件操作+线性链表+直接插入排序操作实验室。", "现有结构体定义如下：", "struct stuInfo", "{", "    char id[12];            //数据成员", "    char name[15];", "    float score;", "\n", "struct stuInfo *", "next", ";   ", "//", "指针成员\n", "\n", "};", "任务及要求：", "（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；", "（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，信息如下；", "00001 张三 100", "00002 李四 99", "00003 王五 100", "00004 王六 89", "00005 江涛 98", "00006 陈琪 88", "00007 祁廷 91", "（3）接下来，利用键盘输入，动态开辟节点存储空间，将00008 赵四 88信息存在一个节点中，并插入到学号是‘00005’和‘00006’之间；", "（4）再接下来，利用直接插入排序，对链表继续升序排序；", "（5）将完整的线性链表信息从头到尾依"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;针对多目标非线性整数规划问题&amp;#xff0c;目前常用的算法包括遗传算法、粒子群算法、差分进化算法等。另外&amp;#xff0c;也可以尝试使用混合整数线性规划和近似多目标优化方法等。&lt;/p&gt;\n&lt;p&gt;对于具体应用的选择&amp;#xff0c;需要考虑问题的特点和实际情况。不同算法的适用范围和优缺点也不同&amp;#xff0c;因此需要综合考虑选择合适的算法。&lt;/p&gt;\n&lt;p&gt;关于学习方法&amp;#xff0c;可以通过阅读相关论文、专业书籍、参加相关学术会议等方式学习。以下是一些相关学习资源的推荐&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;《多目标优化理论与方法》一书&amp;#xff0c;作者为陈志华等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;学术期刊&amp;#xff0c;例如IEEE Transactions on Evolutionary Computation、European Journal of Operational Research等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;相关学术会议&amp;#xff0c;例如International Conference on Evolutionary Multi-Criterion Optimization、International Symposium on Combinatorial Optimization等。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;MATLAB官方文档提供了各种优化算法的实现和示例&amp;#xff0c;可以在MATLAB官网进行查找和学习。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;开源优化软件&amp;#xff0c;例如Gurobi、CPLEX等&amp;#xff0c;可以通过学习其官方文档和实例来了解相关算法。&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["多目标非线性整数规划", ["请问，针对（多目标非线性整数规划）问题，用什么算法比较好？哪里可以借鉴学习"]], "Tag": "算法设计"}
{"Answer": "字段计算器中可以算出所有点的坐标值，然后导出到Excel中。距离计算和线性回归都可以用Excel的公式计算。", "Konwledge_Point": "线性规划和规约", "Question": ["arcgis计算距离，线性回归分析的问题", ["想问下已经在ARCGIS上标注了点并连成线，想知道怎么计算每个点到起始点的距离，并能把距离、时间放在坐标里，进行线性回归分析"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;能不能请把代码附上&amp;#xff0c;不要截图&amp;#xff0c;这样真的看不出来呀&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab的fmincon函数求解非线性规划问题，我实在搞不懂呀(哭)", ["以下有问题的方法都是我自己琢磨的(菜)", "想写一个非线性规划的求解代码，但是那个非线性规划问题的目标函数比较复杂，带积分长这样", "\n", "\n", "然后我就把这个积分先一个个算出来再加上(不知道这样对不对），", "得到目标函数z = 79", "q(1) + (398", "q(2))/5 + (398", "q(3))/5 + (801", "q(4))/10 + (11", "q(0)^2)/20 + (13", "q(1)^(7/5))/28 + (13", "q(2)^(7/5))/28 + (13", "q(3)^(7/5))/28 + (13*q(4)^(7/5))/28", "\n", "后面我就建了fun1(当然是看的网上的一步步来的)", "\n", "fun2", "\n", "\n", "然后写了主代码(我不知道这么写对不对，但是我写出来报好多错，该怎么写呀，这个代码是我找的，我不会写)", "\n", "\n", "后面我又换了一个主代码", "\n", "\n", "当然又是一堆错", "我不理解，这个错误fmincon", "\n", "第一次提问，求指点，小的这厢谢过了！(非编程专业的很多都不懂望理解！)"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/weixin_45012973/article/details/107282323\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;MATLAB遗传算法工具箱的使用及实例(线性规划)&lt;/font&gt;&lt;/a&gt; 也许能够解决你的问题&amp;#xff0c;你可以看下&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab做线性规划中一个报错无法解决望各位解惑！", ["用matlab做一个关于线性规划的问题，但是出现以下形况望各位解惑！", "matlab版本为2022a", "代码：", "clc,clear", "x = optimvar('x',4,3,'LowerBound',0);", "wh = [18,15,23,12];", "wj = [10,16,8];", "vj = [6800,8700,5300];", "rou = [18/480,15/650,23/580,12/390];", "lirun = [3100,3800,3500,2850];", "a = sum(x,2);", "b = sum(x);", "z = lirun*a;", "prob = optimproblem('Objective',z,'ObjectiveSense','max');", "prob.Constraints.c1 = a <= wh';", "prob.Constraints.c2 = b' <= wj';", "prob.Constraints.c3 = sum(x(1:4,1)./rou') <= 6800;", "prob.Constraints.c4 = sum(x(1:4,2)./rou') <= 8700;", "prob.Constraints.c5 = sum(x(1:4,3)./rou') <= 5300;", "prob.Constraints.c6 = vj(1)/b(1) == vj(2)/b(2);", "prob.Constraints.c7 = vj(1)/b(1) == vj(3)/b(3);", "[sol,fval] = solve(prob);", "sol.x", "fval", "报错：", "错误使用 optim.problemdef.OptimizationProblem/solve", "SOLVE requires a non-empty initial point structure to solve a nonlinear problem."]], "Tag": "算法设计"}
{"Answer": "http://datakung.com/?p=50&amp;replytocom=5", "Konwledge_Point": "线性规划和规约", "Question": ["怎么判定线性回归的好坏", ["分类器的好坏在于准确率。", "\n那线性回归呢？", "\n我现在有10个特征和1个回归值，我想比较一下，用前5个特征做回归好，还是用后5个特征做回归好，该比较什么值呢？"]], "Tag": "算法设计"}
{"Answer": "现在的处理器支持SMT（intel商标化的名称叫“超线程”），也就是说你看到的计算机上的逻辑处理器核心的数量比物理的要多（一般是2倍，在一些处理器上是4倍或者更多）\r\n但是逻辑处理器因为共享计算核心，所以并不能成倍提高性能。比如一个8逻辑处理器的计算机，实际上只有4个内核，那么它充其量只能比单个处理器内核提高大约5倍的性能。\r\n\r\n另一个问题是，虽然你的处理器可以并行，但是磁盘还是只有一个，如果两个进程需要同时访问磁盘完成查询，那么显然只能轮流访问而不是同时访问，这部分无法并行。别的资源也类似。\r\n因此，一个程序能加速到什么程度，取决于可以并行的代码的比例。\r\n假设一个程序中有50%的操作不能并行，那么即便你有无穷多个处理器，并发无穷多个进程，那么你的程序的运行速度相比较单进程也最多提高2倍。\r\n（50%无法并行的部分所用的时间假设是t/2，50%可以并行的操作用时是t/2，总时间是t/2+t/2=t，假设你有无穷多个进程，那么总时间就是t/2+0=t/2）", "Konwledge_Point": "线性规划和规约", "Question": ["Node使用了多进程，但QPS（每秒查询率）没有线性增长", ["阅读《深入浅出Node.js》10.2.3小节，里面测试了单进程和多进程下QPS的对比，性能确实提高了，但是却没有解释为什么性能并没有与CPU的数量成线性增长。", "\n我自己也试了，确实如此。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你看2787行的三个条件&amp;#xff0c;一个一个在代码中测试&amp;#xff0c;找到那个是假&amp;#xff0c;然后去搜一下&lt;br /&gt;我这里没有opencv的包&amp;#xff0c;所以没法试&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Python在线性规划的问题", ["\n", "想问一下为什么一些数后面加上点之后就能运行了呢？是因为最后的答案是浮点数吗？感谢大家的解答！"]], "Tag": "算法设计"}
{"Answer": "http://ask.csdn.net/questions/270851", "Konwledge_Point": "线性规划和规约", "Question": ["合并两个单链表的算法", ["设带头结点的线性单链表A＝（a1,a2,⋯⋯am）,B＝(b1,b2⋯⋯bm),试编写一个按下列规则合并A,B为线性单链表C的算法，使得C＝(a1,b1,⋯⋯,bm,bm+1,⋯⋯,bn),m小于等于或者C＝(b1,a1,⋯⋯bn,an,an+1,…,am),m大于n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;your code is doing a linear search , a binary search require that the data is sorted , in your case its a regular file , plus in a binary search you start the search from the middle and compare the value your searching with the value in the middle and decide whether to go left or right depending on how your data is sorted .\ni hope it helped a little.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性或二进制搜索??  -PHP", ["\n\n", "I have some code that I wrote and it works really well. Except I am not sure whether what i have written is linear or bineary searching?! I get really confused about the differences. Could someone please clarify the differences and what my code is so I can explain it to someone?", "\n\n", "-The code below searches a value inputted by the user. And goes through a csv file of data. I then saves all values into a new array which has the results. Hopefully that makes sense.", "\n\n", "I just want to know whether my code is linear or binary? I get so confused about them *", "\n\n", "$SearchThis = isset($_POST['Search']) ? $_POST['Search'] : '';\n//empty()\n$SearchThis = !empty($_POST['Search']) ? $_POST['Search'] : '';\n\n\n\n// Grabs the csv file (and its existing data)  and makes it into an array\n$csv = array();\n$lines = file('data/StaffData.csv', FILE_IGNORE_NEW_LINES);\nforeach ($lines as $key => $value)\n{\n    $csv[$key] = str_getcsv($value);\n}\n\n\n\n//A new array which will display the search results\n$new_csv = array(); \n\n//This displays which rows have matched the search (it is put in an array)\n\n//Looks through full names\n$keys = array_keys(array_column($csv, 0), $SearchThis);  //  original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n//Looks through phone numbers\n$keys = array_keys(array_column($csv, 1), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n//Looks through gender\n$keys = array_keys(array_column($csv, 2), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n//Looks through Birthday\n$keys = array_keys(array_column($csv, 3), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n\n//Looks through Type of work\n$keys = array_keys(array_column($csv, 4), $SearchThis);  // original code\nforeach($keys as $index) {                               // Iterate over the keys\n    $new_csv[] = $csv[$index];                           // Copy the matching rows to our new array\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;肯定会变化&amp;#xff0c;这是正常现象&amp;#xff0c;是因为你没有指定随机种子&amp;#xff0c;所以每次训练的参数初始化是不同的。导致分数不同&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问python建模-线性回归，每运行一次，r2值会变化吗", ["请问python建模-线性回归，每运行一次，r2值会变化，是正常的吗？", "\n", "import pandas as pd\nimport xlrd\n", "survey", "=pd.read_excel(\"D:\\data\\第26节数据源-survey.xlsx\")\nsurvey.head()\n\n", "survey_suv", "=survey[survey[", "'category'", "]==", "'SUV'", "]\nsurvey_suv\n\nsurvey_suv.corr()\n\nimport seaborn as sns\nsns.heatmap(", "data", "=survey_suv.corr())\n\nsns.scatterplot(", "data", "=survey_suv,x='price_ratio',y='price')\n\n", "#创建自变量和因变量", "\n", "x", "=survey_suv[", "'price_ratio'", "]\n", "y", "=survey_suv[", "'price'", "]\n\n", "#导入机器学习交叉验证包的分割模块", "\n", "from", " sklearn.model_selection import train_test_split\n\n", "#二八分，拆分过程", "\nx_train,x_test,y_train,", "y_test", "=train_test_split(x,y,train_size=0.8,test_size=0.2)\n\n", "#检查拆分结果", "\n", "print", "(", "'原始数据集大小：'", ",x.shape,", "'训练数据集大小:'", ",x_train.shape,", "'测试训练集大小:'", ",x_test.shape)\n\n", "#导入线性模型包", "\n", "from", " sklearn.linear_model import LinearRegression\n\n", "#创建模型", "\n", "model", "=LinearRegression()\n\n", "#训练模型", "\nmodel.fit(x_train,y_train)\n\nx_train\n\n", "x_train", "=x_train.values.reshape(-1,1)\n", "x_test", "=x_test.values.reshape(-1,1)\nx_train\n\nmodel.fit(x_train,y_train)\n\n", "a", "=model.intercept_\n", "b", "=model.coef_\n", "a", "=round(float(a),2)\n", "b", "=round(float(b),2)\n", "#print('一元一次方程为：y={}{}x'.format(a,b))", "\n\n", "r2", "=model.score(x_test,y_test)\nr2\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性系统有两个属性&amp;#xff1a;齐次性和叠加性&amp;#xff0c;若系统为y&amp;#xff08;n&amp;#xff09;&amp;#61;T[f(n)]&amp;#xff0c;齐次&amp;#xff1a;T[af(n)]&amp;#61;aT[f(n)],叠加&amp;#xff1a;T[f1(n)&amp;#43;f2(n)]&amp;#61;T[f1(n)]&amp;#43;T[f2(n)]&amp;#xff0c;所以既齐次又叠加的系统为线性系统&amp;#xff0c;亦可用此判断。  【望采纳】&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何判断是否为线性系统", ["零状态线性如何判断，导数和积分部分应该怎么计算，是求导和求积分一定是零吗，是需要带公式吗", "![img](", "https://img-mid.csdnimg.c", "\n", "n/release/static/image/mid/ask/162075222366153.jpg \"#left\")"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;clc,clear,&lt;span class=\"hljs-keyword\"&gt;close&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;all&lt;/span&gt;;\n%hamming窗\nM&amp;#61;&lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;;alpha&amp;#61;(M&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:M&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\nhd&amp;#61;(cos(pi*(n-alpha)))./(n-alpha);hd(alpha&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nw_ham&amp;#61;(hamming(M))&lt;span class=\"hljs-string\"&gt;&amp;#39;; h&amp;#61;hd.*w_ham; [Hr,w,P,L]&amp;#61;Hr_Type3(h);\n%plots\nsubplot(221);stem(n,hd);\ntitle(&amp;#39;&lt;/span&gt;Ideal Impulse Respons&lt;span class=\"hljs-string\"&gt;e&amp;#39;) \naxis([-1 M -1.2 1.2]);\nxlabel(&amp;#39;&lt;/span&gt;n&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;hd(n)&lt;span class=\"hljs-string\"&gt;&amp;#39;) \nsubplot(222);stem(n,w_ham);\ntitle(&amp;#39;&lt;/span&gt;Hamming &lt;span class=\"hljs-keyword\"&gt;Window&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#39;) \naxis([-1 M 0 1.2]);xlabel(&amp;#39;&lt;/span&gt;n&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;w(n)&lt;span class=\"hljs-string\"&gt;&amp;#39;) \nsubplot(223);stem(n,h);\ntitle(&amp;#39;&lt;/span&gt;Actual Impulse Respons&lt;span class=\"hljs-string\"&gt;e&amp;#39;) \naxis([-1 M -1.2 1.2]);xlabel(&amp;#39;&lt;/span&gt;n&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;h(n)&lt;span class=\"hljs-string\"&gt;&amp;#39;)\nsubplot(224);plot(w/pi,Hr/pi);\ntitle(&amp;#39;&lt;/span&gt;Amplitude Respons&lt;span class=\"hljs-string\"&gt;e&amp;#39;);grid;\naxis([0 1 0 1]);xlabel(&amp;#39;&lt;/span&gt;frenquency &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; pi units&lt;span class=\"hljs-string\"&gt;&amp;#39;);ylabel(&amp;#39;&lt;/span&gt;slope &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; pi units&lt;span class=\"hljs-string\"&gt;&amp;#39;);\n\n\n%子函数&amp;#xff1a;\nfunction [Hr,w,c,L] &amp;#61; Hr_Type3(h);\n% Computes Amplitude response of Type-3 LP FIR filter\n% -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  ---\n% [Hr,w,c,L] &amp;#61; Hr_Type3(h)\n\n% Hr &amp;#61; Amplitude Response\n%  w &amp;#61; frequencies between [0 pi] over which Hr is computed\n%  c &amp;#61; Type-3 LP filter coefficients\n%  L &amp;#61; Order of Hr\n%  h &amp;#61; Type-3 LP impulse response\n%\nM &amp;#61; length(h);\nL &amp;#61; (M-1)/2;\nc &amp;#61; [2*h(L&amp;#43;1:-1:1)];\nn&amp;#61;[0:1:L];\nw &amp;#61; [0:1:500]&amp;#39;&lt;/span&gt;*pi/&lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;;\nHr &amp;#61; sin(w*n)*c&lt;span class=\"hljs-string\"&gt;&amp;#39;;\nend&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/959299082666183.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何利用海明窗设计N=24（23阶）的FIR线性相位数字微分器（用matlab），并求出h（n）（传递函数），并求出h（n）（传递函数），并画出幅频特性和相频特性", ["这个FIR线性相位数字微分器怎么用matlab设计？", "\n", "如何利用海明窗设计N=24（23阶）的FIR线性相位数字微分器（用matlab实现），并求出h（n）（传递函数），并画出幅频特性和相频特性。", "\n", "好难啊，怎么做教一下，请给出matlab代码和图，谢谢啦"]], "Tag": "算法设计"}
{"Answer": "是可以的，我发现我一直显示不出来是因为我没有给标题设置宽度比和高度比，所以显示不出来，因为不知道layout__below怎么引用布局就重新倒着重写了一遍布局\r\n```&lt;include layout=\"@layout/title\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"8%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_2\"\r\n        android:text=\"      \"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"20%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/enter\"\r\n        android:text=\"登录\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toLeftOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;Button\r\n        android:id=\"@+id/register\"\r\n        android:text=\"注册\"\r\n        android:layout_above=\"@id/null_2\"\r\n        android:layout_toRightOf=\"@id/null_2\"\r\n        app:layout_widthPercent=\"20%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;TextView\r\n        android:id=\"@+id/null_1\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/enter\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"55%\"\r\n        app:layout_heightPercent=\"2%\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/key\"\r\n        android:text=\"密码\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/null_1\"\r\n        android:layout_alignLeft=\"@id/null_1\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_key\"\r\n        android:layout_alignTop=\"@id/key\"\r\n        android:layout_toRightOf=\"@id/key\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的密码\"\r\n        android:maxLines=\"1\"\r\n        /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/account\"\r\n        android:text=\"账户\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\r\n        android:layout_above=\"@id/key\"\r\n        android:layout_alignLeft=\"@id/key\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_widthPercent=\"15%\"\r\n        app:layout_heightPercent=\"10%\"\r\n    /&gt;\r\n    &lt;EditText\r\n        android:id=\"@+id/input_account\"\r\n        android:layout_alignTop=\"@id/account\"\r\n        android:layout_toRightOf=\"@id/account\"\r\n        app:layout_widthPercent=\"50%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        android:hint=\"请输入你的手机号\"\r\n        android:maxLines=\"1\"\r\n    /&gt;\r\n    &lt;TextView\r\n        android:id=\"@+id/null_3\"\r\n        android:text=\"      \"\r\n        android:layout_above=\"@id/account\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"10%\"\r\n        app:layout_heightPercent=\"10%\"\r\n        /&gt;\r\n\r\n    &lt;ImageView\r\n        android:id=\"@+id/image_1\"\r\n        android:src=\"@drawable/image_1\"\r\n        android:layout_above=\"@id/null_3\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        app:layout_widthPercent=\"100%\"\r\n        app:layout_heightPercent=\"30%\"\r\n        /&gt;\r\n\r\n```\r\n最后得图![图片说明](https://img-ask.csdn.net/upload/201905/30/1559211604_22833.png)", "Konwledge_Point": "线性规划和规约", "Question": ["请问百分比布局可以引用线性布局的标题栏吗？求大神解答！！！", ["想在百分比布局里尝试引用线性布局的标题栏，怎么也不成功，我是按照第一行代码那本书的引用布局部分做的，怎么也弄不出来，好懵", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;&lt;br /&gt;(1)这是非线性函数求最小值&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;format long%设置显示的小数位长一点\nf &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) (&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;cos(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;*log&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;))/exp(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fminsearch(f&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;)%初值给&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;0.663769531250000&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;(2)因为目标函数不是未知数的线性组合&amp;#xff0c;所以需要用到fmincon函数求解&lt;br /&gt;代码供参考&amp;#xff0c;注释的都注释了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;function main()\nfunc &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-5&lt;/span&gt;*&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%目标函数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%给初始值&lt;/span&gt;\nA&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;; b &amp;#61; -6;%线性约束A和b&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; fmincon(func&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;A&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;b&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;[]&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;&lt;span class=\"hljs-title\"&gt;&amp;#64;nonlinfun&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nfunction [&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ceq] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; nonlinfun(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) %定义非线性约束函数\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;-&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;%非线性约束条件&lt;/span&gt;\nceq &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; []&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果是&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;1.333333116738571&lt;/span&gt;\n  -&lt;span class=\"hljs-number\"&gt;0.988889101134474&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;即x1 &amp;#61;  1.333333116738571&amp;#xff1b; x2&amp;#61; -0.988889101134474&lt;/p&gt;\n&lt;p&gt;有帮助望题主给个采纳&amp;#xff0c;先行谢谢啦&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何在matlab上实现线性规划问题", ["无约束", "（1）min f(x)＝(x³＋cos x＋x lgx)/e× (0<x<1)", "（2）min x(1)²＋x(2)²－x(1) x(2)－2 x(1)－5(2)", "        { －(x（1）－1)²＋x(2)≥0", "           2 x(1)－3 x(2)＋6≥0", "如何在matlab中输入，求步骤。谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;仿佛看到会计学&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Excle 运筹学 线性规划 正常步骤。", ["\n\t", "\n\t", "\n\n", "2、", "\n\n", "\n\n", "某企业生产甲、乙、丙三种产品，其每单位所消耗工时分别为1.6、 2.0、 2.5小时，每单位所需原料A分别为24、20、 12 kg,所需原料B分别为14、10、18kg。生产线每月正常工作时间为240小时，原料A、B的总供应量限制为2400kg 和1500kg。生产一个甲、乙、丙产品各可获利润525、678、 812元。", "\n", "\n已知因为每单位丙产品不完全反应会产生5kg副产品丁，每kg需要排污费200元。", "\n副产品丁的需求量为每月不超过150kg。应如何确定生产计划，可使总利润最大"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一看就是正在学数据结构的同学&amp;#xff0c;现在没有电脑得空给你敲敲&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性表链式存储结构。。", ["要求：", "\n", "1", ".写出线性表链式存储结构；\n\n", "2", ".写出链式存储的常用操作（函数）；\n\n", "3", ".编写实现集合逆置函数；\n\n", "4", ".编写测试函数；\n\n", "5", ".编写", "main", "函数运行程序。\n"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/v5zsq/article/details/47948397", "Konwledge_Point": "线性规划和规约", "Question": ["The Balance              一元线性同余方程", ["Description ", "\n给出两种质量的砝码，和一件物品，问要多少砝码能称出物品，砝码的个数满足两种砝码的数量和尽量小，如果还有多解满足两种砝码的总质量最少 ", "\nInput ", "\n多组用例，每组用例包括三个整数a，b和d分别表示两种砝码的质量以及物品的质量，以0 0 0结束输入 ", "\nOutput ", "\n对于每组用例，输出能称出物品质量的砝码个数，砝码的个数满足两种砝码的数量和尽量小，如果还有多解满足两种砝码的总质量最少 ", "\nSample Input ", "\n700 300 200 ", "\n500 200 300 ", "\n500 200 500 ", "\n275 110 330 ", "\n275 110 385 ", "\n648 375 4002 ", "\n3 1 10000 ", "\n0 0 0 ", "\nSample Output ", "\n1 3 ", "\n1 1 ", "\n1 0 ", "\n0 3 ", "\n1 1 ", "\n49 74 ", "\n3333 1 "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这类似于这种构架就行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(m&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;n&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;p&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;q) 这里写你的约束&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\ng &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) myfun(g&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nfmincon(g&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ……&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; &amp;#64;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;) nlinc(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt;ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;))\n\nfunction [&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ceq] &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; nlinc(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-punctuation\"&gt;,&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; num&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;cell(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;(:))&amp;#39;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nceq &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;[]&lt;span class=\"hljs-comment\"&gt;; %我这里设若等式约束没有&lt;/span&gt;\nif(条件&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\nelseif(条件&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) \n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\nelse\n&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; ro&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;{:})\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于fmincon 函数非线性约束的符号转换。需要一个通用方案", ["\n", "之前的公式计算了fmincon需要的 三个非线性约束，已经转换成了标准型。", "目标函数是求 minimum： m^2+n^2+p^2+q^2", "想要一个转化方式将约束中包含的m,n,p,q 自动转化成x(1),x(2),x(3),x(4)这种形式。", "因为这三约束根据给出的初始条件不同，约束也不一样，所以需要一个通用方案。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;选特征&amp;#xff0c;打标签&amp;#xff0c;调sklearn 包训练&amp;#xff0c;预测&amp;#xff0c;结束&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["机器学习如何利用线性回归预测鲍鱼数据的年龄和利用贝叶斯预测鲍鱼的性别啊", ["数据描述性统计（包括数据来源，数据计量方法，每个变量的最大最小值、均值、方差、标准差等）、定量分析（包括所用方法的特点、选用标准或依据、模型计算步骤、代码展示、结果）、结论。"]], "Tag": "算法设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201504/09/1428565544_388835.png)这个地方错了，改一下！", "Konwledge_Point": "线性规划和规约", "Question": ["线性布局问题 计算器布局", ["4/09/1428560451_585625.png)", "\n\n", "为什么没有出现第一张效果，求解", "\n代码如下：", "\n<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n    android:layout_width=\"match_parent\"", "\n    android:layout_height=\"match_parent\"", "\n    android:orientation=\"vertical\" >", "\n\n", "<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n    <EditText \n        android:id=\"@+id/msg\" android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:hint=\"@null\" />\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"@+string/m_c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m+\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"m-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"mr\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"c\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+/-\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"/*\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"*\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"7\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"8\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"9\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"-\"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n <LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\">\n\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"4\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"5\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"6\"\n        android:layout_weight=\"1\"></Button>\n\n    <Button android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" android:text=\"+    \"\n        android:layout_weight=\"1\"></Button>\n</LinearLayout>\n\n<LinearLayout android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\" android:orientation=\"horizontal\"\n    android:layout_weight=\"0\">\n\n        <LinearLayout android:layout_width=\"wrap_content\"\n             android:layout_height=\"wrap_content\" android:orientation=\"vertical\"\n             > \n\n            <LinearLayout android:layout_width=\"match_parent\"\n                 android:layout_height=\"match_parent\" android:orientation=\"horizontal\">\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n                 <Button android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\" android:layout_weight=\"1\"\n                    android:text=\"0\"></Button>\n            </LinearLayout>  \n\n\n\n        </LinearLayout>             \n</LinearLayout>  \n", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;就是四个不等约束加一个目标函数&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;10000&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;9000&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;150&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];&lt;span class=\"hljs-meta\"&gt;\n[x,fval]&amp;#61;linprog(-c,a,b);% 由于要获得最大值&amp;#xff0c;所以c取负号\nx\nfval &amp;#61; -fval % 最大值\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;Optimal&lt;/span&gt; solution found.\n\n\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &amp;#61;\n\n   &lt;span class=\"hljs-attribute\"&gt;6&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;428571428571425&lt;/span&gt;\n   &lt;span class=\"hljs-attribute\"&gt;4&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;285714285714288&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;fval&lt;/span&gt; &amp;#61;\n\n     &lt;span class=\"hljs-attribute\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;028571428571428&lt;/span&gt;e&amp;#43;&lt;span class=\"hljs-number\"&gt;05&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性规划问题是这样解吗？总感觉方向不对", ["clear", "\n", "\n", "\n", "c=[10000;9000];a=[6,5;10,20];b=[60;150];", "Aeq=[6 5];beq=60;", "[x,fval]=linprog(c,a,b,Aeq,beq,zeros(2,1))", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这里的无约束条件不是图片中了的吧&amp;#xff0c;被你修改了的&amp;#xff0c;运行程序没错&amp;#xff0c;你可以看看是不是参数上设置错了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["fmincon函数非线性优化问题", ["clear;\nclc;\n\nlb = [", "1", ";", "0.625", ";", "25", ";", "25", "];\nub = [", "1.375", ";", "1", ";", "150", ";", "240", "];\n\nA=[-", "1", " ", "0", " ", "0.0193", " ", "0", ";\n    ", "0", " -", "1", " ", "0.00954", " ", "0", ";\n    ", "0", " ", "0", " ", "0", " ", "1", ";\n    -", "1", " ", "0", " ", "0", " ", "0", ";\n    ", "0", " -", "1", " ", "0", " ", "0", "];\nb=[", "0", ";", "0", ";", "240", ";-", "1.1", ";-", "0.6", "];\n\n", "function", " [", "c", ",", "ceq", "] = ", "mycon", "(x)", "\n", "c", "=-", "pi", "*", "x", "(3)", "*", "x", "(3)", "-4/3*", "pi", "*", "x", "(3)", "*", "x", "(3)", "*", "x", "(3)", "+1296000;", "\nceq = [];\n", "end", "\n\n", "function", " [ ", "f7", " ] = ", "mypeaks", "( x )", "\n", "f7", "=0.6224*", "x", "(1)", "*", "x", "(3)", "*", "x", "(4)", "+1.7781*", "x", "(2)", "*", "x", "(3)", "^2+3.1661*", "x", "(1)", "^2*", "x", "(4)", "+19.84*", "x", "(1)", "^2*", "x", "(3)", ";", "\n", "end", "\n\n", "for", " i=", "1", ":", "50", "\n    x0 = [", "1", ";", "0", ";", "0", ";", "0", "]+", "1", ".*rand(", "4", ",", "1", ");  % randomly determine the initial point\n%     x0 = [", "0.5", " -", "1.5", "];\n    % sqp\n    sqp_opts = optimset(", "'Algorithm'", ",", "'sqp'", ",", "'Display'", ",", "'iter-detailed'", " );\n    [x,fval,exitflag,output]=fmincon(@mypeaks,x0,A,b,[],[],lb,ub,@mycon,sqp_opts);\n%     %% ga\n%     ga_opts = gaoptimset(", "'Display'", ",", "'off'", ",", "'PopulationSize'", ",", "100", ");\n%     [x,fval,exitflag,output]=ga(@mypeaks,", "4", ",A,b,[],[],lb,ub,@mycon,ga_opts);\n%     %% ", "Record", " data\n    recordY(i) = fval;\n    recordNfe(i) = output.funcCount;\n", "end", "\n\n", "\n", "\n", "最优解答案应该在8960，但是我的sqp算法算出来50个都是8949，没有变化很不对啊，请问哪里出了问题呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;倒幂函数曲线y &amp;#61; a &amp;#43; b ⋅ 1 x y&amp;#61;a&amp;#43;b \\cdot \\dfrac{1}{x}y&amp;#61;a&amp;#43;b⋅&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; 型&lt;br /&gt;令x ′ &amp;#61; 1 x {x}&amp;#39;&amp;#61;\\dfrac{1}{x}x&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; , 则得y &amp;#61; a &amp;#43; b ⋅ x ′ y&amp;#61;a&amp;#43;b \\cdot {x}&amp;#39;y&amp;#61;a&amp;#43;b⋅x&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;双曲线1 y &amp;#61; a &amp;#43; b ⋅ 1 x \\dfrac{1}{y}&amp;#61;a&amp;#43;b \\cdot \\dfrac{1}{x}&lt;br /&gt;y&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; &amp;#61;a&amp;#43;b⋅&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; 型&lt;br /&gt;令x ′ &amp;#61; 1 x , y ′ &amp;#61; 1 y {x}&amp;#39;&amp;#61;\\dfrac{1}{x}, {y}&amp;#39;&amp;#61;\\dfrac{1}{y}x&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; ,y&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;y&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; , 则得y ′ &amp;#61; a &amp;#43; b ⋅ x ′ {y}&amp;#39;&amp;#61;a&amp;#43;b \\cdot {x}&amp;#39;y&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;b⋅x&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;幂函数曲线y &amp;#61; d ⋅ x b y&amp;#61;d \\cdot x^by&amp;#61;d⋅x&lt;br /&gt;b&lt;br /&gt; 型&lt;br /&gt;令y ′ &amp;#61; I n y , x ′ &amp;#61; I n x , a &amp;#61; I n d {y}&amp;#39;&amp;#61;Iny, {x}&amp;#39;&amp;#61;Inx, a&amp;#61;Indy&lt;br /&gt;′&lt;br /&gt; &amp;#61;Iny,x&lt;br /&gt;′&lt;br /&gt; &amp;#61;Inx,a&amp;#61;Ind, 则得y ′ &amp;#61; a &amp;#43; b x ′ {y}&amp;#39;&amp;#61;a&amp;#43;b{x}&amp;#39;y&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;bx&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;指数曲线y &amp;#61; d ⋅ e b x y&amp;#61;d \\cdot e^{bx}y&amp;#61;d⋅e&lt;br /&gt;bx&lt;br /&gt; 型&lt;br /&gt;令y ′ &amp;#61; I n y , a &amp;#61; I n d {y}&amp;#39;&amp;#61;Iny, a&amp;#61;Indy&lt;br /&gt;′&lt;br /&gt; &amp;#61;Iny,a&amp;#61;Ind, 则得y ′ &amp;#61; a &amp;#43; b x {y}&amp;#39;&amp;#61;a&amp;#43;bxy&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;bx.&lt;br /&gt;倒指数曲线y &amp;#61; d ⋅ e b x y&amp;#61;d \\cdot e^{\\dfrac{b}{x}}y&amp;#61;d⋅e&lt;br /&gt;x&lt;br /&gt;b&lt;br /&gt;​&lt;/p&gt;\n&lt;p&gt; 型&lt;br /&gt;令y ′ &amp;#61; I n y , x ′ &amp;#61; 1 x , a &amp;#61; I n d {y}&amp;#39;&amp;#61;Iny, {x}&amp;#39;&amp;#61;\\dfrac{1}{x}, a&amp;#61;Indy&lt;br /&gt;′&lt;br /&gt; &amp;#61;Iny,x&lt;br /&gt;′&lt;br /&gt; &amp;#61;&lt;br /&gt;x&lt;br /&gt;1&lt;br /&gt;​&lt;br /&gt; ,a&amp;#61;Ind, 则得y ′ &amp;#61; a &amp;#43; b x ′ {y}&amp;#39;&amp;#61;a&amp;#43;b{x}&amp;#39;y&lt;br /&gt;′&lt;br /&gt; &amp;#61;a&amp;#43;bx&lt;br /&gt;′&lt;br /&gt; .&lt;br /&gt;————————————————&lt;br /&gt;版权声明&amp;#xff1a;本文为CSDN博主「Mestarxh」的原创文章&amp;#xff0c;遵循CC 4.0 BY-SA版权协议&amp;#xff0c;转载请附上原文出处链接及本声明。&lt;br /&gt;原文链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/wumian0123/article/details/81677076\" id=\"textarea_1646733412386_1646733450457_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/wumian0123/article/details/81677076&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["选择用哪一种非线性回归模型？", ["选择用哪一种非线性回归模型？", "怎么进行选择的啊？", "根据图形还是？", "感谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误是使用了未定义的变量.&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["初学者求助：用python解一阶线性微分方程组", ["目标：由f3，f4求解i（t），e（t）的数值解（给定初值）", "\n\n", "想拜托大佬们帮我看看这个思路是否可行，以及为何报错：", "\n\n", "from sympy import *", "\n\n", "t=symbols('t')", "\n\n", "f3=Eq(i(t).diff(t),1/5.1*e(t)-11.45*t**-1.662*i(t))", "\n\n", "f4=Eq(e(t).diff(t),-1/5.1*e(t)+4*i(t))", "\n\n", "eq=(f3,f4)", "\n\n", "# 第一步求解i(t),e(t)的结果：", "\n\n", "# i(t)=C1*x0(t) + C2*x0(t)*Integral(0.196078431372549*exp(m)*exp(n)/x0(t)**2, t)", "\n\n", "# e(t)=C1*y0(t) + C2*(y0(t)*Integral(0.196078431372549*exp(m)*exp(n)/x0(t)**2, t) + exp(m)*exp(n)/x0(t))", "\n\n", "# 其中：", "\n\n", "# m=Integral(-0.196078431372549, t)=-0.196078431372549*t", "\n\n", "# n=Integral(-11.45*t**(-1.662), t)=17.2960725075529*t**(-0.662)", "\n\n", "# 第二步赋初值：C1=4156,C2=25000,将原方程组转换为求解未知函数x0(t),y0(t)的方程组(在下面程序中用x,y分别代替x0,y0)：", "\n\n", "x,y=symbols('x,y',cls=Function)", "\n\n", "f3=Eq(4900.0*Derivative(x(t),t)*Integral(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + 4156*Derivative(x(t),t) + 4900.0*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t),1/5.1*(4156*y(t) + 25000*(y(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + exp(-0.196*t)*exp(17.296*t**(-0.662))/x(t)))-11.45*t**-1.662*(4156*x(t) + 25000*x(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t)))", "\n\n", "f4=Eq(-286248.8*t**(-1.662)*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t) + 4900.0*Derivative(y(t), t)*Integral(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2, t) + 4156*Derivative(y(t), t) - 4900.0*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t) + 4900.0*y(t)*exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2 - 25000*exp(17.296*t**(-0.662))*exp(-0.196*t)*Derivative(x(t), t)/x(t)**2,-1/5.1*(4156*y(t) + 25000*(y(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t) + exp(-0.196*t)*exp(17.296*t**(-0.662))/x(t)))+4*(4156*x(t) + 25000*x(t)*0.196*integrate(exp(17.296*t**(-0.662))*exp(-0.196*t)/x(t)**2,t)))", "\n\n", "eq=(f3,f4)", "\n\n", "results=dsolve(eq)", "\n\n", "for result in results:", "\n\n", "    print(result)", "\n\n", " ", "\n\n", "报错：", "\n\n", "Traceback (most recent call last):", "\n  File \"c:/Users/lenovo/Desktop/1.py\", line 96, in <module>", "\n    results=dsolve(eq)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 588, in dsolve", "\n    match = classify_sysode(eq, func)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 1971, in classify_sysode", "\n    type_of_equation = check_nonlinear_2eq_order1(eq, funcs, func_coef)", "\n  File \"C:\\Users\\lenovo\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py\", ", "\nline 2106, in check_nonlinear_2eq_order1", "\n    (r1[f].subs(x(t),u).subs(y(t),v))/", "\nTypeError: 'NoneType' object is not subscriptable"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/i1020/article/details/53469317", "Konwledge_Point": "线性规划和规约", "Question": ["最小花费计算的问题？这是线性规划实现么？", ["Problem Description", "\nAs far as we known,there are so many people in this world,expecially in china.But many people like LJ always insist on that more people more power.And he often says he will burn as much babies as he could.Unfortunatly,the president XiaoHu already found LJ's extreme mind,so he have to publish a policy to control the population from keep on growing.According the fact that there are much more men than women,and some parents are rich and well educated,so the president XiaoHu made a family planning policy:", "\nAccording to every parents conditions to establish a number M which means that parents can born M children at most.But once borned a boy them can't born other babies any more.If anyone break the policy will punished for 10000RMB for the first time ,and twice for the next time.For example,if LJ only allowed to born 3 babies at most,but his first baby is a boy ,but he keep on borning another 3 babies, so he will be punished for 70000RMB(10000+20000+40000) totaly.", "\n\n", "Input", "\nThe first line of the input contains an integer T(1 <= T <= 100) which means the number of test cases.In every case first input two integers M(0<=M<=30) and N(0<=N<=30),N represent the number of babies a couple borned,then in the follow line are N binary numbers,0 represent girl,and 1 represent boy.", "\n\n", "Output", "\nForeach test case you should output the total money a couple have to pay for their babies.", "\n\n", "Sample Input", "\n2", "\n2 5", "\n0 0 1 1 1", "\n\n", "2 2", "\n0 0", "\n\n", "Sample Output", "\n70000 RMB", "\n0 RMB"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/your_answer/article/details/79234275\"&gt;https://blog.csdn.net/your_answer/article/details/79234275&lt;/a&gt;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/linshen1213/article/details/99433348\"&gt;https://blog.csdn.net/linshen1213/article/details/99433348&lt;/a&gt;&lt;br /&gt;如果对你有帮助&amp;#xff0c;可以点击我这个回答右上方的【采纳】按钮&amp;#xff0c;给我个采纳吗&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["求解一阶线性微分方程组，matlab或者python都可以。", ["有如下微分方程组：", "\n", "\n", "矩阵D全是数值，存在一些边界条件,当0<=Z<=10时，有Zmn（0）= -10，Xmn（0）=Ymn（0）=Xmn（10）=Ymn（10）=Zmn（10）=0,如何用matlab求解Rmn（z），数值解和解析解都可以。", "\n", "D=[0,0,0,0.00166666666666667,0,-2.19911485751286;0,0,0,0,0.00200000000000000,-2.19911485751286;0,0,0,2.19911485751286,2.19911485751286,0;51566.8828791659,4118.29417355141,-0.691545552676999,0,0,0;4118.29417355141,7768.18561244484,-0.567067353195139,0,0,0;0.691545552676999,0.567067353195139,0.000927672955974843,0,0,0]", "\n", "Thanks！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;既然你知道了y和x那么数值求到了dy/dt和dx/dt&amp;#xff0c;自然就可以通过插值方法得到与x和y等长的dy/dt和dx/dt&amp;#xff0c;然后直接进行拟合就好了啊&amp;#xff0c;lsqcurvefit也好&amp;#xff0c;最小二乘法加上fminsearch求解也罢&amp;#xff0c;都可以做啊&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Matlab 非线性最小二乘法 求解微分方程", ["如下微分方程，求解微分方程系数（a1, a2, a3）", "\n", "\n", "\n", "1）没有dx/dt 的方程", "2）yexp是实验值", "3）先假定a1,a2,a3，应用ode45计算解析值y,然后用lsqcurvefit求系数", "\n", "代码如下：", "\n", "t = data(:,1);\nx = data(:,2);\ny_exp = data(:,3);\n\ndt = t(2) - t(1);\nlen = length(x);\ndx_dt(1) = x(1)/dt;\n", "dx_dt(2:len) = diff(x) / dt;", "\ndy_exp(1) = y_exp(1)/dt;\n", "dy_exp(2:len) = diff(y_exp) / dt;", "\n\na1 = 10.74;\na2 = 0.91;\na3 = 290;\n\nget_dx_dt = @(t_sim) interp1(t(1:end), dx_dt, t_sim);\ndy_dt = @(t,y)(get_dx_dt(t)-sign(y)*(abs(y)/a1)^(1/a2))*a3;\n[tout, y] = ode4(dy_dt, t(1), dt, t(end), y_exp(1));\n\nlen_y = length(y);\nx1 = dx_dt(1:len_y);\nx2 = y';\nY =dy_exp(1:len_y);\nX=[x1;x2]';\na0=rand(1,3);\nfunc=@(a,X)(x1-sign(x2).*(abs(x2)/a(1)).^(1/a(2)))*a(3);\na=lsqcurvefit(func,a0,X,Y);\n\n", "\n", "计算得到的a为复数。", "请问:", "1.思路是否正确；", "2.如果思路不正确，能否指明正确思路", "\n", "谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一般是看你需要哪个&amp;#xff0c;应该是实际情况而定&lt;br /&gt;比方说你要第一个解&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;U1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solU1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;V1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solV1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你要第二个解&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;U2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solU1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;V2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; solV1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["非线性方程组有多个解的问题", ["问题遇到的现象和发生背景", "\n", "非线性方程组有两个解，怎么才能只保留一个", "\n", "问题相关代码，请勿粘贴截图", "\n", "clc,clear", "syms u v; % 定义u v 是未知量", "eqns=[(u+1.25)/(v+0.69) == 4533269482901803/4503599627370496,64/49 == (v + 0.69)^2 + (u+ 1.25)^2]; % 定义方程组", "vars=[u,v]; % 定义求解的未知量", "[solU,solV]=solve(eqns,vars) % 求解eqns中的vars未知量，分别存储", "sol=fzero(eqns,vars); % 求解eqns中的vars未知量，以结构体的形式存储到sol中", "solU1=sol.u % 从sol结构体中取出变量u的解", "solV1=sol.v % 从sol结构体中取出变量v的解", "\n", "想保留一个解，怎么操作啊，求"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我明白了&amp;#xff0c;后面的&amp;#43;/-0n的意思就是小数点往后/前移n位&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问matlab非线性规划模型拟合stats的p这个属于是什么", ["如图，请问这个数应该怎么看？", "这个模型拟合的可以吗", "球秋有时间而且愿意解答的朋友答疑解惑指点迷津"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;model.predict(pp.fit_transform([[16]])) 这个是一个数还是一组数的预测&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["非线性回归的模型的预测是负数，如何解决", ["x轴是1到12", "y轴是20W到50W", "打算用非线性回归的相关库来预测数据", "from sklearn.linear_model import LinearRegression", "from sklearn.preprocessing import PolynomialFeatures as pf", "\n", "pp=pf(degree=3)", "list_grade=np.array(list_grade).reshape(-1,1)", "trainx=pp.fit_transform(list_grade)", "model=LinearRegression()", "model.fit(trainx,list_time)", "a=model.score(trainx,list_time)", "\n", "然后用预测函数预测下后面的值，但是出现了问题", "model.predict(pp.fit_transform([[16]]))", "后面都是负数了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我今天遇到了&amp;#xff0c;网上找了一圈也没有对策。&lt;br /&gt;后面猜可能是y轴的数据类型有问题&amp;#xff0c;就将数据转为float就行了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Python matplotlib画图总是一条直线", ["如图", "\n\n", "\n\n", "不论怎么画都是一条直线，但明显这不是线性关系。不明白怎么控制这个y轴的刻度，去网上找了半天也没找到解决方案。求解答这是为什么，该怎么处理"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;出现了新手常见的问题&amp;#xff0c;可以参考参考这篇文章&lt;br /&gt;&lt;a href=\"https://www.zhihu.com/question/309028363/answer/582638696\" id=\"textarea_1680155538176_1680155647233_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.zhihu.com/question/309028363/answer/582638696&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["为什么spss数据分析正相关的回归线系数是负的呀？", ["如图，分析是有显著的正向影响，但是回归系数B是负的，这有什么影响吗？我能改成正的吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;学C语言是为了&lt;strong&gt;控制计算机做你想做的事情&lt;/strong&gt;。学线性代数是为了&lt;strong&gt;分析解决实际应用问题&lt;/strong&gt;。如果你想用计算机解决一个需要用线性代数的实际问题&amp;#xff0c;那么你就需要用C语言将问题的线性代数描述告诉计算机让它来解决。不过基本线性代数用的比较少&amp;#xff0c;不同太担心。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性代数和C语言有关系吗", ["C语言和线性代数有关系吗？学的电子信息工程，想走软件方向，但是大一的线性代数有点头疼(´;︵;`)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用运筹学&amp;#xff0c;Lingo软件&amp;#xff0c;具体咋用网上有运筹学的书&amp;#xff0c;里面有很相似的问题&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问这个问题应该用什么方法解决？线性规划？运筹学？控制论？？求答", ["本人不是数学相关专业，请大家尽量讲解的白话一点", "问题 一天24小时，周期7天，居民自由出行的时长为6点-11点   15点-21点之间，可以出行体育锻炼，共计11小时", "目标：居民需要在一周7天内进行不少于共计5次的锻炼", "其中:中年人有890422*8.38%（746174）人，30%偏好广场舞，23%偏好羽毛球，14%偏好游泳，2%偏好篮球，20%偏好跑步，11%偏好乒乓球", "为了保证居民使用场地进行锻炼时的尺度适宜，其中广场舞每人占地1平方米，一个羽毛球场地可同时容纳2或4人，一条50米泳道至多同时6人，篮球场10人，乒乓球2或4人，每100米跑道10人。", "假设居民进行每项活动在30-150分钟范围内，要保证满足居民活动时长，类型和只要想进行活动就基本上不用排队的需求，设施应该具有的数量大致是多少？", "\n", "以上问题目前是一个年龄段的问题，若需要计算满足3个年龄段锻炼需求的设施数量（活动偏好比例不同、可出行锻炼时长不同）需要用怎样的方法得出？", "请问用什么方法求解"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Here is one solution&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# GET EQUATION AND R-SQUARED AS STRING\n# SOURCE: http://goo.gl/K4yh\n\nlm_eqn &amp;lt;- function(df){\n    m &amp;lt;- lm(y ~ x, df);\n    eq &amp;lt;- substitute(italic(y) == a + b %.% italic(x)*\",\"~~italic(r)^2~\"=\"~r2, \n         list(a = format(coef(m)[1], digits = 2), \n              b = format(coef(m)[2], digits = 2), \n             r2 = format(summary(m)$r.squared, digits = 3)))\n    as.character(as.expression(eq));                 \n}\n\np1 &amp;lt;- p + geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;EDIT. I figured out the source from where I picked this code. Here is the &lt;a href=\"http://groups.google.com/group/ggplot2/browse_thread/thread/d53807fa41b95cc0\"&gt;link&lt;/a&gt; to the original post in the ggplot2 google groups&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=\"https://i.stack.imgur.com/7aq55.png\" alt=\"Output\"&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何在图上增加回归直线方程和R^2？", ["\n\n", "我想知道如何在 ggplot 上加上回归线方程和R^2。代码如下：", "\n\n", "library(ggplot2)\ndf <- data.frame(x = c(1:100))\ndf$y <- 2 + 3 * df$x + rnorm(100, sd = 40)\np <- ggplot(data = df, aes(x = x, y = y)) +\n            geom_smooth(method = \"lm\", se=FALSE, color=\"black\", formula = y ~ x) +\n            geom_point()\np\n", "\n\n", "任何帮助我都感激不尽。", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/7549694/adding-regression-line-equation-and-r2-on-graph"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;a_eq内应该是一个1-3的array,不应该是三个单值,即应该多套一层中括号&lt;br /&gt;修改如下:&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; numpy as np\nfrom scipy.optimize &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; linprog\n\n&lt;span class=\"hljs-attr\"&gt;c&lt;/span&gt; &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;])\n&lt;span class=\"hljs-attr\"&gt;a_ub&lt;/span&gt; &amp;#61; np.array([[-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]])\n&lt;span class=\"hljs-attr\"&gt;b_ub&lt;/span&gt; &amp;#61; np.array([-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;])\n&lt;span class=\"hljs-attr\"&gt;a_eq&lt;/span&gt; &amp;#61; np.array([[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]])&lt;span class=\"hljs-comment\"&gt;#注意维度,要多加一个方括号&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;b_eq&lt;/span&gt; &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;])\nprint(c, a_ub, b_ub, a_eq, b_eq)\n\n&lt;span class=\"hljs-attr\"&gt;ret&lt;/span&gt; &amp;#61; linprog(-c, &lt;span class=\"hljs-attr\"&gt;A_ub&amp;#61;a_ub,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;b_ub&amp;#61;b_ub,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;A_eq&amp;#61;a_eq,&lt;/span&gt;\n              &lt;span class=\"hljs-attr\"&gt;b_eq&amp;#61;b_eq,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bounds&amp;#61;((0,&lt;/span&gt; None), (&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, None),(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, None)))&lt;span class=\"hljs-comment\"&gt;#变量有三个,bound要写三个&lt;/span&gt;\n\nprint(ret)\nprint(ret.x)  &lt;span class=\"hljs-comment\"&gt;# 表示最优解&lt;/span&gt;\nprint(ret.fun)  &lt;span class=\"hljs-comment\"&gt;# 表示最值&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/658260886136159.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用python求线性规划问题，但是提示错误是A_eq必须正好有两个维度，A_eq中的列数必须等于c的大小", ["代码是这样的：", "错误提示：A_eq必须正好有两个维度，A_eq中的列数必须等于c的大小", "求解！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;本来清明节后工作挺忙的&amp;#xff0c;结果意外的一切正常&amp;#xff0c;上班摸鱼期间看到了你的提问&amp;#xff0c;想尝试用心答一下。&lt;br /&gt;你想知道标题的原因&amp;#xff1f;这个原因是想说&amp;#xff0c;照你的理解F检验通过的话&amp;#xff0c;那么4个自变量也应该是显著的对吧。&lt;/p&gt;\n&lt;p&gt;首先我想解释下多元回归中F检验的意义&amp;#xff0c;我觉得你可能要先明确这一点&amp;#xff0c;F检验中&amp;#xff0c;我们本身是想让其支持备择假设H1而拒绝H0&amp;#xff0c;但犯第一类错误下拒绝了H0&amp;#xff0c;意味着你只能认定肯定有解释变量X1X2X3X4与Y存在回归关系&amp;#xff0c;因为F检验的H0假设是认为k-1个解释变量都不与y存在回归关系。一般的操作过程是F检验通过后&amp;#xff0c;进一步对各变量做t检验以确定哪些X是重要的解释变量。&lt;br /&gt;显然你第一步是成功的&amp;#xff0c;但第二步没有找到一个通过的t。读到此处&amp;#xff0c;我开始质疑你的初始假设条件是否支持你做F检验&amp;#xff0c;即F检验&amp;#xff0c;它可靠吗&amp;#xff1f;&lt;br /&gt;标题里是多元回归的内容&amp;#xff0c;下方的各种建模尝试我看到都是在进行线性建模&amp;#xff0c;那么我首先认为你需要做的是多元线性回归。&lt;br /&gt;我首先说结论吧&amp;#xff0c;基于你给出的结果&amp;#xff0c;因变量间存在着中度的相关性&amp;#xff08;0.5其实很高了&amp;#xff09;&amp;#xff0c;也就是犯了多重共线性的问题。&lt;/p&gt;\n&lt;p&gt;那么我先尝试不借助任何统计论证去解释你的这个结果。从业务端看这种问题可以猜想是不是你的能力测试间并不相互独立&amp;#xff08;其实可以简单暴力的归结为聪明人做什么测试都得心应手&amp;#xff0c;而蠢人干什么可能都差点意思&amp;#xff09;&amp;#xff0c;那么毫无疑问测试分数间是有相关性存在的。而且对应你的Y是某项绩效分数&amp;#xff0c;也可以用这样的业务常识去佐证。毕竟优秀的人绩效也不会差&amp;#xff0c;对吧。&lt;/p&gt;\n&lt;p&gt;那么为什么会在线性组合之后关系反而弱化了&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;我曾经给同事们设计过一项变态的问卷&amp;#xff0c;那份问卷分AB卷&amp;#xff0c;简单弱化概念就是这份问卷可以真实反映做题人的IQ水平&amp;#xff0c;但A卷是得分越高IQ越高&amp;#xff0c;B卷是得分越低IQ越高&amp;#xff08;B卷是我小时候看武林外传李大嘴做测试题的灵机一动&amp;#xff09;&amp;#xff0c;虽然我们没有让每一个受试者把AB卷各答一遍&amp;#xff0c;但我们还是拿到了每个人的得分。你可以看到&amp;#xff0c;IQ与A高度正线性相关&amp;#xff0c;IQ与B高度负线性相关&amp;#xff0c;但IQ与A&amp;#43;B的多项式就显得不那么相关了&amp;#xff08;如果我们真的让每个人都做了A和B&amp;#xff09;。我想这个例子有助于你的进一步思考。&lt;/p&gt;\n&lt;p&gt;接着聊聊统计论证吧。其实在统计学的世界里&amp;#xff0c;回归问题有大量变量间相关&amp;#xff0c;自相关问题多出现在时间序列的分析过程中。在应对这种问题时&amp;#xff0c;因为你的基础假设条件不满足线性回归&amp;#xff0c;也就意味着你的方法其实全部失效了。&amp;#xff08;很残忍对不对。。。&amp;#xff09;要想研究这种问题&amp;#xff0c;就必须重新构筑变量&amp;#xff0c;或者重新研判变量间关系&amp;#xff0c;即使牺牲一部分的信息量&amp;#xff0c;也要保证你的多元线性模型能够更好的拟合。&amp;#xff08;我猜想这部分可能会以EFA过程反驳我&amp;#xff0c;别急&amp;#xff0c;看下去&amp;#xff0c;毕竟我也没看到你的KMO和barrlet不是吗。&amp;#xff09;写到此处我忽然想起一篇我多年前的学年论文博客&amp;#xff0c;你可以参考下面对线性相关时&amp;#xff0c;如何处理能够使得结果可行。&lt;a href=\"https://blog.csdn.net/lixiaomie01/article/details/80395065\" id=\"textarea_1649214326938_1649227112550_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/lixiaomie01/article/details/80395065&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;针对其中的几个点我想我其实没有给你思路&amp;#xff0c;只是告诉了你我不认可的论点&amp;#xff0c;但是统计论证到此处&amp;#xff0c;我无法站在你不可靠的假设条件下做论证&amp;#xff0c;我更希望你尝试下新的方法吧&amp;#xff0c;box-cox变化下&amp;#xff0c;或者lasso试试。&lt;br /&gt;期待你的新结果反馈。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["R语言多元回归。4个自变量全部不显著。但整体F显著。只需要深度解释原因。不需要任何纠错", ["本人初学R语言-海外研究生就读。教授的题目背景是4个不同的能力测试分数作为自变量，1个绩效分数作为因变量。（XY都是score的数字分数）探求哪个能力测试和绩效成绩最相关。100+样本数量", "\n", "多元回归后-出现如标题的问题。教授表示这就是想要同学们探索的问题。", "\n", "查阅资料后，", "怀疑是多重现性或者是残值问题", "-用VIF和一些残值程序-包括数据分布是否正态。数据测试完后-全部没有问题。", "数据分布的很好，无多重现性，也没有残值问题", "。", "\n", "又怀疑是否是这4个因变量之间是否高度相关-", "导致多元回归时候互相抵消了显著性。为此各自做了相关分析，", "4个变量互相之间最高的相关系数也就0.5", "。似乎这个原因站不住脚跟。", "\n", "我突发奇想自己", "组合了4个因变量可能存在的线性组合", "-如123、124、234；23；12、14之类的多元回归。发现每一种回归下-", "各个因变量都显示不同的显著性", "。另外，我还做了", "4个一元回归，全部各自高度显著。", "\n", "这个题目的背景是建立在EFA下的-EFA的结果跑出来建议是4个Factors-正好对应了题目数据里4个能力测试的类别。一共40道题目的分数-所以分成4个因子应该是没问题的（如果能指出倪端，欢迎）", "\n", "本人问题就是想要请求各位帮忙解释这个现象的原因。教授是刻意设置这个结果，", "所以不需要纠错，或者更改某种模型-只希望一个合理的解释-最好联系到背景", "，这4个能力测试的设置是否真的能够预测绩效分数，或者和绩效分数高度相关。所以请求指点一下，", "最好附上一些重要理论或是文献！", "我会深入学习！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;请问你解决这个问题了吗&amp;#xff0c;能否教一下咋计算yolov5的map&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["yolov5中mAP的计算和coco中mAP的计算有什么区别", ["yolov5官方计算的是mAP0.5和mAP0.5:0.95,这两个跟大部分论文里面计算的方法都不太一样,比如coco里面的,会计算一个总的mAP,怎么处理这个问题"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff0c;ARIMA-GARCH和SVM是两种不同类型的模型&amp;#xff0c;ARIMA-GARCH是时间序列模型&amp;#xff0c;而SVM是非线性回归模型。通常情况下&amp;#xff0c;这些模型不能直接组合在一起&amp;#xff0c;因为它们所涉及的数据和方法有很大的差异。&lt;/p&gt;\n&lt;p&gt;一种可能的方法是使用多个模型进行预测&amp;#xff0c;并将它们的结果组合在一起。例如&amp;#xff0c;您可以使用ARIMA-GARCH模型来预测时间序列数据中的波动性&amp;#xff0c;并使用SVM模型来预测非线性趋势。然后&amp;#xff0c;您可以将两种模型的预测结果结合在一起&amp;#xff0c;以获得最终的预测结果。&lt;/p&gt;\n&lt;p&gt;另一种方法是使用混合模型&amp;#xff0c;即将ARIMA-GARCH模型和SVM模型的某些特性结合在一起&amp;#xff0c;以获得更准确的预测。例如&amp;#xff0c;您可以将ARIMA-GARCH模型的波动性预测结果作为SVM模型的输入特征&amp;#xff0c;或者将SVM模型的非线性预测结果作为ARIMA-GARCH模型的输入特征。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;这些方法需要对数据进行适当的预处理和参数调整&amp;#xff0c;以确保模型的准确性和可靠性。因此&amp;#xff0c;在使用这些组合模型之前&amp;#xff0c;您需要深入了解这些模型以及如何适应您的数据和问题。&lt;br /&gt;将线性模型和非线性模型组合可以采用集成学习的思想&amp;#xff0c;常见的方法包括Bagging、Boosting、Stacking等。对于arima-garch和svm组合模型&amp;#xff0c;可以考虑使用Stacking方法。&lt;/p&gt;\n&lt;p&gt;具体地&amp;#xff0c;可以先将arima-garch和svm分别作为基模型进行训练&amp;#xff0c;然后使用另一个模型作为元模型对基模型的预测结果进行组合。在这个例子中&amp;#xff0c;我们使用svm作为基模型1&amp;#xff0c;arima-garch作为基模型2&amp;#xff0c;使用线性回归作为元模型进行组合。&lt;/p&gt;\n&lt;p&gt;以下是R语言的示例代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-title\"&gt;library&lt;/span&gt;(forecast)\n&lt;span class=\"hljs-title\"&gt;library&lt;/span&gt;(rugarch)\n&lt;span class=\"hljs-title\"&gt;library&lt;/span&gt;(e1071)\n\n&lt;span class=\"hljs-meta\"&gt;# 生成时间序列数据&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;set&lt;/span&gt;.seed(&lt;span class=\"hljs-number\"&gt;123&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; &amp;lt;- arima.sim(list(ar &amp;#61; &lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;), n &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n\n&lt;span class=\"hljs-meta\"&gt;# 划分训练集和测试集&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;train&lt;/span&gt; &amp;lt;- y[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;]\n&lt;span class=\"hljs-title\"&gt;test&lt;/span&gt; &amp;lt;- y[&lt;span class=\"hljs-number\"&gt;81&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]\n\n&lt;span class=\"hljs-meta\"&gt;# 训练arima-garch模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.arima &amp;lt;- auto.arima(train)\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.garch &amp;lt;- ugarchspec(mean.model &amp;#61; list(armaOrder &amp;#61; c(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)), variance.model &amp;#61; list(garchOrder &amp;#61; c(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)), &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; train) &lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.garch &amp;lt;- ugarchfit(fit.garch, &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; train)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 训练svm模型&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.svm &amp;lt;- svm(train ~ seq_along(train), kernel &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;radial&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-meta\"&gt;# 对测试集进行预测&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.arima &amp;lt;- forecast(fit.arima, h &amp;#61; length(test))$mean\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.garch &amp;lt;- predict(fit.garch, n.ahead &amp;#61; length(test))$forecast[,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.svm &amp;lt;- predict(fit.svm, &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.frame(&lt;span class=\"hljs-title\"&gt;seq_along&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;test&lt;/span&gt;)))&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 将预测结果组合起来&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.comb &amp;lt;- &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.frame(&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;arima&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;garch&lt;/span&gt;, &lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;svm&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;fit&lt;/span&gt;.comb &amp;lt;- lm(test ~ ., &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.comb)&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;pred&lt;/span&gt;.comb &amp;lt;- predict(fit.comb, &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.comb)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 计算组合模型的预测误差&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.comb &amp;lt;- mean((pred.comb - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.arima &amp;lt;- mean((pred.arima - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.garch &amp;lt;- mean((pred.garch - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;mse&lt;/span&gt;.svm &amp;lt;- mean((pred.svm - test)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n\n&lt;span class=\"hljs-meta\"&gt;# 输出结果&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;ARIMA MSE:&amp;#34;&lt;/span&gt;, mse.arima, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;GARCH MSE:&amp;#34;&lt;/span&gt;, mse.garch, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;SVM MSE:&amp;#34;&lt;/span&gt;, mse.svm, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-title\"&gt;cat&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Combined MSE:&amp;#34;&lt;/span&gt;, mse.comb, &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在这个例子中&amp;#xff0c;我们首先生成一个AR(1)时间序列&amp;#xff0c;并将前80个点作为训练集&amp;#xff0c;后20个点作为测试集。我们分别训练了一个ARIMA模型、一个GARCH模型和一个SVM模型&amp;#xff0c;并对测试集进行预测。然后&amp;#xff0c;我们将三个模型的预测结果组合在一起&amp;#xff0c;使用线性回归作为元模型进行组合。最后&amp;#xff0c;我们计算了组合模型和单独的三个基模型的预测误差&amp;#xff0c;并输出了结果。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性和非线性模型如何组合在一起", ["做arima-garch和svm组合模型，不太理解这个怎么组合"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性调频脉冲信号可以采用和差波束原理进行测角。&lt;/p&gt;\n&lt;p&gt;和差波束原理是一种通过将多个天线的信号进行加权相加或相减来形成不同方向的波束的方法。当两个或更多的天线接收到同一个信号时&amp;#xff0c;它们会产生相位差异&amp;#xff0c;这可以通过改变天线之间的距离或方向来实现。通过调整相位差异&amp;#xff0c;可以使得某个方向上的信号强度最大&amp;#xff0c;从而实现测角。&lt;/p&gt;\n&lt;p&gt;对于线性调频脉冲信号&amp;#xff0c;可以使用和差波束原理来实现测角。首先&amp;#xff0c;将接收到的信号分别输入到不同的天线中。然后&amp;#xff0c;将这些信号进行加权相加或相减&amp;#xff0c;以产生一个特定方向上的波束。通过改变权重系数&amp;#xff0c;可以得到不同方向的波束。最后&amp;#xff0c;通过检测不同方向上的波束强度&amp;#xff0c;可以确定信号来自哪个方向。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;线性调频脉冲信号的测角精度受到多个因素的影响&amp;#xff0c;如信号频率、天线之间的距离和方向、以及接收到的噪声水平等。因此&amp;#xff0c;在实际应用中&amp;#xff0c;需要进行适当的调整和校准&amp;#xff0c;以获得最佳的测角精度。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问线性调频脉冲信号可以采用和差波束原理进行测角吗", ["请问线性调频脉冲信号可以采用和差波束原理进行测角吗？和差波束如何测角？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Earth Engine 有几种使用减速器执行线性回归的方法&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;ee.Reducer.linearFit()&lt;br /&gt;ee.Reducer.linearRegression()&lt;br /&gt;ee.Reducer.robustLinearRegression()&lt;br /&gt;ee.Reducer.ridgeRegression()&lt;br /&gt;最简单的线性回归缩减器是linearFit()计算一个具有常数项的变量的线性函数的最小二乘估计。要获得更灵活的线性建模方法&amp;#xff0c;请使用允许可变数量的自变量和因变量的线性回归缩减器之一。linearRegression()实现普通最小二乘回归&amp;#xff08;OLS&amp;#xff09;。robustLinearRegression()使用基于回归残差的成本函数来迭代地减轻数据中的异常值 ( O&amp;#39;Leary, 1990 )。 ridgeRegression()使用 L2 正则化进行线性回归。&lt;br /&gt;非现象模型我之前也没做过&amp;#xff0c;不知道如何进行。有一个时间序列拟合的函数&amp;#xff1a;&lt;br /&gt;&lt;strong&gt;ee.Algorithms.TemporalSegmentation.LandTrendrFit(timeSeries, vertices, spikeThreshold, minObservationsNeeded)&lt;/strong&gt;&lt;br /&gt;使用一组LandTrendr断点年份对时间序列进行插值。对于时间序列中的每个输入带&amp;#xff0c;输出一个新的一维数组值带&amp;#xff0c;其中包含由顶点图像识别的断点时间之间的输入值插值。更多细节见LandTrendr算法。&lt;br /&gt;Interpolates a time series using a set of LandTrendr breakpoint years. For each input band in the timeSeries, outputs a new 1D array-valued band containing the input values interpolated between the breakpoint times identified by the vertices image. See the LandTrendr Algorithm for more details.&lt;/p&gt;\n&lt;p&gt;Arguments:&lt;br /&gt;timeSeries (ImageCollection):&lt;br /&gt;Time series to interpolate.&lt;br /&gt;要内插的时间序列影像。&lt;br /&gt;vertices (Image):&lt;br /&gt;Vertices image. A 1D array of LandTrendr breakpoint years.&lt;br /&gt;顶点图像。LandTrendr断点年份的一维数组&lt;br /&gt;spikeThreshold (Float, default: 0.9):&lt;br /&gt;Threshold for dampening input spikes (1.0 means no dampening).&lt;br /&gt;阈值设置&lt;br /&gt;minObservationsNeeded (Integer, default: 6):&lt;br /&gt;Min observations needed.&lt;br /&gt;需要的最小观测值&lt;br /&gt;Returns: Image&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["构建LST-NDVI非线性回归模型", ["您好,看了下您的一些关于线性回归的文章, 请教一下非线性的模型要如何构建呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;int x会越界&amp;#xff0c;循环到第三次x*16807会超出int范围&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["正数乘正数后取余为什么结果有负数", ["本人用线性同余法编写了一个产生0,1之间均匀分布的随机数程序，明明都是正数和正数相乘，但结果却含有负值，始终搞不明白为什么，求指点。谢谢", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "void", " ", "main", "()", "\n", "{   \n\n    FILE*fp;\n    fp = ", "fopen", "(", "\"myrandom.txt\"", ", ", "\"w\"", ");\n    ", "if", " (fp != ", "NULL", ")\n    { \n    ", "double", " n;\n    ", "double", " ex=", "0", ";\n    ", "double", " x0;\n    cout << ", "\"请输入要产生的随机数个数\"", ";\n    cin >> n;\n    cout << ", "\"请输入初始种子\"", ";\n    cin >> x0;\n    ", "int", " x = x0;\n    ", "double", " k = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i < n; i++)\n    {\n        \n        x = (x * ", "16807", ") % ", "2147483647", ";", "//进行线性同余的计算", "\n        ", "double", " m = x / ", "2147483607.0", ";\n        k = k + m;\n        ", "fprintf", "(fp, ", "\"%10.8f \"", ", m);\n        cout << endl;\n    }\n    ex = k / n;\n}\n\n", "\n", "\n", "在某一次运算时x就变为负的了！", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;都是 O&amp;#xff08;1&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["new和delete的时间复杂度怎么看啊，是常数阶还是线性阶？", ["new空间和delete删空间的时间复杂度怎么看啊，是常数阶还是线性阶？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;建议将x减去2010后再做多项式拟合&amp;#xff0c;设中间变量m &amp;#61; x -2010&amp;#xff0c;然后拟合y与m的关系&amp;#xff0c;得到y关于m的表达式后&amp;#xff0c;再将x &amp;#61; m&amp;#43;2010带回&amp;#xff0c;得到y关于x的表达式。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Matlab多项式数据拟合，因为x过大y过小导致多项式系数为0该怎么解决?", ["Matlab多项式数据拟合，因为x过大y过小导致多项式系数为0该怎么解决?"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; 参考这个链接里的文章&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://zhuanlan.zhihu.com/p/75412836\" id=\"textarea_1634915641100_1634915681451_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;一文教你全面掌握用Python实现线性回归 - 知乎&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;全文共 4968字&amp;#xff0c;预计学习时长15分钟或更长 本文旨在为读者理解和应用线性回归时提供参考。虽然线性回归算法很简单&amp;#xff0c;但是只有少数人能真正理解其基本原则。 本文首先会深入挖掘线性回归理论&amp;#xff0c;理解其内在的工作机制…&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://static.zhihu.com/heifetz/favicon.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://zhuanlan.zhihu.com/p/75412836&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["求..如何使用python 线性回归参数来预测保险费随年龄的变化", ["包含显示线性回归参数（斜率和偏差）", "        可视化线性回归线如何拟合数据 "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;很可能是matlab的版本问题&amp;#xff0c;检查一下版本的兼容性。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab App Designer报错“结构体内容引用自非结构体数组对象”", ["github上fork的matlab代码，但是无法查看源代码", "\n", "GitHub项目地址", "https://github.com/NathanJustus/VideoVibrometry_MatlabApp", "\n", "报错", "\n", "\n", "运行报错", "\n", "\n", "matlab刚接触，求各位指点", "\n", "万分感谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;#34;stdio.h&amp;#34;&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;#define N 2&lt;/span&gt;\nstruct student{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; id;\n    char name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; kaoqun;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biaoxian;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; zuoye;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; biji;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; sum;\n}stud[N],t;\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;N;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d个学生信息\\n&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].id,&amp;amp;stud[i].name);\n        fflush(stdin);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d %d %d&amp;#34;&lt;/span&gt;,&amp;amp;stud[i].kaoqun,&amp;amp;stud[i].biaoxian,&amp;amp;stud[i].zuoye,&amp;amp;stud[i].biji);\n        stud[i].sum &amp;#61; stud[i].kaoqun*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biaoxian*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].zuoye*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;stud[i].biji*&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n    \n    //排序\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; N - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - i; j&amp;#43;&amp;#43;){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;按成绩对学生信息进行排序\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (stud[j].sum &amp;gt; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].sum){ &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;整型数字的比较\n                t &amp;#61; stud[j];\n                stud[j] &amp;#61; stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                stud[j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n        }\n    }\n    //打印\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;学号\\t姓名\\t考勤\\t表现\\t作业\\t笔记\\t总分\\t\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].id);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\t&amp;#34;&lt;/span&gt;, stud[i].name);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].kaoqun);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biaoxian);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].zuoye);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, stud[i].biji);\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d \\n&amp;#34;&lt;/span&gt;, stud[i].sum);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["文件操作+线性链表+冒泡排序实验室", ["文件操作+线性链表+冒泡排序实验室。现有结构体定义如下：struct stuInfo{    char id[12];            //数据成员    char name[15];    float score;    struct stuInfo *next;   //指针成员};任务及要求：（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，信息如下；00001 张三 10000002 李四 9900003 王五 10000004 王六 8900005 江涛 9800006 陈琪 8800007 祁廷 91（3）接下来，将学号为‘00004’的节点删除；（4）再接下来，利用冒泡排序，对链表继续升序排序；（5）将完整的线性链表信息从头到尾依次存储到磁盘某个路径下的“score.txt”文件中，存储格式和“stuinfo.txt”文件相同。", "哪个大佬救救孩子吧 😭"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个是求最小值&amp;#xff0c;所以程序结果没问题。你说的0.5-1 之间&amp;#xff0c;应该是求最大值把。如果你要最大值&amp;#xff0c;可以加个负号。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;def demo_func(x):\n    # Sphere\n    x1&amp;#61;x\n    return -((10-4*x1)/(4*x1&amp;#43;3))*x1\nfrom sko.PSO import PSO\npso &amp;#61; PSO(func&amp;#61;demo_func, n_dim&amp;#61;1, pop&amp;#61;40, max_iter&amp;#61;150, lb&amp;#61;[0], ub&amp;#61;[10], w&amp;#61;0.8, c1&amp;#61;0.5, c2&amp;#61;0.5)\npso.run()\nprint(&amp;#39;best_x is &amp;#39;, pso.gbest_x, &amp;#39;best_y is&amp;#39;, -pso.gbest_y)\nimport matplotlib.pyplot as plt\nplt.plot(pso.gbest_y_hist)\nplt.show()&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;这是结果&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"308\" src=\"https://img-ask.csdnimg.cn/upload/1608391196609.png\" width=\"490\" /&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何使用sko PSO 包进行粒子群算法优化（python,PSO ）", ["我想使用这个包进行单目标优化:", "\n\n", "https://github.com/guofei9987/scikit-opt", "\n\n", "目标函数为 y=((10-4x)/(4x+3))*x", "\n\n", "但是我用与例子类似的代码时却获得错误答案", "\n\n", "代码如下：", "\n\n", "def demo_func(x):", "\n    # Sphere", "\n    x1= x", "\n    return ((10-4*x1)/(4*x1+3))*x1", "\nfrom sko.PSO import PSO", "\npso = PSO(func=demo_func, n_dim=1, pop=40, max_iter=150, lb=[0], ub=[10], w=0.8, c1=0.5, c2=0.5)", "\npso.run()", "\nprint('best_x is ', pso.gbest_x, 'best_y is', pso.gbest_y)", "\n\n", "import matplotlib.pyplot as plt", "\n\n", "plt.plot(pso.gbest_y_hist)", "\nplt.show()", "\n\n", "输出是这样的：", "\n\n", "best_x is  [10.] best_y is [-6.97674419]", "\n\n", "事实上这是个错误的答案， 因为通过函数图像我们可以看到正确的答案位于0.5和1之间。", "\n\n", "想求教各位大佬想要获得 正确的 答案y应该怎么写"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一、实验目的&lt;br /&gt;(1)加深对离散傅里叶变换(DFT)基本性质的理解。&lt;/p&gt;\n&lt;p&gt;(2)了解有限长序列傅里叶变换(DFT)性质的研究方法。&lt;/p&gt;\n&lt;p&gt;(3)掌握用MATLAB语言进行离散傅里叶变换性质分析时程序编写的方法。&lt;/p&gt;\n&lt;p&gt;二、实验原理&lt;/p&gt;\n&lt;p&gt;1.线性性质&lt;br /&gt;如果两个有限长序列分别为x1(n)和x2(n)&amp;#xff0c;长度分别为N1和N2&amp;#xff0c;且y(n)&amp;#xff1d;ax1(n)&amp;#xff0b;bx2(n) (a、b均为常数)&lt;/p&gt;\n&lt;p&gt;则该y(n)的N点DFT为Y(k)&amp;#xff1d;DFT&amp;#xff3b;y(n)&amp;#xff3d;&amp;#xff1d;aX1(k)&amp;#xff0b;bX2(k) 0≤k≤N&amp;#xff0d;1&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff1a;N&amp;#xff1d;max&amp;#xff3b;N1&amp;#xff0c;N2&amp;#xff3d;&amp;#xff0c;X1(k)和X2(k)分别为x1(n)和x2(n)的N点DFT。&lt;/p&gt;\n&lt;p&gt;例1&amp;#xff1a;&lt;br /&gt;已知x1(n)&amp;#xff1d;&amp;#xff3b;0&amp;#xff0c;1&amp;#xff0c;2&amp;#xff0c;4&amp;#xff3d;&amp;#xff0c;x2(n)&amp;#xff1d;&amp;#xff3b;1&amp;#xff0c;0&amp;#xff0c;1&amp;#xff0c;0&amp;#xff0c;1&amp;#xff3d;&amp;#xff0c;求&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;(1)y(n)&amp;#xff1d;2x1(n)&amp;#xff0b;3x2(n)&amp;#xff0c;再由y(n)的N点DFT获得Y(k)&amp;#xff1b;&lt;/p&gt;\n&lt;p&gt;(2)由x1(n)、x2(n)求X1(k)、X2(k)&amp;#xff0c;再求Y(k)&amp;#xff1d;2X1(k)&amp;#xff0b;3X2(k)。&lt;/p&gt;\n&lt;p&gt;用图形分别表示以上结果&amp;#xff0c;将两种方法求得的Y(k)进行比较&amp;#xff0c;由此验证有限长序列傅里叶变换(DFT)的线性性质&lt;br /&gt;代码&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-attribute\"&gt;xn1&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]; %建立xn1序列\n&lt;span class=\"hljs-attribute\"&gt;xn2&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];%建立xn2序列\n&lt;span class=\"hljs-attribute\"&gt;N1&lt;/span&gt;&amp;#61;length(xn1);\n&lt;span class=\"hljs-attribute\"&gt;N2&lt;/span&gt;&amp;#61;length(xn2);\n&lt;span class=\"hljs-attribute\"&gt;N&lt;/span&gt;&amp;#61;max(N1,N2);%确定N\n&lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; N1&amp;gt;N2\n    &lt;span class=\"hljs-attribute\"&gt;xn2&lt;/span&gt;&amp;#61;[xn2,zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,N1-N2)];%对长度短的序列补&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;elseif&lt;/span&gt; N2&amp;gt;N1 \n    &lt;span class=\"hljs-attribute\"&gt;xn1&lt;/span&gt;&amp;#61;[xn1,zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,N2-N1)];\n&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;yn&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*xn1&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*xn2;%计算yn\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:N-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:N-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;Yk1&lt;/span&gt;&amp;#61;yn*(exp(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;j*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/N)).^(n&amp;#39;*k);%求yn的N点DFT\n&lt;span class=\"hljs-attribute\"&gt;Xk1&lt;/span&gt;&amp;#61;xn1*(exp(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;j*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/N)).^(n&amp;#39;*k);%求xn1的N点DFT\n&lt;span class=\"hljs-attribute\"&gt;Xk2&lt;/span&gt;&amp;#61;xn2*(exp(-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;j*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*pi/N)).^(n&amp;#39;*k);%求xn2的N点DFT\n&lt;span class=\"hljs-attribute\"&gt;Yk2&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*Xk1&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*Xk2;%由Xk1、Xk2求Yk\n\n&lt;span class=\"hljs-attribute\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);stem(xn1);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;x1(n)&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);stem(xn2);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;x2(n)&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);stem(yn);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;y(n)&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);stem(k,Yk1);\n&lt;span class=\"hljs-attribute\"&gt;axis&lt;/span&gt;([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;DFT(y(n))&amp;#39;)\n\n&lt;span class=\"hljs-attribute\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);stem(k,Xk1);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;Xk1&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);stem(k,Xk2);\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;Xk2&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;subplot&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);stem(k,Yk2);\n&lt;span class=\"hljs-attribute\"&gt;axis&lt;/span&gt;([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; -&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;])\n&lt;span class=\"hljs-attribute\"&gt;title&lt;/span&gt;(&amp;#39;Yk&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出&amp;#xff1a;&lt;br /&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/874252381626122.png\" /&gt;&lt;/p&gt;\n&lt;p&gt;详细内容可以查看&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/linzch3/article/details/71107284\"&gt;https://blog.csdn.net/linzch3/article/details/71107284&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab编程验证图像傅里叶变换的相关定理", ["matlab编程验证图像傅里叶变换性质中的相关定理，希望可以给出代码，是相关定理，不是其他性质，是性质中的相关定理，相！关！定！理！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;求解四阶非线性微分方程一般需要使用数值方法&amp;#xff0c;例如有限差分法、有限元法等。由于你提到了反散射方法&amp;#xff0c;可能可以考虑一些基于反演算法的数值求解方法。具体的方法选择需要根据具体的微分方程形式和边界条件来确定。&lt;/p&gt;\n&lt;p&gt;另外&amp;#xff0c;需要注意的是&amp;#xff0c;非线性微分方程的求解一般比较困难&amp;#xff0c;往往需要结合一些数值计算软件或者编程语言来实现。如果你对数学建模或者程序设计不是很熟悉&amp;#xff0c;可能需要寻求专业人士的帮助。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["求解四阶非线性微分方程", ["四阶的非线性微分方程怎么求解啊，有两个边界条件。今天看到反散射方法求Kdv孤立子方程，和我要求的偏微分方程很像，但还是求不出来"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;左右移项&amp;#xff0c;然后缩小矩阵&amp;#xff0c;继续linalg.solve()&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何在已知部分解的情况下，求解线性方程组？", ["在求解线性方程组时，将线性方程组组装成矩阵形式，可以通过numpy.linalg.solve()直接给出结果。", "但如果已知部分解的情况下，如何得到该情况下线性方程组的解？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一个线性变换就是对应于一个变换矩阵&amp;#xff0c;假设变换矩阵为A&amp;#xff0c;从三维到二维&amp;#xff0c;所以是一个2x3的矩阵&amp;#xff0c;把已知的值带入&amp;#xff0c;列出一个六元一次方程组求出矩阵A。&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/69420890485618.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#算法#的问题：高等数学求解，R的三次方变R的平方", ["高等数学求解，R的三次方变R的平方，然后求a和b两个问题的解"]], "Tag": "算法设计"}
{"Answer": "```\r\n#include &lt;stdio.h&gt;\r\n#include &lt;string.h&gt;\r\n#define MAX_N 20\r\nint main()\r\n{\r\n    int arr[MAX_N][MAX_N],n;\r\n    memset(arr,0x0,sizeof(arr));\r\n    scanf(\"%d\",&amp;n);\r\n    for(int i=0;i&lt;n;i++)\r\n        for(int j=0;j&lt;n;j++)\r\n            scanf(\"%d\",&amp;arr[i][j]);\r\n    int sum = 0;\r\n    for(int i=0;i&lt;n;i++)\r\n        for(int j=0;j&lt;n;j++)\r\n        {\r\n            if(i == j)\r\n                sum += arr[i][j];\r\n            else if(i == ((n-1)-j))\r\n                sum += arr[i][j];\r\n        }\r\n    printf(\"%d\\n\",sum);\r\n    return 0;\r\n}\r\n```", "Konwledge_Point": "线性规划和规约", "Question": ["C语言关于数组循环的问题", ["\n[题目描述]", "\n在线性代数中，矩阵的计算是一种常见运算。在程序设计中矩阵常用二维数组表示，现在，给你一个N x N的方阵，请编程计算矩阵中两条对角线上元素的和。", "\n[输入]", "\n有多行，第一行是一个正整数N (N<20)，表示矩阵的行数和列数，后面N行每行N个整数", "\n[输出]", "\n一个整数，表示矩阵对角线上元素的和", "\n[样例输入]", "\n4", "\n1 2 3 4", "\n5 6 7 8", "\n4 3 2 1", "\n3 4 5 6", "\n[样例输出]", "\n32"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-comment\"&gt;/**************************************************************\n要求&amp;#xff1a;\n1、管理学生的信息&amp;#xff0c;包括&amp;#xff0c;学号&amp;#xff0c;姓名&amp;#xff0c;各科成绩\n2、将信息保存成文件&amp;#xff0c;能反复使用\n3、对信息操作&amp;#xff0c;包括&amp;#xff0c;添加学生信息&amp;#xff0c;修改&amp;#xff0c;删除&amp;#xff0c;\n   按学号、姓名查询学生信息\n4、能进行科目成绩排序&amp;#xff0c;科目分数段查询\n附data文件实例&amp;#xff1a;\n001  小黑  语文  60.00  英语  70.00  数学  90.00\n002  小天  语文  70.00  英语  90.00  数学  80.00\n003  小芳  语文  80.00  英语  80.00  数学  70.00\n004  小鱼  语文  90.00  英语  70.00  数学 100.00\n***************************************************************/&lt;/span&gt;\n \n#include&amp;lt;stdio.h&amp;gt;\n#include&amp;lt;stdlib.h&amp;gt;\n#include&amp;lt;string.h&amp;gt;\n \n&lt;span class=\"hljs-comment\"&gt;//链表结点结构体声明&lt;/span&gt;\ntypedef struct subjects\n{\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    float score;\n}sub;\n \ntypedef struct student\n{\n    int num;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    sub  subject[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n    struct student* next;\n}stu,*pstu;\n \n#define SIZE sizeof(stu)\n \n&lt;span class=\"hljs-comment\"&gt;//函数申明&lt;/span&gt;\npstu LoadInfo();\nvoid PrintMenu();\npstu AddStu(pstu );\npstu DeleStu(pstu );\npstu RwrStu(pstu );\nvoid FindStu(pstu , char );\nvoid Count(pstu ,char * ,float ,float );\nvoid Rank(pstu ,char * );\nvoid SaveQuit(pstu );\n \n&lt;span class=\"hljs-comment\"&gt;//主函数&lt;/span&gt;\nint main()\n{ \n    float score1,score2;\n    char n,j;\n    char subname[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    pstu head,ptr;\n    \n    head &amp;#61; LoadInfo();\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n \n    &lt;span class=\"hljs-comment\"&gt;//创建菜单&amp;#xff0c;进入选择循环&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        PrintMenu();\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的选择编号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        getchar();                       &lt;span class=\"hljs-comment\"&gt;//接收上次输入选择后的回车输入,不致影响下一次输入&lt;/span&gt;\n        switch(n)\n        {\n        case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: \n            {\n                &lt;span class=\"hljs-comment\"&gt;//信息管理&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);                &lt;span class=\"hljs-comment\"&gt;//清屏&lt;/span&gt;\n                j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;!&amp;#61;j)               &lt;span class=\"hljs-comment\"&gt;//循环进入子菜单选择&lt;/span&gt;\n                {\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入信息管理版块&amp;#xff01;\\n\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 1、添加学生\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 2、删除学生\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 3、修改学生信息\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 4、返回\\n&amp;#34;&lt;/span&gt;);\n                    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的选择编号&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n                    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;j);\n                    getchar();\n                    \n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;     ( &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#61;&amp;#61; j) head &amp;#61; AddStu(head);        &lt;span class=\"hljs-comment\"&gt;//添加学生&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; j) head &amp;#61; DeleStu(head);        &lt;span class=\"hljs-comment\"&gt;//删除学生&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#61;&amp;#61; j) head &amp;#61; RwrStu(head);        &lt;span class=\"hljs-comment\"&gt;//修改重写学生信息&lt;/span&gt;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; j) ;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误,请重新输入!\\n&amp;#34;&lt;/span&gt;);\n                    \n                }\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入回车键返回主菜单&amp;#xff01;&amp;#34;&lt;/span&gt;);     &lt;span class=\"hljs-comment\"&gt;//此处本意按任意键返回&amp;#xff0c;但是任意键的话&amp;#xff0c;需要按键A&amp;#xff0c;再按回车确定&lt;/span&gt;\n                getchar();            &lt;span class=\"hljs-comment\"&gt;//则会连续收到两个按键&amp;#xff0c;造成错误读入&amp;#xff0c;可以改进scanf接收字符串&amp;#xff0c;&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);            &lt;span class=\"hljs-comment\"&gt;//以下所有getchar()、system(&amp;#34;cls&amp;#34;)同理&lt;/span&gt;\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//信息查询&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入信息查询版块!\\n&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要查询的学生编号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;j);\n                getchar();\n                &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%d\\n&amp;#34;,j);           //检测输入是否成功,调试程序用&lt;/span&gt;\n                FindStu(head,j);            &lt;span class=\"hljs-comment\"&gt;//查询并输出&lt;/span&gt;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入回车键返回主菜单&amp;#xff01;&amp;#34;&lt;/span&gt;);\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//成绩统计&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入成绩统计版块!\\n&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入科目&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname);\n                getchar();\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入分数范围(score1,score2)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f,%f&amp;#34;&lt;/span&gt;,&amp;amp;score1,&amp;amp;score2);\n                getchar();\n                &lt;span class=\"hljs-comment\"&gt;/*printf(&amp;#34;%s %5.2f %5.2f\\n&amp;#34;,subname,\n                         score1,score2);   */&lt;/span&gt;          &lt;span class=\"hljs-comment\"&gt;//检测输入是否成功&amp;#xff0c;调试程序用&lt;/span&gt;\n                Count(head,subname,score1,score2);          &lt;span class=\"hljs-comment\"&gt;//统计并输出&lt;/span&gt;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入回车键返回主菜单&amp;#xff01;&amp;#34;&lt;/span&gt;);\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//成绩排序&lt;/span&gt;\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎进入成绩排序版块&amp;#xff0c;请输入科目&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname);\n                getchar();\n                Rank(head,subname);              &lt;span class=\"hljs-comment\"&gt;//排序并输出&lt;/span&gt;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n请输入回车键返回主菜单&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n                break;\n            }\n        case &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n            {\n                &lt;span class=\"hljs-comment\"&gt;//保存退出&lt;/span&gt;\n                SaveQuit(head);                &lt;span class=\"hljs-comment\"&gt;//文件操作&amp;#xff0c;保存并退出&lt;/span&gt;\n                free(head);\n                return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            }\n        default: \n            {\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#xff0c;按回车键重新选择&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);    &lt;span class=\"hljs-comment\"&gt;//主菜单错误输出检测&lt;/span&gt;\n                getchar();\n                system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n            }\n        }\n    }\n    \n      \n}\n \n&lt;span class=\"hljs-comment\"&gt;//加载data数据 &amp;#xff0c;文件操作&lt;/span&gt;\npstu LoadInfo()\n{\n    int   num;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char sub1[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char sub2[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char sub3[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    float score1;\n    float score2;\n    float score3;\n    \n    char filename[] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;D:\\\\编程学习\\\\编程实践\\\\c语言课程设计1 学生信息管理\\\\data.txt&amp;#34;&lt;/span&gt;;  &lt;span class=\"hljs-comment\"&gt;//文件名,此处为简化编程&amp;#xff0c;采用固定地址名称&amp;#xff0c;未作输入&lt;/span&gt;\n       FILE *fp; \n    pstu head,ptr;\n    \n    &lt;span class=\"hljs-comment\"&gt;//创建带表头结点的空单链表head&amp;#xff0c;用来存放载入信息&lt;/span&gt;\n    head &amp;#61; (pstu)malloc(SIZE);\n    ptr &amp;#61; head;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    \n    \n    &lt;span class=\"hljs-comment\"&gt;//加载data文件&amp;#xff0c;存入head链表&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( NULL &amp;#61;&amp;#61; (fp &amp;#61; fopen(filename,&lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;)) )             &lt;span class=\"hljs-comment\"&gt;//判断文件是否存在及可读&lt;/span&gt;\n    { \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;error!&amp;#34;&lt;/span&gt;); \n        exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;); \n    } \n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!feof(fp)) \n    { \n        fscanf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %s %s %f %s %f %s %f\\n&amp;#34;&lt;/span&gt;,&amp;amp;num,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,\n              &amp;amp;sub1,&amp;amp;score1,&amp;amp;sub2,&amp;amp;score2,&amp;amp;sub3,&amp;amp;score3); &lt;span class=\"hljs-comment\"&gt;//读取一行&amp;#xff0c;采用格式化读取&amp;#xff0c;避免了其他各种读取方法的数据处理问题&lt;/span&gt;\n                                                                &lt;span class=\"hljs-comment\"&gt;//该方法缺点明显&amp;#xff0c;对数据格式要求教研&amp;#xff0c;故data文件规定数据格式&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (pstu)malloc(SIZE);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n        \n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; num;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,sub1);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; score1;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,sub2);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; score2;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,sub3);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; score3;\n        \n    } \n    \n    fclose(fp);                                         &lt;span class=\"hljs-comment\"&gt;//关闭文件,已得到保存data信息的链表head&lt;/span&gt;\n    \n    return head;\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//打印主菜单&lt;/span&gt;\nvoid PrintMenu()    \n{\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;***************************************\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;           枫枫学生信息管理系统        \\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;***************************************\\n&amp;#34;&lt;/span&gt;);\n    putchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;菜单\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 1、信息管理\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 2、信息查询\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 3、成绩统计\\n&amp;#34;&lt;/span&gt;);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 4、成绩排序\\n&amp;#34;&lt;/span&gt;);    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\025 5、保存退出\\n&amp;#34;&lt;/span&gt;);\n}\n \n&lt;span class=\"hljs-comment\"&gt;//添加学生&lt;/span&gt;\npstu AddStu(pstu x)  \n{\n    char namestu[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char *p;\n    char subname1[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname2[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname3[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    pstu head,ptr;\n    \n    head &amp;#61; x;\n    ptr &amp;#61; head;\n    \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt;( NULL !&amp;#61; ptr-&amp;gt;&lt;/span&gt;next )                    &lt;span class=\"hljs-comment\"&gt;//遍历链表&amp;#xff0c;找到链尾结点&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    }\n    \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (pstu)malloc(SIZE);                &lt;span class=\"hljs-comment\"&gt;//默认在链表末追加添加信息&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的信息&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%d&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;num);\n    getchar();\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,namestu);\n    getchar();\n    p &amp;#61; namestu;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目1名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname1);\n    getchar();\n    p &amp;#61; subname1;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目1成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score);\n    getchar();\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目2名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname2);\n    getchar();\n    p &amp;#61; subname2;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目2成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score);\n    getchar();\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目3名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,&amp;amp;subname3);\n    getchar();\n    p &amp;#61; subname3;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入添加学生的科目3成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n    getchar();\n    \n    putchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n    return head;\n}\n \n&lt;span class=\"hljs-comment\"&gt;//删除学生&lt;/span&gt;\npstu DeleStu(pstu x)   \n{\n    int num;\n    pstu head,ptr,qtr;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    qtr &amp;#61; head;\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要删除的学生的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num);\n    getchar();\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ptr!&amp;#61;NULL)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( ptr-&amp;gt;&lt;/span&gt;num !&amp;#61; num)                &lt;span class=\"hljs-comment\"&gt;//遍历查找链表结点&amp;#xff0c;未找到跳过该结点&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;                        &lt;span class=\"hljs-comment\"&gt;//找到则删除结点&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; ptr;\n            break;\n        }\n    }\n    \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;该学生信息已删除&amp;#xff01;\\n\\n&amp;#34;&lt;/span&gt;);\n    return head;\n}\n \n&lt;span class=\"hljs-comment\"&gt;//修改学生信息&lt;/span&gt;\npstu RwrStu(pstu x)   \n{\n    char namestu[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char *p;\n    char subname1[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname2[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;],subname3[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    int num;\n    pstu head,ptr;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要修改的学生的学号&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;num);\n    getchar();\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ptr!&amp;#61;NULL)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( ptr-&amp;gt;&lt;/span&gt;num &amp;#61;&amp;#61; num )\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;已找到该学生信息&amp;#xff0c;请填入修改项目&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的姓名&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,namestu);\n            getchar();\n            p &amp;#61; namestu;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目1名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,subname1);\n            getchar();\n            p &amp;#61; subname1;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目1成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score);\n            getchar();\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目2名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,subname2);\n            getchar();\n            p &amp;#61; subname2;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目2成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score);\n            getchar();\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目3名称&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,subname3);\n            getchar();\n            p &amp;#61; subname3;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,p);\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入修改学生的科目3成绩&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%f&amp;#34;,&amp;amp;ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n            getchar();\n \n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;该学生信息已修改&amp;#xff01;\\n\\n&amp;#34;&lt;/span&gt;);\n            break;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        }\n    }\n    \n    return head;\n}\n \n&lt;span class=\"hljs-comment\"&gt;//查找学生&amp;#xff0c;参数为链表指针&amp;#xff0c;和学生学号&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//不好&amp;#xff0c;应该将学号输入放进子函数&amp;#xff0c;简化主函数结构&amp;#xff0c;减少子函数参数&lt;/span&gt;\nvoid FindStu(pstu x,char y)    \n{\n    pstu head,ptr;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( ptr-&amp;gt;&lt;/span&gt;num &amp;#61;&amp;#61; (int)y)        &lt;span class=\"hljs-comment\"&gt;//因主函数中为节省空间&amp;#xff0c;学号输入采用char数据&amp;#xff0c;故强行准换&lt;/span&gt;\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;已找到该学生信息!\\n如下&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%03d  %s  %s  %5.2f  %s  %5.2f  %s  %5.2f\\n&amp;#34;&lt;/span&gt;,\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);            break;            &lt;span class=\"hljs-comment\"&gt;//注意此处找到并输出信息后要手动退出循环&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( ptr &amp;#61;&amp;#61; NULL )                &lt;span class=\"hljs-comment\"&gt;//查询成功检测&amp;#xff0c;while循环中若找到&amp;#xff0c;则ptr停留在当前学生的结点上&lt;/span&gt;\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未能找到该学生信息&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//统计科目分数区间段的学生,参数为链表指针&amp;#xff0c;科目名称&amp;#xff0c;分数区间上下限&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//同理&amp;#xff0c;参数的录入应放入子函数&amp;#xff0c;简化结构和编程&lt;/span&gt;\nvoid Count(pstu x,char *y,float q,float p)    \n{\n    pstu head,ptr;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;                   &lt;span class=\"hljs-comment\"&gt;//手动设置的查找结果flag&lt;/span&gt;\n    \n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    strcpy(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,y);\n    \n    &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%s %5.2f %5.2f\\n&amp;#34;,name,q,p);     //检测输入参数的传递&amp;#xff0c;调试程序用&lt;/span&gt;\n \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL)            &lt;span class=\"hljs-comment\"&gt;//开始查找统计&amp;#xff0c;科目查找用strcmp函数比较科目字符串,返回值0为字符串相等&lt;/span&gt;\n    {                                                            &lt;span class=\"hljs-comment\"&gt;//此处while循环体中&amp;#xff0c;重复的查找步骤太多&amp;#xff0c;应设置科目匹配flag&amp;#xff0c;参照rank()函数&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )     &lt;span class=\"hljs-comment\"&gt;//通过flag将科目确认放在while之外&amp;#xff0c;循环体内只做分数区间的扫描和输出&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( q &amp;lt;&amp;#61; ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;amp;&amp;amp; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score&amp;lt;&amp;#61; p )\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%03d  %s  %s  %5.2f\\n&amp;#34;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score);\n                flag&amp;#43;&amp;#43;;\n            }\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( q &amp;lt;&amp;#61; ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;amp;&amp;amp; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score&amp;lt;&amp;#61; p )\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%03d  %s  %s  %5.2f\\n&amp;#34;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score);\n                flag&amp;#43;&amp;#43;;\n            }\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; )\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( q &amp;lt;&amp;#61; ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;amp;&amp;amp; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score&amp;lt;&amp;#61; p )\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%03d  %s  %s  %5.2f\\n&amp;#34;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n                flag&amp;#43;&amp;#43;;\n            }\n        }\n        \n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    }\n \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(flag&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未能找到该课程该区间分数段的学生&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//学科成绩排名,采用交换数据的方法,参数为链表指针&amp;#xff0c;科目名称&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//同理参数问题&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//链表排序问题&amp;#xff0c;此处用交换结点数据方法&amp;#xff0c;还有其他多种排序方法&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//如&amp;#xff0c;交换结点&amp;#xff0c;辅助指针数组排序(未实现&amp;#xff0c;过程繁杂)&amp;#xff0c;插入法排序等&lt;/span&gt;\nvoid Rank(pstu x,char *y)     \n{\n    pstu head,ptr,qtr;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char len&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    char flag&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;                    &lt;span class=\"hljs-comment\"&gt;//简化算法,设置科目查找结果判断值,flag&amp;#61;0表示科目输入为未知科目&amp;#xff0c;不存在&lt;/span&gt;\n    int i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;                                                    &lt;span class=\"hljs-comment\"&gt;//i、j循环次数控制参数&lt;/span&gt;\n    int j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;  \n    char temp_name[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];            &lt;span class=\"hljs-comment\"&gt;//数据交换时的暂存信息变量&lt;/span&gt;\n    float temp0,temp1,temp2;\n    int temp_num;\n \n    strcpy(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,y);\n    head &amp;#61; x;\n \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL)               &lt;span class=\"hljs-comment\"&gt;//测链表长度,不包括表头结点&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n        len&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;              &lt;span class=\"hljs-comment\"&gt;//指针ptr用过之后记得回原位&lt;/span&gt;\n                \n \n    &lt;span class=\"hljs-comment\"&gt;//开始查找科目&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( strcmp(&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)    flag&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( flag &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到该科目!&amp;#34;&lt;/span&gt;);\n        return;\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;//开始排序,冒泡法比较各结点数据&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//此处3个并列的if用switch case更清晰结构&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;    &lt;span class=\"hljs-comment\"&gt;//每一次内循环之后&amp;#xff0c;ptr、qtr必然在最后两个节点上&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;        &lt;span class=\"hljs-comment\"&gt;//故在进行内循环之前&amp;#xff0c;要重新复位ptr、qtr&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;len-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;lt; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score )\n                {\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp_num&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;num;    &lt;span class=\"hljs-comment\"&gt;//交换数据,因数据格式(科目顺序)明确规定&amp;#xff0c;故不再做科目名称的替换&lt;/span&gt;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(temp_name,qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp0&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp1&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp2&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; temp_num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,temp_name);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; temp0;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; temp1;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; temp2;\n                }\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            }\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;len-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;lt; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score )\n                {\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp_num&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(temp_name,qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp0&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp1&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp2&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; temp_num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,temp_name);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; temp0;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; temp1;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; temp2;\n                }\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            }\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;len;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;len-i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;( qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;lt; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score )\n                {\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp_num&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(temp_name,qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp0&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp1&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;temp2&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(qtr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].score &amp;#61; ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score;\n                    \n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;num &amp;#61; temp_num;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;strcpy&lt;/span&gt;(ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,temp_name);\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score &amp;#61; temp0;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score &amp;#61; temp1;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score &amp;#61; temp2;\n                }\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;qtr&lt;/span&gt; &amp;#61; qtr-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n            }\n        }\n    }\n \n    &lt;span class=\"hljs-comment\"&gt;//输出排序过后的链表&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( ptr !&amp;#61; NULL )\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%03d  %s  %s  %5.2f  %s  %5.2f  %s  %5.2f\\n&amp;#34;&lt;/span&gt;,\n              &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score,\n              &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[1].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].score,\n              &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[2].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].score);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; ptr-&amp;gt;&lt;/span&gt;next;\n    }\n}\n \n \n&lt;span class=\"hljs-comment\"&gt;//保存文件并退出&amp;#xff0c;文件操作&lt;/span&gt;\nvoid SaveQuit(pstu x)    \n{\n    pstu head,ptr;\n    FILE *fp;\n    char filename[] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;D:\\\\编程学习\\\\编程实践\\\\c语言课程设计1 学生信息管理\\\\data.txt&amp;#34;&lt;/span&gt;;\n    head &amp;#61; x;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n \n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( NULL &amp;#61;&amp;#61; (fp &amp;#61; fopen(filename,&lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;)) )             &lt;span class=\"hljs-comment\"&gt;//判断文件是否存在及可读&lt;/span&gt;\n    { \n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;error!&amp;#34;&lt;/span&gt;); \n        exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;); \n    } \n    \n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(ptr !&amp;#61; NULL)                        &lt;span class=\"hljs-comment\"&gt;//遍历链表结点&amp;#xff0c;按data约定格式输出数据&lt;/span&gt;\n    {\n        fprintf(fp,&lt;span class=\"hljs-string\"&gt;&amp;#34;%03d  %s  %s  %5.2f  %s  %5.2f  %s  %5.2f\\r&amp;#34;&lt;/span&gt;,\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;ptr&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;num&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;subject&lt;/span&gt;[0].&lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;,ptr-&amp;gt;&lt;/span&gt;subject[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].score,\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["文件操作+线性链表+直接插入排序操作实验室", ["有结构体定义如下：\nstruct stuInfo\n{    char id[12];            //数据成员", "      char name[15];", "      float score;", "      struct stuInfo *next;   //指针成员\n};\n任务及要求：\n（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，\n信息如下；\n00001 张三100\n00002 李四 99\n00003 王五 100\n00004 王六 89\n00005 江涛 98\n00006 陈琪 88\n00007 祁廷 91\n（3）接下来，利用键盘输入，动态开辟节点存储空间，将00008 赵四 88信息存在一个节点中，并插入到学号是‘00005’和‘00006’之间；\n（4）再接下来，利用直接插入排序，对链表继续升序排序；\n（5）将完整的线性链表信息从头到尾依次存储到磁盘某个路径下的“score.txt”文件中，存储格式和“stuinfo.txt”文件相同。\n（6）最终将“score.txt”的内容复制粘贴到实验报告的实验结果中。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; divIn() As Double &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;}\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; divOut() As Double &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;}\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; x As Double &amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;Dim&lt;/span&gt; y As Double &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;For&lt;/span&gt; i As Integer &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; To divIn.Length - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n            &lt;span class=\"hljs-attribute\"&gt;If&lt;/span&gt; x &amp;gt; divIn(i) And x &amp;lt;&amp;#61; divIn(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) Then\n                &lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &amp;#61; (divOut(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - divOut(i)) / (divIn(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - divIn(i)) * (x - divIn(i)) &amp;#43; divOut(i)\n            &lt;span class=\"hljs-attribute\"&gt;End&lt;/span&gt; If\n        &lt;span class=\"hljs-attribute\"&gt;Next&lt;/span&gt;\n        &lt;span class=\"hljs-attribute\"&gt;MessageBox&lt;/span&gt;.Show(y)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["VB.NET如何进行线性插值计算？", ["VB.NET如何进行线性插值计算？", "比如说一组数据：X分别是0  5  10  15  20；相对应Y为0  0.1  0.4  0.7  0.8。计算X=7时，Y是多少？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ? &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt; : &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;x&lt;/span&gt;(n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;3.0&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;4.0&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;8.0&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(n - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.5lf\\n&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;y&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;));\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;$ gcc -Wall &lt;span class=\"hljs-selector-tag\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.c&lt;/span&gt;\n$ ./&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-class\"&gt;.out&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;0.46875&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性常系数差分方程相关解答。", ["考虑线性常系数差分方程如图所示。", "\n", "\n", "求y [4]，当条件如下图时。", "请给出5个有效数字。"]], "Tag": "算法设计"}
{"Answer": "android:layout_alignParentLeft=\"true\"\r\n android:layout_alignParentRight=\"true\"\r\n\r\n在你的两个`TextView`标签里分别加上这两个属性就可以了", "Konwledge_Point": "线性规划和规约", "Question": ["在一个按钮上方左右排放 textview", ["relative layout:", "\n\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\nandroid:gravity=\"center\" \nandroid:orientation=\"vertical\">\n<RelativeLayout\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\" >\n<TextView\n    android:id=\"@+id/tv2\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"TextView\"\n    android:layout_alignLeft=\"@id/button1\"/>\n<TextView\n    android:id=\"@+id/tv1\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"TextView\"\n    android:layout_alignRight=\"@id/button1\" />\n</RelativeLayout>\n<Button\n    android:id=\"@+id/button1\"\n    android:layout_width=\"200dp\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Button\" />\n</LinearLayout>\n", "\n\n", "我用了上面的代码没有达到下面的效果：", "\n\n", "tv1--------------tv2", "\n|------Button------|", "\n\n", "想让textview1 在按钮的左上角， textview2 在按钮的右上角，如何实现呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff0c;直接写出系数矩阵、然后用反除&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;4,0,2,3&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;  0,3,2,3; 2,0,0,1; 0,-2,1,3];%系数矩阵&lt;/span&gt;\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;9;8;10;7&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-keyword\"&gt;A&lt;/span&gt;\\b\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;1.7174&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;1.9565&lt;/span&gt;\n   -&lt;span class=\"hljs-number\"&gt;8.7826&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;6.5652&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;还望给个采纳哟&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何用matlab编码下面的线性方程组", ["求下列线性方程组的数值解     ", "\n", "4x1 +2x3 +3x4 = 9        ", "\n", "3x2 +2x3 + 3x4 = 8        ", "\n", "2x1 + x4 = 10        ", "\n", "x3 -2x2 + 3x4 =7"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;同学&amp;#xff0c;之前已经回答过了&amp;#xff0c;都是类似的办法&lt;br /&gt;&lt;a href=\"https://ask.csdn.net/questions/7553073?spm&amp;#61;1005.2025.3001.5141\" id=\"textarea_1635849688238_1635849735358_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;如何用matlab编码下面的线性方程组-编程语言-CSDN问答&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;CSDN问答为您找到如何用matlab编码下面的线性方程组相关问题答案&amp;#xff0c;如果想了解更多关于如何用matlab编码下面的线性方程组 matlab 技术问题等相关问答&amp;#xff0c;请访问CSDN问答。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7553073?spm&amp;#61;1005.2025.3001.5141&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何用matlab编码这个线性方程组", ["求下列线性方程组的数值解         ", "\n", "4x1 +2x3 +3x4 = 9        ", "\n", "3x2 +2x3 + 3x4 = 8        ", "\n", "2x1 + x4 = 10        ", "\n", "x3 -2x2 + 3x4 =7"]], "Tag": "算法设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/201809/04/1536025650_882146.jpg)", "Konwledge_Point": "线性规划和规约", "Question": ["最小二乘法 求导，公式不太理解", ["这个公式推导过程不理解，求指导。", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;C&lt;br /&gt;A,B,D结束时&amp;#xff0c;i值都为10&amp;#xff1b;C结束时&amp;#xff0c;i值为11&lt;br /&gt;或者说A&amp;#xff0c;B&amp;#xff0c;D都是循环结束后i才加1&lt;br /&gt;C是循环开始时i就加1了&lt;br /&gt;比如代码块是&amp;#xff1a;&lt;br /&gt;for(int i&amp;#61;0;i&amp;#43;&amp;#43;&amp;lt;10;)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;%d&amp;#34;,i);&lt;/span&gt;&lt;br /&gt;}&lt;br /&gt;A,B,D输出是0到9&lt;br /&gt;而C输出是1到10&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["以下哪个循环和其他三条循环不等价（假设循环体都是一样的）？", ["以下哪个循环和其他三条循环不等价（假设循环体都是一样的）？(请问c怎么理解)", "A.for ( i=0; i<10; i++ ) {...}", "B.for ( i=0; i<10; ++i ) {...}", "C.for ( i=0; i++<10;  ) {...}", "D.for ( i=0; i<=9; i++ ) {...}", "请问c怎么理解"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;这篇文章讲的很详细&amp;#xff0c;请看&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/Startapi/article/details/106504162\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;多元线性回归解决机器学习问题的一般方法&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["机器学习一元线性回归错误", ["当我再用一元线性回归画散点图的时候报了这个错", "\n", "import", " pandas ", "as", " pd\n", "import", " matplotlib.pyplot ", "as", " plt\ndf=pd.read_csv(", "'chage.csv'", ")\ndf[", "'Deaths'", "]=df[", "'Deaths'", "].", "str", ".replace(", "','", ",", "''", ")\ndf[", "'Total'", "]=df[", "'Total'", "].", "str", ".replace(", "','", ",", "''", ")\n", "from", " sklearn ", "import", " linear_model\ndf[", "'Deaths'", "].astype(", "float", ") \ndf[", "'Total'", "].astype(", "float", ") \n", "# 设定x和y的值", "\nx = df[[", "'Deaths'", "]] \ny = df[[", "'Total'", "]]\nregr=linear_model.LinearRegression()  \n", "# 拟合fit()", "\nregr.fit(x,y)\n", "print", "(regr.coef_)    ", "# 权重", "\n", "print", "(regr.intercept_)\n", "import", " matplotlib.pyplot ", "as", " plt\nplt.rcParams[", "'font.sans-serif'", "] = [", "'SimHei'", "] \nplt.rcParams[", "'axes.unicode_minus'", "] = ", "False", "\nplt.xlabel(", "'Deaths'", ")\nplt.ylabel(", "'Total'", ")\n", "# 画出原始点:散点图scatter", "\nplt.scatter(x, y, color=", "'black'", ")\n", "# 画出预测点，预测点的宽度为1，颜色为红色", "\nplt.scatter(x, regr.predict(x), color=", "'red'", ",linewidth=", "1", ")\nplt.legend([", "'原始值'", ",", "'预测值'", "], loc = ", "2", ")\nplt.show()\n\n", "\n", "这是我的数据集"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这是维度匹配问题&amp;#xff0c;GPOPS的cost函数中返回值是向量&amp;#xff0c;注意返回值的维度。建议你的程序在GPOPS提供的范例基础上去修改。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何解决使用GPOPS出现的这一问题？", ["根据列车的动力学模型使用GPOPS编写的列车运动速度优化，运行时出现这个问题，卡了我很久，甚是困扰", "\n\n", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;总结下两位大佬的答案&amp;#xff1a;&lt;/p&gt;\n\n&lt;p&gt;1. 要把表转为字符串&amp;#xff0c;用.join 更方便&amp;#xff0c;因为它在转换时会自动把表的 []去掉&lt;/p&gt;\n\n&lt;p&gt;2.str也可以转换表&amp;#xff0c;只不过会保留[]&lt;/p&gt;\n\n&lt;p&gt;3.俩位大佬答的都很好&amp;#xff0c;小弟十分感谢&amp;#xff01;&amp;#xff01;&amp;#xff01;不知道该采纳哪位了。。。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python新手问题，关于字符串", ["\nb=['123','32','980']\nb=str(b)\nprint(type(b))\nb.rstrip('[')\nprint(b)", "\n\n", "我把表b转为了字符串，type（b）返回的也是str，可是用rstrip去除不了 符号‘[’", "\n\n", "求解释下。。。。"]], "Tag": "算法设计"}
{"Answer": "http://blog.chinaunix.net/uid-22263887-id-1778908.html", "Konwledge_Point": "线性规划和规约", "Question": ["Painter                          ", ["The local toy store sells small fingerpainting kits with between three and twelve 50ml bottles of paint, each a different color. The paints are bright and fun to work with, and have the useful property that if you mix X ml each of any three different colors, you get X ml of gray. (The paints are thick and \"airy\", almost like cake frosting, and when you mix them together the volume doesn't increase, the paint just gets more dense.) None of the individual colors are gray; the only way to get gray is by mixing exactly three distinct colors, but it doesn't matter which three. Your friend Emily is an elementary school teacher and every Friday she does a fingerpainting project with her class. Given the number of different colors needed, the amount of each color, and the amount of gray, your job is to calculate the number of kits needed for her class.", "\nInput", "\n\n", "The input consists of one or more test cases, followed by a line containing only zero that signals the end of the input. Each test case consists of a single line of five or more integers, which are separated by a space. The first integer N is the number of different colors (3 <= N <= 12). Following that are N different nonnegative integers, each at most 1,000, that specify the amount of each color needed. Last is a nonnegative integer G <= 1,000 that specifies the amount of gray needed. All quantities are in ml. ", "\nOutput", "\n\n", "For each test case, output the smallest number of fingerpainting kits sufficient to provide the required amounts of all the colors and gray. Note that all grays are considered equal, so in order to find the minimum number of kits for a test case you may need to make grays using different combinations of three distinct colors.", "\nSample Input", "\n\n", "3 40 95 21 0", "\n7 25 60 400 250 0 60 0 500", "\n4 90 95 75 95 10", "\n4 90 95 75 95 11", "\n5 0 0 0 0 0 333", "\n0", "\nSample Output", "\n\n", "2", "\n8", "\n2", "\n3", "\n4"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\ndef student():\n    students &amp;#61; []\n    for i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;):\n        lis&amp;#61;[]\n        info &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入学号,姓名,三门成绩&amp;#xff0c;用逗号隔开&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n        data &amp;#61; info.&lt;span class=\"hljs-built_in\"&gt;split&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\n        lis.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;((&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(data[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])&amp;#43;&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(data[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;])&amp;#43;&lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(data[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]))/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        students.&lt;span class=\"hljs-built_in\"&gt;append&lt;/span&gt;(data&amp;#43;lis)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(students[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;])\n&lt;span class=\"hljs-built_in\"&gt;student&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["有关python有12个学生，每个学生的数据包括学号，姓名，三门课程的成绩及平均分。输入这12个学生的数据，然后计算平均分，并输出第6号学生", ["def student():", "    students = []", "    for i in range(12):", "        info = input(\"请输入学号 姓名 三门成绩\")", "         data = info.strip().split()", "        score = round(eval('%s+%s+%s'%(2,3,4))/3, 2)", "       data .append(score)", "        students.append(data)", "    print(students[5])", "\n", "运行没有错误，但就是什么都不会有显"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性混合效应模型是一种混合模型&amp;#xff0c;通常用于分析不同级别上的观察值之间的关系。在你描述的情况中&amp;#xff0c;两组数据都只有一个主效应显著&amp;#xff0c;且为连续变量&amp;#xff0c;这意味着这两组数据的反应时和错误率与这个主效应有关。&lt;/p&gt;\n&lt;p&gt;做emmeans分析是可以的&amp;#xff0c;这可以帮助我们看到这个主效应对不同级别的观察值的影响。结果中的emmean表示对于不同级别的观察值的平均效应&amp;#xff0c;SE表示标准误差&amp;#xff0c;df表示自由度&amp;#xff0c;lower.CL和upper.CL分别表示置信区间的下限和上限。&lt;/p&gt;\n&lt;p&gt;如果只有主效应显著&amp;#xff0c;那么结果表明主效应是显著的&amp;#xff0c;对于不同级别的观察值都有显著的影响。&lt;/p&gt;\n&lt;p&gt;解释结果可以使用可视化手段&amp;#xff0c;如绘制主效应的线性回归曲线或者使用Tukey的分组比较可视化不同级别观察值之间的差异。&lt;/p&gt;\n&lt;p&gt;总之&amp;#xff0c;在这种情况下&amp;#xff0c;主效应是显著的&amp;#xff0c;对于不同级别的观察值都有影响&amp;#xff0c;使用emmeans分析和可视化工具可以帮助我们更好地理解结果。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["R 线性混合效应模型，只有主效应显著，且为连续变量", ["两组数据分别作了线性混合效应（反应时），广义线性混合效应（错误率），都是只有一个主效应显著，且为连续变量。", "做emmeans看事后比较，输出的结果是", "（主效应下） 2.02e-18， emmean, SE, df, lower.CL, upper.CL", "请问是这样做吗？如果是这样做这样的结果该如何解读呢？有没有可视化的手段？"]], "Tag": "算法设计"}
{"Answer": "这个很简单，比如说语音识别，需要很低的采样率就可以了，高了增加了数据量，毫无用处。\r\n采样你可以拿图片的分辨率类比。\r\n比如说照相机拍出来的照片是4000x3000，12Mp的分辨率。\r\n你现在要上传到csdn，说图片太大了，怎么办？你得把图片转换成800x600的，这个降低（其实是改变，也可以是插值升高）分辨率的过程，就很类似重采样。", "Konwledge_Point": "线性规划和规约", "Question": ["音频为什么要重采样？", ["网上关于音频采样与重采样的文章很少，学习时遇到音频重采样，想知道为什么要重采样？搜了好久，只得到一句：改变采样率，适应不同的情景，有大佬可以帮忙一下吗？", "\n链接也行。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这是想让改错还是补全还是重写&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构，链表问题，如何将代码补充完整", ["完成如下任务。程序一，用上述基本方法，实现如下要求，在 main 函数中，对线性表操 作时，只能使用 b）中定义的函数，不可以直接对线性表进行操作： 1）初始化线性表", "2）从键盘依次读入 10 个字符并保存到线性表中； 3）将线性表的第 6 个存储位置的数据元素删除； 4）将线性表的第 4 个存储位置之前插入一个数据元素，其值为字符 # ； 5）将线性表的所有所有数据元素打印输出； 6）将线性表销毁。", " 程序二，修改上述链式存储的线性表的数据元素类型定义和基本操作函 数实现，将线性表修改为一个学生信息表，每个数据元素至少需要包含：", "姓名、学号、年龄，实现如下要求：", "\n", "初始化线性表", "实现一个线性表的插入函数，从键盘输入至少 5 名同学的信息并加 入到线性表中，要求选择时间复杂度为 O(1)的算法来实现。（注：输 入学生信息时，可以先要求输入学生信息数量；再依次输入每个学 生信息。）", "实现一个打印输出函数，在全部同学的信息从键盘输入完毕后，将", "线性表中的同学信息按输入顺序在屏幕打印输出。", "使用 ListDelete 函数将存储了第二个输入的学生信息的结点删除", "实现一个结点删除函数，将线性表中年龄超过某个年龄值（从键盘", "输入一个年龄）的所有节点都删除；", "按输入顺序打印输出剩余结点。", "销毁这个线性表。", "一二为两个不同程序，代码如有错误请进行修改", "#include<stdio.h>", "#include<stdlib.h>", "#define MAXSIZE 100", "typedef int ElemType;", "typedef struct LNode", "{", " ElemType data; ", "\n", "struct LNode *next;", "}LNode,*LinkList;", "bool InitList(LinkList& L);", "bool DestroyList(LinkList& L);", "int  ListLength(LinkList L);", "bool GetElem(LinkList L, int i, ElemType &e);", "bool ListInsert(LinkList &L, int i, ElemType e);", "bool ListDelete(LinkList &L, int i,ElemType e);", "void ListPrint(LinkList L);", "int main()", "{", "\n", "}", "\n", "bool InitList(LinkList &L)", "{", "L=new LNode;", "L->next=NULL;", "return true;", "}", "bool DestroyList(LinkList& L)", "{        if(!L) return 0;", "    LNode *p= L;", "    while (p) {", "        LNode * q= p->next;", "        free(p);", "        p=q;", "    }", "    L=NULL;", "}", "int  ListLength(LinkList L)", "{", "    if(!L) return 0;", "          int len=0;", "          LNode *p= L->next;", "          while (p)  {", "              ++len;", "              p= p->next;", "          }", "          return len;", "    }", "bool GetElem(LinkList L, int i, ElemType &e)", "{", "    if(!L) return 0;", "        LNode *p= L->next;", "        int j=1;", "          while ( p && j<i )  {", "             p= p->next;  ++j;", "        }", "        if ( !p || j>i ) return 0;", "        e= p->data;", "        return true;", "    }", "    bool ListInsert(LinkList &L, int i, ElemType e)", "    {", "        if(!L) return 0;", "            LNode *p=L;   int  j=0;", "            while (p  &&  j<i-1)    {", "                p=p->next;    j++;", "            }", "            if ( !p || j>i-1 )  return 0 ;", "            LNode * s = (LNode *)malloc(sizeof(LNode));", "            if(!s) return 0;", "            s->data= e ;", "\n", "        ", "s", "->", "next", "= p->", "next", ";    p->", "next= s;\n    \n        return ", "true", ";\n    \n}\n", "\n", "bool ListDelete(LinkList &L, int i,ElemType e)", "{", "    if(!L) return 0;", "\n", "    LNode *p = L;\n    ", "if", "(!p->", "next) \n        return ", "0", ";     \n    LN", "ode", " * q= p->", "next;\n    ", "p", "->", "next", "= q->", "next;\n    ", "e", "= q->", "data", ";    \n    free(q);\n    return ", "true", ";\n", "\n", "}", "    void ListPrint(LinkList L)", "    {", "    LNode *temp=L;", "    while(temp->next)", "        {temp=temp->next;", "        printf(\"%c\",temp->data);", "         }", "    }", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;简单来说施密特正交化和QR分解都是针对矩阵的正交变换&amp;#xff08;orthogonal transformation&amp;#xff09;方法。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;施密特正交化&amp;#xff08;Schmidt orthogonalization&amp;#xff09;是一种将非正交向量组转化为正交向量组的方法&amp;#xff0c;可以使用Gram-Schmidt正交化算法实现。这种方法的优点是能够保证转换后的向量组正交&amp;#xff0c;但缺点是算法较为复杂&amp;#xff0c;而且在运算过程中有可能出现数值精度问题。&lt;/p&gt;\n&lt;p&gt;QR分解&amp;#xff08;QR decomposition&amp;#xff09;是一种将矩阵分解为正交矩阵和上三角矩阵的方法。QR分解的优点是算法相对简单&amp;#xff0c;而且可以利用Q矩阵的正交性质来解决线性方程组&amp;#xff0c;或者使用R矩阵的上三角结构来做矩阵运算。&lt;/p&gt;\n&lt;p&gt;举个例子&amp;#xff0c;在统计学中&amp;#xff0c;需要&lt;strong&gt;对数据进行降维处理来简化数据结构&lt;/strong&gt;&amp;#xff0c;其中一种方法就是主成分分析&amp;#xff08;PCA&amp;#xff09;。在PCA中&amp;#xff0c;使用QR分解来求解协方差矩阵的特征值和特征向量&amp;#xff0c;来找出数据主要的方向。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于线性代数里施密特正交化和QR分解的疑问", ["学习线代的时候，一直搞不明白矩阵施密特正交化和QR分解的动机是什么？", "这样做有什么好处呢？在百度上搜过，都说简便矩阵运算，但是没有具体的例子，我还是不明白为什么。", "希望解答能结合矩阵和现实中的一个例子，这样我好理解。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好同学&amp;#xff1a;&lt;br /&gt;&amp;#xff08;1&amp;#xff09;&lt;code class=\"language-javascript\"&gt;inv(A)*B&lt;/code&gt;指的是先对矩阵&lt;code class=\"language-javascript\"&gt;A&lt;/code&gt;求了逆矩阵&amp;#xff0c;然后这个逆矩阵乘以&lt;code class=\"language-javascript\"&gt;B&lt;/code&gt;&amp;#xff0c;得到满足方程&lt;code class=\"language-javascript\"&gt;A*X&amp;#61;B&lt;/code&gt;的解&lt;code class=\"language-javascript\"&gt;X&lt;/code&gt;&amp;#xff0c;矩阵 &lt;code class=\"language-javascript\"&gt;A&lt;/code&gt; 和 &lt;code class=\"language-javascript\"&gt;B &lt;/code&gt;必须具有相同的&lt;strong&gt;行数&lt;/strong&gt;&amp;#xff0c;一般是&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;X&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; inv(A)*B&lt;span class=\"hljs-comment\"&gt;; % 方程A*X&amp;#61;B&amp;#xff0c;求X&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#xff08;2&amp;#xff09;&lt;code class=\"language-javascript\"&gt;B/A&lt;/code&gt;意思是对线性方程组 &lt;code class=\"language-javascript\"&gt;X*A &amp;#61; B &lt;/code&gt;求解 &lt;code class=\"language-javascript\"&gt;X&lt;/code&gt;&amp;#xff0c;矩阵 &lt;code class=\"language-javascript\"&gt;A&lt;/code&gt; 和 &lt;code class=\"language-javascript\"&gt;B &lt;/code&gt;必须具有相同的&lt;strong&gt;列数&lt;/strong&gt;&amp;#xff0c;一般是&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;X&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; B/A&lt;span class=\"hljs-comment\"&gt;; % 方程X*A&amp;#61;B&amp;#xff0c;求X &lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助还望题主给个采纳支持答主&amp;#xff0c;有任何后续疑问都可以继续追问哦&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["MATLAB中inv(A)*B与B/A", ["在使用inv(A)*B时，matlab提示使用B/A进行替换，请问二者有何具体差别，产生差别的原因又是什么？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;3 组权值&amp;#xff0c;分别是 Y1与非Y1、Y2与非Y2、Y3与非Y3 的分割平面的系数&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性可分三分类支持向量机如何得到每个自变量的权重", ["问题遇到的现象和发生背景", "\n", "线性可分三分类支持向量机会产生三个分类平面吗？如果有三个分类平面的话每个自变量都会有三个系数，那么该如何求每个自变量的权重？", "\n", "问题相关代码，请勿粘贴截图", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "算法设计"}
{"Answer": "不是所有，而是只遍历到index\r\n也就是取得LinkedList的第index元素。和数组不同，链表只能遍历获取，index如果比size的一半大，那么从后往前找，否则从前往后找。", "Konwledge_Point": "线性规划和规约", "Question": ["LinkedList随机添加元素底层代码看不懂，大神指点下？", ["Node node(int index) {", "\n        // assert isElementIndex(index);", "\n\n", "    if (index < (size >> 1)) {\n        Node<E> x = first;\n        for (int i = 0; i < index; i++)\n            x = x.next;\n        return x;\n    } else {\n        Node<E> x = last;\n        for (int i = size - 1; i > index; i--)\n            x = x.prev;\n        return x;\n    }\n}\n\n    没看懂这里的for循环，为什么把所有的都循环赋值一遍，那最后不就返回最后一个的引用吗？\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Queue&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, cap&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 初始化&lt;/span&gt;\n        self.data &amp;#61; []\n        self.front &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        self.rare &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;empty&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 判空&lt;/span&gt;\n        self.front &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n        self.rare &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__len__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 求长度&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self.rare - self.front\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;append&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, item&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 入队&lt;/span&gt;\n        self.data.append(item)\n        self.rare &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;reserve&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 出队&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; self.empty():\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;\n        self.front &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; self.data[self.front - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;python好象没有内置的定长数组这种数据结构, 用变长的列表很容易实现队列, 根本不需要front和rare这样的下标变量进行辅助.&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用Python实现，采用线性数组实现队列，并利用front和rear下标分别指示队头和对尾位置，当rear下标到达数组尾部时，将队列中的所有元素平移到数组的最前端。", ["用Python实现，采用线性数组实现队列，并利用front和rear下标分别指示队头和对尾位置，当rear下标到达数组尾部时，将队列中的所有元素平移到数组的最前端。设计此队列类，并实现主要算法。", "\n", "class CircularQue:", "\n", "def", " ", "__init__", "(", "self", ",cap=", "10", ")", ": ", "#初始化", "\n\n    （请完成）\n\n", "def", " ", "empty", "(", "self", ")", ": ", "#判空", "\n\n    （请完成）\n\n", "def", " ", "__len__", "(", "self", ")", ": ", "#求长度", "\n\n    （请完成）\n\n", "def", " ", "append", "(", "self", ",item)", " ", "#入队", "\n\n    （请完成）\n\n", "def", " ", "reserve", "(", "self", ")", ":", "#出队", "\n\n    （请完成）\n"]], "Tag": "算法设计"}
{"Answer": "```\r\n #include&lt;stdio.h&gt;\r\n#include&lt;malloc.h&gt;\r\n\r\ntypedef struct LNode {\r\n\tint data;\r\n\tstruct LNode *next;\r\n}*LinkList;\r\n\r\nLinkList Creat_List(int n) {\r\n\tLinkList head,p,q;\r\n    head = p = (LinkList)malloc(sizeof(LNode));\r\n    for(int i = 1; i &lt;= n; i++) {\r\n\t\tq = (LinkList)malloc(sizeof(LNode));\r\n\t\tq-&gt;data = i;\r\n\t\tp-&gt;next = q;\r\n\t\tp = q;\r\n\t}\r\n\tp-&gt;next = NULL;\r\n\treturn head;\r\n}\r\n\r\nvoid Delete_evenLNode(LinkList head) { // 删除偶数位结点\r\n    LinkList q,p = head;\r\n\tint i;\r\n    for(i = 1; p-&gt;next; ++i) {\r\n\t\tif(i % 2 == 0) {\r\n\t\t\tq = p-&gt;next; \r\n\t\t\tp-&gt;next = q-&gt;next;\r\n\t\t\tfree(q);\r\n\t\t}\r\n\t\telse p = p-&gt;next;\r\n\t}\r\n}\r\n\r\nvoid Print_List(LinkList head) {\r\n\tLinkList p = head-&gt;next;\r\n\twhile(p != NULL) {\r\n\t\tprintf(\"%d \",p-&gt;data);\r\n\t\tp = p-&gt;next;\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\nvoid main () {\r\n    LinkList head = Creat_List(16);\r\n\tPrint_List(head);\r\n\tDelete_evenLNode(head);\r\n\tprintf(\"删除偶数结点后 :\\n\");\r\n\tPrint_List(head);\r\n}\r\n```", "Konwledge_Point": "线性规划和规约", "Question": ["单链表做线性表的存储", ["以带头结点的单链表做线性表的存储表示，编写算法删除表中的偶数序号结点，使（a1，a2,a3,a4,a5...）变成（a1,a3,a5...）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该测试执行的回归&amp;#xff0c;error是表明无法执行回归&amp;#xff0c;因为回归矩阵是不可逆的。由于你的模型只有一个回归量&amp;#xff0c;加上常数项&amp;#xff0c;通过使用测试函数参数的默认None值skip&amp;#61;是不行的&amp;#xff0c;所以&amp;#xff0c;正如消息指示的那样&amp;#xff0c;你需要指定足够大的skip&amp;#61;参数值&amp;#xff08;即&amp;#xff0c;用于测试的初始模型的观测值数量&amp;#xff09;以确保回归矩阵有足够的秩&amp;#xff08;它需要至少为与矩阵中的列数一样大&amp;#xff09;。&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"https://stackoverflow.com/questions/74084265/statsmodels-linear-harveu-collier-test-valueerror\" id=\"textarea_1666020273485_1666020578263_0\"&gt;https://stackoverflow.com/questions/74084265/statsmodels-linear-harveu-collier-test-valueerror&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["linear_harvey_collier - 检验线性回归假设", ["linear_harvey_collier检验回归模型是否线性模型时报错", "\n", "\n", "QGDP", " = df[", "'QUARTERLY REAL GDP'", "]\n", "UNRATE", " = df[", "'UNRATE(%)'", "]\n", "ols_1", " = smf.ols(formula=", "'QGDP ~ UNRATE'", ", data = df)\n", "ols_fit", " = ols_1.fit()\n", "test", " = sms.linear_harvey_collier(ols_fit)\n\n", "\n", "ValueError: \"The initial regressor matrix, x[:skip], issingular. You must use a value of skip large enough to ensure that the first OLS estimator is well-defined.", "\n", "无法理解报错原因，网上也没找到相关资料"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&amp;#xff08;1&amp;#xff09;问题的matlab解决代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;coef_vec&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;].&amp;#39;;  %设置目标函数的系数向量\n&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;...   %将线性不等式约束优化转换为A*x&amp;lt;&amp;#61;b的形式\n    &lt;span class=\"hljs-attribute\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;800&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;901&lt;/span&gt;].&amp;#39;;\n&lt;span class=\"hljs-attribute\"&gt;Aeq&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;... %将线性等式优化转换为Aeq*x&amp;#61;beq的形式\n    &lt;span class=\"hljs-attribute\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;...\n    &lt;span class=\"hljs-attribute\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;beq&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;410&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;421&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;511&lt;/span&gt;].&amp;#39;;\n&lt;span class=\"hljs-attribute\"&gt;LB&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,-inf,-inf,-inf]&amp;#39;;  %将部分非负约束转换为LB&amp;lt;&amp;#61;x&amp;lt;&amp;#61;UB的形式\n&lt;span class=\"hljs-attribute\"&gt;UB&lt;/span&gt;&amp;#61;inf*ones(&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-meta\"&gt;\n[x,z]&amp;#61;linprog(coef_vec,A,b,Aeq,beq,LB,UB); %调用linprog函数求解线性规划问题\nformat long;  %打开长有效数字显示模式显示结果\nx&amp;#61;x.&amp;#39;   %将列向量转置为行向量便于显示\nz&amp;#61;z.&amp;#39;\nformat short; %关闭长有效数字显示模式&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#xff08;2&amp;#xff09;代码运行结果截图&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/550518648066137.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["各位能帮我看下这个问题吗", ["还是初学者刚学MATLAB和Python，对线性规划问题也不是很熟，希望大家帮帮我"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;其中一个层&amp;#xff08;第 65 层&amp;#xff09;中只有一个 PSU&amp;#xff08;主要抽样单位&amp;#xff09;&amp;#xff0c;这导致调查设计出现问题。&lt;br /&gt;你参考一下这个&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;# Filter out Stratum 65&lt;/span&gt;\nd_rec_filtered &amp;lt;- d_rec[d_rec$sdmvstra !&amp;#61; &lt;span class=\"hljs-number\"&gt;65&lt;/span&gt;, ]\n\n&lt;span class=\"hljs-comment\"&gt;# Create survey design object with filtered data&lt;/span&gt;\nnhc &amp;lt;- svydesign(&lt;span class=\"hljs-attr\"&gt;data&amp;#61;d_rec_filtered,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;ids&amp;#61;~sdmvpsu,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;strata&lt;/span&gt; &amp;#61; ~sdmvstra, \n                 &lt;span class=\"hljs-attr\"&gt;weights&amp;#61;~nhs_wt,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;nest&lt;/span&gt; &amp;#61; TRUE)\n\n&lt;span class=\"hljs-comment\"&gt;# Fit the model with the filtered survey design&lt;/span&gt;\nfit1 &amp;lt;- svyglm(&lt;span class=\"hljs-keyword\"&gt;rec&lt;/span&gt;.n~sex&amp;#43;age&amp;#43;eth&amp;#43;edu&amp;#43;inc&amp;#43;hbp&amp;#43;dm&amp;#43;htc,\n               &lt;span class=\"hljs-attr\"&gt;design&lt;/span&gt; &amp;#61; nhc,&lt;span class=\"hljs-attr\"&gt;family&lt;/span&gt; &amp;#61; quasibinomial())\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;从 svyglm 函数调用中删除了数据参数&amp;#xff0c;因为数据已经在调查设计对象中指定。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["【R语言】加权线性回归模型，PSU问题", ["请教各位R语言好手，请问在做加权线性回归模型的时候出现以下错误要如何解决呢？", "\n", "d_rec$", "rec", ".n <- as.numeric(", "with", "(d_rec, ifelse(", "rec", " == ", "\"aaa\"", ", ", "1", ", ", "0", ")))\nnhc <- svydesign(", "data=d_rec,", " ", "ids=~sdmvpsu,", " ", "strata", " = ~sdmvstra, \n                 ", "weights=~nhs_wt,", " ", "nest", " = TRUE)\nfit1 <- svyglm(", "rec", ".n~sex+age+eth+edu+inc+hbp+dm+htc,\n               ", "design", " = nhc,", "family", " = quasibinomial(),", "data", " = d_rec)\n\nError ", "in", " onestrat(x[index, , ", "drop", " = FALSE], clusters[index], nPSU[index][", "1", "],  : \n  Stratum (", "65", ") has only one PSU at stage ", "1", "\n", "\n", "昨晚同样代码就可以运行，今天跑就不行了[捂脸]"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/chenxun_2010/article/details/48201181", "Konwledge_Point": "线性规划和规约", "Question": ["递归 算法 最大子数组", ["虽然写的非常差但还是我这个小白自己亲手写出来的，一边翻书一边谷歌..... 花了好多小时，虽然很罗嗦而且希望大家能帮我找一下我的find_maximum_subarry的错误，其余两个函数我都试过了应该是对的", "\n\n", "#include ", "\n\n", "typedef struct all_of_sum", "\n    {", "\n        int aa;", "\n        int bb;", "\n        int cc;", "\n    }all_sum;", "\nall_sum all;", "\n\n", "int max(int one, int two, int three)", "\n{", "\n    int current_max = one;", "\n    if(current_max < two)", "\n            {", "\n                current_max = two;", "\n            if(current_max < three)", "\n                current_max = three;", "\n            }", "\n    else if(current_max >= three)", "\n        {", "\n        if(current_max < three)", "\n            current_max = three;", "\n        }", "\n\n", "return current_max;\n", "\n\n", "}", "\n\n", "all_sum find_crossing_sum(int *array,int a,int mid,int b)", "\n{", "\n    int maxleftsum = -999999,maxrightsum = -999999,currentleft = 0;", "\n    int currentright = 0,i = 0,j = 0;", "\n\n", "for(i = a; i <=mid;i++)\n{\n    currentleft = currentleft + array[i];\n    if(currentleft > maxleftsum)\n        maxleftsum  = currentleft;\n    };\n\nfor(j = mid+1; j <= b;j++)\n{\n    currentright = currentright + array[j];\n    if(currentright > maxrightsum)\n        maxrightsum  = currentright;\n    };\nall.aa = i-1;\nall.bb = j-1;\nall.cc = maxleftsum + maxrightsum;\n\nreturn all;\n", "\n\n", "}", "\n\n", "typedef struct find_maxium", "\n{", "\n    int low;", "\n    int high;", "\n    int ddd;", "\n} maxium;", "\nmaxium mm;", "\n\n", "maxium find_maximum_subarry(int*array,int a,int b)", "\n{", "\n    int mid = 0,left_low = 0,left_high = 0,left_sum = 0;", "\n    int right_low = 0,right_high = 0,right_sum = 0;", "\n    int cross_low = 0,cross_high = 0,cross_sum = 0;", "\n    if(a == b)", "\n    {", "\n        mm.low = a;", "\n        mm.high = b;", "\n        mm.ddd = array[a];", "\n        return mm;", "\n    }", "\n    else", "\n    {", "\n        mid = (a + b)/2;", "\n         left_low = find_maximum_subarry(array,a,mid).low;", "\n         left_high = find_maximum_subarry(array,a,mid).high;", "\n         left_sum = find_maximum_subarry(array,a,mid).ddd;", "\n\n", "     right_low = find_maximum_subarry(array,mid+1,b).low;\n     right_high = find_maximum_subarry(array,mid+1,b).high;\n     right_sum = find_maximum_subarry(array,mid+1,b).ddd;\n\n    cross_low = find_crossing_sum(array,a,mid,b).aa;\n    cross_high = find_crossing_sum(array,a,mid,b).bb;\n    cross_low = find_crossing_sum(array,a,mid,b).cc;\n}\nif(max(left_sum,right_sum,cross_sum) == left_sum)\n    {\n        mm.low = left_low;\n        mm.high = left_high;\n        mm.ddd = left_sum;\n    }\nelse if(max(left_sum,right_sum,cross_sum) == right_sum)\n    {\n        mm.low = right_low;\n        mm.high = right_high;\n        mm.ddd = right_sum;\n    }\nelse if(max(left_sum,right_sum,cross_sum) == cross_sum)\n    {\n        mm.low = cross_low;\n        mm.high = cross_high;\n        mm.ddd = cross_sum;\n    }\nreturn mm;\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Keras默认会占满显存的。下列代码是动态使用&amp;#xff0c;也就是按需分配的&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;import keras.backend.tensorflow_backend as KTF\nimport tensorflow as tf\nimport os\n \n \nos.environ[&amp;#34;CUDA_VISIBLE_DEVICES&amp;#34;] &amp;#61; &amp;#34;1&amp;#34;\n \nconfig &amp;#61; tf.ConfigProto()\nconfig.gpu_options.allow_growth&amp;#61;True   #不全部占满显存, 按需分配\nsess &amp;#61; tf.Session(config&amp;#61;config)\n \nKTF.set_session(sess)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;br /&gt;\nos.environ 指的时占用的 GPU编号&amp;#xff1b;allow_growth 为动态申请显存占用。&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;physical_devices &amp;#61; tf.config.list_physical_devices(&amp;#39;GPU&amp;#39;) \ntf.config.experimental.set_memory_growth(physical_devices[0], True) &lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["cnn只加载了神经神经网络，还没开始训练，12G显存就占了12G，怎么回事？", ["\n", "seed = 7\nnp.random.seed(seed)\n#设置了seed后，会让后面每次产生的随机数相同。\n\ndef Conv2d_BN(x, nb_filter,kernel_size, strides=(1,1), padding='same',name=None):\n    if name is not None:\n        bn_name = name + '_bn'\n        conv_name = name + '_conv'\n    else:\n        bn_name = None\n        conv_name = None\n \n    x = Conv2D(nb_filter,kernel_size,padding=padding,strides=strides,activation='relu',name=conv_name)(x)\n    x = BatchNormalization(axis=3,name=bn_name)(x)\n    return x\n\ndef Conv_Block(inpt,nb_filter,kernel_size,strides=(1,1), with_conv_shortcut=False):\n    x = Conv2d_BN(inpt,nb_filter=nb_filter[0],kernel_size=(1,1),strides=strides,padding='same')\n    x = Conv2d_BN(x, nb_filter=nb_filter[1], kernel_size=(3,3), padding='same')\n    x = Conv2d_BN(x, nb_filter=nb_filter[2], kernel_size=(1,1), padding='same')\n    if with_conv_shortcut:\n        shortcut = Conv2d_BN(inpt,nb_filter=nb_filter[2],strides=strides,kernel_size=kernel_size)\n        x = add([x,shortcut])\n        return x\n    else:\n        x = add([x,inpt])\n        return x\n\ninpt = Input(shape=(224,224,3))\n#预期的输入将是一批224*224*3维度的向量\n\nx = ZeroPadding2D((3,3))(inpt)\nx = Conv2d_BN(x,nb_filter=64,kernel_size=(95,95),strides=(2,2),padding='valid')   #找64种特征，特征基本像素的大小为7*7\nx = MaxPooling2D(pool_size=(3,3),strides=(2,2),padding='same')(x)\n \nx = Conv_Block(x,nb_filter=[64,64,256],kernel_size=(3,3),strides=(1,1),with_conv_shortcut=True)\nx = Conv_Block(x,nb_filter=[64,64,256],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[64,64,256],kernel_size=(3,3))\n \nx = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)\nx = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[128,128,512],kernel_size=(3,3))\n \nx = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)\nx = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[256,256,1024],kernel_size=(3,3))\n \nx = Conv_Block(x,nb_filter=[512,512,2048],kernel_size=(3,3),strides=(2,2),with_conv_shortcut=True)\nx = Conv_Block(x,nb_filter=[512,512,2048],kernel_size=(3,3))\nx = Conv_Block(x,nb_filter=[512,512,2048],kernel_size=(3,3))\n\nx = AveragePooling2D(pool_size=(5,5))(x)\n# x = Dropout(0.9)(x)\nx = Flatten()(x)\nx = Dense(25,activation='softmax')(x)\n\nmodel = Model(inputs=inpt,outputs=x)\nsgd = SGD(decay=0.0001,momentum=0.9)\nmodel.compile(loss='categorical_crossentropy',optimizer=sgd,metrics=['accuracy'])\nmodel.summary()", "\n\n", "神经网络如上所示，只运行到上面的这个步骤，我的12G显存就占了11G多。", "\n\n", "\n\n", "然后下一步", "\n\n", "\n", "print('Training ------------')\n\n# training the model,加上shuffle=True，要不然可能会overfit。只要validation随着acc上升，说明模型就没问题。\n# model_load('my_model_resnet.h5')\nmodel.fit(X_train, y_train, validation_split = 0.2,shuffle = True,epochs=50, batch_size=64)\n\n\nNotFoundError:  No algorithm worked!\n\t [[node model/conv2d/Relu (defined at <ipython-input-17-25b86b2dbd84>:5) ]] [Op:__inference_train_function_12948]\n\nFunction call stack:\ntrain_function", "\n\n", "在ubuntu系统里面。我用的是3060显卡，已经安装了显卡驱动，CUDA驱动，cuDNN驱动等。", "\n\n", "为什么会出现这个情况，还没training显存就占满了。求助，麻烦各位大佬帮忙。"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/zhangxaochen/article/details/8020668", "Konwledge_Point": "线性规划和规约", "Question": ["使用Gauss-Jordan 消元法的计算", ["**学校的作业，让程序最后输出成如图这样，代码看了半天不知道怎么搞，自己的代码输出后是第三张图那样，一堆乱数，实在不明白，哪位高手来替小弟解下惑!", "\n**", "\n\n", "\n\n", "\n\n", "\n\n", "\n\n", "代码~~~~~~~", "\n\n", "#include", "\n\n", "#define N 100", "\n\n", "void output(int n, int st, double a[100][N], double b[100])", "\n{", "\n    int i, j;", "\n\n", "printf(\"\\n\\nStep  %3d\\n\", st);\nfor (i = 1;i <= n;i++) {\n    for (j = 1;j <= n;j++)\n        printf(\"   %8.2f\", a[i][j]);\n    printf(\"   %8.2f\\n\", b[i]);\n}\n", "\n\n", "}", "\nint main(void)", "\n{", "\n    int  i, j, k, n, q;", "\n    double p;", "\n    double a[N][N], b[N], x[N];", "\n\n", "printf(\"namber of demension(n) =\");        \nscanf(\"%d\", &n);\nfor (i = 1;i <= n;i++) {\n    for (j = 1;j <= n;j++) {\n        printf(\"a[%d][%d] =\", i, j);\n        scanf(\"%lf\", &a[i][j]);\n    }\n    printf(\"b[%d] =\", i);\n    scanf(\"%lf\", &b[i]);\n}\nprintf(\"\\n\\nGauss eliminaition method\\n\\n\");\nprintf(\"input data\\n\");\nfor (j = 1;j <= n;j++)\n    printf(\"         x%d\", j);\nprintf(\"       rhs\\n\");\nfor (i = 1;i <= n;i++) {\n    for (j = 1;j <= n;j++)\n        printf(\"   %8.2f\", a[i][j]);\n    printf(\"   %8.2f\\n\", b[i]);\n}\n\nfor (i = 1;i <= n;i++) {\n    p = a[i][i];\n    for (j = i;j <= n;j++)\n        a[i][j] = a[i][j] / p;\n    b[i] = b[i] / p;\n    for (k = 1;k <= n;k++) {\n        if (k != i) {\n            q = a[k][j];\n            for (j = i;j <= n;j++)\n                a[k][j] = a[k][j] - q * a[i][j];\n            b[k] = b[k] - q * b[i];\n        }\n    }\n    output(n, i, a, b);\n}\n\nprintf(\"\\n\\n solution :\\n\\n\"); \nfor (i = 1; i <= n; i++)\n    printf(\" x[%d] =b[%d] %8.2f¥n\", i, x[i], b[i]);\nreturn 0;\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;z&amp;#61;|a&amp;#43;0.5|-|a|&amp;#43;0.5&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["if a>=0  then z=1 if a<0    then z=0条件怎么转换成线性表达式", ["if a>=0  then z=1", "if a<0    then z=0", "怎么转化成线性表达式？"]], "Tag": "算法设计"}
{"Answer": "线性搜索不需要什么算法， 直接迭代遍历就可以了。", "Konwledge_Point": "线性规划和规约", "Question": ["link下大根堆小根堆排序后的线性搜索是怎么做的？如何才能做到高效率？", ["link下大根堆小根堆排序后的线性搜索是怎么做的？如何才能做到高效率？"]], "Tag": "算法设计"}
{"Answer": "http://bbs.ednchina.com/BLOG_ARTICLE_3001207.HTM", "Konwledge_Point": "线性规划和规约", "Question": ["串口采集数据的差分采样，产生不联系采集序数怎么恢复成线性连续的序列？", ["串口采集数据的差分采样，产生不联系采集序数怎么恢复成线性连续的序列？求教差分采样数据的解析方式"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;意思就是要计算方阵A与方阵B的乘积&amp;#xff0c;现在问题是&amp;#xff0c;当C(1,2)开始计算时&amp;#xff0c;C(1,1)是不是已经计算完毕&amp;#xff1f;&lt;br /&gt;答案是-&lt;strong&gt;没有计算完即False&lt;/strong&gt;&amp;#xff0c;因为C(1,1)是i等于1和k等于1的时候&amp;#xff0c;j循环了n次。而k是最里面的循环&lt;br /&gt;当i&amp;#61;1,j&amp;#61;1,k&amp;#61;1时&amp;#xff0c;只是计算了C(1,1)的一部分&lt;br /&gt;下一步循环时是i&amp;#61;1,j&amp;#61;1,k&amp;#61;2&amp;#xff0c;这个时候开始计算C(1,2)的一部分&amp;#xff0c;因此C(1,2)已经开始计算了&amp;#xff0c;但是C(1,1)只是计算了j&amp;#61;1&amp;#xff0c;还有j&amp;#61;2,...n没计算呢。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Linear algebra, MATLAB线性代数", ["\n", "以下是答案：", "\n", "\n", "我不懂matlab。看不懂题目和答案是什么意思。能不能解释一下？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先怀疑过拟合, 减少迭代次数, 像这种非常简单的数据拟合, 完全不需要200这么大的周期, 一般30-50个足够&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用BP神经网络进行预测，loss比较小，但预测值跟实际值相差较大，怎么办", ["这是数据，三个输入一个输出。", "\n", "这是用keras写的模型", "\n", "这是训练得到的loss图"]], "Tag": "算法设计"}
{"Answer": "loginFenzi", "Konwledge_Point": "线性规划和规约", "Question": ["用java怎么拟合形如y=ax^b的幂函数", ["我现在用一组(x,y)的值,怎么根据这一组值求解a,b;", "\n                用excel拟合出来的结果是y = 118.5x^-0.713", "\n                但excel内部具体实现就不知道了,求大神给个思路或代码"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你说的滑动后。自动居中。需要逻辑调整偏移量。或者不用HorizontalScrollView 控件。改为viewpager 实现。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["使用HorizontalScrollView嵌套线性布局中的控件无法适应屏幕", ["问题遇到的现象和发生背景", "\n", "android开发的小组work，为了实现横向滑动浏览图片使用HorizontalScrollView嵌套了一个线性布局，线性布局里放了4个尺寸一致的相对布局放置图片及文字，只涉及了前端代码。", "\n", "问题相关代码，请勿粘贴截图", "\n", "<", "HorizontalScrollView", "\n            ", "android:id", "=", "\"@+id/horizontalScrollView\"", "\n            ", "android:layout_width", "=", "\"match_parent\"", "\n            ", "android:layout_height", "=", "\"wrap_content\"", "\n            ", "android:scrollbars", "=", "\"none\"", "\n            ", "android:fillViewport", "=", "\"true\"", "\n            ", "android:background", "=", "\"#ffffff\"", ">", "\n            ", "<", "LinearLayout", "\n                ", "android:id", "=", "\"@+id/horizontalScrollViewItemContainer\"", "\n                ", "android:layout_width", "=", "\"match_parent\"", "\n                ", "android:layout_height", "=", "\"wrap_content\"", "\n                ", "android:orientation", "=", "\"horizontal\"", ">", "\n                ", "<", "RelativeLayout", "\n                    ", "android:id", "=", "\"@+id/frame_1\"", "\n                    ", "android:layout_width", "=", "\"match_parent\"", "\n                    ", "android:layout_height", "=", "\"match_parent\"", "\n                    ", "android:layout_alignParentLeft", "=", "\"true\"", "\n                    ", "android:layout_alignParentTop", "=", "\"true\"", "\n                    ", "android:layout_marginLeft", "=", "\"15dp\"", "\n                    ", "android:layout_marginTop", "=", "\"163dp\"", "\n                    ", "android:layout_marginRight", "=", "\"15dp\"", ">", "\n                    ", "<", "ImageView", "\n                        ", "android:id", "=", "\"@+id/rectangle_2\"", "\n                        ", "android:layout_width", "=", "\"fill_parent\"", "\n                        ", "android:layout_height", "=", "\"wrap_content\"", "\n                        ", "android:background", "=", "\"@mipmap/rectangle_2_8\"", " />", "\n                    ", "<", "RelativeLayout", "\n                        ", "android:id", "=", "\"@+id/component_1\"", "\n                        ", "android:layout_width", "=", "\"wrap_content\"", "\n                        ", "android:layout_height", "=", "\"wrap_content\"", "\n                        ", "android:layout_below", "=", "\"@id/rectangle_2\"", "\n                        ", "android:layout_marginTop", "=", "\"16dp\"", ">", "\n                        ", "<", "ImageView", "\n                            ", "android:id", "=", "\"@+id/ellipse_1\"", "\n                            ", "android:layout_width", "=", "\"wrap_content\"", "\n                            ", "android:layout_height", "=", "\"wrap_content\"", "\n                            ", "android:background", "=", "\"@mipmap/ellipse_1\"", " />", "\n                        ", "<", "TextView", "\n                            ", "android:id", "=", "\"@+id/ridhwan_nor\"", "\n                            ", "android:layout_width", "=", "\"wrap_content\"", "\n                            ", "android:layout_height", "=", "\"wrap_content\"", "\n                            ", "android:layout_alignParentLeft", "=", "\"true\"", "\n                            ", "android:layout_marginLeft", "=", "\"36dp\"", "\n                            ", "android:text", "=", "\"@string/ridhwan_nor\"", "\n                            ", "android:textAppearance", "=", "\"@style/ridhwan_nor\"", " />", "\n                        ", "<", "TextView", "\n                            ", "android:id", "=", "\"@+id/ridzjcob\"", "\n                            ", "android:layout_width", "=", "\"wrap_content\"", "\n                            ", "android:layout_height", "=", "\"wrap_content\"", "\n                            ", "android:layout_alignParentLeft", "=", "\"true\"", "\n                            ", "android:layout_alignParentTop", "=", "\"true\"", "\n                            ", "android:layout_marginLeft", "=", "\"36dp\"", "\n                            ", "android:layout_marginTop", "=", "\"15dp\"", "\n                            ", "android:text", "=", "\"@string/ridzjcob\"", "\n                            ", "android:textAppearance", "=", "\"@style/ridzjcob\"", " />", "\n                    ", "</", "RelativeLayout", ">", "\n                ", "</", "RelativeLayout", ">", "\n\n                ", "<", "RelativeLayout", "\n                    ", "android:id", "=", "\"@+id/frame_2\"", "\n                    ", "android:layout_width", "=", "\"match_parent\"", "\n                    ", "android:layout_height", "=", "\"match_parent\"", "\n                    ", "android:layout_alignParentLeft", "=", "\"true\"", "\n                    ", "android:layout_marginLeft", "=", "\"30dp\"", "\n                    ", "android:layout_alignParentTop", "=", "\"true\"", "\n                    ", "android:layout_marginTop", "=", "\"163dp\"", ">", "\n                    ", "<", "ImageView", "\n                        ", "android:id", "=", "\"@+id/rectangle_2_2\"", "\n                        ", "android:layout_width", "=", "\"wrap_content\"", "\n                        ", "android:layout_height", "=", "\"wrap_content\"", "\n                        ", "android:layout_centerHorizontal", "=", "\"true\"", "\n                        ", "android:background", "=", "\"@mipmap/rectangle_2_9\"", " />", "\n                    ", "<", "RelativeLayout", "\n                        ", "android:id", "=", "\"@+id/component_2\"", "\n                        ", "android:layout_width", "=", "\"wrap_content\"", "\n                        ", "android:layout_height", "=", "\"wrap_content\"", "\n                        ", "android:layout_alignParentTop", "=", "\"true\"", "\n                        ", "android:layout_marginTop", "=", "\"359dp\"", ">", "\n                        ", "<", "ImageView", "\n                            ", "android:id", "=", "\"@+id/ellipse_2\"", "\n                            ", "android:layout_width", "=", "\"wrap_content\"", "\n                            ", "android:layout_height", "=", "\"wrap_content\"", "\n                            ", "android:background", "=", "\"@mipmap/ellipse_3\"", " />", "\n                        ", "<", "TextView", "\n                            ", "android:id", "=", "\"@+id/clem_onojeg\"", "\n                            ", "android:layout_width", "=", "\"wrap_content\"", "\n                            ", "android:layout_height", "=", "\"wrap_content\"", "\n                            ", "android:layout_alignParentLeft", "=", "\"true\"", "\n                            ", "android:layout_marginLeft", "=", "\"36dp\"", "\n                            ", "android:text", "=", "\"@string/clem_onojeg\"", "\n                            ", "android:textAppearance", "=", "\"@style/clem_onojeg\"", " />", "\n                        ", "<", "TextView", "\n                            ", "android:id", "=", "\"@+id/clemono2\"", "\n                            ", "android:layout_width", "=", "\"wrap_content\"", "\n                            ", "android:layout_height", "=", "\"wrap_content\"", "\n                            ", "android:layout_alignParentLeft", "=", "\"true\"", "\n                            ", "android:layout_marginLeft", "=", "\"36dp\"", "\n                            ", "android:layout_alignParentTop", "=", "\"true\"", "\n                            ", "android:layout_marginTop", "=", "\"15dp\"", "\n                            ", "android:text", "=", "\"@string/clemono2\"", "\n                            ", "android:textAppearance", "=", "\"@style/clemono2\"", "/>", "\n                    ", "</", "RelativeLayout", ">", "\n                ", "</", "RelativeLayout", ">", "              \n            ", "</", "LinearLayout", ">", "\n        ", "</", "HorizontalScrollView", ">", "\n", "\n", "运行结果及报错内容", "\n", "模拟器上显示正常（图上并非我想达到的最终效果，只是在不停的调整边距，但这种方法也不太适用）但在平板和真机上还是会出现误差", " ", "\n", "我的解答思路和尝试过的方法", "\n", "由于代码是小组成员写出来的，我只负责整合。", "尝试过设置HorizontalScrollView的Android:fillViewport=\"true\"。也就是设置是否将HorizontalScrollView的内容宽度拉伸以适应视口(viewport)，好像没什么效果。我现在想把线性布局下的relativelayout兼容到该屏幕的水平居中位置，滑动到下一张图片时也自动水平居中。", "\n", "我想要达到的结果", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看这样行不行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; scipy.integrate &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; odeint\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt \n\ndef dx_dt(x,t):\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-3&lt;/span&gt;*t*x**&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#43;np.sin(t)&amp;#43;np.cos(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*t)\n\nx0 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入x0: &amp;#39;&lt;/span&gt;)\nt &amp;#61; np.arange(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;)\nx &amp;#61; odeint(dx_dt,x0,t)\n\nplt.plot(t, x)\nplt.title(&amp;#34;picture&amp;#34;)\nplt.&lt;span class=\"hljs-keyword\"&gt;show&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何使用python求微分方程的数值解，并绘图？", ["使用python求微分方程的数值解，并绘图，有哪位可以帮帮忙🙏🙏"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以。&lt;br /&gt;但自变量、因变量都要转化为数值&amp;#xff0c;例如 ABC 转化为 123&amp;#xff0c;因变量也转化为 123.&lt;br /&gt;这样处理后&amp;#xff0c;回归分析的结果&amp;#xff0c;并不取决于表达形式&amp;#xff0c;还是取决于自变量因变量的关系是否满足回归方程的假设。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["自变量是无序多分类变量，因本量是等级变量可以做回归分析吗", ["自变量是无序多分类变量，因本量是等级变量可以做回归分析吗？比如自变量是不同地区（A,B,C），因变量是高血压分级（1级，2级，3级）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;x&amp;#61;data[&amp;#34;Points&amp;#34;].values&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何知道线性方程y−y1 =m(x−x1)后，将表中的点值(50,60，…)保存到一个名为x的array中？", ["从以上表格中任意选取两个等级，求线性评价量表y = ax + b的方程。", "用x标记point，用y标记grade。", "y−y1 =m(x−x1)", "知道线性方程后，将表中的点值(50,60，…)保存到一个名为x的array中。", "将方程应用到x的array中计算y。", "输出y和x的值。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;b后面是逗号&amp;#xff0c;你写成点了&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;clc&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;clear&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;all&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;clear&lt;/span&gt; global variables;\n&lt;span class=\"hljs-attribute\"&gt;f&lt;/span&gt;&amp;#61;[-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;-&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;[-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;[-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;aeq&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;beq&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;;&lt;span class=\"hljs-meta\"&gt;\n[x,y]&amp;#61;linprog(f,a,b,aeq,beq,zeros(3,1)); %此类型的变量不支持使用点进行索引。\nx,y&amp;#61;-y&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;输出&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;6.4286&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0.5714&lt;/span&gt;\n    &lt;span class=\"hljs-number\"&gt;0.0000&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   &lt;span class=\"hljs-number\"&gt;14.5714&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab报错——此类型的变量不支持使用点进行索引。", ["clc", "clear all", "clear global variables;", "f=[-2;-3;5];", "a=[-2,5,-1;1,3,1];", "b=[-10;12];", "aeq=[1,1,1];", "beq=7;", "[x,y]=linprog(f,a,b.aeq,beq,zeros(3,1));                                此类型的变量不支持使用点进行索引。", "x,y=-y", "\n", "matlab报错——此类型的变量不支持使用点进行索引。", "如何让这个线性规划问题得解"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性表直接排序就可以了。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/641852463846174.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; MAXNMB 100&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_node&lt;/span&gt; \n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; data[MAXNMB];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len;\n}Linklist;\n\n&lt;span class=\"hljs-comment\"&gt;//排序&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Linklist *L)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t,i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;L-&amp;gt;len&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;L-&amp;gt;len-i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(L-&amp;gt;data[j] &amp;gt; L-&amp;gt;data[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n            {\n                t &amp;#61; L-&amp;gt;data[j];\n                L-&amp;gt;data[j] &amp;#61; L-&amp;gt;data[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n                L-&amp;gt;data[j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; t;\n            }\n        }\n    }\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Linklist L;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,n,i;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入m和n&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;,&amp;amp;m,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入%d个递增的数&amp;#xff1a;&amp;#34;&lt;/span&gt;,m);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;L.data[i]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入%d个递增的数&amp;#xff1a;&amp;#34;&lt;/span&gt;,n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;L.data[m&amp;#43;i]);\n    L.len &amp;#61; m&amp;#43;n;\n    &lt;span class=\"hljs-comment\"&gt;//排序&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(&amp;amp;L);\n    &lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;L.len;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;lt;L.len&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,L.data[i]);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,L.data[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#c语言#的问题：有一个存放整数的长度为m+n的线性表L，其前m个元素单调递增，后n个元素也单调递增", ["有一个存放整数的长度为m+n的线性表L，其前m个元素单调递增，后n个元素也单调递增。设计一个算法，使得整个线性表的元素单调递增。要求：使用顺序存储实现。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;A&amp;#61; rand(5)&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Matlab的高斯消元法", ["生成随机5、10阶矩阵A，x=（1 1 1 1 1）ᵀ，计算Ax=b，然后使用A，b和高斯消去法求解x. 分析误差；"]], "Tag": "算法设计"}
{"Answer": "使用:\r\n\r\n    new LinearLayout.LayoutParams(LayoutParams.FILL_PARENT,getWindowManager().getDefaultDisplay().getHeight()-100));", "Konwledge_Point": "线性规划和规约", "Question": ["如何动态的设置linear layout的高和宽", ["在我的XML文件中有一个 Linearlayout，但是高度和宽度是布满整个屏幕的。现在我想动态的改变布局的高和宽。", "\n使用以下的代码:", "\n\n", "_llChooseType.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT,getWindowManager().getDefaultDisplay().getHeight()-100));\n", "\n\n", "但是却得到错误：", "\n\n", "java.lang.ClassCastException: android.view.ViewGroup$LayoutParams exception.\n"]], "Tag": "算法设计"}
{"Answer": "方程中的变量跟 Java 的变量是一样的，需要先对方程进行转换为 x 为 y 的一个表达式，然后就可以用变量直接得到计算结果了。", "Konwledge_Point": "线性规划和规约", "Question": ["高分悬赏：Java语言输入一个包含xy的方程，再输入一个y的值，怎么计算对应的x", ["高分悬赏：Java语言输入一个包含xy的方程，再输入一个y的值，怎么计算对应的x"]], "Tag": "算法设计"}
{"Answer": "http://www.cnblogs.com/mr-wid/p/3380337.html", "Konwledge_Point": "线性规划和规约", "Question": ["线性结构模板，插入线性表时停止运行", ["#include ", "\n#include", "\n#include", "\n\n", "//模板结点", "\ntemplate", "\nstruct LNode{", "\n    ElemType data;", "\n    struct LNode* next;      //指针域", "\n};", "\n\n", "template", "\nstruct List", "\n{", "\n    struct LNode *head;", "\n    struct LNode *tail;", "\n    int len;", "\n};", "\n\n", "//创建线性表", "\ntemplate", "\nvoid CreatList(struct List &L)", "\n{", "\n    L.head=L.tail=(struct LNode*)malloc(sizeof(struct LNode));", "\n    L.head->next=NULL;", "\n    L.len=0;", "\n}", "\n\n", "template", "\nvoid Insert(struct List &L,ElemType e)", "\n{", "\n    struct LNode* s=(struct LNode*)malloc(sizeof(struct LNode));", "\n    s->data=e;", "\n    s->next=NULL;", "\n    L.tail->next=s;", "\n    L.tail=s;", "\n    L.len++;", "\n}", "\n\n", "struct association;", "\ntypedef struct Student", "\n{", "\n    char no[15];", "\n    char name[20];", "\n    char sex;", "\n    char grade[5];", "\n    char major[24];", "\n    struct List ass_list;", "\n}*p_stu,stu;", "\n\n", "void addStu(struct List &s_L)", "\n{", "\n    stu s;", "\n    char no[15];", "\n    char name[20];", "\n    char grade[5];", "\n    char major[24];", "\n\n", "scanf(\"%s\",no);\nstrcpy(s.no,no);\n\nscanf(\"%s\",name);\nstrcpy(s.name,name);\nfflush(stdin);\n\nscanf(\"%c\",&s.sex);\n\nscanf(\"%s\",grade);\nstrcpy(s.grade,grade);\n\nscanf(\"%s\",major);\nstrcpy(s.major,major);\n\nCreatList<struct association*>(s.ass_list);\n\nInsert<stu>(s_L,s);\n", "\n\n", "}", "\n\n", "int main()", "\n{", "\n    struct List s_L;", "\n    s_L.head=NULL;", "\n    s_L.tail=NULL;", "\n\n", "addStu(s_L);\n\nreturn 0;\n", "\n\n", "}", "\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "展开成傅里叶级数，高数的内容", "Konwledge_Point": "线性规划和规约", "Question": ["分段函数的单一函数数学近似", ["一个周期连续的分段函数，怎么用一个周期的单一函数逼近？有没有什么理论之类的~表示数学太渣啊"]], "Tag": "算法设计"}
{"Answer": "和你的item布局文件有关系。把item布局贴一下。\r\n前面数字列应该设置成固定宽度。身高和体重也设置成固定宽度，顶多也就3为数字。", "Konwledge_Point": "线性规划和规约", "Question": ["listview里的textviw文本错位", ["\n如图所示:一开始布局没乱,但是输入数据后就会发生错误,我想实现的是,输入的新数据不会影响到其他数据的位置.该怎么解决?", "\n部分xml", "\n        android:id=\"@+id/list_view\"  ", "\n        android:layout_width=\"fill_parent\"  ", "\n        android:layout_height=\"fill_parent\"  ", "\n        android:scrollingCache=\"true\"  ", "\n        android:cacheColorHint=\"#00000000\"  ", "\n        android:fastScrollEnabled=\"true\" ", "\n        android:focusable=\"true\"  ", "\n        android:dividerHeight=\"1dip\"   ", "\n        />", "\n                item------", "\n                <?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n     xmlns:android=\"http://schemas.android.com/apk/res/android\"  ", "\n     android:layout_width=\"fill_parent\"  ", "\n     android:layout_height=\"wrap_content\">", "\n\n", " <TextView\n    android:id=\"@+id/text_id\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:textSize=\"20sp\"         \n    android:gravity=\"center\"\n    android:text=\"@string/number\" />\n\n<TextView\n    android:id=\"@+id/text_name\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:gravity=\"center\"\n    android:textSize=\"20sp\"         \n\n    android:text=\"@string/name\" />\n\n<TextView\n    android:id=\"@+id/text_height\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:textSize=\"20sp\"         \n    android:gravity=\"center\"      \n    android:text=\"@string/height\" />\n\n<TextView\n    android:id=\"@+id/text_weight\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_weight=\"1\"\n    android:textSize=\"20sp\"         \n    android:gravity=\"center\"       \n    android:text=\"@string/weight\" />\n </LinearLayout>\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;代码供参考&lt;br /&gt;&lt;strong&gt;四阶切比雪夫&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 切比雪夫级数逼近&lt;/span&gt;\nT0 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x));&lt;span class=\"hljs-comment\"&gt;%切比雪夫多项式&lt;/span&gt;\nT1 &amp;#61; &amp;#64;(x) x;\nT2 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nT3 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x;\nT4 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\nT &amp;#61; {T0, T1, T2, T3, T4};\nA &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\nB1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nB2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nf1 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nf2 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n    B1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f1(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    B2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f2(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n        A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;}(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取系数矩阵&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nc1 &amp;#61; A\\B1;\nc2 &amp;#61; A\\B2;\ny1 &amp;#61; &amp;#64;(x) c1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\ny2 &amp;#61; &amp;#64;(x) c2(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\nycos &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nycosh &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\nycos_fit &amp;#61; y1(x);\nycosh_fit &amp;#61; y2(x);\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos,&lt;span class=\"hljs-string\"&gt;&amp;#39;r-&amp;#39;&lt;/span&gt;, x, ycosh, &lt;span class=\"hljs-string\"&gt;&amp;#39;b-&amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on;\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos_fit,&lt;span class=\"hljs-string\"&gt;&amp;#39;-.&amp;#39;&lt;/span&gt;, x, ycosh_fit, &lt;span class=\"hljs-string\"&gt;&amp;#39;g--&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;legend&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)四阶切比雪夫逼近&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)四阶切比雪夫逼近&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/599280755436140.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;四次多项式逼近&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 四次多项式&lt;/span&gt;\nT0 &amp;#61; &amp;#64;(x) &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x));&lt;span class=\"hljs-comment\"&gt;%基函数&lt;/span&gt;\nT1 &amp;#61; &amp;#64;(x) x;\nT2 &amp;#61; &amp;#64;(x) x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nT3 &amp;#61; &amp;#64;(x) x.^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\nT4 &amp;#61; &amp;#64;(x) x.^&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\nT &amp;#61; {T0, T1, T2, T3, T4};\nA &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\nB1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nB2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nf1 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nf2 &amp;#61; &amp;#64;(x)&lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n    B1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f1(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    B2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*f2(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取右端项&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;\n        A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#61; integral(&amp;#64;(x)T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;}(x).*T{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;}(x), &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%积分获取系数矩阵&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nc1 &amp;#61; A\\B1;\nc2 &amp;#61; A\\B2;\ny1 &amp;#61; &amp;#64;(x) c1(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c1(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\ny2 &amp;#61; &amp;#64;(x) c2(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;}(x) &amp;#43; c2(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*T{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;}(x);\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;);\nycos &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cos&lt;/span&gt;(x);\nycosh &amp;#61; &lt;span class=\"hljs-built_in\"&gt;cosh&lt;/span&gt;(x);\nycos_fit &amp;#61; y1(x);\nycosh_fit &amp;#61; y2(x);\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos,&lt;span class=\"hljs-string\"&gt;&amp;#39;r-&amp;#39;&lt;/span&gt;, x, ycosh, &lt;span class=\"hljs-string\"&gt;&amp;#39;b-&amp;#39;&lt;/span&gt;); &lt;span class=\"hljs-built_in\"&gt;hold&lt;/span&gt; on;\n&lt;span class=\"hljs-built_in\"&gt;plot&lt;/span&gt;(x,ycos_fit,&lt;span class=\"hljs-string\"&gt;&amp;#39;-.&amp;#39;&lt;/span&gt;, x, ycosh_fit, &lt;span class=\"hljs-string\"&gt;&amp;#39;g--&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;legend&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cos(x)四次多项式逼近&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;cosh(x)四次多项式逼近&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;逼近效果&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/996141755436112.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;可见两者在四阶的时候&amp;#xff0c;都和原函数十分贴合&lt;br /&gt;有帮助还望答主点个右上角采纳支持一下&amp;#xff0c;答题不易&amp;#xff0c;十分感谢&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据分析的编程问题，4阶chebyshev级数、最佳平方逼近", ["求函数 y=cosx 及函数y=cosh x  在区间[-1,1] 的4阶chebyshev级数以及4次多项式最佳平方逼近, 其中积分近似计算可以使用matlab命令quad及相关命令"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;spatial analyst tools -&amp;gt; surface -&amp;gt; contour&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["arcgis中怎样绘制poi核密度等值线分布图", ["这是大连市区的POI核密度分布图，请各位点播一下如何绘制POI分布等值线", "\n"]], "Tag": "算法设计"}
{"Answer": "首先在清单文件加权限:`&lt;uses-permission android:name=\"android.permission.CHANGE_CONFIGURATION\"&gt;`\r\n然后重写onConfigurationChanged()方法.\r\n\r\n    @Override\r\n\tpublic void onConfigurationChanged(Configuration newConfig) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\tsuper.onConfigurationChanged(newConfig);\r\n\t    if(newConfig.orientation==Configuration.ORIENTATION_LANDSCAPE){  \r\n\t        //横向  \r\n\t        setContentView(R.layout.main_landscape);  \r\n            //重新实例化组件和设置监听\r\n\t    }else{  \r\n\t        //竖向  \r\n\t        setContentView(R.layout.main);  \r\n            //重新实例化组件和设置监听       \r\n\t    }  \r\n\t}\r\n最后别忘了在onCreate()时加上判断,\r\n\r\n    if(getResources().getConfiguration().orientation ==Configuration.ORIENTATION_LANDSCAPE){\r\n        setContentView(R.layout.main_landscape);\r\n    }else {\r\n        setContentView(R.layout.main);\r\n    }", "Konwledge_Point": "线性规划和规约", "Question": ["如何修改 activity 中的布局", ["当方向改变时，我想让activity 不被毁坏，因此我在manifest 文件中添加：", "\n\n", "<activity\n          android:name=\"MyActivity\"\n          android:configChanges=\"orientation|keyboard|keyboardHidden\">\n </activity>\n", "\n\n", "现在的问题是每当方向转化成横向方式时，我如何才能使它转向一个新的布局？", "\n在 layout-land 或者 layout-port 里加入布局文件还是不能正常运行。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;刚才那个写的有点错误&amp;#xff0c;方程写错了&amp;#xff0c;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x)&lt;/span&gt;                    &lt;span class=\"hljs-comment\"&gt;// 求 y 函数&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) - &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;pow&lt;/span&gt;(x,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*x&lt;span class=\"hljs-number\"&gt;-6&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;newx&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x1, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x2)&lt;/span&gt;    &lt;span class=\"hljs-comment\"&gt;// 求 x 的下一迭代值&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x1-&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1)*(x1-x2)/(&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1)-&lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x2));\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;root&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x1, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x2)&lt;/span&gt;         &lt;span class=\"hljs-comment\"&gt;// 求根函数&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x, y, y1;\n    y1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x1);                        &lt;span class=\"hljs-comment\"&gt;// 先固定(x1,y1)&amp;#xff0c;并不断调整(x2,y2)&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(y &amp;#61; y1; &lt;span class=\"hljs-built_in\"&gt;fabs&lt;/span&gt;(y) &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;; ) &lt;span class=\"hljs-comment\"&gt;// 循环求解&amp;#xff0c;判断精度是否满足需求&lt;/span&gt;\n    {\n        x &amp;#61; &lt;span class=\"hljs-built_in\"&gt;newx&lt;/span&gt;(x1, x2);            &lt;span class=\"hljs-comment\"&gt;// 下一迭代值 x&lt;/span&gt;\n        y &amp;#61; &lt;span class=\"hljs-built_in\"&gt;f&lt;/span&gt;(x);                    &lt;span class=\"hljs-comment\"&gt;// x 对应的 y 值&lt;/span&gt;\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(y*y1 &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)                &lt;span class=\"hljs-comment\"&gt;// 如果新点(x,y)和(x1,y1)在 x 轴的同侧&amp;#xff0c;则替换(x1,y1)&lt;/span&gt;\n        {\n            y1 &amp;#61; y;\n            x1 &amp;#61; x;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            x2 &amp;#61; x;                    \n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; x;\n\n    x &amp;#61; &lt;span class=\"hljs-built_in\"&gt;root&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;);\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.2f&amp;#34;&lt;/span&gt;,x);\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#c语言#的问题：用弦截法求非线性方程23-42+3x-6=0在区间[0,3]的一个实根", ["用弦截法求非线性方程2", "3-4", "2+3x-6=0在区间[0,3]的一个实根，精度为10-6。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&lt;br /&gt;a和m互质&amp;#xff0c;即它们的最大公约数为1&amp;#xff1b;&lt;br /&gt;c与m无公因数&amp;#xff0c;即它们的最大公约数为1&amp;#xff1b;&lt;br /&gt;a-1能够被m的所有质因子整除&amp;#xff1b;&lt;br /&gt;如果m是4的倍数&amp;#xff0c;则a-1也必须是4的倍数。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; &lt;span class=\"hljs-number\"&gt;945&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 模数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// a值&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// c值&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max_period &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 最大周期&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) { &lt;span class=\"hljs-comment\"&gt;// 遍历a值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (i - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) % &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;// 判断是否满足条件3和4&lt;/span&gt;\n            a &amp;#61; i;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; m; i&amp;#43;&amp;#43;) { &lt;span class=\"hljs-comment\"&gt;// 遍历c值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (m % i !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;// 判断是否满足条件2&lt;/span&gt;\n            c &amp;#61; i;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n    }\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 初始值&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; period &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 周期&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt; { &lt;span class=\"hljs-comment\"&gt;// 计算随机数序列的周期&lt;/span&gt;\n        x &amp;#61; (a * x &amp;#43; c) % m;\n        period&amp;#43;&amp;#43;;\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (x !&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n\n    max_period &amp;#61; m - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 最大周期为m-1&lt;/span&gt;\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#61;%d, c&amp;#61;%d, max period&amp;#61;%d\\n&amp;#34;&lt;/span&gt;, a, c, max_period);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["已知线性同余的模数为945", ["已知线性同余的模数为945，怎么取a值和增量c值大最大周期呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/601232949256191.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;理解支持向量&amp;#xff0c;bargin的含义就行&amp;#xff0c;&lt;br /&gt;支持向量机的分类超平面只和支持向量样本有关&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["人工智能导论模型与算法书的课后题实在不会好商量支持向量机机器学习svm 分类边界错误率分离边界发生变化实现，考虑一个在二维特征空间中的二类分析问题，训练集包含八个样本其在二维空间中的分布如图", ["\n", "考虑一个在两维特征空间中的二分类问题。训练集包含8个样本，其在二维空间中的分布如图4.14所示。图4.14中不同类别的样本用不同的形状表示，根据图4.14回答如下问题。", "(1)使用实线画出使用SVM分类器可得到的分类边界，并用圆圈标出支持向量。", "(2)在该分类边界下所得训练错误率为多少？", "(3)移除哪些样本可以让分类边界发生变化？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Chris,&lt;/p&gt;\n\n&lt;p&gt;First you will want to create that new table in your database to capture this information.  Lets assume to you will have the following fields (very basic, you may want to add more): &lt;code&gt;ReportId&lt;/code&gt;, &lt;code&gt;LinkId&lt;/code&gt;, &lt;code&gt;DateReported&lt;/code&gt;. &lt;code&gt;ReportId&lt;/code&gt; is our primary key, &lt;code&gt;LinkId&lt;/code&gt; is the ID you reference in your question and the &lt;code&gt;DateReported&lt;/code&gt; is the server time we logged the transaction.&lt;/p&gt;\n\n&lt;p&gt;With this table created you are going to want to create a new php page, lets call it &lt;code&gt;report-link.php&lt;/code&gt;.  You are going to want to make this page accept a querystring variable called &lt;code&gt;linkid&lt;/code&gt; (accessible in the &lt;code&gt;$_GET[]&lt;/code&gt; collection).  In the code of this page you will want to write a SQL query that inserts the value of the &lt;code&gt;linkid&lt;/code&gt; parameter into the new link report table in the database (along with the &lt;code&gt;date()&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;On your search page you will be able to have users report an entry by clicking a link with the href of &lt;code&gt;/path/to/report-link.php?linkid=&amp;lt;?php echo $link_id; ?&amp;gt;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Please note this example is very simplistic in nature, and offers no security for spamming, pleasant end user experience after they click the link, but this is the process you will want to follow in setting this feature up.  After you have it working you can spruce up the experience for your users.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["php报告按钮", ["\n\n", "I am working on a search script and on each search result I want a report link button. I am not sure how to make one. I have looked on google for answers but cannot come up with anything. Can anyone give me an idea of what to do? or does anyone know where there is an example of this? I plan on using the link id and making a new table on mysql to send reports to. I am just looking for a basic button to send reports to mysql I am just not sure what would be the best way to do it. I have the data for the link id's I just need to be able to report it to a new table I am assuming. Any suggestions or examples are very appreciated. Thanks.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我线性代数不太行&amp;#xff0c;想不出啥技巧&amp;#xff0c;用笨方法给你接一下x吧&amp;#xff0c;y就不算了&amp;#xff0c;不好算。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/781917077136145.jpg\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Linear algebra, graphs and networks线性代数", ["\n", "求A^T C A x = f =(1, 0, 0, -1)", "等式左边我算出来了，但是我用ipython算是singular matrix，算不出答案。", "\n", "\n", "他给的答案是x=（5/12， 1/6, 1/6, 0)y=(1/2, 1/2, 0, 1/2, 1/2)", "到底怎么算？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;根据行列式的Leibniz公式&amp;#xff0c;把行列式项中的元素按第一个下标排序&amp;#xff0c;然后看第二个下标是否是序列{1, 2, ..., n}的一种置换&amp;#xff0c;如果是&amp;#xff0c;则符号是为正&amp;#xff0c;否则为负。&lt;br /&gt;你这道题按第一个下标排序&amp;#xff0c;得到&lt;br /&gt;a12 a24 a35 a41 a53&lt;br /&gt;第二个下标序列为{2, 4, 5, 1, 3}&amp;#xff0c;而这个序列不能通过对{1, 2, 3, 4, 5}进行置换得到&amp;#xff0c;所以符号改项的符号为负&lt;/p&gt;\n&lt;p&gt;参考&lt;br /&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Determinant#Leibniz_formula\" id=\"textarea_1642002793618_1642003864331_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://en.wikipedia.org/wiki/Determinant#Leibniz_formula&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问这个是为什么线性代数", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;广义线性模型 (Generalized Linear Model, GLM) 是一类常用于分析二项分布数据的统计模型。当因变量是二元变量时&amp;#xff0c;可以使用 glm() 函数来拟合一个 GLM 模型&amp;#xff0c;并使用 family 参数来指定二项分布的家族。&lt;/p&gt;\n&lt;p&gt;在你的情况中&amp;#xff0c;因变量是0&amp;#xff0c;1&amp;#xff0c;自变量是分类变量&amp;#xff0c;连续变量。你使用 family&amp;#61;binomial 来指定二项分布家族&amp;#xff0c;这是正确的。&lt;/p&gt;\n&lt;p&gt;但是&amp;#xff0c;如果你在拟合模型时遇到了 &amp;#34;model is nearly unidentifiable: very large eigenvalue&amp;#34; 的警告&amp;#xff0c;这通常表明线性模型存在多重共线性问题。这可能是因为自变量之间存在高度相关性&amp;#xff0c;或者是因为自变量的线性组合导致的。&lt;/p&gt;\n&lt;p&gt;解决方法:&lt;/p&gt;\n&lt;p&gt;你可以考虑删除一些自变量&amp;#xff0c;或者使用不同的转换来降低自变量之间的相关性&lt;br /&gt;你可以尝试使用正则化技术&amp;#xff0c;比如 L1 或 L2 正则化&amp;#xff0c;来解决多重共线性问题。&lt;br /&gt;你可以尝试使用其他类型的模型&amp;#xff0c;比如决策树或随机森林等。&lt;br /&gt;需要注意的是&amp;#xff0c;在确定自变量的时候&amp;#xff0c;还需要考虑自变量的可解释性和业务场景。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["R 广义线性模型 — very large eigenvalue", ["因变量为正确率（0，1），自变量为一个分类变量，两个连续变量，family=binomial", "显示model is nearly unidentifiable: very large eigenvalue", "\n", "请问family的使用是否正确，以及如何解决警告？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;A是由5&lt;em&gt;单位矩阵-4&lt;/em&gt;全是1的矩阵组成&amp;#xff0c;前面的矩阵特征值都是5&amp;#xff08;单位矩阵对角线全是1&amp;#xff0c;特征值全是1&amp;#xff0c;所以都*5&amp;#xff09;&amp;#xff0c;后面的矩阵秩为1&amp;#xff0c;但它是4阶&amp;#xff0c;所以它只有一个特征值不为0&amp;#xff0c;又因为对角线元素之和等于矩阵特征值之和&amp;#xff0c;所以后面的矩阵特征值有一个是4&amp;#xff0c;然后A的特征值是可以由前个矩阵的特征值依次减去后面矩阵特征值得到的&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/896189608236114.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Linear algebra, diagonalizing a matrix线性代数", ["\n", "\"Subtract the eigenvalues 4,0,0,0 from 5,5,5,5. The eigenvalues of A are 1,5,5,5.\" 是什么原理？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;能求出来应该算对吧&amp;#xff0c;方法千万种&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性代数的问题 行列式的问题", ["在求行列式时 不化成上三角或下三角直接用展开式求算错吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;使用 Scikit-learn 的机器学习模型时&amp;#xff0c;通常都是先实例化一个模型对象&amp;#xff0c;然后再调用其 fit 方法来拟合模型。如果直接调用 LinearRegression().fit(x_train, y_train)&amp;#xff0c;你会得到一个 &amp;#34;This LinearRegression instance is not fitted yet. Call &amp;#39;fit&amp;#39; with appropriate arguments before using this estimator.&amp;#34; 的错误。这是因为&amp;#xff0c;在调用 fit 方法前&amp;#xff0c;模型实例没有被保存下来&amp;#xff0c;因此不能在之后使用。&lt;/p&gt;\n&lt;p&gt;而在这种情况下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;houselr &lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt; LinearRegression()\nhouselr.fit(x_train,y_train)\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;首先&amp;#xff0c;我们实例化了一个 LinearRegression 对象&amp;#xff0c;并将其保存在变量 houselr 中。然后再调用 houselr.fit(x_train, y_train) 拟合模型&amp;#xff0c;这样就不会报错。因此&amp;#xff0c;通常情况下&amp;#xff0c;在使用模型时都会先将其实例化&amp;#xff0c;再拟合。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["使用sklearn进行线性回归时遇到的问题", ["代码苦手,在使用sklearn中LinearRegression时,若直接使用", "LinearRegression().fit(x_train,y_train)", "则会报错This LinearRegression instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.  ", "\n", "若是先行将LinearRegression()定义为其他,如", "houselr = LinearRegression()", "houselr.fit(x_train,y_train)", "则不会出现该状况,这是为什么呢?"]], "Tag": "算法设计"}
{"Answer": "楼上的两个按钮填满水平布局，如果不想填满还用线性布局，只能在两个TextView中间再放一个view 占位置了。借楼主的代码改了下\r\n\r\n    &lt;LinearLayout\r\n        android:id=\"@+id/linearLayout1\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\" &gt;\r\n    \r\n        &lt;LinearLayout\r\n            android:id=\"@+id/linearLayout2\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\" &gt;\r\n    \r\n            &lt;TextView\r\n                android:id=\"@+id/textView1\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Street\" \r\n                android:layout_gravity=\"left\"/&gt;\r\n             &lt;View            \r\n                android:layout_width=\"0dip\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                /&gt;\r\n    \r\n            &lt;TextView\r\n                android:id=\"@+id/textView2\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"456546546\"\r\n                android:layout_gravity=\"right\" /&gt;\r\n    \r\n        &lt;/LinearLayout&gt;\r\n\r\n&lt;/LinearLayout&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["在线性布局视图中创建两个列", ["我想创建一个布局，布局里包含两列，左边和右边各显示一个textview，但是我使用的下面代码，这两个textview都在左边。怎么能把textview分开两边显示呢？谢谢！", "\n\n", "<LinearLayout\n    android:id=\"@+id/linearLayout1\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\" >\n\n    <LinearLayout\n        android:id=\"@+id/linearLayout2\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"horizontal\" >\n\n        <TextView\n            android:id=\"@+id/textView1\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Street\" \n            android:layout_gravity=\"left\"/>\n\n        <TextView\n            android:id=\"@+id/textView2\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"456546546\"\n            android:layout_gravity=\"right\" />\n\n    </LinearLayout>\n\n</LinearLayout>\n"]], "Tag": "算法设计"}
{"Answer": "&lt;h4 id=\"h4_意思是&amp;#xff0c;你在使用n2前&amp;#xff0c;你没有声明它是多少呀&amp;#xff0c;凭空出现的n2&amp;#xff0c;计算机肯定识别不出来呀&amp;#xff0c;你要定义一下n2的值或者表达式哟。_1659273705499\"&gt;意思是&amp;#xff0c;你在使用N2前&amp;#xff0c;你没有声明它是多少呀&amp;#xff0c;凭空出现的N2&amp;#xff0c;计算机肯定识别不出来呀&amp;#xff0c;你要定义一下N2的值或者表达式哟。&lt;/h4&gt;\n&lt;h4 id=\"h4_觉得有帮助的话&amp;#xff0c;可以点击一下-采纳-哟&amp;#xff0c;谢谢_1659273705499\"&gt;觉得有帮助的话&amp;#xff0c;可以点击一下 &lt;strong&gt;采纳&lt;/strong&gt; 哟&amp;#xff0c;谢谢~&lt;/h4&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Matlab求出，解多目标线性方程", ["这个多目标函数怎么都解不出来，他总是高数我未知数不知道，可是我希望他解未知数啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你给的值已经很准确了&amp;#xff0c;也是线性输出&lt;br /&gt;你可以仔细测量正确的DA的环境&amp;#xff0c;与你的环境做对比。DA的工作电压最好不变。仔细测量正确 DA 环境下的12位数值和电流的关系。要测量多组数据做对比。&lt;br /&gt;我们一般使用 DA 是需要做校准的&amp;#xff0c;每个DA板子的电阻值可能是有偏差的。一般就用一个最简单的线性方程 Y&amp;#61;K * X &amp;#43; B 反复多测量几组参数后用求出 K 和 B 的平均值。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["DA输出值不准确，输出不线性", ["用mcp4822.  12位DA输出芯片转0-20mA输出电路     程序输出直接发送数字0  万用表测量mA为0.07mA左右，程序直接输出数字4095  测量结果是20.5mA左右，输出数字2047  测量结果为10.2mA左右", "12位Da输出应该之前可以精确到0.01mA吧， 为什么 我的输出差这么多呢，da输出电路板没有问题，直接用的别人正常使用的，是不是程序还需要怎么处理呢，不是直接给输出程序赋对应的0-4095的数就可以直接输出对应的mA么？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是线性规划&amp;#xff0c;但是不建议你自己手写代码了。可以去了解一下gurobi&amp;#xff0c;可以解决这类问题&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/038491147956182.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["想知道这种用matlab要怎么写", ["这种还是属于线性规划问题吗，可是y前面不是已经乘了未知数k了吗？", "请问具体应该怎么写代码呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;行列式求解两种方法&amp;#xff0c;一是通过行列变换得到对角行列式&amp;#xff0c;二是通过行列式展开&amp;#xff0c;也就是代数余子式的方法&amp;#xff0c;就是标准答案的第一个方法。行列式经过行列变换后是等效的&amp;#xff0c;所以为了计算方便&amp;#xff0c;先经过行列变换再做展开也是可以的。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性代数中关于k阶子式问题", ["\n", "我想用k阶子式的方法来做，但是我算出来的结果和答案不一样，而且答案是先行列互换再计算的，我这样子计算是错误的吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先构建一个等号右侧为0的等式&amp;#xff0c;然后按照这个步骤去做就可以了。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/402932854656128.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;有帮助请采纳&amp;#xff0c;还有不懂的可以继续追问~&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请教一下大家关于matlab求解非线性方程", ["\n", "自己的程序出了错误不知如何解决，还有初始值该如何表示，请教一下大家"]], "Tag": "算法设计"}
{"Answer": "https://www.cnblogs.com/ooon/p/5721119.html", "Konwledge_Point": "线性规划和规约", "Question": ["除了牛顿法，还可以如何求解kkt条件？", ["在获得了一个线性规划问题的KKT条件之后，除了用牛顿法之外，还可以用什么方法来求解了？请优化大佬指点一下"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; cv2\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; numpy as np\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\nfrom matplotlib.widgets &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; Slider &lt;span class=\"hljs-comment\"&gt;#调用Slider滑块控件&lt;/span&gt;\n\ndef set_chinese(): &lt;span class=\"hljs-comment\"&gt;#使得画图时的标题可以为中文&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; matplotlib\n    print(&lt;span class=\"hljs-string\"&gt;&amp;#34;[INFO] matplotlib版本为: %s&amp;#34;&lt;/span&gt; % matplotlib.__version__)\n    matplotlib.rcParams[&amp;#39;font.sans-serif&amp;#39;] &amp;#61; [&amp;#39;FangSong&amp;#39;]\n    matplotlib.rcParams[&amp;#39;axes.unicode_minus&amp;#39;] &amp;#61; False\n\ndef three_line_trans(x,x1,y1,x2,y2):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x1&amp;#61;&amp;#61;0&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x1&amp;#61;&amp;#61;x2&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x2&amp;#61;&amp;#61;255:&lt;/span&gt;\n        print(&lt;span class=\"hljs-string\"&gt;&amp;#34;[INFO] x1&amp;#61;{},x2{} -&amp;gt;调用此函数必须满足: x1≠x2且x2≠255以及x1≠0&amp;#34;&lt;/span&gt;)\n        return None\n\n    &lt;span class=\"hljs-comment\"&gt;#【快速算法】&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;m1&lt;/span&gt; &amp;#61; (x&amp;lt;x1)\n    &lt;span class=\"hljs-attr\"&gt;m2&lt;/span&gt; &amp;#61; (x&amp;gt;x1)&amp;amp;(x&amp;lt;x2)\n    &lt;span class=\"hljs-attr\"&gt;m3&lt;/span&gt; &amp;#61; (x&amp;gt;x2)\n    &lt;span class=\"hljs-attr\"&gt;output&lt;/span&gt; &amp;#61; (y1*x/x1)*m1 &amp;#43; (((y2-y1)/(x2-x1))*(x-x1)&amp;#43;y1)*m2 &amp;#43; (((&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;-y2)/(&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;-x2))*(x-x2)&amp;#43;y2)*m3\n\n    &lt;span class=\"hljs-comment\"&gt;# 3.获取分段线性函数的点集&amp;#xff0c;用于绘制函数图像&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;x_point&lt;/span&gt; &amp;#61; np.arange(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;cond2&lt;/span&gt; &amp;#61; [True &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;gt;&amp;#61; x1 &lt;span class=\"hljs-literal\"&gt;and&lt;/span&gt; i &amp;lt;&amp;#61; x2) &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; False for i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; x_point] &lt;span class=\"hljs-comment\"&gt;#!!!不能直接写x1&amp;lt;&amp;#61;x_point&amp;lt;&amp;#61;x2,否则报错。暂时不知道为什么不能双向&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;y_point&lt;/span&gt; &amp;#61; (y1 / x1 * x_point) * (x_point &amp;lt; x1) \\\n              &amp;#43; ((y2 - y1) / (x2 - x1) * (x_point - x1) &amp;#43; y1) * (cond2) \\\n              &amp;#43; ((&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt; - y2) / (&lt;span class=\"hljs-number\"&gt;255&lt;/span&gt; - x2) * (x_point - x2) &amp;#43; y2) * (x_point &amp;gt; x2)\n\n    return output, x_point, y_point\n\ndef update_trans(val):\n    &lt;span class=\"hljs-comment\"&gt;# 读入4个滑动条的值&lt;/span&gt;\n    x1, &lt;span class=\"hljs-attr\"&gt;y1&lt;/span&gt; &amp;#61; slider_x1.val, slider_y1.val\n    x2, &lt;span class=\"hljs-attr\"&gt;y2&lt;/span&gt; &amp;#61; slider_x2.val, slider_y2.val\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x1&amp;gt;&amp;#61;x2:\n        &lt;span class=\"hljs-attr\"&gt;x1&lt;/span&gt; &amp;#61; x2-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y1&amp;gt;&amp;#61;y2:\n        &lt;span class=\"hljs-attr\"&gt;y1&lt;/span&gt; &amp;#61; y2-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    output, x_point, &lt;span class=\"hljs-attr\"&gt;y_point&lt;/span&gt; &amp;#61; three_line_trans(img_original1, &lt;span class=\"hljs-attr\"&gt;x1&amp;#61;x1,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;y1&amp;#61;y1,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;x2&amp;#61;x2,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;y2&amp;#61;y2)&lt;/span&gt;\n    ax3.clear()\n    ax3.set_title(&amp;#39;分段线性函数图像&amp;#39;, &lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax3.grid(True, &lt;span class=\"hljs-attr\"&gt;linestyle&amp;#61;&amp;#39;:&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;linewidth&amp;#61;1)&lt;/span&gt;\n    ax3.plot([x1, x2], [y1, y2], &amp;#39;ro&amp;#39;)\n    ax3.plot(x_point, y_point, &amp;#39;g&amp;#39;)\n\n    ax4.clear()\n    ax4.set_title(&amp;#39;变换后的图像&amp;#39;, &lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax4.imshow(output, &lt;span class=\"hljs-attr\"&gt;cmap&amp;#61;&amp;#39;gray&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;vmin&amp;#61;0,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;vmax&amp;#61;255)&lt;/span&gt;\n\n    ax5.clear()\n    ax5.set_title(&amp;#39;变换后图像直方图&amp;#39;, &lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax5.hist(output.flatten(),&lt;span class=\"hljs-attr\"&gt;bins&amp;#61;50,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;density&amp;#61;True,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;color&amp;#61;&amp;#39;r&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;edgecolor&amp;#61;&amp;#39;k&amp;#39;)&lt;/span&gt;\n    ax5.set_xlim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置x轴分布范围&lt;/span&gt;\n    ax5.set_ylim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.15&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置y轴分布范围&lt;/span&gt;\n    ax5.grid(True, &lt;span class=\"hljs-attr\"&gt;linestyle&amp;#61;&amp;#39;:&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;linewidth&amp;#61;1)&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;__name__&lt;/span&gt; &amp;#61;&amp;#61; &amp;#39;__main__&amp;#39;:\n    set_chinese()\n    &lt;span class=\"hljs-attr\"&gt;img_original&lt;/span&gt; &amp;#61; cv2.imread(r&amp;#39;Fig0316(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;nd_from_top).tif&amp;#39;)\n    &lt;span class=\"hljs-attr\"&gt;img_original1&lt;/span&gt; &amp;#61; cv2.cvtColor(img_original, cv2.COLOR_BGR2GRAY)\n\n\n    &lt;span class=\"hljs-attr\"&gt;fig&lt;/span&gt; &amp;#61; plt.figure()\n    &lt;span class=\"hljs-attr\"&gt;ax1&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;231&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax2&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;232&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax3&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;233&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax4&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;234&lt;/span&gt;)\n    &lt;span class=\"hljs-attr\"&gt;ax5&lt;/span&gt; &amp;#61; fig.add_subplot(&lt;span class=\"hljs-number\"&gt;235&lt;/span&gt;)\n\n    ax1.set_title(&amp;#39;原始输入图片&amp;#39;,&lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax1.imshow(img_original1,&lt;span class=\"hljs-attr\"&gt;cmap&amp;#61;&amp;#39;gray&amp;#39;,vmin&amp;#61;0,vmax&amp;#61;255)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#官方文档&amp;#xff1a;https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.imshow.html#matplotlib.axes.Axes.imshow&lt;/span&gt;\n    ax2.set_title(&amp;#39;原始输入图片直方图&amp;#39;,&lt;span class=\"hljs-attr\"&gt;fontsize&amp;#61;8)&lt;/span&gt;\n    ax2.hist(img_original1.flatten(), &lt;span class=\"hljs-attr\"&gt;bins&amp;#61;50,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;density&amp;#61;True,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;color&amp;#61;&amp;#39;r&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;edgecolor&amp;#61;&amp;#39;k&amp;#39;)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#bin属性控制直方图横条的数量, density为True则显示的是概率密度&lt;/span&gt;\n    ax2.set_xlim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置x轴分布范围&lt;/span&gt;\n    ax2.set_ylim(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.15&lt;/span&gt;)  &lt;span class=\"hljs-comment\"&gt;# 设置y轴分布范围&lt;/span&gt;\n    ax2.grid(True, &lt;span class=\"hljs-attr\"&gt;linestyle&amp;#61;&amp;#39;:&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;linewidth&amp;#61;1)&lt;/span&gt;\n\n    plt.subplots_adjust(&lt;span class=\"hljs-attr\"&gt;bottom&amp;#61;0.3)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;x1&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;], &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;lightgoldenrodyellow&amp;#39;)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#控制横轴的left,bottom,width,height位置和大小&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_x1&lt;/span&gt; &amp;#61; Slider(x1, &amp;#39;参数x1&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;91,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#slider的输入x必须是一个Axes&lt;/span&gt;\n    slider_x1.on_changed(update_trans)\n\n    &lt;span class=\"hljs-attr\"&gt;y1&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.16&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;],\n                  &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;lightgoldenrodyellow&amp;#39;)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_y1&lt;/span&gt; &amp;#61; Slider(y1, &amp;#39;参数y1&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;0,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt;\n    slider_y1.on_changed(update_trans)\n\n    &lt;span class=\"hljs-attr\"&gt;x2&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.06&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;],\n                  &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;white&amp;#39;)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_x2&lt;/span&gt; &amp;#61; Slider(x2, &amp;#39;参数x2&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;254&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;138,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#valinit表示slider的点的初始位置&amp;#xff08;即滑块的初始值&amp;#xff09;&lt;/span&gt;\n    slider_x2.on_changed(update_trans)\n\n    &lt;span class=\"hljs-attr\"&gt;y2&lt;/span&gt; &amp;#61; plt.axes([&lt;span class=\"hljs-number\"&gt;0.25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.02&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.45&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.03&lt;/span&gt;],\n                  &lt;span class=\"hljs-attr\"&gt;facecolor&amp;#61;&amp;#39;white&amp;#39;)&lt;/span&gt;\n    &lt;span class=\"hljs-attr\"&gt;slider_y2&lt;/span&gt; &amp;#61; Slider(y2, &amp;#39;参数y2&amp;#39;, &lt;span class=\"hljs-number\"&gt;0.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;255&lt;/span&gt;.,\n                       &lt;span class=\"hljs-attr\"&gt;valfmt&amp;#61;&amp;#39;%.f&amp;#39;,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valinit&amp;#61;255,&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;valstep&amp;#61;1)&lt;/span&gt;\n    slider_y2.on_changed(update_trans)\n\n    slider_x1.set_val(&lt;span class=\"hljs-number\"&gt;91&lt;/span&gt;)\n    slider_y1.set_val(&lt;span class=\"hljs-number\"&gt;91&lt;/span&gt;)\n    slider_x2.set_val(&lt;span class=\"hljs-number\"&gt;138&lt;/span&gt;)\n    slider_y2.set_val(&lt;span class=\"hljs-number\"&gt;138&lt;/span&gt;)\n    &lt;span class=\"hljs-comment\"&gt;#plt.tight_layout()&lt;/span&gt;\n    plt.show()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/237403633756118.jpg\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["实现分段线性变换，显示处理前后图像", ["2.产生灰度变换函数T1，使得：", "          0.3r                            r < 0.35", "s =     0.105 + 2.6333(r-0.35)                  0.35 ≤ r ≤ 0.65", "          1 + 0.3(r-1)                r > 0.65", "    用T1对原图像rice.jpg进行处理，显示处理前、后的图像(r,s为归一化灰度)。", "\n", "rice.jpg", "\n", "实验仪器", "      Python+OpenCV"]], "Tag": "算法设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;关于该问题&amp;#xff0c;我找了一篇非常好的博客&amp;#xff0c;你可以看看是否有帮助&amp;#xff0c;链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_46191800/article/details/108541043\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;关于R语言多水平线性回归分析&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;你还可以看下r语言参考手册中的 &lt;a href=\"https://cran.r-project.org/doc/manuals/r-release/R-intro.html#Linear-models\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;r语言 线性模型&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 以帮助更多的人 ^-^", "Konwledge_Point": "线性规划和规约", "Question": ["在R语言中做多水平线性回归", ["我的数据是：低水平层面为团队中的成员；高水平为团队，其中团队层面的数据是从成员层面聚合得到的。", "我的分析模型是：考虑团队特性对团队绩效的影响，检验团队层面变量的调节作用以及个人层面变量的调节作用。", "我主要有两个问题请教大家：一是做多水平回归的时候对两个层面的数据做分析，导入的数据选择哪个层面呢？我在网上搜到一些例子，大多研究的是低水平层面的自变量与因变量的关系，同时考察高水平层面的调节作用，用的也都是低水平的数据，所以像我这样的研究假设因变量是在高水平层面，是否就应该导入高水平层面的数据做分析？二是，导入高水平层面的数据后还想检验低水平层面变量的调节作用该如何实现呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答通过自己思路及引用到GPTᴼᴾᴱᴺᴬᴵ搜索,得到内容具体如下&amp;#xff1a;&lt;br /&gt;以下是用 Jacobi 迭代法解线性方程组的 MATLAB 函数代码&amp;#xff0c;包括了你提到的步骤 2 到 7&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Xsolve&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;myJacobi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(A, b, X0, mytol)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% Jacobi 迭代法解线性方程组 Ax&amp;#61;b&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 输入参数&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% A&amp;#xff1a;系数矩阵&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% b&amp;#xff1a;右端常向量&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% X0&amp;#xff1a;初始迭代值&amp;#xff0c;默认为全零向量&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% mytol&amp;#xff1a;允许误差&amp;#xff0c;默认为 1e-6&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 输出参数&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% Xsolve&amp;#xff1a;迭代收敛时满足精度的数值解&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 检查输入参数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; nargin &amp;lt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n    mytol &amp;#61; &lt;span class=\"hljs-number\"&gt;1e-6&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; nargin &amp;lt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    X0 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(b));\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; nargin &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入参数不足&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 构造 Jacobi 迭代矩阵&lt;/span&gt;\nD &amp;#61; &lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(A));\nU &amp;#61; &lt;span class=\"hljs-built_in\"&gt;triu&lt;/span&gt;(A, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\nL &amp;#61; &lt;span class=\"hljs-built_in\"&gt;tril&lt;/span&gt;(A, &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;);\nM &amp;#61; D;\nN &amp;#61; L &amp;#43; U;\n\n&lt;span class=\"hljs-comment\"&gt;% 判断系数矩阵是否可逆&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(det(A)) &amp;lt; mytol\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;系数矩阵不可逆&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 判断系数矩阵主对角元素是否为零&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; any(&lt;span class=\"hljs-built_in\"&gt;diag&lt;/span&gt;(A) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;系数矩阵主对角元素有零元素&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 判断 Jacobi 迭代法是否收敛&lt;/span&gt;\nrho &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(eig(M \\ N)));\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; rho &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Jacobi 迭代法不收敛&amp;#39;&lt;/span&gt;);\n    Xsolve &amp;#61; [];\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;disp&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Jacobi 迭代法收敛&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% Jacobi 迭代格式&lt;/span&gt;\nXn &amp;#61; X0;\nerr &amp;#61; &lt;span class=\"hljs-built_in\"&gt;inf&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; err &amp;gt; mytol\n    Xn1 &amp;#61; M \\ (b - N * Xn);\n    err &amp;#61; norm(Xn1 - Xn, &lt;span class=\"hljs-built_in\"&gt;inf&lt;/span&gt;);\n    Xn &amp;#61; Xn1;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\nXsolve &amp;#61; Xn;\n\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在命令窗口中可以按以下方式调用该函数&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-matlab\"&gt;% 例子&amp;#xff1a;解方程组 Ax&amp;#61;b&amp;#xff0c;其中 A&amp;#61;[4 &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt; 0; &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt; 4 &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; 0 &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt; 4]&amp;#xff0c;b&amp;#61;[15; 10; 10]\nA &amp;#61; [4, &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;, 0; &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;, 4, &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;; 0, &lt;span class=\"hljs-string\"&gt;-1&lt;/span&gt;, 4];\nb &amp;#61; [15; 10; 10];\nXsolve &amp;#61; myJacobi(A, b);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;其中&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;Xsolve&lt;/code&gt; 是 Jacobi 迭代法求解得到的数值解。&lt;/p&gt;\n&lt;p&gt;希望这个代码能够帮助你解决问题。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;如果以上回答对您有所帮助&amp;#xff0c;点击一下采纳该答案&amp;#xff5e;谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用jacobi迭代法解线性方程组函数", ["1、函数输入形参要求如下，也可以修改得更好、更适合你自己.", "function Xsolve=myJacobi(A.b.X0 mytol)", "%A为系数矩阵", "點为右端常向量", "X0为初始层，默认取0.", "%mytol表示允许误差.要求默认值为le-b.", "%Xsolve表示收敛情况下满足精度的数值解", "Xnargin表示输入参数个数，下面这一段是简单的判断，你可以编写的更好if nargin<4 %如果参数<4.", "mytol=le-b:", "if nargin<3 %如果参数3", "X0=zeros(size(b))；", "if nargins2", "error(‘输入参数不足‘)；", "end", "end", "end", "2.第一步描述出矩阵DL.U", "3、第二步要判断系数矩阵是否可逆，用“abs(det(A))<mytol”或者别的方式判断，不满足要提示：", "4. 第三步要判断系数矩阵主对角元素是否为零，", "5、第四步用迭代法基本定理(计算谱半径)判断迭代法是否收敛，要在命令窗口输出是否收敛的结论：", "6、第五步在收敛的基础上进行迭代格式的程序编写：", "7、迭代格"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;What you are after is applying a Convolution filter to an image, for that you can use PHP's built in  &lt;code&gt;imageconvolution()&lt;/code&gt; &lt;a href=\"http://php.net/manual/en/function.imageconvolution.php\" rel=\"nofollow\"&gt;php.net&lt;/a&gt; function.&lt;/p&gt;\n\n&lt;p&gt;For usage, see &lt;a href=\"http://php.net/manual/en/function.imageconvolution.php#104006\" rel=\"nofollow\"&gt;Magilvia&lt;/a&gt;'s example on php.net modified for your purpose:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php \n    $sharpenMatrix = array \n    ( \n        array(-0.5, -0.5, -0.5), \n        array(-0.5, 5, -0.5), \n        array(-0.5, -0.5, -0.5) \n    ); \n\n    // calculate the sharpen divisor \n    $divisor = array_sum(array_map('array_sum', $sharpenMatrix));            \n\n    $offset = 0; \n\n    // apply the matrix \n    imageconvolution($img, $sharpenMatrix, $divisor, $offset); \n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;$img&lt;/code&gt; is a PHP image the convolution matrix (sharpening filter) is applied on&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["使用PHP中的线性过滤器锐化图像", ["\n\n", "I would like to read an image and sharpen it using a linear filter, which is this matrix:", "\n\n", "H =  [-0.5 -0.5 -0.5; -0.5 5 -0.5; -0.5 -0.5 -0.5]\n", "\n\n", "I know about ImageMagick, is there any possibility to do just that?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;int Delete(LinkList L,int i,ElemType *e)\n/*在带头结点的单链表L中删除第i个元素&amp;#xff0c;并将删除的元素保存到变量*e中*/\n{\nNode * pre,* r;\nint k;\npre&amp;#61;L;\nk&amp;#61;0;\nwhile(pre-&amp;gt;next!&amp;#61;NULL&amp;amp;&amp;amp;k&amp;lt;i-1)\n{\n  pre&amp;#61;pre-&amp;gt;next;\n  k&amp;#61;k&amp;#43;1;\n}\nif(pre-&amp;gt;next&amp;#61;&amp;#61;NULL)\n{\n  printf(&amp;#34;删除结点的位置i不合理&amp;#xff01;&amp;#34;);\n  return ERROR;\n}\nr&amp;#61;pre-&amp;gt;next;\npre-&amp;gt;next&amp;#61;r-&amp;gt;next;\n*e&amp;#61;r-&amp;gt;data;\nfree(r);\nreturn 1;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性表链式结构能按序号删除吗", ["如果能的话", "\n\n", "用函数List Delete(List L,int P);应该怎么编写程序", "\n\n", "想了好久了但是还是没改出来"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;对于常系数非齐次线性微分方程&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;y&amp;#39;&amp;#39; &amp;#43; ay&amp;#39; &amp;#43; by &amp;#61; f(x)&lt;/p&gt;\n&lt;p&gt;其中 a 和 b 都是常数&amp;#xff0c;f(x) 是已知函数。&lt;/p&gt;\n&lt;p&gt;有两种情况&amp;#xff0c;一种是 f(x) 是指数函数&amp;#xff0c;另一种是 f(x) 是多项式函数。&lt;/p&gt;\n&lt;p&gt;对于第一种情况&amp;#xff0c;解的形式为 y &amp;#61; R(x) e^(mx)&amp;#xff0c;其中 m 为常数&amp;#xff0c;R(x) 是一个与 x 相关的函数。&lt;/p&gt;\n&lt;p&gt;将 y &amp;#61; R(x) e^(mx) 带入到原方程中&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt; R&amp;#39;&amp;#39;(x) e^(mx) &amp;#43; (2mR&amp;#39;(x) &amp;#43; aR(x)) e^(mx) &amp;#43; bR(x) e^(mx) &amp;#61; f(x)&lt;/p&gt;\n&lt;p&gt;将 e^(mx) 分离出来&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt; e^(mx) (R&amp;#39;&amp;#39;(x) &amp;#43; 2mR&amp;#39;(x) &amp;#43; (a&amp;#43;bm)R(x)) &amp;#61; f(x)&lt;/p&gt;\n&lt;p&gt;因为 e^(mx) 不等于零&amp;#xff0c;所以可以将方程简化为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;R&amp;#39;&amp;#39;(x) &amp;#43; 2mR&amp;#39;(x) &amp;#43; (a&amp;#43;bm)R(x) &amp;#61; f(x) e^(-mx)&lt;/p&gt;\n&lt;p&gt;令 Rm(x) 为特解&amp;#xff0c;则有&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;Rm&amp;#39;&amp;#39;(x) &amp;#43; 2mRm&amp;#39;(x) &amp;#43; (a&amp;#43;bm)Rm(x) &amp;#61; f(x) e^(-mx)&lt;/p&gt;\n&lt;p&gt;对于第二种情况&amp;#xff0c;即 f(x) 是多项式函数&amp;#xff0c;解的形式为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;y &amp;#61; (Ax^k &amp;#43; Bx^(k-1) &amp;#43; ... &amp;#43; C) e^(mx)&lt;/p&gt;\n&lt;p&gt;其中 k 是 f(x) 的最高次幂&amp;#xff0c;A, B, ..., C 都是常数&amp;#xff0c;R(x) 是一个与 x 相关的函数。&lt;/p&gt;\n&lt;p&gt;将 y 带入到原方程中&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;[A(m^2&amp;#43;kam&amp;#43;b) x^k &amp;#43; ... &amp;#43; C(m^2&amp;#43;am&amp;#43;b)] e^(mx) &amp;#43; f(x) &amp;#61; 0&lt;/p&gt;\n&lt;p&gt;因为 e^(mx) 不等于零&amp;#xff0c;所以可以将方程简化为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;[A(m^2&amp;#43;kam&amp;#43;b) x^k &amp;#43; ... &amp;#43; C(m^2&amp;#43;am&amp;#43;b)] &amp;#43; f(x) e^(-mx) &amp;#61; 0&lt;/p&gt;\n&lt;p&gt;注意到上式中的常数项是与 x 无关的&amp;#xff0c;所以不能写成 R(x) &amp;#61; xRm(x) &amp;#43; c 的形式。&lt;/p&gt;\n&lt;p&gt;关于为什么书上没有给出这个常数项 c&amp;#xff0c;可能是因为这个常数项并不能代表所有可能的常数项&amp;#xff0c;因为常数项可以是任何常数。同时&amp;#xff0c;书上可能认为这个常数项并不重要&amp;#xff0c;因为它不会影响到 R(x) 的定义和求解。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["常系数非齐次线性微分方程的问题", ["为什么第二种情况不是R（x）=xRm（x）+c？为什么书上没有这个常数项c。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;引用new bing部分回答作答&amp;#xff1a;&lt;br /&gt;非线性薛定谔方程&amp;#xff08;NLSE&amp;#xff09;是一个描述波动现象的方程&amp;#xff0c;在物理学和工程学等领域有广泛应用。NLSE 的一般形式为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$i\\hbar\\frac{\\partial \\psi}{\\partial t}&amp;#61;-\\frac{\\hbar^2}{2m}\\frac{\\partial^2\\psi}{\\partial x^2}&amp;#43;V(x)\\psi&amp;#43;g(x)|\\psi|^2\\psi$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$\\psi$ 是波函数&amp;#xff0c;$m$ 是粒子的质量&amp;#xff0c;$V(x)$ 是势能&amp;#xff0c;$g(x)$ 是非线性系数&amp;#xff0c;$|\\psi|^2$ 表示波函数的模方。&lt;/p&gt;\n&lt;p&gt;为了求解 NLSE&amp;#xff0c;我们可以采用紧致差分方法&amp;#xff08;Compact Difference Method&amp;#xff09;&amp;#xff0c;将偏微分方程转化为差分方程进行求解。这里介绍一种四阶紧致差分格式的求解方法。&lt;/p&gt;\n&lt;p&gt;假设我们在空间方向上使用均匀网格&amp;#xff0c;网格大小为 $h$&amp;#xff0c;时间步长为 $\\Delta t$&amp;#xff0c;则可以将空间坐标 $x$ 和时间 $t$ 分别离散化为 $x_j&amp;#61;jh$ 和 $t_n&amp;#61;n\\Delta t$。同时&amp;#xff0c;我们采用中心差分法近似计算偏微分方程中的导数项。&lt;/p&gt;\n&lt;p&gt;将 NLSE 中的各项代入差分方程中&amp;#xff0c;可以得到如下形式的紧致差分方程&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$i\\hbar\\frac{\\psi_j^{n&amp;#43;1}-\\psi_j^n}{\\Delta t}&amp;#61;-\\frac{\\hbar^2}{2m}\\frac{\\psi_{j&amp;#43;1}^n-2\\psi_j^n&amp;#43;\\psi_{j-1}^n}{h^2}&amp;#43;V_j\\psi_j^n&amp;#43;g_j|\\psi_j^n|^2\\psi_j^n$&lt;/p&gt;\n&lt;p&gt;其中&amp;#xff0c;$\\psi_j^n$ 表示波函数在位置 $x_j$ 和时间 $t_n$ 的值。&lt;/p&gt;\n&lt;p&gt;将上述方程进行整理&amp;#xff0c;得到&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;$\\psi_j^{n&amp;#43;1}&amp;#61;\\frac{\\Delta t i\\hbar}{2m}\\frac{\\psi_{j&amp;#43;1}^n-2\\psi_j^n&amp;#43;\\psi_{j-1}^n}{h^2}&amp;#43;(\\frac{\\Delta t i\\hbar}{h^2}V_j&amp;#43;1)\\psi_j^n&amp;#43;\\frac{\\Delta t i\\hbar g_j}{h^2}|\\psi_j^n|^2\\psi_j^n$&lt;/p&gt;\n&lt;p&gt;这个方程是一个离散的迭代公式&amp;#xff0c;可以通过多次迭代计算得到 NLSE 的数值解。下面是用 MATLAB 实现这个算法的示例代码。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 定义参数&lt;/span&gt;\nh &amp;#61; &lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 空间步长&lt;/span&gt;\ndt &amp;#61; &lt;span class=\"hljs-number\"&gt;0.001&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 时间步长&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-number\"&gt;-10&lt;/span&gt;:h:&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 空间网格&lt;/span&gt;\nt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:dt:&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 时间网格&lt;/span&gt;\nm &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 粒子质量&lt;/span&gt;\nV &amp;#61; &lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;*x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 势能&lt;/span&gt;\ng &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 非线性系数&lt;/span&gt;\nhbar &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% 普朗克常数&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 初始化波函数&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(-x.^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\npsi_next &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(x));\n\n&lt;span class=\"hljs-comment\"&gt;% 迭代计算&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(t)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x)&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;% 注意边界点的处理&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;% 计算波函数的一阶和二阶导数&lt;/span&gt;\n        dpsi &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;))/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*h);\n        d2psi &amp;#61; (&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;))/h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;% 计算新的波函数值&lt;/span&gt;\n        psi_next(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#43; dt*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*m)*d2psi &amp;#43; ...\n            dt*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*V(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;) &amp;#43; ...\n            dt*&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar*g/(h^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;))^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 更新波函数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt; &amp;#61; psi_next;\n    &lt;span class=\"hljs-comment\"&gt;% 将边界点的值设置为零&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 绘制波函数的时空演化图像&lt;/span&gt;\n[X, T] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(x, t);\nPsiReal &amp;#61; &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;).*&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*m)*((x-&lt;span class=\"hljs-built_in\"&gt;mean&lt;/span&gt;(x)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/hbar*n); &lt;span class=\"hljs-comment\"&gt;% 实部&lt;/span&gt;\nPsiReal &amp;#61; &lt;span class=\"hljs-built_in\"&gt;repmat&lt;/span&gt;(PsiReal, &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(X,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;% 添加这行代码&lt;/span&gt;\nPsiImag &amp;#61; &lt;span class=\"hljs-built_in\"&gt;imag&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;).*&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;*hbar/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*m)*((x-&lt;span class=\"hljs-built_in\"&gt;mean&lt;/span&gt;(x)).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/hbar*n); &lt;span class=\"hljs-comment\"&gt;% 虚部&lt;/span&gt;\nPsiImag &amp;#61; &lt;span class=\"hljs-built_in\"&gt;repmat&lt;/span&gt;(PsiImag, &lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(X,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);  &lt;span class=\"hljs-comment\"&gt;% 添加这行代码&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;%Z &amp;#61; abs(psi).^2; % 概率密度&lt;/span&gt;\nZ &amp;#61; &lt;span class=\"hljs-built_in\"&gt;repmat&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;).^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(t), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\nmesh(X, T, &lt;span class=\"hljs-built_in\"&gt;ones&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(X))*&lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;psi&lt;/span&gt;(:))).*Z, &lt;span class=\"hljs-string\"&gt;&amp;#39;facecolor&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;);\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;);\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;);\nzlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Probability density&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\nsurf(&lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(X), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(T), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(PsiReal), &lt;span class=\"hljs-string\"&gt;&amp;#39;facecolor&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;);\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;);\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;);\nzlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Real part&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;;\nsurf(&lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(X), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(T), &lt;span class=\"hljs-built_in\"&gt;real&lt;/span&gt;(Z), &lt;span class=\"hljs-string\"&gt;&amp;#39;facecolor&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;flat&amp;#39;&lt;/span&gt;);\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;);\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Time&amp;#39;&lt;/span&gt;);\nzlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Imaginary part&amp;#39;&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这段代码中&amp;#xff0c;我们使用了两重循环来计算每个时间步长中波函数在所有空间点上的值。其中&amp;#xff0c;内层循环遍历空间网格上的所有内部点&amp;#xff0c;使用中心差分法计算波函数在这些点的一阶和二阶导数&amp;#xff0c;并根据紧致差分格式的公式计算出新的波函数值。外层循环则遍历所有的时间步长&amp;#xff0c;通过多次迭代得到波函数的时空演化图像。&lt;/p&gt;\n&lt;p&gt;注意到在代码中&amp;#xff0c;我们使用 mesh 函数将波函数的时空演化图像绘制出来&amp;#xff0c;并且将横轴和纵轴分别设为空间坐标和时间。图像的高度表示波函数的概率密度&amp;#xff0c;可以通过调整视角和颜色映射来观察波函数的演化特征。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["非线性薛定谔方程的四阶紧致差分格式", ["非线性薛定谔方程的四阶紧致差分格式求解过程", "要求论述有条理，理论叙述详尽", "题主原理已经写出来了，但是通过原理写不出代码，所以想要有一个对比，希望大家帮帮忙"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Golint is newly released this week: &lt;a href=\"https://github.com/golang/lint\" rel=\"noreferrer\"&gt;https://github.com/golang/lint&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Go语言的静态代码分析（线性）工具", ["\n\n", "Is there a static analysis tool for Go language –like ", "lint", ", ", "pylint", " etc? As far as I googled, I haven't found anything related.", "\n\n", "I may do this as an undergrad senior project in my department. I must be sure that it is not done before. Any help is appreciated.", "\n    "]], "Tag": "算法设计"}
{"Answer": "偏离直线的点，就是 abs(x/y-直线的斜率) &gt; 某个数的点", "Konwledge_Point": "线性规划和规约", "Question": ["关于剔除一组数据中明显偏离直线的数据的问题", ["初学者，在做图片处理的东西，现在得到了如图所示的图像，想要请教一下大佬们，把那些距离直线很远的点去掉该怎么用C#实现，或者请大佬说一下好的思路或者方法也可以。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;对于相似矩阵&amp;#xff0c;如果存在一个可逆矩阵P&amp;#xff0c;使得 A&amp;#61;PBP^(-1) &amp;#xff0c;那么矩阵A和B就是相似的。&lt;/p&gt;\n&lt;p&gt;对于给定的矩阵B&amp;#xff0c;我们可以假设可逆矩阵P为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;P &amp;#61; &amp;#xff08;2&amp;#xff0c;-1&amp;#xff0c;1&amp;#xff09;&lt;br /&gt;(1&amp;#xff0c;1&amp;#xff0c;2&amp;#xff09;&lt;br /&gt;(-2&amp;#xff0c;1&amp;#xff0c;1&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;那么A&amp;#61;PBP^(-1) 。&lt;/p&gt;\n&lt;p&gt;因此&amp;#xff0c;I2A &amp;#43; EI &amp;#61; 2I &amp;#43; E &amp;#61; 3I&lt;/p&gt;\n&lt;p&gt;结论是I2A &amp;#43; EI &amp;#61; 3I&amp;#xff0c;其中I是单位矩阵。&lt;br /&gt;如果答案有帮助 请帮我点个采纳 谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#线性代数#的问题，如何解决？", ["发不了图片，我来叙述一下", "A和B是相似矩阵给出了", "B=4，1，0", "    -1，-1，0", "    9，-3，4", "然后求I2A+EI"]], "Tag": "算法设计"}
{"Answer": "&gt; stray'\\241'in program\r\n\r\n一般是 **中文空格中文引号等中文标点符号**  所致\r\n目测出错语句中hwnd和(HMENU)5之间间隔比起别的语句大一些？\r\n\r\n你可以尝试删除此句，重新输入。\r\n或者拷贝类似语句，修改一下。", "Konwledge_Point": "线性规划和规约", "Question": ["求大神， C语言的问题", ["LRESULT CALLBACK WndProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam) {", "\n    HDC hdc;", "\n    PAINTSTRUCT ps;", "\n\n", "static HFONT hFont;     // 逻辑字体 \nstatic HWND hLabExample;    // 静态文本框--用户名 \nstatic HWND hLabPassword;   // 静态文本框--密码 \nstatic HWND hEditUsername;  // 单行文本输入框\nstatic HWND hEditPassword;  // 密码输入框 \nstatic HWND hBtnLogin;      // 登录按钮\n\nswitch (message) {\ncase WM_CREATE:\n    hFont = CreateFont(\n        -15, -7.5, 0, 0, 400,   // 高， 宽， -----  \n        FALSE, FALSE, FALSE,\n        DEFAULT_CHARSET,\n        OUT_CHARACTER_PRECIS, CLIP_CHARACTER_PRECIS,\n        DEFAULT_QUALITY,\n        FF_DONTCARE,\n        TEXT(\"微软雅黑\")\n    );\n    hLabExample = CreateWindow(\n        TEXT(\"static\"),\n        TEXT(\"用户名：\"),\n        WS_CHILD | WS_VISIBLE | SS_CENTERIMAGE | SS_RIGHT,  // 子窗口 创建时可见 垂直居中 水平居右  \n        0, 20, 70, 26,  // x坐标 y坐标 宽度 高度 \n        hwnd, (HMENU)1, hInst, NULL //  父窗口句柄 空间id 当前程序实例句柄  --  \n    );\n\n    hLabPassword = CreateWindow(\n        TEXT(\"static\"),\n        TEXT(\"密码：\"),\n        WS_CHILD | WS_VISIBLE | SS_CENTERIMAGE | SS_RIGHT,\n        0, 56, 70, 26,\n        hwnd, (HMENU)2, hInst, NULL\n    ); \n\n    hEditUsername= CreateWindow(\n        TEXT(\"edit\"),\n        TEXT(\"\"),\n        WS_CHILD | WS_VISIBLE | WS_BORDER| ES_AUTOHSCROLL,\n        80, 20, 200, 26,\n        hwnd, (HMENU)3, hInst, NULL\n    );\n\n    hEditPassword = CreateWindow(\n        TEXT(\"edit\"),\n        TEXT(\"\"),\n        WS_CHILD | WS_VISIBLE | WS_BORDER | ES_AUTOHSCROLL,\n        80, 56, 200, 26,\n        hwnd, (HMENU)4, hInst, NULL\n    ); \n\n    hBtnLogin = CreateWindow(\n        TEXT(\"button\"),\n        TEXT(\"登录\"),\n        WS_CHILD | WS_VISIBLE | WS_BORDER |　BS_FLAT,\n        80, 92, 200, 30,\n        hwnd,  (HMENU)5, hInst, NULL\n    );\n\n    SendMessage(hLabExample,   WM_SETFONT, (WPARAM)hFont, NULL);\n    SendMessage(hLabPassword,  WM_SETFONT, (WPARAM)hFont, NULL);\n    SendMessage(hEditUsername,  WM_SETFONT, (WPARAM)hFont, NULL);\n    SendMessage(hEditPassword, WM_SETFONT, (WPARAM)hFont, NULL);\n    SendMessage(hBtnLogin,     WM_SETFONT, (WPARAM)hFont, NULL);\n\n    break;\ncase WM_COMMAND:\n    break;\ncase WM_PAINT:\n    hdc = BeginPaint(hwnd, &ps);\n\n    EndPaint(hwnd, &ps);\n    break;\ncase WM_DESTROY:\n    DeleteObject(hFont);\n    PostQuitMessage(0);\n    break;\ndefault:\n    return DefWindowProc(hwnd, message, wParam, lParam);\n}\nreturn 0;\n", "\n\n", "}", "\n出错 stray“\\241” in program 就给hBtnLogin赋值那几行"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;将nan替换为0&amp;#xff0c;参考一下这里&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://www.cnblogs.com/houfei/p/13546163.html\" id=\"textarea_1636385491849_1636385554526_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;statsmodels.tools.sm_exceptions.MissingDataError: exog contains inf or nans - 三水一人山 - 博客园&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;出现&amp;#xff1a;statsmodels.tools.sm_exceptions.MissingDataError: exog contains inf or nans 只需要把数据中的inf或者nan变成0即可&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://common.cnblogs.com/favicon.svg\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/houfei/p/13546163.html&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python如何做回归滞后项?", ["为什么结果出现“exog contains inf or nans”？", "，怎样PYTHON依次做回归？", "原代码：", "\n", "\n", "为什么结果出现“exog contains inf or nans”？", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/jinyindao243052/article/details/107759979\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;Scipy优化scipy.optimize.minimize&lt;/font&gt;&lt;/a&gt; 中也许有你想要的答案&amp;#xff0c;请看下吧&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["scipy中的minimize报错", ["\n", "\n", "这是我在写非线性规划时报错，f0不是以为，但是我翻了很多资料都找不到f0到底是什么东西，求大佬解答"]], "Tag": "算法设计"}
{"Answer": "我后来发现，是我大意了，在函数里面，np.exp()里面1/2与后面的部分相乘，我把*号省略了。python里面的数字与数字之间的*是不能省略的。", "Konwledge_Point": "线性规划和规约", "Question": ["scipy解非线性方程组报错TypeError: 'int' object is not callable", ["scipy解非线性方程组报错TypeError: 'int' object is not callable。网上说是参数和函数重名的缘故，但貌似我的并没有重名，代码如下：", "\n\n", "from scipy.integrate import odeint\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import root,fsolve\n\ndef fun(x):\n    for i in range(0,len(x)):\n        x[i] = float(x[i])\n    fy = np.array([(x[0]*2010**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2010**x[3])+(-75.2303)**2/(x[4]*2010**x[5])-6259)),(x[0]*2011**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2011**x[3])+(-75.2303)**2/(x[4]*2011**x[5])-5958)),(x[0]*2012**x[1])*np.exp(-1/2(41.3866**2/(x[2]*2012**x[3])+(-81.4421)**2/(x[4]*2012**x[5])-2624)),(x[0]*2014**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2014**x[3])+(-75.2303)**2/(x[4]*2014**x[5])-4809)),(x[0]*2015**x[1])*np.exp(-1/2(39.701**2/(x[2]*2015**x[3])+(-84.2187)**2/(x[4]*2015**x[5])-3877)),(x[0]*2017**x[1])*np.exp(-1/2(41.3866**2/(x[2]*2017**x[3])+(-81.4421)**2/(x[4]*2017**x[5])-7381))])\n    return fy\nres_fsolve = fsolve(fun,[1,1,1,1,1,1])\nprint(res_fsolve)\n", "\n\n", "报错内容如下：", "\n\n", "\n", "TypeError                                 Traceback (most recent call last)", " in ", "\n      9     fy = np.array([(x[0]*2010**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2010**x[3])+(-75.2303)**2/(x[4]*2010**x[5])-6259)),(x[0]*2011**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2011**x[3])+(-75.2303)**2/(x[4]*2011**x[5])-5958)),(x[0]*2012**x[1])*np.exp(-1/2(41.3866**2/(x[2]*2012**x[3])+(-81.4421)**2/(x[4]*2012**x[5])-2624)),(x[0]*2014**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2014**x[3])+(-75.2303)**2/(x[4]*2014**x[5])-4809)),(x[0]*2015**x[1])*np.exp(-1/2(39.701**2/(x[2]*2015**x[3])+(-84.2187)**2/(x[4]*2015**x[5])-3877)),(x[0]*2017**x[1])*np.exp(-1/2(41.3866**2/(x[2]*2017**x[3])+(-81.4421)**2/(x[4]*2017**x[5])-7381))])", "\n     10     return fy", "\n---> 11 res_fsolve = fsolve(fun,[1,1,1,1,1,1])", "\n     12 print(res_fsolve)", "\n\n", "c:\\users\\anton\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\scipy\\optimize\\minpack.py in fsolve(func, x0, args, fprime, full_output, col_deriv, xtol, maxfev, band, epsfcn, factor, diag)", "\n    145                'diag': diag}", "\n    146 ", "\n--> 147     res = _root_hybr(func, x0, args, jac=fprime, **options)", "\n    148     if full_output:", "\n    149         x = res['x']", "\n\n", "c:\\users\\anton\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\scipy\\optimize\\minpack.py in _root_hybr(func, x0, args, jac, col_deriv, xtol, maxfev, band, eps, factor, diag, **unknown_options)", "\n    211     if not isinstance(args, tuple):", "\n    212         args = (args,)", "\n--> 213     shape, dtype = _check_func('fsolve', 'func', func, x0, args, n, (n,))", "\n    214     if epsfcn is None:", "\n    215         epsfcn = finfo(dtype).eps", "\n\n", "c:\\users\\anton\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\scipy\\optimize\\minpack.py in _check_func(checker, argname, thefunc, x0, args, numinputs, output_shape)", "\n     24 def _check_func(checker, argname, thefunc, x0, args, numinputs,", "\n     25                 output_shape=None):", "\n---> 26     res = atleast_1d(thefunc(*((x0[:numinputs],) + args)))", "\n     27     if (output_shape is not None) and (shape(res) != output_shape):", "\n     28         if (output_shape[0] != 1):", "\n\n", " in fun(x)", "\n      7     for i in range(0,len(x)):", "\n      8         x[i] = float(x[i])", "\n----> 9     fy = np.array([(x[0]*2010**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2010**x[3])+(-75.2303)**2/(x[4]*2010**x[5])-6259)),(x[0]*2011**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2011**x[3])+(-75.2303)**2/(x[4]*2011**x[5])-5958)),(x[0]*2012**x[1])*np.exp(-1/2(41.3866**2/(x[2]*2012**x[3])+(-81.4421)**2/(x[4]*2012**x[5])-2624)),(x[0]*2014**x[1])*np.exp(-1/2(39.9612**2/(x[2]*2014**x[3])+(-75.2303)**2/(x[4]*2014**x[5])-4809)),(x[0]*2015**x[1])*np.exp(-1/2(39.701**2/(x[2]*2015**x[3])+(-84.2187)**2/(x[4]*2015**x[5])-3877)),(x[0]*2017**x[1])*np.exp(-1/2(41.3866**2/(x[2]*2017**x[3])+(-81.4421)**2/(x[4]*2017**x[5])-7381))])", "\n     10     return fy", "\n     11 res_fsolve = fsolve(fun,[1,1,1,1,1,1])", "\n\n", "TypeError: 'int' object is not callable", "\n"]], "Tag": "算法设计"}
{"Answer": "你这属于滑动空间嵌套滑动空间问题  需要重写listview  要不然就会出现显示不全的问题 还有滑动冲突问题 \r\n自定义一个listview 继承 listview 重写onmeasure 方法 重新测量高度 \r\n\r\n@Override\r\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\r\n        int measureSpec = MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE &gt;&gt; 2, MeasureSpec.AT_MOST);\r\n\r\n        super.onMeasure(widthMeasureSpec, measureSpec);\r\n\r\n    }\r\n\t\t\r\n很简单 重写这一个方法就可以 然后再xml 文件中引用就好了 你试一下", "Konwledge_Point": "线性规划和规约", "Question": ["Android 线性布局ScrollView嵌套以及TextView设置background的小问题", ["ScrollView 部分布局", "\n <ScrollView", "\n        android:layout_width=\"match_parent\"", "\n        android:layout_height=\"match_parent\"", "\n        android:layout_below=\"@id/part_line\"", "\n        android:layout_above=\"@id/pay_go\"", "\n\n", "    >\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:paddingTop=\"5dp\"\n        android:orientation=\"vertical\"\n        android:id=\"@+id/pay_main_info\">\n        <include layout=\"@layout/add_address\"\n            android:id=\"@+id/address_desc\"/>\n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"1px\"\n            android:layout_marginBottom=\"5dip\"\n            android:layout_marginTop=\"5dip\"\n            />\n        <include layout=\"@layout/pay_other_info\"\n            android:id=\"@+id/pay_other_info\"/>\n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"5px\"\n            android:layout_marginBottom=\"5dip\"\n            android:layout_marginTop=\"5dip\"\n            />\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"桃李园\"\n            android:textSize=\"25dp\"\n            android:layout_marginLeft=\"20dp\"\n            android:textColor=\"@color/black\"\n            android:id=\"@+id/pay_order_form_canteen_name\"/>\n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"5px\"\n            android:layout_marginBottom=\"5dip\"\n            android:layout_marginTop=\"5dip\"\n\n            />\n        <ListView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginLeft=\"20dp\"\n            android:layout_marginRight=\"20dp\"\n            android:id=\"@+id/pay_order_form_foodlist\">\n\n            </ListView>\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"添加备注\"\n            android:drawableRight=\"@mipmap/more\"\n            android:textSize=\"20dp\"\n            android:layout_marginLeft=\"20dp\"\n            android:textColor=\"@color/black\"\n            android:layout_marginRight=\"20dp\"\n            android:clickable=\"true\"\n            android:id=\"@+id/pay_order_form_add_remakes\"/>\n\n\n\n    </LinearLayout>\n</ScrollView>\n\n\n    布局效果图：\n    ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524541534_568444.png)\n\n    实际效果图：\n    ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524541656_487597.png)\n\n    期望效果：\n      实现类似于饿了么的那种界面，把listview的界面填充出去，如图下：\n\n![图片说明](https://img-ask.csdn.net/upload/201804/24/1524542251_73813.png)\n\n        TextView的设置background的bug:\n\n        TextView代码：\n        <TextView\n        android:id=\"@+id/add_address_btn\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n       android:background=\"@drawable/text_bg\"\n        android:gravity=\"center\"\n        android:paddingBottom=\"20dip\"\n        android:paddingLeft=\"15dip\"\n        android:paddingRight=\"15dip\"\n        android:paddingTop=\"20dip\"\n        android:text=\"+添加收货地址\"\n        android:textColor=\"@color/theme_blue_two\"\n        android:textSize=\"30sp\"\n        android:layout_centerHorizontal=\"true\"\n       />\n                效果：\n                ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524542466_880111.png)\n                background的效果并没有运用上去，附其他可用的TextView的效果，如图下：\n                ![图片说明](https://img-ask.csdn.net/upload/201804/24/1524542599_493676.png)\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不是问过了么〉。。。。。。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;  &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;typedef&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;_sqlist&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; data[&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; length;\n}sqlist;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;create&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(sqlist *s,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入%d个递增数:\\n&amp;#34;&lt;/span&gt;,m);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;m;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;s-&amp;gt;data[i]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入%d个递增数:\\n&amp;#34;&lt;/span&gt;,n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;s-&amp;gt;data[i&amp;#43;m]);\n    s-&amp;gt;length &amp;#61; m&amp;#43;n;\n}\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sorts&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(sqlist *s,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,k,t;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;m;i&amp;lt;s-&amp;gt;length;i&amp;#43;&amp;#43;)\n    {\n        t &amp;#61; s-&amp;gt;data[i];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(s-&amp;gt;data[j] &amp;gt;&amp;#61; s-&amp;gt;data[i])\n            {\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(k&amp;#61;i;k&amp;gt;j;k--)\n                    s-&amp;gt;data[k] &amp;#61; s-&amp;gt;data[k&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;];\n                s-&amp;gt;data[j] &amp;#61; t;\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n        }\n    }\n}\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(sqlist *s)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;s-&amp;gt;length;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,s-&amp;gt;data[i]);\n}\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    sqlist s;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m,n;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入两个递增序列的数量:\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;m,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;create&lt;/span&gt;(&amp;amp;s,m,n);\n    &lt;span class=\"hljs-built_in\"&gt;sorts&lt;/span&gt;(&amp;amp;s,m,n);\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&amp;amp;s);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#c语言#的问题：有一个存放整数的长度为m+n的线性表L，其前m个元素单调递增，后n个元素也单调递增", ["有一个存放整数的长度为m+n的线性表L，其前m个元素单调递增，后n个元素也单调递增。设计一个算法，使得整个线性表的元素单调递增。要求：使用链式存储实现。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;梯度优化的时候训练参数值没发计算&amp;#xff0c;加个数据归一化处理。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性回归，回答正确加酬金（我开设了几个问题）", ["问题遇到的现象和发生背景", "\n", "输出空值，线性回归计算", "\n", "问题相关代码，请勿粘贴截图", "\n", "import", " cv2\n", "import", " numpy ", "as", " np\n", "import", " matplotlib.pyplot ", "as", " plt\n\n\nimg = cv2.imread(", "r'C:\\Users\\Xpc\\Desktop\\weixin2222 change40.jpg'", ")\nhsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)\nlow_hsv = np.array([", "0", ", ", "0", ", ", "221", "])\nhigh_hsv = np.array([", "180", ", ", "30", ", ", "255", "])\nmask = cv2.inRange(hsv, lowerb=low_hsv, upperb=high_hsv)\n\n\nlist_y = []\nlist_x = []\n\n", "for", " i ", "in", " ", "range", "(", "len", "(mask)):\n    xmax = []\n    ", "for", " j ", "in", " ", "range", "(", "len", "(mask[i])):\n        ", "if", " mask[i][j] == ", "0", ":\n            list_x.append(j)\n            list_y.append(", "len", "(mask)-i)\n\nplt.plot(list_x, list_y, ", "'o'", ", color=", "'r'", ")\nplt.show()\n\nx_array=np.array(list_x)\nx_array=x_array/", "400", "\ny_array=np.array(list_y)\ny_array=y_array*", "0.2", "/", "400", "\n\nz40=np.stack((x_array,y_array),axis=", "0", ").T\nz0=[]\n", "for", " i ", "in", " ", "range", "(", "0", ",z40.shape[", "0", "],", "30", "):\n    z1=z40[i,:]\n    z0.append(z1)\nz0=np.array(z0)\n\nx_array=z0[:,", "0", "]\ny_array=z0[:,", "1", "]\n", "print", "(x_array)\n", "print", "(y_array)\n\nlist_x1=[]\n", "for", " i ", "in", " ", "range", "(", "0", ",", "len", "(x_array)):\n    list_x1.append(", "40", ")\nx1_array=np.array(list_x1)\n\nlist_x0=[]\n", "for", " i ", "in", " ", "range", "(", "0", ",", "len", "(x_array)):\n    list_x0.append(", "1", ")\nx0=np.array(list_x0)\nx1=x_array\nx2=x1_array\nx3=x1*x2\nx4=x1*x1\nx5=x2*x2\nlabel40=y_array\n\n\n\nz40=np.stack((x0,x1,x2,x3,x4,x5),axis=", "0", ").T\n\nrescombine = z40\nlabels= y_array\ndata=rescombine\n\nnp.seterr(divide=", "'ignore'", ",invalid=", "'ignore'", ")\n", "class", " ", "LinearRegression", ":\n    ", "def", " ", "__init__", "(", "self,data,labels", "):\n        self.data = data\n        self.labels = labels\n        num_features = ", "len", "(data[", "0", "])\n        self.theta = np.zeros((num_features,", "1", "))\n        \n\n\n    ", "def", " ", "train", "(", "self,alpha,num_iterations = ", "500", "):\n       \n        cost_history = self.gradient_descent(alpha,num_iterations)\n        ", "return", " self.theta,cost_history\n        \n    ", "def", " ", "gradient_descent", "(", "self,alpha,num_iterations", "):\n        cost_history= []\n        ", "for", " _ ", "in", " ", "range", "(num_iterations):\n            self.gradient_step(alpha)\n            cost_history.append(self.cost_function(self.data,self.labels))\n        ", "return", " cost_history\n        \n        \n    ", "def", " ", "gradient_step", "(", "self,alpha", "):    \n        num_examples = data.shape[", "0", "]\n        prediction = LinearRegression.hypothesis(self.data,self.theta)\n        delta = prediction - self.labels\n        theta = self.theta\n        theta = theta - alpha*(", "1", "/num_examples)*(np.dot(delta.T,self.data)).T\n        self.theta = theta\n        \n        \n    ", "def", " ", "cost_function", "(", "self,data,labels", "):\n        self.m = ", "len", "(labels) \n        delta = LinearRegression.hypothesis(data,self.theta) - labels\n        cost = (", "1", "/", "2", ")*np.dot(delta.T,delta)/self.m\n        ", "return", " cost[", "0", "][", "0", "]\n        \n    \n    ", "def", " ", "hypothesis", "(", "data,theta", "):   \n        predictions = np.dot(data,theta)\n        ", "return", " predictions\n        \n\nx_train = rescombine\n\ny_train = labels\n\nnum_iterations = ", "500", "\nlearning_rate = ", "0.01", "  \n\n\nlinear_regression = LinearRegression(x_train, y_train)\n\n(theta, cost_history) = linear_regression.train(learning_rate, num_iterations)\n\n\n\n", "print", " (theta, cost_history)\n", "print", "(", "len", "( cost_history))\n\n\n", "\n", "\n", "运行结果及报错内容", "\n", "[0.3025 0.315  0.3275 0.3425 0.36   0.365  0.3775 0.395  0.41   0.4325", " 0.4475 0.46   0.4825 0.4925 0.5075 0.52   0.5375 0.5625 0.995  0.5825", " 0.9825 0.6    0.945  0.95   0.955  0.9525 0.63   0.6475 0.6475 0.655", " 0.8975 0.86   0.8125 0.685  0.805  0.71   0.785  0.7475 0.8225]", "[0.1365 0.1305 0.125  0.121  0.1175 0.114  0.111  0.1065 0.103  0.0985", " 0.0945 0.092  0.0895 0.087  0.0845 0.082  0.0795 0.0775 0.0755 0.074", " 0.0735 0.0725 0.072  0.0715 0.071  0.0705 0.0695 0.069  0.0685 0.068", " 0.068  0.0675 0.067  0.0665 0.0665 0.066  0.066  0.0655 0.0655]", "[[nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan]", " [nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan]", " [nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan]", " [nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan]", " [nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan]", " [nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan", "  nan nan nan]] [6115546.293053937, 4014534661896851.5, 2.635330971147491e+24, 1.729956249576308e+33, 1.1356253382264945e+42, 7.454783374654096e+50, 4.893673405509658e+59, 3.2124393421296037e+68, 2.1087975579333355e+77, 1.3843147423906104e+86, 9.087298582980243e+94, 5.965333822395535e+103, 3.915928071216269e+112, 2.5706009278759203e+121, 1.687464378870506e+130, 1.1077316588031153e+139, 7.27167603227295e+147, 4.7734730607470265e+156, 3.1335341344346484e+165, 2.0570004369377248e+174, 1.3503126553064964e+183, 8.864092755348704e+191, 5.818810929946509e+200, 3.819743494677929e+209, 2.5074608095693e+218, 1.6460162103256778e+227, 1.080523114983515e+236, 7.093066244971383e+244, 4.656225124468534e+253, 3.0565670277085482e+262, 2.006475577346884e+271, 1.3171457409549063e+280, 8.646369397676056e+288, 5.675886990825303e+297, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, inf, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]", "500", "\n", "我的解答思路和尝试过的方法", "\n", "很懵", "\n", "我想要达到的结果", "\n", "正常运算"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个需要用数据拟合&amp;#xff0c;而且要找出数据边界&amp;#xff0c;即x在升稳降中的范围&amp;#xff0c;才好用np分段拟合&amp;#xff0c;参考&lt;a href=\"https://blog.csdn.net/qq_42272539/article/details/91196087\"&gt;https://blog.csdn.net/qq_42272539/article/details/91196087&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python如何实现三维图像的分段线性拟合，并给出分段函数", ["如图，x轴是时间，y,z轴表示变量，随着时间是上升——平稳——下降的趋势，怎么求出y和z之间的分段函数"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果你的温度-时间曲线可以用分段函数来拟合&amp;#xff0c;那么你可以将分段函数的参数作为优化变量&amp;#xff0c;使用Levenberg–Marquardt算法对这些参数进行拟合&amp;#xff0c;从而得到最优的参数解。&lt;/p&gt;\n&lt;p&gt;具体来说&amp;#xff0c;你需要首先定义一个分段函数的模型&amp;#xff0c;比如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;piecewise_func&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;t, params&lt;/span&gt;):\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n    分段函数模型&amp;#xff0c;其中params是一个列表&amp;#xff0c;包含每个段的参数\n    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n    num_segments &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(params) // &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    result &amp;#61; np.zeros_like(t)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_segments):\n        offset &amp;#61; i * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n        a, b, c &amp;#61; params[offset:offset&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]\n        result[t &amp;gt;&amp;#61; a] &amp;#61; b * (t[t &amp;gt;&amp;#61; a] - a) &amp;#43; c\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的代码中&amp;#xff0c;我们假设分段函数有多个段&amp;#xff0c;每个段的参数包括一个起始时间 $a$&amp;#xff0c;一个斜率 $b$ 和一个截距 $c$&amp;#xff0c;并且将这些参数存储在一个列表 params 中。然后&amp;#xff0c;我们使用一个循环来逐个计算每个段的函数值&amp;#xff0c;并将它们组合起来得到整个分段函数的函数值。&lt;/p&gt;\n&lt;p&gt;接下来&amp;#xff0c;你可以使用 scipy.optimize.curve_fit 函数来对分段函数进行拟合。具体来说&amp;#xff0c;你需要将分段函数模型作为第一个参数传递给 curve_fit 函数&amp;#xff0c;并将时间和温度数据作为第二个和第三个参数传递进去。然后&amp;#xff0c;你需要给出每个分段的初始参数值&amp;#xff0c;将它们组合成一个初始参数列表&amp;#xff0c;并将它作为 p0 参数传递给 curve_fit 函数。最后&amp;#xff0c;你可以使用 method&amp;#61;&amp;#39;lm&amp;#39; 参数指定使用Levenberg–Marquardt算法进行拟合。&lt;/p&gt;\n&lt;p&gt;下面是一个示例代码&amp;#xff0c;其中分段函数有两个段&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; scipy.optimize &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; curve_fit\n\n&lt;span class=\"hljs-comment\"&gt;# 定义分段函数模型&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;piecewise_func&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;t, params&lt;/span&gt;):\n    &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&amp;#34;\n    分段函数模型&amp;#xff0c;其中params是一个列表&amp;#xff0c;包含每个段的参数\n    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;\n    num_segments &amp;#61; &lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(params) // &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    result &amp;#61; np.zeros_like(t)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_segments):\n        offset &amp;#61; i * &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n        a, b, c &amp;#61; params[offset:offset&amp;#43;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]\n        result[t &amp;gt;&amp;#61; a] &amp;#61; b * (t[t &amp;gt;&amp;#61; a] - a) &amp;#43; c\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n&lt;span class=\"hljs-comment\"&gt;# 生成一些数据&lt;/span&gt;\nt &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;])\ny &amp;#61; np.array([&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;28&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;])\n\n&lt;span class=\"hljs-comment\"&gt;# 定义初始参数值&lt;/span&gt;\np0 &amp;#61; [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, -&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;]\n\n&lt;span class=\"hljs-comment\"&gt;# 对分段函数进行拟合&lt;/span&gt;\nparams, _ &amp;#61; curve_fit(piecewise_func, t, y, p0&amp;#61;p0, method&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;lm&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-comment\"&gt;# 输出拟合结果&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;拟合结果 params 是一个包含每个分段的参数的列表。假设我们在上面的代码中使用了初始参数值 [2, 2, 20, 6, -2, 30]&amp;#xff0c;表示分段函数有两个段&amp;#xff0c;第一个段的起始时间为 2&amp;#xff0c;斜率为 2&amp;#xff0c;截距为 20&amp;#xff0c;第二个段的起始时间为 6&amp;#xff0c;斜率为 -2&amp;#xff0c;截距为 30。对这些初始参数进行拟合后&amp;#xff0c;可以得到最优的参数值&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-meta\"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=\"language-python\"&gt;&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(params)&lt;/span&gt;\n[2.0, 2.33333333, 20.66666667, 6.0, -2.0, 30.0]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以看到&amp;#xff0c;最优的参数值与初始参数值比较接近&amp;#xff0c;这说明Levenberg–Marquardt算法能够在较短的时间内得到较好的拟合结果。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请教采用Levenberg–Marquardt算法求非线性分段函数的参数", ["目前想用一个模型拟合一天的温度变化，模型如下，", "\n", "\n", "在保证已知六组以上温度-时间数值的情况下，如何采用Levenberg–Marquardt算法获得最优的参数解呢？", "已经搜索了网上的经验帖，但没有关于分段函数的讨论，还望解答", "\n", "（模型解释引自 孟翔晨, 刘昊, & 程洁. (2019). 基于FY-2F数据的中国区域地表温度日变化模型评价及特征研究. 遥感学报, 4, 570–581.）"]], "Tag": "算法设计"}
{"Answer": "推荐使用GridLayout，这样每个Button的大小和位置都固定了", "Konwledge_Point": "线性规划和规约", "Question": ["Android线性布局问题，调整了一下button文本内容位置，button大小发生了变化，如下图", ["android:paddingRight=\"10dp\"", "\n android:paddingBottom=\"10dp\"", "\n这是对于C按钮添加的代码，用的都是linearlayout布局，求大牛解答，新人积分少，见谅哈，在此谢谢各位了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你已经求得垂直的向量为(i,-j,0*k)&amp;#xff0c;所以这个area&amp;#61;[1^2&amp;#43;(&amp;#xff0d;1)^2&amp;#43;0^2]的开方&amp;#61;2的开方&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Linear algebra, Cramer’s rule, inverses and volumes线性代数", ["\n", "In example 8, 为什么area = 根号2？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;都可以&amp;#xff0c;看你怎么去写&amp;#xff0c;你可以将指针放在第一个元素上&amp;#xff0c;这个是带头结点的&amp;#xff0c;不带头节点放在第一个元素之前&lt;br /&gt;你可以看我这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_51553982/article/details/115730247\" id=\"textarea_1649863461652_1649863604955_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_51553982/article/details/115730247&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性链表的插入算法的找位序是怎么初始化的？", ["为什么PPT上显示是j从0开始，书上位序是从1开始的 ，如果都是对的话，为什么会不一样呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先化简为最简阶梯型矩阵&amp;#xff0c;没有全为0的行&amp;#xff0c;即为满秩&amp;#xff0c;非满秩不可等价变为满秩&amp;#xff0c;你问错地儿了吧&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性代数，怎么把矩阵变为等价的行满秩矩阵？", ["怎么把矩阵变为等价的行满秩矩阵？", "怎么把矩阵变为等价的行满秩矩阵？", "怎么把矩阵变为等价的行满秩矩阵？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;阅读理解&amp;#xff0c;说的是空间复杂度&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["为什么n/2是常数性的啊？n就是线性的", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;See &lt;a href=\"https://stackoverflow.com/questions/573674\"&gt;Looking for actively maintained matrix math library for php&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["使用多个变量服务器为webapp求解线性方程？ 有可能与PHP？", ["\n\n", "I have a gerneral question on php. Hope its ok to ask here. ", "\n\n", "How would you solve a linear Equation with multiple variables in the web? maybe using Gaussian elimination or ... ? Is it possible with php and recommendable?", "\n\n", "1500 + 100 w                 = 10,000 s\n3000 + 1000 s                = 3000 w\n5000 + 2000 s + 100 w + 30 r = 150 r\n\n=>   s = 0,16 | w = 1,05 | r = 45,21\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;latent里的分类变量改写成  _Isex_1格式&amp;#xff0c;参照表格里的变量名&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["stata多元线性回归时系数集束法如何使用，对变量有何要求？", ["stata系数集束化到底要怎么使用？", "最重要的是我的操作为啥会错误？", "我真的想不明白呀😭😭", "\n"]], "Tag": "算法设计"}
{"Answer": "题目已经自己解答出来，只需要把\r\n\r\n```\r\nelse if(N % K == 0 &amp;&amp; N / K != 1)\r\n```\r\n的N% K==0删除即可\r\n应该说是N%K有余数也需要按照反转多次的办法来", "Konwledge_Point": "线性规划和规约", "Question": ["PTA线性结构3 Reversing Linked List【直接贴答案将不予采纳，谢谢合作】", ["#include <iostream>\nusing namespace std;\n\nstruct Node\n{\n    int adrs;\n    int data;\n    int next;\n    struct Node* link;\n};\n\n\nNode* reverselink(struct Node* node, int K)\n{\n    struct Node* initnode = node;\n    struct Node* newnode = node -> link;\n    struct Node* oldnode = newnode -> link;\n    struct Node* temp;\n\n    int count = 1;\n\n    while(count < K)\n    {\n        temp = oldnode -> link;\n        oldnode -> link = newnode;\n        newnode = oldnode;\n        oldnode = temp;\n        count++;\n    }\n\n    initnode -> link -> link = oldnode;\n\n    return newnode;\n}\n\nvoid print(struct Node* initNode)\n{\n    while(initNode != NULL)\n    {\n        if(initNode -> link != NULL)\n        {\n            printf(\"%05d %d %05d\\n\", initNode -> adrs, initNode -> data, initNode -> link -> adrs);\n\n        }\n        else\n        {\n            printf(\"%05d %d %d\\n\", initNode -> adrs, initNode -> data, -1);\n        }\n\n        initNode  = initNode -> link;\n    }\n}\n\nint main()\n{\n    int start = 0;\n    int N = 0;\n    int K = 0;\n    scanf(\"%d %d %d\",&start, &N, &K);\n    int adrs = -1;\n    int cnt = 0;\n\n    int data[100000] = {0};\n    int next[100000] = {0};\n    while(cnt < N)\n    {\n        scanf(\"%d\", &adrs);\n        scanf(\"%d\", &data[adrs]);\n        scanf(\"%d\", &next[adrs]);\n        cnt++;\n    }\n    //解决多余结点\n    int actualNum = 0;\n    struct Node* initNode = new Node;\n    struct Node* prevNode = initNode;\n    struct Node* curNode = NULL;\n\n    for(int i = start; i <= 100000 && i != -1; )\n    {\n        curNode = new Node;\n        curNode -> data = data[i];\n        curNode -> adrs = i;\n        curNode -> next = next[i];\n        curNode -> link = NULL;//////\n        prevNode -> link = curNode;\n        prevNode = curNode;\n        i = next[i];\n        actualNum++;\n    }\n    cnt = 0;\n    N = actualNum;\n\n    curNode -> link = NULL;\n\n    if(K == 1)//直接输出\n    {\n        initNode = initNode -> link;\n    }\n    else if(K == N || (N / K == 1 && N % K != 0))//全反转  有尾巴不反转\n    {\n        initNode = reverselink(initNode, K);\n    }\n    else if(N % K == 0 && N / K != 1)\n    {\n        int count = 1;\n        int flag = 0;\n        struct Node* markNode = initNode;\n        struct Node* firstNode = initNode;\n        while(cnt < N / K)\n        {\n            initNode = reverselink(initNode, K);\n            markNode -> link = initNode;\n            cnt++;\n            while(count < K && cnt < N / K)\n            {\n                initNode = initNode -> link;\n                count++;\n            }\n            markNode = initNode;\n            count = 1;\n        }\n        initNode = firstNode -> link;\n    }\n    print(initNode);\n}\n", "\n\n", "\n\n", "\n\n", "请勿贴他人的代码，贴他人的代码及网址回答将不会采纳。"]], "Tag": "算法设计"}
{"Answer": "请看一下你的TestActivity中的第83行代码，那一行出现了空指针异常，先把空指针异常处理了，应该就没事了。\r\n一般情况下，出现error的话，都需要先找到错误的地方，一般都是看Caused by:......的下一行，会指出你的那一行代码出了什么问题，然后就可以去解决相应的异常！", "Konwledge_Point": "线性规划和规约", "Question": ["向线性布局中动态添加textview出现闪退，代码如下，这是什么原因？？", ["protected void onActivityResult(int requestCode, int resultCode, Intent data) {", "\n        // TODO Auto-generated method stub", "\n        switch (requestCode) {", "\n        case 1:", "\n            if(resultCode==RESULT_OK){", "\n                personalNumber=data.getStringExtra(\"personal\");", "\n                allow=1;", "\n                Log.d(\"TestActivity\", personalNumber);", "\n\n", "            linearToLogin = (LinearLayout) findViewById(R.id.ll_to_login);\n            TextView firstTextView=new TextView(this);\n            firstTextView.setText(\"尊敬的：  \"+personalNumber);\n            firstTextView.setTextSize(16);\n            firstTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n            LinearLayout.LayoutParams view01Params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,\n                      ViewGroup.LayoutParams.WRAP_CONTENT);\n            ((ViewGroup) firstTextView.getParent()).removeView(firstTextView);\n             linearToLogin.addView(firstTextView,view01Params);\n\n            TextView welcomeTextView=new TextView(this);\n            welcomeTextView.setText(\"欢迎使用畅心停车\");\n            welcomeTextView.setTextSize(16);\n            welcomeTextView.setGravity(Gravity.CENTER_HORIZONTAL);\n            LinearLayout.LayoutParams view02Params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,\n                      ViewGroup.LayoutParams.WRAP_CONTENT);\n            ((ViewGroup) welcomeTextView.getParent()).removeView(welcomeTextView);\n             linearToLogin.addView(firstTextView,view02Params);\n             Log.d(\"TestActivity布局\", \"填加完成\");\n        }\n        break;\n\n    default:\n        break;\n    }\n\n    这是logcat\n", "\n\n", "_"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;给出你的例子&amp;#xff0c;有可能行列式等于零了&amp;#xff0c;即方程非满秩。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["解3元线性方程组，为什么输出结果总是nan或者0（有什么其他问题可以随便提出来，xie）", ["\n", "#include<stdio.h>", "\n", "#include<math.h>", "\n", "int", " main()\n{\n    ", "int", " a,b,c,d,e,f,g,h,i,j,k,l;\n    scanf(", "\"%d %d %d %d\"", ",&a,&b,&c,&d);\n    scanf(", "\"%d %d %d %d\"", ",&e,&f,&g,&h);\n    scanf(", "\"%d %d %d %d\"", ",&i,&j,&k,&l);\n    \n    double D=", "0", ";\n    double E=", "0", ";\n    double F=", "0", ";\n    double G=", "0", ";\n                    \n    D=", "sqrt", "((a*f*k)+(b*g*i)+(c*e*j)-(c*f*i)-(b*e*k)-(g*j*a));\n    E=", "sqrt", "((d*f*k)+(b*j*l)+(h*j*c)-(c*f*l)-(g*j*d)-(k*b*h));\n    F=", "sqrt", "((a*h*k)+(d*g*i)+(c*e*l)-(c*h*i)-(g*l*a)-(d*e*k));\n    G=", "sqrt", "((a*f*l)+(b*h*i)+(e*j*d)-(d*f*i)-(e*b*l)-(a*h*j));\n    \n    ", "printf", "(", "\"x1=%lf\\n\"", ",E/D);\n    ", "printf", "(", "\"x2=%lf\\n\"", ",F/D);\n    ", "printf", "(", "\"x3=%lf\\n\"", ",G/D);\n    \n    ", "return", " ", "0", ";\n\n"]], "Tag": "算法设计"}
{"Answer": "提供下数据切分思路：\r\n```\r\n第一，pandas 导入数据，有 load API 方法可以直接用；\r\n第二，对 DataFrame 进行数据切割，就是按照索引规则取不同部分的数据。\r\n```\r\n参考资料：https://www.jb51.net/article/133653.htm", "Konwledge_Point": "线性规划和规约", "Question": ["Python怎么利用sklearn将pandas读取的数据拆分成训练集和验证集", ["Python用多元线性回归算法对Boston House Price Dataset数据集进行预测中，怎么利用sklearn将pandas读取的数据拆分成训练集和验证集"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; namespace std;\n\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; swap(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *b) {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; *a;\n  *a &amp;#61; *b;\n  *b &amp;#61; t;\n}\n\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; selectionsort(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n) {\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; min_idx &amp;#61; i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n; j&amp;#43;&amp;#43;)\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[j] &amp;lt; a[min_idx])\n        min_idx &amp;#61; j;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (min_idx !&amp;#61; i)\n      swap(&amp;amp;a[min_idx], &amp;amp;a[i]);\n  }\n}\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; binarysearch(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;) {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; left &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, right &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (left &amp;lt;&amp;#61; right) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m &amp;#61; (left &amp;#43; right) / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[m] &amp;lt; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;)\n      left &amp;#61; m &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[m] &amp;gt; &lt;span class=\"hljs-keyword\"&gt;value&lt;/span&gt;)\n      right &amp;#61; m - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; m;\n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; main() {\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; test[] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;5658845&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4520125&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7895122&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8777541&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8451277&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1302850&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;8080152&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4568555&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5552012&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5050552&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7825877&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1250255&lt;/span&gt;,\n                &lt;span class=\"hljs-number\"&gt;1005231&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6545231&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3852085&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7576651&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7881200&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4581002&lt;/span&gt;};\n  std::size_t size &amp;#61; sizeof(test) / sizeof(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;);\n  selectionsort(test, size);\n  cout &amp;lt;&amp;lt; &amp;#34;请输入要查找的账号&amp;#xff1a;&amp;#34;;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; account;\n  cin &amp;gt;&amp;gt; account;\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;#61; binarysearch(test, size, account);\n  &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-keyword\"&gt;index&lt;/span&gt; &amp;lt; size)\n    cout &amp;lt;&amp;lt; &amp;#34;合法账号&amp;#xff01;&amp;#34; &amp;lt;&amp;lt; endl;\n  &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    cout &amp;lt;&amp;lt; &amp;#34;非法账号&amp;#xff01;&amp;#34; &amp;lt;&amp;lt; endl;\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["编程，让用户输入一个一个账号，检验该账号是否出现在下面的列表中。如果属于下面列表中的账号，则输出合法信息，否则输出非法信息。采用线性查找方法实现该程序。", ["\n", "5658845", "  ", "4520125", "  ", "7895122", "  ", "8777541", "  ", "8451277", "  ", "1302850", "  ", "80801524568555", "  ", "5552012", "  ", "5050552", "  ", "7825877", "  ", "1250255", "  ", "1005231", "  ", "65452313852085", "  ", "7576651", "  ", "7881200", "  ", "4581002", "\n", "1", "、算法分析\n先用选择排序法装饰所给的账号排序，然后采用二分查找算法检验输入账号的合法性。\n", "2", "、参考代码\n#include<iostream>\nusing namespace std", ";", "\nint binarysearch(int a[],int n=", "10", ",int value=", "0000000", ")", ";", "\nvoid selectionsort(int a[],int n=", "10", ")", ";", "\nint main()\n {    \nint test[]={", "5658845", ",", "4520125", ",", "7895122", ",", "8777541", ",", "8451277", ",", "1302850", ",", "8080152", ",", "4568555", ",", "5552012", ",", "5050552", ",", "7825877", ",", "1250255,1005231", ",", "6545231", ",", "3852085", ",", "7576651", ",", "7881200", ",", "4581002", "}", ";", "\nint accounts", ";selectionsort(test,18);", "\ncout<<”请输入要查找的账号：”", ";    ", "\ncin>>accounts", ";    ", "\nif(binarysearch(test,sizeof(test)/sizeof(test[", "0", "]),accounts))        \ncout<<”合法账号！”<<endl", ";    ", "\nelse        \ncout<<”非法账号！”<<endl", ";    ", "\nreturn ", "0", ";", "\n}\n//选择排序函数void selectionsort(int a[],int n)\n//二分查找函数int binarysearch(int a[],int n,int value)\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看看这个&lt;br /&gt;&lt;a href=\"https://ww2.mathworks.cn/help/matlab/ref/lsqr.html\" id=\"textarea_1663851455029_1663851555636_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ww2.mathworks.cn/help/matlab/ref/lsqr.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matalab和C++问题", ["怎样用最小二乘法和matalab或C++解线性方程Ax=b。"]], "Tag": "算法设计"}
{"Answer": "你可以在这个layout的点击事件中，设置ImageView的setPressed(true),这样就可以在selector中因公pressed的设置了", "Konwledge_Point": "线性规划和规约", "Question": ["Android中怎么让一个布局中所有控件都获得这个布局的点击状态", ["我在一个线性布局中有一个ImageView和一个TextView，怎么设置点击这个线性布局的时候ImageView处于选取状态，还有selector怎么设置"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://ask.csdn.net/questions/7728159?answer&amp;#61;53803841\" id=\"textarea_1653540819288_1653540876703_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;设计一个Student 类&amp;#xff0c;此类的对象有属性name、age、 score, 用来保存学生的姓名、年龄、成绩。-Python-CSDN问答&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;CSDN问答为您找到设计一个Student 类&amp;#xff0c;此类的对象有属性name、age、 score, 用来保存学生的姓名、年龄、成绩。相关问题答案&amp;#xff0c;如果想了解更多关于设计一个Student 类&amp;#xff0c;此类的对象有属性name、age、 score, 用来保存学生的姓名、年龄、成绩。 python、有问必答 技术问题等相关问答&amp;#xff0c;请访问CSDN问答。&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://ask.csdn.net/questions/7728159?answer&amp;#61;53803841&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;参考这个问题&amp;#xff0c;有帮助麻烦点个采纳&amp;#xff0c;有其他问题可以继续交流~&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["设计一个Student 类，此类的对象有属性name、age、 score, 用来保存学生的姓名、年龄、成绩。", ["设计一个Student类，此类的对象有属性name、age、sore, 用来保存学生的姓名、年龄、成绩。", "\n", "(1) 编写一个函数input _student( )读入n个学生的信息，用对象来存储这些信息(不用字典)，并返回对象的列表。", "\n", "(2)编写一个函数output. studen( )打印这些学生信息(格式不限)。", "这是我写的还有一点不会写了，请各位帮忙看看"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于GPT的解答&lt;br /&gt;以下是一个简单的 VB 代码示例&amp;#xff0c;用于实现二维线性插值&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;&amp;#39; 定义二维数组和变量&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; y(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; z(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; x1 &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt;, y1 &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt;, z1 &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Double&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Dim&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;, j &lt;span class=\"hljs-keyword\"&gt;As&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;Integer&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;&amp;#39; 输入已知的数据&lt;/span&gt;\nx(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: x(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: x(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\ny(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: y(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: y(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: y(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\nz(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\nz(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\nz(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;\nz(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;: z(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;&amp;#39; 输入待插值的点&lt;/span&gt;\nx1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;\ny1 &amp;#61; &lt;span class=\"hljs-number\"&gt;2.5&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;&amp;#39; 计算插值&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt; x(i) &amp;lt;&amp;#61; x1 &lt;span class=\"hljs-built_in\"&gt;And&lt;/span&gt; x(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;gt;&amp;#61; x1 &lt;span class=\"hljs-keyword\"&gt;Then&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;For&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;To&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt; y(j) &amp;lt;&amp;#61; y1 &lt;span class=\"hljs-built_in\"&gt;And&lt;/span&gt; y(j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;gt;&amp;#61; y1 &lt;span class=\"hljs-keyword\"&gt;Then&lt;/span&gt;\n                z1 &amp;#61; ((x(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - x1) * (y(j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - y1) * z(i, j) &amp;#43; _\n                      (x1 - x(i)) * (y(j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - y1) * z(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, j) &amp;#43; _\n                      (x(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - x1) * (y1 - y(j)) * z(i, j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; _\n                      (x1 - x(i)) * (y1 - y(j)) * z(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)) / _\n                      ((x(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - x(i)) * (y(j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - y(j)))\n                MsgBox &lt;span class=\"hljs-string\"&gt;&amp;#34;插值结果为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;amp; z1\n                &lt;span class=\"hljs-keyword\"&gt;Exit&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;Sub&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt; j\n    &lt;span class=\"hljs-keyword\"&gt;End&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;If&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;Next&lt;/span&gt; i\n\nMsgBox &lt;span class=\"hljs-string\"&gt;&amp;#34;该点不在已知数据范围内&amp;#34;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;代码中&amp;#xff0c;我们先定义了三个一维数组和一个二维数组&amp;#xff0c;分别存储 x、y 和 z 的值。然后输入已知的数据&amp;#xff0c;包括 x、y 和 z 的值&amp;#xff0c;以及待插值的点 x1 和 y1。最后&amp;#xff0c;在两个循环中查找待插值点所在的数据区域&amp;#xff0c;并根据公式计算出插值结果。如果待插值点不在已知数据范围内&amp;#xff0c;则输出相应&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["vb编程,代码添加，二维插值", ["vb代码添加。", "二维插值，as和长细比，会求出处于一定范围", "怎样线性插值求出", "解决办法附带代码", "我这一个是大表格，数据很多，要求代码简洁", "要提供验证代码", "用if 挨个判断我也会写，就是简单线性插值", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;对于集中式卡尔曼滤波的信息物理系统&amp;#xff0c;可以通过对系统的状态估计值和测量值的误差进行分析来检测是否受到了线性欺骗攻击。通常可以计算出系统状态估计误差的均值和方差&amp;#xff0c;通过对比理论值和实际值&amp;#xff0c;判断是否存在线性欺骗攻击。&lt;/p&gt;\n&lt;p&gt;如果只有部分传感器受到了线性欺骗攻击&amp;#xff0c;可以采用一些特定的检测算法来确定是哪几个传感器受到了影响。常用的算法包括neighbors method和covariance consistency method等等&amp;#xff0c;其中neighbors method通过对相邻传感器的测量值进行比较来判断哪些传感器受到了欺骗攻击&amp;#xff0c;而covariance consistency method则分析系统的协方差矩阵是否存在不一致性来判断哪些传感器受到了影响。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["集中式信息物理系统安全检测", ["对于一个使用集中式卡尔曼滤波的信息物理系统，怎么检测系统是否受到了线性欺骗攻击？如果只有部分传感器受到了线性欺骗攻击，怎么检测出是哪几个？"]], "Tag": "算法设计"}
{"Answer": "建立一个类/结构体\r\nstudent s{\r\n\tstr Name;\r\n\tstr Number;\r\n\tstr Sex;\r\n\t....\r\n\tstudent * next;\r\n}\r\n删除、查找、追加、读入、排序这些操作都是一般线性链表的删除结点、查找结点、添加结点、调换链表顺序(推荐先遍历链表，将数值赋给其他数据结构(vector、数组)排序后建立新链表取代旧链表)操作\r\n\r\n需求分析：vs上可以画uml图", "Konwledge_Point": "线性规划和规约", "Question": ["求解数据结构课程设计问题", ["学生成绩管理系统 ", "\n设计目的：", "\n1 掌握线性链表的建立。", "\n2 掌握线性链表的基本操作。", "\n3 掌握查找的基本算法。", "\n设计内容：", "\n　　利用线性链表实现学生成绩管理系统，具体功能：输入、输出、插入、删除、查找、追加、读入、显示、保存、拷贝、排序、索引、分类合计、退出，并能在屏幕上输出操作前后的结果。", "\n设计要求：", "\n1 写出系统需求分析,并建模。", "\n2  编程实现,界面友好。", "\n3  输出操作前后的结果。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1.线性回归&amp;#xff0c;神经网络这些都可以拟合预测&amp;#xff0c;方法的话其实和你数据量有关&amp;#xff0c;如果数据量小的话&amp;#xff0c;可以看看一些增加样本数量的方法。&lt;br /&gt;2.以神经网络为例&amp;#xff0c;梯度下降算法是最流行的优化算法之一并且目前为止是优化最常见的算法。具体你可以都尝试一下&amp;#xff0c;找到模型性能最好的算法。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["利用时间与温度预测湿度的数学模型用哪种好", ["做一个发酵物的湿度预测模型，发酵物的湿度随着时间和温度变化，用采集的时间、温度、湿度的数据建立模型。", "想建立通过时间和温度预测湿度的模型。", "问题1：有哪些方法可以建立数学模型？想知道用哪种方法建立模型最好最好（本来拟采用多元线性回归）？", "问题2：用哪种算法优化可以模型？哪种最适合？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;附录&amp;#xff1a;回归结果详细说明 原文链接&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/youcans/article/details/116448853\" id=\"textarea_1643538020330_1643538163692_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/youcans/article/details/116448853&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n    Dep.Variable: y 因变量\n    Model&amp;#xff1a;OLS 最小二乘模型\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;Method&lt;/span&gt;:&lt;/span&gt; Least Squares 最小二乘\n    No. Observations: 样本数据的数量\n    Df Residuals&amp;#xff1a;残差自由度(degree &lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt; freedom &lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt; residuals)\n    Df Model&amp;#xff1a;模型自由度(degree &lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt; freedom &lt;span class=\"hljs-keyword\"&gt;of&lt;/span&gt; model)\n    Covariance &lt;span class=\"hljs-keyword\"&gt;Type&lt;/span&gt;&amp;#xff1a;nonrobust 协方差阵的稳健性\n    R-squared&amp;#xff1a;R 判定系数\n    Adj. R-squared: 修正的判定系数\n    F-statistic&amp;#xff1a; 统计检验 F 统计量\n    Prob (F-statistic): F检验的 P值\n    Log likelihood: 对数似然\n\n    coef&amp;#xff1a;自变量和常数项的系数&amp;#xff0c;b1,b2,...bm,b0\n    std err&amp;#xff1a;系数估计的标准误差\n    t&amp;#xff1a;统计检验 t 统计量\n    P&amp;gt;|t|&amp;#xff1a;t 检验的 P值\n    [&lt;span class=\"hljs-number\"&gt;0.025&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.975&lt;/span&gt;]&amp;#xff1a;估计参数的 &lt;span class=\"hljs-number\"&gt;95&lt;/span&gt;%置信区间的下限和上限\n    Omnibus&amp;#xff1a;基于峰度和偏度进行数据正态性的检验\n    Prob(Omnibus)&amp;#xff1a;基于峰度和偏度进行数据正态性的检验概率\n    Durbin-Watson&amp;#xff1a;检验残差中是否存在自相关\n    Skewness&amp;#xff1a;偏度&amp;#xff0c;反映数据分布的非对称程度\n    Kurtosis&amp;#xff1a;峰度&amp;#xff0c;反映数据分布陡峭或平滑程度\n    Jarque-Bera(JB)&amp;#xff1a;基于峰度和偏度对数据正态性的检验\n    Prob(JB)&amp;#xff1a;Jarque-Bera(JB)检验的 P值。\n    Cond. No.&amp;#xff1a;检验变量之间是否存在精确相关关系或高度相关关系。\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Python,对回归模型做评估：具体是通过哪些值，如何评估？", ["最近在学习Python对回归模型做评估，代码过程我记住了，但是出来的表格不知道怎么分析呢。是看那些值，对模型评估有什么作用？", "\n", "【用到的包】", "1.调包", "import pandas as pd", "2.可视化分析", "import seaborn as sns", "import matplotlib.pyplot as plt", "%matplotlib inline", "3.线性回归模型的建立与评估", "（调用sklearn中的线性回归工具包）", "from sklearn.linear_model import LinearRegression", "\n", "LinearRegression()设置模型为线性回归", "model=LinearRegression()", "\n", "【Q：最后出来这个表格，我不知道对评估模型有什么作用】", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;% 设置矩阵 A 和向量 b&lt;/span&gt;\nA &amp;#61; [&lt;span class=\"hljs-number\"&gt;10.9&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1.2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2.1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0.9&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;1.2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;11.2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2.5&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;2.1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;9.8&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1.3&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;0.9&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2.5&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1.3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;12.3&lt;/span&gt;];\nb &amp;#61; [&lt;span class=\"hljs-number\"&gt;-7&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;5.3&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;10.3&lt;/span&gt;; &lt;span class=\"hljs-number\"&gt;24.6&lt;/span&gt;];\n\n&lt;span class=\"hljs-comment\"&gt;% 设置误差限&lt;/span&gt;\nepsilon &amp;#61; &lt;span class=\"hljs-number\"&gt;0.2&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1e-10&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% Jacobi 迭代法&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 选取初始解&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(b));\n\n&lt;span class=\"hljs-comment\"&gt;% 初始化迭代步数&lt;/span&gt;\nk &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 迭代求解&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;true&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 计算新的解&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(b)\n        x_new(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; (b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)*x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;)*x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;)) / A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;% 更新解&lt;/span&gt;\n    x &amp;#61; x_new;\n    \n    &lt;span class=\"hljs-comment\"&gt;% 计算残差向量和残差模长&lt;/span&gt;\n    r &amp;#61; b - A*x;\n    res &amp;#61; norm(r);\n    \n    &lt;span class=\"hljs-comment\"&gt;% 检查是否满足误差限&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; res &amp;lt; epsilon\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;% 更新迭代步数&lt;/span&gt;\n    k &amp;#61; k &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 输出迭代步数&lt;/span&gt;\nfprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;Jacobi 迭代法&amp;#xff1a;迭代 %d 次\\n&amp;#39;&lt;/span&gt;, k);\n\n\n&lt;span class=\"hljs-comment\"&gt;% Gauss-Seidel 迭代法&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 选取初始解&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(b));\n\n&lt;span class=\"hljs-comment\"&gt;% 初始化迭代步数&lt;/span&gt;\nk &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 迭代求解&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;true&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 计算新的解&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(b)\n        x_new(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; (b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)*x_new(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;)*x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;)) / A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;% 更新解&lt;/span&gt;\n    x &amp;#61; x_new;\n    \n    &lt;span class=\"hljs-comment\"&gt;% 计算残差向量和残差模长&lt;/span&gt;\n    r &amp;#61; b - A*x;\n    res &amp;#61; norm(r);\n    \n    &lt;span class=\"hljs-comment\"&gt;% 检查是否满足误差限&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; res &amp;lt; epsilon\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    \n    &lt;span class=\"hljs-comment\"&gt;% 更新迭代步数&lt;/span&gt;\n    k &amp;#61; k &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 输出迭代步数&lt;/span&gt;\nfprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;Gauss-Seidel 迭代法&amp;#xff1a;迭代 %d 次\\n&amp;#39;&lt;/span&gt;, k);\n\n松弛迭代法\n\n&lt;span class=\"hljs-comment\"&gt;% 选取松弛因子&lt;/span&gt;\nomega &amp;#61; &lt;span class=\"hljs-number\"&gt;1.5&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 选取初始解&lt;/span&gt;\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;zeros&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(b));\n\n&lt;span class=\"hljs-comment\"&gt;% 初始化迭代步数&lt;/span&gt;\nk &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n&lt;span class=\"hljs-comment\"&gt;% 迭代求解&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;true&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;% 计算新的解&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(b)\n        x_new(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#61; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;-omega)*x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) &amp;#43; omega * (b(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)*x_new(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) - A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;)*x(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;)) / A(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;% 更新解&lt;/span&gt;\n    x &amp;#61; x_new;\n\n    &lt;span class=\"hljs-comment\"&gt;% 计算残差向量和残差模长&lt;/span&gt;\n    r &amp;#61; b - A*x;\n    res &amp;#61; norm(r);\n\n    &lt;span class=\"hljs-comment\"&gt;% 检查是否满足误差限&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; res &amp;lt; epsilon\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;% 更新迭代步数&lt;/span&gt;\n    k &amp;#61; k &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;% 输出迭代步数&lt;/span&gt;\nfprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;松弛迭代法&amp;#xff08;omega &amp;#61; %f&amp;#xff09;&amp;#xff1a;迭代 %d 次\\n&amp;#39;&lt;/span&gt;, omega, k);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数值代数的问题，请友友们解答", ["设有线性方程组Ax=b， 其中", "A=", "10.9 1.2  2.1  0.9", "1.2  11.2 1.5  2.5", " 2.1  1.5   9.8  1.3", " 0.9  2.5  1.3 12.3", "B=", "-7", "5.3", "10.3", "24.6", "(1) 选取适当的松弛因子和初始向量,分别用 Jacobi 迭代，Gauss-Seidel 迭代和松弛迭代法（SOR）求解方程组Ax=b 使误差小于", "0.2*10^(-10)（写出详细求解过程）；", "(2)说明如何确保每种方法的误差在控制范围内;", "(3)使用上述三种方法求解该线性方程组时，给出求得误差在控制范", "围内的迭代步数."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考一下&amp;#xff1a;&lt;a href=\"https://ww2.mathworks.cn/help/signal/filter-design.html\"&gt;https://ww2.mathworks.cn/help/signal/filter-design.html&lt;/a&gt;&lt;br /&gt;如果对你有帮助&amp;#xff0c;可以点击我这个回答右上方的【采纳】按钮&amp;#xff0c;给我个采纳吗&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数字微分器的设计和实现", ["采用IV的FIR线性相位滤波器逼近数字微分器。", "阶数：60", "通带边界频率：0.2π rad", "阻带边界频率：0.3π rad"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;链表操作和文件读写。代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;#define _CRT_SECURE_NO_WARNINGS &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n\n#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;string.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\nstruct stuInfo\n{\n    char id[&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//数据成员&lt;/span&gt;\n    char &lt;span class=\"hljs-keyword\"&gt;name&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;];\n    float score;\n    struct stuInfo* next; &lt;span class=\"hljs-comment\"&gt;//指针成员&lt;/span&gt;\n};\n\n\n&lt;span class=\"hljs-comment\"&gt;//1.创建链表&lt;/span&gt;\nstruct stuInfo* CreateList()\n{\n    struct stuInfo* head &amp;#61; (struct stuInfo*)malloc(sizeof(struct stuInfo));\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    return head;\n}\n\n&lt;span class=\"hljs-comment\"&gt;//读文件&lt;/span&gt;\nvoid readFile(struct stuInfo* head)\n{\n    struct stuInfo* p, * t;\n    FILE* fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;stuinfo.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (fp &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开失败&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        return;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//获取链表尾节点&lt;/span&gt;\n    p &amp;#61; head;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;next)\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n\n    &lt;span class=\"hljs-comment\"&gt;//开始读文件&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!feof(fp))\n    {\n        t &amp;#61; (struct stuInfo*)malloc(sizeof(struct stuInfo));\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;t&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;t&lt;/span&gt;-&amp;gt;&lt;/span&gt;id[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fscanf&lt;/span&gt;(fp, &amp;#34;%s %s %f&amp;#34;, t-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;id&lt;/span&gt;,t-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;,&amp;amp;t-&amp;gt;&lt;/span&gt;score);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (strlen(t-&amp;gt;&lt;/span&gt;id) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            free(t);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; t;\n            p &amp;#61; t;\n        }\n    }\n    fclose(fp);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;文件读取成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n}\n\n\n&lt;span class=\"hljs-comment\"&gt;//3.插入&lt;/span&gt;\nvoid Insert(struct stuInfo* head)\n{\n    struct stuInfo* p, * t;\n    char pos[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };\n    t &amp;#61; (struct stuInfo*)malloc(sizeof(struct stuInfo));\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;t&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n  \n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入需要插入的信息&amp;#xff1a;ID  NAME  SCORE:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;scanf&lt;/span&gt;(&amp;#34;%s %s %f&amp;#34;, t-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;id&lt;/span&gt;, t-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;, &amp;amp;t-&amp;gt;&lt;/span&gt;score);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入插入位置&amp;#xff08;比如学号00005)&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;, pos);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (strcmp(p-&amp;gt;&lt;/span&gt;id, pos) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;t&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; t;\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;插入成功&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n            break;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;未找到该位置&amp;#xff0c;插入失败\\n&amp;#34;&lt;/span&gt;);\n}\n\n&lt;span class=\"hljs-comment\"&gt;//根据成绩排序&lt;/span&gt;\nvoid sortByScore(struct stuInfo* L)\n{\n    struct stuInfo* p, * tail, * q;\n    tail &amp;#61; NULL;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; ((L-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next) !&amp;#61; tail)\n    {\n        p &amp;#61; L;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; L-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; (q-&amp;gt;&lt;/span&gt;next !&amp;#61; tail)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;score&lt;/span&gt; &amp;gt; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;score) &lt;span class=\"hljs-comment\"&gt;//升序排列&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            }\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n        tail &amp;#61; q;\n    }\n\n}\n\n&lt;span class=\"hljs-comment\"&gt;//写文件&lt;/span&gt;\nvoid writefile(struct stuInfo* head)\n{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;struct&lt;/span&gt; stuInfo* p &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    FILE* fp &amp;#61; fopen(&lt;span class=\"hljs-string\"&gt;&amp;#34;score.txt&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#34;w&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;fprintf&lt;/span&gt;(fp, &amp;#34;%s %s %f\\n&amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;id&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;score);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n    }\n    fclose(fp);\n}\n\n&lt;span class=\"hljs-comment\"&gt;//显示链表&lt;/span&gt;\nvoid showLinst(struct stuInfo* head)\n{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;struct&lt;/span&gt; stuInfo* p &amp;#61; head-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p)\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%s %s %f\\n&amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;id&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;name&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;score);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n    }\n}\n\nint main()\n{\n    struct stuInfo* head &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    int opt &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    \n\n    &lt;span class=\"hljs-comment\"&gt;//1.创建链表&lt;/span&gt;\n    head &amp;#61; CreateList();\n\n    &lt;span class=\"hljs-comment\"&gt;//2.读文件&lt;/span&gt;\n    readFile(head);\n\n    &lt;span class=\"hljs-comment\"&gt;//showLinst(head); //显示列表&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;//3.插入&lt;/span&gt;\n    Insert(head);\n\n    &lt;span class=\"hljs-comment\"&gt;//4.排序&lt;/span&gt;\n    sortByScore(head);\n\n    &lt;span class=\"hljs-comment\"&gt;//5.写文件&lt;/span&gt;\n    writefile(head); \n\n    showLinst(head); &lt;span class=\"hljs-comment\"&gt;//显示列表&lt;/span&gt;\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["C语言：TXT文件读取到链表中进行操作，键盘插入节点后以新文件输出", ["现有结构体定义如下：", "struct stuInfo", "{", "    char id[12];            //数据成员", "    char name[15];", "    float score;", "    struct stuInfo *next;   //指针成员", "};", "任务及要求：", "（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；", "（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，信息如下；", "00001 张三 100", "00002 李四 99", "00003 王五 100", "00004 王六 89", "00005 江涛 98", "00006 陈琪 88", "00007 祁廷 91", "（3）接下来，利用键盘输入，动态开辟节点存储空间，将00008 赵四 88信息存在一个节点中，并插入到学号是‘00005’和‘00006’之间；", "（4）再接下来，利用直接插入排序，对链表继续升序排序；", "（5）将完整的线性链表信息从头到尾依次存储到磁盘某个路径下的“score.txt”文件中，存储格式和“stuinfo.txt”文件相同。", "（6）最终将“score.txt”的内容复制粘贴到实验报告的实验结果中。", "大一新生想问一下这个问题用CodeBlocks如何解决，急。谢谢大家"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;对于你的问题&amp;#xff0c;我的回答如下&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;要计算状态反馈阵K&amp;#xff0c;可以采用极点配置法&amp;#xff0c;其中包括以下步骤&amp;#xff1a;&lt;br /&gt;a. 确定系统的传递函数和期望闭环极点&amp;#xff1b;&lt;br /&gt;b. 计算系统的可控性矩阵和可观性矩阵&amp;#xff1b;&lt;br /&gt;c. 根据期望闭环极点和系统可控性矩阵&amp;#xff0c;求解状态反馈增益矩阵K。&lt;/li&gt;&lt;li&gt;在MATLAB中&amp;#xff0c;可以使用place函数求解状态反馈增益矩阵K&amp;#xff0c;其代码格式如下&amp;#xff1a;&lt;br /&gt;K &amp;#61; place(A, B, p)&amp;#xff1b;&lt;br /&gt;其中&amp;#xff0c;A和B分别为系统的状态空间矩阵&amp;#xff0c;p为期望闭环极点的向量。&lt;/li&gt;&lt;li&gt;要仿真闭环系统的阶跃响应曲线图&amp;#xff0c;可以使用MATLAB中的step函数&amp;#xff0c;其代码格式如下&amp;#xff1a;&lt;br /&gt;step(sys)&amp;#xff1b;&lt;br /&gt;其中&amp;#xff0c;sys为闭环系统的传递函数或状态空间矩阵。该函数将自动绘制系统的阶跃响应曲线图。&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["先进控制与MATLAB", ["已知连续时间线性时不变系统和期望闭环极点：1.如何计算状态反馈阵K？2.如何利用MATLAB求取反馈增益K？3.如何仿真闭环系统的阶跃响应曲线图？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;提示啥错误&amp;#xff1f;&lt;br /&gt;你的name 输入了啥名字&amp;#xff0c; 应该是要带png 后缀的吧&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matplotlip 绘图后，相以变量作为名称保存图片", ["问题遇到的现象和发生背景", "\n", "图片无法以变量的名称进行保存", "\n", "问题相关代码，请勿粘贴截图", "\n", "def Linechart():", "    while True:", "        name = input('请输入最终的保存文件名称，例如：2022 3 1')", "        x = [-8, -7, -6, -5, -4, -3, -2, -1]", "        yg = input('纵坐标的数据列表：').split(',')  # 通过input函数来输入列表", "        y = [int(yg[i]) for i in range(len(yg))]", "        plt.scatter(x, y)", "        plt.show()", "        answer = input('是否进行线性拟合？y/n')", "        if answer == 'y':", "            xl = int(input('请输入线性范围横坐标左端点'))", "            xr = int(input('请输入线性范围横坐标右端点'))", "            x0 = x[xl:xr]", "            yl = int(input('请输入线性范围纵坐标左端点'))", "            yr = int(input('请输入线性范围纵坐标右端点'))", "            y0 = y[yl:yr]", "            plt.scatter(x[:], y[:], 3, 'red')", "            A1, B1 = optimize.curve_fit(f_1, x0, y0)[0]", "            x1 = np.arange(xl, xr, 0.01)", "            y1 = A1 * x1 + B1", "            plt.plot(x1, y1, 'blue')", "            print(A1)", "            print(B1)", "            plt.title(\" \")", "            plt.xlabel('log')", "            plt.ylabel('Mt/g')", "            figure_save_path = 'file_fig'", "            if not os.path.exists(figure_save_path):", "                os.makedirs(figure_save_path)", "                plt.savefig(os.path.join(figure_save_path, name))", "            plt.show()", "            answer1=input('是否继续进行折线图绘制？y/n')", "            if answer1=='y':", "                continue", "            else:", "                break", "\n", "    ", "else", ":\n        ", "break", "\n", "\n", "运行结果及报错内容", "\n", "正常可以绘制图片，但是保存文件件的位置并没有保存的图片", "\n", "我的解答思路和尝试过的方法", "\n", "我想要达到的结果"]], "Tag": "算法设计"}
{"Answer": "没错，只有13 27存在冲突，所以都是7/6", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构平均查找长度问题", ["设散列表的长度为8，散列函数H(k)=k mod 7，初始记录关键字序列为(25，31，8，27，13，68)，要求分别计算出用线性探测法和链地址法作为解决冲突方法的平均查找长度。", "\n答案分别为7/6 和 4/3", "\n但是链地址法算出来觉得也是7/6，求解..."]], "Tag": "算法设计"}
{"Answer": "第一步  将function yy=Lagrange(x,y,xi)m=length(x);n=length(y);if m ~= n , error('向量x与y的长度必须一致'); end; s=0;for i=1 : n    z=ones(1,length(xi));    for j=1 : n        if j ~= i            z=z.*(xi-x(j))./(x(i)-x(j));        end    end    s=s+z*y(i);endyy=s;保存为M文件。（文件→新建→M文件）第二步将x=[0.5610,0.56280,0.56401,0.56521];y=[0.82741,0.82659,0.82577,0.82495];xi=[0.5625,0.5635,0.5645];yi=Lagrange(x,y,xi)粘贴至（命令窗口）。", "Konwledge_Point": "线性规划和规约", "Question": ["用matlab进行拉格朗日插值还原曲线，和分段插值，详细代码包括测试结果", ["还原图1.4(绘制Lagrange 10次插值曲线和原函数曲线)，并加上图1.5中的分段线性差值曲线。（三条曲线绘制在同一张Figure里面，注意用不同的线形区分）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;超出我们目前的服务范围&amp;#xff0c;暂时无法为您解答。&lt;/p&gt;\n&lt;p&gt;问答VIP目前服务范围为 &amp;#xff1a;Python、Java、MySQL、Redis、MongoDB、HBase、Zookeeper、Kafka、Linux领域专业问题解答&amp;#xff0c;为您提供解决问题的思路和指导。 &lt;strong&gt;不提供源码代写、项目文档代写、论文代写、作业代写、安装包资源发送或安装指导等服务。&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;本次提问扣除的有问必答次数&amp;#xff0c;已经为您补发到账户&amp;#xff0c;我们后续会持续优化&amp;#xff0c;扩大我们的服务范围&amp;#xff0c;为您带来更好地服务。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python多元回归模型的预测及检验", ["现在已经根据一段时间的数据构造出了线性回归模型，想将下一段时间的数据带入到这个模型中进行检验，并画出预测值和实际值对比的散点图，应该如何实现"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&amp;gt;&amp;gt;&amp;gt; import numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&amp;gt;&amp;gt;&amp;gt; import matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n&amp;gt;&amp;gt;&amp;gt; x &amp;#61; np.linspace(-np.pi, np.pi, &lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;)\n&amp;gt;&amp;gt;&amp;gt; plt.plot(x, np.sin(x))\n&lt;span class=\"hljs-meta\"&gt;[&amp;lt;matplotlib.lines.Line2D object at 0x000002BFFC916E88&amp;gt;]&lt;/span&gt;\n&amp;gt;&amp;gt;&amp;gt; plt.plot(x, np.cos(x))\n&lt;span class=\"hljs-meta\"&gt;[&amp;lt;matplotlib.lines.Line2D object at 0x000002BFF9BF1208&amp;gt;]&lt;/span&gt;\n&amp;gt;&amp;gt;&amp;gt; plt.show()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/574479738536197.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python 数据分析与可视化基础题", [" xX是从-pi到pi线性拆分1000个点组成的 维数组， sinx是x数组的正弦值， Cosx是x数组的余弦值， 在同一幅图中分别绘制出x的正弦曲线和余弦曲线。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;从报错原因上看是维度不一致&amp;#xff0c;可以进行以下修改&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;xdata&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;ydata&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;80&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;fun&lt;/span&gt;&amp;#61;&amp;#64;(a, x)x.^(a (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) .*x&amp;#43;a (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))./(a (&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;).*(a(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;).^(a (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) .*x&amp;#43;a (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))) .*gamma (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;a (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) .*x&amp;#43;a(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))) ;\n&lt;span class=\"hljs-attribute\"&gt;x0&lt;/span&gt;&amp;#61;[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;400&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;];\n&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt;&amp;#61;lsqcurvefit(fun, x0, xdata, ydata)\n&lt;span class=\"hljs-attribute\"&gt;ydata&lt;/span&gt;&amp;#61;fun(A, xdata) \n&lt;span class=\"hljs-attribute\"&gt;x&lt;/span&gt;&amp;#61;linspace(xdata(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),xdata(end)) ;\n&lt;span class=\"hljs-attribute\"&gt;y&lt;/span&gt;&amp;#61;fun (A, x) ;\n&lt;span class=\"hljs-attribute\"&gt;plot&lt;/span&gt;(xdata,ydata, &amp;#39;o&amp;#39;,xdata,ydata,&amp;#39;*&amp;#39;,x,y)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果为&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;A&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n   -&lt;span class=\"hljs-number\"&gt;0.3489&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;0.9364&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;399.9999&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;199.9995&lt;/span&gt;\n\n\n&lt;span class=\"hljs-attribute\"&gt;ydata&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;\n\n    &lt;span class=\"hljs-number\"&gt;0.0001&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;0.0009&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;0.0037&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;0.0092&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;0.0103&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/177342424676145.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;可见能够正常运行&lt;br /&gt;如果问题得到解决请点 采纳~~&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["最小二乘法拟合未知参数", ["想用matlab最小二乘法拟合非线性方程的4个未知参数，并画出原始数据和拟合曲线的图像。一直运行错误不知道怎么修改，错误使用  * 内部矩阵维度必须一致。", "\n", "请指点~谢谢！函数如图片，a,b,c,d未知。"]], "Tag": "算法设计"}
{"Answer": "怎么会呢，都支持啊，只是py3在字符串类上统一了，其他数据结构没什么变化呀", "Konwledge_Point": "线性规划和规约", "Question": ["python3里边的解构支持什么数据类型", ["如:", "\n    lst = range(5)", "\n        x,*y=lst", "\n        x的值为0", "\n        y的值为[1,2,3,4]", "\n\n", "请问python3里边的解构是不是只支持线性结构的数据类型(列表等)，不支持集合和字典"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;使用 Matplotlib 库时可以使用 plt.xlim() 和 plt.ylim() 函数指定x轴和y轴的范围&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;plt.xlim&lt;span class=\"hljs-comment\"&gt;(xmin, xmax)&lt;/span&gt;\nplt.ylim&lt;span class=\"hljs-comment\"&gt;(ymin, ymax)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python制图时，如何固定坐标？", ["就是说制图的时候坐标系老是变化，随着输出的不同，y坐标老是在’500，-200‘和’500，-300‘间反复横跳，能不能把坐标轴的范围固定，只让线性回归后的直线自己动。"]], "Tag": "算法设计"}
{"Answer": "struct Tool\r\n{\r\nint 编号;\r\nchar 名称[100];\r\n...\r\n};\r\nstruct 记录\r\n{\r\nTool value;\r\nTool * next;\r\n};\r\n前者代表某一项，后者是链表，把它们串起来。", "Konwledge_Point": "线性规划和规约", "Question": ["C语言编程题目——创建结构体和链表", ["希望得到讲解", "\n\n", "1）定义一个结构体(struct Tool)表示工具，包括：工具编号、名称、价格、重量、存放位置等信息；", "\n\n", "2）要求定义一个线性单链表(struct ToolList)存储工具档案记录。", "\n\n", "两者创建有什么区别吗？希望得到创建源码，谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在MATLAB中&amp;#xff0c;可以使用fsolve函数来求解方程。首先&amp;#xff0c;需要定义一个函数来表示给定方程&amp;#xff0c;然后传递给fsolve。 例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;function&lt;/span&gt; F &amp;#61; myeqn(alpha)\n&lt;span class=\"hljs-attribute\"&gt;L&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;*tan(alpha)*L - &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*((&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;)*L^&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;83&lt;/span&gt;)/(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*cos(alpha)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) - (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;96&lt;/span&gt;*L^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)/(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;*cos(alpha)^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n&lt;span class=\"hljs-attribute\"&gt;F&lt;/span&gt; &amp;#61;&lt;span class=\"hljs-meta\"&gt; [F];\nend\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;接下来&amp;#xff0c;可以使用fsolve函数来求解方程&amp;#xff0c;并将初始猜测值作为参数传递给它。例如&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-attr\"&gt;alpha0&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;alpha&lt;/span&gt; &amp;#61; fsolve(&amp;#64;myeqn,alpha0)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行这段代码&amp;#xff0c;fsolve将返回方程的解&amp;#xff0c;并将其存储在alpha变量中。&lt;/p&gt;\n&lt;p&gt;注意&amp;#xff0c;在这个方程中&amp;#xff0c; L 是未知量&amp;#xff0c;需要求解。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何用matlab求解复杂方程", ["具体方程如下：", "虽然前几天通过问问题了解了可以使用 fsolve 函数和 fzero 函数求解非线性方程，但是我查的资料中方程都是标准的y=ax..这种形式，但是我要求的这个方程很复杂，希望有了解的朋友可以说一下思路或指导一下"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;loss &amp;#61; (1/2) * (a - y)**2&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python-lossfunction", ["在python线性题中，loss fucntion 不是采用 cross entropy 而是预测值 a和真值 y 的差的平方 (又L2 loss):(a-y)2/1²，请用 python 代码(运用符号 a,y,+,，*，/ 等)写出上式的算式"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;线性拉升直接乘上去就是了&amp;#xff0c;为什么要访问元素&amp;#xff1f;&lt;br /&gt;img1&amp;#61;img*2&amp;#43;5;&lt;br /&gt;这样就是相当于把每个像素点的值x2&amp;#43;5&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Opencv处理CIELab空间图像通道的问题？", ["将图片从RGB空间转到Lab空间之后，如何对a通道和b通道的直方图进行线性拉伸处理？由于a通道取值为-128到127，所以采用img.at(row,col)的方式访问像素点是不是不对呀？应该怎么访问与操作？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;注意力机制在 RNN 中的应用是用来解决 RNN 在处理长序列时会遗忘早期信息的问题。在 SimpleRNN&amp;#43;attention 模型中&amp;#xff0c;注意力机制通过计算每个时间步的输出和编码器的最终输出之间的相似度来分配权重。这样&amp;#xff0c;在解码器阶段&amp;#xff0c;可以在每一步选择一个最相似的编码器输出来进行处理。&lt;/p&gt;\n&lt;p&gt;具体来说&amp;#xff0c;对于每一个时间步 i&amp;#xff0c;我们将解码器的隐藏状态 hi 与编码器的最终输出 hm 进行线性变换&amp;#xff0c;再通过 softmax 函数得到每个时间步的注意力权重 ai&amp;#xff0c;即 ai &amp;#61; softmax(hi * W * hm)。这样&amp;#xff0c;早期时间步的 hi 也能够通过 ai 的高权重得到重视&amp;#xff0c;从而解决了 RNN 处理长序列时遗忘早期信息的问题。&lt;/p&gt;\n&lt;p&gt;关于解码器阶段&amp;#xff0c;在解码器阶段&amp;#xff0c;我们使用起始符后的第一个字来预测第一个输出&amp;#xff0c;这个输出通常是在预训练语言模型中获取的&amp;#xff0c;然后第一步的输出将被用来预测第二个输出&amp;#xff0c;以此类推&amp;#xff0c;直到预测出所有的目标序列。&lt;/p&gt;\n&lt;p&gt;总的来说, Attention 机制将信息从编码器传递给解码器的过程中&amp;#xff0c;通过计算每一步解码器的隐藏状态与编码器最终输出之间的相似度&amp;#xff0c;来确定在当前时间步中对编码器输出的关注。这样&amp;#xff0c;在解码器阶段&amp;#xff0c;每一步都可以从编码器输出中选择最相关的信息来进行处理&amp;#xff0c;这使得我们可以避免 RNN 网络在处理长序列时的遗忘问题。比如说&amp;#xff0c;在翻译模型中&amp;#xff0c;编码器接收输入的源语句 &amp;#34;I have a cat&amp;#34; 并产生一个隐藏状态序列&amp;#xff0c;解码器接着使用这个隐藏状态序列来生成目标语句 &amp;#34;Je ai un chat&amp;#34;。在解码器生成目标语句的过程中&amp;#xff0c;它可能会在生成 &amp;#34;Je&amp;#34; 的时候主要关注 &amp;#34;I&amp;#34; 和 &amp;#34;have&amp;#34;&amp;#xff0c;而在生成 &amp;#34;ai&amp;#34; 的时候主要关注 &amp;#34;cat&amp;#34;。这样可以解决解码器在生成每一个目标词时&amp;#xff0c;都能根据编码器的输出来关注那些重要的源语言词汇。&lt;/p&gt;\n&lt;p&gt;当然&amp;#xff0c;这仅仅是一个简单的例子&amp;#xff0c;在实际应用中&amp;#xff0c;注意力机制还可以用于语音识别&amp;#xff0c;图像分类等其他领域。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["SimpleRNN+attention中注意力α的原理？", ["就是说，α是由s0和hi计算出来的，s0就是编码器的最后一个输出hm，那样的话简单rnn的最后的输出不是会遗忘早先时候的数据么？那这个遗忘了数据的hm去和早先时候的hi线性变换后相乘，乘出来的值有意义么？还有，s0就是hm的话，那和hm相乘的时候不就会获得最高的注意力么？是怎么在decoder中推测出起始符后的第一个字的？"]], "Tag": "算法设计"}
{"Answer": "解决方案如下图所示，IntelliJ IDEA 2019.2.2\r\n![图片说明](https://img-ask.csdn.net/upload/201911/15/1573804567_307159.jpg)", "Konwledge_Point": "线性规划和规约", "Question": ["intellij idea怎么创建文件夹？", ["\n\n", "\n简单地说，我想创建com.test01这个文件夹，然后在下面分别创建1和2这两个文件夹。但是它创建出来是上图这样的，无论怎么创建它都不会分级，而是线性地往下创建", "\n请问大神要怎么办呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;你可以参考下这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/qq_41410799/article/details/95042804\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;用梯度下降算法解决线性回归问题&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于梯度下降法的问题", ["有以下数据：", "\n", "\n", "如果我们使用", "梯度下降算法", "来最小化线性回归的代价函数，那么前三次迭代的", "θ值", "和", "代价(cost)值", "是多少?（可以的话写出解答的全流程）", "假设", "初始θ值为[1,0.5]T", "，", "学习率(learning rate)α为0.1", "。"]], "Tag": "算法设计"}
{"Answer": "N年以前的autocad可以导出一种文本格式，另存为就可以。但是现在已经忘记是什么扩展名了。从这种文件中可以看出矢量图的格式。我们那个时候做GIS，将autocad文件生成我们自己的gis图形文件。你可以试试，这个功能应该还保留着，分析这个文本文件当然是很艰苦的事情，但是可以从文档中找到一些提示。那时候我们做成了，可惜这个项目因为架构的原因搁浅了。\r\n楼主的这个问题使我想起了当年编程的时候...", "Konwledge_Point": "线性规划和规约", "Question": ["AutoCAD怎样导出矢量图形数据", ["具体说明如下：", "\n\n", "使用AutoCAD绘制的线性地图（类似googlemap的样子），将其中的图形数据读出，", "\n生成指定的矢量图形格式。", "\n\n", "然后导出的矢量图形用于二次开发，最后在web页面中显示图形输出。", "\n\n", "望详解！", "\n\n", "[b]问题补充：[/b]", "\n具体说明如下：", "\n\n", "使用AutoCAD绘制的线性地图（类似googlemap的样子），将其中的图形数据读出，", "\n生成指定的矢量图形格式。", "\n\n", "然后导出的矢量图形用于二次开发，最后在web页面中显示图形输出。", "\n\n", "望详解！", "\n\n", "主要是用于web的矢量图形格式，理想格式是svg。", "\n目前发现一国外转换工具，但注册费很贵，求开源方案"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/lwgkzl/article/details/80948548", "Konwledge_Point": "线性规划和规约", "Question": ["怎么用python填充缺失值？", ["我建立了一个图中的pm10和pm25的线性方程y=kx+b,y是pm10，x是pm25，请问怎么用python去填充，求具体代码，我还没学过python（只填充空值，原有数据不改变）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是的。。。数据结构就那么几种&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Java编程算法和数据结构?", ["算法：解决具体问题所需要的解决方法。执行效率最快的最优算法。时间复杂度。输入，输出，有穷性，确定性，可行性。冒泡排序，二叉树遍历，最长回文，二分查找，指针，链表等，堆栈，队列等。力扣，codewar，算法导论。", "数据结构：逻辑结构：集合、线性、树形、图形结构，物理结构：顺序、链式存储结构。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是的&amp;#xff0c;在拟合gamlss模型前&amp;#xff0c;应当先对响应变量进行Box-Cox转换&amp;#xff0c;以保证拟合模型的准确性。如果残差仍然不服从正态分布&amp;#xff0c;那么可以考虑使用family&amp;#61;BCT/BCCG/BCPE&amp;#xff0c;这些模型可以拟合非正态分布的响应变量。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["拟合gamlss模型", ["#拟合gamlss时数据不满足正态分布，在选择family=BCT/BCCG/BCPE前，必须先对响应变量进行box-cox转换之后才可以吗？", "#响应变量y和解释变量x之间拟合线性回归，残差的直方图接近正态分布，偏度为0.036，box转换后残差偏度为0,025，逆转换后响应变量仍然不服从正态分布"]], "Tag": "算法设计"}
{"Answer": "一种全同态加密的安全内积计算方案\r\nhttp://www.wanfangdata.com.cn.wust.dr2am.cn/details/detail.do?_type=perio&amp;id=dzkjdxxb201605017", "Konwledge_Point": "线性规划和规约", "Question": ["有关密文检索排序问题", ["利用线性索引结构进行密文检索并排序时，请问除了安全的KNN算法还有什么方法能让加密后的内积与加密前计算的内积相等？", "\n       在研究密文检索时，索引和陷门都是二进制索引向量，希望在公有云服务器中的计算密文环境下索引向量和陷门向量的内积，除了使用可逆矩阵加密的那种knn算法，还有什么方法可以达到要求呢？", "\n        或许也不需要密文计算的内积与加密前计算的内积相等，只要能比较大小就行，在服务器端能够实现排序"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.cnblogs.com/johnnyzhao/p/15414850.html\" id=\"textarea_1661321229807_1661321240810_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/johnnyzhao/p/15414850.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Rust是如何实现内存安全的，与其他编程语言有何不同？比如C/C++/Java…", ["当谈到内存管理，尤其是堆内存时，我们常希望编程语言：1.不需要内存时就尽快释放，且不增加资源消耗；2.对已释放数据的引用进行自动维护，否则极易发生程序崩溃和安全问题。", "\n", "编程语言往往通过这些方式确保内存安全，比如：显式内存释放（C/C++）；自动或隐式内存释放（Java/Python/C#）；基于区域的内存管理；线性或特殊类型系统。", "\n", "那么，Rust是如何实现内存安全的呢？和其他语言有何不同？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Python开发环境、数据挖掘与统计分析等问题可以在本模块提问&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Pandas高级数据分析快速入门之五——机器学习特征工程篇", ["Pandas高级数据分析快速入门，包括：Python开发环境篇、基础篇、数据挖掘与统计分析篇、数据可视化篇、机器学习特征工程篇、机器学习预测分析篇。本篇为第五篇，通过机器学习方法和技术增强特征，使用线性回归算斜率、聚类数据密度算正常状态，以及相关系数等。", "\n\n", "https://xiaoyw.blog.csdn.net/article/details/120094548"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;一、绘制该DataFrame折线图&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n\ndata &amp;#61; {\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]\n        }\ndf &amp;#61; pd.DataFrame(data, index&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;four&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;five&amp;#39;&lt;/span&gt;], columns&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;])\n\ny1&amp;#61;df[&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;] # 取所有行的第&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;列数据为y1\ny2&amp;#61;df[&lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;] # 去所有行的第&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;列数据为y2\nx&amp;#61;np.arange(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) # x为[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;]\nax&amp;#61;plt.subplot(&lt;span class=\"hljs-number\"&gt;111&lt;/span&gt;) # &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;行&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;列的一张子图&amp;#xff0c;即只有一张图。三个&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;分别表示&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;行、&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;列、第&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;个\nax.plot(x,y1,&lt;span class=\"hljs-string\"&gt;&amp;#39;bD-&amp;#39;&lt;/span&gt;) # 对y1的数据作图&amp;#xff0c;b表示蓝色&amp;#xff0c;D表示菱形&amp;#xff0c;-表示实直线\nax.plot(x,y2,&lt;span class=\"hljs-string\"&gt;&amp;#39;r^--&amp;#39;&lt;/span&gt;) # 对y2的数据作图&amp;#xff0c;r表示红色&amp;#xff0c;^表示三角形&amp;#xff0c;--表示破折线\nplt.show()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/965456254256182.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;二、绘制柱状图和堆积柱状图&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; plt\n\ndata &amp;#61; {\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],\n        &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;: [&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]\n        }\ndf &amp;#61; pd.DataFrame(data, index&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;four&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;five&amp;#39;&lt;/span&gt;], columns&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;])\n#\ny1&amp;#61;df[&lt;span class=\"hljs-string\"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;] # 取所有行的第&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;列数据为y1\nx&amp;#61;np.arange(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) # x为[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;]\n# 绘制条形图\nplt.bar(x, y1,  width&amp;#61;&lt;span class=\"hljs-number\"&gt;0.5&lt;/span&gt;)\nplt.show()\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/875734354256117.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;三、绘制散点图&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["绘制DataFrame折线图及其他", ["一（1）建立DataFrame，要求行标签为one,two,three,four,five字符串，列标签为A,B,C字符串，值为标准正态分布", "（2）绘制该DataFrame折线图", "二1）建立DataFrame，要求行标签为one,two,three,four,five字符串，列标签为A,B,C字符串，值为均匀分布", "（2）绘制柱状图和堆积柱状图", "三（1）建立DataFrame，要求列标签为A,B,C字符串，值是形状为（50，3）的均匀分布", "（2）以第一列值为x，第三列值为y，绘制散点图并拟合出一条线性回归线", "想知道如何撰写"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/000440505736188.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport csv\n\nbj&amp;#61;[&amp;#39;北京&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2230&lt;/span&gt;0.00&amp;#39; ,&amp;#39;&lt;span class=\"hljs-number\"&gt;2848&lt;/span&gt;9.00&amp;#39;, &amp;#39;&lt;span class=\"hljs-number\"&gt;3411&lt;/span&gt;7.00&amp;#39;, &amp;#39;&lt;span class=\"hljs-number\"&gt;3742&lt;/span&gt;0.19&amp;#39;]&lt;span class=\"hljs-meta\"&gt;#北京价格&lt;/span&gt;\nsh&amp;#61;[&amp;#39;上海&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2150&lt;/span&gt;1.00&amp;#39; ,&amp;#39;&lt;span class=\"hljs-number\"&gt;2591&lt;/span&gt;0.00&amp;#39;, &amp;#39;&lt;span class=\"hljs-number\"&gt;2486&lt;/span&gt;6.00&amp;#39;, &amp;#39;&lt;span class=\"hljs-number\"&gt;2898&lt;/span&gt;1.11&amp;#39;]&lt;span class=\"hljs-meta\"&gt;#上海价格&lt;/span&gt;\nnj&amp;#61;[&amp;#39;南京&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1126&lt;/span&gt;0.00&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1788&lt;/span&gt;4.00&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1525&lt;/span&gt;9.00&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1970&lt;/span&gt;8.33&amp;#39;]&lt;span class=\"hljs-meta\"&gt;#南京价格&lt;/span&gt;\nhz&amp;#61;[&amp;#39;杭州&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1474&lt;/span&gt;8.00&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1621&lt;/span&gt;1.00&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2122&lt;/span&gt;5.00&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2436&lt;/span&gt;0.20&amp;#39;]&lt;span class=\"hljs-meta\"&gt;#杭州价格&lt;/span&gt;\nqd&amp;#61;[&amp;#39;青岛&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;8437.00&lt;/span&gt;&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;8997.00&lt;/span&gt;&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1005&lt;/span&gt;2.00&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;1237&lt;/span&gt;3.44&amp;#39;]&lt;span class=\"hljs-meta\"&gt;#青岛价格&lt;/span&gt;\nheaders&amp;#61;[&amp;#39;城市&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2015&lt;/span&gt;年&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2016&lt;/span&gt;年&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2017&lt;/span&gt;年&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2018&lt;/span&gt;年&amp;#39;,&amp;#39;&lt;span class=\"hljs-number\"&gt;2019&lt;/span&gt;年&amp;#39;]&lt;span class=\"hljs-meta\"&gt;#csv的第一行标签&lt;/span&gt;\n\ndef huigui(t):&lt;span class=\"hljs-meta\"&gt;#回归函数 t是城市价格列表&lt;/span&gt;\n    t&amp;#61;[float(i) for i in t[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:]]&lt;span class=\"hljs-meta\"&gt;#把城市列表中的城市名排除&amp;#xff0c;只留价格&lt;/span&gt;\n    b&amp;#61;np.mat(t)&lt;span class=\"hljs-meta\"&gt;#把价格列表转为矩阵&lt;/span&gt;\n    b&amp;#61;b.T&lt;span class=\"hljs-meta\"&gt;#矩阵转置&lt;/span&gt;\n    a&amp;#61;[[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;],[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]]&lt;span class=\"hljs-meta\"&gt;#坐标列表&lt;/span&gt;\n    a&amp;#61;np.mat(a)&lt;span class=\"hljs-meta\"&gt;#坐标列表转矩阵&lt;/span&gt;\n    re&amp;#61;(a.T*a).I*a.T*b&lt;span class=\"hljs-meta\"&gt;#用矩阵计算来获得回归方程的斜率和偏移 &lt;/span&gt;\n    re&amp;#61;re[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]*&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;&amp;#43;re[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;span class=\"hljs-meta\"&gt;#用得到的斜率和偏移计算2019年&amp;#xff08;第5年&amp;#xff09;的价格&lt;/span&gt;\n    return round(np.array(re)[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;],&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-meta\"&gt;#返回计算的价格值&lt;/span&gt;\n\nbj.append(huigui(bj))&lt;span class=\"hljs-meta\"&gt;#调用函数计算北京价格&amp;#xff0c;并把结果加到北京价格列表&lt;/span&gt;\nsh.append(huigui(sh))&lt;span class=\"hljs-meta\"&gt;#调用函数计算上海价格&amp;#xff0c;并把结果加到上海价格列表&lt;/span&gt;\nnj.append(huigui(nj))&lt;span class=\"hljs-meta\"&gt;#调用函数计算南京价格&amp;#xff0c;并把结果加到南京价格列表&lt;/span&gt;\nhz.append(huigui(hz))&lt;span class=\"hljs-meta\"&gt;#调用函数计算杭州价格&amp;#xff0c;并把结果加到杭州价格列表&lt;/span&gt;\nqd.append(huigui(qd))&lt;span class=\"hljs-meta\"&gt;#调用函数计算青岛价格&amp;#xff0c;并把结果加到青岛价格列表&lt;/span&gt;\n    \n\n\nwith open(&amp;#39;price&lt;span class=\"hljs-number\"&gt;2019&lt;/span&gt;.csv&amp;#39;,&amp;#39;w&amp;#39;)as f:&lt;span class=\"hljs-meta\"&gt;#创建csv文件&lt;/span&gt;\n    f_csv &amp;#61; csv.writer(f)&lt;span class=\"hljs-meta\"&gt;#创建csv对象以写入csv文件&lt;/span&gt;\n    f_csv.writerow(headers)&lt;span class=\"hljs-meta\"&gt;#向csv写入第一行标签&lt;/span&gt;\n    f_csv.writerow(bj)&lt;span class=\"hljs-meta\"&gt;#写入北京价格&lt;/span&gt;\n    f_csv.writerow(sh)&lt;span class=\"hljs-meta\"&gt;#写入上海价格&lt;/span&gt;\n    f_csv.writerow(nj)&lt;span class=\"hljs-meta\"&gt;#写入南京价格&lt;/span&gt;\n    f_csv.writerow(hz)&lt;span class=\"hljs-meta\"&gt;#写入杭州价格&lt;/span&gt;\n    f_csv.writerow(qd)&lt;span class=\"hljs-meta\"&gt;#写入青岛价格&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["25一题，Python 类型的，不怎么会写", ["现有“price2018.txt”文件，存储了2015年至2018年主要城市住宅商品房平均销售价格(元/平方米)数据。编写程序，将数据整理成二维表格形式，并采用线性回归模型估算2019年商品房平均销售价格，将读取二维数据和预测数据保存到”price2019.csv”文件中。（写点注释求求大佬）", "https://share.weiyun.com/AX0yMUUs"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;原始数据—&amp;gt;滑动窗口L&amp;#61;10截取原始数据得到N个子序列—&amp;gt;线性拟合—&amp;gt;标准化斜率—&amp;gt;子序列符号化处理—&amp;gt;Apriori算法&lt;br /&gt;我觉得这个说的挺清楚的啊&amp;#xff0c;关联算法本身解决的是各个商品的关联度&amp;#xff0c;其实就是分类变量的关联关系。所以这里不是转成布尔值&amp;#xff0c;符号化处理是转成了分类量。所以这里的处理逻辑就是将原始数据按滑动窗口分成N个子序列&amp;#xff08;N个商品&amp;#xff09;&amp;#xff0c;线性拟合得出斜率&amp;#xff08;斜率是连续值通过符号化处理转成分类变量&amp;#xff0c;相同的符号比如1a,1b ,就认为是同一个商品&amp;#xff09;&amp;#xff0c;然后就是典型的关联算法处理逻辑了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["两列时间序列数据怎么用apriori算法做关联分析呢？(语言-python)", ["问题遇到的现象和发生背景", "\n", "就是两列时间序列数据怎么用apriori算法做关联分析呢？比如水位一列数据 位移一列数据 那怎么得出水位和位移这两个效应量关联度吗？", "\n", "问题相关代码，请勿粘贴截图", "\n", "Python 编程实现", "\n", "运行结果及报错内容", "\n", "我的解答思路和尝试过的方法", "\n", "关联规则所使用的的Apriori算法要求输入的数据应为布尔类型吗？所以数值类型就要符号化？", "看到一篇文献是这样做的：原始数据—>滑动窗口L=10截取原始数据得到N个子序列—>线性拟合—>标准化斜率—>子序列符号化处理—>Apriori算法", "搞不明白文中说从由每段斜率组成的事务集中找出频繁项集是什么意思？", "\n", "\n", "我想要达到的结果", "\n", "输出水位与位移这两监测效应量的关联性"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/m0_45426399/article/details/110528737\" id=\"textarea_1668231957789_1668232023375_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;使用svm对手写体数字图片进行分类_Walt_像道光的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;import pandas as pdfrom sklearn import svmimport joblibprint(“1.载入训练数据&amp;#xff0c;对训练数据进行标准化”)train_data &amp;#61; pd.read_csv (‘dataset/digits_training.csv’)print(data)分类属性yTrain &amp;#61; train_data.values[:,0]特征属性xTrain &amp;#61; train_data.values[:,1:]标准化函数def normalization(X&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/m0_45426399/article/details/110528737&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;这是预训练好的模型&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["使用SVM对手写体数字图片分类，python报错", ["使用SVM对手写体数字图片分类", "\n", "import", " pandas ", "as", " pd\n", "from", " sklearn ", "import", " svm\n", "import", " joblib\n", "print", "(", "\"1.载入训练数据，对训练数据进行标准化\"", ")\ntrain_data = pd.read_csv (", "'digits_training.csv'", ")\n", "# print(data)", "\n", "# 分类属性", "\nyTrain = train_data.values[:,", "0", "]\n", "# 特征属性", "\nxTrain = train_data.values[:,", "1", ":]\n\n", "# 标准化函数", "\n", "def", " ", "normalization", "(", "X", "):\n    ", "return", " (X-X.mean())/X.", "max", "()\n", "# print(\"xTrain:{0}\".format(xTrain.shape))", "\n", "# 对特征属性进行标准化处理", "\nxTrain = normalization(xTrain)\n", "# print(xTrain.shape[1])", "\n", "# print(xTrain.shape)", "\n", "print", "(", "\"训练数据：\"", ",xTrain.shape[", "0", "],", "\"条\"", ")\n\n", "# 构建模型", "\n", "'''\n默认核函数是 ‘rbf’-->就是radial basis function keranl (径向基核函数)\n模型准确率约为0.89\n使用线性核函数（linear）构建模型，准确率在0.908左右\n线性核函数主要用于线性可分的情况\n在特征数量相对于样本数量非常多的时候，适合采用线性核函数\n'''", "\nmodel = svm.SVC(decision_function_shape=", "'ovo'", ",kernel=", "'linear'", ")\n", "print", "(", "\"2.训练模型……\"", ")\nmodel.fit(xTrain,yTrain)\n", "print", "(", "\"3.保存模型……\"", ")\njoblib.dump(model,", "\"model/svm_classifier_model1.m\"", ")\n", "print", "(", "\"4.加载测试数据，对测试数据进行标准化……\"", ")\ntest_data = pd.read_csv(", "\"digits_testing.csv\"", ")\nyTest = test_data.values[:,", "0", "]\nxTest = test_data.values[:,", "1", ":]\n", "print", "(", "\"测试数据：\"", ",xTest.shape[", "0", "],", "\"条\"", ")\nxTest = normalization(xTest)\n", "print", "(", "\"5.加载测试好的模型，进行预测……\"", ")\nmodel = joblib.load(", "\"model/svm_classifier_model1.m\"", ")\nresult =model.predict(xTest)\n", "print", "(", "\"预测错误数据：\"", ",(result!=yTest).", "sum", "())\n", "print", "(", "\"测试数据正确率：\"", ",(result==yTest).", "sum", "()/", "len", "(yTest))\n", "print", "(", "\"模型内构建正确率估计：\"", ",model.score(xTest,yTest))\n", "\n", "报错如下：", "文件夹里的数据集：", "\n", "'model/svm_classifier_model1.m'这个文件是干嘛的呀？"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/Olaking/article/details/43199003?locationNum=15", "Konwledge_Point": "线性规划和规约", "Question": ["如何解决numpy.ndarray' object is not callable", ["我用python进行非线性规划时报错numpy.ndarray' object is not callable，有大佬可以帮忙解释一下吗", "\n直到最后一句res=minimize。。。才报错，之前检查过都没有问题", "\n\n", "from scipy.optimize import minimize\nimport numpy as np\ndef fun():\n    v=lambda x:abs((x(1)+0*x(2)+0*x(3)+0*x(4)+0*x(5)+0*x(6)+0*x(7)+0*x(8)+0*x(9)+0*x(10)+0*x(11)+0*x(12)+0*x(13)+0*x(14)))\n    return v\ndef cons():\n\n    # d,e=args\n    con=({'type':'eq','fun':lambda x: x(1)-(2171.4/0.85*x(2))},\n         {'type': 'eq', 'fun': lambda x: (x(5)*x(6)*89.496/6.28)-x(7)-x(8)},\n         {'type': 'eq', 'fun': lambda x: x(9)*x(10)-x(10)*x(11)-x(8)*x(11)},\n         {'type': 'eq', 'fun': lambda x: x(12) - x(13)+x(11)},\n         {'type': 'eq', 'fun': lambda x: x(10) - 12500*3.1415},\n         {'type': 'ineq', 'fun': lambda x: x(6) - x(14)},\n         {'type': 'ineq', 'fun': lambda x: x(3) - x(4)-2.45},\n         {'type': 'eq', 'fun': lambda x: x(14) - 12.14*3.1415},\n         {'type': 'ineq', 'fun': lambda x: x(4) - 2.45},\n         {'type': 'ineq', 'fun': lambda x: 97.55 - x(4)},\n         {'type': 'ineq', 'fun': lambda x: x(3) },\n         {'type': 'ineq', 'fun': lambda x: 95.1 - x(3)},\n         {'type': 'ineq', 'fun': lambda x: x(5)-2.45-x(4)},\n         {'type': 'ineq', 'fun': lambda x: 100-x(5)}\n    )\n    return con\na=fun()\nb=cons()\n# print(b)\nx0=np.asarray([3,4,3,2,3,4,3,2,3,4,3,2,3,2])\nbounds=((0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None),(0,None))\nres=minimize(a,x0,method='SLSQP',constraints=b,bounds=bounds)\nprint(res)\nprint(b)\n\n"]], "Tag": "算法设计"}
{"Answer": "(int)-0.5=-1\r\n这个才是科学的，因为int永远是找比自身小的最大整数。\r\n\r\njava需要判断\r\ndouble d = -0.5;\r\nint r = d &gt; 0? (int)d : (int)d - 1;", "Konwledge_Point": "线性规划和规约", "Question": ["C中，(int)-0.5=-1,java中,(int)-0.5=0;java有没有类似算法", ["C的这种方法的浮点整数映射上是线性的，java的方法在0附近将发生重叠，这样的话，在实数域处理问题要分类讨论，不方便。", "\n方法好像有Math.floor()，不知道还有没有简单的表达式"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这就是简单的求常微分方程&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/lynn15600693998/article/details/86597068\" id=\"textarea_1666061683557_1666062184834_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/lynn15600693998/article/details/86597068&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#matlab#的问题：kf、kn、c、h已知且为常数，i为随时间变化的函数且与x无关但i的所有值都知道", ["\n", "\n", "kf、kn、c、h已知且为常数，i为随时间变化的函数且与x无关但i的所有值都知道，这样的一个非线性方程可以求出来吗？我需要每个时刻的x的值（有偿解题）"]], "Tag": "算法设计"}
{"Answer": "你说的这些牵涉到两个概念`数据清洗（去噪）`和`迁移学习`。\r\n两者的区别在于，前者，将你所谓的所有企业当成一个模型去学习，后者的意思是，你根据某个企业的数据去学习的权重在另一个企业中不能直接拿来做预测，而是需要通过迁移学习修改权重。", "Konwledge_Point": "线性规划和规约", "Question": ["关于缺失值和异常值等数值处理的疑问", ["网上看了很多关于异常值处理，缺失值填充的文章，感觉有些简单化处理了。。不知道是否我自己钻牛角尖了。。", "\n我手头有一组数据，其中数据是不同企业各自的数据记录。其中不少记录是有异常值和缺失值的。", "\n1. 不同企业之间差别较大，异常值的判定，需要通过对企业分组进行判定。换句话说，一个数值在这个企业可能是正常值，而对另外一个企业可能就是异常值。", "\n2. 关于缺失值的填充，同样存在类似问题。。不同企业之间的数据差别可能较大，如果数据填充时，用简单的均值或是线性插值法填充，就会导致数据填充的可信度较低。我个人以为，也应该按照企业分组来进行分别填充处理。", "\n我不知道是否我的想法有些极端了，亦或是本身数据处理就不必思考过多。毕竟数据本身就很可能存在不少异常或缺失情况，而有些模型对异常或缺失值又并不敏感。。", "\n想请教下各位，具体数据处理过程中，是怎样做呢？"]], "Tag": "算法设计"}
{"Answer": "```\r\n 因为对于n，这个函数递归调用n次\r\n本质上，这个递归其实不是递归，就是循环（尾递归）\r\nlong f(int n)\r\n{\r\nint acc = 1;\r\nwhile (n &gt; 1)\r\n{\r\nacc = n * acc;\r\nn = n - 1;\r\n}\r\nreturn acc;\r\n}\r\n```", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构与算法那：程序运行时间的问题", ["\n\n", "本人刚接触数据结构和算法，有个地方不是很懂，这个程序书上说运行时间为O(n)， 我不明白为什么是O(n),  T(n) = n * (n-1), 怎么换算也不能是O（n）线性的啊，求大神帮我讲解，越详细越好，本人真的小白。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你从文本里读取的是字符串&amp;#xff0c;你没有把字符串转成数字&amp;#xff0c;你画出来的当然是直线了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["以下是我用matplotlib画的折线图，但是折线图纵坐标没个数据之间的间隔是相等的，显示不出折线图的效果，应该如何解决这个问题", ["\n", "#以下是我画折线图图写的代码", "q=list(open(\"pH.txt\",'r'))#pH.txt是一个包含了21个数据的txt文件", "x=range(0,21)", "y=q", "pl.plot(x,y)", "pl.xlabel(\"Vb\")", "pl.ylabel(\"pH\")", "pl.title(\"pH-Vb\")", "pl.show()", "\n", "以下是我的数据，不是线性的😭", "2.591064607026499", "2.6379342479565424", "2.6901960800285134", "2.74929451036117", "2.817344971441929", "2.8976270912904414", "2.995635194597551", "3.1216692520434512", "3.2988530764097077", "3.6009728956867417", "7.00", "10.396855627379825", "10.69680394257951", "10.871816208578554", "10.995678626217357", "11.09151498112135", "11.16962521680645", "11.235503630789037", "11.292429823902065", "11.342519201431983", "11.387216143280265"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a,b,c,d,e;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf %lf %lf %lf %lf&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b,&amp;amp;c,&amp;amp;d,&amp;amp;e);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)n&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(b&amp;lt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)n&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(c&amp;lt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)n&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(d&amp;lt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)n&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e&amp;lt;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;)n&amp;#43;&amp;#43;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Nooooooooooo&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;lknb&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["nyoj 纽约-1578 lk考试挂科事件", ["假期摆烂后开学迎来了期天考试危机！Ik没有复习只能一晚上速通各科目，如果他恰好挂", "了两科，蓝桥杯的奖学金就和他拜拜了;当考试分数严格小于60分时为挂科,请你判断Ik能不能拿到蓝桥杯的奖学金", "输入描述", "给出5个分数，分别是linux成绩 数据结构成绩 高等数学成绩 线性代数成绩 大学英语成", "绩，分数不一定是整数", "输出描述", "如果能拿到奖学金输出Iknb", "如果不能拿到奖学金输出No0000000000", "\n"]], "Tag": "算法设计"}
{"Answer": "```\r\nfloat aver(float a[],int n) { //用for循环求出所有值的和，再除以个数n \r\n    int i;\r\n    float sum;\r\n//  float sum = 0; // 要赋初值\r\n\r\n    for(i=0;i&lt;n;i++) \r\n        sum+=a[i];\r\n    \r\n    return sum/n; //返回结果 \r\n}\r\n```\r\n这个函数sum没有赋初值\r\n```\r\n#include &lt;stdio.h&gt; \r\n\r\n#define N 96\r\n\r\nint main() { \r\n\tfloat Temp_X[N] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.46667, 11.4667, 31.6, 52.7333, 80.3333, 116.333, 156.6, 199.4, 242.2, 283.4, 329.2, 379.333, 431.333, 482.6, 541, 594.4, 643.533, 692.133, 736.267, 772.667, 810.133, 841.867, 868.2, 892.4, 917.667, 939.8, 954.667, 969, 976.8, 983.4, 987.467, 994.933, 1023.67, 875.2, 873.933, 758.8, 678.2, 515.867, 782.533, 908.8, 779.2, 831.4, 645.533, 734.067, 679.533, 610.267, 565.067, 512.467, 462, 405.2, 354.133, 302, 247.8, 191.533, 140, 94.2667, 57.5333, 25.9333, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };            //定义初始化数组X \r\n\tfloat Temp_Y[N] = {0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 1.785, 2.57833, 3.927, 5.79233, 7.379, 9.48133, 11.1473, 12.4167, 13.6627, 16.193701, 18.248699, 19.042, 19.042, 19.105301, 16.6383, 17.240999, 14.631, 11.8217, 11.663, 12.155, 15.488, 21.859301, 19.32, 19.042, 19.6133, 21.105, 22.9937, 20.827299, 23.858299, 23.0333, 19.2883, 15.6937, 21.5893, 23.802999, 20.518299, 21.5893, 17.907301, 17.971001, 17.574301, 16.781, 15.5513, 12.3773, 10.2747, 8.60867, 6.86333, 5.39567, 3.88767, 2.856, 2.142, 2.142, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952 }; //定义初始化数组Y \r\n\t\r\n    float xSum = 0,ySum = 0, \r\n    float xySum=0, x2Sum=0;//这里赋值了后面就忘了 \r\n    float a, b;\r\n\t\r\n\tfor( int i = 0; i &lt; N; i++ ) {\r\n\t    xySum += (Temp_X[i] * Temp_Y[i]);\r\n\t    x2Sum += (Temp_X[i] * Temp_X[i]);\r\n\t    xSum += Temp_X[i];\r\n\t    ySum += Temp_Y[i];\r\n\t}\r\n//\ta = (xySum - 96 * xAver * yAver) / (x2Sum-96 * xAver * xAver);  \r\n\ta = (N * xySum - xSum * ySum)/(N * x2Sum - xSum*xSum);\r\n\tb = ySum / N - a * xSum / N;\r\n\tprintf( \"a = %f\\n b = %f\", a, b ); \r\n}\r\n```\r\n[最小二乘法](https://blog.csdn.net/qq_35082030/article/details/88709990 \"\")", "Konwledge_Point": "线性规划和规约", "Question": ["为什么调用函数参与运算再给变量赋值，数就不对了", ["求线性回归方程a和b值，结果明显不对", "\n代码如下", "\n\n", "#include ", "\n                                                         //调用库函数 ", "\nint main()                                                //主函数 ", "\n{   float aver(float a[],int);                         //声明求均值函数 ", "\n\n", "float Temp_X[96] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.46667, 11.4667, 31.6, 52.7333, 80.3333, 116.333, 156.6, 199.4, 242.2, 283.4, 329.2, 379.333, 431.333, 482.6, 541, 594.4, 643.533, 692.133, 736.267, 772.667, 810.133, 841.867, 868.2, 892.4, 917.667, 939.8, 954.667, 969, 976.8, 983.4, 987.467, 994.933, 1023.67, 875.2, 873.933, 758.8, 678.2, 515.867, 782.533, 908.8, 779.2, 831.4, 645.533, 734.067, 679.533, 610.267, 565.067, 512.467, 462, 405.2, 354.133, 302, 247.8, 191.533, 140, 94.2667, 57.5333, 25.9333, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };            //定义初始化数组X \nfloat Temp_Y[96] = {0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 1.785, 2.57833, 3.927, 5.79233, 7.379, 9.48133, 11.1473, 12.4167, 13.6627, 16.193701, 18.248699, 19.042, 19.042, 19.105301, 16.6383, 17.240999, 14.631, 11.8217, 11.663, 12.155, 15.488, 21.859301, 19.32, 19.042, 19.6133, 21.105, 22.9937, 20.827299, 23.858299, 23.0333, 19.2883, 15.6937, 21.5893, 23.802999, 20.518299, 21.5893, 17.907301, 17.971001, 17.574301, 16.781, 15.5513, 12.3773, 10.2747, 8.60867, 6.86333, 5.39567, 3.88767, 2.856, 2.142, 2.142, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952, 0.952 }; //定义初始化数组Y \nfloat a,b,sum1=0,sum2=0;                         //定义变量，a，b为线性回归方程y=ax+b中a，b的值，sum1，sum2，为求a时分步求解用的变量 \nint i,j;                                              //i，j为循环时使用的变量 \nfor(i=0;i<96;i++)\n{\n    sum1+=(Temp_X[i]*Temp_Y[i]);\n    sum2+=(Temp_X[i]*Temp_X[i]);\n}\na=(sum1-96*aver(Temp_X,96)*aver(Temp_Y,96))/(sum2-96*aver(Temp_X,96)*aver(Temp_X,96));  //通过线性回归方程公式求出a值 \nb=aver(Temp_Y,96)-(a*aver(Temp_X,96));\nprintf(\"a=%f,b=%f\",a,b); \n", "\n\n", "}", "\nfloat aver(float a[],int n)   //求均值的函数 ", "\n{                                //用for循环求出所有值的和，再除以个数n ", "\n    int i;", "\n    float sum;", "\n    for(i=0;i<n;i++)", "\n    {", "\n        sum+=a[i];", "\n    }", "\n    return sum/n;                 //返回结果 ", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;主要在俩个问题&amp;#xff1a;绘图的时候传参数值不对&amp;#xff1b;刻度太大&amp;#xff0c;值差别太小&amp;#xff0c;所以看不出来。&lt;/p&gt;\n&lt;p&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/129020421926112.png\" /&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nimport matplotlib.pyplot as plt\nimport numpy as &lt;span class=\"hljs-built_in\"&gt;np&lt;/span&gt;\nfrom matplotlib import ticker\n\nS &amp;#61; [&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;]\n&lt;span class=\"hljs-built_in\"&gt;labels&lt;/span&gt; &amp;#61; S\nx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;np&lt;/span&gt;.arange(len(&lt;span class=\"hljs-built_in\"&gt;labels&lt;/span&gt;))  # the &lt;span class=\"hljs-built_in\"&gt;label&lt;/span&gt; locations\n&lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0.35&lt;/span&gt;  # the &lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt; of the &lt;span class=\"hljs-built_in\"&gt;bars&lt;/span&gt;\n\nfig_Correlation, ax &amp;#61; plt.subplots()\nzsx &amp;#61; [&lt;span class=\"hljs-number\"&gt;0.999&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.999&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.998&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.998&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.998&lt;/span&gt;]\nzsy &amp;#61; [&lt;span class=\"hljs-number\"&gt;0.998&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.998&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.997&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.998&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.998&lt;/span&gt;]\nax.bar(x - &lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, zsx, &lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;label&lt;/span&gt;&amp;#61;&amp;#39;X_Rsq&amp;#39;)\nax.bar(x &amp;#43; &lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt; / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, zsy, &lt;span class=\"hljs-built_in\"&gt;width&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;label&lt;/span&gt;&amp;#61;&amp;#39;Y_Rsq&amp;#39;)\nax.set_xticks(x)\nax.set_xticklabels(&lt;span class=\"hljs-built_in\"&gt;labels&lt;/span&gt;)\nax.set_ylim((&lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;))  # 定义y轴的取值范围\nax.&lt;span class=\"hljs-built_in\"&gt;yaxis&lt;/span&gt;.set_major_locator(ticker.MultipleLocator(&lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;)) # y轴刻度\nax.&lt;span class=\"hljs-built_in\"&gt;yaxis&lt;/span&gt;.set_minor_locator(ticker.MultipleLocator(&lt;span class=\"hljs-number\"&gt;0.001&lt;/span&gt;))  # y最小刻度精度\nax.&lt;span class=\"hljs-built_in\"&gt;legend&lt;/span&gt;()\nplt.&lt;span class=\"hljs-built_in\"&gt;show&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["显示和理想的差距。。For循环逻辑上哪里出错了吗？", ["import", " pandas ", "as", " pd\n# noinspection PyUnresolvedReferences\n", "import", " numpy ", "as", " np\n", "import", " os\n# noinspection PyUnresolvedReferences\n", "import", " matplotlib.pyplot ", "as", " plt\n# noinspection PyUnresolvedReferences\n", "from", " sklearn.linear_model ", "import", " LinearRegression\n\n#input the excel file address and the data to be plotted.\n#refer to the excel header for groupKey, LocXKey, LocYKey, valueXKey and valueKKey.\nfileAdd_x = r", "\"C:\\Users\\z\\PycharmProjects\\Test\\Excel\\Material\\X.Meas.csv\"", "\nfileAdd_y = r", "\"C:\\Users\\z\\PycharmProjects\\Test\\Excel\\Material\\Y.Meas.csv\"", "\ngroupKey = ", "'WorkSet'", "\n\n#data ", "import", "\ndata_x = pd.read_csv(fileAdd_x).dropna( how = ", "'all'", " )\ndata_y = pd.read_csv(fileAdd_y).dropna( how = ", "'all'", " )\ngroups_x = data_x[ groupKey ].unique()\ngroups_y = data_y[ groupKey ].unique()\n\n\n##################################################################################################\nS=[", "13", ",", "7", ",", "15", ",", "18", ",", "19", "]\nlabels = S\nx = np.arange(len(labels))  # the label locations\nwidth = ", "0.35", "  # the width ", "of", " the bars\n\n#########  Correlation  #########\nfig_Correlation,ax = plt.subplots()\nfor group ", "in", " groups_x:\n    groupIndex = data_x[ groupKey ] == group\n    groupData_x = data_x[ groupIndex ]\n    x1 = groupData_x[", "'X_Meas'", "]\n    y1 = groupData_x[", "'X'", "]\n    #print(x1)\n    # 将 x，y 分别增加一个轴，以满足 sklearn 中回归模型认可的数据\n    x1 = x1[:, np.newaxis]\n    y1 = y1[:, np.newaxis]\n\n\n    model = LinearRegression() # 构建线性模型\n    model.fit(x1, y1) # Overlayx自变量在前，因变量在后\n    R2_X = model.score(x1, y1) # 拟合程度 x R2\n    print(", "'R2_x = %.3f'", " % R2_X) # 输出 R2\n\n    rects5 = ax.bar(x - width/", "2", ", R2_X , width, label=", "'X_Rsq'", ")\n\n\nfor group ", "in", " groups_y:\n    groupIndex = data_y[ groupKey ] == group\n    groupData_y = data_y[ groupIndex ]\n\n    x2 = groupData_y[", "'Y_Meas'", "]\n    y2 = groupData_y[", "'Y'", "]\n\n    # 将 x，y 分别增加一个轴，以满足 sklearn 中回归模型认可的数据\n    x2 = x2[:, np.newaxis]\n    y2 = y2[:, np.newaxis]\n\n\n    model = LinearRegression() # 构建线性模型\n    model.fit(x2, y2) # Overlayx自变量在前，因变量在后\n    R2_Y = model.score(x2, y2) # 拟合程度 y R2\n    print(", "'R2_y = %.3f'", " % R2_Y) # 输出 R2\n    rects6 = ax.bar(x + width/", "2", ", R2_Y , width, label=", "'Y_Rsq'", ")\n\n#########  Graph Correlation  #########\n\n\n\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xticks(x)\nax.set_xticklabels(labels)\nax.set_ylim((", "0", ",", "1.3", "))                       #定义y轴的取值范围\nax.legend()\n\n\ndef autolabel(rects):\n\n        # attach some text labels\n\n    for rect ", "in", " rects:\n\n        height = rect.get_height()\n\n        ax.text(rect.get_x()+rect.get_width()/", "2.0", ", ", "1.0", "*height,\n\n                    ", "'%.3f'", "%float(height), ha=", "'center'", ", va=", "'bottom'", ")\n\n            #‘%", ".2", "f’%float(height)这个设置是让显示的数值精度为小数点后两位小数\n\n\nautolabel(rects5)\nautolabel(rects6)\n\nfig_Correlation.tight_layout()\n#plt.savefig(", "'./RMSE.jpg'", ")   #把图片保存在当前路径下，必须放在plt.show()之前，否则将是空白\n\n\nplt.show()**实际\n![img](https:", "//img-mid.csdnimg.cn/release/static/image/mid/ask/474965811926134.png 'image.png')", "\n**\n想法\n\n![img](https:", "//img-mid.csdnimg.cn/release/static/image/mid/ask/144166811926148.png 'image.png')", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;有难度&lt;br /&gt;Gerber 不包含原件的坐标&amp;#xff0c;需要你自己用代码去识别和匹配原件&lt;br /&gt;对表贴的电阻电容&amp;#xff0c;比如 0603 的电阻和电容没办法识别&amp;#xff0c;需要人工干预。&lt;br /&gt;需要自己做一个原件库,库里定义原件的中心坐标&amp;#xff0c;通过对比匹配的方式识别 Gerber 中对应的原件&amp;#xff0c;才能确定原件的中心坐标及旋转角度。特别是一些非几何对称的原件没啥好办法确定中心。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["一个完整的Gerber文件最少应该包含哪些信息？", ["问题遇到的现象和发生背景", "\n", "一个完整的Gerber文件最少应该包含哪些信息？", "\n", "问题相关代码，请勿粘贴截图", "\n", "给一个Gerber文件，用C或C#，c++编写小程序，能将Gerber文件中的各个元件类型，元件位置坐标，元件放置角度等信息，生成一个文档", "应该如何展开编写？", "\n", "运行结果及报错内容", "\n", "Gerber文件是指导光绘机雕刻的，里面的指令都是指导光绘机画图的起点终点如何划线等信息，如何转换成元件中心点的坐标？，如何确定元件类型及放置角度？下图是Gerber文件的代码", "G04 Generated by SunshineCAM 1.0.0.31*", "%FSLAX34Y34*%                        FS 格式描述  L 省略前导零，A 绝对坐标，三位整数，四位小数", "%MOMM*%                              MO Mode 单位          MM 毫米", "%ADD70C,0.000000*%               AD Aperture Definition 光圈描述    定义D70码为圆，直径 0MM", "%ADD71C,0.300000*%", "%LNConvertedAllPolygons*%                    LN 层名 ConvertedAllPolygons", "%LPD*%                                                    LP 层正负性  D 设置为正图", "G36*                                                         G36 打开多边形填充", "X635760Y1095810D02*                              D02 关光圈，移动到 X63 5760       Y109 5810", "X632760Y1095810D01*                              D01 划线，开光圈    X63 2760       Y109 5810", "G75*                                                          G75 启用 360°的画圆功能", "G03X631760Y1094720I-4J-999D01*            G03 逆时针圆周运动 I，J 格式描述弧形位置。", "G74*                                                          G74 关闭 360 度圆周运动", "G01*                                                          G01 1 倍线性运动", "X631760Y1091810D01*", "G75*", "G03X632760Y1090810I996J1D01*", "G74*"]], "Tag": "算法设计"}
{"Answer": "fit函数里面的while循环里的第一个if语句是想判断当前求得的self.w的精度，如果self.w和b的改变小于precision即认为精度达到要求，退出循环！\r\n\r\n而第一次while循环时明显没有可以拿来比较的，所以自己定义一个与self.w差距为1的w_last 来保证if判断 \r\n\r\n实际上你可以改成2，3，4，0.5都可以，随意。", "Konwledge_Point": "线性规划和规约", "Question": ["关于机器学习梯度下降求 w 和 b 的问题", ["# 类目的求解斜率和截距\nclass Linear_model(object):\n    def __init__(self):\n        self.w = np.random.randn(1)[0]\n\n        self.b = np.random.randn(1)[0]\n        print('----------------------起始随机生成的斜率和截距',self.w,self.b)\n\n#   model就是方程f(x) = wx + b\n    def model(self,x):\n        return self.w * x + self.b\n\n#   线性问题，原理都是最小二乘法\n    def loss(self,x,y):\n#         方程中几个未知数？？？\n        cost = (y - self.model(x))**2\n\n#         求偏导数 ，把其他的都当成已知数，求一个未知数的导数\n#         导数是偏导数的一种特殊形式\n        g_w = 2*(y - self.model(x))*(-x)\n        g_b = 2*(y - self.model(x))*(-1)\n        return g_w,g_b\n\n#     梯度下降\n    def gradient_descend(self,g_w,g_b,step = 0.01):\n#         更新新的斜率和截距\n        self.w = self.w - g_w*step\n        self.b = self.b - g_b*step\n        print('----------------------',self.w,self.b)\n\n    def fit(self,X,y):\n        w_last = self.w + 1\n        b_last = self.b + 1\n        precision = 0.00001\n        max_count = 3000\n        count = 0\n        while True:\n            if (np.abs(self.w - w_last) < precision) and (np.abs(self.b - b_last) < precision):\n                break\n\n            if count > max_count:\n                break\n\n#             更新斜率和截距\n            g_w = 0\n            g_b = 0\n            size = X.shape[0]\n            for xi,yi in zip(X,y):\n                g_w += self.loss(xi,yi)[0]/size\n                g_b += self.loss(xi,yi)[1]/size\n\n            self.gradient_descend(g_w,g_b)\n            count += 1\n\n    def coef_(self):\n            return self.w\n\n    def intercept_(self):\n            return self.b\n", "\n\n", "\n", "请问", "\n    def fit(self,X,y):", "\n        w_last = self.w + 1", "\n        b_last = self.b + 1", "\n这里为什么", "\n                w_last = self.w + 1", "\n        b_last = self.b + 1", "\n\n", "加一是什么意思"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;哪一行报错&amp;#xff0c;有截图吗&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Python，在分析建模的过程中出现报错显示，找到样本数不一致的输入变量，有人能解释一下并解决这个问题吗？", ["#建模预测", "x=data4.iloc[:,2].values.astype(float)", "y=data4.iloc[:,3:6].values.astype(float)", "from sklearn import model_selection", "x_train,x_test,y_train,y_test=model_selection.train_test_split(x,y,test_size=0.35,random_state=1)", "x_train=np.array(x).reshape(-1,1)", "x_test=np.array(x_train).reshape(-1,1)", "y_train=np.array(x).reshape(-1,1)", "from sklearn.linear_model import LinearRegression", "linregTr=LinearRegression()", "linregTr.fit(x_train,y_train)", "print('线性回归模型的回归系数:',linregTr.coef_)", "print('线性回归模型的截距:',linregTr.intercept_)", "from sklearn import metrics", "y_train_pred=linregTr.predict(x_train)", "y_test_pred=linregTr.predict(x_test)", "train_err=metrics.mean_squared_error(y_train,y_train_pred)", "test_err=metrics.mean_squared_error(y_test,y_test_pred)", "print('在训练集上的均方根误差是：',train_err)", "print('在测试集上的均方根误差是：',test_err)", "到这里之后就开报错，说找到样本数不一致的输入变量"]], "Tag": "算法设计"}
{"Answer": "采用正则表达是来过滤是一个很通用的做法，有的还有模版之类的。\r\n\r\n但是你现在的是爬新浪微薄的博客对吧，不知道你是通过什么知道http://blog.sina.com.cn/s/blog_xxxxxxxxxxxxxxxx.html 就是你要的target\r\n\r\n因为blog static id 都是加密过的 blogId， 所以你可以看到就算一个博主下面所有的blog static id 都是没有规律的\r\n\r\n所以我觉得你可以通过关系来爬，比如从博主，找到博友，在来找文章\r\n\r\n感觉有点博客搬家的感觉", "Konwledge_Point": "线性规划和规约", "Question": ["有做爬虫经验的朋友，请教爬虫抓取url时的队列处理问题", ["最近我在做一个爬虫毕业设计，爬虫分为2个队列，对应两张数据表seeds和targets，seeds是尽可能多的爬url，targets是分析seeds中的url是否为我所要的，是则插入，否则过掉。", "\n\n", "而我现在的问题是，由于网页上的url可以看成是多叉树（因为每个链接进去后，又会爬到更多的链接……），所以seeds队列的记录以指数级增长，而targets却几乎是线性增长的，很明显跟不上seeds速度，所以现在出现一种情况是程序执行10多秒后，seeds表中爬到了8000多个url，但targets表才100来个记录。。这样的话seeds显得过于臃肿，而targets却比较空闲。", "\n\n", "请教各位朋友是如何解决这两者的矛盾呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;数据库事务的问题&amp;#xff0c;第一批还没有入库完成&amp;#xff0c;第二批的查询就开始了。&lt;br /&gt;建议处理数据库事务问题&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["jdbctemplate中save方法数据入库的问题。", ["问题遇到的现象和发生背景", "\n", "做分段的线性插值时，分段的点上偶尔会出现重复插入的情况。", "举例：1，5，9 中 1-5，5-9分段插值，入库后偶尔会出现两条5的数据。", "实现方式：在保存前先查询数据库中是否已经有对应的点，没有则插入有则更新。", "使用组件：spring-JdbcTemplate", "状态：在mysql5.7中未发现问题，mysql5.6时偶尔出现5点重复入库（由于1-5,5-9顺序插值，推测1-5保存时不是立刻生效的状态）。", "\n", "问题:想请各位解惑：是jdbctemplate有异步机制（没有在源码中找到），还是mysql那有什么延迟入库的配置？ 需要如何排查？", "\n", "引用的class", "com.nurkiewicz.jdbcrepository.JdbcRepository", "org.springframework.jdbc.core.JdbcTemplate"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;变量和内存不能这样理解。a&amp;#61;(double)a后a还是int类型&amp;#xff0c;不会变成double类型&amp;#xff0c;这点和python不一样&amp;#xff0c;不能把python的思维带入C中来。在语言中&amp;#xff0c;如果你进行类型强转&amp;#xff0c;强转得到的值只是暂时的&amp;#xff0c;这时它其实不在内存中&amp;#xff0c;而是在CPU的寄存器里&amp;#xff0c;更不会立即写入内存。不同的是&amp;#xff0c;python可以自行保留右值的类型&amp;#xff0c;但C/C&amp;#43;&amp;#43;会隐式转换double值到整数再进行赋值。不存在跳过这种隐式转换的方法。&lt;/p&gt;\n\n&lt;p&gt;以你的a&amp;#61;(double)a为例&amp;#xff0c;CPU先从a所在的位置&amp;#xff08;当然&amp;#xff0c;这一步常常要访存&amp;#xff0c;也可能是直接从cache line读取&amp;#xff09;取出数据丢进一个能存放32位数值的寄存器里&amp;#xff08;寄存器本身是没有类型的概念的&amp;#xff0c;它存储的可以是字符&amp;#xff0c;可以是整数&amp;#xff0c;可以是float甚至是没什么意义的脏数据。赋予类型意义的是CPU指令而不是存储器&amp;#xff09;。在我的编译器上&amp;#xff0c;我看了下汇编码&amp;#xff0c;如果是O2优化&amp;#xff0c;CPU会直接把数据放进XMM寄存器&amp;#xff0c;然后调用cvtsi2ss&amp;#xff0c;cvttss2si指令进行转换。如果没有编译器优化&amp;#xff0c;CPU还要多中转几次&amp;#xff0c;但最终还是要调用这两条指令。&amp;#xff08;这是x86_64架构的结果&amp;#xff0c;其他指令集和微架构上很可能有不同做法&amp;#xff0c;但都会进行至少两条调用。&amp;#xff09;这两条调用的含义分别是有符号整数转浮点和浮点转有符号整数&amp;#xff0c;显而易见&amp;#xff0c;前者对应你写的显式强转&amp;#xff0c;后者则是C/C&amp;#43;&amp;#43;自动进行的隐式转换。&lt;/p&gt;\n\n&lt;p&gt;这种转换通常没有什么实际意义&amp;#xff0c;但是编译器似乎不会省略它们。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于强转后内存地址的问题", ["就是变量在内存里面是成线性排列的，但是现在我用强制类型转换，将相邻两个int型变量a，b中的a转换为double型，那a索取的内存要比原来int型多出4个字节的内存，它应该向哪里索取，毕竟旁边变量b已经占据了a 变量所需的四个字节"]], "Tag": "算法设计"}
{"Answer": "不知道你说的集合是什么\r\n因为中文翻译的缘故，好几个词都被翻译成集合。\r\n比如说\r\nCollection\r\nSet\r\n其中Collection是一个抽象的接口，它的下层实现可以是数组也可以是链表\r\n而Set一般用散列表实现。", "Konwledge_Point": "线性规划和规约", "Question": ["求大神指点, 集合算是数据结构的一种么?", ["在网上看到不少有关数据结构的文章,发现有些中数据结构中有集合,有些没有,所以想请教一下大佬,集合算不算数据结构的一种. 其它的几种类型为 ", "\n\n", "\n", "线性结构 ", "\n", "\n", "树形结构 ", "\n", "\n", "图形结构 ", "\n", "\n", "数组 ", "\n", "\n", "栈 ", "\n", "\n", "队列 ", "\n", "\n", "链表 ", "\n", "\n", "散列表 ", "\n有些还有堆,不过堆算是树形结构的一种,可能我的描述有问题,欢迎指出", "\n"]], "Tag": "算法设计"}
{"Answer": "https://wenku.baidu.com/view/fb00c1c2c4da50e2524de518964bcf84b8d52d62.html", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构实验：单链表", ["实现线性结构上的单链表的产生以及元素的查找、插入与删除。具体实现要求：", "\n（1）从键盘输入20个整数，用前插法或尾插法输入结点值。", "\n（2）从键盘输入1个整数，在单链表中查找该结点的位置。若找到，则显示“找到了”；否则，则显示“找不到”。", "\n（3）从键盘输入2个整数，一个表示欲插入的位置i，另一个表示欲插入的数值x，将x插入在对应位置上，输出单链表所有结点值，观察输出结果。", "\n（4）从键盘输入1个整数，表示欲删除结点的位置，输出单链表所有结点值，观察输出结果。", "\n（5）将单链表中值重复的结点删除，使所得的结果表中个结点值均不相同，输出单链表所有结点值，观察输出结果。", "\n（6）删除其中所有数据值为偶数的结点，输出单链表所有结点值，观察输出结果。", "\n（7）将单链表分解成两个单链表A和B，使A链表中含有原链表中序号为奇数的元素，而B链表中含有原链表中序号为偶数的元素，且保持原来的相对顺序，分别输出单链表A和单链表B的所有结点值，观察输出结果。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;sigmoid和和tanh两个函数虽然都是[0, 1]&amp;#xff0c;但是你会发现他们的导数是不一样的&amp;#xff0c;tanh的导数范围是[-1, 1], 而sigmoid的导数范围是[0, 0.25]&amp;#xff0c;在反向传播的时候&amp;#xff0c;sigmoid会很容易导致梯度消失&amp;#xff0c;而不收敛。&lt;br /&gt;有帮助&amp;#xff0c;请采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于MINIST的GAN网络中归一化参数修改的问题", ["最近在学GAN，今天试着跑了一下网上的代码，但是看到网上没有一个选择用MINIST的0-1分布的归一化的，想着网络跑0-1分布的会快一点，就改了一下参数，改动如下：", "把归一化的参数改成了0.1307和0.3081，把生成器最后一层的Tanh改成了Sigmoid。照理说这两个激活函数的性质差不多，为啥最后会不收敛呢？", "改动后代码如下：", "\n", "import", " torch.autograd\n", "import", " torch.nn ", "as", " nn\n", "from", " torch.autograd ", "import", " Variable\n", "from", " torchvision ", "import", " transforms\n", "from", " torchvision ", "import", " datasets\n", "from", " torchvision.utils ", "import", " save_image\n", "import", " os\n \n# 创建文件夹\n", "if", " not os.path.exists(", "'D:\\pytorch_lx\\GAN image'", "):\n    os.mkdir(", "'D:\\pytorch_lx\\GAN image'", ")\n \n \ndef to_img(x):\n    out = ", "0.3081", "*x+", "0.1307", "\n    out = out.clamp(", "0", ", ", "1", ")  # Clamp函数可以将随机变化的数值限制在一个给定的区间[min, max]内：\n    out = out.view(", "-1", ", ", "1", ", ", "28", ", ", "28", ")  # view()函数作用是将一个多行的Tensor,拼接成一行\n    return out\n \n \nbatch_size = ", "128", "\nnum_epoch = ", "100", "\nz_dimension = ", "100", "\n# 图像预处理\nimg_transform = transforms.Compose([\n    transforms.ToTensor(),\n    transforms.Normalize((", "0.1307", ",), (", "0.3081", ",))  # (x-mean) / std\n])\n \n# mnist dataset mnist数据集下载\nmnist = datasets.MNIST(\n    root=", "'D:\\pytorch_lx\\diabetes trainner'", ", train=", "True", ", transform=img_transform, download=", "True", "\n)\n \n# data loader 数据载入\ndataloader = torch.utils.data.DataLoader(\n    dataset=mnist, batch_size=batch_size, shuffle=", "True", "\n)\n \n \n# 定义判别器  #####Discriminator######使用多层网络来作为判别器\n# 将图片", "28", "x28展开成", "784", "，然后通过多层感知器，中间经过斜率设置为", "0.2", "的LeakyReLU激活函数，\n# 最后接sigmoid激活函数得到一个", "0", "到", "1", "之间的概率进行二分类。\n", "class", " discriminator(nn.Module):\n    def __init__(self):\n        super(discriminator, self).__init__()\n        self.dis = nn.Sequential(\n            nn.Linear(", "784", ", ", "256", "),  # 输入特征数为", "784", "，输出为", "256", "\n            nn.LeakyReLU(", "0.2", "),  # 进行非线性映射\n            nn.Linear(", "256", ", ", "256", "),  # 进行一个线性映射\n            nn.LeakyReLU(", "0.2", "),\n            nn.Linear(", "256", ", ", "1", "),\n            nn.Sigmoid()  # 也是一个激活函数，二分类问题中，\n            # sigmoid可以班实数映射到【", "0", ",", "1", "】，作为概率值，\n            # 多分类用softmax函数\n        )\n \n    def forward(self, x):\n        x = self.dis(x)\n        return x\n \n \n# ###### 定义生成器 Generator #####\n# 输入一个", "100", "维的", "0", "～", "1", "之间的高斯分布，然后通过第一层线性变换将其映射到", "256", "维,\n# 然后通过LeakyReLU激活函数，接着进行一个线性变换，再经过一个LeakyReLU激活函数，\n# 然后经过线性变换将其变成", "784", "维，最后经过Tanh激活函数是希望生成的假的图片数据分布\n# 能够在", "-1", "～", "1", "之间。\n", "class", " generator(nn.Module):\n    def __init__(self):\n        super(generator, self).__init__()\n        self.gen = nn.Sequential(\n            nn.Linear(", "100", ", ", "256", "),  # 用线性变换将输入映射到", "256", "维\n            nn.ReLU(", "True", "),  # relu激活\n            nn.Linear(", "256", ", ", "256", "),  # 线性变换\n            nn.ReLU(", "True", "),  # relu激活\n            nn.Linear(", "256", ", ", "784", "),  # 线性变换\n            nn.Sigmoid()  # Tanh激活使得生成数据分布在【", "-1", ",", "1", "】之间，因为输入的真实数据的经过transforms之后也是这个分布\n        )\n \n    def forward(self, x):\n        x = self.gen(x)\n        return x\n \n \n# 创建对象\nD = discriminator()\nG = generator()\n", "if", " torch.cuda.is_available():\n    D = D.cuda()\n    G = G.cuda()\n \n \n# 首先需要定义loss的度量方式  （二分类的交叉熵）\n# 其次定义 优化函数,优化函数的学习率为", "0.0003", "\ncriterion = nn.BCELoss()  # 是单目标二分类交叉熵函数\nd_optimizer = torch.optim.Adam(D.parameters(), lr=", "0.0003", ")\ng_optimizer = torch.optim.Adam(G.parameters(), lr=", "0.0003", ")\n \n# ##########################进入训练##判别器的判断过程#####################\nfor epoch ", "in", " range(num_epoch):  # 进行多个epoch的训练\n    for i, (img, _) ", "in", " enumerate(dataloader):\n        num_img = img.size(", "0", ")\n        # view()函数作用是将一个多行的Tensor,拼接成一行\n        # 第一个参数是要拼接的tensor,第二个参数是", "-1", "\n        # =============================训练判别器==================\n        img = img.view(num_img, ", "-1", ")  # 将图片展开为", "28", "*", "28", "=", "784", "\n        real_img = Variable(img).cuda()  # 将tensor变成Variable放入计算图中\n        real_label = Variable(torch.ones(num_img)).cuda()  # 定义真实的图片label为", "1", "\n        fake_label = Variable(torch.zeros(num_img)).cuda()  # 定义假的图片的label为", "0", "\n \n        # ########判别器训练train#####################\n        # 分为两部分：", "1", "、真的图像判别为真；", "2", "、假的图像判别为假\n        # 计算真实图片的损失\n        real_out = D(real_img)  # 将真实图片放入判别器中\n        d_loss_real = criterion(real_out.squeeze(", "-1", "), real_label)  # 得到真实图片的loss\n        real_scores = real_out  # 得到真实图片的判别值，输出的值越接近", "1", "越好\n        # 计算假的图片的损失\n        z = Variable(torch.randn(num_img, z_dimension)).cuda()  # 随机生成一些噪声\n        fake_img = G(z).detach()  # 随机噪声放入生成网络中，生成一张假的图片。 # 避免梯度传到G，因为G不用更新, detach分离\n        fake_out = D(fake_img)  # 判别器判断假的图片，\n        d_loss_fake = criterion(fake_out.squeeze(", "-1", "), fake_label)  # 得到假的图片的loss\n        fake_scores = fake_out  # 得到假图片的判别值，对于判别器来说，假图片的损失越接近", "0", "越好\n        # 损失函数和优化\n        d_loss = d_loss_real + d_loss_fake  # 损失包括判真损失和判假损失\n        d_optimizer.zero_grad()  # 在反向传播之前，先将梯度归", "0", "\n        d_loss.backward()  # 将误差反向传播\n        d_optimizer.step()  # 更新参数\n \n        # ==================训练生成器============================\n        # ###############################生成网络的训练###############################\n        # 原理：目的是希望生成的假的图片被判别器判断为真的图片，\n        # 在此过程中，将判别器固定，将假的图片传入判别器的结果与真实的label对应，\n        # 反向传播更新的参数是生成网络里面的参数，\n        # 这样可以通过更新生成网络里面的参数，来训练网络，使得生成的图片让判别器以为是真的\n        # 这样就达到了对抗的目的\n        # 计算假的图片的损失\n        z = Variable(torch.randn(num_img, z_dimension)).cuda()  # 得到随机噪声\n        fake_img = G(z)  # 随机噪声输入到生成器中，得到一副假的图片\n        output = D(fake_img)  # 经过判别器得到的结果\n        g_loss = criterion(output.squeeze(", "-1", "), real_label)  # 得到的假的图片与真实的图片的label的loss\n        # bp and optimize\n        g_optimizer.zero_grad()  # 梯度归", "0", "\n        g_loss.backward()  # 进行反向传播\n        g_optimizer.step()  # .step()一般用在反向传播后面,用于更新生成网络的参数\n \n        # 打印中间的损失\n        ", "if", " (i + ", "1", ") % ", "100", " == ", "0", ":\n            print(", "'Epoch[{}/{}],d_loss:{:.6f},g_loss:{:.6f} '", "\n                  ", "'D real: {:.6f},D fake: {:.6f}'", ".format(\n                epoch, num_epoch, d_loss.data.item(), g_loss.data.item(),\n                real_scores.data.mean(), fake_scores.data.mean()  # 打印的是真实图片的损失均值\n            ))\n        ", "if", " epoch == ", "0", ":\n            real_images = to_img(real_img.cpu().data)\n            save_image(real_images, r", "'D:\\pytorch_lx\\GAN image\\real_images.png'", ")\n    fake_images = to_img(fake_img.cpu().data)\n    save_image(fake_images, r", "'D:\\pytorch_lx\\GAN image\\fake_images-{}.png'", ".format(epoch + ", "1", "))\n \n# 保存模型\ntorch.save(G.state_dict(), ", "'D:\\pytorch_lx\\GAN module\\generator.pth'", ")\ntorch.save(D.state_dict(), ", "'D:\\pytorch_lx\\GAN module\\discriminator.pth'", ")\n\n"]], "Tag": "算法设计"}
{"Answer": "这道题答案不是很重要，思路比较重要，上面有的人说的答案也对，但是不精确（有时候不精确不会产生大的问题，有时候就会，下面会解释\r\n\r\n这个观点），所以LZ最好亲自试试下面的过程。另外，本题涉及几个知识点。我详细解释下。\r\n1.如果你是想在JAVA代码级别解释这个问题，那么你是在浪费时间。这个问题必须到JVM生成的代码级别讨论（很多问题都是这个样子，在\r\n\r\nJAVA代码级别讨论不仅浪费时间，而且没有意义，记得有人跟我说过一句话：在你所处理的层面，问题根本还没有浮现（非编程问题））。\r\n2.\r\n\r\npublic class TestJVM {\r\n    public static void main(String[] args)\r\n    {\r\n        TestJVM abc = new TestJVM();\r\n    }\r\n}\r\n\r\n代码用javap -c 命令反编译TestJVM.class文件后（我建议你自己试试），生成\r\n...\r\n\r\npublic TestJVM();\r\n  Code:\r\n   0:\taload_0\r\n   1:\tinvokespecial\t#8; //Method java/lang/Object.\"&lt;init&gt;\":()V\r\n   4:\treturn\r\npublic static void main(java.lang.String[]);\r\n  Code:\r\n   0:\tnew\t#1; //class TestJVM\r\n   3:\tdup\r\n   4:\tinvokespecial\t#16; //Method \"&lt;init&gt;\":()V\r\n   7:\tastore_1\r\n   8:\treturn\r\n...\r\n\r\n解释这段代码是这道问题的第一步,建议你大概查阅下JVM规范，因为我也刚查了。\r\n(1) new 的含义是创造一块内存，并且在堆栈上压入指向这块内存的引用。\r\n(2) dup的含义是将栈顶复制，并压入栈。(所以现在有了两个指向刚才分配内存的引用)\r\n(3) invokespecial意思是将分配的内存中初始化对象。\r\n(4) astore_1是将栈顶压入本地变量。\r\n(这段过程，我建议你自己多画几遍，体会下JVM\"面向堆栈\"的概念,JVM规范第一章最好看看)\r\n3.上面的四个步骤(绝对的物理过程)，其实就是三件事（体会一下原子语句的含义）:\r\n\ta.给实例分配内存。\r\n\tb.初始化构造器\r\n\tc.将引用指向分配的内存空间（注意到这步引用就非null了）。\r\n一般来说，我们期望执行的步骤是a-&gt;b-&gt;c，然而，由于JVM乱序执行的特性（自己查查这句话在哪，别轻易相信别人,虽然有时候文档也是会\r\n\r\n骗人的-!-）,可能执行的顺序是a-&gt;c-&gt;b。当a-&gt;c-&gt;b这样执行时候，假如刚执行完c，这样线程2访问这个引用，发现引用不为空，他就对相\r\n\r\n应的内存做操作，这样就会发生错误，这种错误想必不容易发现(那是不是不容易发生？取决于具体的应用环境。)。\r\n\r\n4.问题的关键用一句话来概括，就是这个意思：if(instance==null),如果instance !=null,那么instance就真的准备好了么？ \r\n所以，最原始的写法虽然慢，但是不会产生这种问题，因为原始写法把判断是否等于null的语句，也给锁起来了。只有得到锁，才有资格判断\r\n\r\n。\r\n5.上面的几条，你也许看了第四条，或者大概明白前几条，你的问题就能解答了。不精确的了解似乎也能回答，但是，有好多误解就产生了。\r\n比如，有人说，加了valatile类型修饰（JVM1.5以后）符可以将LZ的写法变对，如private volatile static Singleton instance = null;\r\n其实这是不对的，valatile（LZ想想为什么valatile影响效率？理解下寄存器和内存的效率差别）无非说的就是线程是不能保留共享对象的本地\r\n\r\n拷贝（正常情况线程是可以保留的）,那是不是每次去内存中取，就能保证单例对象的正常初始化呢？很明显，这完全是两个问题。\r\n\r\n6.很多细节问题（编程方面），你都得查查英文文档，得自己写试试，中文大家说的话都非常像（因为都是同一本书里面说的，再加上第一个\r\n\r\n人的翻译水平不咋样），很多误解就此产生。", "Konwledge_Point": "线性规划和规约", "Question": ["单例模式并发的问题！", ["[code=\"java\"]", "\npublic static Singleton getInstance() {", "\n    if(instance == null) {", "\n        synchronized(Singleton.class) {", "\n            if(instance == null) {", "\n                instance = new Singleton();", "\n            }", "\n        }", "\n    }", "\n\n", "return instance;\n", "\n\n", "}", "\n[/code]", "\n\n", "在一本并发书上看见的，说这个单例会造成有一些问题，具体原因是因为java对读写共享对象的域时并不保证可线性化性，甚至不保证顺序一致性。原因在于，如果严格遵循顺序一致性，那么将会导致已被广泛采用的编译优化技术变得无效。", "\n\n", "大牛们，解释下？说实话，我是看的一头雾水。", "\n书中指出这段代码有误，但是紧跟的内容感觉和这段牛头不对马嘴，紧跟的内容大致讨论了同步块在线程中的作用，以及对线程cache拷贝和共享存储器之间的关系。", "\n\n", "书名：多处理编程的艺术 - P42", "\n\n", "顺便说两句闲话，发帖到论坛被弄成隐藏贴。我想知道为什么会被隐藏。我感觉这个问题超出了问题的本生，很有高度的一个问题。", "\n  当然也有可能很菜的我，不能理解各位大神的思想。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳。。&lt;br /&gt;setPeekHeight是弹出的高度&amp;#xff0c;它和你的layout_height没有直接联系&amp;#xff0c;你弄混淆了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["安卓BottomSheetBehaviour的peekheight，setState等无作用", ["  安卓BottomSheetBehavior设置状态和peek不能改变view的高度，view的高度一直保持为设置的height", "\n", "我想实现高度地图首页底部弹窗的效果.这个窗口我用线性布局器作为coordinator的子view，页面效果没问题，然而不能通过behaviour的peek，setState等设置窗口的高度。API31", "\n", "//behaviour", "设置\n bottomSheetBehavior=BottomSheetBehavior.from", "(fragmentBinding.bom)", ";\n bottomSheetBehavior.", "set", "State", "(STATE_COLLAPSED)", ";\n bottomSheetBehavior.", "set", "PeekHeight", "(10)", ";   ", "//10px", "，如果设置成功view应该很小\n\n", "//", "底部窗口的XML\n<LinearLayout\n        android", ":id", "=", "\"@+id/bom\"", "\n        android", ":layout_width", "=", "\"match_parent\"", "\n        android", ":layout_height", "=", "\"100dp\"", "\n        android", ":background", "=", "\"@drawable/dialog\"", "\n        android", ":backgroundTint", "=", "\"#364362\"", "\n        android", ":orientation", "=", "\"vertical\"", "\n        app", ":layout_behavior", "=", "\"com.google.android.material.bottomsheet.BottomSheetBehavior\"", ">\n", "...", "\n<", "/LinearLayout", ">\n", "\n", "依然是xml的height=100dp属性设置的高度，而不是peek设置的10px"]], "Tag": "算法设计"}
{"Answer": "我想你应该试试[relative layout][1].\r\n如果你使用相对布局来填充整个屏幕，你应该可以使用[android:layout_alignParentBottom][2] 来移动按钮到屏幕的底部。\r\n如果你的屏幕底部的视图不是以相对布局来显示的，那么也许上边的布局将占据所有的空间。在这种情况下，在这个android布局：以上的布局中，在你的布局文件和剩下的布局位置，首先你应该把这个视图放在底部。这能够使按钮的视图占据尽可能多的像他需要的空间，剩下的布局可以填满剩下的所有屏幕。\r\n\r\n\r\n  [1]: http://developer.android.com/guide/topics/ui/layout/relative.html\r\n  [2]: http://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams.html", "Konwledge_Point": "线性规划和规约", "Question": ["如何调整屏幕底部的视图？", ["这是我的布局代码：", "\n\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\">\n\n    <TextView android:text=\"@string/welcome\" \n        android:id=\"@+id/TextView\" \n        android:layout_width=\"fill_parent\" \n        android:layout_height=\"wrap_content\">\n    </TextView>\n\n    <LinearLayout android:id=\"@+id/LinearLayout\" \n        android:orientation=\"horizontal\"\n        android:layout_width=\"wrap_content\" \n        android:layout_height=\"wrap_content\" \n        android:gravity=\"bottom\">\n\n            <EditText android:id=\"@+id/EditText\" \n                android:layout_width=\"fill_parent\" \n                android:layout_height=\"wrap_content\">\n            </EditText>\n\n            <Button android:text=\"@string/label_submit_button\" \n                android:id=\"@+id/Button\" \n                android:layout_width=\"wrap_content\" \n                android:layout_height=\"wrap_content\">\n            </Button>\n\n    </LinearLayout>\n\n</LinearLayout>\n", "\n\n", "它现在是左边这样，但是我想让他像右边这样的", "\n\n", "比较容易的做法就是设置TextView充满整个高度，但是这会引起按钮没有空间或者是输入框。基本上这个问题是我想要submit button和text entry在底部是一个合适的高度，text view填满剩下的控件，同样的在这个水平线性布局里边，我想要submit button包含它的内容，text entry来包含剩下的空间。", "\n如果在这个线性布局里的第一个项目是告知它就是用来填满这个布局的，没有给其他项目留空间，我在这个布局里如何得到一个首先是在这个线性布局里，填满除了最低要求的其他项目的项目？", "\n\n", "编辑1：", "\n\n", "Relative Layouts 确实是答案，谢谢。", "\n\n", "   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <RelativeLayout \n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"fill_parent\" \n    android:layout_height=\"fill_parent\">\n\n    <TextView \n        android:text=\"@string/welcome\" \n        android:id=\"@+id/TextView\"\n        android:layout_width=\"fill_parent\" \n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\">\n    </TextView>\n\n    <RelativeLayout \n        android:id=\"@+id/InnerRelativeLayout\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentBottom=\"true\" >\n\n        <Button \n            android:text=\"@string/label_submit_button\" \n            android:id=\"@+id/Button\"\n            android:layout_alignParentRight=\"true\" \n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\">\n        </Button>\n\n        <EditText \n            android:id=\"@+id/EditText\" \n            android:layout_width=\"fill_parent\"\n            android:layout_toLeftOf=\"@id/Button\"\n            android:layout_height=\"wrap_content\">\n        </EditText>\n\n    </RelativeLayout>\n\n</RelativeLayout>\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为定义Table结构体的时候&amp;#xff0c;name只是char指针而没有分配空间&amp;#xff0c;所以在Datatable()中输入数据的时候写入了未申请的内存空间。创建ST的时候需要为name分配内存空间。&lt;/p&gt;\n&lt;p&gt;一共修改了3处&amp;#xff1a;&lt;br /&gt;1、第34行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;(*ST) &amp;#61; (Table*)&lt;/span&gt;malloc(length * sizeof(Table));&lt;span class=\"hljs-comment\"&gt;//动态分配内存的起始地址,和表长大小一样&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;{ (*ST)[i].name &amp;#61; (char*)malloc(n * sizeof(20)); }&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//为每一个元素的name字段动态分配内存&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2、第72行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;int i&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;length&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;//哈希表长度为45&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;3、第119行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;//先释放HAXI&amp;#xff0c;再释放name,最后释放ST&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(HAXI);&lt;span class=\"hljs-comment\"&gt;//释放HAXI&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(ST[i].name);&lt;span class=\"hljs-comment\"&gt;//释放name&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(ST);&lt;span class=\"hljs-comment\"&gt;//释放ST&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["求读取无效数据和读取发生冲突的解决方法", ["问题遇到的现象和发生背景", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "#", "include", "<conio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "//为保证平均查找长度不超过2，哈希表的长度为45", "\n", "#", "define", " NULL 0", "\n", "typedef", " ", "int", " KeyType;", "//起别名，方便辨别", "\n", "typedef", " ", "struct", " {\n    KeyType key;", "//人名对应的编号", "\n    ", "char", "* name;", "//人名", "\n}Table;\n\n", "int", " ", "Haxi", "(KeyType key)", "//利用除留余数法构造哈希函数", "\n", "{\n    ", "int", " i, p, flag;\n    ", "int", " length = ", "45", ";\n    ", "for", " (p = length; p >= ", "2", "; p--)", "//不超过表长的最大素数", "\n    {\n        ", "for", " (i = ", "2", ", flag = ", "1", "; i <= p / ", "2", " && flag; i++)", "//通过不断的除来判断", "\n        {\n            ", "if", " (p % i == ", "0", ")\n                flag = ", "0", ";", "//不是则终止此循环", "\n        }\n        ", "if", " (flag == ", "1", ")\n            ", "break", ";", "//是的话终止循环", "\n    }\n    ", "return", " key % p;", "//哈希地址", "\n}\n\n", "void", " ", "Datatable", "(Table** ST, ", "int", " n, ", "int", " length)", "//储存已知的30个人名，按照输入的顺序给每个人名编号", "\n", "{\n    ", "int", " i;\n    (*ST) = (Table*)", "malloc", "(length * ", "sizeof", "(Table));", "//动态分配内存的起始地址,和表长大小一样", "\n    ", "if", " (*ST) {\n        ", "printf", "(", "\"\\n 请输入30个人名(编号随机): \"", ");\n        ", "for", " (i = ", "0", "; i < n; i++)\n        {\n            ", "printf", "(", "\"\\n第%d个:  (编号 空格 人名)\"", ", i + ", "1", ");\n            ", "fflush", "(stdin);", "/*清除输入缓冲区*/", "\n            ", "scanf_s", "(", "\"%d %s\"", ", &((*ST)[i].key), (*ST)[i].name, ", "20", ");\n        }\n    }\n}\n\n", "void", " ", "Haxitable", "(Table** HAXI, Table* ST, ", "int", " n)", "//建立哈希表", "\n", "{\n    ", "int", " length = ", "45", ";\n    ", "int", " i, j;\n    (*HAXI) = (Table*)", "malloc", "(length * ", "sizeof", "(Table));", "//分配地址", "\n    ", "if", " (*HAXI) {\n        ", "for", " (i = ", "0", "; i < length; i++)\n        {\n            (*HAXI)[i].key = ", "NULL", ";", "//初始化", "\n            (*HAXI)[i].name = ", "0", ";\n        }\n        ", "for", " (i = ", "0", "; i < n; i++)\n        {\n            j = ", "Haxi", "(ST[i].key);", "//获得哈希地址", "\n            ", "while", " ((*HAXI)[j].key != ", "NULL", ")", "//利用线性探测再散列解决冲突", "\n                j = (j + ", "1", ") % length;\n            (*HAXI)[j].key = ST[i].key;", "//将数据放入哈希表", "\n            (*HAXI)[j].name = ST[i].name;\n        }\n        ", "//    for(i=0;i<n;i++)", "\n        ", "//        printf(\"数据库第%d个是%d\\n\",i,ST[i].key);//验证思路", "\n        ", "printf", "(", "\"\\n哈希表制作完成\\n\"", ");\n    }\n}\n", "void", " ", "Show", "(Table* HAXI, ", "int", " length)", "\n", "{\n    ", "int", " i;\n    ", "printf", "(", "\"\\n          ****************哈希表**************\\n\"", ");\n    ", "printf", "(", "\"键:       *****\"", ");\n    ", "for", " (i = ", "0", "; i < length; i++)\n        ", "printf", "(", "\"%6d\"", ", HAXI[i].key);\n    ", "printf", "(", "\"\\n\"", ");\n    ", "printf", "(", "\"值:       *****\"", ");\n    \n    ", "for", " (i = ", "0", "; i < length; i++) {\n        ", "if", "(HAXI[i].name!=", "NULL", ")\n            ", "printf", "(", "\"%s\"", ", HAXI[i].name);\n    }\n        ", "printf", "(", "\"\\n\"", ");\n    ", "printf", "(", "\"地址:     *****\"", ");\n    ", "for", " (i = ", "0", "; i < length; i++)\n        ", "printf", "(", "\"%6d\"", ", i);\n    ", "printf", "(", "\"\\n\"", ");\n}\n", "int", " ", "Search", "(Table* HAXI, KeyType key, ", "int", " length)", "//查找方法", "\n", "{\n    ", "int", " i;\n    i = ", "Haxi", "(key);", "//哈希函数获得位置", "\n    ", "while", " (HAXI[i].key != ", "0", " && HAXI[i].key != key)\n    {\n        i = (i + ", "1", ") % length;", "//利用构造时解决冲突的方法解决冲突", "\n    }\n    ", "if", " (HAXI[i].key == ", "0", ")\n        ", "return", " ", "-1", ";\n    ", "else", "\n        ", "return", " i;\n}\n", "int", " ", "main", "()", " ", "{\n    Table* ST, * HAXI;\n    KeyType key;\n    ", "int", " n=", "3", ", length=", "4", ";\n\n        ", "printf", "(", "\"建立哈希表：\\n\"", ");    \n            ", "Datatable", "(&ST, n, length);\n            ", "Haxitable", "(&HAXI, ST, n);\n            ", "printf", "(", "\"显示哈希表\\n\"", ");\n            ", "Show", "(HAXI, length);\n            ", "printf", "(", "\"请输入想要查找的编号：\"", ");\n            ", "scanf_s", "(", "\"%d\"", ", &key);\n            ", "if", " (", "Search", "(HAXI, key, length) == ", "-1", ")\n                ", "printf", "(", "\"未查询到\"", ");\n            ", "else", "\n                ", "printf", "(", "\"查找成功！位置是%d值为%s\"", ", ", "Search", "(HAXI, key, length), HAXI[", "Search", "(HAXI, key, length)].name);\n            ", "free", "(ST);\n    }\n\n", "\n", "输入如图内容之后出现两个问题", "\n", "一个是读取无效", "\n", "一个是0x00007FFCE75A6191 (ucrtbased.dll)处(位于 haxibiao.exe 中)引发的异常: 0xC0000005: 读取位置 0xFFFFFFFFFFFFFFFF 时发生访问冲突。", "\n", "\n", "想要输入几个编号和对应的名字，利用线性探测再散列放入哈希表中，然后再输出存好之后的表的内容"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Gerber 文件格式&amp;#xff0c;主要有274D&amp;#xff0c;274X和X2&amp;#xff0c;三种格式。目前用得比较多的还是274X。&lt;/p&gt;\n&lt;p&gt;相对于274D&amp;#xff0c;274X将Aperture文件集成到轨迹文件里面了&amp;#xff0c;即只有一个文件。&lt;/p&gt;\n&lt;p&gt;这种文件的设计本来出发点是为光绘机绘制底片&amp;#xff0c;所以只是通过轨迹的方式来描述图形。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Gerber文件代码解析", ["问题遇到的现象和发生背景", "\n", "gerber文件解析", "\n", "问题相关代码，请勿粘贴截图", "\n", "Gerber文件中的X1，Y3是什么？下文是什么意思？", "\n", "G36", "*                                                                 ", "//G36 　打开多边形填充   ", "\nX", "1520073", "Y", "395960", "D", "02", "*\n", "G01", "X", "1519989", "Y", "395964", "D", "01", "*                                ", "//G01 1 倍线性运动         D01 划线，开光圈", "\nX", "1520157", "*\nX", "1520073", "Y", "395960", "*\n", "G37", "*          \n\n", "%", "ADD", "210", "R,", "0.02201", "X", "0.03937", "*", "%", "\n", "%", "ADD", "211", "R,", "0.04331", "X", "0.03937", "*", "%", "\n", "%", "ADD", "212", "R,", "0.02201", "X", "0.03984", "*", "%", "\n", "%", "ADD", "213", "R,", "0.04331", "X", "0.03984", "*", "%", "\n", "%", "ADD", "214", "R,", "0.02709", "X", "0.03984", "*", "%", "\n", "%", "ADD", "215", "R,", "0.02709", "X", "0.03937", "*", "%", "\n", "%", "ADD", "216", "R,", "0.02283", "X", "0.01591", "*", "%", "\n", "%", "ADD", "217", "R,", "0.01413", "X", "0.01591", "*", "%", "\n", "%", "ADD", "218", "R,", "0.02709", "X", "0.01067", "*", "%", "\n", "%", "ADD", "219", "R,", "0.02717", "X", "0.04311", "*", "%", "\n", "%", "ADD", "220", "R,", "0.01988", "X", "0.01591", "*", "%", "\n", "%", "ADD", "222", "R,", "0.03051", "X", "0.03189", "*", "%", "\n", "%", "ADD", "223", "R,", "0.03189", "X", "0.03051", "*", "%", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://github.com/integralpro/libpger/blob/master/antlr/Gerber.g\" id=\"textarea_1663062549053_1663064435040_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://github.com/integralpro/libpger/blob/master/antlr/Gerber.g&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;通常这类文法解析都采用通用文法解析器完成&amp;#xff0c;常见的文法解析引擎是antlr&amp;#xff0c;yacc&amp;#xff0c;Babel&lt;br /&gt;当然上学的时候编译原理的老师一般会教BNF&amp;#43;yacc&amp;#xff0c;不过现在实际应用的比较多是antlr&amp;#xff0c;babel&lt;br /&gt;antlr4下比较常见的语言的文法解析规则在下面&lt;br /&gt;&lt;a href=\"https://github.com/antlr/grammars-v4\" id=\"textarea_1663062549053_1663064435040_1\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://github.com/antlr/grammars-v4&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;可惜你这个Gerber实在是个小众偏门DSL&amp;#xff0c;所以anltr4没有收集&amp;#xff0c;我只找到一个很多年前anltr3的定义&lt;br /&gt;&lt;a href=\"https://github.com/integralpro/libpger/blob/master/antlr/Gerber.g\" id=\"textarea_1663062549053_1663064435040_2\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://github.com/integralpro/libpger/blob/master/antlr/Gerber.g&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;我们可以参考这个写出Antlr4的解析文法&amp;#xff08;如果你有兴趣的学学anltr4的话&amp;#xff09;&lt;/p&gt;\n&lt;p&gt;有关如何在C#里用antlr4&amp;#xff0c;我到不用赘述了。这种文章到多&amp;#xff0c;随便百度一下就行。&lt;/p&gt;\n&lt;p&gt;随带说一句&amp;#xff1a;如果知道这些&amp;#xff0c;就可以摆脱那些语言之争和某某园子偶尔会折腾的啥中文编程&amp;#xff0c;我实现了一门语言这类东西。&lt;br /&gt;单纯文法词法分析目前并不困难&amp;#xff0c;难的是你用词法分析器是人家的&amp;#xff0c;你最后的对语法树的编译是人家的。所以仅仅说自己实现一个DSL文法&amp;#xff0c;对一个会玩antlr的人并不困难&amp;#xff0c;一个星期就可以弄个稍微的“中文编程语言”出来了&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用C，C#，C++，编写程序，读取Gerber文件，导出其元件类型，元件中心坐标信息，放置角度信息，该如何下手？", ["问题遇到的现象和发生背景", "\n", "用C，C#，C++，编写程序，读取Gerber文件，导出其元件类型，元件中心坐标信息，放置角度信息，该如何下手？", "\n", "问题相关代码，请勿粘贴截图", "\n", "Gerber指令代码", "%FSLAX34Y34*%                        FS 格式描述  L 省略前导零，A 绝对坐标，三位整数，四位小数", "%MOMM*%                              MO Mode 单位          MM 毫米", "%ADD70C,0.000000*%               AD Aperture Definition 光圈描述    定义D70码为圆，直径 0MM", "%ADD71C,0.300000*%", "%LNConvertedAllPolygons*%                    LN 层名 ConvertedAllPolygons", "%LPD*%                                                    LP 层正负性  D 设置为正图", "G36*                                                         G36 打开多边形填充", "X635760Y1095810D02*                              D02 关光圈，移动到 X63 5760       Y109 5810", "X632760Y1095810D01*                              D01 划线，开光圈    X63 2760       Y109 5810", "G75*                                                          G75 启用 360°的画圆功能", "G03X631760Y1094720I-4J-999D01*            G03 逆时针圆周运动 I，J 格式描述弧形位置。", "G74*                                                          G74 关闭 360 度圆周运动", "G01*                                                          G01 1 倍线性运动", "X631760Y1091810D01*                              光圈说白了就是形状，不同的光圈就是不同的形状。pcb里面常见的形状有，圆形、方形、椭圆等等。", "G75*                                                          分别表示某个焊盘的形状", "G03X632760Y1090810I996J1D01*"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;这里面直接构造&lt;strong&gt;最小二乘法然后用比例系数比较方便&lt;/strong&gt;&amp;#xff0c;建议n不要取太大&amp;#xff0c;容易造成过拟合&amp;#xff0c;使得拟合误差过大&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;%% 为了得到分布&amp;#xff0c;假设了一个协方差矩阵&lt;/span&gt;\nmu&amp;#61;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;%数学期望&lt;/span&gt;\nsigma&amp;#61;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;].^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;%协方差矩阵&lt;/span&gt;\nr&amp;#61;mvnrnd(mu,sigma,&lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%生成100000个样本&lt;/span&gt;\nx &amp;#61; r(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\ny &amp;#61; r(:,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\nnx &amp;#61; &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;;\nny &amp;#61; &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;;\nxmax &amp;#61; &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;;\nymax &amp;#61; &lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;;\ndx &amp;#61; xmax/nx;\ndy &amp;#61; ymax/ny;\n[X, Y, C, xmid, ymid] &amp;#61; ef2(x,y,nx&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,ny&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,xmax],[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,ymax]);\nC &amp;#61; C/(dx*dy);&lt;span class=\"hljs-comment\"&gt;%单位面积上的概率即概率密度&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);clf;\nbar3(C)\ntitle(&lt;span class=\"hljs-string\"&gt;&amp;#39;原先数据&amp;#39;&lt;/span&gt;)\nxtick &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(C,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;); xticklabel &amp;#61; xmid; &lt;span class=\"hljs-comment\"&gt;% xtick和xticklabel一定要对应&amp;#xff0c;长度相等&lt;/span&gt;\nytick &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(C,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); yticklabel &amp;#61; ymid; &lt;span class=\"hljs-comment\"&gt;% ytick和yticklabel一定要对应&amp;#xff0c;长度相等&lt;/span&gt;\nset(gca, &lt;span class=\"hljs-string\"&gt;&amp;#39;xtick&amp;#39;&lt;/span&gt;, xtick(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#39;xticklabel&amp;#39;&lt;/span&gt;,xticklabel(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;),...\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;ytick&amp;#39;&lt;/span&gt;, ytick(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#39;yticklabel&amp;#39;&lt;/span&gt;,yticklabel(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;))\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;)\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\nx &amp;#61; X(:);\ny &amp;#61; Y(:);\nz &amp;#61; C(:);&lt;span class=\"hljs-comment\"&gt;%根据x和y算出的频率&amp;#xff0c;x&amp;#xff0c;y&amp;#xff0c;z为输入数据&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% n为多项式的阶数&amp;#xff0c;参数一共为(n&amp;#43;1)²个, 注意n不要取太大&amp;#xff0c;容易产生过拟合&lt;/span&gt;\n[i1, i2] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:n);\nF &amp;#61; arrayfun(&amp;#64;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)x.^i1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;).*y.^i2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(i1), &lt;span class=\"hljs-string\"&gt;&amp;#39;uniform&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\nF &amp;#61; cell2mat(F);\n&lt;span class=\"hljs-comment\"&gt;%% 标注------------改动的地方-------------------&lt;/span&gt;\nz(z&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;%如果z等于零&amp;#xff0c;赋值给一个很小的数字即可&lt;/span&gt;\nlogz&amp;#61;&lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(z);\nA &amp;#61; F&amp;#39;*F;\nb &amp;#61; F&amp;#39;*logz;\na &amp;#61; A\\b;&lt;span class=\"hljs-comment\"&gt;%最小二乘法&lt;/span&gt;\nzfit &amp;#61; polyfunval(X,Y,a,n);\nzfun &amp;#61; &amp;#64;(x,y)&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(polyfunval(x,y,a,n)); &lt;span class=\"hljs-comment\"&gt;% 构建z的函数获取整体积分值&lt;/span&gt;\nV &amp;#61; integral2(zfun, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;);\na(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#61; a(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) - &lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(V);\nzfun &amp;#61; &amp;#64;(x,y)&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(polyfunval(x,y,a,n)); &lt;span class=\"hljs-comment\"&gt;% 构建z的函数获取整体积分值,修正了a&amp;#xff0c;使得积分为1&lt;/span&gt;\nV_after_correct &amp;#61; integral2(zfun,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;%这里可以显示积分值&lt;/span&gt;\nzfit1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(zfit);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);clf\nsurf(X,Y,zfit1, &lt;span class=\"hljs-string\"&gt;&amp;#39;facealpha&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%这之后的非线性方程组法和比例系数法如何仿造上面的程序继续&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;polyfunval&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x,y,a,n)&lt;/span&gt;%指数多元多项式的公式&lt;/span&gt;\n[i1, i2] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:n);\nCfit &amp;#61; arrayfun(&amp;#64;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)a(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)*x.^i1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;).*y.^i2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(i1), &lt;span class=\"hljs-string\"&gt;&amp;#39;uniform&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\nf &amp;#61; Cfit{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;};\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(Cfit)\n    f &amp;#61; f &amp;#43; Cfit{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;};\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;[X, Y, CDF, xmid, ymid]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;ef2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x,y,nx,ny,xminmax,yminmax)&lt;/span&gt;%输入数据&amp;#xff0c;只知道&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;和&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt;&amp;#xff0c;算出频率&lt;span class=\"hljs-title\"&gt;z&lt;/span&gt;&lt;/span&gt;\nnum &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num~&amp;#61;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(y))\n   error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入的x和y长度必须相等&amp;#39;&lt;/span&gt;) \n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;gt;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数大于6个&amp;#xff0c;太多了&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;太多输入变量&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;elseif&lt;/span&gt;(nargin&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于2个&amp;#xff0c;太少了&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入变量数目不足!!&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数等于6个&amp;#xff0c;赋值给ymin和ymax&lt;/span&gt;\n    ymin &amp;#61; yminmax(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    ymax &amp;#61; yminmax(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数大于等于5个&amp;#xff0c;赋值给xmin和xmax&lt;/span&gt;\n    xmin &amp;#61; xminmax(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    xmax &amp;#61; xminmax(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于等于4个&amp;#xff0c;自定义xmin和xmax&lt;/span&gt;\n    xmin &amp;#61; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(x);\n    xmax &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(x)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;;\n    ymin &amp;#61; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(y);\n    ymax &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(y)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于等于3个&amp;#xff0c;自定义y方向划分段数ny&lt;/span&gt;\n    ny &amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数等于2个&amp;#xff0c;自定义x方向划分段数nx&lt;/span&gt;\n    nx &amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nxg &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(xmin, xmax, nx);&lt;span class=\"hljs-comment\"&gt;%x方向的点&lt;/span&gt;\nyg &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(ymin, ymax, ny);&lt;span class=\"hljs-comment\"&gt;%y方向的点&lt;/span&gt;\nxmid &amp;#61; (xg(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&amp;#43;xg(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nymid &amp;#61; (yg(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&amp;#43;yg(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n[X,Y] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(xmid, ymid);&lt;span class=\"hljs-comment\"&gt;%形成网格&lt;/span&gt;\n[I,J] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:nx, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:ny);&lt;span class=\"hljs-comment\"&gt;%下标网格&lt;/span&gt;\nCDF &amp;#61; arrayfun(&amp;#64;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)sum(x&amp;gt;&amp;#61;xg(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&amp;amp;x&amp;lt;xg(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)&amp;amp;y&amp;lt;yg(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)&amp;amp;y&amp;gt;&amp;#61;yg(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;))/num,I,J);&lt;span class=\"hljs-comment\"&gt;%形成经验分布&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;直接&lt;strong&gt;求解非线性方程组&lt;/strong&gt;无法搜索到合理解&amp;#xff0c;在这里给出&amp;#xff0c;只作为参考&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;%% 为了得到分布&amp;#xff0c;假设了一个协方差矩阵&lt;/span&gt;\nmu&amp;#61;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;180&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;%数学期望&lt;/span&gt;\nsigma&amp;#61;[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;].^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;%协方差矩阵&lt;/span&gt;\nr&amp;#61;mvnrnd(mu,sigma,&lt;span class=\"hljs-number\"&gt;100000&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%生成100000个样本&lt;/span&gt;\nx &amp;#61; r(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\ny &amp;#61; r(:,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\nnx &amp;#61; &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;;\nny &amp;#61; &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;;\nxmax &amp;#61; &lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;;\nymax &amp;#61; &lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;;\ndx &amp;#61; xmax/nx;\ndy &amp;#61; ymax/ny;\n[X, Y, C, xmid, ymid] &amp;#61; ef2(x,y,nx&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,ny&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,xmax],[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,ymax]);\nC &amp;#61; C/(dx*dy);&lt;span class=\"hljs-comment\"&gt;%单位面积上的概率即概率密度&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);clf;\nbar3(C)\ntitle(&lt;span class=\"hljs-string\"&gt;&amp;#39;原先数据&amp;#39;&lt;/span&gt;)\nxtick &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(C,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;); xticklabel &amp;#61; xmid; &lt;span class=\"hljs-comment\"&gt;% xtick和xticklabel一定要对应&amp;#xff0c;长度相等&lt;/span&gt;\nytick &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(C,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); yticklabel &amp;#61; ymid; &lt;span class=\"hljs-comment\"&gt;% ytick和yticklabel一定要对应&amp;#xff0c;长度相等&lt;/span&gt;\nset(gca, &lt;span class=\"hljs-string\"&gt;&amp;#39;xtick&amp;#39;&lt;/span&gt;, xtick(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#39;xticklabel&amp;#39;&lt;/span&gt;,xticklabel(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;),...\n    &lt;span class=\"hljs-string\"&gt;&amp;#39;ytick&amp;#39;&lt;/span&gt;, ytick(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;), &lt;span class=\"hljs-string\"&gt;&amp;#39;yticklabel&amp;#39;&lt;/span&gt;,yticklabel(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;))\nxlabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;)\nylabel(&lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)\nx &amp;#61; X(:);\ny &amp;#61; Y(:);\nz &amp;#61; C(:);&lt;span class=\"hljs-comment\"&gt;%根据x和y算出的频率&amp;#xff0c;x&amp;#xff0c;y&amp;#xff0c;z为输入数据&lt;/span&gt;\nn &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;% n为多项式的阶数&amp;#xff0c;参数一共为(n&amp;#43;1)²个, 注意n不要取太大&amp;#xff0c;容易产生过拟合&lt;/span&gt;\n[i1, i2] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:n);\nF &amp;#61; arrayfun(&amp;#64;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)x.^i1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;).*y.^i2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(i1), &lt;span class=\"hljs-string\"&gt;&amp;#39;uniform&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\nF &amp;#61; cell2mat(F);\n&lt;span class=\"hljs-comment\"&gt;%% 标注------------改动的地方-------------------&lt;/span&gt;\nz(z&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;%如果z等于零&amp;#xff0c;赋值给一个很小的数字即可&lt;/span&gt;\nlogz&amp;#61;&lt;span class=\"hljs-built_in\"&gt;log&lt;/span&gt;(z);\nA &amp;#61; F&amp;#39;*F;\nb &amp;#61; F&amp;#39;*logz;\na &amp;#61; A\\b;&lt;span class=\"hljs-comment\"&gt;%最小二乘法&lt;/span&gt;\n\nff &amp;#61; &amp;#64;(x,y,a)&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(polyfunval(x,y,a,n)); &lt;span class=\"hljs-comment\"&gt;% 构建z的函数获取整体积分值&lt;/span&gt;\neq &amp;#61; &amp;#64;(a)[A*a-b; integral2(&amp;#64;(x,y)ff(x,y,a),&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;40&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;360&lt;/span&gt;)&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;];&lt;span class=\"hljs-comment\"&gt;%构建了方程组后面一项指的是积分为1&lt;/span&gt;\noptions &amp;#61; optimoptions(&lt;span class=\"hljs-string\"&gt;&amp;#39;fsolve&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;Display&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;FunctionTolerance&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1e-2&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;algorithm&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;levenberg-marquardt&amp;#39;&lt;/span&gt;);\n[aa, f, flag] &amp;#61; fsolve(eq, a, options);\ncount &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (flag&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; || flag&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    count &amp;#61; count &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    fprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;第%d次寻根\\n&amp;#39;&lt;/span&gt;,count);\n    [aa, f, flag] &amp;#61; fsolve(eq, a&amp;#43;a.*(&lt;span class=\"hljs-number\"&gt;0.0002&lt;/span&gt;*&lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;(a))&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;), options);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(count&amp;gt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;)\n        fprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;寻根未成功\\n&amp;#39;&lt;/span&gt;)\n        aa &amp;#61; a;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\na &amp;#61; aa;\nzfit &amp;#61; polyfunval(X,Y,a,n);\nV_after_correct &amp;#61; integral2(zfun, &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(x), &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(x), &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(y), &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(y)) &lt;span class=\"hljs-comment\"&gt;%这里可以显示积分值&lt;/span&gt;\nzfit1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;(zfit);\n&lt;span class=\"hljs-built_in\"&gt;figure&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);clf\nsurf(X,Y,zfit1, &lt;span class=\"hljs-string\"&gt;&amp;#39;facealpha&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0.8&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;%这之后的非线性方程组法和比例系数法如何仿造上面的程序继续&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;f&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;polyfunval&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x,y,a,n)&lt;/span&gt;%指数多元多项式的公式&lt;/span&gt;\n[i1, i2] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:n);\nCfit &amp;#61; arrayfun(&amp;#64;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)a(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)*x.^i1(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;).*y.^i2(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;), &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(i1), &lt;span class=\"hljs-string\"&gt;&amp;#39;uniform&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\nf &amp;#61; Cfit{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;};\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-built_in\"&gt;numel&lt;/span&gt;(Cfit)\n    f &amp;#61; f &amp;#43; Cfit{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;};\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;[X, Y, CDF, xmid, ymid]&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;ef2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(x,y,nx,ny,xminmax,yminmax)&lt;/span&gt;%输入数据&amp;#xff0c;只知道&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;和&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt;&amp;#xff0c;算出频率&lt;span class=\"hljs-title\"&gt;z&lt;/span&gt;&lt;/span&gt;\nnum &amp;#61; &lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(x);\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num~&amp;#61;&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;(y))\n   error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入的x和y长度必须相等&amp;#39;&lt;/span&gt;) \n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;gt;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数大于6个&amp;#xff0c;太多了&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;太多输入变量&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;elseif&lt;/span&gt;(nargin&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于2个&amp;#xff0c;太少了&lt;/span&gt;\n    error(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入变量数目不足!!&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;% 如果变量个数等于6个&amp;#xff0c;赋值给ymin和ymax&lt;/span&gt;\n    ymin &amp;#61; yminmax(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    ymax &amp;#61; yminmax(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数大于等于5个&amp;#xff0c;赋值给xmin和xmax&lt;/span&gt;\n    xmin &amp;#61; xminmax(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    xmax &amp;#61; xminmax(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于等于4个&amp;#xff0c;自定义xmin和xmax&lt;/span&gt;\n    xmin &amp;#61; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(x);\n    xmax &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(x)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;;\n    ymin &amp;#61; &lt;span class=\"hljs-built_in\"&gt;min&lt;/span&gt;(y);\n    ymax &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(y)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;eps&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数小于等于3个&amp;#xff0c;自定义y方向划分段数ny&lt;/span&gt;\n    ny &amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(nargin&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;% 如果变量个数等于2个&amp;#xff0c;自定义x方向划分段数nx&lt;/span&gt;\n    nx &amp;#61; &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nxg &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(xmin, xmax, nx);&lt;span class=\"hljs-comment\"&gt;%x方向的点&lt;/span&gt;\nyg &amp;#61; &lt;span class=\"hljs-built_in\"&gt;linspace&lt;/span&gt;(ymin, ymax, ny);&lt;span class=\"hljs-comment\"&gt;%y方向的点&lt;/span&gt;\nxmid &amp;#61; (xg(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&amp;#43;xg(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\nymid &amp;#61; (yg(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&amp;#43;yg(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n[X,Y] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(xmid, ymid);&lt;span class=\"hljs-comment\"&gt;%形成网格&lt;/span&gt;\n[I,J] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;meshgrid&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:nx, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:ny);&lt;span class=\"hljs-comment\"&gt;%下标网格&lt;/span&gt;\nCDF &amp;#61; arrayfun(&amp;#64;(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)sum(x&amp;gt;&amp;#61;xg(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&amp;amp;x&amp;lt;xg(&lt;span class=\"hljs-built_in\"&gt;i&lt;/span&gt;)&amp;amp;y&amp;lt;yg(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;)&amp;amp;y&amp;gt;&amp;#61;yg(&lt;span class=\"hljs-built_in\"&gt;j&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;))/num,I,J);&lt;span class=\"hljs-comment\"&gt;%形成经验分布&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;总体来讲&amp;#xff0c;比例系数法会更加合理且简单易操作&amp;#xff0c;但是要注意n的取值不要过大&amp;#xff08;建议5以内&amp;#xff09;&amp;#xff0c;根据自己的数据调整n的取值会好一些&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用多元指数多项式去拟合一组数据，如何加上x在0到40，y在0到360积分为1这个约束", ["下图为多元指数多项式，去拟合一组数据（x,y,f(x,y)），约束条件为x在0到40，y在0到360（xy的范围最好可变），f(x,y)的积分等于1。", "一维的指数多项式，拟合一组数据，积分为1的方法，可以用非线性方程组方法和比例系数法，为下面2个程序。然后二维数据的多元指数多项式不带积分为1的程序也在下面写了，如果把一维指数多项式的非线性方程组方法和比例系数法用在二维数据里，要如何编写，写了一半的程序和仿造的程序都在下面。", "\n", "\n", "一维指数多项式积分为1，非线性方程组法", "\n", "x = [", "0", ":", "1", ":", "40", "]; ", "% x随意", "\nmu = ", "20", "; sigma = ", "10", ";\ny = ", "1", "/", "sqrt", "(", "2", "*", "pi", ")/sigma*", "exp", "(-(x-mu+", "rand", "(", "size", "(x))*", "2", ").^", "2", "/", "2", "/sigma^", "2", ");", "% y随意设置，在正弦函数上加随机浮动", "\ny(y<=", "0", ") = ", "10", "*", "eps", ";\nn = ", "5", "; ", "% n随意", "\nx = x(:);\ny = y(:);\nS = ", "zeros", "(", "length", "(x), n+", "1", ");\nq = ", "ones", "(", "length", "(x),", "1", ");\nS(:,n+", "1", ")=q;\n", "for", " ", "i", " = n:", "-1", ":", "1", "\n    q = q.*x;\n    S(:,", "i", ") = q;\n", "end", "\nlogy = ", "log", "(y);\nA = S'*S;\nb = S'*logy;\na = A\\b;", "%最小二乘", "\nff = @(x,a) ", "exp", "(polyval(a,x));\neq = @(a)[A*a-b; integral(@(x)ff(x,a),", "0", ",", "40", ")", "-1", "];", "%构建了方程组后面一项指的是积分为1", "\noptions = optimoptions(", "'fsolve'", ",", "'Display'", ",", "'off'", ",", "'FunctionTolerance'", ",", "1e-2", ",", "'algorithm'", ",", "'levenberg-marquardt'", ");\n[a, f, flag] = fsolve(eq, a, options);\n", "while", " (flag>=", "4", " || flag<=", "0", ")\n    [aa, f, flag] = fsolve(eq, a+a.*(", "2", "*", "rand", "(", "size", "(a))", "-1", "), options);\n", "end", "\na = aa;\nxfit = ", "linspace", "(", "min", "(x),", "max", "(x),", "1001", ");\n", "plot", "(x,y,", "'r-'", ",xfit,", "exp", "(polyval(a,xfit)),", "'b-'", ")\n", "legend", "(", "'原值'", ",", "'拟合后'", ")\n", "\n", "一维指数多项式积分为1，比例系数法", "\n", "x = [", "0", ":", "1", ":", "40", "]; ", "% x随意", "\nmu = ", "20", "; sigma = ", "10", ";\ny = ", "1", "/", "sqrt", "(", "2", "*", "pi", ")/sigma*", "exp", "(-(x-mu+", "rand", "(", "size", "(x))*", "2", ").^", "2", "/", "2", "/sigma^", "2", ");", "% y随意设置，在正弦函数上加随机浮动", "\ny(y<=", "0", ") = ", "10", "*", "eps", ";\nn = ", "5", "; ", "% n随意", "\nx = x(:);\ny = y(:);\nS = ", "zeros", "(", "length", "(x), n+", "1", ");\nq = ", "ones", "(", "length", "(x),", "1", ");\nS(:,n+", "1", ")=q;\n", "for", " ", "i", " = n:", "-1", ":", "1", "\n    q = q.*x;\n    S(:,", "i", ") = q;\n", "end", "\nlogy = ", "log", "(y);\nA = S'*S;\nb = S'*logy;\na = A\\b;", "%最小二乘", "\nff = @(x,a) ", "exp", "(polyval(a,x));\nS = integral(@(x)ff(x,a),", "0", ",", "40", ");\na(", "end", ") = a(", "end", ") - ", "log", "(S);", "%整体除以S", "\nxfit = ", "linspace", "(", "min", "(x),", "max", "(x),", "1001", ");\n", "plot", "(x,y,", "'r-'", ",xfit,", "exp", "(polyval(a,xfit)),", "'b-'", ")\n", "legend", "(", "'原值'", ",", "'拟合后'", ")\n\n", "\n", "多元指数多项式，不带积分为1的约束程序", "\n", "%% 为了得到分布，假设了一个协方差矩阵", "\nmu=[", "20", ",", "180", "];", "%数学期望", "\nsigma=[", "20", "/", "3", " ", "0", ";", "0", ",", "60", "].^", "2", ";", "%协方差矩阵", "\nr=mvnrnd(mu,sigma,", "100000", ");", "%生成100000个样本", "\nx = r(:,", "1", ");\ny = r(:,", "2", ");\nnx = ", "40", ";\nny = ", "40", ";\nxmax = ", "40", ";\nymax = ", "360", ";\ndx = xmax/nx;\ndy = ymax/ny;\n[X, Y, C, xmid, ymid] = ef2(x,y,nx+", "1", ",ny+", "1", ",[", "0", ",xmax],[", "0", ",ymax]);\nC = C/(dx*dy);", "%单位面积上的概率即概率密度", "\n", "figure", "(", "1", ");clf;\nbar3(C)\ntitle(", "'原先数据'", ")\nxtick = ", "1", ":", "size", "(C,", "2", "); xticklabel = xmid; ", "% xtick和xticklabel一定要对应，长度相等", "\nytick = ", "1", ":", "size", "(C,", "1", "); yticklabel = ymid; ", "% ytick和yticklabel一定要对应，长度相等", "\nset(gca, ", "'xtick'", ", xtick, ", "'xticklabel'", ",xticklabel,...\n    ", "'ytick'", ", ytick, ", "'yticklabel'", ",yticklabel)\nxlabel(", "'X'", ")\nylabel(", "'Y'", ")\nx = X(:);\ny = Y(:);\nz = C(:);", "%根据x和y算出的频率，x，y，z为输入数据", "\nn = ", "7", "; ", "% n为多项式的阶数，参数一共为(n+1)²个", "\n[i1, i2] = ", "meshgrid", "(", "0", ":n);\nF = arrayfun(@(", "i", ")x.^i1(", "i", ").*y.^i2(", "i", "), ", "1", ":", "numel", "(i1), ", "'uniform'", ", ", "0", ");\nF = cell2mat(F);\n\nF1=[z,F]", "%这里是因为z数据有时候频率为0，必须把含0的数据去掉", "\n[r,c]=", "size", "(F1);\nindex=", "1", ":r; ", "%一维矢量, F1的行指标", "\nall(F1') ", "%将F1转置一下, 返回一个矢量,它的每个元素进行判断, F1所在行的元素全不为0则是1, 否则为0", "\nF1=F1(index(all(F1')),:) ", "%取出F1不含0元素的行,构成新的矩阵", "\nF1(:,", "1", ")=[]\nz(z==", "0", ")=[]\nlogz=", "log", "(z)\n\nA = F1'*F1;\nb = F1'*logz;\na = A\\b;", "%最小二乘法", "\nzfit = polyfunval(X,Y,a,n);\nzfit1 = ", "exp", "(zfit);\nsurf(X,Y,zfit1);", "%这之后的非线性方程组法和比例系数法如何仿造上面的程序继续", "\n\n", "function", " ", "f", " = ", "polyfunval", "(x,y,a,n)", "%指数多元多项式的公式", "\n[i1, i2] = ", "meshgrid", "(", "0", ":n);\nCfit = arrayfun(@(", "i", ")a(", "i", ")*x.^i1(", "i", ").*y.^i2(", "i", "), ", "1", ":", "numel", "(i1), ", "'uniform'", ", ", "0", ");\nf = Cfit{", "1", "};\n", "for", " ", "i", " = ", "2", ":", "numel", "(Cfit)\n    f = f + Cfit{", "i", "};\n", "end", "\n", "end", "\n\n", "function", " ", "[X, Y, CDF, xmid, ymid]", " = ", "ef2", "(x,y,nx,ny,xminmax,yminmax)", "%输入数据，只知道", "x", "和", "y", "，算出频率", "z", "\nnum = ", "length", "(x);\n", "if", "(num~=", "length", "(y))\n   error(", "'输入的x和y长度必须相等'", ") \n", "end", "\n", "if", "(nargin>", "6", ") ", "% 如果变量个数大于6个，太多了", "\n    error(", "'太多输入变量'", ")\n", "elseif", "(nargin<", "2", ") ", "% 如果变量个数小于2个，太少了", "\n    error(", "'输入变量数目不足!!'", ")\n", "end", "\n", "if", "(nargin==", "6", ") ", "% 如果变量个数等于6个，赋值给ymin和ymax", "\n    ymin = yminmax(", "1", ");\n    ymax = yminmax(", "2", ");\n", "end", "\n", "if", "(nargin>=", "5", ")", "% 如果变量个数大于等于5个，赋值给xmin和xmax", "\n    xmin = xminmax(", "1", ");\n    xmax = xminmax(", "2", ");\n", "end", "\n", "if", "(nargin<=", "4", ")", "% 如果变量个数小于等于4个，自定义xmin和xmax", "\n    xmin = ", "min", "(x);\n    xmax = ", "max", "(x)+", "eps", ";\n    ymin = ", "min", "(y);\n    ymax = ", "max", "(y)+", "eps", ";\n", "end", "\n", "if", "(nargin<=", "3", ")", "% 如果变量个数小于等于3个，自定义y方向划分段数ny", "\n    ny = ", "30", ";\n", "end", "\n", "if", "(nargin==", "2", ")", "% 如果变量个数等于2个，自定义x方向划分段数nx", "\n    nx = ", "30", ";\n", "end", "\nxg = ", "linspace", "(xmin, xmax, nx);", "%x方向的点", "\nyg = ", "linspace", "(ymin, ymax, ny);", "%y方向的点", "\nxmid = (xg(", "1", ":", "end", "-1", ")+xg(", "2", ":", "end", "))/", "2", ";\nymid = (yg(", "1", ":", "end", "-1", ")+yg(", "2", ":", "end", "))/", "2", ";\n[X,Y] = ", "meshgrid", "(xmid, ymid);", "%形成网格", "\n[I,J] = ", "meshgrid", "(", "2", ":nx, ", "2", ":ny);", "%下标网格", "\nCDF = arrayfun(@(", "i", ",", "j", ")sum(x>=xg(", "i", "-1", ")&x<xg(", "i", ")&y<yg(", "j", ")&y>=yg(", "j", "-1", "))/num,I,J);", "%形成经验分布", "\n", "end", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这里啊&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/141865093566172.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["TypeError: 'numpy.float64' object is not callable", ["我想用curve_fit拟合一条复杂曲线，并求出方程中的三个参数，但是运行后程序报错如下", "\n", "TypeError: 'numpy.float64' object is not callable", "\n", "\n", "代码如下，哪里出错了，我没有找到变量和函数名冲突", "\n", "import matplotlib.pyplot as plt\nimport numpy as np\n", "from", " scipy.optimize import curve_fit\n\n", "# a,b,c是需要求出来的三个参数，D,z,ee全都是已知的。 ", "\ndef dfin(x, a, b, c):\n    return ((a*z*", "*b", "-30.0)(1.0-np.exp(-np.log(2.0*(x/ee)*", "*c", "))))\n\n\nD = 30.0\nz = 1.31", "*10", "*", "*21", "\nee = 0.0016", "*D", "*", "*0", ".2709*z*", "*0", ".1147\n", "# 给出x、y对应坐标", "\nx = [1.29, 1.24, 1.11, 0.97, 0.82, 0.68, 1.07, 0.86, 0.64, 0.52]\nx = np.array(x)\nnum = [15.7, 15.0, 18.2, 18.7, 21.1, 24.5, 15.7, 21.2, 24.8, 31.7]\ny = np.array(num)\n\n", "# 非线性最小二乘法拟合", "\npopt, pcov = curve_fit(dfin, x, y)\n", "# 获取popt里面拟合系数", "\n", "print", "(popt)\na = popt[0]\nb = popt[1]\nc = popt[2]\nyvals = dfin(x, a, b, c)\n", "print", "(", "'系数a:'", ", a)\n", "print", "(", "'系数b:'", ", b)\n", "print", "(", "'系数c:'", ", c)\n", "print", "(", "'系数yvals:'", ", yvals)\n\n", "# 绘图", "\nplot1 = plt.plot(x, y, ", "'s'", ", ", "label", "=", "'original values'", ")\nplot2 = plt.plot(x, yvals, ", "'r'", ", ", "label", "=", "'polyfit values'", ")\nplt.xlabel(", "'x'", ")\nplt.ylabel(", "'y'", ")\nplt.legend(", "loc", "=4)\nplt.title(", "'curve_fit'", ")\nplt.show()\n\n"]], "Tag": "算法设计"}
{"Answer": "成员函数，参数末尾有个隐含的参数 A * this\r\n这使得它实际上多一个参数，而核函数指针的类型不匹配。", "Konwledge_Point": "线性规划和规约", "Question": ["levmar 库 dlevmar_dif函数第一个参数使用成员函数指针报错 ", ["使用levmar库通过LM算法求解非线性最小二乘。 c++版本的函数", "\nint dlevmar_dif(", "\nvoid (*func)(double ", "p, double *hx, int m, int n, void *adata), /", " functional relation describing measurements.", "\ndouble ", "p,         /", " I/O: initial parameter estimates. On output contains the estimated solution ", "/", "\ndouble *x,         /", " I: measurement vector. NULL implies a zero vector ", "/", "\nint m,             /", " I: parameter vector dimension (i.e. #unknowns) ", "/", "\nint n,             /", " I: measurement vector dimension ", "/", "\nint itmax,         /", " I: maximum number of iterations ", "/", "\ndouble opts[5]）", "\n第一个参数是函数指针，直接用函数赋值可以运行。例如", "\nvoid a(double", ",double*,int,int,void*);", "\ndlevmar_dif(a............);", "\n\n", "但是使用类成员函数指针就会报错。例如", "\nclass A", "\n{", "\npublic:", "\nA{};", "\nvoid a(double*,double*,int,int,void*);", "\n};", "\nA test;", "\nvoid (A::*a_ptr)(double*,double*,int,int,void*)=&A::a;", "\n\n", "dlevmar_dif(test.*a_ptr      ………………        );", "\n就会报错 invalid use of non-static number function.", "\n\n", "请问这是因为普通函数指针和类成员函数指针有什么本质的区别吗？", "\n\n", "或者推荐我一个好用的LM算法库也可以。", "\n\n", "谢谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;还有一种办法是在for循环中对变量设置值&amp;#xff1a;&lt;br /&gt;在第14行与16行之间添加&amp;#xff1a;&lt;br /&gt;checkvar[i].set(i)&lt;br /&gt;输出&amp;#xff1a;PY_VAR0 ~ 0为0~6&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["将checkbutton设置在类中时，不管选中与未选中的variable值都是0(语言-python)", ["当我单独设置checkbutton时，能够正常运行", "\n", "import", " tkinter ", "as", " tk \n", "from", " tkinter ", "import", " *\n", "from", " tkinter ", "import", " ttk\n", "window", " = tk.Tk()\n\n", "columns", " = [", "'组序'", ",", "'热丝电流(A)'", ",", "'激光功率'", ",", "'送丝速度'", ",", "'焊接速度'", ",", "'对接间隙'", ",", "'得分'", "]\n\ndef ", "check", "(num):\n    print(checkvar[num],", "'='", ",checkvar[num].", "get", "())\n\ncheckvar = [", "None", "]*len(", "columns", ")#生成一个具有维度的空列表\n    \n", "for", " i ", "in", " range(len(", "columns", ")):\n    checkvar[i] = tk.IntVar()\n    checkbutton = tk.Checkbutton(", "window", ",", "text", "=", "columns", "[i],variable=checkvar[i],command=lambda x=i: ", "check", "(x))\n    checkbutton.deselect()\n    checkbutton.grid(", "row", "=i,column=", "0", ",sticky=", "'w'", ")\n\n", "window", ".mainloop()\n", "\n", "结果如下", "\n", "但是当我将这段代码放到类中去就出现了如下问题，不管有没有选中，variable的返回值都为0，如下", "\n", "import", " tkinter ", "as", " tk \n", "from", " tkinter ", "import", " *\n", "from", " tkinter ", "import", " ttk\n\n", "class", " ", "nonlinear_fit_class", ":\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "#根窗口", "\n        self.root = tk.Tk()\n        self.button_nonlinear = tk.Button(self.root,text=", "'非线性拟合'", ",command=self.nonlinear_fit)\n        self.button_nonlinear.pack()\n        self.root.mainloop()\n\n    ", "#定义非线性拟合函数", "\n    ", "def", " ", "nonlinear_fit", "(", "self", "):\n        window = tk.Tk()\n\n        columns = [", "'组序'", ",", "'热丝电流(A)'", ",", "'激光功率'", ",", "'送丝速度'", ",", "'焊接速度'", ",", "'对接间隙'", ",", "'得分'", "]\n\n        ", "def", " ", "check", "(", "num", "):\n            ", "print", "(checkvar[num],", "'='", ",checkvar[num].get())\n\n        checkvar = [", "None", "]*", "len", "(columns)", "#生成一个具有维度的空列表", "\n\n        ", "for", " i ", "in", " ", "range", "(", "len", "(columns)):\n            checkvar[i] = tk.IntVar()\n            checkbutton = tk.Checkbutton(window,text=columns[i],variable=checkvar[i],command=", "lambda", " x=i: check(x))\n            checkbutton.deselect()\n            checkbutton.grid(row=i,column=", "0", ",sticky=", "'w'", ")\n        ", "print", "(checkvar)\n\n        ", "#button = tk.Button(window,text='应用',command=check).grid(row=1,column=0)", "\n\n        window.mainloop()\n        \nA = nonlinear_fit_class()\n", "\n", "\n", "我就是希望能够通过选中checkbutton来索引对应checkbutton的名称，所以想借助variable的值来高速机器我选中了这个button，再获取button名称", "\n", "能力有限，卡了两天都没解决这个问题，上网没找到类似问题，来这里寻求各位的帮助"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在保存和加载时使用的是二进制文件&amp;#xff0c;这是因为在 Save 函数中使用了 fwrite&amp;#xff0c;而在 Load 函数中使用了 fread。&lt;/p&gt;\n&lt;p&gt;在这种情况下&amp;#xff0c;应该将文件以二进制格式打开&amp;#xff0c;而不是使用文本模式。在 Save 函数中&amp;#xff0c;应使用 &amp;#34;wb&amp;#34; 模式打开文件&amp;#xff0c;而在 Load 函数中&amp;#xff0c;应使用 &amp;#34;rb&amp;#34; 模式打开文件。&lt;/p&gt;\n&lt;p&gt;在 Load 函数中&amp;#xff0c;需要将新节点的 next 指针设置为 NULL&amp;#xff0c;否则将在读取新节点时可能遇到问题。&lt;/p&gt;\n&lt;p&gt;如果希望保留原来的信息&amp;#xff0c;并在文件的末尾添加新的信息&amp;#xff0c;则应在 Save 函数中使用 &amp;#34;a&amp;#34; 模式打开文件。&lt;/p&gt;\n&lt;p&gt;在使用二进制文件时&amp;#xff0c;请确保结构体中没有任何动态分配的内存&amp;#xff0c;因为这可能会导致问题。例如&amp;#xff0c;如果结构体中有指针字段&amp;#xff0c;则可能需要编写自己的读写函数来处理这些字段。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["使用fwrite()函数和fread()函数发生乱码问题", ["问题遇到的现象和发生背景", "\n", "我做了一个基于哈希表的身份证查询系统，运行程序想把输入的信息写入文件中", "\n", "void", " ", "Save", "(IDLnode*& L)", "\n", "{\n    FILE* fp = ", "fopen", "(", "\"D:\\\\IDcardSearchSystem.txt\"", ", ", "\"w\"", ");", "//打开文件", "\n    ", "if", " (fp == ", "NULL", ")\n    {\n        ", "perror", "(", "\"打开文件失败\\n\"", ");\n        ", "system", "(", "\"pause\"", ");\n        ", "system", "(", "\"cls\"", ");\n        ", "return", ";\n    }\n    IDLnode* p = L;\n    ", "while", " (p != ", "NULL", ")\n    {\n        ", "fwrite", "(&p, ", "sizeof", "(IDLnode),", "1", ", fp);\n        p = p->next;\n    }\n    ", "fclose", "(fp);    ", "//关闭文件", "\n    ", "printf", "(", "\"保存成功！\\n\"", ");\n}\n", "void", " ", "Load", "(IDLnode*& L)", "\n", "{\n    FILE* fp = ", "fopen", "(", "\"D:\\\\IDcardSearchSystem.txt\"", ", ", "\"r\"", ");", "//打开文件", "\n\n    ", "if", " (fp == ", "NULL", ")\n    {\n        ", "perror", "(", "\"\\n打开文件失败.\\n\"", ");\n        ", "return", ";\n    }\n\n    IDLnode p;\n    ", "while", " (", "fread", "(&p, ", "sizeof", "(IDLnode),", "1", ", fp))\n    {\n        ", "//创建新节点", "\n        IDLnode* pNewNode = (IDLnode*)", "malloc", "(", "sizeof", "(IDLnode));\n\n        pNewNode->next = ", "NULL", ";\n\n        ", "//memcpy(pNewNode, &stu, sizeof(IDLnode));", "\n\n        ", "if", " (pNewNode != ", "NULL", ")\n        {\n            ", "strcpy", "(pNewNode->ID, p.ID);\n            ", "strcpy", "(pNewNode->Name, p.Name);\n            ", "strcpy", "(pNewNode->Address, p.Address);\n            pNewNode->next = L;\n            L = pNewNode;\n        }\n\n    }\n\n    ", "fclose", "(fp);\n\n    ", "printf", "(", "\"\\n读取成功！\\n\"", ");\n\n    ", "system", "(", "\"pause\"", ");\n    ", "system", "(", "\"cls\"", ");\n}\n", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "但是当我重新运行程序后，读取信息并将读取的信息打印在屏幕上发现是乱码，而非我之前填入的信息，这是为什么啊", "\n", "用代码块功能插入代码，请勿粘贴截图。 不用代码块回答率下降 50%", "\n", "以下是部分代码", "\n", "#", "define", " HashTableLength 50        ", "//哈希表长度", "\n", "#", "define", " IdLength 20        ", "//身份证号长度", "\n", "#", "define", " Prime 47    ", "//质数", "\n", "#", "define", " NameLength 30", "\n", "#", "define", " AddressLength 50", "\n\n", "//身份证单链表", "\n", "typedef", " ", "struct", " ", "IDLnode", "\n{\n    ", "char", " ID[IdLength];        ", "//身份证号", "\n    ", "char", " Name[NameLength];            ", "//姓名", "\n    ", "char", " Address[AddressLength];        ", "//地址", "\n    ", "struct", " ", "IDLnode", "* next;\n}IDLnode;\n\n", "//身份证号哈希表", "\n", "typedef", " ", "struct", " ", "IDHashTable", "\n{\n    ", "char", " HI_ID[IdLength];\n    ", "char", " HI_Name[NameLength];\n    ", "char", " HI_Address[AddressLength];\n    ", "int", " state;\n}IDHashTable;\n\n", "//姓名哈希表", "\n", "typedef", " ", "struct", " ", "NameHashTable", "\n{\n    ", "char", " HN_ID[IdLength];\n    ", "char", " HN_Name[NameLength];\n    ", "char", " HN_Address[AddressLength];\n    ", "int", " state;\n}NameHashTable;\n", "bool", " ", "Insert", "(IDLnode*& L, IDHashTable*& IH, NameHashTable*& NH, ", "const", " ", "char", "* id, ", "const", " ", "char", "* name, ", "const", " ", "char", "* address)", "\n", "{\n    ", "//头插添加进链表", "\n    IDLnode* p = (IDLnode*)", "malloc", "(", "sizeof", "(IDLnode));\n    ", "if", " (p != ", "NULL", ")\n    {\n        ", "strcpy", "(p->ID, id);\n        ", "strcpy", "(p->Name, name);\n        ", "strcpy", "(p->Address, address);\n        p->next = L;", "//->next;", "\n        L = p;\n    }\n    ", "const", " ", "char", " temp[", "1", "] = { ", "'\\0'", " };\n    ", "//用哈希函数抽象出关键字放入哈希表中", "\n    ", "int", " namekey = ", "HashName", "(name);        ", "//获取关键字", "\n    ", "int", " idkey = ", "HashID", "(id);\n    ", "//放入身份证号哈希表中", "\n    ", "while", " (IH[idkey].state == ", "1", " && ", "strcmp", "(IH[idkey].HI_ID, temp) != ", "0", ")    ", "//线性探测再散列法，用state判断是否冲突，当state=1为冲突，向后存放关键字", "\n        idkey++;\n    ", "strcpy", "(IH[idkey].HI_ID, id);\n    ", "strcpy", "(IH[idkey].HI_Name, name);\n    ", "strcpy", "(IH[idkey].HI_Address, address);\n    IH[idkey].state = ", "1", ";\n        \n    ", "//放入姓名哈希表中", "\n    ", "while", " (NH[namekey].state == ", "1", " && ", "strcmp", "(NH[namekey].HN_ID, temp) != ", "0", ")\n        namekey++;\n    ", "strcpy", "(NH[namekey].HN_ID, id);\n    ", "strcpy", "(NH[namekey].HN_Name, name);\n    ", "strcpy", "(NH[namekey].HN_Address, address);\n    NH[namekey].state = ", "1", ";\n\n    ", "return", " ", "true", ";\n}\n", "\n", "运行结果及详细报错内容", "\n", "\n", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果你要手动触发就把这个函数再拎出来一份&amp;#xff0c;不然你这个只有加载页面触发&amp;#xff0c;然后下边点击的时候没有这个del函数呀&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/807795913666192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用jsp写了个表格删除和添加，删除用了触发事件按，但是触发事件没有反应怎么会是。", ["问题遇到的现象和发生背景", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "\n```javascript\n", "<%@ page language=", "\"java\"", " contentType=", "\"text/html; charset=utf-8\"", "\n    pageEncoding=", "\"utf-8\"", "%>", "\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", ">", "\n", "<", "head", ">", "\n", "<", "meta", " ", "charset", "=", "\"utf-8\"", ">", "\n", "<", "title", ">", "表格的添加和删除", "</", "title", ">", "\n", "</", "head", ">", "\n", "<", "script", ">", "\n    ", "window", ".", "onload", "=", "function", "(", "){\n        ", "function", " ", "del", "(", "object", "){\n            ", "var", " table=object.", "parentNode", ".", "parentNode", ".", "parentNode", ";\n            ", "var", " tr=object.", "parentNode", ".", "parentNode", ";\n            table.", "removeChild", "(tr);\n        }\n    }\n", "</", "script", ">", "\n", "<", "body", ">", "\n", "<%!\n", "public", " ", "class", " Teacher{\n    int id;\n    String name;\n    String brithday;\n    String address;\n    double salary;\n    String operate;\n    ", "public", " Teacher(int id,String name,String brithday,String address,double salary,String operate){\n        this.id=id;\n        this.name=name;\n        this.brithday=brithday;\n        this.address=address;\n        this.salary=salary;\n        this.operate=operate;\n    }\n    int getId()\n    {\n        return id;\n    }\n    String getName()\n    {\n        return name;\n    }\n    String getBrith", "day", "()\n    {\n        return brithday;\n    }\n    String getAddress()\n    {\n        return address;\n    }\n    double getSalary()\n    {\n        return salary;\n    }\n    String getOperate()\n    {\n        return operate;\n    }\n}\n%>", "\n", "<%\nTeacher[] teacher=", "new", " Teacher[", "10", "];\nteacher[", "0", "]=", "new", " Teacher(", "11201", ",", "\"文华\"", ",", "\"1980-6-12\"", ",", "\"淮南\"", ",", "6600", ",", "\"英语\"", ");\nteacher[", "1", "]=", "new", " Teacher(", "11202", ",", "\"余祥\"", ",", "\"1984-7-23\"", ",", "\"合肥\"", ",", "7000", ",", "\"数据结构\"", ");\nteacher[", "2", "]=", "new", " Teacher(", "11203", ",", "\"于资\"", ",", "\"1985-2-1\"", ",", "\"南京\"", ",", "6700", ",", "\"离散\"", ");\nteacher[", "3", "]=", "new", " Teacher(", "11204", ",", "\"卜悦\"", ",", "\"1991-5-16\"", ",", "\"合肥\"", ",", "6600", ",", "\"高等数学\"", ");\nteacher[", "4", "]=", "new", " Teacher(", "11205", ",", "\"王毅\"", ",", "\"1987-7-16\"", ",", "\"芜湖\"", ",", "6600", ",", "\"线性代数\"", ");\nteacher[", "5", "]=", "new", " Teacher(", "11206", ",", "\"赵鑫\"", ",", "\"1988-3-26\"", ",", "\"合肥\"", ",", "6600", ",", "\"java\"", ");\nteacher[", "6", "]=", "new", " Teacher(", "11207", ",", "\"丁莹\"", ",", "\"1990-11-21\"", ",", "\"蚌埠\"", ",", "6600", ",", "\"c++\"", ");\nteacher[", "7", "]=", "new", " Teacher(", "11208", ",", "\"程明\"", ",", "\"1984-12-17\"", ",", "\"合肥\"", ",", "6600", ",", "\"c语言\"", ");\nteacher[", "8", "]=", "new", " Teacher(", "11209", ",", "\"张强\"", ",", "\"1986-9-16\"", ",", "\"阜阳\"", ",", "6600", ",", "\"毛概\"", ");\nteacher[", "9", "]=", "new", " Teacher(", "11210", ",", "\"周霞\"", ",", "\"1991-5-26\"", ",", "\"合肥\"", ",", "6600", ",", "\"思修\"", ");\n%>", "\n", "<", "table", " ", "align", "=", "\"center\"", " ", "border", "=", "\"2\"", " ", "width", "=", "\"70%\"", ">", "\n", "<", "tr", ">", "\n", "<", "th", ">", "教工号", "</", "th", ">", "<", "th", ">", "姓名", "</", "th", ">", "<", "th", ">", "出生日期", "</", "th", ">", "<", "th", ">", "籍贯", "</", "th", ">", "<", "th", ">", "薪水", "</", "th", ">", "<", "th", ">", "课程", "</", "th", ">", "<", "th", ">", "操作", "</", "th", ">", "\n", "</", "tr", ">", "\n", "<%\nint i;\n", "for", "(i=", "0", ";i<teacher.length;i++){%>", "\n", "<", "tr", ">", "\n", "<", "td", " ", "align", "=", "\"center\"", ">", "<%=teacher[i].getId() %>", "</", "td", ">", "\n", "<", "td", " ", "align", "=", "\"center\"", ">", "<%=teacher[i].getName() %>", "</", "td", ">", "\n", "<", "td", " ", "align", "=", "\"center\"", ">", "<%=teacher[i].getBrith", "day", "() %>", "</", "td", ">", "\n", "<", "td", " ", "align", "=", "\"center\"", ">", "<%=teacher[i].getAddress() %>", "</", "td", ">", "\n", "<", "td", " ", "align", "=", "\"center\"", ">", "<%=teacher[i].getSalary() %>", "</", "td", ">", "\n", "<", "td", " ", "align", "=", "\"center\"", ">", "<%=teacher[i].getOperate() %>", "</", "td", ">", "\n", "<", "td", " ", "align", "=", "\"center\"", ">", "<", "a", " ", "href", "=", "\"javascript:void(0);\"", " ", "onclick", "=", "\"del(this)\"", ">", "删除", "</", "a", ">", " ", "\n", "<", "a", " ", "href", "=", "\"#\"", ">", "修改", "</", "a", ">", "\n", "</", "td", ">", "\n", "<%}%>", "\n", "</", "table", ">", "\n", "</", "body", ">", "\n", "</", "html", ">", "\n\n", "\n", "\n", "运行结果及报错内容", "\n", "写个了删除的触发事件但是没有反应是怎么回事"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/technologist_37/article/details/118500579\"&gt;https://blog.csdn.net/technologist_37/article/details/118500579&lt;/a&gt;&lt;br /&gt;一样的功能已经写好了&amp;#xff0c;把main中注释掉的冒泡排序恢复出来&amp;#xff0c;下面那个排序注释掉&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["修正代码，实现需求，给我正确代码，晚上九点之前给回复", ["任务及要求：", "（1）首先完成线性链表的定义和创建，确保链表的第一个节点为哨兵节点，不存放有效的数据；", "（2）利用文件的相关操作，动态开辟节点存储空间，将存放在磁盘某个路径中的文件“stuinfo.txt”信息逐条读入，并依次存入到线性链表的每个节点中，信息如下；", "00001 张三 100", "00002 李四 99", "00003 王五 100", "00004 王六 89", "00005 江涛 98", "00006 陈琪 88", "00007 祁廷 91", "（3）接下来，将学号为‘00004’的节点删除；", "（4）再接下来，利用冒泡排序，对链表继续升序排序；", "（5）将完整的线性链表信息从头到尾依次存储到磁盘某个路径下的“score.txt”文件中，存储格式和“stuinfo.txt”文件相同。", "问题:", "我写的代码运行时找不到节点信息，删除不了，后面的代码也没法运行，保存到文件全是乱码。", "代码:", "#include <stdio.h>", "#include<stdlib.h>", "#include<string.h>", "#define LEN sizeof(stuInfo)", "typedef struct stuInfo", "{", "char id[12];            //数据成员    char name[15];    float score;    struct stuInfo *next;}stuInfo, *stu;", "stu headStu;", "void save(stu headStu);", "stuInfo *create(stuInfo *headStu);void Lsort(stu headStu);stuInfo *create(stuInfo *headStu){    int N=7;    headStu=(stuInfo *)malloc(LEN);    stuInfo *p,*q;    p=headStu;    for(int i=0;i<N;i++)    {        q=(stuInfo *)malloc(LEN);        p->next=q;        p->next;        q->next=NULL;        p=q;    }    printf(\"创建结束！\\n\");    return headStu;}void ListStu(stu headStu){    int num;    stuInfo *p;    p=headStu->next;    while(p!=NULL)    {        printf(\"%d:%s %s %f\\n\",++num,p->id,p->name,p->score);        p=p->next;    }    printf(\"打印完毕\\n\");}stu Bubble_Sort(stu headStu){    stu p1,p2;    p1=headStu->next;    p2=headStu;    while(p1!=NULL)    {        while(p1->next!=NULL)        {            if(p1->scorescore)            {                float temp=p1->score;                p1->score=p1->next->score;                p1->next->score=temp;            }            p1=p1->next;        }        p1=p2->next;        p2=p1;    }}stu Delete_stuInfo(stu headStu,char delId[12]){    stu lp,p;    lp=headStu;    p=lp->next;    if(headStu==NULL)    {        printf(\"链表为空\\n\");        return;    }    while(strcmp(p->id,delId)!=0&&(p->next!=NULL))    {        lp=p;        p=p->next;    }    if((strcmp(p->id,delId)==0))    {        lp->next=p->next;        free(p);    }    else        printf(\"没有找到该学生的信息！\\n\");    return headStu;}void Lsort(stu headStu){    stu head;    int x=0;    float t;    stu end,p,next;    if(head==NULL)        return;    for(p=headStu;p->next!=NULL;p=p->next)    end=p;    while(end!=headStu)    {        for(p=headStu;p!=end;p=p->next)        {            if(p->next->score>p->next->score)            {                t=p->score;p->score=p->next->score;p->next->score=t;            }            next=p;        }        end=next;    }}void save(stu headStu){    int N=7;    FILE *fp;    stu p=headStu->next;    if((fp=fopen(\"score.txt\",\"w+\"))==NULL)    {        printf(\"文件打开失败！\\n\");        exit(-1);    }    else    {        printf(\"打开save成功\\n\");    }    for(int i=0;i<N;i++)    {        fprintf(fp,\"%s %s %f\",p->id,p->name,p->score);        p=p->next;    }    printf(\"文件保存成功！\\n\");    fclose(fp);}void load(){    char id[12],name[15];    float score;    int N=7;    FILE *fp;    fp=fopen(\"stuinfo.txt\",\"rb+\");    if(fp==NULL)    {        printf(\"文件打开失败！\");        exit(-1);    }    else    {        printf(\"读取成功:\\n\");    }    stuInfo *h,*p,*q;    h=(stuInfo *)malloc(LEN);    p=h;    printf(\" 学号 姓名 分数\\n\");    while(N>0)    {        q=(stuInfo *)malloc(LEN);        fscanf(fp,\"%s %s %f\",&q->id,&q->name,&q->score);        printf(\"%s %s %f\\n\",q->id,q->name,q->score);        p->next=q;        if(q->next=NULL)        p=q;        N--;    }    printf(\"读取结束!\\n\");    fclose(fp);}int main(){    stu head;    char id[12];    head=create(head);    load();    printf(\"请输入要删除学生的学号：\\n\");    scanf(\"%s\",id);    head=Delete_stuInfo(head,id);    Lsort(head);    save(head);    ListStu(head);    return 0;}"]], "Tag": "算法设计"}
{"Answer": "我只专注于回答怎么解决你的这个很紧急的问题，所以答案也你想要的。\r\n捕获在另外一个activity中的一个activity的动作需要三个步骤。\r\n加载第二个activity（你的‘camera activity’）作为一个子activity，用startActivityForResult而不是startActivity。\r\n\r\n    Intent i = new Intent(this,CameraActivity.class);    \r\n    startActivityForResult(i, STATIC_INTEGER_VALUE);\r\n\r\n\r\n在这个子activity（camera activity）中，当你返回到父app时用额外的bundle，你需要创建一个新的包含索引tab的intent来显示，而不仅仅是当一个用户点击不同的tab图片的时候关闭activity。在关闭camera activity结束之前传递它到父调用setResult。\r\n\r\n    resultIntent = new Intent(null);\r\n    resultIntent.putExtra(PUBLIC_STATIC_STRING_IDENTIFIER, tabIndexValue);\r\n    setResult(Activity.RESULT_OK, resultIntent);\r\n    finish();\r\n\r\n最后一步是在调用activity的时候，重写onActivityResult来监听camera activity的回调。从返回的Intent获得额外的来决定你想要显示的索引tab\r\n\r\n    @Override \r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {     \r\n      super.onActivityResult(requestCode, resultCode, data); \r\n      switch(requestCode) { \r\n        case (STATIC_INTEGER_VALUE) : { \r\n          if (resultCode == Activity.RESULT_OK) { \r\n          int tabIndex = data.getIntExtra(PUBLIC_STATIC_STRING_IDENTIFIER);\r\n          // TODO Switch tabs using the index.\r\n          } \r\n          break; \r\n        } \r\n      } \r\n    }", "Konwledge_Point": "线性规划和规约", "Question": ["Android：捕获一个activity的返回", ["关于启动一个新的activity我遇到了一个问题。主要的问题就是，在一个视图上我有三个tab", "\nA) 包含gMap activity", "\n B) camera activity", "\n C)一些随机的文本字段", "\n要求就是这个应用程序要在肖像模式下运行。", "\n除了Camera Preview Surface (B)，所有的三个tab都正常。它旋转了90度。唯一的方法是把应用程序设置成横屏显示模式，移除所有的标签。但是这样是非常不切实际的。", "\n我的解决方案就是：代替", "\n我的camera activity和一个空的常规activity，除了", "\n\n", "Intent i = new Intent(this,CameraActivity.class);\n    startActivity(i);\n", "\n\n", "这将启动我的CameraActivity。而且很正常。我必须做一个包含3个图片的线性布局使它看起来像真正的tab，所以我可以试着模拟操作系统的tab，旋转屏幕成横屏然后保持视觉效果作为图像。用户可以点击其中的一个图像（按钮）来显示下一个tab。这是我的想法。它应该在一个tab中退出我的‘camera activity’，返回到‘blank activity’，它应该解释为从我的image中单击desiered tab。", "\n\n", "最主要的就是，当它返回时，它在一个tab下返回一个空白（黑色）页面（因为它是空的）。我怎么能够捕获调用activity的返回这个页面的返回事件，然后看看做了什么动作？", "\n当点击退出camera activity时，我可以设置一个点击的监听事件以便可以对假tab（图像）被点击做出会用。一旦退出，tab应该更新以便你来返回。有什么建议么？", "\n谢谢。"]], "Tag": "算法设计"}
{"Answer": "选择排序法的的降序排列没有实现是因为内层循环有个地方写错了\r\nfor(j=n+1;j&lt;n;j++)应该改为for(j=i+1;j&lt;n;j++)\r\n折半查找法这里不是用不了，是你的scanf里面多写了\\n\r\nscanf(\"%ld\\n\",&amp;x1);应该是scanf(\"%ld\",&amp;x1);\r\n```\r\n #include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#define N 20\r\nint Readscore(int  score[],long id[]);\r\nint Linsearch(long id[],long m,int n);\r\nvoid Linsort(int score[],long id[],int n);\r\nvoid Selectsort(int score[],long id[],int n);\r\nint Binsearch(long id[],long m,int n);\r\nvoid Printf(int score[],long id[],int n);\r\n \r\nint main()\r\n{\r\n    int score[N];//记录学生成绩\r\n    long id[N];//记录学生学号\r\n    int num;//接收 READscore的返还值，即学生人数\r\n    long x,x1;\r\n    int a,a1;//接收返回学号的值\r\n \r\n    //记录学生成绩\r\n    num=Readscore(score,id);\r\n \r\n    //输出成绩和学号\r\n    Printf(score,id,num);\r\n \r\n \r\n    // 顺序查找法\r\n    printf(\"输入你要查找的学生的学号：\");\r\n    scanf(\"%ld\",&amp;x);\r\n    a=Linsearch(id,x,num);\r\n    printf(\"%d %ld\\n\",score[a],id[a]);\r\n \r\n    //线性排序法\r\n    Linsort(score,id,num);\r\n \r\n    //输出成绩和学号\r\n    Printf(score,id,num);\r\n \r\n    //选择排序法\r\n    Selectsort(score,id,num);\r\n \r\n    //输出成绩和学号\r\n    Printf(score,id,num);\r\n \r\n    //折半查找法\r\n    printf(\"输入你要查找的学生的学号：\");\r\n    scanf(\"%ld\",&amp;x1);\r\n    a1=Binsearch(id,x1,num);\r\n    if(a1 != -1)\r\n    {\r\n        printf(\"%d %ld\\n\",score[a1],id[a1]);\r\n    }\r\n    else\r\n    {\r\n        printf(\"大兄弟，没这个人啊!\");\r\n    }\r\n \r\n \r\n    //输出成绩和学号\r\n    Printf(score,id,num);\r\n \r\n \r\n    return 0;\r\n}\r\n \r\n//录入学生成绩 和学号\r\nint Readscore(int score[],long id[])\r\n{\r\n    int i=-1;\r\n    do\r\n    {\r\n        i++;\r\n        printf(\"input score and id:\");\r\n        scanf(\"%d %ld\",&amp;score[i],&amp;id[i]);\r\n    }while((score[i] &gt;= 0)&amp;&amp;(id[i] &gt;=0));\r\n    return i;\r\n}\r\n//顺序查找\r\nint Linsearch(long id[],long m,int n)\r\n{\r\n    int i;\r\n \r\n    for(i=0;i&lt;n;i++)\r\n    {\r\n        if(m == id[i])\r\n        {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n//线性排序,升序排\r\nvoid Linsort(int score[],long id[],int n)\r\n{\r\n    int i,j;\r\n    int temp1,temp2;\r\n \r\n    for(i=0;i&lt;n-1;i++)\r\n    {\r\n \r\n        for(j=i+1;j&lt;n;j++)\r\n        {\r\n            if(score[i]&gt;score[j])\r\n            {\r\n                //交换成绩\r\n                temp1=score[j];\r\n                score[j]=score[i];\r\n                score[i]=temp1;\r\n                //交换学号\r\n                temp2=id[j];\r\n                id[j]=id[i];\r\n                id[i]=temp2;\r\n            }\r\n        }\r\n    }\r\n}\r\n//选择排序法,降序排\r\nvoid Selectsort(int score[],long id[],int n)\r\n{\r\n    int i,j,k;\r\n    int temp1;\r\n    long temp2;\r\n \r\n    for(i=0;i&lt;n-1;i++)\r\n    {\r\n        k=i;\r\n        for(j=i+1;j&lt;n;j++)\r\n        {\r\n            if(score[j] &gt; score[k])\r\n            {\r\n                k=j;\r\n            }\r\n        }\r\n        if(k != i)\r\n        {\r\n            //交换成绩\r\n            temp1 = score[k];\r\n            score[k] = score[i];\r\n            score[i] = temp1;\r\n \r\n            //交换学号\r\n            temp2 = id[k];\r\n            id [k] =id[i];\r\n            id[i] = temp2;\r\n        }\r\n    }\r\n}\r\n \r\n//折半查找法\r\nint Binsearch(long id[],long m,int n)\r\n{\r\n    int high = n-1;\r\n    int low = 0;\r\n    int mid;\r\n \r\n    while(low &lt;= high)\r\n    {\r\n        mid = (high+low)/2;\r\n        if(m &lt; id[mid])\r\n        {\r\n            high = mid-1;\r\n        }\r\n        else if(m &gt; id[mid])\r\n        {\r\n            low = mid+1;\r\n        }\r\n        else\r\n        {\r\n            return mid;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n//输出函数\r\nvoid Printf(int score[],long id[],int n)\r\n{\r\n    int i;\r\n    printf(\"=============================\\n\");\r\n    for(i=0;i &lt; n;i++)\r\n    {\r\n \r\n        printf(\"%d %ld\\n\",score[i],id[i]);\r\n \r\n    }\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201604/22/1461303479_907686.png)", "Konwledge_Point": "线性规划和规约", "Question": ["新人问一个c语言问题，麻烦各位帮忙看一下", ["一个小型成绩管理系统：", "\n#include ", "\n#include ", "\n#define N 40", "\nint Readscore(int  score[],long id[]);", "\nint Linsearch(long id[],long m,int n);", "\nvoid Linsort(int score[],long id[],int n);", "\nvoid Selectsort(int score[],long id[],int n);", "\nint Binsearch(long id[],long m,int n);", "\nvoid Printf(int score[],long id[],int n);", "\n\n", "int main()", "\n{", "\n    int score[N];//记录学生成绩", "\n    long id[N];//记录学生学号", "\n    int num;//接收 READscore的返还值，即学生人数", "\n    long x,x1;", "\n    int a,a1;//接收返回学号的值", "\n\n", "//记录学生成绩\nnum=Readscore(score,id);\n\n//输出成绩和学号\nPrintf(score,id,num);\n\n\n// 顺序查找法\nprintf(\"输入你要查找的学生的学号：\");\nscanf(\"%ld\",&x);\na=Linsearch(id,x,num);\nprintf(\"%d %ld\\n\",score[a],id[a]);\n\n//线性排序法\nLinsort(score,id,num);\n\n//输出成绩和学号\nPrintf(score,id,num);\n\n//选择排序法\nSelectsort(score,id,num);\n\n//输出成绩和学号\nPrintf(score,id,num);\n\n//折半查找法\nprintf(\"输入你要查找的学生的学号：\");\nscanf(\"%ld\\n\",&x1);\na1=Binsearch(id,x1,num);\nif(a1 != -1)\n{\n    printf(\"%d %ld\\n\",score[a1],id[a1]);\n}\nelse\n{\n    printf(\"大兄弟，没这个人啊!\");\n}\n\n\n//输出成绩和学号\nPrintf(score,id,num);\n\n\nreturn 0;\n", "\n\n", "}", "\n\n", "//录入学生成绩 和学号", "\nint Readscore(int score[],long id[])", "\n{", "\n    int i=-1;", "\n    do", "\n    {", "\n        i++;", "\n        printf(\"input score and id:\");", "\n        scanf(\"%d %ld\",&score[i],&id[i]);", "\n    }while((score[i] >= 0)&&(id[i] >=0));", "\n    return i;", "\n}", "\n//顺序查找", "\nint Linsearch(long id[],long m,int n)", "\n{", "\n    int i;", "\n\n", "for(i=0;i<n;i++)\n{\n    if(m == id[i])\n    {\n        return i;\n    }\n}\nreturn -1;\n", "\n\n", "}", "\n//线性排序,升序排", "\nvoid Linsort(int score[],long id[],int n)", "\n{", "\n    int i,j;", "\n    int temp1,temp2;", "\n\n", "for(i=0;i<n-1;i++)\n{\n\n    for(j=i+1;j<n;j++)\n    {\n        if(score[i]>score[j])\n        {\n            //交换成绩\n            temp1=score[j];\n            score[j]=score[i];\n            score[i]=temp1;\n            //交换学号\n            temp2=id[j];\n            id[j]=id[i];\n            id[i]=temp2;\n        }\n    }\n}\n", "\n\n", "}", "\n//选择排序法,降序排", "\nvoid Selectsort(int score[],long id[],int n)", "\n{", "\n    int i,j,k;", "\n    int temp1;", "\n    long temp2;", "\n\n", "for(i=0;i<n-1;i++)\n{\n    k=i;\n    for(j=n+1;j<n;j++)\n    {\n        if(score[j] > score[k])\n        {\n            k=j;\n        }\n    }\n    if(k != i)\n    {\n        //交换成绩\n        temp1 = score[k];\n        score[k] = score[i];\n        score[i] = temp1;\n\n        //交换学号\n        temp2 = id[k];\n        id [k] =id[i];\n        id[i] = temp2;\n    }\n}\n", "\n\n", "}", "\n\n", "//折半查找法", "\nint Binsearch(long id[],long m,int n)", "\n    {", "\n        int high = n-1;", "\n        int low = 0;", "\n        int mid;", "\n\n", "    while(low <= high)\n    {\n        mid = (high+low)/2;\n        if(m < id[mid])\n        {\n            high = mid-1;\n        }\n        else if(m > id[mid])\n        {\n            low = mid+1;\n        }\n        else\n        {\n            return mid;\n        }\n    }\n    return -1;\n}\n", "\n\n", "//输出函数", "\nvoid Printf(int score[],long id[],int n)", "\n{", "\n    int i;", "\n    printf(\"=============================\\n\");", "\n    for(i=0;i < n;i++)", "\n    {", "\n\n", "    printf(\"%d %ld\\n\",score[i],id[i]);\n\n}\n", "\n\n", "}", "\n为什么选择排序法升序没有实现？", "\n还有，为什么折半查找法用不了？就是输进去学号之后程序不继续往下执行。", "\n我实在找不出错在哪了。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;y &amp;#61;sigmoid( Wx&amp;#43;b)这类感知机模型&amp;#xff0c;能学到的特性有限&amp;#xff0c;难以学习复杂特性。通常是和其他网络搭配使用的。\n\n学习到曲线规律性的变化&amp;#xff0c;色谱图这种的&amp;#xff0c;我比较推荐LSTM&amp;#xff08;RNN神经网络的一种&amp;#xff09;\n\n如果是一些医学图片&amp;#xff0c;我推荐CNN神经网络&amp;#xff08;UNet结构常用于医学图片的处理&amp;#xff09;\n\n训练好神经网络&amp;#xff0c;是需要有大量的数据的。\n\n关于自学这方面&amp;#xff0c;Python的话&amp;#xff0c;目前PyTorch框架还是值得考虑的&amp;#xff0c;PyTorch官网也提供了很好的全套的中文教程。机器学习和神经网络相关的&amp;#xff0c;比较推荐吴恩达老师的课&amp;#xff08;B站搜索就行&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["想通过神经网络分析化学实验图谱，求建议", ["本小白非计算机专业，目前自学python和机器学习，想通过神经网络分析化学方面的实验分析图谱，比如色谱图（下图）。这个曲线有一些凸起（峰），一些自然过程会导致这些凸起的高度发生变化，因此可以通过这个图的形态分析这些自然过程。但是这些变化不是线性的，而且经常有多种过程、因素叠加在一起，总之就是比较复杂。", "\n\n", " ", "\n\n", "打个比方：假如这个图分析自人体血液，而已知人的年龄、肥胖程度、健康状况会对某些凸起（峰）造成规律性改变，因此可以通过曲线的形态反推这些信息。", "\n\n", " ", "\n\n", "我手上有许多图谱和已知的结果，想让神经网络学习这些信息，最后实现自动分析。目前我自己学会了单隐藏层的BP神经网络，并通过识别曲线像素点竖向坐标的方式可以把这个曲线转换成一个一维数组。但问题在于，在保证图片精度的情况下（分辨率不能太低），转换得到的一维数组经常多达一两千个数（就是输入层有一两千个节点，输出层是单个节点），在我目前的代码下学习效果非常差（可以说就没效果），运行时间也很长。", "\n\n", " ", "\n\n", "求大佬们给些建议和方向，BP神经网络能否实现我这个需求？还是换用别的方法？", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n"]], "Tag": "算法设计"}
{"Answer": "把transforms.Normalize((0.1307),(0.3081))改为transforms.Normalize((0.1307,),(0.3081,))", "Konwledge_Point": "线性规划和规约", "Question": ["请求大神帮帮我，加载MNIST数据集后，显示IndexError: too many indices for tensor of dimension 0", ["我想用线性的模型训练一下MNIST数据集，在运行到", "\ndef train(epoch):", "\n    running_loss = 0.0", "\n    for batch_idx,data in enumerate(train_loader):", "\n语句后显示", "\nIndexError: too many indices for tensor of dimension 0", "\n这是为什么呢？？甚至都还没到将数据放到模型中训练，应该和模型没关系，我也看了其他人的代码，在加载数据这些代码中也没找到什么问题。所以在这请教一下大神，万分感谢Orz", "\n\n", "以下是我的代码：", "\n\n", "import  torch\nfrom torch.utils.data import DataLoader\nfrom torchvision import transforms \nfrom torchvision import datasets\nimport  torch.nn.functional as F\nimport torch.optim as optim\n\nbatch_size = 64\ntransform = transforms.Compose([transforms.ToTensor(),transforms.Normalize((0.1307),(0.3081))])\n\ntrain_dataset = datasets.MNIST(root='./data',\n                               train=True,\n                               download=True,\n                               transform=transform)\ntrain_loader = DataLoader(dataset=train_dataset,\n                          shuffle=True,\n                          batch_size=batch_size)\ntest_dataset = datasets.MNIST(root='./data',\n                              train=False,\n                              download=True,\n                              transform=transform)\ntest_loader = DataLoader(dataset=test_dataset,\n                         shuffle=False,\n                         batch_size=batch_size)\n\nclass Net(torch.nn.Module):\n    def __init__(self):#构造函数\n        super(Net,self).__init__()\n        self.linear1 = torch.nn.Linear(784,512)\n        self.linear2 = torch.nn.Linear(512,256)\n        self.linear3 = torch.nn.Linear(256,128)\n        self.linear4 = torch.nn.Linear(128,64)\n        self.linear5 = torch.nn.Linear(64,10)\n\n    def forward(self, x):\n        x=x.view(-1,784)\n        x = F.relu(self.linear1(x))\n        x = F.relu(self.linear2(x))\n        x = F.relu(self.linear3(x))\n        x = F.relu(self.linear4(x))\n        return self.linear5(x)\n\nmodel = Net()#实例化模型\n\ncriterion = torch.nn.CrossEntropyLoss()\noptimizer = optim.SGD(model.parameters(),lr=0.1,momentum=0.5)#lr为学习率\n\ndef train(epoch):\n    running_loss = 0.0\n    for batch_idx,data in enumerate(train_loader):\n        inputs, target = data\n        optimizer.zero_grad()\n\n        outputs = model(inputs)\n        loss = criterion(outputs, target)\n        loss.backward()\n        optimizer.step()\n        running_loss +=loss.item()\n        if batch_idx%300 == 299:\n            print('[%d,%5d] loss: %.3f' %(epoch+1,batch_idx+1,running_loss/300))\n            running_loss = 0.0\n\nif __name__=='__main__':\n    for epoch in range(10):\n        train(epoch)\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你 self.gradient_descent(alpha,num_iterations) 中 self是float浮点数类型,不可能有gradient_descent方法吧&lt;br /&gt;你调用train()方法的方式不对&lt;br /&gt;要用LinearRegression类的实例对象 linear_regression 调用train()方法&lt;br /&gt;不是用LinearRegression类本身调用train()方法,&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;(theta, cost_history) &amp;#61; LinearRegression.train(learning_rate, num_iterations)##此处有问题\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;改成&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;(theta, cost_history) &amp;#61; linear_regression.train(learning_rate, num_iterations)##此处有问题\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python数据类型报错", ["问题遇到的现象和发生背景", "\n", "python 写线性回归代码时遇到变量类型报错的问题", "\n", "问题相关代码，请勿粘贴截图", "\n", "def", " ", "train", "(", "self,alpha,num_iterations = ", "500", "):\n       \n        cost_history = self.gradient_descent(alpha,num_iterations)", "##此处有问题", "\n        ", "return", " self.theta,cost_history\n        \n    ", "def", " ", "gradient_descent", "(", "self,alpha,num_iterations", "):\n        cost_history = []\n        ", "for", " x ", "in", " ", "range", "(num_iterations):\n            self.gradient_step(alpha)\n            cost_history.append(self.cost_function(self.data,self.labels))\n        ", "return", " cost_history\n        \n        \n    ", "def", " ", "gradient_step", "(", "self,alpha", "):    \n        num_examples = data.shape[", "0", "]\n        prediction = LinearRegression.hypothesis(self.data,self.theta)\n        delta = prediction - self.labels\n        theta = self.theta\n        theta = theta - alpha*(", "1", "/num_examples)*(np.dot(delta.T,self.data)).T\n        self.theta = theta\n        \n        \n    ", "def", " ", "cost_function", "(", "self,data,labels", "):\n        self.m = ", "len", "(labels)\n        delta = LinearRegression.hypothesis(data,self.theta) - labels\n        cost = (", "1", "/", "2", ")*np.dot(delta.T,delta)/self.m\n        ", "return", " cost[", "0", "][", "0", "]\n        \n    \n    ", "def", " ", "hypothesis", "(", "data,theta", "):   \n        predictions = np.dot(data,theta)\n        ", "return", " predictions\n        \n\nx_train =rescombine\ny_train = labels\n\nnum_iterations = ", "500", "  \nlearning_rate = ", "0.01", "  \n\n\nlinear_regression = LinearRegression(x_train, y_train)\n\n(theta, cost_history) = LinearRegression.train(learning_rate, num_iterations)", "##此处有问题", "\n\n", "print", "(theta, cost_history)\n", "print", "(", "'开始损失'", ",cost_history[", "0", "])\n", "print", "(", "'结束损失'", ",cost_history[-", "1", "])\n", "\n", "运行结果及报错内容", "\n", "发生异常: AttributeError", "'float' object has no attribute 'gradient_descent'", "  File \"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\", line 299, in train", "    cost_history = self.gradient_descent(alpha,num_iterations)", "  File \"C:\\Users\\Xpc\\Desktop\\LinearRegression\\linear_regression.py\", line 340, in ", "    (theta, cost_history) = LinearRegression.train(learning_rate, num_iterations)", "\n", "我的解答思路和尝试过的方法", "\n", "我不知道是不是我写的程序有问题，还是数据的类型不对"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;任务1&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;# 导入所需的库&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; statsmodels.api &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; sm\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; statsmodels.stats.outliers_influence &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; variance_inflation_factor\n\n&lt;span class=\"hljs-comment\"&gt;# 读取数据文件&lt;/span&gt;\ndata &amp;#61; pd.read_csv(&lt;span class=\"hljs-string\"&gt;&amp;#39;regres.txt&amp;#39;&lt;/span&gt;, header&amp;#61;&lt;span class=\"hljs-literal\"&gt;None&lt;/span&gt;, delim_whitespace&amp;#61;&lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;,\n                   names&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;air_speed&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;acid_conc&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;loss_ammonia&amp;#39;&lt;/span&gt;])\nX &amp;#61; data[[&lt;span class=\"hljs-string\"&gt;&amp;#39;air_speed&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;acid_conc&amp;#39;&lt;/span&gt;]]\ny &amp;#61; data[&lt;span class=\"hljs-string\"&gt;&amp;#39;loss_ammonia&amp;#39;&lt;/span&gt;]\n\n&lt;span class=\"hljs-comment\"&gt;# 确定哪些自变量是高度相关的&lt;/span&gt;\nvif &amp;#61; pd.DataFrame()\nvif[&lt;span class=\"hljs-string\"&gt;&amp;#34;VIF Factor&amp;#34;&lt;/span&gt;] &amp;#61; [variance_inflation_factor(X.values, i) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(X.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])]\nvif[&lt;span class=\"hljs-string\"&gt;&amp;#34;features&amp;#34;&lt;/span&gt;] &amp;#61; X.columns\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(vif)\n\n&lt;span class=\"hljs-comment\"&gt;# 确定哪些自变量与因变量高度相关&lt;/span&gt;\nX &amp;#61; sm.add_constant(X)\nmodel &amp;#61; sm.OLS(y, X).fit()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(model.summary())\n\n&lt;span class=\"hljs-comment\"&gt;# 建立一个多元线性回归方程&amp;#xff0c;确定哪些自变量是显著的&lt;/span&gt;\nsignificant_features &amp;#61; [&lt;span class=\"hljs-string\"&gt;&amp;#39;air_speed&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;]\nX_significant &amp;#61; X[significant_features]\nmodel_significant &amp;#61; sm.OLS(y, X_significant).fit()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(model_significant.summary())\n\n\n&lt;span class=\"hljs-comment\"&gt;# 使用逐步回归法&amp;#xff0c;选择有信息的变量&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;backward_elimination&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;X, y, sig_level&amp;#61;&lt;span class=\"hljs-number\"&gt;0.05&lt;/span&gt;&lt;/span&gt;):\n    num_features &amp;#61; X.shape[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(num_features):\n        model &amp;#61; sm.OLS(y, X).fit()\n        p_values &amp;#61; model.pvalues\n        max_p_value &amp;#61; &lt;span class=\"hljs-built_in\"&gt;max&lt;/span&gt;(p_values)\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; max_p_value &amp;gt; sig_level:\n            max_p_value_idx &amp;#61; p_values.idxmax()\n            X &amp;#61; X.drop(max_p_value_idx, axis&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; X\n\n\nX_backward_elim &amp;#61; backward_elimination(X, y)\nmodel_backward_elim &amp;#61; sm.OLS(y, X_backward_elim).fit()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(model_backward_elim.summary())\n\n&lt;span class=\"hljs-comment\"&gt;# 分析残留物&lt;/span&gt;\nresiduals &amp;#61; model_backward_elim.resid\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(residuals.describe())\n\n&lt;span class=\"hljs-comment\"&gt;# 构建因变量的预测&amp;#xff0c;将第4天的数值作为自变量的数值&lt;/span&gt;\nX_predict &amp;#61; [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;62&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;93&lt;/span&gt;]\ny_predict &amp;#61; model_backward_elim.predict(X_predict)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(y_predict)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;任务2&lt;/p&gt;\n&lt;p&gt;岭回归模型&lt;br /&gt;Ridge回归模型是线性回归模型的改进版&amp;#xff0c;它添加了L2范数正则化项。岭回归通过对系数进行缩减&amp;#xff0c;降低了过拟合的风险。我们可以使用scikit-learn库的Ridge类来建立岭回归模型。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n导入所需的库\nimport pandas as pd\nimport numpy as np\nfrom sklearn&lt;span class=\"hljs-selector-class\"&gt;.linear_model&lt;/span&gt; import Ridge\nfrom sklearn&lt;span class=\"hljs-selector-class\"&gt;.metrics&lt;/span&gt; import mean_squared_error\n\n读取数据文件\ndata &amp;#61; pd&lt;span class=\"hljs-selector-class\"&gt;.read_csv&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;regres.txt&amp;#39;&lt;/span&gt;, header&amp;#61;None, delim_whitespace&amp;#61;True, names&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;air_speed&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;acid_conc&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;loss_ammonia&amp;#39;&lt;/span&gt;]&lt;/span&gt;)\nX &amp;#61; data&lt;span class=\"hljs-selector-attr\"&gt;[[&lt;span class=\"hljs-string\"&gt;&amp;#39;air_speed&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;acid_conc&amp;#39;&lt;/span&gt;]&lt;/span&gt;]\ny &amp;#61; data&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;loss_ammonia&amp;#39;&lt;/span&gt;]&lt;/span&gt;\n\n将第四天的数据用作自变量\nx_pred &amp;#61; X&lt;span class=\"hljs-selector-class\"&gt;.iloc&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[3]&lt;/span&gt;\n\n建立岭回归模型\nridge &amp;#61; Ridge(alpha&amp;#61;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;)\nridge&lt;span class=\"hljs-selector-class\"&gt;.fit&lt;/span&gt;(X, y)\n\n使用模型进行预测\ny_pred &amp;#61; ridge&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[x_pred]&lt;/span&gt;)\n\n输出预测结果\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;预测值&amp;#xff1a;&amp;#34;&lt;/span&gt;, y_pred[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;\n\n拉索回归模型\nLasso回归模型也是线性回归模型的改进版&amp;#xff0c;它添加了L1范数正则化项。与岭回归相比&amp;#xff0c;Lasso回归可以将某些系数缩减到&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&amp;#xff0c;因此可以用于特征选择。我们可以使用scikit-learn库的Lasso类来建立Lasso回归模型。\n\n导入所需的库\nimport pandas as pd\nimport numpy as np\nfrom sklearn&lt;span class=\"hljs-selector-class\"&gt;.linear_model&lt;/span&gt; import Lasso\nfrom sklearn&lt;span class=\"hljs-selector-class\"&gt;.metrics&lt;/span&gt; import mean_squared_error\n\n读取数据文件\ndata &amp;#61; pd&lt;span class=\"hljs-selector-class\"&gt;.read_csv&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;regres.txt&amp;#39;&lt;/span&gt;, header&amp;#61;None, delim_whitespace&amp;#61;True, names&amp;#61;&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;air_speed&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;acid_conc&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;loss_ammonia&amp;#39;&lt;/span&gt;]&lt;/span&gt;)\nX &amp;#61; data&lt;span class=\"hljs-selector-attr\"&gt;[[&lt;span class=\"hljs-string\"&gt;&amp;#39;air_speed&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;acid_conc&amp;#39;&lt;/span&gt;]&lt;/span&gt;]\ny &amp;#61; data&lt;span class=\"hljs-selector-attr\"&gt;[&lt;span class=\"hljs-string\"&gt;&amp;#39;loss_ammonia&amp;#39;&lt;/span&gt;]&lt;/span&gt;\n\n将第四天的数据用作自变量\nx_pred &amp;#61; X&lt;span class=\"hljs-selector-class\"&gt;.iloc&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[3]&lt;/span&gt;\n\n建立Lasso回归模型\nlasso &amp;#61; Lasso(alpha&amp;#61;&lt;span class=\"hljs-number\"&gt;1.0&lt;/span&gt;)\nlasso&lt;span class=\"hljs-selector-class\"&gt;.fit&lt;/span&gt;(X, y)\n\n使用模型进行预测\ny_pred &amp;#61; lasso&lt;span class=\"hljs-selector-class\"&gt;.predict&lt;/span&gt;(&lt;span class=\"hljs-selector-attr\"&gt;[x_pred]&lt;/span&gt;)\n\n输出预测结果\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;预测值&amp;#xff1a;&amp;#34;&lt;/span&gt;, y_pred[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["氨氧化法硝酸生产过程数据的回归分析任务", ["问题遇到的现象和发生背景", "\n", "回归分析任务", "任务 1", "数据（文件regres.txt）(数据见下面代码块)代表了21天内对氨氧化法硝酸生产过程的四个参数的测量。", "氨氧化法的硝酸生产过程的四个参数。", "X(1) - （air speed）空气速度。", "X(2)-（ temperature of the cooled liquid）是冷却后的液体温度。", "X(3)-（acid concentration）酸浓度。", "X(4) - （loss of ammonia）氨的损失。", "变量X(4)是因变量，变量X(1)、X(2)X(3)是独立变量。", "1 确定哪些自变量是高度相关的。", "2. 确定哪些自变量与因变量高度相关。", "3. 建立一个多元线性回归方程，确定哪些自变量是显著的。", "4. 使用逐步回归法，选择有信息的变量。", "5.分析残留物。", "6.构建因变量的预测，将第4天的数值作为自变量的数值。", "任务2 ", "\n", "1.建立岭回归模型（Ridge Regression Model）", "2. 建立拉索回归模型（ Lasso Regression Model）", "3. 构建每个模型的因变量预测，将第四天的数值作为自变量。", "将第四天的数值作为自变量的数值。", "\n", "数据（文件regres.txt）", "\n", "  ", "80", ".", "00000", "   ", "27", ".", "00000", "   ", "89", ".", "00000", "   ", "42", ".", "00000", " \n  ", "80", ".", "00000", "   ", "27", ".", "00000", "   ", "88", ".", "00000", "   ", "37", ".", "00000", " \n  ", "75", ".", "00000", "   ", "25", ".", "00000", "   ", "90", ".", "00000", "   ", "37", ".", "00000", " \n  ", "62", ".", "00000", "   ", "24", ".", "00000", "   ", "87", ".", "00000", "   ", "28", ".", "00000", " \n  ", "62", ".", "00000", "   ", "22", ".", "00000", "   ", "87", ".", "00000", "   ", "18", ".", "00000", " \n  ", "62", ".", "00000", "   ", "23", ".", "00000", "   ", "87", ".", "00000", "   ", "18", ".", "00000", " \n  ", "62", ".", "00000", "   ", "24", ".", "00000", "   ", "93", ".", "00000", "   ", "19", ".", "00000", " \n  ", "62", ".", "00000", "   ", "24", ".", "00000", "   ", "93", ".", "00000", "   ", "20", ".", "00000", " \n  ", "58", ".", "00000", "   ", "23", ".", "00000", "   ", "87", ".", "00000", "   ", "15", ".", "00000", " \n  ", "58", ".", "00000", "   ", "18", ".", "00000", "   ", "80", ".", "00000", "   ", "14", ".", "00000", " \n  ", "58", ".", "00000", "   ", "18", ".", "00000", "   ", "89", ".", "00000", "   ", "14", ".", "00000", " \n  ", "58", ".", "00000", "   ", "17", ".", "00000", "   ", "88", ".", "00000", "   ", "13", ".", "00000", " \n  ", "58", ".", "00000", "   ", "18", ".", "00000", "   ", "82", ".", "00000", "   ", "11", ".", "00000", " \n  ", "58", ".", "00000", "   ", "19", ".", "00000", "   ", "93", ".", "00000", "   ", "12", ".", "00000", " \n  ", "50", ".", "00000", "   ", "18", ".", "00000", "   ", "89", ".", "00000", "    ", "8", ".", "00000", " \n  ", "50", ".", "00000", "   ", "18", ".", "00000", "   ", "86", ".", "00000", "    ", "7", ".", "00000", " \n  ", "50", ".", "00000", "   ", "19", ".", "00000", "   ", "72", ".", "00000", "    ", "8", ".", "00000", " \n  ", "50", ".", "00000", "   ", "19", ".", "00000", "   ", "79", ".", "00000", "    ", "8", ".", "00000", " \n  ", "50", ".", "00000", "   ", "20", ".", "00000", "   ", "80", ".", "00000", "    ", "9", ".", "00000", " \n  ", "56", ".", "00000", "   ", "20", ".", "00000", "   ", "82", ".", "00000", "   ", "15", ".", "00000", " \n  ", "70", ".", "00000", "   ", "20", ".", "00000", "   ", "91", ".", "00000", "   ", "15", ".", "00000", " \n", "\n", "我想要达到的结果", "\n", "使用Python和Jupyter notebook编写，完成任务要求，写一下注释"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你放循环体里万一超出范围还会赋值&amp;#xff0c;最后只能报错。而放判断语句里它会先判断是否会超出范围&amp;#xff0c;一旦超出它就退出&amp;#xff0c;也就不会执行赋值&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于力扣“计算质数”这一题的一些疑问", ["是这样的，这题我试着用“线性筛”的方法进行求解，在解题的过程中发现了这样一个问题，令我很困惑，首先一个代码如下", "\n", "\n```java\n", "class", " ", "Solution", " {\n    ", "public", " ", "int", " ", "countPrimes", "(", "int", " n)", " ", "{\n        ", "//存放质数的集合", "\n        ", "int", "[] primes = ", "new", " ", "int", "[n+", "1", "];\n\n        ", "int", " num = ", "0", ";\n\n        ", "//标记是否为质数", "\n        ", "boolean", "[] bp = ", "new", " ", "boolean", "[n+", "1", "];\n\n        ", "for", " (", "int", " i = ", "2", "; i < n; i++) {\n            ", "if", " (!bp[i]){\n                primes[num++] = i;\n            }\n\n            ", "for", "(", "int", " j = ", "0", ";j < num ;j++){\n                ", "if", "( i * primes[j] < n){\n                    bp[i*primes[j]] = ", "true", ";\n                }\n                \n                ", "//  **关键点在这里**", "\n                ", "if", " (i % primes[j] == ", "0", ") {\n                    ", "break", ";\n                }\n            }\n        }\n\n        ", "return", " num;\n\n    }\n}\n\n", "\n", "\n", "\n", "可以看到，在这里int类型的运算超出表示范围了，所以报错了，但是，如果换一种写法，如下：", "\n", "class", " ", "Solution", " {\n    ", "public", " ", "int", " ", "countPrimes", "(", "int", " n)", " ", "{\n        ", "//存放质数的集合", "\n        ", "int", "[] primes = ", "new", " ", "int", "[n+", "1", "];\n\n        ", "int", " num = ", "0", ";\n\n        ", "//标记是否为质数", "\n        ", "boolean", "[] bp = ", "new", " ", "boolean", "[n+", "1", "];\n\n        ", "for", " (", "int", " i = ", "2", "; i < n; i++) {\n            ", "if", " (!bp[i]){\n                primes[num++] = i;\n            }\n\n            ", "for", "(", "int", " j = ", "0", ";j < num && i * primes[j] < n;j++){\n                bp[i*primes[j]] = ", "true", ";\n                ", "if", " (i % primes[j] == ", "0", ") {\n                    ", "break", ";\n                }\n            }\n        }\n\n        ", "return", " num;\n\n    }\n}\n\n", "\n", "也就是把判断放到for循环的判断语句里了，结果如下：", "\n", "\n", "所以说判断语句放在for循环的循环体里和放在for循环的判断语句里是有所不同的吗？", "到底有什么不同呢？希望有人能帮我答疑解惑"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; x数组没有排序&amp;#xff0c;最小值索引7&amp;#xff0c;最大值索引8&amp;#xff0c;直线就是这两点的连线。建议将 yvals &amp;#61; dfin(x, a, b, c) 改为 yvals &amp;#61; dfin(x[np.argsort(x)], a, b, c)&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["python拟合曲线为什么画的图中一条曲线一条直线", ["python拟合曲线为什么画的图中一条曲线一条直线？给定了函数形式让程序拟合的。", "\n", "import", " matplotlib.pyplot as plt\n", "import", " numpy as np\n", "from", " scipy.optimize import curve_fit\n\n\n", "#去掉了最后一个水平", "\n\n\n", "# x就是等效应变", "\n", "def", " dfin(x, a, b, c):\n    ", "return", " (a*z**b-", "30", ".", "0", ")*(", "1", ".", "0", "-np.exp(-np.log(", "2", ".", "0", "*(x/ee)**c)))+", "30", ".", "0", "\n\n", "# D初始晶粒尺寸", "\n", "D", " = ", "30", ".", "0", "\n", "# z不同温度需要重新输入", "\n", "z", " = ", "1", ".", "92", "*", "10", "**", "20", "\n", "ee", " = ", "0", ".", "0016", "*D**", "0", ".", "2709", "*z**", "0", ".", "1147", "\n", "# 给出x、y对应坐标，即给出等效应变和对应的真实最终晶粒尺寸", "\n", "x", " =", " [0.74,0.69,0.56,0.41,0.3,0.21,0.15,0.12,\n    1.38,1.33,1.18,1.01,0.82,0.64,0.48,0.35]", "\n", "x", " = np.array(x)\n", "num", " =", " [26,29,28,30,31,40,39,41,\n    21,22,23,24,23,27,28,30]", "\n", "y", " = np.array(num)\n\n", "# 非线性最小二乘法拟合", "\n", "parameter_bounds", " = ([", "15", "*", "10", "**", "5", ",-", "0", ".", "25", ",", "0", "],[np.inf,", "0", ",", "3", "])\n", "popt", ", pcov = curve_fit(dfin, x, y, bounds=parameter_bounds)\n", "# 获取popt里面拟合系数", "\n", "print", "(popt)\n", "a", " = popt[", "0", "]\n", "b", " = popt[", "1", "]\n", "c", " = popt[", "2", "]\n", "yvals", " = dfin(x, a, b, c)\n", "print", "('系数a:', a)\n", "print", "('系数b:', b)\n", "print", "('系数c:', c)\n", "print", "('系数yvals:', yvals)\n\n", "# 绘图", "\n", "plot1", " = plt.plot(x, y, 's')\n", "plot2", " = plt.plot(x, yvals, 'r')\n", "plt", ".xlabel('ε')\n", "plt", ".ylabel('d')\n", "plt", ".title('", "1120", ",v=", "14", ",zhui')\n", "plt", ".show()\n\n\n", "\n", "图片如下：", "\n"]], "Tag": "算法设计"}
{"Answer": "现已经找到了此问题的最终原因，因为setImageResource在运行时，会自动匹配相应质量的图片，而且之后也没有及时的资源回收机制，所以导致在加载第三张图片的时候，内存溢出报错（我建立的AVD所分配的内存比较小）。重新建立一个AVD4.0.3，并且把内存改为512M，就不会报错了。如果非要针对内存比较小的Android，或者说是为了节约资源，就尽量不要用setImageBitmap或setImageResource或BitmapFactory.decodeResource来设置一张大图，因为这些函数在完成decode后，最终都是通过java层的createBitmap来完成的，需要消耗更多内存。因此，改用先通过BitmapFactory.decodeStream方法，创建出一个bitmap，再将其设为ImageView的 source，decodeStream最大的秘密在于其直接调用JNI&gt;&gt;nativeDecodeAsset()来完成decode，无需再使用java层的createBitmap，从而节省了java层的空间。", "Konwledge_Point": "线性规划和规约", "Question": ["Android 项目中不能显示两张以上图片", ["public class MainActivity extends Activity {", "\n\n", "private ImageView[] img=new ImageView[4];//声明一个保存ImageView组件的数组", "\nprivate int[] imagePath= new int[]{R.drawable.img01,R.drawable.img02,R.drawable.img03,R.drawable.img04};//声明并初始化一个保存访问图片的数组", "\n\n", "@Override", "\nprotected void onCreate(Bundle savedInstanceState) {", "\nsuper.onCreate(savedInstanceState);", "\nsetContentView(R.layout.activity_main);", "\nLinearLayout layout=(LinearLayout) findViewById(R.id.layout); //获取XML文件中定义的线性布局管理器", "\nfor (int i=0;i\n{", "\nimg[i]=new ImageView(this);//新创建一个ImageView组件", "\nimg[i].setImageResource(imagePath[i]);//设置要显示的图片", "\nimg[i].setPadding(5, 5, 5, 5);//设置ImageView显示的内边距", "\nLayoutParams params=new LayoutParams(80,40);//设置图片的宽和高", "\nimg[i].setLayoutParams(params);//为ImageView组件设置布局参数", "\nlayout.addView(img[i]);//将ImageView组件添加到布局管理器中", "\n}", "\n}", "\n}", "\n我建立的安卓4.2.2上的项目，但是上边的程序运行一直出错。如果把img长度设置为2，然后imagePath初始化为四个图片中的任何两个，就会成功了。请大神们指点是为什么？", "\n下边是我的布局文件内容", "<?xml version=\"1.0\" encoding=\"utf-8\"?>", "\n    xmlns:tools=\"http://schemas.android.com/tools\"", "\n    android:orientation=\"horizontal\"", "\n    android:layout_width=\"fill_parent\"", "\n    android:layout_height=\"fill_parent\"", "\n    android:background=\"@drawable/background\"", "\n    android:id=\"@+id/layout\"", "\n    tools:context=\"${relativePackage}.${activityClass}\" ", "\n    >"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我上课用的是同济大学的&amp;#xff0c;看你的学校层次&amp;#xff0c;如果比较好的话&amp;#xff0c;前面三张就是划水&amp;#xff0c;后面从不定积分开始才是玩的。老师会出一些应用题和牛顿-莱布尼茨公式相对应的式子&amp;#xff0c;但是像前三章&amp;#xff0c;虽然基础&amp;#xff0c;但重要。 后面的多元微分学和偏导数等会考&amp;#xff0c;二重积分会考试&amp;#xff01;&lt;/p&gt;\n\n&lt;p&gt;一些公式还是要记住的&amp;#xff01;&lt;/p&gt;\n\n&lt;p&gt;普通学校的话就考的层次不会太难&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["求大佬分析一下高等数学提纲，并参照提纲给点学习建议。谢谢", ["三、考试内容与要求", "\n\n", "第一章  函数极限与连续", "\n\n", "（一）考试内容", "\n\n", "一元函数的概念，函数的性质(有界性、单调性、奇偶性、周期性)，反函数，基本初等函数的概念、性质及其图形，复合函数，初等函数，数列极限，函数极限，无穷小与无穷大，无穷小与极限之间的关系，无穷小与无穷大之间的关系，极限的运算法则，极限存在准则，两个重要极限，无穷小的比较，函数的连续性，函数的间断点及其类型，连续函数的运算定理，初等函数的连续性，闭区间上连续函数的基本性质．", "\n\n", "（二）考试要求", "\n\n", "1．理解函数、初等函数的概念；", "\n\n", "2．了解函数的性质以及反函数的概念；", "\n\n", "3．掌握基本初等函数的性质及其图形；", "\n\n", "4．理解极限的概念，思想方法；", "\n\n", "5．了解极限的", "定义；", "\n\n", "6．掌握左、右极限的概念，左、右极限与双边极限的关系；", "\n\n", "7．掌握极限四则运算法则；", "\n\n", "8．了解两个极限存在准则，熟练掌握两个重要极限；", "\n\n", "9．理解无穷小的概念及与极限的关系；", "\n\n", "10．了解无穷小的比较；", "\n\n", "11．理解连续的两种定义，掌握连续性的证明方法、连续函数的运算性质，会判定间断点的类型；", "\n\n", "12．知道闭区间上连续函数的性质，会用零点定理判别方程的根。", "\n\n", " ", "\n\n", "第二章  导数与微分", "\n\n", "（一）考试内容", "\n\n", "导数的概念，基本初等函数的导数，函数的和，差、积、商的导数，反函数和复合函数的导数，高阶导数，由隐函数、参数方程确定的函数的导数，微分的基本公式，微分形式不变性，微分在近似计算中的应用．", "\n\n", "（二）考试要求", "\n\n", "1．理解导数的概念，掌握利用概念求某些特殊极限的方法；", "\n\n", "2．掌握导数的几何意义，掌握求切线和法线方程的方法，明确可导与连续的关系；", "\n\n", "2．熟练掌握导数的运算；", "\n\n", "3．理解微分的概念、几何意义、微分形式不变性，明确可导与可微的关系；", "\n\n", "4．掌握微分在近似计算中的应用；", "\n\n", "第三章  中值定理与导数的应用。", "\n\n", "（一）考试内容", "\n\n", "微分中值定理(罗尔定理、拉格朗日中值定理、柯西中值定理)，罗必塔法则，泰勒公式，函数单调性的判别、函数的凸凹性及拐点的判别、函数的极值概念及求法，最大值与最小值及其应用，函数图形的水平渐近线与铅直渐近线，函数作图．", "\n\n", "（二）考试要求", "\n\n", "1．了解三个微分中值定理的条件、结论，能证明前两个定理，了解构造函数的方法，掌握不等式的证明；", "\n\n", "2．掌握洛必达法则的条件，结论以及常见的各种未定式的计算；", "\n\n", "3．掌握泰勒公式和麦克劳林公式展开某些较简单的初等函数并求其近似值；", "\n\n", "4．掌握函数的单调、凹凸、拐点、极值的判别，会求曲线的水平、垂直渐近线，会作函数的草图；", "\n\n", "5．掌握解决简单的最大值、最小值的实际应用问题。", "\n\n", " ", "\n\n", "第四章  不定积分", "\n\n", "（一）考试内容", "\n\n", "原函数与不定积分的概念，不定积分的基本性质，积分基本公式，换元积分法，分部积分法，有理函数的积分，三角函数有理式的积分，简单无理函数的积分．", "\n\n", "（二）考试要求", "\n\n", "1．理解不定积分的概念，了解不定积分的几何意义；", "\n\n", "2．熟练掌握不定积分的基本公式，掌握不定积分的性质；", "\n\n", "3．熟练掌握不定积分的两类换元积分和分部积分法；", "\n\n", "4．掌握较简单的有理函数、三角函数有理式的积分；", "\n\n", "5．会求较简单的无理函数的积分；", "\n\n", " ", "\n\n", "第五章  定积分及其应用", "\n\n", "（一）考试内容", "\n\n", "定积分的概念，定积分的基本性质、微积分基本定理，定积分的换元积分及分部积分法，定积分的应用(求面积、体积、功、水压力)．", "\n\n", " ", "\n\n", "（二）考试要求", "\n\n", "1．理解定积分的概念，几何意义，掌握定积分的性质；", "\n\n", "2．熟练掌握定积分的换元积分法和分部积分法；", "\n\n", "3．理解变上限的定积分作为其上限的函数及其求导定理，熟悉牛顿－莱布尼兹公式和变上限积分函数的求导；", "\n\n", "4．掌握定积分的微元法，掌握用定积分来表达面积、体积、弧长，了解功、水压力；", "\n\n", " ", "\n\n", "第六章  空间解析几何与向量代数", "\n\n", "（一）考试内容", "\n\n", "空间直角坐标系，两点间距离公式，向量代数，直线、平面的方程，常见曲面及其方程．", "\n\n", "（二）考试要求", "\n\n", "1．了解空间直角坐标系，建立空间点与数组的一一对应关系；", "\n\n", "2．掌握两点间距离公式,了解向量的运算（线性运算、点乘法、叉乘法）,两个向量夹角的求法与垂直、平行的条件；", "\n\n", "3．熟练掌握用坐标表达式进行向量运算；", "\n\n", "4．掌握平面，直线的方程；", "\n\n", "5．知道常见曲面及其方程。", "\n\n", " ", "\n\n", "第七章  多元函数微分法及其应用", "\n\n", "（一）考试内容", "\n\n", "二元函数的概念，二元函数的图形，二元函数的极限、连续，偏导数的概念，高阶偏导数、全增量与全微分，全微分存在的条件、复合函数微分法，隐函数及其微分法、二元函数的极值，最大值、最小值及其应用．", "\n\n", "（二）考试要求", "\n\n", "1．理解二元函数的概念，知道二元函数的几何意义；", "\n\n", "2．知道二元函数的极限、连续性等概念以及有界闭域上连续函数的性质；", "\n\n", "3．理解偏导数、全微分等概念并熟练掌握其计算，知道全微分存在条件；", "\n\n", "4．熟练掌握复合函数的求导法则；", "\n\n", "5．会求隐函数所确定的函数的偏导数；", "\n\n", "6．理解多元函数极值的概念，会求函数的极值，了解条件极值的概念，会用拉格朗日乘数法求条件极值；", "\n\n", "7．会求解一些较简单的最大值和最小值的应用问题。", "\n\n", " ", "\n\n", "第八章  二重积分", "\n\n", "（一）考试内容", "\n\n", "二重积分的的概念及性质，二重积分的计算（直角坐标、极坐标），二重积分的应用（曲面的面积、体积、薄片质量)。", "\n\n", "（二）考试要求", "\n\n", "1．理解二重积分的概念，掌握二重积分的性质；", "\n\n", "2．熟练掌握直角坐标下二重积分的计算方法；", "\n\n", "3．熟练掌握极坐标下二重积分的计算；", "\n\n", "4．会应用二重积分求面积，体积、薄片质量。", "\n\n", " ", "\n\n", " ", "\n\n", "四、考试方式及时间", "\n\n", "1．考试方式：闭卷                ", "\n\n", "2．考试时间：120分钟", "\n\n", " ", "\n\n", "五、教材与参考书目", "\n\n", "1．同济大学应用数学系,高等数学[M].北京:高等教育出版社，2002年.", "\n\n", "2．黄立宏,廖基定,高等数学[M].上海:复旦大学出版社,2006年.", "\n\n", "3．朱健民,李建平,高等数学[M].北京:高等教育出版社,2007年."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;画图你的XYZ都是3D的数组&amp;#xff0c;所以建议用scatter3画图&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; \n[X,Y,Z] &amp;#61; meshgrid(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:.&lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:.&lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;);\nF &amp;#61; X.*Y&amp;#43;Z;\nC &amp;#61;&lt;span class=\"hljs-built_in\"&gt; true&lt;/span&gt;(size(X));\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:numel(X)\n    n &amp;#61; X(i);% x(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    y &amp;#61; Y(i);% x(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    z &amp;#61; Z(i);\n    c &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;01&lt;/span&gt;:n\n        c &amp;#61; c&amp;#43;(&lt;span class=\"hljs-number\"&gt;4970250&lt;/span&gt;*y &amp;#43; &lt;span class=\"hljs-number\"&gt;14100&lt;/span&gt;*(k -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; )*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*z &amp;#43; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;*( k - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; )^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * y^&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*z&amp;#43;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;*y*z^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)/ ...\n            ((&lt;span class=\"hljs-number\"&gt;705&lt;/span&gt;&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y)* (&lt;span class=\"hljs-number\"&gt;1410&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)* y * z&amp;#43;(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; *y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(k-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*y*z&amp;#43;z^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;));\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n    x &amp;#61; n;\n    C(i) &amp;#61; &lt;span class=\"hljs-number\"&gt;31.4&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-number\"&gt;31213170&lt;/span&gt;/(&lt;span class=\"hljs-number\"&gt;1410&lt;/span&gt;*x*y&amp;#43;&lt;span class=\"hljs-number\"&gt;1410&lt;/span&gt;*z&amp;#43;x^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*y^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*x*y*z&amp;#43;z^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))-(&lt;span class=\"hljs-number\"&gt;159&lt;/span&gt;*z/(x*y&amp;#43;z))-(&lt;span class=\"hljs-number\"&gt;161.5&lt;/span&gt;*x*y/(x*y&amp;#43;z))-&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*c&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nminf &amp;#61;&lt;span class=\"hljs-built_in\"&gt; min&lt;/span&gt;(F(C));\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(isempty(minf))\n    fprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;无解\\n&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    I &amp;#61; find((minf&amp;#61;&amp;#61;F)&amp;amp;C);\n    x &amp;#61; X(I);\n    y &amp;#61; Y(I);\n    z &amp;#61; Z(I);\n    fmin &amp;#61; x*y&amp;#43;z;\n    fprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;在x&amp;#61;%d,y&amp;#61;%d,z&amp;#61;%d处目标函数有最小值%d\\n&amp;#39;&lt;/span&gt;,x,y,z,fmin)\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\nF(~C)&amp;#61;&lt;span class=\"hljs-literal\"&gt;NaN&lt;/span&gt;;\nscatter3(X&lt;span class=\"hljs-comment\"&gt;(:),Y(:)&lt;/span&gt;,Z&lt;span class=\"hljs-comment\"&gt;(:),10,F(:)&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;在x&amp;#61;5.010000e&lt;span class=\"hljs-string\"&gt;&amp;#43;00&lt;/span&gt;,y&amp;#61;1.498000e&lt;span class=\"hljs-string\"&gt;&amp;#43;01&lt;/span&gt;,z&amp;#61;24处目标函数有最小值9.904980e&lt;span class=\"hljs-string\"&gt;&amp;#43;01&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问这个程序为什么不能输出小数呢，改变约束条件，X一直输出为固定的整数", ["三个变量，我知道Z变量求解不变是因为函数问题，不知为何改变约束 X 也一直输出为一个整数", "\n", "\n", "\n[X", ",", "Y", ",", "Z] ", "=", " meshgrid(", "5", ":.", "01", ":", "10", ",", "8", ":.", "01", ":", "15", ",", "24", ":", "30", ")", ";", "\nF ", "=", " X.*Y+Z", ";", "\nC ", "=", " ", "true", "(size(X))", ";", "\nfor i ", "=", " ", "1", ":numel(X)\n    n ", "=", " X(i)", ";% x(1)", "\n    y ", "=", " Y(i)", ";% x(2)", "\n    z ", "=", " Z(i)", ";", "\n    ", "c", " ", "=", " ", "0", ";", "\n    for k ", "=", " ", "1", ":", "0.01", ":n\n        ", "c", " ", "=", " ", "c", "+(", "4970250", "*y + ", "14100", "*(k ", "-1", " )*y^", "2", "*z + ", "10", "*( k - ", "1", " )^", "2", " * y^", "3", " + ", "20", "*(k", "-1", ")*y^", "2", "*z+", "10", "*y*z^", "2", ")/ ...\n            ((", "705", "+(k", "-1", ")*y)* (", "1410", "*(k", "-1", ")* y * z+(k", "-1", ")^", "2", " *y^", "2", "+", "2", "*(k", "-1", ")*y*z+z^", "2", "))", ";", "\n    ", "end", "\n    C(i) ", "=", " ", "31.4", "+(", "31213170", "/(", "1410", "*", "x", "*y+", "1410", "*z+", "x", "^", "2", "*y^", "2", "+", "2", "*", "x", "*y*z+z^", "2", "))-(", "159", "*z/(", "x", "*y+z))-(", "161.5", "*", "x", "*y/(", "x", "*y+z))", "-0.1", "*", "2", "*", "c", "<", "=", "0", ";", "\n", "end", "\nminf ", "=", " ", "min", "(F(C))", ";", "\nif(isempty(minf))\n    fprintf('无解\\n')\nelse\n    I ", "=", " find((minf", "=", "=", "F)&C)", ";", "\n    ", "x", " ", "=", " X(I)", ";", "\n    y ", "=", " Y(I)", ";", "\n    z ", "=", " Z(I)", ";", "\n    fmin ", "=", " ", "x", "*y+z", ";", "\n    fprintf('在", "x", "=", "%d", ",", "y", "=", "%d", ",", "z", "=", "%d", "处目标函数有最小值", "%d", "\\n'", ",", "x", ",", "y", ",", "z", ",", "fmin)\n", "end", "\nF(~C)", "=", "NaN", ";", "\nsurf(X", ",", "Y", ",", "Z", ",", "F)\n\n", "\n", "得到的不是想要的结果，不知是不是函数的问题，还是程序的问题。", "\n", "我的解答思路和尝试过的方法 ：改变X,Y,X取值范围，以及区间步数没有效果", "\n", "我想要达到的结果：输出X,Y，Z都可以是小数，或者有没有其他的函数可以求解这种三元约束非线性方程，（一个三元约束方程，一个三元目标函数，三元范围给定）请求解答"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果是卡死在switch里面&amp;#xff0c;你可以试试把searchHash注释掉运行一遍。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["哈希表始终无法成功实现查找关键字（开放定址法)，如何解决？", ["在编写一个哈希应用的小程序中始终无法实现对关键字的查找，也导致插入和删除功能始终无法进行，代码完全没有报错", "\n", "整体也可以运行，但运行到查找功能模块，程序就跑不动了", "对于hash定义了一个结构体成员变量为整形elem指针，和整型元素个数count，在模块代码都是用的结构体指针变量来访问成员", "\n", "模块代码：", "\n", "// 哈希表查找关键字", "\n", "int", " ", "searchHash", "(HashTable *hash, ", "int", " ", "key", ", ", "int", " address)\n{\n    address = ", "hashFun", "(", "key", "); ", "// 求哈希地址", "\n    ", "while", " (hash->elem[address] != ", "key", ") ", "// 否则，使用开放定址法继续查找", "\n    {\n        address = (address + ", "1", ") % m; ", "// 开放定址法的线性探测", "\n        \n        ", "// 如果 查找到NULLKEY | 循环回到原点，则说明关键字不存在，返回FALSE      ", "\n      ", "if", "(hash->elem[address] == NULLKEY || address ==", "hashFun", "(", "key", ")) \n            ", "printf", "(", "\"查找 %d 失败。\\n\"", ", ", "key", ");\n            ", "return", " ", "0", "; ", "//查找失败", "\n    }\n     hash->elem[address] = ", "key", ";\n    ", "printf", "(", "\"查找%d的哈希地址为 %d \\n\"", ",", "key", ",address);\n    ", "return", " ", "1", ";", "//查找成功", "\n}\n\n\n", "\n", "主函数里调用它：", "\n", "int", " ", "main", "()", "\n", "{\n  ", "//  int arr[HASHSIZE] = {12, 67, 56, 16, 25, 37, 22, 29, 15, 47, 48, 34}; // 要插入关键字", "\n    ", "int", " key; ", "// 关键字", "\n    ", "int", " address; ", "// 哈希地址", "\n    ", "int", " i;\n    HashTable hash;\n     ", "while", "(", "1", ")\n    {\n             ", "printf", "(", "\"==================哈希表的应用==================\\n \"", ");\n            ", "printf", "(", "\"-------------------1.创建哈希表-----------------\\n\"", ") ;\n             ", "printf", "(", "\"-------------------2.显示哈希表-----------------\\n\"", ") ;\n             ", "printf", "(", "\"-------------------3.插入关键字-----------------\\n\"", ") ;\n             ", "printf", "(", "\"-------------------4.查找关键字-----------------\\n\"", ") ;\n             ", "printf", "(", "\"-------------------5.删除关键字-----------------\\n\"", ") ;\n             ", "printf", "(", "\"-------------------0.退出-----------------\\n\"", ") ;\n             \n             ", "printf", "(", "\"请输入你的选择：\"", ");\n            ", "scanf", "(", "\"%d\"", ",&i);\n            ", "switch", "(i)\n            {\n                ", "case", " ", "0", ": ", "printf", "(", "\"\\n提示：退出系统！\\n\"", ");", "break", ";\n                ", "case", " ", "1", ": ", "initHashTable", "(&hash);", "break", ";\n                ", "case", " ", "2", ":    ", "print_HashTable", "(&hash);", "break", ";\n                ", "case", " ", "3", ":    ", "printf", "(", "\"请输入要插入的关键字：\"", "); \n                        ", "scanf", "(", "\"%d \\n\"", ",&key); \n                        ", "insertHash", "(&hash,key,address);\n                        ", "break", ";\n                ", "case", " ", "4", ":    ", "printf", "(", "\"请输入要查找的关键字：\"", "); \n                        ", "scanf", "(", "\"%d \\n\"", ",&key); \n                        ", "searchHash", "(&hash, key,address);\n                        ", "break", ";\n                ", "case", " ", "5", ":    ", "printf", "(", "\"请输入要删除的关键字：\"", "); \n                        ", "scanf", "(", "\"%d \\n\"", ",&key); \n                        ", "DEL_HashTable", "(&hash, key,address);\n                        ", "break", ";    \n                \n            }     \n             \n    } \n   \n}\n\n", "\n", "跑的结果：卡住完全没反应", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "尝试修改函数类型为void来改写部分代码，但实际还是int用返回值来判断比较方便，我觉得代码逻辑完全没有问题，编译也没有错，死磕不出问题在哪里"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你得算上前面的结果啊, 比如12&amp;#43;3, 遍历到2的时候sum是1, 应该是1*10&amp;#43;2&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["栈的后缀表达式中不懂", ["问题遇到的现象和发生背景", "\n", "#include <stdio.h>", "#include <stdlib.h>", "#include<string.h>", "#define ERROR 0", "#define TRUE 1", "#define FALSE 0", "#define OK 1", "#define max 100", "\n", "typedef struct STACK", "{", "    int date[max];", "    int top;", "}stack;", "\n", "stack* initStack()//创建线性存储结构的栈结构", "{", "    stack* s;", "    s = (stack*)malloc(sizeof(stack));", "    s->top = -1;", "    return s;", "}", "\n", "void destroyStack(stack* s)//摧毁栈", "{", "    free(s);", "    printf(\"清空成功！\");", "}", "\n", "stack* clearStack(stack* s)//清空栈", "{", "    s->top = -1;", "    printf(\"清理成功！\");", "    return s;", "}", "\n", "int stackEmpty(stack* s)//判断链表是否为空", "{", "    if (s->top >= max)", "        return FALSE;", "    if (s->top == -1)", "        return TRUE;", "    else", "        return FALSE;", "}", "\n", "int getTop(stack* s, int* e)//获取栈顶元素", "{", "    if (s->top > -1 && s->top < max)", "    {", "        *e = s->date[s->top];", "        return OK;", "    }", "    else", "        return FALSE;", "}", "\n", "int push(stack* s, int e)//进栈操作", "{", "    if (s->top == max - 1)", "    {", "        return ERROR;", "    }", "    s->top++;", "    s->date[s->top] = e;", "    return OK;", "}", "\n", "int pop(stack* s, int* e)//出栈操作", "{", "    if (s->top == -1)", "        return ERROR;", "    *e = s->date[s->top];", "    s->top--;", "    return OK;", "}", "\n", "int stackLength(stack* s)//获取链表长度", "{", "    return s->top++;", "}", "\n", "int main()", "{", "    char str[100];", "    int i = 0, a, b, c, sum;", "    stack* s;", "    s = initStack();", "    gets_s(str);", "    while (str[i] != '\\0')", "    {", "        if (str[i] >= '0' && str[i] <= '9')//1. 将字符串型的数字转换为整型（或者浮点型）。", "        {", "            sum = 0;", "            sum = str[i] - '0';", "            i++;", "            while (str[i] >= '0' && str[i] <= '9')", "            {", "                sum = sum * 10 + str[i] - '0';", "                printf(\"%d\\n\",sum);", "                i++;", "            }", "            push(s, sum);", "        }", "        if (str[i] == '+' || str[i] == '-' || str[i] == '", "' || str[i] == '/')//3. 遇到运算符（#），则将栈中的前两个数字（a和b）出栈，并将b#a的值压入栈中。", "        {", "            pop(s, &a);", "            pop(s, &b);", "            if (str[i] == '+')", "                push(s, b + a);", "            else if (str[i] == '-')", "                push(s, b - a);", "            else if (str[i] == '", "')", "                push(s, b * a);", "            else if (str[i] == '/')", "                push(s, b / a);", "            else", "                printf(\"error\\n\");", "        }", "        i++;", "    }", "    pop(s, &c);//栈顶的数字出栈", "    printf(\"%s=%d\\n\", str, c);", "    return 0;", "}", "\n", "这是怎么变的  sum是整形  我不应该 用sum等于 str{i}-0 就行了吗         为什么sum*10还要加str     "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;那就是程序崩溃了&lt;br /&gt;创建函数一开始就会崩溃&lt;br /&gt;void CreateList_Lsort(LinkList&amp;amp; L,int n) {&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    L-&amp;gt;next &amp;#61; NULL;&lt;/span&gt;&lt;br /&gt;LinkList是个指针&amp;#xff0c;还没有分配空间&amp;#xff0c;你就开始操作它的成员&amp;#xff0c;就会崩溃&lt;br /&gt;先L &amp;#61; new LinkList;&lt;br /&gt;然后才是L-&amp;gt;next &amp;#61; NULL;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["程序异常终止 ，但是没有报错", ["问题遇到的现象和发生背景", "\n", "不能正确运行，程序没执行完异常退出", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#include <iostream>", "\nusing namespace std;\n", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "\n", "#define ERROR 0", "\n", "#define OK 1", "\ntypedef int Status; ", "//", "单链表中的元素为整型 \ntypedef int ElemType;\n", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "\n\n", "//", "单链表的类型定义 \n\ntypedef struct  LNode {\n\n    ElemType data;  ", "//", " 数据域\n\n    struct LNode* ", "next", ";  ", "//", " 指针域\n\n}LNode, * LinkList;\n\n", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "//", "\n\n", "//", "创建含n个元素的非递减有序单链表 ，注意插入排序 \n\nvoid CreateList_Lsort(LinkList& L,int n) {\n    L->", "next", " = NULL;\n    LNode* p_new = L->", "next", ";\n    ", "//", "新建立一个数组存放输入的元素的值\n    int a[", "1024", "];\n    ", "//", "利用冒泡发先对输入的数据进行排序\n    ", "for", " (int m = ", "0", "; m < n; ++m) { cin >> a[m]; }\n    int u, v,temp=", "0", ";\n    ", "for", "(u=", "0", ";u<n;++u)\n        ", "for", "(v=", "0", ";v<n-u-", "1", ";++v)\n        {\n            ", "if", " (a[v] <= a[v + ", "1", "]) {  temp = a[v]; a[v] = a[v + ", "1", "]; a[v + ", "1", "] = temp; }\n        }\n    ", "//", "创建一个链表按序将已经排列好的数据存放到链表中\n    ", "for", " (int j = ", "0", "; j < n; ++j) {\n        p_new = new LNode;\n        p_new->data=a[j];\n        p_new->", "next", " = L->", "next", ";\n        L->", "next", " = p_new;\n    }\n\n\n}", "//", "CreateList_Lsort\n\n\n\n", "//", "输出单链表\n\nStatus PrintList_L(LinkList L) {\n\n    LinkList p = L->", "next", ";\n\n    ", "while", " (p) {\n\n        cout << p->data << ", "\" \"", ";\n\n        p = p->", "next", ";\n\n    }\n\n    cout << endl;\n\n    return OK;\n\n}", "//", "PrintList_L\n\nint main() {\n\n    LinkList La；\n    int n;\n    cin >> n;", "//", "输入线性链表La的长度\n    CreateList_Lsort(La, n);\n    PrintList_L(La);\n    return ", "0", ";\n\n}\n\n", "\n", "运行结果及报错内容", "\n", "0x00ED6A4B 处(位于 test.exe 中)引发的异常: 0xC0000005: 写入位置 0xCCCCCCD0 时发生访问冲突。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;数据结构和算法课程是在给你灌输一些概念和培养解决问题的思维以及了解它们的优缺点等等&amp;#xff0c;在以后实际工作中很大可能你是不会自己去实现各种数据结构和算法&amp;#xff0c;而是使用别人已经写好了的经过测试和优化过的库&amp;#xff0c;不过学过数据结构和算法等基础课&amp;#xff0c;你应该大概知道各种数据结构和算法是怎样工作的。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构抽象数据类型的表示与实现和线性表的类型定义？", ["最近在学数据结构，现在学到了第2.3章线性表的类型定义，然后课本上就突然给出了图一和图二的线性表的抽象数据类型定义，但是我有点懵，书上给的这些东西是干嘛的呢？是为了方便在本书的以后讲解中描述关于线性表的操作吗？还是以后在C语言等程序中就可以直接使用？这个用记吗？第三张和第四张图片里关于抽象数据类型的表示与实现是假如在c语言中定义了，以后就可以在c语言中使用了吗？我c语言还差指针还有结构体和共同体没有学，比如第四张图片里的C.Realpart=X，这是啥玩意？还有struct这是啥？结构体吗？能不能帮我讲一讲这几张图片啊", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "```\r\n \\#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;string.h&gt;\r\n\r\nstruct student{\r\n    char name[15];\r\n    char major[15];\r\n    int Eng_sco;\r\n    int cal_sco;\r\n    int c_sco;\r\n    int sum;\r\n};\r\nint tx_per=0,tx_ave,tx_sum=0;\r\nint wl_per=0,wl_ave,wl_sum=0;\r\nint wlw_per=0,wlw_ave,wlw_sum=0;\r\nint ReadStudentInfo(const char* filename, struct student** pStudents);\r\nvoid Count(struct student pStudents[], int num);\r\nint main()\r\n{\r\n\t\r\n    int count;\r\n    int m;\r\n    struct student *list;\r\n    count=ReadStudentInfo(\"stu.txt\", &amp;list);\r\n    printf(\"学生信息： \\n\");\r\n    printf(\"----------------------------------------------------\\n\");\r\n    printf(\"序号  姓名  专业名称  英语成绩   线性代数成绩    c语言成绩   总成绩\\n\");\r\n    for(m=1;m&lt;=count;m++)\r\n    {\r\n        printf(\"%4d %6s %6s %4d %4d %4d %4d\\n\",m,(list+m-1)-&gt;name,(list+m-1)-&gt;major,(list+m-1)-&gt;Eng_sco,(list+m-1)-&gt;cal_sco,(list+m-1)-&gt;c_sco,(list+m-1)-&gt;sum);\r\n    }\r\n    Count(list, count);\r\n    printf(\"\\n统计信息 ：\\n\");\r\n    printf(\"----------------------------------------------------\\n\");\r\n    printf(\"序号  专业名称 学生人数 平均成绩\\n\");\r\n    printf(\"   1    通信      %d       %d\\n\",tx_per,tx_ave);\r\n    printf(\"   2    网络      %d       %d\\n\",wl_per,wl_ave);\r\n    printf(\"   3   物联网     %d       %d\\n\",wlw_per,wlw_ave);\r\n\t\r\n    return 0;\r\n}\r\nvoid CutString(char* buf,char*temp,char sp);\r\nint ReadStudentInfo(const char* filename, struct student** pStudents)\r\n{\r\n    FILE *fp;\r\n    char ch;\r\n    int i=1,j;\r\n    fp=fopen(filename,\"r\");\r\n    if(fp==NULL)\r\n    {\r\n        printf(\"cann't open the file\");\r\n        exit(-1);\r\n    }\r\n    ch=fgetc(fp);\r\n    while(ch!=EOF)\r\n    {\r\n        if(ch=='\\n')\r\n        {\r\n            i++;\r\n        }\r\n        ch=fgetc(fp);\r\n    }\r\n    rewind(fp);\r\n\t*pStudents=(struct student*)malloc(sizeof(** pStudents)*i);\r\n\r\n\tchar buf[512]={0};\r\n    for(j=0;j&lt;i;j++)\r\n    {\r\n\t\tmemset(*pStudents+j,0,sizeof(struct student));\r\n        fgets(buf,512,fp);\r\n\t\tint len = strlen(buf);\r\n\t\tbuf[len]=' ';\r\n\r\n\t\t\r\n\t\tCutString(buf,(*pStudents+j)-&gt;name,' ');\r\n\t\tCutString(buf,(*pStudents+j)-&gt;major,' ');\r\n\t\tchar e_Score[8],cal_Score[8],c_Score[8];\r\n\r\n\t\tmemset(e_Score,0,8);\r\n\t\tmemset(cal_Score,0,8);\r\n\t\tmemset(c_Score,0,8);\r\n\t\tCutString(buf,e_Score,' ');\r\n\t\t(*pStudents+j)-&gt;Eng_sco = atoi(e_Score);\r\n\t\tCutString(buf,cal_Score,' ');\r\n\t\t(*pStudents+j)-&gt;cal_sco = atoi(cal_Score);\r\n\t\tCutString(buf,c_Score,' ');\r\n\t\t(*pStudents+j)-&gt;c_sco = atoi(c_Score);\r\n\t\t(*pStudents+j)-&gt;sum=((*pStudents+j)-&gt;Eng_sco+(*pStudents+j)-&gt;cal_sco+(*pStudents+j)-&gt;c_sco);\r\n    }\r\n    fclose(fp);\r\n    return i;\r\n}\r\n\r\nvoid CutString(char* buf,char*temp,char sp)\r\n{\r\n\tint len = strlen(buf);\r\n\tfor (int i=0;i&lt;len;i++)\r\n\t{\r\n\t\tif (buf[i]==sp)\r\n\t\t{\r\n\t\t\tmemcpy(buf,buf+i+1,strlen(buf+i+1));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\ttemp[i] = buf[i];\r\n\t}\r\n}\r\n\r\nvoid Count(struct student pStudents[], int num)\r\n{\r\n    int n=1;\r\n    for(n=1;n&lt;=num;n++)\r\n    {\r\n        if(!strcmp((pStudents+n-1)-&gt;major,\"通信\"))\r\n        {\r\n            tx_per++;\r\n            tx_sum=tx_sum+(pStudents+n-1)-&gt;sum;\r\n\t\t\ttx_ave=tx_sum/tx_per;\r\n        }\r\n        if(!strcmp((pStudents+n-1)-&gt;major,\"网络\"))\r\n        {\r\n            wl_per++;\r\n            wl_sum=wl_sum+(pStudents+n-1)-&gt;sum;\r\n\t\t\twl_ave=wl_sum/wl_per;\r\n        }\r\n        if(!strcmp((pStudents+n-1)-&gt;major,\"物联网\"))\r\n        {\r\n            wlw_per++;\r\n            wlw_sum=wlw_sum+(pStudents+n-1)-&gt;sum;\r\n\t\t\twlw_ave=wlw_sum/wlw_per;\r\n        }    \r\n    }\r\n    free(pStudents);\r\n}\r\n\r\n\r\n```\r\n闲来无事，改了一把， 拿过去跑一把吧", "Konwledge_Point": "线性规划和规约", "Question": ["关于c语言从文件中读取学生信息，处理并打印", ["\nb)  建议函数流程：", "\ni.  打开数据文件，失败返回-1；", "\nii. 从头到尾扫描数据文件（即预读一遍）获得学生人数；", "\niii.    根据学生人数，利用malloc和sizeof等函数或运算符为struct student** pStudents分配内存；", "\niv. 利用rewind函数，定位到文件头；", "\nv.  读取数据文件，并把每一条记录通过数组下标法或指针法保存到结构体数组pStudents中；", "\nvi. 关闭文件；", "\nvii.    返回学生人数。", "\n\n", "c)  数据文件格式说明：", "\n一行一条学生信息的记录，不同属性用空格隔开，输入数据中无总成绩记录，例如：", "\n张三 通信 89 93 95", "\n李四 网络 88 91 94", "\n王五 物联网 71 94 88", "\n\n", "\n", "编写统计函数：", "\na)  函数定义void Count(struct student pStudents[], int num)。输入参数分别为保存学生的结构体数组和学生人数。", "\nb)  功能为：统计所有学生的总成绩和每个专业（假定一共三个专业：通信，网络，物联网）的平均成绩；输入参数包括学生信息结构体数组，学生人数，返回的每个学生的总成绩直接填充到对应的输入结构体数组对应字段中。统计信息包括三个专业的总人数、平均成绩数组，用全局变量来表示。访问每个学生信息的时候，用指针来指向当前正在处理的学生。", "\nc)  设计一个或者三个带参数的宏，判断输入的字符串是否是指定的专业名称，并在函数Count中使用。", "\n", "编写main函数实现：", "\na)  定义变量，其中保存学生信息的数据文件直接在源代码中初始化；", "\nb)  读取学生信息，如果失败，打印失败信息并退出程序；", "\nc)  统计学生信息；", "\nd)  输出统计信息。", "\ne)  释放内存。", "\n", "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nstruct student{\n    char name[15];\n    char major[15];\n    int Eng_sco;\n    int cal_sco;\n    int c_sco;\n    int sum;\n};\nint tx_per=0,tx_ave,tx_sum=0;\nint wl_per=0,wl_ave,wl_sum=0;\nint wlw_per=0,wlw_ave,wlw_sum=0;\nint ReadStudentInfo(const char* filename, struct student** pStudents);\nvoid Count(struct student pStudents[], int num);\nint main()\n{\n\n    int count;\n    int m;\n    struct student *list;\n    count=ReadStudentInfo(\"readme.txt\", &list);\n    printf(\"学生信息： \\n\");\n    printf(\"----------------------------------------------------\\n\");\n    printf(\"序号  姓 名  专业名称 英语成绩 线性代数成绩 c语言成绩 总成绩\\n\");\n    for(m=1;m<=count;m++)\n    {\n        printf(\"%4d %s %s %4d %4d %4d %4d\\n\",m,(list+m-1)->name,(list+m-1)->major,(list+m-1)->Eng_sco,(list+m-1)->cal_sco,(list+m-1)->c_sco,(list+m-1)->sum);\n    }\n    Count(list, count);\n    printf(\"\\n统计信息 ：\\n\");\n    printf(\"----------------------------------------------------\\n\");\n    printf(\"序号  专业名称 学生人数 平均成绩\\n\");\n    printf(\"   1    通信      %d       %d\\n\",tx_per,tx_ave);\n    printf(\"   2    网络      %d       %d\\n\",wl_per,wl_ave);\n    printf(\"   3   物联网     %d       %d\\n\",wlw_per,wlw_ave);\n\n    return 0;\n}\nint ReadStudentInfo(const char* filename, struct student** pStudents)\n{\n    FILE *fp;\n    char ch;\n    int i=1,j;\n    fp=fopen(readme.txt,\"r\");\n    if(fp==NULL)\n    {\n        printf(\"cann't open the file\");\n        exit(-1);\n    }\n    ch=fgetc(fp);\n    while(ch!=EOF)\n    {\n        if(ch=='\\n')\n        {\n            i++;\n        }\n        ch=fgetc(fp);\n    }\n    rewind(fp);\n     *pStudents=(struct student*)malloc(sizeof(** pStudents)*i);\n    for(j=0;j<i;j++)\n    {\n        fread(&*pStudents[j],sizeof(struct student)-sizeof(int),1,fp);\n        (*pStudents+j)->sum=((*pStudents+j)->Eng_sco+(*pStudents+j)->cal_sco+(*pStudents+j)->c_sco);\n    }\n    fclose(fp);\n    return i;\n}\nvoid Count(struct student pStudents[], int num)\n{\n    int n=1;\n    for(n=1;n<=num;n++)\n    {\n        if(!strcmp((pStudents+n-1)->major,\"通信\"))\n        {\n            tx_per++;\n            tx_sum=tx_sum+(pStudents+n-1)->sum;\n        }\n        if(!strcmp((pStudents+n-1)->major,\"网络\"))\n        {\n            wl_per++;\n            wl_sum=wl_sum+(pStudents+n-1)->sum;\n        }\n        if(!strcmp((pStudents+n-1)->major,\"物联网\"))\n        {\n            wlw_per++;\n            wlw_sum=wlw_sum+(pStudents+n-1)->sum;\n        }\n        tx_ave=tx_sum/tx_per;\n        wl_ave=wl_sum/wl_per;\n        wlw_ave=wlw_sum/wlw_per;\n    }\n    free(pStudents);\n}\n\n", "\n\n", "运行不起来，是哪里出问题了？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/248512654846110.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;代码修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\nusing &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;std&lt;/span&gt;;\n\ntemplate&amp;lt;typename T&amp;gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SingleLinkedList&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SLNode&lt;/span&gt;\n    &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        T _data;\n        SLNode* next;\n\n        SLNode()\n        {\n            &lt;span class=\"hljs-comment\"&gt;//this-&amp;gt;_data &amp;#61; 0;&lt;/span&gt;\n            this-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        }\n    };\n    SLNode* _head;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; _count;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n\n    SingleLinkedList()\n    {\n        _head &amp;#61;  &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; SLNode();\n        _head-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;//SLNode&amp;lt;T&amp;gt;* _head &amp;#61; NULL;&lt;/span&gt;\n        this-&amp;gt;_count &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; push_back( T data)\n    {\n        SLNode* new_node &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; SLNode();\n        new_node-&amp;gt;_data &amp;#61; data;\n        new_node-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n\n        SLNode* last_node &amp;#61; _head;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; _count; i&amp;#43;&amp;#43;)\n        {\n            last_node &amp;#61; last_node-&amp;gt;next;\n        }\n        new_node-&amp;gt;next &amp;#61; last_node-&amp;gt;next;\n        last_node-&amp;gt;next &amp;#61; new_node;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; insert(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; pos, T data)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (_head &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n        {\n            pos &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        SLNode* new_node &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; SLNode();\n        new_node-&amp;gt;_data &amp;#61; data;\n        new_node-&amp;gt;next &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n\n        SLNode* pos_node &amp;#61; _head;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; pos; i&amp;#43;&amp;#43;)\n            pos_node &amp;#61; pos_node-&amp;gt;next;\n        new_node-&amp;gt;next &amp;#61; pos_node-&amp;gt;next;\n        pos_node-&amp;gt;next &amp;#61; new_node;\n        _count&amp;#43;&amp;#43;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; show()\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (_count &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;该链表中没有数据&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            SLNode* pcurrent &amp;#61; _head-&amp;gt;next;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (pcurrent !&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n            {\n                cout &amp;lt;&amp;lt; pcurrent-&amp;gt;_data &amp;lt;&amp;lt; endl;\n                pcurrent &amp;#61; pcurrent-&amp;gt;next;\n            }\n            cout &amp;lt;&amp;lt; endl;\n        }\n    }\n\n};\n\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Student&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    Student();\n    Student(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; id, &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; name, &lt;span class=\"hljs-keyword\"&gt;float&lt;/span&gt; age, &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; score);\n    ~Student();\n    friend ostream&amp;amp; operator&amp;lt;&amp;lt;(ostream&amp;amp; os, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Student&amp;amp; s)\n    {\n        os &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;学号:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; s._id &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  姓名&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; s._name &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  年龄&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; s._age &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  成绩&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; s._score &amp;lt;&amp;lt; endl;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n\n    }\n    &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; str()\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;内部输出:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;学号:&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; _id &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  姓名&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; _name &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  年龄&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; _age &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;  成绩&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; _score &amp;lt;&amp;lt; endl;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;;\n    };\n    Student&amp;amp; operator &amp;#61;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Student&amp;amp; x)\n    {\n        this-&amp;gt;_id &amp;#61; x._id;\n        this-&amp;gt;_age &amp;#61; x._age;\n        this-&amp;gt;_score &amp;#61; x._score;\n        this-&amp;gt;_name &amp;#61; x._name;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *this;\n\n    }\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; _id;\n    &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; _name;\n    &lt;span class=\"hljs-keyword\"&gt;float&lt;/span&gt; _age;\n    &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; _score;\n\n};\nStudent::Student()\n{\n    _id &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    _name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n    _age &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    _score &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\nStudent::Student(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; id, &lt;span class=\"hljs-keyword\"&gt;string&lt;/span&gt; name, &lt;span class=\"hljs-keyword\"&gt;float&lt;/span&gt; age, &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; score)\n{\n    _id &amp;#61; id;\n    _name &amp;#61; name;\n    _age &amp;#61; age;\n    _score &amp;#61; score;\n}\n\nStudent::~Student()\n{\n}\n\n\n\n\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n\n    Student s1 &amp;#61; { &lt;span class=\"hljs-number\"&gt;001&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;桑桑&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;18.0&lt;/span&gt;f,&lt;span class=\"hljs-number\"&gt;88.0&lt;/span&gt;l };\n    Student s2 &amp;#61; { &lt;span class=\"hljs-number\"&gt;002&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;稚稚&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8.0&lt;/span&gt;f,&lt;span class=\"hljs-number\"&gt;77.0&lt;/span&gt;l };\n    Student s3 &amp;#61; { &lt;span class=\"hljs-number\"&gt;000&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;渊渊&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;25.0&lt;/span&gt;f,&lt;span class=\"hljs-number\"&gt;99.0&lt;/span&gt;l };\n    SingleLinkedList&amp;lt;Student&amp;gt; L1;\n    cout &amp;lt;&amp;lt; s1 &amp;lt;&amp;lt; endl;\n    L1.push_back(s1);\n    L1.push_back(s2);\n    cout &amp;lt;&amp;lt; s1 &amp;lt;&amp;lt; endl;\n    L1.insert(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, s3);\n    L1.show();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于自定义单链表实现Student类型数据存放的问题，主要是结点的构造不太明白！(语言-c++)", ["实验要求： main 函数中利用单向链表类 SingleLinkedList， 定义和初始化一个 Student 类型的线性链表，在表中添加（push_back）和插入（insert）新的元素。", "\n", "结点的构造", "\n", "template", "<", "typename", " T>\n", "class", " ", "SLNode", "\n{\n", "public", ":\n    T _data;\n    SLNode<T>* next; \n    \n    ", "SLNode", "()\n    {\n        ", "this", "->_data = ", "NULL", ";\n        ", "this", "-> next = ", "NULL", ";\n    }\n};\n", "\n", "链表的实现", "\n", "template<typename T>\n", "class", " ", "SingleLinkedList", "\n", "{\n", "private", ":\n    SLNode<T>* _head;\n    ", "int", " _count;\n\n", "public", ":\n\n    SingleLinkedList()\n    {\n        SLNode<T>* _head = ", "NULL", ";\n        this->_count = ", "NULL", ";\n    }\n\n    ", "void", " push_back(SingleLinkedList* L, T data)\n    {\n        SLNode<T>* new_node = ", "new", " SLNode();\n        new_node->_data = data;\n        new_node->next = ", "NULL", ";\n\n        SLNode<T>* last_node = L->_head;\n        ", "for", " (", "int", " i = ", "0", "; i < _count; i++)\n        {\n            last_node = last_node->next;\n        }\n        new_node->next = last_node->next;\n        last_node->next = new_node;\n    }\n    ", "void", " insert(SingleLinkedList* L, ", "int", " pos, T data)\n    {\n        ", "if", " (L == ", "NULL", ")\n        {\n            pos = ", "0", ";\n        }\n        SLNode<T>* new_node = ", "new", " SLNode();\n        new_node->_data = data;\n        new_node->next = ", "NULL", ";\n\n        SLNode<T>* pos_node = L->_head;\n        ", "for", " (", "int", " i = ", "0", "; i < pos; i++)\n            pos_node = pos_node->next;\n        new_node->next = pos_node->next;\n        pos_node->next = new_node;\n        L->_count++;\n    }\n\n    ", "void", " show(SingleLinkedList* L)\n    {\n        ", "if", " (L->_count == ", "0", ")\n            cout << ", "\"该链表中没有数据\"", " << endl;\n        ", "else", " {\n            SLNode<T>* pcurrent = L->_head->next;\n            ", "while", " (pcurrent != ", "NULL", ")\n            {\n                cout << pcurrent->_data << endl;\n                pcurrent = pcurrent->next;\n            }\n            cout << endl;\n        }\n    }\n\n};\n\n", "\n", "测试函数", "\n", "int main()\n{\n    \n    Student ", "s1", " = { ", "001", ",", "\"桑桑\"", ",", "18", ".", "0", "f,", "88", ".", "0", "l };\n    Student ", "s2", " = { ", "002", ",", "\"稚稚\"", ",", "8", ".", "0", "f,", "77", ".", "0", "l };\n    Student ", "s3", " = { ", "000", ",", "\"渊渊\"", ",", "25", ".", "0", "f,", "99", ".", "0", "l };\n    SingleLinkedList<Student> L1;\n        cout << ", "s1", " << endl;\n    L1.push_back(&L1,", "s1", ");\n    L1.push_back(&L1,", "s2", ");\n    cout << ", "s1", " << endl;\n    L1.", "insert(&L1, ", "0", ", ", "s3", ");\n    L1.", "show(&L1);\n", "}\n\n", "\n", "Student类", "\n", "class Student\n{\npublic:\n    Student(int id, string ", "name", ", float age, double ", "score", ");\n    ~Student();\n    friend ostream& operator<<(ostream&os, const Student&s)\n    {\n       os << ", "\"学号:\"", " << s.", "_id", " << ", "\"  姓名：\"", " << s.", "_name", " << ", "\"  年龄\"", " << s.", "_age", " << ", "\"  成绩：\"", " << s.", "_score", " << ", "endl", ";\n            return os;\n        \n    }\n    string ", "str", "()\n    {\n        cout << ", "\"内部输出:\"", " << ", "endl", ";\n        cout << ", "\"学号:\"", " << ", "_id", " << ", "\"  姓名：\"", " << ", "_name", " << ", "\"  年龄\"", " << ", "_age", " << ", "\"  成绩：\"", " << ", "_score", " << ", "endl", ";\n        return ", "\"\\n\"", ";\n    };\n    Student& operator =(const Student&x)\n    {\n        this->", "_id", " = x.", "_id", ";\n        this->", "_age", " = x.", "_age", ";\n        this->", "_score", " = x.", "_score", ";\n        this->", "_name", " = x.", "_name", ";\n        \n    \n    }\n", "private", ":\n    int ", "_id", ";\n    string ", "_name", ";\n    float ", "_age", ";\n    double ", "_score", ";\n\n};\n\nStudent::Student(int id, string ", "name", ", float age, double ", "score", ")\n{\n    ", "_id", " = id;\n    ", "_name", " = ", "name", ";\n    ", "_age", " = age;\n    ", "_score", " = ", "score", ";\n}\n\nStudent::~Student()\n{\n}\n\n", "\n", "报错", "\n", "已启动生成…\n", "1", ">", "------ 已启动生成: 项目: ex4p4, 配置: Debug x64 ------", "\n", "1", ">p4.cpp\n", "1", ">", "C", ":\\Users\\", "86150", "\\source\\repos\\ex3\\dsa\\SingledLinkedList.h(", "83", ",", "1", "): ", "error", " ", "C2514", ": “SLNode”: 无法构建类模板\n", "1", ">", "C", ":\\Users\\", "86150", "\\source\\repos\\ex3\\dsa\\SingledLinkedList.h(", "7", "): message : 参见“SLNode”的声明\n", "1", ">", "C", ":\\Users\\", "86150", "\\source\\repos\\ex3\\dsa\\SingledLinkedList.h(", "83", "): message : 查看对正在编译的 类 模板 实例化“SingleLinkedList<T>”的引用\n", "1", ">已完成生成项目“ex4p4.vcxproj”的操作 - 失败。\n========== 生成: 成功 ", "0", " 个，失败 ", "1", " 个，最新 ", "1", " 个，跳过 ", "0", " 个 ==========\n\n错误    C2514    “SLNode”: 无法构建类模板    ex4p4    ", "C", ":\\Users\\", "86150", "\\source\\repos\\ex3\\dsa\\SingledLinkedList.h    ", "83", "    //", "83", "是最后一行，有点迷惑\n", "\n", "希望可以详细指出我的错误原因，以及如何改正"]], "Tag": "算法设计"}
{"Answer": "将数组定义在全局数据区，就OK", "Konwledge_Point": "线性规划和规约", "Question": ["c++为什么在宏定义大于4万以后就会出错?", ["1.问题：素数筛法，在数组大小为40w时报错，显示发生了未经处理的win32异常。", "\n 关闭vs2015的调试-实时里面的选项后就是.exe已停止工作。", "\n 2.代码", "\n\n", "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<set>\n#include<list>\n#include<vector>\n#include<map>\n#include<stack>\n#include<iterator>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\n#define F(i,m,n) for(int i=m;i<n;i++)\n#define max 400007//40007没问题\nint prime[max];//保存筛得的素数\nbool mark[max];//标记该数是否已被标记为非素数 true表示非素数\nint primesize;\n//素数筛法\nvoid init()\n{\n    F(i, 0, max)   //初始化\n    {\n        mark[i] = false;\n    }\n    memset(prime,0,sizeof(prime));\n    primesize = 0;\n    F(j,2,max)\n    {\n        if (mark[j])continue;  //已标记为非素数，跳过\n        prime[primesize++] = j;//保存素数\n        for (int k = j*j;k < max;k+=j)//标记素数所有倍数为非素数\n        {\n            mark[k] = true;\n        }\n    }\n}\n//主函数\nint main()\n{\n    init();\n    int n;\n    bool output = false;\n    scanf(\"%d\",&n);\n    F(i,0,max)\n    {\n        if (prime[i] < n&&prime[i]!=0)\n        {\n            if(output)\n            {\n                printf(\" %d\",prime[i]);//输出空格\n            }\n            else\n            {\n                printf(\"%d\",prime[i]);\n                output = true;\n            }\n        }\n        else break;\n    }\n    printf(\"\\n\");\n    return 0;\n}\n", "\n\n", "3.大佬的类似代码-北邮2018研究生复试题", "\n\n", "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define maxn 400007//最大遍历到40w 就能找到第1w多个发财数 \nint vis[maxn],p[maxn];\nll fa[maxn];\nvoid init(int n)//线性筛 \n{\n    int pos=0;\n    memset(vis,0,sizeof(vis));\n    int i,j;\n    for(i=2;i<n;i++)\n    {\n        if(!vis[i]) p[pos++]=i;\n        for(j=0;j<pos&&i*p[j]<n;j++)\n        {\n            vis[i*p[j]]=1;\n            if(i%p[j]==0) break;\n        }\n    }\n}\n\nint main()\n{\n    init(maxn);\n    int t,n,i,k,j,q;\n\n    vector <int> v;\n    for(k=2;k<400000;k++)//遍历到40w \n    {\n        if(!vis[k]) continue;//是素数则直接跳过\n        int kt=k;\n        int anssize=0;\n        int ansprime[30];\n        int ansnum[30];\n        for(i=0;i<1000;i++)//用前1000个素数来测试\n        {\n            //这个40w和1000，无脑试了很多次才确定这个范围，各位大佬有什么简便方法请指教 \n            if(kt%p[i]==0)//素数分解，可以参考王道第四章的分解素因数 \n            {\n                ansprime[anssize]=p[i];\n                ansnum[anssize]=0;\n                while(kt%p[i]==0)\n                {\n                    ansnum[anssize]++;\n                    kt/=p[i];\n                }\n                anssize++;\n                if(kt==1) break;\n            }\n        }\n        int su=0;\n        for(i=0;i<anssize;i++)\n        {\n            su+=ansnum[i];\n        }\n        if(su>=8)//是发财数就存起来 \n        {\n            v.push_back(k);\n        }\n    }\n    int vs=v.size();\n\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cout<<v[n-1]<<endl;\n    }\n    return 0;\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;假设有10个元素&amp;#xff0c;你删除第3个&amp;#xff0c;那么从第4个到第10个元素都要向前移动一个位置。因此总共需要移动的元素个数是10-3个&amp;#xff0c;也就是n-i&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["删除值为x的元素时需要比较元素和移动元素的总次数为", ["在一个长度为n的线性表中，删除值为x的元素时需要比较元素和移动元素的总次数为（   ）。", "A．（n+1）/2                             B．n/2", "C．n                                    D．n+1", "解析：假设长度为n的线性表中只有一个值为x的元素，则从第一个元素起到找到值为x(假设为第i个元素）比较i次，删除i后，第i+1个元素到第n个元素都要移动，移动n-(i+1)+1即n-i次，故比较元素和移动元素的总次数为n次。注：以上答案是针对线性表中只有一个值为x的元素", "问一下那个移动n-(i+1)+1怎么来的"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;/p&gt;\n&lt;p&gt;本次提问扣除的有问必答次数&amp;#xff0c;已经为您补发到账户&amp;#xff0c;我们后续会持续优化&amp;#xff0c;扩大我们的服务范围&amp;#xff0c;为您带来更好地服务。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["如何使用scipy.optimize.minimize来直接对方程组进行优化求解？", ["最近在做基于tdoa的室内目标定位的研究，主要是做chan算法定位方面的东西，但是做了实验之后发现效果不太稳定。师哥发给我一份他改写的scipy.optimize.minimize的函数，说是用这个就可以定出位置，然后让我好好看一看，最好能看懂，如下（注释是我自己写的，不知道都对不对）", "\n", "def", " ", "opt_location", "(", "range", ", anchors", "):               ", "#range是真实测得的toa", "\n\n    ", "def", " ", "con", "():\n        ", "# 约束条件 分为eq 和ineq", "\n        ", "# eq表示 函数结果等于0 ； ineq 表示 表达式大于等于0", "\n        x1min, x1max, x2min, x2max = -", "5", ", ", "15", ", -", "5", ", ", "15", "\n        cons = ({", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: x[", "0", "] - x1min},              ", "#x[0]-x1min >= 0", "\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: -x[", "0", "] + x1max},\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: x[", "1", "] - x2min},\n                {", "'type'", ": ", "'ineq'", ", ", "'fun'", ": ", "lambda", " x: -x[", "1", "] + x2max})\n        ", "return", " cons                ", "# **************我也不知道为什么约束条件要这么设置", "\n\n    ", "def", " ", "cost", "(", "pos", "):                 ", "#***************", "\n        ref = np.sqrt(np.", "sum", "((anchors-pos.reshape(", "1", ",", "2", "))**", "2", ", axis=", "1", "))         ", "#anchors为四个基站的位置，pos为要优化的位置", "\n        ref0 = ref[", "1", ":] - ref[", "0", "]\n        ref1 = ref[", "2", ":] - ref[", "1", "]\n        ref2 = ref[", "3", ":] - ref[", "2", "]                            ", "#tdoa", "\n        Ri_0 = ", "range", "[", "1", ":] - ", "range", "[", "0", "]\n        Ri_1 = ", "range", "[", "2", ":] - ", "range", "[", "1", "]                \n        Ri_2 = ", "range", "[", "3", ":] - ", "range", "[", "2", "]                        ", "#真实测得的tdoa", "\n        ", "return", " np.", "sum", "((Ri_0 - ref0)**", "2", ") + np.", "sum", "((Ri_1 - ref1)**", "2", ") + np.", "sum", "((Ri_2 - ref2)**", "2", ")    ", "#目标函数的目的是要求所估计位置和各基站的tdoa", "\n                                                                                                  ", "#和真实测得的tdoa相差最小", "\n\n    x0 = np.array([", "5", ", ", "5", "])\n    res = minimize(cost, x0, constraints=con()).x\n    ", "return", " res\n", "\n", "之后，我的任务参照这个函数的优化方式，把chan算法的核心方程组（线性方程组）用这个优化算法求解出来，如图红框", "\n", "\n这篇关于chan算法的csdn博客的链接是：", "https://blog.csdn.net/qq_23947237/article/details/82715784", "\n由于之前没有接触过优化方面的东西，所以我没有思路，师哥说让我找出来目标函数和约束条件，然后依葫芦画瓢就行，但是我还是一头雾水，希望大佬可以帮忙解决！下面是我最后通过chan算法的第一次ls粗略位置估计得出Za0的代码，我的任务就是把这个Za0用优化的方式求出来", "\n", "from", " math import *\n", "from", " numpy import *\n", "import", " numpy as np\n", "from", " numpy.linalg import inv, qr\n", "BSN", " = ", "4", " #基站数目\n", "BS", "=np.array([[", "0", ",", "0", ",", "10", ",", "10", ",-sqrt(", "3", "),dot(- ", "0", ".", "5", ",sqrt(", "3", ")),dot(", "0", ".", "5", ",sqrt(", "3", "))],[", "0", ",", "10", ",", "10", ",", "0", ",", "0", ",-", "1", ".", "5", ",-", "1", ".", "5", "]]) #锚点位置\n", "BS", "=BS[:,:BSN] #取前", "4", "列\n", "#BS=multiply(BS,50)   #数值×50 四个基站位置固定", "\n", "print", "(", "\"-----------------------------BS--------------------------------\"", ")\n", "print", "(BS)            #看看基站位置\n", "MS", "=np.array([", "10", ",", "4", "]) #设置移动台初始位置\n", "print", "(", "\"-----------------------------MS--------------------------------\"", ")\n", "print", "(MS)            #看看移动台位置\n", "R0", "=[]                #R0为四个锚点分别到移动台的距离\n", "R0", ".clear()           #清空R0\n", "for", " i in range(", "0", ",BSN):\n    ", "R0", ".append(sqrt((BS[(", "0", ",i)] - MS[", "0", "]) ** ", "2", " + (BS[(", "1", ",i)] - MS[", "1", "])**", "2", "))#计算基站到移动台的距离\n", "R0", " = np.array(R0)    #转换为矩阵\n", "print", "(", "\"-----------------------------R0--------------------------------\"", ")\n", "print", "(R0)\n", "Noise", " = ", "1", "            #噪声方差\n", "R", " =", " []", "\n", "R", ".clear()\n", "a", " = random.random(", "3", ")\n", "r", " = np.zeros(", "3", ")\n", "for", " i in range(", "0", ",", "3", "):\n    ", "r", "[i]=", "2", "*a[i]-", "1", "  #随机生成一个-", "1", "到", "1", "的数\n", "for", " i in range(", "1", ",BSN):  \n    ", "R", ".append(R0[i]-R0[", "0", "]+Noise*r[i-", "1", "])#计算距离差 R2-R1 R3-R1 R4-R1 并加噪声\n", "R", " = np.array(R)     #转换为矩阵\n", "print", "(", "\"-----------------------------R--------------------------------\"", ")\n", "print", "(R)            #BSN BS R都有了，开始进行算法部分\n\n", "Q", " = eye(BSN-", "1", ")\n", "print", "(", "\"-----------------------------Q--------------------------------\"", ")\n", "print", "(Q)\n", "K1", " = ", "0", "\n", "k", " = (BS**", "2", ").sum(", "0", ") #BS各基站的x平方+y平方\n", "print", "(", "\"-----------------------------K--------------------------------\"", ")\n", "print", "(k)\n", "Ga", " = np.array([[", "1", ".", "0", ",", "1", ".", "0", ",", "1", ".", "0", "],[", "1", ".", "0", ",", "1", ".", "0", ",", "1", ".", "0", "],[", "1", ".", "0", ",", "1", ".", "0", ",", "1", ".", "0", "]])  #弄一个", "3", "*", "3", "的矩阵\n", "for", " i in range(", "0", ",BSN-", "1", "):\n    ", "Ga", "[i][", "0", "] = -BS[", "0", "][i+", "1", "]\n    ", "Ga", "[i][", "1", "] = -BS[", "1", "][i+", "1", "]\n    ", "Ga", "[i][", "2", "] = -R[i]\n", "print", "(", "\"-----------------------------Ga--------------------------------\"", ")\n", "print", "(Ga)\n", "h", " =", " []", "\n", "for", " i in range(", "0", ",BSN-", "1", "):\n    ", "h", ".append(", "0", ".", "5", "*(R[i]**", "2", "-k[i+", "1", "]+K1))\n", "h", " = np.array(h)\n", "print", "(", "\"-----------------------------h--------------------------------\"", ")\n", "print", "(h)\n", "Za0", " = inv((Ga.T).dot(inv(Q)).dot(Ga)).dot((Ga.T).dot(inv(Q)).dot(h.T))  #第一次粗略估计的位置，使用这个值来估计B\n", "print", "(", "\"-----------------------------Za0--------------------------------\"", ")\n", "print", "(Za0)\n\n", "\n", "主要是不知道思路和怎么写代码，麻烦了，谢谢！"]], "Tag": "算法设计"}
{"Answer": "（x,y），（x2， y2）分别表示线性渐变的起始点和结束点，globalCoord 为true 表示两个坐标点是绝对坐标", "Konwledge_Point": "线性规划和规约", "Question": ["Echarts饼图x,y,x2,y2是什么含义？", ["\n", "color: {", "\n        type: 'linear',", "\n        x: 0,", "\n        y: 0,", "\n        x2: .1,", "\n        y2: 1,", "\n        colorStops: [{", "\n            offset: 0, color: '#4dcdfc' // 0% 处的颜色，蓝绿色", "\n        },", "\n        {", "\n            offset: 1, color: '#3F77FE' // 100% 处的颜色，蓝色", "\n        }],", "\n        globalCoord: true // 缺省为 false", "\n    }, ", "\n", "\n\n", "普通坐标是下图这种：", "\n\n", "\n\n", "饼图的X坐标的0起点是哪里，往哪个方向是增大的？Y坐标起点是哪里？往哪个方向是增大的？", "\n我尝试了一下，X好像是从左往右递增，Y是从往上下递增，取值范围不是0-1，而是可以更大，而且不能取负数。", "\n另外globalCoord是什么意思？", "\n\n", "完整代码如下：", "\n\n", "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>EChartsTest</title>\n    <!-- 引入 echarts.js -->\n    <script src=\"https://cdn.bootcss.com/echarts/4.2.1-rc1/echarts.min.js\"></script>\n</head>\n<body>\n    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->\n    <div id=\"main\" style=\"width: 600px;height:400px;background-color:#081C28\"></div>\n\n    <script type=\"text/javascript\">\n\n        // 基于准备好的dom，初始化echarts实例\n        var myChart = echarts.init(document.getElementById('main'));\n\n        var option = {\n        series: [\n            {\n                name: '',\n                type: 'pie',\n                radius: ['68%', '83%'], //半径\n                avoidLabelOverlap: true, //是否启用防止标签重叠策略\n                hoverAnimation: false,    //是否开启 hover 在扇区上的放大动画效果\n                color: [\"#ff726b\", \"#87da76\"], //默认色板：粉红色，绿色\n                //设置值域标签\n                label: {\n                    normal: {\n                        fontSize: '14',\n                        position: 'center', //'outer'在饼图外，'inner'在饼图上，'center'在饼图中心\n                        color: '#00FFFC',  //浅蓝色\n                        // formatter: '{b}\\n\\n{d}%' // {b}:数据名； {c}：数据值； {d}：百分比\n                        formatter: function (data) {\n                            return '{name|' + data.name + '}\\n\\n{num|' + data.percent + '%}';\n                        },\n                        //富文本编辑，用于设置文本样式\n                        rich: {\n                            name: {\n                                color: '#00FFFC',\n                                fontSize: '14',\n                                textShadowColor: 'rgba(0,255,252,1)', //浅蓝绿色\n                                textShadowBlur: '4' //文字光影模糊度，其实就是阴影外延出来的长度\n                            },\n                            num: {\n                                color: '#06BEFF',  //亮蓝绿色\n                                fontSize: '30'\n                            }\n                        }\n                    },\n                },\n                //标签的指向线\n                labelLine: {\n                    normal: {\n                        show: false\n                    }\n                },\n                data: [\n                    {\n                        value: 60,\n                        name: '授权使用率',\n                        itemStyle: {\n        //线性渐变，前四个参数分别是 x, y, x2, y2, 范围从 0 - 1，相当于百分比，如果 globalCoord 为'true'，则该四个值是绝对的像素位置，\n                        color: {\n                            type: 'linear',\n                            x: 0,\n                            y: 0,\n                            x2: .1,\n                            y2: 1,\n                            colorStops: [{\n                                offset: 0, color: '#4dcdfc' // 0% 处的颜色，蓝绿色\n                            },\n                            {\n                                offset: 1, color: '#3F77FE' // 100% 处的颜色，蓝色\n                            }],\n                            globalCoord: true // 缺省为 false\n                        }, \n                            shadowColor: 'rgba(0,62,198,0.75)', //饼图的阴影颜色(本例是环形图)，宝蓝色\n                            shadowBlur: 10 //光影模糊度，本质就是阴影外延出去的长度\n                        }\n                    }, {\n                        value: 28,\n                        name: '占位标签',\n                        itemStyle: {\n                            color: {\n                                type: 'linear',\n                                x: 0,\n                                y: 0,\n                                x2: .1,\n                                y2: 1,\n                                colorStops: [{\n                                    offset: 0, color: '#97d0fe' // 0% 处的颜色\n                                },\n                                {\n                                    offset: 1, color: '#8ecdfe' // 100% 处的颜色\n                                }],\n                                globalCoord: true // 缺省为 false\n                            }, \n                            shadowColor: 'rgba(0,62,198,0.75)',\n                            shadowBlur: 10\n                        }, \n                        //这部分用于填充空白，不显示标签。\n                        label: {\n                            normal: {\n                                show: false\n                            }\n                        }\n                    },\n                ]\n            }\n        ]\n    };\n\n        // 使用刚指定的配置项和数据显示图表。\n        myChart.setOption(option);\n\n    </script>\n\n</body>\n</html>\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第一行年份之类的不需要…&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请问我这个是怎么了，plot使用错误，向量长度必须相同，刚开始提取excel数据", ["\n", "请问我这个是怎么了，plot使用错误，向量长度必须相同，刚开始提取excel数据"]], "Tag": "算法设计"}
{"Answer": "是整个rv底部加两个按钮把，还是说是每个item里面加按钮\r\n\r\n—————————————————————————\r\n\r\n既然是在recyclerview的底部加的话，那就应该在该页fragment的底部加两个按钮\r\n\r\n所以我的话会在recyclerview.xml里面加两个按钮\r\n\r\n\r\n```\r\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\r\n&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:fitsSystemWindows=\"true\"\r\n                android:orientation=\"vertical\"&gt;\r\n\r\n    &lt;android.support.v7.widget.RecyclerView\r\n        android:id=\"@+id/collect_recyclerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_above=\"@id/btn_one\"/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id/btn_one\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:text=\"第一个按钮\"/&gt;\r\n\r\n    &lt;Button\r\n        android:id=\"@+id/btn_two\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_toRightOf=\"@id/btn_one\"\r\n        android:text=\"第二个按钮\"/&gt;\r\n\r\n&lt;/RelativeLayout&gt;\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201903/14/1552552914_49259.jpg)", "Konwledge_Point": "线性规划和规约", "Question": ["recycview中添加底部按钮问题。", ["我就想在这个recycview中底部添加两个按钮", "\n项目地址链接: ", "https://pan.baidu.com/s/13EzJZ8CrRL6xRiFjUxJXqw", " 提取码: qjet ", "\n\n", "public class CollectFragment extends Fragment {\n\n    public RecyclerView mCollectRecyclerView;//定义RecyclerView\n    //定义以goodsentity实体类为对象的数据集合\n    private ArrayList<GoodsEntity> goodsEntityList = new ArrayList<GoodsEntity>();\n    //自定义recyclerveiw的适配器\n    private CollectRecycleAdapter mCollectRecyclerAdapter;\n\n\n\n    private static ChangeFragment mChange;\n    public static CollectFragment newInstance(ChangeFragment changeFragment) {\n        mChange = changeFragment;\n        Bundle args = new Bundle();\n\n        CollectFragment fragment = new CollectFragment();\n        fragment.setArguments(args);\n        return fragment;\n    }\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        //获取fragment的layout\n       View  view = inflater.inflate(R.layout.recyclerview, container, false);\n        //对recycleview进行配置\n\n\n        return view;\n    }\n\n    @Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        initRecyclerView(view);\n        //模拟数据\n        initData();\n    }\n\n    /**\n     * TODO 模拟数据\n     */\n    private void initData() {\n        for (int i=0;i<10;i++){\n            GoodsEntity goodsEntity=new GoodsEntity();\n            goodsEntity.setGoodsName(\"模拟数据\"+i);\n            goodsEntity.setGoodsPrice(\"100\"+i);\n            goodsEntityList.add(goodsEntity);\n        }\n    }\n\n    /**\n     * TODO 对recycleview进行配置\n     */\n\n    private void initRecyclerView(View view) {\n        //获取RecyclerView\n        mCollectRecyclerView=view.findViewById(R.id.collect_recyclerView);\n        //创建adapter\n        mCollectRecyclerAdapter = new CollectRecycleAdapter(getActivity(), goodsEntityList);\n        //给RecyclerView设置adapter\n        mCollectRecyclerView.setAdapter(mCollectRecyclerAdapter);\n        //设置layoutManager,可以设置显示效果，是线性布局、grid布局，还是瀑布流布局\n        //参数是：上下文、列表方向（横向还是纵向）、是否倒叙\n        mCollectRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));\n        //设置item的分割线\n        mCollectRecyclerView.addItemDecoration(new DividerItemDecoration(getActivity(),DividerItemDecoration.VERTICAL));\n        //RecyclerView中没有item的监听事件，需要自己在适配器中写一个监听事件的接口。参数根据自定义\n        mCollectRecyclerAdapter.setOnItemClickListener(new CollectRecycleAdapter.OnItemClickListener() {\n            @Override\n            public void OnItemClick(View view, GoodsEntity data) {\n                //此处进行监听事件的业务处理\n                Toast.makeText(getActivity(),\"我是item\",Toast.LENGTH_SHORT).show();\n                mChange.changeAttractionsContent();\n            }\n        });\n    }\n\n}\n\n\n", "\n\n", "public class CollectRecycleAdapter extends RecyclerView.Adapter<CollectRecycleAdapter.myViewHodler> {\n    private Context context;\n    private ArrayList<GoodsEntity> goodsEntityList;\n\n    //创建构造函数\n    public CollectRecycleAdapter(Context context, ArrayList<GoodsEntity> goodsEntityList) {\n        //将传递过来的数据，赋值给本地变量\n        this.context = context;//上下文\n        this.goodsEntityList = goodsEntityList;//实体类数据ArrayList\n    }\n\n    /**\n     * 创建viewhodler，相当于listview中getview中的创建view和viewhodler\n     *\n     * @param parent\n     * @param viewType\n     * @return\n     */\n    @Override\n    public myViewHodler onCreateViewHolder(ViewGroup parent, int viewType) {\n        //创建自定义布局\n\n        View itemView = View.inflate(context, R.layout.item_content, null);\n\n        return new myViewHodler(itemView);\n    }\n\n    /**\n     * 绑定数据，数据与view绑定\n     *\n     * @param holder\n     * @param position\n     */\n    @Override\n    public void onBindViewHolder(myViewHodler holder, int position) {\n        //根据点击位置绑定数据\n        GoodsEntity data = goodsEntityList.get(position);\n//        holder.mItemGoodsImg;\n        holder.mItemGoodsName.setText(data.goodsName);//获取实体类中的name字段并设置\n        holder.mItemGoodsPrice.setText(data.goodsPrice);//获取实体类中的price字段并设置\n\n    }\n\n    /**\n     * 得到总条数\n     *\n     * @return\n     */\n    @Override\n    public int getItemCount() {\n        return goodsEntityList.size();\n    }\n\n    //自定义viewhodler\n    class myViewHodler extends RecyclerView.ViewHolder {\n        private ImageView mItemGoodsImg;\n        private TextView mItemGoodsName;\n        private TextView mItemGoodsPrice;\n\n        public myViewHodler(View itemView) {\n            super(itemView);\n            mItemGoodsImg = itemView.findViewById(R.id.tx_news_simple_photos_01);\n            mItemGoodsName =  itemView.findViewById(R.id.tx_news_simple_photos_title);\n            mItemGoodsPrice =  itemView.findViewById(R.id.tx_news_simple_photos_time);\n\n            //点击事件放在adapter中使用，也可以写个接口在activity中调用\n            //方法一：在adapter中设置点击事件\n            itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    //可以选择直接在本位置直接写业务处理\n                    //Toast.makeText(context,\"点击了xxx\",Toast.LENGTH_SHORT).show();\n                    //此处回传点击监听事件\n                    if(onItemClickListener!=null){\n                        onItemClickListener.OnItemClick(v, goodsEntityList.get(getLayoutPosition()));\n                    }\n                }\n            });\n\n        }\n    }\n\n    /**\n     * 设置item的监听事件的接口\n     */\n    public interface OnItemClickListener {\n        /**\n         * 接口中的点击每一项的实现方法，参数自己定义\n         *\n         * @param view 点击的item的视图\n         * @param data 点击的item的数据\n         */\n        public void OnItemClick(View view, GoodsEntity data);\n    }\n\n    //需要外部访问，所以需要设置set方法，方便调用\n    private OnItemClickListener onItemClickListener;\n\n    public void setOnItemClickListener(OnItemClickListener onItemClickListener) {\n        this.onItemClickListener = onItemClickListener;\n    }\n}\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用python-docx模块读取word文档&amp;#xff0c;&lt;/p&gt;\n\n&lt;p&gt;再用正则表达式提取需要的内容保存为列表再存入CSV&lt;/p&gt;\n\n&lt;p&gt;代码如下&amp;#xff1a;{如果对你有帮助&amp;#xff0c;可以给我个采纳吗&amp;#xff0c;谢谢!! 点击我这个回答右上方的【采纳】按钮}。&lt;br /&gt;\n &lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;import re\nimport csv\n# 我先用字符串代替了&amp;#xff0c;你可以改为用python-docx模块读取word文档&amp;#xff0c;\nwordtext &amp;#61; &amp;#39;&amp;#39;&amp;#39;\nIL6,IL10无断点\n\nVersion:1.0 StartHTML:0000000107 EndHTML:0000004359 StartFragment:0000000127 EndFragment:0000004341\n] &amp;#34;此时变量y 为&amp;#xff1a;&amp;#34;\n[1] &amp;#34;IL1b&amp;#34;\n[1] &amp;#34;IL1b&amp;#34;               &amp;#34;-0.107648809523819&amp;#34; &amp;#34;0.339014229656206&amp;#34;  &amp;#34;22.7457597598328&amp;#34;   &amp;#34;0.103020721767575&amp;#34;\n[6] &amp;#34;0.361098065608572&amp;#34;\n[1] &amp;#34;breakpoint:&amp;#34;\n[1] 22.74576\n[1] &amp;#34;-----------------------(end)-----------------------&amp;#34;\n[1] &amp;#34;-----------------------(start)-----------------?------&amp;#34;\n[1] &amp;#34;此时变量y 为&amp;#xff1a;&amp;#34;\n[1] &amp;#34;IL5&amp;#34;\n[1] &amp;#34;IL5&amp;#34;                 &amp;#34;0.0393546517271973&amp;#34;  &amp;#34;0.507875620155004&amp;#34;   &amp;#34;44.9984318923382&amp;#34;    &amp;#34;-0.0739995182265517&amp;#34;\n[6] &amp;#34;0.25727508099701&amp;#34;\n[1] &amp;#34;breakpoint:&amp;#34;\n[1] 44.99843\n[1] &amp;#34;-----------------------(end)-----------------------&amp;#34;\n[1] &amp;#34;-----------------------(start)-----------------?------&amp;#34;\n[1] &amp;#34;此时变量y 为&amp;#xff1a;&amp;#34;\n[1] &amp;#34;IL13&amp;#34;\n[1] &amp;#34;IL13&amp;#34;               &amp;#34;0.376060723360758&amp;#34;  &amp;#34;0.0653383537180709&amp;#34; &amp;#34;49.9999861005274&amp;#34;   &amp;#34;-0.542856877790935&amp;#34;\n[6] &amp;#34;0.0169611166504877&amp;#34;\n[1] &amp;#34;breakpoint:&amp;#34;\n[1] 49.99999\n[1] &amp;#34;-----------------------(end)-----------------------&amp;#34;\n[1] &amp;#34;-----------------------(start)-----------------?------&amp;#34;\n\n&amp;#39;&amp;#39;&amp;#39;\n\nli &amp;#61; re.findall(r&amp;#39;\\[1\\]\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*&amp;#34;(.&amp;#43;?)&amp;#34;\\s*\\[6\\]\\s*&amp;#34;(.&amp;#43;?)&amp;#34;&amp;#39;,wordtext, re.M)\nprint(*li,sep&amp;#61;&amp;#34;\\n&amp;#34;)\n\nwith open(&amp;#34;data.csv&amp;#34;,&amp;#34;w&amp;#34;,newline&amp;#61;&amp;#34;&amp;#34;) as fileObj:\n    csv.writer(fileObj).writerows(li)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"134\" src=\"https://img-ask.csdnimg.cn/upload/1622471384218.png\" width=\"1012\" /&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["请教如何使用python从word中提取数字，存入CSV", ["分组：2 打印结果依次为 i,b1,P1,breakpoint,b2,P2", "\n和生物燃料的线性关系", "\n", "\nIL6,IL10无断点", "\n", "\nVersion:1.0 StartHTML:0000000107 EndHTML:0000004359 StartFragment:0000000127 EndFragment:0000004341", "\n] \"此时变量y 为：\"", "\n[1] \"IL1b\"", "\n[1] \"IL1b\"               \"-0.107648809523819\" \"0.339014229656206\"  \"22.7457597598328\"   \"0.103020721767575\"", "\n[6] \"0.361098065608572\"", "\n[1] \"breakpoint:\"", "\n[1] 22.74576", "\n[1] \"-----------------------(end)-----------------------\"", "\n[1] \"-----------------------(start)-----------------?------\"", "\n[1] \"此时变量y 为：\"", "\n[1] \"IL5\"", "\n[1] \"IL5\"                 \"0.0393546517271973\"  \"0.507875620155004\"   \"44.9984318923382\"    \"-0.0739995182265517\"", "\n[6] \"0.25727508099701\"   ", "\n[1] \"breakpoint:\"", "\n[1] 44.99843", "\n[1] \"-----------------------(end)-----------------------\"", "\n[1] \"-----------------------(start)-----------------?------\"", "\n[1] \"此时变量y 为：\"", "\n[1] \"IL13\"", "\n[1] \"IL13\"               \"0.376060723360758\"  \"0.0653383537180709\" \"49.9999861005274\"   \"-0.542856877790935\"", "\n[6] \"0.0169611166504877\"", "\n[1] \"breakpoint:\"", "\n[1] 49.99999", "\n[1] \"-----------------------(end)-----------------------\"", "\n[1] \"-----------------------(start)-----------------?------\"", "\n", "\n这个word文件，我想把  \"IL1b\"               \"-0.107648809523819\" \"0.339014229656206\"  \"22.7457597598328\"   \"0.103020721767575\"  这行中的字符串内容提取出来，还有下面那行[6]后面的 \"0.361098065608572\"提取出来，", "\n把这6项存入csv表格的一行中。", "\n然后再依次把\"IL5\" 、\"IL13\"后面的字符串也提出来，存入CSV中，请问，应该如何操作。"]], "Tag": "算法设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;建议你看下这篇博客&amp;#x1f449; &amp;#xff1a;&lt;a href=\"https://blog.csdn.net/wangchangyong123/article/details/88784677\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;用单链表实现学生信息管理系统&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 以帮助更多的人 ^-^", "Konwledge_Point": "线性规划和规约", "Question": ["用线性表实现学生信息表", ["这是题目内容：", "\n\n", "用线性数组做一个班级学生档案记录的程序，要求：", "\n\n", "    1）用结构体表示学生记录，包括但不限于：学号、姓名、性别、班级、生日、宿舍、籍贯等信息；", "\n\n", "    2）学生记录用数组存储，按照学号递增顺序记录；", "\n\n", "    3）学生记录插入：插入包括自己在内的10名学生；", "\n\n", "    4）学生记录删除：删除指定位置学生；", "\n\n", "    5）查找学生：根据姓名查找学生在记录中的位序；", "\n\n", " ", "\n\n", "\n", "#include<stdio.h>  \n#include<malloc.h>  \n#include<stdlib.h>  \n#include<string.h>  \n#define OK 1  \n#define ERROR 0  \n#define OVERFLOW -2  \n#define MAXSIZE 1000 \n\ntypedef int Status; // 定义函数返回值类型  \n\ntypedef struct\n{\n    int num;\t\t//学号\n    char name[20];\t//姓名\n    char sex;\t\t//性别\n    int age;\t\t//年龄\n    char place[10];\t//籍贯\n    float weight;\t//体重\n    float height;\t//身高\n    int birthday;\t//生日\n    int dormitory;\t//宿舍\n}student;\n\ntypedef student ElemType;\n\ntypedef struct\n{\n    ElemType* elem; // 存储空间的基地址   \n    int length; // 当前长度   \n}SqList;\n\nStatus InitList(SqList* L) // 构造空的顺序表 L   \n{\n    L->elem = (ElemType*)malloc(sizeof(ElemType) * MAXSIZE);\n    if (!L->elem)  exit(OVERFLOW);  \t\t//分配失败退出 \n    L->length = 0;  \t\t//长度为0 \n    return OK;\n}\n\nElemType GetElem(SqList& L, int i) // 访问顺序表，找到 i位置，返回给 e  \n{\n    return L.elem[i];\n}\n\nint Search(SqList& L, char str[]) // 根据名字查找，返回该同学在顺序表中的编号   \n{\n    for (int i = 1;i <= L.length;i++)  \t//查找成功，返回序号 i+1\n    {\n        if (strcmp(L.elem[i].name, str) == 0)\n            return i;\n    }\n    return 0;\n}\n\nStatus ListInsert(SqList& L, int i, ElemType e) // 在 i位置插入某个学生的信息   \n{\n    if ((i < 1) || (i > L.length + 1)) return ERROR;\n    if (L.length == MAXSIZE)   return ERROR;\n    for (int j = L.length;j >= i;j--)\n    {\n        L.elem[j + 1] = L.elem[j];  \t//插入位置及之后的元素后移\n    }\n    L.elem[i] = e;  \t\t//将新元素e放入第i个位置\n    ++L.length;\n    return OK;\n}\n\nStatus ListDelete(SqList& L, int i) // 在顺序表中删除 i位置的学生信息   \n{\n    if ((i < 1) || (i > L.length))   return ERROR;\n    for (int j = i;j <= L.length;j++)\n    {\n        L.elem[j] = L.elem[j + 1];  \t//被删除元素之后的元素前移\n    }\n    --L.length;  \t//长度减一 \n    return OK;\n}\n\nvoid Input(ElemType* e)  \t\t//输入 \n{\n    printf(\" 学号:\");\n    scanf_s(\"%d\", &e->num);\n    printf(\" 姓名:\");\n    scanf_s(\"%s\", e->name, 4);\n    printf(\" 性别:\");\n    scanf_s(\"%s\", &e->sex, 3);\n    printf(\" 年龄:\");\n    scanf_s(\"%d\", &e->age);\n    printf(\" 籍贯:\");\n    scanf_s(\"%s\", e->place, 20);\n    printf(\" 体重:\");\n    scanf_s(\"%f\", &e->weight);\n    printf(\" 身高:\");\n    scanf_s(\"%f\", &e->height);\n    printf(\" 生日:\");\n    scanf_s(\"%d\", &e->birthday);\n    printf(\" 宿舍:\");\n    scanf_s(\"%d\", &e->dormitory);\n    printf(\"输入完成\\n\\n\");\n}\n\nvoid Output(ElemType& e)  \t\t//输出 \n{\n    printf_s(\"学号：%d 姓名：%s 性别：%s 年龄：%d 籍贯：%s 体重：%f 身高：%f 生日：%d 宿舍：%d\", e.num, &e.name, e.sex, e.age, &e.place, e.weight, e.height, e.birthday, e.dormitory);\n\n}\n\nint main()\n{\n    SqList L ;\n    ElemType a, b, c, d;\n    printf(\"1. 构造顺序表\\n\");\n    printf(\"2. 录入指定人数的学生信息\\n\");\n    printf(\"3. 显示学生表中的所有信息\\n\");\n    printf(\"4. 根据姓名查找该学生，并返回学号和成绩\\n\");\n    printf(\"5. 根据某指定位置显示该学生信息\\n\");\n    printf(\"6. 在指定位置插入学生信息\\n\");\n    printf(\"7. 在指定位置删除学生信息\\n\");\n    printf(\"8. 统计学生个数\\n\");\n    printf(\"0. 退出\\n\");\n    int x = 0, choose;\n    while (1)\n    {\n        printf(\"请输入你要选择的功能前的序号:\");\n        scanf_s(\"%d\", &choose);\n        if (choose == 0)   break;\n        switch (choose)\n        {\n        case 1:\n            if (InitList(&L))\n                printf(\"成功建立顺序表\\n\");\n            else\n                printf(\"顺序表建立失败\\n\");\n            break;\n        case 2:\n            printf(\"请输入要录入学生的人数:\");\n            scanf_s(\"%d\", &x);\n            for (int i = 1;i <= x;i++)\n            {\n                printf(\"第%d个学生:\\n\", i);\n                Input(&L.elem[i]);\n            }\n            L.length = x;\n            break;\n        case 3:\n            for (int i = 1;i <= x;i++)\n            {\n                a = GetElem(L, i);\n                Output(a);\n            }\n            break;\n        case 4:\n            char s[20];\n            printf(\"请输入要查找的学生姓名:\");\n            scanf_s(\"%s\", s, 4);\n            if (Search(L, s))\n                Output(L.elem[Search(L, s)]);\n            else\n                printf(\"对不起，查无此人\\n\");\n            printf_s(\"\");\n            break;\n        case 5:\n            printf_s(\"请输入要查询的位置:\");\n            int id1;\n            scanf_s(\"%d\", &id1);\n            b = GetElem(L, id1);\n            Output(b);\n            break;\n        case 6:\n            printf(\"请输入要插入的位置:\");\n            int id2;\n            scanf_s(\"%d\", &id2);\n            printf(\"请输入学生信息:\\n\");\n            Input(&c);\n            if (ListInsert(L, id2, c))\n            {\n                x++;\n                printf(\"插入成功\\n\");\n            }\n            else\n            {\n                printf(\"插入失败\\n\");\n            }\n            break;\n        case 7:\n            printf(\"请输入要删除的位置:\");\n            int id3;\n            scanf_s(\"%d\", &id3);\n            if (ListDelete(L, id3))\n            {\n                x--;\n                printf(\"删除成功\\n\");\n            }\n            else\n            {\n                printf(\"删除失败\\n\");\n            }\n            break;\n        case 8:\n            printf(\"已录入的学生个数为:%d\\n\\n\", L.length);\n            break;\n        }\n    }\n    printf(\"\\n\\n请按任意键退出\\n\\n\");\n    return 0;\n}", "\n\n", "    可以正常编译，选择1和选择2可以使用，但是其他选择在运行的时候会出问题，不知道怎么修改。", "\n\n", "    运行选择三的时候会出现（引发了异常: 读取访问权限冲突），不知道为什么"]], "Tag": "算法设计"}
{"Answer": "class equation\r\n{\r\npublic:\r\n    int n;\r\n    double ** A = new double *[n];          //系数阵\r\n    double *b = new double[n];              //常数项\r\n    double *x = new double[n];\r\n    void solve();\r\n    void DisplayEquation();\r\n    void DisplayResult();\r\n    void input();\r\n    void output();\r\n    equation()\r\n    {\r\n        n = 0;\r\n    }\r\n    equation(int a)\r\n    {\r\n        n = a;\r\n    }\r\n};\r\n\r\n两点问题：\r\n1）构造函数equation(){n=0;}会生成一个长度为0的数组，编译不会抛错，也会返回一个正常的数组指针，但是如果修改了指针会\r\n     导致内存被破坏，恰巧这块内存正在使用，就会抛出异常，也就会崩！\r\n2）建议申请的内存最好在析构函数内释放掉。。。", "Konwledge_Point": "线性规划和规约", "Question": ["c++程序调试了好久总是出错，好像是指针的问题", ["    初学，想实现n阶线性方程组求解。从txt文件中读入A矩阵和b，求解后将结果输出到另一个txt文件。\n    调试过程很奇怪，有时不会有问题，有时会报错。我单步执行时会在main函数return时出现断点，百度了一下，好像跟内存溢出什么的有关，没能看得很明白。请问是哪里出了问题。\n", "\n\n", " #include <iostream>\n#include <fstream>\n#include <string>\n#include <stdlib.h>\nusing namespace std;\n\nclass equation\n{\npublic:\n    int n;\n    double ** A = new double *[n];          //系数阵\n    double *b = new double[n];              //常数项\n    double *x = new double[n];\n    void solve();\n    void DisplayEquation();\n    void DisplayResult();\n    void input();\n    void output();\n    equation()\n    {\n        n = 0;\n    }\n    equation(int a)\n    {\n        n = a;\n    }\n};\n\nint CountLines()                                                    //统计系数阵阶数\n{\n    int n = 0;\n    string temp;\n    fstream f;\n    f.open(\"equation.txt\", ios::in);\n    if (f.fail())\n    {\n        cout << \"打开文件失败\\n\";\n    }\n    else\n    {\n        while (getline(f, temp))\n        {\n            if (temp[0] == '#')\n                break;\n            n++;\n        }\n    }\n    f.close();\n    return n;\n}\n\nvoid equation::input()\n{\n    int t, i = 0, j = 0;\n    string temp;\n    fstream f;\n    f.open(\"equation.txt\", ios::in);\n    while (getline(f, temp, '   '))                     //从文件读入系数矩阵到A中\n    {\n        t = temp.find('\\n');\n        if (t > -1)\n            temp.erase(t, sizeof('\\n'));\n        if (temp[0] == '#')\n            break;\n        else\n        {\n            if (j == n - 1)\n            {\n                A[i][j] = atof(temp.c_str());\n                j = 0;\n                i++;\n            }\n            else\n            {\n                A[i][j] = atof(temp.c_str());\n                j++;\n            }\n        }\n    }\n    i = 0;\n    while (getline(f, temp, '   ') && !f.eof())         //从文件读入常数项到b中\n    {\n        t = temp.find('\\n');\n        if (t > -1)\n            temp.erase(t, sizeof('\\n'));\n        b[i] = atof(temp.c_str());\n        i++;\n    }\n//  f.close();  //这里加这东西居然会报错\n}\n\nvoid equation::DisplayEquation()                            //显示系数矩阵与常数向量\n{\n    cout << \"系数矩阵为:\\n\";\n    for (int i = 0; i < n; i++)\n        for (int j = 0; j < n; j++)\n        {\n            if (j == n - 1)\n                cout << A[i][j] << \"\\t\\n\";\n            else\n                cout << A[i][j] << \"\\t\";\n        }\n    cout << \"\\n常数项为:\\n\";\n\n    for (int i = 0; i < n; i++)\n        cout << b[i] << \"\\n\";\n}\n\nvoid equation::solve()                                              //求解方程，将解存入x中\n{\n    double c;\n    //================================forward elimination==================================\n    for (int k = 0; k < n; k++)\n    {\n        for (int i = k + 1; i < n; i++)\n        {\n            c = A[i][k] / A[k][k];\n            for (int j = k; j < n; j++)\n                A[i][j] = A[i][j] - A[k][j] * c;\n            b[i] = b[i] - b[k] * c;\n        }\n    }\n    //==========================back substitution==========================================\n    double sum;\n    x[n - 1] = b[n - 1] / A[n - 1][n - 1];\n    for (int i = n - 2; i >= 0; i--)\n    {\n        sum = 0;\n        for (int j = n - 1; j >= i + 1; j--)\n            sum = sum + A[i][j] * x[j];\n        x[i] = (b[i] - sum) / A[i][i];\n    }\n}\n\nvoid equation::DisplayResult()\n{\n    cout << \"方程的解为：\\n\";\n    for (int i = 0; i < n; i++)\n        cout << x[i] << \"   \";\n    cout << endl;\n}\n\nvoid equation::output()\n{\n    fstream r;\n    r.open(\"result.txt\", ios::out);\n    if (r.fail())\n    {\n        cout << \"打开文件失败\\n\";\n        exit(1);\n    }\n    for (int i = 0; i < n; i++)\n    {\n        r << \"X\" << i << \"=\" << x[i] << \"\\n\";\n    }\n    r.close();\n}\n\nint main()\n{\n    int N, j = 0;\n    string temp, a;\n    N = CountLines();\n    equation e1(N);\n    for (int i = 0; i < N; i++)\n        e1.A[i] = new double[N];\n    e1.input();\n    //  e1.DisplayEquation();\n    e1.solve();\n//  e1.DisplayEquation();                               //上三角矩阵\n//  e1.DisplayResult();\n    e1.output();\n    return 0;\n}\n\n", "\n\n", "刚注册的账号，没有C币。。。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;字符串输出格式不正确&amp;#xff0c;字符串变量本身就是指针&amp;#xff0c;不应该再取地址&amp;#xff0c;单个字符的输出格式是“%c”&lt;/p&gt;\n\n&lt;p&gt;printf_s(&amp;#34;学号&amp;#xff1a;%d 姓名&amp;#xff1a;%s 性别&amp;#xff1a;%c 年龄&amp;#xff1a;%d 籍贯&amp;#xff1a;%s 体重&amp;#xff1a;%f 身高&amp;#xff1a;%f 生日&amp;#xff1a;%d 宿舍&amp;#xff1a;%d&amp;#34;, e.num, e.name, e.sex, e.age, e.place, e.weight, e.height, e.birthday, e.dormitory);&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性表实现学生信息表，运行时出现问题不知道怎么解决", ["这是题目内容：", "\n\n", "用线性数组做一个班级学生档案记录的程序，要求：", "\n\n", "    1）用结构体表示学生记录，包括但不限于：学号、姓名、性别、班级、生日、宿舍、籍贯等信息；", "\n\n", "    2）学生记录用数组存储，按照学号递增顺序记录；", "\n\n", "    3）学生记录插入：插入包括自己在内的10名学生；", "\n\n", "    4）学生记录删除：删除指定位置学生；", "\n\n", "    5）查找学生：根据姓名查找学生在记录中的位序；", "\n\n", "\n", "\n#include<stdio.h>  \n#include<malloc.h>  \n#include<stdlib.h>  \n#include<string.h>  \n#define OK 1  \n#define ERROR 0  \n#define OVERFLOW -2  \n#define MAXSIZE 1000 \ntypedef int Status; // 定义函数返回值类型  \ntypedef struct\n{\n    int num;\t\t//学号\n    char name[20];\t//姓名\n    char sex;\t\t//性别\n    int age;\t\t//年龄\n    char place[10];\t//籍贯\n    float weight;\t//体重\n    float height;\t//身高\n    int birthday;\t//生日\n    int dormitory;\t//宿舍\n}student;\ntypedef student ElemType;\ntypedef struct\n{\n    ElemType* elem; // 存储空间的基地址   \n    int length; // 当前长度   \n}SqList;\nStatus InitList(SqList* L) // 构造空的顺序表 L   \n{\n    L->elem = (ElemType*)malloc(sizeof(ElemType) * MAXSIZE);\n    if (!L->elem)  exit(OVERFLOW);  \t\t//分配失败退出 \n    L->length = 0;  \t\t//长度为0 \n    return OK;\n}\nElemType GetElem(SqList& L, int i) // 访问顺序表，找到 i位置，返回给 e  \n{\n    return L.elem[i];\n}\nint Search(SqList& L, char str[]) // 根据名字查找，返回该同学在顺序表中的编号   \n{\n    for (int i = 1;i <= L.length;i++)  \t//查找成功，返回序号 i+1\n    {\n        if (strcmp(L.elem[i].name, str) == 0)\n            return i;\n    }\n    return 0;\n}\nStatus ListInsert(SqList& L, int i, ElemType e) // 在 i位置插入某个学生的信息   \n{\n    if ((i < 1) || (i > L.length + 1)) return ERROR;\n    if (L.length == MAXSIZE)   return ERROR;\n    for (int j = L.length;j >= i;j--)\n    {\n        L.elem[j + 1] = L.elem[j];  \t//插入位置及之后的元素后移\n    }\n    L.elem[i] = e;  \t\t//将新元素e放入第i个位置\n    ++L.length;\n    return OK;\n}\nStatus ListDelete(SqList& L, int i) // 在顺序表中删除 i位置的学生信息   \n{\n    if ((i < 1) || (i > L.length))   return ERROR;\n    for (int j = i;j <= L.length;j++)\n    {\n        L.elem[j] = L.elem[j + 1];  \t//被删除元素之后的元素前移\n    }\n    --L.length;  \t//长度减一 \n    return OK;\n}\nvoid Input(ElemType* e)  \t\t//输入 \n{\n    printf(\" 学号:\");\n    scanf_s(\"%d\", &e->num);\n    printf(\" 姓名:\");\n    scanf_s(\"%s\", e->name, 4);\n    printf(\" 性别:\");\n    scanf_s(\"%s\", &e->sex, 3);\n    printf(\" 年龄:\");\n    scanf_s(\"%d\", &e->age);\n    printf(\" 籍贯:\");\n    scanf_s(\"%s\", e->place, 20);\n    printf(\" 体重:\");\n    scanf_s(\"%f\", &e->weight);\n    printf(\" 身高:\");\n    scanf_s(\"%f\", &e->height);\n    printf(\" 生日:\");\n    scanf_s(\"%d\", &e->birthday);\n    printf(\" 宿舍:\");\n    scanf_s(\"%d\", &e->dormitory);\n    printf(\"输入完成\\n\\n\");\n}\nvoid Output(ElemType& e)  \t\t//输出 \n{\n    printf_s(\"学号：%d 姓名：%s 性别：%s 年龄：%d 籍贯：%s 体重：%f 身高：%f 生日：%d 宿舍：%d\", e.num, &e.name, e.sex, e.age, &e.place, e.weight, e.height, e.birthday, e.dormitory);\n}\nint main()\n{\n    SqList L ;\n    ElemType a, b, c, d;\n    printf(\"1. 构造顺序表\\n\");\n    printf(\"2. 录入指定人数的学生信息\\n\");\n    printf(\"3. 显示学生表中的所有信息\\n\");\n    printf(\"4. 根据姓名查找该学生，并返回学号和成绩\\n\");\n    printf(\"5. 根据某指定位置显示该学生信息\\n\");\n    printf(\"6. 在指定位置插入学生信息\\n\");\n    printf(\"7. 在指定位置删除学生信息\\n\");\n    printf(\"8. 统计学生个数\\n\");\n    printf(\"0. 退出\\n\");\n    int x = 0, choose;\n    while (1)\n    {\n        printf(\"请输入你要选择的功能前的序号:\");\n        scanf_s(\"%d\", &choose);\n        if (choose == 0)   break;\n        switch (choose)\n        {\n        case 1:\n            if (InitList(&L))\n                printf(\"成功建立顺序表\\n\");\n            else\n                printf(\"顺序表建立失败\\n\");\n            break;\n        case 2:\n            printf(\"请输入要录入学生的人数:\");\n            scanf_s(\"%d\", &x);\n            for (int i = 1;i <= x;i++)\n            {\n                printf(\"第%d个学生:\\n\", i);\n                Input(&L.elem[i]);\n            }\n            L.length = x;\n            break;\n        case 3:\n            for (int i = 1;i <= x;i++)\n            {\n                a = GetElem(L, i);\n                Output(a);\n            }\n            break;\n        case 4:\n            char s[20];\n            printf(\"请输入要查找的学生姓名:\");\n            scanf_s(\"%s\", s, 4);\n            if (Search(L, s))\n                Output(L.elem[Search(L, s)]);\n            else\n                printf(\"对不起，查无此人\\n\");\n            printf_s(\"\");\n            break;\n        case 5:\n            printf_s(\"请输入要查询的位置:\");\n            int id1;\n            scanf_s(\"%d\", &id1);\n            b = GetElem(L, id1);\n            Output(b);\n            break;\n        case 6:\n            printf(\"请输入要插入的位置:\");\n            int id2;\n            scanf_s(\"%d\", &id2);\n            printf(\"请输入学生信息:\\n\");\n            Input(&c);\n            if (ListInsert(L, id2, c))\n            {\n                x++;\n                printf(\"插入成功\\n\");\n            }\n            else\n            {\n                printf(\"插入失败\\n\");\n            }\n            break;\n        case 7:\n            printf(\"请输入要删除的位置:\");\n            int id3;\n            scanf_s(\"%d\", &id3);\n            if (ListDelete(L, id3))\n            {\n                x--;\n                printf(\"删除成功\\n\");\n            }\n            else\n            {\n                printf(\"删除失败\\n\");\n            }\n            break;\n        case 8:\n            printf(\"已录入的学生个数为:%d\\n\\n\", L.length);\n            break;\n        }\n    }\n    printf(\"\\n\\n请按任意键退出\\n\\n\");\n    return 0;\n}\n", "\n\n", "可以正常编译，选择1和选择2可以使用，但是其他选择在运行的时候会出问题，不知道怎么修改。", "\n\n", "    运行选择三的时候会出现（引发了异常: 读取访问权限冲突），不知道为什么", "\n\n", "其他选择还没用，不知道怎么改"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先题主的epoch&amp;#xff0c;matlab比pytorch多了600轮&amp;#xff0c;一个1k&amp;#xff0c;一个400&amp;#xff0c;另外就是lr&amp;#xff0c;对不上。然后可能还有其它值&amp;#xff0c;没有细看了。那一个步长小&amp;#xff0c;学习慢&amp;#xff0c;轮数少&amp;#xff0c;和一个相反的&amp;#xff0c;没有可比性&amp;#xff0c;可能一个欠拟合&amp;#xff0c;一个过拟合&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["matlab与pytorch拟合效果对比", ["为什么对于一个很简单的非线性拟合问题，就一个隐藏层+激活函数，pytorch与matlab对比效果差很多？", "\n", "import torch\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport scipy.io as scio\n", "from", " torch.utils.data import random_split\n", "from", " torch.optim import lr_scheduler\n\n", "from", " torch.optim import lr_scheduler\n\n", "from", " sklearn.metrics import r2_score\n\nimport os\nos.environ[", "'KMP_DUPLICATE_LIB_OK'", "]=", "'True'", "\n\n\ndef mse_cal(data_loader, net):\n    ", "\"\"", "\"mse计算函数\n    \n    :param data_loader：加载好的数据\n    :param net: 模型\n    :return：根据输入的数据，输出其MSE计算结果\n    \"", "\"\"", "\n    data = data_loader.dataset                # 还原Dataset类\n    X = data[:][0]                            # 还原数据的特征\n    y = data[:][1]                            # 还原数据的标签\n    yhat = net(X)\n    return F.mse_loss(yhat, y)\n\n\n\n\n\n\nclass GenData(Dataset):\n    def __init__(self, features, labels):           \n        self.features = features                    \n        self.labels = labels                       \n        self.lens = len(features)                  \n\n    def __getitem__(self, index):\n        return self.features[index,:],self.labels[index]    \n\n    def __len__(self):\n        return self.lens\n    \n\n    \n    \n    \ndef split_loader(features, labels, ", "batch_size", "=10, ", "rate", "=0.7):\n    data = GenData(features, labels) \n    num_train = int(data.lens * rate)\n    num_test = data.lens - num_train\n    data_train, data_test = random_split(data, [num_train, num_test])\n    train_loader = DataLoader(data_train, ", "batch_size", "=batch_size, ", "shuffle", "=", "True", ")\n    test_loader = DataLoader(data_test, ", "batch_size", "=batch_size, ", "shuffle", "=", "False", ")\n    return(train_loader, test_loader)\n\n\nclass Model(nn.Module):\n    def __init__(self,", "in_features", "=2,hidden1=6,out_features=1,BN_Model=None,act_fun=torch.relu):\n        super(Model,self).__init__()\n        self.", "linear1", "=nn.Linear(in_features,hidden1)\n        self.", "normalize1", "=nn.BatchNorm1d(hidden1)\n        self.", "linear2", "=nn.Linear(hidden1,out_features)\n        self.", "BN_Model", "=BN_Model\n        self.", "act_fun", "=act_fun\n    def forward(self,x):\n        ", "if", " self.", "BN_Model", "=='pre':\n            ", "x", "=self.act_fun(self.normalize1(self.linear1(x)))\n            ", "output", "=self.linear2(x)\n        ", "if", " self.", "BN_Model", "==None:\n            ", "x", "=self.act_fun(self.linear1(x))\n            ", "output", "=self.linear2(x)\n        \n        return output\n\n\ntorch.manual_seed(420)\n", "input_", "=torch.rand(size=(2000,2))\noutput_=(input_[:,0]*input_[:,1]).reshape(-1,1)\n\n\ntorch.manual_seed(420)\ntrain_loader,", "test_loader", "=split_loader(input_,output_,batch_size=50,rate=0.75)\n\n\ntorch.manual_seed(24)\n", "net1", "=Model(BN_Model='pre',hidden1=8,act_fun=torch.sigmoid)\n\n\ndef fit_rec_sc(net,\n              criterion,\n              optimizer,\n              train_data,\n              test_data,\n              scheduler,\n              ", "epochs", "=3,\n              ", "cla", "=", "False", ",\n              ", "eva", "=mse_cal):\n    train_l=[]\n    test_l=[]\n    \n    ", "for", " epoch ", "in", " range(epochs):\n        net.train()\n        ", "for", " X,y ", "in", " train_data:\n            ", "if", " ", "cla", "==True:\n                ", "y", "=y.flatten().long()\n            ", "yhat", "=net.forward(X)\n            ", "loss", "=criterion(yhat,y)\n            optimizer.zero_grad()\n            loss.backward()\n            optimizer.", "step", "()\n        scheduler.", "step", "()\n        net.eval()\n        train_l.append(eva(train_data,net).detach())\n        test_l.append(eva(test_data,net).detach())\n    return train_l,test_l\n\n\n", "lr_lambda", "=lambda epoch:0.95*", "*e", "poch\n\n", "optimizer", "=torch.optim.Adam(net1.parameters(),lr=0.001)\n\n", "scheduler", "=lr_scheduler.LambdaLR(optimizer,lr_lambda)\n\n\ntrain_l,", "test_l", "=fit_rec_sc(net=net1,\n                         ", "criterion", "=nn.MSELoss(),\n                         ", "optimizer", "=optimizer,\n                         ", "train_data", "=train_loader,\n                         ", "test_data", "=test_loader,\n                         ", "scheduler", "=scheduler,\n                         ", "epochs", "=400,\n                         ", "cla", "=", "False", ",\n                         ", "eva", "=mse_cal)\n\n\nplt.plot(train_l,", "label", "=", "'train_mse'", ")\nplt.plot(test_l,", "label", "=", "'test_mse'", ")\nplt.xlabel(", "'epochs'", ")\nplt.ylabel(", "'MSE'", ")\nplt.legend(", "loc", "=1)\nplt.show()\n\n\nmse_cal(test_loader,net1)\n\n\n", "yhat", "=net1.forward(test_loader.dataset[:][0])\n", "y", "=test_loader.dataset[:][1]\n\nplt.plot(yhat.detach(),", "'bo-'", ",", "label", "=", "'pred'", ")\nplt.plot(y,", "'ro-'", ",", "label", "=", "'real'", ")\n\n\nr2_score(y.detach().numpy(),yhat.detach().numpy())\n", "\n", "matlab代码", "\n", "\n\n", "%% 初始化", "\nclear\nclose all\nclc\n\n", "%% 读取数据", "\ninput=", "rand", "(", "2", ",", "2000", ");\noutput=input(", "1", ",:).*input(", "2", ",:);\n\n", "%% 训练集、测试集", "\ninput_train = input(:,", "1", ":", "1500", ");\noutput_train =output(", "1", ":", "1500", ");\ninput_test =input(:,", "1501", ":", "end", ");\noutput_test =output(", "1501", ":", "end", ");\n\n", "%% 数据归一化", "\n[inputn,inputps]=mapminmax(input_train,", "0", ",", "1", ");\n[outputn,outputps]=mapminmax(output_train);\ninputn_test=mapminmax(", "'apply'", ",input_test,inputps);\n\n", "%% 构建BP神经网络", "\nnet=newff(inputn,outputn,", "8", ");\n\n", "% 网络参数", "\nnet.trainParam.epochs=", "1000", ";         ", "% 训练次数", "\nnet.trainParam.lr=", "0.01", ";                   ", "% 学习速率", "\nnet.trainParam.goal=", "0.0000000001", ";        ", "% 训练目标最小误差", "\n", "% net.dividefcn='';", "\n", "%% BP神经网络训练", "\nnet=train(net,inputn,outputn);\n\n", "%% BP神经网络测试", "\nan=sim(net,inputn_test); ", "%用训练好的模型进行仿真 ", "\ntest_simu=mapminmax(", "'reverse'", ",an,outputps); ", "% 预测结果反归一化", "\n\nerror=test_simu-output_test;      ", "%预测值和真实值的误差", "\n\n\n", "%y1为预测值 y为实际值", "\nR2=", "1", " - (sum((output_test- test_simu).^", "2", ") / sum((output_test - ", "mean", "(output_test)).^", "2", "));\n\n\n", "%%真实值与预测值误差比较", "\n\n", "disp", "([", "'r2误差为: '", ",num2str(R2)])\n\n", "figure", "(", "1", ")\n", "plot", "(output_test,", "'bo-'", ")\n", "hold", " on\n", "plot", "(test_simu,", "'r*-'", ")\n", "hold", " on\n", "plot", "(error,", "'square'", ",", "'MarkerFaceColor'", ",", "'b'", ")\n", "legend", "(", "'期望值'", ",", "'预测值'", ",", "'误差'", ")\nxlabel(", "'数据组数'", "),ylabel(", "'值'", "),title(", "'测试集预测值和期望值的误差对比'", "),set(gca,", "'fontsize'", ",", "12", ")\n", "%计算误差", "\n[~,len]=", "size", "(output_test);\nMAE1=sum(", "abs", "(error./output_test))/len;\nMSE1=error*error'/len;\nRMSE1=MSE1^(", "1", "/", "2", ");\n", "disp", "([", "'-----------------------误差计算--------------------------'", "])\n", "disp", "([", "'平均绝对误差MAE为：'", ",num2str(MAE1)])\n", "disp", "([", "'均方误差MSE为：       '", ",num2str(MSE1)])\n", "disp", "([", "'均方根误差RMSE为：  '", ",num2str(RMSE1)])\n\n\n", "\n", "\n", "\n", "分别为pytorch/matlab效果图"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;我是有问必答小助手&amp;#xff0c;非常抱歉&amp;#xff0c;本次您提出的有问必答问题&amp;#xff0c;技术专家团超时未为您做出解答&lt;br /&gt; &lt;br /&gt;&lt;br /&gt;本次提问扣除的有问必答次数&amp;#xff0c;已经为您补发到账户&amp;#xff0c;我们后续会持续优化&amp;#xff0c;扩大我们的服务范围&amp;#xff0c;为您带来更好地服务。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["我只画出了绿色部分的图片，中间的参数曲线部分我没有画出来，不知道是哪里错误了", ["天文学家要求你使用线性模型将数据放入太阳系外信号txt(参见黑板)中。该数据文件的第一列和第二列分别给出ti和vi，即观测时间(天)和相对速度(米/秒)。", "运用此模型 f0(t; β0, β1) = β0 sin(ωt) + β1 cos(ωt), β0和β1为参数，ω = 2π/(34.6天)，设X是N × 2矩阵，有一行[sin(ωti)， cos(ωti)]。构造X(作为数组)，并解常规方程 (X^TX)β = X^T y", "求出最佳拟合参数β = [β0， β1]^T", "绘制数据集和最佳拟合模型。它看起来应该有点像以下的图", "\n", "import numpy as np\nimport matplotlib.pyplot as plt\nxs,ys = np.loadtxt(", "'extrasolar_signal.txt'", ",unpack = True)\nplt.", "plot", "(xs,ys, ", "'g+'", ")\nplt.xlabel(", "'$x$'", ")\nplt.ylabel(", "'$y$'", ")\nA = np.", "dot", "(X.transpose(), X)\nb = np.", "dot", "(X.transpose(), ys)\npar = np.linalg.solve(A, b)\nprint(", "\"Beta parameters: \"", ", par)\n\nn = ", "100", "\nxline = np.", "linspace", "(", "-4.1", ",", "4.1", ",n)\nyline = np.", "zeros", "(n)\n", "for", " ", "i", " in range(m):\n    yline += par[", "i", "]*xline**", "i", "\nplt.", "plot", "(xs, ys, ", "'.'", ");\nplt.", "plot", "(xline, yline, ", "'r-'", ", lw=", "3", ");\n\nfrom scipy.optimize import curve_fit\nw = ", "2", "*np.", "pi", "/", "34.6", "\ndef f0(t,b0,b1,w):\n    ", "return", " b0*np.", "sin", "*w*t + b1*np.", "cos", "*w*t\nA = np.", "dot", "(X.transpose(), X)\nb = np.", "dot", "(X.transpose(), ys)\npar = np.linalg.solve(A, b)\nprint(", "\"Beta parameters: \"", ", par)\n\nn = ", "100", "\nxline = np.", "linspace", "(", "-4.1", ",", "4.1", ",n)\nyline = np.", "zeros", "(n)\n", "for", " ", "i", " in range(m):\n    yline += par[", "i", "]*xline**", "i", "\nplt.", "plot", "(xs, ys, ", "'.'", ");\nplt.", "plot", "(xline, yline, ", "'r-'", ", lw=", "3", ");\n", "\n", "以下为数据集", "0.    -0.5462822385491465", "0.4    -0.783702451361118", "0.8    -0.9089025224257823", "1.2000000000000002    -0.7889248051156628", "1.6    -0.949226943504489", "2.    -0.7611050401954805", "2.4000000000000004    -0.6650057450647151", "2.8000000000000003    -0.8759288670095501", "3.2    -0.8656123587289317", "3.6    -0.6649140457676437", "4.    -0.5583916152654299", "4.4    -0.6234103572245565", "4.800000000000001    -0.4384536670407637", "5.2    -0.45475540642816015", "5.6000000000000005    -0.2933535893528097", "6.    -0.41092618504230566", "6.4    -0.21640691364542158", "6.800000000000001    -0.3233191361448244", "7.2    -0.40033772666343287", "7.6000000000000005    -0.19619561408794248", "8.    -0.37232044338162273", "8.4    -0.32763639327372057", "8.8    -0.07584110402709568", "9.200000000000001    -0.07289662739894218", "9.600000000000001    -0.3861124072710949", "10.    0.0016509499268891892", "10.4    -0.18590426894048864", "10.8    0.10204635804590274", "11.200000000000001    0.09898944148210725", "11.600000000000001    -0.16365426432836233", "12.    0.022162186215955795", "12.4    -0.0873894131756795", "12.8    0.14331006792028625", "13.200000000000001    -0.07093466063257273", "13.600000000000001    -0.08726667971656135", "14.    0.10821188257124201", "14.4    0.15593856613111876", "14.8    0.14897975799398278", "15.200000000000001    -0.16871736440162438", "15.600000000000001    0.05054500120681124", "16.    0.06705897957468973", "16.400000000000002    0.1876763504970213", "16.8    0.06520926888847367", "17.2    0.10134588588772128", "17.6    0.26959040983807353", "18.    0.2539157102920223", "18.400000000000002    0.024874768094809763", "18.8    0.143008217569402", "19.200000000000003    0.3871661437031221", "19.6    0.2807141057341562", "20.    0.3884392340985038", "20.400000000000002    0.1355900401705764", "20.8    0.33355373782689146", "21.200000000000003    0.27999830448890783", "21.6    0.1672208672103661", "22.    0.28611323112030274", "22.400000000000002    0.18389979569025794", "22.8    0.424354295482916", "23.200000000000003    0.4482691277851301", "23.6    0.28911625650990647", "24.    0.3254114765687105", "24.400000000000002    0.3427910094969029", "24.8    0.30639615372248097", "25.200000000000003    0.3620792422007555", "25.6    0.5333743131783425", "26.    0.39409808537290963", "26.400000000000002    0.5728178137177391", "26.8    0.08537572482772388", "27.200000000000003    0.28523057343506414", "27.6    0.6426259088772276", "28.    0.46367151413404734", "28.400000000000002    0.45160954743898335", "28.8    0.4812533692364098", "29.200000000000003    0.6071255451174223", "29.6    0.3865498395360522", "30.    0.45964468718784435", "30.400000000000002    0.32571105852891497", "30.8    0.6846011283841505", "31.200000000000003    0.5133973059495182", "31.6    0.40248598712451333", "32.    0.2835389289400173", "32.4    0.30208717833464094", "32.800000000000004    0.2503493752453388", "33.2    0.2898018021224344", "33.6    0.09515099754339622", "34.    -0.20011718696526487", "34.4    -0.3750571976984114", "34.800000000000004    -0.43371508478312204", "35.2    -0.719799032621965", "35.6    -0.9004915376393323", "36.    -1.0075778689532933", "36.4    -1.0847746487179042", "36.800000000000004    -1.0347158404087944", "37.2    -0.7782406698370552", "37.6    -0.7013228694375362", "38.    -0.6999737071538361", "38.400000000000006    -0.5417534711626819", "38.800000000000004    -0.5032275263459386", "39.2    -0.6252927035832156", "39.6    -0.6023207461720973", "40.    -0.4427931407722867", "40.400000000000006    -0.5023196286259453", "40.800000000000004    -0.3047799962996736", "41.2    -0.3417332656517241", "41.6    -0.40688052553661025", "42.    -0.2792846817997484", "42.400000000000006    -0.3761858584786536", "42.800000000000004    -0.3322148718977771", "43.2    -0.1894292487503772", "43.6    -0.11481140334502393", "44.    -0.13884919114085115", "44.400000000000006    -0.14197647217998172", "44.800000000000004    -0.15668965339073987", "45.2    -0.30106547563085595", "45.6    -0.1601079715503942", "46.    -0.02856438946758659", "46.400000000000006    -0.012337329111426557", "46.800000000000004    0.12214231419108941", "47.2    -0.20972662011023396", "47.6    0.08299547427591929", "48.    0.14692819172321148", "48.400000000000006    0.030999940619061642", "48.800000000000004    0.01148690553567826", "49.2    0.12558896523923488", "49.6    0.21337993717333054", "50.    0.05261326571378101", "50.400000000000006    0.015171074820157837", "50.800000000000004    0.10030943947289518", "51.2    0.07566707857393415", "51.6    0.2878403012305583", "52.    0.06319472140542415", "52.400000000000006    0.0696430280349094", "52.800000000000004    0.12208331350240692", "53.2    0.06359652523747564", "53.6    0.31133682129861706", "54.    0.14345029247237168", "54.400000000000006    0.11571728996734064", "54.800000000000004    0.4458110824088779", "55.2    0.13603495323086506", "55.6    0.17090505396986216", "56.    0.4261058399859091", "56.400000000000006    0.37980187003159394", "56.800000000000004    0.1573904172013318", "57.2    0.20380280893732955", "57.6    0.17140189170010423", "58.    0.38440601207916764", "58.400000000000006    0.46088153933955767", "58.800000000000004    0.28645206883094193", "59.2    0.3817743213824975", "59.6    0.5880033160984758", "60.    0.26889226016305", "60.400000000000006    0.3197292048394207", "60.800000000000004    0.5058844619908931", "61.2    0.5328303396087486", "61.6    0.39809118839584495", "62.    0.4790661748830668", "62.400000000000006    0.4322866523197192", "62.800000000000004    0.5738971870057148", "63.2    0.4854131198652305", "63.6    0.48251305636966507", "64.    0.6405790592698798", "64.4    0.40246674211906774", "64.8    0.4985131223939545", "65.2    0.44244386447180284", "65.60000000000001    0.45841714901421676", "66.    0.34833181544778136", "66.4    0.3979748831459446", "66.8    0.458964810348448", "67.2    0.5170930019982345", "67.60000000000001    0.1759347943583993", "68.    -0.043156293122121464", "68.4    0.09696332441608412", "68.8    -0.2558260271758174", "69.2    -0.39923232592505825", "69.60000000000001    -0.8128179270209015", "70.    -0.8319290760909005", "70.4    -1.080004611307604", "70.8    -0.9880242281598463", "71.2    -1.0303479098135222", "71.60000000000001    -0.8397760052776759", "72.    -0.9044623385137911", "72.4    -0.8567212118283086", "72.8    -0.7534653458737495", "73.2    -0.6675507741975902", "73.60000000000001    -0.5666532372452661", "74.    -0.7712660454372295", "74.4    -0.3974742948276597", "74.8    -0.5946877604677512", "75.2    -0.4031915593671267", "75.60000000000001    -0.2821943186057766", "76.    -0.466492956801751", "76.4    -0.31706573379857794", "76.80000000000001    -0.5406061827445913", "77.2    -0.2710807545256565", "77.60000000000001    -0.34240653068601073", "78.    -0.32741259669469924", "78.4    -0.19460518725123405", "78.80000000000001    -0.29598538356708987", "79.2    -0.274449627037916", "79.60000000000001    -0.12600804723174605", "80.    -0.023851583103075544", "80.4    -0.19711257253457726", "80.80000000000001    -0.25355325905702014", "81.2    -0.14202573944496455", "81.60000000000001    -0.005505476692198655", "82.    -0.01007757352545851", "82.4    -0.27423396530714594", "82.80000000000001    0.05774683759947964", "83.2    -0.09628081995743432", "83.60000000000001    -0.06944835179982074", "84.    -0.0846046097999839", "84.4    0.1150230372096937", "84.80000000000001    0.00018716335145349539", "85.2    -0.022823370411284058", "85.60000000000001    -0.03137259399756902", "86.    0.011054934507681594", "86.4    -0.02655844915242281", "86.80000000000001    0.24895762795842316", "87.2    0.07913254678138325", "87.60000000000001    0.2300278285313324", "88.    0.21479961123956673", "88.4    0.20944251357249155", "88.80000000000001    0.18348117381816614", "89.2    0.2574212926057774", "89.60000000000001    0.41126513377888513", "90.    0.12305959029805205", "90.4    0.1638351308839136", "90.80000000000001    0.2328845800387314", "91.2    0.2398046782077135", "91.60000000000001    0.3631498591790082", "92.    0.1078738865005095", "92.4    0.3454088263034277", "92.80000000000001    0.5448086260614305", "93.2    0.3043549492065313", "93.60000000000001    0.3363562785095267", "94.    0.2612311629090467", "94.4    0.26030193696870574", "94.80000000000001    0.44800148917546334", "95.2    0.42499185674750584", "95.60000000000001    0.4429400564887961", "96.    0.5415513671999952", "96.4    0.3423197257336098", "96.80000000000001    0.33418612244379925", "97.2    0.4968735700779301", "97.60000000000001    0.5924748360892591", "98.    0.6147045551005446", "98.4    0.5659946440638943", "98.80000000000001    0.5462887976749852", "99.2    0.5608357659259421", "99.60000000000001    0.5062835898828245", "100.    0.5676729761918977", "100.4    0.47168711800682717", "100.80000000000001    0.3366713565408654", "101.2    0.5129243199308822", "101.60000000000001    0.4708176758882343", "102.    0.5427855549276028", "102.4    0.11936031480780501", "102.80000000000001    0.23424575082343574", "103.2    0.11553206914894676", "103.60000000000001    -0.1877509547165001", "104.    -0.4928384630473328", "104.4    -0.6662156662964173", "104.80000000000001    -0.7666916789694784", "105.2    -0.9735619511653839", "105.60000000000001    -0.9014467132649695", "106.    -0.8958602997771499", "106.4    -0.8224063839105851", "106.80000000000001    -0.6645903476112819", "107.2    -0.7819640958844551", "107.60000000000001    -0.6685374459319108", "108.    -0.6541210481036482", "108.4    -0.5214383138802767", "108.80000000000001    -0.6003153297645414", "109.2    -0.5787779769802132", "109.60000000000001    -0.3480504032971965", "110.    -0.5325703531094098", "110.4    -0.40142888927534914", "110.80000000000001    -0.4483810362656604", "111.2    -0.37808976333664585", "111.60000000000001    -0.416288255030488", "112.    -0.1360650372313087", "112.4    -0.4268937164048808", "112.80000000000001    -0.2529864665937869", "113.2    -0.34549384224190594", "113.60000000000001    0.06824335163778911", "114.    -0.2839666991565712", "114.4    -0.09729931130123909", "114.80000000000001    -0.13774252492489097", "115.2    -0.16607128925459416", "115.60000000000001    -0.1463761890901475", "116.    -0.07520463870990637", "116.4    -0.16481812940965937", "116.80000000000001    -0.21119489874471697", "117.2    0.0923790534885594", "117.60000000000001    -0.14099016050921043", "118.    -0.1070181087744724", "118.4    -0.06746400029990894", "118.80000000000001    -0.0633054410439185", "119.2    0.09436642103003781", "119.60000000000001    0.07731983501122021", "120.    0.26633338829557907", "120.4    0.08929344710613638", "120.80000000000001    0.2400066885272551", "121.2    0.10428838429148958", "121.60000000000001    0.24751164922878338", "122.    0.08978648653950992", "122.4    0.45471462692443454", "122.80000000000001    0.3089050100656188", "123.2    0.24584773382788544", "123.60000000000001    -0.019913654385687263", "124.    0.056672859665413716", "124.4    0.20168696119225715", "124.80000000000001    0.34972612465176006", "125.2    0.13038312006362557", "125.60000000000001    0.3167164216295364", "126.    0.2779266518534756", "126.4    0.26660536344437", "126.80000000000001    0.14444541651877255", "127.2    0.23498226712938536", "127.60000000000001    0.32457332737585987", "128.    0.340470740237679", "128.4    0.6211952921187511", "128.8    0.15342735804801438", "129.20000000000002    0.4099108917209856", "129.6    0.2712059665109151", "130.    0.3250849162328896", "130.4    0.3031154163474018", "130.8    0.3098377600846768", "131.20000000000002    0.48815960360908467", "131.6    0.20608568628338472", "132.    0.4099412370173662", "132.4    0.6001726844129311", "132.8    0.6820292577209212", "133.20000000000002    0.27117025310774967", "133.6    0.5841998652199251", "134.    0.43076261342893446", "134.4    0.5143873109835726", "134.8    0.46726110781143304", "135.20000000000002    0.37958390970371775", "135.6    0.7010985370187497", "136.    0.32249649601323116", "136.4    0.4702153335547108", "136.8    0.320217528422363", "137.20000000000002    0.02928600207078058", "137.6    0.318357039933507", "138.    0.03752982234827708", "138.4    -0.3351894811666113", "138.8    -0.5958162819094603", "139.20000000000002    -0.6425631067756862", "139.6    -0.8477400574266666", "140.    -0.8922853035015624", "140.4    -0.8232509765566146", "140.8    -0.912102023617521", "141.20000000000002    -0.974782777049334", "141.6    -0.7666870272358872", "142.    -0.9077531177373417", "142.4    -0.5599596188333437", "142.8    -0.45038021731924566", "143.20000000000002    -0.6681704000438224", "143.6    -0.6081038321024888", "144.    -0.6730182769281464", "144.4    -0.4271879548318579", "144.8    -0.4854454938268676", "145.20000000000002    -0.6038975411997995", "145.6    -0.5049302704130576", "146.    -0.6103257838150606", "146.4    -0.2672128156070648", "146.8    -0.2274655435022608", "147.20000000000002    -0.30474865248744654", "147.6    -0.15035696639627968", "148.    -0.0010436212727284733", "148.4    -0.047693642582197965", "148.8    -0.15645612245608825", "149.20000000000002    -0.049559089200126055", "149.6    -0.22467291208693557", "150.    -0.14521466027790936", "150.4    -0.165634289789594", "150.8    0.06520514400413163", "151.20000000000002    -0.10567659222139225", "151.6    0.01977278177354396", "152.    -0.13557893105081786", "152.4    0.00025117117596100955", "152.8    -0.08733521952212644", "153.20000000000002    0.2655048900618098", "153.60000000000002    0.17882263116728686", "154.    -0.13785362801835727", "154.4    0.09482886304696334", "154.8    -0.0632319596991523", "155.20000000000002    0.007020078422556406", "155.60000000000002    -0.009389357681450827", "156.    0.07785338401909957", "156.4    0.23198139546898455", "156.8    0.0174068383328633", "157.20000000000002    0.1842255013406493", "157.60000000000002    0.1393789762528451", "158.    0.33715425611588046", "158.4    0.19280862984606023", "158.8    0.33389954449909776", "159.20000000000002    0.13585670643011616", "159.60000000000002    0.36783110408378117", "160.    0.42010872369884095", "160.4    0.31286549632474864", "160.8    0.39069972699500555", "161.20000000000002    0.18116120329585575", "161.60000000000002    0.10371857479283189", "162.    0.4917274809103874", "162.4    0.3727810890779094", "162.8    0.3985424346035771", "163.20000000000002    0.33155500623764317", "163.60000000000002    0.49087193698786724", "164.    0.30985416697570645", "164.4    0.24544087613073115", "164.8    0.5400907066824197", "165.20000000000002    0.5929888938812942", "165.60000000000002    0.3809316027669257", "166.    0.4257183431048073", "166.4    0.30462687487763207", "166.8    0.43012532230731126", "167.20000000000002    0.4220534968683622", "167.60000000000002    0.36939625799188935", "168.    0.5392676132789046", "168.4    0.4865883072004645", "168.8    0.5144803652394002", "169.20000000000002    0.49512848660058156", "169.60000000000002    0.34859406478808885", "170.    0.3699097271324771", "170.4    0.38717674443255795", "170.8    0.4809681042881636", "171.20000000000002    0.5233041913949565", "171.60000000000002    0.3100388529630959", "172.    0.06853085920270038", "172.4    0.09384913809990186", "172.8    -0.17953490141744538", "173.20000000000002    -0.48489672802304673", "173.60000000000002    -0.6230705369803219", "174.    -0.634244556148584", "174.4    -1.0180361501668482", "174.8    -0.92720207954732", "175.20000000000002    -0.9966618637429566", "175.60000000000002    -0.7589352069652644", "176.    -0.8279820338807111", "176.4    -0.6836136294636722", "176.8    -0.6082406366530075", "177.20000000000002    -0.7550103655784546", "177.60000000000002    -0.5473463105118186", "178.    -0.6305311819755766", "178.4    -0.6459417408151074", "178.8    -0.5594554478813489", "179.20000000000002    -0.4733725236473101", "179.60000000000002    -0.32278661220846966", "180.    -0.4641220313427059", "180.4    -0.26133729607265666", "180.8    -0.23527649451051025", "181.20000000000002    -0.2925729105590527", "181.60000000000002    -0.09727766612286612", "182.    -0.46985687735805515", "182.4    -0.27825705499393755", "182.8    -0.2596775525305475", "183.20000000000002    -0.15767037791015198", "183.60000000000002    -0.29235665820657314", "184.    -0.09757582213465452", "184.4    -0.22298921221059234", "184.8    -0.04590939669421765", "185.20000000000002    -0.09238756474095157", "185.60000000000002    0.10664115041354308", "186.    -0.29151762318203905", "186.4    -0.10915832831973954", "186.8    -0.10678328495431663", "187.20000000000002    0.031772078997418296", "187.60000000000002    0.07474087836288307", "188.    0.13618278891413677", "188.4    -0.1133788116650889", "188.8    0.07455948896951106", "189.20000000000002    0.1483278806640675", "189.60000000000002    0.05080292450863628", "190.    -0.17226716059118025", "190.4    0.11971371193021275", "190.8    0.09662166246867193", "191.20000000000002    0.1805661490088666", "191.60000000000002    0.05993400992421301", "192.    0.07431224973783443", "192.4    0.20540432145542878", "192.8    0.08245871883766366", "193.20000000000002    0.12108291014577699", "193.60000000000002    0.15998539631512884", "194.    0.03250359040460707", "194.4    0.2718351017167708", "194.8    0.3042798009818843", "195.20000000000002    0.24731560455929016", "195.60000000000002    0.35284292515800403", "196.    0.2675357804985887", "196.4    0.21555440816274485", "196.8    0.005006448281731468", "197.20000000000002    0.5238287163387917", "197.60000000000002    0.41429219557707203", "198.    0.4173298692386332", "198.4    0.3727151012376218", "198.8    0.46631327699492664", "199.20000000000002    0.39089889533974337", "199.60000000000002    0.46922445398441637", "200.    0.19261170005827852"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;好的&amp;#xff0c;关于你的问题&amp;#xff0c;我来给你解答一下。&lt;/p&gt;\n&lt;p&gt;线性电源和非线性电源是两种不同的电源类型&amp;#xff0c;它们的区别主要在于工作原理和输出特性。线性电源是利用变压器和稳压器等电路组合实现对输入电压的变换和稳定&amp;#xff0c;因此其输出具有较高的纹波系数和较低的效率&amp;#xff0c;但是稳定性较好&amp;#xff0c;适用于对电压稳定度要求较高的场合。而非线性电源则是通过开关管等元器件进行变换和调节&amp;#xff0c;其输出特性相对不稳定但效率较高&amp;#xff0c;适用于多种场合。&lt;/p&gt;\n&lt;p&gt;稳定性方面&amp;#xff0c;由于线性电源使用了稳压器等电路&amp;#xff0c;其输出电压变化范围较小&amp;#xff0c;因此稳定性更好。而非线性电源则需要通过电路调节来保持输出电压稳定&amp;#xff0c;因此其稳定性可能稍差一些。可靠性方面&amp;#xff0c;两种电源类型的可靠性大体相同&amp;#xff0c;主要取决于电路设计的合理性和部件的使用寿命。&lt;/p&gt;\n&lt;p&gt;总的来说&amp;#xff0c;线性电源和非线性电源的选择应当根据具体的应用场合、功率需求和成本等因素综合考虑。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于电源的类型有什么区别和不一样", ["线性电源和非线性电源的区别在什么地方，有什么不一样的？稳定性和可靠性有什么区别？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;那应该是下面那行insert有问题&amp;#xff0c;程序异常结束了&lt;br /&gt;insert函数的for语句&amp;#xff0c;应该是i&amp;#61;length-1&amp;#xff0c;你写成了length-i。后面的代码注意类似问题&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性表（c++），输出结果不全（只有length和IsEmpty），计算机新生求指出问题", ["“llist.h\"", "\n", "\n", "\n", "输出结果只有cout<<\"Length=\"<<L.Length()<<endl;", "        cout<<\"IsEmpty=\"<<L.IsEmpty()<<endl; 这两行的输出"]], "Tag": "算法设计"}
{"Answer": "什么叫没错误，你释放那块就有问题：\r\nvoid Queue::clear(void)//清空链队\r\n自己到底调过没有，张嘴就说\r\n改成这样就不会崩了，你有其他转换问题就自行查询吧\r\n```\r\nvoid Queue::clear(void)//清空链队\r\n{\r\n\tif (count == 0) return;\r\n\tnode *searchp = front-&gt;next, *followp = front;//初始化两个指针\r\n\twhile (searchp != rear)\r\n\t{\r\n\t\tfollowp = searchp;\r\n\t\tsearchp = searchp-&gt;next;\r\n\t\tdelete followp;\r\n\t}\r\n\tfront-&gt;next = NULL;//保留了最后一个结点，就是头结点，并且链域置为空\r\n\trear = front;\r\n\tcount = 0;//计数器也清零\r\n}\r\n```", "Konwledge_Point": "线性规划和规约", "Question": ["代码没有错误，为什么程序没运行完就直接结束了？", ["\n\n", "//主要功能：实现带小数二进制和十进制之间数据的转换\n#include <iostream.h>\n#include <windows.h>\n#include <fstream.h>\n#include <string>\n#include <math.h>\n\nusing namespace std;\n\nconst int TAILMAXLENTH=10;//定义十进制转换成二进制小数部分最大位数\nconst int DABAMAXLENTH=40;//定义原始数据的最大长度\nconst double ADDMENBERNUM=111.11;//定义一个加数用于检测数据真实可用\n\n/*********************************************************************************************************\n*栈的部分\n*********************************************************************************************************/\nclass Stack;//类Stack的声明\n\n/*\n定义一个链栈结点类Stacknode\n*/\nclass Stacknode\n{\n    friend class Stack;//申请友元类\nprivate:\n    Stacknode(Stacknode *nextp=NULL);//构造函数\n    Stacknode(int &newdata,Stacknode *nextp=NULL);//构造函数\n    int data;//数据元素\n    Stacknode *next;//递归定义指向后继结点的指针\n};\n\n/*\nStacknode的实现部分\n*/\nStacknode::Stacknode(Stacknode *nextp)//构造函数\n{\n    next=nextp;\n}\n\nStacknode::Stacknode(int &newdata,Stacknode *nextp)//构造函数\n{\n    data=newdata;\n    next=nextp;\n}\n//结点类Stacknode的定义结束\n\n/*\n定义一个链栈类Stack\n*/\nclass Stack\n{\npublic:\n    Stack();//创建一个空栈\n    ~Stack();//回收一个栈\n    void clear();//销毁一个栈\n    bool empty() const;//确定栈是否已空\n    bool push(int &item);//把数据压进栈\n    bool pop();//出栈\n    bool top(int &item) const;//取出栈顶元素\nprivate:\n    Stacknode *newnode(Stacknode *nextp=NULL);\n    Stacknode *newnode(int &item,Stacknode *nextp=NULL);//创建新的结点\n    Stacknode *Stacktop;\n    int Stacklength;\n};\n\n/*\nStack的实现部分\n*/\nStacknode *Stack::newnode(Stacknode *nextp)//创建新的结点，不带数据\n{\n    return new Stacknode(nextp);\n}\n\nStacknode *Stack::newnode(int &item,Stacknode *nextp)//创建新的结点，数据域赋值\n{\n    return new Stacknode(item,nextp);\n}\n\n//以下为栈类Stack的函数定义\nStack::Stack()//创建一个空栈\n{\n    Stacktop=newnode();//创建一个栈顶指针初始化，相当于Stacktop=NULL；本链表没有用头结点\n    Stacklength=0;\n}\n\nStack::~Stack()//回收一个栈\n{\n    clear();\n    delete Stacktop;//释放栈底\n}\n\nvoid Stack::clear()//销毁一个栈\n{\n    //while(pop());//不停地出栈，而每次释放空间在出栈函数中完成\n    Stacknode *usednodep;//定义指针usednodep，准备指向出栈的结点\n    while(Stacktop->next!=NULL)\n    {\n        usednodep=Stacktop;//指向出栈的结点\n        Stacktop=Stacktop->next;//栈顶指针后移\n        delete usednodep;//释放空间\n    }\n}\n\nbool Stack::empty() const//确定栈是否已空\n{\n    return Stacklength<=0?true:false;\n}\n\nbool Stack::push(int &item)//数据进栈\n{\n    Stacknode *newnodep;//定义指针newnodep，准备指向申请的新结点\n    newnodep=newnode(item,Stacktop);//申请新结点，把数据存入，把指针域指向头指针\n    if(!newnodep)//如果没有申请到空间，返回失败\n        return false;\n    Stacktop=newnodep;//改链，完成进栈\n    Stacklength++;//栈的长度增加\n    return true;//本次操作成功\n}\n\nbool Stack::pop()//出栈,不要栈顶数据\n{\n    Stacknode *usednodep;//定义指针usednodep，准备指向出栈的结点\n    if(!empty())//判断是否栈空\n    {\n        usednodep=Stacktop;//指向出栈的结点\n        Stacktop=Stacktop->next;//栈顶指针后移\n    //  delete usednodep;//释放空间\n        Stacklength--;//栈的长度减少\n        return true;//本次操作成功\n    }\n    return false;//否则本次操作失败\n}\n\nbool Stack::top(int &item) const//取出栈顶数据返回去\n{\n    if(!empty())//如果栈不空，记录当前栈顶元素\n    {\n        item=Stacktop->data;//通过item返回去\n        return true;//本次操作成功\n    }\n    return false;//否则本次操作失败\n}\n\n/*********************************************************************************************************\n*队列的部分\n*********************************************************************************************************/\n/*\n定义一个结点类node\n*/\nclass node\n{\npublic:\n    int data;\n    node *next;\n};\n\n/*\n定义一个链队类Queue\n*/\nclass Queue\n{\nprivate:\n    node *rear;\n    node *front;\nprotected:\n    int count;//计数器，统计结点个数即线性队列的长度\npublic:\n    Queue();//构造函数\n    ~Queue();//析构函数\n    void clear(void);//清空链队\n    bool empty(void) const;//判断是否空队\n    bool retrieve(int &item) const;//读取队头\n    bool append(const int &item);//数据入队\n    bool serve();//数据出队\n};\n\n/*\n类Queue的实现部分\n*/\nQueue::Queue()//构造函数\n{\n    front=new node;//申请新结点，作为队头结点\n    front->next=NULL;\n    rear=front;//队尾指针指向队头\n    count=0;//计数器清零，队列开始时没有实际数据\n}\n\nQueue::~Queue()//析构函数\n{\n    clear();//删除所有数据，释放所有结点\n    delete front;//把头结点也释放掉\n    count=0;//计数器清零，队列开始时没有实际数据\n}\n\nvoid Queue::clear(void)//清空链队\n{\n    node *searchp=front->next,*followp=front;//初始化两个指针\n    while(searchp!=rear)\n    {\n        followp=searchp;\n        searchp=searchp->next;\n        delete followp;\n    }\n    front->next=NULL;//保留了最后一个结点，就是头结点，并且链域置为空\n    rear=front;\n    count=0;//计数器也清零\n}\n\nbool Queue::empty(void) const//判断是否空链\n{\n    return count==0?true:false;\n}\n\nbool Queue::retrieve(int &item) const//读取队头\n{\n    if(empty())//处理意外\n        return false;\n    item=front->next->data;//返回读取的数据\n    return true;//本次操作成功\n}\n\nbool Queue::append(const int &item)//进队\n{\n    node *newnodep=new node;\n    newnodep->data=item;//给数据赋值\n    rear->next=newnodep;//这一步可以看出有头结点\n    rear=rear->next;//改动队尾指针的位置\n    count++;//计数器加1\n    return true;\n}\n\nbool Queue::serve()//出队\n{\n    if(empty())//空队处理\n        return false;\n    node *tempp=front->next;\n//  item=tempp->data;//保存数据\n    front->next=tempp->next;//改变指针\n    delete tempp;//释放该结点\n    count--;//计数器减1\n    return true;\n}\n\n/*********************************************************************************************************\n*定义一个功能类NumSysConversion\n*********************************************************************************************************/\nclass NumSysConversion\n{\nprivate:\n    int inter;\n    float floater;\n    Stack *stack;\n    Queue *queue;\npublic:\n    NumSysConversion();//构造函数\n    ~NumSysConversion();//析构函数\n    bool check(char *array,int number);//检查输入数据是否符合要求\n    void change(char *array,int number);//将原始数据转化成数值\n    double change_to_aim(int tokind);//将原始数据转化成目标进制的数据\n};\n\nNumSysConversion::NumSysConversion()//构造函数\n{\n    stack=new Stack;\n    queue=new Queue;\n    inter=0;\n    floater=0;\n}\n\nNumSysConversion::~NumSysConversion()//析构函数\n{\n    delete stack;\n    delete queue;\n}\n\nbool NumSysConversion::check(char *array,int number)//检查输入数据是否符合要求\n{\n    bool flag=true;\n    for(int i=0;array[i]!='\\0';i++)\n    {\n        cout<<array[i];\n        if(array[i]-48>=number)\n        {\n            flag=false;\n            break;\n        }\n    }\n    return flag;\n}\n\nvoid NumSysConversion::change(char *array,int number)//将原始数据转化成数值\n{\n    int flag=0,j=0;\n    for(int i=0;array[i]!='\\0';i++)\n    {\n        if(array[i]=='.')\n        {\n            flag=1;\n            continue;\n        }\n        if(flag==0)//取整数数据\n            inter=inter*number+array[i]-48;\n        if(flag==1)//取小数数据\n            floater+=(float)(((int)array[i]-48)*(float)pow(number,--j));\n    }\n}\n\ndouble NumSysConversion::change_to_aim(int tokind)//将原始数据转化成目标进制的数据\n{\n    int count=0,temp,flag=0,num;\n    double resnumb=0;\n    //第一步：先将整数部分转换进制后的数据依次入栈\n    while(inter)\n    {\n        num=inter%tokind;\n        stack->push(num);\n        inter/=tokind;\n    }\n    //第二步：再将小数部分转换进制后的数据依次入队\n    while(floater&&count<TAILMAXLENTH)\n    {\n        queue->append(int(floater*tokind));\n        floater*=tokind;\n        if(floater>=1)\n            floater-=(int)floater;\n        count++;\n    }\n    //第三步：显示栈和队中的数据并将其转换成可用数据\n    cout<<\"数据转换后为：\";\n    while(!stack->empty())\n    {\n        stack->top(temp);\n        stack->pop();\n        cout<<temp;\n        resnumb=resnumb*tokind+temp;\n        flag=1;\n    }\n    if(!queue->empty())\n    {\n        if(flag==0)\n            cout<<\"0\";\n        cout<<\".\";\n        count=-1;\n    }\n    while(!queue->empty())\n    {\n        queue->retrieve(temp);\n        queue->serve();\n        cout<<temp;\n        resnumb+=temp*pow(tokind,count--);\n    }\n    cout<<endl;\n    //第四步：清空栈和队中的数据\n    stack->clear();\n    queue->clear();\n    inter=0;\n    floater=0;\n    //第五步：将可用数据信息返回\n    return resnumb;\n}\n\n/*\n定义一个实现进制转换功能的菜单处理类interfacebase\n*/\nclass interfacebase\n{\nprivate:\n    NumSysConversion NumSysConversiononface;\npublic:\n    void clearscreen(void);//清屏\n    void showmenu(void);//显示菜单函数\n    int userchoice(void);//用户的选项\n    void processmenu(int menuchoice);//菜单函数\n};\n\n/*\n类interfacebase的实现部分\n*/\nvoid interfacebase::clearscreen(void)\n{\n    system(\"cls\");\n}\n\nvoid interfacebase::showmenu(void)\n{\n    cout<<\"进制转换功能菜单\"<<endl;\n    cout<<\"================\"<<endl;\n    cout<<\"1.十进制转换为二进制\"<<endl;\n    cout<<\"2.二进制转换为十进制\"<<endl;\n    cout<<\"0.结束程序\"<<endl;\n    cout<<\"================\"<<endl;\n}\n\nint interfacebase::userchoice(void)\n{\n    int menuchoice;\n    cout<<\"请输入您的选择：\";\n    cin>>menuchoice;\n    return menuchoice;\n}\n\nvoid interfacebase::processmenu(int menuchoice)\n{\n    switch(menuchoice)//根据用户的选择进行相应的操作\n    {\n    case 1:\n        {\n            char array[10]={'0','.','1','2','5'};\n            int number=10;\n            if(NumSysConversiononface.check(array,number))\n                cout<<\"符合要求！\"<<endl;\n            else\n                cout<<\"不符合要求！\"<<endl;\n            NumSysConversiononface.change(array,number);\n            cout<<NumSysConversiononface.change_to_aim(2)<<endl;\n            cout<<\"进制转换成功！\"<<endl;\n        }\n        break;\n    case 2:\n        {\n            char array[10]={'1','1','1','1'};\n            int number=2;   \n            if(NumSysConversiononface.check(array,number))\n                cout<<\"符合要求！\"<<endl;\n            else\n                cout<<\"不符合要求！\"<<endl;\n            NumSysConversiononface.change(array,number);\n            cout<<NumSysConversiononface.change_to_aim(10)<<endl;\n            cout<<\"进制转换成功！\"<<endl;\n        }\n        break;\n    case 0:\n        exit(0);\n    default:\n        cout<<\"对不起，您输入的功能编号有错！请重新输入！！！\"<<endl;\n        break;\n    }\n}\n\n/*\n程序主入口\n*/\nvoid main(void)\n{\n    int menuchoice;//定义变量，菜单选单项的选择\n    interfacebase interfacenow;\n    system(\"color f0\");//修改屏幕的背景色和字的颜色\n    interfacenow.clearscreen();//清屏\n    while(1)//永真循环\n    {\n        interfacenow.showmenu();//显示菜单\n        menuchoice=interfacenow.userchoice();//获取用户的选择\n        interfacenow.processmenu(menuchoice);//处理用户的选择\n        system(\"pause\");//暂停\n        interfacenow.clearscreen();//清屏\n    }\n}//主函数结束\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;char sex;\t//性别\n\nprintf(&amp;#34; 性别:&amp;#34;);\n    scanf_s(&amp;#34;%s&amp;#34;, &amp;amp;e-&amp;gt;sex, 3);\n\n printf_s(&amp;#34;学号&amp;#xff1a;%d 姓名&amp;#xff1a;%s 性别&amp;#xff1a;%s 年龄&amp;#xff1a;%d 籍贯&amp;#xff1a;%s 体重&amp;#xff1a;%f 身高&amp;#xff1a;%f 生日&amp;#xff1a;%d 宿舍&amp;#xff1a;%d&amp;#34;, e.num, &amp;amp;e.name, e.sex, e.age, &amp;amp;e.place, e.weight, e.height, e.birthday, e.dormitory);&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;好像是你的性别是char型&amp;#xff0c;但是在输出时的性别是%s&amp;#xff0c;你改成%c试一试。&lt;/p&gt;\n\n&lt;p&gt;而且&amp;#xff0c;你在输入性别的时候也不太对。&lt;/p&gt;\n\n&lt;p&gt;看起来可能是这个问题&amp;#xff0c;你可以修改试一试&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["线性表实现学生信息表，运行时出现问题不知道怎么解决", ["这是题目内容：", "\n\n", "用线性数组做一个班级学生档案记录的程序，要求：", "\n\n", "    1）用结构体表示学生记录，包括但不限于：学号、姓名、性别、班级、生日、宿舍、籍贯等信息；", "\n\n", "    2）学生记录用数组存储，按照学号递增顺序记录；", "\n\n", "    3）学生记录插入：插入包括自己在内的10名学生；", "\n\n", "    4）学生记录删除：删除指定位置学生；", "\n\n", "    5）查找学生：根据姓名查找学生在记录中的位序；", "\n\n", "\n", "\n#include<stdio.h>  \n#include<malloc.h>  \n#include<stdlib.h>  \n#include<string.h>  \n#define OK 1  \n#define ERROR 0  \n#define OVERFLOW -2  \n#define MAXSIZE 1000 \ntypedef int Status; // 定义函数返回值类型  \ntypedef struct\n{\n    int num;\t\t//学号\n    char name[20];\t//姓名\n    char sex;\t\t//性别\n    int age;\t\t//年龄\n    char place[10];\t//籍贯\n    float weight;\t//体重\n    float height;\t//身高\n    int birthday;\t//生日\n    int dormitory;\t//宿舍\n}student;\ntypedef student ElemType;\ntypedef struct\n{\n    ElemType* elem; // 存储空间的基地址   \n    int length; // 当前长度   \n}SqList;\nStatus InitList(SqList* L) // 构造空的顺序表 L   \n{\n    L->elem = (ElemType*)malloc(sizeof(ElemType) * MAXSIZE);\n    if (!L->elem)  exit(OVERFLOW);  \t\t//分配失败退出 \n    L->length = 0;  \t\t//长度为0 \n    return OK;\n}\nElemType GetElem(SqList& L, int i) // 访问顺序表，找到 i位置，返回给 e  \n{\n    return L.elem[i];\n}\nint Search(SqList& L, char str[]) // 根据名字查找，返回该同学在顺序表中的编号   \n{\n    for (int i = 1;i <= L.length;i++)  \t//查找成功，返回序号 i+1\n    {\n        if (strcmp(L.elem[i].name, str) == 0)\n            return i;\n    }\n    return 0;\n}\nStatus ListInsert(SqList& L, int i, ElemType e) // 在 i位置插入某个学生的信息   \n{\n    if ((i < 1) || (i > L.length + 1)) return ERROR;\n    if (L.length == MAXSIZE)   return ERROR;\n    for (int j = L.length;j >= i;j--)\n    {\n        L.elem[j + 1] = L.elem[j];  \t//插入位置及之后的元素后移\n    }\n    L.elem[i] = e;  \t\t//将新元素e放入第i个位置\n    ++L.length;\n    return OK;\n}\nStatus ListDelete(SqList& L, int i) // 在顺序表中删除 i位置的学生信息   \n{\n    if ((i < 1) || (i > L.length))   return ERROR;\n    for (int j = i;j <= L.length;j++)\n    {\n        L.elem[j] = L.elem[j + 1];  \t//被删除元素之后的元素前移\n    }\n    --L.length;  \t//长度减一 \n    return OK;\n}\nvoid Input(ElemType* e)  \t\t//输入 \n{\n    printf(\" 学号:\");\n    scanf_s(\"%d\", &e->num);\n    printf(\" 姓名:\");\n    scanf_s(\"%s\", e->name, 4);\n    printf(\" 性别:\");\n    scanf_s(\"%s\", &e->sex, 3);\n    printf(\" 年龄:\");\n    scanf_s(\"%d\", &e->age);\n    printf(\" 籍贯:\");\n    scanf_s(\"%s\", e->place, 20);\n    printf(\" 体重:\");\n    scanf_s(\"%f\", &e->weight);\n    printf(\" 身高:\");\n    scanf_s(\"%f\", &e->height);\n    printf(\" 生日:\");\n    scanf_s(\"%d\", &e->birthday);\n    printf(\" 宿舍:\");\n    scanf_s(\"%d\", &e->dormitory);\n    printf(\"输入完成\\n\\n\");\n}\nvoid Output(ElemType& e)  \t\t//输出 \n{\n    printf_s(\"学号：%d 姓名：%s 性别：%s 年龄：%d 籍贯：%s 体重：%f 身高：%f 生日：%d 宿舍：%d\", e.num, &e.name, e.sex, e.age, &e.place, e.weight, e.height, e.birthday, e.dormitory);\n}\nint main()\n{\n    SqList L ;\n    ElemType a, b, c, d;\n    printf(\"1. 构造顺序表\\n\");\n    printf(\"2. 录入指定人数的学生信息\\n\");\n    printf(\"3. 显示学生表中的所有信息\\n\");\n    printf(\"4. 根据姓名查找该学生，并返回学号和成绩\\n\");\n    printf(\"5. 根据某指定位置显示该学生信息\\n\");\n    printf(\"6. 在指定位置插入学生信息\\n\");\n    printf(\"7. 在指定位置删除学生信息\\n\");\n    printf(\"8. 统计学生个数\\n\");\n    printf(\"0. 退出\\n\");\n    int x = 0, choose;\n    while (1)\n    {\n        printf(\"请输入你要选择的功能前的序号:\");\n        scanf_s(\"%d\", &choose);\n        if (choose == 0)   break;\n        switch (choose)\n        {\n        case 1:\n            if (InitList(&L))\n                printf(\"成功建立顺序表\\n\");\n            else\n                printf(\"顺序表建立失败\\n\");\n            break;\n        case 2:\n            printf(\"请输入要录入学生的人数:\");\n            scanf_s(\"%d\", &x);\n            for (int i = 1;i <= x;i++)\n            {\n                printf(\"第%d个学生:\\n\", i);\n                Input(&L.elem[i]);\n            }\n            L.length = x;\n            break;\n        case 3:\n            for (int i = 1;i <= x;i++)\n            {\n                a = GetElem(L, i);\n                Output(a);\n            }\n            break;\n        case 4:\n            char s[20];\n            printf(\"请输入要查找的学生姓名:\");\n            scanf_s(\"%s\", s, 4);\n            if (Search(L, s))\n                Output(L.elem[Search(L, s)]);\n            else\n                printf(\"对不起，查无此人\\n\");\n            printf_s(\"\");\n            break;\n        case 5:\n            printf_s(\"请输入要查询的位置:\");\n            int id1;\n            scanf_s(\"%d\", &id1);\n            b = GetElem(L, id1);\n            Output(b);\n            break;\n        case 6:\n            printf(\"请输入要插入的位置:\");\n            int id2;\n            scanf_s(\"%d\", &id2);\n            printf(\"请输入学生信息:\\n\");\n            Input(&c);\n            if (ListInsert(L, id2, c))\n            {\n                x++;\n                printf(\"插入成功\\n\");\n            }\n            else\n            {\n                printf(\"插入失败\\n\");\n            }\n            break;\n        case 7:\n            printf(\"请输入要删除的位置:\");\n            int id3;\n            scanf_s(\"%d\", &id3);\n            if (ListDelete(L, id3))\n            {\n                x--;\n                printf(\"删除成功\\n\");\n            }\n            else\n            {\n                printf(\"删除失败\\n\");\n            }\n            break;\n        case 8:\n            printf(\"已录入的学生个数为:%d\\n\\n\", L.length);\n            break;\n        }\n    }\n    printf(\"\\n\\n请按任意键退出\\n\\n\");\n    return 0;\n}\n", "\n\n", "可以正常编译，选择1和选择2可以使用，但是其他选择在运行的时候会出问题，不知道怎么修改。", "\n\n", "    运行选择三的时候会出现（引发了异常: 读取访问权限冲突），不知道为什么"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;以下答案引用自GPT-3大模型,请合理使用&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;可以使用R中的glm函数来建立多元线性模型&amp;#xff0c;在建立模型时添加类别和产地变量即可。比如&amp;#xff1a;\n\n&lt;span class=\"hljs-title\"&gt;model&lt;/span&gt;&amp;lt;-glm(price~category&amp;#43;origin,&lt;span class=\"hljs-title\"&gt;data&lt;/span&gt;&amp;#61;your_data)\n\n&lt;span class=\"hljs-comment\"&gt;#用上面的模型&amp;#xff0c;我们可以同时考虑分类和产地因素影响价格的情况。&lt;/span&gt;\n\nsummary(&lt;span class=\"hljs-title\"&gt;model&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#用这个函数可以对模型进行参数估计&lt;/span&gt;\n\nanova(&lt;span class=\"hljs-title\"&gt;model&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;#用这个函数可以检验因素对结果的显著性&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果我的回答解决了您的问题&amp;#xff0c;请采纳我的回答&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["多个固定效应用R语言怎么处理", ["研究问题是研究商品定价和一系列变量间的关系，所有自变量和固定效应都是类别变量。现在想要同时固定“类别”和“产地”，想请教一下用R怎么实现哇🥺"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;看错误是g2o的依赖问题&amp;#xff0c;检查下是否正确安装&amp;#xff0c;在makelist中的依赖引入写法是否正确等。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["视觉SLAM十四讲ch6", ["视觉SLAM十四讲ch6程序g2oCurveFitting编译问题", "我的系统是Ubuntu22.04，g2o库是最新版", "\n", "CMakeLists如下：", "\n", "cmake_minimum_required", "(VERSION ", "2.8", ")\n", "project", "(ch6)\n\n", "set", "(CMAKE_BUILD_TYPE Debug)\n", "set", "(CMAKE_CXX_FLAGS ", "\"-std=c++14 -O3\"", ")\n\n", "list", "(APPEND CMAKE_MODULE_PATH ", "${PROJECT_SOURCE_DIR}", "/cmake)\n\n", "# OpenCV", "\n", "find_package", "(OpenCV REQUIRED)\n", "include_directories", "(", "${OpenCV_INCLUDE_DIRS}", ")\n\n", "# Ceres", "\n", "find_package", "(Ceres REQUIRED)\n", "include_directories", "(", "${CERES_INCLUDE_DIRS}", ")\n\n", "# g2o", "\n", "find_package", "(G2O REQUIRED)\n", "include_directories", "(", "${G2O_INCLUDE_DIRS}", ")\n\n", "# Eigen", "\n", "include_directories", "(", "\"/usr/include/eigen3\"", ")\n\n", "add_executable", "(gaussNewton gaussNewton.cpp)\n", "target_link_libraries", "(gaussNewton ", "${OpenCV_LIBS}", ")\n\n", "add_executable", "(ceresCurveFitting ceresCurveFitting.cpp)\n", "target_link_libraries", "(ceresCurveFitting ", "${OpenCV_LIBS}", " ", "${CERES_LIBRARIES}", ")\n\n", "add_executable", "(g2oCurveFitting g2oCurveFitting.cpp)\n", "target_link_libraries", "(g2oCurveFitting ", "${OpenCV_LIBS}", " ", "${G2O_CORE_LIBRARIES}", " ", "${G2O_SOLVERS_LIBRARIES}", ")\n", "\n", "g2oCurveFitting.cpp如下：", "\n", "#", "include", " ", "<iostream>", "\n", "#", "include", " ", "<g2o/core/g2o_core_api.h>", "\n", "#", "include", " ", "<g2o/core/base_vertex.h>", "\n", "#", "include", " ", "<g2o/core/base_unary_edge.h>", "\n", "#", "include", " ", "<g2o/core/block_solver.h>", "\n", "#", "include", " ", "<g2o/core/optimization_algorithm_levenberg.h>", "\n", "#", "include", " ", "<g2o/core/optimization_algorithm_gauss_newton.h>", "\n", "#", "include", " ", "<g2o/core/optimization_algorithm_dogleg.h>", "\n", "#", "include", " ", "<g2o/solvers/dense/linear_solver_dense.h>", "\n", "#", "include", " ", "<Eigen/Core>", "\n", "#", "include", " ", "<opencv2/core/core.hpp>", "\n", "#", "include", " ", "<cmath>", "\n", "#", "include", " ", "<chrono>", "\n\n", "using", " ", "namespace", " std;\n\n", "// 曲线模型的顶点，模板参数：优化变量维度和数据类型", "\n", "class", " ", "CurveFittingVertex", " : ", "public", " g2o::BaseVertex<", "3", ", Eigen::Vector3d> {\n", "public", ":\n  EIGEN_MAKE_ALIGNED_OPERATOR_NEW\n\n  ", "// 重置", "\n  ", "virtual", " ", "void", " ", "setToOriginImpl", "()", " ", "override", " ", "{\n    _estimate << ", "0", ", ", "0", ", ", "0", ";\n  }\n\n  ", "// 更新", "\n  ", "virtual", " ", "void", " ", "oplusImpl", "(", "const", " ", "double", " *update)", " ", "override", " ", "{\n    _estimate += Eigen::", "Vector3d", "(update);\n  }\n\n  ", "// 存盘和读盘：留空", "\n  ", "virtual", " ", "bool", " ", "read", "(istream &in)", " ", "{}\n\n  ", "virtual", " ", "bool", " ", "write", "(ostream &out)", " ", "const", " ", "{}\n};\n\n", "// 误差模型 模板参数：观测值维度，类型，连接顶点类型", "\n", "class", " ", "CurveFittingEdge", " : ", "public", " g2o::BaseUnaryEdge<", "1", ", ", "double", ", CurveFittingVertex> {\n", "public", ":\n  ", "EIGEN_MAKE_ALIGNED_OPERATOR_NEW\n\n  ", "CurveFittingEdge", "(", "double", " x)", " : BaseUnaryEdge(), _x(x) {", "}\n\n  ", "// 计算曲线模型误差", "\n  ", "virtual", " ", "void", " ", "computeError", "()", " ", "override", " ", "{\n    ", "const", " CurveFittingVertex *v = ", "static_cast", "<", "const", " CurveFittingVertex *> (_vertices[", "0", "]);\n    ", "const", " Eigen::Vector3d abc = v->", "estimate", "();\n    _error(", "0", ", ", "0", ") = _measurement - std::", "exp", "(", "abc", "(", "0", ", ", "0", ") * _x * _x + ", "abc", "(", "1", ", ", "0", ") * _x + ", "abc", "(", "2", ", ", "0", "));\n  }\n\n  ", "// 计算雅可比矩阵", "\n  ", "virtual", " ", "void", " ", "linearizeOplus", "()", " ", "override", " ", "{\n    ", "const", " CurveFittingVertex *v = ", "static_cast", "<", "const", " CurveFittingVertex *> (_vertices[", "0", "]);\n    ", "const", " Eigen::Vector3d abc = v->", "estimate", "();\n    ", "double", " y = ", "exp", "(abc[", "0", "] * _x * _x + abc[", "1", "] * _x + abc[", "2", "]);\n    _jacobianOplusXi[", "0", "] = -_x * _x * y;\n    _jacobianOplusXi[", "1", "] = -_x * y;\n    _jacobianOplusXi[", "2", "] = -y;\n  }\n\n  ", "virtual", " ", "bool", " ", "read", "(istream &in)", " ", "{}\n\n  ", "virtual", " ", "bool", " ", "write", "(ostream &out)", " ", "const", " ", "{}\n\n", "public", ":\n  ", "double", " _x;  ", "// x 值， y 值为 _measurement", "\n};\n\n", "int", " ", "main", "(", "int", " argc, ", "char", " **argv)", " ", "{\n  ", "double", " ar = ", "1.0", ", br = ", "2.0", ", cr = ", "1.0", ";         ", "// 真实参数值", "\n  ", "double", " ae = ", "2.0", ", be = ", "-1.0", ", ce = ", "5.0", ";        ", "// 估计参数值", "\n  ", "int", " N = ", "100", ";                                 ", "// 数据点", "\n  ", "double", " w_sigma = ", "1.0", ";                        ", "// 噪声Sigma值", "\n  ", "double", " inv_sigma = ", "1.0", " / w_sigma;\n  cv::RNG rng;                                 ", "// OpenCV随机数产生器", "\n\n  vector<", "double", "> x_data, y_data;      ", "// 数据", "\n  ", "for", " (", "int", " i = ", "0", "; i < N; i++) {\n    ", "double", " x = i / ", "100.0", ";\n    x_data.", "push_back", "(x);\n    y_data.", "push_back", "(", "exp", "(ar * x * x + br * x + cr) + rng.", "gaussian", "(w_sigma * w_sigma));\n  }\n\n  ", "// 构建图优化，先设定g2o", "\n  ", "typedef", " g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", ">> BlockSolverType;  ", "// 每个误差项优化变量维度为3，误差值维度为1", "\n  ", "typedef", " g2o::LinearSolverDense<BlockSolverType::PoseMatrixType> LinearSolverType; ", "// 线性求解器类型", "\n\n  ", "// 梯度下降方法，可以从GN, LM, DogLeg 中选", "\n  ", "auto", " solver = ", "new", " g2o::", "OptimizationAlgorithmGaussNewton", "(\n    g2o::", "make_unique", "<BlockSolverType>(g2o::", "make_unique", "<LinearSolverType>()));\n  g2o::SparseOptimizer optimizer;     ", "// 图模型", "\n  optimizer.", "setAlgorithm", "(solver);   ", "// 设置求解器", "\n  optimizer.", "setVerbose", "(", "true", ");       ", "// 打开调试输出", "\n\n  ", "// 往图中增加顶点", "\n  CurveFittingVertex *v = ", "new", " ", "CurveFittingVertex", "();\n  v->", "setEstimate", "(Eigen::", "Vector3d", "(ae, be, ce));\n  v->", "setId", "(", "0", ");\n  optimizer.", "addVertex", "(v);\n\n  ", "// 往图中增加边", "\n  ", "for", " (", "int", " i = ", "0", "; i < N; i++) {\n    CurveFittingEdge *edge = ", "new", " ", "CurveFittingEdge", "(x_data[i]);\n    edge->", "setId", "(i);\n    edge->", "setVertex", "(", "0", ", v);                ", "// 设置连接的顶点", "\n    edge->", "setMeasurement", "(y_data[i]);      ", "// 观测数值", "\n    edge->", "setInformation", "(Eigen::Matrix<", "double", ", ", "1", ", ", "1", ">::", "Identity", "() * ", "1", " / (w_sigma * w_sigma)); ", "// 信息矩阵：协方差矩阵之逆", "\n    optimizer.", "addEdge", "(edge);\n  }\n\n  ", "// 执行优化", "\n  cout << ", "\"start optimization\"", " << endl;\n  chrono::steady_clock::time_point t1 = chrono::steady_clock::", "now", "();\n  optimizer.", "initializeOptimization", "();\n  optimizer.", "optimize", "(", "10", ");\n  chrono::steady_clock::time_point t2 = chrono::steady_clock::", "now", "();\n  chrono::duration<", "double", "> time_used = chrono::duration_cast<chrono::duration<", "double", ">>(t2 - t1);\n  cout << ", "\"solve time cost = \"", " << time_used.", "count", "() << ", "\" seconds. \"", " << endl;\n\n  ", "// 输出优化值", "\n  Eigen::Vector3d abc_estimate = v->", "estimate", "();\n  cout << ", "\"estimated model: \"", " << abc_estimate.", "transpose", "() << endl;\n\n  ", "return", " ", "0", ";\n}\n\n", "\n", "make编译出错：", "\n", "/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: warning: relocation against `_ZN3g2o18G2OBatchStatistics12_globalStatsE' ", "in", " read-only section `.text._ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi3ELi1EEEE5solveEv[_ZN3g2o11BlockSolverINS_17BlockSolverTraitsILi3ELi1EEEE5solveEv]'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseEdge<", "1", ", double>::~", "BaseEdge", "()':\n/usr/local/include/g2o/core/base_edge.h:", "96", ": undefined reference to `g2o::OptimizableGraph::Edge::~", "Edge", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `non-", "virtual", " thunk to CurveFittingEdge::~", "CurveFittingEdge", "()':\n/usr/local/include/g2o/core/base_edge.h:", "96", ": undefined reference to `g2o::OptimizableGraph::Edge::~", "Edge", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseEdge<", "1", ", double>::~", "BaseEdge", "()':\n/usr/local/include/g2o/core/base_edge.h:", "96", ": undefined reference to `g2o::OptimizableGraph::Edge::~", "Edge", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `non-", "virtual", " thunk to CurveFittingEdge::~", "CurveFittingEdge", "()':\n/usr/include/eigen3/Eigen/src/Core/util/Memory.h:", "203", ": undefined reference to `g2o::OptimizableGraph::Edge::~", "Edge", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseFixedSizedEdge<", "1", ", double, CurveFittingVertex>::", "resize", "(unsigned long)':\n/usr/local/include/g2o/core/base_fixed_sized_edge.hpp:", "31", ": undefined reference to `g2o::HyperGraph::Edge::", "resize", "(unsigned long)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", "> >::", "computeMarginals", "(g2o::SparseBlockMatrix<Eigen::Matrix<double, -", "1", ", -", "1", ", ", "0", ", -", "1", ", -", "1", "> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > ", "const", "&)':\n/usr/local/include/g2o/core/block_solver.hpp:", "485", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::G2OBatchStatistics::", "globalStats", "()':\n/usr/local/include/g2o/core/batch_stats.h:", "79", ": undefined reference to `g2o::G2OBatchStatistics::_globalStats'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", "> >::", "computeMarginals", "(g2o::SparseBlockMatrix<Eigen::Matrix<double, -", "1", ", -", "1", ", ", "0", ", -", "1", ", -", "1", "> >&, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > ", "const", "&)':\n/usr/local/include/g2o/core/block_solver.hpp:", "489", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseVertex<", "3", ", Eigen::Matrix<double, ", "3", ", ", "1", ", ", "0", ", ", "3", ", ", "1", "> >::~", "BaseVertex", "()':\n/usr/local/include/g2o/core/base_vertex.h:", "50", ": undefined reference to `g2o::OptimizableGraph::Vertex::~", "Vertex", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `non-", "virtual", " thunk to CurveFittingVertex::~", "CurveFittingVertex", "()':\n/usr/local/include/g2o/core/base_vertex.h:", "50", ": undefined reference to `g2o::OptimizableGraph::Vertex::~", "Vertex", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseVertex<", "3", ", Eigen::Matrix<double, ", "3", ", ", "1", ", ", "0", ", ", "3", ", ", "1", "> >::~", "BaseVertex", "()':\n/usr/local/include/g2o/core/base_vertex.h:", "50", ": undefined reference to `g2o::OptimizableGraph::Vertex::~", "Vertex", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `non-", "virtual", " thunk to CurveFittingVertex::~", "CurveFittingVertex", "()':\n/usr/include/eigen3/Eigen/src/Core/util/Memory.h:", "203", ": undefined reference to `g2o::OptimizableGraph::Vertex::~", "Vertex", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolverBase::", "BlockSolverBase", "()':\n/usr/local/include/g2o/core/block_solver.h:", "90", ": undefined reference to `g2o::Solver::", "Solver", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolverBase::~", "BlockSolverBase", "()':\n/usr/local/include/g2o/core/block_solver.h:", "92", ": undefined reference to `g2o::Solver::~", "Solver", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", "> >::", "resize", "(int*, int, int*, int, int)':\n/usr/local/include/g2o/core/block_solver.hpp:", "56", ": undefined reference to `g2o::Solver::", "resizeVector", "(unsigned long)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseEdge<", "1", ", double>::~", "BaseEdge", "()':\n/usr/local/include/g2o/core/base_edge.h:", "96", ": undefined reference to `g2o::OptimizableGraph::Edge::~", "Edge", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `main.cold':\n/home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "126", ": undefined reference to `g2o::SparseOptimizer::~", "SparseOptimizer", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", "> >::", "solve", "()':\n/usr/local/include/g2o/core/block_solver.hpp:", "346", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::G2OBatchStatistics::", "globalStats", "()':\n/usr/local/include/g2o/core/batch_stats.h:", "79", ": undefined reference to `g2o::G2OBatchStatistics::_globalStats'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", "> >::", "solve", "()':\n/usr/local/include/g2o/core/block_solver.hpp:", "436", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: /usr/local/include/g2o/core/block_solver.hpp:", "439", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: /usr/local/include/g2o/core/block_solver.hpp:", "442", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: /usr/local/include/g2o/core/block_solver.hpp:", "332", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::G2OBatchStatistics::", "globalStats", "()':\n/usr/local/include/g2o/core/batch_stats.h:", "79", ": undefined reference to `g2o::G2OBatchStatistics::_globalStats'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", "> >::", "solve", "()':\n/usr/local/include/g2o/core/block_solver.hpp:", "336", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: /usr/local/include/g2o/core/block_solver.hpp:", "439", ": undefined reference to `g2o::", "get_monotonic_time", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BlockSolver<g2o::BlockSolverTraits<", "3", ", ", "1", "> >::", "updateStructure", "(std::vector<g2o::HyperGraph::Vertex*, std::allocator<g2o::HyperGraph::Vertex*> > ", "const", "&, std::set<g2o::HyperGraph::Edge*, std::less<g2o::HyperGraph::Edge*>, std::allocator<g2o::HyperGraph::Edge*> > ", "const", "&)':\n/usr/local/include/g2o/core/block_solver.hpp:", "292", ": undefined reference to `g2o::Solver::", "resizeVector", "(unsigned long)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `std::__cxx11::basic_string<", "char", ", std::char_traits<", "char", ">, std::allocator<", "char", "> >* google::MakeCheckOpString<unsigned long, unsigned long>(unsigned long ", "const", "&, unsigned long ", "const", "&, ", "char", " ", "const", "*)':\n/usr/include/glog/logging.h:", "694", ": undefined reference to `google::base::CheckOpMessageBuilder::", "CheckOpMessageBuilder", "(", "char", " ", "const", "*)'\n/usr/bin/ld: /usr/include/glog/logging.h:", "696", ": undefined reference to `google::base::CheckOpMessageBuilder::", "ForVar2", "()'\n/usr/bin/ld: /usr/include/glog/logging.h:", "697", ": undefined reference to `google::base::CheckOpMessageBuilder::NewString[abi:cxx11]()'\n/usr/bin/ld: /usr/include/glog/logging.h:", "698", ": undefined reference to `google::base::CheckOpMessageBuilder::~", "CheckOpMessageBuilder", "()'\n/usr/bin/ld: /usr/include/glog/logging.h:", "698", ": undefined reference to `google::base::CheckOpMessageBuilder::~", "CheckOpMessageBuilder", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `ceres::internal::FixedArray<double, ", "3", "ul, std::allocator<double> >::operator[](unsigned long)':\n/usr/local/include/ceres/internal/fixed_array.h:", "215", ": undefined reference to `google::LogMessageFatal::", "LogMessageFatal", "(", "char", " ", "const", "*, int, google::CheckOpString ", "const", "&)'\n/usr/bin/ld: /usr/local/include/ceres/internal/fixed_array.h:", "215", ": undefined reference to `google::LogMessage::", "stream", "()'\n/usr/bin/ld: /usr/local/include/ceres/internal/fixed_array.h:", "215", ": undefined reference to `google::LogMessageFatal::", "LogMessageFatal", "(", "char", " ", "const", "*, int, google::CheckOpString ", "const", "&)'\n/usr/bin/ld: /usr/local/include/ceres/internal/fixed_array.h:", "215", ": undefined reference to `google::LogMessage::", "stream", "()'\n/usr/bin/ld: /usr/local/include/ceres/internal/fixed_array.h:", "215", ": undefined reference to `google::LogMessageFatal::", "LogMessageFatal", "(", "char", " ", "const", "*, int, google::CheckOpString ", "const", "&)'\n/usr/bin/ld: /usr/local/include/ceres/internal/fixed_array.h:", "215", ": undefined reference to `google::LogMessage::", "stream", "()'\n/usr/bin/ld: /usr/local/include/ceres/internal/fixed_array.h:", "215", ": undefined reference to `google::LogMessageFatal::~", "LogMessageFatal", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `main':\n/home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "91", ": undefined reference to `g2o::OptimizationAlgorithmGaussNewton::", "OptimizationAlgorithmGaussNewton", "(std::unique_ptr<g2o::Solver, std::default_delete<g2o::Solver> >)'\n/usr/bin/ld: /home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "92", ": undefined reference to `g2o::SparseOptimizer::", "SparseOptimizer", "()'\n/usr/bin/ld: /home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "93", ": undefined reference to `g2o::SparseOptimizer::", "setAlgorithm", "(g2o::OptimizationAlgorithm*)'\n/usr/bin/ld: /home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "94", ": undefined reference to `g2o::SparseOptimizer::", "setVerbose", "(", "bool", ")'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseVertex<", "3", ", Eigen::Matrix<double, ", "3", ", ", "1", ", ", "0", ", ", "3", ", ", "1", "> >::", "BaseVertex", "()':\n/usr/local/include/g2o/core/base_vertex.hpp:", "29", ": undefined reference to `g2o::OptimizableGraph::Vertex::", "Vertex", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseVertex<", "3", ", Eigen::Matrix<double, ", "3", ", ", "1", ", ", "0", ", ", "3", ", ", "1", "> >::", "setEstimate", "(Eigen::Matrix<double, ", "3", ", ", "1", ", ", "0", ", ", "3", ", ", "1", "> ", "const", "&)':\n/usr/local/include/g2o/core/base_vertex.h:", "133", ": undefined reference to `g2o::OptimizableGraph::Vertex::", "updateCache", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::OptimizableGraph::", "addVertex", "(g2o::OptimizableGraph::Vertex*)':\n/usr/local/include/g2o/core/optimizable_graph.h:", "597", ": undefined reference to `g2o::OptimizableGraph::", "addVertex", "(g2o::OptimizableGraph::Vertex*, g2o::HyperGraph::Data*)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `g2o::BaseEdge<", "1", ", double>::", "BaseEdge", "()':\n/usr/local/include/g2o/core/base_edge.h:", "94", ": undefined reference to `g2o::OptimizableGraph::Edge::", "Edge", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o: ", "in", " function `main':\n/home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "105", ": undefined reference to `g2o::HyperGraph::Edge::", "setId", "(int)'\n/usr/bin/ld: /home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "109", ": undefined reference to `g2o::OptimizableGraph::", "addEdge", "(g2o::OptimizableGraph::Edge*)'\n/usr/bin/ld: /home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "115", ": undefined reference to `g2o::SparseOptimizer::", "initializeOptimization", "(int)'\n/usr/bin/ld: /home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "116", ": undefined reference to `g2o::SparseOptimizer::", "optimize", "(int, ", "bool", ")'\n/usr/bin/ld: /home/zsh/VSLAM/Programs/Notmycode/slambook2/ch6/g2oCurveFitting.cpp:", "126", ": undefined reference to `g2o::SparseOptimizer::~", "SparseOptimizer", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTIN3g2o15BlockSolverBaseE[_ZTIN3g2o15BlockSolverBaseE]+", "0x10", "): undefined reference to `typeinfo ", "for", " ", "g2o", "::Solver'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTIN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE[_ZTIN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE]+", "0x10", "): undefined reference to `typeinfo ", "for", " ", "g2o", "::OptimizableGraph::Vertex'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTIN3g2o8BaseEdgeILi1EdEE[_ZTIN3g2o8BaseEdgeILi1EdEE]+", "0x10", "): undefined reference to `typeinfo ", "for", " ", "g2o", "::OptimizableGraph::Edge'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE[_ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE]+", "0x88", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "getEstimateData", "(double*) ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE[_ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE]+", "0x98", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "estimateDimension", "() ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE[_ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE]+", "0xa0", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "getMinimalEstimateData", "(double*) ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE[_ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE]+", "0xb0", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "minimalEstimateDimension", "() ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE[_ZTVN3g2o10BaseVertexILi3EN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEE]+", "0xe8", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "updateCache", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV18CurveFittingVertex[_ZTV18CurveFittingVertex]+", "0x88", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "getEstimateData", "(double*) ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV18CurveFittingVertex[_ZTV18CurveFittingVertex]+", "0x98", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "estimateDimension", "() ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV18CurveFittingVertex[_ZTV18CurveFittingVertex]+", "0xa0", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "getMinimalEstimateData", "(double*) ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV18CurveFittingVertex[_ZTV18CurveFittingVertex]+", "0xb0", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "minimalEstimateDimension", "() ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV18CurveFittingVertex[_ZTV18CurveFittingVertex]+", "0xe8", "): undefined reference to `g2o::OptimizableGraph::Vertex::", "updateCache", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o8BaseEdgeILi1EdEE[_ZTVN3g2o8BaseEdgeILi1EdEE]+", "0x28", "): undefined reference to `g2o::HyperGraph::Edge::", "resize", "(unsigned long)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o8BaseEdgeILi1EdEE[_ZTVN3g2o8BaseEdgeILi1EdEE]+", "0x40", "): undefined reference to `g2o::OptimizableGraph::Edge::", "setMeasurementData", "(double ", "const", "*)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o8BaseEdgeILi1EdEE[_ZTVN3g2o8BaseEdgeILi1EdEE]+", "0x48", "): undefined reference to `g2o::OptimizableGraph::Edge::", "getMeasurementData", "(double*) ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o8BaseEdgeILi1EdEE[_ZTVN3g2o8BaseEdgeILi1EdEE]+", "0x50", "): undefined reference to `g2o::OptimizableGraph::Edge::", "measurementDimension", "() ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o8BaseEdgeILi1EdEE[_ZTVN3g2o8BaseEdgeILi1EdEE]+", "0x58", "): undefined reference to `g2o::OptimizableGraph::Edge::", "setMeasurementFromState", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o8BaseEdgeILi1EdEE[_ZTVN3g2o8BaseEdgeILi1EdEE]+", "0xd8", "): undefined reference to `g2o::OptimizableGraph::Edge::", "resolveCaches", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE[_ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE]+", "0x40", "): undefined reference to `g2o::OptimizableGraph::Edge::", "setMeasurementData", "(double ", "const", "*)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE[_ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE]+", "0x48", "): undefined reference to `g2o::OptimizableGraph::Edge::", "getMeasurementData", "(double*) ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE[_ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE]+", "0x50", "): undefined reference to `g2o::OptimizableGraph::Edge::", "measurementDimension", "() ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE[_ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE]+", "0x58", "): undefined reference to `g2o::OptimizableGraph::Edge::", "setMeasurementFromState", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE[_ZTVN3g2o18BaseFixedSizedEdgeILi1EdJ18CurveFittingVertexEEE]+", "0xd8", "): undefined reference to `g2o::OptimizableGraph::Edge::", "resolveCaches", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV16CurveFittingEdge[_ZTV16CurveFittingEdge]+", "0x40", "): undefined reference to `g2o::OptimizableGraph::Edge::", "setMeasurementData", "(double ", "const", "*)'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV16CurveFittingEdge[_ZTV16CurveFittingEdge]+", "0x48", "): undefined reference to `g2o::OptimizableGraph::Edge::", "getMeasurementData", "(double*) ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV16CurveFittingEdge[_ZTV16CurveFittingEdge]+", "0x50", "): undefined reference to `g2o::OptimizableGraph::Edge::", "measurementDimension", "() ", "const", "'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV16CurveFittingEdge[_ZTV16CurveFittingEdge]+", "0x58", "): undefined reference to `g2o::OptimizableGraph::Edge::", "setMeasurementFromState", "()'\n/usr/bin/ld: CMakeFiles/g2oCurveFitting.dir/g2oCurveFitting.cpp.o:(.data.rel.ro._ZTV16CurveFittingEdge[_ZTV16CurveFittingEdge]+", "0xd8", "): undefined reference to `g2o::OptimizableGraph::Edge::", "resolveCaches", "()'\n/usr/bin/ld: warning: creating DT_TEXTREL ", "in", " a PIE\ncollect2: error: ld returned ", "1", " exit status\nmake[", "2", "]: *** [CMakeFiles/g2oCurveFitting.dir/build.make:", "111", "：g2oCurveFitting] 错误 ", "1", "\nmake[", "1", "]: *** [CMakeFiles/Makefile2:", "139", "：CMakeFiles/g2oCurveFitting.dir/all] 错误 ", "2", "\nmake: *** [Makefile:", "91", "：all] 错误 ", "2", "\n\n\n", "\n", "以及之前安装g2o依赖项时出现的一个小问题：", "\n", "正在读取软件包列表", "...", " 完成\n正在分析软件包的依赖关系树", "...", " 完成\n正在读取状态信息", "...", " 完成                 \n没有可用的软件包 qt5-default，但是它被其它的软件包引用了。\n这可能意味着这个缺失的软件包可能已被废弃，\n或者只能在其他发布源中找到\n\nE: 软件包 qt5-default 没有可安装候选\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/805145093856175.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/955616093856151.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["#高数#高数过程求解，向量空间", ["大学高数解答，2×2矩阵，求解答a和b过程，希望能得到详细的过程。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;文件后缀没加&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据科学技术与应用回归分析", ["我把advertising文件和我写的Python文件保存在同一个文件夹里（如图1）,但是数据报错显示打不开advertising文件", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;缺失值处理要根据具体情况&amp;#xff0c;通常的方法&amp;#xff1a;1&amp;#xff09;删除该样本&amp;#xff0c;2&amp;#xff09;补0或预置值&amp;#xff0c;3&amp;#xff09;补平均值&amp;#xff0c;4&amp;#xff09;用上一个样本值或滑动平均值代替&lt;/p&gt;\n&lt;p&gt;具体到你提出的问题&amp;#xff0c;性别只有 男/女&amp;#xff08;忽略其它&amp;#xff09;相当于 0/1&amp;#xff0c;估计相邻样本不存在明显的相关性&amp;#xff0c;且高达 39% 数据缺失&amp;#xff0c;这就不适合补充该数据了&amp;#xff0c;建议直接删除该列&amp;#xff0c;即忽略性别的影响。&lt;/p&gt;\n&lt;p&gt;如果分析认为 性别 对于分析结果影响很大&amp;#xff0c;不能忽略&amp;#xff0c;建议只能想办法再收集该数据&amp;#xff0c;而不是按某种规则填补了。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据分析中，性别一列的缺失值怎么处理比较好", ["在做某平台用户信息和销售额的分析", "\n", "性别一列有11729条缺失值，约39%的缺失", "\n", "性别这一列应该怎么做缺失值处理？", "性别这一列可以用到回归模型里吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你是不是不知道set的作用……&amp;#xff0c;它就是用来去除重复值的呀&amp;#xff0c;两次都加上1&amp;#xff0c;重复了&amp;#xff0c;只会剩下1个。&lt;br /&gt;set确实是可变对象&amp;#xff0c;你这样改一下就知道了&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;def &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;func&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(value, A&amp;#61;set()&lt;/span&gt;):&lt;/span&gt;\n    A.add(value)\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; A\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;func&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(1)&lt;/span&gt;)  #&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;func&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(2)&lt;/span&gt;)  #&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Python两次调用函数改变了形参默认值", ["问题遇到的现象和发生背景", "\n", "Python 两次调用同一个函数会改变形参的默认值", "\n", "遇到的现象和发生背景，请写出第一个错误信息", "\n", "下面是一段简单的函数，我们将它调用两次：", "\n", "def ", "func", "(A=[])", ":", "\n    A.", "append", "(", "1", ")\n    ", "print", "(id(A))\n    ", "return", " A\n\n", "print", "(", "func", "()", ")  # [1]", "\n", "print", "(", "func", "()", ")  # [1,1]", "\n", "\n", "Output:", "\n", "1449889792264", "\n", "[1]", "\n", "1449889792264", "\n", "[1, 1]", "\n", "\n", "第一次输出[1]，第二次输出[1,1]，id()函数反映两个A是同一个对象。不知道这是为什么，我把这个函数略作修改，List()改Set()，输出结果却正好相反：", "\n", "def", " ", "func", "(", "A=", "set", "(", ")", "):\n    A.add(", "1", ")\n    ", "print", "(", "id", "(A))\n    ", "return", " A\n\n", "print", "(func())  ", "# {1}", "\n", "print", "(func())  ", "# {1,1}", "\n", "\n", "Output:", "\n", "2032723709064\n", "{1}", "\n2032723709064\n", "{1}", "\n", "\n", "依旧是同一个对象id，但是两次调用却没有改变默认形参的值", "有没有精通Python的伙伴能解释一下。"]], "Tag": "算法设计"}
{"Answer": "&lt;blockquote&gt;\n&lt;p&gt;回答不易&amp;#xff0c;求求您采纳点赞哦&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;一般来说&amp;#xff0c;下游生物信息分析流程包括以下几步&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;鉴定该转录本的全长序列&amp;#xff1a;确定该转录本的全长序列&amp;#xff0c;并验证其准确性。&lt;/li&gt;&lt;li&gt;分析转录本的功能&amp;#xff1a;使用相关的生物信息学工具&amp;#xff0c;如RNA-seq数据库、预测转录因子结合位点等&amp;#xff0c;预测该转录本的功能。&lt;/li&gt;&lt;li&gt;判断该转录本的调控效应&amp;#xff1a;评估该转录本的表达与其他基因或蛋白质的相关性&amp;#xff0c;以确定该转录本的调控效应。&lt;/li&gt;&lt;li&gt;研究该转录本的作用机制&amp;#xff1a;利用细胞生物学、分子生物学等方法研究该转录本在肿瘤发生发展过程中的作用机制。&lt;/li&gt;&lt;li&gt;每一步分析的动机是为了更深入了解该转录本的功能和作用机制&amp;#xff0c;以便确定该转录本在肿瘤发生发展中的作用。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#算法#的问题：某团队通过转录组测序比较口腔颌面部肿瘤样本，鉴定出一个新的转录本序列，在肿瘤样本中显著高表达", ["某团队通过转录组测序比较口腔颌面部肿瘤样本，鉴定出一个新的转录本序列，在肿瘤样本中显著高表达。推测该转录本可能对口腔颌面部的发生发展具有重要意义。为进一步解析该分子的功能和作用机制，请，设计下游生物信息分析流程，并解释每一步分析的动机。不需要给出具体的实现细节。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先用数据构建一个堆&amp;#xff0c;然后不断调整非叶子节点&amp;#xff08;也就是数据之间相互比较&amp;#xff0c;用较大的数做为根节点并交换&amp;#xff0c;交换后记得检查相关的节点&amp;#xff09;&amp;#xff0c;保证较大树做为根&amp;#xff0c;然后弹出堆顶元素&amp;#xff08;与最后一个元素交换&amp;#xff0c;然后忽略已排好的元素就可以了&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/777360471556113.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/42638047155617.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["这个怎么构建最大堆并描述升序过程、", ["对关键字表为{16,5,9,17,2,8,33,10,6,90}的无序序列进行累堆排序(升序) ,请构建最大堆,并描述累堆排序过程"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这是因为B样条曲线是由多个B样条基函数组成的&amp;#xff0c;每个B样条基函数只影响以该点为中心的邻近4段曲线&amp;#xff0c;因此改动特征多边形上的一个顶点&amp;#xff0c;也只会影响以该点为中心的邻近4段曲线。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["b样条问题b样条b样条", ["根据B样条曲线表达式及B样条基函数的性质，分析对于三次B-样条曲线，改动特征多边形上的一个顶点，为何至多只影响以该点为中心的邻近4段曲线？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;5&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构导论二叉树度数", ["怎么做求解答"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;要在COMSOL中显示线性传输比例图像&amp;#xff0c;请按照以下步骤进行操作&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;点击“结果”选项卡&amp;#xff0c;选择要显示图像的结果集。&lt;/p&gt;\n&lt;p&gt;选择“表面绘图”或“体绘图”&amp;#xff0c;具体取决于您想要绘制的图像类型。&lt;/p&gt;\n&lt;p&gt;在“设置”窗口中&amp;#xff0c;找到“可视化”选项卡并单击。&lt;/p&gt;\n&lt;p&gt;在“颜色映射”下拉菜单中&amp;#xff0c;选择“传输比例”。&lt;/p&gt;\n&lt;p&gt;在“选择数据”下拉菜单中&amp;#xff0c;选择“线性传输比例”。&lt;/p&gt;\n&lt;p&gt;根据需要调整其他设置&amp;#xff0c;例如最小值和最大值&amp;#xff0c;颜色范围等。&lt;/p&gt;\n&lt;p&gt;单击“确定”以应用更改并显示线性传输比例图像。&lt;br /&gt;如果您的结果显示为透射率或吸收率图像&amp;#xff0c;您可以通过更改显示的结果类型来显示线性传输比例图像。在“结果”选项卡中&amp;#xff0c;选择“切换结果类型”选项卡&amp;#xff0c;然后选择“线性传输比例”作为结果类型。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["comsol的结果问题", ["在comsol里怎么显示线性传输比例图像？结果显示图像为透射率吸收率，怎么添加线性传输比例图像？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;单看这一部分&amp;#xff0c;只是在设置网络中的全连接层&amp;#xff0c;为了后续构造生成器模型进行训练&amp;#xff0c;详细说明为&amp;#xff1a;&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/qq_42079689/article/details/102873766\" id=\"textarea_1662125953344_1662126030163_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;PyTorch的nn.Linear&amp;#xff08;&amp;#xff09;详解_风雪夜归人o的博客-CSDN博客_nn.linear&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;  PyTorch的nn.Linear&amp;#xff08;&amp;#xff09;是用于设置网络中的全连接层的&amp;#xff0c;需要注意的是全连接层的输入与输出都是二维张量&amp;#xff0c;一般形状为[batch_size, size]&amp;#xff0c;不同于卷积层要求输入输出是四维张量。其用法与形参说明如下&amp;#xff1a;  in_features指的是输入的二维张量的大小&amp;#xff0c;即输入的[batch_size, size]中的size。  out_features指的是输出的二维张量的大小&amp;#xff0c;即...&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/qq_42079689/article/details/102873766&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["求解，if score_func == 1:", ["\n", "一个代码初学者，感觉是在求加权数的，求帮忙解释这些代码是什么意思🙏"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在 changecolor 方法中的 setStrokeColor 方法调用失败&amp;#xff0c;可能是由于前端未正确获取到线性覆盖物对象或未正确设置线性覆盖物的属性。&lt;br /&gt;可以在方法调用之前使用 console.log 或者 Vue.js 的开发工具来打印相关对象&amp;#xff0c;以确保正确获取到了对应的对象&amp;#xff0c;可以在 changecolor 方法中添加一些调试信息或者直接在浏览器的开发者工具中调试代码&amp;#xff0c;以确保 setStrokeColor 方法可以被正确调用&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["vue根据后端数据动态修改界面组件属性的问题", ["最近在用Vue-element-admin调用百度地图，创建了许多线性覆盖物：", "\n", "<", "script", ">", "\n", "import", " speedApi ", "from", " ", "'@/api/speedsearch'", "\n", "export", " ", "default", " ", "{\n ", " name", ": ", "'BmapDemo'", ",\n  data() {\n    ", "return", " {\n      options: [{\n        value: ", "'15'", ",\n        label: ", "'15分后'", "\n      }", ", ", "{\n        value: ", "'30'", ",\n        label: ", "'30分后'", "\n      }", ", ", "{\n        value: ", "'45'", ",\n        label: ", "'45分后'", "\n      }", ", ", "{\n        value: ", "'60'", ",\n        label: ", "'60分后'", "\n      }", "],\n      ", "value", ": ", "''", ",\n      ", "speedlist", ": ", "{\n       ", " id", ": ", "''", ",\n        fif: ", "''", ",\n        thir: ", "''", ",\n        fou: ", "''", ",\n        six: ", "''", "\n      }", "\n    }\n  },\n  mounted() ", "{\n    // ", "2", ". 创建地图示例\n    var ", "map", " = new ", "window", ".BMapGL.Map(", "'container'", ")\n    // ", "3", ". 设置中心点坐标\n    var point = new ", "window", ".BMapGL.Point(", "116.400747", ", ", "39.983412", ")\n    // ", "4", ". 地图初始化，同时设置地图展示级别\n    ", "map", ".centerAndZoom(point, ", "15", ")\n    // ", "5", ". 开启鼠标滚轮缩放\n    ", "map", ".enableScrollWheelZoom", "(true", ")\n    var scaleCtrl = new ", "window", ".BMapGL.ScaleControl() // 添加比例尺控件\n    ", "map", ".addControl(scaleCtrl)\n    var zoomCtrl = new ", "window", ".BMapGL.ZoomControl() // 添加缩放控件\n    ", "map", ".addControl(zoomCtrl)\n    var cityCtrl = new ", "window", ".BMapGL.CityListControl() // 添加城市列表控件\n    ", "map", ".addControl(cityCtrl)\n    ", "map", ".addEventListener(", "'click'", ", (data) => {\n      // point包含了经纬度\n      console.log(data.point)\n      // polyline17.setStrokeColor(", "'green'", ")\n    }", ")\n    ", "var", " polyline1 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360431", ", ", "39.992534", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360899", ", ", "39.987103", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline1)\n    ", "var", " polyline2 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360899", ", ", "39.987103", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360827", ", ", "39.982182", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline2)\n    ", "var", " polyline3 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.360827", ", ", "39.982182", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.361438", ", ", "39.973778", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline3)\n    ", "var", " polyline17 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.387632", ", ", "39.983316", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.38677", ", ", "39.974525", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.", "addOverlay", "(polyline17)\n    ", "var", " polyline16 = ", "new", " ", "window", ".", "BMapGL", ".", "Polyline", "([\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.386626", ", ", "39.988457", "),\n      ", "new", " ", "window", ".", "BMapGL", ".", "Point", "(", "116.387632", ", ", "39.983316", ")\n    ],\n    ", "{ strokeColor: ", "'blue'", ", strokeWeight: ", "6", ", strokeOpacity: ", "0", ".", "5", " }", "\n    )\n    map.addOverlay(polyline16)\n  },\n  methods: ", "{\n    changecolor", "(id", ", speed) {\n      ", "if", " (speed >= ", "5", ") {\n        ", "window", "[", "'polyline'", " +", " id", "].setStrokeColor(", "'green'", ")\n      }", " ", "else", " ", "if", " (speed >= ", "2", " && speed < ", "5", ") ", "{\n        ", "window", "[", "'polyline'", " +", " id", "].setStrokeColor(", "'yellow'", ")\n      }", " ", "else", " ", "{\n        ", "window", "[", "'polyline'", " +", " id", "].setStrokeColor(", "'red'", ")\n      }", "\n    },\n    paintmap() ", "{\n      speedApi.paintmap(this.", "value", ").", "then", "(response => {\n        this.speedlist = response.data.row\n        console.log(this.speedlist)\n        ", "for", " (var i = ", "0", "; i < this.speedlist.length; i++) {\n          ", "if", " (this.speedlist[i].fif != null) {\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].fif)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].fif)\n          }", " ", "else", " ", "if", " (", "this", ".", "speedlist", "[i].", "thir", " != ", "null", ") ", "{\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].thir)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].thir)\n          }", " ", "else", " ", "if", " (", "this", ".", "speedlist", "[i].", "fou", " != ", "null", ") ", "{\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].fou)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].fou)\n          }", " ", "else", " ", "{\n            ", "window", ".console.log(this.speedlist[i]", ".id", ")\n            ", "window", ".console.log(this.speedlist[i].six)\n            this.changecolor(this.speedlist[i]", ".id", ", this.speedlist[i].six)\n          }", "\n        }\n      })\n    }\n  }\n}\n", "</", "script", ">", "\n\n", "\n", "我的method里的changecolor是用来根据后端传回的ID和速度修改前端对应线性覆盖物的颜色的，但是运行一直报错，想请教下该怎么修改这个方法。", "这个是报错的内容"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;报错是关于优化设置的编译器警告信息&lt;br /&gt;1、首先检查代码中的错误&lt;/p&gt;\n&lt;p&gt;2、编译器优化设置&amp;#xff1a; &amp;#34;Current optimization/debug settings&amp;#34;&amp;#xff0c;检查当前的编译器优化设置是否正确。调整编译器的优化级别&amp;#xff0c;降低优化级别&amp;#xff0c;或者禁用某些优化选项&lt;/p&gt;\n&lt;p&gt;3、编译器的目标设置&amp;#xff1a;&amp;#34;#27010-D Not all available code size is b DCDCPlantF...&amp;#34; 和 &amp;#34;#27007-D Detecting compilation without DCDCPlantF...&amp;#34;&amp;#xff0c;这与编译器的目标设置有关。检查编译器的目标设置&amp;#xff0c;如目标芯片型号、编译器选项等是否正确配置&lt;/p&gt;\n&lt;p&gt;4、代码依赖关系&amp;#xff1a; &amp;#34;properties properties properties&amp;#34;&amp;#xff0c;是代码中存在的依赖关系问题导致的错误。检查代码中的依赖关系&amp;#xff0c;包括头文件引用、库文件链接等是否正确配置&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["ccs代码报错怎么办", ["\n", "在ccs代码《buck变换器线性化模型》中出现2个解决不了的bug，求帮忙"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;运行界面截个图看看呢&amp;#xff0c;除了这个press any key to continue&amp;#xff0c;还有啥&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["这个程序是顺序表（c++），建立学生信息表，现在的问题是程序不报错但是会出现’press any key to continue”", ["\n", "\n", "’press any key to continue” ’press any key to continue”", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;机器人的回答笑死了&amp;#xff0c;也不检查一下。。。哪里有什么乱七八糟的文字。&lt;br /&gt;第9题环形队列的话可以入队&amp;#xff0c;不然怎么叫环形。环形队列只需要检查队列不为空时&amp;#xff08;head和rear都是0&amp;#xff09;&amp;#xff0c;head和rear是否相等&amp;#xff0c;相等则说明队列已满&amp;#xff0c;不能入队。&lt;br /&gt;rear指针在i,j,k,l,m入队后就指向了0&amp;#xff0c;因为head和rear并不相同&amp;#xff0c;所以可以入队。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["假设CQ[0..10]是一个环形队列,初始状态为front=rear=0", ["假设CQ[0..10]是一个环形队列,初始状态为front=rear=0", "这两个第八题是不可以入队第二个可以入队吗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你得先说清楚你函数的意思啊。为啥要修改呢&amp;#xff1f;&amp;#xff1f;&amp;#xff1f;&lt;br /&gt;而且代码也没给完整&amp;#xff0c;你真有这需求&amp;#xff1f;&lt;br /&gt;if (flag &amp;#61; false)  这个flag从天而降&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["可不可以修改一下 但不改变函数意思 写一下解释", ["public void insert(Node head, Node new node)", "{", "boolean inserted = false; if (head == null) head = newnode; if (head.next==null) head.next=newnode; while(head.next!=null)", "{", "if (head.next.value>newnode.value)", "{", "Node temp = head.next; head.next=newnode; newnode.next=temp; inserted =true; break;", "\n", "else", "head = head.next;}", "if (flag = false)", "head.next=newnode"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你已经有t 值了&amp;#xff0c;那计算r 的话这个公式r&amp;#61;[t^2/(t^2&amp;#43;df)]^0.5 应该能看懂吧。df&amp;#61;n1&amp;#43;n2-2  ,n1,n2 就是两组样本的数量。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Meta分析t值、f值如何转换为r值？", ["很多文献只给了回归分析结果，有t值，但是不会转换为r值，比如这种：", "（n🟰561）", "\n", "还有这种", "\n", "\n", "再有的文献中写了怎么算，但是纯社科学渣一个，不会转换，那个自由度搞不清楚，比如：", "\n", "希望有有相关经验的朋友解释解释", "能算的话希望给个带入数值后的计算过程或者相关计算器", "万分感谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以看下帮助&amp;#xff0c;我不太懂‘x’这个参数设置的意义。&lt;a href=\"https://ww2.mathworks.cn/help/matlab/ref/diff.html\" id=\"textarea_1680106513806_1680106886750_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://ww2.mathworks.cn/help/matlab/ref/diff.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["MATLAB函数求导报错", ["不太明白MATLAB中diff()函数有什么要求。", "或者有其他问题？", "\n", "%%%% 牛顿迭代法求非线性方程实根%%%%%\nclc;\n", "clear", "\n", "format", " short\ns=", "in", "\nput(", "'请输入函数表达式：f = '", ",", "'s'", ");\n", "global", " f;\nf=inline(s,", "'x'", ");\nX = input(", "'请输入初始点:x0='", ");\nfai(X)\nfunction f1=fai(x)\n", "global", " f;\ntempf=diff(f,", "'x'", ");\nf1=x-f/tempf;\nend\n", "\n", "还没写完，", "下面是命令与报错：", "\n", "请输入函数表达式：f = x*x\n请输入初始点:", "x0", "=1\n检查对函数 ", "'diff'", " 的调用中是否存在不正确的参数数据类型或缺少参数。\n\n出错 Newtonian_iterative_method>fai (第 16 行)\n", "tempf", "=diff(f,'x');\n\n出错 Newtonian_iterative_method (第 9 行)\nfai(a)\n \n16  ", "tempf", "=diff(f,'x');\nK>> \n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://blog.csdn.net/weixin_64565994/article/details/125253331\" id=\"textarea_1677914859208_1677914925717_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://blog.csdn.net/weixin_64565994/article/details/125253331\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;&amp;#xff08;一&amp;#xff09;快速排序的最好情况O&amp;#xff08;nlogn&amp;#xff09;&lt;br /&gt;&amp;#xff08;二&amp;#xff09;快速排序的最坏情况O&amp;#xff08;n^2&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["快速排序的时间复杂性不受数据初始状态影响，恒为O(nlog2n)。", ["快速排序的时间复杂性不受数据初始状态影响，恒为O(nlog2n)。（", "【答案】错", "不是对的吗，哪里错了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个用pandas处理&amp;#xff0c;用pandas读取excel然后处理数据就行了&amp;#xff0c;pandas教程可以网上搜索一下&amp;#xff0c;具体的代码这个要结合数据才能写得出。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["stata数据排序分组求均值", ["将公司的四个指标分年度排序分成十组并赋值1-10，然后加总除以4得到平均值，这个数据都要经过怎么处理？代码要怎么写啊？", "实在是看不懂这个数据具体是怎么操作的，希望有大神能给出具体的解答，谢谢各位了😭"]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;第一题&amp;#xff0c;可以用头插法进行原地逆置&amp;#xff0c;按顺序遍历链表&amp;#xff0c;每遍历一个就插入到头结点的后面。&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;void reverseList(nodeList &amp;amp;L) {\n Node*p &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;,*tmp;\n L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; NULL;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;这里是为了保证最后一个结点指向NULL\n &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {&lt;!-- --&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;遍历链表\n     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;)\n         tmp &amp;#61; p-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n     &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n         tmp &amp;#61; NULL;\n     &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;插入到L头结点的后面\n     p-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt;;\n     L-&amp;gt;&lt;span class=\"hljs-keyword\"&gt;next&lt;/span&gt; &amp;#61; p;\n     p &amp;#61; tmp;\n }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;&lt;li&gt;第二题&lt;br /&gt;1&amp;#xff09;元素最多不会超过L长度&amp;#xff0c;我认为也可以插入到第0个数据之后&amp;#xff1a;i&amp;lt;0 || i&amp;gt;L.length&lt;br /&gt;2&amp;#xff09;初始化申请的最大空间为MAXSIZE&amp;#xff1a;L.length &amp;#61;&amp;#61; MAXSIZE&lt;br /&gt;3&amp;#xff09;把第i个后面的元素往后挪&amp;#xff0c;但数组下标从0开始所以是i-1&amp;#xff1a;j &amp;gt; i - 1&lt;br /&gt;4&amp;#xff09;数组下标从0开始所以第i&amp;#43;1个数位置是i下标&amp;#xff1a;L.elem[i] &amp;#61; e;&lt;br /&gt;5&amp;#xff09;L.length&amp;#43;&amp;#43;;&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["这些空怎么填啊，初学者 ，有几个不会，有没有人解，决一下，不知道怎么做 不知道 不知道怎么做", ["\n", "不知道怎么做，有没有人解决一下 ，我还是初学者不会这些题目，有没有人解决一下"]], "Tag": "算法设计"}
{"Answer": "&lt;h2 id=\"h2_你说的没错&amp;#xff0c;直接选择排序的时间复杂度是on2&amp;#xff0c;而不是on。因此&amp;#xff0c;如果题目中要求时间复杂度为on的排序方法&amp;#xff0c;直接选择排序并不符合要求。_1676439520601\"&gt;你说的没错&amp;#xff0c;直接选择排序的时间复杂度是O(n^2)&amp;#xff0c;而不是O(n)。因此&amp;#xff0c;如果题目中要求时间复杂度为O(n)的排序方法&amp;#xff0c;直接选择排序并不符合要求。&lt;/h2&gt;\n&lt;h2 id=\"h2_另外&amp;#xff0c;在稳定性方面&amp;#xff0c;直接选择排序是不稳定的&amp;#xff0c;因为在选择最小元素的过程中&amp;#xff0c;可能会破坏相同元素之间的顺序关系。例如&amp;#xff0c;在排序序列5-8-5-2-9中&amp;#xff0c;第一次选择最小元素2会把第一个5和2交换位置&amp;#xff0c;因此两个5的相对顺序被破坏了。_1676439520601\"&gt;另外&amp;#xff0c;在稳定性方面&amp;#xff0c;直接选择排序是不稳定的&amp;#xff0c;因为在选择最小元素的过程中&amp;#xff0c;可能会破坏相同元素之间的顺序关系。例如&amp;#xff0c;在排序序列[5, 8, 5, 2, 9]中&amp;#xff0c;第一次选择最小元素2会把第一个5和2交换位置&amp;#xff0c;因此两个5的相对顺序被破坏了。&lt;/h2&gt;\n&lt;p&gt;因此&amp;#xff0c;题目中说时间复杂度为O(n)的排序方法不稳定&amp;#xff0c;很可能是错别字或者表述不准确&amp;#xff0c;应该是说某个特定的O(n)排序方法不稳定&amp;#xff0c;而不是说所有O(n)排序方法都不稳定。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["在时间复杂度为O(n)的排序方法中", ["在时间复杂度为O(n)的排序方法中，（）排序方法是不稳定的。", "这个怎么是直接选择排序，它的时间复杂度不是O(n平方)吗‘"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;回归分析需要满足一些基本原则&amp;#xff0c;以便保证结果的有效性和准确性。&lt;/p&gt;\n&lt;p&gt;如果你使用家庭数据作为一个自变量&amp;#xff0c;但是这些数据是由同一家庭内的多个个人数据累加起来的&amp;#xff0c;这样的数据可能会存在共线性问题&amp;#xff0c;因为两个变量相关性过高&amp;#xff0c;导致估计的系数不可靠。&lt;/p&gt;\n&lt;p&gt;此外&amp;#xff0c;在使用多元回归分析时&amp;#xff0c;也需要考虑独立性原则&amp;#xff0c;即自变量间应该相互独立&amp;#xff0c;不存在多重共线性问题。&lt;/p&gt;\n&lt;p&gt;因此&amp;#xff0c;如果你想使用家庭数据作为自变量&amp;#xff0c;建议检验家庭数据和个人数据之间的关系&amp;#xff0c;以确保不存在共线性问题。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["回归分析的自变量数据单位必须同一口径吗？", ["在实证分析时运用到了charls数据库，数据库里面是家庭、个人以及社区三种标签，自变量一共有四组，其中三组是个人的数据，另外一组是家庭的数据，都是同一群人，家庭的数据是将同一家庭的个人数据累加起来了，回归分析也有结果，但是符合回归分析的原则吗？不知道有没有将问题讲清楚，希望大家可以帮个忙"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这类问题默认都来用顺序查询&amp;#xff0c;需要要求折半回明确表示。&lt;br /&gt;200/4&amp;#61;50块&lt;br /&gt;&amp;#xff08;1&amp;#43;50&amp;#xff09;/2&amp;#61;25.5&lt;br /&gt;&amp;#xff08;1&amp;#43;4&amp;#xff09;/2&amp;#61;2.5&lt;br /&gt;这是查找成功的情况&amp;#xff01;&lt;br /&gt;查找失败是&amp;#xff08;1&amp;#43;51&amp;#43;1&amp;#43;5&amp;#xff09;/2&amp;#61;29&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["一个文件包含了200个记录，若采用分块查找法，每块长度为4，则平均查找长度为", ["一个文件包含了200个记录，若采用分块查找法，每块长度为4，则平均查找长度为（28）。", "计算这个题目，它又没说是顺序查找还是折半查找所在块，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;下面是一个简单的例子&amp;#xff0c;展示了如何在C&amp;#43;&amp;#43;中使用Eigen库求解一个稀疏线性方程组&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;Eigen/Sparse&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;Eigen/Dense&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;// 创建稀疏矩阵和向量&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;Eigen::SparseMatrix&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;A&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;Eigen::VectorXd &lt;span class=\"hljs-title\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;// 设置矩阵和向量的值&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;// 创建求解器并求解方程组&lt;/span&gt;\n    Eigen::SparseLU&amp;lt;Eigen::SparseMatrix&amp;lt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;&amp;gt;&amp;gt; solver;\n    solver.&lt;span class=\"hljs-built_in\"&gt;analyzePattern&lt;/span&gt;(A);\n    solver.&lt;span class=\"hljs-built_in\"&gt;factorize&lt;/span&gt;(A);\n    Eigen::VectorXd x &amp;#61; solver.&lt;span class=\"hljs-built_in\"&gt;solve&lt;/span&gt;(b);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;接下来&amp;#xff0c;要把这个求解稀疏线性方程组的方法封装成dll&amp;#xff0c;在C#程序中调用。先要创建一个C&amp;#43;&amp;#43;的动态链接库&amp;#xff0c;其中包含你的求解方法。具体的步骤包括&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;创建一个新的C&amp;#43;&amp;#43;项目&amp;#xff0c;选择“DLL”作为项目类型。&lt;/li&gt;&lt;li&gt;在项目中添加您的求解方法的源代码。&lt;/li&gt;&lt;li&gt; 在项目属性中设置“生成-&amp;gt;配置类型”为“动态库(.dll)”&amp;#xff0c;以及其他必要的设置&amp;#xff0c;例如输出路径等。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;接下来要在C#程序中调用这个dll。具体的步骤包括&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;在C#程序中声明DllImport&amp;#xff0c;以便能够使用外部的dll。&lt;/li&gt;&lt;li&gt;创建一个C#类&amp;#xff0c;其中包含您要调用的C&amp;#43;&amp;#43;函数的签名。&lt;/li&gt;&lt;li&gt; 在C#程序中调用这个C&amp;#43;&amp;#43;函数。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;下面是一个简单的例子&amp;#xff0c;展示了如何在C#程序中调用你的C&amp;#43;&amp;#43;函数&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; System.Runtime.InteropServices;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;MyDll&lt;/span&gt;\n{\n    [&lt;span class=\"hljs-meta\"&gt;DllImport(&lt;span class=\"hljs-string\"&gt;&amp;#34;MyDll.dll&amp;#34;&lt;/span&gt;)&lt;/span&gt;]\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extern&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SolveSparseLinearEquation&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;\n        [In] &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n,\n        [In] &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] A,\n        [In] &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ia,\n        [In] &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ja,\n        [In] &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] b,\n        [Out] &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] x\n    &lt;/span&gt;)&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Example&lt;/span&gt;\n{\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-comment\"&gt;// 创建稀疏矩阵和向量&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] A &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ia &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[] ja &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[] x &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n\n        &lt;span class=\"hljs-comment\"&gt;// 设置矩阵和向量的值&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;// 调用C&amp;#43;&amp;#43;函数求解方程组&lt;/span&gt;\n        MyDll.SolveSparseLinearEquation(n, A, ia, ja, b, x);\n\n        &lt;span class=\"hljs-comment\"&gt;// 处理求解结果&lt;/span&gt;\n\n        &lt;span class=\"hljs-comment\"&gt;// ...&lt;/span&gt;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["找C++ C#的有缘人指导", ["想找一个会C++和C#的厉害的有缘人在线指导一下，最好还了解过Eigen库😭", "我现在需要用C++调用Eigen库，写一个求解稀疏线性方程组的方法，然后封装成dll在C#程序中调用，求指导😭快崩溃了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;up_and_down方法的第一条语句打印顺序是1,2,3,4&amp;#xff0c;最后一条语句打印是4,3,2,1&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["有一个递归函数不知道该怎么理解？", ["他最后这个输出结果到底是怎么从一变到四？然后从四再变到一的？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如果您只有问卷调查的选项占比数据&amp;#xff0c;而没有原始数据&amp;#xff0c;那么无法直接使用 SPSS 进行回归分析。回归分析需要使用原始数据&amp;#xff0c;即每个样本的具体数值。而选项占比只是一种统计数据&amp;#xff0c;无法直接作为回归分析的输入数据。&lt;/p&gt;\n&lt;p&gt;如果您想进行回归分析&amp;#xff0c;您需要从其他渠道获取原始数据。例如&amp;#xff0c;您可以重新进行一次问卷调查&amp;#xff0c;收集每个样本的具体数值&amp;#xff0c;然后使用 SPSS 进行回归分析。另外&amp;#xff0c;您也可以尝试从其他数据来源中获取相关数据&amp;#xff0c;比如已有的研究报告、公共数据集等等。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;回归分析需要根据具体问题和研究目的进行设计和分析&amp;#xff0c;并不是简单地将数据输入 SPSS 中就能得到结果。因此&amp;#xff0c;在进行回归分析前&amp;#xff0c;建议您充分了解回归分析的原理和方法&amp;#xff0c;制定合理的分析方案&amp;#xff0c;并选择适当的统计工具进行分析。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["SPSS只知道问卷调查的数据百分比，能做回归分析嘛", ["只知道问卷调查的数据百分比，比如第一个选项30％第二个选项15％第三个选项45％第四个选项10％，所有的问题都只知道选项占比，我想用这种选项占比做SPSS回归分析，能做嘛"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/108928394086129.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;这是代码块&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; matplotlib.pyplot as plt\n\n&lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; numpy as np\n\n&lt;span class=\"hljs-comment\"&gt;# 生成示例数据&lt;/span&gt;\nnp.random.seed(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;x&lt;/span&gt; &amp;#61; np.random.rand(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * x &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; np.random.randn(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;) * &lt;span class=\"hljs-number\"&gt;0.1&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 计算回归线&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;coef&lt;/span&gt; &amp;#61; np.polyfit(x, y, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;line_x&lt;/span&gt; &amp;#61; np.linspace(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;span class=\"hljs-attr\"&gt;line_y&lt;/span&gt; &amp;#61; np.polyval(coef, line_x)\n\n&lt;span class=\"hljs-comment\"&gt;# 绘制回归图和数据点&lt;/span&gt;\nplt.figure()\nplt.scatter(x, y)\n\n&lt;span class=\"hljs-comment\"&gt;# 绘制回归线&lt;/span&gt;\nplt.plot(line_x, line_y, &lt;span class=\"hljs-attr\"&gt;c&amp;#61;&amp;#39;g&amp;#39;)&lt;/span&gt;\n\n&lt;span class=\"hljs-comment\"&gt;# 绘制每个数据点到回归线的距离&lt;/span&gt;\nfor i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(x)):\n    &lt;span class=\"hljs-attr\"&gt;x_val&lt;/span&gt; &amp;#61; x[i]\n    &lt;span class=\"hljs-attr\"&gt;y_val&lt;/span&gt; &amp;#61; y[i]\n    &lt;span class=\"hljs-attr\"&gt;y_pred&lt;/span&gt; &amp;#61; np.polyval(coef, x_val)\n    plt.plot([x_val, x_val], [y_val, y_pred], &lt;span class=\"hljs-attr\"&gt;c&amp;#61;&amp;#39;r&amp;#39;)&lt;/span&gt;\n\nplt.show()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["画出线性回归图每个点到直线的距离", ["怎么画出每个点到直线的距离", "\n", "import", " numpy as np\n", "import", " matplotlib.pyplot as plt\nfrom scipy ", "import", " stats\n\n", "# 构造训练数据", "\n", "x", " = np.arange(", "0", "., ", "10", "., ", "0.2", ")\n", "m", " = len(x)\n", "x0", " = np.full(m, ", "1.0", ")\n", "input_data", " = np.vstack([x0, x]).T\n", "target_data", " = ", "2", " * x + ", "5", " + np.random.randn(m)\n\n", "# 终止条件", "\n", "loop_max", " = ", "10000", "  ", "# 最大迭代次数", "\n", "epsilon", " = ", "1", "e-", "3", "    ", "# 收敛条件最小值", "\n\n", "# 初始化权值", "\nnp.random.seed(", "0", ")\n", "theta", " = np.random.randn(", "2", ")\n", "alpha", " = ", "0.001", "  ", "# 步长", "\n", "diff", " = ", "0", ".\n", "error", " = np.zeros(", "2", ")\n", "count", " = ", "0", "  ", "# 循环次数", "\n", "finish", " = ", "0", "  ", "# 终止标志", "\n\n", "# 迭代", "\nwhile count < loop_max:\n    count += ", "1", "\n    ", "# 在标准梯度下降中，权值更新的每一步对多个样例求和，需要更多的计算", "\n    ", "sum_m", " = np.zeros(", "2", ")\n    for i ", "in", " range(m):\n        ", "dif", " = (np.dot(theta, input_data[i]) - target_data[i]) * input_data[i]\n        ", "# 当alpha取值过大时,sum_m会在迭代过程中会溢出", "\n        ", "sum_m", " = sum_m + dif\n\n    ", "# 注意步长alpha的取值,过大会导致振荡", "\n    ", "theta", " = theta - alpha * sum_m\n\n    ", "# 判断是否已收敛", "\n    ", "if", " np.linalg.norm(theta - error) < epsilon:\n        ", "finish", " = ", "1", "\n        break\n    ", "else", ":\n        ", "error", " = theta\n\n    print('迭代次数 = %d' % count, '\\t w:', theta)\nprint('迭代次数 = %d' % count, '\\t w:', theta)\n\n", "# 用scipy线性回归进行检查", "\nslope, intercept, r_value, p_value, ", "slope_std_error", " = stats.linregress(x, \n                                                                       target_data)\nprint('截距 = %s 斜率 = %s' % (intercept, slope))\n\n", "# 用plot进行展示", "\nplt.plot(x, target_data, 'b*')\nplt.plot(x, theta[", "1", "] * x + theta[", "0", "], 'r')\nplt.xlabel(", "\"x\"", ")\nplt.ylabel(", "\"y\"", ")\nplt.show()\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;个数&amp;#xff1a;从1000--500--250--125--63--37 -- 19--9--5--3--2&amp;#xff0c;第一个比较的数是第1000个数据&amp;#xff0c;所以是11个单元&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构导论数列二分查找法", ["\n", "为什么选C？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这题不是让你把f(x)的函数形式表达出来&amp;#xff0c;而是让你根据曲线图把g(x), h(x), k(x)函数是怎样从f(x)变换得到的关系写出来。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;g&lt;/span&gt;(x) &amp;#61; f(x-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;h&lt;/span&gt;(x) &amp;#61; -f(x-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;k&lt;/span&gt;(x) &amp;#61; -&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;.&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt; * f(-x -&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["这种波浪函数的表达式怎么求", ["初步构想是使用三角函数的模板，构造一个类似的函数，但是不清楚是否可行"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你没有设置&amp;#xff0c;既然想显示年-月-日&amp;#xff0c;那就要设置date()函数的第二个参数如date(date, &amp;#34;YMD&amp;#34;)&lt;br /&gt;这里的YMD意思就是year month date即年月日 &lt;a href=\"https://cloud.tencent.com/developer/news/574226\" id=\"textarea_1676123100575_1676124524807_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://cloud.tencent.com/developer/news/574226&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["stata回归导入日期处理", ["为什么在excel里面是年、月、日，导入stata之后就变成了日、月、年", "？然后用date命令，结果显示的全是一个点"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;聚类分析例程&amp;#xff0c;你将X换成你的数据就可以用&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;%Matlab程序如下&amp;#xff1a;\nX&amp;#61;[&lt;span class=\"hljs-number\"&gt;244.42&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;412.04&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;459.63&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;512.21&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;160.45&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;43.51&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;89.93&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;48.55&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;48.63&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;435.77&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;724.85&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;376.04&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;381.81&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;210.39&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;71.82&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;150.64&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;23.74&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;188.28&lt;/span&gt;\n&lt;span class=\"hljs-number\"&gt;321.75&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;665.80&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;157.94&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;172.19&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;147.16&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;52.44&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;78.16&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;10.90&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;93.50&lt;/span&gt;                                                                       \n&lt;span class=\"hljs-number\"&gt;152.29&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;258.60&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;83.42&lt;/span&gt;      &lt;span class=\"hljs-number\"&gt;85.10&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;75.74&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;26.75&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;63.47&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;5.89&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;47.02&lt;/span&gt;                                                                \n&lt;span class=\"hljs-number\"&gt;347.25&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;332.59&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;157.32&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;172.48&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;115.16&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;33.80&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;77.27&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;8.69&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;79.01&lt;/span&gt;                                                                    \n&lt;span class=\"hljs-number\"&gt;145.40&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;143.54&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;97.40&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;100.50&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;43.28&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;17.71&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;51.03&lt;/span&gt;       &lt;span class=\"hljs-number\"&gt;5.41&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;62.03&lt;/span&gt;                                                                  \n&lt;span class=\"hljs-number\"&gt;442.20&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;665.33&lt;/span&gt;    &lt;span class=\"hljs-number\"&gt;411.89&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;429.88&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;115.07&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;87.45&lt;/span&gt;   &lt;span class=\"hljs-number\"&gt;145.25&lt;/span&gt;     &lt;span class=\"hljs-number\"&gt;21.39&lt;/span&gt;  &lt;span class=\"hljs-number\"&gt;187.77&lt;/span&gt; ]&lt;span class=\"hljs-string\"&gt;&amp;#39;;\nY&amp;#61;pdist(X);\nSF&amp;#61;squareform(Y);\nZ&amp;#61;linkage(Y,&amp;#39;&lt;/span&gt;averag&lt;span class=\"hljs-string\"&gt;e&amp;#39;);\ndendrogram(Z);\nT&amp;#61;cluster(Z,&amp;#39;&lt;/span&gt;maxclust&lt;span class=\"hljs-string\"&gt;&amp;#39;,3)\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;详细参考&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/henu111/article/details/81512314\" id=\"textarea_1652333098980_1652333199332_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/henu111/article/details/81512314&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数学建模萌新小白求救", ["有20个土壤样品，分别给出5个变量的观测数据如下表所示，利用系统聚类法对其进行样品聚类分析"]], "Tag": "算法设计"}
{"Answer": "&lt;h4 id=\"h4_以下内容部分参考chatgpt模型&amp;#xff1a;_1681139395263\"&gt;以下内容部分参考ChatGPT模型&amp;#xff1a;&lt;/h4&gt;\n&lt;hr /&gt;\n&lt;p&gt;要计算影像组学R_Score评分&amp;#xff0c;可以按照以下步骤进行&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;确定特征对应的回归系数&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;使用机器学习算法训练模型&amp;#xff0c;得到特征与目标变量之间的关系&amp;#xff0c;从而得到每个特征对应的回归系数。&lt;/p&gt;\n&lt;ol start=\"2\"&gt;&lt;li&gt;计算每个影像组学评分&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;对于每个影像组学数据样本&amp;#xff0c;将其特征值代入回归方程中&amp;#xff0c;得到对目标变量的预测值&amp;#xff0c;即影像组学评分。&lt;/p&gt;\n&lt;ol start=\"3\"&gt;&lt;li&gt;线性组合计算总评分&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;将所有影像组学评分进行线性组合&amp;#xff0c;得到总评分。&lt;/p&gt;\n&lt;p&gt;以下是一个简单的例子&amp;#xff0c;使用线性回归算法训练模型&amp;#xff0c;计算影像组学R_Score评分&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;from sklearn.linear_model &lt;span class=\"hljs-built_in\"&gt;import&lt;/span&gt; LinearRegression\n\n&lt;span class=\"hljs-comment\"&gt;# 训练模型&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;X&lt;/span&gt; &amp;#61; [[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]] &lt;span class=\"hljs-comment\"&gt;# 特征矩阵&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;y&lt;/span&gt; &amp;#61; [&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;] &lt;span class=\"hljs-comment\"&gt;# 目标变量&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;model&lt;/span&gt; &amp;#61; LinearRegression().fit(X, y)\n\n&lt;span class=\"hljs-comment\"&gt;# 计算每个影像组学评分&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;image_features&lt;/span&gt; &amp;#61; [[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;], [&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]]\n&lt;span class=\"hljs-attr\"&gt;image_scores&lt;/span&gt; &amp;#61; model.predict(image_features)\n\n&lt;span class=\"hljs-comment\"&gt;# 线性组合计算总评分&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;total_score&lt;/span&gt; &amp;#61; sum(image_scores)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;以上代码中&amp;#xff0c;首先使用LinearRegression算法训练模型&amp;#xff0c;得到每个特征对应的回归系数。然后&amp;#xff0c;将影像组学数据样本的特征值代入回归方程中&amp;#xff0c;得到对目标变量的预测值&amp;#xff0c;即影像组学评分。最后&amp;#xff0c;将所有影像组学评分进行线性组合&amp;#xff0c;得到总评分。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h3 id=\"h3_如果我的建议对您有帮助、请点击采纳、祝您生活愉快_1681139395305\"&gt;如果我的建议对您有帮助、请点击采纳、祝您生活愉快&lt;/h3&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["影像组学评分R_Score", ["用Python要怎么计算影像组学R_Score评分呀！", "（选定特征对应的回归系数，将所有影像组学评分经过线性组合计算出来）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误是因为在运行bwselect时参数不正确导致的。建议检查以下几个方面&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;参数 y、v、c(0) 是否正确。其中 y 和 v 是必须参数&amp;#xff0c;分别表示原始数据集和输出数据集。c(0) 是一个可选参数&amp;#xff0c;表示颜色变量&amp;#xff0c;如果原始数据集没有颜色变量&amp;#xff0c;可以省略该参数。&lt;/p&gt;\n&lt;p&gt;kernel(uni)bwselect(meserd) 中的参数是否正确。其中 kernel 表示使用的核函数&amp;#xff0c;这里是指使用的是 univariate 核函数&amp;#xff1b;bwselect 表示带宽选择方法&amp;#xff0c;这里是指使用的是 meserd 带宽选择方法。&lt;/p&gt;\n&lt;p&gt;检查是否已经安装了 bwselect 插件。可以使用命令 findit bwselect 来查找并安装 bwselect 插件。如果已经安装了插件&amp;#xff0c;可以尝试更新插件并重新运行命令。&lt;/p&gt;\n&lt;p&gt;如果以上都检查过了还是无法解决问题&amp;#xff0c;建议提供更详细的错误信息和数据集以便进行更具体的排查。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["stata bwselect报错", ["求问！stata 做断点回归", "运行这个 rdbwselect y v, c(0) kernel(uni) bwselect(mserd)", "一直出现   bwselect() incorrectly specified  已安装外部命令"]], "Tag": "算法设计"}
{"Answer": "&lt;ol&gt;&lt;li&gt;summarize *&lt;/li&gt;&lt;li&gt; summarize salary age comten sales profits mktval&lt;/li&gt;&lt;li&gt;bysort grad : summarize ceoten&lt;/li&gt;&lt;li&gt;graph hbox salary&lt;/li&gt;&lt;/ol&gt;\n&lt;p&gt;gen losalary &amp;#61; log(salary)&lt;br /&gt;graph hbox losalary&lt;br /&gt;5. scatter salary sales&lt;br /&gt;6. scatter sales profits salary, mstyle(p9 p8)&lt;br /&gt;7. scatter sales profits salary, msymbol(O X p) mcolor(green blue black) msize(medium medium medium)&lt;br /&gt;8.  scatter sales profits salary, c(l) legend(pos(5) ring(0) col(1) lab(1 “ sales  ”) lab(2 “ profits ”)&lt;/p&gt;\n&lt;blockquote&gt;\n&lt;p&gt;)&lt;br /&gt;9. quietly regress salary sales&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;p&gt;. predict hat&lt;/p&gt;\n&lt;p&gt;. predict stdf&lt;/p&gt;\n&lt;p&gt;. generate lo&amp;#61;hat-1.96*stdf&lt;/p&gt;\n&lt;p&gt;. generate hi&amp;#61;hat&amp;#43;1.96*stdf&lt;/p&gt;\n&lt;p&gt;. scatter salary sales || line hat lo hi sales , pstyle(p2 p3 p3) sort&lt;/p&gt;\n&lt;ol start=\"10\"&gt;&lt;li&gt; scatter salary sales || lfit salary sales&lt;/li&gt;&lt;/ol&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["用stata进行统计图形", ["用stata", "文件CEOSAL2.dta包含了177位首席执行官的数据，可以用来考查企业业绩对CEO薪水的影响。", "  要求：", "  1.描述整个数据文件，获得对变量的基本理解。", "2.对salary、age、comten、sales、profits、mktval等5个变量进行统计描述，要求必须包含最大值、最小值和平均数3个统计量。", "3.要求对研究生和非研究生（变量是grade）CEO进行对比描述。", "4.利用箱线图找出salary和log(salary)的可疑异常值。", "5.绘制salary和sales的散点图。", "6.绘制salary和sales以及salary与profits的散点图，要求前者使用整体样式p9，后者使用整体样式p8.", "7.绘制salary和sales以及salary与profits的散点图，要求散点图形状前者选择实心圆，后者选择大写字母X；散点颜色前者选择绿色，后者选择蓝色；散点大小均选择中等。", "8.绘制salary和sales以及salary与profits的散点图，要求将图例放置在五点钟方向，同时图例排成一列。", "9.通过散点图和曲线图的复合来绘制salary对sales一次线性回归的95%的预测置信区间。", "10绘制复合图，包括salary对sales的散点图以及salary对sales的一次拟合图。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;把代码发给我看看&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["R语言tb1.contineous.normal函数是哪个R包的？", ["各位，苦找这函数的R包却不得", "希望得到各位解惑～", "tb1.contineous.normal", "tb1.categorial", "tb1.contineous.not.normal", "\n", "源代码如下：", "\n", "chtable <-  function (design, ", "cv", " = NULL, cv.", "nn", " = NULL, ", "gv", " = NULL, ", "by", " = NULL, \n                     ", "c_meanSQse", " = FALSE, ", "c_meanPMse", " = FALSE, ", "c_ci", " = FALSE, ", "g_N", " = FALSE, \n                     ", "g_percent", " = FALSE, ", "g_perSQse", " = FALSE, ", "g_NSQper", " = FALSE, ", "g_nSQper", " = FALSE, \n                     ", "g_ci", " = FALSE, ", "g_direction", " = ", "\"v\"", ", ", "total", " = FALSE, ", "round", " = ", "2", ", \n                     ", "view", " = T, ", "xlsx", " = NULL) \n{\n  ck.by <- list(", "cv", " = cv, ", "gv", " = gv, cv.", "nn", " = cv.nn, ", "by", " = by)\n  (ck.by <- ck.by[!sapply(ck.by, is.", "null", ")])\n  ", "if", " (length(ck.by) > ", "1", ") {\n    for (i ", "in", " ", "1", ":(length(ck.by) - ", "1", ")) {\n      for (j ", "in", " (i + ", "1", "):length(ck.by)) {\n        ", "if", " (names(ck.by)[i] == ", "\"cv\"", " & names(ck.by)[j] == \n            ", "\"cv.nn\"", ") \n          (next)(j)\n        ck.common <- set::", "and", "(ck.by[[i]], ck.by[[j]])\n        ", "if", " (length(ck.common) > ", "0", ") \n          stop(names(ck.by)[i], ", "\" and \"", ", names(ck.by)[j], \n               ", "\" have the same variable: \"", ", paste0(ck.common, \n                                                   ", "collapse", " = ", "\", \"", "))\n      }\n    }\n  }\n  v <- c(cv, cv.nn, gv)\n  lv <- set::not(v, colnames(design$variables))\n  ", "if", " (length(lv) > ", "0", ") {\n    ", "if", " (do::cnOS()) \n      stop(tmcn::toUTF8(", "\"变量 \"", "), paste0(lv, ", "collapse", " = ", "\", \"", "), \n           tmcn::toUTF8(", "\" 输入错误\"", "))\n    ", "if", " (!do::cnOS()) \n      stop(", "\"variable \"", ", paste0(lv, ", "collapse", " = ", "\", \"", "), ", "\" not exist\"", ")\n  }\n  r1 <- NULL\n  ", "if", " (!is.", "null", "(cv)) {\n    r1 <- tb1.contineous.normal(design, cv, by, ", "meanSQse", " = c_meanSQse, \n                                ", "meanPMse", " = c_meanPMse, ", "ci", " = c_ci, total, round)\n  }\n  r2 <- NULL\n  ", "if", " (!is.", "null", "(cv.nn)) {\n    r2 <- tbl.contineous.not.normal(design, cv.nn, by, total, \n                                    round)\n  }\n  r3 <- NULL\n  ", "if", " (!is.", "null", "(gv)) {\n    r3 <- tb1.categorial(design, ", "x", " = gv, by, ", "value", " = g_N, \n                         ", "per", " = g_percent, ", "perSQse", " = g_perSQse, ", "NSQper", " = g_NSQper, \n                         ", "nSQper", " = g_nSQper, ", "ci", " = g_ci, ", "direction", " = g_direction, \n                         ", "total", " = total, round)\n  }\n  r <- plyr::rbind.fill(r1, r2)\n  r <- plyr::rbind.fill(r, r3)\n  row.names(r) <- NULL\n  ", "if", " (view) \n    nhs_view.svytableone(r)\n  r$variable <- do::Replace(r$variable, ", "\"~~~~\"", ", ", "\"    \"", ")\n  ", "if", " (!is.", "null", "(xlsx)) {\n    header_bold <- openxlsx::createStyle(", "textDecoration", " = ", "\"Bold\"", ")\n    wb <- openxlsx::createWorkbook()\n    openxlsx::addWorksheet(wb, ", "\"Sheet1\"", ")\n    for (i ", "in", " ", "1", ":ncol(r)) {\n      openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = colnames(r)[i], \n                          ", "startCol", " = i, ", "startRow", " = ", "1", ", ", "headerStyle", " = header_bold)\n      ", "if", " (", "i", " == ", "1", ") {\n        for (j ", "in", " ", "1", ":nrow(r)) {\n          ", "if", " (do::left(r[j, i], ", "4", ") == ", "\"    \"", ") {\n            openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[j, \n                                                     i], ", "startCol", " = i, ", "startRow", " = j + ", "1", ")\n          }\n          ", "else", " {\n            openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[j, \n                                                     i], ", "startCol", " = i, ", "startRow", " = j + ", "1", ", ", "headerStyle", " = header_bold)\n          }\n        }\n      }\n      ", "else", " ", "if", " (grepl(", "\"p\"", ", colnames(r)[i], T)) {\n        for (j ", "in", " ", "1", ":nrow(r)) {\n          ", "if", " (nchar(r[j, i]) > ", "0", ") {\n            ii <- tryCatch(as.numeric(r[j, i]), ", "warning", " = function(w) ", "\"w\"", ")\n            ", "if", " ((", "ii", " == ", "\"w\"", " | ii <= ", "0.05", ") & r[j, i] != \n                ", "\"ref\"", ") {\n              openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = ii, \n                                  ", "startCol", " = i, ", "startRow", " = j + ", "1", ", ", "headerStyle", " = header_bold)\n            }\n          }\n          ", "else", " {\n            openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[j, \n                                                     i], ", "startCol", " = i, ", "startRow", " = j + ", "1", ")\n          }\n        }\n      }\n      ", "else", " {\n        openxlsx::writeData(wb, ", "sheet", " = ", "1", ", ", "x", " = r[, i], \n                            ", "startCol", " = i, ", "startRow", " = ", "2", ")\n      }\n    }\n    openxlsx::saveWorkbook(wb, xlsx, ", "overwrite", " = TRUE)\n  }\n  invisible(r)\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt; &amp;#61; int(input())\n&lt;span class=\"hljs-attribute\"&gt;for&lt;/span&gt; i in range(n):\n    &lt;span class=\"hljs-attribute\"&gt;row&lt;/span&gt; &amp;#61; list(range(n * i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,(i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) * n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))\n    &lt;span class=\"hljs-attribute\"&gt;if&lt;/span&gt; i % &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-attribute\"&gt;row&lt;/span&gt; &amp;#61; row[::-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]\n    &lt;span class=\"hljs-attribute\"&gt;print&lt;/span&gt;(row)\n\n&lt;span class=\"hljs-attribute\"&gt;5&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[1, 2, 3, 4, 5]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[10, 9, 8, 7, 6]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[11, 12, 13, 14, 15]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[20, 19, 18, 17, 16]&lt;/span&gt;&lt;span class=\"hljs-meta\"&gt;\n[21, 22, 23, 24, 25]&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#python#的问题", ["螺旋矩阵形式如下：必须按照同等形势", "5阶螺旋矩阵：", "【12345】", "【109876】", "[1112131415】", "【2019181716】", "【2122232425】", "求 n 阶螺旋矩阵的行列式。 n 由用户输入，程序输出螺旋矩阵及其行列式。", "要求：行列式的求法是线性代数的知识；螺旋矩阵的生成必须采用列表递推式；本程序不能使用除了 random 库之外的其它库"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;具体的没理解你最终需要的效果&amp;#x1f602;&amp;#xff0c;只发表一下自己的见解&amp;#xff1a;arcgis作图基本都是空间上展示&amp;#xff08;比如一个地域上的平面差异等&amp;#xff09;&amp;#xff0c;如果想要展现时间上的差异&amp;#xff0c;我觉得要么就是多时序的图片显示&amp;#xff0c;或者直接显示一段时间内的差异变化吧。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["arcgis每年递增的数据如何统一图例？", ["类似于gdp之类每年递增的数据，用arcgis作图如果按照自动分级的方法，感觉就不能体现出时间演变的趋势了，能否通过统一尺度的方法在地图中也展示出时间的演变趋势（色块的深浅）？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;数据比较可以简单的画一个图.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/736531889036152.png\" /&gt;&lt;/p&gt;&lt;br /&gt;。但是根据查找的大小。有些节点是大可不必画的。&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构二叉排序树查找元素比较次数", ["这样的题该如何做，求详细步骤"]], "Tag": "算法设计"}
{"Answer": "&lt;h4 id=\"h4_以下内容部分参考chatgpt模型&amp;#xff1a;_1681259182330\"&gt;以下内容部分参考ChatGPT模型&amp;#xff1a;&lt;/h4&gt;\n&lt;hr /&gt;\n&lt;p&gt;在使用Python中linregress函数做线性回归时&amp;#xff0c;可以使用pandas库中的fillna()函数将缺失值填充为0或者均值、中位数等统计量。在进行线性回归时&amp;#xff0c;需要将缺失值对应的数据点剔除掉&amp;#xff0c;可以使用numpy库中的isnan()函数将缺失值对应的位置找出来&amp;#xff0c;然后使用pandas库中的dropna()函数将对应的数据点剔除掉。下面是一个简单的例子&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-title\"&gt;from&lt;/span&gt; scipy.stats &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; linregress\n\n&lt;span class=\"hljs-meta\"&gt;# 创建一个时间序列数据&amp;#xff0c;包含缺失值&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; pd.&lt;span class=\"hljs-type\"&gt;Series&lt;/span&gt;([1, 2, &lt;span class=\"hljs-title\"&gt;np&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;nan&lt;/span&gt;, 4, 5, 6, &lt;span class=\"hljs-title\"&gt;np&lt;/span&gt;.&lt;span class=\"hljs-title\"&gt;nan&lt;/span&gt;, 8, 9, 10])&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 将缺失值填充为0&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;.fillna(0)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 找出缺失值对应的位置&amp;#xff0c;剔除掉&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;mask&lt;/span&gt; &amp;#61; np.isnan(&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;)&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt; &amp;#61; np.arange(len(&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;))[~mask]&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;y&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;[~mask]&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;# 进行线性回归&lt;/span&gt;\n&lt;span class=\"hljs-title\"&gt;slope&lt;/span&gt;, intercept, r_value, p_value, std_err &amp;#61; linregress(x, y)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;在上面的例子中&amp;#xff0c;我们将缺失值填充为0&amp;#xff0c;然后使用isnan()函数找出缺失值对应的位置&amp;#xff0c;使用~mask可以将True和False进行反转&amp;#xff0c;得到非缺失值对应的位置&amp;#xff0c;然后从原始数据中取出对应的x和y&amp;#xff0c;进行线性回归。&lt;/p&gt;\n&lt;hr /&gt;\n&lt;h3 id=\"h3_如果我的建议对您有帮助、请点击采纳、祝您生活愉快_1681259182358\"&gt;如果我的建议对您有帮助、请点击采纳、祝您生活愉快&lt;/h3&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["Python用linregress时，我有缺失值，改怎么处理", ["在使用Python中linregress函数做线性回归时，我的时间序列数据中有缺失值，而且不同点的缺失值不一样，该怎么处理"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用最小二乘法或梯度下降法来比较和判断。&lt;br /&gt;case {1,&amp;#39;l&amp;#39;,&amp;#39;linear&amp;#39;}&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    N &amp;#61; size(x,1);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    bp &amp;#61; unique([1; double(bp(:)); N]);   % Include both endpoints&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    bp &amp;#61; bp(bp &amp;gt;&amp;#61; 1 &amp;amp; bp &amp;lt;&amp;#61;N);   % Should error in the future&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    lbp &amp;#61; length(bp);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    % Build regressor with linear pieces &amp;#43; DC&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;#61; zeros(N,lbp,class(x));&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a(1:N,1) &amp;#61; (1:N)./N;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for k &amp;#61; 2:(lbp-1)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        M &amp;#61; N - bp(k);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        a((bp(k)&amp;#43;1):end,k) &amp;#61; (1:M)./M;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    end&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a(1:N,end) &amp;#61; 1;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    y &amp;#61; x - a*(a\\x);   % Remove best fit&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["min f=||ax+bv³||2，迭代求a,b参数，x,v是自变量", ["如题，x,v是其它函数g(x,v)的值，g(x,v)已知且只能求出数值解，要用什么优化办法得到a,b参数，使得目标函数最小啊，就主要不知道x,v数值很多的情况下怎么优化。我看的优化方法都是a,b已知，求x,v的，比如f=3x+2v³这种，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第二生产总值的估计系数为负&amp;#xff0c;可能表明第二产业和港口吞吐量之间存在负相关关系。但是&amp;#xff0c;这并不能说明第二产业对港口吞吐量有负向影响。这只是一个单独的统计结论&amp;#xff0c;需要进一步考虑其他因素和数据&amp;#xff0c;并进行完整的统计分析和经济解释才能得出结论。另外&amp;#xff0c;由于第二产业比重却是显著正向的&amp;#xff0c;这可能表明在模型中缺少一些重要的影响因素或者数据有偏差&amp;#xff0c;导致结果的不一致。建议进行进一步的数据清理。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["第二生产总值的估计系数为负，但是第二生产总值比重却是正的，我这个固定效应回归模型是正常的吗？", ["港口吞吐量作为因变量，stata，面板数据是从1999-2021的不平稳面板数据。回归后很多估计指标不显著。然后通过控制数据选取范围，把估计系数的p值降到只有两个不显著，但是有一个第二产业的符号是负的 它这个指标的p值是0.042，这是不是说明，第二产业对港口吞吐量的作用是负向的？是不是不合理？因为跟通常的说法不一样。然而第二产业比重却是显著正向的。我是哪里错了？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;豪斯曼检验是用来检验随机效应模型是否适用于数据的一种方法&amp;#xff0c;它的基本原理是在随机效应和固定效应两种假设下&amp;#xff0c;比较不同变量的F值&amp;#xff0c;来确定哪种假设更适合数据。&lt;/p&gt;\n&lt;p&gt;针对你的情况&amp;#xff0c;有两个被解释变量&amp;#xff0c;你可以将其分别作为因变量&amp;#xff0c;进行两次豪斯曼检验。在每次检验中&amp;#xff0c;自变量C和四个控制变量保持不变&amp;#xff0c;分别计算出A和B的F值&amp;#xff0c;并比较其显著性水平&amp;#xff0c;以确定哪种假设更适用于对应的因变量。&lt;/p&gt;\n&lt;p&gt;如果A适合固定效应而B适合随机效应&amp;#xff0c;这意味着你需要使用混合效应模型来进行多元线性回归&amp;#xff0c;其中A作为固定效应&amp;#xff0c;B作为随机效应。&lt;/p&gt;\n&lt;p&gt;需要注意的是&amp;#xff0c;多元线性回归分析的结果需要在豪斯曼检验的基础上综合考虑&amp;#xff0c;不能仅仅依据单个因变量的结果来确定模型的类型。另外&amp;#xff0c;豪斯曼检验只是一种基于统计方法的判断&amp;#xff0c;对于复杂数据情况下的模型选择&amp;#xff0c;还需要结合实际问题进行综合分析。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["有两个因变量应该怎么进行豪斯曼检验", ["如果有两个因变量A和B，一个自变量C，四个控制变量，应该如何做豪斯曼检验？", "我现在阶段是将两个被解释变量拆开，解释变量和控制变量都不变，分别进行检验,但结果显示一个p小于0.05，适合用固定效应，另一个大于它，适合随机效应", "但是我需要进行多元线性回归，这个样子的话就不知道应该怎么进行了", "请问有人知道如何处理吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;def line(a:tuple, b:tuple)-&amp;gt;list&lt;span class=\"hljs-comment\"&gt;[tuple]&lt;/span&gt;:\n    if a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;:return &lt;span class=\"hljs-comment\"&gt;[(a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;,a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;i) for i in range(b&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;1)]&lt;/span&gt;\n    if a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#61;&amp;#61;b&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;:return &lt;span class=\"hljs-comment\"&gt;[(a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;i,a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;) for i in range(b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;1)]&lt;/span&gt;\n    if a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;gt;b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;:a,b&amp;#61;b,a\n    return &lt;span class=\"hljs-comment\"&gt;[(a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;i, int(a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;i*(b&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;)/(b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;))) for i in range(b&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;-a&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;&amp;#43;1)]&lt;/span&gt;\n\na &amp;#61; (10,10)\nb &amp;#61; (40,10)\nc &amp;#61; (20,30)\n\nac&amp;#61;line(a,c)\nbc&amp;#61;line(b,c)\nab&amp;#61;line(a,b)\n\nfor x, y in zip(ac&amp;#43;bc&lt;span class=\"hljs-comment\"&gt;[1:]&lt;/span&gt;, ab):\n    for i in range(x&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;-y&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;1):\n        print((y&lt;span class=\"hljs-comment\"&gt;[0]&lt;/span&gt;,y&lt;span class=\"hljs-comment\"&gt;[1]&lt;/span&gt;&amp;#43;i))\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["关于#python#的问题：要求通过python编程，遍历三角区域内所有的整数点坐标", ["python遍历一个区域内的全部整数点并打印出来", "\n", "看图", "\n", "已知条件：在直角坐标系内有一个三角形，并直到三角形三个点的坐标位置。", "要求通过python编程，遍历三角区域内所有的整数点坐标，并打印出来。", "简洁快速，可以遍历方向都可以只要能遍历出来并打印即可"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这两个单词大小写错了&amp;#xff0c;跟你定义的不一致&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["数据结构线性表代码出现错误", ["出现了错误不知道怎么改", "Use of undeclared identifier ‘MaxSize’", "Unknown type name‘S q li s t’"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个错误通常是由于在模型训练过程中发生了数据类型或形状不匹配的错误导致的。要解决这个问题&amp;#xff0c;需要检查代码中的数据处理部分&amp;#xff0c;以确保输入和输出的形状和数据类型与模型的期望相匹配。&lt;br /&gt;以下是一些可能导致此错误的常见原因和解决方法&amp;#xff1a;&lt;br /&gt;&amp;#xff08;1&amp;#xff09;输入数据的形状或数据类型与模型期望的不匹配。检查输入数据的形状和数据类型&amp;#xff0c;并确保它们与模型期望的相同。&lt;br /&gt;&amp;#xff08;2&amp;#xff09;数据预处理或增强的过程中发生错误&amp;#xff0c;导致生成的数据形状或数据类型与模型期望的不匹配。检查数据预处理和增强代码&amp;#xff0c;并确保生成的数据与模型期望的形状和数据类型相同。&lt;br /&gt;&amp;#xff08;3&amp;#xff09;使用了不支持的数据类型或操作。检查代码中使用的所有数据类型和操作&amp;#xff0c;并确保它们都是支持的。&lt;/p&gt;", "Konwledge_Point": "线性规划和规约", "Question": ["（python）如何解决 ValueError: in user code:这个问题，能解决一下吗？", ["\nmodel = Sequential()\n", "#conv layer", "\nmodel.", "add", "(Conv2D(6,(5,5),activation = ", "'relu'", "))\n", "#Maxpooling layer", "\nmodel.", "add", "(MaxPooling2D(pool_size=(2, 2), ", "strides", "=2, ", "padding", "=", "'same'", "))\n", "#conv layer", "\nmodel.", "add", "(Conv2D(16, (5, 5), ", "activation", "=", "'relu'", "))\n", "#Maxpooling layer", "\nmodel.", "add", "(MaxPooling2D(pool_size=(2, 2), ", "strides", "=2, ", "padding", "=", "'same'", "))\n", "#fully connected layer", "\nmodel.", "add", "(Flatten())  # 进行全连接之前要将多维变量变成二维变量，因为全连接层的输入只能是二维变量即平化层\nmodel.", "add", "(Dense(120, ", "activation", "=", "'relu'", "))  # 增加一个激活函数提高模型参数的非线性能力\nmodel.", "add", "(Dropout(0.5))  # 表示随机去掉50%的神经元连接\n", "# Flatten()  因为上一层的输出就是一个二维变量，所以这里不需要进行拉直操作了", "\nmodel.", "add", "(Dense(84, ", "activation", "=", "'relu'", "))  # 增加一个激活函数提高模型参数的非线性能力\nmodel.", "add", "(Dropout(0.5))  # 表示随机去掉50%的神经元连接\n", "#output layer ", "\nmodel.", "add", "(Dense(7, ", "activation", "=", "'softmax'", "))  # 增加这个激活函数便于多分类\n\n", "from", " tensorflow.keras.optimizers import SGD\n\nsgd = SGD(", "lr", "=0.01, ", "momentum", "=0.9, ", "nesterov", "=", "True", ")\nmodel.compile(", "loss", "=", "'categorical_crossentropy'", ",\n              ", "optimizer", "=sgd,\n              metrics=[", "'accuracy'", "])\n", "# #compile", "\n", "# model.compile(optimizer = 'adam',", "\n", "#              loss='sparse_categorical_crossentropy',", "\n", "#              metrics=['accuracy'])", "\n", "#fit", "\nmodel.fit(x_train, y_train,", "batch_size", "=20,epochs=20,validation_data=(x_test,y_test))\n"]], "Tag": "算法设计"}
