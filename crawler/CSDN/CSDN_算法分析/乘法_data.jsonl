{"Answer": "&lt;p&gt;尝试一下这个&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;[sigmak^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;^(re)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-built_in\"&gt;p13&lt;/span&gt;,zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,M_irs)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    zeros(M_irs,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-built_in\"&gt;p13&lt;/span&gt;*epsilong_e^(-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*eye(M_irs)]&amp;#43;...\n    (&lt;span class=\"hljs-built_in\"&gt;S3&lt;/span&gt;*theta0*h_BI)*((&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;^(re)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*Zx-W1x)*((&lt;span class=\"hljs-built_in\"&gt;S3&lt;/span&gt;*theta0*h_BI)&lt;span class=\"hljs-string\"&gt;&amp;#39;);\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["matlab用于矩阵乘法的维度不正确", ["问题遇到的现象和发生背景", "\n", "编写代码时，提示用于矩阵乘法的维度不正确，但是我检查了矩阵的维度，保第一个矩阵中的列数与第二个矩阵中的行数匹配，不知道问题出在了哪里", "\n", "问题相关代码，请勿粘贴截图", "\n", "\n", "\n", "%% step2:优化预编码向量Wx和人工噪声协方差Zx\nS3=[h_I3.',eye(M_irs)].';     %转置是.',共轭转置是'\nS4=[h_I4.',eye(M_irs)].';\n%% 对于任何可行点W1t,W2t,Zxt\nM1=h_BI'*theta0'*(h_I1'*h_I1)*theta0*h_BI;\nM2=h_BI'*theta0'*(h_I2'*h_I2)*theta0*h_BI;\nW1t=eye(Nt,Nt);\nW2t=eye(Nt,Nt);\nZxt=eye(Nt,Nt);\ncvx_begin sdp\n    variables W1x(Nt,Nt) W2x(Nt,Nt) \n    variable Zx(Nt,Nt) complex semidefinite\n    variable p13  nonnegative\n    variable p23  nonnegative\n    variable p14  nonnegative\n    variable p24  nonnegative\nobj=-", "log", "(", "real", "(", "trace", "(Zx*M1))+sigmak^2+", "real", "(", "trace", "(M1*W1x))+", "real", "(", "trace", "(M1*W2x)))-", "log", "(", "real", "(", "trace", "(Zx*M2))+sigmak^2+", "real", "(", "trace", "(M2*W1x)))+", "real", "(", "trace", "(M2*W2x))-", "real", "(", "trace", "((-(1/", "log", "(2))*(M1/", "real", "((", "trace", "(Zxt*M1))+sigmak^2+", "real", "(", "trace", "(M1*W2t)))+M2/(", "real", "(", "trace", "(Zxt*M2))+sigmak^2+", "real", "(", "trace", "(M2*W1t)))))'*Zx))-", "real", "(", "trace", "((-(1/", "log", "(2))*M2/(", "real", "(", "trace", "(Zxt*M2))+sigmak^2+", "real", "(", "trace", "(M2*W1t))))'*W1x))-", "real", "(", "trace", "((-(1/", "log", "(2))*M1/", "real", "((", "trace", "(Zxt*M1))+sigmak^2+", "real", "(", "trace", "(M1*W2t))))'*W2x))-re;\nminimize obj\n    subject to \n    ", "trace", "(W1x)+", "trace", "(Zx)<=P;\n    ", "trace", "(W2x)+", "trace", "(Zx)<=P;\n[sigmak^2*(2^(re)-1)-p13,zeros(1,M_irs);zeros(M_irs,1),p13*epsilong_e^(-2)*eye(M_irs)]+S3*theta0*h_BI*((2^(re)-1)*Zx-W1x)*h_BI'*theta0'*S3'>=0;\n%矩阵维度：前面是(M_irs+1)*(M_irs+1)的矩阵；S3是(M_irs+1)*(M_irs)；theta0是(M_irs)*(M_irs)；h_BI是(M_irs)*16；Zx,W1x是16*16；\nZx>=0;\nW1x>=0;\nW2x>=0;\ncvx_end\n\n\n", "\n", "运行结果及报错内容", "\n", "提示这句：[sigmak^2*(2^(re)-1)-p13,zeros(1,M_irs);zeros(M_irs,1),p13", "epsilong_e^(-2)", "eye(M_irs)]+S3", "theta0", "h_BI*((2^(re)-1)*Zx-W1x)*h_BI'*theta0'", "S3'>=0;", "错误使用  *", "用于矩阵乘法的维度不正确。请检查并确保第一个矩阵中的列数与第二个矩阵中的行数匹配。要执行按元素相乘，请使用 '.", "'。", "\n", "我的解答思路和尝试过的方法", "\n", "这是工作区的值", "\n", "\n", "我想要达到的结果", "\n", "不报错"]], "Tag": "算法设计"}
{"Answer": "```\r\n \r\n&lt;script&gt;\r\n    var i,j;\r\n    var strHtml=\"&lt;table&gt;\";\r\n    for(i=1;i&lt;10;i++){\r\n        strHtml += \"&lt;tr&gt;\";\r\n        for(j=1;j&lt;=i;j++){\r\n            strHtml+= \"&lt;td&gt;\" +j + \"*\" + i + \"=\" + (i * j) +\"&lt;/td&gt;\";\r\n        }\r\n        strHtml+= \"&lt;/tr&gt;\";\r\n    }\r\n    strHtml+= \"&lt;/table&gt;\";\r\n    document.write(strHtml);\r\n&lt;/script&gt;\r\n```\r\n最终效果如图：\r\n![图片说明](https://img-ask.csdn.net/upload/201711/20/1511142649_864182.png)", "Konwledge_Point": "乘法", "Question": ["关于js基础设计，九九乘法表与表格问题", ["九九乘法表", "\n在显示的时候用表格形式      就是等式在表格里", "\n要求用for或while循环做", "\n求大神带飞"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n          &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d * %d &amp;#61; %d&amp;#34;&lt;/span&gt;, i, j, i * j);\n          &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j !&amp;#61; i)\n              &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n              &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n   }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用C语言打出九九乘法表", ["用C语言打出九九乘法表！ndjhshshshhshsh"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;using System;&lt;br /&gt;using System.Collections.Generic;&lt;br /&gt;using System.ComponentModel;&lt;br /&gt;using System.Data;&lt;br /&gt;using System.Drawing;&lt;br /&gt;using System.Linq;&lt;br /&gt;using System.Text;&lt;br /&gt;using System.Threading.Tasks;&lt;br /&gt;using System.Windows.Forms;&lt;/p&gt;\n&lt;p&gt;namespace WindowsFormsApplication3&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;    public partial class Form1 : Form&lt;br /&gt;    {&lt;!-- --&gt;&lt;br /&gt;        public Form1()&lt;br /&gt;        {&lt;!-- --&gt;&lt;br /&gt;            InitializeComponent();&lt;br /&gt;        }&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;label1_Click&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e&lt;/span&gt;)&lt;/span&gt;\n    {\n\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Form1_Load&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e&lt;/span&gt;)&lt;/span&gt;\n    {\n        label1.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;九九乘法表:\\n\\n&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)\n            {\n                label1.Text &amp;#43;&amp;#61; (j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;#43; i &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; i * j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n            }\n            label1.Text &amp;#43;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;;\n        }\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c#中的使用窗体制作九九乘法表", ["会用代码敲九九乘法表输出，但不知道如何在使用visual studio下实现窗体的九九乘法表"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;clc,clear,close all;\n&lt;span class=\"hljs-attribute\"&gt;N&lt;/span&gt;&amp;#61;9;\n&lt;span class=\"hljs-attribute\"&gt;data&lt;/span&gt;&amp;#61;blanks(7*N);\nfilename &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;cfb.txt&amp;#39;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1:N\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1:i\n        &lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;j*7-6;\n        &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;m&amp;#43;6;\n        data(1,m:n) &amp;#61; sprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;%d*%d&amp;#61;%2d &amp;#39;&lt;/span&gt;,j,i,j*i);\n    end\n    fid &amp;#61; fopen(filename,&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#43;&amp;#39;&lt;/span&gt;);\n    fprintf(fid,&lt;span class=\"hljs-string\"&gt;&amp;#39;%s\\n&amp;#39;&lt;/span&gt;,num2str(data));\ndisp(data);\nend\nfclose(fid);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/948861605656120.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["matlab 如何将乘法口诀表写入txt文件", ["主要是怎么描述乘法口诀表主体，描述乘法口诀表。", "将乘法口诀表写入txt文件"]], "Tag": "算法设计"}
{"Answer": "for(i=0;i&lt;strlen(m);i++)\r\n m是整数，不应该调用strlen\r\n \r\n 按照你的思路给你修改了下，注意这个程序只支持VC++，gcc需要自己实现 itoa 这个函数\r\n \r\n```\r\n#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;string.h&gt;\r\n#include &lt;math.h&gt;\r\nint main()\r\n{\r\n    int n1,m1,sum=0,i,j;\r\n    int a[10],b[10];\r\n    scanf(\"%d %d\",&amp;n1,&amp;m1);\r\n\tchar n[100];\r\n\tchar m[100];\r\n\titoa(n1, n, 10);\r\n\titoa(m1, m, 10);\r\n    for(i=0;i&lt;strlen(n);i++)\r\n    {\r\n        a[i]=n1%10;\r\n        n1=n1/10;\r\n    }\r\n    for(i=0;i&lt;strlen(m);i++)\r\n    {\r\n        b[i]=m1%10;\r\n        m1=m1/10;\r\n    }\r\n    for(i=0;i&lt;strlen(n);i++)\r\n    {\r\n        for(j=0;j&lt;strlen(m);j++) //注意这里是j++不是i++\r\n        {\r\n            sum=sum+a[i]*b[j];\r\n        }\r\n    }\r\n    printf(\"%d\",sum);\r\n    return 0;\r\n}\r\n\r\n```", "Konwledge_Point": "乘法", "Question": ["奶牛乘法1【数组基础】", ["做厌了乘法计算题的佳佳，自创了一种新的乘法运算法则。在这套法则里，A×B等于一个取自A，一个取自B所有数字对的乘积的和。", "\n  例如，123*45等于1*4+1*5+2*4+2*5+3*4+3*5=54", "\n  本题的任务是，对于给定的数A和B,用新的乘法法则计算A*B的值。 ", "\n\n", "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int n,m,sum=0,i,j;\n    int a[10],b[10];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<strlen(n);i++)\n    {\n        a[i]=n%10;\n        n=n/10;\n    }\n    for(i=0;i<strlen(m);i++)\n    {\n        b[i]=m%10;\n        m=m/10;\n    }\n    for(i=0;i<strlen(n);i++)\n    {\n        for(j=0;j<strlen(m);i++)\n        {\n            sum=sum+a[i]*b[j];\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n\n", "\n\n", "请大大指正一下，指出问题就好了"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n    int i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n      &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)\n      {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;每次重新从&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;开始乘\n    j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n      &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt;&amp;#61; i)\n      {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;打印\n      System.out.println(i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&amp;#43;j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;i * j);\n      j&amp;#43;&amp;#43;;\n      }\n      i&amp;#43;&amp;#43;;\n      }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用while语句输出99乘法表", ["用while语句输出99乘法表，要梯形那种", "1", "1=1", "1", "2=2   2", "2=4", "......................9", "9=81"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;# 九九乘法表&lt;/span&gt;\nn&amp;#61;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;x&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i*j}&lt;/span&gt;\\t&amp;#39;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["怎么用Python 打印前n行九九乘法表？", ["怎么用Python 打前n行的九九乘法表啊。我打出的代码可以显示前n行，但是会有2", "1与1", "2这种重复的。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(0,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{}&amp;#34;&lt;/span&gt;.format(j,i,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["for循环99乘法表倒三角", ["for循环99乘法表倒三角，反三角", "用for i in range这种"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用for循环&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;hanshu&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;):&lt;span class=\"hljs-comment\"&gt;#定义一个函数&lt;/span&gt;\n　　m &amp;#61; n\n　　sumn &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;   &lt;span class=\"hljs-comment\"&gt;#设置一个变量&amp;#xff0c;用来存储两个数相乘的积&lt;/span&gt;\n　　&lt;span class=\"hljs-comment\"&gt;#括号内包括第一个数&amp;#xff0c;不包括第二数&amp;#xff0c;so为n&amp;#43;1&lt;/span&gt;\n　　&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; dix &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):  　　　　\n　　　　sumn &amp;#61; m*dix\n　　　　&lt;span class=\"hljs-comment\"&gt;#%d -&amp;gt; 占位符&amp;#xff0c;%2d指占两个位置&lt;/span&gt;\n　　　　&lt;span class=\"hljs-comment\"&gt;#end&amp;#61;&amp;#34; &amp;#34;指不换行　　　&lt;/span&gt;\n　　　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&amp;#34;&lt;/span&gt;%(m,dix,sumn),end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;hanshu1&lt;/span&gt;():\n　　&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; b &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n　　　　hanshu(b)\nhanshu1()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;while循环&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i&amp;lt;&amp;#61;9:\n　　&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1\n　　&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; j&amp;lt;&amp;#61;i:\n　　　　#%d为占位符 %2d代表占两个位置\n　　　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d &amp;#34;&lt;/span&gt;%(i,j,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n　　　　j&amp;#43;&amp;#61;1\n　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n　　i&amp;#43;&amp;#61;1\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python for循环和while循环打印九九乘法表", ["用for循环打印九九乘法表                                "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-php\"&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; &amp;#61; 9; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; &amp;gt;&amp;#61; 1; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;--) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; &amp;#61; 1; &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;; &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;X&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; * &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; &amp;#61; 9;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; &amp;gt;&amp;#61; 1) {\n\n            &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; &amp;#61; 1;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt;) {\n                &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;X&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; * &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt;&amp;#43;&amp;#43;;\n            }\n            &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt;--;\n            &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;;\n\n        }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["php用for和while循环语句输出倒装的99乘法表", ["php用for和while循环语句输出倒装的99乘法表，对齐。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;# 利用for循环实现九九乘法表&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 定义行&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 定义列&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i * j}&lt;/span&gt;&amp;#39;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["绘制程序流程图，使用for和if 语句完成九九乘法表的计算和输出。", ["绘制程序流程图，使用for和if 语句完成九九乘法表的计算和输出。"]], "Tag": "算法设计"}
{"Answer": "int i = 1, j = 1;\r\n\t\t  while (i &lt;= 9)\r\n\t\t  {\r\n\t\tj=1;\r\n\t\t  while (j &lt;= i)\r\n\t\t  {\r\n\r\n\t\t  System.out.println(i+\"*\"+j+\"=\"+i * j);\r\n\t\t  j++;\r\n\r\n\t\t  }\r\n\t\t  i++;\r\n\r\n\t\t  }", "Konwledge_Point": "乘法", "Question": ["java基础，while方法，解决99乘法表编写问题", ["java中用while方法写99乘法表，for可以写出来，用while不会写，求大神指教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;文章放到代码块吧&amp;#xff0c;这样贴出来&amp;#xff0c;乘号都看不到啊&lt;br /&gt;输入是1234 * 5678吗&amp;#xff1f;&lt;br /&gt;获得两个四位整数&amp;#xff0c;然后第一个整数取出个位和百位&amp;#xff0c;第二个取出十位和千位&amp;#xff0c;组成两个两位整数相乘即可&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,b,m,n;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n    m &amp;#61; a/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;%10*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; a%10;\n    n &amp;#61; b/&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; b/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;%10;\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d&amp;#34;&lt;/span&gt;,m,n,m*n);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/913215931366111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["任务04-05-04捣蛋的乘法", ["任务描述", "X给他的学生出了一道2位数的数学乘法题AB乘CD，但是他把被乘数和乘数都写错了，写成了XAXB乘CXDX（X是1位随机数），即在被乘数中每位数字之前混进去1位整数，在乘数每位数字之后混进去1位整数。现在给你算式：XAXB乘CXDX，你能得出原题的答案吗？", "输入格式:", "在一行中给出被污染的算式：XAXB乘CXDX。其中A、B、C、D、X代表1位数字。", "输出格式:", "按样例格式输出原算式和结果。", "输入样例:", "1234乘5678", "输出样例:", "24乘57=1368", "开始你的任务吧，祝你成功！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先输出后换行&lt;br /&gt;把换行放到内层循环之后试试&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["pta C语言九九乘法表格式错误", ["pta的一题打印九九乘法表，我不懂格式哪里错了", "\n", "\n", "\n", "代码如下：", "#include <stdio.h>", "int main(){", "    int i,j,N; //i控制行，j控制列", "    scanf(\"%d\",&N);", "\n", "if", "(N<=", "9", "&&N>=", "1", "){\n\n    ", "for", "(i=", "1", ";i<=N;i++){\n        ", "printf", "(", "\"\\n\"", "); \n        ", "for", "(j=", "1", ";j<=i;j++){\n            ", "printf", "(", "\"%d*%d=%-4d\"", ",j,i,j*i);\n        }\n    }\n}\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;test.py&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;jiafa&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;m,n&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{m}&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(m)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;jianfa&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;m,n&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{m}&lt;/span&gt;-&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(m)-&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;chengfa&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;m,n&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{m}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(m)*&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\nm &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;)\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n\njiafa(m,n)\njianfa(m,n)\nchengfa(m,n)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Python定义一个函数列表，列表包含3个函数，分别用于完成两个整数的加法、减法和乘法运算", ["定义一个函数列表，列表包含3个函数，分别用于完成两个整数的加法、减法和乘法运算。从键盘输入2个数，调用列表中的函数完成加法、减法和乘法运算。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/173574882736195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言输出乘法表，一直都是2*1=2", ["\n", "\n", "c语言输出乘法表，循环输出的一直都是2*1=2", "不晓得错在哪里，求解答"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, b, N;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; res[&lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;N);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a*b&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            res[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            res[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c\\n&amp;#34;&lt;/span&gt;,res[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["根据要求写乘法运算的法则", ["Description", "\n", "小明上小学四年级要学乘法运算的法则，老师教他乘法运算口诀：“正正得正、负负得正、正负得负”，是正负数的乘法口诀，两个正数相乘的积是正数，两个负数相乘的积是正数，一个正数和一个负数相乘的积是负数。请帮助小明确定积是正数还是负数。", "\n", "Input", "\n", "输入一个正整数N ，代表N组测试数据（1< N <= 10）", "接下来N行，每行有两个数X和Y（-100< X,Y <= 100），以空格间隔，X和Y保证不为0。", "\n", "Output", "\n", "如果是正数输出+，如果是负数输出-，以换行间隔。", "\n", "Sample Input", "\n", "4", "1 1", "-1 -1", "1 -1", "-1 1", "Sample Output", "\n", "+", "+", "-", "-"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) \n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d &amp;#34;&lt;/span&gt;, i, j, i * j);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["输出9X9乘法表，要求附上代码和运行结果", ["输出9X9乘法表，要求附上代码和运行结果（用C语言）"]], "Tag": "算法设计"}
{"Answer": "```\r\n #include &lt;iostream&gt;\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin &gt;&gt; n;\r\n\tint * p = new int[n * 2];\r\n\tint i;\r\n\tfor (i = 0; i &lt; n; i++)\r\n\t{\r\n\t\tcin &gt;&gt; p[i * 2];\r\n\t\tcin &gt;&gt; p[i * 2 + 1];\r\n\t}\r\n\tfor (i = 0; i &lt; n; i++)\r\n\t{\r\n\t\tint a = p[i * 2];\r\n\t\tint b = p[i * 2 + 1];\r\n\t\tif (a &gt; b || a &lt;= 0 || b &gt;= 10)\r\n\t\t{\r\n\t\t\tcout &lt;&lt; \"Input Error!\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (int j = a; j &lt;= b; j++)\r\n\t\t{\r\n\t\t\tfor (int k = 1; k &lt;=j; k++)\r\n\t\t\t{\r\n\t\t\t\tcout &lt;&lt; j &lt;&lt; \"*\" &lt;&lt; k &lt;&lt; \"=\" &lt;&lt; j * k &lt;&lt; \"\\t\";\r\n\t\t\t}\r\n\t\t\tcout &lt;&lt; endl;\r\n\t\t}\r\n\t\tif (i != n - 1) cout &lt;&lt; endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["c++习题---------------九九乘法表", ["输入", "\n\n", "输入首先包含一个整数T，(0<T<100)，表示测试数据组数，然后是T组数据，每组数据包含两个整数，a和b(0<a<=b<10)", "\n\n", "输出", "\n\n", "对每组测试数据，请输出乘法表中的第a行到第b行，每组测试数据结果后跟一个空行，最后一组数据结果后无空行，注意对齐。如果输入的a, b不符合题意，请输出\"Input Error!\"。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;i;\n    cout&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;i;j&amp;#43;&amp;#43;)\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;i;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;i*j;\n        cout&amp;lt;&amp;lt;endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c++九九乘法表右上三角表示", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;\nYou are trying to multiple &lt;code&gt;display_price&lt;/code&gt; string and use it as array key and you should just increase the value that the variable holds.&lt;/p&gt;\n\n&lt;pre class=\"lang-php prettyprint-override\"&gt;&lt;code&gt;echo $row['display_price'] * 1.03;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If variable holds the dollar sign too (&lt;strong&gt;it shouldn't!&lt;/strong&gt;) use &lt;a href=\"https://stackoverflow.com/a/3275461/4580544\"&gt;this&lt;/a&gt; regex to get the value and multiply it. Example:&lt;/p&gt;\n\n&lt;pre class=\"lang-php prettyprint-override\"&gt;&lt;code&gt;echo \"$\" . ( floatval( preg_replace( \"/[^-0-9\\.]/\", \"\", $var ) ) * 1.03 );\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["PHP中的乘法值", ["\n\n", "I have this pieces of php here...", "\n\n\n\n", "The value that gets written in HTML is this ", "$16.67", ".", "\n\n", "I am not sure what value type this is, not sure if it is a string or integar.", "\n\n", "Regardless, I need to take this value and increase it by ", "3%", ". ", "\n\n", "I tried this but to no avail:", "\n\n", "<?php echo $row['display_price' * 1.03]; ?>\n", "\n\n", "If someone could help me out here this would be great.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n        &lt;span class=\"hljs-attribute\"&gt;k&lt;/span&gt;&amp;#61;i*j\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0}*{1}&amp;#61;{2}&amp;#34;&lt;/span&gt;.format(i,j,k),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用python对九九乘法表的编写思路", ["1", "1=1", "1", "2=2 2", "2=4", "1", "3=3 2", "3=6 3", "3=9", "……"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;比如 4 的二进制是 100&lt;br /&gt;乘2 十进制是8&amp;#xff0c;二进制1000&amp;#xff0c;对应左移了一位&lt;br /&gt;除2 十进制是2&amp;#xff0c;二进制10&amp;#xff1b;对应右移了一位&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["位运算的左移和右移为什么对应了十进制的乘法和除法你", ["位运算的左移和右移为什么对应了十进制的乘法和除法你，可以解释的生动形象一点吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you are just looking to round a number, then here is the solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n    $number = 1353.234242;\n    $rounded = (float)sprintf('%.2f', $number);\n    echo $rounded; // will display 1353.23\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["在乘法php中舍入2位小数不是舍入", ["\n\n", "I come to you looking for answers, I have a table and I am calculating the tax field multiplying 1 variable per 0.16 but I want it to have just 2 decimals, not 10 or 4 or 3, I was trying with round() and with number_format() but is not working, there must be something I am doing wrong, how it suppose that I need to do it ?", "\n\n", "I am showing the code", "\n\n", "    $html .= '<tr>\n    <td>'.escape($r->tecnologia).'</td>\n    <td>'.escape($r->normaespecificacion).'</td>\n    <td><img src=\"functions/'.escape($r->foto).'\"></td>\n    <td>'.escape($r->marca).'</td>\n    <td>'.escape($r->modelo).'</td>  \n    <td>'.escape($r->descripcion).'</td>\n    <td>$'.escape($r->preciounitario).'</td>\n    <td>$'.escape($r->number_format(preciounitario*0.16,2)).'</td> //this is the one with the error\n    <td>$'.escape($r->instalacion).'</td>\n    <td>$'.escape($r->totalcosto).'</td>\n    <td>'.escape($r->garantia).'</td>\n    <td>'.$listNum[$i].'</td>\n    </tr>';\n    $totalV += $listNum[$i]*$r->totalcosto;\n    $i = $i+1;\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;大概是这样子&amp;#xff0c;一些小细节自己去改一下就好&amp;#xff0c;有帮助麻烦点个采纳【本回答右上角】&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;input1&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindinput&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleInput1&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;input1&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt; *\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;input2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindinput&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleInput2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;input2&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt; &amp;#61;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindtap&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;calculate&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;计算&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;  &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;result&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;wx:for&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;resultList&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;item&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;&lt;li&gt;大概是这样子&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; db &amp;#61; wx.&lt;span class=\"hljs-property\"&gt;cloud&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;database&lt;/span&gt;()\n&lt;span class=\"hljs-title class_\"&gt;Page&lt;/span&gt;({\n  &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: {\n    &lt;span class=\"hljs-attr\"&gt;result&lt;/span&gt;: [],\n    &lt;span class=\"hljs-attr\"&gt;input1&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-attr\"&gt;input2&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n  },\n  &lt;span class=\"hljs-attr\"&gt;onLoad&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Welcome to Mini Code&amp;#39;&lt;/span&gt;)\n  },\n  &lt;span class=\"hljs-attr\"&gt;calculate&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; { input1, input2,resultList } &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;data&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (input1 &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt; || input2 &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;) {\n      wx.&lt;span class=\"hljs-title function_\"&gt;showToast&lt;/span&gt;({\n        &lt;span class=\"hljs-attr\"&gt;title&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;请输入正确的数字&amp;#39;&lt;/span&gt;,\n        &lt;span class=\"hljs-attr\"&gt;duration&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;,\n        &lt;span class=\"hljs-attr\"&gt;icon&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;warning&amp;#39;&lt;/span&gt;\n      });\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n     resultList.&lt;span class=\"hljs-title function_\"&gt;push&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#96;&lt;span class=\"hljs-subst\"&gt;${input1}&lt;/span&gt; * &lt;span class=\"hljs-subst\"&gt;${input2}&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-subst\"&gt;${input1 * &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; * input2}&lt;/span&gt;&amp;#96;&lt;/span&gt;)\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n     resultList\n    }, &lt;span class=\"hljs-function\"&gt;() &amp;#61;&amp;gt;&lt;/span&gt; {\n   db.&lt;span class=\"hljs-title function_\"&gt;collection&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;result&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-title function_\"&gt;add&lt;/span&gt;({\n  &lt;span class=\"hljs-comment\"&gt;// data 字段表示需新增的 JSON 数据&lt;/span&gt;\n  &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: {\n    resultList\n  },\n  &lt;span class=\"hljs-attr\"&gt;success&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;res&lt;/span&gt;) {\n    &lt;span class=\"hljs-comment\"&gt;// res 是一个对象&amp;#xff0c;其中有 _id 字段标记刚创建的记录的 id&lt;/span&gt;\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(res)\n  }\n})\n\n})\n    }\n  },\n  &lt;span class=\"hljs-attr\"&gt;handleInput1&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n      &lt;span class=\"hljs-attr\"&gt;input1&lt;/span&gt;: e.&lt;span class=\"hljs-property\"&gt;detail&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;\n    })\n  },\n  &lt;span class=\"hljs-attr\"&gt;handleInput2&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n      &lt;span class=\"hljs-attr\"&gt;input2&lt;/span&gt;: e.&lt;span class=\"hljs-property\"&gt;detail&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;\n    })\n  }\n})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-css\"&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt; {\n  &lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid;\n  &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100pt&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/355903030436143.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["微信小程序怎样运算整数乘法", ["整数乘法。实现两个输入框（input），用于乘数输入；一个按钮（button）用于确认计算；view组件用于显示计算结果。并将乘数及计算结果上传至云数据库中（云数据库collection名称为result）。", "示例：<input id=\"”input1”\" /> 即表示此input组id为input1", "要求：", "a.     页面应为question1，pages/question1即如下图", "\n", "b.     两个输入框（input）id一个为input1，一个为input2；按钮id为submit；view组件id为result。", "c.     展示多个乘法计算示例", "d.     （选做）云函数实现整数乘法"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;package myproject01;\n/*\n * 99乘法表的实现\n */\npublic class For99 {\n\tpublic static void main(String[]args){\n\tfor\t(int m&amp;#61;1;m&amp;lt;&amp;#61;9;m&amp;#43;&amp;#43;){\n\t\tfor(int i&amp;#61;1;i&amp;lt;&amp;#61;m;i&amp;#43;&amp;#43;){\n\t\t\tint a&amp;#61;i*m;\n\t\t\tSystem.out.print(i&amp;#43;&amp;#34;*&amp;#34;&amp;#43;m&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;a&amp;#43;&amp;#34;\\t&amp;#34;);\t\t\n\t\t \t}\n\t\tSystem.out.println();\n\t\t}\n\t}\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["输出9*9乘法口诀表（用循环）", ["\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%-4d&amp;#34;&lt;/span&gt;,i,j,i*j);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["cfree输出乘法表", ["输入正整数N（1≤N≤9）输出N×N乘法表", "输入5", "输出", "1", "1=1", "2", "1=2  2", "2=4", "3", "1=3  3", "2=6  3", "3=9", "4", "1=4  4", "2=8  4", "3=12 4", "4=16", "5", "1=5  5", "2=10 5", "3=15 5", "4=20 5*5=25 "]], "Tag": "算法设计"}
{"Answer": "我这里可以输出，结果如下：\r\n\r\n```\r\n\r\n----------------------------------------\r\n  1   2   3   4   5   6   7   8   9\r\n----------------------------------------\r\n1   1   2   3   4   5   6   7   8   9\r\n2   2   4   6   8  10  12  14  16  18\r\n3   3   6   9  12  15  18  21  24  27\r\n4   4   8  12  16  20  24  28  32  36\r\n5   5  10  15  20  25  30  35  40  45\r\n6   6  12  18  24  30  36  42  48  54\r\n7   7  14  21  28  35  42  49  56  63\r\n8   8  16  24  32  40  48  56  64  72\r\n9   9  18  27  36  45  54  63  72  81\r\n----------------------------------------\r\n\r\n```\r\n你不能输出，检查下程序是否正确编译，删除exe文件，再重新编译下。再不行，检查下开发环境。", "Konwledge_Point": "乘法", "Question": ["请问我的九九乘法表为什么在无编译错误的情况下无法正常输出？", ["#include", "\nint main ()", "\n{", "\n    int i,j;", "\n    printf(\"\\n----------------------------------------\\n\");", "\n    for(i=1;i<10;i++)", "\n    printf(\"%4d\",i); ", "\n    printf(\"\\n----------------------------------------\\n\");", "\n    for(i=1;i<10;i++)", "\n    {", "\n        printf(\"%d\",i);", "\n        for(j=1;j<10;j++)", "\n        printf(\"%4d\",i*j);", "\n        printf(\"\\n\");", "\n    }", "\n    printf(\"\\n----------------------------------------\\n\");", "\n    return 0;", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;in your Calculator.php&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nClass Calculator {\n\n    public function calculate($row, $col){\n        return $result = $row * $col;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Change index.php as follow.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php include_once('Calculator.php'); ?&amp;gt;\n&amp;lt;!DOCTYPE html&amp;gt;\n&amp;lt;html&amp;gt;\n&amp;lt;head&amp;gt;\n    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;\n    &amp;lt;style type=\"text/css\"&amp;gt;\n        a{\n            cursor: pointer;\n        }\n    &amp;lt;/style&amp;gt;\n&amp;lt;/head&amp;gt;\n&amp;lt;body&amp;gt;\n    &amp;lt;div&amp;gt;\n        &amp;lt;input type=\"text\" value=\"&amp;lt;?php if( (isset($_GET['col']) &amp;amp;&amp;amp; $_GET['row'])){ echo Calculator::calculate($_GET['row'],$_GET['col']); } ?&amp;gt;\"&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;?php\n    echo \"&amp;lt;table border =\\\"1\\\" style='border-collapse: collapse'&amp;gt;\";\n    for ($row=1; $row &amp;lt;= 10; $row++) { \n        echo \"&amp;lt;tr&amp;gt; \n\";\n        for ($col=1; $col &amp;lt;= 10; $col++) { \n           $a = \"$row * $col\";\n           echo \"&amp;lt;td&amp;gt;&amp;lt;a href=?row=$row&amp;amp;col=$col&amp;gt;\".$a;\n           //if( (isset($_GET['col']) &amp;amp;&amp;amp; $_GET['row'] &amp;amp;&amp;amp; $row==$_GET['row'] &amp;amp;&amp;amp; $col==$_GET['col'])){ echo Calculator::calculate($row,$col); }else{ echo $a ;}\n           echo \"&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt; \n\";\n        }\n        echo \"&amp;lt;/tr&amp;gt;\";\n    }\n    echo \"&amp;lt;/table&amp;gt;\";\n    ?&amp;gt;\n&amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["PHP  - 将表链接到HTML并进行乘法运算", ["\n\n", "I have the following php code that generates a 10X10 ", "table", ":", "\n\n", "<?php\necho \"<table border =\\\"1\\\" style='border-collapse: collapse'>\";\nfor ($row=1; $row <= 10; $row++) { \n    echo \"<tr> \n\";\n    for ($col=1; $col <= 10; $col++) { \n       $a = \"$row * $col\";\n       echo \"<td><a href = '$a'>$a</a></td> \n\";\n    }\n    echo \"</tr>\";\n}\necho \"</table>\";\n?>\n", "\n\n", "\n", "How to recreate this table in HTML, such that links will work?", "\n", "Every field in a table needs to do a multiplication, e.g. field '5*6' gives result '30'. How to write a php class that will do this operation? So, for ", "row*column", ", return variable ", "result", ".", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用乘法建二维列表&amp;#xff0c;属于重复的引用初始列表&amp;#xff0c;你用乘法建立一个二维列表&amp;#xff0c;然后修改第第一项里面的值&amp;#xff0c;你就发现所有第一项都变了&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["在python中用for创建二维列表和用乘法创建有什么区别？", ["问题遇到的现象和发生背景", "\n", "原题链接：", "https://www.lanqiao.cn/problems/755/learning/", "发现当用这样的方法创建的二维列表会输出错误的答案", "dp=[[0]", "(n+1)]", "(m+1)", "而用这种不会", "dp=[[0 for i in range(m+1)] for i in range(n+1)]", "\n", "问题相关代码", "\n", "n,", "m", ",", "x", ",", "y", "=", "map", "(", "int", ",", "input", "().", "split", "())\n\n", "dp", "=[[", "0", "]*(n+", "1", ")]*(", "m", "+", "1", ")\n\n", "dp", "=[[", "0", " ", "for", " i in ", "range", "(", "m", "+", "1", ")] ", "for", " i in ", "range", "(n+", "1", ")]\n#比较两种方式创建的列表的不同，结果发现都一样\n", "\"\"", "\"", "\n", "for", " i in ", "range", "(n+", "1", "):\n    ", "for", " ", "j", " in ", "range", "(", "m", "+", "1", "):\n        ", "if", " ", "dp", "[i][", "j", "]!=dp1[i][", "j", "]:\n            ", "print", "(", "\"find\"", ")\n", "\"\"", "\"", "\ndx=[", "0", ",", "2", ",", "1", ",-", "1", ",-", "2", ",-", "2", ",-", "1", ",", "1", ",", "2", "]\ndy=[", "0", ",", "1", ",", "2", ",", "2", ",", "1", ",-", "1", ",-", "2", ",-", "2", ",-", "1", "]\n\nlst=[[", "0", ",", "0", "]]\n\ndef check(", "x", ",", "y", "):\n    ", "global", " n,", "m", "\n    ", "if", " ", "x", "<", "0", " ", "or", " ", "x", ">n ", "or", " ", "y", "<", "0", " ", "or", " ", "y", ">", "m", ":\n        ", "return", " False\n    ", "else", ":\n        ", "return", " True\n\n", "dp", "[", "0", "][", "0", "]=", "1", "\n", "for", " i in ", "range", "(", "9", "):\n    ", "X", "=", "x", "+dx[i]\n    Y=", "y", "+dy[i]\n    ", "if", " check(", "X", ",Y)==False:\n        ", "continue", "\n    ", "else", ":\n        lst.", "append", "([", "X", ",Y])\n\n", "for", " i in ", "range", "(", "0", ",n+", "1", "):\n    ", "for", " ", "j", " in ", "range", "(", "0", ",", "m", "+", "1", "):\n        ", "if", " [i,", "j", "] in lst:\n            ", "continue", "\n        ", "else", ":\n            ", "dp", "[i][", "j", "]=", "dp", "[i-", "1", "][", "j", "]+", "dp", "[i][", "j", "-", "1", "]\n", "print", "(", "dp", "[n][", "m", "])\n\n", "\n", "运行结果及报错内容", "\n", "用for创建的输出正确的值6，用乘法输出错误的值550", "\n", "\n", "请问这是为什么呀"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;public class Cfkj {\n\tpublic static void main(String[] args) {\n\t\tint i,j;\n\t\tfor(i&amp;#61;1; i&amp;lt;&amp;#61;9; i&amp;#43;&amp;#43;) {\n\t\t\tfor(j&amp;#61;1; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;){\n\t\t\t\tSystem.out.print(j&amp;#43;&amp;#34;*&amp;#34;&amp;#43;i&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;(j*i)&amp;#43;&amp;#34;\\t&amp;#34;);\n\t\t\t}\n\t\t\tSystem.out.println(&amp;#34;&amp;#34;);\n\t\t}\n\t}\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"233\" src=\"https://img-ask.csdnimg.cn/upload/1622634587742.png\" width=\"828\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["java如何实现九九乘法表?", ["萌新一个，求问大佬，java如何实现九九乘法表?"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j&amp;#61;&amp;#61;i:\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(j) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i * j), &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(j)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i*j),&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python实现九九乘法表", ["python实现九九乘法表", "\n", "python实现九九乘法表，要求逗号分割，句号结尾。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%dx%d&amp;#61;%d &amp;#34;&lt;/span&gt;,i,j,i*j);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["cfree输出乘法表", ["输入正整数N（1≤N≤9）输出N×N乘法表", "输入5", "输出", "1", "1=1", "2", "1=2 2", "2=4", "3", "1=3 3", "2=6 3", "3=9", "4", "1=4 4", "2=8 4", "3=12 4", "4=16", "5", "1=5 5", "2=10 5", "3=15 5", "4=20 5*5=25"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的程序不太可能死循环出不来吧&lt;br /&gt;但是你的b只能从1到9&amp;#xff0c;不会再回到1了&lt;br /&gt;把b&amp;#61;1改为b&amp;#61;a&amp;#xff0c;放到while&amp;#xff08;a&amp;lt;10&amp;#xff09;里面去&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["while语句怎么写九九乘法表", ["我写的代码只能输出死循环，求指点", "#include<stdio.h>", "\n", "int main(void)", "{", "    int a=1, b=1;", "    while (a <= 9)", "    {", "\n", "    ", "while", " (b <= ", "9", ")\n\n    {\n        ", "printf", "(", "\"%d*%d=%d\"", ", a, b, a * b);\n        b++;\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    \n    a++;\n\n}\n\n\n\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getResult&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,c;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n{\nc&amp;#61;i*j;\ncout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;j&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;lt;&amp;lt;c&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n}\ncout&amp;lt;&amp;lt;endl;\n}\ncout&amp;lt;&amp;lt;endl;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-built_in\"&gt;getResult&lt;/span&gt;();\n&lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用函数调用的形式打印九九乘法表", ["这是书上的练习题,原题是这样的", "然后这是我写的", "\n", "这都没啥毛病,然后今天学了函数调用,课后习题让用函数调用的方式打印这个乘法表", "这是我的", "\n", "究竟是哪里出了问题?麻烦详细回答一下并给出正解"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;b);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;a; i&amp;lt;&amp;#61;b; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;a; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;){\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d &amp;#34;&lt;/span&gt;, i,j,i*j);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言实现乘法口诀表", ["试题详情:要求对任意给定的两个正整数x,y，输出下三角乘法口诀表。（输入时x>y,若x<y则交换）", "输入提示:输入仅一行，由键盘输入2个9以内的正整数，两个值之间用空格分隔。", "输出提示:输出下三角乘法口诀表，其中等号左边两个数字各占１位，等号右边数字占4位、左对齐。", "输入样本:2 6", "输出样本:2", "2=4", "3", "2=6 3", "3=9", "4", "2=8 4", "3=12 4", "4=16", "5", "2=10 5", "3=15 5", "4=20 5", "5=25", "6", "2=12 6", "3=18 6", "4=24 6", "5=30 6*6=36 "]], "Tag": "算法设计"}
{"Answer": "```\r\n #include &lt;stdio.h&gt;\r\n\r\nvoid foo(int acc1, int acc2)\r\n{\r\n    if (acc1 &gt; 9) return;\r\n    printf(\"%d * %d = %d\\t\", acc1, acc2, acc1 * acc2);\r\n    if (acc2 &gt;= acc1) { acc2 = 1; acc1++; printf(\"\\n\"); } else { acc2++; }\r\n    foo(acc1, acc2);\r\n}\r\n\r\nint main()\r\n{\r\n    foo(1, 1);\r\n}\r\n```\r\n\r\n\r\n```\r\n 1 * 1 = 1\t\r\n2 * 1 = 2\t2 * 2 = 4\t\r\n3 * 1 = 3\t3 * 2 = 6\t3 * 3 = 9\t\r\n4 * 1 = 4\t4 * 2 = 8\t4 * 3 = 12\t4 * 4 = 16\t\r\n5 * 1 = 5\t5 * 2 = 10\t5 * 3 = 15\t5 * 4 = 20\t5 * 5 = 25\t\r\n6 * 1 = 6\t6 * 2 = 12\t6 * 3 = 18\t6 * 4 = 24\t6 * 5 = 30\t6 * 6 = 36\t\r\n7 * 1 = 7\t7 * 2 = 14\t7 * 3 = 21\t7 * 4 = 28\t7 * 5 = 35\t7 * 6 = 42\t7 * 7 = 49\t\r\n8 * 1 = 8\t8 * 2 = 16\t8 * 3 = 24\t8 * 4 = 32\t8 * 5 = 40\t8 * 6 = 48\t8 * 7 = 56\t8 * 8 = 64\t\r\n9 * 1 = 9\t9 * 2 = 18\t9 * 3 = 27\t9 * 4 = 36\t9 * 5 = 45\t9 * 6 = 54\t9 * 7 = 63\t9 * 8 = 72\t9 * 9 = 81\r\n```", "Konwledge_Point": "乘法", "Question": ["用C语言的递归输出一个99乘法表，请问怎么实现。不能用循环实现", ["用C语言的递归输出一个99乘法表，请问怎么实现。不能用循环实现，请问怎么做"]], "Tag": "算法设计"}
{"Answer": "计算机的基本硬件系统由运算器、控制器、存储器、输入设备、输出设备五大部分组成。运算器和控制器等部件被集成在一起统称为中央处理单元 - CPU（Central Processing Unit）CPU还能细分为：运算器、控制器、寄存器组和内部总线等部件组成。\r\n\r\n其中CPU的运算器还可以细分为：算术逻辑单元、累加寄存器、数据缓冲寄存器和状态条件寄存器组成。运算器的作用就是执行算术运算和逻辑运算，其中算术运算就包含加减乘除等基本运算以及附加运算。\r\n\r\n这里大家注意了，从数学角度，减法是可以转换成加法运算的。乘法同样可以转换成加法运算，除法可以转换成乘法运算，所以一切的运算都可以以加法运算为基础，所以CPU只会做加法也没有问题。但是随着时代的发展和进步。如果计算机只会做加法，对于有些计算来说速度就会慢下来，这也是我们不能忍受的。所以人们会给计算机按照原理设计乘法除法的运算电路。甚至还有更加复杂的数学电路，软件（驱动）来辅助硬件来完成更多的功能。\r\n\r\n解释详见 http://www.idoguy.com/html/tech/2019/0811/55611.html", "Konwledge_Point": "乘法", "Question": ["高分悬赏：计算机CPU做乘法运算，是连续做加法实现的么？计算机里是不是只有加法电路？那么小数乘法呢", ["高分悬赏：计算机CPU做乘法运算，是连续做加法实现的么？计算机里是不是只有加法电路？那么小数乘法呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;把printf(&amp;quot;\\n&amp;quot;)挪到第一个for循环里面&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么这个九九乘法表显示不正常？", ["\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;(&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;) &amp;#34;&lt;/span&gt;,end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i*(j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}&lt;/span&gt; &amp;#34;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表前加序号怎么打，还有双循环实在有些懵", []], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;&amp;lt;script language&amp;#61;&amp;#34;JavaScript&amp;#34;&amp;gt;\n     //九九乘法表\n     //行      \n     for(var i&amp;#61;1;i&amp;lt;&amp;#61;9;i&amp;#43;&amp;#43;){\n        // 列     \n         for(var j&amp;#61;1;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n         \t\n         \tif(j&amp;lt;&amp;#61;i){             \t\t\n         \t\tdocument.write( &amp;#34;&amp;lt;div &amp;gt;&amp;#34;);\n         \t\tdocument.write(i&amp;#43;&amp;#34;*&amp;#34;&amp;#43;j&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;i*j);             \t\t\n         \t\tdocument.write(&amp;#34;&amp;lt;/div&amp;gt;&amp;#34;);\n         \t}    \n         }  \n     \n     document.write(&amp;#34;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#34;);\n}\n    \n\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code&gt;&amp;lt;style type&amp;#61;&amp;#34;text/css&amp;#34;&amp;gt;\n    \n  div{\n    background: #ADD8E6;\n    border: solid 1px #AAC9CE;\n    color: #B6B4C2;      \n    width: 100px;\n    float: left;\n    text-align: center;\n    border-radius: 5px;\n    margin: 3px;\n    }\n    \n&amp;lt;/style&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"433\" src=\"https://img-ask.csdnimg.cn/upload/1624179420054.png\" width=\"1231\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["利用JavaScript和css设计九九乘法表", ["利用for循环表述九九乘法表，但做出来的表格是按钮的模式，点击（例如1x1=1点击这个按钮后答案可以显示或隐藏），在表格后面有显示和清除的按钮可以控制整个九九乘法表(T ^ T)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为f使单引号中大括号的变量作为变量使用&amp;#xff0c;而不是作为英文字母使用&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python打印九九乘法表", ["Python用for打印九九乘法表", "怎样实现的当i=j是换行输出？", " print(f'{i}", "{j}={i", "j}', end='\\t')中为什么要写f’’？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不是一个数字把。Number(a)*Number(b) &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["vue使用乘法，页面显示nan", [" ", "var", " a  = $(", "'.nowprice'", ").text().substr(", "1", ") ", "//获取金额", "\n ", "var", " b = $(", "\"#shuliang\"", ").text() ", "//获取数量", "\n ", "var", " vm = ", "new", " Vue({\n    ", "el", ": ", "\"#app\"", ",\n    ", "data", ": {\n        ", "name", ": ", "\"\"", ",\n        ", "message", ": ", "\"\"", ",\n        ", "money", ": a * b,\n        ", "shuliang", ":", "\"1\"", " ", "//数量", "\n\n    }\n})\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&amp;#96;&amp;#96;&amp;#96;c\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; &amp;#43;&amp;#43;j)\n        {\n\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d  &amp;#34;&lt;/span&gt;, j, i, i * j);\n\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;br /&gt;运行结果如下&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/208488242056190.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;讲解&amp;#xff1a;九九乘法表共有九行&amp;#xff08;  所以i用于限制行数 i的值为从1到9 &amp;#xff09;&amp;#xff0c;每多一行就会多一列&amp;#xff0c;所以 &amp;#xff08; j&amp;lt;&amp;#61;i &amp;#xff0c;即j随着i的增加&amp;#xff0c;j能达到的最大值也在增加&amp;#xff09;。每一次j出for循环&amp;#xff08;即每一次j &amp;lt;&amp;#61; i 后出循环&amp;#xff09;&amp;#xff0c;j都会被重新赋值为1。&lt;/p&gt;\n&lt;p&gt;PS:&lt;br /&gt;printf(&amp;#34;\\n&amp;#34;);用于换行&lt;br /&gt;%2d表示打印出的值为右对齐&amp;#xff0c;并且若值为一位&amp;#xff0c;自动补一个空格到值的左边&lt;/p&gt;\n&lt;p&gt;注意本答案是从#include &amp;lt;stdio.h&amp;gt;开始算是解答&amp;#xff0c;到 return 0 后 } 结束&amp;#xff0c;其余均为csdn添加的C语言系列前缀和后缀&lt;/p&gt;\n&lt;p&gt;可以的话点个采纳吧&amp;#xff0c;谢谢。&lt;br /&gt;可以互关哦&amp;#xff0c;我都会回的&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["运用c语言编写九九乘法表", ["for的运用及换行的处理使其美观 编写的程序简洁美观九九乘法表的编写"]], "Tag": "算法设计"}
{"Answer": "```html\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n    &lt;title&gt;九九乘法表&lt;/title&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var i = 1, j = 1;\r\n\r\n        function table9() {\r\n            /*如果成立则执行下一行，定义表格*/\r\n            i == 1 &amp;&amp; document.write(\"&lt;table style='border;1px solid green;border-collapse' &gt; \");\r\n            j == 1 &amp;&amp; document.write(\"&lt;/tr&gt;\");\r\n            document.write(\"&lt;td style='border;1px solid'&gt;\" + i + \"*\" + j + \"=\" + i * j + \"&lt;/td&gt;\");\r\n            if (i == j) {/*i=j的时候换行*/\r\n                document.write(\"&lt;/tr&gt;\")\r\n                j = i + 1;\r\n                i = 1;\r\n            } else {\r\n                i++;\r\n            }\r\n\r\n            if (i == 10) {\r\n                document.write(\"&lt;/table&gt;\")\r\n                document.write(\"&lt;style&gt;td{background-color: red;}&lt;/style&gt;\")/*清除后变为红色*/\r\n                clearInterval(timer);\r\n            }\r\n        }\r\n\r\n        var timer = setInterval(table9, 100);\r\n    &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"content\"&gt;&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n\r\n```", "Konwledge_Point": "乘法", "Question": ["JavaScript打印舅舅乘法表无法显示", ["实验要求：", "\n\n", "1、使用JavaScript计时器打印出九九乘法表；", "\n\n", "2、网页中有一个按钮，点击之后开始输出九九乘法表；", "\n\n", "3、所有九九乘法表输出到一个table中；", "\n\n", "4、表格的边框需要使用CSS进行合并；", "\n\n", "5、在所有式子输出完毕之后，将表格中的单元格背景改为红色。", "\n\n", "我的代码按照老师的那个来的，但是却无法显示，初学者，望大佬指教，谢谢！", "\n\n", "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>九九乘法表</title>\n        <script type=\"text/javascript\">\n            var i=1,j=1;\n            function table9(){\n                /*如果成立则执行下一行，定义表格*/\n                i==1&&document.write(\"<table style='border;1px solid green;border-collapse\"></table>\");\n                j==1&&document.write(\"</tr>\");\n                document.write(\"<td style='border;1px solid'>\"+i+\"*\"+j+\"=\"+i*j+\"</td>\");\n                if(i==j)/*i=j的时候换行*/\n                    document.write(\"</tr>\")；\n                    i++;\n                    j++;\n                }\n                else{\n                    j++;\n                }\n                if(i==10){\n                    document.write(\"</table>\")\n                    document.write(\"<style>td{background-color: red;}</style>\")/*清除后变为红色*/\n                    clearInterval(timer);\n                }\n            }\n            var timer=setInterval(table9,100);\n        </script>\n    </head>\n    <body> \n    <div id=\"content\"></div>\n    </body>\n</html>\n\n"]], "Tag": "算法设计"}
{"Answer": "楼主请看这里：https://blog.csdn.net/fox_triumph/article/details/88853189\r\n![图片说明](https://img-ask.csdn.net/upload/202006/30/1593476979_416033.jpg)", "Konwledge_Point": "乘法", "Question": ["高分悬赏：Java语言怎么输出一个9x9的乘法口诀表，输出的结果要三角形的怎么实现", ["高分悬赏：Java语言怎么输出一个9x9的乘法口诀表，输出的结果要三角形的怎么实现"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是的&amp;#xff0c;嵌套的for循环就是这样运作&lt;br /&gt;for i in range(1,10)&amp;#xff1a;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for j in range(1,i&amp;#43;1):&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;i从1开始到10,i等于1时&amp;#xff0c;j从1跑到2&lt;br /&gt;i等于2时&amp;#xff0c;j从1跑到3&lt;br /&gt;以此类推&lt;/p&gt;\n&lt;p&gt;望采纳哈&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表是外层循环一次，内层循环一轮吗", ["for  i  in  range(1,10)：", "        for   j  in  range(1,i+1):", "                 print(f\"{j}", "{i}={j", "i}\",end=\" \")", "         print()"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为使用了老旧编译器&amp;#xff0c;内部整数是用16位二进制表示。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么执行乘法后会取模", ["为什么执行乘法后会取模，他没加%呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/170987139256138.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这样吗&amp;#xff1f;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[][] arr &amp;#61; {&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;},\n                {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;}};\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].length; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print((j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;#43; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) * (j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n            }\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["如何用二维数组打出九九乘法表", ["如何用（JAVA）二维数组打出九九乘法表，最好提供一下代码截图，解释一下啥是数组，多谢"]], "Tag": "算法设计"}
{"Answer": "要用代码格式贴。这样显示出来的代码根本不完整。\r\n还有出了什么错误也描述一下啊。", "Konwledge_Point": "乘法", "Question": ["C++高精度乘法求改错。。", ["写了好久的高精度乘法", "\n就是一直错，求改错(不要其他高精乘代码复制过来)", "\n\n", "比较逗的事情是，我的这个代码拿去交高精乘Wrong answer", "\n直接拿去交高精加就AC了。。", "\n\n", "#include", "\n#define len 20000", "\nusing namespace std;", "\n    string s1,s2;", "\nvoid init()", "\n{", "\n    getline(cin,s1);", "\n    getline(cin,s2);", "\n}", "\n\n", "string add(string sx,string sy)", "\n{", "\n    int a[len+1],b[len+1],ans[len+1];", "\n    for(int i=0;i\n        a[s1.length()-i]=s1[i]-'0';", "\n    }", "\n    for(int i=0;i\n        b[s2.length()-i]=s2[i]-'0';", "\n    }", "\n    int tp=0;int tail=max(s1.length(),s2.length());     ", "\n    for(int i=0;i\n        ans[i]=(a[i]+b[i]+tp)%10;", "\n        tp=(a[i]+b[i]+tp)/10;   ", "\n    }", "\n    if(tp==1){", "\n        ans[max(s1.length(),s2.length())+1]=1;", "\n        tail++;", "\n    }", "\n    string answer;", "\n    char temp;", "\n    for(int i=tail;i>=1;i--){", "\n        temp=ans[i]+'0';", "\n        answer=answer+temp;", "\n    } ", "\n    return answer;", "\n}", "\n\n", "string mul(string sx,string sy)", "\n{", "\n    string used=\"0\";", "\n    int a[len+1],b[len+1],c[len+1];", "\n    for(int i=0;i\n        a[s1.length()-i]=s1[i]-'0';", "\n    }", "\n    for(int i=0;i\n        b[s2.length()-i]=s2[i]-'0';", "\n    }", "\n    int tp=0;       ", "\n    for(int i=0;i\n        for(int j=0;j\n            c[j]=(a[i]*b[j]+tp)%10;", "\n            tp=(a[i]*b[j]+tp)/10;   ", "\n        }", "\n        int tail=s2.length()-1;", "\n        if(tp!=0){", "\n            c[s2.length()]=tp;  ", "\n            tail++; ", "\n        }", "\n        string answer=\"\";", "\n        char temp;", "\n        for(int k=tail;k>=0;k--){", "\n            temp=c[k]+'0';", "\n            answer+=temp;", "\n        }", "\n\n", "    used=add(answer,used);      \n}\nreturn used;\n", "\n\n", "}", "\n\n", "int main()", "\n{", "\n    init();", "\n    cout<<mul(s1,s2);", "\n\n", "return 0;\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "http://blog.sina.com.cn/s/blog_48fb20f0010008x5.html", "Konwledge_Point": "乘法", "Question": ["将两个二维数组相乘应该怎么计算？有没有可以实现二维数组乘法运算的函数思路？", ["将两个二维数组相乘应该怎么计算？有没有可以实现二维数组乘法运算的函数思路？"]], "Tag": "算法设计"}
{"Answer": "兩個FOR循环是逐位相乘 [a,b,c]*[d,e,f] 會等於 [ad,ae,af],[bd,be,bf]....等等的組合,然後再错位相加\r\n下面的那個for就是处理进位,在result[index]的數除10儲在carry中\r\nresult赋值那句，长度+3,是為了給result更多的位置去儲存兩個FOR循环逐位相乘出來的數", "Konwledge_Point": "乘法", "Question": ["关于C#的大数乘法问题", ["public static string Multiply(string num1, string num2)", "\n        {", "\n            int carry;", "\n            int[] result;", "\n            int[] multiplicand, multiplier;", "\n\n", "        multiplicand = Reverse(num1);\n        multiplier = Reverse(num2);//这两条代码实现字符串反转，并变成数组形式\n\n        //存储大数相乘后的结果\n        result = new int[multiplicand.Length + multiplier.Length + 3];\n        //两层循环，完成大数乘法运算逐位相乘，然后错位相加\n        for (int indexMplier = 0; indexMplier < multiplier.Length; indexMplier++)\n        {\n            for (int indexMplicand = 0; indexMplicand < multiplicand.Length; indexMplicand++)\n            {\n                result[indexMplier + indexMplicand] +=\n                    multiplicand[indexMplicand] * multiplier[indexMplier];\n            }\n        }  \n        //处理进位\n        for (int index = 0; index < result.Length; index++)\n        {\n            carry = result[index] / 10;\n                   result[index] = result[index] % 10;\n\n            if (carry > 0)\n            {\n                result[index + 1] += carry;\n            }\n        }\n\n        //将结果反转，返回\n        return Reverse(result);\n    }\n}\n    两个for循环都表示什么意思？还有result赋值那句，长度为啥+3？\n"]], "Tag": "算法设计"}
{"Answer": "```\r\n &lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head lang=\"en\"&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;九九乘法表&lt;/title&gt;\r\n    &lt;style&gt;\r\n        div{\r\n            text-align: center;\r\n            width: 1210px;\r\n            margin: 0 auto;\r\n        }\r\n        table{\r\n            margin: 0 auto;\r\n            border: 4px solid green;\r\n            padding: 5px;\r\n        }\r\n        td{\r\n            border: 1px solid green;\r\n            color: blue;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;script&gt;\r\n    // 打印9*9乘法表\r\n    document.write(\"&lt;div&gt;\");\r\n    document.write(\"&lt;h3&gt;\"+\"九九乘法表\"+\"&lt;/H3&gt;\")\r\n    document.write('&lt;table&gt;');//添加table开始标签\r\n    for(var i =1;i&lt;=9;i++){\r\n        document.write('&lt;tr&gt;');//添加tr开始标签\r\n        for(var j=1;j&lt;=i;j++){\r\n            document.write(\"&lt;td&gt;\"+i+\"※\"+j+\"=\"+i*j+\"&lt;/td&gt;\");//让其在td标签中显示\r\n        }\r\n        document.write(\"&lt;/tr&gt;\")//添加tr结束标签\r\n    }\r\n    document.write('&lt;/table&gt;');//添加table结束标签\r\n    document.write('&lt;/div&gt;');\r\n&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n```", "Konwledge_Point": "乘法", "Question": ["缺c币的都来回答吧，请教各位javascript里怎么打印99乘法表？", ["缺c币的都来回答吧，请教各位javascript里怎么打印99乘法表？", "\n1*1 = 1", "\n2 * 1 = 1 2*2 = 4", "\n3 * 1 = 1 3 * 2 = 6 3 * 3 = 9", "\n..."]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{:&amp;lt;2}&amp;#34;&lt;/span&gt;.format(j,i,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i*j:&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}&lt;/span&gt;&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python，请问9*9乘法表运行后只有第三第四行不对齐是什么原因？", ["for row in range(1,10):", "    for column in range(1,row +1):", "        p = row * column", "        print(column,\" × \",row,\" = \",p,\"\\t\",end = ' ')", "    print(\"\") ", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;31行 pritnf  先修正为 printf 后重新编译&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言分数的乘法和加法，以及makeflie的问题", ["c语言分数的乘法和加法，以及makeflie的问题。希望能有详细解答", "               c语言分数的乘法和加法，以及makeflie的问题。希望能有详细解答 ", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n\n&lt;span class=\"hljs-function\"&gt;vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;mul&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &amp;amp;A, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; C;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; A.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() || t; i &amp;#43;&amp;#43; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;lt; A.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;()) t &amp;#43;&amp;#61; A[i] * b;\n        C.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(t % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n        t /&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (C.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() &amp;gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; C.&lt;span class=\"hljs-built_in\"&gt;back&lt;/span&gt;() &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) C.&lt;span class=\"hljs-built_in\"&gt;pop_back&lt;/span&gt;();\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; C;\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    string a;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b;\n\n    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;\n\n    vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; A;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; a.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i -- ) A.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(a[i] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;auto&lt;/span&gt; C &amp;#61; &lt;span class=\"hljs-built_in\"&gt;mul&lt;/span&gt;(A, b);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; C.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i -- ) &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, C[i]);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["求解一道高精度乘法的题，用c++的方法", ["[题目描述]高精度乘法", "\n", "输入两个高精度正整数M和N（M和N均小于100位）。求这两个高精度数的积。", "\n", "输入", "\n", "输入两个高精度正整数M和N。", "\n", "输出", "\n", "求这两个高精度数的积。", "\n", "样例输入", "\n", "36", "\n", "3", "\n", "样例输出", "\n", "108"]], "Tag": "算法设计"}
{"Answer": "你可以编写循环，做10万次加法，再做10万次乘法。看程序的运行的时间。", "Konwledge_Point": "乘法", "Question": ["Java语言有趣的问题，怎么证明，加法运算比乘法运算来的要快呢", ["Java语言有趣的问题，怎么证明，加法运算比乘法运算来的要快呢", "\nJava语言有趣的问题，怎么证明，加法运算比乘法运算来的要快呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为你所有判断都写成赋值了&lt;br /&gt;判断两数相等使用&amp;#61;&amp;#61;,一个等号是赋值符号&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["刚学c，有关九九乘法表的表达，求解", ["\n", "\n", " 想用if语句来完成“输入1-9任意一个数，输出该数对应的乘法表”这个要求“", "不太想通过循环", "想请教一下为什么利用控制台输入一个数字后后得到的是全体乘法表而不是对应该数的乘法表"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;直接对 tr 做样式处理 display:flex;justify-content:center;&lt;/p&gt;\n&lt;p&gt;给 td 进行 width 设置是为了成为等腰&amp;#xff0c;否则&amp;#xff0c;因字符串长度不一致&amp;#xff0c;会有起伏&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;lt;!doctype &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Generator&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;EditPlus®&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Author&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Keywords&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Description&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-css\"&gt;\n  &lt;span class=\"hljs-selector-tag\"&gt;tr&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;:flex;&lt;span class=\"hljs-attribute\"&gt;justify-content&lt;/span&gt;:center;}\n  &lt;span class=\"hljs-selector-tag\"&gt;td&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid black;&lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;20px&lt;/span&gt;;}\n  &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;4&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;6&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;9&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;4&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;8&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;12&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;16&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/356672980436125.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["编写一个加表格的等腰三角形形态的九九乘法表", ["有没有办法让下面的九九乘法表变成等腰三角形"]], "Tag": "算法设计"}
{"Answer": "这个和数据结构有关系\r\n整数型自动转换成正型计算\r\n小数型直接转成double型计算\r\n这是在内存中运算的时候必须这样\r\n你该知道计算机只认识0和1吧 \r\n具体的就是浮点精准度的问题\r\nfloat  精确到小数点后7位\r\ndouble 精确到小数点后15位\r\n\r\n这在往下说就多了 反正你知道知道这些就OK了 具体的你去学学数据结构和程序运行就知道了", "Konwledge_Point": "乘法", "Question": ["js乘法，138.33*100为啥出现这么多小数点？", []], "Tag": "算法设计"}
{"Answer": "一个函数一个函数进行单独测试", "Konwledge_Point": "乘法", "Question": ["一元多项式的乘法与加法运算", ["代码运行时崩溃中断后显示“0x773C6054 (ntdll.dll) (study1.exe 中)处有未经处理的异常: 0xC0000374: 堆已损坏。 (参数: 0x773E2378)。”，但在调试时正常输出，找不出问题所在，希望能得到老师的帮助", "\n\n", "#include<stdio.h>\n#include<stdlib.h>\n\ntypedef struct node\n{\n    int coe;\n    int index;\n    struct node* next;\n}*list;\n\nlist read(void);\nvoid print(list a);\nlist add(list a,list b);\nlist mul(list a,list b);\n\nint main()\n{\n    list a,b,multi,addin;\n\n    a=read();\n    b=read();\n    multi=mul(a,b);\n    addin=add(a,b);\n    print(multi);\n    printf(\"\\n\");\n    print(addin);\n\n    return 0;\n}\n\nlist add(list a,list b)\n{\n    list p,q,s,m;\n    p=a;\n    q=b->next;\n    while(p->next!=NULL&&q!=NULL)\n    {\n        m=q->next;\n        if(q->index>p->next->index)\n        {\n            s=p->next;\n            p->next=q;\n            q->next=s;\n            q=m;\n        }\n        else if(q->index==p->next->index)\n        {\n            p->next->coe+=q->coe;\n            q=m;\n        }\n        else\n        {\n            p=p->next;\n        }\n    }\n    if(p->next==NULL&&p==a)\n        return b;\n    else if(p->next==NULL)\n        p->next=q;\n    return a;\n}\n\nlist mul(list a,list b)\n{\n    list multi;\n    list l[1000];\n    int i,j;\n    list p,q;\n    list m,s;\n\n    p=a->next;\n    q=b->next;\n    multi=(list)malloc(sizeof(struct node));\n    multi->next=NULL;\n\n    i=0;\n    while(p!=NULL)\n    {\n        l[i]=(list)malloc(sizeof(struct node));\n        m=l[i];\n        while(q!=NULL)\n        {\n            s=(list)malloc(sizeof(struct node));\n            s->coe=p->coe*q->coe;\n            s->index=p->index+q->index;\n\n            m->next=s;\n            m=s;\n            q=q->next;\n        }\n        m->next=NULL;\n\n        q=b->next;\n        i++;\n        p=p->next;\n    }\n\n    for(j=0;j<i;j++)\n    {\n        multi=add(multi,l[j]);\n    }\n\n    return multi;\n}\n\nlist read(void)\n{\n    int K;\n    int i;\n    list h,s,p;\n    scanf(\"%d\",&K);\n    h=(list)malloc(sizeof(struct node));\n    p=h;\n    for(i=0;i<K;i++)\n    {\n        s=(list)malloc(sizeof(list));\n        scanf(\"%d%d\",&s->coe,&s->index);\n        p->next=s;\n        p=s;\n    }\n    p->next=NULL;\n    return h;\n}\n\nvoid print(list a)\n{\n    int sam=0;\n    list p;\n    p=a->next;\n    while(p!=NULL)\n    {\n        if(p->coe!=0)\n        {\n            sam=1;\n            printf(\"%d %d \",p->coe,p->index);\n        }\n        else\n            ;\n        p=p->next;\n    }\n    if(sam==0)\n        printf(\"0 0 \");\n    printf(\"\\b\");\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "乘法的问题出在这里：\r\n当你拿多项式a的第一项和b相乘后，b指向的位置已经变成了多项式b的末项。你可以这样改动while(a)循环里的内容（保留b原本指向的位置不动，定义一个新指针s遍历b的每一项）：\r\n...//前面的省略\r\nwhile(a)\r\n{\r\n    Node *t;\r\n    t=(Node *)malloc(sizeof(Node));\r\n    t-&gt;next=NULL;\r\n    Node *r;\r\n    r=t;\r\n\t\tNode *s;\r\n\t\ts=b;\r\n    while(s)\r\n    {\r\n        Node *p;\r\n        p=(Node *)malloc(sizeof(Node));\r\n        p-&gt;Coefficient=s-&gt;Coefficient*a-&gt;Coefficient;\r\n        p-&gt;Exponent=s-&gt;Exponent+a-&gt;Exponent;\r\n        r-&gt;next=p;\r\n        r=p;\r\n        s=s-&gt;next;\r\n    }\r\n    r-&gt;next=NULL;\r\n    a=a-&gt;next;\r\n    L-&gt;next=add_list(L-&gt;next,t-&gt;next);\r\n}\r\n...//后面省略", "Konwledge_Point": "乘法", "Question": ["请问下题C语言实现多项式乘法的代码中存在的错误，加法是正确的输出，乘法为何结果总是错误，本人不胜感激", ["#include", "\n#include", "\ntypedef int elemType;", "\n\n", "typedef struct Node{", "\n    elemType Coefficient;", "\n    elemType Exponent;", "\n    struct Node *next;", "\n}Node,*LinkedList;", "\n\n", "int empty(LinkedList L);", "\nLinkedList LinkedCreatT(int n);", "\nLinkedList add_list(LinkedList a,LinkedList b);", "\nLinkedList multi_list(LinkedList a,LinkedList b);", "\nvoid show(LinkedList L);", "\n\n", "int main()", "\n{", "\n    LinkedList m,n,ans;", "\n    printf(\"输入第一个多项式\\n\");", "\n    m=LinkedCreatT(2);", "\n    show(m);", "\n    printf(\"\\n\");", "\n    printf(\"输入第二个多项式\\n\");", "\n    n=LinkedCreatT(2);", "\n    show(n);", "\n    printf(\"\\n\");", "\n    printf(\"他们的积是\\n\");", "\n    ans= multi_list(m,n);", "\n    show(ans);", "\n    return 0;", "\n}", "\n\n", "int empty(LinkedList L)", "\n{", "\n    return L->next==NULL;", "\n}", "\n\n", "LinkedList LinkedCreatT(int n)", "\n{", "\n    Node *L;", "\n    L=(Node *)malloc(sizeof(Node));", "\n    L->next=NULL;", "\n    Node *r;", "\n    r=L;", "\n    int k=n;", "\n    while(n--)", "\n    {", "\n        printf(\"请输入第%d项\\n\",k-n); ", "\n        elemType coe,exp;", "\n        scanf(\"%d%d\",&coe,&exp);", "\n        Node *p;", "\n        p=(Node *)malloc(sizeof(Node));", "\n        p->Coefficient=coe;", "\n        p->Exponent=exp;", "\n        r->next=p;", "\n        r=p;", "\n    }", "\n    r->next=NULL;", "\n    return L->next;", "\n}", "\n\n", "LinkedList add_list(LinkedList a,LinkedList b)", "\n{", "\n    Node *L;", "\n    L=(Node *)malloc(sizeof(Node));", "\n    L->next=NULL;", "\n    Node *r;", "\n    r=L;", "\n    while(a&&b)", "\n    {", "\n        Node *p;", "\n        p=(Node *)malloc(sizeof(Node));", "\n        if(a->Exponent>b->Exponent)", "\n        {", "\n            p->Exponent=a->Exponent;", "\n            p->Coefficient=a->Coefficient;", "\n            a=a->next;", "\n            r->next=p;", "\n            r=p;", "\n        }", "\n        else if(a->ExponentExponent)", "\n        {", "\n            p->Exponent=b->Exponent;", "\n            p->Coefficient=b->Coefficient;", "\n            b=b->next;", "\n            r->next=p;", "\n            r=p;", "\n        }", "\n        else", "\n        {", "\n            if((a->Coefficient+b->Coefficient)!=0)", "\n            {", "\n            p->Coefficient=a->Coefficient+b->Coefficient;", "\n            p->Exponent=b->Exponent;", "\n            r->next=p;", "\n            r=p;", "\n            }", "\n            a=a->next;", "\n            b=b->next;", "\n        }", "\n    }", "\n    if(a)", "\n    r->next=a;", "\n    else", "\n    r->next=b;", "\n    return L->next;", "\n}", "\n\n", "LinkedList multi_list(LinkedList a,LinkedList b)", "\n{", "\n    Node *L;", "\n    L=(Node *)malloc(sizeof(Node));", "\n    L->next=NULL;", "\n    while(a)", "\n    {", "\n        Node *t;", "\n        t=(Node *)malloc(sizeof(Node));", "\n        t->next=NULL;", "\n        Node *r;", "\n        r=t;", "\n        while(b)", "\n        {", "\n            Node *p;", "\n            p=(Node *)malloc(sizeof(Node));", "\n            p->Coefficient=b->Coefficient*a->Coefficient;", "\n            p->Exponent=b->Exponent+a->Exponent;", "\n            r->next=p;", "\n            r=p;", "\n            b=b->next;", "\n        }", "\n        r->next=NULL;", "\n\n", "    a=a->next;\n    printf(\"多项式当前是\\n\");\n    show(L->next);\n    printf(\"新链是\\n\");\n    show(t->next);\n\n    L->next=add_list(L->next,t->next);\n    printf(\"多项式变为\\n\");\n    show(L->next);\n}\nreturn L->next;\n", "\n\n", "}", "\nvoid show(LinkedList L)", "\n{", "\n    int i=1;", "\n    while(L) ", "\n    {", "\n        printf(\"该多项式是%d 乘x的%d次方\\n\",L->Coefficient,L->Exponent);", "\n        L=L->next;", "\n    }", "\n}", "\n\n", "本人的问题主要是在例如乘法中(a+b)*(c+d)，表示c乘(a+b)的链表能正常返回，但永远只能返回这一项，之后的项数不能返回，通过查看打印结果发现除第一次以外之后的t链表永远为空。谢谢各位大神的赐教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;能用&amp;#xff0c;楼上说的对&amp;#xff0c;只要芯片资源够&amp;#xff0c;怎么用都行。&lt;br /&gt;但是也不能随便用&amp;#xff0c;否则一些 DSP、乘法 IP、除法 IP 就没啥意思了。&lt;br /&gt;按你的举例&lt;br /&gt;always&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;(posedge &lt;/a&gt;clk)&lt;br /&gt;begin&lt;br /&gt; a &amp;lt;&amp;#61; b*c;&lt;br /&gt; d &amp;lt;&amp;#61; b/c;&lt;br /&gt;end&lt;/p&gt;\n&lt;p&gt;这个 a、b、c 的位宽&amp;#xff0c;clk 的频率都会影响这也表达式的使用&lt;br /&gt;1&amp;#xff1a;假如 b 和 c 都是常数。可以没有顾忌的随便使用&amp;#xff0c;不会有速度问题&amp;#xff0c;也不会有资源问题。&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    比如:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; 3 * 4;//与 a &amp;lt;&amp;#61; 12;    //是一样的&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; 12 /3;//与 a &amp;lt;&amp;#61; 4;        //是一样的&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;2&amp;#xff1a;假如 b 和 c 只有一个是常数。需要适当考虑 clk 的频率&amp;#xff0c;会优化&amp;#xff0c;优化后也会有少许延时&amp;#xff0c;也会有速度问题。一般在 XILINX A7 -3 系列&amp;#xff0c;100M时钟可以正常使用&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    比如:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b * 4;        //会优化成  a &amp;lt;&amp;#61; b &amp;lt;&amp;lt; 2;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b * 255;    //会优化成  a &amp;lt;&amp;#61; (b &amp;lt;&amp;lt; 8) -b;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b / 4;        //会优化成  a &amp;lt;&amp;#61; b &amp;gt;&amp;gt; 2;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b / 255;    //会优化成  a &amp;lt;&amp;#61; (b &amp;gt;&amp;gt; 8) &amp;#43; (b &amp;gt;&amp;gt; 16);&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;3&amp;#xff1a;假如 b 和 c 都不是常数。需要考虑 clk 的频率&amp;#xff0c;而且 b、c 的位宽越大&amp;#xff0c;越费时间。在我的一些设计中&amp;#xff0c;小于 1M 的应用一般不考虑速度。能正常使用。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["verilog 中乘法除法能不能直接在表达式中使用？ 比如 a <= b*c; d <= b/c;", ["verilog 中乘法除法能不能直接在表达式中使用？ 比如", "always", "@(posedge ", "clk)", "begin", "    a <= b*c;", "   d <= b/c;", "end"]], "Tag": "算法设计"}
{"Answer": "```\r\n&lt;div id=\"jiujiu\" class=\"aaa\"&gt;&lt;/div&gt;\r\n\t\t&lt;script&gt;\r\n\t\t\tvar html = \"\";\r\n\t\t\tfor(var i =1; i&lt;=9;i++){\r\n\t\t\t\tfor(var j =1;j&lt;=i;j++){\r\n\t\t\t\t\thtml += i+\" * \"+ j + \" = \" + (i*j) + \"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\";\r\n\t\t\t\t\tif(i*j &lt;10){\r\n\t\t\t\t\t\thtml += \"&amp;nbsp;&amp;nbsp;\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thtml += \"&lt;br /&gt;\";\r\n\t\t\t}\r\n\t\t\tdocument.getElementById(\"jiujiu\").innerHTML = html ;\r\n\r\n\t\t&lt;/script&gt;\r\n```", "Konwledge_Point": "乘法", "Question": ["九九乘法表。显示页面不显示。", ["我想输出一个九九乘法表，代码如下图。显示页面上什么也显示不出来。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;报错贴出来&amp;#xff0c;你这个不是报错提示&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用 HBuilderX 编辑99乘法表的代码，但是运行不成功，求指点迷津！", ["要写一个99乘法表的代码，照着书打出来，但浏览器渲染不了。查了一下他的报错，但是看不明白。", "这是报错的代码：", "document.getElementById('table').innerHTML=str;"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;IEEE 754 浮点数标准&lt;br /&gt;存储二进制和转换二进制是有区别的&amp;#xff0c;可能会出现误差问题&lt;br /&gt;解决可以使用decimal&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["python学习的时候发生的一个问题，乘法之间出现错误，但是找不到原因在哪", ["乘法之间出现错误，但是找不到原因在哪，计算3*4.8结果等于14.399999999999999而不是14.4", "\n", "\n", "定义苹果的单价并转换为int整数", "\n", "price = int(input(\"请输入苹果的单价：\"))", "\n", "定义苹果的重量并转换维float小数", "\n", "weight = float(input(\"请输入苹果的重量：\"))", "\n", "计算苹果的价格", "\n", "money = price * weight", "\n", "输出结果到屏幕上", "\n", "print(money)", "\n", "\n", "D:\\anaconda3\\python.exe D:/01-Python基础/08买苹果改进版.py", "请输入苹果的单价：3", "请输入苹果的重量：4.8", "14.399999999999999", "\n", "进程已结束，退出代码为 0", "\n", "\n", "我就想知道是哪里出现了问题。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的理解没错&amp;#xff0c;但是描述不是很好&lt;br /&gt;温馨提示&amp;#xff1a;你的代码里多了个没用的print()和两个无用的pass&lt;br /&gt;如果对你有帮助&amp;#xff0c;希望点击右上角给个采纳哦~&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["请问python九九乘法表原理是什么？", ["刚刚跟着网上的python教程学到了九九乘法表。对于原理想了半天想到了这样一个解释，请各位看是否正确", "\n", "hang", "=", "1", "\n", "while", " ", "hang", "<=", "9", ":\n    lie=", "1", "\n    ", "while", " lie<=", "hang", ":\n        ", "print", "('", "%d", "*", "%d", "=", "%d", "'%(", "hang", ",lie,", "hang", "*lie),end=", "\" \"", ")\n        lie+=", "1", "\n        pass\n    ", "print", "()\n    ", "hang", "+=", "1", "\n    pass\n", "\n", "这个“行”从1开始加，2，3.直到9。而“列”每次都是从1开始与“行”相乘后再加一再相乘.直到行等于列，此时行加一，继续进行上述过程直到行=9.", "描述的不太清楚.但我觉得这和高中数学的算法挺相似的，不知道思路是否正确，谢了。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt;&amp;#61; i)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d &amp;#34;&lt;/span&gt;, i, j, i * j);\n            j&amp;#43;&amp;#43;;\n        }\n        i&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img title=\"1629187213(1).jpg\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/822032781926122.jpg\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用while循环输出9X9乘法表，要求附上代码和运行结果图", ["用while循环输出9X9乘法表，要求附上代码和运行结果图（用C语言）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;for i in range(1,10):&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for j in range(1,i&amp;#43;1):&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        print(str(j)&amp;#43;&amp;#34;X&amp;#34;&amp;#43;str(i)&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;str(j*i)&amp;#43;&amp;#34;\\t&amp;#34;,end&amp;#61;&amp;#34;&amp;#34;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    print()&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["我这段有关九九乘法口诀表的代码，到底是哪里错了？", ["\n", "                     16.demo.py（使用嵌套的", "for", "循环语句打印九九乘法口快表）py:c:UsersV\n                    ", "File", " ", "Edit", " ", "Format", " ", "Run", " Options ", "Window", " ", "Help", "\n                    Loriin ", "range", "（1.10)\n                          torjinr\n LPython3.64Shell\n                                       (1.1+1)\n                                                         STR(1*J)+1\n                                                     #换行  ", "File", " ", "Edit", " ", "Shell", " Debug\n Python 3.6.4(3.6.4:0\n    ", "copyright", ".             CE\n                                                               CSyntaxErron\n                                                                                   stringlitera\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;S&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;S&lt;/span&gt;&amp;#61;S*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;i\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/496454522436129.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用Python打印古怪的乘法", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;2d是字宽的意思&lt;br /&gt;d表示要输出一个整数&amp;#xff0c;2表示这个整数要占2个字符&amp;#xff0c;如果这个整数只有一位数不足2个字符&amp;#xff0c;会在前面补充空格。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python输出乘法口诀表中的2d是什么意思", ["for i in range(1,10):", "    for j in range(1,i+1):", "           print(\"% d*% d=%2d\"%(j,i, i*j), end=' ')", "    print()", "这里面的2d是啥意思啊", "(这是一个输出乘法口诀表的Python程序)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/45675861454612.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么这个九九乘法表没办法在同一行输出（就呈现出那个阶梯的那个形状）", ["为什么这个九九乘法表不能在同一行输出就是呈现出成阶梯状那样输出"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这就是格式化输出&amp;#xff0c;一般输出整数用&lt;code class=\"language-javascript\"&gt;%d&lt;/code&gt;&amp;#xff0c;输出浮点数用&lt;code class=\"language-javascript\"&gt;%f&lt;/code&gt;&amp;#xff0c;输出字符串用&lt;code class=\"language-javascript\"&gt;%s&lt;/code&gt;&amp;#xff0c;科学计数法表达的输出用&lt;code class=\"language-javascript\"&gt;%e&lt;/code&gt;等等。&lt;br /&gt;&lt;code class=\"language-javascript\"&gt;%2d&lt;/code&gt;指的是输出占两个位置的整数&lt;br /&gt;然后&lt;code class=\"language-javascript\"&gt;%-d&lt;/code&gt;是左对齐&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;%&amp;#43;d&lt;/code&gt;是右对齐&amp;#xff0c;等等 &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于用matlab做九九乘法表", ["大佬们，这段程序我把fprintf(\"%d*%d=%-2d\",j,i,j*i)里面的d换成其他的字母就不行了，结果就出不来了，这是为什么呀，是什么原理，还有后面那个%-2d，为什么是%-2d呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用f-string串比较好理解&amp;#xff0c;其中{i*j:&amp;gt;2} :&amp;gt;2表示右对齐&amp;#xff0c;数字表示留几个字符空间。 :&amp;lt;3则表示左对齐&amp;#xff1b;居中对齐则用 :^3&lt;br /&gt;双重循环的循环变量对应的是被乘数和乘数&amp;#xff0c;有的题数字对换&amp;#xff0c;乘法表排列有的要求写成正三角&amp;#xff0c;需要相应修改&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;for i in range(1,10):\n&lt;span class=\"hljs-code\"&gt;    for j in range(1,10-i&amp;#43;1):\n        print(f&amp;#39;{i}*{j}&amp;#61;{i*j:&amp;gt;2}&amp;#39;,end&amp;#61;&amp;#39;  &amp;#39;)\n    print()\n&lt;/span&gt;\n&amp;#39;&amp;#39;&amp;#39;--result:\n1&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 1  1*&lt;/span&gt;2&amp;#61; 2  1&lt;span class=\"hljs-emphasis\"&gt;*3&amp;#61; 3  1*&lt;/span&gt;4&amp;#61; 4  1&lt;span class=\"hljs-emphasis\"&gt;*5&amp;#61; 5  1*&lt;/span&gt;6&amp;#61; 6  1&lt;span class=\"hljs-emphasis\"&gt;*7&amp;#61; 7  1*&lt;/span&gt;8&amp;#61; 8  1&lt;span class=\"hljs-emphasis\"&gt;*9&amp;#61; 9  \n2*&lt;/span&gt;1&amp;#61; 2  2&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61; 4  2*&lt;/span&gt;3&amp;#61; 6  2&lt;span class=\"hljs-emphasis\"&gt;*4&amp;#61; 8  2*&lt;/span&gt;5&amp;#61;10  2&lt;span class=\"hljs-emphasis\"&gt;*6&amp;#61;12  2*&lt;/span&gt;7&amp;#61;14  2&lt;span class=\"hljs-emphasis\"&gt;*8&amp;#61;16  \n3*&lt;/span&gt;1&amp;#61; 3  3&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61; 6  3*&lt;/span&gt;3&amp;#61; 9  3&lt;span class=\"hljs-emphasis\"&gt;*4&amp;#61;12  3*&lt;/span&gt;5&amp;#61;15  3&lt;span class=\"hljs-emphasis\"&gt;*6&amp;#61;18  3*&lt;/span&gt;7&amp;#61;21  \n4&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 4  4*&lt;/span&gt;2&amp;#61; 8  4&lt;span class=\"hljs-emphasis\"&gt;*3&amp;#61;12  4*&lt;/span&gt;4&amp;#61;16  4&lt;span class=\"hljs-emphasis\"&gt;*5&amp;#61;20  4*&lt;/span&gt;6&amp;#61;24  \n5&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 5  5*&lt;/span&gt;2&amp;#61;10  5&lt;span class=\"hljs-emphasis\"&gt;*3&amp;#61;15  5*&lt;/span&gt;4&amp;#61;20  5&lt;span class=\"hljs-emphasis\"&gt;*5&amp;#61;25  \n6*&lt;/span&gt;1&amp;#61; 6  6&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61;12  6*&lt;/span&gt;3&amp;#61;18  6&lt;span class=\"hljs-emphasis\"&gt;*4&amp;#61;24  \n7*&lt;/span&gt;1&amp;#61; 7  7&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61;14  7*&lt;/span&gt;3&amp;#61;21  \n8&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 8  8*&lt;/span&gt;2&amp;#61;16  \n9&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 9  \n&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python里面这个9*9的乘法表怎么弄啊，想要有个解释，不是很理解，希望大家看看，比较急", ["python里面这个9*9的乘法表怎么弄啊，想要有个解释，不是很理解，希望大家看看，比较急"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;TestApp&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;){\n                System.out.&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&amp;#43;j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;i*j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n            }\n            System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以参考一下&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么九九乘法表四位列宽并左对齐，老是格式错误，烦死了(语言-java)", ["public class Main{", "    public static void main(String[] args) {", "        for(int i=1;i<=9;i++) {", "            for(int j=1;j<=9;j++) {", "                System.out.print(i+\"", "\"+j+\"=\"+(i", "j)+\"\\t\");", "            }", "            System.out.println();", "\n", "    }\n    \n}\n", "\n", "}", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;宏定义只是单纯的替换后面的符号哦&amp;#xff0c;没有括号的呀&amp;#xff0c;在计算时不要加上括号呀&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n(M&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)* M/2   换个写法&amp;#xff08;比较好理解&amp;#xff09;如下\n\n(M&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)* M*1/2  对M直接宏替换后\n\n(N&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)* N&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;*1/2&amp;#xff0c;在对N进行宏替换\n\n(2&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)*2&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;/2 &amp;#61; 8.5\n\n在printf使用%d进行整形输出&amp;#xff0c;所以答案为8\n\n如果对你有帮助的话&amp;#xff0c;能不能点击右上方【采纳该答案】呢&amp;#xff0c;谢谢支持&amp;#xff01;&amp;#xff01;&amp;#xff01;\n \n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["这个运算的咋和我运算的顺序不一样，感觉我的才是对的，到底哪里出了问题啊，都是普通的乘法和加法，咋就算错了呢。", ["\n", "这个运算的咋和我运算的顺序不一样，感觉我的才是对的，到底哪里出了问题啊，都是普通的乘法和加法，咋就算错了呢。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是印错了&amp;#xff0c;应该是 1&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["原码并行乘法 阵列乘法器", []], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/qingshenxue/article/details/6210169", "Konwledge_Point": "乘法", "Question": ["新手，汇编语言乘法程序", ["看不太懂这个程序里寄存器怎么存数据的，进位是怎么做到的，以及最后结果是怎么拼的，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;谁说没规定&amp;#xff1f;参考下面&lt;br /&gt;52&amp;#xff1a; //| *                | Multiplication                          | Left to right |&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;//C&amp;#43;&amp;#43; Operators\n//  Operators specify an evaluation to be performed on one of the following:\n//    One operand (unary operator)\n//    Two operands (binary operator)\n//    Three operands (ternary operator)\n//  The C&amp;#43;&amp;#43; language includes all C operators and adds several new operators.\n//  Table 1.1 lists the operators available in Microsoft C&amp;#43;&amp;#43;.\n//  Operators follow a strict precedence which defines the evaluation order of\n//expressions containing these operators.  Operators associate with either the\n//expression on their left or the expression on their right;    this is called\n//“associativity.” Operators in the same group have equal precedence and are\n//evaluated left to right in an expression unless explicitly forced by a pair of\n//parentheses, ( ).\n//  Table 1.1 shows the precedence and associativity of C&amp;#43;&amp;#43; operators\n//  (from highest to lowest precedence).\n//\n//Table 1.1   C&amp;#43;&amp;#43; Operator Precedence and Associativity\n// The highest precedence level is at the top of the table.\n//&amp;#43;------------------&amp;#43;-----------------------------------------&amp;#43;---------------&amp;#43;\n//|&lt;span class=\"hljs-string\"&gt; Operator         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Name or Meaning                         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Associativity &lt;/span&gt;|\n//&amp;#43;------------------&amp;#43;-----------------------------------------&amp;#43;---------------&amp;#43;\n//|&lt;span class=\"hljs-string\"&gt; ::               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Scope resolution                        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ::               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Global                                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; [ ]              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Array subscript                         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ( )              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Function call                           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ( )              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Conversion                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; .                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Member selection (object)               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -&amp;gt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Member selection (pointer)              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;&amp;#43;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Postfix increment                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; --               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Postfix decrement                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; new              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Allocate object                         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; delete           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Deallocate object                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; delete[ ]        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Deallocate object                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;&amp;#43;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Prefix increment                        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; --               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Prefix decrement                        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; *                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Dereference                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Address-of                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Unary plus                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Arithmetic negation (unary)             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; !                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Logical NOT                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ~                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise complement                      &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; sizeof           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Size of object                          &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; sizeof ( )       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Size of type                            &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; typeid( )        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; type name                               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; (type)           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; const_cast       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; dynamic_cast     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; reinterpret_cast &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; static_cast      &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; .*               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Apply pointer to class member (objects) &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -&amp;gt;*              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Dereference pointer to class member     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; *                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Multiplication                          &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; /                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Division                                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; %                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Remainder (modulus)                     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Addition                                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Subtraction                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;&amp;lt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left shift                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;&amp;gt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right shift                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Less than                               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Greater than                            &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Less than or equal to                   &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Greater than or equal to                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#61;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Equality                                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; !&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Inequality                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise AND                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ^                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise exclusive OR                    &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise OR                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;&amp;amp;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Logical AND                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;||&lt;span class=\"hljs-string\"&gt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Logical OR                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; e1?e2:e3         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Conditional                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#61;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Assignment                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; *&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Multiplication assignment               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; /&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Division assignment                     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; %&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Modulus assignment                      &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Addition assignment                     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Subtraction assignment                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;&amp;lt;&amp;#61;              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left-shift assignment                   &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;&amp;gt;&amp;#61;              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right-shift assignment                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise AND assignment                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise inclusive OR assignment         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ^&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise exclusive OR assignment         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ,                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Comma                                   &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//&amp;#43;------------------&amp;#43;-----------------------------------------&amp;#43;---------------&amp;#43;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;**&lt;br /&gt;不要迷信书、考题、老师、回帖&amp;#xff1b;&lt;br /&gt;要迷信CPU、编译器、调试器、运行结果。&lt;br /&gt;并请结合“盲人摸太阳”和“驾船出海时一定只带一个指南针。”加以理解。&lt;br /&gt;任何理论、权威、传说、真理、标准、解释、想象、知识……都比不上摆在眼前的事实&amp;#xff01;**&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["已知e1和e2是算术表达式，则对于乘法运算e1*e2的运算次序是？正确答案是C选项，但是希望有朋友可以解释C选项的答案。", ["已知e1和e2是算术表达式，则对于乘法运算e1*e2的运算次序是？正确答案是C选项，但是希望有朋友可以解释C选项的答案。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;零界点 判断处理一下就可以了&amp;#xff0c;参考一下 有用的话 采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(i&amp;#43;&amp;#34;\\t&amp;#34;);\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j&amp;#43;&amp;#34;\\t&amp;#34;);\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j*i&amp;#43;&amp;#34;\\t&amp;#34;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n    }\n     }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/836450111356192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Java实现12×12的乘法算数表格", ["问题遇到的现象和发生背景", "\n", "无法搭建表格的第一行和第一列，第一行和第一列都是0 1 2 3 4 5 6 7 8 9 10 11 12", "\n", "问题相关代码，请勿粘贴截图", "\n", "public class A2 {", "    public static void main(String[] args) {", "\n", "    ", "for", "(", "int", " i=", "0", "; i<=", "12", "; i++){\n        ", "for", "(", "int", " j=", "0", "; j<=", "12", ";j++){\n            ", "System", ".", "out", ".print(j*i+\"\\t\");\n        }\n        ", "System", ".", "out", ".println();\n    }\n     }\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "尝试再嵌套一层代码将第一行与第一列剥离出来，但是失败；", "尝试使用两个并列循坏，还是不行", "\n", "我想要达到的结果", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;:=&lt;/code&gt; does two things, it creates a variable and assigns a value to it. You are trying to create a new variable called &lt;code&gt;h&lt;/code&gt; in the second line and the compiler is telling you that it would not create a new variable.&lt;/p&gt;\n\n&lt;p&gt;Just replace that &lt;code&gt;:=&lt;/code&gt; with &lt;code&gt;=&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["如何设置一个指针乘法功能？  [重复]", ["\n\n", "\n    ", "This question already has an answer here:", "\n    ", "\n", "\n            ", "no new variables on left side of :=", "\n                \n                    4 answers\n                \n        ", "\n    ", "\n", "\n\n", "How can I set one pointer to multiply function?", "\n\n", "package main\n\nimport \"fmt\"\n\ntype Cube struct {\n    u int\n}\n\nfunc (h *Cube) space() int {\n        return h.u * h.u * h.u\n}\n\nfunc main() {\n        h := Cube {\n                u: 10,\n        }\n        fmt.Println(h.space())\n\n        h := Cube {\n                u: 100,\n        }\n        fmt.Println(h.space())\n}\n", "\n\n", "The first request of println give back 1000, but with the second println it goes wrong telling no new variables on left side of :=\nbut I want the pointer to use all same just the u: to 100 change", "\n\n", "</div>\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It'd be possible for you to write your own &lt;code&gt;multiplyExact&lt;/code&gt; based on the suggestions on this thread:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://groups.google.com/forum/#!msg/golang-nuts/h5oSN5t3Au4/KaNQREhZh0QJ\" rel=\"nofollow noreferrer\"&gt;https://groups.google.com/forum/#!msg/golang-nuts/h5oSN5t3Au4/KaNQREhZh0QJ&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const mostNegative = -(mostPositive + 1)\nconst mostPositive = 1&amp;lt;&amp;lt;63 - 1\n\nfunc multiplyExact(a, b int64) (int64, error) {\n    result := a * b\n    if a == 0 || b == 0 || a == 1 || b == 1 {\n        return result, nil\n    }\n    if a == mostNegative || b == mostNegative {\n        return result, fmt.Errorf(\"Overflow multiplying %v and %v\", a, b)\n    }\n    if result/b != a {\n        return result, fmt.Errorf(\"Overflow multiplying %v and %v\", a, b)\n    }\n    return result, nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Playground: &lt;a href=\"https://play.golang.org/p/V_TSC44VcPY\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/V_TSC44VcPY&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["测试整数乘法的溢出", ["\n\n", "Overflows don't seem to be part of the builtin packages in go.", "\n\n", "What is the best way to test that you don't overflow when multiplying 2 integers ?", "\n\n", "Something similar to Java ", "Math.multiplyExact", " ...", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;尝试一下这个&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;[sigmak^&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;^(re)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)-&lt;span class=\"hljs-built_in\"&gt;p13&lt;/span&gt;,zeros(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,M_irs)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    zeros(M_irs,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),&lt;span class=\"hljs-built_in\"&gt;p13&lt;/span&gt;*epsilong_e^(-&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*eye(M_irs)]&amp;#43;...\n    (&lt;span class=\"hljs-built_in\"&gt;S3&lt;/span&gt;*theta0*h_BI)*((&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;^(re)-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*Zx-W1x)*((&lt;span class=\"hljs-built_in\"&gt;S3&lt;/span&gt;*theta0*h_BI)&lt;span class=\"hljs-string\"&gt;&amp;#39;);\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["matlab用于矩阵乘法的维度不正确", ["问题遇到的现象和发生背景", "\n", "编写代码时，提示用于矩阵乘法的维度不正确，但是我检查了矩阵的维度，保第一个矩阵中的列数与第二个矩阵中的行数匹配，不知道问题出在了哪里", "\n", "问题相关代码，请勿粘贴截图", "\n", "\n", "\n", "%% step2:优化预编码向量Wx和人工噪声协方差Zx\nS3=[h_I3.',eye(M_irs)].';     %转置是.',共轭转置是'\nS4=[h_I4.',eye(M_irs)].';\n%% 对于任何可行点W1t,W2t,Zxt\nM1=h_BI'*theta0'*(h_I1'*h_I1)*theta0*h_BI;\nM2=h_BI'*theta0'*(h_I2'*h_I2)*theta0*h_BI;\nW1t=eye(Nt,Nt);\nW2t=eye(Nt,Nt);\nZxt=eye(Nt,Nt);\ncvx_begin sdp\n    variables W1x(Nt,Nt) W2x(Nt,Nt) \n    variable Zx(Nt,Nt) complex semidefinite\n    variable p13  nonnegative\n    variable p23  nonnegative\n    variable p14  nonnegative\n    variable p24  nonnegative\nobj=-", "log", "(", "real", "(", "trace", "(Zx*M1))+sigmak^2+", "real", "(", "trace", "(M1*W1x))+", "real", "(", "trace", "(M1*W2x)))-", "log", "(", "real", "(", "trace", "(Zx*M2))+sigmak^2+", "real", "(", "trace", "(M2*W1x)))+", "real", "(", "trace", "(M2*W2x))-", "real", "(", "trace", "((-(1/", "log", "(2))*(M1/", "real", "((", "trace", "(Zxt*M1))+sigmak^2+", "real", "(", "trace", "(M1*W2t)))+M2/(", "real", "(", "trace", "(Zxt*M2))+sigmak^2+", "real", "(", "trace", "(M2*W1t)))))'*Zx))-", "real", "(", "trace", "((-(1/", "log", "(2))*M2/(", "real", "(", "trace", "(Zxt*M2))+sigmak^2+", "real", "(", "trace", "(M2*W1t))))'*W1x))-", "real", "(", "trace", "((-(1/", "log", "(2))*M1/", "real", "((", "trace", "(Zxt*M1))+sigmak^2+", "real", "(", "trace", "(M1*W2t))))'*W2x))-re;\nminimize obj\n    subject to \n    ", "trace", "(W1x)+", "trace", "(Zx)<=P;\n    ", "trace", "(W2x)+", "trace", "(Zx)<=P;\n[sigmak^2*(2^(re)-1)-p13,zeros(1,M_irs);zeros(M_irs,1),p13*epsilong_e^(-2)*eye(M_irs)]+S3*theta0*h_BI*((2^(re)-1)*Zx-W1x)*h_BI'*theta0'*S3'>=0;\n%矩阵维度：前面是(M_irs+1)*(M_irs+1)的矩阵；S3是(M_irs+1)*(M_irs)；theta0是(M_irs)*(M_irs)；h_BI是(M_irs)*16；Zx,W1x是16*16；\nZx>=0;\nW1x>=0;\nW2x>=0;\ncvx_end\n\n\n", "\n", "运行结果及报错内容", "\n", "提示这句：[sigmak^2*(2^(re)-1)-p13,zeros(1,M_irs);zeros(M_irs,1),p13", "epsilong_e^(-2)", "eye(M_irs)]+S3", "theta0", "h_BI*((2^(re)-1)*Zx-W1x)*h_BI'*theta0'", "S3'>=0;", "错误使用  *", "用于矩阵乘法的维度不正确。请检查并确保第一个矩阵中的列数与第二个矩阵中的行数匹配。要执行按元素相乘，请使用 '.", "'。", "\n", "我的解答思路和尝试过的方法", "\n", "这是工作区的值", "\n", "\n", "我想要达到的结果", "\n", "不报错"]], "Tag": "算法设计"}
{"Answer": "```\r\n \r\n&lt;script&gt;\r\n    var i,j;\r\n    var strHtml=\"&lt;table&gt;\";\r\n    for(i=1;i&lt;10;i++){\r\n        strHtml += \"&lt;tr&gt;\";\r\n        for(j=1;j&lt;=i;j++){\r\n            strHtml+= \"&lt;td&gt;\" +j + \"*\" + i + \"=\" + (i * j) +\"&lt;/td&gt;\";\r\n        }\r\n        strHtml+= \"&lt;/tr&gt;\";\r\n    }\r\n    strHtml+= \"&lt;/table&gt;\";\r\n    document.write(strHtml);\r\n&lt;/script&gt;\r\n```\r\n最终效果如图：\r\n![图片说明](https://img-ask.csdn.net/upload/201711/20/1511142649_864182.png)", "Konwledge_Point": "乘法", "Question": ["关于js基础设计，九九乘法表与表格问题", ["九九乘法表", "\n在显示的时候用表格形式      就是等式在表格里", "\n要求用for或while循环做", "\n求大神带飞"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;  i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n          &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d * %d &amp;#61; %d&amp;#34;&lt;/span&gt;, i, j, i * j);\n          &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j !&amp;#61; i)\n              &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n              &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n   }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用C语言打出九九乘法表", ["用C语言打出九九乘法表！ndjhshshshhshsh"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;using System;&lt;br /&gt;using System.Collections.Generic;&lt;br /&gt;using System.ComponentModel;&lt;br /&gt;using System.Data;&lt;br /&gt;using System.Drawing;&lt;br /&gt;using System.Linq;&lt;br /&gt;using System.Text;&lt;br /&gt;using System.Threading.Tasks;&lt;br /&gt;using System.Windows.Forms;&lt;/p&gt;\n&lt;p&gt;namespace WindowsFormsApplication3&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;    public partial class Form1 : Form&lt;br /&gt;    {&lt;!-- --&gt;&lt;br /&gt;        public Form1()&lt;br /&gt;        {&lt;!-- --&gt;&lt;br /&gt;            InitializeComponent();&lt;br /&gt;        }&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;label1_Click&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e&lt;/span&gt;)&lt;/span&gt;\n    {\n\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Form1_Load&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, EventArgs e&lt;/span&gt;)&lt;/span&gt;\n    {\n        label1.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;九九乘法表:\\n\\n&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)\n            {\n                label1.Text &amp;#43;&amp;#61; (j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;#43; i &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; i * j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n            }\n            label1.Text &amp;#43;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;;\n        }\n\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c#中的使用窗体制作九九乘法表", ["会用代码敲九九乘法表输出，但不知道如何在使用visual studio下实现窗体的九九乘法表"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;clc,clear,close all;\n&lt;span class=\"hljs-attribute\"&gt;N&lt;/span&gt;&amp;#61;9;\n&lt;span class=\"hljs-attribute\"&gt;data&lt;/span&gt;&amp;#61;blanks(7*N);\nfilename &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;cfb.txt&amp;#39;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1:N\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1:i\n        &lt;span class=\"hljs-attribute\"&gt;m&lt;/span&gt;&amp;#61;j*7-6;\n        &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;m&amp;#43;6;\n        data(1,m:n) &amp;#61; sprintf(&lt;span class=\"hljs-string\"&gt;&amp;#39;%d*%d&amp;#61;%2d &amp;#39;&lt;/span&gt;,j,i,j*i);\n    end\n    fid &amp;#61; fopen(filename,&lt;span class=\"hljs-string\"&gt;&amp;#39;a&amp;#43;&amp;#39;&lt;/span&gt;);\n    fprintf(fid,&lt;span class=\"hljs-string\"&gt;&amp;#39;%s\\n&amp;#39;&lt;/span&gt;,num2str(data));\ndisp(data);\nend\nfclose(fid);\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/948861605656120.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["matlab 如何将乘法口诀表写入txt文件", ["主要是怎么描述乘法口诀表主体，描述乘法口诀表。", "将乘法口诀表写入txt文件"]], "Tag": "算法设计"}
{"Answer": "for(i=0;i&lt;strlen(m);i++)\r\n m是整数，不应该调用strlen\r\n \r\n 按照你的思路给你修改了下，注意这个程序只支持VC++，gcc需要自己实现 itoa 这个函数\r\n \r\n```\r\n#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;string.h&gt;\r\n#include &lt;math.h&gt;\r\nint main()\r\n{\r\n    int n1,m1,sum=0,i,j;\r\n    int a[10],b[10];\r\n    scanf(\"%d %d\",&amp;n1,&amp;m1);\r\n\tchar n[100];\r\n\tchar m[100];\r\n\titoa(n1, n, 10);\r\n\titoa(m1, m, 10);\r\n    for(i=0;i&lt;strlen(n);i++)\r\n    {\r\n        a[i]=n1%10;\r\n        n1=n1/10;\r\n    }\r\n    for(i=0;i&lt;strlen(m);i++)\r\n    {\r\n        b[i]=m1%10;\r\n        m1=m1/10;\r\n    }\r\n    for(i=0;i&lt;strlen(n);i++)\r\n    {\r\n        for(j=0;j&lt;strlen(m);j++) //注意这里是j++不是i++\r\n        {\r\n            sum=sum+a[i]*b[j];\r\n        }\r\n    }\r\n    printf(\"%d\",sum);\r\n    return 0;\r\n}\r\n\r\n```", "Konwledge_Point": "乘法", "Question": ["奶牛乘法1【数组基础】", ["做厌了乘法计算题的佳佳，自创了一种新的乘法运算法则。在这套法则里，A×B等于一个取自A，一个取自B所有数字对的乘积的和。", "\n  例如，123*45等于1*4+1*5+2*4+2*5+3*4+3*5=54", "\n  本题的任务是，对于给定的数A和B,用新的乘法法则计算A*B的值。 ", "\n\n", "#include <stdio.h>\n#include <string.h>\n#include <math.h>\nint main()\n{\n    int n,m,sum=0,i,j;\n    int a[10],b[10];\n    scanf(\"%d %d\",&n,&m);\n    for(i=0;i<strlen(n);i++)\n    {\n        a[i]=n%10;\n        n=n/10;\n    }\n    for(i=0;i<strlen(m);i++)\n    {\n        b[i]=m%10;\n        m=m/10;\n    }\n    for(i=0;i<strlen(n);i++)\n    {\n        for(j=0;j<strlen(m);i++)\n        {\n            sum=sum+a[i]*b[j];\n        }\n    }\n    printf(\"%d\",sum);\n    return 0;\n\n", "\n\n", "请大大指正一下，指出问题就好了"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n    int i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n      &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)\n      {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;每次重新从&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;开始乘\n    j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n      &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt;&amp;#61; i)\n      {\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;打印\n      System.out.println(i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&amp;#43;j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;i * j);\n      j&amp;#43;&amp;#43;;\n      }\n      i&amp;#43;&amp;#43;;\n      }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用while语句输出99乘法表", ["用while语句输出99乘法表，要梯形那种", "1", "1=1", "1", "2=2   2", "2=4", "......................9", "9=81"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-comment\"&gt;# 九九乘法表&lt;/span&gt;\nn&amp;#61;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;())\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;x&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i*j}&lt;/span&gt;\\t&amp;#39;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["怎么用Python 打印前n行九九乘法表？", ["怎么用Python 打前n行的九九乘法表啊。我打出的代码可以显示前n行，但是会有2", "1与1", "2这种重复的。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(0,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{}&amp;#34;&lt;/span&gt;.format(j,i,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["for循环99乘法表倒三角", ["for循环99乘法表倒三角，反三角", "用for i in range这种"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用for循环&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;hanshu&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;n&lt;/span&gt;):&lt;span class=\"hljs-comment\"&gt;#定义一个函数&lt;/span&gt;\n　　m &amp;#61; n\n　　sumn &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;   &lt;span class=\"hljs-comment\"&gt;#设置一个变量&amp;#xff0c;用来存储两个数相乘的积&lt;/span&gt;\n　　&lt;span class=\"hljs-comment\"&gt;#括号内包括第一个数&amp;#xff0c;不包括第二数&amp;#xff0c;so为n&amp;#43;1&lt;/span&gt;\n　　&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; dix &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):  　　　　\n　　　　sumn &amp;#61; m*dix\n　　　　&lt;span class=\"hljs-comment\"&gt;#%d -&amp;gt; 占位符&amp;#xff0c;%2d指占两个位置&lt;/span&gt;\n　　　　&lt;span class=\"hljs-comment\"&gt;#end&amp;#61;&amp;#34; &amp;#34;指不换行　　　&lt;/span&gt;\n　　　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&amp;#34;&lt;/span&gt;%(m,dix,sumn),end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;hanshu1&lt;/span&gt;():\n　　&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; b &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n　　　　hanshu(b)\nhanshu1()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;while循环&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;1\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i&amp;lt;&amp;#61;9:\n　　&lt;span class=\"hljs-attribute\"&gt;j&lt;/span&gt;&amp;#61;1\n　　&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; j&amp;lt;&amp;#61;i:\n　　　　#%d为占位符 %2d代表占两个位置\n　　　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d &amp;#34;&lt;/span&gt;%(i,j,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n　　　　j&amp;#43;&amp;#61;1\n　　&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n　　i&amp;#43;&amp;#61;1\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python for循环和while循环打印九九乘法表", ["用for循环打印九九乘法表                                "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-php\"&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; &amp;#61; 9; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; &amp;gt;&amp;#61; 1; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;--) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; &amp;#61; 1; &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;; &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;X&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt; * &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;&lt;/span&gt;;\n        }\n\n        &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; &amp;#61; 9;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; &amp;gt;&amp;#61; 1) {\n\n            &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; &amp;#61; 1;\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt;) {\n                &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;X&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; . &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt; * &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt; . &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-variable\"&gt;$y&lt;/span&gt;&amp;#43;&amp;#43;;\n            }\n            &lt;span class=\"hljs-variable\"&gt;$x&lt;/span&gt;--;\n            &lt;span class=\"hljs-built_in\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;;\n\n        }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["php用for和while循环语句输出倒装的99乘法表", ["php用for和while循环语句输出倒装的99乘法表，对齐。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;# 利用for循环实现九九乘法表&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 定义行&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 定义列&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i * j}&lt;/span&gt;&amp;#39;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["绘制程序流程图，使用for和if 语句完成九九乘法表的计算和输出。", ["绘制程序流程图，使用for和if 语句完成九九乘法表的计算和输出。"]], "Tag": "算法设计"}
{"Answer": "int i = 1, j = 1;\r\n\t\t  while (i &lt;= 9)\r\n\t\t  {\r\n\t\tj=1;\r\n\t\t  while (j &lt;= i)\r\n\t\t  {\r\n\r\n\t\t  System.out.println(i+\"*\"+j+\"=\"+i * j);\r\n\t\t  j++;\r\n\r\n\t\t  }\r\n\t\t  i++;\r\n\r\n\t\t  }", "Konwledge_Point": "乘法", "Question": ["java基础，while方法，解决99乘法表编写问题", ["java中用while方法写99乘法表，for可以写出来，用while不会写，求大神指教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;文章放到代码块吧&amp;#xff0c;这样贴出来&amp;#xff0c;乘号都看不到啊&lt;br /&gt;输入是1234 * 5678吗&amp;#xff1f;&lt;br /&gt;获得两个四位整数&amp;#xff0c;然后第一个整数取出个位和百位&amp;#xff0c;第二个取出十位和千位&amp;#xff0c;组成两个两位整数相乘即可&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,b,m,n;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n    m &amp;#61; a/&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;%10*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; a%10;\n    n &amp;#61; b/&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; b/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;%10;\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d&amp;#34;&lt;/span&gt;,m,n,m*n);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/913215931366111.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["任务04-05-04捣蛋的乘法", ["任务描述", "X给他的学生出了一道2位数的数学乘法题AB乘CD，但是他把被乘数和乘数都写错了，写成了XAXB乘CXDX（X是1位随机数），即在被乘数中每位数字之前混进去1位整数，在乘数每位数字之后混进去1位整数。现在给你算式：XAXB乘CXDX，你能得出原题的答案吗？", "输入格式:", "在一行中给出被污染的算式：XAXB乘CXDX。其中A、B、C、D、X代表1位数字。", "输出格式:", "按样例格式输出原算式和结果。", "输入样例:", "1234乘5678", "输出样例:", "24乘57=1368", "开始你的任务吧，祝你成功！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;先输出后换行&lt;br /&gt;把换行放到内层循环之后试试&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["pta C语言九九乘法表格式错误", ["pta的一题打印九九乘法表，我不懂格式哪里错了", "\n", "\n", "\n", "代码如下：", "#include <stdio.h>", "int main(){", "    int i,j,N; //i控制行，j控制列", "    scanf(\"%d\",&N);", "\n", "if", "(N<=", "9", "&&N>=", "1", "){\n\n    ", "for", "(i=", "1", ";i<=N;i++){\n        ", "printf", "(", "\"\\n\"", "); \n        ", "for", "(j=", "1", ";j<=i;j++){\n            ", "printf", "(", "\"%d*%d=%-4d\"", ",j,i,j*i);\n        }\n    }\n}\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;test.py&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;jiafa&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;m,n&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{m}&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(m)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;jianfa&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;m,n&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{m}&lt;/span&gt;-&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(m)-&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;chengfa&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;m,n&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{m}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{n}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(m)*&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)}&lt;/span&gt;&amp;#34;&lt;/span&gt;)\nm &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;)\nn &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;)\n\njiafa(m,n)\njianfa(m,n)\nchengfa(m,n)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Python定义一个函数列表，列表包含3个函数，分别用于完成两个整数的加法、减法和乘法运算", ["定义一个函数列表，列表包含3个函数，分别用于完成两个整数的加法、减法和乘法运算。从键盘输入2个数，调用列表中的函数完成加法、减法和乘法运算。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/173574882736195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言输出乘法表，一直都是2*1=2", ["\n", "\n", "c语言输出乘法表，循环输出的一直都是2*1=2", "不晓得错在哪里，求解答"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, b, N;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; res[&lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;N);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a*b&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            res[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            res[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; N; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c\\n&amp;#34;&lt;/span&gt;,res[i]);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["根据要求写乘法运算的法则", ["Description", "\n", "小明上小学四年级要学乘法运算的法则，老师教他乘法运算口诀：“正正得正、负负得正、正负得负”，是正负数的乘法口诀，两个正数相乘的积是正数，两个负数相乘的积是正数，一个正数和一个负数相乘的积是负数。请帮助小明确定积是正数还是负数。", "\n", "Input", "\n", "输入一个正整数N ，代表N组测试数据（1< N <= 10）", "接下来N行，每行有两个数X和Y（-100< X,Y <= 100），以空格间隔，X和Y保证不为0。", "\n", "Output", "\n", "如果是正数输出+，如果是负数输出-，以换行间隔。", "\n", "Sample Input", "\n", "4", "1 1", "-1 -1", "1 -1", "-1 1", "Sample Output", "\n", "+", "+", "-", "-"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) \n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d &amp;#34;&lt;/span&gt;, i, j, i * j);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["输出9X9乘法表，要求附上代码和运行结果", ["输出9X9乘法表，要求附上代码和运行结果（用C语言）"]], "Tag": "算法设计"}
{"Answer": "```\r\n #include &lt;iostream&gt;\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin &gt;&gt; n;\r\n\tint * p = new int[n * 2];\r\n\tint i;\r\n\tfor (i = 0; i &lt; n; i++)\r\n\t{\r\n\t\tcin &gt;&gt; p[i * 2];\r\n\t\tcin &gt;&gt; p[i * 2 + 1];\r\n\t}\r\n\tfor (i = 0; i &lt; n; i++)\r\n\t{\r\n\t\tint a = p[i * 2];\r\n\t\tint b = p[i * 2 + 1];\r\n\t\tif (a &gt; b || a &lt;= 0 || b &gt;= 10)\r\n\t\t{\r\n\t\t\tcout &lt;&lt; \"Input Error!\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (int j = a; j &lt;= b; j++)\r\n\t\t{\r\n\t\t\tfor (int k = 1; k &lt;=j; k++)\r\n\t\t\t{\r\n\t\t\t\tcout &lt;&lt; j &lt;&lt; \"*\" &lt;&lt; k &lt;&lt; \"=\" &lt;&lt; j * k &lt;&lt; \"\\t\";\r\n\t\t\t}\r\n\t\t\tcout &lt;&lt; endl;\r\n\t\t}\r\n\t\tif (i != n - 1) cout &lt;&lt; endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["c++习题---------------九九乘法表", ["输入", "\n\n", "输入首先包含一个整数T，(0<T<100)，表示测试数据组数，然后是T组数据，每组数据包含两个整数，a和b(0<a<=b<10)", "\n\n", "输出", "\n\n", "对每组测试数据，请输出乘法表中的第a行到第b行，每组测试数据结果后跟一个空行，最后一组数据结果后无空行，注意对齐。如果输入的a, b不符合题意，请输出\"Input Error!\"。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;i;\n    cout&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;i;j&amp;#43;&amp;#43;)\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;i;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;)\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&amp;lt;&amp;lt;i*j;\n        cout&amp;lt;&amp;lt;endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c++九九乘法表右上三角表示", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;\nYou are trying to multiple &lt;code&gt;display_price&lt;/code&gt; string and use it as array key and you should just increase the value that the variable holds.&lt;/p&gt;\n\n&lt;pre class=\"lang-php prettyprint-override\"&gt;&lt;code&gt;echo $row['display_price'] * 1.03;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If variable holds the dollar sign too (&lt;strong&gt;it shouldn't!&lt;/strong&gt;) use &lt;a href=\"https://stackoverflow.com/a/3275461/4580544\"&gt;this&lt;/a&gt; regex to get the value and multiply it. Example:&lt;/p&gt;\n\n&lt;pre class=\"lang-php prettyprint-override\"&gt;&lt;code&gt;echo \"$\" . ( floatval( preg_replace( \"/[^-0-9\\.]/\", \"\", $var ) ) * 1.03 );\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["PHP中的乘法值", ["\n\n", "I have this pieces of php here...", "\n\n\n\n", "The value that gets written in HTML is this ", "$16.67", ".", "\n\n", "I am not sure what value type this is, not sure if it is a string or integar.", "\n\n", "Regardless, I need to take this value and increase it by ", "3%", ". ", "\n\n", "I tried this but to no avail:", "\n\n", "<?php echo $row['display_price' * 1.03]; ?>\n", "\n\n", "If someone could help me out here this would be great.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n        &lt;span class=\"hljs-attribute\"&gt;k&lt;/span&gt;&amp;#61;i*j\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0}*{1}&amp;#61;{2}&amp;#34;&lt;/span&gt;.format(i,j,k),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用python对九九乘法表的编写思路", ["1", "1=1", "1", "2=2 2", "2=4", "1", "3=3 2", "3=6 3", "3=9", "……"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;比如 4 的二进制是 100&lt;br /&gt;乘2 十进制是8&amp;#xff0c;二进制1000&amp;#xff0c;对应左移了一位&lt;br /&gt;除2 十进制是2&amp;#xff0c;二进制10&amp;#xff1b;对应右移了一位&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["位运算的左移和右移为什么对应了十进制的乘法和除法你", ["位运算的左移和右移为什么对应了十进制的乘法和除法你，可以解释的生动形象一点吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;If you are just looking to round a number, then here is the solution:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n    $number = 1353.234242;\n    $rounded = (float)sprintf('%.2f', $number);\n    echo $rounded; // will display 1353.23\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["在乘法php中舍入2位小数不是舍入", ["\n\n", "I come to you looking for answers, I have a table and I am calculating the tax field multiplying 1 variable per 0.16 but I want it to have just 2 decimals, not 10 or 4 or 3, I was trying with round() and with number_format() but is not working, there must be something I am doing wrong, how it suppose that I need to do it ?", "\n\n", "I am showing the code", "\n\n", "    $html .= '<tr>\n    <td>'.escape($r->tecnologia).'</td>\n    <td>'.escape($r->normaespecificacion).'</td>\n    <td><img src=\"functions/'.escape($r->foto).'\"></td>\n    <td>'.escape($r->marca).'</td>\n    <td>'.escape($r->modelo).'</td>  \n    <td>'.escape($r->descripcion).'</td>\n    <td>$'.escape($r->preciounitario).'</td>\n    <td>$'.escape($r->number_format(preciounitario*0.16,2)).'</td> //this is the one with the error\n    <td>$'.escape($r->instalacion).'</td>\n    <td>$'.escape($r->totalcosto).'</td>\n    <td>'.escape($r->garantia).'</td>\n    <td>'.$listNum[$i].'</td>\n    </tr>';\n    $totalV += $listNum[$i]*$r->totalcosto;\n    $i = $i+1;\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;大概是这样子&amp;#xff0c;一些小细节自己去改一下就好&amp;#xff0c;有帮助麻烦点个采纳【本回答右上角】&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;input1&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindinput&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleInput1&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;input1&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt; *\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;input2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindinput&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleInput2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;input2&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt; &amp;#61;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindtap&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;calculate&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;计算&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;  &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;result&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;wx:for&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;resultList&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;item&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;&lt;li&gt;大概是这样子&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; db &amp;#61; wx.&lt;span class=\"hljs-property\"&gt;cloud&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;database&lt;/span&gt;()\n&lt;span class=\"hljs-title class_\"&gt;Page&lt;/span&gt;({\n  &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: {\n    &lt;span class=\"hljs-attr\"&gt;result&lt;/span&gt;: [],\n    &lt;span class=\"hljs-attr\"&gt;input1&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-attr\"&gt;input2&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n  },\n  &lt;span class=\"hljs-attr\"&gt;onLoad&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Welcome to Mini Code&amp;#39;&lt;/span&gt;)\n  },\n  &lt;span class=\"hljs-attr\"&gt;calculate&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; { input1, input2,resultList } &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;data&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (input1 &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt; || input2 &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;) {\n      wx.&lt;span class=\"hljs-title function_\"&gt;showToast&lt;/span&gt;({\n        &lt;span class=\"hljs-attr\"&gt;title&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;请输入正确的数字&amp;#39;&lt;/span&gt;,\n        &lt;span class=\"hljs-attr\"&gt;duration&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;,\n        &lt;span class=\"hljs-attr\"&gt;icon&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;warning&amp;#39;&lt;/span&gt;\n      });\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n     resultList.&lt;span class=\"hljs-title function_\"&gt;push&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#96;&lt;span class=\"hljs-subst\"&gt;${input1}&lt;/span&gt; * &lt;span class=\"hljs-subst\"&gt;${input2}&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-subst\"&gt;${input1 * &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; * input2}&lt;/span&gt;&amp;#96;&lt;/span&gt;)\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n     resultList\n    }, &lt;span class=\"hljs-function\"&gt;() &amp;#61;&amp;gt;&lt;/span&gt; {\n   db.&lt;span class=\"hljs-title function_\"&gt;collection&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;result&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-title function_\"&gt;add&lt;/span&gt;({\n  &lt;span class=\"hljs-comment\"&gt;// data 字段表示需新增的 JSON 数据&lt;/span&gt;\n  &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: {\n    resultList\n  },\n  &lt;span class=\"hljs-attr\"&gt;success&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;res&lt;/span&gt;) {\n    &lt;span class=\"hljs-comment\"&gt;// res 是一个对象&amp;#xff0c;其中有 _id 字段标记刚创建的记录的 id&lt;/span&gt;\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(res)\n  }\n})\n\n})\n    }\n  },\n  &lt;span class=\"hljs-attr\"&gt;handleInput1&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n      &lt;span class=\"hljs-attr\"&gt;input1&lt;/span&gt;: e.&lt;span class=\"hljs-property\"&gt;detail&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;\n    })\n  },\n  &lt;span class=\"hljs-attr\"&gt;handleInput2&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n      &lt;span class=\"hljs-attr\"&gt;input2&lt;/span&gt;: e.&lt;span class=\"hljs-property\"&gt;detail&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;\n    })\n  }\n})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-css\"&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt; {\n  &lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid;\n  &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100pt&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/355903030436143.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["微信小程序怎样运算整数乘法", ["整数乘法。实现两个输入框（input），用于乘数输入；一个按钮（button）用于确认计算；view组件用于显示计算结果。并将乘数及计算结果上传至云数据库中（云数据库collection名称为result）。", "示例：<input id=\"”input1”\" /> 即表示此input组id为input1", "要求：", "a.     页面应为question1，pages/question1即如下图", "\n", "b.     两个输入框（input）id一个为input1，一个为input2；按钮id为submit；view组件id为result。", "c.     展示多个乘法计算示例", "d.     （选做）云函数实现整数乘法"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-java\"&gt;package myproject01;\n/*\n * 99乘法表的实现\n */\npublic class For99 {\n\tpublic static void main(String[]args){\n\tfor\t(int m&amp;#61;1;m&amp;lt;&amp;#61;9;m&amp;#43;&amp;#43;){\n\t\tfor(int i&amp;#61;1;i&amp;lt;&amp;#61;m;i&amp;#43;&amp;#43;){\n\t\t\tint a&amp;#61;i*m;\n\t\t\tSystem.out.print(i&amp;#43;&amp;#34;*&amp;#34;&amp;#43;m&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;a&amp;#43;&amp;#34;\\t&amp;#34;);\t\t\n\t\t \t}\n\t\tSystem.out.println();\n\t\t}\n\t}\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["输出9*9乘法口诀表（用循环）", ["\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-xml\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%-4d&amp;#34;&lt;/span&gt;,i,j,i*j);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["cfree输出乘法表", ["输入正整数N（1≤N≤9）输出N×N乘法表", "输入5", "输出", "1", "1=1", "2", "1=2  2", "2=4", "3", "1=3  3", "2=6  3", "3=9", "4", "1=4  4", "2=8  4", "3=12 4", "4=16", "5", "1=5  5", "2=10 5", "3=15 5", "4=20 5*5=25 "]], "Tag": "算法设计"}
{"Answer": "我这里可以输出，结果如下：\r\n\r\n```\r\n\r\n----------------------------------------\r\n  1   2   3   4   5   6   7   8   9\r\n----------------------------------------\r\n1   1   2   3   4   5   6   7   8   9\r\n2   2   4   6   8  10  12  14  16  18\r\n3   3   6   9  12  15  18  21  24  27\r\n4   4   8  12  16  20  24  28  32  36\r\n5   5  10  15  20  25  30  35  40  45\r\n6   6  12  18  24  30  36  42  48  54\r\n7   7  14  21  28  35  42  49  56  63\r\n8   8  16  24  32  40  48  56  64  72\r\n9   9  18  27  36  45  54  63  72  81\r\n----------------------------------------\r\n\r\n```\r\n你不能输出，检查下程序是否正确编译，删除exe文件，再重新编译下。再不行，检查下开发环境。", "Konwledge_Point": "乘法", "Question": ["请问我的九九乘法表为什么在无编译错误的情况下无法正常输出？", ["#include", "\nint main ()", "\n{", "\n    int i,j;", "\n    printf(\"\\n----------------------------------------\\n\");", "\n    for(i=1;i<10;i++)", "\n    printf(\"%4d\",i); ", "\n    printf(\"\\n----------------------------------------\\n\");", "\n    for(i=1;i<10;i++)", "\n    {", "\n        printf(\"%d\",i);", "\n        for(j=1;j<10;j++)", "\n        printf(\"%4d\",i*j);", "\n        printf(\"\\n\");", "\n    }", "\n    printf(\"\\n----------------------------------------\\n\");", "\n    return 0;", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;in your Calculator.php&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nClass Calculator {\n\n    public function calculate($row, $col){\n        return $result = $row * $col;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Change index.php as follow.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php include_once('Calculator.php'); ?&amp;gt;\n&amp;lt;!DOCTYPE html&amp;gt;\n&amp;lt;html&amp;gt;\n&amp;lt;head&amp;gt;\n    &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;\n    &amp;lt;style type=\"text/css\"&amp;gt;\n        a{\n            cursor: pointer;\n        }\n    &amp;lt;/style&amp;gt;\n&amp;lt;/head&amp;gt;\n&amp;lt;body&amp;gt;\n    &amp;lt;div&amp;gt;\n        &amp;lt;input type=\"text\" value=\"&amp;lt;?php if( (isset($_GET['col']) &amp;amp;&amp;amp; $_GET['row'])){ echo Calculator::calculate($_GET['row'],$_GET['col']); } ?&amp;gt;\"&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;?php\n    echo \"&amp;lt;table border =\\\"1\\\" style='border-collapse: collapse'&amp;gt;\";\n    for ($row=1; $row &amp;lt;= 10; $row++) { \n        echo \"&amp;lt;tr&amp;gt; \n\";\n        for ($col=1; $col &amp;lt;= 10; $col++) { \n           $a = \"$row * $col\";\n           echo \"&amp;lt;td&amp;gt;&amp;lt;a href=?row=$row&amp;amp;col=$col&amp;gt;\".$a;\n           //if( (isset($_GET['col']) &amp;amp;&amp;amp; $_GET['row'] &amp;amp;&amp;amp; $row==$_GET['row'] &amp;amp;&amp;amp; $col==$_GET['col'])){ echo Calculator::calculate($row,$col); }else{ echo $a ;}\n           echo \"&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt; \n\";\n        }\n        echo \"&amp;lt;/tr&amp;gt;\";\n    }\n    echo \"&amp;lt;/table&amp;gt;\";\n    ?&amp;gt;\n&amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["PHP  - 将表链接到HTML并进行乘法运算", ["\n\n", "I have the following php code that generates a 10X10 ", "table", ":", "\n\n", "<?php\necho \"<table border =\\\"1\\\" style='border-collapse: collapse'>\";\nfor ($row=1; $row <= 10; $row++) { \n    echo \"<tr> \n\";\n    for ($col=1; $col <= 10; $col++) { \n       $a = \"$row * $col\";\n       echo \"<td><a href = '$a'>$a</a></td> \n\";\n    }\n    echo \"</tr>\";\n}\necho \"</table>\";\n?>\n", "\n\n", "\n", "How to recreate this table in HTML, such that links will work?", "\n", "Every field in a table needs to do a multiplication, e.g. field '5*6' gives result '30'. How to write a php class that will do this operation? So, for ", "row*column", ", return variable ", "result", ".", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用乘法建二维列表&amp;#xff0c;属于重复的引用初始列表&amp;#xff0c;你用乘法建立一个二维列表&amp;#xff0c;然后修改第第一项里面的值&amp;#xff0c;你就发现所有第一项都变了&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["在python中用for创建二维列表和用乘法创建有什么区别？", ["问题遇到的现象和发生背景", "\n", "原题链接：", "https://www.lanqiao.cn/problems/755/learning/", "发现当用这样的方法创建的二维列表会输出错误的答案", "dp=[[0]", "(n+1)]", "(m+1)", "而用这种不会", "dp=[[0 for i in range(m+1)] for i in range(n+1)]", "\n", "问题相关代码", "\n", "n,", "m", ",", "x", ",", "y", "=", "map", "(", "int", ",", "input", "().", "split", "())\n\n", "dp", "=[[", "0", "]*(n+", "1", ")]*(", "m", "+", "1", ")\n\n", "dp", "=[[", "0", " ", "for", " i in ", "range", "(", "m", "+", "1", ")] ", "for", " i in ", "range", "(n+", "1", ")]\n#比较两种方式创建的列表的不同，结果发现都一样\n", "\"\"", "\"", "\n", "for", " i in ", "range", "(n+", "1", "):\n    ", "for", " ", "j", " in ", "range", "(", "m", "+", "1", "):\n        ", "if", " ", "dp", "[i][", "j", "]!=dp1[i][", "j", "]:\n            ", "print", "(", "\"find\"", ")\n", "\"\"", "\"", "\ndx=[", "0", ",", "2", ",", "1", ",-", "1", ",-", "2", ",-", "2", ",-", "1", ",", "1", ",", "2", "]\ndy=[", "0", ",", "1", ",", "2", ",", "2", ",", "1", ",-", "1", ",-", "2", ",-", "2", ",-", "1", "]\n\nlst=[[", "0", ",", "0", "]]\n\ndef check(", "x", ",", "y", "):\n    ", "global", " n,", "m", "\n    ", "if", " ", "x", "<", "0", " ", "or", " ", "x", ">n ", "or", " ", "y", "<", "0", " ", "or", " ", "y", ">", "m", ":\n        ", "return", " False\n    ", "else", ":\n        ", "return", " True\n\n", "dp", "[", "0", "][", "0", "]=", "1", "\n", "for", " i in ", "range", "(", "9", "):\n    ", "X", "=", "x", "+dx[i]\n    Y=", "y", "+dy[i]\n    ", "if", " check(", "X", ",Y)==False:\n        ", "continue", "\n    ", "else", ":\n        lst.", "append", "([", "X", ",Y])\n\n", "for", " i in ", "range", "(", "0", ",n+", "1", "):\n    ", "for", " ", "j", " in ", "range", "(", "0", ",", "m", "+", "1", "):\n        ", "if", " [i,", "j", "] in lst:\n            ", "continue", "\n        ", "else", ":\n            ", "dp", "[i][", "j", "]=", "dp", "[i-", "1", "][", "j", "]+", "dp", "[i][", "j", "-", "1", "]\n", "print", "(", "dp", "[n][", "m", "])\n\n", "\n", "运行结果及报错内容", "\n", "用for创建的输出正确的值6，用乘法输出错误的值550", "\n", "\n", "请问这是为什么呀"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;public class Cfkj {\n\tpublic static void main(String[] args) {\n\t\tint i,j;\n\t\tfor(i&amp;#61;1; i&amp;lt;&amp;#61;9; i&amp;#43;&amp;#43;) {\n\t\t\tfor(j&amp;#61;1; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;){\n\t\t\t\tSystem.out.print(j&amp;#43;&amp;#34;*&amp;#34;&amp;#43;i&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;(j*i)&amp;#43;&amp;#34;\\t&amp;#34;);\n\t\t\t}\n\t\t\tSystem.out.println(&amp;#34;&amp;#34;);\n\t\t}\n\t}\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"233\" src=\"https://img-ask.csdnimg.cn/upload/1622634587742.png\" width=\"828\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["java如何实现九九乘法表?", ["萌新一个，求问大佬，java如何实现九九乘法表?"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j&amp;#61;&amp;#61;i:\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(j) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i * j), &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(j)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;x&amp;#39;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i*j),&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;&amp;#61;(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python实现九九乘法表", ["python实现九九乘法表", "\n", "python实现九九乘法表，要求逗号分割，句号结尾。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-xml\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%dx%d&amp;#61;%d &amp;#34;&lt;/span&gt;,i,j,i*j);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["cfree输出乘法表", ["输入正整数N（1≤N≤9）输出N×N乘法表", "输入5", "输出", "1", "1=1", "2", "1=2 2", "2=4", "3", "1=3 3", "2=6 3", "3=9", "4", "1=4 4", "2=8 4", "3=12 4", "4=16", "5", "1=5 5", "2=10 5", "3=15 5", "4=20 5*5=25"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的程序不太可能死循环出不来吧&lt;br /&gt;但是你的b只能从1到9&amp;#xff0c;不会再回到1了&lt;br /&gt;把b&amp;#61;1改为b&amp;#61;a&amp;#xff0c;放到while&amp;#xff08;a&amp;lt;10&amp;#xff09;里面去&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["while语句怎么写九九乘法表", ["我写的代码只能输出死循环，求指点", "#include<stdio.h>", "\n", "int main(void)", "{", "    int a=1, b=1;", "    while (a <= 9)", "    {", "\n", "    ", "while", " (b <= ", "9", ")\n\n    {\n        ", "printf", "(", "\"%d*%d=%d\"", ", a, b, a * b);\n        b++;\n    }\n    ", "printf", "(", "\"\\n\"", ");\n    \n    a++;\n\n}\n\n\n\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getResult&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,c;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n{\nc&amp;#61;i*j;\ncout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;j&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&amp;lt;&amp;lt;c&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n}\ncout&amp;lt;&amp;lt;endl;\n}\ncout&amp;lt;&amp;lt;endl;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-built_in\"&gt;getResult&lt;/span&gt;();\n&lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用函数调用的形式打印九九乘法表", ["这是书上的练习题,原题是这样的", "然后这是我写的", "\n", "这都没啥毛病,然后今天学了函数调用,课后习题让用函数调用的方式打印这个乘法表", "这是我的", "\n", "究竟是哪里出了问题?麻烦详细回答一下并给出正解"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;a);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;b);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;a; i&amp;lt;&amp;#61;b; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;a; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;){\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d &amp;#34;&lt;/span&gt;, i,j,i*j);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言实现乘法口诀表", ["试题详情:要求对任意给定的两个正整数x,y，输出下三角乘法口诀表。（输入时x>y,若x<y则交换）", "输入提示:输入仅一行，由键盘输入2个9以内的正整数，两个值之间用空格分隔。", "输出提示:输出下三角乘法口诀表，其中等号左边两个数字各占１位，等号右边数字占4位、左对齐。", "输入样本:2 6", "输出样本:2", "2=4", "3", "2=6 3", "3=9", "4", "2=8 4", "3=12 4", "4=16", "5", "2=10 5", "3=15 5", "4=20 5", "5=25", "6", "2=12 6", "3=18 6", "4=24 6", "5=30 6*6=36 "]], "Tag": "算法设计"}
{"Answer": "```\r\n #include &lt;stdio.h&gt;\r\n\r\nvoid foo(int acc1, int acc2)\r\n{\r\n    if (acc1 &gt; 9) return;\r\n    printf(\"%d * %d = %d\\t\", acc1, acc2, acc1 * acc2);\r\n    if (acc2 &gt;= acc1) { acc2 = 1; acc1++; printf(\"\\n\"); } else { acc2++; }\r\n    foo(acc1, acc2);\r\n}\r\n\r\nint main()\r\n{\r\n    foo(1, 1);\r\n}\r\n```\r\n\r\n\r\n```\r\n 1 * 1 = 1\t\r\n2 * 1 = 2\t2 * 2 = 4\t\r\n3 * 1 = 3\t3 * 2 = 6\t3 * 3 = 9\t\r\n4 * 1 = 4\t4 * 2 = 8\t4 * 3 = 12\t4 * 4 = 16\t\r\n5 * 1 = 5\t5 * 2 = 10\t5 * 3 = 15\t5 * 4 = 20\t5 * 5 = 25\t\r\n6 * 1 = 6\t6 * 2 = 12\t6 * 3 = 18\t6 * 4 = 24\t6 * 5 = 30\t6 * 6 = 36\t\r\n7 * 1 = 7\t7 * 2 = 14\t7 * 3 = 21\t7 * 4 = 28\t7 * 5 = 35\t7 * 6 = 42\t7 * 7 = 49\t\r\n8 * 1 = 8\t8 * 2 = 16\t8 * 3 = 24\t8 * 4 = 32\t8 * 5 = 40\t8 * 6 = 48\t8 * 7 = 56\t8 * 8 = 64\t\r\n9 * 1 = 9\t9 * 2 = 18\t9 * 3 = 27\t9 * 4 = 36\t9 * 5 = 45\t9 * 6 = 54\t9 * 7 = 63\t9 * 8 = 72\t9 * 9 = 81\r\n```", "Konwledge_Point": "乘法", "Question": ["用C语言的递归输出一个99乘法表，请问怎么实现。不能用循环实现", ["用C语言的递归输出一个99乘法表，请问怎么实现。不能用循环实现，请问怎么做"]], "Tag": "算法设计"}
{"Answer": "计算机的基本硬件系统由运算器、控制器、存储器、输入设备、输出设备五大部分组成。运算器和控制器等部件被集成在一起统称为中央处理单元 - CPU（Central Processing Unit）CPU还能细分为：运算器、控制器、寄存器组和内部总线等部件组成。\r\n\r\n其中CPU的运算器还可以细分为：算术逻辑单元、累加寄存器、数据缓冲寄存器和状态条件寄存器组成。运算器的作用就是执行算术运算和逻辑运算，其中算术运算就包含加减乘除等基本运算以及附加运算。\r\n\r\n这里大家注意了，从数学角度，减法是可以转换成加法运算的。乘法同样可以转换成加法运算，除法可以转换成乘法运算，所以一切的运算都可以以加法运算为基础，所以CPU只会做加法也没有问题。但是随着时代的发展和进步。如果计算机只会做加法，对于有些计算来说速度就会慢下来，这也是我们不能忍受的。所以人们会给计算机按照原理设计乘法除法的运算电路。甚至还有更加复杂的数学电路，软件（驱动）来辅助硬件来完成更多的功能。\r\n\r\n解释详见 http://www.idoguy.com/html/tech/2019/0811/55611.html", "Konwledge_Point": "乘法", "Question": ["高分悬赏：计算机CPU做乘法运算，是连续做加法实现的么？计算机里是不是只有加法电路？那么小数乘法呢", ["高分悬赏：计算机CPU做乘法运算，是连续做加法实现的么？计算机里是不是只有加法电路？那么小数乘法呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;把printf(&amp;quot;\\n&amp;quot;)挪到第一个for循环里面&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么这个九九乘法表显示不正常？", ["\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;(&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;) &amp;#34;&lt;/span&gt;,end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i*(j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}&lt;/span&gt; &amp;#34;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表前加序号怎么打，还有双循环实在有些懵", []], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;&amp;lt;script language&amp;#61;&amp;#34;JavaScript&amp;#34;&amp;gt;\n     //九九乘法表\n     //行      \n     for(var i&amp;#61;1;i&amp;lt;&amp;#61;9;i&amp;#43;&amp;#43;){\n        // 列     \n         for(var j&amp;#61;1;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n         \t\n         \tif(j&amp;lt;&amp;#61;i){             \t\t\n         \t\tdocument.write( &amp;#34;&amp;lt;div &amp;gt;&amp;#34;);\n         \t\tdocument.write(i&amp;#43;&amp;#34;*&amp;#34;&amp;#43;j&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;i*j);             \t\t\n         \t\tdocument.write(&amp;#34;&amp;lt;/div&amp;gt;&amp;#34;);\n         \t}    \n         }  \n     \n     document.write(&amp;#34;&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;#34;);\n}\n    \n\n&amp;lt;/script&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;pre&gt;\n&lt;code&gt;&amp;lt;style type&amp;#61;&amp;#34;text/css&amp;#34;&amp;gt;\n    \n  div{\n    background: #ADD8E6;\n    border: solid 1px #AAC9CE;\n    color: #B6B4C2;      \n    width: 100px;\n    float: left;\n    text-align: center;\n    border-radius: 5px;\n    margin: 3px;\n    }\n    \n&amp;lt;/style&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"433\" src=\"https://img-ask.csdnimg.cn/upload/1624179420054.png\" width=\"1231\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["利用JavaScript和css设计九九乘法表", ["利用for循环表述九九乘法表，但做出来的表格是按钮的模式，点击（例如1x1=1点击这个按钮后答案可以显示或隐藏），在表格后面有显示和清除的按钮可以控制整个九九乘法表(T ^ T)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为f使单引号中大括号的变量作为变量使用&amp;#xff0c;而不是作为英文字母使用&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python打印九九乘法表", ["Python用for打印九九乘法表", "怎样实现的当i=j是换行输出？", " print(f'{i}", "{j}={i", "j}', end='\\t')中为什么要写f’’？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不是一个数字把。Number(a)*Number(b) &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["vue使用乘法，页面显示nan", [" ", "var", " a  = $(", "'.nowprice'", ").text().substr(", "1", ") ", "//获取金额", "\n ", "var", " b = $(", "\"#shuliang\"", ").text() ", "//获取数量", "\n ", "var", " vm = ", "new", " Vue({\n    ", "el", ": ", "\"#app\"", ",\n    ", "data", ": {\n        ", "name", ": ", "\"\"", ",\n        ", "message", ": ", "\"\"", ",\n        ", "money", ": a * b,\n        ", "shuliang", ":", "\"1\"", " ", "//数量", "\n\n    }\n})\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&amp;#96;&amp;#96;&amp;#96;c\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; &amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; &amp;#43;&amp;#43;j)\n        {\n\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d  &amp;#34;&lt;/span&gt;, j, i, i * j);\n\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;&lt;br /&gt;运行结果如下&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/208488242056190.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;讲解&amp;#xff1a;九九乘法表共有九行&amp;#xff08;  所以i用于限制行数 i的值为从1到9 &amp;#xff09;&amp;#xff0c;每多一行就会多一列&amp;#xff0c;所以 &amp;#xff08; j&amp;lt;&amp;#61;i &amp;#xff0c;即j随着i的增加&amp;#xff0c;j能达到的最大值也在增加&amp;#xff09;。每一次j出for循环&amp;#xff08;即每一次j &amp;lt;&amp;#61; i 后出循环&amp;#xff09;&amp;#xff0c;j都会被重新赋值为1。&lt;/p&gt;\n&lt;p&gt;PS:&lt;br /&gt;printf(&amp;#34;\\n&amp;#34;);用于换行&lt;br /&gt;%2d表示打印出的值为右对齐&amp;#xff0c;并且若值为一位&amp;#xff0c;自动补一个空格到值的左边&lt;/p&gt;\n&lt;p&gt;注意本答案是从#include &amp;lt;stdio.h&amp;gt;开始算是解答&amp;#xff0c;到 return 0 后 } 结束&amp;#xff0c;其余均为csdn添加的C语言系列前缀和后缀&lt;/p&gt;\n&lt;p&gt;可以的话点个采纳吧&amp;#xff0c;谢谢。&lt;br /&gt;可以互关哦&amp;#xff0c;我都会回的&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["运用c语言编写九九乘法表", ["for的运用及换行的处理使其美观 编写的程序简洁美观九九乘法表的编写"]], "Tag": "算法设计"}
{"Answer": "```html\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n    &lt;title&gt;九九乘法表&lt;/title&gt;\r\n    &lt;script type=\"text/javascript\"&gt;\r\n        var i = 1, j = 1;\r\n\r\n        function table9() {\r\n            /*如果成立则执行下一行，定义表格*/\r\n            i == 1 &amp;&amp; document.write(\"&lt;table style='border;1px solid green;border-collapse' &gt; \");\r\n            j == 1 &amp;&amp; document.write(\"&lt;/tr&gt;\");\r\n            document.write(\"&lt;td style='border;1px solid'&gt;\" + i + \"*\" + j + \"=\" + i * j + \"&lt;/td&gt;\");\r\n            if (i == j) {/*i=j的时候换行*/\r\n                document.write(\"&lt;/tr&gt;\")\r\n                j = i + 1;\r\n                i = 1;\r\n            } else {\r\n                i++;\r\n            }\r\n\r\n            if (i == 10) {\r\n                document.write(\"&lt;/table&gt;\")\r\n                document.write(\"&lt;style&gt;td{background-color: red;}&lt;/style&gt;\")/*清除后变为红色*/\r\n                clearInterval(timer);\r\n            }\r\n        }\r\n\r\n        var timer = setInterval(table9, 100);\r\n    &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;div id=\"content\"&gt;&lt;/div&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n\r\n\r\n```", "Konwledge_Point": "乘法", "Question": ["JavaScript打印舅舅乘法表无法显示", ["实验要求：", "\n\n", "1、使用JavaScript计时器打印出九九乘法表；", "\n\n", "2、网页中有一个按钮，点击之后开始输出九九乘法表；", "\n\n", "3、所有九九乘法表输出到一个table中；", "\n\n", "4、表格的边框需要使用CSS进行合并；", "\n\n", "5、在所有式子输出完毕之后，将表格中的单元格背景改为红色。", "\n\n", "我的代码按照老师的那个来的，但是却无法显示，初学者，望大佬指教，谢谢！", "\n\n", "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>九九乘法表</title>\n        <script type=\"text/javascript\">\n            var i=1,j=1;\n            function table9(){\n                /*如果成立则执行下一行，定义表格*/\n                i==1&&document.write(\"<table style='border;1px solid green;border-collapse\"></table>\");\n                j==1&&document.write(\"</tr>\");\n                document.write(\"<td style='border;1px solid'>\"+i+\"*\"+j+\"=\"+i*j+\"</td>\");\n                if(i==j)/*i=j的时候换行*/\n                    document.write(\"</tr>\")；\n                    i++;\n                    j++;\n                }\n                else{\n                    j++;\n                }\n                if(i==10){\n                    document.write(\"</table>\")\n                    document.write(\"<style>td{background-color: red;}</style>\")/*清除后变为红色*/\n                    clearInterval(timer);\n                }\n            }\n            var timer=setInterval(table9,100);\n        </script>\n    </head>\n    <body> \n    <div id=\"content\"></div>\n    </body>\n</html>\n\n"]], "Tag": "算法设计"}
{"Answer": "楼主请看这里：https://blog.csdn.net/fox_triumph/article/details/88853189\r\n![图片说明](https://img-ask.csdn.net/upload/202006/30/1593476979_416033.jpg)", "Konwledge_Point": "乘法", "Question": ["高分悬赏：Java语言怎么输出一个9x9的乘法口诀表，输出的结果要三角形的怎么实现", ["高分悬赏：Java语言怎么输出一个9x9的乘法口诀表，输出的结果要三角形的怎么实现"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是的&amp;#xff0c;嵌套的for循环就是这样运作&lt;br /&gt;for i in range(1,10)&amp;#xff1a;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for j in range(1,i&amp;#43;1):&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;i从1开始到10,i等于1时&amp;#xff0c;j从1跑到2&lt;br /&gt;i等于2时&amp;#xff0c;j从1跑到3&lt;br /&gt;以此类推&lt;/p&gt;\n&lt;p&gt;望采纳哈&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表是外层循环一次，内层循环一轮吗", ["for  i  in  range(1,10)：", "        for   j  in  range(1,i+1):", "                 print(f\"{j}", "{i}={j", "i}\",end=\" \")", "         print()"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为使用了老旧编译器&amp;#xff0c;内部整数是用16位二进制表示。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么执行乘法后会取模", ["为什么执行乘法后会取模，他没加%呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/170987139256138.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这样吗&amp;#xff1f;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;[][] arr &amp;#61; {&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;},\n                {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;}};\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; arr[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].length; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print((j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;#43; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) * (j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n            }\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["如何用二维数组打出九九乘法表", ["如何用（JAVA）二维数组打出九九乘法表，最好提供一下代码截图，解释一下啥是数组，多谢"]], "Tag": "算法设计"}
{"Answer": "要用代码格式贴。这样显示出来的代码根本不完整。\r\n还有出了什么错误也描述一下啊。", "Konwledge_Point": "乘法", "Question": ["C++高精度乘法求改错。。", ["写了好久的高精度乘法", "\n就是一直错，求改错(不要其他高精乘代码复制过来)", "\n\n", "比较逗的事情是，我的这个代码拿去交高精乘Wrong answer", "\n直接拿去交高精加就AC了。。", "\n\n", "#include", "\n#define len 20000", "\nusing namespace std;", "\n    string s1,s2;", "\nvoid init()", "\n{", "\n    getline(cin,s1);", "\n    getline(cin,s2);", "\n}", "\n\n", "string add(string sx,string sy)", "\n{", "\n    int a[len+1],b[len+1],ans[len+1];", "\n    for(int i=0;i\n        a[s1.length()-i]=s1[i]-'0';", "\n    }", "\n    for(int i=0;i\n        b[s2.length()-i]=s2[i]-'0';", "\n    }", "\n    int tp=0;int tail=max(s1.length(),s2.length());     ", "\n    for(int i=0;i\n        ans[i]=(a[i]+b[i]+tp)%10;", "\n        tp=(a[i]+b[i]+tp)/10;   ", "\n    }", "\n    if(tp==1){", "\n        ans[max(s1.length(),s2.length())+1]=1;", "\n        tail++;", "\n    }", "\n    string answer;", "\n    char temp;", "\n    for(int i=tail;i>=1;i--){", "\n        temp=ans[i]+'0';", "\n        answer=answer+temp;", "\n    } ", "\n    return answer;", "\n}", "\n\n", "string mul(string sx,string sy)", "\n{", "\n    string used=\"0\";", "\n    int a[len+1],b[len+1],c[len+1];", "\n    for(int i=0;i\n        a[s1.length()-i]=s1[i]-'0';", "\n    }", "\n    for(int i=0;i\n        b[s2.length()-i]=s2[i]-'0';", "\n    }", "\n    int tp=0;       ", "\n    for(int i=0;i\n        for(int j=0;j\n            c[j]=(a[i]*b[j]+tp)%10;", "\n            tp=(a[i]*b[j]+tp)/10;   ", "\n        }", "\n        int tail=s2.length()-1;", "\n        if(tp!=0){", "\n            c[s2.length()]=tp;  ", "\n            tail++; ", "\n        }", "\n        string answer=\"\";", "\n        char temp;", "\n        for(int k=tail;k>=0;k--){", "\n            temp=c[k]+'0';", "\n            answer+=temp;", "\n        }", "\n\n", "    used=add(answer,used);      \n}\nreturn used;\n", "\n\n", "}", "\n\n", "int main()", "\n{", "\n    init();", "\n    cout<<mul(s1,s2);", "\n\n", "return 0;\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "http://blog.sina.com.cn/s/blog_48fb20f0010008x5.html", "Konwledge_Point": "乘法", "Question": ["将两个二维数组相乘应该怎么计算？有没有可以实现二维数组乘法运算的函数思路？", ["将两个二维数组相乘应该怎么计算？有没有可以实现二维数组乘法运算的函数思路？"]], "Tag": "算法设计"}
{"Answer": "兩個FOR循环是逐位相乘 [a,b,c]*[d,e,f] 會等於 [ad,ae,af],[bd,be,bf]....等等的組合,然後再错位相加\r\n下面的那個for就是处理进位,在result[index]的數除10儲在carry中\r\nresult赋值那句，长度+3,是為了給result更多的位置去儲存兩個FOR循环逐位相乘出來的數", "Konwledge_Point": "乘法", "Question": ["关于C#的大数乘法问题", ["public static string Multiply(string num1, string num2)", "\n        {", "\n            int carry;", "\n            int[] result;", "\n            int[] multiplicand, multiplier;", "\n\n", "        multiplicand = Reverse(num1);\n        multiplier = Reverse(num2);//这两条代码实现字符串反转，并变成数组形式\n\n        //存储大数相乘后的结果\n        result = new int[multiplicand.Length + multiplier.Length + 3];\n        //两层循环，完成大数乘法运算逐位相乘，然后错位相加\n        for (int indexMplier = 0; indexMplier < multiplier.Length; indexMplier++)\n        {\n            for (int indexMplicand = 0; indexMplicand < multiplicand.Length; indexMplicand++)\n            {\n                result[indexMplier + indexMplicand] +=\n                    multiplicand[indexMplicand] * multiplier[indexMplier];\n            }\n        }  \n        //处理进位\n        for (int index = 0; index < result.Length; index++)\n        {\n            carry = result[index] / 10;\n                   result[index] = result[index] % 10;\n\n            if (carry > 0)\n            {\n                result[index + 1] += carry;\n            }\n        }\n\n        //将结果反转，返回\n        return Reverse(result);\n    }\n}\n    两个for循环都表示什么意思？还有result赋值那句，长度为啥+3？\n"]], "Tag": "算法设计"}
{"Answer": "```\r\n &lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head lang=\"en\"&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;title&gt;九九乘法表&lt;/title&gt;\r\n    &lt;style&gt;\r\n        div{\r\n            text-align: center;\r\n            width: 1210px;\r\n            margin: 0 auto;\r\n        }\r\n        table{\r\n            margin: 0 auto;\r\n            border: 4px solid green;\r\n            padding: 5px;\r\n        }\r\n        td{\r\n            border: 1px solid green;\r\n            color: blue;\r\n        }\r\n    &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;script&gt;\r\n    // 打印9*9乘法表\r\n    document.write(\"&lt;div&gt;\");\r\n    document.write(\"&lt;h3&gt;\"+\"九九乘法表\"+\"&lt;/H3&gt;\")\r\n    document.write('&lt;table&gt;');//添加table开始标签\r\n    for(var i =1;i&lt;=9;i++){\r\n        document.write('&lt;tr&gt;');//添加tr开始标签\r\n        for(var j=1;j&lt;=i;j++){\r\n            document.write(\"&lt;td&gt;\"+i+\"※\"+j+\"=\"+i*j+\"&lt;/td&gt;\");//让其在td标签中显示\r\n        }\r\n        document.write(\"&lt;/tr&gt;\")//添加tr结束标签\r\n    }\r\n    document.write('&lt;/table&gt;');//添加table结束标签\r\n    document.write('&lt;/div&gt;');\r\n&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n```", "Konwledge_Point": "乘法", "Question": ["缺c币的都来回答吧，请教各位javascript里怎么打印99乘法表？", ["缺c币的都来回答吧，请教各位javascript里怎么打印99乘法表？", "\n1*1 = 1", "\n2 * 1 = 1 2*2 = 4", "\n3 * 1 = 1 3 * 2 = 6 3 * 3 = 9", "\n..."]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{:&amp;lt;2}&amp;#34;&lt;/span&gt;.format(j,i,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;或者&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i*j:&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}&lt;/span&gt;&amp;#34;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python，请问9*9乘法表运行后只有第三第四行不对齐是什么原因？", ["for row in range(1,10):", "    for column in range(1,row +1):", "        p = row * column", "        print(column,\" × \",row,\" = \",p,\"\\t\",end = ' ')", "    print(\"\") ", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;31行 pritnf  先修正为 printf 后重新编译&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言分数的乘法和加法，以及makeflie的问题", ["c语言分数的乘法和加法，以及makeflie的问题。希望能有详细解答", "               c语言分数的乘法和加法，以及makeflie的问题。希望能有详细解答 ", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n\n&lt;span class=\"hljs-function\"&gt;vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &lt;span class=\"hljs-title\"&gt;mul&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; &amp;amp;A, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; C;\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; A.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() || t; i &amp;#43;&amp;#43; )\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;lt; A.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;()) t &amp;#43;&amp;#61; A[i] * b;\n        C.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(t % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n        t /&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (C.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() &amp;gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; C.&lt;span class=\"hljs-built_in\"&gt;back&lt;/span&gt;() &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) C.&lt;span class=\"hljs-built_in\"&gt;pop_back&lt;/span&gt;();\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; C;\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    string a;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b;\n\n    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;\n\n    vector&amp;lt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;&amp;gt; A;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; a.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i -- ) A.&lt;span class=\"hljs-built_in\"&gt;push_back&lt;/span&gt;(a[i] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;auto&lt;/span&gt; C &amp;#61; &lt;span class=\"hljs-built_in\"&gt;mul&lt;/span&gt;(A, b);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; C.&lt;span class=\"hljs-built_in\"&gt;size&lt;/span&gt;() - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i -- ) &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, C[i]);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["求解一道高精度乘法的题，用c++的方法", ["[题目描述]高精度乘法", "\n", "输入两个高精度正整数M和N（M和N均小于100位）。求这两个高精度数的积。", "\n", "输入", "\n", "输入两个高精度正整数M和N。", "\n", "输出", "\n", "求这两个高精度数的积。", "\n", "样例输入", "\n", "36", "\n", "3", "\n", "样例输出", "\n", "108"]], "Tag": "算法设计"}
{"Answer": "你可以编写循环，做10万次加法，再做10万次乘法。看程序的运行的时间。", "Konwledge_Point": "乘法", "Question": ["Java语言有趣的问题，怎么证明，加法运算比乘法运算来的要快呢", ["Java语言有趣的问题，怎么证明，加法运算比乘法运算来的要快呢", "\nJava语言有趣的问题，怎么证明，加法运算比乘法运算来的要快呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为你所有判断都写成赋值了&lt;br /&gt;判断两数相等使用&amp;#61;&amp;#61;,一个等号是赋值符号&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["刚学c，有关九九乘法表的表达，求解", ["\n", "\n", " 想用if语句来完成“输入1-9任意一个数，输出该数对应的乘法表”这个要求“", "不太想通过循环", "想请教一下为什么利用控制台输入一个数字后后得到的是全体乘法表而不是对应该数的乘法表"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;直接对 tr 做样式处理 display:flex;justify-content:center;&lt;/p&gt;\n&lt;p&gt;给 td 进行 width 设置是为了成为等腰&amp;#xff0c;否则&amp;#xff0c;因字符串长度不一致&amp;#xff0c;会有起伏&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;\n&lt;span class=\"hljs-meta\"&gt;&amp;lt;!doctype &lt;span class=\"hljs-keyword\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;lang&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;charset&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Generator&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;EditPlus®&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Author&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Keywords&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;meta&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;Description&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;content&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-css\"&gt;\n  &lt;span class=\"hljs-selector-tag\"&gt;tr&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;:flex;&lt;span class=\"hljs-attribute\"&gt;justify-content&lt;/span&gt;:center;}\n  &lt;span class=\"hljs-selector-tag\"&gt;td&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid black;&lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;20px&lt;/span&gt;;}\n  &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;4&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;6&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;9&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;4&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;8&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;12&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;16&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;\n &lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/356672980436125.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["编写一个加表格的等腰三角形形态的九九乘法表", ["有没有办法让下面的九九乘法表变成等腰三角形"]], "Tag": "算法设计"}
{"Answer": "这个和数据结构有关系\r\n整数型自动转换成正型计算\r\n小数型直接转成double型计算\r\n这是在内存中运算的时候必须这样\r\n你该知道计算机只认识0和1吧 \r\n具体的就是浮点精准度的问题\r\nfloat  精确到小数点后7位\r\ndouble 精确到小数点后15位\r\n\r\n这在往下说就多了 反正你知道知道这些就OK了 具体的你去学学数据结构和程序运行就知道了", "Konwledge_Point": "乘法", "Question": ["js乘法，138.33*100为啥出现这么多小数点？", []], "Tag": "算法设计"}
{"Answer": "一个函数一个函数进行单独测试", "Konwledge_Point": "乘法", "Question": ["一元多项式的乘法与加法运算", ["代码运行时崩溃中断后显示“0x773C6054 (ntdll.dll) (study1.exe 中)处有未经处理的异常: 0xC0000374: 堆已损坏。 (参数: 0x773E2378)。”，但在调试时正常输出，找不出问题所在，希望能得到老师的帮助", "\n\n", "#include<stdio.h>\n#include<stdlib.h>\n\ntypedef struct node\n{\n    int coe;\n    int index;\n    struct node* next;\n}*list;\n\nlist read(void);\nvoid print(list a);\nlist add(list a,list b);\nlist mul(list a,list b);\n\nint main()\n{\n    list a,b,multi,addin;\n\n    a=read();\n    b=read();\n    multi=mul(a,b);\n    addin=add(a,b);\n    print(multi);\n    printf(\"\\n\");\n    print(addin);\n\n    return 0;\n}\n\nlist add(list a,list b)\n{\n    list p,q,s,m;\n    p=a;\n    q=b->next;\n    while(p->next!=NULL&&q!=NULL)\n    {\n        m=q->next;\n        if(q->index>p->next->index)\n        {\n            s=p->next;\n            p->next=q;\n            q->next=s;\n            q=m;\n        }\n        else if(q->index==p->next->index)\n        {\n            p->next->coe+=q->coe;\n            q=m;\n        }\n        else\n        {\n            p=p->next;\n        }\n    }\n    if(p->next==NULL&&p==a)\n        return b;\n    else if(p->next==NULL)\n        p->next=q;\n    return a;\n}\n\nlist mul(list a,list b)\n{\n    list multi;\n    list l[1000];\n    int i,j;\n    list p,q;\n    list m,s;\n\n    p=a->next;\n    q=b->next;\n    multi=(list)malloc(sizeof(struct node));\n    multi->next=NULL;\n\n    i=0;\n    while(p!=NULL)\n    {\n        l[i]=(list)malloc(sizeof(struct node));\n        m=l[i];\n        while(q!=NULL)\n        {\n            s=(list)malloc(sizeof(struct node));\n            s->coe=p->coe*q->coe;\n            s->index=p->index+q->index;\n\n            m->next=s;\n            m=s;\n            q=q->next;\n        }\n        m->next=NULL;\n\n        q=b->next;\n        i++;\n        p=p->next;\n    }\n\n    for(j=0;j<i;j++)\n    {\n        multi=add(multi,l[j]);\n    }\n\n    return multi;\n}\n\nlist read(void)\n{\n    int K;\n    int i;\n    list h,s,p;\n    scanf(\"%d\",&K);\n    h=(list)malloc(sizeof(struct node));\n    p=h;\n    for(i=0;i<K;i++)\n    {\n        s=(list)malloc(sizeof(list));\n        scanf(\"%d%d\",&s->coe,&s->index);\n        p->next=s;\n        p=s;\n    }\n    p->next=NULL;\n    return h;\n}\n\nvoid print(list a)\n{\n    int sam=0;\n    list p;\n    p=a->next;\n    while(p!=NULL)\n    {\n        if(p->coe!=0)\n        {\n            sam=1;\n            printf(\"%d %d \",p->coe,p->index);\n        }\n        else\n            ;\n        p=p->next;\n    }\n    if(sam==0)\n        printf(\"0 0 \");\n    printf(\"\\b\");\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "乘法的问题出在这里：\r\n当你拿多项式a的第一项和b相乘后，b指向的位置已经变成了多项式b的末项。你可以这样改动while(a)循环里的内容（保留b原本指向的位置不动，定义一个新指针s遍历b的每一项）：\r\n...//前面的省略\r\nwhile(a)\r\n{\r\n    Node *t;\r\n    t=(Node *)malloc(sizeof(Node));\r\n    t-&gt;next=NULL;\r\n    Node *r;\r\n    r=t;\r\n\t\tNode *s;\r\n\t\ts=b;\r\n    while(s)\r\n    {\r\n        Node *p;\r\n        p=(Node *)malloc(sizeof(Node));\r\n        p-&gt;Coefficient=s-&gt;Coefficient*a-&gt;Coefficient;\r\n        p-&gt;Exponent=s-&gt;Exponent+a-&gt;Exponent;\r\n        r-&gt;next=p;\r\n        r=p;\r\n        s=s-&gt;next;\r\n    }\r\n    r-&gt;next=NULL;\r\n    a=a-&gt;next;\r\n    L-&gt;next=add_list(L-&gt;next,t-&gt;next);\r\n}\r\n...//后面省略", "Konwledge_Point": "乘法", "Question": ["请问下题C语言实现多项式乘法的代码中存在的错误，加法是正确的输出，乘法为何结果总是错误，本人不胜感激", ["#include", "\n#include", "\ntypedef int elemType;", "\n\n", "typedef struct Node{", "\n    elemType Coefficient;", "\n    elemType Exponent;", "\n    struct Node *next;", "\n}Node,*LinkedList;", "\n\n", "int empty(LinkedList L);", "\nLinkedList LinkedCreatT(int n);", "\nLinkedList add_list(LinkedList a,LinkedList b);", "\nLinkedList multi_list(LinkedList a,LinkedList b);", "\nvoid show(LinkedList L);", "\n\n", "int main()", "\n{", "\n    LinkedList m,n,ans;", "\n    printf(\"输入第一个多项式\\n\");", "\n    m=LinkedCreatT(2);", "\n    show(m);", "\n    printf(\"\\n\");", "\n    printf(\"输入第二个多项式\\n\");", "\n    n=LinkedCreatT(2);", "\n    show(n);", "\n    printf(\"\\n\");", "\n    printf(\"他们的积是\\n\");", "\n    ans= multi_list(m,n);", "\n    show(ans);", "\n    return 0;", "\n}", "\n\n", "int empty(LinkedList L)", "\n{", "\n    return L->next==NULL;", "\n}", "\n\n", "LinkedList LinkedCreatT(int n)", "\n{", "\n    Node *L;", "\n    L=(Node *)malloc(sizeof(Node));", "\n    L->next=NULL;", "\n    Node *r;", "\n    r=L;", "\n    int k=n;", "\n    while(n--)", "\n    {", "\n        printf(\"请输入第%d项\\n\",k-n); ", "\n        elemType coe,exp;", "\n        scanf(\"%d%d\",&coe,&exp);", "\n        Node *p;", "\n        p=(Node *)malloc(sizeof(Node));", "\n        p->Coefficient=coe;", "\n        p->Exponent=exp;", "\n        r->next=p;", "\n        r=p;", "\n    }", "\n    r->next=NULL;", "\n    return L->next;", "\n}", "\n\n", "LinkedList add_list(LinkedList a,LinkedList b)", "\n{", "\n    Node *L;", "\n    L=(Node *)malloc(sizeof(Node));", "\n    L->next=NULL;", "\n    Node *r;", "\n    r=L;", "\n    while(a&&b)", "\n    {", "\n        Node *p;", "\n        p=(Node *)malloc(sizeof(Node));", "\n        if(a->Exponent>b->Exponent)", "\n        {", "\n            p->Exponent=a->Exponent;", "\n            p->Coefficient=a->Coefficient;", "\n            a=a->next;", "\n            r->next=p;", "\n            r=p;", "\n        }", "\n        else if(a->ExponentExponent)", "\n        {", "\n            p->Exponent=b->Exponent;", "\n            p->Coefficient=b->Coefficient;", "\n            b=b->next;", "\n            r->next=p;", "\n            r=p;", "\n        }", "\n        else", "\n        {", "\n            if((a->Coefficient+b->Coefficient)!=0)", "\n            {", "\n            p->Coefficient=a->Coefficient+b->Coefficient;", "\n            p->Exponent=b->Exponent;", "\n            r->next=p;", "\n            r=p;", "\n            }", "\n            a=a->next;", "\n            b=b->next;", "\n        }", "\n    }", "\n    if(a)", "\n    r->next=a;", "\n    else", "\n    r->next=b;", "\n    return L->next;", "\n}", "\n\n", "LinkedList multi_list(LinkedList a,LinkedList b)", "\n{", "\n    Node *L;", "\n    L=(Node *)malloc(sizeof(Node));", "\n    L->next=NULL;", "\n    while(a)", "\n    {", "\n        Node *t;", "\n        t=(Node *)malloc(sizeof(Node));", "\n        t->next=NULL;", "\n        Node *r;", "\n        r=t;", "\n        while(b)", "\n        {", "\n            Node *p;", "\n            p=(Node *)malloc(sizeof(Node));", "\n            p->Coefficient=b->Coefficient*a->Coefficient;", "\n            p->Exponent=b->Exponent+a->Exponent;", "\n            r->next=p;", "\n            r=p;", "\n            b=b->next;", "\n        }", "\n        r->next=NULL;", "\n\n", "    a=a->next;\n    printf(\"多项式当前是\\n\");\n    show(L->next);\n    printf(\"新链是\\n\");\n    show(t->next);\n\n    L->next=add_list(L->next,t->next);\n    printf(\"多项式变为\\n\");\n    show(L->next);\n}\nreturn L->next;\n", "\n\n", "}", "\nvoid show(LinkedList L)", "\n{", "\n    int i=1;", "\n    while(L) ", "\n    {", "\n        printf(\"该多项式是%d 乘x的%d次方\\n\",L->Coefficient,L->Exponent);", "\n        L=L->next;", "\n    }", "\n}", "\n\n", "本人的问题主要是在例如乘法中(a+b)*(c+d)，表示c乘(a+b)的链表能正常返回，但永远只能返回这一项，之后的项数不能返回，通过查看打印结果发现除第一次以外之后的t链表永远为空。谢谢各位大神的赐教"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;能用&amp;#xff0c;楼上说的对&amp;#xff0c;只要芯片资源够&amp;#xff0c;怎么用都行。&lt;br /&gt;但是也不能随便用&amp;#xff0c;否则一些 DSP、乘法 IP、除法 IP 就没啥意思了。&lt;br /&gt;按你的举例&lt;br /&gt;always&lt;a class=\"md_call_user\" type=\"user\"&gt;&amp;#64;(posedge &lt;/a&gt;clk)&lt;br /&gt;begin&lt;br /&gt; a &amp;lt;&amp;#61; b*c;&lt;br /&gt; d &amp;lt;&amp;#61; b/c;&lt;br /&gt;end&lt;/p&gt;\n&lt;p&gt;这个 a、b、c 的位宽&amp;#xff0c;clk 的频率都会影响这也表达式的使用&lt;br /&gt;1&amp;#xff1a;假如 b 和 c 都是常数。可以没有顾忌的随便使用&amp;#xff0c;不会有速度问题&amp;#xff0c;也不会有资源问题。&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    比如:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; 3 * 4;//与 a &amp;lt;&amp;#61; 12;    //是一样的&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; 12 /3;//与 a &amp;lt;&amp;#61; 4;        //是一样的&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;2&amp;#xff1a;假如 b 和 c 只有一个是常数。需要适当考虑 clk 的频率&amp;#xff0c;会优化&amp;#xff0c;优化后也会有少许延时&amp;#xff0c;也会有速度问题。一般在 XILINX A7 -3 系列&amp;#xff0c;100M时钟可以正常使用&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    比如:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b * 4;        //会优化成  a &amp;lt;&amp;#61; b &amp;lt;&amp;lt; 2;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b * 255;    //会优化成  a &amp;lt;&amp;#61; (b &amp;lt;&amp;lt; 8) -b;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b / 4;        //会优化成  a &amp;lt;&amp;#61; b &amp;gt;&amp;gt; 2;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    a &amp;lt;&amp;#61; b / 255;    //会优化成  a &amp;lt;&amp;#61; (b &amp;gt;&amp;gt; 8) &amp;#43; (b &amp;gt;&amp;gt; 16);&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;3&amp;#xff1a;假如 b 和 c 都不是常数。需要考虑 clk 的频率&amp;#xff0c;而且 b、c 的位宽越大&amp;#xff0c;越费时间。在我的一些设计中&amp;#xff0c;小于 1M 的应用一般不考虑速度。能正常使用。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["verilog 中乘法除法能不能直接在表达式中使用？ 比如 a <= b*c; d <= b/c;", ["verilog 中乘法除法能不能直接在表达式中使用？ 比如", "always", "@(posedge ", "clk)", "begin", "    a <= b*c;", "   d <= b/c;", "end"]], "Tag": "算法设计"}
{"Answer": "```\r\n&lt;div id=\"jiujiu\" class=\"aaa\"&gt;&lt;/div&gt;\r\n\t\t&lt;script&gt;\r\n\t\t\tvar html = \"\";\r\n\t\t\tfor(var i =1; i&lt;=9;i++){\r\n\t\t\t\tfor(var j =1;j&lt;=i;j++){\r\n\t\t\t\t\thtml += i+\" * \"+ j + \" = \" + (i*j) + \"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\";\r\n\t\t\t\t\tif(i*j &lt;10){\r\n\t\t\t\t\t\thtml += \"&amp;nbsp;&amp;nbsp;\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thtml += \"&lt;br /&gt;\";\r\n\t\t\t}\r\n\t\t\tdocument.getElementById(\"jiujiu\").innerHTML = html ;\r\n\r\n\t\t&lt;/script&gt;\r\n```", "Konwledge_Point": "乘法", "Question": ["九九乘法表。显示页面不显示。", ["我想输出一个九九乘法表，代码如下图。显示页面上什么也显示不出来。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;报错贴出来&amp;#xff0c;你这个不是报错提示&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用 HBuilderX 编辑99乘法表的代码，但是运行不成功，求指点迷津！", ["要写一个99乘法表的代码，照着书打出来，但浏览器渲染不了。查了一下他的报错，但是看不明白。", "这是报错的代码：", "document.getElementById('table').innerHTML=str;"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;IEEE 754 浮点数标准&lt;br /&gt;存储二进制和转换二进制是有区别的&amp;#xff0c;可能会出现误差问题&lt;br /&gt;解决可以使用decimal&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["python学习的时候发生的一个问题，乘法之间出现错误，但是找不到原因在哪", ["乘法之间出现错误，但是找不到原因在哪，计算3*4.8结果等于14.399999999999999而不是14.4", "\n", "\n", "定义苹果的单价并转换为int整数", "\n", "price = int(input(\"请输入苹果的单价：\"))", "\n", "定义苹果的重量并转换维float小数", "\n", "weight = float(input(\"请输入苹果的重量：\"))", "\n", "计算苹果的价格", "\n", "money = price * weight", "\n", "输出结果到屏幕上", "\n", "print(money)", "\n", "\n", "D:\\anaconda3\\python.exe D:/01-Python基础/08买苹果改进版.py", "请输入苹果的单价：3", "请输入苹果的重量：4.8", "14.399999999999999", "\n", "进程已结束，退出代码为 0", "\n", "\n", "我就想知道是哪里出现了问题。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的理解没错&amp;#xff0c;但是描述不是很好&lt;br /&gt;温馨提示&amp;#xff1a;你的代码里多了个没用的print()和两个无用的pass&lt;br /&gt;如果对你有帮助&amp;#xff0c;希望点击右上角给个采纳哦~&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["请问python九九乘法表原理是什么？", ["刚刚跟着网上的python教程学到了九九乘法表。对于原理想了半天想到了这样一个解释，请各位看是否正确", "\n", "hang", "=", "1", "\n", "while", " ", "hang", "<=", "9", ":\n    lie=", "1", "\n    ", "while", " lie<=", "hang", ":\n        ", "print", "('", "%d", "*", "%d", "=", "%d", "'%(", "hang", ",lie,", "hang", "*lie),end=", "\" \"", ")\n        lie+=", "1", "\n        pass\n    ", "print", "()\n    ", "hang", "+=", "1", "\n    pass\n", "\n", "这个“行”从1开始加，2，3.直到9。而“列”每次都是从1开始与“行”相乘后再加一再相乘.直到行等于列，此时行加一，继续进行上述过程直到行=9.", "描述的不太清楚.但我觉得这和高中数学的算法挺相似的，不知道思路是否正确，谢了。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt;&amp;#61; i)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d &amp;#34;&lt;/span&gt;, i, j, i * j);\n            j&amp;#43;&amp;#43;;\n        }\n        i&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img title=\"1629187213(1).jpg\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/822032781926122.jpg\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用while循环输出9X9乘法表，要求附上代码和运行结果图", ["用while循环输出9X9乘法表，要求附上代码和运行结果图（用C语言）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;for i in range(1,10):&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for j in range(1,i&amp;#43;1):&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        print(str(j)&amp;#43;&amp;#34;X&amp;#34;&amp;#43;str(i)&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;str(j*i)&amp;#43;&amp;#34;\\t&amp;#34;,end&amp;#61;&amp;#34;&amp;#34;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    print()&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["我这段有关九九乘法口诀表的代码，到底是哪里错了？", ["\n", "                     16.demo.py（使用嵌套的", "for", "循环语句打印九九乘法口快表）py:c:UsersV\n                    ", "File", " ", "Edit", " ", "Format", " ", "Run", " Options ", "Window", " ", "Help", "\n                    Loriin ", "range", "（1.10)\n                          torjinr\n LPython3.64Shell\n                                       (1.1+1)\n                                                         STR(1*J)+1\n                                                     #换行  ", "File", " ", "Edit", " ", "Shell", " Debug\n Python 3.6.4(3.6.4:0\n    ", "copyright", ".             CE\n                                                               CSyntaxErron\n                                                                                   stringlitera\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attr\"&gt;S&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n&lt;span class=\"hljs-attr\"&gt;S&lt;/span&gt;&amp;#61;S*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;i\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/496454522436129.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用Python打印古怪的乘法", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;2d是字宽的意思&lt;br /&gt;d表示要输出一个整数&amp;#xff0c;2表示这个整数要占2个字符&amp;#xff0c;如果这个整数只有一位数不足2个字符&amp;#xff0c;会在前面补充空格。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python输出乘法口诀表中的2d是什么意思", ["for i in range(1,10):", "    for j in range(1,i+1):", "           print(\"% d*% d=%2d\"%(j,i, i*j), end=' ')", "    print()", "这里面的2d是啥意思啊", "(这是一个输出乘法口诀表的Python程序)"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/45675861454612.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么这个九九乘法表没办法在同一行输出（就呈现出那个阶梯的那个形状）", ["为什么这个九九乘法表不能在同一行输出就是呈现出成阶梯状那样输出"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这就是格式化输出&amp;#xff0c;一般输出整数用&lt;code class=\"language-javascript\"&gt;%d&lt;/code&gt;&amp;#xff0c;输出浮点数用&lt;code class=\"language-javascript\"&gt;%f&lt;/code&gt;&amp;#xff0c;输出字符串用&lt;code class=\"language-javascript\"&gt;%s&lt;/code&gt;&amp;#xff0c;科学计数法表达的输出用&lt;code class=\"language-javascript\"&gt;%e&lt;/code&gt;等等。&lt;br /&gt;&lt;code class=\"language-javascript\"&gt;%2d&lt;/code&gt;指的是输出占两个位置的整数&lt;br /&gt;然后&lt;code class=\"language-javascript\"&gt;%-d&lt;/code&gt;是左对齐&amp;#xff0c;&lt;code class=\"language-javascript\"&gt;%&amp;#43;d&lt;/code&gt;是右对齐&amp;#xff0c;等等 &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于用matlab做九九乘法表", ["大佬们，这段程序我把fprintf(\"%d*%d=%-2d\",j,i,j*i)里面的d换成其他的字母就不行了，结果就出不来了，这是为什么呀，是什么原理，还有后面那个%-2d，为什么是%-2d呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用f-string串比较好理解&amp;#xff0c;其中{i*j:&amp;gt;2} :&amp;gt;2表示右对齐&amp;#xff0c;数字表示留几个字符空间。 :&amp;lt;3则表示左对齐&amp;#xff1b;居中对齐则用 :^3&lt;br /&gt;双重循环的循环变量对应的是被乘数和乘数&amp;#xff0c;有的题数字对换&amp;#xff0c;乘法表排列有的要求写成正三角&amp;#xff0c;需要相应修改&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;for i in range(1,10):\n&lt;span class=\"hljs-code\"&gt;    for j in range(1,10-i&amp;#43;1):\n        print(f&amp;#39;{i}*{j}&amp;#61;{i*j:&amp;gt;2}&amp;#39;,end&amp;#61;&amp;#39;  &amp;#39;)\n    print()\n&lt;/span&gt;\n&amp;#39;&amp;#39;&amp;#39;--result:\n1&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 1  1*&lt;/span&gt;2&amp;#61; 2  1&lt;span class=\"hljs-emphasis\"&gt;*3&amp;#61; 3  1*&lt;/span&gt;4&amp;#61; 4  1&lt;span class=\"hljs-emphasis\"&gt;*5&amp;#61; 5  1*&lt;/span&gt;6&amp;#61; 6  1&lt;span class=\"hljs-emphasis\"&gt;*7&amp;#61; 7  1*&lt;/span&gt;8&amp;#61; 8  1&lt;span class=\"hljs-emphasis\"&gt;*9&amp;#61; 9  \n2*&lt;/span&gt;1&amp;#61; 2  2&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61; 4  2*&lt;/span&gt;3&amp;#61; 6  2&lt;span class=\"hljs-emphasis\"&gt;*4&amp;#61; 8  2*&lt;/span&gt;5&amp;#61;10  2&lt;span class=\"hljs-emphasis\"&gt;*6&amp;#61;12  2*&lt;/span&gt;7&amp;#61;14  2&lt;span class=\"hljs-emphasis\"&gt;*8&amp;#61;16  \n3*&lt;/span&gt;1&amp;#61; 3  3&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61; 6  3*&lt;/span&gt;3&amp;#61; 9  3&lt;span class=\"hljs-emphasis\"&gt;*4&amp;#61;12  3*&lt;/span&gt;5&amp;#61;15  3&lt;span class=\"hljs-emphasis\"&gt;*6&amp;#61;18  3*&lt;/span&gt;7&amp;#61;21  \n4&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 4  4*&lt;/span&gt;2&amp;#61; 8  4&lt;span class=\"hljs-emphasis\"&gt;*3&amp;#61;12  4*&lt;/span&gt;4&amp;#61;16  4&lt;span class=\"hljs-emphasis\"&gt;*5&amp;#61;20  4*&lt;/span&gt;6&amp;#61;24  \n5&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 5  5*&lt;/span&gt;2&amp;#61;10  5&lt;span class=\"hljs-emphasis\"&gt;*3&amp;#61;15  5*&lt;/span&gt;4&amp;#61;20  5&lt;span class=\"hljs-emphasis\"&gt;*5&amp;#61;25  \n6*&lt;/span&gt;1&amp;#61; 6  6&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61;12  6*&lt;/span&gt;3&amp;#61;18  6&lt;span class=\"hljs-emphasis\"&gt;*4&amp;#61;24  \n7*&lt;/span&gt;1&amp;#61; 7  7&lt;span class=\"hljs-emphasis\"&gt;*2&amp;#61;14  7*&lt;/span&gt;3&amp;#61;21  \n8&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 8  8*&lt;/span&gt;2&amp;#61;16  \n9&lt;span class=\"hljs-emphasis\"&gt;*1&amp;#61; 9  \n&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python里面这个9*9的乘法表怎么弄啊，想要有个解释，不是很理解，希望大家看看，比较急", ["python里面这个9*9的乘法表怎么弄啊，想要有个解释，不是很理解，希望大家看看，比较急"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;TestApp&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;){\n                System.out.&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;#34;&lt;/span&gt;&amp;#43;j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;i*j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n            }\n            System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;();\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以参考一下&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么九九乘法表四位列宽并左对齐，老是格式错误，烦死了(语言-java)", ["public class Main{", "    public static void main(String[] args) {", "        for(int i=1;i<=9;i++) {", "            for(int j=1;j<=9;j++) {", "                System.out.print(i+\"", "\"+j+\"=\"+(i", "j)+\"\\t\");", "            }", "            System.out.println();", "\n", "    }\n    \n}\n", "\n", "}", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;宏定义只是单纯的替换后面的符号哦&amp;#xff0c;没有括号的呀&amp;#xff0c;在计算时不要加上括号呀&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n(M&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)* M/2   换个写法&amp;#xff08;比较好理解&amp;#xff09;如下\n\n(M&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)* M*1/2  对M直接宏替换后\n\n(N&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)* N&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;*1/2&amp;#xff0c;在对N进行宏替换\n\n(2&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;)*2&lt;span class=\"hljs-string\"&gt;&amp;#43;1&lt;/span&gt;/2 &amp;#61; 8.5\n\n在printf使用%d进行整形输出&amp;#xff0c;所以答案为8\n\n如果对你有帮助的话&amp;#xff0c;能不能点击右上方【采纳该答案】呢&amp;#xff0c;谢谢支持&amp;#xff01;&amp;#xff01;&amp;#xff01;\n \n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["这个运算的咋和我运算的顺序不一样，感觉我的才是对的，到底哪里出了问题啊，都是普通的乘法和加法，咋就算错了呢。", ["\n", "这个运算的咋和我运算的顺序不一样，感觉我的才是对的，到底哪里出了问题啊，都是普通的乘法和加法，咋就算错了呢。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是印错了&amp;#xff0c;应该是 1&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["原码并行乘法 阵列乘法器", []], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/qingshenxue/article/details/6210169", "Konwledge_Point": "乘法", "Question": ["新手，汇编语言乘法程序", ["看不太懂这个程序里寄存器怎么存数据的，进位是怎么做到的，以及最后结果是怎么拼的，"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;谁说没规定&amp;#xff1f;参考下面&lt;br /&gt;52&amp;#xff1a; //| *                | Multiplication                          | Left to right |&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;//C&amp;#43;&amp;#43; Operators\n//  Operators specify an evaluation to be performed on one of the following:\n//    One operand (unary operator)\n//    Two operands (binary operator)\n//    Three operands (ternary operator)\n//  The C&amp;#43;&amp;#43; language includes all C operators and adds several new operators.\n//  Table 1.1 lists the operators available in Microsoft C&amp;#43;&amp;#43;.\n//  Operators follow a strict precedence which defines the evaluation order of\n//expressions containing these operators.  Operators associate with either the\n//expression on their left or the expression on their right;    this is called\n//“associativity.” Operators in the same group have equal precedence and are\n//evaluated left to right in an expression unless explicitly forced by a pair of\n//parentheses, ( ).\n//  Table 1.1 shows the precedence and associativity of C&amp;#43;&amp;#43; operators\n//  (from highest to lowest precedence).\n//\n//Table 1.1   C&amp;#43;&amp;#43; Operator Precedence and Associativity\n// The highest precedence level is at the top of the table.\n//&amp;#43;------------------&amp;#43;-----------------------------------------&amp;#43;---------------&amp;#43;\n//|&lt;span class=\"hljs-string\"&gt; Operator         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Name or Meaning                         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Associativity &lt;/span&gt;|\n//&amp;#43;------------------&amp;#43;-----------------------------------------&amp;#43;---------------&amp;#43;\n//|&lt;span class=\"hljs-string\"&gt; ::               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Scope resolution                        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ::               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Global                                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; [ ]              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Array subscript                         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ( )              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Function call                           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ( )              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Conversion                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; .                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Member selection (object)               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -&amp;gt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Member selection (pointer)              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;&amp;#43;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Postfix increment                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; --               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Postfix decrement                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; new              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Allocate object                         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; delete           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Deallocate object                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; delete[ ]        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Deallocate object                       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;&amp;#43;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Prefix increment                        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; --               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Prefix decrement                        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; *                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Dereference                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Address-of                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Unary plus                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Arithmetic negation (unary)             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; !                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Logical NOT                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ~                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise complement                      &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; sizeof           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Size of object                          &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; sizeof ( )       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Size of type                            &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; typeid( )        &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; type name                               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; (type)           &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; const_cast       &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; dynamic_cast     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; reinterpret_cast &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; static_cast      &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Type cast (conversion)                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; None          &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; .*               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Apply pointer to class member (objects) &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -&amp;gt;*              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Dereference pointer to class member     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; *                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Multiplication                          &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; /                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Division                                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; %                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Remainder (modulus)                     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Addition                                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Subtraction                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;&amp;lt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left shift                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;&amp;gt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right shift                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Less than                               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Greater than                            &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Less than or equal to                   &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Greater than or equal to                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#61;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Equality                                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; !&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Inequality                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise AND                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ^                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise exclusive OR                    &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise OR                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;&amp;amp;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Logical AND                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;||&lt;span class=\"hljs-string\"&gt;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Logical OR                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; e1?e2:e3         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Conditional                             &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#61;                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Assignment                              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; *&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Multiplication assignment               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; /&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Division assignment                     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; %&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Modulus assignment                      &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;#43;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Addition assignment                     &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; -&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Subtraction assignment                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;lt;&amp;lt;&amp;#61;              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left-shift assignment                   &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;gt;&amp;gt;&amp;#61;              &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right-shift assignment                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &amp;amp;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise AND assignment                  &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt;&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise inclusive OR assignment         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ^&amp;#61;               &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Bitwise exclusive OR assignment         &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Right to left &lt;/span&gt;|\n//|&lt;span class=\"hljs-string\"&gt; ,                &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Comma                                   &lt;/span&gt;|&lt;span class=\"hljs-string\"&gt; Left to right &lt;/span&gt;|\n//&amp;#43;------------------&amp;#43;-----------------------------------------&amp;#43;---------------&amp;#43;\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;**&lt;br /&gt;不要迷信书、考题、老师、回帖&amp;#xff1b;&lt;br /&gt;要迷信CPU、编译器、调试器、运行结果。&lt;br /&gt;并请结合“盲人摸太阳”和“驾船出海时一定只带一个指南针。”加以理解。&lt;br /&gt;任何理论、权威、传说、真理、标准、解释、想象、知识……都比不上摆在眼前的事实&amp;#xff01;**&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["已知e1和e2是算术表达式，则对于乘法运算e1*e2的运算次序是？正确答案是C选项，但是希望有朋友可以解释C选项的答案。", ["已知e1和e2是算术表达式，则对于乘法运算e1*e2的运算次序是？正确答案是C选项，但是希望有朋友可以解释C选项的答案。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;零界点 判断处理一下就可以了&amp;#xff0c;参考一下 有用的话 采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;; i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(i&amp;#43;&amp;#34;\\t&amp;#34;);\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j&amp;#43;&amp;#34;\\t&amp;#34;);\n                &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j*i&amp;#43;&amp;#34;\\t&amp;#34;);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n    }\n     }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/836450111356192.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Java实现12×12的乘法算数表格", ["问题遇到的现象和发生背景", "\n", "无法搭建表格的第一行和第一列，第一行和第一列都是0 1 2 3 4 5 6 7 8 9 10 11 12", "\n", "问题相关代码，请勿粘贴截图", "\n", "public class A2 {", "    public static void main(String[] args) {", "\n", "    ", "for", "(", "int", " i=", "0", "; i<=", "12", "; i++){\n        ", "for", "(", "int", " j=", "0", "; j<=", "12", ";j++){\n            ", "System", ".", "out", ".print(j*i+\"\\t\");\n        }\n        ", "System", ".", "out", ".println();\n    }\n     }\n", "\n", "}", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "尝试再嵌套一层代码将第一行与第一列剥离出来，但是失败；", "尝试使用两个并列循坏，还是不行", "\n", "我想要达到的结果", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;:=&lt;/code&gt; does two things, it creates a variable and assigns a value to it. You are trying to create a new variable called &lt;code&gt;h&lt;/code&gt; in the second line and the compiler is telling you that it would not create a new variable.&lt;/p&gt;\n\n&lt;p&gt;Just replace that &lt;code&gt;:=&lt;/code&gt; with &lt;code&gt;=&lt;/code&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["如何设置一个指针乘法功能？  [重复]", ["\n\n", "\n    ", "This question already has an answer here:", "\n    ", "\n", "\n            ", "no new variables on left side of :=", "\n                \n                    4 answers\n                \n        ", "\n    ", "\n", "\n\n", "How can I set one pointer to multiply function?", "\n\n", "package main\n\nimport \"fmt\"\n\ntype Cube struct {\n    u int\n}\n\nfunc (h *Cube) space() int {\n        return h.u * h.u * h.u\n}\n\nfunc main() {\n        h := Cube {\n                u: 10,\n        }\n        fmt.Println(h.space())\n\n        h := Cube {\n                u: 100,\n        }\n        fmt.Println(h.space())\n}\n", "\n\n", "The first request of println give back 1000, but with the second println it goes wrong telling no new variables on left side of :=\nbut I want the pointer to use all same just the u: to 100 change", "\n\n", "</div>\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;It'd be possible for you to write your own &lt;code&gt;multiplyExact&lt;/code&gt; based on the suggestions on this thread:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://groups.google.com/forum/#!msg/golang-nuts/h5oSN5t3Au4/KaNQREhZh0QJ\" rel=\"nofollow noreferrer\"&gt;https://groups.google.com/forum/#!msg/golang-nuts/h5oSN5t3Au4/KaNQREhZh0QJ&lt;/a&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const mostNegative = -(mostPositive + 1)\nconst mostPositive = 1&amp;lt;&amp;lt;63 - 1\n\nfunc multiplyExact(a, b int64) (int64, error) {\n    result := a * b\n    if a == 0 || b == 0 || a == 1 || b == 1 {\n        return result, nil\n    }\n    if a == mostNegative || b == mostNegative {\n        return result, fmt.Errorf(\"Overflow multiplying %v and %v\", a, b)\n    }\n    if result/b != a {\n        return result, fmt.Errorf(\"Overflow multiplying %v and %v\", a, b)\n    }\n    return result, nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Playground: &lt;a href=\"https://play.golang.org/p/V_TSC44VcPY\" rel=\"nofollow noreferrer\"&gt;https://play.golang.org/p/V_TSC44VcPY&lt;/a&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["测试整数乘法的溢出", ["\n\n", "Overflows don't seem to be part of the builtin packages in go.", "\n\n", "What is the best way to test that you don't overflow when multiplying 2 integers ?", "\n\n", "Something similar to Java ", "Math.multiplyExact", " ...", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;print自带换行&amp;#xff0c;所以print(&amp;#34;&amp;#34;)就行&amp;#xff0c;print里面的end 一般默认是\\n&amp;#xff0c;可以该。&lt;br /&gt;print(end &amp;#61; &amp;#34;\\n&amp;#34;)啥用没有&amp;#xff0c;就是回归一下原来的print的end值&lt;br /&gt;print(end &amp;#61; &amp;#34;\\t&amp;#34; i)就是tab键的缩进&amp;#xff0c;i的值是多少就缩进多少&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["python输出九九乘法表", ["\n", "请问为什么是print（” “）是换行而不是print（”\\n “）", "\n", "\n", "最后两句没有理解，请问是什么意思"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;print()放在外层循环中&amp;#xff0c;内层循环中print的间隔改成3&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*7&lt;/span&gt;*(i-1),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(i,10):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{:&amp;lt;3}&amp;#34;&lt;/span&gt;.format(i,j,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python九九乘法表", ["现在我写出来的代码如下", "但是要写成这种 怎么才可以把它变成格式为这种排序的呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;int&amp;#xff08;&amp;#xff09;函数是将数据转化为十进制整数&amp;#xff0c;而一般情况下&amp;#xff0c;python会将数据自动显示为科学计数法的模式。对于图二第4行&amp;#xff0c;由于使用科学计数法&amp;#xff0c;对于数据过大的时候&amp;#xff0c;较小的数据会被忽略&amp;#xff0c;所以为真.而使用int函数后&amp;#xff0c;采用是十进制计数法&amp;#xff0c;此时再小的数据也不能忽略&amp;#xff0c;结果为假。&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/274754164346140.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python关于乘法和加法", [">>>", " ", "1000000000", "*", "1000000000000", "/", "2", "\n5e+20\n", ">>>", " ", "int", "(", "1000000000", "*", "1000000000000", "/", "2", ")", "\n500000000000000000000\n", ">>>", " \n\n", "\n", "这是为何？加个int就变成那样了，不加就用科学计数法表?为啥（问题一）", "\n", ">>> 1000000000", "*1000000000000", "/", "2", "==int(1000000000*1000000000000/2)\n", "True", "#说明这两个相等\n>>> 1000000000", "*1000000000000", "/2+", "2", "==1000000000*1000000000000/2\n", "True", "#为什么不为", "False", "？不是左边加2了吗？\n>>> int(1000000000", "*1000000000000", "/2)+", "2", "==int(1000000000*1000000000000/2)\n", "False", "\n\n\n", "\n", "恳请指导！谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不要用\\t做间隔符&amp;#xff0c;很明显是等号右边的数字占3个宽度左对齐&amp;#xff0c;你要按这个格式输出才行&lt;br /&gt;{i*j:&amp;lt;3}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python九九乘法表", ["到底哪里出错了 运行结果是长一样的 但是列之间的空不一样 哪位能帮我看看 我真的感激不尽"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;身高计算器\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b,c;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的身高&amp;#xff08;单位cm&amp;#xff09;\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//输入身高&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;a);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;你的身高是%.3f米&amp;#34;&lt;/span&gt;,a*&lt;span class=\"hljs-number\"&gt;0.01&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/206696231646180.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Devc++做乘法计算器算不出结果", ["\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<math.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "printf", "(", "\"身高计算器\\n\"", ");\n    ", "float", " a;\n    ", "int", " b,c;\n    ", "printf", "(", "\"请输入你的身高（单位cm）\\n\"", "); ", "//输入身高 ", "\n    ", "scanf", "(", "\"%d\"", ",&a);\n    b=", "0.01", ";\n    c=a*b;\n    ", "printf", "(", "\"你的身高是%.3d米\"", ",a*b);\n    ", "return", " ", "0", ";\n}\n", "\n", "想做一个身高计算器，例如：", "输入身高数值183（cm）", "输出身高数值1.83（m）", "运行没报错，但是得不出正确结果，不知道是哪出错了"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;myChar&lt;/span&gt; {\n    &lt;span class=\"hljs-built_in\"&gt;myChar&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a) {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;c &amp;#61; a;\n    }\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c;\n};\n\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;myInt&lt;/span&gt; {\n    &lt;span class=\"hljs-built_in\"&gt;myInt&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x) {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;t &amp;#61; x;\n    }\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t;\n};\n\nstring &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; *(myChar &amp;amp;c, myInt &amp;amp;n) {\n    string s;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n.t; &amp;#43;&amp;#43;i) {\n        s &amp;#43;&amp;#61; c.c;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; s;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n\n    &lt;span class=\"hljs-function\"&gt;myChar &lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; temp;\n    cin &amp;gt;&amp;gt; temp;\n    &lt;span class=\"hljs-function\"&gt;myInt &lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(temp)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf_s&lt;/span&gt;((a*x).&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["乘法打印多个相同字符", ["就是说能不能像", "char a = 'd'", "int x；", "cin＞＞x；", "printf(a*x)；", "\n", "输入 3", "输出 3个d"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1.如果了解过RSA算法&amp;#xff0c;应该不难证明加密算法是乘法同态的。具体的来说&amp;#xff0c;假设存在消息m0、m1&amp;#xff0c;持有公钥&amp;#xff08;N&amp;#xff0c;e&amp;#xff09;的用户调用RSA加密算法分别对m0、m1做加密得到密文c0、c1&amp;#xff0c;使得c0&lt;em&gt;c1 &amp;#61; Enc(m0&lt;/em&gt;m1)&lt;br /&gt;2.关于解密这一点&amp;#xff0c;它的安全性是依赖于RSA的&amp;#xff0c;一般我们认为一个参数选择适当的RSA构造是不存在有效算法来攻破的&amp;#xff0c;要破解RSA&amp;#xff0c;意味着整数分解问题是可以被解决的&amp;#xff0c;但现有密码学体制下&amp;#xff0c;我们还是认为整数分解问题是个困难问题。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["rsa乘法同态加密算法", ["两个rsa密文可以相乘吗，相乘后的结果可以被解密吗，如果可以的话是调用的什么方法？python实现的"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先不要把八进制、十六进制当成很复杂的东西。只不过是设置的进位条件不同。你从开始理解的八进制就有问题“八进制从0开始&amp;#xff0c;3是0、1、2、3&amp;#xff0c;3*2是两份【0&amp;#xff0c;1&amp;#xff0c;2&amp;#xff0c;3】”&amp;#xff0c;你这么考虑一下十进制从几开始&amp;#xff0c;十进制的3是什么&amp;#xff1f;X进制&amp;#xff0c;就是表示到X要进位&amp;#xff0c;比如十进制&amp;#xff0c;就是遇到10要进位&amp;#xff0c;个位数9最大&amp;#xff0c;下一位是10&amp;#xff0c;要进位到十位所以是10&amp;#xff0c;十位是1个位是0。8进制同理&amp;#xff0c;个位最大时7&amp;#xff0c;遇到8要进位&amp;#xff0c;八进制10就表示的是十进制的8。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["八进制，乘法怎么理解？", ["比如说八进制的：3*2=?", "\n\n", "八进制从0开始，3是：0、1、2、3", "\n\n", "3*2是 两份【0、1、2、3】，结果不应该是【0、1、2、3、", "4、5、6、7", "】，结果是7吗？", "\n\n", "为什么各八进制计算器，计算的结果都是6呢？", "\n\n", "\n\n", "我知道肯定自己是哪个地方理解错了，所以来问问大佬们，求解释原理。谢谢了", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Try &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;total = parseInt(price) * parseInt(quantity);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This will convert your val() strings to integers to make possible math operations. If have floats use parseFloat() instead parseInt();&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["无法在javascript中进行乘法运算", ["\n\n", "i create a page which two textbox automatically multiply show result in another textbox. But it not working.", "\n\n", "Javascript for multiplication......", "\n\n", "<script  type=\"text/javascript\">\n$(document).ready(function() {\n\n    $('#dataTable').on('keyup', '.price', calTotal)\n                  .on('keyup', '.quantity', calTotal);\n\n// find the value and calculate it\n\n    function calTotal() {\n        var $row = $(this).closest('tr'),\n            price    = $row.find('.price').val(),\n            quantity = $row.find('.quantity').val(),\n            total    = price * quantity;\n\n// change the value in total\n\n        $row.find('.txt').val(total)\n    }\n\n});\n</script>\n", "\n\n", "the html and php code is...", "\n\n", "    <table border=\"1\" id=\"dataTable\">\n\n    <tr>\n    <th> Id</th>\n    <th>p</th>\n    <th>B</th>\n    <th>M</th>\n    <th>D</th>\n    <th>De</th>\n    <th>Q</th>\n    <th>T</th>\n    </tr>\n    <?php\n    echo\"<p></p>\";\n    echo\"<p></p>\";\n    echo\"<p></p>\";\n    echo\"<p><h3> Details</h3></p>\";\n          $order = \"SELECT * FROM abd \";\n          $result = mysql_query($order);\n\n         while($row = mysql_fetch_array($result))\n         {\n$p= $row['p'];\n  $b=$row['b'];\n  $m= $row['m'];\n  $dp=$row['price'];\n  $q=$row['quantity'];\n\n\n        echo \"<td><input type=text value=$id name=item[] readonly=readonly /></td>\";\n        echo \"<td><input type=text id=p name=p[] value=$p ></td>\";\n        echo \"<td><input type=text id=B name=b[] value=$b ></td>\";\n        echo \"<td><input type=text id=M name=m[] value=$m ></td>\";\n        echo \"<td><input type=text id=Q name=qua[] value=$qua ></td>\";\n        echo \"<td><input type=text id=price name=price[] value=$price class=price ></td>\";\n        echo \"<td><input type=text id=Quantity name=q value=$q class=quantity ></td>\";\n        echo \"<td><input type=text id=txt name=txt  class=txt  > </td>\";\n    ?>\n    </table>\n", "\n\n", "when i enter dprice and quantity it automatically show the value in total price.\nBut It not working.Please Help", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; k &amp;lt; i; k&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; i; j &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d  &amp;#34;&lt;/span&gt;, i, j, i*j);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["输出格式三角形的九九乘法表", ["这是题目要求，但我的输出格式全靠右边对齐，原本位置空的却被后面的补位。求各位帮忙解答一下多谢！", "第八句if中后来改为j＞=i"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;递归了&amp;#xff0c;代码规范有些问题&amp;#xff0c;不过不会影响运行&amp;#xff0c;可以找个本地/在线的编译器跑跑看。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言递归输出乘法表", ["我这是不是没有用到递归，有没有哪里不规范，因为oj交不上去 ，网页都崩溃了好像，                                                           "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; c , i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; , j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;定义变量c,i,j\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt; )\n    {\n        j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;( j&amp;lt;&amp;#61;i )\n        {\n            c &amp;#61; i * j ;\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %d * %d &amp;#61; %d \\t&amp;#34;&lt;/span&gt; , i , j , c ) ;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;这个可以使输出的式子对其\n            j&amp;#43;&amp;#43; ;\n        }\n        i&amp;#43;&amp;#43; ;\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["C++中怎么用while循环输出九九乘法表", ["#include", "using namespace std;", "int main()", "{", "\n", "int i = 1;\nint j = 1;\n", "while", " (i < 10)\n{\n    \n    ", "while", " (j <= i)\n    {\n        cout << ", "j;\n        j", "++;\n    }\n    i++;\n}\nsystem(", "\"pause\"", ");\n", "return", " 0;\n", "\n", "}", "\n", "不知道哪错了"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I recently &lt;a href=\"http://git.savannah.gnu.org/gitweb/?p=guile.git;a=commit;h=2355f01709eadfd5350c510cdb095b4e3f71f17c\" rel=\"noreferrer\"&gt;fixed&lt;/a&gt; this bug in Guile 2.0.  The bug came into existence when C compilers started optimizing out overflow checks, on the theory that if a signed integer overflow occurs then the behavior is unspecified and thus the compiler can do whatever it likes.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["Guile Scheme 解释器中奇怪的乘法行为", ["\n\n", "I was practicing Scheme in ", "Guile 1.8.8", " interpreter on OS X. I noticed something interesting.", "\n\n", "Here's ", "expt", " function which is basically does exponentiation ", "expt(b,n) = b^n", " :", "\n\n", " (define (square x) (* x x))\n (define (even? x) (= (remainder x 2) 0))\n (define (expt b n) \n      (cond ((= n 0) 1)\n        ((even? n) (square (expt b (/ n 2))))\n        (else (* b (expt b (- n 1))))\n      ))\n", "\n\n", "If I try it with some inputs", "\n\n", " > (expt 2 10)\n 1024\n > (expt 2 63)\n 9223372036854775808\n", "\n\n", "Here comes the strange part:", "\n\n", " > (expt 2 64)\n 0\n", "\n\n", "More strangely, until ", "n=488", " it stays at ", "0", ":", "\n\n", " > (expt 2 487)\n 0\n > (expt 2 488)\n 79916762888089401123.....\n > (expt 2 1000)\n 1071508607186267320948425049060....\n > (expt 2 10000)\n 0\n", "\n\n", "When I try this code with ", "repl.it", " online interpreter, it works as expected. So ", "what the hell is wrong with Guile", "?", "\n\n", "(Note: On some dialects, ", "remainder", " function is called as ", "mod", ".)", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/14495636/strange-multiplication-behavior-in-guile-scheme-interpreter"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;写得好,缩进有点问题,最后一行再缩进一格&lt;br /&gt;所以为啥要发在问答区&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用python打印99乘法表", ["\n", "# 开发者: MR Cui Xiang Jie", "\n", "# 开发时间:2021/9/15 11:31", "\n", "for", " i ", "in", " ", "range", "(", "1", ",", "10", ",", "1", "):\n    ", "for", " j ", "in", " ", "range", "(", "1", ",(i+", "1", "),", "1", "):\n        ", "print", "(end=", "str", "(i)+", "'*'", "+", "str", "(j)+", "'='", "+", "str", "(i*j)+", "'\\t'", ")\n", "print", "()\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;注意一下全角半角字符的区别。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum,k,m;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (m&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; m&amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; m&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; k &amp;lt;&amp;#61; m; k&amp;#43;&amp;#43;)\n        {\n            sum &amp;#61; m* k;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;, k, m,sum);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["99乘法表哪里错了呢(语言-c语言)", ["@CSDN-深度学习进阶", "#include <stdio.h>", "int main()", "{", "    int  sum ,k，m;", "        for (m= 1; m<= 9; m++)", "        {", "            for (k = 1; k <= m; k++)", "                sum = m* k;", "            printf(\"%d*%d=%d\", m, k,sum);", "        }", "        printf(\"\\n\");", "    return 0;", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/433576721356121.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; N 100&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Lengh&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(a[i]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[i]!&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n            j&amp;#43;&amp;#43;;\n        i&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; j;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mul&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; int1[],&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; int2[],&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *sum &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *temp &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)];\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%*s\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),int1);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%*s\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;),int2);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%*s&amp;#34;&lt;/span&gt;,n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;X &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); i&amp;#43;&amp;#43;) {\n        sum[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n        temp[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; n; i &amp;gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i--) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(int2[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); k&amp;#43;&amp;#43;)\n            {\n                temp[k] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; n; j &amp;gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; j--)\n            {\n                temp[j&amp;#43;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; int1[j];\n            }\n            &lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; carry &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; (&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); i &amp;gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;; i--)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(!carry)\n                {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((sum[i]^temp[i])&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    {\n                        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((sum[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;)&amp;amp;&amp;amp;(temp[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;))\n                        {\n                            carry &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n                        }\n                        sum[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    {\n                        sum[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;;\n                    }\n                } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;((sum[i]^temp[i])&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    {\n                        carry &amp;#61; ((sum[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;)&amp;amp;&amp;amp;(temp[i]&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;)) ? &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt; : &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n                        sum[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;;\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    {\n                        sum[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n                        carry &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n                    }\n                }\n            }\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%*s\\n&amp;#34;&lt;/span&gt;,n&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;i,int1);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%*s&amp;#34;&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k &amp;lt; n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; k&amp;#43;&amp;#43;)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n        }\n\n\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; (n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); i&amp;#43;&amp;#43;)\n    {\n        int1[i] &amp;#61; sum[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; (n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); i &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); i&amp;#43;&amp;#43;)\n    {\n        int2[i-n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;] &amp;#61; sum[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;*(n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s\\n&amp;#34;&lt;/span&gt;,sum);\n\n}\n\n\n\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    LOOP:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *c&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[N];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *d&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[N];\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入两个二进制乘数&amp;#xff0c;可以加空格&amp;#xff0c;输入quit退出程序&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;A&amp;#61;&amp;#34;&lt;/span&gt;;\n    cin&amp;gt;&amp;gt;c;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(c, &lt;span class=\"hljs-string\"&gt;&amp;#34;quit&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;B&amp;#61;&amp;#34;&lt;/span&gt;;\n    cin&amp;gt;&amp;gt;d;\n\n    a&amp;#61;&lt;span class=\"hljs-built_in\"&gt;Lengh&lt;/span&gt;(c);\n    b&amp;#61;&lt;span class=\"hljs-built_in\"&gt;Lengh&lt;/span&gt;(d);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a!&amp;#61;b)\n    {\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;输入的二进制数不正确&amp;#xff0c;两数长度不匹配&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        &lt;span class=\"hljs-keyword\"&gt;goto&lt;/span&gt; LOOP;\n    }\n    a&amp;#61;a&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;mul&lt;/span&gt;(c,d,a);\n    &lt;span class=\"hljs-keyword\"&gt;goto&lt;/span&gt; LOOP;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请点击我的回答下方的&lt;strong&gt;【采纳该答案】&lt;/strong&gt;按钮帮忙采纳下&amp;#xff0c;谢谢!&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/101342676936187.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "乘法", "Question": ["无符号的乘法C++代码完善", ["目前的代码只实现了结果，代码想体现具体过程，如图所示样子", "有专家帮忙完善一下吗", "\n", "#", "include", "<iostream>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "define", " N 100", "\n", "using", " ", "namespace", " std;\n", "int", " ", "Lengh", "(", "char", " a[])", "\n", "{\n    ", "int", " i=", "0", ",j=", "0", ";\n    ", "while", "(a[i]!=", "'\\0'", ")\n    {\n        ", "if", "(a[i]!=", "' '", ")\n        j++;\n        i++;\n    }\n    ", "return", " j;\n}\n", "void", " ", "mul", "(", "char", " int1[],", "char", " int2[],", "int", " n)", "\n", "{\n    ", "char", " *sum = ", "new", " ", "char", "[", "2", "*(n+", "1", ")];\n    ", "char", " *temp = ", "new", " ", "char", "[", "2", "*(n+", "1", ")];\n    ", "for", "(", "int", " i = ", "0", "; i < ", "2", "*(n+", "1", "); i++) {\n        sum[i] = ", "'0'", ";\n        temp[i] = ", "'0'", ";\n    }\n    ", "for", "(", "int", " i = n; i > ", "-1", "; i--) {\n        ", "if", "(int2[i]==", "'1'", ")\n        {\n            ", "for", "(", "int", " k = ", "0", "; k < ", "2", "*(n+", "1", "); k++)\n            {\n                temp[k] = ", "'0'", ";\n            }\n            ", "for", "(", "int", " j = n; j > ", "-1", "; j--)\n            {\n                temp[j+i+", "1", "] = int1[j];\n            }\n            ", "bool", " carry = ", "false", ";\n            ", "for", "(", "int", " i = (", "2", "*n + ", "1", "); i > ", "-1", "; i--)\n            {\n                ", "if", "(!carry)\n                {\n                    ", "if", "((sum[i]^temp[i])==", "0", ")\n                    {\n                        ", "if", "((sum[i]==", "'1'", ")&&(temp[i]==", "'1'", "))\n                        {\n                            carry = ", "true", ";\n                        }\n                        sum[i] = ", "'0'", ";\n                    }\n                    ", "else", "\n                    {\n                        sum[i] = ", "'1'", ";\n                    }\n                } ", "else", "\n                {\n                    ", "if", "((sum[i]^temp[i])==", "0", ")\n                    {\n                        carry = ((sum[i]==", "'1'", ")&&(temp[i]==", "'1'", ")) ? ", "true", " : ", "false", ";\n                        sum[i] = ", "'1'", ";\n                    }\n                    ", "else", "\n                    {\n                        sum[i] = ", "'0'", ";\n                        carry = ", "true", ";\n                    }\n                }\n            }\n        }\n    }\n    ", "for", "(", "int", " i = ", "0", "; i < (n+", "1", "); i++)\n    {\n        int1[i] = sum[i];\n    }\n    ", "for", "(", "int", " i = (n+", "1", "); i < ", "2", "*(n+", "1", "); i++)\n    {\n        int2[i-n", "-1", "] = sum[i];\n    }\n}\n\n\n\n\n\n", "int", " ", "main", "()", "\n", "{\n    LOOP:\n    ", "int", " a=", "0", ",b=", "0", ";\n    ", "char", " *c=", "new", " ", "char", "[N];\n    ", "char", " *d=", "new", " ", "char", "[N];\n    cout<<", "\"请输入两个二进制乘数，可以加空格，输入quit退出程序\"", "<<endl;\n    cout<<", "\"A=\"", ";\n    cin>>c;\n\n    cout<<", "\"B=\"", ";\n    cin>>d;\n    \n    a=", "Lengh", "(c);\n    b=", "Lengh", "(d);\n    ", "if", "(a!=b)\n    {\n        cout<<", "\"输入的二进制数不正确，两数长度不匹配\"", "<<endl;\n        ", "goto", " LOOP;\n    }\n    a=a", "-1", ";\n    ", "mul", "(c,d,a);\n    cout<<c<<d;\n    ", "goto", " LOOP;\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不这样输出你的值在哪里&lt;br /&gt;第一层for 外循环控制行数&lt;br /&gt;第二层 for 内循环控制列数&lt;br /&gt;输出的就是每个乘法对应的值&lt;br /&gt;例如第一个第一次循环 i是1&amp;#xff0c;j是1 第一个就是1&lt;em&gt;1 &amp;#61; 1也就是 你的输出语句 i &amp;#43;  &amp;#34;&lt;/em&gt;&amp;#34; &amp;#43; j &amp;#43; &amp;#34;&amp;#61;&amp;#34; &amp;#43; i*j &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["99乘法表用for嵌套循环写", ["public static void main(String[] args) {", "        for(int i=1;i<10;i++){", "            for(int j=1;j<=i;j++){", "                System.out.print(i+\"", "\"+j+\"=\"+i", "j+\" \");", "            }", "            System.out.println();", "\n", "}\n", "\n", "这一段System.out.print(i+\"", "\"+j+\"=\"+i", "j+\" \");", "括号里面的没理解什么为什么这样写才能输出数字。\n    "]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/shisi/article/details/4600265", "Konwledge_Point": "乘法", "Question": ["单片机汇编语言乘法转换为移位和加法", ["16位乘16位的算法，用移位加法来做的，希望有人能写出代码让我搞懂，不是很理解，希望可以寻求帮助，刚学单片机，"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; happy(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt;)\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        ;&lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;--;&lt;/span&gt;\n        happy(&lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i &amp;lt;&amp;#61; (&lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;))\n        {\n            printf(&amp;#34;%d * %d &amp;#61; %d  ,&amp;#34;, &lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i , (&lt;span class=\"hljs-keyword\"&gt;row&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*i);\n            i&amp;#43;&amp;#43;;\n        }\n        printf(&amp;#34;\\n&amp;#34;);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言递归打印9*9乘法表", ["为什么没有运行到row(9),要怎么改，用递归，不太懂，初学。（c语言递归）"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;思路&amp;#xff1a;&lt;/strong&gt;如果这个数字里面包含有质因子 3&amp;#xff0c;那么按照质因子 3 的个数排序&amp;#xff0c;否则按照数字大小排序。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;//手打代码&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;st&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; num;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; trin;\n}a[&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;];\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;tri&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; num)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; s&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(num%&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) \n    {\n        s&amp;#43;&amp;#43;;\n        num/&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; s;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;cmp&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(st x,st y)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x.trin!&amp;#61;y.trin) &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x.trin&amp;gt;y.trin;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x.num&amp;lt;y.num;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n;\n    cin&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;) \n    {\n        cin&amp;gt;&amp;gt;a[i].num;\n        a[i].trin&amp;#61;&lt;span class=\"hljs-built_in\"&gt;tri&lt;/span&gt;(a[i].num);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(a&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,a&amp;#43;n&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,cmp);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;) cout&amp;lt;&amp;lt;a[i].num&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["乘法与除法c++编程", ["蒜头君很喜欢数字游戏。他可以对一个整数 x 进行两种操作：", "\n", "除以 3（如果 x 是 3 的倍数）。", "\n", "乘 2。", "\n", "蒜头君对一个整数 x 依次进行了 n-1 次操作后，得到了一个长为 n 的序列。但是他好像不小心把这个数组打乱了然后他自己也不记得之前他都做了什么。", "\n", "于是他找到了你，希望你能够帮他恢复他的数列。", "\n", "输入格式", "输入的第一行包含一个整数 n（2≤n≤50）。", "\n", "输入的第二行是一个长度为 n 的数组，即蒜头君在进行操作后得到的数列不小心打乱了之后的结果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;想用Python实现颜色输出&amp;#xff0c;可以使用以下语句&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\033[显示方式&amp;#xff1b;前景颜色&amp;#xff1b;背景颜色m…\\033[0m&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/676106021356127.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/86541602135619.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;把你想要的颜色编号填进去就好啦~&lt;br /&gt;希望对你有所帮助&amp;#xff0c;求采纳&amp;#xff0c;谢谢&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表。要求：改变输出数字的颜色，每行颜色都不同", ["初学者没搞懂怎么生成不同颜色", "\n", "改变输出数字的颜色，每行颜色都不同", "\n", "改变输出数字的颜色，每行颜色都不同"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第六行&amp;#xff0c;循环条件写错了&lt;br /&gt;是i &amp;lt;10&amp;#xff0c;你写成了1&amp;lt;10&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/398793526636160.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言写出的九九乘法表为啥死循环了", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;You just need to sum all totals while iterating&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$grand_total = 0;\nforeach($_POST['description'] as $value)\n{\n    echo \"&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;\";\n    // code here...\n\n    $totalprice = $x1 * $x2;\n    echo $totalprice;\n\n    $grand_total = $grand_total + $totalprice;\n    $i++;\n}\necho $grand_total;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["PHP数组，表，形式，乘法... argh", ["\n\n", "I have tried for hours, and hope you can help me now :", "\n\n", "I am trying to get values from a HTML form via ", "$_POST", " into a table via PHP, and multiplying two numbers: ", "['amount'] * ['price'] = $totalprice", "\n\n", "So far so good.", "\n\n", "I get something that might look like this:", "\n\n", "Description – Amount – Format – Price – ", "Total ($totalprice)", "\n\n", "Spoon – 3 – pieces – 4 – ", "12", " ", "\n\n", "Plate – 2 – pieces – 3 – ", "6", " ", "\n\n", "Glass – 6 – pieces – 3 – ", "18", "\n\n", "Now how do I sum up all the ", "“Total” ($totalprice)’s", " 12+6+18 so I get the result: ", "36", " ?", "\n\n", "The piece of code I’m struggling with:", "\n\n", "foreach($_POST['description'] as $value)\n{\necho \"<tr><td>\";\necho $i+1;\necho \"</td>\n<td>\".$value.\"</td>\n<td><center>\".$_POST['amount'][$i].\"</td>\n<td><center>\".$_POST['format'][$i].\"</td>\n<td><center>\".$_POST['price'][$i].\"</td>\";\n\n//Figures out the total price = amount * price\n$x1 = $_POST['amount'] [$i];\n$x2 = $_POST['price'] [$i];\necho \"<td><center>\";\n$totalprice = $x1 * $x2;\necho $totalprice;\n//Figures out the total price = amount * price\n\n$i++;\n}\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I've included comments in place of modified code. It use and extra foreach loop to print heading.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\n\n$array1 = array(1,2,3,4,7,6);\n$array2 = array(2,3,1,0,5);\n\nfunction printTable($array1, $array2) {\n  echo \"&amp;lt;table border=1px&amp;gt;\";\n\n  /* In our table first cell is empty. So put a blank cell here. */\n  echo '&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;' ;\n\n  /* Then print all headers in following cells */\n  foreach($array1 as $head) {\n    echo '&amp;lt;th&amp;gt;' . $head . '&amp;lt;/th&amp;gt;' ;\n  }\n  /* close the first row */\n  echo '&amp;lt;/tr&amp;gt;';\n\n  foreach ($array2 as $vert_head) {\n    echo \"&amp;lt;tr&amp;gt;\";\n\n    /* Before printing each row, print the left heading */\n    echo '&amp;lt;td&amp;gt;' . $vert_head . '&amp;lt;/td&amp;gt;' ;\n\n    foreach ($array1 as $hor_head) {\n      echo \"&amp;lt;td&amp;gt;\". ($vert_head * $hor_head) .\"&amp;lt;/td&amp;gt;\";\n    }\n    echo \"&amp;lt;/tr&amp;gt;\";\n  }\n  echo \"&amp;lt;/table&amp;gt;\";\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["打印乘法表的垂直和水平标题", ["\n\n", "I have two arrays:", "\n\n", "$array1 = array(1,2,3,4,7,6);\n$array2 = array(2,3,1,0,5);\n", "\n\n", "Then I tried to create ", "printTable", " function to print multiplication table for arrays:", "\n\n", "function printTable($array1, $array2) {\n  echo \"<table border=1px>\";\n  foreach ($array2 as $vert_head) {\n    echo \"<tr>\";\n    foreach ($array1 as $hor_head) {\n      echo \"<td>\". ($vert_head * $hor_head) .\"</td>\";\n    }\n    echo \"</tr>\";\n  }\n  echo \"</table>\";\n}\n", "\n\n", "And then print table:", "\n\n", "$data = printTable($array1, $array2);\n", "\n\n", "It works fine table is print. But how can I add horizontal and vertical header from arrays?", "\n\n", "That how my table looks right now(just answers):", "\n\n", "2 |  4 |  6 |  8 | 14 | 12 |\n3 |  6 |  9 | 12 | 21 | 18 |\n1 |  2 |  3 |  4 |  7 |  6 | \n0 |  0 |  0 |  0 |  0 |  0 |\n5 | 10 | 15 | 20 | 35 | 30 |\n", "\n\n", "How can I add headers:", "\n\n", "|   | 1 |  2 |  3 |  4 |  7 |  6 |  \n+---+---+----+----+----+----+----+\n| 2 | 2 |  4 |  6 |  8 | 14 | 12 |\n| 3 | 3 |  6 |  9 | 12 | 21 | 18 |\n| 1 | 1 |  2 |  3 |  4 |  7 |  6 | \n| 0 | 0 |  0 |  0 |  0 |  0 |  0 |\n| 5 | 5 | 10 | 15 | 20 | 35 | 30 |\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为打印一行算式的换行&amp;#xff0c;以及打印空格的if-else没有放到相应的for循环里面&amp;#xff0c;然后打印算式的语句有错误&amp;#xff0c;所以导致打印没有达到预期的效果&amp;#xff1b;&lt;br /&gt;&lt;br /&gt;把打印换行的语句以及打印空格语句放到相应位置&amp;#xff0c;再把打印算式的语句改一下即可&amp;#xff0c;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;  &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,k;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;j&amp;#43;&amp;#43;){\n            k&amp;#61;i*j;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d&amp;#34;&lt;/span&gt;,i,j,k);\n            \n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i*j&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;){\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n            }\n        }\n        \n    \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);    \n\n    }  \n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        \n} \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/15835936576611.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言写乘法口诀 请问这是怎么回事呀", ["为啥都是数字呀 有没有懂行帮忙指出问题呀 本人接触一周。麻烦告诉修改方法"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-4d&amp;#34;&lt;/span&gt;,i);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n------------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;lt;i)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-4d&amp;#34;&lt;/span&gt;,i*j);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["倒的右下角九九乘法表，简单语句", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我猜测是这行代码出现了溢出覆盖到后面字符数据&amp;#xff0c;导致输出字符不限于 0-9&amp;#xff0c;可能输出任意 ascii 字符&amp;#xff0c;而你的控制台字符编码规则是utf8 或者 gbk&amp;#xff0c;这就可能导致类似中文的乱码出现。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n           &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;[i&amp;#43;j]&amp;#43;&amp;#61; ((&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;)a[i]&lt;span class=\"hljs-number\"&gt;-48&lt;/span&gt;) * ((&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;)b[j]&lt;span class=\"hljs-number\"&gt;-48&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["做高精度乘法出现乱码", ["代码如下，有时候运算结果不会出现乱码，有时会出现乱码，很奇怪", "比如：（第一行是a，第二行是b，第三行是输出结果a*b）", "\n", "\n", "\n", "\n", "\n", "#include<iostream>", "\n", "#include<algorithm>", "\n", "#include<stdio.h>", "\n", "#include<stdlib.h>", "\n", "#include<string>", "\n", "using", " namespace std;\n\n\n\n", "int", " main()\n{\n    string str;\n    string a, b;\n    cin >> a >> b;\n    ", "int", " ", "temp", " = ", "0", ",temp1=", "0", ",temp2=", "0", ";\n    ", "int", " aa = a.length()", "-1", ";\n    ", "int", " bb = b.length()", "-1", ";\n    \n    reverse(a.", "begin", "(), a.", "end", "());\n    reverse(b.", "begin", "(), b.", "end", "());\n\n    ", "for", " (", "int", " i = ", "0", "; i <= aa + bb+", "1", "; i++)\n        str+= ", "'0'", ";\n\n    ", "for", " (", "int", " i = ", "0", "; i <= aa; i++)\n    {\n        ", "for", " (", "int", " j = ", "0", "; j <=bb; j++)\n        {\n            str[i+j]+= ((", "int", ")a[i]", "-48", ") * ((", "int", ")b[j]", "-48", ");\n\n        }\n\n    }\n\n    ", "int", " m = ", "0", ";\n    ", "for", " (", "int", " i = ", "0", "; i <= aa + bb; i++)\n    {\n        ", "if", " (str[i] + ", "temp", " > ", "'9'", ")\n        {\n            str[i] += ", "temp", ";\n            ", "temp", " = ((", "int", ")str[i] - ", "48", ") / ", "10", ";\n            str[i] = ((", "int", ")str[i] - ", "48", ") % ", "10", "+", "'0'", ";\n        }\n        ", "else", "\n            ", "temp", " = ", "0", ";\n    }\n    str[aa + bb + ", "1", "] += ", "temp", ";\n    reverse(str.", "begin", "(), str.", "end", "());\n\n\n        ", "for", " (", "int", " i = ", "0", ", test = ", "0", "; i <= aa + bb + ", "1", "; i++)\n        {\n            ", "if", " (str[i] == ", "'0'", " && test == ", "0", ")\n            {\n                ", "continue", ";\n            }\n            ", "else", "\n            {\n                test++;\n                cout << str[i];\n            }\n        }\n\n}\n\n", "\n", "不知各位可有什么类似的经验吗，万分感谢您的帮助！"]], "Tag": "算法设计"}
{"Answer": "for(p=1;p&lt;=7*(p-1);p++)\r\np=1，p-1肯定是0啊，所以不执行这个循环\r\n\r\n\r\n\r\n```\r\n#include \"stdio.h\"\r\nint main()\r\n{\r\n\tint a,i,start,h,k,j,p;\r\n\tscanf(\"%d\",&amp;a);\r\n\tfor(i=0; i&lt;a; i++)\r\n\t{ \r\n\t\tscanf(\"%d%d\",&amp;start,&amp;h);\r\n\t\tfor(k=start; k&lt;=h; k++)\r\n\t\t{\r\n\t\t\tfor(p=1;p&lt;=7*(h-k-1);p++)\r\n\t\t\t\tprintf(\" \");\r\n\t\t\tfor(j=start; j&lt;=h; j++)\r\n\t\t\t\tprintf(\"%-d*%-d=%-3d\",k,j,k*j);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201811/11/1541871057_419102.gif)\r\n\r\n---------------------------------------------------------\r\n\r\n\r\n```\r\n#include \"stdio.h\"\r\nint main()\r\n{\r\n    int a,i,start,h,k,j,p;\r\n    scanf(\"%d\",&amp;a);\r\n    for(i=0; i&lt;a; i++)\r\n    { \r\n        scanf(\"%d%d\",&amp;start,&amp;h);\r\n        for(k=start; k&lt;=h; k++)\r\n        {\r\n            for(p=1;p&lt;=7*(k-1);p++)\r\n                printf(\" \");\r\n            for(j=k; j&lt;10; j++)\r\n                printf(\"%-d*%-d=%-3d\",k,j,k*j);\r\n            printf(\"\\n\");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201811/11/1541917758_69327.gif)", "Konwledge_Point": "乘法", "Question": ["乘法表前空格打不出,希望大神说出原因", ["#include ", "\nint main()", "\n{int a,i,start,h,k,j,p;", "\n    scanf(\"%d\",&a);", "\n    for(i=0; i<a; i++)", "\n    { scanf(\"%d%d\",&start,&h);", "\n        for(k=start; k<=h; k++)", "\n        {for(p=1;p<=7*(p-1);p++)", "\n             printf(\" \");", "\n            for(j=start; j<=h; j++)", "\n            printf(\"%-d*%-d=%-3d\",k,j,k*j);", "\n            printf(\"\\n\");}", "\n        printf(\"\\n\");}", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这样行吗&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{ \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;/* 打印表头*/&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %4d&amp;#34;&lt;/span&gt;,i);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;;i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;);\n        \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i--) &lt;span class=\"hljs-comment\"&gt;/* 循环体执行一次&amp;#xff0c;打印一行*/&lt;/span&gt;\n    { \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %4d&amp;#34;&lt;/span&gt;,i*j); &lt;span class=\"hljs-comment\"&gt;// 循环体执行一次&amp;#xff0c;打印一个数据*/&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;/* 每行尾换行*/&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/33817566905612.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["正三角99乘法表改成倒三角的", ["#include <stdio.h>", "int main()", "{ int i,j;", "for (i=1;i<=9;i++)         /* 打印表头*/", "     printf(\" %4d\",i);", "printf(\"\\n\");", "  for (i=0;i<=50;i++)", "     printf(\"%c\",'_');", "  printf(\"\\n\");", "  for (i=1;i<=9;i++)        /* 循环体执行一次，打印一行*/", "   { for (j=1;j<=i;j++)", "       printf(\" %4d\",i", "j);  /", " 循环体执行一次，打印一个数据*/", "     printf(\"\\n\");     /* 每行尾换行*/", "   }", "printf(\"\\n\");", "return 0;", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;do{...}while可以内嵌&amp;#xff0c;你程序有点问题&amp;#xff0c;下面把while(j&amp;lt;9)改回while(j&amp;lt;i)&lt;/p&gt;\n\n&lt;p&gt;i&amp;#61;1 &lt;/p&gt;\n\n&lt;p&gt;&amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl  &amp;#61;&amp;#61;&amp;gt;  i&amp;#43;&amp;#43;  &amp;#61;&amp;#61;&amp;gt;  j&amp;#61;1  &amp;#61;&amp;#61;&amp;gt;  do{...}(j&amp;lt;2)  &amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;endl    &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;这时(i已经等于2)&amp;#xff0c;j会输出12&lt;/p&gt;\n\n&lt;p&gt;              i&amp;#61;1                       i&amp;#61;2          j&amp;#61;1&lt;/p&gt;\n\n&lt;p&gt;&amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl  &amp;#61;&amp;#61;&amp;gt;  i&amp;#43;&amp;#43;  &amp;#61;&amp;#61;&amp;gt;  j&amp;#61;1  &amp;#61;&amp;#61;&amp;gt;  do{...}(j&amp;lt;3)  &amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;endl    &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;这时(i已经等于3)&amp;#xff0c;j会输出123&lt;/p&gt;\n\n&lt;p&gt;              i&amp;#61;2                       i&amp;#61;3          j&amp;#61;1&lt;/p&gt;\n\n&lt;p&gt;&amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl  &amp;#61;&amp;#61;&amp;gt;  i&amp;#43;&amp;#43;  &amp;#61;&amp;#61;&amp;gt;  j&amp;#61;1  &amp;#61;&amp;#61;&amp;gt;  do{...}(j&amp;lt;3)  &amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;endl    &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;这时(i已经等于4)&amp;#xff0c;j会输出1234&lt;/p&gt;\n\n&lt;p&gt;              i&amp;#61;3                       i&amp;#61;4          j&amp;#61;1&lt;/p&gt;\n\n&lt;p&gt;...&lt;/p&gt;\n\n&lt;p&gt;&amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl  &amp;#61;&amp;#61;&amp;gt;  i&amp;#43;&amp;#43;  &amp;#61;&amp;#61;&amp;gt;  j&amp;#61;1  &amp;#61;&amp;#61;&amp;gt;  do{...}(j&amp;lt;9)  &amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;endl    &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;这时(i已经等于9)&amp;#xff0c;j会输出123456789&lt;/p&gt;\n\n&lt;p&gt;              i&amp;#61;8                       i&amp;#61;9          j&amp;#61;1&lt;/p&gt;\n\n&lt;p&gt;&amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;endl  &amp;#61;&amp;#61;&amp;gt;  i&amp;#43;&amp;#43;  &amp;#61;&amp;#61;&amp;gt;  j&amp;#61;1  &amp;#61;&amp;#61;&amp;gt;  do{...}(j&amp;lt;10)  &amp;#61;&amp;#61;&amp;gt;  cout&amp;lt;&amp;lt;endl  &amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;这时(i已经等于10)&amp;#xff0c;j会输出12345678910&lt;/p&gt;\n\n&lt;p&gt;              i&amp;#61;9                       i&amp;#61;10        j&amp;#61;1&lt;/p&gt;\n\n&lt;p&gt;可以把程序执行的顺序或者i的初始值改一下。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["do{,,,,}while不可以做内嵌吗？为啥做的乘法口诀表老是缺点东西", ["int main() {", "\n    int i = 1;", "\n    do {", "\n        cout << i << endl;i++;", "\n        int j = 1;", "\n        do", "\n        {", "\n            cout << j;j++;", "\n        } while (j <=9);     //这里修改成j<=i 就会缺少一个1，多了一个10，什么情况啊", "\n        cout << endl;", "\n    } while (i <= 9);", "\n\n", "    system(\"pause\");", "\n    return 0;", "\n\n", "\n }"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;运行结果如下&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/576999173056194.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表，i和j的位置是不是放反了啊？", ["\n", "#include<stdio.h>", "void main(){", "    int i,j;", "\n", "    ", "for", "(i=", "1", ";i<=", "9", ";i++)\n    {\n        ", "for", "(j=", "1", ";j<=i;j++)\n        {\n        ", "printf", "(", "\"%d  *  %d  =  %d\"", ",j,i,i*j);\n    }\n        ", "printf", "(", "\"\\n\"", ");\n    }\n\ngetchar();\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#!/usr/bin/python3&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1, 10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1, i&amp;#43;1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{}x{}&amp;#61;{}\\t&amp;#39;&lt;/span&gt;.format(j, i, i*j), &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["使用python编写乘法表时，如何处理字符串分割、空行问题？", ["\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这里return;是为了 当i大于j时不执行后面的语句。直接返回上个函数调用处&amp;#xff0c;进行下一步。&lt;/p&gt;\n\n&lt;p&gt;函数判断到了return就停了&amp;#xff0c;直接返回到调用处下一步&amp;#xff0c;不会执行下面的代码了。&lt;/p&gt;\n\n&lt;p&gt;如果i是5&amp;#xff0c;j是4的话&amp;#xff0c;你九九乘法表前面的数字不会大于后面的&amp;#xff0c;所以直接结束这个函数&amp;#xff0c;进行下一步。&lt;/p&gt;\n\n&lt;p&gt;如果if括号里面的内容只有一句的话&amp;#xff0c;括号可以省略&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["99乘法表，这里的return；是啥意思啊，自定义函数不是void类型嘛？？？", ["这里的return；是啥意思啊，自", "\n\n", "\n", "#include <stdio.h>\n \nvoid func(int i, int j)\n{\n    if(i>j)\n        return;//这个是啥意思？ \n    printf(\"%dx%d=%d\\t\", i, j, i*j);\n    func(i+1, j);\n}\n \nvoid f(int n)\n{\n    if(n==1)\n        printf(\"1x1=1\\n\");\n    else\n    {\n        f(n-1);\n        func(1, n);\n        putchar('\\n');\n    }\n}\n \n \nint main()\n{\n    f(9);\n    return 0;\n}\n", "\n\n", "定义函数不是void类型嘛？？？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;for循环先把1赋给x然后执行完下面语句再把2赋给x没错&amp;#xff0c;但是下面的语句无法构成乘法表。因为乘法表是9个数字和9个数字间的组合。1个数字就要匹配九个数字&amp;#xff0c;现在你这么写x为1时就乘了y&amp;#61;1就输出&amp;#xff0c;下一次循环x&amp;#61;2&amp;#xff0c;y还是&amp;#61;1&amp;#xff0c;x&amp;gt;y&amp;#xff0c;if语句不会执行那么执行else语句y&amp;#43;&amp;#61;1&amp;#xff0c;y&amp;#61;2&amp;#xff0c;没有输出&amp;#xff0c;那么进入下一次循环x&amp;#61;3。。。这样怎么构成乘法表&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["python 用for循环与if语句写九九乘法表", ["只能打出一行，for循环不是先把1赋给x然后执行完下面语句再把2赋给x吗，为什么赋完1好像就断了（我是xin手，并没有学while循环）"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nls&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#34;九九乘法表&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;]\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;): &lt;span class=\"hljs-comment\"&gt;#改错&amp;#xff1a;&lt;/span&gt;\n        separator &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i&amp;#61;&amp;#61;j &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;#改错&amp;#xff1a;&lt;/span&gt;\n        element &amp;#61; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(i) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(j) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(i*j) &amp;#43; separator\n        ls.append(element) &lt;span class=\"hljs-comment\"&gt;#改错&amp;#xff1a;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; item &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; ls:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(item,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python的一道改错题", ["4、改错题", "请将如下图所示的九九乘法表保存于列表并输出。", "\n", "\n", "代码如下：", "ls=[\"九九乘法表：\\n\"]", "for i in range(1,10):", "    for j in range(1,10):  #改错：", "        separator = ' ' if i==j else '\\n'  #改错：", "        element = str(i) + '", "' + str(j) + '=' + str(i", "j) + separator", "        ls.insert(element)  #改错：", "for item in ls:", "    print(item,end=' ')"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;i);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c%dx%d&amp;#61;%d&amp;#34;&lt;/span&gt;,i&amp;#61;&amp;#61;j?&lt;span class=\"hljs-string\"&gt;&amp;#39;\\r&amp;#39;&lt;/span&gt;:&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;,i,j,i*j);\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["问一下C语言中怎么连续乘", ["怎么编一串代码，可以输入一个个位数，输出他那一列的九九乘法表。例如输入7，得到7×7＝49，7×8=56，7×9=63。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码及运行结果如下:&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/346068422156150.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Complex&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; real;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; image;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; r, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i)\n    {\n        real &amp;#61; r; image &amp;#61; i;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; r)\n    {\n        real &amp;#61; r; image &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;()\n    {\n        real &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; image &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    ~&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;()\n    {\n        &lt;span class=\"hljs-comment\"&gt;//do nothing&lt;/span&gt;\n    }\n    Complex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; *&amp;#61; (&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Complex Right) \n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; real, b &amp;#61; image;\n        real &amp;#61; a * Right.real - b * Right.image;\n        image &amp;#61; b * Right.real &amp;#43; a * Right.image;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n    }\n\n    Complex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; *&amp;#61; (&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n) \n    {\n        Complex &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;(n, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt; *&amp;#61; t;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex comp)&lt;/span&gt;&lt;/span&gt;;\n\n};\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex comp)&lt;/span&gt;\n&lt;/span&gt;{\n    cout &amp;lt;&amp;lt; comp.real;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (comp.image &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        cout &amp;lt;&amp;lt; comp.image &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (comp.image &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; comp.image &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    \n    \n    &lt;span class=\"hljs-comment\"&gt;//显示C1&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c1);\n\n    &lt;span class=\"hljs-comment\"&gt;//与int类型相乘&lt;/span&gt;\n    c1 *&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c1);\n\n    \n    &lt;span class=\"hljs-comment\"&gt;//与复数相乘&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;t&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    c2 *&amp;#61; t;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c2);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["定义复数类（Complex）", ["C++ 编写程序 ：包含必要的构造函数和析构函数，重载乘法赋值运算符“*=”实现复数与整数、复数与复数之间的乘法运算，自行举例并按照如下格式输出计算结果。（要求使用转换构造函数把整数转换为复数后进行计算）。", "输出格式示例：", "\n", "##怎么把输入的整数转为复数？", "##这里的构造函数和析构函数有什么作用（真的不太理解）🙏"]], "Tag": "算法设计"}
{"Answer": "你是想实现循环运算还是一次运算就结束？\r\n1.如果一次运算就结束的话：把主函数里的While 改成用if判断！ 并且在每个scanf（）函数后面各加一个 getchar（）；\r\n2.如果是循环运算的话  把选择运算符号的事情放到while里面  while的条件写成1 就ok  然后 用if判断输入的d是否是1 。2。3。4，同样 scanf（）后面跟上getchar（）；\r\n\r\ngetchar（）会把你每次输入完按的那个enter键给接受掉！", "Konwledge_Point": "乘法", "Question": ["c语言简易计算器小白问题", ["#include ", "\nfloat fun1(float a,float b)", "\n{", "\n    float c;", "\n    c=a+b;", "\n    return c;", "\n}", "\nfloat fun2(float a,float b)", "\n{", "\n    float c;", "\n    c=a-b;", "\n    return c;", "\n}", "\nfloat fun3(float a,float b)", "\n{", "\n    float c;", "\n    c=a*b;", "\n    return c;", "\n}", "\nfloat fun4(float a,float b)", "\n{", "\n    float c;", "\n    c=a/b;", "\n    return c;", "\n} ", "\nint main()", "\n{", "\n    int d;", "\n    float a,b;", "\n    printf(\"\\t\\t|--------------------|\\n\");", "\n    printf(\"\\t\\t|   简易计算器       |\\n\");", "\n    printf(\"\\t\\t|--------------------|\\n\");", "\n    printf(\"\\t\\t|     1-加法         |\\n\");", "\n    printf(\"\\t\\t|     2-减法         |\\n\");", "\n    printf(\"\\t\\t|     3-乘法         |\\n\");", "\n    printf(\"\\t\\t|     4-除法         |\\n\");", "\n    printf(\"\\t\\t|     0-退出         |\\n\");", "\n    printf(\"\\t\\t|--------------------|\\n\");", "\n    printf(\"选择需要的计算:\\n\");", "\n    scanf(\"%d\",&d);", "\n    while(d<=5&&d>0)", "\n    { ", "\n        printf(\"输入两个数字:\\n\");", "\n        scanf(\"%f,%f\"&a,&b);", "\n        switch(d)", "\n        {", "\n            case 1:", "\n            printf(\"%.2f\",fun1(a,b));", "\n            break;", "\n            case 2:", "\n            printf(\"%.2f\",fun2(a,b));", "\n            break;", "\n            case 3:", "\n            printf(\"%.2f\",fun3(a,b));", "\n            break;", "\n            case 4:", "\n            printf(\"%.2f\",fun4(a,b));", "\n            break;", "\n            case 0:", "\n            printf(\"谢谢使用~~\");", "\n            break;", "\n        }", "\n    }", "\n    printf(\"\\n谢谢使用~~\");", "\n    return 0;", "\n}", "\n\n", "显示输入那个位置有问题。新手求指导。我自己感觉结构有问题"]], "Tag": "算法设计"}
{"Answer": "这个就用到了数学方面的知识了，你只需要对两个数分别取对数，并且看看他们的和是否大于等于64就行了。\r\n\r\n`log2(a)+log2(b) &gt;= 64`就是溢出，这两个方法需要包含`math.h`", "Konwledge_Point": "乘法", "Question": ["unsigned long long相加或者相乘，怎么判断溢出？", ["unsigned long long类型数据，相加或者相乘，怎么判断溢出？"]], "Tag": "算法设计"}
{"Answer": "j==k                           j=k?", "Konwledge_Point": "乘法", "Question": ["为什么第37行改成if(j=k)，程序就出错，明明j不可能大于k啊", ["//求集合A和B的交集", "\n#include ", "\n#include ", "\n\n", "#define MAXSIZE 100", "\n\n", "/*", "\n顺序表结构体定义", "\n*/", "\ntypedef struct node {", "\n    int data[MAXSIZE];", "\n    int length;", "\n}SeqList,*PSeqList;", "\n\n", "/*", "\n顺序表的初始化", "\n*/", "\nPSeqList Init_SeqList(void)", "\n{", "\n    PSeqList PL;", "\n    PL=(PSeqList)malloc(sizeof(SeqList));", "\n    if(PL)", "\n        PL->length=0;", "\n    return PL;", "\n}", "\nvoid Inter_Sec(PSeqList A,PSeqList B)", "\n{", "\n    int i=0,j;", "\n    int k=B->length;", "\n    while(ilength)", "\n    {", "\n        int x=A->data[i];", "\n        j=0;", "\n        while(jdata[j])", "\n            j++;", "\n        if(j>=k)", "\n        {", "\n            for(int m=i;mlength;m++)", "\n                A->data[m]=A->data[m+1];", "\n            A->length--;", "\n        }", "\n        else", "\n            i++;", "\n    }", "\n}", "\n\n", "int main()", "\n{", "\n    int i;", "\n    PSeqList A=Init_SeqList();", "\n    PSeqList B=Init_SeqList();", "\n    A->length=6;", "\n    B->length=5;", "\n    for(i=0;i\n        A->data[i]=i+1;", "\n    for(i=0;i\n        B->data[i]=i-1;", "\n    Inter_Sec(A,B);", "\n    for(i=0;ilength;i++)", "\n        printf(\"%d  \",A->data[i]);", "\n    getchar();", "\n    return 0;", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这题一共就五行代码,输入已经给你了,你写个变量声明,写个乘,写个输出就结束了&lt;br /&gt;语言要自己上手写,实在不行直接百度也可&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言问题，请教各位程序员", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;好像看不太懂啊&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["计算乘积（debug）", ["问题遇到的现象和发生背景", "\n", "计算乘积（debug）", "\n\n\n", "我的解答思路和尝试过的方法", "\n", "题目描述", "正整数 xx 的阶乘 x!=x(x-1)(x-2)\\cdots\\times 2\\times 1x!=x(x−1)(x−2)⋯×2×1，特殊地，0! = 10!=1。", "\n", "请你计算 n! \\bmod mn!modm 的值。", "\n", "请找出使下面的程序出错的数据，使用输出调试法确定出错的语句，并用乘法取模定理将其改正。", "\n", "#include <bits/stdc++.h>", "using namespace std;", "int main() {", "    int n, m;", "    cin >> n >> m;", "    int fac = 1;", "    for(int i = 2; i <= n; i++)", "        fac *= i;", "    fac %= m;", "    cout << fac;", "    return 0;", "}", "乘法取模定理：(a \\times b) \\bmod m = ((a \\bmod m) \\times (b \\bmod m)) \\bmod m(a×b)modm=((amodm)×(bmodm))modm。", "\n", "输入格式", "输入共一行。", "\n", "第一行，两个整数 n, mn,m（0 \\le n \\le 1,000, 2 \\le m \\le 10,0000≤n≤1,000,2≤m≤10,000）。", "\n", "输出格式", "输出共一行，一个整数，表示 n! \\bmod mn!modm。", "\n", "我想要达到的结果", "\n", "完成"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/chenkai619/article/details/8991049", "Konwledge_Point": "乘法", "Question": ["C艹菜鸟请教一下大数相乘问题", ["本人大二狗，学过一点C基础，最近在学C艹，偶然看到大数相乘问题，想试试，于是写出了下面的代码。", "\n\n", "#include<iostream>\n#include<cstring>\n#include<fstream>\n\nvoid Multiply(char* str1, char* str2, char* Result);//相乘函数\nvoid strRev(char* str);//字符串Reverse函数\nvoid str2int(char* str);//将char - '0' 得到其代表的数值\nvoid Carry(char* str); //计算进位函数\nvoid int2str(char* str); //将所数值转换回 char\n\n#define debug\n\nint main()\n{\n    #ifdef debug\n    std::ifstream in(\"Pr4_in.txt\");\n    std::ofstream out(\"Pr4_out.txt\");\n    std::cin.rdbuf(in.rdbuf());\n    std::cout.rdbuf(out.rdbuf());\n    #endif // debug\n\n    char Number_1[102], Number_2[102], Result[204]={'0'};\n    std::cin >> Number_1 >> Number_2;\n    Multiply(Number_1, Number_2, Result);\n//    std::cout << Number_1 << std::endl << Number_2 << std::endl;\n    std::cout << Result << std::endl;\n    return 0;\n}\n\nvoid Multiply(char str1[], char str2[], char Result[])\n{\n    int len1 = strlen(str1), len2 = strlen(str2); //Get the length.\n    strRev(str1); strRev(str2); //Reverse the string.\n//Simulate the manual computing process;\n    str2int(str1); str2int(str2);\n//Initiate the result.\n    for(int i=0; i<203; ++i)\n        Result[i] = '*';\n        Result[203] = 0;\n\n\n    for(int i=0; i<len1; ++i){\n        for(int j=0; j<len2; ++j){\n            int tmp= (int)str1[i] * (int)str2[j];\n            if(Result[i+j] != '*')\n                Result[i+j] += tmp;\n            else Result[i+j] = tmp;\n//            if(tmp < 10){\n//                Result[i+j] += tmp;\n//                Carry(Result);\n//            }\n//            else{\n//                int teens = tmp/10;\n//                tmp %= tmp;\n//                Result[i+j+1] += teens;\n//                Carry(Result);\n//            }\n            Carry(Result);\n        }\n    }\n    int2str(Result);\n    strRev(Result);\n}\n\nvoid strRev(char* str)\n{\n    int low = 0, high = strlen(str) - 1;\n    while(low < high)\n    {\n        char tmp = str[low];\n        str[low] = str[high];\n        str[high] = tmp;\n        ++low; --high;\n    }\n}\n\nvoid str2int(char* str)\n{\n    int len = strlen(str);\n    for(int i=0; i < len; ++i){\n        str[i] -= '0';\n    }\n}\n\nvoid Carry(char* str)\n{\n    int i=0;\n    while(str[i]){\n        if( str[i] >= 10 ){\n            int tmp = str[i];\n            str[i] = tmp % 10;\n            str[i+1] += tmp / 10;\n        }\n        ++i;\n    }\n}\n\nvoid int2str(char* str)\n{\n    int i = 0;\n    while(str[i] != '*'){\n        str[i] += '0';\n        ++i;\n    }\n    str[i] = '\\0';\n}\n\n", "\n\n", "本人所用IDE: Code::Blocks, Compiler: g++;", "\n所出现的问题：", "\n输出空串。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;三个print错了&amp;#xff0c;python用print的时候可以直接放变量名称&amp;#xff0c;不用加引号。然后要注意一下你abcvalue的return的位置&amp;#xff0c;别放在else里面了&amp;#xff0c;你发的代码没有缩进&amp;#xff0c;我看不出来。&lt;br /&gt;调用的话只需要方法名加上一个放进括号里的值就好&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["自定义函数模块的编写和调用", ["实现三个函数：求平方，求绝对值，求最大公约数，并调用", "def GYS(a,b):", "    c=a", "    if b>a:", "        c=b", "    for d in range(c,0,-1):", "        if a%d==0 and b%d==0:", "            return d", "\n", "import math", "\n", "def getpf(a):", "    a=a*a", "    return a", "\n", "def  abc_value(a):", "    if a>0:", "        print('a')", "    elif  a==0:", "      #  a==0", "        print('0')", "    else:", "        a=-a", "        print('-a')", "    return a", "这个程序错在哪"]], "Tag": "算法设计"}
{"Answer": "System.out 改成out \r\nSystem.out.println();  改成 out.print(\"&lt;br/&gt;\");\r\n\r\n要用response对象的 getWriter    或  out 写响应流", "Konwledge_Point": "乘法", "Question": ["乘法口诀", ["请问如何实现 在类中写代码 在jsp页面显示乘法口诀呢？", "\n这个是我写的", "\npublic class ChengFa {", "\n\n", "public static void main(String[] args) {\n\n    int i,j;\n    for (i = 1 ; i <= 9 ; i ++){\n         for(j = 1 ; j <= i ; j ++){\n       System.out.print(j + \"*\" + i + \"=\" + i * j + \" \");\n         }\n       System.out.println();\n     }\n\n}\n", "\n\n", "}我要用 tomcat  JBoss  weblogic 和 webshere 四个服务器先后运行这个乘法口诀，请问如何实现，详细些，谢谢！"]], "Tag": "算法设计"}
{"Answer": "cout &lt;&lt; setw(6) &lt;&lt; 1 &lt;&lt; setw(5) &lt;&lt; 2 &lt;&lt; setw(5) &lt;&lt; 3 &lt;&lt; setw(5) &lt;&lt; 4 &lt;&lt; setw(5) &lt;&lt; 5 &lt;&lt; setw(5) &lt;&lt; 6 &lt;&lt; setw(5) &lt;&lt; 7 &lt;&lt; setw(5) &lt;&lt; 8 &lt;&lt; setw(5) &lt;&lt; 9 &lt;&lt; endl;\r\n\tfor (i = 1; i &lt;= 9; i++)\r\n\t{\r\n\t\tcout &lt;&lt; i ;\r\n\t\tfor (j = 1; j &lt;= i; j++)\r\n\t\t\tcout &lt;&lt; setw(5)&lt;&lt; i*j;\r\n\t\tcout &lt;&lt; endl;\r\n\t}\r\n\t![图片说明](https://img-ask.csdn.net/upload/201604/05/1459869646_341256.png)", "Konwledge_Point": "乘法", "Question": ["for循环 乘法表  求解怎么样才能打印出第一列1~9的数字", ["#include", "\n#include", "\nusing namespace std;", "\nint main()", "\n{", "\n    int i,j;", "\n    cout<<\"                    乘法口诀表                    \"<<endl;", "\n    cout<<\"--------------------------------------------------\"<<endl;", "\n    cout<<setw(5)<<1<<setw(5)<<2<<setw(5)<<3<<setw(5)<<4<<setw(5)<<5<<setw(5)<<6<<setw(5)<<7<<setw(5)<<8<<setw(5)<<9<<endl;", "\n    for(i=1;i<=9;i++)", "\n    {", "\n    for(j=1;j<=i;j++)", "\n    cout<<i*j<<setw(5);", "\n    cout<<endl;", "\n    }", "\n    cout<<\"--------------------------------------------------\"<<endl;", "\n    return 0;", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;verilog 没有浮点数的定义&amp;#xff0c;要实现小数&amp;#xff0c;可以用定浮点的办法。&lt;br /&gt;比如将一个小数放大 2^N 倍后去处理。&lt;br /&gt;比如将一个小数放大256倍后&amp;#xff0c;最后的8位是小数部分。&lt;br /&gt;假设我们只看这最后的8位&amp;#xff0c;小数部分。&lt;br /&gt;0000_0001 就是 1/256&amp;#61;0.004&lt;br /&gt;0001_0000 就是 16/256&amp;#61;0.0625&lt;br /&gt;1000_0000 就是 128/256&amp;#61;0.5&lt;br /&gt;0001_1010 就是 26/256&amp;#61;0.1&lt;br /&gt;比如 7 * 0.1&lt;br /&gt;我们将这 7 和 0.1 都放大256倍&amp;#xff0c;成为16位的2个数&amp;#xff0c;其中低8位数是小数部分&lt;br /&gt;0000_0111_0000_0000 &amp;#61; 7&lt;br /&gt;0000_0000_0001_1010 &amp;#61; 0.1&lt;br /&gt;两个16位的数相乘的乘积是32位的数&amp;#xff0c;其中低16位数是小数部分&lt;br /&gt;0.1 * 7 &amp;#61; 0000_0111_0000_0000 * 0000_0000_0001_1010 &amp;#61; 0000_0000_0000_0000_x_1011_0110_0000_0000 &amp;#61; 0xb600&lt;br /&gt;将这个数用十进制小数来表示 0xb600/0x10000 &amp;#61; 0.709&lt;br /&gt;就是说按这个方式计算 0.7*0.1&amp;#61;0.709&lt;br /&gt;10进制数的 0.1 在二进制中是除不尽的&amp;#xff0c;是无限循环数&amp;#xff0c;只保留8位(二进制)精度是有限的&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["FPGA的verilog语言关于小数计算的问题？", ["verilog语言中怎么定义0.1小数，进行运算。比如实现7*0.1，得到0.7结果。实现这个过程，有具体程序能参考的嘛，感谢感谢！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这个 IP 我没用过&amp;#xff0c;也没研究过&lt;br /&gt;看你的说明 [47&amp;#xff1a;24]为虚部&amp;#xff0c;[23:0]为实部&lt;br /&gt;用法&amp;#xff1a;数据赋给[23&amp;#xff1a;0]&amp;#xff0c;而高位则直接赋了24位0&lt;br /&gt;感觉没问题&amp;#xff0c;你送的数据有正数、负数是有符号数&amp;#xff0c;这样做没问题。FFT 这样的IP输入端会正确识别负数的&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["VIVADO FFT中输入数据正负号问题", ["FFTIP核中输入端口数据如何调整正负？", "\n", "最近在使用FFT这一IP核时发现，当输入端的数据设置为有符号数时，在仿真界面上可以看出s端的数据与输入的数据波形完全不一样了。", "\n", "\n", "但是当输入数据调整为无符号数时，波形又一致了。", "\n", "\n", "查看手册时发现，s端输入数据送入时会区分实部虚部，以自己的代码为例，s端数据位共48位，[47：24]为虚部，[23:0]为实部，而送入的数据只是24位的实数，有正有负。我在这里选择将送入数据赋给[23：0]，而高位则直接赋了24位0。不知道这样是否合理？", "\n", "所以还想请问大家，当我送入的数据本身是有负数的时候，要如何解决fft的输入数据无法识别负数的问题呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n&amp;#96;timescale &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;ns/&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;ns\n\nmodule testbench;\n\nreg            rst;\nreg            clk;\nreg    [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    a;\nreg    [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    b;\nwire[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    c;\n\nparameter RESET_PERIOD        &amp;#61; &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;;\nparameter CLK_PERIOD        &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;MHz\n\ninitial    clk &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nalways    clk &amp;#61; &lt;span class=\"hljs-comment\"&gt;#(CLK_PERIOD/2.0) ~clk;&lt;/span&gt;\n\ninitial    begin\n    rst &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;#RESET_PERIOD&lt;/span&gt;\n    rst &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;#(CLK_PERIOD*4)    $stop;    // 执行 4 个时钟之后停止&lt;/span&gt;\nend\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 这部分代码是自动产生&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;个&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;位数 a,b 每个时钟变化一次\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    always&amp;#64;(posedge clk)\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    begin\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(rst)\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        begin\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;            a    &amp;lt;&amp;#61; &lt;span class=\"hljs-comment\"&gt;#1 0;&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;            b    &amp;lt;&amp;#61; &lt;span class=\"hljs-comment\"&gt;#1 0;&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        end\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        begin\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;            {b,a}    &amp;lt;&amp;#61; &lt;span class=\"hljs-comment\"&gt;#1 {b,a} &amp;#43; 1;&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;        end\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    end\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 要是不用上自动产生&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;个&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;位数&amp;#xff0c;可以按下面的代码\ninitial    begin\n    a &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;#RESET_PERIOD&lt;/span&gt;\n    a &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;#CLK_PERIOD&lt;/span&gt;\n    a &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;#CLK_PERIOD&lt;/span&gt;\n    a &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;\nend\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    \n    \n    mult    ux\n    (\n        .clk    (clk),\n        .rst    (rst),\n        .a        (a),\n        .b        (b),\n        .c        (c)\n    );\n\nendmodule\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["vivado单位原码乘法", ["在进行vivado单位乘法实验时，四位二进制数互乘，需要进行四次乘法，由于对这种新语言不够了解，想让他进行四次乘法后自动结束，请问怎么弄，谢谢", "\n"]], "Tag": "算法设计"}
{"Answer": "return new BigDecimal((double)(a+b)).setScale(2, BigDecimal.ROUND_HALF_UP);\r\n@caozhy大大说要四舍五入.", "Konwledge_Point": "乘法", "Question": ["BigDecimal的加减乘除没有效果，", ["贴上代码，难道我哪里搞错了么？", "\npublic class Myutil {", "\n    public static double add(double value1, double value2) {", "\n        BigDecimal b1 = new BigDecimal(Double.valueOf(value1));", "\n        BigDecimal b2 = new BigDecimal(Double.valueOf(value2));", "\n        return b1.add(b2).doubleValue();", "\n    }", "\n\n", "public static double sub(double value1, double value2) {\n    BigDecimal b1 = new BigDecimal(Double.valueOf(value1));\n    BigDecimal b2 = new BigDecimal(Double.valueOf(value2));\n    return b1.subtract(b2).doubleValue();\n}\n\npublic static double mul(double value1, double value2) {\n    BigDecimal b1 = new BigDecimal(Double.valueOf(value1));\n    BigDecimal b2 = new BigDecimal(Double.valueOf(value2));\n    return b1.multiply(b2).doubleValue();\n}\n\npublic static double div(double value1, double value2, int scale)\n        throws IllegalAccessException {\n    if (scale < 0) {\n        throw new IllegalAccessException(\"精确度不能小于0\");\n    }\n    BigDecimal b1 = new BigDecimal(Double.valueOf(value1));\n    BigDecimal b2 = new BigDecimal(Double.valueOf(value2));\n    return b1.divide(b2, scale).doubleValue();\n}\n", "\n\n", "}", "\n\n", "测试：", "\n    public void test1() throws IllegalAccessException{", "\n        System.out.println(Myutil.sub(1.0, 0.42));", "\n        System.out.println(Myutil.mul(4.015, 100));", "\n        System.out.println(Myutil.add(0.06, 0.01));", "\n        System.out.println(Myutil.div(303.1, 1000, 4));", "\n    }", "\n\n", "结果\n", "\n\n", "0.5800000000000001", "\n401.49999999999994", "\n0.06999999999999999", "\n0.30310000000000004"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这与C&amp;#43;&amp;#43;的除法特性有关。&amp;#xff08;顺带一提&amp;#xff0c;看来你在写C&amp;#xff0c;为什么用了.cpp后缀&amp;#xff1f;C和C&amp;#43;&amp;#43;早就不再完全兼容了&amp;#xff0c;如果要写C就不要用.cpp后缀。认为无所谓的家伙都是不懂现代C&amp;#43;&amp;#43;的&amp;#xff0c;这样的老师很多&amp;#xff0c;不要听他们误导。&amp;#xff09;&lt;br /&gt;C&amp;#43;&amp;#43;的除法行为与参与运算的类型有关。如果是两个整数相除&amp;#xff0c;就会进行向零取整的操作。如果先除以9再做乘法&amp;#xff0c;余数会被抛弃。举例而言&amp;#xff0c;如果F是142&amp;#xff0c;则F-32是110。如果先除以9&amp;#xff0c;得到的是12&amp;#xff08;即带余除法的整商&amp;#xff0c;注意&amp;#xff0c;不是12.2循环&amp;#xff01;余数2被舍去了&amp;#xff09;&amp;#xff0c;再乘5是60。如果先乘再除&amp;#xff0c;得到的是550除以9&amp;#xff0c;也就是61&amp;#xff08;同样&amp;#xff0c;余数1被舍去了&amp;#xff09;。二者显然是不等价的。&lt;br /&gt;计算机所做的&amp;#xff0c;永远是符合指令顺序的操作&amp;#xff0c;它是不会像人类一样进行简算优化的&amp;#xff08;有时候编译器会这么做&amp;#xff0c;但C&amp;#43;&amp;#43;语法规定你这两个写法不等价&amp;#xff0c;自然也不会做出调整&amp;#xff09;。&lt;br /&gt;数学中&amp;#xff0c;这种操作相当于给除法结果带个取整函数。乘法的操作数能从取整函数内取出吗&amp;#xff1f;显然不满足&amp;#xff08;即&amp;#xff0c;int(a*b) !&amp;#61; int(a) * b&amp;#xff0c;这个结论的正确性是显然的&amp;#xff09;&amp;#xff0c;因此不能交换位置。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["两个算式顺序不同，为什么结果不同呢？如下", ["给定一个华氏温度F，本题要求编写程序，计算对应的摄氏温度C。计算公式：C=5×(F−32)/9。题目保证输入与输出均在整型范围内。", "\n", "输入格式:", "输入在一行中给出一个华氏温度。", "\n", "输出格式:", "在一行中按照格式“Celsius = C”输出对应的摄氏温度C的整数值。", "\n", "输入样例:", "150", "输出样例:", "Celsius = 65", "\n", "\n", "\n", "5* 的位置不同，判定节点12的结果就不一样，怎么回事呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;问题1示例代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Multiplications&lt;/span&gt; {\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;computeMultiplications&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5.0&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;computeMultiplications&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;5.0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2.0&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;computeMultiplications&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;{\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(a &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; multiplied by itself is &amp;#34;&lt;/span&gt; &amp;#43; a * a &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; and &amp;#34;&lt;/span&gt; &amp;#43; b &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; multiplied by &amp;#34;&lt;/span&gt; &amp;#43; a &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; is &amp;#34;&lt;/span&gt; &amp;#43; a * b);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/248571407646184.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;问题2示例代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;public &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Multiplications2 {\n\n    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) {\n        Scanner scanner &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Scanner(System.&lt;span class=\"hljs-params\"&gt;in&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;Enter a double &amp;gt;&amp;gt; &amp;#34;&lt;/span&gt;);\n        double a &amp;#61; scanner.next&lt;span class=\"hljs-constructor\"&gt;Double()&lt;/span&gt;;\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;Enter another double &amp;gt;&amp;gt; &amp;#34;&lt;/span&gt;);\n        double b &amp;#61; scanner.next&lt;span class=\"hljs-constructor\"&gt;Double()&lt;/span&gt;;\n        compute&lt;span class=\"hljs-constructor\"&gt;Multiplications(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)&lt;/span&gt;;\n        compute&lt;span class=\"hljs-constructor\"&gt;Multiplications(&lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;)&lt;/span&gt;;\n    }\n\n    public static void compute&lt;span class=\"hljs-constructor\"&gt;Multiplications(&lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(a &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; multiplied by itself is &amp;#34;&lt;/span&gt; &amp;#43; a&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;a &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; and &amp;#34;&lt;/span&gt; &amp;#43; b &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; multiplied by &amp;#34;&lt;/span&gt; &amp;#43; a &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; is &amp;#34;&lt;/span&gt; &amp;#43; a&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;b);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;运行结果如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/292732407646141.png\" class=\"md_img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;如有帮助&amp;#xff0c;请采纳。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["java乘法应用程序", ["一个名为乘法的应用程序，其main（）方法包含两个双变量。为变量赋值。将这两个变量传递给名为computeMultiplications（）的方法，该方法显示第一个数乘以自身，然后第一个数乘以第二个数。例如，如果数字是2.0和5.0，则该方法应显示类似于“2.0乘以自身为4.0，5.0乘以2.0为10.0”的语句然后再次调用该方法，按相反顺序传递值。将应用程序另存为乘法。使用“java.util.Scanner”类修改Percentages类，以接受来自用户的两个双精度值。将文件另存为乘法2。", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;with open(&amp;#39;jisuan.txt&amp;#39;, &amp;#39;r&amp;#39;, encoding&amp;#61;&amp;#39;utf-8&amp;#39;) as f_r:\n    expresses &amp;#61; f_r.readlines()\n    with open(&amp;#39;jieguo.txt&amp;#39;, &amp;#39;w&amp;#39;, encoding&amp;#61;&amp;#39;utf-8&amp;#39;) as f_w:\n        for exp in expresses:\n            f_w.write(&amp;#34;%.2f&amp;#34; % eval(exp))\n            f_w.write(&amp;#39;\\n&amp;#39;)\n            print(&amp;#34;%.2f&amp;#34; % eval(exp))&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"360\" src=\"https://img-ask.csdnimg.cn/upload/1624182576385.png\" width=\"687\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["python文件加减法qwq", ["帮忙看看python题【问题描述】", "\n\n", "从文件jisuan.txt读入任意多行。每一行写有一个两个操作数参加的加法运算式或减法运算式。程序分析每一行的运算式，完成运算，把运算结果写入jieguo.txt，一行一个结果。", "\n【输入形式】", "\n\n", "文件內的每一行 是一个两个操作数参加的加法运算式或减法运算式。算式中不含空格", "\n【输出形式】", "\n\n", "文件，一行一个结果。结果保留两位小数。", "\n【样例输入】", "\n\n", "输入文件内容：", "\n\n", "1+2", "\n\n", "5-2.3", "\n\n", "6+0.8", "\n\n", "【样例输出】", "\n\n", "输出文件内容：", "\n\n", "3.00", "\n\n", "2.70", "\n\n", "6.80"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;n不输入的话永远等于0的&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; main\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,x,y,sum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入第一个整数:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;x);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入第二个整数:&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;y);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入操作&amp;#xff1a;(0:&amp;#43;,1:-)&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(n)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            sum&amp;#61;x&amp;#43;y;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            xum&amp;#61;x-y;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;操作输入错误&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;计算结果为&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;,sum);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["输入两个整数，然后用0，1两个数代表加减法，但不知道哪里错了", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;将float、double转换为字符过程中可能存在精度损失&amp;#xff0c;但是通过%.8lf可以规避&lt;br /&gt;\n&amp;#xff08;1&amp;#xff09;&lt;strong&gt;float小数点前后加起来有效数字只有6位&lt;/strong&gt;。当给定的float有效数在6位以内转换为字符不会丢失精度&amp;#xff0c;当有效位数大于6位就会存在精度丢失&lt;br /&gt;\n    //精度没有丢失&lt;br /&gt;\n    char buf[100]&amp;#61;{&amp;#39;\\0&amp;#39;};&lt;br /&gt;\n    float aa&amp;#61;8000.25;&lt;br /&gt;\n    sprintf(buf,&amp;#34;%f&amp;#34;,aa);   //8000.250000&lt;br /&gt;\n    //精度没有丢失&lt;br /&gt;\n    char buf[100]&amp;#61;{&amp;#39;\\0&amp;#39;};&lt;br /&gt;\n    floataa&amp;#61;8.00025;&lt;br /&gt;\n    sprintf(buf,&amp;#34;%f&amp;#34;,aa);   buf &amp;#61; 8.000250&lt;br /&gt;\n    //精度丢失&amp;#xff0c;存在误差&lt;br /&gt;\n    charbuf[100]&amp;#61;{&amp;#39;\\0&amp;#39;};&lt;br /&gt;\n    float aa&amp;#61;8000.251;&lt;br /&gt;\n    sprintf(buf,&amp;#34;%f&amp;#34;,aa);  //8000.250977&lt;br /&gt;\n    //精度丢失&amp;#xff0c;存在误差此时使用.8lf也无效&lt;br /&gt;\n    char buf[100]&amp;#61;{&amp;#39;\\0&amp;#39;};&lt;br /&gt;\n    float aa&amp;#61;8000.251;&lt;br /&gt;\n    sprintf(buf,&amp;#34;%.8lf&amp;#34;,aa);//8000.25097656&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["有关c语言浮点数的计算问题", ["\n\n", "为什么float数据类型不行？"]], "Tag": "算法设计"}
{"Answer": "&lt;a target='_blank' rel='nofollow' href='http://blog.csdn.net/yongta/article/details/3884113'&gt;在VC6.0中编写网络应用程序(Socket)&lt;/a&gt;&lt;br/&gt;----------------------biu~biu~biu~~~在下问答机器人小D，这是我依靠自己的聪明才智给出的答案，如果不正确，你来咬我啊！", "Konwledge_Point": "乘法", "Question": ["vc6.0实现计算器的编写，在线等，谢谢", ["我想问一下怎么实现科学计算。就比如说1+2*3 先计算乘除法", "\n以下是我的部分程序，谢谢大家", "\n加减乘除里的代码是一样的。", "\nvoid CMyDlg::Onadd() ", "\n{", "\n// TODO: Add your control notification handler code here", "\n\n", "     char cs[30]; ", "\ndouble add;  ", "\nm_Edit.GetWindowText(cs,30); ", "\nadd=atof((LPCTSTR)cs);  //将字符型换成浮点型", "\n\n", "switch(control)            //每次计算之前前进行之前的运算", "\n{  ", "\ncase 0:   result=add;break;             //第一个数应存储", "\ncase 1:   result=result+add;break; ", "\ncase 2:   result=result-add;break; ", "\ncase 3:   result=result*add;break; ", "\ncase 4: ", "\n{  ", "\nif(add==0) ", "\n{   ", "\nMessageBox(\"除数不能为0!请重新输入\"); ", "\nchar ed[50];  ", "\n_gcvt(result,50,ed);  ", "\nm_Edit.SetWindowText(ed);", "\nNum=' ';  ", "\ncontrol=0;                  //control赋初值", "\nreturn; ", "\n} ", "\nelse   ", "\n{", "\nresult=result/add;", "\nbreak;", "\n} ", "\n} ", "\n}  ", "\ncontrol=1; ", "\nchar ed[50];  ", "\n_gcvt(result,50,ed);  ", "\nm_Edit.SetWindowText(ed);  m_Edit.SetWindowText(\"+\");", "\nNum=' ';  ", "\nUpdateData(FALSE); ", "\n}", "\n这里是等于号里边的代码", "\n\n", "void CMyDlg::Ondeng() ", "\n{", "\n// TODO: Add your control notification handler code here", "\nchar cs[30],seq[50]; ", "\ndouble equal; ", "\nswitch(control) ", "\n{  ", "\ncase 1: ", "\n{  ", "\nm_Edit.GetWindowText(cs,30); ", "\nequal=atof((LPCTSTR)cs); ", "\nresult=result+equal; ", "\n_gcvt(result,6,seq);  ", "\nm_Edit.SetWindowText(seq); ", "\nNum=' '; ", "\nresult=0; ", "\ncontrol=0; ", "\nbreak; ", "\n} ", "\ncase 2: ", "\n{  ", "\nm_Edit.GetWindowText(cs,30); ", "\nequal=atof((LPCTSTR)cs); ", "\nresult=result-equal; ", "\n_gcvt(result,6,seq);  ", "\nm_Edit.SetWindowText(seq); ", "\nNum=' '; ", "\nresult=0; ", "\ncontrol=0; ", "\nbreak; ", "\n} ", "\ncase 3: ", "\n{  ", "\nm_Edit.GetWindowText(cs,30); ", "\nequal=atof((LPCTSTR)cs); ", "\nresult=result*equal; ", "\n_gcvt(result,6,seq);  ", "\nm_Edit.SetWindowText(seq); ", "\nNum=' '; ", "\nresult=0; ", "\ncontrol=0; ", "\nbreak; ", "\n} ", "\ncase 4: ", "\n{  ", "\nm_Edit.GetWindowText(cs,30); ", "\nequal=atof((LPCTSTR)cs); ", "\nif(equal==0) ", "\n{  ", "\nMessageBox(\"除数不能为0!请重新输入\"); ", "\nchar ed[50];  ", "\n_gcvt(result,6,ed);  ", "\nm_Edit.SetWindowText(ed); ", "\n           ", "\nNum=' ';  ", "\ncontrol=0;                  //control回到初值", "\nreturn; ", "\n} ", "\nelse ", "\n{  ", "\nresult=result/equal; ", "\n_gcvt(result,6,seq);  ", "\n\n", "m_Edit.SetWindowText(seq); ", "\nNum=' '; ", "\nresult=0; ", "\ncontrol=0; ", "\nbreak;  ", "\n}   ", "\n}   ", "\n} ", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/969840522776124.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        // TODO Auto-&lt;span class=\"hljs-keyword\"&gt;generated&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;method&lt;/span&gt; stub\n       &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;){\n           &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(i&amp;#43;&amp;#34;\\t&amp;#34;);\n           &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n               \n               &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;j&amp;#43;&amp;#43;){\n                   &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j&amp;#43;&amp;#34;\\t&amp;#34;); \n               }\n               &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;&amp;#34;); \n           }\n           &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;j&amp;#43;&amp;#43;){\n             &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;amp;&amp;amp;j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n                 &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34;1&amp;#34;&amp;#43;&amp;#34;\\t&amp;#34;); \n             }\n             &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j&amp;#43;&amp;#34;*&amp;#34;&amp;#43;i&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;i*j&amp;#43;&amp;#34;\\t&amp;#34;);\n           }\n           &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;&amp;#34;);\n       }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["JAVA输出99乘法表", ["不是普通的乘法表，是上面一行数字1到9，左边一列数字1到9，中间乘法。比如", "      1             2", "1  1×1=1    2×1=2", "2 1×2=2   2×2=4", "以此类推输出9×9", "现在的问题是不知道怎么样输出中间的", "求各位帮助"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.cnblogs.com/TDTX/p/15593961.html\" id=\"textarea_1664940884823_1664940928763_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/TDTX/p/15593961.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于Python中的乘法器", ["想要使用python写一段四位乘法器，但是不知道如何下手", "请问如何使用python的IDLE编写一段N位乘法器呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;“f(%.2f)&amp;#61;%.2f” %.2f保留2位小数&amp;#xff0c;分别对应后面的x&amp;#xff0c;y。&lt;br /&gt;那个符号应该是编辑错误。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言程序设计，两个负数相乘以及浮点型保留小数位数", ["\n", "图中例题，为什么当两个负数相乘时前面要加负号；倒数第二行输出的“f(%.2f)=%.2f”能解释一下吗，不懂"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;额&amp;#xff0c;好像不行&amp;#xff0c;只能先对明文运算再&amp;#xff0c;加密或者解密后运算再加倍&amp;#xff0c;当然可能是我才疏学浅。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["rsa乘法同态加密python实现", ["通过rsa乘法同态加密任意（正负）浮点型数据，并对加密后的密文进行乘法运算在解密相乘后的密文，通过调用python里面什么函数可以实现？希望相关专业的可以帮助一下"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#    方法一&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;打印乘法表&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):  \n &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n   &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%d*%d&amp;#61;%d&amp;#39;&lt;/span&gt;%(j,i,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#方法二&lt;/span&gt;\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;打印乘法表&amp;#39;&lt;/span&gt;)\ni &amp;#61; 1\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i &amp;lt;&amp;#61; 9:\n    j &amp;#61; 1\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt;&amp;#61; i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#39;{i}*{j}&amp;#61;{i * j}&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n        j &amp;#43;&amp;#61; 1\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    i &amp;#43;&amp;#61; 1\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表的输出python", ["首先分析问题。打印九九乘法表显然需要用到两层循环嵌套。控制台中的字符是从左到", "右的依次打印的,那么打印的第一行内容就是 1", "1=1,第二行是 1", "2=2和 2", "2=4。 为便", "于直观理解程序，将九九乘法表的被乘数(第一个数)命名为first,乘数(第二个数)命名为", "second。 在每一行中，被乘数依次递增，乘数不变,所以乘数 second 为外层循环控制变量,被", "乘数 first 为内层循环控制变量。", "图 2-3-1中,九九乘法表的每行输出的项数是不一样的，这也使每次内层循环的循环次", "数不一样。第", "一次内层循环打印的是1", "1=1,第二次内层循环打印的是1", "2=2和2", "2=", "4。第三次打印的是1* 3=3、2", "3一6和3", "3一9，以此类推，那么，每次内层循环打印的九九", "乘法表的项数递增，项数与外层循环控制变量 first 的值相同。如果是乘法表的第九行，那被", "乘数就是从1到9,乘数固定为 9。", "每输出乘法表的一项，用一个 Tab键分割。在一次内层循环结束后,输出换行符。", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;func2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;i,j&lt;/span&gt;):\n  &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i,&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n&amp;#34;&lt;/span&gt;,j)\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;(i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*(j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\na &amp;#61; np.fromfunction(func2,(&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt; (&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;,a)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;blockquote&gt;\n&lt;p&gt;&lt;strong&gt;希望对题主有所帮助&amp;#xff01;可以的话&amp;#xff0c;帮忙点个采纳&amp;#xff01;&lt;/strong&gt;&lt;/p&gt;\n&lt;/blockquote&gt;", "Konwledge_Point": "乘法", "Question": ["利用fromfunction()编写9x9乘法", ["利用fromfunction(编写9x9乘法表)", "利用fromfunction()编写9x9乘法"]], "Tag": "算法设计"}
{"Answer": "select * from a join b", "Konwledge_Point": "乘法", "Question": ["mysql怎么使用select查询出两个表数据相乘的效果", ["\n\n", "请教个sql问题,", "\n使用sql语句的话,", "\n怎么查询可以 让表a的数据 和表b的数据 ,select查询出像新表数据一样的效果?"]], "Tag": "算法设计"}
{"Answer": "http://download.csdn.net/detail/u011779982/5994969\r\nhttp://blog.sina.com.cn/s/blog_bf9843bf0101fajv.html", "Konwledge_Point": "乘法", "Question": ["小学生问题，烦请大神解答", ["ios的计算器代码怎么写？for循环打印button不会，还有怎么让屏幕上显示自己输入的数字。本人刚开始学UI，之前没有任何基础，大神们多关照啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br /&gt;void Multip(int i)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int j &amp;#61; 0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    int k &amp;#61; 0;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for (j &amp;#61; 1; j &amp;lt; i &amp;#43; 1; j&amp;#43;&amp;#43;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        for (k &amp;#61; 1; k &amp;lt; i &amp;#43; 1; k&amp;#43;&amp;#43;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            printf(&amp;#34;%2d * %2d &amp;#61; %3d&amp;#34;, j, k, j * k);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;}&lt;br /&gt;int main()&lt;br /&gt;{ &lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你想要打印的数: \\n&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nscanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-symbol\"&gt;&amp;amp;i&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nMultip(&lt;span class=\"hljs-name\"&gt;i&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nsystem(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nreturn &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["： 编写一个可以打印乘法表的程序， 首先输入要打印的阶数， 程序可以根据输入的数字打印对应阶数的乘法表", ["编写一个可以打印乘法表的程序，", "首先输入要打印的阶数，", "程序可以根据输入的数字打印对应阶数的乘法表。", "如输入2，打印如下乘法表", "1x1=1", "1x2=12x2=2", "输入11，则打印", "1x1=1", "…………", "1x4=42x4=83x4=124x4=12", "…………", "1x11=112x11=11……………………………………11x11=121"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;k1和f1的向量长度应该相同&amp;#xff0c;建议令k1&amp;#61; t。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["matlab做连续信号的卷积报错向量长度必须相同", ["用matlab进行两个连续信号的卷积出错，卷积使用的函数是老师提供了，例程是可以进行的，但是完成进行其他比如我这个就会报错，向量长度必须相同，请问这里要怎么修改呢，我猜测应该是k1，k2的参数需要修改，但是不太明白要怎么修改，还是其他的参数需要修改呢，下面附上图片以及源码", "\n\n", "\n\n", "\n\n", "\n\n", "自己写的：", "\n\n", "t=-5:0.01:5;", "\nf1=[(t>=-2)&(t<=1)].*(-t);", "\nsubplot(311)", "\nplot(t,f1)", "\nsubplot(312)", "\nf2=[(t>=0)&(t<=1)];", "\nplot(t,f2)", "\nsubplot(313)", "\np=0.01;", "\nk1=-2:p:1;", "\nk2=0:p:1;", "\n[f,k]=sconv(f1,f2,k1,k2,p)", "\n\n", " ", "\n\n", "老师提供的卷积函数代码", "\n\n", "function [f,k]=sconv(f1,f2,k1,k2,p)", "\nf=conv(f1,f2);%f为 序列f1与f2的卷积和", "\nf=f*p;", "\nk0=k1(1)+k2(1); %计算序列f非零样值的起点位置", "\nk3=length(f1)+length(f2)-2; %计算卷积和f的非零样值的宽度", "\nk=k0:p:k3*p; %确定卷积和f非零样值的时间向量", "\nsubplot(3,1,1);plot(k1,f1);title('f1(t)');xlabel('t');ylabel('f1(t)');", "\nsubplot(3,1,2);plot(k2,f2);title('f2(t)');xlabel('t');ylabel('f2(t)');", "\nsubplot(3,1,3);plot(k,f);title( 'f(t)');xlabel('t');ylabel( 'f(t) ')", "\n "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;大循环下print()换行&lt;br /&gt;每一行最后换行的意思&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["乘法口诀表代码的问题", ["乘法口诀代码的最后一行的print（）是什么意思呀", "：<4d是啥意思啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;let那里, 不需要&amp;#34;&amp;#34;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["编写脚本显示九九乘法表", ["编写脚本显示九九乘法表，但是这个代码不知道哪里有问题，运行不了"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;,i,j,i*j);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["编程输出九九乘法表！", ["C语言", " （初学者）使用for语句（循环嵌套）编写九九乘法表    要求：简单、易懂、明了！"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;\nint main() {\n\tint i,j;\n\tfor(i&amp;#61;1; i&amp;lt;&amp;#61;9; i&amp;#43;&amp;#43;) {\n\t\tfor(j&amp;#61;1; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;)\n\t\t\tprintf(&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;,j,i,j*i);\n\t\tprintf(&amp;#34;\\n&amp;#34;);\n\t}\n\treturn 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;代码如上&amp;#xff0c;万望采纳。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c++的九九乘法，新手求解，不懂", ["输出后的九九乘法表是个直角三角形，体现出九九乘法表"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;87H有符号&amp;#xff0c;十进制值就是-121&amp;#xff0c;65H是101&amp;#xff0c;两者相乘就是-12221&amp;#xff0c;转换为十六进制就是D043H了&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于8位字长的有符号数的乘法", ["老哥们好，初学者请教一下。有符号数65H和有符号数87H的乘法怎么做啊。实在没搞懂，社区里面有很小数位的乘法，关键是65H和87H直接2进制乘法很长啊。答案D043H但是不知道怎么得来的，谢谢老哥们"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;要用换行符的哦&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表运行结果不一样", ["我运行的九九乘法表结果是横条的", "124369这种的，代码我和别人的都是一样的，为什么不是梯形的，换行后是竖着的", "1", "2", "4", "3", "6", "9"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你贴上来的代码是混乱的&amp;#xff0c;你参考一下代码改一下吧&amp;#xff0c;&lt;br /&gt;&lt;strong&gt;有用记得采纳&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; &amp;#43; i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#34;&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i * j:&amp;lt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;}&lt;/span&gt;&amp;#34;&lt;/span&gt;, end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python乘法表问题报错求解", ["list1=[\"{}", "{}={:<2}\".format(i,j,i", "j)+(\"\"if i!=j else \"\\n\")]", "       for i in range(1,10) for j in range(1,i+1)", "for item in list1:", "    print(item,end=\"\")", "我想打印一个99乘法表，但是第二行报错了，请问原因是什么，怎么改"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;pow函数的返回值是浮点型&amp;#xff0c;不能用%d输出。&lt;br /&gt;你定义的a是int型&amp;#xff0c;a&amp;#61;pow(3,i)会将浮点型转换为整型&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["打印3的乘法表怎么不对", ["题目要求是打印一个3的乘法表，怎么像我注释那样做不对呢，必须得另外用个量来存储结果输出才对。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/955672391566168.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["99乘法表给我写蒙了", ["这个99乘法表最后的end为什么显示语法错误", "̫͡", "ʔ-̫͡-ʔ"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;a&amp;#43;用双引号括起来&amp;#xff1b;&lt;br /&gt;.close&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["这个乘法为什么会报错啊", ["初学Python，看教学视频学着弄然后这个乘法为什么会报错啊，我初学"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;# 九九乘法表 -for&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{}&amp;#34;&lt;/span&gt;.format(i,j,i*j),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-comment\"&gt;# 九九乘法表 -while&lt;/span&gt;\nx &amp;#61; 1\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; x &amp;lt;10:\n    y &amp;#61; 1\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; y &amp;lt;&amp;#61; x:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{}&amp;#34;&lt;/span&gt;.format(x,y,x*y),end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n        y &amp;#43;&amp;#61; 1\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n    x &amp;#43;&amp;#61; 1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1 id=\"有帮助请点击右上角采纳有问题继续交流你的采纳是对我回答的最大的肯定和动力\"&gt;&lt;font style=\"color:#f00\"&gt;有帮助请点击右上角采纳,有问题继续交流,你的采纳是对我回答的最大的肯定和动力&lt;/font&gt;&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/605495361536183.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["求指点，怎么打印出九九乘法表", ["利用嵌套循环打印九九乘法表", "要求：显示效果为下三角和上三角的"]], "Tag": "算法设计"}
{"Answer": "你说的是矩阵乘法么\r\nhttp://wenku.baidu.com/link?url=AmjDxML649ARrEg2bDPsNu7-JVBNf4rQ9tc-piQNznlhhCCzoCbD55fq4NuZcv0t8Zd2ek2tphl3Wdf3nGB5DT1AN2HA1MTawiPDRNM0QKm", "Konwledge_Point": "乘法", "Question": ["两个二维数组长度不一也可以做数组的乘法么？", ["两个二维数组长度不一也可以做数组的乘法么？对大小不一的两个数组的乘法的结果输出数组是什么？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;i&amp;#61;&amp;#61;j&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法标输出错误，求解！", ["为什么输出九九乘法表，乘的偶数不见了。把if删了后就对了。玩觉得加了iff对程序也没有影响。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/936269209936132.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;你看看对不对&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//乘积最大值&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sort&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t[],&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(j&amp;lt;n)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t[j]&amp;lt;t[j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;amp;&amp;amp;j!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; tem&amp;#61;t[j];\n            t[j]&amp;#61;t[j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;];\n            t[j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;tem;\n            j--;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            j&amp;#43;&amp;#43;;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j,k,h;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j&amp;lt;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;j&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;t[j]);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;sort&lt;/span&gt;(t,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max1&amp;#61;t[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;]*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&amp;#43;t[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;t[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; max2&amp;#61;t[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;t[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\n    \n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d  %d   &amp;#34;&lt;/span&gt;,max1,max2);\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;乘积最大值&amp;#xff1a;%d\\n&amp;#34;&lt;/span&gt;,max1*max2);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言求乘积最大值。。", ["题目是这样的，任意输入五个数（可以相同），五个数里面分成两组数，组成一个三位数乘以一个两位数，每个数只能取一遍，求乘积最大值。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用GPTᴼᴾᴱᴺᴬᴵ&lt;br /&gt;乘法同态加密方案可以通过使用特定的数学运算技术&amp;#xff0c;将明文的乘法操作转换为密文中的加法操作。这种方案可以在不暴露任何加密信息的情况下进行乘法计算。&lt;/p&gt;\n&lt;p&gt;以下是一种简单的乘法同态加密方案&amp;#xff1a;&lt;/p&gt;\n&lt;ol&gt;&lt;li&gt;&lt;p&gt;选择两个大质数p和q&amp;#xff0c;并计算n &amp;#61; p * q&amp;#xff0c;作为公钥。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;选择一个数g&amp;#xff0c;满足g是n的原根&amp;#xff0c;作为公钥。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;随机选择一个整数a&amp;#xff0c;并计算g的a次方模n&amp;#xff0c;作为私钥。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;加密明文x&amp;#xff1a;选择一个随机数r&amp;#xff0c;并计算 y &amp;#61; g^x * r^n mod n&amp;#xff0c;其中y是密文。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;加密明文y&amp;#xff1a;选择一个随机数s&amp;#xff0c;并计算 z &amp;#61; g^y * s^n mod n&amp;#xff0c;其中z是密文。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;计算乘积&amp;#xff1a;计算w &amp;#61; y * z mod n&amp;#xff0c;其中w是a*b的密文。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;解密&amp;#xff1a;将w解密为明文 w&amp;#39;&amp;#xff0c;计算w&amp;#39; &amp;#61; w^(1/a) mod n&amp;#xff0c;其中a是私钥。&lt;/p&gt;\n&lt;/li&gt;&lt;/ol&gt;\n&lt;h2 id=\"h2_可以证明&amp;#xff0c;这个方案可以实现乘法同态加密&amp;#xff0c;即对于密文y和z&amp;#xff0c;解密后的明文为y和z&amp;#xff0c;有y--z--gx--rnab--gy--snab-mod-n--gabxaby--rabn--sabn-mod-n--gabxaby--rnab--snab-mod-n--gabxy--y--z-mod-n--ab_1677335050645\"&gt;可以证明&amp;#xff0c;这个方案可以实现乘法同态加密&amp;#xff0c;即对于密文y和z&amp;#xff0c;解密后的明文为y&amp;#39;和z&amp;#39;&amp;#xff0c;有y&amp;#39; * z&amp;#39; &amp;#61; (g^x * r^n)^ab * (g^y * s^n)^ab mod n &amp;#61; (g^(abx&amp;#43;aby) * r^(abn) * s^(abn)) mod n &amp;#61; g^(abx&amp;#43;aby) * (r^n)^ab * (s^n)^ab mod n &amp;#61; g^ab(x&amp;#43;y) * y * z mod n &amp;#61; a*b&lt;/h2&gt;\n&lt;p&gt;这个方案的主要优点是简单易用&amp;#xff0c;可以实现乘法同态加密。缺点是安全性不够高&amp;#xff0c;可以通过攻击求解私钥。实际应用中&amp;#xff0c;需要使用更加复杂的方案来提高安全性。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["设计一个乘法同态加密方案。", ["设计一种乘法同态加密方案。这意味着，给定a的加密和b的加密，你能够在没有访问解密密钥的情况下计算a.b的加密。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n#include &amp;lt;stdio.h&amp;gt;\n\n \n\nint main(void)\n\n{\n\n    int &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)\n\n    {\n\n        int &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;lt;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;)\n\n        {\n\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d * %d &amp;#61; %d\\t&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt;);\n\n            &lt;span class=\"hljs-built_in\"&gt;col&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n        }\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n        &lt;span class=\"hljs-built_in\"&gt;row&lt;/span&gt; &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-built_in\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["如何用while循环打印99乘法口诀表", ["如何用while循环打印99乘法口诀表", "大一新生，请简单一点，目前循环结构就学了for,while(T ^ T)"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-php\"&gt;\n&lt;span class=\"hljs-comment\"&gt;//左下三角&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;#43;&amp;#43;){\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;&amp;lt;&amp;#61;&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;lt;&amp;#61;&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strlen(&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;amp;nbsp;&amp;amp;nbsp;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;;\n            }\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strlen(&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;amp;nbsp;&amp;amp;nbsp;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;#39;&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;#39;&lt;/span&gt;;\n            }\n        }\n    }    \n}\n\n&lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;------------------------------------------------------------------------------------------&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;;\n&lt;span class=\"hljs-comment\"&gt;//左上三角&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;#43;&amp;#43;){\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;&amp;gt;&amp;#61;&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;--){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;&amp;lt;&amp;#61;&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(strlen(&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;amp;nbsp;&amp;amp;nbsp;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;#34;&lt;/span&gt;;\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n                &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;#34;&lt;/span&gt;;\n            }\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            \n            &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-variable\"&gt;$j&lt;/span&gt;*&lt;span class=\"hljs-variable\"&gt;$i&lt;/span&gt;.&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;echo&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;;    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/962760150436197.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["运用php制作一个九九乘法表怎么弄？", ["运用循环语句各写一个左下三角和左上三角的九九乘法表。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为while循环内 n每次都减一&amp;#xff0c;而循环的条件是n&amp;gt;&amp;#61;1&amp;#xff0c;&lt;br /&gt;所以跳出循环的时候n&amp;#61;0&lt;br /&gt;你可以使用一个变量替代n&amp;#xff0c;让n的值不变&lt;br /&gt;比如m&amp;#61;n&lt;br /&gt;然后将while循环的n都换成m&amp;#xff0c;最后输出还是用n&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;m &amp;#61; n\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; m&amp;gt;&amp;#61;1:\n    total*&amp;#61;m\n    &lt;span class=\"hljs-attribute\"&gt;m-&lt;/span&gt;&amp;#61;1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/171199247646117.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么while循环最后的结果是0！", ["\n", "为什么while循环最后的输出结果是0！，要如何修改啊？for循环显示的没有问题啊"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n        for (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; j &amp;lt; 10; j&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n            for (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; k &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; k &amp;lt; 10; k&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n                String &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt; &amp;#61; k * j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n                System&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;print((&lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;length() &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; ? &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt; : &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n            }\n            System&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;.&lt;/span&gt;println()&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        }\n        \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["有会用嵌套的for循环在控制台如图显示乘法表的人嘛，please🥹", ["我会用嵌套的for循环在控制台显示乘法表、但我不会按照图中的形式显示。有会用嵌套的for循环在控制台如图显示乘法表的人嘛，please🥹", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;9x5&amp;#xff1f;不是9x9么&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["如何用Java实现：9*5的乘法表", ["怎么用JAVA  实现9×5乘法表，也就是a×b这种形式的，而且数字是由用户自己输入？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;BEGIN&lt;br /&gt; FOR a IN 1 .. 9 LOOP&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  FOR b IN a .. 9 LOOP&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  dbms_output.put(b||&amp;#39;&lt;/span&gt;&lt;em&gt;&amp;#39;||a||&amp;#39;&amp;#61;&amp;#39;||a&lt;/em&gt;b||&amp;#39;  &amp;#39;);&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  END LOOP;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  dbms_output.new_line();&lt;/span&gt;&lt;br /&gt; END LOOP;&lt;br /&gt;END;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么用loop/while/for循环实现下图的99乘法表", ["怎么用loop/while/for循环实现下图的99乘法表", "\n", "我想要达到的结果", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;aDotb &amp;#61; a.T.dot(b).item()  后面将矩阵提出数字就行 &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["numpy中1*1数组与其他数组乘法", ["一般来说数组乘法需要满足数组1的列等于数组2的行，但其中一个数组时1*1数组时则可以看成数乘的形式，不过依然会报错，结果如下：", "\n", "\n", "\n", "有没有什么好的解决方案，比如怎样将1*1数组看成一个数字呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;应该是记录的开示时间和结束时间仅放在if和else那里&amp;#xff0c;而没有放在获取回答输入前后有关&amp;#xff0c;我在下面用两次乘法运算做的测试&amp;#xff0c;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;import random\nimport time\n \ncount &amp;#61; 1\n \na &amp;#61; random.randint(1, 9)\n \nb &amp;#61; random.randint(1, 9)\n \n&lt;span class=\"hljs-comment\"&gt;#coding&amp;#61;utf-8&lt;/span&gt;\ndef surecallback():\n \n    global a, b, count\n    &lt;span class=\"hljs-attribute\"&gt;Time_solve&lt;/span&gt;&amp;#61;0\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; count &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,3):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;第&amp;#39;&lt;/span&gt; &amp;#43; str(count) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;道题&amp;#39;&lt;/span&gt;)\n        \n        a &amp;#61; random.randint(1, 9)\n \n        b &amp;#61; random.randint(1, 9)\n        \n        product &amp;#61; a * b\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%s*%s&amp;#61;&amp;#39;&lt;/span&gt;%(a,b) )\n        \n        starttime &amp;#61; time.time() #在获取回答输入前记录开始时间\n        #&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;startime&amp;#61;&amp;#34;&lt;/span&gt;,str(starttime))\n        &lt;span class=\"hljs-attribute\"&gt;result&lt;/span&gt;&amp;#61;int(input(&amp;#34;请输入两个数成绩后得到的结果&amp;#xff1a;&amp;#34;))\n        \n        endtime &amp;#61; time.time() #在获取回答输入后记录结束时间\n        #&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;endtime&amp;#61;&amp;#34;&lt;/span&gt;,str(endtime))\n        &lt;span class=\"hljs-attribute\"&gt;time_solve&lt;/span&gt;&amp;#61;endtime-starttime #计算此次回答时间\n        #&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;time_solve&amp;#61;&amp;#34;&lt;/span&gt;,str(time_solve))\n        \n        &lt;span class=\"hljs-attribute\"&gt;Time_solve&lt;/span&gt;&amp;#61;time_solve&amp;#43;Time_solve  #把此次回答时间纳入总时间\n        #&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Time_solve&amp;#61;&amp;#34;&lt;/span&gt;,str(Time_solve))\n        \n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; result &amp;#61;&amp;#61; product:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;答对了&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;答错了&amp;#39;&lt;/span&gt;)\n        count &amp;#61; count &amp;#43; 1\n        \n    \n    \n        \n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;进行本次乘法测试花费的时间为&amp;#xff1a;%s&amp;#39;&lt;/span&gt;%Time_solve) \n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;进行每次测试花费的平均时间为&amp;#xff1a;%s&amp;#39;&lt;/span&gt;%(Time_solve/2)) #总时间除以回答次数即每次回答时间\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;测试已结束&amp;#xff01;&amp;#39;&lt;/span&gt;)\n \n \n \n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;1)进入乘法测试&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;2)退出程序&amp;#39;&lt;/span&gt;)\n    n &amp;#61; input(&lt;span class=\"hljs-string\"&gt;&amp;#39;请从以上菜单中选择一个选项:&amp;#39;&lt;/span&gt;).strip()\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;&amp;#61;&amp;#39;1&amp;#39;:\n        surecallback()\n    elif &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;&amp;#61;&amp;#39;2&amp;#39;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;谢谢你使用乘法测试小程序&amp;#39;&lt;/span&gt;)\n        break\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;菜单选择错误&amp;#xff0c;请重试&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;-----------------------------&amp;#39;&lt;/span&gt;)\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/367204892656129.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["如何正常记录本次乘法测试花费的时间以及每次测试平均耗费时间", ["问题：如何正常记录本次乘法测试花费的时间和每次测试平均耗费时间。我运行了n遍，结果输出是", "“测试进行本次乘法测试花费的时间为：0.0", "进行每次测试花费的平均时间为：0.0”即使我做的很慢，好像计算的是系统的运算时间", "\n", "import random\nimport time\n\ncount = 1\n\na = random.randint(1, 9)\n\nb = random.randint(1, 9)\n\n", "#coding=utf-8", "\ndef surecallback():\n\n    global a, b, count\n    ", "Time_solve", "=0\n    ", "for", " count ", "in", " range(1,11):\n        ", "print", "(", "'第'", " + str(count) + ", "'道题'", ")\n        \n        a = random.randint(1, 9)\n\n        b = random.randint(1, 9)\n        \n        product = a * b\n        ", "print", "(", "'%s*%s='", "%(a,b) )\n        ", "result", "=int(input(\"请输入两个数成绩后得到的结果：\"))\n        \n        starttime = time.time()\n        ", "if", " result == product:\n            ", "print", "(", "'答对了'", ")\n        ", "else", ":\n            ", "print", "(", "'答错了'", ")\n        endtime = time.time()\n        ", "time_solve", "=endtime-starttime\n        ", "Time_solve", "=time_solve+Time_solve\n        count = count + 1\n    ", "else", ":\n        \n       ", "print", "(", "'进行本次乘法测试花费的时间为：%s'", "%time_solve)\n       ", "print", "(", "'进行每次测试花费的平均时间为：%s'", "%time_solve)\n       ", "print", "(", "'测试已结束！'", ")\n\n\n\n", "while", " ", "True", ":\n    ", "print", "(", "'1)进入乘法测试'", ")\n    ", "print", "(", "'2)退出程序'", ")\n    n = input(", "'请从以上菜单中选择一个选项:'", ").strip()\n    ", "if", " ", "n", "=='1':\n        surecallback()\n    elif ", "n", "=='2':\n        ", "print", "(", "'谢谢你使用乘法测试小程序'", ")\n        break\n    ", "else", ":\n        ", "print", "(", "'菜单选择错误，请重试'", ")\n    ", "print", "(", "'-----------------------------'", ")\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;两层循环&amp;#xff0c;外层控制行&amp;#xff0c;内层控制列&amp;#xff0c;然后判断是列没有对齐&amp;#xff0c;那就是内层循环的问题&amp;#xff0c;内层是循环9次&amp;#xff0c;所以9列也是没问题的 &amp;#xff0c;可以在内层循环前边加个判断&amp;#xff0c;当是第一行&amp;#xff0c;第一列的时候输出一个tab键&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;&amp;#61;1&amp;amp;&amp;amp;j&amp;#61;&amp;#61;1){\n                 System.out.&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;); \n             }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/469068784776126.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["99乘法表，第二行数据无法对齐", ["99乘法表，第二行数据无法对齐", "\n", "\n", "public", " static ", "void", " main(String[] args) {\n       ", "for", "(", "int", " i=", "1", ";i<", "10", ";i++){\n           ", "System", ".", "out", ".print(i+\"\\t\");\n           ", "if", "(i==", "1", "){\n               \n               ", "for", "(", "int", " j=", "1", ";j<", "10", ";j++){\n                   ", "System", ".", "out", ".print(j+\"\\t\"); \n               }\n               ", "System", ".", "out", ".println(\"\"); \n           }\n           ", "for", "(", "int", " j=", "1", ";j<", "10", ";j++){\n             \n             ", "System", ".", "out", ".print(i+\"X\"+j+\"=\"+i*j+\"\\t\");\n           }\n           ", "System", ".", "out", ".println(\"\");\n       }\n    }\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用static定义一个整型变量&amp;#xff0c;每次调用函数自增1&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言中如何记录并显示阶乘所需的乘法次数以及斐波那契数Fn所需的加法次数", ["c语言中如何记录并显示阶乘所需的乘法次数以及斐波那契数Fn所需的加法次数"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;后面这个你改成&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-number\"&gt;3.14&lt;/span&gt;*(&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;*&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;试试&amp;#xff0c;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-number\"&gt;3.14&lt;/span&gt;*&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;*&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;这个相当于进行了两次浮点数相乘&amp;#xff0c;会有误差&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python计算乘方为什么不能用乘法？", ["用Python计算圆的面积，为什么两种方法输出结果不同？", "\n", "a", "=float(input(\"输入半径\"))\n", "s1", "=3.14*a**2\n", "s2", "=3.14*a*a\n", "print", "(s1,s2)\n\n", "\n", "输出结果", "\n", "===================== RESTART: C:", "/Users/", "Lenovo", "/Desktop/", "1", ".py ====================\n输入半径", "3", "\n", "28.26", " ", "28.259999999999998", "\n>>> \n\n", "\n", "为什么幂运算和连用两个乘法输出结果会有所不同？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;并不是什么乱码&amp;#xff0c;是你写错了&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/16099110626616.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\ni &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;) {\n    j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (j &amp;lt;&amp;#61; i) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;,j,i,i*j);\n        j&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    i&amp;#43;&amp;#43;;\n}\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/627551106266126.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言编写9*9乘法表出现乱码怎么破", ["C语言编写9*9乘法表出现乱码怎么破", "\n", "以下为代码及其结果", "#######define _CRT_SECURE_NO_WARNINGS", "#include <stdio.h>", "int main()", "{", "    int n = 9;", "    int i, j;", "    i = 1;", "    while (i <= 9) {", "        j = 1;", "        while (j <= i) {", "            printf(\"%d*%d=%4d,j,i,i", "j\");", "            j++;", "        }", "        printf(\"\\n\");", "        i++;", "    }", "    return 0;", "}", "就出现这种的", " -406016464", "-406008336=-1244138040,j,i,i", "j", "-775906368", "-641=-1244138672,j,i,i", "j-775906368", "-641=-1244138672,j,i,i", "j", "-775906368", "-641=-1244138672,j,i,i", "j-775906368", "-641=-1244138672,j,i,i", "j-775906368", "-641=-1244138672,j,i,i", "j", "-775906368", "-641=-1244138672,j,i,i", "j-775906368", "-641=-1244138672,j,i,i", "j-775906368", "-641=-1244138672,j,i,i", "j-775906368", "-641=-1244138672,j,i,i*j"]], "Tag": "算法设计"}
{"Answer": "要先strToInt()转换成数字，再相乘", "Konwledge_Point": "乘法", "Question": ["delphi 字符串赋值相乘，怎么写老是出错？", ["按钮单击事件，代码这样写的报告错误，不懂了…", "\nvar", "\nsl,wt,st:string;", "\nbegin", "\nsl:=edit1.text;", "\nwt:=sl*4;", "\n\n", "edit2.text:=wt;", "\n运行错误…"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用法、语法的错误&lt;br /&gt;always 中是不能例化别的模块的&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["请问这里在always语句块中引入别的module为什么会报错呢？在前面定义了两个module用来算乘法和减半的除法。", ["请问这里在always语句块中引入别的module为什么会报错呢？在前面定义了两个module用来算乘法和减半的除法。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\nfriend ostream &amp;amp;&lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream &amp;amp;o,Fraction &amp;amp;f)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(f.&lt;span class=\"hljs-keyword\"&gt;base&lt;/span&gt;!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//while(f.base!&amp;#61;0)&lt;/span&gt;\n            {\n                f.Format();\n\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(f.&lt;span class=\"hljs-keyword\"&gt;base&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                    o&amp;lt;&amp;lt;f.top;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//if(f.top&amp;lt;0)&lt;/span&gt;\n                    o&amp;lt;&amp;lt;f.top&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;f.&lt;span class=\"hljs-keyword\"&gt;base&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                o &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;Error&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; o;\n        }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["C++实现分数加法与乘法，输出结果只有一个", ["C++实现分数的加法与乘法", "\n", "#include<iostream>", "\n", "using", " ", "namespace", " ", "std", ";\n", "class", " ", "Fraction", "\n{\n", "public", ":\n    Fraction()\n    {\n        top=", "1", ";\n        ", "base", "=", "1", ";\n    }\n    Fraction(", "int", " t,", "int", " b)\n    {\n        top=t;\n        ", "base", "=b;\n    }\n\n    ", "void", " ", "Format", "(", ")", "\n    {\n\n        ", "while", "(", "base", "!=", "0", ")\n        {\n            ", "int", " n=MaxCo(top,", "base", ");\n\n\n            ", "if", "(top==", "0", ")\n            {\n                ", "base", "=", "1", ";\n            }\n            ", "else", " ", "if", "(", "base", "<", "0", ")\n            {\n                top=-top;\n                ", "base", "=-", "base", ";\n            }\n\n            top=top/n;\n            ", "base", "=", "base", "/n;\n            ", "break", ";\n        }\n\n    }\n    ", "int", " ", "MaxCo", "(", "int", " a,", "int", " b", ")", "\n    {\n        ", "int", " temp;\n        ", "while", "(b!=", "0", ")\n        {\n            temp=a%b;\n            a=b;\n            b=temp;\n        }\n        ", "return", " a>", "0", "?a:-a;\n    }\n    friend ostream&", "operator", "<<(ostream&o,Fraction&f)\n    {\n        ", "while", "(f.", "base", "!=", "0", ")\n        {\n            f.Format();\n            ", "if", "(f.", "base", "==", "1", ")\n                o<<f.top;\n            ", "else", " ", "if", "(f.top<", "0", ")\n                o<<f.top<<", "\"/\"", "<<f.", "base", ";\n\n            ", "return", " o;\n        }\n    }\n    friend istream&", "operator", ">>(istream&i,Fraction&f)\n    {\n        i>>f.top>>f.", "base", ";\n        ", "return", " i;\n    }\n    friend Fraction ", "operator", "+(Fraction&f1,Fraction &f2)\n    {\n        ", "return", " Fraction(f1.top*f2.", "base", "+f1.", "base", "*f2.top,f1.", "base", "*f2.", "base", ");\n    }\n    friend Fraction ", "operator", "*(Fraction&f1,Fraction &f2)\n    {\n        ", "return", " Fraction(f1.top*f2.top,f1.", "base", "*f2.", "base", ");\n    }\n\n", "private", ":\n    ", "int", " top;\n    ", "int", " ", "base", ";\n};\n\n", "int", " ", "main", "(", ")", "\n{\n    Fraction a;\n    cin >> a;\n    ", "int", " f, m;\n    cin >> f >> m;\n    ", "Fraction ", "b", "(", "f, m", ")", ";\n    Fraction c, d;\n    c = a + b;\n    d = a * b;\n    cout << c << endl;\n    cout << d << endl;\n    ", "return", " ", "0", ";\n}\n", "\n", "\n", "输入1 -2", "2 3", "输出", "[空格]", "-1/3", "\n", "我的解答思路和尝试过的方法", "\n", "输出1/6 -1/3"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,b;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d&amp;#34;&lt;/span&gt;,a,b,a*b);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["输入两个整数，输出如输出样例所示的乘法式子。 输入格式: 输入两个整数a，b。 输出格式: 输出a*b=c，其中a，b是输入的整数，c是a与b的乘积。", ["输入两个整数，输出如输出样例所示的乘法式子。", "输入格式:", "输入两个整数a，b。", "输出格式:", "输出a*b=c，其中a，b是输入的整数，c是a与b的乘积。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;int &amp;lt; float &amp;lt; double&lt;br /&gt;a 是int&amp;#xff0c;0.5 是double &amp;#xff0c;这两乘起来的 double&amp;#xff0c;比float大&amp;#xff0c;得用double接&amp;#xff1b;&lt;br /&gt;要么改成 double b &amp;#61; a * 0.5&amp;#xff1b;&lt;br /&gt;要么改成 float b &amp;#61; a * 0.5f;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么Java中float变量与int型变量相乘报错", ["刚开始学习Java，有可以帮忙讲一下吗，为什么定义一个int型变量与float变量相乘报错，感谢！"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-cpp\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, k;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        k &amp;#61; i;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; - i; j&amp;#43;&amp;#43;, k&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%dx%d&amp;#61;%d &amp;#34;&lt;/span&gt;, i, k, i * k);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}  \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/931507638746189.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["反向打印九九口诀表，上下反转打印输出", ["反向打印九九口诀表，上下反转打印输出 有没有解决的谢谢朋友了我爱你"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;i&amp;#61;1 j循环n次&lt;/p&gt;\n\n&lt;p&gt;i&amp;#61;2 j循环n-1次&lt;/p&gt;\n\n&lt;p&gt;i&amp;#61;n-1 j循环1次&lt;/p&gt;\n\n&lt;p&gt;n&amp;#43;n-1&amp;#43;n-2&amp;#43;...&amp;#43;1&lt;/p&gt;\n\n&lt;p&gt;(n&amp;#43;1)n/2近似为O(N*2),所以时间复杂度O(N*2&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["分析算法的时间复杂度", ["x=0;", "\n\n", "for(i=1;i＜n;i++)", "\n\n", "     for(j=1;j＜=n-i;j++）", "\n\n", "        x++;"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这个程序是需要从命令行参数中获取文本文件地址&lt;br /&gt;需要在命令行运行程序时传递,文本文件地址&lt;/p&gt;\n&lt;p&gt;你先编译程序,比如编译后的程序是1.exe&lt;/p&gt;\n&lt;p&gt;在命令行(cmd窗口)中输入&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; .&lt;span class=\"hljs-string\"&gt;\\1.exe&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;c:/xxx/data.txt&amp;#34;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;不能是直接在编辑器中按F5单独运行 1.exe&lt;/p&gt;\n&lt;p&gt;比如&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/348099228756193.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/248899228756145.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用C++实现最小二乘法的程序中引用不了文件里的数据", ["部分代码是这样的：", "int main(int argc, char *argv[])", "{", "    if(argc != 2)", "    {", "        cout<<\"Usage: DataFile.txt\"<<endl;", "        return -1;", "    }", "    else", "    {", "        vector", " x;", "        ifstream in(argv[1]);", "        for(double d; in>>d; )", "            x.push_back(d);"]], "Tag": "算法设计"}
{"Answer": "```\r\n选择A\r\n有几个操作数就是几元\r\n一元：\r\n!a\r\n&amp;a\r\n*a\r\na++\r\n++a\r\n...\r\n二元\r\na == b\r\na = b\r\na += b\r\na &amp;&amp; b\r\na * b\r\n...\r\n三元\r\na ? b : c\r\n\r\nB的错误在于，=不能是一元的。\r\n*作为指针运算可以是一元，作为乘法，又可以是二元，所以是唯一正确的。\r\n```\r\n# 问题解决的话，请点下采纳", "Konwledge_Point": "乘法", "Question": ["问一道有关运算符重载的概念性问题", ["\n\n", "书上说”*“", "\n这个运算符是不能重载的", "\n说是为了保证成员功能不能被改变，答案是A，就很疑惑.....求大佬解答......顺便问一下“=”为什么不能重载为二元的，我的想法是operator=（类型A a，类型A b){a.成员1=b.成员1；a.成员2=b.成员2；....}这样重载为友元不就是2元嘛......感谢大佬(。＿ 。） ✎＿"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;a href=\"https://www.cnblogs.com/lucifer25/p/7966431.html\" id=\"textarea_1640661811440_1640661835290_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;Stanford Algorithms(一): 大数相乘(c&amp;#43;&amp;#43;版) - plantree - 博客园&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;Stanford Algorithms(一): 大数相乘(c&amp;#43;&amp;#43;版) 刚不就在中国大学Mooc上参加了陈越老师的 的课程,收获很大.觉得趁热打铁,也把算法的部分也给一块学了吧,就在Coursera上注&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://common.cnblogs.com/favicon.svg\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://www.cnblogs.com/lucifer25/p/7966431.html&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;大数相乘一般使用char * 或者 string 来做。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["将孙子定理运用到大数相乘是可行的吗", ["将孙子定理运用到大数相乘是可行的吗，原理请详细描述，最好带公式描述。语言c++"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;\nusing namespace std;\nint main(){\n    char a1[1001]&amp;#61;{},a2[1001]&amp;#61;{};\n    int b1[1001]&amp;#61;{},b2[1001]&amp;#61;{},b3[1001]&amp;#61;{};  \n    cin&amp;gt;&amp;gt;a1&amp;gt;&amp;gt;a2; \n    int &lt;span class=\"hljs-attribute\"&gt;len1&lt;/span&gt;&amp;#61;strlen(a1); \n    int &lt;span class=\"hljs-attribute\"&gt;len2&lt;/span&gt;&amp;#61;strlen(a2);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(int &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;len1;i&amp;#43;&amp;#43;){\n        b1[len1-1-i]&amp;#61;a1[i]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(int &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;len2;i&amp;#43;&amp;#43;){\n        b2[len2-1-i]&amp;#61;a2[i]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    }\n    int &lt;span class=\"hljs-attribute\"&gt;lenc&lt;/span&gt;&amp;#61;max(len1,len2); \n    int &lt;span class=\"hljs-attribute\"&gt;jinwei&lt;/span&gt;&amp;#61;0;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(int &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;0;i&amp;lt;lenc;i&amp;#43;&amp;#43;){\n        b3[i]&amp;#61;b1[i]&amp;#43;b2[i]&amp;#43;jinwei;\n        &lt;span class=\"hljs-attribute\"&gt;jinwei&lt;/span&gt;&amp;#61;b3[i]/10;\n        b3[i]%&amp;#61;10;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(jinwei!&amp;#61;0){\n        cout&amp;lt;&amp;lt; 1 ;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(int &lt;span class=\"hljs-attribute\"&gt;i&lt;/span&gt;&amp;#61;lenc-1;i&amp;gt;&amp;#61;0;i--){\n        cout&amp;lt;&amp;lt; b3[i] ;\n    }\n return 0;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;用用这段代码吧。我学高精度的时候用的就是这个&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["刚学高精度算法，就遇到问题了= =能帮我看看错在哪里了吗", ["1168：大整数加法", "\n", "时间限制: 1000 ms         内存限制: 65536 KB", "提交数: 61536     通过数: 20207", "【题目描述】", "\n", "求两个不超过200位的非负整数的和。", "【输入】", "\n", "有两行，每行是一个不超过200位的非负整数，可能有多余的前导0。", "【输出】", "\n", "一行，即相加后的结果。结果里不能有多余的前导0，即如果结果是342，那么就不能输出为0342。", "【输入样例】", "\n", "22222222222222222222", "33333333333333333333", "\n", "【输出样例】", "\n", "55555555555555555555", "\n", "#include<bits/stdc++.h>\nusing namespace std;\nint ", "A", "[", "210", "]={", "0", "},", "B", "[", "210", "],", "C", "[", "210", "];\nint main(){\nint a1,b1,c1,i;\nstring a,b;\ngetline(cin,a);\ngetline(cin,b);\na1 = a.size();\nb1 = b.size();\nfor (i = ", "0", " ; i < a1 ; i++)            //倒序存入 \n", "A", "[i]=a[a1", "-1", "-i]-", "'0'", ";\nfor (i = ", "0", " ; i < b1 ; i++)          //倒序存入\n", "B", "[i]=b[b1", "-1", "-i]-", "'0'", ";\ni=", "0", ";\nwhile (i < a1 || i < b1){         //高精度加法 \n", "C", "[i] += (", "A", "[i] + ", "B", "[i]) ", "% 10;", "\n", "C", "[i+", "1", "] = (", "A", "[i] + ", "B", "[i]) / ", "10", ";\ni++;\n}\nwhile (", "C", "[i] == ", "0", ") i--;\nfor ( ; i >= ", "0", " ; i--)\ncout<<", "C", "[i];\nreturn ", "0", ";\n}\n\n", "\n", "我的代码只通过了少量测试仪数据，我看不出来哪里有问题= ="]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;# 九九乘法表&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;mtable&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, x&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(i, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{:-2d}*{:-2d}&amp;#61;{:-2d}&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(j, i, i*j), end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;  &amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\nmtable(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()))\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;&lt;font style=\"color:#f00\"&gt;有帮助请采纳,有问题继续交流,你的采纳是对我回答的最大的肯定和动力&lt;/font&gt;&lt;/h1&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/274167712536157.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["如何写以下这个代码？", ["\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Add all values within the loop.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo \"You have selected the following games: \";\n$total = 0;\nforeach ($main_odds as $final_odd){\n    $total += $final_odd;\n    echo \"&amp;lt;td&amp;gt;$final_odd&amp;lt;/td&amp;gt;\" ;\n}\necho \"&amp;lt;br&amp;gt;Total value is \" . $total;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["如何添加或乘以复选框的值", ["\n\n", "I am trying to sum up the values of checkbox value using a foreach loop... but i am confused as to where to add the signs so the values can add up.", "\n\n", "Where do i include the addition sign so it can sum up whatever number value so i can get the total? ", "\n\n", "<?php \nif(isset($_POST[\"submit\"])){\n    $main_odds      = $_POST[\"total_odds\"];\n    if(!empty($main_odds)){\n        echo \"You have selected the following games \";\n        foreach ($main_odds as $final_odd){\n            echo \"<td>$final_odd</td>\" ;\n        }\n    }else{\n        echo \"You have not selected any odds\";\n    }\n\n}\n$total_odds = \"\";\n?>\n\n<table>\n    <thead>\n        <tr>\n        <th>calculate</th>\n        <th>odds</th>\n        </tr>\n    </thead>\n    <tbody>\n<?php foreach($games as $game): ?>\n      <tr> \n       <td><?= $game->odds; ?></td>\n        <td>\n        <form method=\"Post\" action=\"\">\n        <input type=\"checkbox\" name=\"total_odds[]\"  value=\"<?= $game->odds; ?>\">\n        </td>\n      </tr>\n         <?php endforeach; ?>\n         <input type=\"submit\" name=\"submit\"/>\n        </form>\n         </tbody>\n</table>\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你自己执行了吗&amp;#xff0c;看到自己输出的是个啥了吗&amp;#xff0c;跟人家标准格式比较了吗&lt;br /&gt;你的下划线在哪呢&lt;br /&gt;你必须完全按照题目要求的格式&amp;#xff0c;一个空格都不能差&lt;br /&gt;人家输出了下划线你没有输出&amp;#xff0c;那能正确才怪&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["//写九九乘法表\n//OJ网显示解答错误\n//想知道哪里错了", ["//写九九乘法表", "\n", "//OJ网显示解答错误", "\n", "//想知道哪里错了", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " i = ", "1", ", j = ", "1", ";\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "printf", "(", "\"%-4d\"", ", i);\n\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "for", " (j = ", "1", "; j <= ", "9", "; j++)\n        {\n            ", "printf", "(", "\"%-4d\"", ", i * j);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n\n    }\n\n    ", "printf", "(", "\"\\n\\n\"", ");\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "printf", "(", "\"%-4d\"", ", i);\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "for", " (j = ", "1", "; j <= ", "9", "; j++)\n        {\n            ", "if", " (i >= j)\n                ", "printf", "(", "\"%-4d\"", ", i * j);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "printf", "(", "\"%-4d\"", ", i);\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n    ", "for", " (", "int", " i = ", "1", "; i < ", "10", "; i++)\n    {\n        ", "for", " (", "int", " j = ", "1", "; j < i; j++)\n        {\n            ", "printf", "(", "\"    \"", ");\n        }\n        ", "for", " (", "int", " j = i; j < ", "10", "; j++)\n        {\n            ", "printf", "(", "\"%-4d\"", ", i * j);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n    }\n\n}\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n\n&lt;span class=\"hljs-comment\"&gt;//wave 有符号数&amp;#xff0c;仿真按有符号数来&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;module&lt;/span&gt; dds(\n    &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;            sclk,\n    &lt;span class=\"hljs-keyword\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;            rst,\n    &lt;span class=\"hljs-keyword\"&gt;output&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    wave\n);\n\n    &lt;span class=\"hljs-keyword\"&gt;parameter&lt;/span&gt; M0 &amp;#61; &lt;span class=\"hljs-number\"&gt;32&amp;#39;d17179869&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//200kHz&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;parameter&lt;/span&gt; M1 &amp;#61; &lt;span class=\"hljs-number\"&gt;32&amp;#39;d257698038&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//20MHz&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] sum0,sum1;\n    &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] addr0,addr1;\n    &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] wave_200k;\n    &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] wave_20M;\n    &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] wave_x1;\n    &lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;signed&lt;/span&gt; [&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] wave_x2;\n\n    &lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt;&amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; sclk &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;negedge&lt;/span&gt; rst)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(rst &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&amp;#39;b0&lt;/span&gt;)\n        sum0 &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;&amp;#39;d0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        sum0 &amp;lt;&amp;#61; sum0 &amp;#43; M0;\n\n    &lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt;&amp;#64;(&lt;span class=\"hljs-keyword\"&gt;posedge&lt;/span&gt; sclk &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;negedge&lt;/span&gt; rst)\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(rst &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&amp;#39;b0&lt;/span&gt;)\n        sum1 &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;&amp;#39;d0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        sum1 &amp;lt;&amp;#61; sum1 &amp;#43; M1;\n\n    &lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    addr0    &amp;#61; sum0[&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    addr1    &amp;#61; sum1[&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    wave_x2 &amp;#61; wave_x1 &amp;#43; &lt;span class=\"hljs-number\"&gt;16384&lt;/span&gt; - (wave_200k &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;) - (wave_20M &amp;lt;&amp;lt; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    wave    &amp;#61; wave_x2;\n\nrom_256x8_200k rom_256x8_200k_inst (\n    &lt;span class=\"hljs-variable\"&gt;.address&lt;/span&gt; ( addr0 ),\n    &lt;span class=\"hljs-variable\"&gt;.clock&lt;/span&gt; ( sclk ),\n    &lt;span class=\"hljs-variable\"&gt;.q&lt;/span&gt; ( wave_200k )\n);\nrom_256x8_20M rom_256x8_20M_inst (\n    &lt;span class=\"hljs-variable\"&gt;.address&lt;/span&gt; ( addr1 ),\n    &lt;span class=\"hljs-variable\"&gt;.clock&lt;/span&gt; ( sclk ),\n    &lt;span class=\"hljs-variable\"&gt;.q&lt;/span&gt; ( wave_20M )\n);\nmult mult_inst (\n    &lt;span class=\"hljs-variable\"&gt;.data_a&lt;/span&gt; ( wave_200k ),\n    &lt;span class=\"hljs-variable\"&gt;.data_b&lt;/span&gt; ( wave_20M ),\n    &lt;span class=\"hljs-variable\"&gt;.result&lt;/span&gt; ( wave_x1 )\n);\n&lt;span class=\"hljs-keyword\"&gt;endmodule&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["am调制有符号的会了，如何在此基础上用无符号乘法器来设计实现am调制呢", ["rom表数据产生信号范围0-255，再使用无符号乘法器（自己设计的，不知道有没有错）将两信号相乘得不到正确的调制波形，只出来一半，该怎么做修改呢", "\n", "\n", "module dds(", "       input   wire   sclk,", "       input   wire   rst,", "       output  wire  [15:0]    wave", ");", "parameter  M0 = 32'd17179869;//200kHz", "parameter  M1 = 32'd257698038;//20MHz", "reg    [31:0]   sum0,sum1;", "wire   [7:0]    addr0,addr1;", "wire   [7:0]    wave_200k;", "wire   [7:0]    wave_20M;", "always", "@(posedge ", "sclk or negedge rst)", "       if(rst == 1'b0)", "           sum0 <= 'd0;", "       else", "           sum0 <= sum0 + M0;", "always", "@(posedge ", "sclk or negedge rst)", "       if(rst == 1'b0)", "           sum1 <= 'd0;", "       else", "           sum1 <= sum1 + M1;", "assign addr0 = sum0[31:24];", "assign addr1 = sum1[31:24];", "rom_256x8_200k    rom_256x8_200k_inst (", "    .address ( addr0 ),", "    .clock ( sclk ),", "    .q ( wave_200k )", "    );", "rom_256x8_20M    rom_256x8_20M_inst (", "    .address ( addr1 ),", "    .clock ( sclk ),", "    .q ( wave_20M )", "    );", "mult    mult_inst (", "    .data_a ( wave_200k ),", "    .data_b ( wave_20M ),", "    .result ( wave )", "    );", "endmodule"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你是要程序判断到多少阶乘会溢出吗&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n        &lt;span class=\"hljs-comment\"&gt;//最大int值&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; maxInt &amp;#61; Integer.MAX_VALUE;\n        \n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        \n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//0的阶乘&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;boolean&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(flag){\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; *&amp;#61; n;&lt;span class=\"hljs-comment\"&gt;//从1的开始&amp;#xff0c;计算n的阶乘&lt;/span&gt;\n            n&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(maxInt / &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;lt; n){\n                System.out.println(n&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;! 会溢出&amp;#34;&lt;/span&gt;);\n                flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            }\n            \n        }\n    }\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Long&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n        &lt;span class=\"hljs-comment\"&gt;//最大int值&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;long&lt;/span&gt; maxInt &amp;#61; Long.MAX_VALUE;\n        \n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; n &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        \n        &lt;span class=\"hljs-built_in\"&gt;long&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//0的阶乘&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;boolean&lt;/span&gt; flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(flag){\n            &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; *&amp;#61; n;&lt;span class=\"hljs-comment\"&gt;//从1的开始&amp;#xff0c;计算n的阶乘&lt;/span&gt;\n            n&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(maxInt / &lt;span class=\"hljs-keyword\"&gt;sum&lt;/span&gt; &amp;lt; n){\n                System.out.println(n&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;! 会溢出&amp;#34;&lt;/span&gt;);\n                flag &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n            }\n            \n        }\n    }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["关于#java#的问题：求n!分别采用int和long数据类型，结果不会溢出", ["求阶乘n!分别采用int和long数据类型，看n在什么取值范围内，结果不会溢出"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你题目的解答代码如下&amp;#xff1a;&amp;#xff08;如有帮助&amp;#xff0c;望采纳&amp;#xff01;谢谢! 点击我这个回答右上方的&lt;strong&gt;【采纳】&lt;/strong&gt;按钮&amp;#xff09;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;var s &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\nfor (var i &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;; i &amp;lt;&amp;#61; 50; i&amp;#43;&amp;#43;) {&lt;!-- --&gt;&lt;/span&gt;\n    if (i%&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        s *&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; i&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n    }\n}\nconsole.log(s)&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img title=\"image.png\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/557554149826162.png\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["小伙伴们，如何计算1~50之间所有能被6整除的数字的乘积呢,注意是乘法 (1)声明变量（5分） (2)搭建循环（5分） (3)实现判断逻辑，将能被6整除的数字相乘（5分） 将结果打印在控制台上", ["小伙伴们，如何计算1~50之间所有能被6整除的数字的乘积呢,注意是乘法", "(1)声明变量（5分）", "(2)搭建循环（5分）", "(3)实现判断逻辑，将能被6整除的数字相乘（5分）", "将结果打印在控制台上"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;乘法口诀&amp;#xff0c;怎么用的&amp;#43;号&lt;br /&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-html\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d &amp;#34;&lt;/span&gt;,i,j,i*j);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["想用c语言输出9*9口诀。但是为什么输出的是这样的结果。", ["\n", "想用c语言输出9*9口诀。但是为什么输出的是这样的结果。也不知道是哪里错了，希望能可以解决"]], "Tag": "算法设计"}
{"Answer": "多项式乘法中，楼主光new Polynomial[num]是不够的 ，还需要为里面的double数组，int数组也都需要new，num也要赋值\r\n加的三句我加注释了\r\n```\r\n //多项式的乘法\r\n\tPolynomial operator*(const Polynomial&amp;x)const\r\n\t{\r\n\t\tPolynomial *p,sum;\r\n\t\tp = new Polynomial[num];\r\n\t\tfor (int i = 0; i &lt; num;i++)\r\n\t\t{ \r\n\t\t\tp[i].p_coefs = new double[x.num]; //要new\r\n\t\t\tp[i].p_exps = new int[x.num];        //要new\r\n\t\t\tp[i].num = x.num;                       //num也要赋值\r\n\t\t\tfor (int j = 0; j &lt; x.num; j++)\r\n\t\t\t{\r\n\t\t\t\tp[i].p_coefs[j] = p_coefs[i] * x.p_coefs[j];\r\n\t\t\t\tp[i].p_exps[j] = p_exps[i] + x.p_exps[j];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tfor (int i = 0; i &lt; num; i++) {\r\n\t\t\tsum =sum+p[i];\r\n\t\t}\r\n\t\treturn sum;\r\n\t}\r\n```\r\n结果：\r\n![图片说明](https://img-ask.csdn.net/upload/201603/30/1459300892_791942.png)", "Konwledge_Point": "乘法", "Question": ["谁能帮我看下下面这段代码，多项式乘法和+=操作运行不了，求助啊，到底错在哪了", ["#include", "\n#include", "\nusing namespace std;", "\nclass Polynomial", "\n{", "\n    double *p_coefs;", "\n    int *p_exps, num;", "\npublic:", "\n    Polynomial();", "\n    Polynomial(double coefs[], int exps[], int size);//系数数组、指数数组和项数", "\n    Polynomial(const Polynomial&x);", "\n    ~Polynomial();", "\n    //赋值操作符", "\n    Polynomial &operator=(const Polynomial&x)", "\n    {", "\n        if (&x == this) return *this;", "\n        num = x.num;", "\n        delete[]p_coefs;", "\n        delete[]p_exps;", "\n        p_coefs = new double[x.num];", "\n        p_exps = new int[x.num];", "\n        for (int i = 0; i <x. num; i++) { p_coefs[i] = x.p_coefs[i]; }", "\n        for (int j = 0; j <x.num; j++) { p_exps[j] = x.p_exps[j]; }", "\n        return *this;", "\n    }", "\n    //最高幂指数", "\n    int degree()const", "\n    {", "\n        return p_exps[num - 1];", "\n    }", "\n    //计算多项式的值", "\n    double evaluate(double x) const", "\n    {", "\n        double value = 0, temp = x;", "\n        for (int i = 0; i < num; i++)", "\n        {", "\n            for (int j = 0; j < p_exps[i]; j++) x *= temp;", "\n            x *= p_coefs[i];", "\n            value += x;", "\n            x = temp;", "\n        }", "\n        return value;", "\n    }", "\n    //判断两多项式是否相等", "\n    bool operator==(const Polynomial&x)const", "\n    {", "\n        if (num != x.num)return false;", "\n        for (int i = 0; i < num; i++)", "\n            if (p_exps[i] != x.p_exps[i] || p_coefs[i] != x.p_coefs[i])return false;", "\n        return true;", "\n    }", "\n    //判断两多项式是否不相等", "\n    bool operator!=(const Polynomial&x)const", "\n    {", "\n        if (num != x.num) return true;", "\n        for (int i = 0; i < num; i++)", "\n            if (p_exps[i] != x.p_exps[i] || p_coefs[i] != x.p_coefs[i])return true;", "\n        return false;", "\n\n", "}\n//多项式的加法\nPolynomial operator+(const Polynomial&x)const\n{\n    Polynomial new_poly;\n    new_poly.num = num + x.num;\n    new_poly.p_coefs = new double[num +x.num];\n    new_poly.p_exps = new int[num + x.num];\n    for (int i = 0; i < num; i++) { new_poly.p_coefs[i] = p_coefs[i]; }\n    for (int j = 0; j < num; j++) { new_poly.p_exps[j] = p_exps[j]; }\n    for (int i = num; i <new_poly.num; i++) { new_poly.p_coefs[i] = x.p_coefs[i - num]; }\n    for (int j = num; j <new_poly.num; j++) { new_poly.p_exps[j] = x.p_exps[j - num]; }\n    for (int i = 0; i < new_poly.num; i++)\n        for (int j = i + 1; j < new_poly.num; j++)\n        {\n            if (new_poly.p_exps[i] == new_poly.p_exps[j])\n            {\n                new_poly.p_coefs[i] = new_poly.p_coefs[i] + new_poly.p_coefs[j];\n                new_poly.p_coefs[j] = 0;\n            }\n        }\n    return new_poly;\n}\n//多项式的减法\nPolynomial operator-(const Polynomial&x)const\n{\n    Polynomial poly,poly1;\n    poly.num = num ;\n    poly.p_coefs = new double[num];\n    poly.p_exps = new int[num];\n    for (int i = 0; i < x.num; i++) { poly.p_coefs[i] =p_coefs[i]; }\n    for (int j = 0; j < x.num; j++) { poly.p_exps[j] = p_exps[j]; }\n    poly1.num = x.num;\n    poly1.p_coefs = new double[x.num];\n    poly1.p_exps = new int[x.num];\n    for (int i = 0; i < x.num; i++) { poly1.p_coefs[i] = -x.p_coefs[i]; }\n    for (int j = 0; j < x.num; j++) { poly1.p_exps[j] = x.p_exps[j]; }\n    return poly+poly1;\n}\n//多项式的乘法\nPolynomial operator*(const Polynomial&x)const\n{\n    Polynomial *p,sum;\n    p = new Polynomial[num];\n     for (int i = 0; i < num;i++)\n    { \n        for (int j = 0; j < x.num; j++)\n        {\n            p[i].p_coefs[j] = p_coefs[i] * x.p_coefs[j];\n            p[i].p_exps[j] = p_exps[i] + x.p_exps[j];\n\n        }\n\n     }\n     for (int i = 0; i < num; i++) {\n         sum =sum+p[i];\n     }\n    return sum;\n\n}\n//多项式的加法\nPolynomial& operator+=(const Polynomial&x)\n{\n    {return *this+ x; }\n}\n//多项式的减法\nPolynomial& operator-=(const Polynomial&x)\n{return *this - x;}\nPolynomial& operator*=(const Polynomial&x)\n{\n    return *this * x;\n}\nvoid display()const;\n", "\n\n", "};", "\n//下面两个重载函数实现构造函数", "\nPolynomial::Polynomial()", "\n{", "\n    p_coefs = NULL; p_exps = NULL;", "\n    num = 0;", "\n}", "\nPolynomial::Polynomial(double coefs[], int exps[], int size)", "\n{", "\n    num = size;", "\n    p_coefs = new double[num];", "\n    p_exps = new int[num];", "\n    for (int i = 0; i < num; i++) { p_coefs[i] = coefs[i]; }", "\n    for (int j = 0; j < num; j++) { p_exps[j] = exps[j]; }", "\n}", "\nPolynomial::Polynomial(const Polynomial&x)", "\n{", "\n\n", "num = x.num;\np_coefs = new double[num];\np_exps = new int[num];\nfor (int i = 0; i < num; i++) { p_coefs[i] = x.p_coefs[i]; }\nfor (int j = 0; j < num; j++) { p_exps[j] = x.p_exps[j]; }\n", "\n\n", "}", "\n//析构函数", "\nPolynomial::~Polynomial()", "\n{", "\n    delete[]p_coefs;", "\n    p_coefs = NULL;", "\n    delete[]p_exps;", "\n    p_exps = NULL;", "\n    num = 0;", "\n}", "\n\n", "//显示多项式", "\nvoid Polynomial::display()const", "\n{", "\n    double t1;", "\n    int t2;", "\n    //冒泡排序", "\n    for (int j = 0; j < num - 1; j++)", "\n        for (int i = 0; i < num - 1 - j; i++)", "\n            if (p_exps[i]>p_exps[i + 1])", "\n            {", "\n                t1 = p_coefs[i]; t2 = p_exps[i];", "\n                p_coefs[i] = p_coefs[i + 1]; p_exps[i] = p_exps[i + 1];", "\n                p_coefs[i + 1] = t1; p_exps[i + 1] = t2;", "\n            }", "\n    if (p_coefs[0] != 0)", "\n    {", "\n        if (p_exps[0] != 0 && p_exps[0] != 1)", "\n        {", "\n            if (p_coefs[0] != 1 && p_coefs[0] != -1)cout << p_coefs[0] << \"x^\" << p_exps[0];", "\n            else if (p_coefs[0] == 1)cout << \"x^\" << p_exps[0];", "\n            else cout << \"-x^\" << p_exps[0];", "\n        }", "\n        else if (p_exps[0] == 0)", "\n        {", "\n            cout << p_coefs[0];", "\n        }", "\n        else", "\n        {", "\n            if (p_coefs[0] != 1 && p_coefs[0] != -1)cout << p_coefs[0] << \"x\";", "\n            else if (p_coefs[0] == 1)cout << \"x\";", "\n            else cout << \"-x\";", "\n        }", "\n\n", "}\nfor (int i = 1; i < num; i++)\n{\n    if (p_coefs[i] != 0)\n    {\n        if (p_exps[i] != 0 && p_exps[i] != 1)\n        {\n            if (p_coefs[i] > 0 && p_coefs[i] != 1 && p_coefs[i] != -1)cout << '+' << p_coefs[i] << \"x^\" << p_exps[i];\n            else if (p_coefs[i] == 1)cout << \"+x^\" << p_exps[i];\n            else if (p_coefs[i] == -1)cout << \"-x^\" << p_exps[i];\n            else cout << p_coefs[i] << \"x^\" << p_exps[i];\n        }\n        else if (p_exps[i] == 0)\n        {\n            cout << p_coefs[i];\n        }\n        else\n        {\n            if (p_coefs[i] != 1 && p_coefs[i] != -1)cout << p_coefs[i] << \"x\";\n            else if (p_coefs[i] == 1)cout << \"x\";\n            else cout << \"-x\";\n        }\n\n    }\n}\ncout << endl;\n", "\n\n", "}", "\nint main()", "\n{", "\n    double a[5] = { 1,2,3,4,5 }, i[5] = { 1,3,5,7,10 };", "\n    int c = 5, b[5] = { 1,2,3,4,5 }, j[5] = { 1,3,5,8,7 };", "\n    Polynomial poly1(a, b, c), poly2, poly3(i, j, c),poly4,poly5;", "\n    cout << \"多项式一:\"; poly1.display();", "\n    poly2 = poly1;", "\n    cout << \"多项式二:\"; poly2.display();", "\n    cout << \"多项式三:\"; poly3.display();", "\n    cout <<\"多项式一最高次幂:\"<< poly1.degree() << endl;", "\n    cout << \"多项式一值为:\" << poly1.evaluate(3) << endl;", "\n    cout <<\"多项式二与三是否相等:\"<< boolalpha << (poly2 == poly3) << endl;", "\n    cout << \"多项式二与三是否不相等:\" << boolalpha << (poly2 != poly3) << endl;", "\n    cout << \"多项式一与三的和:\"; (poly1 + poly3).display();", "\n    cout << \"多项式一与三的差:\"; (poly1 - poly3).display();", "\n    cout << \"多项式一与三的积:\"; (poly1 * poly3).display();", "\n    poly2 += poly3; ", "\n    cout << \"多项式二增加后:\";   poly2.display();", "\n    poly2 -= poly3;", "\n    cout << \"多项式二减少后:\"; poly2.display();", "\n    poly2 *= poly3;", "\n    cout << \"多项式二相乘后:\"; poly2.display();", "\n    system(\"pause\");", "\n    return 0;", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为你把长度算没了啊,第一次算完是12位的-64,第二次算完变8位了,所以少个F&lt;br /&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["这是IMUL指令，一个是两个补码直接乘，一个是换成十进制乘结果不一样，问题出哪里了？", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Your values will be strings, so first convert the values to numeric data types, then use the multiplication operator (&lt;code&gt;*&lt;/code&gt;).&lt;/p&gt;\n\n&lt;p&gt;Assuming your values are integers, you can do&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$product = (int)$this-&amp;gt;request-&amp;gt;data['RecordDrugUnit']['dose'] * (int)$this-&amp;gt;request-&amp;gt;data['Unit']['conversion'];\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Substitute &lt;code&gt;(int)&lt;/code&gt; for the &lt;a href=\"http://www.php.net/manual/language.types.type-juggling.php\" rel=\"nofollow\"&gt;type conversion&lt;/a&gt; that is appropriate in your situation.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["两个$ this-> request-> data。 如何将它们相乘？", ["\n\n", "How do I multiply", "\n\n", "$this->request->data['RecordDrugUnit']['dose']\n*\n$this->request->data['Unit']['conversion']\n", "\n\n", "I am trying to store my unit dose values relatively, so in my Units table I have a conversion field which is a number relative to the unit. I get the 'dose' from a form. And this function is inside my controllers 'add' function for that form.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;浮点型就是这样的&amp;#xff0c;所以小数的乘法建议使用BigDecimal&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Java两个小数相乘出现好多小数", ["有哪位道友可以帮俺看一下这个问题吗？", "为什么一个一位小数乘上一个两位小时，结果却有好多小数呢", "\n", "\n", "不胜感激！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用v-model&lt;br /&gt;计算用computed&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么用element来解决下面这两个文本框相乘等于上面的文本框", ["怎么用element来解决一个input入力框和一个inputnumber计数器相乘等于另一个input文本框", "求解！"]], "Tag": "算法设计"}
{"Answer": "用基于二进制的浮点数表示十进制小数，结果不正常才是正常的。所有使用IEEE 754浮点数标准的语言都有这个问题，跟Ruby本身无关。\r\n\r\nirb(main):001:0&gt; 0.5-0.4\r\n=&gt; 0.09999999999999998\r\nirb(main):002:0&gt; 0.4-0.3\r\n=&gt; 0.10000000000000003\r\n\r\nscala&gt; 0.5-0.4\r\nres0: Double = 0.09999999999999998\r\nscala&gt; 0.4-0.3\r\nres1: Double = 0.10000000000000003", "Konwledge_Point": "乘法", "Question": ["ruby不会乘除法了，这是ruby1.9.3的bug吗？", ["环境ruby1.8.7下", "\nirb(main):002:0> 0.011*100", "\n=> 1.1", "\n这是正常的。", "\n\n", "而在环境ruby1.9.3下", "\nirb(main):008:0> 0.011*100", "\n=> 1.0999999999999999", "\n\n", "0.011 * 1000都不会有错，为什么乘100就出错呢？", "\n\n", "有哪位大侠能指点一下吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;find_num&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* max_i, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;* min_i)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, max, min;\n    max &amp;#61; min &amp;#61; a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]; *max_i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; *min_i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;gt; max)\n        {\n            max &amp;#61; a[i];\n            *max_i &amp;#61; i;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[i] &amp;lt; min)\n        {\n            min &amp;#61; a[i];\n            *min_i &amp;#61; i;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;], i, max_i, min_i;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;; i&amp;#43;&amp;#43;)\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;a[i]);\n    &lt;span class=\"hljs-built_in\"&gt;find_num&lt;/span&gt;(a, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &amp;amp;max_i, &amp;amp;min_i);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;max:a[%d]&amp;#61;%d, min:a[%d]&amp;#61;%d&amp;#34;&lt;/span&gt;, max_i, a[max_i], min_i, a[min_i]);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用C语言和函数怎么写这个程序？ 输入20个数，找出最大数和最小数，并返回原来最大数和最小数的位置。", ["用C语言和函数怎么写这个程序？", "输入20个数，找出最大数和最小数，并返回原来最大数和最小数的位置。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以读出来规范化一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; numpy &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; np\n\n \nMerage_2.loc[(Merage_2[&lt;span class=\"hljs-string\"&gt;&amp;#39;订单关闭原因&amp;#39;&lt;/span&gt;].&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;.contains(&lt;span class=\"hljs-string\"&gt;&amp;#39;买家未付款&amp;#39;&lt;/span&gt;,na&amp;#61;&lt;span class=\"hljs-literal\"&gt;False&lt;/span&gt;)),&lt;span class=\"hljs-string\"&gt;&amp;#39;미결재 금액&amp;#39;&lt;/span&gt;] &amp;#61; np.&lt;span class=\"hljs-built_in\"&gt;round&lt;/span&gt;(Merage_2[&lt;span class=\"hljs-string\"&gt;&amp;#39;总金额&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) * np.&lt;span class=\"hljs-built_in\"&gt;round&lt;/span&gt;(Merage_2[&lt;span class=\"hljs-string\"&gt;&amp;#39;人民币汇率&amp;#39;&lt;/span&gt;],&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["PYTHON pandas 乘法的值错误 乘法问题", ["问题遇到的现象和发生背景", "\n", "我在做某猫的订单整理的时候，因为是在外国公司，所以我们要按照当地的汇率帮忙算出这个单，大约是多少钱。", "所以我们都会把每个订单的金额乘以汇率，就会算出当地的金额。", "\n", "问题相关代码，请勿粘贴截图", "\n", "\nMerage_2", ".loc", "[(Merage_2[", "'订单关闭原因'", "]", ".str", ".contains", "(", "'买家未付款'", ",na=False)),", "'미결재 금액'", "] = Merage_2", "[", "'总金额'", "]", "*Merage_2", "[", "'人民币汇率'", "]", "\n", "\n", "运行结果及报错内容", "\n", "在图片上可以看出，我手动计算的话，总金额 215.98 乘以 汇率 182.9 等于 39503。", "\n", "但是我用上面的python代码计算的话。 是等于总金额 215.98 乘以 汇率 182.9 等于 39500", "\n", "我就奇怪了.. 怎么会这样呢？"]], "Tag": "算法设计"}
{"Answer": "sum函数后面追加下别名，as XX，就可以了", "Konwledge_Point": "乘法", "Question": ["有关case when语句在hibernate中使用时的问题？？", ["各位达人，先听小弟的问题描述：", "\n\n", "项目中需要完成一个报表功能，所以我先在mssql中使用了查询分析器，完成大致的sql语句，其功能已经达到了要求，代码如下", "\n[code=\"java\"]", "\nselect orgname, index_year, index_month,", "\nsum(case when type='d'then 1 else 0 end), //当类型为‘d’是加1", "\nsum(case when type='s' then 1 else 0 end), //当类型为‘s’是加1", "\nsum(case when type='e' then 1 else 0 end), //当类型为‘e’是加1", "\nsum(case when type='z' then 1 else 0 end), //当类型为‘z’是加1", "\nsum(case when type!='s' then pprice else 0 end) from", "\n(select sr.recid, datepart(year, sr.saledate) index_year, ", "\ndatepart(month, sr.saledate) index_month, ", "\nu.cname, u.type, e.empname, o.orgname, p.pname, p.pprice ", "\nfrom t_sellrecord as sr, t_cuser as u, t_employment as e, t_organized as o, t_product as p ", "\nwhere datediff(month, sr.saledate ,getdate()) < 36", "\nand o.recid = sr.saleorgid and sr.salesid = e.recid ", "\nand u.recid = sr.buyerid and p.recid = sr.proid ) ", "\nx group by orgname, index_year, index_month order by orgname asc, index_year asc, index_month asc[/code]", "\n然后直接考到java web项目中的dao中，使用hql语句，发现不支持datepart，所以改为直接sql，就使用了createSQLQuery，来进行查询，以上代码均未更改的直接copy了，查询结果另小弟十分疑惑。。。", "\nsql查询分析器中是", "\neeee 2008 7 0 0 2  0 1000.0 ", "\naaaa 2008 7 0 2 0  0 0.0", "\nbbbb 2008 7 0 0 2  0 1000.0 ", "\ncccc 2008 7 0 1 0  0 0.0", "\ndddd 2008 6 0 2 10 0 5000.0", "\ndddd 2008    7 0 5 4  0 2000.0", "\n而实际结果为", "\neeee 2008 7 0 0 0  0 0.0", "\naaaa 2008 7 0 0 0  0 0.0", "\nbbbb 2008 7 0 0 0  0 0.0", "\ncccc 2008 7 0 0 0  0 0.0", "\ndddd 2008 6 0 0 0  0 0.0", "\ndddd 2008    7 0 0 0  0 0.0", "\n似乎，第一个sum中case when获取的结果把后面的值都覆盖了，", "\n于是我试着吧type='d'改成1=1", "\nsql查询分析器中是", "\neeee 2008 7 2 0 2  0 1000.0 ", "\naaaa 2008 7 2 2 0  0 0.0", "\nbbbb 2008 7 2 0 2  0 1000.0 ", "\ncccc 2008 7 1 1 0  0 0.0", "\ndddd 2008 6 12 2 10 0 5000.0", "\ndddd 2008    7 9 5 4  0 2000.0", "\n而实际结果为", "\neeee 2008 7 2 2 2  2 2.0", "\naaaa 2008 7 2 2 2  2 2.0", "\nbbbb 2008 7 2 2 2  2 2.0", "\ncccc 2008 7 1 1 1  1 1.0", "\ndddd 2008 6 12 12 12  12 12.0", "\ndddd 2008    7 9 9 9  9 9.0", "\n\n", "各位达人哇，我疑惑不解，疑惑不解，但求赐教~~跪谢 :cry:  :cry: "]], "Tag": "算法设计"}
{"Answer": "一般情况下，C中int所占字节为2个或4个字节，如果是2个最大值就是65535，如果是4个就是2147483647。但是不管是否溢出，返回值都是int类型，首先int类型是默认类型，也就是说，11111是int类型，int+int还是int，望采纳。同时建议对于不确定的数据可以用long，或者longlong", "Konwledge_Point": "乘法", "Question": ["请问下c语言中int类型的变量乘以一个整数返回值类型为什么", ["比如", "\n      int a = 100;", "\n            a*11111其返回类型为什么类型"]], "Tag": "算法设计"}
{"Answer": "C++中用“+=”时左边的数在初始化时一定要赋值，就是在初始化Zhong_Shu    时要写成  int Zhong_Shu =0；Zhong_Shu =ZS();", "Konwledge_Point": "乘法", "Question": ["c++中引用形参导致计算错误", ["如果将shuliang 函数定义成形参函数，就会出现这样的错误，如果将定义非应用函数就正常。到底哪错了，求大神指教"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;&lt;code&gt;int32&lt;/code&gt; and &lt;code&gt;time.Duration&lt;/code&gt; are different types. You need to convert the &lt;code&gt;int32&lt;/code&gt; to a &lt;code&gt;time.Duration&lt;/code&gt;, such as &lt;code&gt;time.Sleep(time.Duration(rand.Int31n(1000)) * time.Millisecond)&lt;/code&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["如何将持续时间乘以整数？", ["\n\n", "To test concurrent goroutines, I added a line to a function to make it take a random time to return (up to one second)", "\n\n", "time.Sleep(rand.Int31n(1000) * time.Millisecond)\n", "\n\n", "However when I compiled, I got this error", "\n\n", "\n  ", ".\\crawler.go:49: invalid operation: rand.Int31n(1000) * time.Millisecond (mismatched types int32 and time.Duration)", "\n", "\n\n", "Any ideas? How can I multiply a duration?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This is because &lt;code&gt;prix_unitaire&lt;/code&gt; is not in &lt;code&gt;float&lt;/code&gt; format. You should format it to float first and then convert it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$prix_unitaire = floatval(str_replace(\",\",\".\",$prix_unitaire));\n$montant_total = $prix_unitaire * 1;\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["浮点数乘法结果", ["\n\n", "I want to make a multiplication on a float number but the result doesn't display the float. ", "\n\n", "$diver->prix_unitaire = $prix_unitaire;\n$montant_total = $prix_unitaire * 1;\n$diver->prix_total = $montant_total;\ndd($diver);\n", "\n\n", "I get 1500 and but it should be 1500,25. Could someone help me? ", "\n\n", "#attributes: array:6 [▼\n    \"facture_id\" => 3\n    \"quantite\" => \"2\"\n    \"dt_amende\" => Carbon @1513798542 {#1030 ▶}\n    \"saison_id\" => 1\n    \"prix_unitaire\" => \"1500,25\"\n    \"prix_total\" => 1500\n  ]\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;给你重新写一个&amp;#xff0c;可以把&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;\nusing namespace std;\nvoid mulit_poly(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; p[], &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n1, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;q[]&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n2, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; s[]);\nconst &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; MAX_POLY &amp;#61; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main() {\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; p[MAX_POLY], &lt;span class=\"hljs-string\"&gt;q[MAX_POLY]&lt;/span&gt;, s[MAX_POLY * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n1, n2;\n    cin &amp;gt;&amp;gt; n1 &amp;gt;&amp;gt; n2;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; n1 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--) {\n        cin &amp;gt;&amp;gt; p[i];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; n2 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--) {\n        cin &amp;gt;&amp;gt; &lt;span class=\"hljs-string\"&gt;q[i]&lt;/span&gt;;\n    }\n    mulit_poly(p, n1, &lt;span class=\"hljs-keyword\"&gt;q&lt;/span&gt;, n2, s);\n    bool first &amp;#61; true;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; n1 &amp;#43; n2 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s[i] !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!first)\n                cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;;\n            cout &amp;lt;&amp;lt; s[i];\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;x^&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i;\n            first &amp;#61; false;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\nvoid mulit_poly(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; p[], &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n1, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;q[]&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n2, &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; s[]) {\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n1 &amp;#43; n2; i&amp;#43;&amp;#43;) {\n        s[i] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n1; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n2; j&amp;#43;&amp;#43;) {\n            s[i &amp;#43; j] &amp;#43;&amp;#61; p[i] * &lt;span class=\"hljs-string\"&gt;q[j]&lt;/span&gt;;\n        }\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c++实现多项式乘法", ["题目大概要求如下：", "自己写的出现了比较多的问题，数组大小没有定义，局限性很大，多项式个数多了会出现问题，#include", "using namespace std;", "int main()", "{", "    int i, j, m, n,p[m],q[n],s[m+n];     //数组个数要搞清！易错点在这！", "           cout<<\"输入第一行的个数：\"; cin>>m;", "           cout<<\"输入系数: \";", "        for (i = m-1; i >=0; i--)        //为第一列系数", "        {", "            cin>>p[i];", "        }", "            cout<<\"P(X)=\";", "        for (i=m-1; i>=0; i--)", "        {", "         if(i==0) {cout<<p[i];break;}", "         cout<<p[i]<<\"×X^\"<<i<<\"+\";", "           }", "            cout<<\"\\n\\n\";", "        cout<<\"输入第二行的个数：\";cin>>n;", "        cout<<\"输入系数: \";", "        for (i = n-1; i >=0; i--)        //第二列系数", "        {", "            cin>>q[i];", "        }", "            cout<<\"Q(X)=\";", "        for (i=n-1; i>=0; i--)", "        {", "         if(i==0) {cout<<q[i];break;}", "         cout<<q[i]<<\"×X^\"<<i<<\"+\";", "           }", "               cout<<\"\\n\\n\";", "    for (i = m + n-2; i >=0; i--)  //都是零", "        {s[i] = 0;}", "\n", "for (i = m", "-1", "; i>=0; i--)", "\n{\n    for (", "j ", "= n", "-1", "; j >=0; j--)", "\n        {\n            s[i + ", "j] ", "+= p[i] * q[", "j];\n", "        } \n} \ncout<<", "\"它们乘积多项式：S(X)=\"", ";\nfor (i=m+n", "-2", "; i>=0; i--)    //输出所搞的 ", "\n{\n     if(i==", "0", "){cout<<s[i]", ";break;} ", "\n      cout<<s[i]<<", "\"×X^\"", "<<i<<", "\"+\"", ";\n   \n   }\n", "\n", "}", "希望有人可以帮忙解决题目问题，最好要有注释在函数后面。谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;This would work, with restrictions (numbers should be only positive):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SELECT 10 * EXP(SUM(LOG(prices))) AS result\nFROM tablename \nWHERE ...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The thnx should go to &lt;strong&gt;&lt;a href=\"http://en.wikipedia.org/wiki/John_Napier\" rel=\"noreferrer\"&gt;&lt;code&gt;Napier&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; and his wonderful invention, &lt;strong&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Logarithm\" rel=\"noreferrer\"&gt;&lt;code&gt;logarithms&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["MySQL行数据的乘法", ["\n\n", "I would like to be able to multiply all the prices for example from my database then multiply the total by 10.", "\n\n", "The code below do the addition not multiplication", "\n\n", "<?php\n$d = $_GET['d'];\n$con = mysql_connect(\"localhost\",\"username\",\"password\");\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\nmysql_select_db(\"databasename\", $con);//\n\n$sql= \"SELECT SUM(prices) FROM tablename WHERE Date = '$d' AND Prices >0.20 AND Type= 'sold'\";\n$results = mysql_query($sql);\n$row = mysql_fetch_array($results);\necho $row[0]*10;\n\n\nmysql_close($con);\n?> \n", "\n\n", "example", "\n\n", "id prices\n1   25\n2   36\n3   45\n", "\n\n", "That is i want 25*36*45*10 and not 25+36+45*10", "\n\n", "Hope anyone can help", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;记得采纳一下哟&amp;#xff0c;谢谢&amp;#x1f609;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#34;{i}x{j}&amp;#61;{i*j}&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/849731880966126.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python九九乘法表", ["有人知道我这个错哪了吗，好像是排版有问题，要的是那种梯形状的那种排列类似这个", "可以帮帮我吗，真的搞不懂😭😭"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;要么将字符串转成浮点数  s1  &amp;#61; float(str(s[1:])) * 6.3746&lt;br /&gt;要么将后面的浮点数转成整数 表示前面的字符串重复运算  str(s[1:])*int(6.3746)&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python字符串类型 乘法", ["s1= str( s[1:])*6.3746", "错误显示：TypeError: can't multiply sequence by non-int of type 'float'", "\n", "要如何修改？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;实测&amp;#xff0c;两种写法b都是0.如果把100改1000&amp;#xff0c;答案是9.&lt;br /&gt;我不知道你拿什么编译的&amp;#xff0c;为什么会不一样。&lt;br /&gt;你把0.01f改为0.01d&amp;#xff0c;答案就对了。float精度问题。&lt;br /&gt;或者你不要用(int)来强制转换&amp;#xff0c;而是用round去四舍五入&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C# 浮点数和整数乘法问题", ["C#", "int a = 1;", "int b = (int)(a * 100 * 0.01f);", "打印出来b=0", "如果直接使用", "int b = (int)(1 * 100 * 0.01f);", "打印出来b=1"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;complex&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; real;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; image;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;complex&lt;/span&gt;(){}\n        &lt;span class=\"hljs-built_in\"&gt;complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; real,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; image){\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;real&amp;#61;real;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;image&amp;#61;image;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value)&lt;/span&gt;&lt;/span&gt;{\n            real&amp;#61;value;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setImage&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value)&lt;/span&gt;&lt;/span&gt;{\n            image&amp;#61;value;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; real;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getImage&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; image;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            cout&amp;lt;&amp;lt;real&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;image&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        }\n        \n        complex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; complex &amp;amp;a)&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt;{\n            complex b;\n            b.&lt;span class=\"hljs-built_in\"&gt;setReal&lt;/span&gt;(real&amp;#43;a.&lt;span class=\"hljs-built_in\"&gt;getReal&lt;/span&gt;());\n            b.&lt;span class=\"hljs-built_in\"&gt;setImage&lt;/span&gt;(image&amp;#43;a.&lt;span class=\"hljs-built_in\"&gt;getImage&lt;/span&gt;());\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; b;\n        }\n        complex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &amp;amp;a)&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt;{\n            complex b;\n            b.&lt;span class=\"hljs-built_in\"&gt;setReal&lt;/span&gt;(real&amp;#43;a);\n            b.&lt;span class=\"hljs-built_in\"&gt;setImage&lt;/span&gt;(image);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; b;\n        }\n        &lt;span class=\"hljs-comment\"&gt;//定义非成员函数operator&amp;#43;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; complex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; complex &amp;amp;b);\n};\ncomplex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; complex &amp;amp;b){\n    complex c;\n    c.&lt;span class=\"hljs-built_in\"&gt;setReal&lt;/span&gt;(a&amp;#43;b.&lt;span class=\"hljs-built_in\"&gt;getReal&lt;/span&gt;());\n    c.&lt;span class=\"hljs-built_in\"&gt;setImage&lt;/span&gt;(b.&lt;span class=\"hljs-built_in\"&gt;getImage&lt;/span&gt;());\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; c;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;complex &lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    complex c;\n    complex d;\n    c&amp;#61;a&amp;#43;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    c.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n    d&amp;#61;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;&amp;#43;a;\n    d.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/037698005456199.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;可以参考&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["多项式乘法需要用到运算符重载", ["#include ", "#include", "using namespace std;", "const int MAX_POLY = 20;", "int p[MAX_POLY], q[MAX_POLY], s[MAX_POLY * 2];", "int n1, n2;", "class Polynomial;", "\n", "class Polynomial{//多项式类", "\n", "public:", "    Polynomial();", "   void mulit_input();", "    void mulit_poly(int p[], int n1, int q[], int n2, int s[]);//添加一项,若有相同的指数项，则合并", "   void mulit_output();", "};", "\n", "void mulit_poly(int p[], int n1, int q[], int n2, int s[]) {", "    for (int i = 0; i < n1 + n2; i++) {", "        s[i] = 0;", "    }", "    for (int i = 0; i < n1; i++) {", "        for (int j = 0; j < n2; j++) {", "            s[i + j] += p[i] * q[j];", "        }", "    }", "}", "void mulit_input(){", "    cout << \"输入第一个多项式的个数：\";", "    cin >> n1;", "    cout << \"输入第二个多项式的个数：\";", "    cin >> n2;//输入第一行的个数", "    cout << \"输入第一个多项式的系数：\";", "    for (int i = n1 - 1; i >= 0; i--) {", "\n", "    cin >> p[i];", "//", "为第一列系数\n}\ncout << ", "\"P(x)= \"", ";\nbool first = true;\n", "for", " (int i = n1 + n2 - ", "1", "; i >= ", "0", "; i--) {", "//", "输出多项式\n    ", "if", " (p[i] != ", "0", ") {\n        ", "if", " (!first)", "//", "如果不是第一个\n            cout << ", "\"+\"", ";", "//", "输出+\n        cout << p[i];", "//", "输出第i项\n        ", "if", " (i != ", "0", ")", "//", "如果i不等于", "0", "输x^\n            cout << ", "\"x^\"", " << i;\n       first=false;\n    }\n}\ncout << ", "\"\\n\"", ";\ncout << ", "\"输入第二个多项式的系数：\"", " ;\n", "for", " (int i = n2 - ", "1", "; i >= ", "0", "; i--) {\n    \ncin >> q[i];", "//", "为第二列系数\n\n}\ncout << ", "\"Q(x)= \"", " ;\n", "\n", "   for (int i = n1 + n2 - 1; i >= 0; i--) {//输出多项式", "        if (q[i] != 0) {", "            if (!first)//如果不是第一个", "                cout << \"+\";//输出+", "            cout << q[i];//输出第i项", "            if (i != 0)//如果i不等于0输x^", "                cout << \"x^\" << i;", "             first=false;", "        }", "\n", "}\n", "\n", "   cout <<\"\\n\";", "}", "\n", "void mulit_output(){", "cout << \"输出两个多项式相乘的值\";", "cout << \"S(x)= \";", " bool first = true;", "    for (int i = n1 + n2 - 1; i >= 0; i--) {//输出多项式", "        if (s[i] != 0) {", "            if (!first)//如果不是第一个", "                cout << \"+\";//输出+", "            cout << s[i];//输出第i项", "            if (i != 0)//如果i不等于0输x^", "                cout << \"x^\" << i;", "            first = false;", "        }", "    }", "}", "int main()", "{", "\n", "mulit", "_input()", ";", "//输入", "\nmulit", "_poly(", "p", ", ", "n1", ", ", "q", ", ", "n2", ", ", "s", ")", ";", "//调用多项式函数", "\nmulit", "_output()", ";", "//输出", "\n", "\n", "}", "该如何修改呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;估计你最后多了个换行。试试判断最后一行的时候&amp;#xff0c;不要println(&amp;#34;&amp;#34;);&lt;br /&gt;if(i!&amp;#61;1)&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;  System.out.println(&amp;#34;&amp;#34;);&lt;/span&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["输出倒九九乘法口诀表", ["我想知道我哪里错了，为什么提交上去说", "  格式错误", "\n", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;%.2f改为%f即可&amp;#xff0c;否则输入接收为0&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言乘法中输出0。", ["前面的输入可以运行。但是最后输出的moneyup是0.00", "为什么最后输出的moneyup是0.00?"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Use &lt;code&gt;in_array();&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public function hookDisplayHeader()\n{\n    $values = array('index','cms','product','category');\n    if(in_array(Tools::getValue('controller'), $values)){\n        $this-&amp;gt;context-&amp;gt;controller-&amp;gt;addCSS(($this-&amp;gt;_path).'something.css', 'all');\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["如果条件，简化PHP乘法", ["\n\n", "I wonder is there any way to make this code more subtle?", "\n\n", "Ex ", "\n\n", " public function hookDisplayHeader()\n{\n    if(Tools::getValue('controller')=='index'){\n        $this->context->controller->addCSS(($this->_path).'something.css', 'all');\n    }\n    if(Tools::getValue('controller')=='cms'){\n        $this->context->controller->addCSS(($this->_path).'something.css', 'all');\n    }\n    if(Tools::getValue('controller')=='product'){\n        $this->context->controller->addCSS(($this->_path).'something.css', 'all');\n    }\n    if(Tools::getValue('controller')=='category'){\n        $this->context->controller->addCSS(($this->_path).'something.css', 'all');\n    }\n\n}\n", "\n\n", "to simple", "\n\n", " public function hookDisplayHeader()\n     {\n         if(Tools::getValue('controller')=='index AND product AND cms AND category'){\n        $this->context->controller->addCSS(($this->_path).'something.css', 'all');\n         }\n     }\n", "\n\n", "this code not work :(", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;换成&lt;code class=\"language-javascript\"&gt;printf(&amp;#34;%d*%d&amp;#61;%-4d&amp;#34;,j,i,j*i);&lt;/code&gt;试试&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["PTA 九九乘法表 格式空格错误", ["格式错误  每行后面末尾的空格有错  如何进行改正呢？", "请求大家解答一下🥺🥺🥰🥰"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,i,j;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n)!&amp;#61;EOF)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;n;i&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n            {\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%-4d&amp;#34;&lt;/span&gt;,j,i,i*j);\n            }\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["【C语言】输出乘法口诀表", ["还记得以前小学时的九九乘法口诀吧。现在要求你编写程序打印出乘法口诀。 不过现在的乘法口诀表跟以前稍微有点区别，我告诉你一个数字n( 1 <= n <= 9),你要给我打出相应的nn乘法口诀表。", "输入：多个测试数据。每个测试数据一行，输入整数n.", "输出：输出nn乘法口诀表。 每个乘法口诀表中的任何一个乘式占6列，不足6列的在后面补空格。同一行2个乘式之间有一个空格。 两个乘法口诀表之间有一个空行。注意乘法口诀中每一行最后没有空格，如4", "4=16和5", "5=25后面都没有空格的。", "Sample Input", "1", "2", "3", "Sample Output", " 1*1=1", "\n", " 1", "1=1", " 1", "2=2  2*2=4", "\n", " 1", "1=1", " 1", "2=2  2", "2=4", " 1", "3=3  2", "3=6  3", "3=9", " 1", "4=4  2", "4=8  3", "4=12 4", "4=16", " 1", "5=5  2", "5=10 3", "5=15 4", "5=20 5", "5=25", " 1", "6=6  2", "6=12 3", "6=18 4", "6=24 5", "6=30 6*6=36"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;给你改了一下&amp;#xff0c;参考一下。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; MAX_POLY &amp;#61; &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; p[MAX_POLY], q[MAX_POLY], s[MAX_POLY * &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;];\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n1, n2;    \n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Polynomial&lt;/span&gt;;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Polynomial&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//多项式类&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Polynomial&lt;/span&gt;();\n   &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mulit_input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mulit_poly&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; p[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n1, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; q[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n2, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; s[])&lt;/span&gt;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//添加一项,若有相同的指数项&amp;#xff0c;则合并&lt;/span&gt;\n   &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mulit_output&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; capacity;&lt;span class=\"hljs-comment\"&gt;//数组大小&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; terms;&lt;span class=\"hljs-comment\"&gt;//非零系数的项数&lt;/span&gt;\n};\n \n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mulit_poly&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; p[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n1, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; q[], &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n2, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; s[])&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n1 &amp;#43; n2; i&amp;#43;&amp;#43;) {\n        s[i] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n1; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; n2; j&amp;#43;&amp;#43;) {\n            s[i &amp;#43; j] &amp;#43;&amp;#61; p[i] * q[j];\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mulit_input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    \n    cin &amp;gt;&amp;gt; n1 &amp;gt;&amp;gt; n2;&lt;span class=\"hljs-comment\"&gt;//输入第一行的个数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; n1 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--) {\n        cin &amp;gt;&amp;gt; p[i];&lt;span class=\"hljs-comment\"&gt;//为第一列系数&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; n2 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--) {\n        cin &amp;gt;&amp;gt; q[i];&lt;span class=\"hljs-comment\"&gt;//为第二列系数&lt;/span&gt;\n    }\n} \n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mulit_output&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;bool&lt;/span&gt; first &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; n1 &amp;#43; n2 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//输出多项式&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s[i] !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!first)&lt;span class=\"hljs-comment\"&gt;//如果不是第一个&lt;/span&gt;\n                cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//输出&amp;#43;&lt;/span&gt;\n            cout &amp;lt;&amp;lt; s[i];&lt;span class=\"hljs-comment\"&gt;//输出第i项&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)&lt;span class=\"hljs-comment\"&gt;//如果i不等于0输x^&lt;/span&gt;\n                cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;x^&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i;\n            first &amp;#61; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n        }\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n         \n    &lt;span class=\"hljs-built_in\"&gt;mulit_input&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//输入&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;mulit_poly&lt;/span&gt;(p, n1, q, n2, s);&lt;span class=\"hljs-comment\"&gt;//调用多项式函数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;mulit_output&lt;/span&gt;();&lt;span class=\"hljs-comment\"&gt;//输出&lt;/span&gt;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c++多项式乘法的计算改成类", ["\n", "#include", "using namespace std;", "\n", "int main()", "{", "    int i, j, m, n,p[m],q[n],s[m+n];     //数组个数要搞清！易错点在这！", "           cout<<\"输入第一行的个数：\"; cin>>m;", "           cout<<\"输入系数: \";", "        for (i = m-1; i >=0; i--)        //为第一列系数", "        {", "            cin>>p[i];", "        }", "            cout<<\"P(X)=\";", "        for (i=m-1; i>=0; i--)", "        {", "         if(i==0) {cout<<p[i];break;}", "         cout<<p[i]<<\"×X^\"<<i<<\"+\";", "           }", "            cout<<\"\\n\\n\";", "        cout<<\"输入第二行的个数：\";cin>>n;", "        cout<<\"输入系数: \";", "        for (i = n-1; i >=0; i--)        //第二列系数", "        {", "            cin>>q[i];", "        }", "            cout<<\"Q(X)=\";", "        for (i=n-1; i>=0; i--)", "        {", "         if(i==0) {cout<<q[i];break;}", "         cout<<q[i]<<\"×X^\"<<i<<\"+\";", "           }", "               cout<<\"\\n\\n\";", "    for (i = m + n-2; i >=0; i--)  //都是零", "        {s[i] = 0;}", "\n", "for (i = m", "-1", "; i>=0; i--)", "\n{\n    for (", "j ", "= n", "-1", "; j >=0; j--)", "\n        {\n            s[i + ", "j] ", "+= p[i] * q[", "j];\n", "        } \n} \ncout<<", "\"它们乘积多项式：S(X)=\"", ";\nfor (i=m+n", "-2", "; i>=0; i--)    //输出所搞的 ", "\n{\n     if(i==", "0", "){cout<<s[i]", ";break;} ", "\n      cout<<s[i]<<", "\"×X^\"", "<<i<<", "\"+\"", ";\n   \n   }\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-py\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(9,0, -1):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(0, 9-i, 1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;*7&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(i, 0, -1):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{0}*{1}&amp;#61;{2:^2}&amp;#39;&lt;/span&gt;.format(j, i, i*j), &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python9✖️9乘法表", ["！怎么用for x in range（）语句打出来。  或者用简单的python语言输入 ..。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;给你一个重载的例子&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;complex&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; real;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; image;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;complex&lt;/span&gt;(){}\n        &lt;span class=\"hljs-built_in\"&gt;complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; real,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; image){\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;real&amp;#61;real;\n            &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;image&amp;#61;image;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value)&lt;/span&gt;&lt;/span&gt;{\n            real&amp;#61;value;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setImage&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; value)&lt;/span&gt;&lt;/span&gt;{\n            image&amp;#61;value;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; real;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getImage&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; image;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n            cout&amp;lt;&amp;lt;real&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;image&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        }\n        &lt;span class=\"hljs-function\"&gt;complex &lt;span class=\"hljs-title\"&gt;add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; complex &amp;amp;a)&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt;&lt;/span&gt;{\n            complex b;\n            b.&lt;span class=\"hljs-built_in\"&gt;setReal&lt;/span&gt;(real&amp;#43;a.&lt;span class=\"hljs-built_in\"&gt;getReal&lt;/span&gt;());\n            b.&lt;span class=\"hljs-built_in\"&gt;setImage&lt;/span&gt;(image&amp;#43;a.&lt;span class=\"hljs-built_in\"&gt;getImage&lt;/span&gt;());\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; b;\n        }\n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;complex &lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;complex &lt;span class=\"hljs-title\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    complex c;\n    c&amp;#61;a.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(b);\n    c.&lt;span class=\"hljs-built_in\"&gt;display&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["运算符重载利用到多项式乘法中", ["#include ", "#include", "using namespace std;", "const int MAX_POLY = 20;", "int p[MAX_POLY], q[MAX_POLY], s[MAX_POLY * 2];", "int n1, n2;", "class Polynomial;", "\n", "class Polynomial{//多项式类", "\n", "public:", "    Polynomial();", "   void mulit_input();", "    void mulit_poly(int p[], int n1, int q[], int n2, int s[]);//添加一项,若有相同的指数项，则合并", "   void mulit_output();", "};", "\n", "void mulit_poly(int p[], int n1, int q[], int n2, int s[]) {", "    for (int i = 0; i < n1 + n2; i++) {", "        s[i] = 0;", "    }", "    for (int i = 0; i < n1; i++) {", "        for (int j = 0; j < n2; j++) {", "            s[i + j] += p[i] * q[j];", "        }", "    }", "}", "void mulit_input(){", "    cout << \"输入第一个多项式的个数：\";", "    cin >> n1;", "    cout << \"输入第二个多项式的个数：\";", "    cin >> n2;//输入第一行的个数", "    cout << \"输入第一个多项式的系数：\";", "    for (int i = n1 - 1; i >= 0; i--) {", "\n", "    cin >> p[i];", "//", "为第一列系数\n}\ncout << ", "\"P(x)= \"", ";\nbool first = true;\n", "for", " (int i = n1 + n2 - ", "1", "; i >= ", "0", "; i--) {", "//", "输出多项式\n    ", "if", " (p[i] != ", "0", ") {\n        ", "if", " (!first)", "//", "如果不是第一个\n            cout << ", "\"+\"", ";", "//", "输出+\n        cout << p[i];", "//", "输出第i项\n        ", "if", " (i != ", "0", ")", "//", "如果i不等于", "0", "输x^\n            cout << ", "\"x^\"", " << i;\n       first=false;\n    }\n}\ncout << ", "\"\\n\"", ";\ncout << ", "\"输入第二个多项式的系数：\"", " ;\n", "for", " (int i = n2 - ", "1", "; i >= ", "0", "; i--) {\n    \ncin >> q[i];", "//", "为第二列系数\n\n}\ncout << ", "\"Q(x)= \"", " ;\n", "\n", "   for (int i = n1 + n2 - 1; i >= 0; i--) {//输出多项式", "        if (q[i] != 0) {", "            if (!first)//如果不是第一个", "                cout << \"+\";//输出+", "            cout << q[i];//输出第i项", "            if (i != 0)//如果i不等于0输x^", "                cout << \"x^\" << i;", "             first=false;", "        }", "\n", "}\n", "\n", "   cout <<\"\\n\";", "}", "\n", "void mulit_output(){", "cout << \"输出两个多项式相乘的值\";", "cout << \"S(x)= \";", " bool first = true;", "    for (int i = n1 + n2 - 1; i >= 0; i--) {//输出多项式", "        if (s[i] != 0) {", "            if (!first)//如果不是第一个", "                cout << \"+\";//输出+", "            cout << s[i];//输出第i项", "            if (i != 0)//如果i不等于0输x^", "                cout << \"x^\" << i;", "            first = false;", "        }", "    }", "}", "int main()", "{", "\n", "mulit", "_input()", ";", "//输入", "\nmulit", "_poly(", "p", ", ", "n1", ", ", "q", ", ", "n2", ", ", "s", ")", ";", "//调用多项式函数", "\nmulit", "_output()", ";", "//输出", "\n", "\n", "}该如何修改"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第二行是初始化他的值&amp;#xff0c;因为如果不初始化的话&amp;#xff0c;循环里就没办法累加&amp;#xff0c;因为变量不存在&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["横向撰写乘法口诀 时的问题", ["for i in range(5,0,-1):", "    guguline=(\"\")", "    for k in range(1,6,1):", "      guguline=guguline+str(\"%2d*%2d=%2d\"%(i,k,i*k))", "    print(guguline)", "第二行出现的 \"guguline\" 不理解 想不明白为什么一定出现的原因"]], "Tag": "算法设计"}
{"Answer": "# 简单注释了一下，如果还有问题，留言。问题解决请采纳\r\n```\r\n#include&lt;iostream&gt;\r\n#include&lt;string&gt;\r\n#include&lt;cstdio&gt;\r\n \r\n \r\nusing namespace std;\r\n#define MAX 1010  \r\n \r\n \r\nint main()\r\n{\r\nstring std1, std2;\r\ncin&gt;&gt;std1&gt;&gt;std2;\r\nint length1 = std1.length();\r\nint length2 = std2.length();\r\nint a[MAX] = {0};\r\nint b[MAX] = {0};\r\nint result[2 * MAX] = {0};\r\nint i = 0, j = 0;\r\n//将字符串转移到数组中，以方便计算 ，注意是倒叙存储\r\n//即字符串123存为321，为的是将低位放在前面方便计算 \r\nfor(i = length1 - 1, j = 0; i &gt;= 0; i--, j++)\r\n{\r\na[j] = std1[i] - '0';\r\n}\r\nfor(i = length2 - 1, j = 0; i &gt;= 0; i--, j++)\r\n{\r\nb[j] = std2[i] - '0';\r\n}\r\n//将结果储存在 resullt中，result[i + j] = a[i] * b[j]是关键算法 \r\nfor(i = 0; i &lt; length1; i++)\r\n{\r\nfor(j = 0; j &lt; length2; j++)\r\n{\r\nresult[i + j] += a[i] * b[j];\r\n}\r\n}\r\n \r\n//从低位到高位进行进位\r\n \r\nfor(i = 0; i &lt; (length1+length2); i++)\r\n{\r\nif(result[i] &gt; 9)\r\n{\r\nresult[i+1] += result[i]/10;\r\nresult[i] %= 10; \r\n}\r\n}\r\n//将前导0全部剔掉，比如我们结果是236，在result中\r\n//是这样存储的63200……我们需要定位到第一个不为零的数，它的位置也就是i ，两数相乘，位数最多是两数位数之和\r\n \r\nfor(i = length1 + lengrh2; i &gt;= 0 ; i--)\r\n{\r\nif(result[i] == 0) continue;\r\nelse break;\r\n}\r\n//接着i继续输出，就是我们的结果 \r\nfor(; i &gt;=0; i--)\r\ncout&lt;&lt;result[i];\r\nreturn 0;\r\n}\r\n\r\n```", "Konwledge_Point": "乘法", "Question": ["C++超大整数结构体实现乘法，就像要个乘法，网上的看不懂，希望来回答的能多写点注释或者给我讲讲！菜鸟求大佬", ["#include <stdio.h>\n#include <iostream>\n#include <string.h>\n#include <stdlib.h>\n#include <algorithm>\nusing namespace std;\n//我们把输入的两个操作数放在结构体中方便解决 \n//首先，为了方便后面运算，我们先定义一个结构体把超长整数都定义为此类型 \nstruct doublelong{\n    int d[1000];\n    //定义一维数组D \n    int len;\n    //下面定义构造函数，初始化，给予长度 \n    doublelong(){\n        memset(d,0,sizeof(d));\n        //memset为初始化函数 数组d sizeof求出的d大小赋予空间 指向要填充的内存块d \n        //d用于存放 输入的两个操作数  \n        //全初始化为0 \n        len=0;\n    }\n}; \n//大整数使用字符串输入的，\n//下面将字符串储存的大整数\n//存放在结构体中\ndoublelong change(char str[]){\n    doublelong a;\n    a.len=strlen(str);//得出输入的大整数长度写入结构体中 \n    for(int i=0;i<a.len;i++){\n        a.d[i]=str[a.len-i-1]-'0';//这里把大整数的地位切换为高位 反序\n    }\n    return a; \n} \n//比较两个大整数的大小\nint compare(doublelong a,doublelong b){\n    int g;\n    //greater此处返回更大数字 g的值为1时a的值更大，2时b的值更大，为0时两个数字的值相等 \n    //由于我们此函数只比较两个输入数字的绝对值，由于运算方式是单独判断符号所以不对符号进行比较 \n    if(a.len>b.len){\n    g=1;return g;//a大于b\n    }\n    else if(a.len<b.len){\n        g=2;\n    return g;//a<b\n    }\n    else{\n        for(int i=a.len-1;i>=0;i++)\n        //一位位对比一位位读取向后读 \n        {\n            if(a.d[i]>b.d[i]) \n            {\n                g=1;return g;\n            }\n            if(a.d[i]<b.d[i]) {\n                g=2;return g;\n            }\n            if(a.d[i]=b.d[i]) {\n                g=0;return g;\n            }\n        }\n    } \n} \n//下面是大数的四则运算法则\ndoublelong add(doublelong a,doublelong b)\n{\n    doublelong c;\n    int carry=0;//这里的carry表示进位\n    for(int i=0;i<a.len||i<b.len;i++)\n    //循环向后读取相加 \n    {\n        int temp=a.d[i]+b.d[i]+carry;\n        c.d[c.len++]=temp%10;\n        //将我们相加得到的temp值给写入我们的输出大整数c中去 \n        carry=temp/10;//求是否有进位 \n    } \n    if(carry!=0)\n    {//如果最后一位的进位不为0，直接付给结果的最高位\n       c.d[c.len++] =carry;\n    }\n    return c;//程序结束返回doublelong c\n} \nvoid print(doublelong a)\n{\n    for(int i=a.len-1;i>=0;i--)\n    {\n        printf(\"%d\",a.d[i]);\n    }\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/464260666256171.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Complex&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; real;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; image;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; r, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i)\n    {\n        real &amp;#61; r; image &amp;#61; i;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; r)\n    {\n        real &amp;#61; r; image &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;()\n    {\n        real &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; image &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n \n    ~&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;()\n    {\n        &lt;span class=\"hljs-comment\"&gt;//do nothing&lt;/span&gt;\n    }\n    Complex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; *&amp;#61; (&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Complex Right) \n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; real, b &amp;#61; image;\n        real &amp;#61; a * Right.real - b * Right.image;\n        image &amp;#61; b * Right.real &amp;#43; a * Right.image;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n    }\n \n    Complex &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt; *&amp;#61; (&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n) \n    {\n        Complex &lt;span class=\"hljs-built_in\"&gt;t&lt;/span&gt;(n, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt; *&amp;#61; t;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex comp)&lt;/span&gt;&lt;/span&gt;;\n \n};\n \n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex comp)&lt;/span&gt;\n&lt;/span&gt;{\n    cout &amp;lt;&amp;lt; comp.real;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (comp.image &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        cout &amp;lt;&amp;lt; comp.image &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (comp.image &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        cout &amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; comp.image &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n}\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;c1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;c2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    \n    \n    &lt;span class=\"hljs-comment\"&gt;//显示C1&lt;/span&gt;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;c&amp;#61;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c1);\n \n    &lt;span class=\"hljs-comment\"&gt;//与int类型相乘&lt;/span&gt;\n    c1 *&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;c*&amp;#61;5,c&amp;#61;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c1);\n \n    \n    &lt;span class=\"hljs-comment\"&gt;//与复数相乘&lt;/span&gt;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;c*&amp;#61;4&amp;#43;5i,&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;t&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    c2 *&amp;#61; t;\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(c2);\n \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["定义复数类（Complex）,包含必要的构造函数和析构函数，重载乘法赋值运算符“*=”实现复数与整数，复数与复数之间的乘法运算，自行举例并按格式输出", ["#要求达到的效果：", "1.格式要求举例", "c=2+3i", "c*=5，c=10+15i", "c*=4+5i,c=-7+22i", "2.要求使用转换构造函数把整数转换为复数后进行运算", "3.遇到的问题：数学逻辑不清晰", "4.", "\n", "using", " ", "namespace", " std;\n\n", "class", " ", "Complex", "\n", "{", "public", ":\nComplex(){", "real", "=", "0", ";imag=", "0", ";}", "//定义构造函数", "\nComplex(", "double", " r,", "double", " i){", "real", "=r;imag=i;}", "//构造函数重载", "\nComplex operator*=(Complex &c2);\n", "void", " ", "display", "();\n", "private", ":\n    ", "double", " ", "real", ";\n    ", "double", " imag;\n};\nComplex Complex::operator*=(Complex &c1)\n{Complex c;\n    c.", "real", "=", "real", "*c1.", "real", "-imag*c1.imag;\n    c.imag=", "real", "*c1.imag+imag*c1.", "real", ";\n    \n", "return", " c;}\n", "void", " Complex::", "display", "()\n{cout<<", "\" \"", "<<", "real", "<<", "\"+\"", "<<imag<<", "\"i\"", "<<endl;}\n", "int", " main()\n{Complex c1(", "2", ",", "3", "),c2=(", "4", ",", "5", "),c3;\nc3=c1*=c2;\ncout<<", "\"c1*=\"", ";c1.", "display", "();\ncout<<", "\"c2*=\"", ";c2.", "display", "();\ncout<<", "\"c1*c2=\"", ";c3.", "display", "();\n", "return", " ", "0", ";\n}\n\n\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n, i, j;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;lt;&amp;#61;n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%dx%d&amp;#61;%2d&amp;#34;&lt;/span&gt;,j,i,i*j);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j!&amp;#61;i) &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["乘法口诀表。，~-！", ["感觉也没错啊，但是就是答案错误，求帮忙看看（。。快要疯啦", "！？纯属凑字数。。，-", "。）"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*\\t&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, j);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;) {\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n                }\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\t&amp;#34;&lt;/span&gt;, i);\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;lt;i; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n            }\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;i; j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, i*j);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;) {\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n                }\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["按如下格式，输出乘法口诀表", ["这种格式怎么输出？左上角还有乘号，不是几乘几等于几的形式，按如下格式输出口诀表"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;稍等&amp;#xff0c;帮你写一个&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n\ntypedef struct node\n{\n    int coef;\n    int &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;;\n    struct node* next;\n} Node;\n\nNode* create_node(int coef, int &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;)\n{\n    Node* new_node &amp;#61; (Node*)malloc(sizeof(Node));\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;new_node&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;#61; coef;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;new_node&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;new_node&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    return new_node;\n}\n\nNode* create_poly(int n)\n{\n    Node* head &amp;#61; NULL;\n    Node* tail &amp;#61; NULL;\n    int coef, &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (int i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n; i&amp;#43;&amp;#43;)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第%d项的系数和指数&amp;#xff1a;&amp;#34;&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;, &amp;amp;coef, &amp;amp;&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (coef !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            Node* new_node &amp;#61; create_node(coef, &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (head &amp;#61;&amp;#61; NULL)\n            {\n                head &amp;#61; new_node;\n                tail &amp;#61; new_node;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;tail&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; new_node;\n                tail &amp;#61; new_node;\n            }\n        }\n    }\n    return head;\n}\n\nvoid print_poly(Node* head)\n{\n    Node* p &amp;#61; head;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p &amp;#61;&amp;#61; NULL)\n    {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;0\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%dx^%d&amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;);\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p !&amp;#61; NULL)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34; &amp;#43; %dx^%d&amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;);\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n\nNode* poly_mult(Node* poly1, Node* poly2)\n{\n    Node* result &amp;#61; NULL;\n    Node* p1 &amp;#61; poly1;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p1 !&amp;#61; NULL)\n    {\n        Node* p2 &amp;#61; poly2;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p2 !&amp;#61; NULL)\n        {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt; coef &amp;#61; p1-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; * p2-&amp;gt;&lt;/span&gt;coef;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt; &amp;#61; p1-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;exp&lt;/span&gt; &amp;#43; p2-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;;\n            Node* q &amp;#61; result;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; (q !&amp;#61; NULL &amp;amp;&amp;amp; q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (q &amp;#61;&amp;#61; NULL)\n            {\n                Node* new_node &amp;#61; create_node(coef, &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;);\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;new_node&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; result;\n                result &amp;#61; new_node;\n            }\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (q-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;#43;&amp;#61; coef;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                Node* new_node &amp;#61; create_node(coef, &lt;span class=\"hljs-built_in\"&gt;exp&lt;/span&gt;);\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;new_node&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; new_node;\n            }\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p2&lt;/span&gt; &amp;#61; p2-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p1&lt;/span&gt; &amp;#61; p1-&amp;gt;&lt;/span&gt;next;\n    }\n    return result;\n}\n\nint main()\n{\n    int n1, n2;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第一个多项式的项数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n1);\n    Node* poly1 &amp;#61; create_poly(n1);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;第一个多项式为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    print_poly(poly1);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第二个多项式的项数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n2);\n    Node* poly2 &amp;#61; create_poly(n2);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;第二个多项式为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    print_poly(poly2);\n    Node* result &amp;#61; poly_mult(poly1, poly2);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;乘积为&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    print_poly(result);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["C语言用单链表实现一元多项式的乘法", ["输入两个一元多项式（指数从高到低），自定义项数，系数和指数，用单链表方法顺序输出求乘积后的多项式的各项系数和指数。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用   &amp;#39;\\t&amp;#39; 控制位置&lt;br /&gt;类似这样&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt;,end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;bbb&amp;#34;&lt;/span&gt;,end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;效果比空格好&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-bash\"&gt;for &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    for j in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;*&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt; ,end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;)\n    for j in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(i,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(i,j,i*j) , end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["乘法表的输出，空格不会打", ["不知道从第二行开始的空格怎么打，不知道后面的该怎么对齐", "不知道从第二行开始的空格怎么打，不知道后面的该怎么对齐", "\n", "不知道从第二行开始的空格怎么打，不知道后面的该怎么对齐"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;从上到下输出 8-i 个单位的空格。一个单位的空格&amp;#xff0c;根据每个口诀所占宽度来定&amp;#xff0c;大概是8个空格。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["做了一个九九乘法表，想知道怎么才能把九九乘法表的对角线从左上角到右下角变为从右上角到左下角", ["做了一个九九乘法表，想知道怎么才能把九九乘法表的对角线从左上角到右下角变为从右上角到左下角"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;递归&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用方法调用来做99乘法表", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;\"40,000\" is a string. When trying to multiply, PHP tries to convert it to an integer, encounters the comma (&lt;code&gt;,&lt;/code&gt;) and returns an error (but, oddly, then seems to continue the process using the int it got to before the comma)&lt;/p&gt;\n\n&lt;p&gt;One way would be to remove the comma before multiplying, then return it to &lt;code&gt;number format&lt;/code&gt; after the multiplication.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$newSalary = number_format(str_replace(\",\" , \"\", $value['salary']) * .30);\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["PHP变量在乘法后不显示0", ["\n\n", "Im stuck at this part of my code. So I am trying to get the 30% of a specific value but I am not getting the right output. please see value below.   ", "\n\n", "foreach($salary->getValues() as $key => $value) {\n    echo 'salary:       '.$value['salary'];\n    echo 'gross salary: '.$value['salary'] * .30;\n}\n", "\n\n", "lets assume that the salary array that we are getting is 40,000 (I am already getting this in my code) now multiply it .30 the answer must be 12,000. Therefore", "\n\n", "Expected Output:", "\n\n", "salary: 40,000 gross salary: 12,000\n", "\n\n", "What is happening", "\n\n", "salary: 40,000 gross salary: 12\n", "\n\n", "Help please", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;try this:&lt;/p&gt;\n\n&lt;p&gt;you are closing tr tag for each column. \nyou need to close tr tag after cloumn for loop.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;echo \"&amp;lt;table border=\\\"1\\\"&amp;gt;\";\n\n        for ($r =0; $r &amp;lt; $rows; $r++){\n\n            echo'&amp;lt;tr&amp;gt;';\n\n            for ($c = 0; $c &amp;lt; $cols; $c++)\n                echo '&amp;lt;td&amp;gt;' .$c*$r.'&amp;lt;/td&amp;gt;';\n           echo '&amp;lt;/tr&amp;gt;'; // close tr tag here\n\n        }\n\n  echo\"&amp;lt;/table&amp;gt;\";\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["使用php创建乘法表[关闭]", ["\n\n", "I'm trying to create multiplication table using php as follows:", "\n\n", "<?php\n\n$cols = 10;\n$rows = 10;\n?>\n", "\n\n", "... lot of html code ...", "\n\n", "<?php\n\necho \"<table border=\\\"1\\\">\";\n\n        for ($r =0; $r < $rows; $r++){\n\n            echo('<tr>');\n\n            for ($c = 0; $c < $cols; $c++)\n                echo( '<td>' .$c*$r.'</td></tr>');\n\n        }\n\n        echo(\"</table>\");\n\n?>\n", "\n\n", "I probably miss something but can't figure out what is it.", "\n\n", "Any advices would be appreciated, thanks!", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;One way to do this is by using a javascript code, so that the calculation is done locally in the browser's client, without the need to submit a form to the server:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;?php\nprint(\"&amp;lt;script&amp;gt;\");\nprint(\"function calculate(index) {;\");\nprint(\"     var meterd = document.getElementById('meter['+index+']');\");\nprint(\"     var weightd = document.getElementById('weight['+index+']');\");\nprint(\"     var amountd = document.getElementById('amount['+index+']');\");\nprint(\"     if (meterd &amp;amp;&amp;amp; weightd &amp;amp;&amp;amp; amountd) {;\");\nprint(\"         var meter = parseFloat(meterd.value); if (isNaN(meter)) {meter = 1;}\");\nprint(\"         var weight = parseFloat(weightd.value); if (isNaN(weight)) {weight = 0;}\");\nprint(\"         amountd.value = weight * 100 / meter;\");\nprint(\"     };\");\nprint(\"};\");\nprint(\"&amp;lt;/script&amp;gt;\");\n\nprint(\"&amp;lt;table&amp;gt;\");\nfor ($i=1; $i&amp;lt;=3; $i++) \n{\n    print(\"&amp;lt;tr&amp;gt;\");\n    print(\"&amp;lt;td&amp;gt;$i&amp;lt;/td&amp;gt;\");\n    print(\"&amp;lt;td&amp;gt;&amp;lt;input type='text' name='meter[$i]' class='meter' maxlength='21' id='meter[$i]' onkeyup='calculate($i)'/&amp;gt;&amp;lt;/td&amp;gt;\");\n    print(\"&amp;lt;td&amp;gt;&amp;lt;input type='text' name='weight[$i]' maxlength='21' class='weight' id='weight[$i]' size='10' onkeyup='calculate($i)'/&amp;gt;&amp;lt;/td&amp;gt;\");\n    print(\"&amp;lt;td&amp;gt;&amp;lt;input type='text' name='amount[$i]' maxlength='21' class='amount' id='amount[$i]' size='10' /&amp;gt;&amp;lt;/td&amp;gt;\");                  \n    print(\"&amp;lt;/tr&amp;gt;\");\n}\nprint(\"&amp;lt;/table&amp;gt;\");\n?&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Tested, it worked for me.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["用户输入两个单元格的php乘法", ["\n\n", "for ($i=1; $i<=3; $i++) \n{\nprint(\"<tr>\");\nprint(\"<td>$i</td>\");\n\nprint(\"<td><input type='text' name='meter[$i]' class='meter' maxlength='21' id='meter[$i]' /></td>\");\n                    print(\"<td><input type='text' name='weight[$i]' maxlength='21' class='weight' id='weight[$i]' size='10' /></td>\");\nprint(\"<td><input type='text' name='amount[$i]' maxlength='21' class='amount' id='amount[$i]' size='10' /></td>\");                  \nprint(\"</tr>\");\n}\n?>\n", "\n\n", "i want like this ", "\n\n", "if i enter 110 in meter and 10 in weight it should give me ans (10/110)*100;\nin each column", "\n\n", "(weight/meter)*100", "\n\n", "\n", "  meter  weight  output\n    110   | 10   |  9.09\n    120   | 12   |  10\n    130   | 14   |  10.76", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;顺序不同吧&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,b&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,c&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;a&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;a&amp;#43;&amp;#43;)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(b&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;b&amp;lt;&amp;#61;a;b&amp;#43;&amp;#43;)\n    {c&amp;#61;a*b;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;,  b,a, c);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);}\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表openjudge错在了哪里", ["{", "\n", "\n\n\n```", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a=", "1", ",b=", "1", ",c=", "1", ";\n    ", "for", "(a=", "1", ";a<", "10", ";a++)\n    {\n    ", "for", "(b=", "1", ";b<=a;b++)\n    {c=a*b;\n    ", "printf", "(", "\"%d*%d=%d\\t\"", ", a, b, c);\n    }\n    ", "printf", "(", "\"\\n\"", ");}\n    ", "return", " ", "0", ";\n}\n", "\n", "```", "}", "1."]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;package com;\n\n&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Main {\n\n    &lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        \n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;             99乘法表                &amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;   1  2  3  4  5  6  7  8  9&amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;____________________________________&amp;#34;);\n        &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println();\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(i &amp;#43; &amp;#34;| &amp;#34; &amp;#43; i * j &amp;#43; &amp;#34; &amp;#34;);\n                } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(i * j &amp;#43; &amp;#34; &amp;#34;);\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34; &amp;#34;);\n        }\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/434194023946120.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用Java写出下图的九九乘法表", ["已写了大概的代码，但不知道如何得出如图所示的结果", "    public static void main(String[] args) {", "\n", "    ", "for", "(", "int", " i=", "1", ";i<=", "9", ";i++){\n           ", "for", "(", "int", " j=", "1", ";j<=i;j++){\n               ", "System", ".", "out", ".print(j+\" \"+i+\"  \"+(i*j)+\"\\t\");\n           }\n           ", "System", ".", "out", ".println(\" \");\n       }\n}\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;大概是这样子&amp;#xff0c;一些小细节自己去改一下就好&amp;#xff0c;有帮助麻烦点个采纳【本回答右上角】&lt;/li&gt;&lt;/ul&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"language-xml\"&gt;\n\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;input1&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindinput&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleInput1&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;input1&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt; *\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;number&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;input2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindinput&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;handleInput2&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;value&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;input2&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;/&amp;gt;&lt;/span&gt; &amp;#61;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;bindtap&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;calculate&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;计算&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;  &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;result&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;wx:for&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;resultList&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=\"hljs-template-variable\"&gt;{&lt;!-- --&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-name\"&gt;item&lt;/span&gt;}}&lt;/span&gt;&lt;span class=\"language-xml\"&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;view&lt;/span&gt;&amp;gt;&lt;/span&gt;\n\n\n&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-title class_\"&gt;Page&lt;/span&gt;({\n  &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: {\n    &lt;span class=\"hljs-attr\"&gt;result&lt;/span&gt;: [],\n    &lt;span class=\"hljs-attr\"&gt;input1&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n    &lt;span class=\"hljs-attr\"&gt;input2&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,\n  },\n  &lt;span class=\"hljs-attr\"&gt;onLoad&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;log&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Welcome to Mini Code&amp;#39;&lt;/span&gt;)\n  },\n  &lt;span class=\"hljs-attr\"&gt;calculate&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; { input1, input2,resultList } &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;data&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (input1 &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt; || input2 &amp;#61;&amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;) {\n      wx.&lt;span class=\"hljs-title function_\"&gt;showToast&lt;/span&gt;({\n        &lt;span class=\"hljs-attr\"&gt;title&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;请输入正确的数字&amp;#39;&lt;/span&gt;,\n        &lt;span class=\"hljs-attr\"&gt;duration&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;2000&lt;/span&gt;,\n        &lt;span class=\"hljs-attr\"&gt;icon&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;warning&amp;#39;&lt;/span&gt;\n      });\n    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n     resultList.&lt;span class=\"hljs-title function_\"&gt;push&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#96;&lt;span class=\"hljs-subst\"&gt;${input1}&lt;/span&gt; * &lt;span class=\"hljs-subst\"&gt;${input2}&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-subst\"&gt;${input1 * &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; * input2}&lt;/span&gt;&amp;#96;&lt;/span&gt;)\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n     resultList\n    }, &lt;span class=\"hljs-function\"&gt;() &amp;#61;&amp;gt;&lt;/span&gt; {\n    wx.&lt;span class=\"hljs-property\"&gt;cloud&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;callFunction&lt;/span&gt;({\n      &lt;span class=\"hljs-attr\"&gt;name&lt;/span&gt;: &lt;span class=\"hljs-string\"&gt;&amp;#39;result&amp;#39;&lt;/span&gt;,\n      &lt;span class=\"hljs-attr\"&gt;data&lt;/span&gt;: resultList\n    }).&lt;span class=\"hljs-title function_\"&gt;then&lt;/span&gt;(&lt;span class=\"hljs-variable language_\"&gt;console&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;log&lt;/span&gt;)\n})\n    }\n  },\n  &lt;span class=\"hljs-attr\"&gt;handleInput1&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n      &lt;span class=\"hljs-attr\"&gt;input1&lt;/span&gt;: e.&lt;span class=\"hljs-property\"&gt;detail&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;\n    })\n  },\n  &lt;span class=\"hljs-attr\"&gt;handleInput2&lt;/span&gt;: &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; (&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable language_\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;setData&lt;/span&gt;({\n      &lt;span class=\"hljs-attr\"&gt;input2&lt;/span&gt;: e.&lt;span class=\"hljs-property\"&gt;detail&lt;/span&gt;.&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;\n    })\n  }\n})\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-css\"&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;input&lt;/span&gt; {\n  &lt;span class=\"hljs-attribute\"&gt;border&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;1px&lt;/span&gt; solid;\n  &lt;span class=\"hljs-attribute\"&gt;display&lt;/span&gt;: inline-block;\n  &lt;span class=\"hljs-attribute\"&gt;width&lt;/span&gt;: &lt;span class=\"hljs-number\"&gt;100pt&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/355903030436143.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["微信小程序input，button设置整数乘法", []], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;I recently &lt;a href=\"http://git.savannah.gnu.org/gitweb/?p=guile.git;a=commit;h=2355f01709eadfd5350c510cdb095b4e3f71f17c\" rel=\"noreferrer\"&gt;fixed&lt;/a&gt; this bug in Guile 2.0.  The bug came into existence when C compilers started optimizing out overflow checks, on the theory that if a signed integer overflow occurs then the behavior is unspecified and thus the compiler can do whatever it likes.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["Guile Scheme 解释器中奇怪的乘法行为", ["\n\n", "I was practicing Scheme in ", "Guile 1.8.8", " interpreter on OS X. I noticed something interesting.", "\n\n", "Here's ", "expt", " function which is basically does exponentiation ", "expt(b,n) = b^n", " :", "\n\n", " (define (square x) (* x x))\n (define (even? x) (= (remainder x 2) 0))\n (define (expt b n) \n      (cond ((= n 0) 1)\n        ((even? n) (square (expt b (/ n 2))))\n        (else (* b (expt b (- n 1))))\n      ))\n", "\n\n", "If I try it with some inputs", "\n\n", " > (expt 2 10)\n 1024\n > (expt 2 63)\n 9223372036854775808\n", "\n\n", "Here comes the strange part:", "\n\n", " > (expt 2 64)\n 0\n", "\n\n", "More strangely, until ", "n=488", " it stays at ", "0", ":", "\n\n", " > (expt 2 487)\n 0\n > (expt 2 488)\n 79916762888089401123.....\n > (expt 2 1000)\n 1071508607186267320948425049060....\n > (expt 2 10000)\n 0\n", "\n\n", "When I try this code with ", "repl.it", " online interpreter, it works as expected. So ", "what the hell is wrong with Guile", "?", "\n\n", "(Note: On some dialects, ", "remainder", " function is called as ", "mod", ".)", "\n    ", "\n\n", "转载于:https://stackoverflow.com/questions/14495636/strange-multiplication-behavior-in-guile-scheme-interpreter"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;while(1&amp;lt;&amp;#61;N&amp;amp;&amp;amp;N&amp;lt;&amp;#61;9)因为这个&amp;#xff0c;你输入大于0小于等于9的数一直满足条件所以一直进入循环了&amp;#xff0c;把while换成if&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么这个九九乘法表一直循环", ["#include <stdio.h>", "#include <stdlib.h>", "\n", "int main()", "{   int a,b,N;", "scanf(\"%d\",&N);", "   while(1<=N&&N<=9){", "    for(a=1;a<=N;a++){", "        for(b=1;b<=a;b++){", "         printf(\"%d*%d=%-4d   \",a,b,a*b); }", "      printf(\"\\n\");}", "    }", "\n", " return 0;  ", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你应该是搞错了&amp;#xff0c;题目应是这样的&amp;#xff1a;看图&lt;br /&gt;由于 自加 与自减 运算符 的优先级高于乘法运算符 所以上式可以变为 y&amp;#61;(x&amp;#43;&amp;#43;)&lt;em&gt;(x&amp;#43;&amp;#43;); y&amp;#61;(--y)&lt;/em&gt;(--y); 第一步 x&amp;#43;&amp;#43; 是先引用 后自加 所以 y&amp;#61;(x&amp;#43;&amp;#43;)&lt;em&gt;(x&amp;#43;&amp;#43;); 就相当于 y&amp;#61;5&lt;/em&gt;5&amp;#xff1b;此时 x&amp;#61;7&amp;#xff0c;y&amp;#61;25 第二步 --y 是 先自减 后引用 所以 y经过两次自减 y&amp;#61;23 所以 y&amp;#61;23*23&amp;#61;529 选A&lt;br /&gt;望采纳&amp;#xff01; &lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/160049712776149.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言的题，自加自减混着乘法", ["救命啊，真的搞不懂", "\n", "C语言的题", "设x,y 为int型变量，则执行下列语句后，y的值是（ ）", "x=5;", "y=x++", "x++;", "y=--y", "--y;", "A．529", "B．2401", "C．1209", "D．625", "\n", "我运行之后是784，但是没有这个答案，在百度找到的说529，还有说800多。答案是A529,真的看不懂啊"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;no. you would have to define a callback function to use &lt;code&gt;array_reduce&lt;/code&gt;. this would even get longer but make the code better reusable.&lt;/p&gt;\n\n&lt;p&gt;EDIT: Didn't write PHP for a long time but this should do it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function sum_total_price_of_items($sum, $item) {\n    return $sum + $item['price'] * $item['quantity']\n}\necho array_reduce($myarray, \"sum_total_price_of_items\", 0)\n&lt;/code&gt;&lt;/pre&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["PHP中的多维数组，乘法和加法", ["\n\n", "I have a multidimensional array as follows:", "\n\n", "Array(\n    [0] => Array\n        (\n            [name] => item 1\n            [quantity] => 2\n            [price] => 20.00\n        )\n\n    [1] => Array\n        (\n            [name] => item 2\n            [quantity] => 1\n            [price] => 15.00\n        )\n\n    [2] => Array\n        (\n            [name] => item 3\n            [quantity] => 4\n            [price] => 2.00\n        )\n\n)\n", "\n\n", "I need the 'grand total' of all these items. Now clearly I could get these by doing the following:", "\n\n", "$grand_total = 0;\nforeach ($myarray as $item) {\n    $grand_total += $item['price'] * $item['quantity'];\n}\necho $grand_total;\n", "\n\n", "My question is - can this be done in less lines of code using any of the array functions in PHP?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Identifier is automatically mapped as &lt;code&gt;_id&lt;/code&gt; field therefore there can be only 1 field mapped as &lt;code&gt;@Id&lt;/code&gt;. &lt;/p&gt;\n\n&lt;p&gt;Done similar things in the past and I'd suggest keeping &lt;code&gt;\\MongoId&lt;/code&gt; as document identifier and generating incremented &lt;code&gt;customerId&lt;/code&gt; in your code instead of relying on ODM to do so. Making such generator is pretty straightforward, you need to hook into persisting document (be it in your domain code, which I advice, or leveraging &lt;code&gt;prePersist&lt;/code&gt; event) and write generator similar to ODM's &lt;a href=\"https://github.com/doctrine/mongodb-odm/blob/a250f14f899931fcb21ee0af6d2e490f589b2051/lib/Doctrine/ODM/MongoDB/Id/IncrementGenerator.php#L53\" rel=\"nofollow noreferrer\"&gt;IncrementGenerator&lt;/a&gt;.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["Symfony，ODM：如何设置乘法ID注释", ["\n\n", "So the question is how to provide two or more identifiers keys? I couldn't find any answers on this question in google search... Here is example:", "\n\n", "class Customer\n{\n    /**\n     * @ODM\\Id\n     *\n     * @JMS\\Expose\n     * @JMS\\Type(\"string\")\n     *\n     */\n    protected $id;\n\n    /**\n     * @var integer\n     * @ODM\\Id(strategy=\"INCREMENT\")\n     *\n     * @JMS\\Expose\n     * @JMS\\Type(\"integer\")\n     *\n     */\n    protected $customerId;\n", "\n\n", "So in this case I have second id which increment as I wrote, but first id became null. If I remove and write just ", "* @ODM\\Field(type=\"integer\")", " everything is ok, but no increment of ", "customerId", ". So how can I have to ids in document? Or I'm wrong and I don't do this?", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Dolynomial&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; Node first;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; Node last;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; N;\n\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; coef;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; expo;\n        Node next;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;boolean&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;isEmpty&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;N&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;size&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; N;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;enqueue&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; coef, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; expo)&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;Node&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;oldlast&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; last;\n        last &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;();\n        last.coef &amp;#61; coef;\n        last.expo &amp;#61; expo;\n        last.next &amp;#61; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(N &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            first &amp;#61; last;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            oldlast.next &amp;#61; last;\n        N&amp;#43;&amp;#43;;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;//读入一个多项式&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; Dolynomial &lt;span class=\"hljs-title function_\"&gt;read&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;Dolynomial&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;temp&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Dolynomial&lt;/span&gt;();\n        &lt;span class=\"hljs-type\"&gt;Scanner&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;sc&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Scanner&lt;/span&gt;(System.in);\n        System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入整数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;coef&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; sc.nextInt();\n        temp.enqueue(coef, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; temp;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Dolynomial &lt;span class=\"hljs-title function_\"&gt;multi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Dolynomial D1, Dolynomial D2)&lt;/span&gt; {\n        &lt;span class=\"hljs-type\"&gt;Dolynomial&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;temp&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Dolynomial&lt;/span&gt;();\n        &lt;span class=\"hljs-type\"&gt;Node&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;node1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; D1.first;\n        &lt;span class=\"hljs-type\"&gt;Node&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;node2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; D2.first;\n\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; D1.size();\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; D2.size();\n\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(n2-- &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            temp.enqueue(node1.coef * node2.coef, node1.expo &amp;#43; node2.expo);\n            node2 &amp;#61; node2.next;\n        }\n\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(--n1 &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-type\"&gt;Node&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;node3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; temp.first;\n            node1 &amp;#61; node1.next;\n            node2 &amp;#61; D2.first;\n            n2 &amp;#61; D2.size();\n\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(n2 &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                &lt;span class=\"hljs-comment\"&gt;//System.out.println(&amp;#34;这个也一样哦&amp;#xff01;&amp;#34;);&lt;/span&gt;\n                &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; node1.coef * node2.coef;\n                &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; node1.expo &amp;#43; node2.expo;\n                &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(node3.next !&amp;#61; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt; &amp;amp;&amp;amp; node3.next.expo &amp;gt; e)\n                    node3 &amp;#61; node3.next;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(node3.next !&amp;#61; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt; &amp;amp;&amp;amp; node3.next.expo &amp;#61;&amp;#61; e) {\n                    &lt;span class=\"hljs-comment\"&gt;//指数相等&amp;#xff0c;直接相加&lt;/span&gt;\n                    node3.next.coef &amp;#43;&amp;#61; c;\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(node3.next.coef &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                        node3 &amp;#61; node3.next.next;\n                    }\n                } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    &lt;span class=\"hljs-comment\"&gt;//插入节点&lt;/span&gt;\n                    &lt;span class=\"hljs-type\"&gt;Node&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;p&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Node&lt;/span&gt;();\n                    p.coef &amp;#61; c;\n                    p.expo &amp;#61; e;\n                    p.next &amp;#61; node3.next;\n                    node3.next &amp;#61; p;\n                    temp.N&amp;#43;&amp;#43;;\n                }\n\n                n2--;\n                node2 &amp;#61; node2.next;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; temp;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * &lt;span class=\"hljs-doctag\"&gt;&amp;#64;param&lt;/span&gt; args\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n        Dolynomial d1, d2, result1, result2;\n        d1 &amp;#61; read();\n        d2 &amp;#61; read();\n        result2 &amp;#61; d1.multi(d1, d2);\n        &lt;span class=\"hljs-type\"&gt;Node&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;temp2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; result2.first;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (; temp2 !&amp;#61; &lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;; temp2 &amp;#61; temp2.next) {\n            System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;结果&amp;#xff1a;&amp;#34;&lt;/span&gt;&amp;#43;temp2.coef);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/504740125846156.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["链表实现两个整数的乘法算法（Java）", ["无从下手，三位数和三位数相乘是一个规律，三位数和两位数相乘就变了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1/3放在前面&amp;#xff0c;就会先计算1/3&amp;#xff0c;而这个数都是int型的&amp;#xff0c;结果为0&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C++含有分数的乘法分数能放在前面吗", ["如题，想问一下，为什么1/3不可以放在前面，是有什么讲究吗？", "\n"]], "Tag": "算法设计"}
{"Answer": "不知道你这个问题是否已经解决, 如果还没有解决的话: &lt;br /&gt;&lt;ul&gt;&lt;li&gt;这有个类似的问题, 你可以参考下: &lt;a href=\"https://ask.csdn.net/questions/924953?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;https://ask.csdn.net/questions/924953&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;你也可以参考下这篇文章&amp;#xff1a;&lt;a href=\"https://blog.csdn.net/YJG7D314/article/details/87433333?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;C语言 输入一行字符&amp;#xff0c;统计其中有多少个单词 和 有三个字符串&amp;#xff08;网上找的代码有瑕疵已解决&amp;#xff09;&amp;#xff0c;找出其中最大者的完整代码及分析过程&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;除此之外, 这篇博客: &lt;a href=\"https://blog.csdn.net/kasalala/article/details/104724768?utm_source&amp;#61;csdn_ai_ada_ask_robot\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;font size=\"3\"&gt;C Prime Plus中文第六版编程题——第十四章练习&lt;/font&gt;&lt;/a&gt;中的 &lt;strong&gt;巨人航空公司&amp;#xff08;编程练习 8&amp;#xff09;需要另一架飞机&amp;#xff08;容量相同&amp;#xff09;&amp;#xff0c;每天飞4 班&amp;#xff08;航班 102、311、444 和519&amp;#xff09;。把程序扩展为可以处理4个航班。用一个顶层菜单提供航班选择和退出。选择一个特定航班&amp;#xff0c;就会出现和编程练习8类似的菜单。但是该菜单要添加一个新选项&amp;#xff1a;确认座位分配。而且&amp;#xff0c;菜单中的退出是返回顶层菜单。每次显示都要指明当前正在处理的航班号。另外&amp;#xff0c;座位分配显示要指明确认状态。&lt;/strong&gt; 部分也许能够解决你的问题, 你可以仔细阅读以下内容或者直接跳转源博客中阅读: &lt;br /&gt;\n&lt;hr /&gt;\n&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;如果你已经解决了该问题, 非常希望你能够分享一下解决方案, 写成博客, 将相关链接放在评论区, 以帮助更多的人 ^-^", "Konwledge_Point": "乘法", "Question": ["关于#c语言#的问题：高精度乘法", ["我在网课上看到可以用变量给数组的长度赋值，但C Primer Plus上说用变量给数组长度赋值后，数组的长度已经就确定了，就是可以用变量的值给数组长度初始化，但是不能用来修改数组长度，我有点疑惑，就在高精度乘法里面试了一下，发现可以运行但是算的结果是不对的，想问一下大家，这串代码除了数组长度外还有什么问题吗，为什么网课里的可以正常运行，我的不行呢，谢谢大家！", "\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "#", "define", " MAXLEN 1000", "\n", "int", " ", "main", "(", "void", ")", "\n", "{\n", "char", " str1[MAXLEN],str2[MAXLEN];\n", "int", " na,nb,nc;\n", "int", " i,j,k;\n\n", "scanf", "(", "\"%s%s\"", ",str1,str2);\n\nna=", "strlen", "(str1);\nnb=", "strlen", "(str2);\nnc=na+nb+", "1", ";\n", "int", " c[nc];\n", "memset", "(c,", "0", ",", "sizeof", "(c));\n", "int", " a[na],b[nb];\n\n", "for", "(i=", "0", ",j=na", "-1", ";j>=", "0", ";j--)\na[i]=str1[j]-", "'0'", ";\n\n", "for", "(i=", "0", ",j=nb", "-1", ";j>=", "0", ";j--)\nb[i]=str2[j]-", "'0'", ";\n\n\n", "for", "(i=", "0", ",k=i+j;i<na;i++)\n{\n    ", "for", "(j=", "0", ";j<nb;j++)\n    {  \n        c[k]=a[i]*b[j]%", "10", ";\n        c[k+", "1", "]+=a[i]*b[j]/", "10", ";\n    }\n}\nnc++;\n\n", "for", "(i=nc", "-1", ";i>=", "0", ";i--)\n{\n    ", "if", "(c[i]==", "0", ")\n    nc--;\n}\n", "for", "(i=nc", "-1", ";i>=", "0", ";i--)\n    ", "printf", "(", "\"%d\\n\"", ",c[i]);\n    ", "printf", "(", "\"Done!!!\"", ");\n\n", "return", " ", "0", ";\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-comment\"&gt;#第一种&amp;#xff1a;手动输入天数&lt;/span&gt;\nwage &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;每个月工资多少元&amp;#39;&lt;/span&gt;)\n\nconsume &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;每天消费多少钱&amp;#xff1f;&amp;#39;&lt;/span&gt;)\n\nday &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;多少天: &amp;#34;&lt;/span&gt;)\n\nsurplus &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(wage) - &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(consume)* day\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{}天后我还剩余&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(day)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(surplus),&lt;span class=\"hljs-string\"&gt;&amp;#39;元&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-comment\"&gt;#第二种&amp;#xff0c;真·随机天数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; random\nwage &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;每个月工资多少元&amp;#39;&lt;/span&gt;)\n\nconsume &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;每天消费多少钱&amp;#xff1f;&amp;#39;&lt;/span&gt;)\n\na &amp;#61; random.randint(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;31&lt;/span&gt;)\n\nsurplus &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(wage) - &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;(consume)* a\n\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;{}天后我还剩余&amp;#39;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(a)&amp;#43;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(surplus),&lt;span class=\"hljs-string\"&gt;&amp;#39;元&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["乘法运算中怎么样将天数改成随机变量", ["怎么样将天数改成随机变量？", "\n", "问题相关代码", "\n", "wage = input('每个月工资多少元')", "\n", "consume = input('每天消费多少钱？')", "\n", "surplus = float(wage) - float(consume)*31", "\n", "print('20天后我还剩余'+str(surplus),'元')", "\n", "运行结果及报错内容 ", "\n", "每个月工资多少元10000", "每天消费多少钱？100", "20天后我还剩余7000.0 元", "没算出20天的剩余金额", "\n", "我想要达到的结果", "怎么样让天数成为随机变量呢，比如20天，15天？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在python中数字&lt;em&gt;数字是乘法运算&amp;#xff0c;数字&lt;/em&gt;字符串是重复多少次&amp;#xff0c;而input函数输入的值默认是字符串在input下面加一句int(r)就是乘法运算&amp;#xff0c;不转是字符串重复多少次&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["*如何确定是乘法运算还是乘以三遍", ["我执行左边的程序，输入3得到333", "而再执行底下一个程序得到9", "这两个有什么区别吗"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;pre&gt;&lt;code&gt;$update_subject_statement4 = \"UPDATE \".$track_table_name.\"\n\nSET `\".$subject_column.\"` = ROUND(IF(`\".$subject_column.\"_theory`='ab',0,`\".$subject_column.\"_theory`) * 7 / 10) \nWHERE\nevaluation_division=\".\"'$eval_div' \nAND evaluation_config_id = \".$config_id.\" \nAND stream_index = \".$stream_index;   \n\n$additional_sum_update_query = $this-&amp;gt;db-&amp;gt;query($update_subject_statement4);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;strong&gt;1st:&lt;/strong&gt; we &lt;a href=\"https://dev.mysql.com/doc/refman/5.6/en/arithmetic-functions.html#operator_times\" rel=\"nofollow\"&gt;multiplied&lt;/a&gt; your value with &lt;strong&gt;7/10&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;IF(&lt;code&gt;\".$subject_column.\"_theory&lt;/code&gt;='ab',0,&lt;code&gt;\".$subject_column.\"_theory&lt;/code&gt;) &lt;strong&gt;* 7 / 10&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2nd:&lt;/strong&gt; we &lt;a href=\"https://dev.mysql.com/doc/refman/5.6/en/mathematical-functions.html#function_round\" rel=\"nofollow\"&gt;rounded&lt;/a&gt; it&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;ROUND(&lt;/strong&gt; IF(&lt;code&gt;\".$subject_column.\"_theory&lt;/code&gt;='ab',0,&lt;code&gt;\".$subject_column.\"_theory&lt;/code&gt;) * 7 / 10 &lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["通过乘法和四舍五入更新列值", ["\n\n", "i want to multiply my db column( ", "\".$subject_column.\"_theory", ") value with 10/7(\nmy subject total is 70, and i want to convert it to 100 for finding the grade.)\nalso after multiplication the result must be rounded off", "\n\n", "    $update_subject_statement4 = \"UPDATE \".$track_table_name.\"\n\n    SET `\".$subject_column.\"` =IF(`\".$subject_column.\"_theory`='ab',0,`\".$subject_column.\"_theory`) WHERE\n                                     evaluation_division=\".\"'$eval_div' AND evaluation_config_id = \".$config_id.\" AND stream_index = \".$stream_index;   \n                                    $additional_sum_update_query = $this->db->query($update_subject_statement4);\n", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;全部用C语言试试&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;\nusing namespace std;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;,ans&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; ;\n    char fu;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;cin &amp;gt;&amp;gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;;\n    scanf_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(scanf_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c&amp;#34;&lt;/span&gt;,&amp;amp;fu))\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(fu&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;cin &amp;gt;&amp;gt; &lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;;\n            scanf_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(fu&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;)\n            {\n                ans&amp;#61;ans&amp;#43;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;;\n               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;   &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;当为加的时候&amp;#xff0c;执行到这里的时候就需要用&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;出&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;循环&amp;#xff0c;不然就输出不了结果\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(fu&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;*&lt;span class=\"hljs-keyword\"&gt;y&lt;/span&gt;;\n               &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;当为*的时候&amp;#xff0c;执行到这里的时候就需要用&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;出&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;循环&amp;#xff0c;不然就输出不了结果\n            }\n        }\n    }\n    ans&amp;#61;ans&amp;#43;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;;\n    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;cout &amp;lt;&amp;lt;ans&amp;lt;&amp;lt; endl;\n    printf_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d\\n&amp;#34;&lt;/span&gt;,ans);\n    &lt;span class=\"hljs-keyword\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["输入一行只包含加法和乘法的算式，输出结果", ["为什么在vs运行不了？", "提交到OJ系统显示超时？为什么呀到底是为什么？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;CUDA_R_32F数据类型与double不匹配&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["刚学cusparse库，做spmv乘法时代码没报错没有得到自己想要的结果", ["#include <stdio.h>", "#include <stdlib.h>", "#include <assert.h>", "#include <cuda_runtime.h>", "#include <cusparse.h>", "\n", "// error check macros", "#define CUSPARSE_CHECK(x) {cusparseStatus_t _c=x; if (_c != CUSPARSE_STATUS_SUCCESS) {printf(\"cusparse fail: %d, line: %d\\n\", (int)_c, ", "LINE", "); exit(-1);}}", "\n", "#define cudaCheckErrors(msg) ", "    do { ", "        cudaError_t __err = cudaGetLastError(); ", "        if (__err != cudaSuccess) { ", "            fprintf(stderr, \"Fatal error: %s (%s at %s:%d)\\n\", ", "                msg, cudaGetErrorString(__err), ", "                ", "FILE", ", ", "LINE", "); ", "            fprintf(stderr, \"*** FAILED - ABORTING\\n\"); ", "            exit(1); ", "        } ", "    } while (0)", "\n", "int main()", "{", "    const int n = 3;", "    const int nnzA = 5;", "    const double h_valA[nnzA] = { 3.0, 2.0, 2.0, 2.0, 1.0 };", "    const int h_csrColIndA[nnzA] = { 0, 2, 1, 0, 2 };", "    const int h_csrRowPtrA[n+1] = { 0, 2, 3, 5 };", "    const double h_b[n] = { 3.5, 1.5, 2.0 };", "    int y[n] = { 0.0, 0.0, 0.0 };", "\n", "//CSR format of matrix A and Vector b (device)", "\n", "double", "* valA;\n", "int", "* csrRowPtrA;\n", "int", "* csrColIndA;\n", "double", "* b;\n", "double", "* Y;\n\n", "cudaMalloc", "((", "void", "**)&valA, nnzA * ", "sizeof", "(", "double", "));\n", "cudaMalloc", "((", "void", "**)&csrRowPtrA, (n + ", "1", ") * ", "sizeof", "(", "int", "));\n", "cudaMalloc", "((", "void", "**)&csrColIndA, nnzA * ", "sizeof", "(", "int", "));\n", "cudaMalloc", "((", "void", "**)&b, n * ", "sizeof", "(", "double", "));\n", "cudaMalloc", "((", "void", "**)&Y, n * ", "sizeof", "(", "double", "));\n", "cudaCheckErrors", "(", "\"cudaMalloc fail\"", ");\n\n", "cudaMemcpy", "(valA, h_valA, (", "size_t", ")(nnzA * ", "sizeof", "(", "double", ")), cudaMemcpyHostToDevice);\n", "cudaMemcpy", "(csrRowPtrA, h_csrRowPtrA, (", "size_t", ")((n + ", "1", ") * ", "sizeof", "(", "int", ")), cudaMemcpyHostToDevice);\n", "cudaMemcpy", "(csrColIndA, h_csrColIndA, (", "size_t", ")(nnzA * ", "sizeof", "(", "int", ")), cudaMemcpyHostToDevice);\n", "cudaMemcpy", "(b, h_b, (", "size_t", ")(n * ", "sizeof", "(", "double", ")), cudaMemcpyHostToDevice);\n", "cudaMemcpy", "(Y, y, (", "size_t", ")(n * ", "sizeof", "(", "double", ")), cudaMemcpyHostToDevice);\n", "cudaCheckErrors", "(", "\"cudaMemcpy fail\"", ");\n\n", "float", "      alpha = ", "1.0f", ";\n", "float", "      beta = ", "0.0f", ";\n\ncusparseHandle_t handle = ", "NULL", ";\ncusparseSpMatDescr_t matA;\ncusparseDnVecDescr_t vecX, vecY;\n", "void", "* dBuffer = ", "NULL", ";\n", "size_t", "               bufferSize = ", "0", ";\n", "CUSPARSE_CHECK", "(", "cusparseCreate", "(&handle));\n", "CUSPARSE_CHECK", "(", "cusparseCreateCsr", "(&matA, n, n, nnzA, csrRowPtrA, csrColIndA, valA,\n    CUSPARSE_INDEX_32I, CUSPARSE_INDEX_32I, CUSPARSE_INDEX_BASE_ZERO, CUDA_R_32F));\n\n", "CUSPARSE_CHECK", "(", "cusparseCreateDnVec", "(&vecX, n, b, CUDA_R_32F));\n\n", "CUSPARSE_CHECK", "(", "cusparseCreateDnVec", "(&vecY, n, Y, CUDA_R_32F));\n\n", "CUSPARSE_CHECK", "(", "cusparseSpMV_bufferSize", "(handle, CUSPARSE_OPERATION_NON_TRANSPOSE, &alpha, matA, vecX, &beta, vecY, CUDA_R_32F, CUSPARSE_MV_ALG_DEFAULT, &bufferSize));\n\n", "cudaMalloc", "(&dBuffer, bufferSize);\n", "cudaCheckErrors", "(", "\"cudaMalloc fail\"", ");\n", "CUSPARSE_CHECK", "(", "cusparseSpMV", "(handle, CUSPARSE_OPERATION_NON_TRANSPOSE, &alpha, matA, vecX, &beta, vecY, CUDA_R_32F, CUSPARSE_MV_ALG_DEFAULT, dBuffer));\n\n\n", "CUSPARSE_CHECK", "(", "cusparseDestroySpMat", "(matA));\n", "CUSPARSE_CHECK", "(", "cusparseDestroyDnVec", "(vecX));\n", "CUSPARSE_CHECK", "(", "cusparseDestroyDnVec", "(vecY));\n", "CUSPARSE_CHECK", "(", "cusparseDestroy", "(handle));\n\n", "cudaMemcpy", "(y, Y, n * ", "sizeof", "(", "double", "), cudaMemcpyDeviceToHost);\n", "cudaCheckErrors", "(", "\"cudaMemcpy fail\"", ");\n", "for", " (", "int", " i = ", "0", "; i < n; i++)\n{\n    ", "printf", "(", "\"x[%i] = %f\\n\"", ", i, y[i]);\n}\n", "cudaFree", "(dBuffer);\n", "cudaFree", "(csrRowPtrA);\n", "cudaFree", "(csrColIndA);\n", "cudaFree", "(valA);\n", "cudaFree", "(Y);\n", "cudaFree", "(b);\n\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;for (j &amp;#61; 0; j &amp;lt; b2; j&amp;#43;&amp;#43;)&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        b1[b2 - i] &amp;#61; b[i] - &amp;#39;0&amp;#39;;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;改为&lt;br /&gt;for (j &amp;#61; 0; j &amp;lt; b2; j&amp;#43;&amp;#43;)&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    {&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        b1[b2 - j] &amp;#61; b[j] - &amp;#39;0&amp;#39;;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;br /&gt;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&lt;br /&gt;用错i和j了啊&amp;#xff0c;这个改过来就对了。还是要细心一些 &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言高精度乘法已写代码找错并纠正", ["\n", "#include <stdio.h>", "#include <string.h>", "int main()", "{", "    char a[200]={0}, b[200]={0};", "    int a1[201]={0}, b1[201]={0}, c[402]={0};", "    int i, j;", "    scanf(\"%s%s\", a, b);", "    int a2 = strlen(a), b2 = strlen(b);", "    int c2 = b2 + a2;", "    for (i = 0; i < a2; i++)", "    {", "        a1[a2 - i] = a[i] - '0';", "    }", "    for (j = 0; j < b2; j++)", "    {", "        b1[b2 - i] = b[i] - '0';", "    }", "    for (i = 1; i <= a2; i++)", "    {", "        for (j = 1; j <= b2; j++)", "        {", "            c[i + j - 1] += a1[i] * b1[j];", "            c[i + j] += c[i + j - 1] / 10;", "            c[i + j - 1] %= 10;", "        }", "    }", "    if (c[c2] == 0 && c2>0)", "        c2--;", "    for (i = c2; i >= 1; i--)", "    {", "        printf(\"%d\", c[i]);", "    }", "    return 0;", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;需要使用双层循环&amp;#xff0c;我这儿有个更简单的&amp;#xff0c;您可以看一看&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;, i, j, i * j);\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt; ( &lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt; );\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;br /&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/306265219266195.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["99乘法表，请帮我看看哪里出错了", ["\n", "\n", "\n", "\n{\n", "int", " n;\nscanf_s(", "\"%d\"", ", &n);\n", "int", " b = ", "1", ";\n", "int", " c = ", "1", ";\n", "for", " (c=", "1", "; c <= n; c++) {\n    b = ", "1", ";\n    ", "while", " (b <= c) {\n        ", "printf", "(", "\"%d*%d=%d\"", ", b, c, b*c);\n        ", "if", " (b*c<= ", "9", ") {\n            ", "printf", "(", "\"   \"", ");\n        }\n        ", "else", " {\n            ", "printf", "(", "\"  \"", ");\n        }\n        ", "if", " (b = c) {\n            ", "printf", "(", "\"\\n\"", ");\n            ", "break", ";\n        }\n        ", "else", "{\n            b++;\n        }\n    }\n}\n", "return", " ", "0", ";\n}\n应该是图三这种形式，请问是哪里出错了？\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d,b,n;\n    cin&amp;gt;&amp;gt;d&amp;gt;&amp;gt;b&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[n];\n    a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;#61;d;\n    a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#61;b;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;n) {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x&amp;#61;a[j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]*a[j&lt;span class=\"hljs-number\"&gt;-2&lt;/span&gt;];\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) {\n            a[i&amp;#43;&amp;#43;]&amp;#61;x;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(x&amp;gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;&amp;amp;&amp;amp;x&amp;lt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) {\n            a[i&amp;#43;&amp;#43;]&amp;#61;x/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            a[i&amp;#43;&amp;#43;]&amp;#61;x%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n        j&amp;#43;&amp;#43;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k&amp;lt;n; k&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k)\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;;\n        cout&amp;lt;&amp;lt;a[k];\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["乘法口诀数列执行出一个很大的负数", ["\n", "\n\n#include <iostream>\nusing namespace std;\nint main(){\n    int a1,a2,n,a[", "1000", "];\n    cin>>a1>>a2>>n;\n    for(int i=", "0", ";i<n;i++){\n        a[", "0", "]=a1;\n        a[", "1", "]=a2;\n        a[i+", "2", "]=a[i]*a[i+", "1", "];\n        if(a[i+", "2", "]>=", "10", "){\n            a[i+", "3", "]=a[i+", "2", "]", "%10;", "\n            a[i+", "2", "]=a[i+", "2", "]/", "10", ";\n        }\n  if(i=n", "-1", "){\n   cout<<a[i];\n  }\n  else{\n   cout<<a[i]<<", "\" \"", ";\n  }\n }\n return ", "0", ";\n}\n", "\n", "为什么执行出的结果是一个很大的负数呢？求解"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你好&amp;#xff0c;代码供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-attribute\"&gt;h&lt;/span&gt; &amp;#61; perms(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;s1&lt;/span&gt; &amp;#61; (h(:,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&amp;#43;h(:,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;h(:,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;));\n&lt;span class=\"hljs-attribute\"&gt;s2&lt;/span&gt; &amp;#61; h(:,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;s3&lt;/span&gt; &amp;#61; h(:,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;&amp;#43;h(:,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&amp;#43;h(:,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;)*&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&amp;#43;h(:,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;q&lt;/span&gt; &amp;#61; s1.*s2&amp;#61;&amp;#61;s3;\n&lt;span class=\"hljs-attribute\"&gt;fprintf&lt;/span&gt;(&amp;#39;    \\t三位数   \\t一位数   \\t 四位数\\n&amp;#39;)\n&lt;span class=\"hljs-attribute\"&gt;disp&lt;/span&gt;([s1(q), s2(q), s3(q)])\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;结果&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;        三位数       一位数        四位数\n        &lt;span class=\"hljs-number\"&gt; 582 &lt;/span&gt;         &lt;span class=\"hljs-number\"&gt; 3 &lt;/span&gt;       1746\n        &lt;span class=\"hljs-number\"&gt; 453 &lt;/span&gt;         &lt;span class=\"hljs-number\"&gt; 6 &lt;/span&gt;       2718\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;有帮助望采纳哦&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["使用matlab实现三位数的构造以及数字的乘法", ["如何使用matlab实现以上程序"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;单循环打印99乘法表&amp;#xff0c;挺有创意的。&lt;br /&gt;程序第3行改为n&amp;#43;1,第10行改为n&amp;#43;1即可。&lt;br /&gt;运行结果 &amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/189794950766182.JPG\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;hr /&gt;\n&lt;p&gt;完整程序&amp;#xff1a;&lt;br /&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/p&gt;\n&lt;p&gt;int main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;int i,j;&lt;br /&gt;int n;&lt;br /&gt;int product;&lt;/p&gt;\n&lt;p&gt;i &amp;#61; j &amp;#61; 1;&lt;br /&gt;scanf(&amp;#34;%d&amp;#34;,&amp;amp;n);&lt;br /&gt;for( ; i&amp;lt;n&amp;#43;1; i&amp;#43;&amp;#43;){&lt;!-- --&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    product &amp;#61; i&lt;/span&gt;&lt;em&gt;j;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    printf(&amp;#34;%d&lt;/span&gt;&lt;/em&gt;%d&amp;#61;%d&amp;#34;,i,j,product);&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    if(i&amp;#61;&amp;#61;j){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        i &amp;#61; 1;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        j &amp;#43;&amp;#61;1;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        printf(&amp;#34;\\n&amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }if(j&amp;#61;&amp;#61;n&amp;#43;1){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        break;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }if(i!&amp;#61;1){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        if(i!&amp;#61;j){&lt;!-- --&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            printf(&amp;#34;  &amp;#34;);&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        }&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    }&lt;/span&gt;&lt;/p&gt;\n&lt;p&gt;printf(&amp;#34;PROGRAMM OVER&amp;#34;);&lt;/p&gt;\n&lt;p&gt;return 0;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九九乘法表输入九只输出到8×8，求解", ["//目标：输入n实现从1", "1到n", "n的输出", "#include <stdio.h>", "\n", "int main()", "{", "    int i,j;", "    int n;", "    int product;", "\n", "i = j = ", "1", ";", "\nscanf(", "\"%d\"", ",", "&n", ")", ";", "\nfor( ", "; i<n; i++){", "\n    product = i*j", ";", "\n    printf(", "\"%d*%d=%d\"", ",i,j,product)", ";", "\n    if(", "i==j", "){\n        i = ", "1", ";", "\n        j +=1", ";", "\n        printf(", "\"\\n\"", ")", ";", "\n    }if(", "j==n", "){\n        break", ";", "\n    }if(", "i!=1", "){\n        if(", "i!=j", "){\n            printf(", "\"  \"", ")", ";            ", "\n            }\n        }\n    }\n\nprintf(", "\"PROGRAMM OVER\"", ")", ";", "\n\nreturn ", "0", ";", "\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;修改如下&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;#include &amp;lt;stdio.h&amp;gt;\n#define &lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;\nint main()\n{\n    int i,j, n,m,k,c[&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;};\n    char a[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;],b[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;],f[&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-symbol\"&gt;N&lt;/span&gt;];\n    k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,a);\n\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;m);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,b);\n\n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; n / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;#43;&amp;#43;){//修改\n        k&amp;#61;a[i];\n        a[i]&amp;#61;a[n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i];\n        a[n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i]&amp;#61;k;\n    }\n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; m / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;i&amp;#43;&amp;#43;){//修改\n        k&amp;#61;b[i];\n        b[i]&amp;#61;b[m&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i];\n        b[m&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;-i]&amp;#61;k;\n    }\n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i &amp;lt; n;i&amp;#43;&amp;#43;)\n    {\n        for(j&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;j &amp;lt; m;j&amp;#43;&amp;#43;)\n        {\n            c[i&amp;#43;j] &amp;#43;&amp;#61; (a[i]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)*(b[j]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;);\n            if(c[i&amp;#43;j] &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) //进位处理\n            {\n                c[i&amp;#43;j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#43;&amp;#61; c[i&amp;#43;j] / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                c[i&amp;#43;j] &lt;span class=\"hljs-comment\"&gt;%&amp;#61; 10;&lt;/span&gt;\n            }\n        }\n    }\n        //t&amp;#61;((c[i&amp;#43;t]&amp;#43;(a[i]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)*(b[t]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;))/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;);\n        //c[i&amp;#43;t]&amp;#61;(c[i&amp;#43;t]&amp;#43;(a[i]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)*(b[t]-&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;))&lt;span class=\"hljs-comment\"&gt;%10;&lt;/span&gt;\n        //}\n    int e&amp;#61;n&amp;#43;m;\n    if(c[e&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) e&amp;#61;e&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;//修改 if(c[n&amp;#43;m&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)e&amp;#61;e&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    for(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;e;i&amp;#43;&amp;#43;){\n        f[i] &amp;#61; c[e-i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n    }\n    f[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;;  //修改\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,f);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["字符串乘法转换程序在某未知测试点失败", ["\n", "\n#include<stdio.h>\nint main(){\n    int n,m,k;\n    k=", "0", ";\n    scanf(", "\"%d\"", ",&n);\n    char a[n];scanf(", "\"%s\"", ",a);\n    scanf(", "\"%d\"", ",&m);\n    char b[m];scanf(", "\"%s\"", ",b);\n    int c[", "100", "]={", "0", "};\n    for(int i=", "0", ";i<n/", "2", ";i++){\n        int k=a[i];\n        a[i]=a[n", "-1", "-i];\n        a[n", "-1", "-i]=k;\n    }\n        for(int i=", "0", ";i<m/", "2", ";i++){\n        int k=b[i];\n        b[i]=b[m", "-1", "-i];\n        b[m", "-1", "-i]=k;\n    }\n    for(int i=", "0", ";i<n;i++)\n    for(int t=", "0", ";t<m;t++){\n        c[i+t+", "1", "]+=((c[i+t]+(a[i]-", "'0'", ")*(b[t]-", "'0'", "))/", "10", ");\n        c[i+t]=(c[i+t]+(a[i]-", "'0'", ")*(b[t]-", "'0'", "))", "%10;", "\n    }\n    int e=n+m;\n    if(c[n+m", "-1", "]!=", "0", ")e=e+", "1", ";\n    char f[e];\n    for(int i=", "0", ";i<e", "-1", ";i++){\n        f[i]=c[e-i", "-2", "]+", "'0'", ";\n    }\n    printf(", "\"%s\"", ",f);\n    \n    return ", "0", ";\n} \n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt;    [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    a;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt;    [&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    b;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt;    [&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    c;\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt;    [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    i;\n&lt;span class=\"hljs-comment\"&gt;//c&amp;#61;a*b&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;always&lt;/span&gt;&amp;#64;(a,b)\n&lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n    c &amp;#61; &lt;span class=\"hljs-number\"&gt;16&amp;#39;b0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;;i&amp;#61;i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;begin&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;( b[i] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; )\n            c &amp;#61; c &amp;#43; ({&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;8&amp;#39;b0&lt;/span&gt;,a[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]}&amp;lt;&amp;lt;i);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            c &amp;#61; c;\n    &lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;end&lt;/span&gt;\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用for循环语句实现两个8位二进制乘法器", ["verilog 小白一枚  想问问这个问题是怎么做的"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;没什么大问题&amp;#xff0c;见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;long&lt;/span&gt; m, d;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, k, x, y, n, n1, n2, a[&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;];\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s1[&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;], s2[&lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;];\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s %s&amp;#34;&lt;/span&gt;, s1, s2); &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%s %s&amp;#34;, &amp;amp;s1, &amp;amp;s2);&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; r &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; p &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;256&lt;/span&gt;; i&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//for (i &amp;#61; 0; i &amp;lt; 255; i&amp;#43;&amp;#43;)&lt;/span&gt;\n        a[i] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    n1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s1);\n    n2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(s2);\n    d &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, y &amp;#61; n1 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; n1; j&amp;#43;&amp;#43;, y--)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, x &amp;#61; n2 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; k &amp;lt; n2; k&amp;#43;&amp;#43;, x--)\n        {\n            i &amp;#61; j &amp;#43; k;\n            m &amp;#61; a[i] &amp;#43; (s1[y] - &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;) * (s2[x] - &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;) &amp;#43; d;\n            a[i] &amp;#61; m % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            d &amp;#61; m / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (d &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            i&amp;#43;&amp;#43;;\n            a[i] &amp;#61; a[i] &amp;#43; d % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            d &amp;#61; d / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n        n &amp;#61; i;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Product :%s * %s &amp;#61; &amp;#34;&lt;/span&gt;, s1, s2); &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; n; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, a[i]);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["大整数乘法的代码被判定为Runtime Error了", ["有没有大佬能帮帮我，我能运行并且得到正确的结果，但是还是被判定为Runtime Error了", "\n", "#include <stdio.h>", "#include <string.h>", "void main()", "{", "    long m, d;", "    int i, j, k, x, y, n, n1, n2, a[256];", "    char s1[256], s2[256];", "    scanf(\"%s %s\", &s1,&s2);", "    int r=0;", "    int p=0;", "\n", "for (", "i", " = ", "0", "; i < ", "255", "; i++)\n    a[i] = ", "0", ";\n", "n1", " = strlen(s1);\n", "n2", " = strlen(s2);\n", "d", " = ", "0", ";\nfor (", "j", " = ", "0", ", ", "y", " = n1 - ", "1", "; j < n1; j++, y--)\n{\n    for (", "k", " = ", "0", ", ", "x", " = n2 - ", "1", "; k < n2; k++, x--)\n    {\n        ", "i", " = j + k;\n        ", "m", " = a[i] + (s1[y] - ", "48", ")*(s2[x] - ", "48", ") + d;\n        a[i] = m % ", "10", ";\n        ", "d", " = m / ", "10", ";\n    }\n    ", "if", " (d > ", "0", ")\n    {\n        i++;\n        a[i] = a[i] + d % ", "10", ";\n        ", "d", " = d / ", "10", ";\n    }\n    ", "n", " = i;\n}\nprintf(", "\"Product :\"", ", s1, s2);\nfor (", "i", " = n; i >= ", "0", "; i--)\n    printf(", "\"%d\"", ", a[i]);\nprintf(", "\"\\n\"", ");\nsystem(", "\"pause\"", ");\n", "\n", "}", "\n", "/*Problem: 2618", "\n", "User: 032140935", "\n", "Language: gcc", "\n", "Result: Runtime Error*/", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code&gt;def cfb (n):\n\n    row &amp;#61; 1  # row控制外层循环&amp;#xff0c;控制行数\n    while row &amp;lt;&amp;#61; n:\n        col &amp;#61; 1  # col控制内层循环&amp;#xff0c;控制列数\n        while col &amp;lt;&amp;#61; row:\n            print(&amp;#34;%d*%d &amp;#61;%d&amp;#34; % (col, row, row * col), end&amp;#61;&amp;#34;\\t&amp;#34;)\n            # 结果&amp;#61;列数*行数,&amp;#34;\\t&amp;#34; 可以在控制台输出一个制表符,协助在输出文本时对齐\n            col &amp;#43;&amp;#61; 1\n        print()\n        row &amp;#43;&amp;#61; 1\n\ncfb(9)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"356\" src=\"https://img-ask.csdnimg.cn/upload/1623726984324.png\" width=\"1068\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["利用函数吃饭吧（n),打印九九乘法表", ["\n\n", " "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d  &amp;#34;&lt;/span&gt;, i, j, i * j);\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["打印九九乘法表，并安一定顺序进行排列。", []], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\nc&amp;#43;&amp;#43;实现\n&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; fun()\n{\n    std::ofstream of;\n    of.open(&lt;span class=\"hljs-string\"&gt;&amp;#34;./data.txt&amp;#34;&lt;/span&gt;, std::ios::out);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)\n        {\n            std::cout &amp;lt;&amp;lt; j &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i * j &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; value &amp;#61; i * j;\n            of &amp;lt;&amp;lt; j &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;;\n        }\n        std::cout &amp;lt;&amp;lt; std::endl;\n        of&amp;lt;&amp;lt;std::endl;\n    }\n    of.close();\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/398254434186123.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用fortran写出99乘法表并打印在date.txt", ["请问如何用fortran写出99乘法表并打印在date.txt.文件中"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;加个负号 %-2d&lt;br /&gt;如&amp;#xff1a;printf(%dx%d&amp;#61;%-2d)&lt;br /&gt;希望对你有帮助&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于n✖️n乘法口诀表的行末无空格问题", ["关于这个两列之间有空格 ，行末没有空格 是该如何表达 我确实不会 希望大家能帮我解答一下我的疑惑之处。", "\n", "\n![img](https:", "//img", "-mid.csdnimg.cn", "/release/", "static", "/image/mi", "d", "/ask/", "280849311676180", ".jpg ", "\"#left\"", ")\n\n\n![img](https:", "//img", "-mid.csdnimg.cn", "/release/", "static", "/image/mi", "d", "/ask/", "128759311676182", ".jpg ", "\"#left\"", ")\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第8行应该是print不是println&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/578691314746172.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;java&lt;/span&gt; {\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n{\nSystem.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;#43;i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;j*i&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;);\n}\nSystem.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println( );\n}\n\n}\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Eclipse输出九九乘法表不能水平显示了是为啥", ["package Practice;", "\n", "public class java {", "    public static void main(String[] args)", "    {", "        for(int i=1;i<=9;i++)", "        {", "            for(int j=1;j<=i;j++)", "            {", "                System.out.println(j+\"", "\"+i+\"=\"+j", "i+\"\\t\");", "            }", "            System.out.println( );", "        }", "    }", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;让a相加b次就行了&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言函数递归，不用*号实现乘法，有点懵。", []], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-python\"&gt;while True:\n    print(&amp;#39;1)创建乘法表&amp;#39;)\n    print(&amp;#39;2)退出程序&amp;#39;)\n    n &amp;#61; input(&amp;#39;请从以上菜单中选择一个选项:&amp;#39;).strip()\n    if n&amp;#61;&amp;#61;&amp;#39;1&amp;#39;:\n        x &amp;#61; int(input(&amp;#39;输入一个介于1到10之间的整数:&amp;#39;))\n        for i in range(1,x&amp;#43;1):\n            for j in range(1,x&amp;#43;1):\n                print(&amp;#34;{:&amp;gt;4}&amp;#34;.format(i*j),end&amp;#61;&amp;#34;&amp;#34;)\n            print()\n    elif n&amp;#61;&amp;#61;&amp;#39;2&amp;#39;:\n        print(&amp;#39;谢谢你使用乘法表&amp;#39;)\n        break\n    else:\n        print(&amp;#39;菜单选择错误&amp;#xff0c;请重试&amp;#39;)\n    print(&amp;#39;-----------------------------&amp;#39;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"392\" src=\"https://img-ask.csdnimg.cn/upload/1619860246564.png\" width=\"334\" /&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用Python来创造一个提示用户输入数字的乘法表？", ["如果用户选择菜单选项1，提示用户输入1到10之间的整数，并打印一个乘法表，显示整数1与输入整数相乘的结果，如下面的示例所示。注意:不需要检查输入的数字是否在1到10之间。如果用户选择菜单选项2，退出程序。如果用户在菜单选择中输入了1或2以外的任何内容，输出信息“菜单选择错误，请重试并继续程序。”", "\n\n", "结果应该如下：", "\n\n", "1)创建乘法表", "\n\n", "2)退出程序", "\n\n", "请从以上菜单中选择一个选项:1", "\n\n", "输入一个介于1到10之间的整数:3", "\n\n", "1  2  3 ", "\n\n", "2  4  6 ", "\n\n", "3  6  9 ", "\n\n", " ", "\n\n", "1)创建乘法表", "\n\n", "2)退出程序", "\n\n", "请从以上菜单中选择一个选项:4", "\n\n", "菜单选择错误，请重试", "\n\n", " ", "\n\n", "1)创建乘法表", "\n\n", "2)退出程序", "\n\n", "请从以上菜单中选择一个选项：2", "\n\n", "谢谢你使用乘法表", "\n\n", " ", "\n\n", " ", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "你的代码中所有的两个单引号的地方在原书中都是一个空格，把这个问题改了就可以了", "Konwledge_Point": "乘法", "Question": ["《python基础教程》的序列乘法示例中一些代码执行没有反应", ["代码如下", "\nsentence=raw_input(\"Sentence:\")", "\n\n", "screen_width=80", "\ntext_width=len(sentence)", "\nbox_width=text_width+6", "\nleft_margin=(screen_width-box_width)//2", "\n\n", "print", "\nprint ''*left_margin+'+'+'-'*(box_width-2)+'+'", "\nprint ''*(left_margin+4)+'|'+''*text_width   +'|'", "\nprint ''*(left_margin+4)+'|'+   sentence     +'|'", "\nprint ''*(left_margin+4)+'|'+''*text_width   +'|'", "\nprint ''*left_margin+'+'+'-'*(box_width-2)+'+'", "\nprint", "\n\n", "raw_input(\"press\")", "\n\n", "本来出现的效果是这样的", "\n但是我进行运行后变为这样", "\n请问下这个是有哪里错了吗？", "\n这个是书本上原有的代码"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;给table添加id&amp;#xff0c;修改下显示隐藏代码就行了&lt;/p&gt;\n\n&lt;p&gt;帮助到你可以点击&lt;strong&gt;&lt;u&gt;采纳&lt;/u&gt;&lt;/strong&gt;吗&amp;#xff0c;谢谢&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code class=\"language-html\"&gt;&amp;lt;!DOCTYPE html&amp;gt;\n&amp;lt;html&amp;gt;\n&amp;lt;head&amp;gt;\n    &amp;lt;script src&amp;#61;&amp;#34;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;\n    &amp;lt;meta charset&amp;#61;&amp;#34;utf-8&amp;#34;&amp;gt;\n    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;\n&amp;lt;/head&amp;gt;\n\n&amp;lt;body&amp;gt;\n\n    &amp;lt;div id&amp;#61;&amp;#34;box&amp;#34;&amp;gt;\n        &amp;lt;p class&amp;#61;&amp;#34;duan&amp;#34;&amp;gt;显示的内容&amp;lt;/p&amp;gt;\n        &amp;lt;button class&amp;#61;&amp;#34;yin&amp;#34;&amp;gt;单击隐藏&amp;lt;/button&amp;gt;\n        &amp;lt;button class&amp;#61;&amp;#34;xian&amp;#34;&amp;gt;单击显示&amp;lt;/button&amp;gt;\n        &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;\n\n            &amp;lt;script type&amp;#61;&amp;#34;text/javascript&amp;#34;&amp;gt;\n                $(function () {\n                    $(&amp;#34;.yin&amp;#34;).click(function () { $(&amp;#34;#cfb&amp;#34;).hide() })\n                    $(&amp;#34;.xian&amp;#34;).click(function () { $(&amp;#34;#cfb&amp;#34;).show() })\n\n                });\n\n            &amp;lt;/script&amp;gt;\n            &amp;lt;script&amp;gt;\n                for (var r &amp;#61; 0; r &amp;lt;&amp;#61; 9; r&amp;#43;&amp;#43;) {\n                    for (var i &amp;#61; 1, str &amp;#61; &amp;#34;&amp;#34;; i &amp;lt;&amp;#61; r; i&amp;#43;&amp;#43;) {\n                        str &amp;#43;&amp;#61; i &amp;#43; &amp;#34;x&amp;#34; &amp;#43; r &amp;#43; &amp;#34;&amp;#61;&amp;#34; &amp;#43; i * r &amp;#43; &amp;#34; &amp;#34;;\n                    }\n                    console.log(str);\n                }\n\n                var tab &amp;#61; document.createElement(&amp;#39;TABLE&amp;#39;); tab.id &amp;#61; &amp;#39;cfb&amp;#39;;\n                tab.style.border &amp;#61; &amp;#39;1px solid black&amp;#39;;\n                tab.style.borderCollapse &amp;#61; &amp;#39;collapse&amp;#39;;\n                for (var i &amp;#61; 1; i &amp;lt;&amp;#61; 9; i&amp;#43;&amp;#43;) {\n                    var tr &amp;#61; document.createElement(&amp;#39;TR&amp;#39;);\n                    tab.appendChild(tr);\n                    for (var j &amp;#61; 1, str &amp;#61; &amp;#34;&amp;#34;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n                        str &amp;#61; j &amp;#43; &amp;#34;x&amp;#34; &amp;#43; i &amp;#43; &amp;#34;&amp;#61;&amp;#34; &amp;#43; i * j &amp;#43; &amp;#34; &amp;#34;;\n                        var td &amp;#61; document.createElement(&amp;#39;TD&amp;#39;);\n                        td.style.border &amp;#61; &amp;#39;1px solid black&amp;#39;;\n                        td.style.height &amp;#61; &amp;#39;20px&amp;#39;;\n                        td.innerHTML &amp;#61; str;\n                        tr.appendChild(td);\n                    }\n                }\n                document.body.appendChild(tab);\n            &amp;lt;/script&amp;gt;\n&amp;lt;/div&amp;gt;\n&amp;lt;/body&amp;gt;\n\n&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么把下面乘法表的输出与显示隐藏盒子关联起来", ["\n\n", "<!DOCTYPE html>", "\n\n", "<html>", "\n\n", " <head>", "\n\n", "  <script src=\"https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js\"></script>", "\n\n", "  <meta charset=\"utf-8\">", "\n\n", "  <title>Document</title>", "\n\n", "  <div id=\"box\">", "\n\n", "  <p class=\"duan\">显示的内容</p >", "\n\n", "  <button class=\"yin\">单击隐藏</button>", "\n\n", "  <button class=\"xian\">单击显示</button>", "\n\n", "  <div>", "\n\n", " </head>", "\n\n", " <body>", "\n\n", "  <script type=\"text/javascript\">", "\n\n", "   $(function(){", "\n\n", "   $(\".yin\").click(function(){$(\"p\").hide()})", "\n\n", "   $(\".xian\").click(function(){$(\".duan\").show()})", "\n\n", "   });", "\n\n", "  </script>", "\n\n", "  <script>", "\n\n", "  for(var r=0;r<=9;r++){", "\n\n", "  for(var i=1,str=\"\";i<=r;i++){", "\n\n", "  str+=i+\"x\"+r+\"=\"+i*r+\" \";", "\n\n", "  }", "\n\n", "  console.log(str);", "\n\n", "  }", "\n\n", "  var tab = document.createElement('TABLE');", "\n\n", "  tab.style.border = '1px solid black';", "\n\n", "  tab.style.borderCollapse='collapse';", "\n\n", "  for(var i = 1; i <=9 ; i++){", "\n\n", "  var tr = document.createElement('TR');", "\n\n", "  tab.appendChild(tr);", "\n\n", "  for(var j = 1,str=\"\"; j<=i ; j++){", "\n\n", "  str=j+\"x\"+i+\"=\"+i*j+\" \";", "\n\n", "  var td = document.createElement('TD');", "\n\n", "  td.style.border = '1px solid black';", "\n\n", "  td.style.height = '20px';", "\n\n", "  td.innerHTML=str;", "\n\n", "  tr.appendChild(td);", "\n\n", "  }", "\n\n", "  }", "\n\n", "  document.body.appendChild(tab);", "\n\n", "  ", "\n\n", "  </script> ", "\n\n", " ", "\n\n", " </body>", "\n\n", "</html>"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,b;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入矩形的长和宽&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f,%f&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;该矩形的面积为&amp;#xff1a;%f\\n&amp;#34;&lt;/span&gt;,a*b);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["初级乘法程序 输入两个值，输出它们的乘积。C语言", []], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不要用空格对齐&amp;#xff0c;改为%3d这样对齐&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["乘法表输出的数字没有对齐，想知道有没有什么办法", ["//输出数字没有对齐怎么办\n", "#include<stdio.h>", "\n", "int", " main()\n{\n    ", "int", " i = ", "1", ", j = ", "1", ";\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "printf", "(", "\"%d   \"", ", i);\n\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "for", " (j = ", "1", "; j <= ", "9", "; j++)\n        {\n            ", "printf", "(", "\"%d   \"", ", i * j);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n\n    }\n\n\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "printf", "(", "\"%d   \"", ", i);\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "for", " (j = ", "1", "; j <= ", "9", "; j++)\n        {\n            ", "if", " (i >= j)\n                ", "printf", "(", "\"%d   \"", ", i * j);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n\n    }\n    ", "for", " (i = ", "1", "; i <= ", "9", "; i++)\n    {\n        ", "printf", "(", "\"%d   \"", ", i);\n    }\n    ", "printf", "(", "\"\\n\\n\"", ");\n    ", "for", " (", "int", " i = ", "1", "; i < ", "10", "; i++)\n    {\n        ", "for", " (", "int", " j = ", "1", "; j < i; j++)\n        {\n            ", "printf", "(", "\"     \"", ");\n        }\n        ", "for", " (", "int", " j = i; j < ", "10", "; j++)\n        {\n            ", "printf", "(", "\"%d   \"", ", i * j);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n    }\n\n}\n", "\n"]], "Tag": "算法设计"}
{"Answer": "简单，修改一点点即可，运行结果见截图，代码如下\r\n\r\n```\r\npublic class Test_9x9 {\r\n    public static void main(String [] args){\r\n        for(int i=1;i&lt;=9;i++){\r\n            for(int j=9;j&gt;0;j--){\r\n                if (i-j&gt;=0) {\r\n                    System.out.print(i+\"*\"+j+\"=\"+(i*j)+\"\\t\");\r\n                }\r\n                else{\r\n                    System.out.print(\"\\t\\t\");\r\n                }\r\n\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/201812/31/1546258573_106880.png)", "Konwledge_Point": "乘法", "Question": ["求一个9*9乘法表，怎么做到图中格式，跪求啊？", ["\n小白一个，求大佬", "\n\n", "public class Test_9x9 {", "\n    public static void main(String[] args) {", "\n        //倒三角", "\n        for (int i = 1; i <=9; i++) {", "\n            for (int j = 1; j <=i; j++) {", "\n                System.out.print(j+\"*\"+i+\"=\"+(i*j)+\"\\t\");", "\n            }", "\n            System.out.println();", "\n        }", "\n    }  ", "\n\n", "只会正方向，反方向怎么弄？\n"]], "Tag": "算法设计"}
{"Answer": "&lt;div class=\"post-text\" itemprop=\"text\"&gt;\r\n&lt;p&gt;Constants and number literals in Go are untyped and have unlimited precision. The moment it has to be stored as a specific type, the bounds of that type apply. So when you declare &lt;code&gt;x := 10.1&lt;/code&gt;, that literal is converted into a &lt;code&gt;float&lt;/code&gt; and loses some precision. But when you specifically do &lt;code&gt;10.1*3.0&lt;/code&gt; these have their full precision.&lt;/p&gt;\n\n&lt;p&gt;See the \"Floats\" header in this article. &lt;a href=\"https://blog.golang.org/constants\" rel=\"nofollow noreferrer\"&gt;https://blog.golang.org/constants&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Numeric constants live in an arbitrary-precision numeric space; they\n  are just regular numbers. But when they are assigned to a variable the\n  value must be able to fit in the destination. We can declare a\n  constant with a very large value:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const Huge = 1e1000 \n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;—that's just a number, after all—but we can't assign it or even print it. This statement won't even compile:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;fmt.Println(Huge)\n&lt;/code&gt;&lt;/pre&gt;\n  \n  &lt;p&gt;The error is, \"constant 1.00000e+1000 overflows float64\", which is\n  true. But Huge might be useful: we can use it in expressions with\n  other constants and use the value of those expressions if the result\n  can be represented in the range of a float64.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;How it actually does this, especially in the given &lt;code&gt;Huge&lt;/code&gt; case, I do not know.&lt;/p&gt;\n    &lt;/div&gt;", "Konwledge_Point": "乘法", "Question": ["为什么Go中带文字的浮点乘法与变量之间有区别？", ["\n\n", "Why are the following unequal in Go? Is this a bug, or is it by design? If it's by design, why does this occur and is this type of behavior documented anywhere?", "\n\n", "https://play.golang.org/p/itEV9zwV2a", "\n", "\n\n", "package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    x := 10.1\n\n    fmt.Println(\"x == 10.1:        \", x == 10.1)\n    fmt.Println(\"x*3.0 == 10.1*3.0:\", x*3.0 == 10.1*3.0)\n    fmt.Println(\"x*3.0:            \", x*3.0)\n    fmt.Println(\"10.1*3.0:         \", 10.1*3.0)\n}\n", "\n\n", "Produces:", "\n\n", "x == 10.1:         true\nx*3.0 == 10.1*3.0: false\nx*3.0:             30.299999999999997\n10.1*3.0:          30.3\n", "\n\n", "Note that the same floating point math is being performed, just with different syntax. So why is the result different? I would expect ", "10.1*3.0", " to equal ", "30.29999...", " as in the ", "x*3.0", " example.", "\n    "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/121348941666171.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; addCount&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; subCount&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; mulCount&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; divCount&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;&amp;#43;&amp;#43;i)\n    {\n        &lt;span class=\"hljs-comment\"&gt;//2个随机数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; val&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%100&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%100&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; iope&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%4;  &lt;span class=\"hljs-comment\"&gt;//产生3以内的随机数字 0-&amp;gt;&amp;#43; 1-&amp;gt;- 2-&amp;gt;* 3-&amp;gt;/&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(iope)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                addCount&amp;#43;&amp;#43;;\n                val&amp;#61;a&amp;#43;b;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#43;%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,val);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n                subCount&amp;#43;&amp;#43;;\n                val&amp;#61;a-b;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d-%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,val);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n                mulCount&amp;#43;&amp;#43;;\n                val&amp;#61;a*b;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,val);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n                divCount&amp;#43;&amp;#43;;\n                val&amp;#61;a/b;\n                printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,val);\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }      \n    }\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;加法运算符数量为%d,减法运算符数量为%d,乘法运算符数量为%d,除法运算符数量为%d\\n&amp;#34;&lt;/span&gt;,addCount,subCount,mulCount,divCount);\n}  \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["随机给出100道100以内的四则运算测试题，要求随机产生两个操作数，随机产生运算符，依据运算符输出对应表达，系统判断正确性，统计其中加法、减法、乘法、除法数量，并统计相应各类运算用户计算的正确率", ["各位帮我看看", "不用java怎么做呗**", "\n", "\n-大一新生，希望得到答案，啊啊哈哈\n", "1.", " \n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这样写也有问题啊&amp;#xff0c;double精度会丢失&amp;#xff0c;N足够大的时候肯定不对了&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["PAT乙级1049测试点3，为什么调换乘法顺序就能通过？", ["问题如题，请问为何第9行代码需要把读入的数据a[i]写在前面测试点3才没有问题。", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "()", "{\n    ", "int", " i,N;\n    ", "scanf", "(", "\"%d\\n\"", ",&N);\n    ", "long", " ", "double", " sum = ", "0", ";\n    ", "double", " a[N];\n    ", "for", " (i=", "0", ";i<N;i++)\n    {\n        ", "scanf", "(", "\"%lf\"", ",&a[i]);\n        sum+=(a[i]*(N-i)*(i+", "1", "));", "//如果是(N-i)*(i+1)*a[i]测试点三有错，为什么？", "\n    }\n    ", "printf", "(", "\"%.2llf\"", ",sum);\n    ", "return", " ", "0", ";\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; r;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;lt;&amp;#61; i)&lt;span class=\"hljs-comment\"&gt;//以免重复输出&lt;/span&gt;\n            {\n                r &amp;#61; i * j;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;, i, j, r);\n            }\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["嵌套--九九乘法表，我这串代码应该怎么改成左下三角形的形式", ["#", "include", "<stdio.h>", "\n\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " i,j,r;\n    ", "for", "(i=", "1", ";i<", "10", ";i++)\n    {\n        ", "for", "(j=", "1", ";j<=i;j++)\n        {\n            r=i*j;\n            ", "printf", "(", "\"%d*%d=%d\\n\"", ",i,j,r);\n        }\n        ", "putchar", "(", "'\\n'", ");\n    }\n    ", "return", " ", "0", ";\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;修改后如下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; \ni &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n    j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;instr&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; j &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;instr&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;instr&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(j) &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;str&lt;/span&gt;(i*j)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j &amp;#61;&amp;#61; i:\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;instr&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n        j &amp;#61; j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    i &amp;#61; i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python写的乘法表但是只能输出1*1不知道哪里出了问题", ["\ni = ", "1", "\n", "j ", "= ", "1", "\n", "instr ", "= ", "\" \"", "\nwhile i <= ", "9", ":\n    while ", "j ", "<= ", "9", ":\n        ", "instr ", "= ", "instr ", "+ str(i) + ", "\"*\"", " + str(", "j) ", "+ ", "\"=\"", " + str(i*", "j)\n", "        if ", "j ", "== i:\n            print(", "instr)\n", "            ", "break\n", "            ", "j ", "= ", "j ", "+ ", "1", "\n    i = i + ", "1", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;#include&amp;lt;stdio.h&amp;gt;&lt;br /&gt;int main()&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;int i,j;&lt;br /&gt;for(i&amp;#61;1;i&amp;lt;&amp;#61;9;i&amp;#43;&amp;#43;)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;for(j&amp;#61;1;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)&lt;br /&gt;{&lt;!-- --&gt;&lt;br /&gt;printf(&amp;#34;%dx%d&amp;#61;%d &amp;#34;,i,j,i*j);&lt;br /&gt;}&lt;br /&gt;printf(&amp;#34;\\n&amp;#34;);&lt;br /&gt;}&lt;br /&gt;return 0;&lt;br /&gt;}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["这个99乘法表，如果用大写的X代替*，该怎么改", ["#include<stdio.h>", "int main()", "{", "int i,j;", "for(i=1;i<=9;i++)", "{", "for(j=1;j<=i;j++)", "{", "printf(\"%d*%d=%d \",i,j,i*j);", "}", "printf(\"\\n\");", "}", "return 0;", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;blockquote&gt;\n&lt;p&gt;回答不易&amp;#xff0c;求求您点赞关注哦&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;ul&gt;&lt;li&gt;&lt;p&gt;一位乘法器是可以将两个一位二进制数&amp;#xff08;0 或 1&amp;#xff09;相乘并产生两位结果的电路。一位乘法器用于较大的数字电路中以对较大的数字执行乘法运算。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;设计一位乘法器有几种不同的方法&amp;#xff0c;不同的教科书可能会提供不同版本的电路。一些版本可能在计算中包括符号位&amp;#xff08;表示数字的符号&amp;#xff0c;正数或负数&amp;#xff09;&amp;#xff0c;而其他版本可能不包括。选择使用哪个版本可能取决于电路的具体要求或工程师的设计目标。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;例如&amp;#xff0c;一些一位乘法器可能在计算中包括符号位&amp;#xff0c;以允许电路执行带符号的乘法&amp;#xff0c;这在某些应用中很有用。其他的一位乘法器在计算中可能不包括符号位&amp;#xff0c;只进行无符号乘法&amp;#xff0c;这样可能更简单、更快&amp;#xff0c;但可能不适合所有应用。&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;一般来说&amp;#xff0c;选择使用哪个版本的一位乘法器将取决于电路的具体要求以及性能、复杂性和其他因素之间的权衡。&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "乘法", "Question": ["我想请问对于不同的教科书原码一位乘法是否有不同版本?", ["比如有的版本的乘商寄存器将符号位包括进来计算，有的版本就不要求，比如王道的。", "\n", "请问为什么?"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.BorderLayout;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.FlowLayout;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.GridLayout;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.ActionEvent;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.ActionListener;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.KeyEvent;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.awt.event.KeyListener;\n\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.JButton;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.JFrame;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.JPanel;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; javax.swing.JTextField;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Calc&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;extends&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JFrame&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;implements&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ActionListener&lt;/span&gt;,KeyListener{\n\n    JTextField txtResult;\n    JButton btn0,btn1,btn2,btn3,btn4,btn5,btn6,btn7,btn8,btn9;\n    JButton btnAdd,btnSub,btnTimes,btnDiv,btnEquals,btnDot;\n    JButton btnClear,btnExit;\n    JPanel centerPanel,southPanel;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; num1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,num2&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,result&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    String opr&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Calc&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; {\n        setTitle(&lt;span class=\"hljs-string\"&gt;&amp;#34;计算器2016&amp;#34;&lt;/span&gt;);\n        txtResult &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JTextField&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0.0&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;//只读&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//        txtResult.setEditable(false);&lt;/span&gt;\n        \n        centerPanel &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JPanel&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;GridLayout&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;));\n        southPanel &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JPanel&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;FlowLayout&lt;/span&gt;(FlowLayout.CENTER));\n        add(txtResult,BorderLayout.NORTH);\n        txtResult.addKeyListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        add(centerPanel);\n        btn0 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n        btn1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;);\n        btn2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;);\n        btn3 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;);\n        btn4 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4&amp;#34;&lt;/span&gt;);\n        btn5 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;5&amp;#34;&lt;/span&gt;);\n        btn6 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;6&amp;#34;&lt;/span&gt;);\n        btn7 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;7&amp;#34;&lt;/span&gt;);\n        btn8 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;8&amp;#34;&lt;/span&gt;);\n        btn9 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;9&amp;#34;&lt;/span&gt;);\n        btnAdd &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;);\n        btnSub &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;);\n        btnTimes &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n        btnDiv &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;);\n        btnDot &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;);\n        btnEquals &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;);\n        centerPanel.add(btn7);\n        centerPanel.add(btn8);\n        centerPanel.add(btn9);\n        centerPanel.add(btnDiv);\n        centerPanel.add(btn4);\n        centerPanel.add(btn5);\n        centerPanel.add(btn6);\n        centerPanel.add(btnTimes);\n        centerPanel.add(btn1);\n        centerPanel.add(btn2);\n        centerPanel.add(btn3);\n        centerPanel.add(btnSub);\n        centerPanel.add(btn0);\n        centerPanel.add(btnDot);\n        centerPanel.add(btnEquals);\n        centerPanel.add(btnAdd);\n        \n        \n        \n        add(southPanel,BorderLayout.SOUTH);\n        btnClear &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;清除&amp;#34;&lt;/span&gt;);\n        btnExit &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;JButton&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;关闭&amp;#34;&lt;/span&gt;);\n        southPanel.add(btnClear);\n        southPanel.add(btnExit);\n        \n        &lt;span class=\"hljs-comment\"&gt;//监听&lt;/span&gt;\n        btn0.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn1.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn2.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn3.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn4.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn5.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn6.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn7.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn8.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btn9.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnAdd.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnSub.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnTimes.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnDiv.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnDot.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnEquals.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnClear.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        btnExit.addActionListener(&lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;);\n        \n        \n        setSize(&lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;300&lt;/span&gt;);\n        setVisible(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;);\n        setLocationRelativeTo(&lt;span class=\"hljs-literal\"&gt;null&lt;/span&gt;);\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        \n    }\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Calc&lt;/span&gt;();\n    }\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;actionPerformed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(ActionEvent e)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnClear){\n            txtResult.setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnExit){\n            System.exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn0){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn1){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn2){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn3){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn4){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;4&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn5){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;5&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn6){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;6&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn7){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;7&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn8){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;8&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btn9){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;9&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnDot){\n            setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnAdd){\n            opr &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;;\n            operator();\n            &lt;span class=\"hljs-comment\"&gt;//清空内容&lt;/span&gt;\n            txtResult.setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnSub){\n            opr &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;;\n            operator();\n            &lt;span class=\"hljs-comment\"&gt;//清空内容&lt;/span&gt;\n            txtResult.setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnTimes){\n            opr &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;;\n            operator();\n            &lt;span class=\"hljs-comment\"&gt;//清空内容&lt;/span&gt;\n            txtResult.setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnDiv){\n            opr &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;;\n            operator();\n            &lt;span class=\"hljs-comment\"&gt;//清空内容&lt;/span&gt;\n            txtResult.setText(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(e.getSource()&amp;#61;&amp;#61;btnEquals){\n            operator();\n            txtResult.setText(result&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n            num1&amp;#61;num2&amp;#61;result&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        \n    }\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;setText&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String s)&lt;/span&gt;{\n        &lt;span class=\"hljs-comment\"&gt;//获取文本框的值&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;str&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; txtResult.getText().trim();\n        &lt;span class=\"hljs-comment\"&gt;//如果文本框里面的值是0&amp;#xff0c;那么初始化为空值&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(str.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt; ) || Double.parseDouble(str)&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            str &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n        }\n        str &amp;#43;&amp;#61; s;\n        &lt;span class=\"hljs-comment\"&gt;//设置文本框的值&lt;/span&gt;\n        txtResult.setText(str);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;operator&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(txtResult.getText().equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)){\n            num1&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{\n            num1 &amp;#61; Double.parseDouble(txtResult.getText().trim());\n        }\n        System.out.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;num1&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;num1&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;;num2&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;num2);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(opr.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;)){\n            result &amp;#61; num1&amp;#43;num2;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(opr.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)){\n            result &amp;#61; num2-num1;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(opr.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;)){\n            result &amp;#61; num1*num2;\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(opr.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)){\n            result &amp;#61; num2/num1;\n        }\n        num2&amp;#61;num1;\n    }\n    String m_temp;\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;keyPressed&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(KeyEvent e)&lt;/span&gt; {\n        m_temp &amp;#61; txtResult.getText();\n        \n        \n    }\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;keyReleased&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(KeyEvent e)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;{\n            Double.parseDouble(txtResult.getText());\n        }&lt;span class=\"hljs-keyword\"&gt;catch&lt;/span&gt;(Exception ex){\n            txtResult.setText(m_temp);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;keyTyped&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(KeyEvent e)&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;// TODO Auto-generated method stub&lt;/span&gt;\n        \n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["java编译完成一个整数计算器，该计算器需包含整数的加法、减法、乘法功能", ["要求：", "（1） 所有数字需使用链表的数据结构保存；", "（2） 需输出正确的运算结果；", "（3） 在运算时不得将链表转化为数字进行计算"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;有帮助&amp;#xff0c;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; pandas &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; pd \n\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt; &amp;#61; {&amp;#39;&lt;span class=\"hljs-title\"&gt;a&amp;#39;&lt;/span&gt;:[1,2,3,4,5]}&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;[&amp;#39;b&amp;#39;]  &amp;#61; &lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;[&amp;#39;a&amp;#39;].apply(&lt;span class=\"hljs-title\"&gt;lambad&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;:&lt;span class=\"hljs-title\"&gt;x&lt;/span&gt;*2)&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;data&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Python如何将一个字段里的数据做乘法，然后再写入另一个字段", ["有a和b两个字段，", "a   b", "1  null", "2  null", "3  null", "4  null", "5  null", "将a字段的数据*2，再填充到b字段"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt; a &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;{i_a}};\n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt; b &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;16&lt;/span&gt;{i_b}};\n \n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    {a1, a0} &amp;#61; a;\n&lt;span class=\"hljs-keyword\"&gt;assign&lt;/span&gt;    {b1, b0} &amp;#61; b;\n\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;    [F_WIDTH-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    a_fold &amp;#61; a0 &amp;#43; a1;\n&lt;span class=\"hljs-keyword\"&gt;wire&lt;/span&gt;    [F_WIDTH-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    b_fold &amp;#61; b0 &amp;#43; b1;\n\n&lt;span class=\"hljs-comment\"&gt;//这样拼接赋值时 a0&amp;#61;a1,b0&amp;#61;b1,a_fold&amp;#61;2*a0,b_fold&amp;#61;2*b0&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//最终 a0b0_r5&amp;#61;a1b1_r5//temp0_r5 &amp;#61; 4*a0b0_r5&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//u1_mul 和 u2_mul 就被优化掉了&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["quartus 综合时只将部分子模块中的乘法器用DSP实现，子模块为相同代码例化", ["问题遇到的现象和发生背景", "\n", "quartus prime 21综合时只将部分子模块中的乘法器用DSP实现", "\n", "操作环境、软件版本等信息", "\n", "软件版本：", "Quartus Prime 21.4", "在full_mul_level4中例化了多个mul，每个mul中有多个乘法器，但只有u0_mul中的乘法器在综合时用到了DSP，并且综合结果很不正常，full_mul_level4为1024bit的karatsuba大整数乘法器，不应该这么小。可能是什么原因呢。真心请教", "代码如下：", "\n", "(*multstyle=", "\"dsp\"", "*)", "module", " full_mul_level4(    ", "//384x384 or similar bits", "\nclk,\nrstn,\ni_a,\ni_b,\nen0,\nen1,\nen2,\nen3,\nen4,\nen5,\nen6,\no_res\n);\n", "parameter", " A_WIDTH = ", "1024", ";\n", "parameter", " B_WIDTH = ", "1024", ";\n", "parameter", " R_WIDTH = ", "2048", ";\n", "parameter", " DATA_IN_WIDTH = ", "64", ";\n", "parameter", " DATA_OUT_WIDTH = ", "64", "; \n\n", "input", "    clk;\n", "input", "    rstn;\n", "input", "    [DATA_IN_WIDTH-", "1", ":", "0", "]    i_a;\n", "input", "    [DATA_IN_WIDTH-", "1", ":", "0", "]    i_b;\n", "input", "    en0;\n", "input", "    en1;\n", "input", "    en2;\n", "input", "    en3;\n", "input", "    en4;\n", "input", "    en5;\n", "input", "    en6;\n", "output", "    [DATA_OUT_WIDTH-", "1", ":", "0", "]    o_res;\n\n\n", "localparam", "    WIDTH         = A_WIDTH > B_WIDTH ? A_WIDTH : B_WIDTH;\n", "localparam", "    WIDTH_ODD    = WIDTH % ", "2", ";\n", "localparam", "    WIDTH_HALF    = (WIDTH - WIDTH_ODD) / ", "2", ";\n", "localparam", "    H_WIDTH        = WIDTH_HALF + WIDTH_ODD;\n", "localparam", "    L_WIDTH        = WIDTH_HALF;\n\n", "localparam", "    F_WIDTH        = H_WIDTH + ", "1", ";\n\n", "wire", "  [A_WIDTH-", "1", ":", "0", "] a;\n", "wire", "  [B_WIDTH-", "1", ":", "0", "] b;\n", "assign", " a = {", "16", "{i_a}};\n", "assign", " b = {", "16", "{i_b}};\n\n", "wire", "    [L_WIDTH-", "1", ":", "0", "]    a0;\n", "wire", "    [H_WIDTH-", "1", ":", "0", "]    a1;\n", "wire", "    [L_WIDTH-", "1", ":", "0", "]    b0;\n", "wire", "    [H_WIDTH-", "1", ":", "0", "]    b1;\n\n", "//                a1        a0", "\n", "//x                b1        b0", "\n", "//-------------------------", "\n", "//    a1b1    a1b0+a0b1    a0b0", "\n", "//    a1b0 + a0b1 = (a0+a1)(b0+b1) - a1b1 - a0b0", "\n\n\n", "assign", "    {a1, a0} = a;\n", "assign", "    {b1, b0} = b;\n\n", "wire", "    [L_WIDTH*", "2", "-", "1", ":", "0", "]    a0b0_r5;\n", "wire", "    [H_WIDTH*", "2", "-", "1", ":", "0", "]    a1b1_r5;\nfull_mul_level3 ", "#(L_WIDTH, L_WIDTH)", " u0_mul (\n    ", ".clk", "    (clk), \n    ", ".rstn", "    (rstn),\n    ", ".en0", "    (en0),\n    ", ".en1", "    (en1),\n    ", ".en2", "    (en2),\n    ", ".en3", "    (en3),\n    ", ".en4", "    (en4),\n    ", ".a", "        (a0),\n    ", ".b", "        (b0),\n    ", ".res", "    (a0b0_r5));\n    \nfull_mul_level3 ", "#(H_WIDTH, H_WIDTH)", " u1_mul (\n    ", ".clk", "    (clk), \n    ", ".rstn", "    (rstn),\n    ", ".en0", "    (en0),\n    ", ".en1", "    (en1),\n    ", ".en2", "    (en2),\n    ", ".en3", "    (en3),\n    ", ".en4", "    (en4),\n    ", ".a", "        (a1),\n    ", ".b", "        (b1),\n    ", ".res", "    (a1b1_r5));\n\n", "wire", "    [F_WIDTH-", "1", ":", "0", "]    a_fold = a0 + a1;\n", "wire", "    [F_WIDTH-", "1", ":", "0", "]    b_fold = b0 + b1;\n\n", "wire", "    [F_WIDTH*", "2", "-", "1", ":", "0", "]    temp0_r5;\n\n\nfull_mul_level3 ", "#(F_WIDTH, F_WIDTH)", " u2_mul (\n    ", ".clk", "    (clk), \n    ", ".rstn", "    (rstn),\n    ", ".en0", "    (en0),\n    ", ".en1", "    (en1),\n    ", ".en2", "    (en2),\n    ", ".en3", "    (en3),\n    ", ".en4", "    (en4),\n    ", ".a", "        (a_fold),\n    ", ".b", "        (b_fold),\n    ", ".res", "    (temp0_r5));\n\n\n", "reg", "        [L_WIDTH*", "2", "-", "1", ":", "0", "]    a0b0_r6;\n", "reg", "        [H_WIDTH*", "2", "-", "1", ":", "0", "]    a1b1_r6;\n", "reg", "        [F_WIDTH*", "2", "-", "1", ":", "0", "]    temp0_r6;\n\n", "always", " @(", "posedge", " clk)\n", "if", "(en5) ", "begin", "\n    a0b0_r6 <= a0b0_r5;\n    a1b1_r6 <= a1b1_r5;\n    temp0_r6 <= temp0_r5;\n", "end", "\n", "reg", "        [L_WIDTH*", "2", "-", "1", ":", "0", "]    a0b0_r7;\n", "reg", "        [H_WIDTH*", "2", "-", "1", ":", "0", "]    a1b1_r7;\n", "reg", "        [F_WIDTH*", "2", "-", "1", ":", "0", "]    tmp_r7;\n\n", "always", " @(", "posedge", " clk) ", "begin", "\n    ", "if", " (en6) ", "begin", "\n        tmp_r7  <= temp0_r6-a0b0_r6-a1b1_r6;\n        a0b0_r7 <= a0b0_r6;\n        a1b1_r7 <= a1b1_r6;\n    ", "end", "\n", "end", "\n", "wire", "    [WIDTH*", "2", "-", "1", ":", "0", "]    r;\n\n", "assign", " r = {{a1b1_r7, {(L_WIDTH){", "1'b0", "}}} + tmp_r7, {(L_WIDTH){", "1'b0", "}}} + a0b0_r7;\n\n", "reg", "        [R_WIDTH-", "1", ":", "0", "]    res;\n", "always", " @(", "posedge", " clk)\n", "if", "(en6)\n    res <= r[R_WIDTH-", "1", ":", "0", "];\n", "assign", " o_res = res[DATA_OUT_WIDTH-", "1", ":", "0", "];\n", "endmodule", "\n\n", "\n", "编译流程从上到下"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;print和println 换行规则不一样&lt;br /&gt;println是输出后直接换行。&lt;br /&gt;print 里你得加\\n才能。&lt;br /&gt;你全用的println&amp;#xff0c;全是输出完就换行&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["二二乘法表为啥不是一列一列的，跟书上的不一样", ["\n", "这个代码照着书上打的，代码好像是一样的，但是运行起来不一样，怎么回事呀"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;a&amp;gt;&amp;#61;9改成 a&amp;lt;&amp;#61;9,输出后边加个\\t&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/319598509766136.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\nmain()\n{\nint a,b,c,t;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;a&lt;/span&gt;&amp;#61;1;a&amp;lt;&amp;#61;9;a&amp;#61;a&amp;#43;1)\n{\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;t&lt;/span&gt;&amp;#61;9-a;t&amp;gt;0;t&amp;#61;t-1)\nputchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;);\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;a;b&amp;gt;0;b--)\n{\n&lt;span class=\"hljs-attribute\"&gt;c&lt;/span&gt;&amp;#61;a*b;\nprintf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;,a,b,c);\n}\nputchar(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;);\n}\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["我想使用下面的代码运行出下面的图示结果，为什么得不到？（我有乘法符号）", ["#include<stdio.h>", "main()", "{", "    int a,b,c,t;", "    for(a=1;a>=9;a=a+1)", "    {", "        for(t=9-a;t>0;t=t-1)", "        putchar('\\t');", "        for(b=a;b>0;b--)", "        {", "            c=a", "b;", "            printf(\"%d", "%d=%d\",a,b,c);", "        }", "        putchar('\\n');", "    }", "}", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以参考这篇文章&amp;#xff0c;希望对你有帮助&amp;#xff1a;&lt;a href=\"https://zhidao.baidu.com/question/546787112.html\"&gt;如何编写程序用成员函数形式实现复数类加减法运算重载_百度知道 (baidu.com)&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["定义一个复数类Complex，成员函数minus，成员函数multi来实现复数的减法以及复数的乘法", ["复数类代码如下", "\n\n", "\n", "class complex\n{ private:\ndouble  real_part, imaginary_part;\npublic:\nvoid set(double rp,double ip)\n{ real_part=rp;\nimaginary_part=ip;}\nvoid display()\n{ if(imaginary_part>0)\ncout<<real_part<<\"+\"<<imaginary_part<<\"i\"<<endl;\nelse if(imaginary_part<0)\ncout<<real_part<<imaginary_part<<\"i\"<<endl;\nelse\ncout<<real_part<<endl;}\n"]], "Tag": "算法设计"}
{"Answer": "http://www.aichengxu.com/view/35913", "Konwledge_Point": "乘法", "Question": ["关于一元多项式乘法的程序我运行后菜单栏出现问题，数字输不进去哪位能帮忙修改一下？", ["#include", "\n#include", "\n\n", "typedef struct LNode", "\n{", "\n    int coef,ex;", "\n    struct LNode *next;", "\n}LNode;", "\n\n", "LNode *create_LNode(void);", "\n\n", "LNode *add_LNode(LNode *,LNode *);", "\n\n", "LNode *mul_LNode(LNode *,LNode *);", "\n\n", "void print_LNode(LNode *);", "\n\n", "int main(void)", "\n{", "\n    LNode *heada,*headb,*headsum,*headmul;", "\n    heada=NULL;headb=NULL; headsum=NULL;headmul=NULL;", "\n\n", "printf(\"1.  please create mul 1\\n\");\nprintf(\"2.  please create mul 2\\n\");\nprintf(\"please input coef and exponent:\\n\");\n\n\nprintf(\"3. The mul is: \\n\");\n}\n", "\n\n", "//创建", "\nLNode *create_LNode()", "\n{", "\nint iX=0,iZ=0;", "\nLNode *head=NULL,*c=NULL,*d=NULL;", "\nhead=(LNode *)malloc(sizeof(LNode));", "\nd=head;", "\nprintf(\"please input coef and exponent:\\n\");", "\nscanf(\"%d%d\",&iX,&iZ);", "\nwhile(iX != 0)", "\n{", "\nc=(LNode *)malloc(sizeof(LNode));", "\nc->coef=iX,c->ex=iZ;", "\nd->next=c;", "\nd=c;", "\nscanf(\"%d%d\",&iX,&iZ);", "\n}", "\nd->next=NULL;", "\nreturn head;", "\n}", "\n\n", "//相加", "\nLNode *add_LNode(LNode *p1, LNode *p2)", "\n\n", "{", "\n\n", "LNode *head, *tmp, *c;", "\n\n", "int value;", "\n\n", "p1=p1->next;", "\n\n", "p2=p2->next;", "\n\n", "head=tmp=(LNode*)malloc(sizeof(LNode));", "\n\n", "head->next=NULL;", "\n\n", "while(p1 && p2)", "\n\n", "{", "\n\n", "if(p1->ex == p2->ex)", "\n\n", "{", "\n\n", "value=p1->coef+p2->coef;", "\n\n", "if(value != 0)", "\n\n", "{", "\n\n", "c=(LNode *)malloc(sizeof(LNode));", "\n\n", "c->coef=value;", "\n\n", "c->ex=p1->ex;", "\n\n", "c->next=NULL;", "\n\n", "}", "\n\n", "p1=p1->next;", "\n\n", "p2=p2->next;", "\n\n", "}", "\n\n", "else", "\n\n", "if(p1->ex < p2->ex)", "\n\n", "{", "\n\n", "c=(LNode *)malloc(sizeof(LNode));", "\n\n", "c->coef=p1->coef;", "\n\n", "c->ex=p1->ex;", "\n\n", "c->next=NULL;", "\n\n", "p1=p1->next;", "\n\n", "}", "\n\n", "else", "\n\n", "{", "\n\n", "c=(LNode *)malloc(sizeof(LNode));", "\n\n", "c->coef=p2->coef;", "\n\n", "c->ex=p2->ex;", "\n\n", "c->next=NULL;", "\n\n", "p2=p2->next;", "\n\n", "}", "\n\n", "if(head->next==NULL)", "\n\n", "{", "\n\n", "head->next=c;", "\n\n", "tmp=c;", "\n\n", "}", "\n\n", "else", "\n\n", "{", "\n\n", "tmp->next=c;", "\n\n", "tmp=c;", "\n\n", "}", "\n\n", "}", "\n\n", "tmp->next=p1?p1:p2;", "\n\n", "return head;", "\n\n", "}", "\n\n", "//相乘", "\nLNode *mul_LNode(LNode *p1, LNode *p2)", "\n\n", "{", "\n\n", "LNode *head;", "\n\n", "LNode *t,*q,*c,*d;", "\n\n", "head=(LNode *)malloc(sizeof(LNode));", "\n\n", "head->next=NULL;", "\n\n", "d=(LNode *)malloc(sizeof(LNode));", "\n\n", "d->next=NULL;", "\n\n", "for(t=p1->next;t;t=t->next)", "\n\n", "{", "\n\n", "for(q=p2->next;q;q=q->next)", "\n\n", "{", "\n\n", "c=(LNode *)malloc(sizeof(LNode));", "\n\n", "d->next=c;", "\n\n", "c->coef=q->coef * t->coef;", "\n\n", "c->ex=q->ex + t->ex;", "\n\n", "c->next=NULL;", "\n\n", "head=add_LNode(d,head);", "\n\n", "}", "\n\n", "}", "\n\n", "return head;", "\n\n", "}", "\n\n", "//输出", "\nvoid print_LNode(LNode *head)", "\n{", "\nLNode *p=NULL;", "\np=head->next;", "\nif(p == NULL)", "\nprintf(\"The multinomial is NULL.\\n\");", "\nelse", "\n{", "\ndo", "\n{", "\nif(p->coef>=0)", "\n   printf(\"+%dx^%d\",p->coef,p->ex);", "\nelse", "\n   printf(\"%dx^%d\",p->coef,p->ex);", "\np=p->next;", "\n}while(p != NULL);", "\nprintf(\"\\n\");", "\n}", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;使用while就进入了死循环&amp;#xff0c;continue并不是跳出&amp;#xff0c;而是继续下一个while循环。&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j&amp;gt;i:\n            &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;f&amp;#39;&lt;span class=\"hljs-subst\"&gt;{i}&lt;/span&gt;*&lt;span class=\"hljs-subst\"&gt;{j}&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-subst\"&gt;{i*j}&lt;/span&gt;&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["我想做一个乘法表来着，但是出错了，我有点弄不明白是哪里错了……求解答", ["正常的效果应该是", "1", "1=1", "2", "1=2", "2", "2=4", "3", "1=3", "3", "2=6", "3", "3=9", "4", "1=4", "4", "2=8", "4", "3=12", "4", "4=16", "5", "1=5", "5", "2=10", "5", "3=15", "5", "4=20", "5", "5=25", "6", "1=6", "6", "2=12", "6", "3=18", "6", "4=24", "6", "5=30", "6", "6=36", "7", "1=7", "7", "2=14", "7", "3=21", "7", "4=28", "7", "5=35", "7", "6=42", "7", "7=49", "8", "1=8", "8", "2=16", "8", "3=24", "8", "4=32", "8", "5=40", "8", "6=48", "8", "7=56", "8", "8=64", "9", "1=9", "9", "2=18", "9", "3=27", "9", "4=36", "9", "5=45", "9", "6=54", "9", "7=63", "9", "8=72", "9*9=81"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;n);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; n; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; n; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;lt;n)\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d\\t&amp;#34;&lt;/span&gt;, i * j);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d\\n&amp;#34;&lt;/span&gt;, i * j);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["写一个C程序，读取一个数字并打印出一个由数字1，2，…，n组成的乘法表。", ["输出必须显示在由n行和n列组成的二维网格中，对于n=5的情况，如下所示：", "1     2     3     4     5", "2     4     6     8     10", "3     6     9     12   15", "4     8     12   16   20", "5     10   15   20   25", "可以在printf（）函数中使用特殊的“\\t”字符来获得清晰的输出。"]], "Tag": "算法设计"}
{"Answer": "输入输出改改就是C语言的了。", "Konwledge_Point": "乘法", "Question": ["求解C语言！代码不要太长！C++不太会", ["标题：神奇算式", "\n\n", "由4个不同的数字，组成的一个乘法算式，它们的乘积仍然由这4个数字组成。\n\n比如： \n", "\n\n", "210 x 6 = 1260 ", "\n8 x 473 = 3784", "\n27 x 81 = 2187 ", "\n\n", "都符合要求。\n\n如果满足乘法交换律的算式算作同一种情况，那么，包含上边已列出的3种情况，一共有多少种满足要求的算式。\n\n请填写该数字，通过浏览器提交答案，不要填写多余内容（例如：列出所有算式）。\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;输出一个正方形的九九乘法表&lt;/p&gt;\n&lt;p&gt;代码如下&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;include &amp;lt;stdio.h&amp;gt;&lt;/p&gt;\n&lt;p&gt;int main() {&lt;!-- --&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i,j;  &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; i控制行&amp;#xff0c;j控制列 \n\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;) {\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;)\n\n        // %2d 控制宽度为两个字符&amp;#xff0c;且右对齐&amp;#xff1b;\n\n       //   \\t为tab缩进\n\n        &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d\\t&amp;#34;&lt;/span&gt;, i, j, i*j);\n\n    &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n}\n\n&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["用c语言或者c++编程", ["打印输出九九乘法表", "打印输出九九乘法表", "打印输出九九乘法表", "打印输出九九乘法表"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;写法有问题&amp;#xff0c;以Add函数和Sub函数为例&amp;#xff0c;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;void Add() //加法运算函数\n{\n    user.nAdd&amp;#43;&amp;#43;;\n    rational num1,num2,sum,Zero(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;加法计算\\n&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;最少输入两个数,并且以-1结束\\n&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    sum &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;第&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;个数:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; num1;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num1&amp;#61;&amp;#61;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        sum&amp;#61;sum&amp;#43;num1;\n        \n        i&amp;#43;&amp;#43;;\n    }\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;加法结果是:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;sum&amp;lt;&amp;lt;endl;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请按任意键继续\\n&amp;#34;&lt;/span&gt;;\n    cout.flush();\n    cin.get();\n    cin.get();\n}\n\n\nvoid Sub() //减法函数\n{\n    user.nSub&amp;#43;&amp;#43;;\n    rational num1,num2,&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;sub&lt;/span&gt;,&lt;span class=\"hljs-title\"&gt;Zero&lt;/span&gt;&lt;/span&gt;(0,0);\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;最少输入两个数&amp;#xff0c;并且以-1结束\\n&amp;#34;&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;第1个数:&amp;#34;&lt;/span&gt;;\n    cin&amp;gt;&amp;gt;num1;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;sub&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-title\"&gt;num1&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {\n        cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;第&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;个数:&amp;#34;&lt;/span&gt;;\n        cin&amp;gt;&amp;gt;num1;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num1&amp;#61;&amp;#61;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;sub&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-title\"&gt;sub&lt;/span&gt;-&lt;span class=\"hljs-title\"&gt;num1&lt;/span&gt;&lt;/span&gt;;\n        i&amp;#43;&amp;#43;;\n        \n    }\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;减法结果是:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;sub&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-title\"&gt;endl&lt;/span&gt;&lt;/span&gt;;\n    cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;请按任意键继续\\n&amp;#34;&lt;/span&gt;;\n    cout.flush();\n    cin.get();\n    cin.get();\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["分数计算器实现 bug多想知道怎么改", ["主要问题还挺大的 ：", "1.答案中没有约分", "2.计算过程 加减乘除 我想输入-1停止但是实现不了 会一直循环下去", "\n", "/*（1）为有理数定义一个Rational类。有理数可以表示成为两个相除的整数，如3/4、13/3等。将有理数表示成int类型的两个值相除，分别表示分子和分母；\n（2）通过接收从键盘输入a/b形式的分数生成有理数类的对象，在程序中可以识别出分子和分母并正确赋值;（要判断分母是否为0）；\n（3）采用运算符重载方法定义有理数的加、减、乘、除运算；（需要判断除数是否为0）\n（4）设计有理数计算器测试程序，采用由计算机随机出题（用随机数），用户答题的形式，对有理数的加法、减法、乘法和除法进行测试。\n（5）（选做题）设计记录功能，可以记录下不同用户使用计算器的情况，记录以文件形式保存。程序运行时要求输入用户名，显示该用户以前的记录。用户记录包括：做了多少次加法、减法、乘法和除法，进行测试的次数，测试的平均分等，在退出计算器程序时用新的用户记录代替原有记录。*/", "\n", "#", "include", " ", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "struct", " ", "User", " ", "//用户结构体类型定义", "\n{\n   ", "char", " szName[", "20", "]; ", "//用户名", "\n   ", "int", " nTime; ", "//使用次数", "\n   ", "int", " nTest; ", "//测试次数", "\n   ", "double", " alAve; ", "//平均成绩", "\n   ", "int", " nAdd; ", "//加法次数", "\n   ", "int", " nSub; ", "//减法次数", "\n   ", "int", " nMul; ", "//乘法次数", "\n   ", "double", " dlScore[", "3", "]; ", "//3次测试得分", "\n}user;\n", "class", " ", "rational", "  \n{\n", "public", ":\n    ", "void", " ", "print", "()", ";                    ", "//输出函数", "\n    ", "rational", "(", "int", " x=", "0", ",", "int", " y=", "0", ");\n    ", "virtual", " ~", "rational", "();\n    ", "void", " ", "optimization", "()", ";            ", "//优化有理数函数", "\n    ", "friend", " rational ", "operator", " + (rational num1,rational num2);    ", "//重载运算符+", "\n    ", "friend", " rational ", "operator", " - (rational num1,rational num2);    ", "//重载运算符-", "\n    ", "friend", " rational ", "operator", " * (rational num1,rational num2);    ", "//重载运算符*", "\n    ", "friend", " rational ", "operator", " / (rational num1,rational num2);    ", "//重载运算符/", "\n    ", "friend", " istream& ", "operator", ">>(istream& is, rational& r);", "//重载流输入 ", "\n    ", "friend", " ostream& ", "operator", "<<(ostream& os, rational& r);", "//重载流输出 ", "\n    ", "friend", " ", "bool", " ", "operator", " ==(rational num1,rational num2);        ", "//重载运算符==", "\n    ", "friend", " ", "double", " ", "real", "(rational x)", ";                            ", "//声明转换函数", "\n", "private", ":\n\n    ", "int", " denominator;                ", "//分母", "\n    ", "int", " numerator;                    ", "//分子", "\n};\nrational::", "rational", "(", "int", " x,", "int", " y)\n{\n    numerator= x;\n    denominator= y;\n    ", "optimization", "();            ", "//有理数优化", "\n}\n\nrational::~", "rational", "()\n{\n}\n", "void", " ", "rational::print", "()", "\n", "{\n    cout<<numerator;\n    ", "if", "(numerator!=", "0", " && denominator!=", "1", ")\n        cout<<", "\"/\"", "<<denominator<<", "\"\\n\"", ";\n    ", "else", "\n        cout<<", "\"\\n\"", ";\n}\n", "void", " ", "rational::optimization", "()", "\n", "{\n    ", "int", " gcd;\n    ", "int", " i=", "1", ";\n    ", "if", "(numerator==", "0", ")        ", "//如果分子为零，则分母为1后返回", "\n    {\n        denominator= ", "1", ";\n        ", "return", ";\n    }\n    ", "//取分子分母中较小的数作为公约数极限", "\n    gcd= (", "abs", "(numerator)>", "abs", "(denominator))?", "abs", "(numerator):", "abs", "(denominator);\n    ", "if", "(gcd==", "0", ")\n        ", "return", ";                ", "//若为0，则返回", "\n    ", "for", "(", "int", " i=gcd;i>", "1", ";i--)        ", "//用循环找最大公约数", "\n        ", "if", "((numerator%i==", "0", ")&& (denominator%i==", "0", "))\n            ", "break", ";\n    numerator/=i;            ", "//i为最大公约数，将分子分母整除它，重新赋值", "\n    denominator/=i;\n    ", "//若分子分母均为负数，则结果为正", "\n    ", "if", "(numerator<", "0", " && denominator<", "0", ")\n    {\n        numerator= -numerator;\n        denominator= -denominator;\n    }\n    ", "//若分子分母只有一个为负数，则调整为分子取负，分母取正", "\n    ", "else", " ", "if", "(numerator<", "0", " || denominator<", "0", ")\n    {\n        numerator= -", "abs", "(numerator);\n        denominator=", "abs", "(denominator);\n    }\n}\nrational ", "operator", " + (rational num1,rational num2)\n{\n    rational temp;\n    temp.denominator =num1.denominator *num2.denominator ;\n    temp.numerator = num1.numerator *num2.denominator +num1.denominator *num2.numerator ;\n    temp.", "optimization", " ();\n    ", "return", "  temp;\n}\nrational ", "operator", " - (rational num1,rational num2)\n{\n    rational temp;\n    temp.denominator =num1.denominator *num2.denominator ;\n    temp.numerator = num1.numerator *num2.denominator -num1.denominator *num2.numerator ;\n    temp.", "optimization", " ();\n    ", "return", "  temp;\n}    \nrational ", "operator", " * (rational num1,rational num2)\n{\n    rational  temp;\n    temp.denominator =num1.denominator *num2.denominator ;\n    temp.numerator = num1.numerator *num2.numerator ;\n    temp.", "optimization", " ();\n    ", "return", " temp;\n}\n\nrational ", "operator", " / (rational num1,rational num2)\n{\n    rational temp;\n    temp.denominator =num1.denominator *num2.numerator  ;\n    temp.numerator = num1.numerator *num2.denominator ;\n    temp.", "optimization", " ();\n    ", "return", " temp;\n}\n\n", "bool", " ", "operator", " ==(rational num1,rational num2)\n{\n    ", "if", "(num1.numerator ==num2.numerator && num1.denominator ==num2.denominator )\n        ", "return", " ", "true", ";\n    ", "else", "\n        ", "return", " ", "false", ";\n}        \nistream& ", "operator", ">>(istream& is, rational& r) {\n    is >> r.numerator >> r.denominator;\n    ", "if", " (r.denominator != ", "0", ") {\n        ", "return", " is;\n    }\n    ", "else", " {\n        cout << ", "\"The denominator is 0, which is illegal. Please try again!\"", " << endl;\n        ", "exit", "(", "0", ");\n    }\n}\nostream& ", "operator", "<<(ostream& os, rational& r) {\n    ", "if", " (r.numerator % r.denominator == ", "0", ") {\n        os << r.numerator / r.denominator << endl;\n        ", "return", " os;\n    }\n    ", "else", "\n        os << r.numerator << ", "\"\\\\\"", " << r.denominator;\n    ", "return", " os;\n}\n", "double", " ", "real", "(rational x)", "\n", "{\n    ", "return", "(", "double", "(x.numerator)/", "double", "(x.denominator));\n}    \n", "void", " ", "Test", "()", " ", "//测试函数", "\n", "{\n   user.nTest++;\n   cout<<", "\"共10道题，做100以内的加减运算，满分100分:\\n\"", ";\n   ", "double", " real1,real2,image1,image2,real3,real4,image3,image4;\n   rational answer,temp;\n   ", "int", " score=", "0", ";\n   ", "char", " op;\n   ", "for", "(", "int", " i=", "0", ";i<=", "9", ";i++)\n{\n    ", "int", " m1 = ", "rand", "() % ", "100", " + ", "1", "; ", "//生成1-100的随机数", "\n    ", "int", " n1 = ", "rand", "() % ", "100", " + ", "1", ";\n    ", "int", " m2 = ", "rand", "() % ", "100", " + ", "1", ";\n    ", "int", " n2 = ", "rand", "() % ", "100", " + ", "1", ";\n    ", "rational ", "a", "(m1,n1)", ",", "b", "(m2,n2)", ";\n    ", "int", " m3=", "rand", "()%", "20", "-10", ";\n    ", "int", " n3=", "rand", "()%", "20", "-10", ";\n    ", "int", " m4=", "rand", "()%", "20", "-10", ";\n    ", "int", " n4=", "rand", "()%", "20", "-10", ";\n    ", "rational ", "c", "(m3,n3)", ",", "d", "(m4,n4)", ";\n    op=", "rand", "()%", "4", "; ", "//产生随机加减乘除运算的三个值", "\n    ", "switch", "(op)\n {\n    ", "case", " ", "0", ":\n    answer=a+b;\n    cout<<a<<", "\"加上\"", "<<b<<", "\"等于\"", ";\n    ", "break", ";\n    ", "case", " ", "1", ":\n    cout<<a<<", "\"减去\"", "<<b<<", "\"等于\"", ";\n    ", "break", ";\n    ", "case", " ", "2", ":\n    answer=c*d;\n    cout<<c<<", "\"乘以\"", "<<d<<", "\"等于\"", ";\n   ", "break", ";\n}\ncin>>temp; ", "//输入用户计算值", "\n", "if", "(answer==temp) ", "//比较用户计算值", "\n{\nscore+=", "10", ";\n}\n", "else", "\n{\ncout<<", "\"此题做错了\\n\"", ";\ncout<<", "\"正确答案为:\"", "<<answer<<endl;\n}\n}\ncout<<", "\"你的最后得分是:\"", "<<score<<endl;\n", "if", "(user.nTest<=", "3", ")\n{\nuser.alAve=", "0", ";\nuser.dlScore[user.nTest", "-1", "]=score;\n", "for", "(", "int", " i=", "0", ";i<user.nTest;i++)\nuser.alAve+=user.dlScore[i];\nuser.alAve=user.alAve/user.nTest;\n}\n", "else", "\n{\nuser.dlScore[", "0", "]=user.dlScore[", "1", "];\nuser.dlScore[", "1", "]=user.dlScore[", "2", "];\nuser.dlScore[", "2", "]=score;\n", "for", "(", "int", " i=", "0", ";i<", "3", ";i++){\nuser.alAve=", "0", ";\nuser.alAve+=user.dlScore[i];\nuser.alAve=user.alAve/", "3", ";\n}\ncout<<", "\"请按任意键继续\\n\"", ";\ncout.", "flush", "();\ncin.", "get", "();\ncin.", "get", "();\n}\n}\n", "void", " ", "Add", "()", " ", "//加法运算函数", "\n", "{\n   user.nAdd++;\n   rational num1,num2,sum,", "Zero", "(", "0", ",", "0", ");\n   cout<<", "\"加法计算\\n\"", "<<", "\"最少输入两个数,并且以-1结束\\n\"", ";\n   cout<<", "\"第一个数:\"", ";\n   cin>>num1;\n   cout<<", "\"第二个数:\"", ";\n   cin>>num2;\n   sum=num1+num2;\n   cout<<", "\"第三个数:\"", ";\n   cin>>num1;\n   ", "int", " i=", "4", ";\n   ", "while", "(", "1", ")\n{\n   sum=sum+num1;\n   cout<<", "\"第\"", "<<i<<", "\"个数:\"", ";\n   cin>>num1;\n   i++;\n   ", "if", "(num1==", "-1", ")\n   ", "break", ";\n}\ncout<<", "\"加法结果是:\"", "<<sum<<endl;\ncout<<", "\"请按任意键继续\\n\"", ";\ncout.", "flush", "();\ncin.", "get", "();\ncin.", "get", "();\n}\n", "void", " ", "Sub", "()", " ", "//减法函数", "\n", "{\n  user.nSub++;\n  rational num1,num2,sub,", "Zero", "(", "0", ",", "0", ");\n  cout<<", "\"最少输入两个数，并且以-1结束\\n\"", ";\n  cout<<", "\"第1个数:\"", ";\n  cin>>num1;\n  cout<<", "\"第2个数:\"", ";\n  cin>>num2;\n  sub=num1-num2;\n  cout<<", "\"第3个数:\"", ";\n  cin>>num1;\n  ", "int", " i=", "4", ";\n   ", "while", "(", "1", ")\n{\nsub=sub-num1;\ncout<<", "\"第\"", "<<i<<", "\"个数:\"", ";\ncin>>num1;\ni++;\n", "if", "(num1==", "-1", ")\n", "break", ";\n}\ncout<<", "\"减法结果是:\"", "<<sub<<endl;\ncout<<", "\"请按任意键继续\\n\"", ";\ncout.", "flush", "();\ncin.", "get", "();\ncin.", "get", "();\n}\n", "void", " ", "Mul", "()", " ", "//乘积函数", "\n", "{\n   user.nMul++;\n   rational num1,num2,mul,", "Zero", "(", "0", ",", "0", ");\n   cout<<", "\"乘法计算\\n\"", "<<", "\"最少输入两数,并且以-1结束\\n\"", ";\n   cout<<", "\"第一个数:\"", ";\n   cin>>num1;\n   cout<<", "\"第二个数:\"", ";\n   cin>>num2;\n   mul=num1*num2;\n   cout<<", "\"第三个数:\"", ";\n   cin>>num1;\n   ", "int", " i=", "4", ";\n  ", "while", "(", "1", ")\n  {\n    num1=mul*num1;\n    cout<<", "\"第\"", "<<i<<", "\"个数:\"", ";\n    cin>>num1;\n    i++;\n    ", "if", "(num1==", "-1", ")\n    ", "break", ";\n}\n  cout<<", "\"乘法结果是:\"", "<<mul<<endl;\n  cout<<", "\"请按任意键继续\\n\"", ";\n  cout.", "flush", "();\n  cin.", "get", "();\n  cin.", "get", "();\n}\n", "void", " ", "userprint", "()", " ", "//输出用户信息函数", "\n", "{\n  cout<<user.szName<<", "\"使用的次数为:\"", "<<user.nTime<<endl;\n  cout<<", "\"其中:\\t加法的次数:\"", "<<user.nAdd<<", "\"\\t减法的次数:\"", "<<user.nSub<<", "\"\\t乘法的次数:\"", "<<user.nMul<<endl;\n  cout<<", "\"\\t测试次数:\"", "<<user.nTest<<", "\"\\t平均成绩:\"", "<<user.alAve<<endl;\n}\n", "void", " ", "Login", "()", " ", "//当前用户信息函数", "\n", "{\n    ", "char", " szName[", "20", "];\n    cout << ", "\"请输入您的姓名:\"", ";\n    cin.", "getline", "(szName, ", "20", ");\n    ifstream infile;\n    User user1;\n    infile.", "open", "(", "\"user.dat\"", ", ios::binary | ios::in);\n    ", "if", " (!infile)\n    {\n        cout << ", "\"没有原始记录文件，您是第一个用户!\\n\"", ";\n        ", "strcpy", "(user.szName, szName);\n        user.nTest++;\n        ", "return", ";\n    }\n    infile.", "read", "((", "char", "*)&user1, ", "sizeof", "(User));\n    ", "while", " (!infile.", "eof", "())\n    {\n        ", "if", " (", "strcmp", "(user1.szName, szName) == ", "0", ")\n        {\n            user = user1;\n            user.nTime++;\n            cout << ", "\"欢迎您再次使用计算器!\"", ";\n            ", "userprint", "();\n            cin.", "get", "();\n            infile.", "close", "();\n            ", "return", ";\n        }\n        infile.", "read", "((", "char", "*)&user1, ", "sizeof", "(User));\n    }\n    cout << ", "\"欢迎您再次使用计算器!\"", ";\n    ", "strcpy", "(user.szName, szName);\n    user.nTime++;\n    infile.", "close", "();\n    ", "return", ";\n}\n", "void", " ", "SaveFile", "()", " ", "//用户资料保存函数", "\n", "{\n    ", "userprint", "();\n    fstream file;\n    User user1;\n    file.", "open", "(", "\"user.dat\"", ", ios::binary | ios::in | ios::out);\n    ", "if", " (!file)\n    {\n        cout << ", "\"文件打开错误，不能进行更新!\\n\"", ";\n        ", "return", ";\n    }\n    file.", "seekp", "(", "0", ", ios::beg);\n    ", "while", " (!file.", "eof", "())\n    {\n        file.", "read", "((", "char", "*)&user1, ", "sizeof", "(User));\n        ", "if", " (", "strcmp", "(user1.szName, user.szName) == ", "0", ")\n        {\n            file.", "seekp", "(", "-1", " * (", "sizeof", "(User)), ios::cur);\n            file.", "write", "((", "char", "*)&user, ", "sizeof", "(User));\n            file.", "close", "();\n            ", "return", ";\n        }\n    }\n    file.", "close", "();\n    fstream outfile;\n    outfile.", "open", "(", "\"user.dat\"", ", ios::binary | ios::app);\n    outfile.", "write", "((", "char", "*)&user, ", "sizeof", "(User));\n    outfile.", "close", "();\n    ", "return", ";\n}\n\n", "int", " ", "main", "()", "{\n    rational t1,t2;\n    rational c;\n    ", "int", " choise;\n    ", "Login", "(); ", "//当前用户信息函数", "\n    ", "do", "\n    {\n        ", "system", "(", "\"cls\"", ");\n        cout << ", "\"\\t这是一个简单的计算器程序，可以实现以下功能，请按对应的按键(1-5)\\n\\n\\n\"", ";\n        cout << ", "\"\\t=========================MENU===========================\\n\"", ";\n        cout << ", "\"\\t1:有理数加法，以0结束\\n\"", ";\n        cout << ", "\"\\t2:有理数减法，以0结束\\n\"", ";\n        cout << ", "\"\\t3:测试分数加减乘法运算，1次测试10道题\\n\"", ";\n        cout << ", "\"\\t4:有理数乘法，以0结束\\n\"", ";\n        cout << ", "\"\\t5:有理数除法，以0结束\\n\"", ";\n        cout << ", "\"\\t0:退出程序\\n\\n:\"", ";\n        cout << ", "\"\\t请您选择:\"", ";\n        cin >> choise;\n        ", "if", " (choise == ", "1", ")\n        {   \n            ", "Add", "();\n        }\n        ", "else", " ", "if", " (choise == ", "2", ")\n        {   \n            ", "Sub", "();\n        }\n        ", "else", " ", "if", " (choise == ", "3", ")\n        {   \n            ", "Test", "();\n        }\n        ", "else", " ", "if", " (choise == ", "4", ")\n        {   \n            ", "Mul", "();\n        }\n        ", "else", " ", "if", " (choise == ", "5", ")\n        {   cin>>t1;\n            cin>>t2;\n            rational c = t1 / t2;\n            c.", "optimization", "();    \n            c.", "print", "();\n        }\n    \n        ", "else", " ", "if", " (choise == ", "0", ") ", "//用户选0则结束调用函数", "\n        {\n            cout << ", "\"\\n\\n\\t欢迎下次继续使用计算器!\\n\"", ";\n            ", "break", ";\n        }\n        ", "else", "\n        {\n            cout << ", "\"\\n\\t输入错误，请按任意键继续!\\n\"", ";\n        }", "system", "(", "\"pause\"", ");\n    } ", "while", " (", "1", ");\n    ", "SaveFile", "(); ", "//调用用户资料保存函数", "\n    ", "return", " ", "0", ";\n}\n", "\n", "谢谢大家！"]], "Tag": "算法设计"}
{"Answer": "我明白大概意思了，是两个字符串输入后不转换为数据，直接字符串里面按位进行计算的，我大概注释了一下，你看看：\r\n\r\n```\r\n \r\ninline int compare(string str1, string str2) {\r\n\tif (str1.size() &gt; str2.size()) //长度长的整数大于长度小的整数\r\n\t\treturn 1;\r\n\telse if (str1.size() &lt; str2.size())\r\n\t\treturn -1;\r\n\telse\r\n\t\treturn str1.compare(str2); //若长度相等，从头到尾按位比较，compare函数：相等返回0，大于返回1，小于返回－1\r\n}\r\nstring ADD_INT(string str1, string str2) {//高精度加法\r\n\tstring SUB_INT(string str1, string str2);\r\n\tint sign = 1; //sign 为符号位\r\n\tstring str;//计算结果\r\n\tif (str1[0] == '-') {\r\n\t\tif (str2[0] == '-') {\r\n\t\t\tsign = -1;\r\n\t\t\tstr = ADD_INT(str1.erase(0, 1), str2.erase(0, 1));// 两个数都是负数，sign负值-1表示结果为负\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstr = SUB_INT(str2, str1.erase(0, 1));//1为负2为正，相减\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tif (str2[0] == '-')\r\n\t\t\tstr = SUB_INT(str1, str2.erase(0, 1));//1为正2为负，相减\r\n\t\telse {\r\n\t\t\t//把两个整数对齐，短整数前面加0补齐\r\n\t\t\tstring::size_type l1, l2;\r\n\t\t\tint i;\r\n\t\t\tl1 = str1.size(); l2 = str2.size();//获取输入的两个数长度\r\n\t\t\tif (l1 &lt; l2) {//数1长度小于数2，在数1前面补零\r\n\t\t\t\tfor (i = 1; i &lt;= l2 - l1; i++)\r\n\t\t\t\t\tstr1 = \"0\" + str1;\r\n\t\t\t}\r\n\t\t\telse {//数1长度大于等于数2，在数2前面补零，如果相等则不用补零\r\n\t\t\t\tfor (i = 1; i &lt;= l1 - l2; i++)\r\n\t\t\t\t\tstr2 = \"0\" + str2;\r\n\t\t\t}\r\n\t\t\tint int1 = 0, int2 = 0; //int2 记录进位\r\n\t\t\tfor (i = str1.size() - 1; i &gt;= 0; i--) {//从个位开始循环计算，int1是相加结果，int2是进位值\r\n\t\t\t\tint1 = (int(str1[i]) - '0' + int(str2[i]) - '0' + int2) % 10;\r\n\t\t\t\tint2 = (int(str1[i]) - '0' + int(str2[i]) - '0' + int2) / 10;\r\n\t\t\t\tstr = char(int1 + '0') + str;\r\n\t\t\t}\r\n\t\t\tif (int2 != 0) str = char(int2 + '0') + str;\r\n\t\t}\r\n\t}\r\n\t//运算后处理符号位\r\n\tif ((sign == -1) &amp;&amp; (str[0] != '0'))//判断符合变量sign决定数字的正负\r\n\t\tstr = \"-\" + str;\r\n\treturn str;\r\n}\r\nstring SUB_INT(string str1, string str2) {//高精度减法\r\n\tstring MUL_INT(string str1, string str2);\r\n\tint sign = 1; //sign 为符号位\r\n\tstring str;\r\n\tint i;\r\n\tif (str2[0] == '-')\r\n\t\tstr = ADD_INT(str1, str2.erase(0, 1));//数2是负值时，将数2与数1做加法\r\n\telse {\r\n\t\tint res = compare(str1, str2);//数2为正，比较两个数长度\r\n\t\tif (res == 0) return \"0\";//两数相等返回0\r\n\t\tif (res &lt; 0) {//数1小于数2，设置符号为负，交换两个值\r\n\t\t\tsign = -1;\r\n\t\t\tstring temp = str1;\r\n\t\t\tstr1 = str2;\r\n\t\t\tstr2 = temp;\r\n\t\t}\r\n\t\tstring::size_type tempint;\r\n\t\ttempint = str1.size() - str2.size();//两个数的位数差\r\n\t\tfor (i = str2.size() - 1; i &gt;= 0; i--) {//逐位计算相减\r\n\t\t\tif (str1[i + tempint] &lt; str2[i]) {\r\n\t\t\t\tstr1[i + tempint - 1] = char(int(str1[i + tempint - 1]) - 1);//数1的当前位小于数2\r\n\t\t\t\tstr = char(str1[i + tempint] - str2[i] + ':') + str;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tstr = char(str1[i + tempint] - str2[i] + '0') + str;//数1的当前位大于数2\r\n\t\t}\r\n\t\tfor (i = tempint - 1; i &gt;= 0; i--)//将前面未进行计算的的位补上\r\n\t\t\tstr = str1[i] + str;\r\n\t}\r\n\t//去除结果中多余的前导0\r\n\tstr.erase(0, str.find_first_not_of('0'));\r\n\tif (str.empty()) str = \"0\";\r\n\tif ((sign == -1) &amp;&amp; (str[0] != '0'))\r\n\t\tstr = \"-\" + str;\r\n\treturn str;\r\n}\r\nstring MUL_INT(string str1, string str2) {//高精度乘法\r\n\tint sign = 1; //sign 为符号位\r\n\tstring str;\r\n\tif (str1[0] == '-') {//分别对数1数2进行判断，为负数则符号位修改一次\r\n\t\tsign *= -1;\r\n\t\tstr1 = str1.erase(0, 1);\r\n\t}\r\n\tif (str2[0] == '-') {\r\n\t\tsign *= -1;\r\n\t\tstr2 = str2.erase(0, 1);\r\n\t}\r\n\tint i, j;\r\n\tstring::size_type l1, l2;\r\n\tl1 = str1.size(); l2 = str2.size();\r\n\tfor (i = l2 - 1; i &gt;= 0; i--) {  //实现手工乘法\r\n\t\tstring tempstr;\r\n\t\tint int1 = 0, int2 = 0, int3 = int(str2[i]) - '0';//int1记录结果，int2记录进位\r\n\t\tif (int3 != 0) {\r\n\t\t\tfor (j = 1; j &lt;= (int)(l2 - 1 - i); j++)\r\n\t\t\t\ttempstr = \"0\" + tempstr;\r\n\t\t\tfor (j = l1 - 1; j &gt;= 0; j--) {\r\n\t\t\t\tint1 = (int3 * (int(str1[j]) - '0') + int2) % 10;\r\n\t\t\t\tint2 = (int3 * (int(str1[j]) - '0') + int2) / 10;\r\n\t\t\t\ttempstr = char(int1 + '0') + tempstr;\r\n\t\t\t}\r\n\t\t\tif (int2 != 0) tempstr = char(int2 + '0') + tempstr;\r\n\t\t}\r\n\t\tstr = ADD_INT(str, tempstr);//按位累计每次相乘的结果\r\n\t}\r\n\t//去除结果中的前导0\r\n\tstr.erase(0, str.find_first_not_of('0'));\r\n\tif (str.empty()) str = \"0\";\r\n\tif ((sign == -1) &amp;&amp; (str[0] != '0'))\r\n\t\tstr = \"-\" + str;\r\n\treturn str;\r\n}\r\nstring DIVIDE_INT(string str1, string str2, int flag) {//高精度除法\r\n\t//flag = 1时,返回商; flag = 0时,返回余数\r\n\tstring quotient, residue; //定义商和余数\r\n\tint sign1 = 1, sign2 = 1;\r\n\tif (str2 == \"0\") {  //判断除数是否为0\r\n\t\tquotient = \"ERROR!\";\r\n\t\tresidue = \"ERROR!\";\r\n\t\tif (flag == 1) return quotient;\r\n\t\telse return residue;\r\n\t}\r\n\tif (str1 == \"0\") { //判断被除数是否为0\r\n\t\tquotient = \"0\";\r\n\t\tresidue = \"0\";\r\n\t}\r\n\tif (str1[0] == '-') {//根据数1数2正负判断结果正负\r\n\t\tstr1 = str1.erase(0, 1);\r\n\t\tsign1 *= -1;\r\n\t\tsign2 = -1;\r\n\t}\r\n\tif (str2[0] == '-') {\r\n\t\tstr2 = str2.erase(0, 1);\r\n\t\tsign1 *= -1;\r\n\t}\r\n\tint res = compare(str1, str2);\r\n\tif (res &lt; 0) {//数1小于数2，商为0，余数为数1\r\n\t\tquotient = \"0\";\r\n\t\tresidue = str1;\r\n\t}\r\n\telse if (res == 0) {//相等，商为1，余数0\r\n\t\tquotient = \"1\";\r\n\t\tresidue = \"0\";\r\n\t}\r\n\telse {//数1大于数2进行除法计算\r\n\t\tstring::size_type l1, l2;\r\n\t\tl1 = str1.size(); l2 = str2.size();\r\n\t\tstring tempstr;\r\n\t\ttempstr.append(str1, 0, l2 - 1);\r\n\t\t//模拟手工除法\r\n\t\tfor (int i = l2 - 1; i &lt; l1; i++) {//逐位计算\r\n\t\t\ttempstr = tempstr + str1[i];\r\n\t\t\tfor (char ch = '9'; ch &gt;= '0'; ch--) { //试商\r\n\t\t\t\tstring str;\r\n\t\t\t\tstr = str + ch;\r\n\t\t\t\tif (compare(MUL_INT(str2, str), tempstr) &lt;= 0) {//数2乘以多少小于等于数1\r\n\t\t\t\t\tquotient = quotient + ch;//商累计\r\n\t\t\t\t\ttempstr = SUB_INT(tempstr, MUL_INT(str2, str));//余数累计\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresidue = tempstr;\r\n\t}\r\n\t//去除结果中的前导0\r\n\tquotient.erase(0, quotient.find_first_not_of('0'));\r\n\tif (quotient.empty()) quotient = \"0\";\r\n\tif ((sign1 == -1) &amp;&amp; (quotient[0] != '0'))\r\n\t\tquotient = \"-\" + quotient;\r\n\tif ((sign2 == -1) &amp;&amp; (residue[0] != '0'))\r\n\t\tresidue = \"-\" + residue;\r\n\tif (flag == 1) return quotient;\r\n\telse return residue;\r\n}\r\nstring DIV_INT(string str1, string str2) {//高精度除法,返回商\r\n\treturn DIVIDE_INT(str1, str2, 1);\r\n}\r\nstring MOD_INT(string str1, string str2) {//高精度除法,返回余数\r\n\treturn DIVIDE_INT(str1, str2, 0);\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["求大神帮忙注释c++代码。高精度计算器。", ["最近在学习制作高精度计算器，前辈给了我一段参考代码，但是我对其中有一部分还是不太懂。", "\n【计算器要求】", "\n实现两个高精度大整数（200位以内的整数）的四则运算，输出这两个大整数的和、差、积、商及余数。", "\n· 请大神如果有空，帮我对几个运算符号代码（主程序不需要）进行注释！越详细越好！十分感谢！", "\n· 如果寻找到可优化的部分或者bug也请进行修改并标注，谢谢！", "\n\n", "#include <iostream>\n#include <string>\nusing namespace std;\ninline int compare(string str1, string str2) {\n    if(str1.size() > str2.size()) //长度长的整数大于长度小的整数\n        return 1;\n    else if(str1.size() < str2.size())\n        return -1;\n    else\n        return str1.compare(str2); //若长度相等，从头到尾按位比较，compare函数：相等返回0，大于返回1，小于返回－1\n}\nstring ADD_INT(string str1, string str2) {//高精度加法\n    string SUB_INT(string str1, string str2);\n    int sign = 1; //sign 为符号位\n    string str;\n    if(str1[0] == '-') {\n        if(str2[0] == '-') {\n            sign = -1;\n            str = ADD_INT(str1.erase(0, 1), str2.erase(0, 1));\n        } else {\n            str = SUB_INT(str2, str1.erase(0, 1));\n        }\n    } else {\n        if(str2[0] == '-')\n            str = SUB_INT(str1, str2.erase(0, 1));\n        else {\n            //把两个整数对齐，短整数前面加0补齐\n            string::size_type l1, l2;\n            int i;\n            l1 = str1.size(); l2 = str2.size();\n            if(l1 < l2) {\n                for(i = 1; i <= l2 - l1; i++)\n                    str1 = \"0\" + str1;\n            } else {\n                for(i = 1; i <= l1 - l2; i++)\n                    str2 = \"0\" + str2;\n            }\n            int int1 = 0, int2 = 0; //int2 记录进位\n            for(i = str1.size() - 1; i >= 0; i--) {\n                int1 = (int(str1[i]) - '0' + int(str2[i]) - '0' + int2) % 10;\n                int2 = (int(str1[i]) - '0' + int(str2[i]) - '0' +int2) / 10;\n                str = char(int1 + '0') + str;\n            }\n            if(int2 != 0) str = char(int2 + '0') + str;\n        }\n    }\n    //运算后处理符号位\n    if((sign == -1) && (str[0] != '0'))\n        str = \"-\" + str;\n    return str;\n}\nstring SUB_INT(string str1, string str2) {//高精度减法\n    string MUL_INT(string str1, string str2);\n    int sign = 1; //sign 为符号位\n    string str;\n    int i;\n    if(str2[0] == '-')\n        str = ADD_INT(str1, str2.erase(0, 1));\n    else {\n        int res = compare(str1, str2);\n        if(res == 0) return \"0\";\n        if(res < 0) {\n            sign = -1;\n            string temp = str1;\n            str1 = str2;\n            str2 = temp;\n        }\n        string::size_type tempint;\n        tempint = str1.size() - str2.size();\n        for(i = str2.size() - 1; i >= 0; i--) {\n            if(str1[i + tempint] < str2[i]) {\n                str1[i + tempint - 1] = char(int(str1[i + tempint - 1]) - 1);\n                str = char(str1[i + tempint] - str2[i] + ':') + str;\n            } else\n                str = char(str1[i + tempint] - str2[i] + '0') + str;\n        }\n        for(i = tempint - 1; i >= 0; i--)\n            str = str1[i] + str;\n    }\n    //去除结果中多余的前导0\n    str.erase(0, str.find_first_not_of('0'));\n    if(str.empty()) str = \"0\";\n    if((sign == -1) && (str[0] != '0'))\n        str = \"-\" + str;\n    return str;\n}\nstring MUL_INT(string str1, string str2) {//高精度乘法\n    int sign = 1; //sign 为符号位\n    string str;\n    if(str1[0] == '-') {\n        sign *= -1;\n        str1 = str1.erase(0, 1);\n    }\n    if(str2[0] == '-') {\n        sign *= -1;\n        str2 = str2.erase(0, 1);\n    }\n    int i, j;\n    string::size_type l1, l2;\n    l1 = str1.size(); l2 = str2.size();\n    for(i = l2 - 1; i >= 0; i --) {  //实现手工乘法\n        string tempstr;\n        int int1 = 0, int2 = 0, int3 = int(str2[i]) - '0';\n        if(int3 != 0) {\n            for(j = 1; j <= (int)(l2 - 1 - i); j++)\n                tempstr = \"0\" + tempstr;\n            for(j = l1 - 1; j >= 0; j--) {\n                int1 = (int3 * (int(str1[j]) - '0') + int2) % 10;\n                int2 = (int3 * (int(str1[j]) - '0') + int2) / 10;\n                tempstr = char(int1 + '0') + tempstr;\n            }\n            if(int2 != 0) tempstr = char(int2 + '0') + tempstr;\n        }\n        str = ADD_INT(str, tempstr);\n    }\n    //去除结果中的前导0\n    str.erase(0, str.find_first_not_of('0'));\n    if(str.empty()) str = \"0\";\n    if((sign == -1) && (str[0] != '0'))\n        str = \"-\" + str;\n    return str;\n}\nstring DIVIDE_INT(string str1, string str2, int flag) {//高精度除法\n    //flag = 1时,返回商; flag = 0时,返回余数\n    string quotient, residue; //定义商和余数\n    int sign1 = 1, sign2 = 1;\n    if(str2 == \"0\") {  //判断除数是否为0\n        quotient = \"ERROR!\";\n        residue = \"ERROR!\";\n        if(flag == 1) return quotient;\n        else return residue;\n    }\n    if(str1 == \"0\") { //判断被除数是否为0\n        quotient = \"0\";\n        residue = \"0\";\n    }\n    if(str1[0] == '-') {\n        str1 = str1.erase(0, 1);\n        sign1 *= -1;\n        sign2 = -1;\n    }\n    if(str2[0] == '-') {\n        str2 = str2.erase(0, 1);\n        sign1 *= -1;\n    }\n    int res = compare(str1, str2);\n    if(res < 0) {\n        quotient = \"0\";\n        residue = str1;\n    } else if(res == 0) {\n        quotient = \"1\";\n        residue = \"0\";\n    } else {\n        string::size_type l1, l2;\n        l1 = str1.size(); l2 = str2.size();\n        string tempstr;\n        tempstr.append(str1, 0, l2 - 1);\n        //模拟手工除法\n        for(int i = l2 - 1; i < l1; i++) {\n            tempstr = tempstr + str1[i];\n            for(char ch = '9'; ch >= '0'; ch --) { //试商\n                string str;\n                str = str + ch;\n                if(compare(MUL_INT(str2, str), tempstr) <= 0) {\n                    quotient = quotient + ch;\n                    tempstr = SUB_INT(tempstr, MUL_INT(str2, str));\n                    break;\n                }\n            }\n        }\n        residue = tempstr;\n    }\n    //去除结果中的前导0\n    quotient.erase(0, quotient.find_first_not_of('0'));\n    if(quotient.empty()) quotient = \"0\";\n    if((sign1 == -1) && (quotient[0] != '0'))\n        quotient = \"-\" + quotient;\n    if((sign2 == -1) && (residue[0] != '0'))\n        residue = \"-\" + residue;\n    if(flag == 1) return quotient;\n    else return residue;\n}\nstring DIV_INT(string str1, string str2) {//高精度除法,返回商\n    return DIVIDE_INT(str1, str2, 1);\n}\nstring MOD_INT(string str1, string str2) {//高精度除法,返回余数\n    return DIVIDE_INT(str1, str2, 0);\n}\nint main() {\n    char ch;\n    string s1, s2, res;\n    cout<<\"请输入 丨 加法：“+ ” 丨 减法：“- ” 丨 乘法：“* ” 丨 除法：“/ ” 丨 余数：“% ”丨来确定计算类型！\" <<endl; \n    while(cin >> ch) \n    {\n        cout<<\"请输入要计算的数1:\" <<endl; \n        cin >> s1;\n        cout<<\"请输入要计算的数2:\" <<endl; \n        cin >> s2;\n\n        switch(ch) {\n        case '+':  res = \"加法计算的结果是：\"+ADD_INT(s1, s2); break;\n        case '-':  res = \"减法计算的结果是：\"+SUB_INT(s1, s2); break;\n        case '*':  res = \"乘法计算的结果是：\"+MUL_INT(s1, s2); break;\n        case '/':  res = \"除法计算的结果是：\"+DIV_INT(s1, s2); break;\n        case '%':  res = \"除法计算后的余数是：\"+MOD_INT(s1, s2); break;\n        default :  break;\n        }\n        cout << res << endl;\n    }\n    return(0);\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;方法怎么写在case块中&amp;#xff1f;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;windows.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;a&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;;\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    查看for语句         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        1:查看          **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        0:退出          **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n           &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;);\n           &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n           &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;)\n           {\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        {\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;开始&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-comment\"&gt;//getch();&lt;/span&gt;\n            &lt;span class=\"hljs-title function_\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;color 1&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                            *                       &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                           ***                      &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt; &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                          *****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                         ******* &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;                       **********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;               ***************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        }&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\nint &lt;span class=\"hljs-title function_\"&gt;b&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;;\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*********************************&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**     观看数组类型图像    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**          1&amp;#xff1a;观看        **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**          2&amp;#xff1a;退出        **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            {   int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;];\n            int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                {\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;];\n                }\n            }\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输出10行10列的值&amp;#xff1a;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n               &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n               {\n                   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                   &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%5d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;[&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;][&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;]);\n                   &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                } \n        } &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已回到主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n             &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\nint &lt;span class=\"hljs-title function_\"&gt;c&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;;\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**      函数类型图像      **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        1&amp;#xff1a;阶乘         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        2&amp;#xff1a;最大值       **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        3&amp;#xff1a;返回         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//阶乘 &lt;/span&gt;\n             {\n                {\n                    int &lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                    int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;; \n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入阶乘的数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d!&amp;#61;%d&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//最大值 &lt;/span&gt;\n              {\n                {\n                    int &lt;span class=\"hljs-title function_\"&gt;max4&lt;/span&gt;(int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;max&lt;/span&gt;;\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入4个数&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d,%d,%d,%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;max&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max4&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;最大值是&amp;#xff1a;%d&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;max&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; \n                }\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            }\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  \n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n             &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;d&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;;\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**请选择九九乘法表类型**&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;********1&amp;#xff1a;左上*********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*****   2&amp;#xff1a;左下   ******&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;***     3&amp;#xff1a;右上     ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;***     4&amp;#xff1a;右下     ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*****   5&amp;#xff1a;奇数   ******&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;********6&amp;#xff1a;返回*********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表左上&lt;/span&gt;\n                {\n                    int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;)\n                    {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    }\n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;////九九乘法表左下&lt;/span&gt;\n                {\n                 int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;;\n                 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     {\n                     &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);   \n                     &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                     }    \n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表右上 &lt;/span&gt;\n                {\n                    int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;; \n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                    {\n                    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                    {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;)\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n                    }\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    }    \n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  \n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表右下 &lt;/span&gt;\n                             {\n                 int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                        {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);   \n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                        }\n                    }\n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; \n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:&lt;span class=\"hljs-comment\"&gt;//九九乘法表奇数 &lt;/span&gt;\n                {\n                 int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                 &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                     {\n                        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                         {\n                            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt;)\n                            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;%&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;!&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);   \n                            &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                         }\n                    }\n                };&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;   \n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n             &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         }\n}\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;e&lt;/span&gt;()\n{\n    int &lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt;;\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1:输入一个数&amp;#xff0c;判断是正数、负数还是零。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2:输入一个小于10000的正整数&amp;#xff0c;将其每个位数输出&amp;#xff0c;并且逆序输出。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3:输入4个数字&amp;#xff0c;让其从小到大排序。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4:求三位数的水仙花数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;5:用c语言求下列分数序列的前20项之和&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;6:一个球从100m高度自由落下,每次落地后反弹回原来高度的一半,再落下.求它在第10次落地并反弹到最高点,共经过多少m?第10次反弹多高?&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;7:输出杨辉三角。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;8:利用折半查找法找数。&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;9:输入3行字符串&amp;#xff0c;找出其中的大写字母、小写字母、数字&amp;#xff0c;空格以及其他字符的个数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;10:输入一段文字&amp;#xff0c;找出其中的大写字母、小写字母、数字&amp;#xff0c;空格以及其他字符的个数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;11:写程序完成下面条件&amp;#xff1a;1&amp;#xff09;输入10个职工的姓名和职工号&amp;#xff1b;2&amp;#xff09;按职工号由小到大的顺序排序&amp;#xff1b;3)要求输入一个职工号&amp;#xff0c;用折半法查找出该职工的姓名&amp;#xff0c;从主函数输入要查找的职工号&amp;#xff0c;输出该职工的姓名&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;12:给一段数&amp;#xff0c;给每个数之间插入空格&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;13:输入3个数字&amp;#xff0c;从小到大排列。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;14:编写C语言程序&amp;#xff0c;输入数组&amp;#xff0c;最大的与第一个元素交换&amp;#xff0c;最小的与最后一个元素交换&amp;#xff0c;输出数组。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;15:输入一行文字&amp;#xff0c;找出其中的大写字母、小写字母、数字&amp;#xff0c;空格以及其他字符的个数。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;16:输入5个学生的学号、姓名、分数1、分数2以及分数3并输出。&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n      &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)\n          {\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            {\n                int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入x的值:&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#61;-1&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                       &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#61;0&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#61;1&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            }&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;; \n        &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          }\n}\n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;f&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;f&lt;/span&gt;;\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**是否确认观看函数类型图像**&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        1:用号输出字母C的图案。       **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        2&amp;#xff1a;求最大值     **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**        3&amp;#xff1a;返回         **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n          &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;f&lt;/span&gt;)\n          {\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            {    \n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Hello C-world!&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; *&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; * &lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; ****&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n            }\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n              &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;F:&lt;span class=\"hljs-char escape_\"&gt;\\\\&lt;/span&gt;求最大值.exe&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;已返回主页面&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;  \n              &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n             &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;返回主界面请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n             }\n}\nint &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;()\n{\n     int &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;\n     &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n     {\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;********操作选项********&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    1:for语句       **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    2:数组类型      **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    3:函数类型      **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    4:九九乘法表    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    5:个人小    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;**    6:图像打印类    **&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n         &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n     &lt;span class=\"hljs-title function_\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;);\n     &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n     &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)\n      {\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;a&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;b&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n          &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;c&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;d&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;e&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;: &lt;span class=\"hljs-title function_\"&gt;f&lt;/span&gt;();&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n         &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff0c;请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n     } \n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\nint &lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;x&lt;/span&gt;)\n                {\n                    int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;lt;0,data error!&amp;#34;&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;fac&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;)&lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;;\n                    &lt;span class=\"hljs-title function_\"&gt;return&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;);\n                }\nint &lt;span class=\"hljs-title function_\"&gt;max4&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;c&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;d&lt;/span&gt;)\n                {\n                    int &lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(int &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,int &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;);\n                    int &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                    &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt;);\n                    &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;,&lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n&lt;/span&gt;;\n                }\n                int &lt;span class=\"hljs-title function_\"&gt;max2&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;a&lt;/span&gt;,&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;b&lt;/span&gt;)\n                {\n                     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;)\n                       &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt;;\n                     &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                       &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt;;\n                }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["我这个老是错误怎么解决", ["\n\n\n\n", "#include <stdio.h>", "\n", "#include <stdlib.h>", "\n", "#include <windows.h>", "\n", "void", " ", "a", "()\n{\n     int ", "a", ";\n         ", "printf", "(", "\"", "\\t", "**    查看for语句         **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        1:查看          **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        0:退出          **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "****************************", "\\n", "\"", ");\n           ", "scanf", "(", "\"%d\"", ",", "&", "a", ");\n           ", "printf", "(", "\"", "\\n", "\"", ");\n           ", "switch", "(", "a", ")\n           {\n          ", "case", " ", "1", ":\n        {\n            ", "printf", "(", "\"开始", "\\n", "\"", ");\n            ", "//getch();", "\n            ", "system", "(", "\"color 1\"", ");\n            ", "printf", "(", "\"                            *                       ", "\\n", "\"", ");\n            ", "printf", "(", "\"                           ***                      ", "\\n", " \"", ");\n            ", "printf", "(", "\"                          *****", "\\n", "\"", ");\n            ", "printf", "(", "\"                         ******* ", "\\n", "\"", ");\n            ", "printf", "(", "\"                       **********", "\\n", "\"", ");\n            ", "printf", "(", "\"               ***************************", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n            ", "printf", "(", "\"", "\\n", "\"", ");\n        }", "break", ";\n          ", "case", " ", "0", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";\n          ", "default", ":\n         ", "printf", "(", "\"输入错误，请重新输入", "\\n", "\"", ");\n         ", "break", ";\n         }\n       \n}\n\nint ", "b", "()\n{\n     int ", "b", ";\n         ", "printf", "(", "\"*********************************\"", ");\n         ", "printf", "(", "\"", "\\t", "**     观看数组类型图像    **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**          1：观看        **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**          2：退出        **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "*****************************", "\\n", "\"", ");\n          ", "scanf", "(", "\"%d\"", ",", "&", "b", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "b", ")\n          {\n             ", "case", " ", "1", ":\n            {   int ", "a", "[", "10", "][", "10", "];\n            int ", "x", ",", "y", ";\n            ", "for", "(", "x", "=", "0", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n            {\n                ", "for", "(", "y", "=", "0", ";", "y", "<=", "9", ";", "y", "+", "+", ")\n                {\n                    ", "a", "[", "x", "][", "0", "]", "=", "x", "+", "1", ";\n                    ", "a", "[", "x", "][", "y", "+", "1", "]", "=", "2", "*", "a", "[", "x", "][", "y", "];\n                }\n            }\n             ", "printf", "(", "\"输出10行10列的值：", "\\n", "\"", ");\n               ", "for", "(", "x", "=", "0", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n               {\n                   ", "for", "(", "y", "=", "0", ";", "y", "<=", "9", ";", "y", "+", "+", ")\n                   ", "printf", "(", "\"%5d\"", ",", "a", "[", "x", "][", "y", "]);\n                   ", "printf", "(", "\"", "\\n", "\"", ");\n                } \n        } ", "break", ";\n              ", "case", " ", "2", ":", "printf", "(", "\"已回到主页面", "\\n", "\"", ");", "break", ";\n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面请重新输入", "\\n", "\"", ");\n             ", "break", ";\n         }\n}\n\nint ", "c", "()\n{\n     int ", "c", ";\n          ", "printf", "(", "\"", "\\t", "**      函数类型图像      **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        1：阶乘         **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        2：最大值       **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        3：返回         **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "****************************", "\\n", "\"", ");\n          ", "scanf", "(", "\"%d\"", ",", "&", "c", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "c", ")\n          {\n             ", "case", " ", "1", ":", "//阶乘 ", "\n             {\n                {\n                    int ", "fac", "(int ", "x", ");\n                    int ", "x", ",", "y", "; \n                    ", "printf", "(", "\"输入阶乘的数：\"", ");\n                    ", "scanf", "(", "\"%d\"", ",", "&", "x", ");\n                    ", "y", "=", "fac", "(", "x", ");\n                    ", "printf", "(", "\"%d!=%d", "\\n", "\"", ",", "x", ",", "y", ");\n                    ", "return", " ", "0", ";\n                }\n                \n                int ", "fac", "(int ", "x", "); \n                {\n                    int ", "a", ",", "x", ";\n                    ", "if", "(", "x", "<", "0", ")\n                    ", "printf", "(", "\"x<0,data error!\"", ");\n                    ", "else", " ", "if", "(", "x", "==", "0", ",", "x", "==", "1", ")\n                    ", "a", "=", "1", ";\n                    ", "else", "\n                    ", "a", "=", "fac", "(", "x", "-1", ")", "*", "x", ";\n                    ", "return", "(", "a", ");\n                }", "break", ";\n            \n            }\n              ", "case", " ", "2", ":", "//最大值 ", "\n              {\n                {\n                    int ", "max4", "(int ", "a", ",int ", "b", ",int ", "c", ",int ", "d", ");\n                    int ", "a", ",", "b", ",", "c", ",", "d", ",", "max", ";\n                    ", "printf", "(", "\"请输入4个数：\"", ");\n                    ", "scanf", "(", "\"%d,%d,%d,%d\"", ",", "&", "a", ",", "&", "b", ",", "&", "c", ",", "&", "d", ");\n                    ", "max", "=", "max4", "(", "a", ",", "b", ",", "c", ",", "d", ");\n                    ", "printf", "(", "\"最大值是：%d", "\\n", "\"", ",", "max", ");\n                    ", "return", " ", "0", "; \n                }\n                int ", "max4", "(", "int", " ", "a", ",", "int", " ", "b", ",", "int", " ", "c", ",", "int", " ", "d", ")\n                {\n                    int ", "max2", "(int ", "a", ",int ", "b", ");\n                    int ", "n", ";\n                    ", "n", "=", "max2", "(", "a", ",", "b", ");\n                    ", "n", "=", "max2", "(", "n", ",", "c", ");\n                    ", "n", "=", "max2", "(", "n", ",", "d", ");\n                    ", "return", " ", "n", ";\n                }\n                int ", "max2", "(", "int", " ", "a", ",", "int", " ", "b", ")\n                {\n                     ", "if", "(", "a", ">=", "b", ")\n                       ", "return", " ", "a", ";\n                     ", "else", "\n                       ", "return", " ", "b", ";\n                }", "break", ";\n            }\n             ", "case", " ", "3", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";  \n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面请重新输入", "\\n", "\"", ");\n             ", "break", ";\n         }\n}\n\n", "void", " ", "d", "()\n{\n     int ", "d", ";\n         ", "printf", "(", "\"", "\\t", "************************", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**请选择九九乘法表类型**", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "********1：左上*********", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "*****   2：左下   ******", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "***     3：右上     ****", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "***     4：右下     ****", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "*****   5：奇数   ******", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "********6：返回*********", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "************************", "\\n", "\"", ");\n         ", "scanf", "(", "\"%d\"", ",", "&", "d", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "d", ")\n          {\n             ", "case", " ", "1", ":", "//九九乘法表左上", "\n                {\n                    int ", "x", ", ", "y", ";\n                    ", "for", "(", "x", "=", "9", ";", "x", ">", "0", ";", "x", "-", "-", ")\n                    {\n                        ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                        ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");\n                        ", "printf", "(", "\"", "\\n", "\"", ");\n                    }\n                };", "break", ";\n              ", "case", " ", "2", ":", "////九九乘法表左下", "\n                {\n                 int ", "x", ",", "y", ";\n                 ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                     {\n                     ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                     ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");   \n                     ", "printf", "(", "\"", "\\n", "\"", ");\n                     }    \n                };", "break", ";\n             ", "case", " ", "3", ":", "//九九乘法表右上 ", "\n                {\n                    int ", "x", ", ", "y", "; \n                    ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                    {\n                    ", "for", "(", "y", "=", "1", ";", "y", "<=", "9", ";", "y", "+", "+", ")\n                    {\n                    ", "if", "(", "y", "<", "x", ")\n                    ", "printf", "(", "\"", "\\t", "\"", ");\n                    ", "else", "\n                    ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");\n                    }\n                        ", "printf", "(", "\"", "\\n", "\"", ");\n                    }    \n                };", "break", ";  \n             ", "case", " ", "4", ":", "//九九乘法表右下 ", "\n                             {\n                 int ", "x", ",", "y", ",", "n", ";\n                 ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                     {\n                        ", "for", "(", "n", "=", "1", ";", "n", "<=", "9", "-", "x", ";", "n", "+", "+", ")\n                        ", "printf", "(", "\"", "\\t", "\"", ");\n                        {\n                        ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                        ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");   \n                        ", "printf", "(", "\"", "\\n", "\"", ");\n                        }\n                    }\n                };", "break", "; \n             ", "case", " ", "5", ":", "//九九乘法表奇数 ", "\n                {\n                 int ", "x", ",", "y", ",", "n", ";\n                 ", "for", "(", "x", "=", "1", ";", "x", "<=", "9", ";", "x", "+", "+", ")\n                     {\n                        ", "for", "(", "n", "=", "1", ";", "n", "<=", "9", "-", "x", ";", "n", "+", "+", ")\n                        ", "printf", "(", "\"", "\\t", "\"", ");\n                         {\n                            ", "for", "(", "y", "=", "1", ";", "y", "<=", "x", ";", "y", "+", "+", ")\n                            ", "if", "(", "x", "%", "2", "!=", "0", ")\n                            ", "printf", "(", "\"%d*%d=%2d", "\\t", "\"", ",", "x", ",", "y", ",", "x", "*", "y", ");   \n                            ", "printf", "(", "\"", "\\n", "\"", ");\n                         }\n                    }\n                };", "break", ";\n             ", "case", " ", "6", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";   \n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面重新输入", "\\n", "\"", ");\n             ", "break", ";\n         }\n}\n\n", "void", " ", "e", "()\n{\n    int ", "e", ";\n    ", "printf", "(", "\"1:输入一个数，判断是正数、负数还是零。", "\\n", "\"", ");\n    ", "printf", "(", "\"2:输入一个小于10000的正整数，将其每个位数输出，并且逆序输出。", "\\n", "\"", ");\n    ", "printf", "(", "\"3:输入4个数字，让其从小到大排序。", "\\n", "\"", ");\n    ", "printf", "(", "\"4:求三位数的水仙花数。", "\\n", "\"", ");\n    ", "printf", "(", "\"5:用c语言求下列分数序列的前20项之和", "\\n", "\"", ");\n    ", "printf", "(", "\"6:一个球从100m高度自由落下,每次落地后反弹回原来高度的一半,再落下.求它在第10次落地并反弹到最高点,共经过多少m?第10次反弹多高?", "\\n", "\"", ");\n    ", "printf", "(", "\"7:输出杨辉三角。", "\\n", "\"", ");\n    ", "printf", "(", "\"8:利用折半查找法找数。\"", ");\n    ", "printf", "(", "\"9:输入3行字符串，找出其中的大写字母、小写字母、数字，空格以及其他字符的个数。", "\\n", "\"", ");\n    ", "printf", "(", "\"10:输入一段文字，找出其中的大写字母、小写字母、数字，空格以及其他字符的个数。", "\\n", "\"", ");\n    ", "printf", "(", "\"11:写程序完成下面条件：1）输入10个职工的姓名和职工号；2）按职工号由小到大的顺序排序；3)要求输入一个职工号，用折半法查找出该职工的姓名，从主函数输入要查找的职工号，输出该职工的姓名", "\\n", "\"", ");\n    ", "printf", "(", "\"12:给一段数，给每个数之间插入空格", "\\n", "\"", ");\n    ", "printf", "(", "\"13:输入3个数字，从小到大排列。", "\\n", "\"", ");\n    ", "printf", "(", "\"14:编写C语言程序，输入数组，最大的与第一个元素交换，最小的与最后一个元素交换，输出数组。", "\\n", "\"", ");\n    ", "printf", "(", "\"15:输入一行文字，找出其中的大写字母、小写字母、数字，空格以及其他字符的个数。", "\\n", "\"", ");\n    ", "printf", "(", "\"16:输入5个学生的学号、姓名、分数1、分数2以及分数3并输出。", "\\n", "\"", ");\n    ", "scanf", "(", "\"%d\"", ",", "&", "d", ");\n      ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "e", ")\n          {\n          ", "case", " ", "1", ":\n            {\n                int ", "x", ";\n                ", "printf", "(", "\"请输入x的值:\"", ");\n                ", "scanf", "(", "\"%d\"", ",", "&", "x", ");\n                ", "if", "(", "x", "<", "0", ")\n                    ", "printf", "(", "\"Y=-1", "\\n", "\"", ");\n                ", "else", "\n                       ", "if", "(", "x", "=", "0", ")\n                         ", "printf", "(", "\"Y=0", "\\n", "\"", ");\n                    ", "else", "\n                         ", "printf", "(", "\"Y=1", "\\n", "\"", ");\n            }", "break", ";\n        ", "case", " ", "2", ":\n          ", "break", ";\n        ", "case", " ", "3", ":\n          ", "break", ";\n        ", "case", " ", "4", ":\n          ", "break", "; \n        ", "default", ":\n         ", "printf", "(", "\"输入错误，返回主界面重新输入", "\\n", "\"", ");\n        ", "break", ";\n          }\n}\n\n", "void", " ", "f", "()\n{\n     int ", "f", ";\n          ", "printf", "(", "\"", "\\t", "**是否确认观看函数类型图像**", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "**        1:用号输出字母C的图案。       **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        2：求最大值     **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**        3：返回         **", "\\n", "\"", ");\n          ", "printf", "(", "\"", "\\t", "****************************", "\\n", "\"", ");\n          ", "scanf", "(", "\"%d\"", ",", "&", "c", ");\n          ", "printf", "(", "\"", "\\n", "\"", ");\n          ", "switch", "(", "f", ")\n          {\n             ", "case", " ", "1", ":\n            {    \n                ", "printf", "(", "\"Hello C-world!", "\\n", "\"", ");\n                ", "printf", "(", "\" ****", "\\n", "\"", ");\n                ", "printf", "(", "\" *", "\\n", "\"", ");\n                ", "printf", "(", "\" * ", "\\n", "\"", ");\n                ", "printf", "(", "\" ****", "\\n", "\"", ");\n            }\n                ", "break", ";\n              ", "case", " ", "2", ":", "system", "(", "\"F:", "\\\\", "求最大值.exe", "\\n", "\"", ");", "break", ";\n             ", "case", " ", "3", ":", "printf", "(", "\"已返回主页面", "\\n", "\"", ");", "break", ";  \n              ", "default", ":\n             ", "printf", "(", "\"输入错误，返回主界面请重新输入", "\\n", "\"", ");", "break", ";\n             }\n}\n\n", "main", "()\n\n{\n     int ", "x", ";\n     ", "while", "(", "1", ")\n     {\n         ", "printf", "(", "\"", "\\t", "********操作选项********", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    1:for语句       **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    2:数组类型      **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    3:函数类型      **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    4:九九乘法表    **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    5:个人小    **", "\\n", "\"", ");\n         ", "printf", "(", "\"", "\\t", "**    6:图像打印类    **", "\\n", "\"", ");\n\n         ", "printf", "(", "\"", "\\t", "************************", "\\n", "\"", ");\n     \n     ", "scanf", "(", "\"%d\"", ",", "&", "x", ");\n     ", "printf", "(", "\"", "\\n", "\"", ");\n     \n     ", "switch", "(", "x", ")\n      {\n          ", "case", " ", "1", ": ", "a", "();", "break", ";\n          ", "case", " ", "2", ": ", "b", "();", "break", ";\n          ", "case", " ", "3", ": ", "c", "();", "break", ";\n         ", "case", " ", "4", ": ", "d", "();", "break", ";\n         ", "case", " ", "5", ": ", "e", "();", "break", ";\n         ", "case", " ", "6", ": ", "f", "();", "break", ";\n         ", "default", ":\n        ", "printf", "(", "\"输入错误，请重新输入", "\\n", "\"", ");\n        ", "break", ";\n     } \n  }\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\ninclude &amp;lt;stdio.h&amp;gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt; i; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;     &amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j &amp;#61; i; j &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; j&amp;#43;&amp;#43;)\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d   &amp;#34;&lt;/span&gt;,i * j);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}        \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;可以自己跑一下代码&amp;#xff0c;我没附结果&amp;#xff0c;我跑的是对的&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言相关的一些小问题，", ["c语言想输出想照片一样的格式和要求该怎么编写啊，不是九九乘法表，单有九九乘法表的结果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我是楼主&amp;#xff0c;查了下资料&amp;#xff0c;我发现spwm波的原理是矩形波面积与正弦波面积积分相等那我是不是可以把FPGA中查表得到的正弦波衰减来达到控制输出幅值衰减&amp;#xff0c;然后外部做输出放大实现题目要求了&amp;#xff0c;下午去实验室试试&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["双相信号发生器中如果控制输出幅值（无dac）", ["本人在校大学生，导师安排做信号发生器，整个流程采用FPGAdds生成spwm波和方波过低通还原出正弦和方波，本来打算幅度控制使用乘法器控制，乘法器系数由FPGA产生的方波*占空比控制，但是导师说乘法器输入频率要10M（不理解），导师给出的别的方案是FPGA内部设计乘法器控制dds增益（整个题目不允许用dac，并且我也没有自己设计dac）导师的说法是FPGA可以不用dac的前提下实现的，可是我一直找不到资料也不知道如何实现，想请教下各位网友"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第一题&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; i, j;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt; &amp;#43; i &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt; &amp;#43; j * i);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;#61;&amp;#61; j) &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n                System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);\n            }\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;);\n        }\n\n    }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["循环结构的三道题……急！", ["运用循环结构！！", "1.写九九乘法表 跳过第2，4，6行！", "2.用while循环写出99乘法表", "3.将数值5050依次减1到100之间的奇数，并输出结果。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-html\"&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;乘法表&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;input&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;type&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;biao&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;onclick&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;cf()&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;乘法表&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;\n  &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt; &lt;span class=\"hljs-attr\"&gt;id&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;dme&amp;#34;&lt;/span&gt;&amp;gt;&lt;/span&gt;乘法表&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=\"hljs-tag\"&gt;&amp;lt;&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"language-javascript\"&gt;\n      &lt;span class=\"hljs-keyword\"&gt;function&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;cf&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; ht &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; zhi &amp;#61; &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;biao&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-property\"&gt;value&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; zhi; i&amp;#43;&amp;#43;) {\n          &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;var&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n            ht &amp;#61; ht &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt; &amp;#43; j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; &amp;#43; i &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#61;&amp;#39;&lt;/span&gt; &amp;#43; i * j;\n          }\n        }\n        &lt;span class=\"hljs-variable language_\"&gt;document&lt;/span&gt;.&lt;span class=\"hljs-title function_\"&gt;getElementById&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;dme&amp;#39;&lt;/span&gt;).&lt;span class=\"hljs-property\"&gt;innerHTML&lt;/span&gt; &amp;#61; ht;\n      }\n    &lt;/span&gt;&lt;span class=\"hljs-tag\"&gt;&amp;lt;/&lt;span class=\"hljs-name\"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;我怕代码会乱&amp;#xff0c;我贴了个图&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/06199791695614.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["js里面的for返回值wenti", ["想在输入框输入一个数字打出乘法表并且打印在dme上面   结果出现打印在了新的页面上  该怎么改正", "\n", "<", "h3", ">", "乘法表", "</", "h3", ">", "\n    ", "<", "input", " ", "type", "=", "\"text\"", " ", "id", "=", "\"biao\"", ">", "\n    ", "<", "button", " ", "onclick", "=", "\"cf()\"", ">", "乘法表", "</", "button", ">", "\n    ", "<", "p", " ", "id", "=", "\"dme\"", ">", "乘法表", "</", "p", ">", "\n    ", "<", "script", ">", "\n        ", "function", " ", "cf", "(", "zhi", ") {\n            ", "var", " zhi = ", "document", ".", "getElementById", "(", "'biao'", ").", "value", "\n            ", "for", " (", "var", " i = ", "1", "; i <= zhi; i++) {\n                ", "for", " (", "var", " j = ", "1", "; j <= i; j++) {\n               ", "document", ".", "write", "(", "\"", "\"", " + i + ", "'*'", " + j + ", "'='", " + i * j + ", "\" ", "\"", ")\n\n                } \n                ", "document", ".", "write", "(", "\"", "\"", ") \n                \n            }\n            ", "return", " zhi\n           \n            ", "// document.write('v')", "\n        }\n      \n ", "document", ".", "getElementById", "(", "'dme'", ").", "innerHTML", " = ", "cf", "(zhi)\n", "</", "script", ">", "\n\n", "\n", "```"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;加个if-else来判断打印的算式的结果是否到了每行最后一个&amp;#xff0c;如果到了&amp;#xff0c;则结尾的逗号不打印&amp;#xff0c;如果没有则打印即可&amp;#xff0c;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;int(input())\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1, n&amp;#43;1):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1, i&amp;#43;1):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; j&amp;lt;i: #如果没到结尾则打印结果后的逗号\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#39;{i*j}&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; : #如果到了每行结尾最后一个的结果&amp;#xff0c;则结尾不打印逗号\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(f&lt;span class=\"hljs-string\"&gt;&amp;#39;{i*j}&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/353898713866163.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么去除输出结果后面的，", ["九九乘法表", "\n", "n=int(input())", "for i in range(1, n+1):", "    for j in range(1, i+1):", "        print(f{i", "j}', end=',')", "    print()", " 编写一个(n小于等于9)乘法表结果的小程序。", "要求：1、从测试集中读取数字n，按n的值输出斜三角形方式打印 ", "n∗n的结果乘法表；", "2、每个值中间以'，'隔开，每行最后一个没有'.'", "*", "\n", "```", "\n", "```**"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;()))&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;用位操作去移&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/828965406136160.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["求2的n次方，算法题", ["运行程序时，输入一个正整数 n（其中 1 ≤ n ≤ 50），运行后输出 2 的 n 次方。", "\n", "要求：", "①只允许编写一行代码；", "②不允许使用任何循环结构、乘法、乘方符号和与乘法、乘方相关的函数。", "运行内存 ≤ 600 KB，时间 < 100 ms。", "\n", "样例输入：", "\n", "5\n", "\n", "样例输出：", "\n", "32\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[int(i) for i in input().split()]&lt;/span&gt;\n&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[int(i) for i in input().split()]&lt;/span&gt;\n\nres &amp;#61; &lt;span class=\"hljs-selector-attr\"&gt;[]&lt;/span&gt;\nwhile len(a)&amp;gt;&amp;#61;len(b):\n    x &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[0]&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//b[0]&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(len(b)):\n        &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt; -&amp;#61; x*&lt;span class=\"hljs-selector-tag\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[i]&lt;/span&gt;\n    &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-selector-tag\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-selector-attr\"&gt;[1:]&lt;/span&gt;\n    res&lt;span class=\"hljs-selector-class\"&gt;.append&lt;/span&gt;(x)\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(*res)&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(*a)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果余数为0&amp;#xff0c;还要打印出来吗&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["python 运算除法商和余数", ["问题遇到的现象和发生背景", "\n", "现在是乘法 ，怎样修改可以改成除法达到下图的input和output", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "这个应该是多项式的系数相除", "第一行output是商的系数，第二行ouput是余数", "\n", "乘法的代码", "\n", "a", " = [", "int", "(i) ", "for", " i in ", "input", "().", "split", "()]\n", "b", " = [", "int", "(i) ", "for", " i in ", "input", "().", "split", "()]\n \n", "res", " = [", "0", "]*(", "len", "(", "a", ")+", "len", "(", "b", ")-", "1", ")\n", "for", " i in ", "range", "(", "len", "(", "a", ")):\n    ", "for", " ", "j", " in ", "range", "(", "len", "(", "b", ")):\n        ", "res", "[i+", "j", "] += ", "a", "[i]*", "b", "[", "j", "]\n \n", "print", "(*", "res", ")\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j&amp;lt;&amp;#61;i; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t &amp;#34;&lt;/span&gt;, j, i, i * j);    &lt;span class=\"hljs-comment\"&gt;// \\t水平制表符&lt;/span&gt;\n        }    \n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);    \n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;    \n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img width=\"600px\" align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/351318112536125.png\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["for嵌套式循环循环方法", ["输入九九乘法表，一直有点蒙，不懂嵌套式循环是怎么循环的😓😓"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\nwith &lt;span class=\"hljs-keyword\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;lfy.txt&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-keyword\"&gt;mode&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;,encoding&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;) &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;:\n  \n    \n    def &lt;span class=\"hljs-keyword\"&gt;abc&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;, *&lt;span class=\"hljs-keyword\"&gt;args&lt;/span&gt;):\n        n, &lt;span class=\"hljs-keyword\"&gt;m&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;args&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, n &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;j&lt;/span&gt; in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n                &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d x%2d &amp;#61; %-2d&amp;#34;&lt;/span&gt; % (&lt;span class=\"hljs-keyword\"&gt;j&lt;/span&gt;, i, i * &lt;span class=\"hljs-keyword\"&gt;j&lt;/span&gt;), end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;file&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;file&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;abc&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;a&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["不会写了能看看为什么不能写入文件里面吗？", ["使用python，在一个命名为lfy.txt文本文档写入n m乘法表。", "1.创建函数名为abc的函数；", "2.n m乘法表，封装在abc的函数里；", "3.调用abc函数，例如abc（9,9）就能完成九九乘法表绘制", "with open('lfy.txt',mode='w',encoding='utf-8') as a:", "    def abc(*args):", "        for i in range(1, 10):", "            for j in range(1, i + 1):", "                print(\"%dx%d=%-2d\" % (j, i, i * j), end='')", "            print('')", "print(a == abc())"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j,k;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n        {\n            k&amp;#61;i*j;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d &amp;#34;&lt;/span&gt;,i,j,k);\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;#61;&amp;#61;j)\n            {\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n            }\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["不懂就问，c＋＋课堂作业", ["学习循环结构，要用for循环嵌套语句输出九九乘法表，该怎么表达"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你喜欢用乘法就用乘法&amp;#xff0c;没有乘法器就用循环相加来做&amp;#xff0c;看你用什么语言&amp;#xff0c;什么硬件&amp;#xff0c;没有一定之规&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["一个鹅蛋是4快钱，那么10鹅蛋是多少钱？", ["一个鹅蛋是4快钱，十个是多少钱？这题乘法还是加法？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; MAXNUM (int)300&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;MyInteger&lt;/span&gt;{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    string num;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;MyInteger&lt;/span&gt;(){num&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;;}\n    &lt;span class=\"hljs-built_in\"&gt;MyInteger&lt;/span&gt;(string s){num &amp;#61; s;}\n    ~&lt;span class=\"hljs-built_in\"&gt;MyInteger&lt;/span&gt;(){}\n    &lt;span class=\"hljs-function\"&gt;string &lt;span class=\"hljs-title\"&gt;getnum&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; num;}\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setnum&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(string s)&lt;/span&gt;&lt;/span&gt;{num &amp;#61;s;}\n    MyInteger &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; MyInteger&amp;amp; bint2) &lt;span class=\"hljs-comment\"&gt;//大整数加法&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* a &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* c &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(a,num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(b,bint2.num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n        &lt;span class=\"hljs-built_in\"&gt;bigAdd&lt;/span&gt;(a,b,c);\n        &lt;span class=\"hljs-function\"&gt;MyInteger &lt;span class=\"hljs-title\"&gt;res&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(c)&lt;/span&gt;&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(a);a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(b);b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(c);c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; res;\n    }\n    MyInteger &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;-(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; MyInteger&amp;amp; bint2) &lt;span class=\"hljs-comment\"&gt;//大整数减法&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* a &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* c &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        string flag &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(a,num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(b,bint2.num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;() &amp;gt; bint2.num.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;())\n            &lt;span class=\"hljs-built_in\"&gt;bigSub&lt;/span&gt;(a,b,c);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(num.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;() &amp;lt; bint2.num.&lt;span class=\"hljs-built_in\"&gt;length&lt;/span&gt;())\n        {\n            flag &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;bigSub&lt;/span&gt;(b,a,c);\n        }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;(),bint2.num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;())&amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                &lt;span class=\"hljs-built_in\"&gt;bigSub&lt;/span&gt;(a,b,c);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;(),bint2.num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;())&amp;lt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                flag &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-built_in\"&gt;bigSub&lt;/span&gt;(b,a,c);\n            }&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(a);a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(b);b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(c);c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;MyInteger&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n            }\n        }\n        string str &amp;#61; c;\n        &lt;span class=\"hljs-function\"&gt;MyInteger &lt;span class=\"hljs-title\"&gt;res&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(flag &amp;#43; str)&lt;/span&gt;&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(a);a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(b);b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(c);c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; res;\n    }\n    MyInteger &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;*(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; MyInteger&amp;amp; bint2) &lt;span class=\"hljs-comment\"&gt;//大整数乘法&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* a &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;* c &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;[MAXNUM];\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(a,num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(b,bint2.num.&lt;span class=\"hljs-built_in\"&gt;c_str&lt;/span&gt;());\n        &lt;span class=\"hljs-built_in\"&gt;bigMul&lt;/span&gt;(a,b,c);\n        &lt;span class=\"hljs-function\"&gt;MyInteger &lt;span class=\"hljs-title\"&gt;res&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(c)&lt;/span&gt;&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(a);a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(b);b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;free&lt;/span&gt;(c);c&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; res;\n    }\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-comment\"&gt;//去除前面的0&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;movePreZero&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c[])&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (c[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(c) - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i&amp;#43;&amp;#43;)\n                c[i] &amp;#61; c[i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n            c[&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(c) - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;//大数相加&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;bigAdd&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[], &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; b[], &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c[])&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, val;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; l1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(a);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; l2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(b);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; len &amp;#61; l1 &amp;gt; l2 ? l1 : l2;\n        len &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//多留一个进位&lt;/span&gt;\n        c[len] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//后一个位置为0&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;//从后往前迭代&lt;/span&gt;\n        l1--;\n        l2--;\n        len--;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (l1 &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; l2 &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; (a[l1] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) &amp;#43; (b[l2] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) &amp;#43; shift;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            {\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                t -&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                c[len] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; t;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                c[len] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; t;\n            }\n            len--;\n            l1--;\n            l2--;\n        }\n        &lt;span class=\"hljs-comment\"&gt;//a&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (l1 &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; (a[l1] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) &amp;#43; shift;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            {\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                t -&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                c[len] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; t;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                c[len] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; t;\n            }\n            len--;\n            l1--;\n        }\n        &lt;span class=\"hljs-comment\"&gt;//b&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (l2 &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; (b[l2] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) &amp;#43; shift;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n            {\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                t -&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                c[len] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; t;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            {\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                c[len] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; t;\n            }\n            len--;\n            l2--;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (shift !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            c[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; shift;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            c[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;movePreZero&lt;/span&gt;(c);\n    }\n \n    &lt;span class=\"hljs-comment\"&gt;//大数相乘&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;bigMul&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[], &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; b[], &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c[])&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j, t, k, val;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; maxlen;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; l1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(a);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; l2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(b);\n        &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; tmp[MAXNUM] &amp;#61; { &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; };\n        &lt;span class=\"hljs-comment\"&gt;//结果最多是l1&amp;#43;l2位数&lt;/span&gt;\n        maxlen &amp;#61; l1 &amp;#43; l2;\n        c[maxlen] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//字符串正常结束&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; maxlen; i&amp;#43;&amp;#43;)\n            c[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (l1 &amp;lt; l2)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//交换a和b&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(tmp, a);\n            &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(a, b);\n            &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(b, tmp);\n            t &amp;#61; l1;\n            l1 &amp;#61; l2;\n            l2 &amp;#61; t;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (t &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, i &amp;#61; l2 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--, t&amp;#43;&amp;#43;) &lt;span class=\"hljs-comment\"&gt;//遍历b&amp;#xff0c;乘以a的所有数&lt;/span&gt;\n        {\n            shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;memset&lt;/span&gt;(tmp, &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;, maxlen);\n            tmp[maxlen] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, j &amp;#61; l1 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j--, k&amp;#43;&amp;#43;)\n            {\n                val &amp;#61; (b[i] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) * (a[j] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;) &amp;#43; shift;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (val &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n                {\n                    shift &amp;#61; val / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                    val &amp;#61; val % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                tmp[maxlen - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - t - k] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; val;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (shift)\n                tmp[maxlen - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; - t - k] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; shift;\n \n            &lt;span class=\"hljs-comment\"&gt;//print(tmp);&lt;/span&gt;\n \n            shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-comment\"&gt;//计算c与tmp的和&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (k &amp;#61; maxlen - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; k &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k--)\n            {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (tmp[k] &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                {\n                    val &amp;#61; c[k] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; tmp[k] - &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; shift;\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (val &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;)\n                    {\n                        shift &amp;#61; val / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                        val &amp;#61; val % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                    }\n                    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                        shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                    c[k] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; val;\n                }\n            }\n        }\n        &lt;span class=\"hljs-built_in\"&gt;movePreZero&lt;/span&gt;(c);\n    }\n    &lt;span class=\"hljs-comment\"&gt;//大数相减&amp;#xff0c;成功返回1&amp;#xff0c;a&amp;lt;b返回0&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;bigSub&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; a[], &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; b[], &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; c[])&lt;/span&gt;\n    &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, val;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; l1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(a);\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; l2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(b);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (l1 &amp;lt; l2)\n        {\n            c[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-comment\"&gt;//b后移l1-l2位&amp;#xff0c;并且前面补0&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; l2 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i--)\n            b[i &amp;#43; l1 - l2] &amp;#61; b[i];\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; l1 - l2; i&amp;#43;&amp;#43;)\n            b[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;;\n        b[l1] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;//逐位相减&lt;/span&gt;\n        i &amp;#61; l1 - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        c[l1] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (i &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            val &amp;#61; a[i] - b[i] - shift;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (val &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                val &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                shift &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            c[i] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &amp;#43; val;\n            i--;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (shift)\n        {\n            c[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-comment\"&gt;//去除前面的0&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;movePreZero&lt;/span&gt;(c);\n        &lt;span class=\"hljs-comment\"&gt;//去除b前面的0&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;movePreZero&lt;/span&gt;(b);\n        &lt;span class=\"hljs-comment\"&gt;//printf(&amp;#34;%s&amp;#34;,c);&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strlen&lt;/span&gt;(c) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            c[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//留1个0&lt;/span&gt;\n            c[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n \n};\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-function\"&gt;MyInteger &lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;123456789&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;MyInteger &lt;span class=\"hljs-title\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;9876543210&amp;#34;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;\n    MyInteger c &amp;#61; a&amp;#43;b;\n    MyInteger d &amp;#61; a-b;\n    MyInteger e &amp;#61; a*b;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;a&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;a.&lt;span class=\"hljs-built_in\"&gt;getnum&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;b&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;b.&lt;span class=\"hljs-built_in\"&gt;getnum&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;c&amp;#61;a&amp;#43;b&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;c.&lt;span class=\"hljs-built_in\"&gt;getnum&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;d&amp;#61;a-b&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;d.&lt;span class=\"hljs-built_in\"&gt;getnum&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;e&amp;#61;a*b&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;e.&lt;span class=\"hljs-built_in\"&gt;getnum&lt;/span&gt;()&amp;lt;&amp;lt;endl;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n \n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["关于更大的整数问题C++/C", ["1.getnum函数", "2.加法重载", "3.减法重载", "4.乘法重载", "小明希望实现MyInteger类，并可以实现部分操作。", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;利用两层for循环来实现&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;j&amp;#43;&amp;#43;){\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(j&amp;lt;i)\n                &lt;span class=\"hljs-comment\"&gt;//打印八个空格&amp;#xff0c;去掉空格就是左上三角形 &lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;        &amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%2d  &amp;#34;&lt;/span&gt;,i,j,i*j);\n        }\n\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);  \n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["C语言，求解使用for循环", ["用c语言for循环输出99乘法表，如下图的输出格式，该怎么解决。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不就是输入a,b,c,d&amp;#xff0c;注意在abcd中间还要getchar掉乘除号&lt;br /&gt;然后输出(a×c)/(b×d)的三位小数形式&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于#C++#的问题，如何解决？", ["分数乘法", "比赛题目", "时间限制：C/C++ 1000MS，其他语言 2000MS", "内存限制：C/C++ 256MB，其他语言 512MB", "描述", "\n", "转眼间一个月的时间又过去了，在这段时间里，小星参加了学校的期中考试，在数学考试中，发现有很多分数乘法的问题，小星在想，如果能写一个程序，自己去计算就好了。", "根据这个想法，你要帮小星写一个计算分数乘法的一题。", "\n", "输入描述", "\n", "读入有一行，为两个分数 a / b ， c / d。以a / b * c / d的形式给出。", "\n", "输出描述", "\n", "输出a/b*c/d的值，结果保留三位小数。", "\n", "用例输入 1 ", "\n", "1 / 90 * 51 / 79", "用例输出 1 ", "\n", "0.007", "\n", "快点，00.00就结束了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;完全没看明白你再问啥&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["学c遇到一点问题，求指导", ["问题遇到的现象和发生背景 一些作业题", "\n", "我想要达到的结果  如何使c语言乘法运算中", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;scanf后面&amp;amp;要用逗号隔开&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["判断三角形类型这个error改不来😭", ["截图放在这里了", "\n", "float类型的可以用*来表示乘法的嘛，为啥会报错？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为你指定了print的end,默认的print在打印后会在后面跟一个换行,你把默认的设置更改了,现在它只会在后面输出空格,所以需要你手动换行&lt;br /&gt;有帮助望采纳&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["python循环的换行问题", ["\n", "想知道while循环不是每循环一次就会自动换行吗，为什么九九乘法表的还要另外加换行符才能换行？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for  &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; in range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n    for j in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):  \n        if i&amp;gt;&amp;#61;j:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{}&amp;#61;{}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(i,j,i*j),end &amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;  &amp;#34;&lt;/span&gt;)           \n    if i&amp;lt;j:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python的小问题", ["关于如何将九九乘法表按上图所示输出的问题，关系到如何在python中输出图形"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;main函数&amp;#xff0c;不是mind&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; h,l,n;\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(l&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;l&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;l&amp;#43;&amp;#43;)\n   {\n      &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(h&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;h&amp;lt;&amp;#61;l;h&amp;#43;&amp;#43;)\n      {\n          n &amp;#61; h * l;\n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d * %d &amp;#61; %d &amp;#34;&lt;/span&gt;,h,l,n);\n      }\n      &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["刚学c语言报错怎么解决", ["c语言打99乘法表，出现这几个错误是什么意思呢，参考了很多帖子也解决不了", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;printf最后一个&amp;#xff05;d改成&amp;#xff05;f&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["定义函数，大一新生C语言", ["为什么我定义的一个乘法运算的函数，无法正常得到结果，结果为零，定义的除法运算就可以？形式一模一样"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&amp;gt;&amp;gt;&amp;gt; &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,10):\n&lt;span class=\"hljs-built_in\"&gt;..&lt;/span&gt;.     &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; k &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(1,i&amp;#43;1):\n&lt;span class=\"hljs-built_in\"&gt;..&lt;/span&gt;.             &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}X{}&amp;#61;{}&amp;#34;&lt;/span&gt;.format(i,k,i*k),&lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;..&lt;/span&gt;.     &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;..&lt;/span&gt;. \n&lt;span class=\"hljs-attribute\"&gt;1X1&lt;/span&gt;&amp;#61;1 \n&lt;span class=\"hljs-attribute\"&gt;2X1&lt;/span&gt;&amp;#61;2 &lt;span class=\"hljs-attribute\"&gt;2X2&lt;/span&gt;&amp;#61;4 \n&lt;span class=\"hljs-attribute\"&gt;3X1&lt;/span&gt;&amp;#61;3 &lt;span class=\"hljs-attribute\"&gt;3X2&lt;/span&gt;&amp;#61;6 &lt;span class=\"hljs-attribute\"&gt;3X3&lt;/span&gt;&amp;#61;9 \n&lt;span class=\"hljs-attribute\"&gt;4X1&lt;/span&gt;&amp;#61;4 &lt;span class=\"hljs-attribute\"&gt;4X2&lt;/span&gt;&amp;#61;8 &lt;span class=\"hljs-attribute\"&gt;4X3&lt;/span&gt;&amp;#61;12 &lt;span class=\"hljs-attribute\"&gt;4X4&lt;/span&gt;&amp;#61;16 \n&lt;span class=\"hljs-attribute\"&gt;5X1&lt;/span&gt;&amp;#61;5 &lt;span class=\"hljs-attribute\"&gt;5X2&lt;/span&gt;&amp;#61;10 &lt;span class=\"hljs-attribute\"&gt;5X3&lt;/span&gt;&amp;#61;15 &lt;span class=\"hljs-attribute\"&gt;5X4&lt;/span&gt;&amp;#61;20 &lt;span class=\"hljs-attribute\"&gt;5X5&lt;/span&gt;&amp;#61;25 \n&lt;span class=\"hljs-attribute\"&gt;6X1&lt;/span&gt;&amp;#61;6 &lt;span class=\"hljs-attribute\"&gt;6X2&lt;/span&gt;&amp;#61;12 &lt;span class=\"hljs-attribute\"&gt;6X3&lt;/span&gt;&amp;#61;18 &lt;span class=\"hljs-attribute\"&gt;6X4&lt;/span&gt;&amp;#61;24 &lt;span class=\"hljs-attribute\"&gt;6X5&lt;/span&gt;&amp;#61;30 &lt;span class=\"hljs-attribute\"&gt;6X6&lt;/span&gt;&amp;#61;36 \n&lt;span class=\"hljs-attribute\"&gt;7X1&lt;/span&gt;&amp;#61;7 &lt;span class=\"hljs-attribute\"&gt;7X2&lt;/span&gt;&amp;#61;14 &lt;span class=\"hljs-attribute\"&gt;7X3&lt;/span&gt;&amp;#61;21 &lt;span class=\"hljs-attribute\"&gt;7X4&lt;/span&gt;&amp;#61;28 &lt;span class=\"hljs-attribute\"&gt;7X5&lt;/span&gt;&amp;#61;35 &lt;span class=\"hljs-attribute\"&gt;7X6&lt;/span&gt;&amp;#61;42 &lt;span class=\"hljs-attribute\"&gt;7X7&lt;/span&gt;&amp;#61;49 \n&lt;span class=\"hljs-attribute\"&gt;8X1&lt;/span&gt;&amp;#61;8 &lt;span class=\"hljs-attribute\"&gt;8X2&lt;/span&gt;&amp;#61;16 &lt;span class=\"hljs-attribute\"&gt;8X3&lt;/span&gt;&amp;#61;24 &lt;span class=\"hljs-attribute\"&gt;8X4&lt;/span&gt;&amp;#61;32 &lt;span class=\"hljs-attribute\"&gt;8X5&lt;/span&gt;&amp;#61;40 &lt;span class=\"hljs-attribute\"&gt;8X6&lt;/span&gt;&amp;#61;48 &lt;span class=\"hljs-attribute\"&gt;8X7&lt;/span&gt;&amp;#61;56 &lt;span class=\"hljs-attribute\"&gt;8X8&lt;/span&gt;&amp;#61;64 \n&lt;span class=\"hljs-attribute\"&gt;9X1&lt;/span&gt;&amp;#61;9 &lt;span class=\"hljs-attribute\"&gt;9X2&lt;/span&gt;&amp;#61;18 &lt;span class=\"hljs-attribute\"&gt;9X3&lt;/span&gt;&amp;#61;27 &lt;span class=\"hljs-attribute\"&gt;9X4&lt;/span&gt;&amp;#61;36 &lt;span class=\"hljs-attribute\"&gt;9X5&lt;/span&gt;&amp;#61;45 &lt;span class=\"hljs-attribute\"&gt;9X6&lt;/span&gt;&amp;#61;54 &lt;span class=\"hljs-attribute\"&gt;9X7&lt;/span&gt;&amp;#61;63 &lt;span class=\"hljs-attribute\"&gt;9X8&lt;/span&gt;&amp;#61;72 &lt;span class=\"hljs-attribute\"&gt;9X9&lt;/span&gt;&amp;#61;81 \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["这个简易代码有什么错误", ["他说第五行的a有错误，我想打印一个九九乘法表，然后就打不出来了"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;不可以&amp;#xff0c;连着写就表示一个变量的名字而已&amp;#xff0c;要表示乘法必须加*号&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于python的相关问题。", ["在数学中x乘以y表示为xy，那么python里面，xy是什么意思啊，还可以表示乘法吗？"]], "Tag": "算法设计"}
{"Answer": "运算加法最快 所以选择A选项。", "Konwledge_Point": "乘法", "Question": ["计算机做以下哪种运算最快？快回答！", ["计算机做以下哪种运算最快", "\n(A)加法", "\n(B)减法", "\n(C)乘法", "\n(D)除法"]], "Tag": "算法设计"}
{"Answer": "System.out.println(i); 换成System.out.println();", "Konwledge_Point": "乘法", "Question": ["有没有大佬帮忙看看，为什么我的程序运行输出后总是多出一列。", ["public class Solution {", "\n    public static void main(String[] args) {", "\n        int i;", "\n        int j;", "\n        int a;", "\n      for(i=1;i<=10;i++){", "\n\n", "     for(j=1;j<=10;j++){\n\n       a=j*i;\n\n       System.out.print(a+\" \");\n     }\n     System.out.println(i);\n      }\n\n  }\n\n    //在此编写你的代码\n}\n    要求做一个10乘10的乘法表，列和行都要有10个数字，这些数字要构成乘法表。我写出来的这个运行后每列总会多出一个数字，和列前第一个数字相等\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; add(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b)\n{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a&amp;#43;b;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; subtraction(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b)\n{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a-b;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; multiplication(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b)\n{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a*b;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; division(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b)\n{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a/b;\n}\n\n&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,b&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,k&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,res&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;srand&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;time&lt;/span&gt;(NULL));\n    a&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%101;\n    b&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%101;\n    k&amp;#61;&lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;()%4&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n\n    switch(k)\n    {\n        case &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            res &amp;#61; add(a,b);\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#43;%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,res);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            res &amp;#61; subtraction(a,b);\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d-%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,res);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            res &amp;#61; multiplication(a,b);\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,res);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        case &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            res &amp;#61; division(a,b);\n            &lt;span class=\"hljs-keyword\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d&amp;#61;%d\\n&amp;#34;&lt;/span&gt;,a,b,res);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["编写一个加、减、乘、除的。", ["编写一个加、减、乘、除调用自定义函数完成4则运算程序。随机产生两个0-100之间整数，再随机产生一个1-4之间的数，其中1代表加法，2代表减法，3代表乘法，4代表除法，计算2个数的运算结果。需使用自定义函数实现。函数原型：加法：int add(int ,int);减法：int subtraction(int ,int);乘法：int multiplication(int ,int);除法：int division(int ,int);"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;j-1&lt;br /&gt;改成j&amp;#61;1试一试&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["一个关于for的小问题，求解答", ["\n", "为什么鱼哥（第一个）那个能，打出九九乘法表，而我只能打出一列。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;,i,j,i*j);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言基础,c语言数组基础知识", ["环境vs c++", "打印九九乘法表,利用数组的知识,最好还要解释一下它是怎么运行的,如下图所示", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;平方用一个for&amp;#xff0c;三次方就两个for&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;sum&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nfor i in range(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;):\n    sum&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;\n\nsum&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nfor i in range(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;):\n    for j in range(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;):\n        sum&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python用纯加法计算x的平方和三次方", ["题目如上，不能用乘法只能用纯加法，对于一个小白来说真的啥都不会，求一个完整的运行代码"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;有完整题目吗&amp;#xff0c;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么用c++语言表示不存在？", ["题目为乘法密码的解密，要求输出对应的密文。但是“无法解密或者有多个可能时输出“0””这一步我不知道该怎么写"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第7行后面的分号删掉&amp;#xff01;&amp;#xff01;&amp;#xff01;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["这个双层循环的外循环为什么不执行呢", ["打印一个九九乘法表，输入数字N，然后打印1", "1到N", "N，例如：", "输入2", "输出：1", "1", "             1", "2 2*2"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用来对齐的&amp;#xff0c;但是用处不大&amp;#xff0c;有没有都可以&amp;#xff0c;这段代码算是多此一举&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["解释python中的一行语句", ["为了输出矩形的九九乘法表，代码的第二行中，这个k的循环是起到什么作用，输出的时候并没有k啊"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;s你定义成double型了&amp;#xff0c;输出要用%lf或者%f&amp;#xff0c;不能用%d&lt;br /&gt;或者你将s改为int型&amp;#xff0c;就可以用%d了。&lt;br /&gt;如果担心int型不够&amp;#xff0c;可以改成long long型&amp;#xff0c;输出用 %lld&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言入门，友友们帮我看看哪步出错了", ["友友们，我刚开始学C语言，能帮我看看我哪步出错了吗？为啥输出不了这个乘法运算"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你应该把public static void main(String[] args) 写到你这个multip····类中。&lt;br /&gt;public class 这写你这个n{&lt;!-- --&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;qq&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x*y;\n      }\n      &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n    System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(    &lt;span class=\"hljs-built_in\"&gt;qq&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;));\n      }\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;}&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["有关于Java的一些问题", ["我设计了一个乘法类Mulitiplication，并在其中定义了三个同名的mul方法", "\n", "应该如何在测试类中调用三个方法", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我放弃用九九乘法表方法后写出来了&amp;#xff0c;代码如下&lt;br /&gt;n&amp;#61;int(input())&lt;br /&gt;x&amp;#61;0&lt;br /&gt;lis&amp;#61;[]&lt;br /&gt;print(&amp;#34;图案如下&amp;#34;)&lt;br /&gt;for i in range(1,n&amp;#43;1):&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        while i!&amp;#61;0:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                x&amp;#43;&amp;#61;1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                lis.append(x)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                lis.sort(reverse&amp;#61;True)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;                i -&amp;#61; 1&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        for j in lis:&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;            print(&amp;#34;{:&amp;gt;4}&amp;#34;.format(j),end&amp;#61;&amp;#34;&amp;#34;)&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        print()&lt;/span&gt;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;        lis&amp;#61;[]&lt;/span&gt;&lt;br /&gt;有更简单的方法吗&amp;#xff1f;大佬们&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["这个怎么写啊，有点眉头，但一下手却不知怎么写好", ["\n", "这个怎么写啊，感觉有点像九九乘法表法，但为什么比较大的数在前面，且每行数字都不重复啊"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\na,b,c &amp;#61; list(map(int,input().split()))\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; a&amp;#43;&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;&amp;#61;c:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;)\nelif &lt;span class=\"hljs-attribute\"&gt;a-b&lt;/span&gt;&amp;#61;&amp;#61;c:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)\nelif a&lt;span class=\"hljs-number\"&gt;*b&lt;/span&gt;&amp;#61;&amp;#61;c:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;)\nelif a/&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;&amp;#61;c:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;)\nelif a%&lt;span class=\"hljs-attribute\"&gt;b&lt;/span&gt;&amp;#61;&amp;#61;c:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;Error&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["一道简单的Python题", ["两个整数a和b运算后得到结果c。表示为：a?b=c,其中，？可能是加法+，减法-，乘法", "，除法/或取余%。请根据输入的a、b、c的值，确定运算符。如果某种运算成立，则输出相应的运算符，如果任何运算都不成立，则输出Error。若结果有多个运算符符合，则按加法+、减法-、乘法", "、整除/、取余%的顺序输出最先符合的运算符。", "　　【输入】", "　　在一行内输入a、b和c的值，其间以空格间隔。", "　　【输出】", "　　五个运算符之一或\"Error\"。", "　　【输入示例1】", "　　3 4 5", "　　【输出示例1】", "　　Error", "\n", "如何用简单的Python语言写出来呢？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;是用Swing做UI吗&amp;#xff1f;实现简单的加法&amp;#xff0c;减法&amp;#xff0c;乘法&amp;#xff0c;除法和取余运算&amp;#xff1f;&lt;/p&gt;\n&lt;p&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/1625390772316image.png\" /&gt;&lt;br /&gt;这样的行不行&amp;#xff1f;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["设计一个图形界面的简易计算器", ["设计一个图形界面的简易计算器，完成简单的计算符，可以完成加法，减法，乘法，除法和取余运算。请自行安排版面，使其美观。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#include&amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#include&amp;lt;math.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;/*\n* 实现一个简易计算器&amp;#xff0c;书写四个函数&amp;#xff08;add加法函数、subtract减法函数、multiply乘法函数、\ndivide除法函数&amp;#xff09;&amp;#xff0c;\n分别实现求两数&amp;#xff0b;&amp;#xff0c;一&amp;#xff0c;×&amp;#xff0c;/的结果&amp;#xff0c;在主两数中进行调用。\n*/&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b) {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a &amp;#43; b;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; subtract(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b) {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a - b;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; multiply(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b) {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a * b;\n}\n&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; divide(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b) {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a / b;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; main()\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a, b;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; s;\n    scanf(&amp;#34;%d%c%d&amp;#34;,&amp;amp;a,&amp;amp;s,&amp;amp;b);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s&amp;#61;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;)\n    {\n        printf(&amp;#34;%d&amp;#34;, &lt;span class=\"hljs-keyword\"&gt;add&lt;/span&gt;(a, b));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)\n    {\n        printf(&amp;#34;%d&amp;#34;, subtract(a, b));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;)\n    {\n        printf(&amp;#34;%d&amp;#34;, multiply(a, b));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (s &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;//&amp;#39;&lt;/span&gt;)\n    {\n        printf(&amp;#34;%d&amp;#34;, divide(a, b));\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言实现一个简易计算器", ["实现一个简易计算器，书写四个函数（add加法函数、subtract减法函数、multiply乘法函数、divide除法函数），分别实现求两数＋，一，×，/的结果，在主两数中进行调用。"]], "Tag": "算法设计"}
{"Answer": "https://blog.csdn.net/u011473714/article/details/77688905", "Konwledge_Point": "乘法", "Question": ["在VC环境下，使用动态链接库编程", ["在VC中使用动态链接库编写四则运算（减法、乘法、除法）；并编写一个字符串加密和解密算法。", "\n例如，在VC++中new一个Win32 Dynamic-Link Library工程,工程名为lib，然建立一个Win32 Console Appliction工程,工程名为TestDLL"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的理解是正确的&lt;br /&gt;一般乘法除法会用dsp48&lt;br /&gt;加减法不会用dsp48&lt;br /&gt;当use_dsp&amp;#61;yes放在模块前声明时&amp;#xff0c;整个模块中&amp;#xff0c;加减乘除都会使用dsp48&lt;br /&gt;可以只在变量前声明&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["望有朋友解释一下fpga的dsp资源和lut资源和功率、温度", ["请问在模块前声明(", "use_dsp=\"yes\"", ") 之后，是不是即使不使用dsp48的ip核，代码里所有的乘法加法也都消耗dsp资源"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;首先&amp;#xff0c;你应该先学会如何打印出一个九九乘法口诀表&amp;#xff0c;看这篇文章&lt;a href=\"https://blog.csdn.net/weixin_51275821/article/details/109750667\" id=\"textarea_1632546345630_1632546758975_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;利用for循环画一个乘法口诀表_十四先生.的博客-CSDN博客&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"\"&gt;for循环乘法口诀表&amp;#xff1a;void main(){int i,j;for(j&amp;#61;1;j&amp;lt;&amp;#61;9;j&amp;#43;&amp;#43;){for(i&amp;#61;1;i&amp;lt;&amp;#61;j;i&amp;#43;&amp;#43;)printf(&amp;#34;%d*%d&amp;#61;%d “,i,j,i*j);printf(”\\n&amp;#34;);}return 0;}&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;img class=\"md_link_img\" id=\"md_link_img\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\" /&gt;\n        &lt;span class=\"flex-1\"&gt;\n          &lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/weixin_51275821/article/details/109750667&lt;/span&gt;\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;br /&gt;然后&amp;#xff0c;代码中的j就代表的是行数&amp;#xff0c;你把9改成n&amp;#xff0c;再在前面定义n为int型&amp;#xff0c;scanf(&amp;#34;%d&amp;#34;,&amp;amp;n)就可以了&lt;br /&gt;不用谢我&amp;#xff0c;关注我一下就好了&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言的基础问题，求回答", ["我能不能虽然一个九九乘法表，然后1/9代表它的行，我输入一个数，直接提出它的前n行。如果可以，怎么弄"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;print&amp;#xff08;&amp;#xff09;是输出在控制台括号里面的值&amp;#xff0c;括号里面什么也没有就输出换行&amp;#xff0c;你不写就不换行&amp;#xff0c;公式就连一块了。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["print（）是调整格式的意思吗", ["打印99乘法表 倒数第二步中的print（）是什么意思呢，我如果不写这一句就不会有很整齐的格式（所有的公式就连在一起）"]], "Tag": "算法设计"}
{"Answer": "![图片说明](https://img-ask.csdn.net/upload/202005/01/1588322861_679148.png)\r\n\r\n```\r\n#include &lt;stdio.h&gt;\r\n\r\nint isprime(int n)\r\n{\r\n\tfor (int i = 2; i &lt; n; i++)\r\n\t{\r\n\t\tif (n % i == 0) return 0;\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint main()\r\n{\r\n\tfor (int i = 2; i &lt;= 100; i++)\r\n\t{\r\n\t\tif (!isprime(i)) continue;\r\n\t\tfor (int j = 2; j &lt;= 100; j++)\r\n\t\t{\r\n\t\t\tif (!isprime(j)) continue;\r\n\t\t\tprintf(\"%d * %d = %d\\n\", i, j, i * j);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n```", "Konwledge_Point": "乘法", "Question": ["新手求教 这个程序怎么写", ["从2到100的数字中填写打印乘法程序"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;test&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;number&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, number &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%d*%d&amp;#61;%d&amp;#39;&lt;/span&gt; % (j, i, i * j), end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n\n\ntest(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Python入门 参数 调用", ["2.定义一个函数，它有一个名为number的参数", "在控制台输入一个正整数number(number要求在4-9),", "根据输入的数值打印对应乘法口诀表"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;package test;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.*;\nimport java.util.Vector;\n\npublic &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Calculator {\n    String str1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 运算数1 初值一定为0 为了程序的安全&lt;/span&gt;\n    String str2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 运算数2&lt;/span&gt;\n    String signal &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 运算符&lt;/span&gt;\n    String result &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 结果&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;// 状态开关&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; k1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 开关1 用于选择输入方向 将要写入str2或 str2&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; k2 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 开关2 符号键 次数 k2&amp;gt;1说明进行的是2&amp;#43;3-9&amp;#43;8 这样的多符号运算&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; k3 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 开关3 str1 是否可以被清0 &amp;#61;&amp;#61;1时可以 !&amp;#61;1时不能被清0&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; k4 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 开关4 str2 同上&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 开关5 控制小数点可否被录入 &amp;#61;&amp;#61;1时可以 !&amp;#61;1 输入的小数点被丢掉&lt;/span&gt;\n    JButton store; &lt;span class=\"hljs-comment\"&gt;// 寄存器 记录 是否连续按下符号键&lt;/span&gt;\n    &amp;#64;&lt;span class=\"hljs-constructor\"&gt;SuppressWarnings(&lt;span class=\"hljs-string\"&gt;&amp;#34;rawtypes&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    Vector vt &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Vector(20, 10)&lt;/span&gt;;\n    JFrame frame &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JFrame(&lt;span class=\"hljs-string\"&gt;&amp;#34;404 - 计算器&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JTextField result_TextField &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JTextField(&lt;span class=\"hljs-params\"&gt;result&lt;/span&gt;, 20)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 20列&lt;/span&gt;\n    JButton clear_Button &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;清除&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button0 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button3 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;3&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button4 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;4&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button5 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;5&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button6 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;6&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button7 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;7&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button8 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;8&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button9 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;9&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button_Dian &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button_jia &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button_jian &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button_cheng &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button_chu &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n    JButton button_dy &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JButton(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n\n    &lt;span class=\"hljs-constructor\"&gt;Calculator()&lt;/span&gt; {\n        button0.set&lt;span class=\"hljs-constructor\"&gt;Mnemonic(KeyEvent.VK_0)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 等效键&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;// 其它 等效键 略,&lt;/span&gt;\n        result_TextField.set&lt;span class=\"hljs-constructor\"&gt;HorizontalAlignment(JTextField.RIGHT)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 文本框 右对齐&lt;/span&gt;\n        JPanel pan &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JPanel()&lt;/span&gt;;\n        pan.set&lt;span class=\"hljs-constructor\"&gt;Layout(&lt;span class=\"hljs-params\"&gt;new&lt;/span&gt; GridLayout(4, 4, 5, 5)&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;// 四行四列 边距为5像素&lt;/span&gt;\n        pan.add(button7);\n        pan.add(button8);\n        pan.add(button9);\n        pan.add(button_chu);\n        pan.add(button4);\n        pan.add(button5);\n        pan.add(button6);\n        pan.add(button_cheng);\n        pan.add(button1);\n        pan.add(button2);\n        pan.add(button3);\n        pan.add(button_jian);\n        pan.add(button0);\n        pan.add(button_Dian);\n        pan.add(button_dy);\n        pan.add(button_jia);\n        pan.set&lt;span class=\"hljs-constructor\"&gt;Border(BorderFactory.&lt;span class=\"hljs-params\"&gt;createEmptyBorder&lt;/span&gt;(5, 5, 5, 5)&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;// pan对象的边距&lt;/span&gt;\n        JPanel pan2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;JPanel()&lt;/span&gt;;\n        pan2.set&lt;span class=\"hljs-constructor\"&gt;Layout(&lt;span class=\"hljs-params\"&gt;new&lt;/span&gt; BorderLayout()&lt;/span&gt;);\n        pan2.add(result_TextField, BorderLayout.WEST);\n        pan2.add(clear_Button, BorderLayout.EAST);\n        frame.set&lt;span class=\"hljs-constructor\"&gt;Location(300, 200)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 主窗口 出现在位置&lt;/span&gt;\n        frame.set&lt;span class=\"hljs-constructor\"&gt;Resizable(&lt;span class=\"hljs-params\"&gt;false&lt;/span&gt;)&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 不能调大小&lt;/span&gt;\n        frame.get&lt;span class=\"hljs-constructor\"&gt;ContentPane()&lt;/span&gt;.set&lt;span class=\"hljs-constructor\"&gt;Layout(&lt;span class=\"hljs-params\"&gt;new&lt;/span&gt; BorderLayout()&lt;/span&gt;);\n        frame.get&lt;span class=\"hljs-constructor\"&gt;ContentPane()&lt;/span&gt;.add(pan2, BorderLayout.NORTH);\n        frame.get&lt;span class=\"hljs-constructor\"&gt;ContentPane()&lt;/span&gt;.add(pan, BorderLayout.CENTER);\n        frame.pack&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n        frame.set&lt;span class=\"hljs-constructor\"&gt;Visible(&lt;span class=\"hljs-params\"&gt;true&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;// 事件处理 程 序&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;// 数 字 键&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Listener implements ActionListener {\n            &amp;#64;&lt;span class=\"hljs-constructor\"&gt;SuppressWarnings(&lt;span class=\"hljs-string\"&gt;&amp;#34;unchecked&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n            public void action&lt;span class=\"hljs-constructor\"&gt;Performed(ActionEvent &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt; {\n                String ss &amp;#61; ((JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;).get&lt;span class=\"hljs-constructor\"&gt;Text()&lt;/span&gt;;\n                store &amp;#61; (JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;;\n                vt.add(store);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k1&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k3&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                        str1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n                        k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 还原开关k5状态&lt;/span&gt;\n                    }\n                    str1 &amp;#61; str1 &amp;#43; ss;\n                    k3 &amp;#61; k3 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    result_TextField.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-params\"&gt;str1&lt;/span&gt;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 显示&lt;/span&gt;\n                } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k1&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k4&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                        str2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n                        k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 还原开关k5状态&lt;/span&gt;\n                    }\n                    str2 &amp;#61; str2 &amp;#43; ss;\n                    k4 &amp;#61; k4 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    result_TextField.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-params\"&gt;str2&lt;/span&gt;)&lt;/span&gt;;\n                }\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 符 号&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Listener_signal implements ActionListener {\n            &amp;#64;&lt;span class=\"hljs-constructor\"&gt;SuppressWarnings(&lt;span class=\"hljs-string\"&gt;&amp;#34;unchecked&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n            public void action&lt;span class=\"hljs-constructor\"&gt;Performed(ActionEvent &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt; {\n                String ss2 &amp;#61; ((JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;).get&lt;span class=\"hljs-constructor\"&gt;Text()&lt;/span&gt;;\n                store &amp;#61; (JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;;\n                vt.add(store);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k2&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                    k1 &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 开关 k1 为1时,向数1写 为2时&amp;#xff0c;向数2写&lt;/span&gt;\n                    k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                    signal &amp;#61; ss2;\n                    k2 &amp;#61; k2 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 按符号键的次数&lt;/span&gt;\n                } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; a &amp;#61; vt.size&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n                    JButton c &amp;#61; (JButton) vt.get(a - &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!(c.get&lt;span class=\"hljs-constructor\"&gt;Text()&lt;/span&gt;.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;))&lt;span class=\"hljs-operator\"&gt;\n                            &amp;amp;&amp;amp; &lt;/span&gt;!(c.get&lt;span class=\"hljs-constructor\"&gt;Text()&lt;/span&gt;.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;))&lt;span class=\"hljs-operator\"&gt;\n                            &amp;amp;&amp;amp; &lt;/span&gt;!(c.get&lt;span class=\"hljs-constructor\"&gt;Text()&lt;/span&gt;.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;))&lt;span class=\"hljs-operator\"&gt;\n                            &amp;amp;&amp;amp; &lt;/span&gt;!(c.get&lt;span class=\"hljs-constructor\"&gt;Text()&lt;/span&gt;.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;))) {\n                        cal&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n                        str1 &amp;#61; result;\n                        k1 &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 开关 k1 为1时,向数1写 为2时&amp;#xff0c;向数2写&lt;/span&gt;\n                        k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                        k4 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                        signal &amp;#61; ss2;\n                    }\n                    k2 &amp;#61; k2 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                }\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 清除&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Listener_clear implements ActionListener {\n            &amp;#64;&lt;span class=\"hljs-constructor\"&gt;SuppressWarnings(&lt;span class=\"hljs-string\"&gt;&amp;#34;unchecked&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n            public void action&lt;span class=\"hljs-constructor\"&gt;Performed(ActionEvent &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt; {\n                store &amp;#61; (JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;;\n                vt.add(store);\n                k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                k2 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                k1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                k3 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                k4 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                str1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;;\n                str2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;;\n                signal &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n                result &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n                result_TextField.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-params\"&gt;result&lt;/span&gt;)&lt;/span&gt;;\n                vt.clear&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 等 于&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Listener_dy implements ActionListener {\n            &amp;#64;&lt;span class=\"hljs-constructor\"&gt;SuppressWarnings(&lt;span class=\"hljs-string\"&gt;&amp;#34;unchecked&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n            public void action&lt;span class=\"hljs-constructor\"&gt;Performed(ActionEvent &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt; {\n                store &amp;#61; (JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;;\n                vt.add(store);\n                cal&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n                k1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 还原开关k1状态&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;// str1&amp;#61;result;&lt;/span&gt;\n                k2 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                k3 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 还原开关k3状态&lt;/span&gt;\n                k4 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 还原开关k4状态&lt;/span&gt;\n                str1 &amp;#61; result; &lt;span class=\"hljs-comment\"&gt;// 为7&amp;#43;5&amp;#61;12 &amp;#43;5&amp;#61;17 这种计算做准备&lt;/span&gt;\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 小数点&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Listener_xiaos implements ActionListener {\n            &amp;#64;&lt;span class=\"hljs-constructor\"&gt;SuppressWarnings(&lt;span class=\"hljs-string\"&gt;&amp;#34;unchecked&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n            public void action&lt;span class=\"hljs-constructor\"&gt;Performed(ActionEvent &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt; {\n                store &amp;#61; (JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;;\n                vt.add(store);\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k5&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                    String ss2 &amp;#61; ((JButton) e.get&lt;span class=\"hljs-constructor\"&gt;Source()&lt;/span&gt;).get&lt;span class=\"hljs-constructor\"&gt;Text()&lt;/span&gt;;\n                    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k1&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k3&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                            str1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n                            k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 还原开关k5状态&lt;/span&gt;\n                        }\n                        str1 &amp;#61; str1 &amp;#43; ss2;\n                        k3 &amp;#61; k3 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                        result_TextField.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-params\"&gt;str1&lt;/span&gt;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 显示&lt;/span&gt;\n                    } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k1&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;) {\n                        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (k4&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n                            str2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;;\n                            k5 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 还原开关k5状态&lt;/span&gt;\n                        }\n                        str2 &amp;#61; str2 &amp;#43; ss2;\n                        k4 &amp;#61; k4 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n                        result_TextField.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-params\"&gt;str2&lt;/span&gt;)&lt;/span&gt;;\n                    }\n                }\n                k5 &amp;#61; k5 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n            }\n        }\n        &lt;span class=\"hljs-comment\"&gt;// 注册 监听器&lt;/span&gt;\n        Listener_dy jt_dy &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Listener_dy()&lt;/span&gt;;\n        Listener jt &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Listener()&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 临听数字键&lt;/span&gt;\n        Listener_signal jt_signal &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Listener_signal()&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 临 听符 号键&lt;/span&gt;\n        Listener_clear jt_c &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Listener_clear()&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;// 清除键&lt;/span&gt;\n        Listener_xiaos jt_xs &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Listener_xiaos()&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 小数点 键&lt;/span&gt;\n        button7.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button8.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button9.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button_chu.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt_signal&lt;/span&gt;)&lt;/span&gt;;\n        button4.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button5.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button6.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button_cheng.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt_signal&lt;/span&gt;)&lt;/span&gt;;\n        button1.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button2.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button3.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button_jian.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt_signal&lt;/span&gt;)&lt;/span&gt;;\n        button0.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt&lt;/span&gt;)&lt;/span&gt;;\n        button_Dian.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt_xs&lt;/span&gt;)&lt;/span&gt;;\n        button_dy.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt_dy&lt;/span&gt;)&lt;/span&gt;;\n        button_jia.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt_signal&lt;/span&gt;)&lt;/span&gt;;\n        clear_Button.add&lt;span class=\"hljs-constructor\"&gt;ActionListener(&lt;span class=\"hljs-params\"&gt;jt_c&lt;/span&gt;)&lt;/span&gt;;\n        &lt;span class=\"hljs-comment\"&gt;// 关闭事件处理程序&lt;/span&gt;\n        frame.add&lt;span class=\"hljs-constructor\"&gt;WindowListener(&lt;span class=\"hljs-params\"&gt;new&lt;/span&gt; WindowAdapter()&lt;/span&gt; {\n            public void window&lt;span class=\"hljs-constructor\"&gt;Closing(WindowEvent &lt;span class=\"hljs-params\"&gt;e&lt;/span&gt;)&lt;/span&gt; {\n                &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n            }\n        });\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 计 算&lt;/span&gt;\n    public void cal&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt; {\n        double a2;&lt;span class=\"hljs-comment\"&gt;// 运算数1&lt;/span&gt;\n        double b2;&lt;span class=\"hljs-comment\"&gt;// 运算数2&lt;/span&gt;\n        String c &amp;#61; signal;&lt;span class=\"hljs-comment\"&gt;// 运算符&lt;/span&gt;\n        double result2 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;// 结果&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)) {\n            result_TextField.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入运算符&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str1.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;// 字符串 &amp;#34;.&amp;#34; 转换成double型数据时 会出错 所以手工转&lt;/span&gt;\n                str1 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;0.0&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (str2.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;.&amp;#34;&lt;/span&gt;))\n                str2 &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;0.0&amp;#34;&lt;/span&gt;;\n            a2 &amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Double&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;value&lt;span class=\"hljs-constructor\"&gt;Of(&lt;span class=\"hljs-params\"&gt;str1&lt;/span&gt;)&lt;/span&gt;.double&lt;span class=\"hljs-constructor\"&gt;Value()&lt;/span&gt;;\n            b2 &amp;#61; &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;Double&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;value&lt;span class=\"hljs-constructor\"&gt;Of(&lt;span class=\"hljs-params\"&gt;str2&lt;/span&gt;)&lt;/span&gt;.double&lt;span class=\"hljs-constructor\"&gt;Value()&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;)) {\n                result2 &amp;#61; a2 &amp;#43; b2;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;-&amp;#34;&lt;/span&gt;)) {\n                result2 &amp;#61; a2 - b2;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;)) {\n                result2 &amp;#61; a2&lt;span class=\"hljs-operator\"&gt; * &lt;/span&gt;b2;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (c.equals(&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;)) {\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b2&lt;span class=\"hljs-operator\"&gt; &amp;#61;&amp;#61; &lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n                    result2 &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n                } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    result2 &amp;#61; a2&lt;span class=\"hljs-operator\"&gt; / &lt;/span&gt;b2;\n                }\n            }\n            result &amp;#61; ((&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Double(&lt;span class=\"hljs-params\"&gt;result2&lt;/span&gt;)&lt;/span&gt;).&lt;span class=\"hljs-keyword\"&gt;to&lt;/span&gt;&lt;span class=\"hljs-constructor\"&gt;String()&lt;/span&gt;);\n            result_TextField.set&lt;span class=\"hljs-constructor\"&gt;Text(&lt;span class=\"hljs-params\"&gt;result&lt;/span&gt;)&lt;/span&gt;;\n        }\n    }\n\n    &amp;#64;&lt;span class=\"hljs-constructor\"&gt;SuppressWarnings(&lt;span class=\"hljs-string\"&gt;&amp;#34;unused&amp;#34;&lt;/span&gt;)&lt;/span&gt;\n    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) {\n        &lt;span class=\"hljs-comment\"&gt;// 界面风格&amp;#xff0c;可以去除&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt; {\n            &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;UIManager&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;set&lt;span class=\"hljs-constructor\"&gt;LookAndFeel(&lt;span class=\"hljs-string\"&gt;&amp;#34;com.sun.java.swing.plaf.windows.WindowsLookAndFeel&amp;#34;&lt;/span&gt;)&lt;/span&gt;;\n        } catch (Exception e) {\n            e.print&lt;span class=\"hljs-constructor\"&gt;StackTrace()&lt;/span&gt;;\n        }\n        Calculator cal &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Calculator()&lt;/span&gt;;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/1625064842236image.png\" alt=\"img\" /&gt;&lt;/p&gt;\n&lt;p&gt;运行示例&amp;#xff1a;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["java,,,,,,", ["字体\n题目1：设计一个图形界面的简易计算器，完成简单的算术运算符，可以完成加法工减法、乘法、除法和取余运算。请自行安排版面，使其美观。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-vb.net\"&gt;\n&amp;#96;timescale &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;ns/&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;ns\n\nmodule testbench;\n\nreg            rst;\nreg            clk;\nreg    [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    a;\nreg    [&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    b;\nwire[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]    c;\n\nparameter RESET_PERIOD        &amp;#61; &lt;span class=\"hljs-number\"&gt;500&lt;/span&gt;;\nparameter CLK_PERIOD        &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;                    &lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;MHz\n\ninitial    clk &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\nalways    clk &amp;#61; &lt;span class=\"hljs-comment\"&gt;#(CLK_PERIOD/2.0) ~clk;&lt;/span&gt;\n\ninitial    begin\n    rst &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;#RESET_PERIOD&lt;/span&gt;\n    rst &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;#(CLK_PERIOD*4)    $stop;    // 执行 4 个时钟之后停止&lt;/span&gt;\nend\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 这部分代码是自动产生&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;个&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;位数 a,b 每个时钟变化一次\n    always&amp;#64;(posedge clk)\n    begin\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(rst)\n        begin\n            a    &amp;lt;&amp;#61; &lt;span class=\"hljs-comment\"&gt;#1 0;&lt;/span&gt;\n            b    &amp;lt;&amp;#61; &lt;span class=\"hljs-comment\"&gt;#1 1;&lt;/span&gt;\n        end\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        begin\n            {b,a}    &amp;lt;&amp;#61; &lt;span class=\"hljs-comment\"&gt;#1 {b,a} &amp;#43; 1;&lt;/span&gt;\n        end\n    end\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt; 要是不用上自动产生&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;个&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;位数&amp;#xff0c;可以按下面的代码\n&lt;span class=\"hljs-regexp\"&gt;//i&lt;/span&gt;nitial    begin\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    a &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-comment\"&gt;#RESET_PERIOD&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    a &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-comment\"&gt;#CLK_PERIOD&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    a &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    &lt;span class=\"hljs-comment\"&gt;#CLK_PERIOD&lt;/span&gt;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    a &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;b &amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;;\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;end\n&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;&lt;span class=\"hljs-regexp\"&gt;//&lt;/span&gt;    \n\n    mult    ux\n    (\n        .clk    (clk),\n        .rst    (rst),\n        .a        (a),\n        .b        (b),\n        .c        (c)\n    );\n\nendmodule\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["verilog如何让仿真进行一定次数就停止", ["我写了一位原码乘法器，希望他进行四次运算就结束本次运算，请问如何实现？还有一个问题什么也不写，是默认一直循环进行这个运算吗？感谢！", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第一个&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;i &amp;#61; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;lt;&amp;#61; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;200&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,i-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i % j&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(i)[-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; [&lt;span class=\"hljs-string\"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;]:\n            &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i)\n    i &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;第二个&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{}*{} &amp;#61; {:&amp;lt;4}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(i,j,i*j),end &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["关于一个python的问题", ["1、编写程序，显示在101-200之间且个位数为7或者9的所有素数。循环必须用while语句实现。", "2、编写程序，显示规范的三角形的九九乘法表。循环必须用for语句实现。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;a&amp;#43;&amp;#43;表示的是a的值先使用后自增&lt;br /&gt;&amp;#43;&amp;#43;a则表示的是a本身先自增后使用&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["数据类型的一个简单运算问题", ["int a=5,b=4,x,y;", "x=a++乘以a++乘以a++;", "自增优先级大于乘法，x为什么不是等于5乘以6乘以7而是等于5乘以5乘以5？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码2是初级版&amp;#xff0c;代码1是升级版。。写代码的一个重要的好习惯是写注释─━ _ ─━✧&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["以下两种代码形式采用哪种会更好一些?", ["Python小白初学者,", "自学到了用循环嵌套制作99乘法表部分,", "请问各位大大,", "以下哪种形式更有好一些?也就是更有利于小白同学培养良好的代码习惯?", "代码1:", "\n", "\n", "代码2:", "\n", "谢谢解答!"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用函数&amp;#xff0c;每一个函数实现一个功能&lt;br /&gt;main函数里提供菜单让用户进行选择&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["怎么做一个程序合集啊！😭", ["大神们们，救救我！", "用Visual C++6.0怎么弄出一个一堆程序一起运行啊？就那种像回文数，九九乘法表的小程序加起来的集合，5-6个程序加起来。我弄不出来啊！😭"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为操作数是8位的时候被乘数是AL,相当于AL和AL做乘,0CH*0CH&amp;#61;12*12&amp;#61;16*9&amp;#61;0090H,存入AX&lt;br /&gt;&lt;strong&gt;有帮助望采纳&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/87929506213619.png\" width=\"600px\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["如何解释汇编语言此问题中MUL指令执行后的AX值？", ["\n", "不理解为什么做乘法之后的结果是这样，AX本来是 FF0CH,  mul AL也就是用AH * AL，即 FF * 0C H，用计算器算了下是下面这样", "\n", "\n", "为什么debug显示的ax值为 0090H，求解~"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;button3_Click&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;object&lt;/span&gt; sender, System.EventArgs e&lt;/span&gt;)&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (textBox1.Text.Length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || textBox2.Text.Length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || textBox3.Text.Length &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        textBox4.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff01;&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt; a, b, s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;.Parse(textBox1.Text);\n    b &amp;#61; &lt;span class=\"hljs-built_in\"&gt;float&lt;/span&gt;.Parse(textBox2.Text);\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;.Parse(textBox3.Text);\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (c)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            s &amp;#61; a &amp;#43; b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            s &amp;#61; a - b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            s &amp;#61; a * b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            {\n                textBox4.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;除数为零&amp;#xff01;&amp;#34;&lt;/span&gt;;\n                &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n            }\n            s &amp;#61; a / b;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-literal\"&gt;default&lt;/span&gt;:\n            textBox4.Text &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入错误&amp;#xff01;&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n\n    }\n    textBox4.Text &amp;#61; s.ToString();\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/343219368866130.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C#窗体应用程序的问题", ["怎样用C#窗体来实现让用户输入两个整数，然后再输入0-3之间的一个数，0代表加法，1代表减法，2代表乘法，3代表除法,计算这两个数字的结果。用switch语句可以吗？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;基于Monster 组和GPT的调写&amp;#xff1a;&lt;br /&gt;&amp;#xff08;1&amp;#xff09;首先&amp;#xff0c;我们需要证明Q[√p]构成一个子域。为此&amp;#xff0c;需要验证以下三个条件&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;Q[√p]中的元素对加法和乘法封闭。&lt;br /&gt;对于任意的a&amp;#43;b√p和c&amp;#43;d√p&amp;#xff0c;它们的和为&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;(a&amp;#43;b√p) &amp;#43; (c&amp;#43;d√p) &amp;#61; (a&amp;#43;c) &amp;#43; (b&amp;#43;d)√p&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;它们的积为&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;(a&amp;#43;b√p) × (c&amp;#43;d√p) &amp;#61; ac &amp;#43; ad√p &amp;#43; bc√p &amp;#43; bdp&lt;br /&gt;&amp;#61; (ac&amp;#43;bdp) &amp;#43; (ad&amp;#43;bc)√p&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;由此可见&amp;#xff0c;它们的和与积仍然是Q[√p]中的元素&amp;#xff0c;因此Q[√p]对加法和乘法封闭。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;Q[√p]中存在加法和乘法的单位元。&lt;br /&gt;加法单位元为0&amp;#xff0c;乘法单位元为1。它们都属于Q[√p]。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;Q[√p]中的元素都有加法和乘法的逆元。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;设a&amp;#43;b√p属于Q[√p]&amp;#xff0c;其中a和b都是有理数。则它的加法逆元为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;-(a&amp;#43;b√p) &amp;#61; (-a)&amp;#43;(-b)√p&lt;/p&gt;\n&lt;p&gt;它的乘法逆元为&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;1/(a&amp;#43;b√p) &amp;#61; (a-b√p)/(a^2-bp)&lt;/p&gt;\n&lt;p&gt;由此可见&amp;#xff0c;Q[√p]中的元素都有加法和乘法的逆元&amp;#xff0c;因此Q[√p]是一个子域。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;接下来&amp;#xff0c;我们需要证明Q[√p]是实数域R的一个子域。实数域R是由所有实数构成的一个域&amp;#xff0c;因此需要验证Q[√p]满足以下两个条件&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;Q[√p]中的元素都是实数。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;设a&amp;#43;b√p属于Q[√p]&amp;#xff0c;其中a和b都是有理数。由于p是素数&amp;#xff0c;因此√p是无理数&amp;#xff0c;因此a&amp;#43;b√p既是有理数又是无理数&amp;#xff0c;因此它是一个实数。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;Q[√p]对实数的加法和乘法封闭。&lt;br /&gt;由于Q[√p]对有理数的加法和乘法封闭&amp;#xff0c;因此Q[√p]对实数的加法和乘法也封闭。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;综上所述&amp;#xff0c;Q[√p]关于数的加法和乘法构成实数域R的一个子域。&lt;br /&gt;&amp;#xff08;2&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;两个域Q[√2]和Q[√3]不同构。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;为了说明这一点&amp;#xff0c;我们可以采用反证法。假设存在一个同构映射f&amp;#xff1a;Q[√2]→Q[√3]&amp;#xff0c;满足f(a&amp;#43;b√2) &amp;#61; c&amp;#43;d√3&amp;#xff0c;其中a,b,c,d∈Q。&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;考虑特殊情况下的元素√2和√3。由于同构映射保持加法和乘法&amp;#xff0c;因此有&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;f(√2) &amp;#61; f(1) × f(√2) &amp;#61; f(1&amp;#43;1) &amp;#61; f(2) &amp;#61; e&amp;#43;f√3&lt;br /&gt;f(√3) &amp;#61; f(1) × f(√3) &amp;#61; f(1&amp;#43;1&amp;#43;1) &amp;#61; f(3) &amp;#61; g&amp;#43;h√3&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;其中e,f,g,h∈Q。由于f是双射&amp;#xff0c;因此e和g是唯一确定的。&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;考虑f(√2)的平方&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;f(√2)² &amp;#61; f(2) &amp;#61; e&amp;#43;f√3&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;由于f保持乘法&amp;#xff0c;因此有&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;f(√2)² &amp;#61; f(√2) × f(√2) &amp;#61; (c&amp;#43;d√3) × (c&amp;#43;d√3) &amp;#61; (c²&amp;#43;3d²) &amp;#43; 2cd√3&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;由此可见&amp;#xff0c;有&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;e&amp;#43;f√3 &amp;#61; (c²&amp;#43;3d²) &amp;#43; 2cd√3&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;因此&amp;#xff0c;实部和虚部必须分别相等&amp;#xff0c;即&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;e &amp;#61; c²&amp;#43;3d²&lt;br /&gt;f &amp;#61; 2cd&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;同理&amp;#xff0c;考虑f(√3)的平方&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;f(√3)² &amp;#61; f(3) &amp;#61; g&amp;#43;h√3&lt;/p&gt;\n&lt;p&gt;有&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;g&amp;#43;h√3 &amp;#61; (e²&amp;#43;2ef√3&amp;#43;3f²) &amp;#43; (2ef&amp;#43;6fh)√3&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;因此&amp;#xff0c;又得到实部和虚部必须分别相等&amp;#xff0c;即&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;g &amp;#61; e²&amp;#43;3f²&lt;br /&gt;h &amp;#61; 2ef&amp;#43;3fh&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;然而&amp;#xff0c;由于f是双射&amp;#xff0c;因此存在√2的有理数系数多项式p(x)和q(x)&amp;#xff0c;满足p(√2) &amp;#61; 0&amp;#xff0c;且q(√2)≠0。因此有&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;f(p(√2)) &amp;#61; f(0) &amp;#61; 0&lt;br /&gt;f(q(√2)) ≠ 0&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;同理&amp;#xff0c;存在√3的有理数系数多项式r(x)和s(x)&amp;#xff0c;满足r(√3) &amp;#61; 0&amp;#xff0c;且s(√3)≠0。因此有&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;f(r(√3)) &amp;#61; f(0) &amp;#61; 0&lt;br /&gt;f(s(√3)) ≠ 0&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;然而&amp;#xff0c;考虑多项式q(x)和s(x)在f上的像&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;f(q(√2)) ≠ 0&lt;br /&gt;f(s(√3)) ≠ 0&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;这意味着f不是一个环同态&amp;#xff0c;因此矛盾。&lt;/li&gt;&lt;/ul&gt;\n&lt;ul&gt;&lt;li&gt;因此&amp;#xff0c;域Q[√2]和域Q[√3]不同构。&lt;/li&gt;&lt;/ul&gt;", "Konwledge_Point": "乘法", "Question": ["求解高等代数相关问题解答", ["设p是素数.令Ql√p〕={a+b√pla,b∈Q}，(其中Q为", "数域.", "（1）证明：Q[√p]关于数的加法和乘法构成实数域R的一个子域.", "（2）问：域Q[√2]和域Q[√3] 是否同构？并给出理由."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;详细代码实现和测试用例如下&amp;#xff0c;望采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Fraction&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; int numerator;   &lt;span class=\"hljs-comment\"&gt;// 分子&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; int denominator; &lt;span class=\"hljs-comment\"&gt;// 分母&lt;/span&gt;\n\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Fraction(int numerator, int denominator) {\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator &amp;#61; numerator;\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator &amp;#61; denominator;\n  }\n\n  &lt;span class=\"hljs-comment\"&gt;// 加法&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Fraction plus(Fraction other) {\n    int newNumerator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator * other.denominator &amp;#43; other.numerator * &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator;\n    int newDenominator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator * other.denominator;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; new Fraction(newNumerator, newDenominator);\n  }\n\n  &lt;span class=\"hljs-comment\"&gt;// 减法&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Fraction subtract(Fraction other) {\n    int newNumerator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator * other.denominator - other.numerator * &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator;\n    int newDenominator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator * other.denominator;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; new Fraction(newNumerator, newDenominator);\n  }\n\n  &lt;span class=\"hljs-comment\"&gt;// 乘法&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Fraction multiply(Fraction other) {\n    int newNumerator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator * other.numerator;\n    int newDenominator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator * other.denominator;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; new Fraction(newNumerator, newDenominator);\n  }\n\n  &lt;span class=\"hljs-comment\"&gt;// 除法&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Fraction divide(Fraction other) {\n    int newNumerator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator * other.denominator;\n    int newDenominator &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator * other.numerator;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; new Fraction(newNumerator, newDenominator);\n  }\n\n  &lt;span class=\"hljs-comment\"&gt;// 倒数&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Fraction reciprocal() {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; new Fraction(&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator, &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator);\n  }\n\n  &lt;span class=\"hljs-comment\"&gt;// 相反数&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Fraction opposite() {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; new Fraction(-&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator, &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator);\n  }\n\n  &lt;span class=\"hljs-comment\"&gt;// 生成输出串&lt;/span&gt;\n  &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; String toString() {\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; String.format(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d/%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.numerator, &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.denominator);\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;测试用例&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-attribute\"&gt;Fraction&lt;/span&gt; a &amp;#61; new Fraction(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n&lt;span class=\"hljs-attribute\"&gt;Fraction&lt;/span&gt; b &amp;#61; new Fraction(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n\n&lt;span class=\"hljs-attribute\"&gt;System&lt;/span&gt;.out.println(a.plus(b));      // 输出&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;System&lt;/span&gt;.out.println(a.subtract(b));   // 输出&amp;#xff1a;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;System&lt;/span&gt;.out.println(a.multiply(b));   // 输出&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;System&lt;/span&gt;.out.println(a.divide(b));     // 输出&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;System&lt;/span&gt;.out.println(a.reciprocal());  // 输出&amp;#xff1a;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-attribute\"&gt;System&lt;/span&gt;.out.println(a.opposite());    // 输出&amp;#xff1a;-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;/&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Fraction 加减乘除 倒数 相反数", ["设计分数类Fraction，要求实现分数的运算功能，包括：", "a、加法，函数名plus；", "\n", "b、减法，函数名subtract；", "\n", "c、乘法，函数名multiply；", "\n", "d、除法，函数名divide；", "\n", "e、倒数，函数名reciprocal；", "\n", "f、相反数，函数名opposite；", "\n", "g、生成输出串，函数名toString。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;strong&gt;第二题&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;这一计算器包含了整数运算和小数运算。&lt;br /&gt;代码如下&amp;#xff1a;&lt;/strong&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;欢迎使用【森林树苗】计算机&amp;#39;&lt;/span&gt;)\nFirstnum &amp;#61; float(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入第一位数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n&lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; &amp;#61; str(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请选择运算规则 &amp;#43;  -  *  / :&amp;#39;&lt;/span&gt;))\nSecondnum &amp;#61; float(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入第二位数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%f &amp;#43; %f &amp;#61; %f&amp;#39;&lt;/span&gt; % (Firstnum, Secondnum, Firstnum &amp;#43; Secondnum))\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%f - %f &amp;#61; %f&amp;#39;&lt;/span&gt; % (Firstnum, Secondnum, Firstnum - Secondnum))\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%f * %f &amp;#61; %f&amp;#39;&lt;/span&gt; % (Firstnum, Secondnum, Firstnum * Secondnum))\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;reg&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%f / %f &amp;#61; %f&amp;#39;&lt;/span&gt; % (Firstnum, Secondnum, Firstnum / Secondnum))\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;运算结束&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["新手入门python程序，大家能做出来吗？", ["1 设计一个程序 帮助小学生练习10以内的加法运算。", "要求", "能随机生成加法运算", "学生查看题目并输入答案", "判断学生输入的答案是否正确", "退出时，统计学生答题总数，正确数量以及正确率。", "\n", "2 设计一个简易计算器，实现两个数的加减乘除运算", "\n", "3 打印九九乘法表"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;如有用请采纳&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61; int(input())\n&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; i%&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;*&amp;#61;i\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;)\ni&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(i&amp;lt;&amp;#61;&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(i)\n    i&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["输入一个整数值，找出并罗列一到这个值之间3的倍数", ["描述", "1.请从用户输入整数。", "2.输出从1到输入整数的3的倍数。", "3.输出从1到输入整数的3的倍数的乘法。", "4.使用while语句重复从1到输入的整数。", "5.在判断是否为3的倍数时，用if语句。", "下面是我写的", "\n", "\n", "能帮我改成正确的吗谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;因为在 循环里里面 已经修改了j的值&amp;#xff0c;&lt;br /&gt;而在while i &amp;lt;&amp;#61; 9:&amp;#xff0c;每一次的j要从1开始&amp;#xff0c;如果j放到外面&amp;#xff0c;就没办法初始化j的值为1&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于内外循环赋值的问题", ["问题遇到的现象和发生背景 关于内外循环赋值的问题", "\n", "这个代码能够正常输出乘法表", "\n", "#九九乘法表", "\n", "i", " = ", "1", "\n", "while", " i <= ", "9", ":\n    ", "j", " = ", "1", "\n    ", "while", " j <= ", "9", ":\n        ", "print", "(j,", "\"*\"", ",i,", "\"=\"", ",j*i,end = ", "\"  \"", ")\n        ", "j", " = j + ", "1", "\n    ", "print", "( )\n    ", "i", " = i + ", "1", "\n\n", "\n", "结果如下", "1 * 1 = 1  2 * 1 = 2  3 * 1 = 3  4 * 1 = 4  5 * 1 = 5  6 * 1 = 6  7 * 1 = 7  8 * 1 = 8  9 * 1 = 9", "1 * 2 = 2  2 * 2 = 4  3 * 2 = 6  4 * 2 = 8  5 * 2 = 10  6 * 2 = 12  7 * 2 = 14  8 * 2 = 16  9 * 2 = 18", "1 * 3 = 3  2 * 3 = 6  3 * 3 = 9  4 * 3 = 12  5 * 3 = 15  6 * 3 = 18  7 * 3 = 21  8 * 3 = 24  9 * 3 = 27", "1 * 4 = 4  2 * 4 = 8  3 * 4 = 12  4 * 4 = 16  5 * 4 = 20  6 * 4 = 24  7 * 4 = 28  8 * 4 = 32  9 * 4 = 36", "1 * 5 = 5  2 * 5 = 10  3 * 5 = 15  4 * 5 = 20  5 * 5 = 25  6 * 5 = 30  7 * 5 = 35  8 * 5 = 40  9 * 5 = 45", "1 * 6 = 6  2 * 6 = 12  3 * 6 = 18  4 * 6 = 24  5 * 6 = 30  6 * 6 = 36  7 * 6 = 42  8 * 6 = 48  9 * 6 = 54", "1 * 7 = 7  2 * 7 = 14  3 * 7 = 21  4 * 7 = 28  5 * 7 = 35  6 * 7 = 42  7 * 7 = 49  8 * 7 = 56  9 * 7 = 63", "1 * 8 = 8  2 * 8 = 16  3 * 8 = 24  4 * 8 = 32  5 * 8 = 40  6 * 8 = 48  7 * 8 = 56  8 * 8 = 64  9 * 8 = 72", "1 * 9 = 9  2 * 9 = 18  3 * 9 = 27  4 * 9 = 36  5 * 9 = 45  6 * 9 = 54  7 * 9 = 63  8 * 9 = 72  9 * 9 = 81", "\n", "\n", "但是这个不行，为什么先将 j 进行赋值就不可以输出完整的乘法表呢？", "\n", "#九九乘法表", "\n", "i", " = ", "1", "\n", "j", " = ", "1", "\n", "while", " i <= ", "9", ":\n    ", "while", " j <= ", "9", ":\n        ", "print", "(j,", "\"*\"", ",i,", "\"=\"", ",j*i,end = ", "\"  \"", ")\n        ", "j", " = j + ", "1", "\n    ", "print", "( )\n    ", "i", " = i + ", "1", "\n\n", "\n", "结果如下", "1 * 1 = 1  2 * 1 = 2  3 * 1 = 3  4 * 1 = 4  5 * 1 = 5  6 * 1 = 6  7 * 1 = 7  8 * 1 = 8  9 * 1 = 9  "]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/444462526176116.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sum&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a&amp;#43;b;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;score&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a)&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;A\\n&amp;#34;&lt;/span&gt;);}\n     &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;90&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;B\\n&amp;#34;&lt;/span&gt;);}\n      &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;80&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;C\\n&amp;#34;&lt;/span&gt;);}\n       &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a&amp;lt;&lt;span class=\"hljs-number\"&gt;70&lt;/span&gt;&amp;amp;&amp;amp;a&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;D\\n&amp;#34;&lt;/span&gt;);}\n       &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;E\\n&amp;#34;&lt;/span&gt;);}\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;fib&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n)&lt;/span&gt;\n&lt;/span&gt;{\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,a,b,c;\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n{\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i&amp;gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n{\n    c&amp;#61;a&amp;#43;b;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d &amp;#34;&lt;/span&gt;,c);\n    a&amp;#61;b;\n    b&amp;#61;c;\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\n    a&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    b&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1 &amp;#34;&lt;/span&gt;);\n}\n}\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;biao&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; sum;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;; j&amp;#43;&amp;#43;)\n        {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (j &amp;lt;&amp;#61; i)&lt;span class=\"hljs-comment\"&gt;//防止输出两遍&lt;/span&gt;\n            {\n                sum &amp;#61; i * j;\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%d\\t&amp;#34;&lt;/span&gt;, i, j, sum);\n            }\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;-----------小程序锦集----------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;1、两数求和\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;2、成绩等级判断\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;3、输出非波拉契数列的前N项\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;4、输出99乘法表\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;0、Bye-Bye\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i,n,result&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; a,b,s;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(;;)\n    {\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的选择&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;i);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (i)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入两个数&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f %f&amp;#34;&lt;/span&gt;,&amp;amp;a,&amp;amp;b);\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;结果是&amp;#xff1a;%.2f\\n&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;(a,b));\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入你的成绩&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&amp;amp;s);\n        &lt;span class=\"hljs-built_in\"&gt;score&lt;/span&gt;(s);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入N的值&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,&amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;fib&lt;/span&gt;(n);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;biao&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n    result&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;非法输入&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(result&amp;#61;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){&lt;!-- --&gt;&lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;}\n}\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n    \n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["编写一个简单的c语言程序", ["1.编写一个C语言程序，可以在主界面选择各种功能，界面可以参考下图", "2.程序应包括但不限于以下功能①输入两个数，输出这两个数的和②根据输入的成绩，输出相应等级③输出斐波拉契数列的前N项，N由用户输入④输出九九乘法表⑤自选项目，功能数量不能少于5个。", "3.所有子功能必须以自定义函数的形式定义和使用。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Person&lt;/span&gt;(&lt;span class=\"hljs-title class_ inherited__\"&gt;object&lt;/span&gt;):\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        self.__name &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;     &lt;span class=\"hljs-comment\"&gt;# 姓名&lt;/span&gt;\n        self.__age &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;18&amp;#39;&lt;/span&gt;      &lt;span class=\"hljs-comment\"&gt;# 年龄&lt;/span&gt;\n        self.__sex &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;男&amp;#39;&lt;/span&gt;\n        self.__major&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;计算机&amp;#39;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Student&lt;/span&gt;( &lt;span class=\"hljs-title class_ inherited__\"&gt;Person&lt;/span&gt;):\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;SetInfo&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, name, age, sex,major&lt;/span&gt;):\n        self.__name &amp;#61; name     &lt;span class=\"hljs-comment\"&gt;# 姓名&lt;/span&gt;\n        self.__age &amp;#61; age       &lt;span class=\"hljs-comment\"&gt;# 年龄&lt;/span&gt;\n        self.__sex &amp;#61; sex\n        self.__major&amp;#61;major\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;ShowInfo&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(self.__name&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;#43;self.__age&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;#43;self.__sex&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;&amp;#43;self.__major)\n\nstu &amp;#61; Student()\nn&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;please input the name of student:&amp;#34;&lt;/span&gt;)\na&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;please input the age of student:&amp;#34;&lt;/span&gt;)\ns&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;please input the sex of student:&amp;#34;&lt;/span&gt;)\nm&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;please input the major of student:&amp;#34;&lt;/span&gt;)\nstu.SetInfo(n,a,s,m)\nstu.ShowInfo()\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;第二个&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;l1&amp;#61;[]\nl2&amp;#61;[]\nl1&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;the first vect:&amp;#39;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\nl2&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;the second vect:&amp;#39;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)\nn&amp;#61;&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;the n:&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;the result is:&amp;#39;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(l1)):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(l1[i])&amp;#43;&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(l2[i])),end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;the result is:&amp;#39;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(l1)):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(l1[i])-&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(l2[i])),end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;the result is:&amp;#39;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(l1)):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(l1[i])*&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)),end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;the result is:&amp;#39;&lt;/span&gt;,end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(l1)):\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(l1[i])/&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(n)),end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["在Person类的基础上实现派生类Student与向量加减乘除三个维度的实现。", ["请在Person类的基础上实现派生类Student，在学生类中增加新的SetInfo和ShowInfo方法，实现学生信息的输入和显示。", "向量加法（add）、减法（sub）、乘法（mul，multiply n）、除法（div，divide by n）三个维度的实现。（类实现）", "运算结果如图", "\n"]], "Tag": "算法设计"}
{"Answer": "q=y%z;这一步，z=0，所以这一步有问题", "Konwledge_Point": "乘法", "Question": ["我的输入1200有问题，不知道哪里有问题", ["数位拆分v2.0", "\n从键盘上输入一个4位数的整数n，编写程序将其拆分为两个2位数的整数a和b，计算并输出拆分后的两个数的加、减、乘、除和求余运算的结果。例如n=-4321,设拆分后的两个整数为a,b，则a=-43,b=-21。除法运算结果要求精确到小数点后2位。求余和除法运算需要考虑除数为0的情况，即如果拆分后b=0,则输出提示信息\"the second operater is zero!\"", "\n\n", "程序的运行结果示例1：", "\nplease input n:", "\n1200↙", "\n12,0", "\nsum=12,sub=12,multi=0", "\nthe second operater is zero!", "\n\n", "程序的运行结果示例2：", "\nplease input n:", "\n-2304↙", "\n-23,-4", "\nsum=-27,sub=-19,multi=92", "\ndev=5.75,mod=-3", "\n\n", "输入格式: \"%d\"", "\n输入提示信息：\"please input n:\\n\"", "\n拆分后的两个整数的输出格式：\"%d,%d\\n\"", "\n加法、减法、乘法的输出格式：\"sum=%d,sub=%d,multi=%d\\n\"", "\n除法和求余的输出格式：\"dev=%.2f,mod=%d\\n\"", "\n除数为0的提示信息：\"the second operater is zero!\\n\"", "\n\n", "_**", "\n#include ", "\n#include ", "\nint main()", "\n{", "\n    int x,y,z,q,i,a,b;", "\n    float n,k,l;", "\n    printf(\"please input n:\\n\");", "\n    scanf(\"%d\",&x);", "\n    y=x/100;", "\n    z=x%100;", "\n    printf(\"%d,%d\\n\",y,z);", "\n    a=y+z;", "\n    b=y-z;", "\n    i=y*z;", "\n    k=y;l=z;", "\n    n=k/l;", "\n    q=y%z;", "\n    printf(\"sum=%d,sub=%d,multi=%d\\n\",a,b,i);", "\n    if(z==0)", "\n        printf(\"the second operater is zero!\\n\");", "\n    else", "\n        printf(\"dev=%.2f,mod=%d\\n\",n,q);", "\n }", "\n\n", "_**"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a &amp;#43; b;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;jian&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a - b;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mult&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a * b;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;chu&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(b &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a / b;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; m, n;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; op;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入运算式&amp;#xff08;例如&amp;#xff1a;2&amp;#43;5)&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf%c%lf&amp;#34;&lt;/span&gt;, &amp;amp;m, &amp;amp;op, &amp;amp;n);\n        &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt;(op) {\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(m, n));\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;jian&lt;/span&gt;(m, n));\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;mult&lt;/span&gt;(m, n));\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;:\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f&amp;#34;&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;chu&lt;/span&gt;(m, n));\n                &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["编程实现一个具有,运算功能的简单计算器。（通过函数实现）", ["#include<stdio.h>", "#include<stdlib.h>", "/", "在此处撰写加减乘除四个函数，传入的参数均为两个double，返回值均为double，注意除法运算中除数为0的情况", "/", "int main()", "{", "    double m,n;", "    char op;", "    while(true){", "        printf(\"请输入运算式（例如：2+5)\");", "        scanf(\"%lf%c%lf\",&m,&op,&n);", "        switch(op)", "        {", "            case '+':", "                //在此处填入调用加函数并将结果输出", "                break;", "            case '-':", "            //在此处填入调用减法函数并将结果输出", "                break;", "            case '*':", "                //在此处填入调用乘法函数并将结果输出", "                break;", "            case '/':", "                //在此处填入调用除函数并将结果输出", "                break;", "        }", "        printf(\"\\n\");", "    }", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()默认就是在家输出的内容之后自动加一个\\n换行符。\n因为&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt; 函数的 end参数的默认值就是 &lt;span class=\"hljs-attribute\"&gt;end&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python换行问题", ["做练习时看到print(\"\") 代表换行", "跟/n有什么不同吗？替换后报错", "如下，做乘法口诀时的最后一行。", "for i in range(0,10):", "    for j in range(1,i+1):", "        print(j,\"X\",i,\"=\",j*i,\"\\t\",end=\"\")", "    print(\"\")"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/699582509656125.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["利用python的time库中的time函数求得运行时间，但这个得到的变量是无法进行除法运算，数值没有发生改变", ["利用python的time库中的time函数求得运行时间，但它除以10还是同个数，不知道什么原因害，求解答，万分感谢！", "\n", "startTime", "=time.perf_counter()  \n\nsurecallback() #运行某函数\n\nendTime = time.perf_counter()  \n\ntime_solve = endTime - startTime\n\nt.", "set", "(", "'进行本次乘法测试花费的时间为:%s'", " % (time_solve))\n        t1.", "set", "(", "'进行每次测试花费的平均时间为:%s'", " %(time_solve/10))\n        title07 = tk.Label(window,\n                           ", "textvariable", "=t, font=(", "'华文行楷'", ", 15),\n                           ", "bg", "=", "'SpringGreen'", ")\n        title07.place(", "x", "=30, ", "y", "=140)\n        title08 = tk.Label(window,\n                           ", "textvariable", "=t, font=(", "'华文行楷'", ", 15),\n                           ", "bg", "=", "'SpringGreen'", ")\n        title08.place(", "x", "=30, ", "y", "=200)\n", "\n", "问题：每次乘法测试都有10道题，想要利用title08输出单次测试的平均时间，但title07和title08输出的时间都是同一个值，也就是time_solve，并没有进行相应的除法，实在很懵"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;该回答引用ChatGPT &lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;is_prime&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x)&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i;\n  &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-built_in\"&gt;sqrt&lt;/span&gt;(x); i&amp;#43;&amp;#43;) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n      &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    }\n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n  &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k, x, i;\n  &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;k);\n  &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (k--) {\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;x);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;; i &amp;lt;&amp;#61; x; i&amp;#43;&amp;#43;) {\n      &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x % i &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=\"hljs-built_in\"&gt;is_prime&lt;/span&gt;(i)) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, i);\n        x /&amp;#61; i;\n        i--;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) {\n          &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n          &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n      }\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n  }\n  &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["C语言分解任意给定整数的素因子？", ["不知道如何才可以做到任意输入，", "\n", "输入的第一行含一个正整数k(1<=k<=10)，表示测试例的个数，后面紧接着k行，每行对应一个测试例，包含一个正整数x输出:每个测试例对应一行输出，输出x的素数乘积表示式，式中的素数从小到大排列，两个素数之间用“*”表示乘法。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; java.util.Scanner;\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Main&lt;/span&gt; {\n\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(String[] args)&lt;/span&gt; {\n        Fraction f1&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Fraction&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n        Fraction f2&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Fraction&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n        Fraction f3&amp;#61;f1.add(f2);\n        f3.print();\n        Fraction f4&amp;#61;f1.sub(f2); &lt;span class=\"hljs-comment\"&gt;//测试分数减法&lt;/span&gt;\n        f4.print();\n        Fraction f5&amp;#61;f1.multi(f2); &lt;span class=\"hljs-comment\"&gt;//测试分数乘法&lt;/span&gt;\n        f5.print();\n        Fraction f6&amp;#61;f1.divide(f2); &lt;span class=\"hljs-comment\"&gt;//测试分数除法&lt;/span&gt;\n        f6.print();\n    }\n}\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Fraction&lt;/span&gt;{\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denominator;\n\n    Fraction(){}\n\n    Fraction(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d){\n        numerator&amp;#61;n;\n        denominator&amp;#61;d;\n    }\n\n    Fraction &lt;span class=\"hljs-title function_\"&gt;add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Fraction f2)&lt;/span&gt;{\n        Fraction f3&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Fraction&lt;/span&gt;();\n        f3.numerator&amp;#61;numerator*f2.denominator&amp;#43;denominator*f2.numerator;\n        f3.denominator&amp;#61;denominator*f2.denominator;\n        f3.reduction();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; f3;\n    }\n\n    Fraction &lt;span class=\"hljs-title function_\"&gt;sub&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Fraction f2)&lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//分数的减法运算&lt;/span&gt;\n        Fraction f3&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Fraction&lt;/span&gt;();\n        f3.numerator&amp;#61;numerator*f2.denominator-denominator*f2.numerator;\n        f3.denominator&amp;#61;denominator*f2.denominator;\n        f3.reduction();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; f3;\n    }\n\n    Fraction &lt;span class=\"hljs-title function_\"&gt;multi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Fraction f2)&lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//分数的乘法运算&lt;/span&gt;\n        Fraction f3&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Fraction&lt;/span&gt;();\n        f3.numerator&amp;#61;numerator*f2.numerator;\n        f3.denominator&amp;#61;denominator*f2.denominator;\n        f3.reduction();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; f3;\n    }\n\n    Fraction &lt;span class=\"hljs-title function_\"&gt;divide&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Fraction f2)&lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//分数的除法运算&lt;/span&gt;\n        Fraction f3&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Fraction&lt;/span&gt;();\n        f3.numerator&amp;#61;numerator*f2.denominator;\n        f3.denominator&amp;#61;denominator*f2.numerator;\n        f3.reduction();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; f3;\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;print&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n        reduction();\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(denominator &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//判断分数是否为整数&lt;/span&gt;\n            System.out.println(numerator);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            System.out.println(numerator&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&amp;#43;denominator);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;reduction&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//对分数进行约分&amp;#xff0c;化成最简分数&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; gcd(numerator,denominator); &lt;span class=\"hljs-comment\"&gt;//求分子分母的最大公约数&amp;#xff0c;记为a&lt;/span&gt;\n        numerator&amp;#61;numerator/a;\n        denominator&amp;#61;denominator/a;\n    }\n\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;gcd&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b)&lt;/span&gt;{ &lt;span class=\"hljs-comment\"&gt;//求最大公约数的辗转相除法&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; temp;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(b !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;){\n            temp&amp;#61;b;\n            b&amp;#61;a%b;\n            a&amp;#61;temp;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a;\n    }\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["java补充代码分数运算", ["以下程序实现分数的加法运算，请在此程序的基础上，实现分数的减法运算、乘法运算、除法运算，并进行测试。输入要求：整数，不考虑分母为0情况；输出要求：最简分数，分母不为1，分子不为0，分母不为0  注意输出-1/4（符号在分子）", "样例输入 Copy", "\n", "1  4  1  2", "样例输出 Copy", "3/4", "-1/4", "1/8", "1/2", "\n", "\nimport java.util.Scanner; \n\npublic class Main { \n\n", "       public static void main(String[] args) {         \n", "\n", "              Fraction f1=new Fraction(1,4); \n", "\n", "              Fraction f2=new Fraction(1,4); \n", "\n", "              Fraction f3=f1.add(f2); \n", "\n", "              f3.print(); \n", "\n", "               //此处补充程序 \n", "\n", "       } \n", "\n} \n\nclass Fraction{ \n\n", "       int numerator; \n", "\n", "       int denominator; \n", "\n", "       Fraction(){} \n", "\n", "       Fraction(int n,int d){ \n", "\n", "              numerator=n; \n", "\n", "              denominator=d; \n", "\n", "       } \n", "\n", "       Fraction add(Fraction f2){ \n", "\n", "              Fraction f3=new Fraction(); \n", "\n", "              f3.numerator=numerator*f2.denominator+denominator*f2.numerator; \n", "\n", "              f3.denominator=denominator*f2.denominator; \n", "\n", "              return f3; \n", "\n", "       } \n", "\n", "       Fraction sub(Fraction f2){ //分数的减法运算 \n", "\n", "              \n", "\n", "       } \n", "\n", "       Fraction multi(Fraction f2){ //分数的乘法运算 \n", "\n", "       } \n", "\n", "       Fraction divide(Fraction f2){ //分数的除法运算 \n", "\n\n\n\n", "       } \n", "\n", "       void print(){ \n", "\n", "              reduction(); \n", "\n", "              //以下输出需要修改成符合题目要求的形式 \n", "\n", "              System.out.println(numerator+\"/\"+denominator); \n", "\n", "       } \n", "\n", "       void reduction(){ //对分数进行约分，化成最简分数 \n", "\n", "              //请补充完整。此处直接对numerator和denominator进行约分 \n", "\n", "              //求分子分母的最大公约数，记为a \n", "\n", "              numerator=numerator/a; \n", "\n", "              denominator=denominator/a;        \n", "\n", "       } \n", "\n} \n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/840538497636129.jpg\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;望采纳&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言问题，0到100以内两个数四则运算", ["题目", "\n", "编写一个加、减、乘、除调用自定义函数完成4则运算程序。随机产生两个0-100之间整数，再随机产生一个1-4之间的数，其中1代表加法，2代表减法，3代表乘法，4代表除法，计算2个数的运算结果。需使用自定义函数实现。", "\n", "太难了，不会，急需答案。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;ok&amp;#xff0c;写好了&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Demo&lt;/span&gt; {\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;String&lt;/span&gt;[] args)&lt;/span&gt; &lt;/span&gt;{\n        Complex complex1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;);\n        Complex complex2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;19&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;99&lt;/span&gt;);\n\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;复数1为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; complex1);\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;复数2为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; complex2);\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;复数相减为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; complex1.&lt;span class=\"hljs-built_in\"&gt;subtraction&lt;/span&gt;(complex2).&lt;span class=\"hljs-built_in\"&gt;toString&lt;/span&gt;());\n        System.out.&lt;span class=\"hljs-built_in\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;复数相乘为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;#43; complex1.&lt;span class=\"hljs-built_in\"&gt;multiplication&lt;/span&gt;(complex2).&lt;span class=\"hljs-built_in\"&gt;toString&lt;/span&gt;());\n    }\n}\n\n&lt;span class=\"hljs-comment\"&gt;/**\n * 复数类\n */&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Complex&lt;/span&gt; {\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; real, imaginary;\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; real)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-built_in\"&gt;this&lt;/span&gt;(real, &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Complex&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; real, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; imaginary)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.real &amp;#61; real;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.imaginary &amp;#61; imaginary;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; real;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; real)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.real &amp;#61; real;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getImaginary&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; imaginary;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;setImaginary&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; imaginary)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.imaginary &amp;#61; imaginary;\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 复数的减法\n     *\n     * &amp;#64;param complex 减数\n     * &amp;#64;return 相减以后的复数对象\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Complex &lt;span class=\"hljs-title\"&gt;subtraction&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex complex)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;getReal&lt;/span&gt;() - complex.&lt;span class=\"hljs-built_in\"&gt;getReal&lt;/span&gt;(), &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;getImaginary&lt;/span&gt;() - complex.&lt;span class=\"hljs-built_in\"&gt;getImaginary&lt;/span&gt;());\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;/**\n     * 复数的乘法\n     *\n     * &amp;#64;param complex 乘数\n     * &amp;#64;return 相乘以后的复数对象 计算方法&amp;#xff1a;(a&amp;#43;bi)(c&amp;#43;di)&amp;#61;(ac-bd)&amp;#43;(bc&amp;#43;ad)i。\n     */&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; Complex &lt;span class=\"hljs-title\"&gt;multiplication&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex complex)&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;getReal&lt;/span&gt;(), b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;getImaginary&lt;/span&gt;(), c &amp;#61; complex.&lt;span class=\"hljs-built_in\"&gt;getReal&lt;/span&gt;(), d &amp;#61; complex.&lt;span class=\"hljs-built_in\"&gt;getImaginary&lt;/span&gt;();\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(a * c - b * d, b * c &amp;#43; a * d);\n    }\n\n    &amp;#64;&lt;span class=\"hljs-function\"&gt;Override\n    &lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;String&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;toString&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; real &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt; &amp;#43; imaginary &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt;;\n    }\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["编写一个Java程序，实现以下功能", ["设计一个复数类，要求:", "(1)在复数内部用双精度浮点数定义其实部和虚部;", "(2)实现3个构造函数:无参(实部，虚部均为0)、1 个参数(参数赋值给实部，虚部为0)、2个参数(参数分别给实部虚部赋值);", "(3)编写获取和修改复数的实部和虚部的成员方法;", "(4)编写实现复数减法、乘法运算的成员方法;", "(5)设计主方法，验证各成员方法的正确性;"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考这个&lt;a href=\"https://blog.csdn.net/new_wu/article/details/7394311\" id=\"textarea_1655249005868_1655249114405_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;https://blog.csdn.net/new_wu/article/details/7394311&lt;/span&gt;&lt;/a&gt;&lt;br /&gt;原文代码&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cctype&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n                   \n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n                   \n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; eps 1e-8&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; pi acos(-1.0)&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; inf 1&amp;lt;&amp;lt;30&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; linf 1LL&amp;lt;&amp;lt;60&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; pb push_back&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; lc(x) (x &amp;lt;&amp;lt; 1)&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; rc(x) (x &amp;lt;&amp;lt; 1 | 1)&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; lowbit(x) (x &amp;amp; (-x))&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; ll long long&lt;/span&gt;\n \n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; n;\n \n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;{\n   &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(~&lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;,&amp;amp;n)){\n            &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(n&amp;gt;&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;)\n                     n&amp;#61;n/&lt;span class=\"hljs-number\"&gt;18&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;) &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Stan wins.\\n&amp;#34;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;Ollie wins.\\n&amp;#34;&lt;/span&gt;);\n   }\n   &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["求解这个的C++或者C语言编译过程。", ["小明和小王在玩一个乘法游戏。游戏的每一轮需要将2～9中的某一个数字和已经得到的数p乘起来。小明总是从p＝1开始乘，然后是小王，接下来是小明，如此往复。在游戏开始之前，他们写下了一个整数n（1＜n＜42949000），得出的乘积p首次满足p≥n的游戏者获胜。", "输入", "输入每行包含一个整数n。", "输出", "对于每行输入，输出一行，要么是", "小明 wins.", "要么是", "小王  wins.", "假设双方都采取最优策略。", "输入                            输出", "162                          小明 wins.", "17                           小王wins.", "34012226                   小明 wins."]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/473119556476192.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;br /&gt;循环每次都是重复执行循环体内的内容&amp;#xff0c;每一次进来的时候都会将 w 赋值为1&amp;#xff0c;所以第二个循环内&amp;#xff0c;每次都是从1开始。&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c#代码循环和变量覆盖的疑问", ["作为 c#初学者，写9*9乘法口诀的时候，有个代码循环和变量覆盖的问题，", "!", "\n", "\n", "第一步循环的时候是输出  1乘1=1，然后q++等于2，w++等于2；", "第二部循环的时候不应该是输出  2乘2=4 吗，为啥w的值没有被覆盖掉，而是从1开始循环呢？输出    2乘1=2  2乘2=4  呢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我调试了一下&amp;#xff0c;发现他是因为你声明不初始化的化&amp;#xff0c;后面调用会有问题&amp;#xff0c;给它赋值个NULL&amp;#xff0c;不然如果不走switch&amp;#xff0c;岂不是没有初始化。&lt;br /&gt;以及注意你的函数定义与实现细节&amp;#xff0c;参数怎么做~&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/764958886846171.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; num1, num2;\n\n&lt;span class=\"hljs-comment\"&gt;//自定义计算器&amp;#xff0c;使用函数指针&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//加法&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a &amp;#43; b;\n;}\n&lt;span class=\"hljs-comment\"&gt;//减法&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;sub&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a - b;\n   }\n&lt;span class=\"hljs-comment\"&gt;//乘法&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;mult&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a * b;\n}\n&lt;span class=\"hljs-comment\"&gt;//除法&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;divi&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a / b;\n}\n&lt;span class=\"hljs-comment\"&gt;//打印计算结果&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;print_result&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;(*ptrCalc)(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;))&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//调用函数&amp;#xff0c;打印结果&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (ptrCalc &amp;#61;&amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; result &amp;#61; &lt;span class=\"hljs-built_in\"&gt;ptrCalc&lt;/span&gt;(num1, num2);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;运算结果为&amp;#xff1a;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; result &amp;lt;&amp;lt; endl;\n}\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;//定义函数指针&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; (*ptrCalc)(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt;);\n    ptrCalc &amp;#61; &lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; op;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入两个操作数&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; num1 &amp;gt;&amp;gt; num2;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入运算符&amp;#xff1a;&amp;#34;&lt;/span&gt;;\n    cin &amp;gt;&amp;gt; op;\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (op)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#43;&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//调用加法函数&lt;/span&gt;\n        ptrCalc &amp;#61; add;\n        \n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//调用减法函数&lt;/span&gt;\n        ptrCalc &amp;#61; sub;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//调用乘法函数&lt;/span&gt;\n        ptrCalc &amp;#61; mult;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;:\n        &lt;span class=\"hljs-comment\"&gt;//调用除法函数&lt;/span&gt;\n        ptrCalc &amp;#61; divi;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;print_result&lt;/span&gt;(ptrCalc);\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["编译器报错，如下图，如何改", ["\n", "\n", "#", "include", " ", "<iostream>", "\n\n", "#", "include", " ", "\"MyCalc.h\"", "\n", "using", " ", "namespace", " std;\n", "int", " ", "main", "()", " ", "{\n    ", "//定义函数指针", "\n    ", "double", " (*ptrCalc)(", "double", ", ", "double", ");\n    \n    ", "char", " op;\n    cout << ", "\"请输入两个操作数：\"", ";\n    cin >> num1 >> num2;\n    cout << ", "\"请输入运算符：\"", ";\n    cin >> op;\n    ", "switch", " (op)\n    {\n    ", "case", " ", "'+'", ":\n        ", "//调用加法函数", "\n        ptrCalc = add;\n        ", "break", ";\n    ", "case", " ", "'-'", ":\n        ", "//调用减法函数", "\n        ptrCalc = sub;\n        ", "break", ";\n    ", "case", " ", "'*'", ":\n        ", "//调用乘法函数", "\n        ptrCalc = mult;\n        ", "break", ";\n    ", "case", " ", "'/'", ":\n        ", "//调用除法函数", "\n        ptrCalc = divi;\n        ", "break", ";\n    }\n    ", "//调用", "\n    ", "print_result", "(ptrCalc, num1, num2);\n\n    \n", "\n", "#", "pragma", " once", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n", "double", " num1, num2;\n\n", "//自定义计算器，使用函数指针", "\n", "//加法", "\n", "double", " ", "add", "(", "double", ", ", "double", ")", ";\n", "//减法", "\n", "double", " ", "sub", "(", "double", ", ", "double", ")", ";\n", "//乘法", "\n", "double", " ", "mult", "(", "double", ", ", "double", ")", ";\n", "//除法", "\n", "double", " ", "divi", "(", "double", ", ", "double", ")", ";\n", "//打印计算结果", "\n", "void", " ", "print_result", "(", "double", " (*)(", "double", ", ", "double", "), ", "double", ", ", "double", ")", ";\n", "void", " ", "print_result", "(", "double", "(*ptrCalc)(", "double", ",", "double", "), ", "double", ", ", "double", ")", "\n", "{\n    ", "//调用函数，打印结果", "\n    ", "double", " result = ", "ptrCalc", "(num1, num2);\n    cout << ", "\"运算结果为：\"", " << result << endl;\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "输出应该放到td标签内，你放到tr下当然没效果了", "Konwledge_Point": "乘法", "Question": ["JSP页面的简单问题（有关于执行顺序的问题）", ["看着很简单的一个问题，我是个初学者  大家帮忙看看：", "\n就想问问大家，这个“九九乘法表”这几个字怎么就给我跑到下面了？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;b&amp;#61;1和b&amp;lt;&amp;#61;a是内循环的判定条件。外循环是从a&amp;#61;1到a&amp;#61;5循环5次。当a&amp;#61;1时&amp;#xff0c;内循环的判定条件变成b&amp;#61;1和b&amp;lt;&amp;#61;1&amp;#xff0c;也就是经历b&amp;#61;1这一次循环。等到内循环结束&amp;#xff0c;a&amp;#61;a&amp;#43;1&amp;#xff0c;变成2之后再进行内循环的时候&amp;#xff0c;这次内循环条件变成b&amp;#61;1和b&amp;lt;&amp;#61;2了&amp;#xff0c;就可以进行b&amp;#61;1和b&amp;#61;2两次内循环。另外&amp;#xff0c;重复给b赋值的原因是&amp;#xff0c;b的值会随着内循环的进行而改变。如果不重复赋值成1的话&amp;#xff0c;内循环将无法进行b&amp;#61;1的这次循环了&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["有关循环嵌套的理解。为什么b = 1以及b <= a", ["\n\n", "学习到目前为止的第一个难题，我已经能用这段代码写出乘法表了，但还是不能很好的理解。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Fraction {\n    &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,b;\n    Fraction(&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; a,&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; b){&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//构造函数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.a&amp;#61;a;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.b&amp;#61;b;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;() {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//打印分数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; x &amp;#61; a,y &amp;#61; b,r;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a &amp;#61;&amp;#61; b) {\n            System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(y!&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            r &amp;#61; x%y;\n            x&amp;#61;y;\n            y&amp;#61;r;\n        }\n        a/&amp;#61;x;\n        b/&amp;#61;x;\n        System.out.&lt;span class=\"hljs-keyword\"&gt;println&lt;/span&gt;(a &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &amp;#43; b);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;double&lt;/span&gt; toDouble() {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//分数转化为double类型&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; a/b;\n    }\n    Fraction &lt;span class=\"hljs-keyword\"&gt;plus&lt;/span&gt;(Fraction r) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//分数加法&lt;/span&gt;\n        Fraction result &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Fraction(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        result.b&amp;#61;&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.b*r.b;\n        result.a&amp;#61;&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.a*r.b&amp;#43;r.a*&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.b;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result;\n    }\n    Fraction &lt;span class=\"hljs-keyword\"&gt;multiply&lt;/span&gt;(Fraction r) {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//分数乘法&lt;/span&gt;\n        Fraction result&amp;#61;&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Fraction(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        result.a&amp;#61;&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.a*r.a;\n        result.b&amp;#61;&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.b*r.b;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result;\n    }\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; main(String[] args) {\n        Scanner in &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Scanner(System.in);\n        Fraction a &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Fraction(in.nextInt(), in.nextInt());\n        Fraction b &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Fraction(in.nextInt(),in.nextInt());\n        a.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        b.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        a.&lt;span class=\"hljs-keyword\"&gt;plus&lt;/span&gt;(b).&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        a.&lt;span class=\"hljs-keyword\"&gt;multiply&lt;/span&gt;(b).&lt;span class=\"hljs-keyword\"&gt;plus&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Fraction(&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;)).&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        a.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        b.&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;();\n        in.close();\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Java | 分数计算类", ["编程定义名为Fraction的类，其中包含：", "2个数据成员：代表分数的分子和分母的int型变量a、b", "4个方法：", "①  构造方法：Fraction(int x, int y)", "②  分数加法：Fraction plus(Fraction r)", "③  分数乘法：Fraction mul(Fraction r)", "④  输出最简分数：void print()", "⑤  main()方法：从键盘输入两个分数的分子和分母，分别输出两个分数值及它们的和、乘积值。程序运行界面参见如下格式："]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;VecCal&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, x&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, y&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, z&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;/span&gt;):\n        self.x &amp;#61; x\n        self.y &amp;#61; y\n        self.z &amp;#61; z\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;add&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, n&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 加法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x &amp;#43; n.x\n        result.y &amp;#61; self.y &amp;#43; n.y\n        result.z &amp;#61; self.z &amp;#43; n.z\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;subduction&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, n&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 减法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x - n.x\n        result.y &amp;#61; self.y - n.y\n        result.z &amp;#61; self.z - n.z\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;multiplication&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, number&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 乘法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x * number\n        result.y &amp;#61; self.y * number\n        result.z &amp;#61; self.z * number\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;division&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self, number&lt;/span&gt;):  &lt;span class=\"hljs-comment\"&gt;# 除法&lt;/span&gt;\n        result &amp;#61; VecCal()\n        result.x &amp;#61; self.x // number\n        result.y &amp;#61; self.y // number\n        result.z &amp;#61; self.z // number\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; result\n\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;display&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;f&amp;#39;(&lt;span class=\"hljs-subst\"&gt;{self.x}&lt;/span&gt;, &lt;span class=\"hljs-subst\"&gt;{self.y}&lt;/span&gt;, &lt;span class=\"hljs-subst\"&gt;{self.z}&lt;/span&gt;)&amp;#39;&lt;/span&gt;\n\n\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; __name__ &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:\n    data1 &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(i) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第一行输入一个三维向量,逗号(英文)分隔:&amp;#34;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)]\n    data2 &amp;#61; [&lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(i) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;第二行输入另一个三维向量,逗号(英文)分隔:&amp;#34;&lt;/span&gt;).split(&lt;span class=\"hljs-string\"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)]\n    num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入一个数字:&amp;#34;&lt;/span&gt;))\n    the_VecCal &amp;#61; VecCal(data1[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], data1[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], data1[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n    the_n &amp;#61; VecCal(data2[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;], data2[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], data2[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n    add &amp;#61; the_VecCal.add(n&amp;#61;the_n)\n    subduction &amp;#61; the_VecCal.subduction(n&amp;#61;the_n)\n    multiplication &amp;#61; the_VecCal.multiplication(number&amp;#61;num)\n    division &amp;#61; the_VecCal.division(number&amp;#61;num)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} &amp;#43; {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), the_n.display(), add.display()))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} - {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), the_n.display(), subduction.display()))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} * {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), num, multiplication.display()))\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;{0} / {1} &amp;#61; {2}&amp;#34;&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;format&lt;/span&gt;(the_VecCal.display(), num, division.display()))\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/412719024046186.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;有用的话点一下采纳&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["新型计算器 这个怎么做", ["题目：设计一个计算器，实现一个三维向量的加法，减法以及向量和标量的乘法和除法运算", "提示：", "1、定义类名为 VecCal，设计构造函数创建三维向量对象： def ", "init", "(self, x=0,y=0,z=0) 用x,y,z指代三个维度的值", "\n", "2、重写加法（+），减法（-），乘法（* ）和整除除法（//）运算，实现向量的加减乘除", "\n", "3、除法运算作异常处理，当输入标量数字是0时，除法结果为 （0，0，0）", "\n", "加法示例：", "\n", "def ", "add", "(self, n):  # 加法", "    result = VecCal()  # 定义结果变量，也是一个三维向量，通过构造函数创建", "    result.X = self.X + n.X", "    result.Y = self.Y + n.Y", "    result.Z = self.Z + n.Z", "    return result         # 返回 执行加法运算后的向量结果", "输入格式:", "第一行输入一个三维向量，逗号分隔，如：1，2，3", "\n", "第二行输入另一个三维向量，逗号分隔：如：4，5，6", "\n", "第三行输入一个数字， 如：3", "\n", "输出格式:", "(1, 2, 3) + (4, 5, 6) = (5, 7, 9)", "\n", "(1, 2, 3) - (4, 5, 6) = (-3, -3, -3)", "\n", "(1, 2, 3) * 3 = (3, 6, 9)", "\n", "(1, 2, 3) / 3 = (0, 0, 1)", "\n", "输入样例:", "在这里给出一组输入。例如：", "\n", "1,2,3", "4,5,6", "3", "结尾无空行", "输出样例:", "在这里给出相应的输出。例如：", "\n", "(1, 2, 3) + (4, 5, 6) = (5, 7, 9)", "(1, 2, 3) - (4, 5, 6) = (-3, -3, -3)", "(1, 2, 3) * 3 = (3, 6, 9)", "(1, 2, 3) / 3 = (0, 0, 1)", "结尾无空行"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; 16777216L*4096L;&lt;br /&gt;2个数按long进行计算&amp;#xff0c;结果赋值给long long。&lt;br /&gt;而上面式子按long运算的结果是溢出为0的。&lt;br /&gt;先把其中一个给long long&amp;#xff0c;然后在计算就不会溢出了。&lt;br /&gt;long long b &amp;#61; 16777216L;&lt;br /&gt; b *&amp;#61; 4096L;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C++算术溢出（VS2019，C++17）", ["问题遇到的现象和发生背景", "\n", "C++算术溢出（VS2019，C++17）", "\n", "用代码块功能插入代码，请勿粘贴截图", "\n", "#", "include", " ", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "int", " ", "main", "()", " ", "{\n    ", "long", " ", "long", " a = ", "4'294'967'296L", ";  ", "// 正确", "\n    cout << a << endl;\n    ", "long", " ", "long", " b = ", "16777216L", "*", "4096L", ";  ", "// 乘法结果得到0。这是为什么？ ", "\n    cout << b << endl;\n    ", "return", " ", "0", ";\n}\n", "\n", "运行结果及报错内容", "\n", "4294967296", "0", "\n", "我的解答思路和尝试过的方法", "\n", "试过把编译器改为x64，但问题依旧"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Mi&lt;/span&gt; {\n&lt;span class=\"hljs-comment\"&gt;/*类Mi\n  成员变量 double型diShu,zhiShu\n  含参构造方法Mi(double a,double b)\n  输出方法shuChu(),按幂的形式输出结果&amp;#xff0c;如 2^4\n  获取底数方法getDiShu(),返回幂的底数\n  获取指数方法getZhiShu(),返回幂的指数\n  muti(Mi r) 计算同底数幂的乘法&amp;#xff0c;指数相加&amp;#xff1b;底数不同&amp;#xff0c;报错\n  div(Mi r) 计算同底数幂的除法&amp;#xff0c;指数相减&amp;#xff1b;底数不同&amp;#xff0c;报错\n  power(Mi r) 计算同底数幂的乘方\n*/&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//---begin---&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;//【代码】声明double型变量diShu,zhiShu&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; diShu;\n    &lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; zhiShu;\n\n&lt;span class=\"hljs-comment\"&gt;//【代码】含参构造方法&amp;#xff0c;将参数赋值给变量diShu,zhiShu&lt;/span&gt;\n\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Mi&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; diShu, &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; zhiShu&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.diShu &amp;#61; diShu;\n        &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.zhiShu &amp;#61; zhiShu;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getDiShu&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; diShu;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;getZhiShu&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; zhiShu;\n    }\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;shuChu&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;/span&gt;)&lt;/span&gt; {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (diShu &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (zhiShu &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (diShu &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; zhiShu &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &amp;#43; diShu &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;)&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;^&amp;#34;&lt;/span&gt; &amp;#43; zhiShu);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (diShu &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; zhiShu &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(diShu &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;^&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &amp;#43; zhiShu &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;)&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (zhiShu &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; diShu &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&lt;span class=\"hljs-string\"&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &amp;#43; diShu &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;)&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;^&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;(&amp;#34;&lt;/span&gt; &amp;#43; zhiShu &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;)&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n            System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(diShu &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;^&amp;#34;&lt;/span&gt; &amp;#43; zhiShu);\n    }\n\n    &lt;span class=\"hljs-function\"&gt;Mi &lt;span class=\"hljs-title\"&gt;muti&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Mi r&lt;/span&gt;)&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//同底数幂的乘法运算&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;// 同底数幂相乘&amp;#xff0c;底数不变&amp;#xff0c;指数相加&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Mi(&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.getDiShu(), &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.getZhiShu() &amp;#43; r.getZhiShu());\n    }\n\n\n    &lt;span class=\"hljs-function\"&gt;Mi &lt;span class=\"hljs-title\"&gt;div&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;Mi r&lt;/span&gt;)&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//同底数幂的除法运算&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;// 同底数幂相乘&amp;#xff0c;底数不变&amp;#xff0c;指数相减&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Mi(&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.getDiShu(), &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.getZhiShu() - r.getZhiShu());\n    }\n\n    &lt;span class=\"hljs-function\"&gt;Mi &lt;span class=\"hljs-title\"&gt;power&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;&lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; r&lt;/span&gt;)&lt;/span&gt; {&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//同底数幂的乘方运算&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;// 幂的乘方&amp;#xff0c;底数不变&amp;#xff0c;指数相乘&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Mi(&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.getDiShu(), &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;.getZhiShu() * r);\n    }\n}\n\n\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;MainClass&lt;/span&gt; {\n\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;static&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;String[] args&lt;/span&gt;)&lt;/span&gt; {\n        Mi r1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Mi(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n        Mi r2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; Mi(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;double&lt;/span&gt; r &amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;;\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;幂的乘法&amp;#34;&lt;/span&gt;);\n        Mi Result &amp;#61; r1.muti(r2);\n        Result.shuChu();\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n幂的除法&amp;#34;&lt;/span&gt;);\n        Result &amp;#61; r1.div(r2);\n        Result.shuChu();\n        System.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n幂的乘方&amp;#34;&lt;/span&gt;);\n        Result &amp;#61; r1.power(r);\n        Result.shuChu();\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["java幂的类封装怎么补充代码", ["class", " ", "Mi", " {\n", "/*类Mi\n  成员变量 double型diShu,zhiShu\n  含参构造方法Mi(double a,double b)\n  输出方法shuChu(),按幂的形式输出结果，如 2^4\n  获取底数方法getDiShu(),返回幂的底数\n  获取指数方法getZhiShu(),返回幂的指数\n  muti(Mi r) 计算同底数幂的乘法，指数相加；底数不同，报错\n  div(Mi r) 计算同底数幂的除法，指数相减；底数不同，报错\n  power(Mi r) 计算同底数幂的乘方\n*/", "\n", "double", " diShu,zhiShu;\n", "//---begin---", "\n\n", "//【代码】声明double型变量diShu,zhiShu", "\n\n \n", "//【代码】含参构造方法，将参数赋值给变量diShu,zhiShu", "\n \n", "double", " ", "getDiShu", "(", ")", " {\n    ", "return", " diShu;\n}\n", "double", " ", "getZhiShu", "(", ")", " {\n    ", "return", " zhiShu;\n}\n\n", "void", " ", "shuChu", "(", ")", " {\n    ", "if", "(diShu==", "0", ") \n        System.", "out", ".print(", "0", ");    \n    ", "else", " ", "if", "(zhiShu==", "0", ")\n        System.", "out", ".print(", "1", ");    \n    ", "else", " ", "if", "(diShu<", "0", "&&zhiShu>", "0", ")\n        System.", "out", ".print(", "\"(\"", "+diShu+", "\")\"", "+", "\"^\"", "+zhiShu);\n    ", "else", " ", "if", "(diShu>", "0", "&&zhiShu<", "0", ")\n        System.", "out", ".print(diShu+", "\"^\"", "+", "\"(\"", "+zhiShu+", "\")\"", ");    \n    ", "else", " ", "if", "(zhiShu<", "0", "&&diShu<", "0", ")\n        System.", "out", ".print(", "\"(\"", "+diShu+", "\")\"", "+", "\"^\"", "+", "\"(\"", "+zhiShu+", "\")\"", ");\n    ", "else", "\n        System.", "out", ".print(diShu+", "\"^\"", "+zhiShu);\n}\n\n", "Mi ", "muti", "(", "Mi r", ")", " {", "//同底数幂的乘法运算", "\n \n}\n\n\n", "Mi ", "div", "(", "Mi r", ")", " {", "//同底数幂的除法运算", "\n \n}\n\n", "Mi ", "power", "(", "double", " r", ")", " {", "//同底数幂的乘方运算 ", "\n \n \n}\n}\n \n  \n", "public", " ", "class", " ", "MainClass", " {\n\n    ", "public", " ", "static", " ", "void", " ", "main", "(", "String[] args", ")", " { \n        Mi r1=", "new", " Mi(", "4", ",", "4", ");\n        Mi r2=", "new", " Mi(", "4", ",", "2", ");\n        ", "double", " r=", "3", ";\n        System.", "out", ".println(", "\"幂的乘法\"", ");\n        Mi Result=r1.muti(r2);\n        Result.shuChu();\n        System.", "out", ".println(", "\"\\n幂的除法\"", ");\n        Result=r1.div(r2);\n        Result.shuChu();\n        System.", "out", ".println(", "\"\\n幂的乘方\"", ");\n        Result=r1.power(r); \n        Result.shuChu();\n    }\n\n}\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入字符串:&amp;#34;&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;find&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;[&amp;#39;&lt;/span&gt;) !&amp;#61; -&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;.rindex(&lt;span class=\"hljs-string\"&gt;&amp;#39;[&amp;#39;&lt;/span&gt;)\n    res2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;.&lt;span class=\"hljs-built_in\"&gt;index&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;.replace(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;[&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:res2 &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;], &lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;[&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:res2] * &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;[&lt;span class=\"hljs-keyword\"&gt;res&lt;/span&gt; - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]))\n&lt;span class=\"hljs-keyword\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;x&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Python 字串問題", ["求該題目程式碼\n\n題目要求自行輸入\n且答案不只那五種\n會有其他可能\n\n請對字串做乘法運算 \n並輸出其乘開後的內容 \n\n範例\n\n輸入1: \n3", "[a]", "2", "[bc]", " \n\n輸出1: \naaabcbc \n\n\n輸入2: \n3", "[a2", "[c]", "]", " \n\n輸出2: \naccaccacc \n\n\n輸入3: \n2", "[abc]", "3", "[cd]", "ef \n\n輸出3: \nabcabccdcdcdef \n\n\n輸入4: \n2", "[3", "[pe]", "2", "[ko]", "]", " \n\n輸出4: \npepepekokopepepekoko \n\n輸入5: \n2", "[d2", "[e2", "[f]", "]", "]", " \n\n說出5: \ndeffeffdeffeff\n\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在int k&amp;#61; xl.nextInt();外面套一个while或者for循环&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["请问一下各位友友，怎么样才能让我这个程序输入数据执行完后接着又可以在控制台输入数据再次运行输出呢？", ["    Scanner xl=", "new", " Scanner(", "System", ".", "in", ");\n    ", "System", ".", "out", ".print(\"请输入乘法表的层数：\");\n    ", "int", " k= xl.nextInt();\n    ", "for", " (", "int", " i=", "1", ";i<=k;i++){\n        ", "for", " (", "int", " j=", "1", ";j<=i;j++){\n            ", "System", ".", "out", ".print(j+\"*\"+i+\"=\"+i*j+", "'\\t'", ");\n        }\n        ", "System", ".", "out", ".println(\"\");\n    }\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;使用input()函数输入得到的值是str类型的&amp;#xff0c;&lt;br /&gt;字符串相加是进行拼接&amp;#xff0c;入 ‘1’ &amp;#43; ‘1’ &amp;#61; ‘11’&lt;br /&gt;你得进行转换&lt;br /&gt;num1&amp;#61;int(input(&amp;#34;输入加数1&amp;#xff1a;&amp;#34;))&lt;br /&gt;num2&amp;#61;int(input(&amp;#34;输入加数2&amp;#xff1a;&amp;#34;))&lt;br /&gt;这样num1和num2的值就是int类型的&amp;#xff0c;就能进行加运算&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Python 加法运算时的结果是合并而不是相加", ["问题遇到的现象和发生背景", "\n", "我是一个 Python 初学者，自学了几周 Python，我想自己写一个计算器试试，但是我让它算 1+1 时一直算出来 11，这是相关函数：", "def jiafa(a,b):", "     return a + b", "我看了一些教程，上面都是用这种方法计算的，可是我再用的时候却把加数1和加数2合并了，而不是进行数字相加。", "我是真的不知道应该怎么办了，你们能帮我看一下吗？谢谢！我是个 Python 初学者，如果错误很可笑，勿喷。", "环境：Windows 10 专业版", "Python 版本：3.9.10", "\n", "问题相关代码，请勿粘贴截图", "\n", "（未完成，加法存在问题）", "while True:", "    def jiafa(a,b):", "        return a + b", "    print(\"选择你将要使用的模式\")", "    print(\"1：加法计算\")", "    print(\"2：减法计算\")", "    print(\"3：乘法计算\")", "    print(\"4：除法计算\")", "    mode=input(\"选择你的模式：\")", "    if mode==\"1\":", "        num1=input(\"输入加数1：\")", "        num2=input(\"输入加数2：\")", "        print(jiafa(num1,num2))", "    elif mode==\"2\":", "        print(mode)", "    elif mode==\"3\":", "        print(mode)", "    elif mode==\"4\":", "        print(mode)", "    else:", "        print(\"请选择正确的模式！\")", "\n", "运行结果及报错内容", "\n", "输出：", "选择你将要使用的模式", "1：加法计算", "2：减法计算", "3：乘法计算", "4：除法计算", "选择你的模式 ：1", "输入加数1 ：1", "输入加数2 ：1", "11", "\n", "我的解答思路和尝试过的方法", "\n", "我尝试换另一种方法，不使用函数，直接使用变量，但是问题仍然存在。", "我甚至还重写了一遍，但是仍旧是这个结果", "\n", "我想要达到的结果", "\n", "正确测算出加法"]], "Tag": "算法设计"}
{"Answer": "## &lt;font color=red&gt;望采纳&lt;/font&gt;\r\n## 1.题\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\nint main(){\r\n\tint i;\r\n\tint s = 0;\r\n\tfor(i = 1; i &lt;= 50; i++){\r\n\t\ts = s + i*2;\r\n\t}\r\n\tprintf(\"%d\\n\",s);\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202005/20/1589904252_883800.png)\r\n\r\n## 2.题\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\nint main(){\r\n    int s = 0;\r\n    int max = 0;\r\n    for(int i = 1; ; i++){\r\n        s = s + 2*i - 1;\r\n        if(s &gt; max &amp;&amp; s &lt;= 1000){\r\n            max = s;\r\n        }else{\r\n            break;\r\n        }\r\n    }\r\n    printf(\"%d\\n\",max);\r\n    return 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202005/20/1589906500_307590.png)\r\n\r\n\r\n## 3.题\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\nint main(){\r\n\tint s = 0;\r\n\tfor(int i = 1; i &lt;= 5; i++){\r\n\t\tint fac = 1;\r\n\t\tfor(int j = 1; j &lt;= 2 * i; j++){\r\n\t\t\tfac *= j;\r\n\t\t}\r\n\t\ts += fac;\r\n\t}\r\n\tprintf(\"%d\\n\",s);\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202005/20/1589905295_35975.png)\r\n\r\n## 4.题\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\nint main(){\r\n\tint n;\r\n\tint min = 101;\r\n\tfor(int i = 0; i &lt; 10; i++){\r\n\t\tn = rand() % 100 + 1;\t//产生随机数\r\n\t\tprintf(\"%d\\n\",n);\r\n\t\tif(n &lt; min){\r\n\t\t\tmin = n;\r\n\t\t}\r\n\t}\r\n\tprintf(\"最小值：%d\\n\",min);\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202005/20/1589905777_157012.png)\r\n\r\n## 5.题\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\nint main(){\r\n\tfor(int i = 100; i &lt; 1000; i++){\r\n\t\tint a = i / 100;\r\n\t\tint b = i % 100 / 10;\r\n\t\tint c = i % 10;\r\n\t\tif(a*a*a + b*b*b + c*c*c == i){\r\n\t\t\tprintf(\"%d\\n\",i);\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202005/20/1589906027_973897.png)\r\n\r\n## 6.题\r\n\r\n```\r\n#include&lt;stdio.h&gt;\r\nint main(){\r\n\tfor(int i = 1; i &lt;= 9; i++){\r\n\t\tfor(int j = 1; j &lt;= i; j++){\r\n\t\t\tprintf(\"%dx%d=%d\\t\",j,i,j*i);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n![图片说明](https://img-ask.csdn.net/upload/202005/20/1589906247_958132.png)", "Konwledge_Point": "乘法", "Question": ["编程初学者，求各位大佬帮助，谢谢！", ["*****写出关键代码*****", "\n1、累加。s=2+4+6+......+100,利用各种循环语句编程求解s。（2550）", "\n2、条件累加。s=1+3+5+9+......,求s不大于1000最大值。", "\n3、累加累乘。编程求：2！+4！+6!+8！+10! (3669866)", "\n4、找最小数。随机产生十个1-100范围内的整数，输出最小数。", "\n5、编程输出所有的水仙花数。", "\n6、打印输出九九乘法表"]], "Tag": "算法设计"}
{"Answer": "++j是改变变量值的\r\nj+1是不改变变量值的", "Konwledge_Point": "乘法", "Question": ["求助一个java语言的一个for循环语句", ["    for(int i=2,j=1;\n        j<10;\n        i=(i==9)?(((++j)/j)+1):(i+1)){\n        System.out.printf(\"%d*%d=%2d%c\",i,j,i*j,\n                ((i==9)?'\\n':' '));\n    }\n", "\n\n", "输出结果是99乘法表。", "\n这个for循环里的++j为什么不能换成j+1啊？", "\n谢谢各位了。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;for &lt;span class=\"hljs-selector-tag\"&gt;i&lt;/span&gt; in range(&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;,-&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n    for j in &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(j)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(i)&amp;#43;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;#43;&lt;span class=\"hljs-built_in\"&gt;str&lt;/span&gt;(i*j),end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python循环嵌套基础题", ["这种乘法表怎么打印啊", "1", "9= 9 2", "9=18 3", "9=27 4", "9=36 5", "9=45 6", "9=54 7", "9=63 8", "9=72 9", "9=81", "1", "8= 8 2", "8=16 3", "8=24 4", "8=32 5", "8=40 6", "8=48 7", "8=56 8", "8=64", "1", "7= 7 2", "7=14 3", "7=21 4", "7=28 5", "7=35 6", "7=42 7", "7=49", "1", "6= 6 2", "6=12 3", "6=18 4", "6=24 5", "6=30 6", "6=36", "1", "5= 5 2", "5=10 3", "5=15 4", "5=20 5", "5=25", "1", "4= 4 2", "4= 8 3", "4=12 4", "4=16", "1", "3= 3 2", "3= 6 3", "3= 9", "1", "2= 2 2", "2= 4", "1*1= 1"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你先搞清楚每个函数之间的函数参数代表什么&amp;#xff0c;如果不知道&amp;#xff0c;可以debug的时候&amp;#xff0c;分析一下参数是数据类型&amp;#xff0c;然后搞清楚函数返回值是什么&amp;#xff0c;最后是函数之间的调用关系&amp;#xff0c;调用的时候传入了什么参数&amp;#xff0c;返回了什么返回值。&lt;/p&gt;\n\n&lt;p&gt;希望对你有帮助&amp;#xff0c;如有帮助&amp;#xff0c;望采纳&amp;#xff0c;谢谢&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于用python的turtle画曼德博集合 (Mandelbrot set)", ["我不太明白关于第一函数和第二个之间的应该如何联系？第二个函数中的turtle具体指的是什么也不太清楚。希望能够得到解答。", "\n\n", "名为draw.py的文件应仅包含三个函数的定义：", "\n\n", "genPoints（num，radius）：以元组（x，y）的形式返回二维“ num”个点的列表，这些点围绕视频中的圆放置，并以（0,0）为中心，其半径为“radius”。", "\n\n", "drawPoints（turtle，points）：用于将genPoints（）生成的点绘制到海龟的函数。", "\n\n", "drawLines（turtle，points，nTimes）：该函数根据我们要表示的乘法表绘制将点连接到海龟的线，即“ nTimes”。", "\n\n", "可以看此视频了解如何用乘法关系写出曼德博集合：", "\n\n", "https://www.youtube.com/watch?v=qhbuKbxJsk8&t=42s", "\n\n", "以下是例子：", "\n\n", "生成半径为250的200个点和乘法表2：", "\n\n", "\n\n", " ", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "```\r\n（1）\r\ns = 0\r\nfor i = 2 to 100 step 2\r\ns = s + i\r\nnext\r\nmsgbox s\r\n（2）\r\ns = 0\r\nn = 1\r\nwhile s &lt; 100 + n\r\ns = s + n\r\nn = n + 2\r\nwend\r\nmsgbox n\r\n（3）\r\nsum = 0\r\nacc = 1\r\nfor i = 2  to 10\r\nacc = acc * i\r\nif (acc mod 2 = 0) then sum = sum + acc\r\nnext\r\nmsgbox sum\r\n（4）\r\nmin = rnd() * 100\r\nfor i = 1 to 9\r\nx = rnd() * 100\r\nif (min &gt; x) then min = x\r\nnext\r\nmsgbox min\r\n（5）\r\n水仙花数有无数个，必须指定范围，否则无法打印\r\n（6）\r\nfor i = 1 to 9\r\nfor j = 1 to 9\r\nprint i &amp; \"*\" &amp; j &amp; \"=\" &amp; i * j &amp; \" \",\r\nnext\r\nprint \"\"\r\nnext\r\n```", "Konwledge_Point": "乘法", "Question": ["VB问题,请各位大佬帮忙，谢谢！", ["*****写出关键代码*****", "\n1、累加。s=2+4+6+......+100,利用各种循环语句编程求解s。（2550）", "\n2、条件累加。s=1+3+5+9+......,求s不大于1000最大值。", "\n3、累加累乘。编程求：2！+4！+6!+8！+10! (3669866)", "\n4、找最小数。随机产生十个1-100范围内的整数，输出最小数。", "\n5、编程输出所有的水仙花数。", "\n6、打印输出九九乘法表"]], "Tag": "算法设计"}
{"Answer": "自己动手编译调试一边，写程序重在实践", "Konwledge_Point": "乘法", "Question": ["关于Java变量的值以及一个简单的for循环语句", ["for(int i=2,j=1;", "\n        j<10;", "\n        i=(i==9)?(((++j)/j)+1):(i+1)){", "\n        System.out.printf(\"%d*%d=%2d%c\",i,j,i*j,", "\n                ((i==9)?'\\n':' '));", "\n    }", "\n        打印九九乘法表。", "\n        (++j)/j+1中j和++j的值是怎么变化的？每一次循环j的值不是都应该加1吗？", "\n        谢谢各位"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;input接收到的都是字符串需要转成数值  float()&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["我的python程序为什么出问题了", ["我今天学了python，一知半解，自己写了这个程序", "但是运行全错误，不知道为什么，求解答！", "\n", "\n# -*- coding: UTF-", "8", " -*-\nimport time\nimport sys\n", "print", "(", "\"你好，这是foromer编写的Math_bot\"", ")\ntime.", "sleep", "(", "2", ")\n", "print", "(", "\"你将要进行数学运算吗？\"", ")\ntime.", "sleep", "(", "2", ")\n\ny = ", "\"是\"", "\nn = ", "\"否\"", "\na=", "input", "(", "\"是否继续：\"", ")   #用于回答上方问题\n\nif a == y:\n    ", "print", "(", "\"那我们继续吧\"", ")\n    time.", "sleep", "(", "1", ")\nelif a == n:\n    ", "print", "(", "\"那就将结束了\"", ")\n    time.", "sleep", "(", "2", ")\n    sys.", "exit", "()\n\n", "print", "(", "\"Math_bot包含五种运算，分别是：\"", ")\ntime.", "sleep", "(", "1.5", ")\n", "print", "(", "\"加法\"", ")\ntime.", "sleep", "(", "0.5", ")\n", "print", "(", "\"减法\"", ")\ntime.", "sleep", "(", "0.5", ")\n", "print", "(", "\"乘法\"", ")\ntime.", "sleep", "(", "0.5", ")\n", "print", "(", "\"除法\"", ")\ntime.", "sleep", "(", "0.5", ")\n", "print", "(", "\"乘方\"", ")#告知运算\ntime.", "sleep", "(", "2", ")\nchoice = ", "input", "(", "\"请选择运算：\"", ")#输入运算的选择\n\ndef ", "add", "(x, y):\n   return x + y\ndef ", "subtract", "(x, y):\n   return x - y\ndef ", "multiply", "(x, y):\n   return x * y\ndef ", "divide", "(x, y):\n   return x / y\ndef ", "pow", "(x,y):\n    return ", "pow", "(x,y)\n\nif choice == ", "\"加法\"", ":\n    Num1 = ", "input", "(", "\"请输入第一个加数：\"", ")\n    time.", "sleep", "(", "1", ")\n    Num2 = ", "input", "(", "\"请输入第二个加数：\"", ")\n    ", "print", "(Num1,", "\"+\"", ",Num2,", "\"=\"", ", ", "add", "(Num1,Num2))\nelif choice == ", "\"减法\"", ":\n    Num1 = ", "input", "(", "\"请输入被减数：\"", ")\n    time.", "sleep", "(", "1", ")\n    Num2 = ", "input", "(", "\"请输入减数：\"", ")\n    ", "print", "(Num1,", "\"-\"", ",Num2,", "\"=\"", ", ", "subtract", "(Num1,Num2))\nelif choice == ", "\"乘法\"", ":\n    Num1 = ", "input", "(", "\"请输入第一个乘数：\"", ")\n    time.", "sleep", "(", "1", ")\n    Num2 = ", "input", "(", "\"请输入第二个乘数:\"", ")\n    ", "print", "(Num1,", "\"*\"", ",Num2,", "\"=\"", ", ", "multiply", "(Num1,Num2))\nelif choice == ", "\"除法\"", ":\n    Num1 = ", "input", "(", "\"请输入被除数：\"", ")\n    time.", "sleep", "(", "1", ")\n    Num2 = ", "input", "(", "\"请输入除数：\"", ")\n    ", "print", "(Num1,", "\"/\"", ",Num2,", "\"=\"", ", ", "divide", "(Num1,Num2))\nelif choice == ", "\"乘法\"", ":\n    Num1 = ", "input", "(", "\"请输入底数：\"", ")\n    time.", "sleep", "(", "1", ")\n    Num2 = ", "input", "(", "\"请输入指数：\"", ")\n    ", "print", "(Num1,", "\"^\"", ",Num2,", "\"=\"", ", ", "pow", "(Num1,Num2))\ntime.", "sleep", "(", "2", ")\n", "print", "(", "\"感谢用户的支持，我们已成功进行了一次数学运算\"", ")\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;这题的核心就是复数的运算&amp;#xff1a;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;加减&amp;#xff0c;只要实数部分加减&amp;#xff0c;虚数部分加减&lt;/li&gt;&lt;li&gt;乘法&amp;#xff0c;公式 (a&amp;#43;bi)(c&amp;#43;di)&amp;#61;(ac-bd)&amp;#43;(bc&amp;#43;ad)i&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;代码参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;import java.util.Scanner;\n\n&lt;span class=\"hljs-comment\"&gt;/**\n * &amp;#64;author huazie\n * &amp;#64;version 2.0.0\n * &amp;#64;since 2.0.0\n */&lt;/span&gt;\npublic &lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Main {\n\n    public static void main(String&lt;span class=\"hljs-literal\"&gt;[]&lt;/span&gt; args) {\n\n        Scanner reader &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Scanner(System.&lt;span class=\"hljs-params\"&gt;in&lt;/span&gt;)&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//定义读取数据对象reader&lt;/span&gt;\n\n        &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; r1, v1, r2, v2;\n\n        r1 &amp;#61; reader.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//读取第一个复数的实部&lt;/span&gt;\n        v1 &amp;#61; reader.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//读取第一个复数的虚部&lt;/span&gt;\n        r2 &amp;#61; reader.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;;\n        v2 &amp;#61; reader.next&lt;span class=\"hljs-constructor\"&gt;Int()&lt;/span&gt;;\n\n        Complex complex1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Complex(&lt;span class=\"hljs-params\"&gt;r1&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;v1&lt;/span&gt;)&lt;/span&gt;;\n        Complex complex2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Complex(&lt;span class=\"hljs-params\"&gt;r2&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;v2&lt;/span&gt;)&lt;/span&gt;;\n\n        complex1.add(complex2).print&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n        complex1.minus(complex2).print&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n        complex1.multiply(complex2).print&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt;;\n    }\n\n}\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; Complex {\n\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; real;\n\n    &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt;;\n\n    &lt;span class=\"hljs-constructor\"&gt;Complex()&lt;/span&gt; {\n    }\n\n    &lt;span class=\"hljs-constructor\"&gt;Complex(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;r&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;v&lt;/span&gt;)&lt;/span&gt; {\n        real &amp;#61; r;\n        &lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; &amp;#61; v;\n    }\n\n    Complex add(Complex f2) {\n        return &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Complex(&lt;span class=\"hljs-params\"&gt;real&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;real&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt;)&lt;/span&gt;;\n    }\n\n    Complex minus(Complex f2) {\n        return &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Complex(&lt;span class=\"hljs-params\"&gt;real&lt;/span&gt; - &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;real&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt; - &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt;)&lt;/span&gt;;\n    }\n\n    Complex multiply(Complex f2) {\n        return &lt;span class=\"hljs-keyword\"&gt;new&lt;/span&gt; &lt;span class=\"hljs-constructor\"&gt;Complex(&lt;span class=\"hljs-params\"&gt;real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;real&lt;/span&gt; - &lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;real&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-params\"&gt;real&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;f2&lt;/span&gt;.&lt;span class=\"hljs-params\"&gt;virtual&lt;/span&gt;)&lt;/span&gt;;\n    }\n\n    void print&lt;span class=\"hljs-literal\"&gt;()&lt;/span&gt; {\n        &lt;span class=\"hljs-comment\"&gt;//以下输出需要修改成符合题目要求的形式&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(real &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt;);\n        } &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-module-access\"&gt;&lt;span class=\"hljs-module\"&gt;&lt;span class=\"hljs-identifier\"&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(real &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#34;&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-keyword\"&gt;virtual&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt;);\n        }\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;br /&gt;\n\n&lt;p&gt;&lt;b&gt;如有帮助&amp;#xff0c;欢迎点赞&amp;#43;采纳哈&amp;#xff01;&lt;/b&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-blog.csdnimg.cn/ea2147b669614f27acab7d5605a505cb.png\" alt=\"在这里插入图片描述\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;a href=\"https://github.com/Huazie/flea-framework\" id=\"textarea_1677323147245_1677323312246_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;span class=\"md_link_url\"&gt;本人的开源项目&amp;#xff0c;欢迎star支持下&amp;#xff01;&amp;#xff01;!&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["补全代码java复数运算", ["参考上题分数程序，并结合以下程序程序代码，实现复数的加法、减法、乘法运算，并进行测试。 ", "\n", "输入： ", "\n", "1 2 ", "\n", "3 4 ", "\n", "输出： ", "\n", "4+6i ", "\n", "-2-2i ", "\n", "-5+10i ", "\n", "import", " java.util.Scanner; \n\n", "public", " ", "class", " ", "Main", " { \n\n       ", "public", " ", "static", " ", "void", " ", "main", "(", "String", "[] args)", " ", "{ \n\n              Scanner reader=", "new", " ", "Scanner", "(System.in);", "//定义读取数据对象reader ", "\n\n              ", "int", " r1,v1,r2,v2; \n\n              r1=reader.", "nextInt", "(); ", "//读取第一个复数的实部 ", "\n\n              v1=reader.", "nextInt", "(); ", "//读取第一个复数的虚部 ", "\n\n  \n\n       } \n\n} \n\n", "class", " ", "Complex", "{ \n\n       ", "int", " real; \n\n       ", "int", " ", "virtual", "; \n\n       ", "Complex", "(){} \n\n       ", "Complex", "(", "int", " r,", "int", " v){ \n\n              rear=r; \n\n              ", "virtual", "=v; \n\n       } \n\n       ", "Complex ", "add", "(Complex f2)", "{ \n\n  \n\n       } \n\n       ", "void", " ", "print", "()", "{ \n\n              ", "//以下输出需要修改成符合题目要求的形式 ", "\n\n              System.out.", "println", "(real+", "\"+\"", "+", "virtual", "+", "\"i\"", "); \n\n       } \n\n} \n\n"]], "Tag": "算法设计"}
{"Answer": "没看懂题意啊，貌似要用到反射啊", "Konwledge_Point": "乘法", "Question": ["大神看过来，基础算法判断", ["基础算法类型的校验", "\n_mName  方法名  比如  加法 减法  乘法 除法", "\n_paraValueType   各参数类型名 长度 速度 经纬度", "\nreturn  校验的错误结果", "\n        逻辑：判断方法：", "\n      1）参数无单位:正确   这个完成了 ", "\n      2) 必须类型相同的方法;加法,减法  列出", "\n      2）其它只有一个有单位时:必须是第一个参数", "\n      3) 固定关系:列出", "\n        public string ParaCheck(string _mName,List _paraValueType)", "\n        {", "\n                                                        if(_parpValueType!=0){", "\n                                                        ?????", "\n                                                        ?????", "\n                                                        }", "\n                                                    return null;", "\n\n", "    }\n            第一步 我做了  ，求几步的代码。。  不知道用什么写，希望有大神讲解一下。\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你引的例子用的是输出重定向方法&amp;#xff0c;必须要自定义一个write的类方法&amp;#xff0c;把print的内容打印到sys.stdout里。&lt;br /&gt;除非不要用print&amp;#xff0c;直接更改text的内容&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; tkinter &lt;span class=\"hljs-keyword\"&gt;as&lt;/span&gt; tk\n\ndef print_stdout():\n    &lt;span class=\"hljs-type\"&gt;text&lt;/span&gt;.configure(state&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; range(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n            &lt;span class=\"hljs-type\"&gt;text&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;insert&lt;/span&gt;(tk.&lt;span class=\"hljs-keyword\"&gt;END&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39;%s*%s&amp;#61;%s &amp;#39;&lt;/span&gt; % (i, j, i * j))\n        &lt;span class=\"hljs-type\"&gt;text&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;insert&lt;/span&gt;(tk.&lt;span class=\"hljs-keyword\"&gt;END&lt;/span&gt;, &amp;#34;\\n&amp;#34;)\n    &lt;span class=\"hljs-type\"&gt;text&lt;/span&gt;.configure(state&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;)\n\n&lt;span class=\"hljs-keyword\"&gt;window&lt;/span&gt; &amp;#61; tk.Tk()\ntoolBar &amp;#61; tk.Frame(&lt;span class=\"hljs-keyword\"&gt;window&lt;/span&gt;)\ntoolBar.pack(side&amp;#61;tk.TOP,fill&amp;#61;tk.X)\nbutton1 &amp;#61; tk.Button(&lt;span class=\"hljs-keyword\"&gt;window&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;text&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;打印乘法表&amp;#39;&lt;/span&gt;, command&amp;#61;print_stdout)\nbutton1.pack(in_&amp;#61;toolBar, side&amp;#61;tk.BOTTOM)\n&lt;span class=\"hljs-type\"&gt;text&lt;/span&gt; &amp;#61; tk.Text(&lt;span class=\"hljs-keyword\"&gt;window&lt;/span&gt;, wrap&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;word&amp;#39;&lt;/span&gt;)\n&lt;span class=\"hljs-type\"&gt;text&lt;/span&gt;.pack(side&amp;#61;tk.TOP, fill&amp;#61;tk.&lt;span class=\"hljs-keyword\"&gt;BOTH&lt;/span&gt;, expand&amp;#61;&lt;span class=\"hljs-keyword\"&gt;True&lt;/span&gt;)\n&lt;span class=\"hljs-keyword\"&gt;window&lt;/span&gt;.mainloop()\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["如何让函数的print输出在gui界面显示，可以看下代码怎么改么", ["函数的print输出要在gui界面显示，请问要怎么搞丫", "\n", "下附我参考进行修改的代码，可以改成不是类的么，虽说我其实看不懂", "\n", "import", " tkinter ", "as", " tk\n", "import", " sys\n\n\n", "class", " ", "ExampleApp", "(tk.Tk):\n    ", "def", " ", "__init__", "(", "self", "):\n        ", "super", "(ExampleApp, self).__init__()\n\n        toolBar = tk.Frame(self)\n        toolBar.pack(side=tk.TOP, fill=tk.X)\n\n        button1 = tk.Button(self, text=", "'打印乘法表'", ", command=self.print_stdout)\n\n        button1.pack(in_=toolBar, side=tk.BOTTOM)\n        self.text = tk.Text(self, wrap=", "'word'", ")\n        self.text.pack(side=tk.TOP, fill=tk.BOTH, expand=", "True", ")\n        sys.stdout = TextRedirector(self.text)\n\n    ", "def", " ", "print_stdout", "(", "self", "):\n        ", "for", " i ", "in", " ", "range", "(", "1", ", ", "10", "):\n            ", "for", " j ", "in", " ", "range", "(", "1", ", i + ", "1", "):\n                ", "print", "(", "'%s*%s=%s'", " % (i, j, i * j), end=", "' '", ")\n            ", "print", "()\n\n\n\n", "class", " ", "TextRedirector", "(", "object", "):\n    ", "def", " ", "__init__", "(", "self, widget, tag=", "'stdout'", "):\n        self.widget = widget\n        self.tag = tag\n\n    ", "def", " ", "write", "(", "self, ", "str", "):\n        self.widget.configure(state=", "'normal'", ")\n        self.widget.insert(tk.END, ", "str", ", (self.tag,))  ", "# (self.tag,) 是设置配置", "\n        self.widget.configure(state=", "'disabled'", ")\n\n\n", "if", " __name__ == ", "'__main__'", ":\n    app = ExampleApp()\n    app.mainloop()\n", "\n", "我目前的代码，改了很久，但是还是在gui打印不出来乘法表", "\n", "\nimport sys\nimport tkinter as tk\n\n", "from", " tkinter import Tk\n\n", "from", " tkinter import messagebox\n\n", "from", " tkinter.messagebox import *\n\nimport random\n\nimport datetime\n\nimport time\n\nclass TextRedirector(object):\n    def __init__(tk, widget, ", "tag", "=", "'stdout'", "):\n        tk.widget = widget\n        tk.tag = tag\n\n    def write(tk, str):\n        tk.widget.configure(", "state", "=", "'normal'", ")\n        tk.widget.insert(tk.END, str, (self.tag,))  # (self.tag,) 是设置配置\n        tk.widget.configure(", "state", "=", "'disabled'", ")\n\nwindow = tk.Tk()\n\nscore = 0\n\ncount = 1\n\na = random.randint(1, 9)\n\nb = random.randint(1, 9)\n\n\nmul01 = tk.StringVar()\n\nmul01.", "set", "(str(a))\n\nmul02 = tk.StringVar()\n\nmul02.", "set", "(str(b))\n\ncount_title = tk.StringVar()\n\ncount_title.", "set", "(", "'第1道题'", ")\n\nscore_lab = tk.StringVar()\n\nscore_lab.", "set", "(", "'0'", ")\n\nanswer_lab = tk.StringVar()\n\ngameove = tk.StringVar()\n\n", "t", "=tk.StringVar()\n\n", "t1", "=tk.StringVar()\n\ntime_solve = tk.DoubleVar()\n\ngameove.", "set", "(", "\"共测试10道乘法，每题10分，总分100分\"", ")\n\nwindow.title(", "\"乘法口诀测试\"", ")\n\nwindow.geometry(", "'600x500'", ")\n\nwindow[", "\"background\"", "] = ", "\"LightCyan\"", "\n\ntitle01 = tk.Label(window,\n\n                   ", "textvariable", "=gameove,\n\n                   font=(", "'华文行楷'", ", 15),\n\n                   ", "bg", "=", "'SpringGreen'", ")\n\ntitle01.place(", "x", "=120, ", "y", "=30)\n\nlabel01 = tk.Label(window,\n\n                   ", "textvariable", "=count_title,\n\n                   font=(", "'华文行楷'", ", 20),\n\n                   ", "bg", "=", "'hotpink'", ")  # 第N道题\n\nlabel01.place(", "x", "=100, ", "y", "=100)\n\ntitle02 = tk.Label(window, ", "text", "=", "\"请输入答案：\"", ", font=(", "'华文行楷'", ", 20),\n\n                   ", "bg", "=", "'hotpink'", ")\n\ntitle02.place(", "x", "=80, ", "y", "=250)\n\ntitle03 = tk.Label(window,\n\n                   ", "textvariable", "=score_lab,\n\n                   font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 分数lab\n\ntitle03.place(", "x", "=340, ", "y", "=380)\n\ntitle04 = tk.Label(window, ", "text", "=", "\"得分：\"", ", font=(", "'华文行楷'", ", 28), ", "bg", "=", "'hotpink'", ")  # 得分lab\n\ntitle04.place(", "x", "=190, ", "y", "=380)\n\ntitle05 = tk.Label(window, ", "textvariable", "=answer_lab, font=(", "'华文行楷'", ", 28), ", "bg", "=", "'hotpink'", ")  # 得分lab\n\ntitle05.place(", "x", "=220, ", "y", "=450)\n\nentry01 = tk.Entry(window, ", "textvariable", "=0, ", "width", "=10, font=(", "'华文行楷'", ", 20), ", "show", "=None)  # 文本输入框\n\nentry01.place(", "x", "=300, ", "y", "=250)\n\nlabel02 = tk.Label(window, ", "textvariable", "=mul01, font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 被乘数lab\n\nlabel02.place(", "x", "=180, ", "y", "=175)\n\nlabel03 = tk.Label(window, ", "textvariable", "=mul02, font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 乘数lab\n\nlabel03.place(", "x", "=340, ", "y", "=175)\n\nimgLabel = tk.Label(window, ", "text", "=", "'X'", ", font=(", "'黑体'", ", 28),\n\n                    ", "bg", "=", "'hotpink'", ")  # 乘号标签\n\nimgLabel.place(", "x", "=263, ", "y", "=170)\n\ndef multitable():\n    ", "for", " i ", "in", " range(1, 10):\n        ", "for", " j ", "in", " range(1, i + 1):\n            ", "print", "(", "'%s*%s=%s'", " % (i, j, i * j), ", "end", "=", "' '", ")\n        ", "print", "()\n\n", "# 当点击右上角退出时，执行的程序", "\ndef on_closing():\n    ", "if", " messagebox.askokcancel(", "\"Quit\"", ", ", "\"Do you want to quit?\"", "):\n        sys.exit()\n\ndef surecallback():\n    global a, b, count,startTime,endTime,time_solve\n\n    ", "if", " count <= 10:\n\n        product = a * b\n\n        result = int(entry01.", "get", "())\n\n\n        ", "if", " result == product:\n\n            global score\n\n            score = score + 10\n\n            score_lab.", "set", "(str(score))\n\n            answer_lab.", "set", "(", "\"答对了\"", ")\n\n        ", "else", ":\n\n            answer_lab.", "set", "(", "\"答错了\"", ")\n\n        endTime = time.time()\n\n        time_solve = endTime - startTime\n\n        entry01.delete(0, tk.END)\n\n        a = random.randint(1, 9)\n\n        b = random.randint(1, 9)\n\n        mul01.", "set", "(str(a))\n\n        mul02.", "set", "(str(b))\n\n        count = count + 1\n\n        c = ", "'第'", " + str(count) + ", "'道题'", "\n\n        count_title.", "set", "(c)\n\n    ", "else", ":\n        title01.destroy()\n        title02.destroy()\n        entry01.destroy()\n        title03.destroy()\n        title04.destroy()\n        title05.destroy()\n        label01.destroy()\n        label02.destroy()\n        label03.destroy()\n        imgLabel.destroy()\n        button01.destroy()\n        gameove.", "set", "(", "\"测试结束\"", ")\n        title06 = tk.Label(window,\n                           ", "textvariable", "=gameove, font=(", "'华文行楷'", ", 40),\n                           ", "bg", "=", "'SpringGreen'", ")\n\n        title06.place(", "x", "=220, ", "y", "=30)\n        t.", "set", "(", "'进行本次乘法测试花费的时间为:%s'", " % (time_solve))\n        t1.", "set", "(", "'进行每次测试花费的平均时间为:%s'", " %(time_solve/10))\n        title07 = tk.Label(window,\n                           ", "textvariable", "=t, font=(", "'华文行楷'", ", 15),\n                           ", "bg", "=", "'SpringGreen'", ")\n        title07.place(", "x", "=30, ", "y", "=140)\n        title08 = tk.Label(window,\n                           ", "textvariable", "=t1, font=(", "'华文行楷'", ", 15),\n                           ", "bg", "=", "'SpringGreen'", ")\n        title08.place(", "x", "=30, ", "y", "=200)\n\n        toolBar = tk.Frame()\n        toolBar.pack(", "side", "=tk.TOP, ", "fill", "=tk.X)\n        button1 = tk.Button( ", "text", "=", "'打印乘法表'", ", ", "command", "=multitable)\n        button1.pack(", "in_", "=toolBar, ", "side", "=tk.BOTTOM)\n        text = tk.Text( ", "wrap", "=", "'word'", ")\n        text.pack(", "side", "=tk.TOP, ", "fill", "=tk.BOTH, ", "expand", "=", "True", ")\n        stdout = TextRedirector(text)\n\n        button03 = tk.Button(", "text", "=", "'退出测试'", ",\n\n                             font=(", "'华文行楷'", ", 20),\n\n                             ", "width", "=14,\n\n                             ", "height", "=1,\n\n                             ", "command", "=on_closing)\n\n        button03.place(", "x", "=230, ", "y", "=370)\n\n        window.mainloop()\n\n\nbutton01 = tk.Button(", "text", "=", "'确认'", ",\n\n                     font=(", "'华文行楷'", ", 20),\n\n                     ", "width", "=8,\n\n                     ", "height", "=1,\n\n                     ", "command", "=surecallback)\n\nbutton01.place(", "x", "=230, ", "y", "=310)\nstartTime = time.time()\n", "print", "(startTime)\nwindow.mainloop()\n\n\n\n\n"]], "Tag": "算法设计"}
{"Answer": "可以看到这个程序超位数运行正常，第一个运行22位，第二个运行46位，可以发现该代码有值得优化的地方，就是超过数字2位数后可以不用循环运算，直接跳出循环，用截取去合成最终结果，可以提高运算速度。", "Konwledge_Point": "乘法", "Question": ["用c#编写一个程序，以最原始的方法进行两个字符串的四则运算", ["字符串里面是数值，且不受字数限制。", "\n如两个字符串相加“121343435”+“3453245”，设计的程序是：个位与个位相加，满10进1，十位于十位相加...", "\n如果设计的乘法，也是个位先和个位相乘...完了错开一位相加", "\n采取最原始的方法，就像小学学习四则运算一样，一步一步进行", "\n\n", "不能把字符串先转换为int等类型在进行运行，因为int类型储存数值长度短，这个程序设计的意义就是可以进行不受字数限制的四则运算。", "\n\n", "谢谢各位大神啦，设计+-*/ ，希望可以多一些注释，尽可能详细。因为刚接触C#，这是课堂作业。超级感谢！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;输入1或2进行选择&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-java\"&gt;&lt;span class=\"hljs-built_in\"&gt;public&lt;/span&gt; static &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; main(String[] args) {\n        Scanner xl&amp;#61;&lt;span class=\"hljs-built_in\"&gt;new&lt;/span&gt; Scanner(&lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;){\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;请输入选择&amp;#xff1a;1.输出乘法表   2.退出程序&amp;#34;);\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; choice &amp;#61; xl.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(choice &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;){\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;拜拜&amp;#xff01;&amp;#34;);\n                break;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(&amp;#34;请输入乘法表的层数&amp;#xff1a;&amp;#34;);\n            &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k&amp;#61; xl.nextInt();\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;k;i&amp;#43;&amp;#43;) {\n                &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;) {\n                    &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.print(j &amp;#43; &amp;#34;*&amp;#34; &amp;#43; i &amp;#43; &amp;#34;&amp;#61;&amp;#34; &amp;#43; i * j &amp;#43; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;);\n                }\n                &lt;span class=\"hljs-keyword\"&gt;System&lt;/span&gt;.&lt;span class=\"hljs-keyword\"&gt;out&lt;/span&gt;.println(&amp;#34;&amp;#34;);\n            }\n        }\n    }\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["Java怎么通过判读控制台的输入控制程序的运行", ["Scanner xl=", "new", " Scanner(", "System", ".", "in", ");\n", "System", ".", "out", ".print(\"请输入乘法表的层数：\");\n", "int", " k= xl.nextInt();\n", "for", " (", "int", " i=", "1", ";i<=k;i++){\n    ", "for", " (", "int", " j=", "1", ";j<=i;j++){\n        ", "System", ".", "out", ".print(j+\"*\"+i+\"=\"+i*j+", "'\\t'", ");\n    }\n    ", "System", ".", "out", ".println(\"\");\n}\n", "\n", "就这个代码为例，怎么样能让我的程序执行完一次后，在控制台输入指定的命令让程序运行下一次。大家把知道的方法都和我说说呗"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;需要用动态规划来解题&lt;br /&gt;&lt;a href=\"https://blog.csdn.net/fuyuande/article/details/97785228\" id=\"textarea_1674980595983_1674980708160_0\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;&lt;div class=\"md_link_card\"&gt;\n      \n        &lt;span class=\"md_link_title\"&gt;&lt;/span&gt;\n        \n      &lt;span class=\"md_link_desc\" style=\"margin: 0px 0 2px\"&gt;&lt;/span&gt;\n      &lt;span class=\"md_flex_card\"&gt;\n      &lt;span class=\"md_link_img icon iconfont icon-lianjie\"&gt;&lt;/span&gt;\n        &lt;span class=\"flex-1 md_link_url\"&gt;\n         https://blog.csdn.net/fuyuande/article/details/97785228\n        &lt;/span&gt;\n      &lt;/span&gt;&lt;/div&gt;&lt;/a&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["有没有人讲一下解题思路", ["题目描述", "给定一个正整数 M （1≤M≤5）和一个只包含数字的字符串（5<字行串长度≤20）。使用 M 个乘号插入到字符串中，且两个乖号不能相邻，插入后生成一个乘法算式，找中一种使乘法算式数值最大的插入方式，并将结果输出。（乘号不能放在字符串的首尾位置）", "\n", "如M=2，字符申为 123456，插入2个乘号。插入方式有：", "\n", "1×2×3456=6912，1x23×456=10488，1×234×56=13104，1×2345x6=14070， 12x3x456=16416，12×34×56=22848，12x345x6=24840，123x4x56=27552， 123x45×6=33210，1234x5×6=37020， 其中乘法算式数值最大是第十种，为 37020。", "\n", "输入描述：", "第一行输入一个正整数 M (1≤M≤5），表示乘号个数", "\n", "第二行输入一个只包含数字的字符串(5＜字符串长度≤20），表示要插入M 个乘号的字符串", "\n", "输出描述：", "输出一个整数，表示最大乘积数值", "\n", "输入数据 1", "2", "123456", "输出数据 1", "37020"]], "Tag": "算法设计"}
{"Answer": "按照你的要求，再改了一下：\r\n\r\n\r\n    public static void main(String args[]) {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        String choose = null;\r\n\r\n        while (!\"2\".equals(choose)) {\r\n            System.out.println(\"1.计算乘法 \");\r\n            System.out.println(\"2.退出 \");\r\n            System.out.println(\"请选择：\");\r\n\r\n            choose = scanner.next();\r\n\r\n            if (\"1\".equals(choose)) {\r\n                String num1 = scanner.next();\r\n                String num2 = scanner.next();\r\n\r\n                int n1 = Integer.parseInt(num1);\r\n                int n2 = Integer.parseInt(num2);\r\n\r\n                System.out.println(n1 * n2);\r\n            }\r\n        }\r\n    }", "Konwledge_Point": "乘法", "Question": ["上学时，java基础课上的一个例子，我忘了，大家记得不？", ["上学时，java基础课上的一个例子，我忘了，大家记得不？", "\n\n", "比如有一个类 A.class ", "\n在cmd 下输入 java A", "\n\n", "然后在屏幕命行上显示几行文字", "\n\n", "1.计算乘法", "\n2.退出", "\n.........", "\n\n", "然后你在命令行下接着能输出 1 2 3 回车", "\n命令行就能返回结果 6", "\n\n", "输入 2回车 就退出程序", "\n\n", "就是这样一个例子，还是上学时的，发现自己竟然想不起来怎么实现的。天天学习各种框架， 可是连上学时学的基础都想不起来了， 真是惭愧。", "\n[b]问题补充：[/b]", "\n草草的改一下 异常兄的", "\n\n", "[code=\"java\"]", "\nimport java.io.BufferedReader;", "\nimport java.io.InputStreamReader;", "\n\n", "public class Test7 {", "\n\n", "public static void main(String[] arg){   \n    System.out.println(\"1.one\");   \n    System.out.println(\"2.ext\");   \n     while(true){   \n        String a;\n        try {\n\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n            if((a=br.readLine())!=null){\n                if(a==\"1\"){   \n                       System.out.println(\"16624478\");    \n                 }else if(a==\"2\"){   \n                        break;   \n                 }\n            }\n\n\n        } catch (Exception e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }   \n\n     }   \n    } \n", "\n\n", "}", "\n[/code]", "\n\n", "没有截获到命令", "\n\n", "草草的改一下 taopian兄的", "\n[code=\"java\"]", "\nimport java.util.Scanner;", "\n\n", "public class Test6{", "\n\n", "public static void main(String args[]) {", "\n    System.out.println(\"1.计算乘法 \");", "\n    System.out.println(\"2.退出 \");", "\n    System.out.println(\"请选择：\");   ", "\n\n", "Scanner scanner = new Scanner(System.in);   \n\nString choose = scanner.next();   \n\n\nif (choose.equals(\"1\")) {   \n    // String num1 = scanner.next();   \n    // String num2 = scanner.next();   \n\n    // int n1 = Integer.parseInt(num1);   \n    // int n2 = Integer.parseInt(num2);   \n\n    System.out.println(\"n1 * n2\");   \n}\n", "\n\n", "}  ", "\n\n", "}", "\n[/code]", "\n\n", "不过只能计算一遍，我记得还可以多次计算直到按2退出。", "\n\n", "[b]问题补充：[/b]", "\n认真的结合两位的指点改一下，应该是这样了，谢谢。", "\n\n", "[code=\"java\"]", "\nimport java.util.Scanner;", "\n\n", "public class Test6{", "\n  public static void main(String args[]) {", "\n    System.out.println(\"1.计算乘法 \");", "\n    System.out.println(\"2.退出 \");", "\n    System.out.println(\"请选择：\");   ", "\n\n", "Scanner scanner = new Scanner(System.in);   \nString choose = \"\";   \nString[] a;\nint n1,n2;\n\nwhile(true) {\n  choose = scanner.next();\n\n    if(choose.equals(\"2\"))break;        \n    if((a = choose.split(\"\\\\*\")).length==2){\n      try{\n        n1 = Integer.parseInt(a[0]);\n        n2 = Integer.parseInt(a[1]);\n        System.out.println(choose + \" = \"+ (n1*n2));}catch(Exception e){}           \n    }\n}   \n", "\n\n", "} ", "\n}", "\n\n", "[/code]"]], "Tag": "算法设计"}
{"Answer": "```\r\n #include &lt;iostream&gt; \r\nusing namespace std;\r\nint add(int x,int y){\r\n\treturn x+y;\r\n}\r\nint sub(int x,int y){\r\n\treturn x-y;\r\n}\r\nint mul(int x,int y){\r\n\treturn x*y;\r\n}\r\nint div(int x,int y){\r\n\treturn x/y;\r\n}\r\nint main(){\r\n\tint (*pf[4])(int, int) = { add, sub, mul, div };\r\n\twhile(true){\r\n\t\tcout&lt;&lt;\"0. add\"&lt;&lt;endl;\r\n\t\tcout&lt;&lt;\"1. sub\"&lt;&lt;endl;\r\n\t\tcout&lt;&lt;\"2. mul\"&lt;&lt;endl;\r\n\t\tcout&lt;&lt;\"3. div\"&lt;&lt;endl;\r\n\t\tcout&lt;&lt;\"4. exit\"&lt;&lt;endl;\r\n\t\t\r\n\t\tcout&lt;&lt;\"Select Operation :\";\r\n\t\tint opeNum;\r\n\t\tcin&gt;&gt;opeNum;\r\n\t\tif(opeNum==4){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tcout&lt;&lt;\"Input 2 operand :\";\r\n\t\tint a,b;\r\n\t\tcin&gt;&gt;a&gt;&gt;b;\r\n\t\tcout&lt;&lt;\"Result = \"&lt;&lt;pf[opeNum](a,b)&lt;&lt;endl;\r\n\t}\r\n\t\r\n\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["数据结构 函数指针        ", ["实现计算器的加法、减法、乘法和除法。使用一个命令行参数为您的选择，和2个数字。你使用下面的数组来赋值操作符函数。", "\n\n", "int add(int x, int y);", "\nint sub(int x, int y);", "\nint mul(int x, int y);", "\nint div(int x, int y);", "\nint (*pf[4])(int, int) = { add, sub, mul, div };", "\n\n", "\n\n", "数据结构：函数指针数组", "\n输入：选择运营商的数量（1，2，3，或4），", "\n操作数的2个整数", "\n输出：操作结果"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;第八行中的1024后面的*可以理解为把1024当作数字进行运算&amp;#xff0c;结果就是1024 * 100。&lt;/p&gt;\n&lt;p&gt;当指针地址改变后&amp;#xff0c;正确的free()写法是free(改变前的指针地址)。例如&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;c&lt;br /&gt;Copy code&lt;br /&gt;int *p &amp;#61; malloc(100 * sizeof(int));&lt;br /&gt;int *p2 &amp;#61; p;&lt;br /&gt;p &amp;#61; p &amp;#43; 50;&lt;br /&gt;free(p2);&lt;br /&gt;可以这样写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; *p &amp;#61; &lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt; * &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt;));\n因为&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;()返回的是&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;类型的指针&amp;#xff0c;所以可以直接用&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;指针接收返回值&amp;#xff1a;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; *p &amp;#61; &lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;);\n写成纯数字形式&lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;不需要写明白这&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; MB要存什么类型&amp;#xff0c;因为&lt;span class=\"hljs-built_in\"&gt;malloc&lt;/span&gt;()函数只分配内存&amp;#xff0c;不管存储的是什么类型的数据。\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;如果需要强制类型转换&amp;#xff0c;可以这样写&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-attribute\"&gt;void&lt;/span&gt; *p &amp;#61; (void *)malloc(&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;1024&lt;/span&gt;);\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["指针地址改变后如何正确 free掉这个指针？", ["图上这样写会崩溃，", "当指针地址改变后，free（  ）里要怎么写呀？", "\n", "\n", "上图第八行，", "两个1024之间的", "号，代表乘法，100后面的", "代表（分节符）", "分节符这个称呼正确吗，该怎么理解100后面的*呢？", "\n", "3.如果一个", " int类型指针=malloc（ 100", "sizeof（int类型说明符） ）", "   这时候还能写1024", "\n", "图上的void ", "p", "void指针名=malloc（ 数字", "sizeof（void类型说明符） ）", "为什么不按照这种模式来写？", "\n", "为什么写成纯数字形式 1024", "1024  不用写明白这1mb要存什么类型？", "  原因是不能传递类型吗？？不能传递类型的话，我们要强制类型转换吧，如p=（void", "）malloc（100", "1024", "1024）；"]], "Tag": "算法设计"}
{"Answer": "```\r\n#include &lt;iostream&gt;\r\n#include &lt;iomanip&gt;\r\nusing namespace std;\r\nint main()\r\n{\r\n    cout &lt;&lt; \"  \" &lt;&lt; \"|\" ;\r\n    for (int b = 1; b &lt;= 9; b++)\r\n    {\r\n        cout &lt;&lt; setw(3) &lt;&lt; b;\r\n    }\r\n    cout &lt;&lt; endl;\r\n    for (int a = 1; a &lt;= 30; a++)\r\n    {\r\n        cout &lt;&lt; \"-\";\r\n    }\r\n    cout &lt;&lt; endl;\r\n    //输出方形乘法口诀表主要部分\r\n    for (int i = 1; i &lt;= 9; i++)\r\n    {\r\n        cout &lt;&lt; i &lt;&lt; \" \" &lt;&lt; \"|\";//输出行的序号\r\n        for (int j = 1; j &lt;= 9; j++)\r\n        {\r\n            cout &lt;&lt; setw(3) &lt;&lt; i * j;\r\n        }\r\n        cout &lt;&lt; endl;\r\n    }\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["左边是我的输出，右边是标准答案，请问如何才能做到像右边这样呢？", ["#include ", "\nusing namespace std;", "\nint main()", "\n{", "\n\n", "cout << \"  \" << \"|\" << \"  \";\nfor(int b = 1;b <= 9;b++)\n{\n    cout << b << \"  \";  \n}\ncout << endl; \nfor(int a = 1;a <=30;a++)\n{\n    cout << \"-\";\n}\ncout << endl;\n//输出方形乘法口诀表主要部分\nfor(int i = 1; i <= 9;i++)\n{\n    cout << i << \" \" << \"|\"<<\"  \";//输出行的序号\n    for(int j = 1;j <= 9;j++)\n    {\n        cout << i * j << \"  \";\n    }\n    cout << endl;\n}\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/706088885746168.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;把a &amp;#61; int(input(&amp;#39;请输入你想要的运算符&amp;#39;)) 去掉int()&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["我刚学py，闲着没事干写了点代码，但是运行时没搞好", ["\n", "import", " math\n\n", "print", "(", "'若想算加法，请输入1'", ")\n", "print", "(", "'若想算减法，请输入2'", ")\n", "print", "(", "'若想算乘法，请输入3'", ")\n", "print", "(", "'若想算除法，请输入4'", ")\n", "print", "(", "'若想算阶乘，请输入5'", ")\n", "print", "(", "'若想算乘方，请输入6'", ")\n", "print", "(", "'若想算平方根，请输入7'", ")\n\na = ", "int", "(", "input", "(", "'请输入你想要的运算符'", "))\n\n", "#计算加法", "\n\n", "if", " a == ", "'1'", ":\n    q = ", "input", "(", "'请输入第一个加数'", ")\n    q2 = ", "input", "(", "'请输入第二个加数'", ")\n    q = ", "float", "(q)\n    q2 = ", "float", "(q2)\n    ", "print", "(q + q2)\n\n    ", "#计算减法", "\n\n", "elif", " a == ", "'2'", ":\n    w = ", "input", "(", "'请输入被减数'", ")\n    w2 = ", "input", "(", "'请输入减数'", ")\n    w = ", "float", "(w)\n    w2 = ", "float", "(w2)\n    ", "print", "(w - w2)\n\n", "#计算乘法", "\n", "elif", " a == ", "'3'", ":\n    e = ", "input", "(", "'请输入第一个因数'", ")\n    e2 = ", "input", "(", "'请输入第二个因数'", ")\n    e = ", "float", "(e)\n    e2 = ", "float", "(e2)\n    ", "print", "(e * e2)\n\n", "#计算除法", "\n\n", "elif", " a == ", "'4'", ":\n    r = ", "input", "(", "'请输入被除数'", ")\n    r2 = ", "input", "(", "'请输入除数'", ")\n    r = ", "float", "(r)\n    r2 = ", "float", "(r2)\n    ", "print", "(r / r2)\n\n", "#计算阶乘", "\n", "elif", " a == ", "'5'", ":\n    t = ", "input", "(", "'请输入想要算的阶乘数'", ")\n    ", "float", "(t)\n    ", "from", " math ", "import", " factorial\n    ", "print", "(factorial(t))\n\n", "#计算乘方", "\n", "elif", " a == ", "'6'", ":\n    y = ", "int", "(", "input", "(", "'请输入底数'", "))\n    y2 = ", "int", "(", "input", "(", "'请输入乘方数'", "))\n    ", "print", "(", "pow", "(y,y2))\n\n", "#计算平方根", "\n", "elif", " a == ", "'7'", ":\n    u = ", "int", "(", "input", "(", "'请输入开根数'", "))\n    ", "from", " math ", "import", " sqrt\n    ", "print", "(sqrt(u))\n\n", "else", ":\n    ", "pass", "\n\n", "input", "(", "'按回车退出'", ")\n\n", "\n", "就是这一坨烂代码", "计算器代码，谢谢！！"]], "Tag": "算法设计"}
{"Answer": "在处理完数学运算后，可以使用这个插件，他会根据你的要求截取指定的小数点位数\r\n\r\n\r\n[url]http://www.tuliofaria.net/jquery-floatnumber/[/url]\r\n\r\n这是DEMO\r\n[url]http://www.tuliofaria.net/projects/floatnumber/example.html[/url]", "Konwledge_Point": "乘法", "Question": ["请问用javascript加减法计算如何保留最少2位小数呢？", ["加法：", "\nJava 代码", "\n\n", "\n", "//说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。", "\n", "\n", "//调用：accAdd(arg1,arg2)", "\n", "\n", "//返回值：arg1加上arg2的精确结果", "\n", "\n", "function accAdd(arg1,arg2){", "\n", "\n", "    var r1,r2,m;", "\n", "\n", "    try{r1=arg1.toString().split(\".\")[1].length}catch(e){r1=0}", "\n", "\n", "    try{r2=arg2.toString().split(\".\")[1].length}catch(e){r2=0}", "\n", "\n", "    m=Math.pow(10,Math.max(r1,r2))", "\n", "\n", "    return (arg1*m+arg2*m)/m", "\n", "}", "\n", "\n", "\n", "//给Number类型增加一个add方法，调用起来更加方便。", "\n", "\n", "Number.prototype.add = function (arg){", "\n", "\n", "    return accAdd(arg,this);", "\n", "\n", "}", "\n", "\n", "\n", "\n", "//说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。", "\n//调用：accAdd(arg1,arg2)", "\n//返回值：arg1加上arg2的精确结果", "\nfunction accAdd(arg1,arg2){", "\n    var r1,r2,m;", "\n    try{r1=arg1.toString().split(\".\")[1].length}catch(e){r1=0}", "\n    try{r2=arg2.toString().split(\".\")[1].length}catch(e){r2=0}", "\n    m=Math.pow(10,Math.max(r1,r2))", "\n    return (arg1*m+arg2*m)/m", "\n}", "\n\n", "//给Number类型增加一个add方法，调用起来更加方便。", "\nNumber.prototype.add = function (arg){", "\n    return accAdd(arg,this);", "\n}", "\n\n", "减法", "\nJava 代码", "\n\n", "\n", "//说明：javascript的减法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的减法结果。", "\n", "\n", "//调用：accSub(arg1,arg2)", "\n", "\n", "//返回值：arg1减上arg2的精确结果", "\n", "\n", "function accSub(arg1,arg2){", "\n", "\n", "    return accAdd(arg1,-arg2);", "\n", "\n", "}", "\n", "\n", "\n", "//给Number类型增加一个sub方法，调用起来更加方便。", "\n", "\n", "Number.prototype.sub = function (arg){", "\n", "    return accSub(this,arg);", "\n", "\n", "}", "\n", "\n", "\n", "\n", "//说明：javascript的减法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的减法结果。", "\n//调用：accSub(arg1,arg2)", "\n//返回值：arg1减上arg2的精确结果", "\nfunction accSub(arg1,arg2){", "\n    return accAdd(arg1,-arg2);", "\n}", "\n\n", "//给Number类型增加一个sub方法，调用起来更加方便。", "\nNumber.prototype.sub = function (arg){", "\n    return accSub(this,arg);", "\n}", "\n\n", "乘法", "\nJava 代码", "\n\n", "\n", "//说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。", "\n", "\n", "//调用：accMul(arg1,arg2)", "\n", "\n", "//返回值：arg1乘以arg2的精确结果", "\n", "\n", "function accMul(arg1,arg2)", "\n", "\n", "{", "\n", "\n", "    var m=0,s1=arg1.toString(),s2=arg2.toString();", "\n", "\n", "    try{m+=s1.split(\".\")[1].length}catch(e){}", "\n", "\n", "    try{m+=s2.split(\".\")[1].length}catch(e){}", "\n", "\n", "    return Number(s1.replace(\".\",\"\"))*Number(s2.replace(\".\",\"\"))/Math.pow(10,m)", "\n", "}", "\n", "\n", "\n", "//给Number类型增加一个mul方法，调用起来更加方便。", "\n", "\n", "Number.prototype.mul = function (arg){", "\n", "\n", "    return accMul(arg, this);", "\n", "\n", "}", "\n", "\n", "\n", "\n", "//说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。", "\n//调用：accMul(arg1,arg2)", "\n//返回值：arg1乘以arg2的精确结果", "\nfunction accMul(arg1,arg2)", "\n{", "\n    var m=0,s1=arg1.toString(),s2=arg2.toString();", "\n    try{m+=s1.split(\".\")[1].length}catch(e){}", "\n    try{m+=s2.split(\".\")[1].length}catch(e){}", "\n    return Number(s1.replace(\".\",\"\"))*Number(s2.replace(\".\",\"\"))/Math.pow(10,m)", "\n}", "\n\n", "//给Number类型增加一个mul方法，调用起来更加方便。", "\nNumber.prototype.mul = function (arg){", "\n    return accMul(arg, this);", "\n}", "\n\n", "除法", "\nJava 代码", "\n\n", "\n", "//说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。", "\n", "\n", "//调用：accDiv(arg1,arg2)", "\n", "\n", "//返回值：arg1除以arg2的精确结果", "\n", "\n", "function accDiv(arg1,arg2){", "\n", "\n", "    var t1=0,t2=0,r1,r2;", "\n", "\n", "    try{t1=arg1.toString().split(\".\")[1].length}catch(e){}", "\n", "\n", "    try{t2=arg2.toString().split(\".\")[1].length}catch(e){}", "\n", "\n", "    with(Math){", "\n", "\n", "        r1=Number(arg1.toString().replace(\".\",\"\"))", "\n", "        r2=Number(arg2.toString().replace(\".\",\"\"))", "\n", "\n", "        return (r1/r2)*pow(10,t2-t1);", "\n", "\n", "    }", "\n", "\n", "}", "\n", "\n", "\n", "//给Number类型增加一个div方法，调用起来更加方便。", "\n", "\n", "Number.prototype.div = function (arg){", "\n", "\n", "    return accDiv(this, arg);", "\n", "\n", "}", "\n", "\n", "\n", "\n", "我想实现的是以上代码计算后的结果最少要有2位小数，以0补位，计算后得到的如果小数位多，就不管，谢谢", "\n\n", "如", "\n\n", "2+2 结果为4.00", "\n2.11111+2.11111=4.22222"]], "Tag": "算法设计"}
{"Answer": "for (i = 9; i &lt;= 1; i--) \r\n  { \r\n      document.write(\"test\"); \r\n                                \r\n  } \r\n\r\n\r\n当i=9 时 i &gt;1 判断跳出了循环", "Konwledge_Point": "乘法", "Question": ["i--问题", ["<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"", "http://www.w3.org/TR/html4/loose.dtd\">", "九九乘法口决表", "\n", "<br>\n                        var i, j, text;<br>\n                        for (i = 9; i &lt;= 1; i--) {<br>\n                                document.write(&quot;test&quot;);</p>\n\n<pre><code>                    }\n            &lt;/script&gt;\n    &lt;/table&gt;\n</code></pre>\n\n<p></body><br>\n</html></p>\n\n<p>就这么短短的几句代码运行不了，改成i++就可以，难道javascript不支持i-- ?</p>"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; calc(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; (*p)(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;)){\n    &lt;span class=\"hljs-comment\"&gt;//实现两个数之间的计算&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; p(x,y);\n}\n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; add(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y){\n    &lt;span class=\"hljs-comment\"&gt;//加法&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x&amp;#43;y;\n} \n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; sub(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y){\n    &lt;span class=\"hljs-comment\"&gt;//减法&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x-y;\n} \n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; mult(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y){\n    &lt;span class=\"hljs-comment\"&gt;//乘法&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x*y;\n} \n&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; divi(&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; x,&lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt; y){\n    &lt;span class=\"hljs-comment\"&gt;//除法&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; x/y;\n} \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["实现计算器功能(指针)", ["\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n\n", "/********** Begin **********/", "\n", "int", " ", "calc", "(", "int", " x,", "int", " y,", "int", " (*p)(", "int", ",", "int", "))", "{\n    ", "//实现两个数之间的计算", "\n    \n}\n", "int", " ", "add", "(", "int", " x,", "int", " y)", "{\n    ", "//加法", "\n    \n} \n", "int", " ", "sub", "(", "int", " x,", "int", " y)", "{\n    ", "//减法", "\n    \n} \n", "int", " ", "mult", "(", "int", " x,", "int", " y)", "{\n    ", "//乘法", "\n    \n} \n", "int", " ", "divi", "(", "int", " x,", "int", " y)", "{\n    ", "//除法", "\n    \n} \n", "/********** End **********/", "\n\n", "int", " ", "main", "()", "\n", "{\n    ", "//本题主要是实现一个计算器的功能 ", "\n    ", "int", " a,b,result;\n    ", "char", " c;\n    ", "scanf", "(", "\"%d%c%d\"", ",&a,&c,&b);\n    ", "//利用函数指针实现加减乘除 ", "\n    ", "switch", "(c){\n        ", "case", " ", "'+'", ":result=", "calc", "(a,b,add);", "break", ";     ", "//加法 ", "\n        ", "case", " ", "'-'", ":result=", "calc", "(a,b,sub);", "break", ";     ", "//减法 ", "\n        ", "case", " ", "'*'", ":result=", "calc", "(a,b,mult);", "break", ";    ", "//乘法 ", "\n        ", "case", " ", "'/'", ":result=", "calc", "(a,b,divi);", "break", ";     ", "//除法 ", "\n        ", "default", ":", "printf", "(", "\"系统不能识别的运算符\"", ");", "exit", "(", "1", ");     ", "//退出 ", "\n    } \n    ", "printf", "(", "\"%d\"", ",result);     ", "//输出结果 ", "\n    ", "return", " ", "0", ";\n}\n\n\n", "\n", "\n", "下面图片是题目以及要测试输出的结果，问一下中间空缺的绿色中间的该怎么填写呢"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-attribute\"&gt;s&lt;/span&gt;&amp;#61;0\n&lt;span class=\"hljs-attribute\"&gt;cnt&lt;/span&gt;&amp;#61;0\n&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;int(input())\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; &lt;span class=\"hljs-attribute\"&gt;n&lt;/span&gt;&amp;#61;&amp;#61;-1:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;平均分&amp;#xff1a;&amp;#39;&lt;/span&gt;,s/cnt)\n        break\n    s&amp;#43;&amp;#61;n\n    cnt&amp;#43;&amp;#61;1\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;br /&gt; &lt;strong&gt;有帮助请&lt;font color=\"red\"&gt;&lt;strong&gt;采纳&lt;/strong&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["SOS！Python任务，极简难度", ["循环结构编程作业：", "1  x-x/2+x/3-x/4…..x/50", "2.输出99乘法表，等号=后的数据4列左对齐。", "3.输入一组成绩，输出平均成绩。当输入-1时表示输入终止。", "4 .给用户三次输入用户名和密码的机会，要求如下：‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‫‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‫  如输入第一行输入用户名为‘Kate’,第二行输入密码为‘666666’，输出‘登录成功！’，退出程序；‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‫‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‪‫   当一共有3次输入用户名或密码不正确输出“3次用户名或者密码均有误！退出程序。”。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\npublic class ABC {\n    public static void main(String[] args) {\n        int sum;\n        for (int i &amp;#61; 1; i &amp;lt;&amp;#61; 9; i&amp;#43;&amp;#43;){\n            for (int j &amp;#61; 1; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;){\n                System.out.print(j&amp;#43;&amp;#34;*&amp;#34;&amp;#43;i&amp;#43;&amp;#34;&amp;#61;&amp;#34;&amp;#43;(j*i)&amp;#43;&amp;#34; &amp;#34;);\n            }\n            System.out.println(&amp;#34; &amp;#34;);\n        }\n    }\n}&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["萌新提问！救救孩子吧！！！！", ["九九乘法表换行，9*9=81 后面执行了换行，为什么后面一直没有换行，是我哪里理解不到位嘛，求解答！", "\n", "\n代码：", "\n\n", "package day095;", "\n\n", "public class day095 {", "\n//打印九九乘法表", "\n    public static void main(String[] args) {", "\n        // TODO Auto-generated method stub", "\n        int sum =0;", "\n        for(int a = 9;a>1;a--) {", "\n            for(int i = 1;i<=9;i++) {", "\n                sum = a*i;", "\n                //换行", "\n            for(int b=9;(sum%b)!=0;b--) {", "\n                    System.out.println();", "\n                }", "\n                System.out.print(sum+\" \");", "\n                ", "\n            }", "\n        }", "\n\n", "    }", "\n\n", "}", "\n ", "\n\n", " ", "\n\n", "编译如图。。。", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码应该没啥问题&amp;#xff0c;是不是serveroutput没有打开&amp;#xff0c;加上set serverout on&amp;#xff0c;试试。&lt;/p&gt;\n\n&lt;p&gt;是这样的效果吗&amp;#xff1f;&lt;/p&gt;\n\n&lt;p&gt;&lt;img alt=\"\" height=\"750\" src=\"https://img-ask.csdnimg.cn/upload/1621330631811.png\" width=\"1300\" /&gt;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["哪位大神精通pl/sql语句，帮我看看哪里出错", ["用pl/sql语句怎么打印倒着的九九乘法表，我的代码是这样的，有没有热心大神帮忙看看哪里出错了", "\n\n", "\n", "declare \n\ti number := 1;\n\tj number := 1;\nbegin\n\tfor i in 9..1 loop\n\t\tfor j in 1..i loop\n\t\t\tdbms_output.put(i || '*' || j || '=' || i*j || ' ');\n\t\tend loop;\n\t\tdbms_output.put_line('');\n\tend loop;\nend;\n/", "\n\n", "它这啥都没输出的，就奇怪了。", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/249482188166169.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;br /&gt;这样ok&amp;#xff1f;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["html网页编写问题", ["创建网页 A2-Task1.html。", "在网页上，显示 3 个按钮“乘以 10”、“除以 10”和“重置”，以及一个文本字段。", "\n", "当页面加载时，在文本字段下方，以蓝色显示一个随机生成的三位数字。", "每当用户单击“乘以10”按钮时，则显示的数字乘以10（例如137 * 10 = 1370），并使用文本字段中输入的文本显示消息（例如，如果用户在文本字段中输入“苏州”，则显示的消息为“苏州1370”）;", "每当用户单击“除以10”按钮时，则显示的数字除以10（例如137/10 = 13），并使用文本字段中输入的文本显示消息（例如，如果用户在文本字段中输入了“sydney”，则显示的消息为“sydney 13”）;", "每当用户单击“重置数字”按钮时，文本字段将被清除，并且消息显示新生成的随机三位数。", "*请注意，当用户单击按钮（乘法/除法）时，原始生成的数字的值会相应地更改，并", "\n", "显示新值 *提示：其中一个选项是使用并编写一个函数 generateRandomNumber（） 以在网页加载时生成并显示随机数。", "\n", "##可以用全英文么，谢谢。。"]], "Tag": "算法设计"}
{"Answer": "for(;i&lt;=count; i++)\r\n{\r\nj=1; //这里要重置下\r\n...\r\n}", "Konwledge_Point": "乘法", "Question": ["c语言套嵌循环问题，怎么也想不通问题所在", ["大家好！本人纯菜鸟一枚。刚开始自学c语言。", "\n有个联系：生成一个乘法表，行列数相等。如4行4列，则行列均为1~4。要求每个单元格数值为行列的乘积。", "\n我编写的程序如下：", "\n#include", "\nint main(void)", "\n{", "\n    int count=0;", "\n    int i=1;", "\n    int j=1;", "\n    int product=0;", "\n\n", "printf(\"\\nEnter the numbers of row and column: \");\nscanf(\"%d\",&count);\n\nfor(;i<=count; i++)\n{\n    while(j<=count)\n    {\n        product=i*j++;\n        printf(\"%d        \", product);\n    }\n    printf(\"\\n\");\n}\nreturn 0;\n", "\n\n", "}", "\n\n", "但运行之后，却只显示一行。怎么也想不通程序的逻辑错在哪里。求指教。", "\n（因为用的vc++，不能用%5d之类的来确保数字对齐，所以也就不管对齐的问题了）", "\n非常感谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在main函数中&amp;#xff0c;用随机数生成两个数来构造Rational类的实例就可以了&amp;#xff0c;然后再下面的加减乘除中&amp;#xff0c;用两个Rational实例进行计算即可。参考如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; m1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//生成1-100的随机数&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n1 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; m2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;int&lt;/span&gt; n2 &amp;#61; &lt;span class=\"hljs-keyword\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        Rational a(m1,n1);\n        Rational b(m2,n2);\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;strcmp&lt;/span&gt;(strChoise, &lt;span class=\"hljs-string\"&gt;&amp;#34;1&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a &amp;#43; b;\n            printReal(c);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;strcmp&lt;/span&gt;(strChoise, &lt;span class=\"hljs-string\"&gt;&amp;#34;2&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a - b;\n            printReal(c);\n        }&lt;span class=\"hljs-comment\"&gt;//...后面的类似&lt;/span&gt;\n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;不同的用户&amp;#xff0c;根据用户名来写文件就可以了&amp;#xff0c;可以定义几个内置的用户&amp;#xff0c;用户登录后&amp;#xff0c;记录下当前登录的是哪个用户就可以了。&lt;br /&gt;你的代码错误太多了&amp;#xff0c;给你改了一下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; _CRT_SECURE_NO_WARNINGS 1&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;//#include&amp;lt;bits/stdc&amp;#43;&amp;#43;.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Rational&lt;/span&gt; {\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Rational&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denomintor &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);&lt;span class=\"hljs-comment\"&gt;//分别表示分子和分母 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;//&amp;#43;&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;-(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;//-&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;*(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;//*&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;/(Rational r1, Rational r2);&lt;span class=\"hljs-comment\"&gt;// /&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; istream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;gt;&amp;gt;(istream&amp;amp; is, Rational&amp;amp; r);&lt;span class=\"hljs-comment\"&gt;//重载流输入 &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, Rational&amp;amp; r);&lt;span class=\"hljs-comment\"&gt;//重载流输出 &lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational&amp;amp; r)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; Rational &lt;span class=\"hljs-title\"&gt;normalize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational s)&lt;/span&gt;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//化简函数&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denomintor;\n};\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;User&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//用户结构体类型定义&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; szName[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//用户名&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nTime; &lt;span class=\"hljs-comment\"&gt;//使用次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nTest; &lt;span class=\"hljs-comment\"&gt;//测试次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; alAve; &lt;span class=\"hljs-comment\"&gt;//平均成绩&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nAdd; &lt;span class=\"hljs-comment\"&gt;//加法次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nSub; &lt;span class=\"hljs-comment\"&gt;//减法次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; nMul; &lt;span class=\"hljs-comment\"&gt;//乘法次数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; dlScore[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;//3次测试得分&lt;/span&gt;\n}user;\nRational::&lt;span class=\"hljs-built_in\"&gt;Rational&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denomintor)\n{\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;numerator &amp;#61; numerator;\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;denomintor &amp;#61; denomintor;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;printReal&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational&amp;amp; r)&lt;/span&gt;\n&lt;/span&gt;{\n    cout &amp;lt;&amp;lt; r.numerator &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; r.denomintor;\n}\n&lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;normalize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Rational s)&lt;/span&gt;\n&lt;/span&gt;{                                                                &lt;span class=\"hljs-comment\"&gt;//求出分子和分母的最大公约数&amp;#xff0c;用欧几里得算法&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(s.numerator);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; &lt;span class=\"hljs-built_in\"&gt;abs&lt;/span&gt;(s.denomintor);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (b &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t &amp;#61; a % b;\n        a &amp;#61; b;\n        b &amp;#61; t;\n    }\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(s.numerator / a, s.denomintor / a)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;#43;(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * d &amp;#43; b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;-(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * d - b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;*(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;/(Rational r1, Rational r2) {\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a &amp;#61; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; b &amp;#61; r1.denomintor;&lt;span class=\"hljs-comment\"&gt;// a/b&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; d &amp;#61; r2.denomintor;&lt;span class=\"hljs-comment\"&gt;// c/d&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; e &amp;#61; a * d &amp;#43; b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; f &amp;#61; b * d;\n    &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\n\nistream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;gt;&amp;gt;(istream&amp;amp; is, Rational&amp;amp; r) {\n    is &amp;gt;&amp;gt; r.numerator &amp;gt;&amp;gt; r.denomintor;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r.denomintor !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; is;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The denominator is 0, which is illegal. Please try again!&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n        &lt;span class=\"hljs-built_in\"&gt;exit&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n}\nostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, Rational&amp;amp; r) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r.numerator % r.denomintor &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n        os &amp;lt;&amp;lt; r.numerator / r.denomintor &amp;lt;&amp;lt; endl;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        os &amp;lt;&amp;lt; r.numerator &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; r.denomintor;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;userprint&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Login&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//当前用户信息函数&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; szName[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的姓名:&amp;#34;&lt;/span&gt;;\n    cin.&lt;span class=\"hljs-built_in\"&gt;getline&lt;/span&gt;(szName, &lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;);\n    ifstream infile;\n    User user1;\n    infile.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;user.dat&amp;#34;&lt;/span&gt;, ios::binary | ios::in);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!infile)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;没有原始记录文件&amp;#xff0c;您是第一个用户!\\n&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(user.szName, szName);\n        user.nTest&amp;#43;&amp;#43;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    infile.&lt;span class=\"hljs-built_in\"&gt;read&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user1, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!infile.&lt;span class=\"hljs-built_in\"&gt;eof&lt;/span&gt;())\n    {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(user1.szName, szName) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            user &amp;#61; user1;\n            user.nTime&amp;#43;&amp;#43;;\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎您再次使用复数计算器!&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-built_in\"&gt;userprint&lt;/span&gt;();\n            cin.&lt;span class=\"hljs-built_in\"&gt;get&lt;/span&gt;();\n            infile.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n        }\n        infile.&lt;span class=\"hljs-built_in\"&gt;read&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user1, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n    }\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;欢迎您再次使用计算器!&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-built_in\"&gt;strcpy&lt;/span&gt;(user.szName, szName);\n    user.nTime&amp;#43;&amp;#43;;\n    infile.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;SaveFile&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//用户资料保存函数&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;userprint&lt;/span&gt;();\n    fstream file;\n    User user1;\n    file.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;user.dat&amp;#34;&lt;/span&gt;, ios::binary | ios::in | ios::out);\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!file)\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;文件打开错误&amp;#xff0c;不能进行更新!\\n&amp;#34;&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n    }\n    file.&lt;span class=\"hljs-built_in\"&gt;seekp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, ios::beg);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (!file.&lt;span class=\"hljs-built_in\"&gt;eof&lt;/span&gt;())\n    {\n        file.&lt;span class=\"hljs-built_in\"&gt;read&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user1, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;strcmp&lt;/span&gt;(user1.szName, user.szName) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        {\n            file.&lt;span class=\"hljs-built_in\"&gt;seekp&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt; * (&lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User)), ios::cur);\n            file.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n            file.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n        }\n    }\n    file.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n    fstream outfile;\n    outfile.&lt;span class=\"hljs-built_in\"&gt;open&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;user.dat&amp;#34;&lt;/span&gt;, ios::binary | ios::app);\n    outfile.&lt;span class=\"hljs-built_in\"&gt;write&lt;/span&gt;((&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt;*)&amp;amp;user, &lt;span class=\"hljs-built_in\"&gt;sizeof&lt;/span&gt;(User));\n    outfile.&lt;span class=\"hljs-built_in\"&gt;close&lt;/span&gt;();\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;srand&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;time&lt;/span&gt;(&lt;span class=\"hljs-literal\"&gt;NULL&lt;/span&gt;)); &lt;span class=\"hljs-comment\"&gt;//初始化随机数种子语句 随机数在哪产生怎么写捏&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Login&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//当前用户信息函数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; choise; &lt;span class=\"hljs-comment\"&gt;//定义字符串名&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t这是一个简单的计算器程序&amp;#xff0c;可以实现以下功能&amp;#xff0c;请按对应的按键(1-7)\\n\\n\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;MENU&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t1:有理数加法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t2:有理数减法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t3:测试分数加减乘法运算&amp;#xff0c;1次测试10道题\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t4:有理数乘法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t5:有理数除法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t0:退出程序\\n\\n:&amp;#34;&lt;/span&gt;;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t请您选择:&amp;#34;&lt;/span&gt;;\n        cin &amp;gt;&amp;gt; choise;\n\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//生成1-100的随机数&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; m2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;rand&lt;/span&gt;() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(m1, n1)&lt;/span&gt;&lt;/span&gt;;\n        &lt;span class=\"hljs-function\"&gt;Rational &lt;span class=\"hljs-title\"&gt;b&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(m2, n2)&lt;/span&gt;&lt;/span&gt;;\n\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a &amp;#43; b;\n            &lt;span class=\"hljs-built_in\"&gt;printReal&lt;/span&gt;(c);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            Rational c &amp;#61; a - b;\n            &lt;span class=\"hljs-built_in\"&gt;printReal&lt;/span&gt;(c);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//这里怎么写捏 &lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//这里怎么写捏 &lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-comment\"&gt;//这里怎么写捏 &lt;/span&gt;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//用户选0则结束调用函数&lt;/span&gt;\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n\\t欢迎下次继续使用计算器!\\n&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\t输入错误&amp;#xff0c;请按任意键继续!\\n&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-comment\"&gt;//cin.get();&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;//cin.get();&lt;/span&gt;\n        }\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;SaveFile&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//调用用户资料保存函数&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["只能写成这样 主要是第4个测试和第5个要求不会实现 想知道怎么改", ["设计有理(分数)数计算器，要求如下：", "（1）为有理数定义一个Rational类。有理数可以表示成为两个相除的整数，如3/4、13/3等。将有理数表示成int类型的两个值相除，分别表示分子和分母；", "（2）通过接收从键盘输入a/b形式的分数生成有理数类的对象，在程序中可以识别出分子和分母并正确赋值;（要判断分母是否为0）；", "（3）采用运算符重载方法定义有理数的加、减、乘、除运算；（需要判断除数是否为0）", "（4）设计有理数计算器测试程序，采用由计算机随机出题（用随机数），用户答题的形式，对有理数的加法、减法、乘法和除法进行测试。", "（5）（选做题）设计记录功能，可以记录下不同用户使用计算器的情况，记录以文件形式保存。程序运行时要求输入用户名，显示该用户以前的记录。用户记录包括：做了多少次加法、减法、乘法和除法，进行测试的次数，测试的平均分等，在退出计算器程序时用新的用户记录代替原有记录。", "要求用重载运算符", "\n", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "class", " ", "Rational", "{\n    ", "Rational", "(", "int", " numerator,", "int", " denomintor);", "//分别表示分子和分母 ", "\n    ", "friend", " Rational ", "operator", "+(Rational r1,Rational r2);", "//+", "\n    ", "friend", " Rational ", "operator", "-(Rational r1,Rational r2);", "//-", "\n    ", "friend", " Rational ", "operator", "*(Rational r1,Rational r2);", "//*", "\n    ", "friend", " Rational ", "operator", "/(Rational r1,Rational r2);", "// /", "\n    ", "friend", " istream &", "operator", ">>(istream &is,Rational& r);", "//重载流输入 ", "\n    ", "friend", " ostream &", "operator", "<<(ostream &os,Rational& r);", "//重载流输出 ", "\n    ", "friend", " ", "void", " ", "printReal", "(Rational &r)", ";\n    ", "friend", " ", "void", " ", "normalize", "()", ";", "//化简函数", "\n    ", "private", ":\n        ", "int", " numerator;\n        ", "int", " denomintor; \n};\n", "struct", " ", "User", " ", "//用户结构体类型定义", "\n{\n   ", "char", " szName[", "20", "]; ", "//用户名", "\n   ", "int", " nTime; ", "//使用次数", "\n   ", "int", " nTest; ", "//测试次数", "\n   ", "double", " alAve; ", "//平均成绩", "\n   ", "int", " nAdd; ", "//加法次数", "\n   ", "int", " nSub; ", "//减法次数", "\n   ", "int", " nMul; ", "//乘法次数", "\n   ", "double", " dlScore[", "3", "]; ", "//3次测试得分", "\n}user; \n", "Rational ", "Rational::normalize", "()", "                                    \n", "{                                                                ", "//求出分子和分母的最大公约数，用欧几里得算法", "\n    ", "int", " a = ", "abs", "(numerator);\n    ", "int", " b = ", "abs", "(denominator);\n    ", "while", " (b > ", "0", ")\n    {\n        ", "int", " t = a % b;\n        a = b;\n        b = t;\n    }\n    ", "Rational ", "R", "(numerator / a, denominator / a)", ";\n    ", "return", " R;\n}\nRational ", "operator", "+(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * d + b * c;\n    ", "int", " f = b *  d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "-(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * d - b * c;\n    ", "int", " f = b * d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "*(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * c;\n    ", "int", " f = b * d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "/(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d", "\n    ", "int", " e = a * d + b * c;\n    ", "int", " f = b*d;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nRational ", "operator", "+(Rational r1,Rational r2){\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;", "// a/b", "\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;", "// c/d a/b * d/c", "\n    ", "int", " e = a * d;\n    ", "int", " f = b * c;\n    ", "Rational ", "R", "(e,f)", ";\n    ", "return", " R;\n}\nistream &", "operator", ">>(istream &is,Rational &r){\n    is>>r.numerator>>r.denominator;\n    ", "if", "(r.denominator!=", "0", "){\n        ", "return", " is;\n    }\n    ", "else", "{\n        cout<<", "\"The denominator is 0, which is illegal. Please try again!\"", " <<endl; \n        ", "exit", "(", "0", ");\n    }\n}\nostream &", "operator", "<<(ostream &os,Rational &r){\n    ", "if", "(r.numerator%r.denominator==", "0", "){\n        os<<r.numerator/r.denominator<<endl;\n        ", "return", " oa;\n    }\n    ", "else", "\n        os<<r.numerator<<", "\"/\"", "<<r.denominator;\n        ", "return", " os;\n}\n", "void", " ", "Login", "()", " ", "//当前用户信息函数", "\n", "{\n", "char", " szName[", "20", "];\ncout<<", "\"请输入您的姓名:\"", ";\ncin.", "getline", "(szName,", "20", ");\nifstream infile;\nUser user1;\ninfile.", "open", "(", "\"user.dat\"", ",ios::binary|ios::in);\n", "if", "(!infile)\n{\ncout<<", "\"没有原始记录文件，您是第一个用户!\\n\"", ";\n", "strcpy", "(user.szName,szName);\nuser.nTest++;\n", "return", ";\n}\ninfile.", "read", "((", "char", " *)&user1,", "sizeof", "(User));\n", "while", "(!infile.", "eof", "())\n{\n", "if", "(", "strcmp", "(user1.szName,szName)==", "0", ")\n{\nuser=user1;\nuser.nTime++;\ncout<<", "\"欢迎您再次使用复数计算器!\"", ";\n", "userprint", "();\ncin.", "get", "();\ninfile.", "close", "();\n", "return", ";\n}\ninfile.", "read", "((", "char", " *) &user1,", "sizeof", "(User));\n}\ncout<<", "\"欢迎您再次使用计算器!\"", ";\n", "strcpy", "(user.szName,szName);\nuser.nTime++;\ninfile.", "close", "();\n", "return", ";\n}\n", "void", " ", "SaveFile", "()", " ", "//用户资料保存函数", "\n", "{\n", "userprint", "();\nfstream file;\nUser user1;\nfile.", "open", "(", "\"user.dat\"", ",ios::binary|ios::in|ios::out);\n", "if", "(!file)\n{\ncout<<", "\"文件打开错误，不能进行更新!\\n\"", ";\n", "return", ";\n}\nfile.", "seekp", "(", "0", ",ios::beg);\n", "while", "(!file.", "eof", "())\n{\nfile.", "read", "((", "char", " *)&user1,", "sizeof", "(User));\n", "if", "(", "strcmp", "(user1.szName,user.szName)==", "0", ")\n{\nfile.", "seekp", "(-(", "sizeof", "(User)),ios::cur);\nfile.", "write", "((", "char", " *)&user,", "sizeof", "(User));\nfile.", "close", "();\n", "return", ";\n}\n}\nfile.", "close", "();\nfstream outfile;\noutfile.", "open", "(", "\"user.dat\"", ",ios::binary|ios::app);\noutfile.", "write", "((", "char", " *)&user,", "sizeof", "(User));\noutfile.", "close", "();\n", "return", ";\n}\n", "int", " ", "main", "(", "void", ")", " \n", "{\n", "srand", "(", "time", "(", "NULL", ")); ", "//初始化随机数种子语句 随机数在哪产生怎么写捏", "\n", "Login", "(); ", "//当前用户信息函数", "\n", "char", " strChoise[", "20", "]; ", "//定义字符串名", "\n", "do", "\n{\n", "system", "(", "\"cls\"", ");\ncout<<", "\"\\t这是一个简单的计算器程序，可以实现以下功能，请按对应的按键(1-7)\\n\\n\\n\"", ";\ncout<<", "\"\\t=========================MENU===========================\\n\"", ";\ncout<<", "\"\\t1:有理数加法，以0结束\\n\"", ";\ncout<<", "\"\\t2:有理数减法，以0结束\\n\"", ";\ncout<<", "\"\\t3:测试分数加减乘法运算，1次测试10道题\\n\"", ";\ncout<<", "\"\\t4:有理数乘法，以0结束\\n\"", ";\ncout<<", "\"\\t5:有理数除法，以0结束\\n\"", "; \ncout<<", "\"\\t0:退出程序\\n\\n:\"", ";\ncout<<", "\"\\t请您选择:\"", ";\ncin>>strChoise;\n", "if", "(", "strcmp", "(strChoise,", "\"1\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"2\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"3\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"4\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"5\"", ")==", "0", ") \n ", "//这里怎么写捏 ", "\n", "else", " ", "if", "(", "strcmp", "(strChoise,", "\"0\"", ")==", "0", ") ", "//用户选0则结束调用函数", "\n{\ncout<<", "\"\\n\\n\\t欢迎下次继续使用计算器!\\n\"", ";\n", "break", ";\n}\n", "else", "\n{\ncout<<", "\"\\n\\t输入错误，请按任意键继续!\\n\"", ";\ncin.", "get", "();\ncin.", "get", "();\n}\n}\n", "while", "((", "strcmp", "(strChoise,", "\"0\"", ")));\n", "SaveFile", "(); ", "//调用用户资料保存函数", "\n", "return", " ", "0", ";\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "run 的定义在哪里？没有看到。", "Konwledge_Point": "乘法", "Question": ["这个程序没办法运行switch啊求指教", ["#include", "\nvoid action1(int x,int y)", "\n{", "\nprintf(\"x+y=%d\\n\",x+y);", "\n}", "\nviod action2(int x,int y)", "\n{", "\nprintf(\"x-y=%d\\n\",x-y);", "\n}", "\nvoid action3(int x,int y)", "\n{", "\nprintf(\"x*y=%d\\n\",x*y);", "\n}", "\nvoid action4(int x,int y)", "\n{", "\nprintf(\"x/y=%d\\n\",x/y);", "\n}", "\nint main()", "\n{", "\nint a,b;", "\nprintf(\"请输入a与b的值:\\na:\\nb:\\n\");", "\nscanf(\"%d%d\",&a,&b);", "\nprintf(\"A加法B减法C乘法D除法\");", "\nrun=getchar();", "\nswitch(run)", "\n{", "\ncase 'A':action1(a,b);break;", "\ncase'B':action2(a,b);break;", "\ncase'C':action3(a,b);break;", "\ncase'D':action4(a,b);break;", "\ndefault:putchar('\\a');", "\n}", "\nreturn 0;", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;1.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; x, s;\n\n    s &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (x &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; x &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;x &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n\n    {\n        s &amp;#43;&amp;#61; x;\n    }\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;奇数和为&amp;#xff1a;%d&amp;#34;&lt;/span&gt;, s);\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;2.不能&amp;#xff0c;C语言不支持在for循环中初始化变量&lt;/p&gt;\n&lt;p&gt;3.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; hun, ten, ind, n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;( n&amp;#61;&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;; n&amp;lt;&lt;span class=\"hljs-number\"&gt;1000&lt;/span&gt;; n&amp;#43;&amp;#43; )  &lt;span class=\"hljs-comment\"&gt;/*整数的取值范围*/&lt;/span&gt;\n    {\n        hun &amp;#61; n / &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;;\n        ten &amp;#61; (n-hun*&lt;span class=\"hljs-number\"&gt;100&lt;/span&gt;) / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        ind &amp;#61; n % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(n &amp;#61;&amp;#61; hun*hun*hun &amp;#43; ten*ten*ten &amp;#43; ind*ind*ind)  &lt;span class=\"hljs-comment\"&gt;/*各位上的立方和是否与原数n相等*/&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d  &amp;#34;&lt;/span&gt;, n);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n   \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;4.&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num1, num2;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (num1 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; num1 &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; num1&amp;#43;&amp;#43;)\n    {\n\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (num2 &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; num2 &amp;lt;&amp;#61; num1; num2&amp;#43;&amp;#43;)\n        {\n\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d*%d&amp;#61;%-3d&amp;#34;&lt;/span&gt;, num1, num2, num1*num2);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    }\n    &lt;span class=\"hljs-built_in\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["大家再看看这四个题吧", ["1题", "请阅读下面的程序，在横线处填写正确的代码，该程序的功能是：求1-10的奇数和。", "#include <stdio.h>", "\n", "int main()", "{", "\n", "int x, s;", "\n", "s=0;", "\n", "for (x=1; x<=10; _______)", "\n", "{", "\n", "\n", "}", "\n", "printf(\"奇数和为：%d\", s);", "\n", "return 0;", "\n", "}", "\n", "2题", "\n", "请阅读下面的程序，分析程序是否能编绎通过并正确运行，如果不能，说明原因；如果能，请写出运行结果。", "#include <stdio.h>", "\n", "int main()", "{", "\n", "for (int i = 0; i <= 2; i++)", "\n", "{", "\n", "for (int j = 0; j <= i; j++)", "\n", "{", "\n", "printf(\"(%d,%d)\\n\", i, j);", "\n", "}", "\n", "}", "\n", "return 0;", "\n", "}", "\n", "3题", "编写程序，打印出所有的水仙花数。所谓水仙花数是指一个三位数，其各位数字立方和等于该数本身。例如153是一个水仙花数。", "\n", "提示：", "\n", "1）先把一个数的每个位上的数字分离出来      ", "\n", "2）所有的三位数，可以用循环语句去遍历", "\n", "4题", "编写程序，打印出九九乘法表；", "\n", "提示:", "\n", "每一行的列数都不相同，可以用循环嵌套"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用time.clock函数试试吧&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["tkinter做gui界面，测试时间为0，需要得到真实测试时间", ["利用tkinter做gui界面，测试时间为0，逻辑看着是跟我正常代码一样的，但还是没算出来，求解答", "\n", "import tkinter as tk\n\nimport random\n\nimport datetime\n\nimport time\n\nwindow = tk.Tk()\n\nscore = 0\n\ncount = 1\n\na = random.randint(1, 9)\n\nb = random.randint(1, 9)\n\n\n\nmul01 = tk.StringVar()\n\nmul01.", "set", "(str(a))\n\nmul02 = tk.StringVar()\n\nmul02.", "set", "(str(b))\n\ncount_title = tk.StringVar()\n\ncount_title.", "set", "(", "'第1道题'", ")\n\nscore_lab = tk.StringVar()\n\nscore_lab.", "set", "(", "'0'", ")\n\nanswer_lab = tk.StringVar()\n\ngameove = tk.StringVar()\n\n", "t", "=tk.StringVar()\n\ntime_solve = tk.DoubleVar()\n\ngameove.", "set", "(", "\"共测试10道乘法，每题10分，总分100分\"", ")\n\nwindow.title(", "\"乘法口诀测试\"", ")\n\nwindow.geometry(", "'600x500'", ")\n\nwindow[", "\"background\"", "] = ", "\"LightCyan\"", "\n\ntitle01 = tk.Label(window,\n\n                   ", "textvariable", "=gameove,\n\n                   font=(", "'华文行楷'", ", 15),\n\n                   ", "bg", "=", "'SpringGreen'", ")\n\ntitle01.place(", "x", "=120, ", "y", "=30)\n\nlabel01 = tk.Label(window,\n\n                   ", "textvariable", "=count_title,\n\n                   font=(", "'华文行楷'", ", 20),\n\n                   ", "bg", "=", "'hotpink'", ")  # 第N道题\n\nlabel01.place(", "x", "=100, ", "y", "=100)\n\ntitle02 = tk.Label(window, ", "text", "=", "\"请输入答案：\"", ", font=(", "'华文行楷'", ", 20),\n\n                   ", "bg", "=", "'hotpink'", ")\n\ntitle02.place(", "x", "=80, ", "y", "=250)\n\ntitle03 = tk.Label(window,\n\n                   ", "textvariable", "=score_lab,\n\n                   font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 分数lab\n\ntitle03.place(", "x", "=340, ", "y", "=400)\n\ntitle04 = tk.Label(window, ", "text", "=", "\"得分：\"", ", font=(", "'华文行楷'", ", 28), ", "bg", "=", "'hotpink'", ")  # 得分lab\n\ntitle04.place(", "x", "=190, ", "y", "=400)\n\ntitle05 = tk.Label(window, ", "textvariable", "=answer_lab, font=(", "'华文行楷'", ", 28), ", "bg", "=", "'hotpink'", ")  # 得分lab\n\ntitle05.place(", "x", "=220, ", "y", "=450)\n\nentry01 = tk.Entry(window, ", "textvariable", "=0, ", "width", "=10, font=(", "'华文行楷'", ", 20), ", "show", "=None)  # 文本输入框\n\nentry01.place(", "x", "=300, ", "y", "=250)\n\nlabel02 = tk.Label(window, ", "textvariable", "=mul01, font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 被乘数lab\n\nlabel02.place(", "x", "=180, ", "y", "=175)\n\nlabel03 = tk.Label(window, ", "textvariable", "=mul02, font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 乘数lab\n\nlabel03.place(", "x", "=340, ", "y", "=175)\n\nimgLabel = tk.Label(window, ", "text", "=", "'X'", ", font=(", "'黑体'", ", 28),\n\n                    ", "bg", "=", "'hotpink'", ")  # 乘号标签\n\nimgLabel.place(", "x", "=263, ", "y", "=170)\n\n\ndef surecallback():\n    global a, b, count,startTime,endTime\n\n    ", "if", " count <= 10:\n\n        product = a * b\n\n        startTime = time.time()\n\n        result = int(entry01.", "get", "())\n\n        ", "if", " result == product:\n\n            global score\n\n            score = score + 10\n\n            score_lab.", "set", "(str(score))\n\n            answer_lab.", "set", "(", "\"答对了\"", ")\n\n        ", "else", ":\n\n            answer_lab.", "set", "(", "\"答错了\"", ")\n\n        endTime = time.time()\n\n        entry01.delete(0, tk.END)\n\n        a = random.randint(1, 9)\n\n        b = random.randint(1, 9)\n\n        mul01.", "set", "(str(a))\n\n        mul02.", "set", "(str(b))\n\n        count = count + 1\n\n        c = ", "'第'", " + str(count) + ", "'道题'", "\n\n        count_title.", "set", "(c)\n\n    ", "else", ":\n        title01.destroy()\n        title02.destroy()\n        entry01.destroy()\n        title03.destroy()\n        title04.destroy()\n        title05.destroy()\n        label01.destroy()\n        label02.destroy()\n        label03.destroy()\n        imgLabel.destroy()\n        button01.destroy()\n        gameove.", "set", "(", "\"测试结束\"", ")\n        title06 = tk.Label(window,\n                           ", "textvariable", "=gameove, font=(", "'华文行楷'", ", 40),\n                           ", "bg", "=", "'SpringGreen'", ")\n\n        title06.place(", "x", "=220, ", "y", "=30)\n        t.", "set", "(", "'进行本次乘法测试花费的时间为:%s'", " % (endTime - startTime))\n        # t1 = ", "'进行每次测试花费的平均时间为:%s'", "%(time_solve/10.0)\n        title07 = tk.Label(window,\n                           ", "textvariable", "=t, font=(", "'华文行楷'", ", 15),\n                           ", "bg", "=", "'SpringGreen'", ")\n        title07.place(", "x", "=30, ", "y", "=100)\n\n\nbutton01 = tk.Button(", "text", "=", "'确认'", ",\n\n                     font=(", "'华文行楷'", ", 20),\n\n                     ", "width", "=8,\n\n                     ", "height", "=1,\n\n                     ", "command", "=surecallback)\n\nbutton01.place(", "x", "=230, ", "y", "=310)\n\nwindow.mainloop()\n\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\n&lt;code class=\"language-cpp\"&gt;#include&amp;lt;stdio.h&amp;gt;\n\nint main()\n{\n\tint a;\n\tint b;\n\tchar operation;\n\tint num;\n\n\twhile (scanf(&amp;#34;%d&amp;#34;, &amp;amp;a) !&amp;#61; EOF)\n\t{\n\t\tscanf(&amp;#34;%c&amp;#34;, &amp;amp;operation);\n\t\tscanf(&amp;#34;%d&amp;#34;, &amp;amp;b);\n\n\t\tif (operation &amp;#61;&amp;#61; &amp;#39;&amp;#43;&amp;#39;)\n\t\t{\n\t\t\tnum &amp;#61; a &amp;#43; b;\n\t\t\tprintf(&amp;#34;%d\\n&amp;#34;, num);\n\t\t}\n\t\telse if (operation &amp;#61;&amp;#61; &amp;#39;-&amp;#39;) {\n\t\t\tnum &amp;#61; a - b;\n\t\t\tprintf(&amp;#34;%d\\n&amp;#34;, num);\n\t\t}\n\t\telse if (operation &amp;#61;&amp;#61; &amp;#39;*&amp;#39;) {\n\t\t\tnum &amp;#61; a * b;\n\t\t\tprintf(&amp;#34;%d\\n&amp;#34;, num);\n\t\t}\n\t\telse if (operation &amp;#61;&amp;#61; &amp;#39;/&amp;#39; &amp;amp;&amp;amp; b !&amp;#61; 0) {\n\t\t\tnum &amp;#61; a / b;\n\t\t\tprintf(&amp;#34;%d\\n&amp;#34;, num);\n\t\t}\n\t\telse {\n\t\t\tprintf(&amp;#34;%s\\n&amp;#34;, &amp;#34;WA&amp;#34;);\n\t\t}\n\t}\n\treturn 0;\n}&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["具体问题如下，devc++", ["设计一个可以完成任意五则运算（加法/减法/乘法/除法/取余）的程序。除法按照计算机中", "整型相除", "来计算。", "\n\n", "输入格式", "\n\n", "多行输入，每输入一行数据对应输出一行。", "\n\n", "每行输入格式为 a # b，其中 ＃∈{+,−,∗,/,%}", "\n\n", "a,b均为自然数", "\n\n", "输出格式", "\n\n", "每行输出对应的计算结果；", "\n\n", "当运算为除法/取余的时候，如果除数为 0 ，输出 ", "WA", " 。", "\n\n", "输入样例", "\n\n", "\n", "2+2\n4*5\n6/7\n4%3\n4%0", "\n\n", "输出样例", "\n\n", "\n", "4\n20\n0\n1\nWA"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你输入a&amp;#xff0c;b值后按回车键了吧&amp;#xff0c;这样的话&amp;#xff0c;getchar()接收的是换行符&amp;#xff0c;不是加减符号&amp;#xff0c;所以直接结束了。&lt;br /&gt;如果你输入a&amp;#xff0c;b值后按回车键&amp;#xff0c;然后再输入加减符号的话&amp;#xff0c;你需要再加一个getchar()接收到换行符&amp;#xff0c;然后第二个getchar才能接收到你输入的加减符号&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["代码运行不到预计的效果", ["问题遇到的现象和发生背景", "\n", "为什么输入a和b的值后代码就直接结束了", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include<stdio.h>", "int main()", "{", "    void action1(int, int), action2(int, int);", "    char ch;", "    int a, b;", "    {", "        printf(\"请输入需要运算的数字\\n(输入a或A进行加法运算，输入b或B进行乘法运算)\\n\");", "        scanf_s(\"%d,%d\", &a, &b);", "        printf(\"请输入a或b\");", "    }", "    ch = getchar();", "    switch (ch)", "    {", "    case'a':", "    case'A':action1(a, b); break;", "    case'b':", "    case'B':action2(a, b); break;", "    default:putchar('\\a');", "    }", "    return 0;", "}", "void action1(int x,int y)", "{", "    printf(\"请输入需要相加的两位数：\\n\");", "    printf(\"%d+%d=%d\", x, y, x + y);", "}", "void action2(int x, int y)", "{", "    printf(\"请输入需要相乘的两位数：\\n\");", "    printf(\"%d*%d=%d\", x, y, x * y);", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;可以用静态属性记录实例化了多少个实例&amp;#xff0c;然后建立一个数组来得到数字对应的英文内容&lt;br /&gt;输出非标准时间&amp;#xff0c;直接输出小时&amp;#xff0c;分钟和秒就行&amp;#xff0c;而且注意小时不要添加大于23的天进位操作&amp;#xff0c;直接累加就行&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;\n下面是自己写的一段时间计算的代码&amp;#xff0c;要求相加&amp;#xff0c;相减&amp;#xff0c;和乘法计算\noutput如下要求&amp;#xff1a;\nthe first time interval (fti) is hours&amp;#61;21, minutes&amp;#61;58, seconds&amp;#61;50\nthe second time interval (sti) is hours&amp;#61;1, minutes&amp;#61;45, seconds&amp;#61;22\nthe expected result of addition (fti &amp;#43; sti) is 23:44:12\nthe expected result of subtraction (fti - sti) is 20:13:28\nthe expected result of multiplication (fti * 2) is 43:57:40\n然后问题来了&amp;#xff0c;根据题目要求要用到__str__(self) method, 我现在这段代码只能output后三行&amp;#xff0c;像第一和第二行怎么用__str__来执行&amp;#xff1f;\n我试过但只能print出一行&amp;#xff0c;还有最后一个乘法的小时怎么变成非标准时间格式&amp;#xff0c;因为用的时间格式都是&amp;#34;%H:%M:%S&amp;#34;&amp;#xff0c;所以最后一行小时的显示达不到要求\n &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;\n \n\n&lt;span class=\"hljs-keyword\"&gt;from&lt;/span&gt; datetime &lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; time, datetime\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;time_interval&lt;/span&gt;:\n    instancenum&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\n    chrs&amp;#61;[&lt;span class=\"hljs-string\"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;,&lt;span class=\"hljs-string\"&gt;&amp;#39;second&amp;#39;&lt;/span&gt;]&lt;span class=\"hljs-comment\"&gt;#更多数组对照英文增加这里的数组&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__init__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,hours,minutes,seconds&lt;/span&gt;):\n        self.hours&amp;#61;hours\n        self.minutes&amp;#61;minutes\n        self.seconds&amp;#61;seconds\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(self.__str__())\n        time_interval.instancenum&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__str__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self&lt;/span&gt;):\n        &lt;span class=\"hljs-comment\"&gt;#(time_interval.chrs[time_interval.instancenum%len(time_interval.chrs)] 这里意思是超过chrs长度后从头开始取对应&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;the %s time interval (fti) is hours&amp;#61;%d, minutes&amp;#61;%d, seconds&amp;#61;%d&amp;#34;&lt;/span&gt;%(time_interval.chrs[time_interval.instancenum%&lt;span class=\"hljs-built_in\"&gt;len&lt;/span&gt;(time_interval.chrs)],self.hours,self.minutes,self.seconds)\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__add__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,others&lt;/span&gt;):\n        x&amp;#61;self.seconds&amp;#43;others.seconds\n        y&amp;#61;self.minutes&amp;#43;others.minutes\n        z&amp;#61;self.hours&amp;#43;others.hours\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x &amp;gt; &lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;:\n            x &amp;#61; x-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;\n            y &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y &amp;gt; &lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;:\n                y &amp;#61; y-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;\n                z &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; z &amp;gt; &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;:\n                    z &amp;#61; z-&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y &amp;gt; &lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;:\n            y &amp;#61; y-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;\n            z &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; z &amp;gt; &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;:\n                z&amp;#61;z-&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; z &amp;gt; &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;:\n            z&amp;#61;z-&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;the expected result of addition (fti&amp;#43;sti) is &amp;#34;&lt;/span&gt;&amp;#43;time(z,y,x).strftime(&lt;span class=\"hljs-string\"&gt;&amp;#34;%H:%M:%S&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__sub__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,others&lt;/span&gt;):\n        x&amp;#61;self.seconds-others.seconds\n        y&amp;#61;self.minutes-others.minutes\n        z&amp;#61;self.hours-others.hours\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            x &amp;#61; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;&amp;#43;x\n            y -&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                y &amp;#61; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;&amp;#43;y\n                z -&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; z &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                    z &amp;#61; &lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;&amp;#43;z\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            y &amp;#61; &lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;&amp;#43;y\n            z -&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; z &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n                z&amp;#61;&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;&amp;#43;z\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; z &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n            z&amp;#61;z&amp;#43;&lt;span class=\"hljs-number\"&gt;24&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;the expected result of subtraction (fti-sti) is &amp;#34;&lt;/span&gt;&amp;#43;time(z,y,x).strftime(&lt;span class=\"hljs-string\"&gt;&amp;#34;%H:%M:%S&amp;#34;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;def&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;__mul__&lt;/span&gt;(&lt;span class=\"hljs-params\"&gt;self,var&lt;/span&gt;):\n        x&amp;#61;self.seconds*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n        y&amp;#61;self.minutes*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n        z&amp;#61;self.hours*&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; x &amp;gt; &lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;:\n            x &amp;#61; x-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;\n            y &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y &amp;gt; &lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;:\n                y &amp;#61; y-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;\n                z &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;#if z &amp;gt; 23:&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;#    z &amp;#61; z-24&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; y &amp;gt; &lt;span class=\"hljs-number\"&gt;59&lt;/span&gt;:\n            y &amp;#61; y-&lt;span class=\"hljs-number\"&gt;60&lt;/span&gt;\n            z &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;#if z &amp;gt; 23:&lt;/span&gt;\n            &lt;span class=\"hljs-comment\"&gt;#    z&amp;#61;z-24&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#if z &amp;gt; 23:&lt;/span&gt;\n        &lt;span class=\"hljs-comment\"&gt;#    z&amp;#61;z-24&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#34;the expected result of multiplication (fti*2) is %d:%d:%d&amp;#34;&lt;/span&gt;%(z,y,x)&lt;span class=\"hljs-comment\"&gt;#.strftime(&amp;#34;%H:%M:%S&amp;#34;)&lt;/span&gt;\n\np1&amp;#61;time_interval(&lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;58&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;50&lt;/span&gt;)\np2&amp;#61;time_interval(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;)\np3&amp;#61;time_interval(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;45&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;22&lt;/span&gt;)\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(p1.__add__(p2))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(p1.__sub__(p2))\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(p1.__mul__(&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;))\n \n \n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["python 时间计算器的问题", ["下面是自己写的一段时间计算的代码，要求相加，相减，和乘法计算\noutput如下要求：\nthe first time interval (fti) is ", "hours=21,", " ", "minutes=58,", " ", "seconds=50", "\nthe second time interval (sti) is ", "hours=1,", " ", "minutes=45,", " ", "seconds=22", "\nthe expected result of addition (fti + sti) is ", "23", ":", "44", ":", "12", "\nthe expected result of subtraction (fti - sti) is ", "20", ":", "13", ":", "28", "\nthe expected result of multiplication (fti * ", "2", ") is ", "43", ":", "57", ":", "40", "\n然后问题来了，根据题目要求要用到__str__(self) method, 我现在这段代码只能output后三行，像第一和第二行怎么用__str__来执行？我试过但只能print出一行，还有最后一个乘法的小时怎么变成非标准时间格式，因为用的时间格式都是", "\"%H:%M:%S\"", "，所以最后一行小时的显示达不到要求\n\n\n```python\nfrom datetime ", "import", " time, datetime\nclass time_interval:\n    def __init__(self,hours,minutes,seconds):\n        self.", "hours=hours", "\n        self.", "minutes=minutes", "\n        self.", "seconds=seconds", "\n    ", "#def __str__(self):", "\n     ", "#   return \"the first time interval (fti) is hours=%d, minutes=%d, seconds=%d\"%(self.hours,self.minutes,self.seconds)+\"", "\n    def __add__(self,others):\n        ", "x=self.seconds+others.seconds", "\n        ", "y=self.minutes+others.minutes", "\n        ", "z=self.hours+others.hours", "\n        ", "if", " x > ", "59", ":\n            ", "x", " = x-", "60", "\n            y += ", "1", "\n            ", "if", " y > ", "59", ":\n                ", "y", " = y-", "60", "\n                z += ", "1", "\n                ", "if", " z > ", "23", ":\n                    ", "z", " = z-", "24", "\n        ", "if", " y > ", "59", ":\n            ", "y", " = y-", "60", "\n            z += ", "1", "\n            ", "if", " z > ", "23", ":\n                ", "z=z-24", "\n        ", "if", " z > ", "23", ":\n            ", "z=z-24", "\n        return ", "\"the expected result of addition (fti+sti) is \"", "+time(z,y,x).strftime(", "\"%H:%M:%S\"", ")\n    def __sub__(self,others):\n        ", "x=self.seconds-others.seconds", "\n        ", "y=self.minutes-others.minutes", "\n        ", "z=self.hours-others.hours", "\n        ", "if", " x < ", "0", ":\n            ", "x", " = ", "60", "+x\n            y ", "-=", " ", "1", "\n            ", "if", " y < ", "0", ":\n                ", "y", " = ", "60", "+y\n                z ", "-=", " ", "1", "\n                ", "if", " z < ", "0", ":\n                    ", "z", " = ", "24", "+z\n        ", "if", " y < ", "0", ":\n            ", "y", " = ", "60", "+y\n            z ", "-=", " ", "1", "\n            ", "if", " z < ", "0", ":\n                ", "z=24+z", "\n        ", "if", " z < ", "0", ":\n            ", "z=z+24", "\n        return ", "\"the expected result of subtraction (fti-sti) is \"", "+time(z,y,x).strftime(", "\"%H:%M:%S\"", ")\n    def __mul__(self,var):\n        ", "x=self.seconds*var", "\n        ", "y=self.minutes*var", "\n        ", "z=self.hours*var", "\n        ", "if", " x > ", "59", ":\n            ", "x", " = x-", "60", "\n            y += ", "1", "\n            ", "if", " y > ", "59", ":\n                ", "y", " = y-", "60", "\n                z += ", "1", "\n                ", "if", " z > ", "23", ":\n                    ", "z", " = z-", "24", "\n        ", "if", " y > ", "59", ":\n            ", "y", " = y-", "60", "\n            z += ", "1", "\n            ", "if", " z > ", "23", ":\n                ", "z=z-24", "\n        ", "if", " z > ", "23", ":\n            ", "z=z-24", "\n        return ", "\"the expected result of multiplication (fti*2) is \"", "+time(z,y,x).strftime(", "\"%H:%M:%S\"", ")\n", "p1=time_interval(21,58,50)", "\n", "p2=time_interval(1,45,22)", "\nprint(p1.__add__(p2))\nprint(p1.__sub__(p2))\nprint(p1.__mul__(", "2", "))\n\n\n", "\n", "```"]], "Tag": "算法设计"}
{"Answer": "program qinheshu; \r\nvar i,m,k,j,p,q,t,x,y,s,r,c,b:longint; \r\nbegin readln(x,y);\r\n k:=0; \r\nif x=1\r\n then x:=2; \r\nfor i:=x to y \r\ndo begin m:=i;\r\n q:=1; t:=1; \r\nwhile q&lt;=sqrt(m) do begin inc(q);\r\n p:=q; \r\nwhile (m mod q=0) do begin p:=p*q; \r\nm:=m div q;\r\n end;\r\n\r\n p:=(p-1)div (q-1); \r\nt:=t*p; \r\nend;\r\n if m&gt;1 then begin p:=m+1;\r\n t:=t*p; \r\nend; s:=t-i;\r\n m:=t-i; \r\nq:=1;\r\n t:=1;\r\n if m&gt;i then begin while q&lt;=sqrt(m) do begin inc(q);\r\n p:=q;\r\n while (m mod q=0) \r\ndo begin p:=p*q;\r\n m:=m div q;\r\n end; \r\n\r\np:=(p-1) div (q-1); \r\nt:=t*p;\r\n end;\r\n if m&gt;1 then begin p:=m+1; \r\nt:=t*p; end;\r\n if (t-s=i)and(s&lt;&gt;i) then inc(k); \r\nend; \r\nend; \r\nwriteln(k);\r\n end.", "Konwledge_Point": "乘法", "Question": ["有关一个pascal的初学者问题", ["[size=small]这几个题哪个高手会写，写一下哈！", "\n\n", "（1）.输入自然数n，求前n个合数（非素数），其素因子仅有2，3或5", "\n\n", "（2）.自然数a的因子是指能整除a的所有自然数，但不含a本身。例如12因子为1，2，3，4，6 若自然数a的因子之和为b，而且b的因子之和又是a，则称a，b为一对亲和数，求最小一对亲和数。", "\n\n", "（3）.求前n个自然数的平方和，要求不用乘法，如：3的平方和为3*3，可为3+3+3", "\n\n", "（4）.试用容积分别为17升，13升的两个桶为工具，从大油罐中倒出15升油，编程显示出具体的倒油过程。", "\n\n", "（5）.如果一个数从左边读和从右边读都是同一个数，就称为回文数，如：6886就是哦，找出所有3位回文数。", "\n\n", "（6）.任何大于2的自然数都可以写成不超过4个平方之和。", "\n如：8=2的2次方+2的2次方，14=1的2次方+2的2次方+3的2次方", "\n由键盘输入自然数N（2<n<2000），输出其不超过4个平方数之和的表达式。[/size]"]], "Tag": "算法设计"}
{"Answer": "s是一个函数内临时变量，每次进入FFT后你都会重新创建s并初始化为0。\r\n你要想实现累加，两种方法，函数体外定义一个变量，或者用FFT的一个参数作累加，每次调FFT都要把这个累加的值赋给这个参数。\r\n还有个重要问题，你malloc什么时候释放？可能会有严重内存泄露。", "Konwledge_Point": "乘法", "Question": ["C语言递归中数据消失了？应该怎么改写", ["在FFT递归中，希望有一个可以累加的变量，代码中是结构体s，这个变量需要传递到下一个递归中，但是调试发现每次进入一个FFT递归，s都被重新置零了，不知道为什么，希望也没有办法可以解决，谢谢", "\n\n", "mult和add是复数的乘法和加法，代码中没有给出了", "\n\n", " void FFT(struct Compx *t , int n , struct Compx root , struct Compx result) \n{\n    int i,j;\n    struct Compx s = {0 , 0};\n    struct  Compx * even = (struct Compx *)malloc((n / 2) * LEN);   \n    struct  Compx * odd = (struct Compx *)malloc((n / 2) * LEN);\n\n    //划分奇偶项 \n    for (i = 0 , j = 0 ; i < n; i += 2 , j++ )\n    {\n        even[j].real = t[i].real;\n        even[j].imag = t[i].imag;\n    }\n    for (i = 1 , j = 0 ; i < n; i += 2 , j++)\n    {\n        odd[j].real = t[i].real;\n        odd[j].imag = t[i].imag;\n    }\n\n    if(n == 2)\n    {\n        s = add(result, add( even[0] , mult( root , odd[0]) ));\n    }\n    else\n    {\n        FFT(even , n / 2 , mult(root , root) , s);\n\n        FFT(odd , n / 2 , mult(root , root) , s);\n\n    }\n\n}\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt; 因为你的while循环条件一直为true&amp;#xff0c;所以进入加法计算就一直会不断弹窗进行加法计算。switch之后给num赋值为5&amp;#xff0c;或者将num赋值为重新选择计算类型&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (&lt;span class=\"hljs-keyword\"&gt;true&lt;/span&gt;) {\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt; (&lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n            alert(v_sn.sum());\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n            alert(v_sn.subtraction());\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n            alert(v_sn.multiplication());\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n            alert(v_sn.division());\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n            alert(&lt;span class=\"hljs-string\"&gt;&amp;#39;没有该选项&amp;#xff01;&amp;#39;&lt;/span&gt;);\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n   &lt;span class=\"hljs-built_in\"&gt;num&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//或者num &amp;#61; parseInt(prompt(&amp;#39;欢迎使用简易计算器:\\n 1.加法运算;\\n 2.减法运算;\\n 3.乘法运算;\\n 4.除法运算;\\n 5.退出;\\n请输入您的选项:&amp;#39;));&lt;/span&gt;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["一小段简单的JavaScript代码卡在子菜单无法回到主菜单了怎么办", ["请问这一段javascript代码为什么一直卡在sum方法无法退到主页面了？求解答", "\n", "function", " ", "getNum", "(", ") {\n    ", "return", " ", "parseInt", "(", "prompt", "(", "'请输入一个数值:'", "));\n}\n            \n", "function", " ", "Solution", "(", ") {\n    ", "this", ".", "sum", " = ", "function", "(", ") {\n             ", "return", " ", "getNum", "() + ", "getNum", "();\n        }\n        ", "this", ".", "subtraction", " = ", "function", "(", ") {\n            ", "return", " ", "getNum", "() - ", "getNum", "();\n    }\n        ", "this", ".", "multiplication", " = ", "function", "(", ") {\n        ", "return", " ", "getNum", "() * ", "getNum", "();\n    }\n    ", "this", ".", "division", " = ", "function", "(", ") {\n        ", "return", " ", "getNum", "() / ", "getNum", "();\n    }\n}\n            \n", "var", " v_sn = ", "new", " ", "Solution", "();\n", "var", " num = ", "parseInt", "(", "prompt", "(", "'欢迎使用简易计算器:\\n 1.加法运算;\\n 2.减法运算;\\n 3.乘法运算;\\n 4.除法运算;\\n 5.退出;\\n请输入您的选项:'", "));\n", "while", " (", "true", ") {\n    ", "if", " (num == ", "5", ") {\n        ", "break", ";\n    }\n    ", "switch", " (num) {\n        ", "case", " ", "1", ":\n            ", "alert", "(v_sn.", "sum", "());\n            ", "break", ";\n        ", "case", " ", "2", ":\n            ", "alert", "(v_sn.", "subtraction", "());\n            ", "break", ";\n        ", "case", " ", "3", ":\n            ", "alert", "(v_sn.", "multiplication", "());\n            ", "break", ";\n        ", "case", " ", "4", ":\n            ", "alert", "(v_sn.", "division", "());\n            ", "break", ";\n        ", "default", ":\n            ", "alert", "(", "'没有该选项！'", ");\n            ", "break", ";\n    }\n}\n\n", "\n", "假如输入选项1进入加法计算，他就一直卡在加法计算的里面，无法退回到主菜单了，怎么解决？", "\n"]], "Tag": "算法设计"}
{"Answer": "# 问题解决的话，请点下`采纳`\r\n```\r\n#include &lt;stdio.h&gt;\r\n\r\nint main()\r\n{\r\n\tfloat x,y,z;\r\n\tchar ch;\r\n\twhile(1)\r\n\t{\r\n\t\tprintf(\"输入你的选项\\n\");\r\n\t\tprintf(\"a.加 b.减\\nc.乘 d.除\\nq.退出\\n\");\r\n\t\tscanf(\" %c\",&amp;ch);\r\n\t\tif(ch!='a'&amp;&amp;ch!='b'&amp;&amp;ch!='c'&amp;&amp;ch!='d'&amp;&amp;ch!='q')\r\n\t\t{\r\n\t\t\tprintf(\"输入选项无效重新输入\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (ch == 'q') break;\r\n\t\tprintf(\"输入第一个数：\");\r\n\t\twhile((scanf(\"%f\",&amp;x))==0)\r\n\t\t{\r\n\t\t\tprintf(\"这个不是数，重新输入\\n\");\r\n\t\t} \r\n\t\tprintf(\"输入第二个数：\");\r\n\t\twhile (1)\r\n\t\t{\r\n\t\t\tif (scanf(\"%f\",&amp;y)==0)\r\n\t\t\t\tprintf(\"这个不是数，重新输入\\n\");\r\n\t\t\telse if(y==0)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"0不能作为除数请重新输入\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tswitch(ch)\r\n\t\t{\r\n\t\tcase 'a':\r\n\t\t\tz=x+y;\r\n\t\t\tbreak;\r\n\t\tcase 'b':\r\n\t\t\tz=x-y;\r\n\t\t\tbreak;\r\n\t\tcase 'c':\r\n\t\t\tz=x*y;\r\n\t\t\tbreak;\r\n\t\tcase 'd':\r\n\t\t\tz=x/y;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tprintf(\"\\n结果是%.2f\\n\",z);\r\n\t}\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["C Primer Plus 8.8练习题 编写一个菜单，提供加减乘除的选项进行计算", ["编写一个程序，显示提供加法、减法、乘法的菜单，该程序只接受菜单提供的选项,程序提示用户输入两个数字。要求是输入q退出，输入数字时有误要求重新输入，除数为零的时候报错并要求重新输入。", "\n我的程序在正常运算时没问题，输入q退出和除数为0时程序有问题。可能是那个循环和if有问题但是不知道具体问题在哪里。", "\n我只是个自学一个月小白求大佬带带我！！！", "\n#include", "\nint main()", "\n    {", "\n        float x,y,z;", "\n        char ch;", "\n        while(ch!='q')", "\n        {", "\n            printf(\"输入你的选项\\n\");", "\n            printf(\"a.加      b.减\\nc.乘      d.除\\nq.退出\\n\");", "\n            scanf(\" %c\",&ch);", "\n            if(ch!='a'&&ch!='b'&&ch!='c'&&ch!='d'&&ch!='q')", "\n            {", "\n                printf(\"输入选项无效重新输入\\n\");", "\n                    continue;", "\n            }", "\n            printf(\"输入第一个数：\");", "\n            while((scanf(\" %f\",&x))==0)", "\n            {", "\n                printf(\"这个不是数，重新输入\\n\");", "\n            } ", "\n            printf(\"输入第二个数：\");", "\n            while ((scanf(\" %f\",&y))==0)", "\n            {", "\n                printf(\"这个不是数，重新输入\\n\");", "\n                if(ch=='d'&&y==0)", "\n                {", "\n                    printf(\"0不能作为除数请重新输入\");", "\n                    continue;", "\n                }", "\n            }", "\n            switch(ch)", "\n            {", "\n                case 'a':", "\n                    z=x+y;", "\n                    break;", "\n                case 'b':", "\n                    z=x-y;", "\n                    break;", "\n                case 'c':", "\n                    z=x*y;", "\n                    break;", "\n                case 'd':", "\n                    z=x/y;", "\n                    break;", "\n                case 'q':", "\n                    break;", "\n            }", "\n            printf(\"\\n结果是%.2f\\n\",z);", "\n            if(ch=='q')", "\n            break;", "\n        }", "\n        return 0;", "\n    }"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;    for(j&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;j&amp;lt;2;j&amp;#43;&amp;#43;)&lt;/span&gt;\n    {\n        for(i&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;i&amp;lt;10;i&amp;#43;&amp;#43;)&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;[i&amp;#43;j]&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;b[i]*d[j]&amp;#43;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;[i&amp;#43;j]&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;[i&amp;#43;j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;#43;&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;[i&amp;#43;j]/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;   //不需要定义什么x&amp;#xff0c;相乘的结果&amp;#xff0c;直接将十位数加到高位上就可以了&lt;/span&gt;\n            &lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;[i&amp;#43;j]&lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt;&lt;span class=\"hljs-keyword\"&gt;c&lt;/span&gt;[i&amp;#43;j]&lt;span class=\"hljs-variable\"&gt;%10&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;;&lt;/span&gt;\n        }\n    }\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["2的31次方 *96  总是改不对", ["问题遇到的现象和发生背景", "\n", "计算2147483648*96", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include", "using namespace std;", "int main()", "{", "    char a[11]={\"2147483648\"};", "    int b[10]={0};", "    char f[3]={'9','6'};", "    int  d[2]={0};", "    int i=0;", "    for(i=0;i<2;i++)", "    {", "        d[i]=f[1-i]-'0';", "    }", "     int c[12]={0};", "    for(i=0;i<10;i++)", "    b[i]=a[9-i]-'0';", "    //for(i=10;i>=0;i--)", "    //cout<<b[i];", "    int j;", "    for(j=0;j<2;j++)", "    {", "        int x=0;", "    for(i=0;i<10;i++)", "    {", "    c[i+j]=b[i]*d[j]+x+c[i+j];", "    x=c[i+j]/10;     //进位", "    c[i+j]=c[i+j]%10;", "    }", "     c[i+j+1]=x;", "    }", "//    for(i=0;i<10;i++)", "//    cout<<b[i];", "    i=11;", "    while(c[i]==0)", "    {", "        i--;", "    }", "    for(i;i>=0;i--)", "    {", "        cout<<c[i];", "    }", "    return 0;", "}", "\n", "运行结果及报错内容", "\n", "196 158 430 208     正确答案：  206 158 430 208", "\n", "我的解答思路和尝试过的方法", "\n", "我是用大整数乘法做的，但是为什么最后差了一点", "\n", "我想要达到的结果", "\n", " 206 158 430 208"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;用不着写那么复杂&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;True&lt;/span&gt;:\n    num &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;请输入数字选择工具&amp;#xff1a;\n    1:长方形面积计算\n    2:三角形面积计算\n    3:圆形面积计算\n    4:九九乘法表\n    5:乘法计算\n    6:除法计算\n    7:加法计算\n    8:减法计算\n    0:退出\n    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;))\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; num &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;or&lt;/span&gt; num &amp;gt; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入0-8之间的数字(按回车继续)!&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;continue&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;退出&amp;#39;&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n        cfx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入长度&amp;#xff1a;&amp;#39;&lt;/span&gt;)) * &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入宽度&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;长方形面积为&amp;#xff1a;%.2f&amp;#39;&lt;/span&gt; % cfx)\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n        sjx &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入底边长度&amp;#xff1a;&amp;#39;&lt;/span&gt;)) * &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入高度&amp;#xff1a;&amp;#39;&lt;/span&gt;)) / &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;三角形的面积为&amp;#xff1a;%.2f&amp;#39;&lt;/span&gt; % sjx)\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n        y &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入半径&amp;#xff1a;&amp;#39;&lt;/span&gt;)) ** &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt; * &lt;span class=\"hljs-number\"&gt;3.14&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;圆的面积为&amp;#xff1a;%.2f&amp;#39;&lt;/span&gt; % y)\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;):\n            &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; j &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;):\n                &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;%d*%d&amp;#61;%d&amp;#39;&lt;/span&gt; % (j, i, i*j), end&amp;#61;&lt;span class=\"hljs-string\"&gt;&amp;#39;\\t&amp;#39;&lt;/span&gt;)\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;:\n        cf &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入&amp;#xff1a;&amp;#39;&lt;/span&gt;)) * &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;结果为&amp;#xff1a;%d&amp;#39;&lt;/span&gt; % cf)\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;:\n        chu &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入被除数&amp;#xff1a;&amp;#39;&lt;/span&gt;)) / &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入除数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;商为&amp;#xff1a;%d&amp;#39;&lt;/span&gt; % chu)\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;:\n        jia &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入数字&amp;#xff1a;&amp;#39;&lt;/span&gt;)) &amp;#43; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入数字&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;和为&amp;#xff1a;%d&amp;#39;&lt;/span&gt; % jia)\n\n    &lt;span class=\"hljs-keyword\"&gt;elif&lt;/span&gt; num &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;:\n        jf &amp;#61; &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入被减数&amp;#xff1a;&amp;#39;&lt;/span&gt;)) - &lt;span class=\"hljs-built_in\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;请输入减数&amp;#xff1a;&amp;#39;&lt;/span&gt;))\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;差为&amp;#xff1a;%d&amp;#39;&lt;/span&gt; % jf)\n\n    &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;按回车继续&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["用python3写了一个简单的小功具，请帮我优化，", ["自定义函数：", "\n", "def", " ", "changfangxing", "(", "a,b", "):\n    s = a*b\n    ", "return", " s\n\n", "def", " ", "sanjiaoxing", "(", "a,h", "):\n    s = (a*h)/", "2", "\n    ", "return", " s\n\n", "def", " ", "yuan", "(", "r", "):\n    s = ", "3.14", "*r*r\n    ", "return", " s\n\n", "def", " ", "chengfa", "(", "a,b", "):\n    j = a*b\n    ", "return", " j\n\n", "def", " ", "chufa", "(", "a,b", "):\n    j = a/b\n    ", "return", " j\n\n", "def", " ", "jiafa", "(", "a,b", "):\n    j = a+b\n    ", "return", " j\n\n", "def", " ", "jianfa", "(", "a,b", "):\n    j = a-b\n    ", "return", " j\n\n", "def", " ", "jiujiu", "():\n    ", "for", " i ", "in", " ", "range", "(", "1", ",", "10", "):\n        ", "for", " j ", "in", " ", "range", "(", "1", ",i+", "1", "):\n            ", "print", "(", "'%d*%d=%d'", " % (j,i,i*j),end=", "'\\t'", ")\n", "def", " ", "chengfabiao", "():\n    ", "return", " jiujiu()\n\n\n", "\n", "\nimport gongju\n\n", "while", " True:\n    \n    num = ", "int", "(", "input", "(", "'请输入数字选择工具：\\n1长方形面积计算\\n2三角形面积计算\\n3圆形面积计算\\n4九九乘法表\\n5乘法计算\\n6除法计算\\n7加法计算\\n8减法计算\\n0退出\\n'", "))\n\n    ", "if", " num <0 ", "or", " num> 9:\n        pr", "int", "()\n        pr", "int", "(", "'请输入1-9之间的数字'", ")\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n    \n    ", "if", " num == 0:\n        pr", "int", "(", "'退出'", ")\n        break\n\n    ", "if", " num == 1:\n        cfx = gongju.changfangxing(", "int", "(", "input", "(", "'请输入长度：'", ")),", "int", "(", "input", "(", "'请输入宽度：'", ")))\n        pr", "int", "(", "'长方形面积为：%.2f'", " % cfx)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n    ", "if", " num == 2:\n        sjx = gongju.sanjiaoxing(", "int", "(", "input", "(", "'请输入底边长度：'", ")),", "int", "(", "input", "(", "'请输入高度：'", ")))\n        pr", "int", "(", "'三角形的面积为：%.2f'", " % sjx)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n    ", "if", " num == 3:\n        y = gongju.yua", "n", "(", "int", "(", "input", "(", "'请输入半径：'", ")))\n        pr", "int", "(", "'圆的面积为：%.2f'", " % y)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n    ", "if", " num == 4:\n        cfb = gongju.chengfabiao()\n        pr", "int", "(cfb)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n    ", "if", " num == 5:\n        cf = gongju.chengfa(", "int", "(", "input", "(", "'请输入：'", ")),", "int", "(", "input", "(", "'请输入：'", ")))\n        pr", "int", "(", "'结果为：%d'", " % cf)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n    ", "if", " num == 6:\n        chu = gongju.chufa(", "int", "(", "input", "(", "'请输入被除数：'", ")),", "int", "(", "input", "(", "'请输入除数：'", ")))\n        pr", "int", "(", "'商为：%d'", " % chu)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n    ", "if", " num == 7:\n        jia = gongju.jiafa(", "int", "(", "input", "(", "'请输入数字：'", ")),", "int", "(", "input", "(", "'请输入数字：'", ")))\n        pr", "int", "(", "'和为：%d'", " % jia)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n    ", "if", " num == 8:\n        jf = gongju.jianfa(", "int", "(", "input", "(", "'请输入被减数：'", ")),", "int", "(", "input", "(", "'请输入减数：'", ")))\n        pr", "int", "(", "'差为：%d'", " % jf)\n        pr", "int", "()\n        l = ", "input", "(", "'按回车继续'", ")\n        ", "if", " ", "not", " l:\n            ", "continue", "\n\n", "\n", "请帮我优化一下。如果能换一种思路写出来更好。谢谢"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这个思路本身没有什么问题&amp;#xff0c;就是穷举法&amp;#xff0c;会循环13!次&amp;#xff0c;也就是62亿多次循环&amp;#xff0c;非常耗时。&lt;br /&gt;所以就是尽可能的提升效率。&lt;br /&gt;这里提供个参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt;&lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; res&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;]&amp;#61;{&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;};\n\n&lt;span class=\"hljs-comment\"&gt;// 该方法可以理解为&amp;#xff0c;k位之前的数已经确定&amp;#xff0c;计算k位开始的这满足的数量&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;dfs&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;// 前3位确定后&amp;#xff0c;如果不满足第一个等式则后面的不需要继续判断&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#43; a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] !&amp;#61; a[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;]) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ;\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;// 同理&amp;#xff0c;前6位确定后。经过上面的判断&amp;#xff0c;代表前三位一定满足第一个等式&amp;#xff0c;那么第4-6位如果不满足第二个等式则后面的不需要继续判断&amp;#xff0c;下面同理&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] - a[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;] !&amp;#61; a[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;]) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;) {\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (a[&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;] * a[&lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;] !&amp;#61; a[&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;]) {\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n        }\n    }\n    &lt;span class=\"hljs-comment\"&gt;// 所有位都确定且四个等式都满足的情况下&amp;#xff0c;res加1代表符合条件&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(k&amp;gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;){\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(a[&lt;span class=\"hljs-number\"&gt;11&lt;/span&gt;]*a[&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;]&amp;#61;&amp;#61;a[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]) {\n            res&amp;#43;&amp;#43;;\n            &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; ;\n        }\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 前k位已经确认的情况下&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;k;i&amp;lt;&lt;span class=\"hljs-number\"&gt;13&lt;/span&gt;;i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-comment\"&gt;// 通过下面的交换将第k&amp;#43;1位先确定一下&amp;#xff08;循环多次即尝试其所有可能性&amp;#xff09;&amp;#xff0c;然后递归执行dfs(k&amp;#43;1)&lt;/span&gt;\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t&amp;#61;a[i];a[i]&amp;#61;a[k];a[k]&amp;#61;t;\n        &lt;span class=\"hljs-built_in\"&gt;dfs&lt;/span&gt;(k&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-comment\"&gt;// 进入下次循环前要将数组复原这样才能保证下次循环没有问题&lt;/span&gt;\n        t&amp;#61;a[i];a[i]&amp;#61;a[k];a[k]&amp;#61;t;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt;;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;dfs&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,res);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["关于#蓝桥杯#寒假作业的问题，如何解决？(语言-c语言)", ["1285: [蓝桥杯2016初赛]寒假作业", "\n", "题目描述", "现在小学的数学题目也不是那么好玩的。", "看看这个寒假作业：", "每个方块代表1~13中的某一个数字，但不能重复。", "比如：", "6  + 7 = 13", "9  - 8 = 1", "3  * 4 = 12", "10 / 2 = 5", "以及：", "7  + 6 = 13", "9  - 8 = 1", "3 * 4 = 12", "10 / 2 = 5", "就算两种解法。（加法，乘法交换律后算不同的方案）", "你一共找到了多少种方案？", "输出格式", "请填写表示方案数目的整数。", "\n", "\n", "#", "include", "<stdio.h>", "\n", "#", "define", " bool char", "\n", "#", "define", " true 1", "\n", "#", "define", " false 0", "\n", "bool", " num[", "13", "];\n", "int", " res=", "0", ";\n", "int", " a[", "13", "]={", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", "};\n\n", "bool", " ", "check", "()", "\n", "{\n    ", "if", "\n    ( a[", "0", "]+a[", "1", "] == a[", "2", "]  && a[", "3", "]-a[", "4", "]  == a[", "5", "]  && a[", "6", "]*a[", "7", "]  == a[", "8", "]  && a[", "11", "]*a[", "10", "] == a[", "9", "] )\n    {\n        ", "return", " ", "true", ";\n    }\n    ", "return", " ", "false", ";\n}\n", "void", " ", "dfs", "(", "int", " u)", "\n", "{\n    ", "if", "(u==", "13", ")\n    {\n        ", "if", "(", "check", "())\n        {\n            res++;\n        }\n        ", "return", ";\n    }\n    ", "int", " i;\n    ", "for", "(i=", "0", ";i<", "13", ";i++)\n    {\n        ", "if", "(num[i] == ", "false", ")\n        {\n            num[i] = ", "true", ";\n            a[u] = i+", "1", ";\n            ", "dfs", "(u+", "1", ");\n            num[i] = ", "false", ";\n        }\n    }\n    ", "return", ";\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "dfs", "(", "0", ");\n    \n    ", "printf", "(", "\"%d\"", ",res);\n    \n    ", "return", " ", "0", ";\n}\n", "\n", "不知道哪出问题了，能帮忙找找错吗？"]], "Tag": "算法设计"}
{"Answer": "我觉得你的for循环少了一步sum的重置0\r\n```\r\n #include \"stdio.h\"\r\nint main()\r\n{\r\n    int sum,r,s,t;//r--第一个乘号位置\r\n    //s--第二个乘号位置\r\n    sum=0;\r\n    for(r=1;r&lt;=46;r++)\r\n        for(s=r+2;s&lt;=48;s++)\r\n        {\r\n            for(t=1;t&lt;=49;t++)\r\n            {\r\n                if(t&lt;r)sum=sum+t;\r\n                if(t==r)\r\n                {\r\n                    sum=sum+(t*(t+1));\r\n                    t++;\r\n                }\r\n                if(t&gt;r+1 &amp;&amp; t&lt;s) sum=sum+t;\r\n                if(t==s)\r\n                {\r\n                    sum=sum+(t*(t+1));\r\n                    t++;\r\n                }\r\n                if(t&gt;s+1) sum=sum+t;\r\n            }\r\n            if(sum==2015)\r\n                printf(\"%d\\n\",r);\r\n\t\t\t\t\t\t\t\t//重置为0\r\n            sum=0;\r\n        }\r\n    \r\n    return 0;\r\n}\r\n```\r\n得到结果 \r\n10\r\n16", "Konwledge_Point": "乘法", "Question": ["问大神们一个C语言蓝桥杯的问题，跪求大神啊", ["加法变乘法", "\n\n", "我们都知道：1+2+3+ ... + 49 = 1225", "\n现在要求你把其中两个不相邻的加号变成乘号，使得结果为2015", "\n\n", "比如：", "\n1+2+3+...+10*11+12+...+27*28+29+...+49 = 2015", "\n就是符合要求的答案。", "\n\n", "请你寻找另外一个可能的答案，并把位置靠前的那个乘号左边的数字提交（对于示例，就是提交10）。", "\n\n", "注意：需要你提交的是一个整数，不要填写任何多余的内容。", "\n\n", "#include \"stdio.h\"", "\nvoid main()", "\n{", "\n   int sum,r,s,t;//r--第一个乘号位置", "\n                      //s--第二个乘号位置", "\n   sum=0;", "\n   for(r=1;r<=46;r++)", "\n     for(s=r+2;s<=48;s++)", "\n     {", "\n        for(t=1;t<=49;t++)", "\n        {", "\n            if(t\n              sum=sum+t;", "\n            if(t==r)", "\n            {", "\n                sum=sum+(t*(t+1));", "\n                t++;", "\n            }", "\n            if(t>r+1&&t\n              sum=sum+t;", "\n            if(t==s)", "\n            {", "\n                sum=sum+(t*(t+1));", "\n                t++;", "\n            }", "\n            if(t>s+1)  sum=sum+t;", "\n        }", "\n        if(sum==2015)", "\n          printf(\"%d\\n\",r);", "\n     } ", "\n}", "\n请问为什么我的程序运行不出结果，为什么我没有sum=2015的结果"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;\npackage cn.tedu.max;\n\nimport java.util.Scanner;\n\npublic class Computer {\n    public static Scanner scan &amp;#61; new Scanner(System.in);\n    //实现加减乘除的简单计算\n    public static void main(String[] args) {\n        //功能列表\n        System.out.println(&amp;#34;请输入数字选择需要使用的功能&amp;#34;);\n        System.out.println(&amp;#34;1.加法功能&amp;#34;);\n        System.out.println(&amp;#34;2.减法功能&amp;#34;);\n        System.out.println(&amp;#34;3.乘法功能&amp;#34;);\n        System.out.println(&amp;#34;4.除法功能&amp;#34;);\n        System.out.println(&amp;#34;---------------------&amp;#34;);\n\n        //告知已选择功能\n\n        int selectNumber &amp;#61; scan.nextInt();\n\n        System.out.println(&amp;#34;请输入需要计算的数字&amp;#34;);\n        double input1 &amp;#61; scan.nextInt();\n        double input2 &amp;#61; scan.nextInt();\n\n        switch (selectNumber) {\n            case 1:\n                System.out.print(&amp;#34;已经选择加法功能&amp;#34;);\n                double app1 &amp;#61; addition(input1, input2);\n                System.out.println(&amp;#34;结果为&amp;#34; &amp;#43; app1);\n                break;\n\n            case 2:\n                System.out.print(&amp;#34;已经选择减法功能&amp;#34;);\n                double app2 &amp;#61; subsract(input1,input2);\n                System.out.println(&amp;#34;结果为&amp;#34; &amp;#43; app2);\n                break;\n\n            case 3:\n                System.out.print(&amp;#34;已经选择乘法功能&amp;#34;);\n                double app3 &amp;#61; multiply(input1,input2);\n                System.out.println(&amp;#34;结果为&amp;#34; &amp;#43; app3);\n                break;\n\n            case 4:\n                System.out.print(&amp;#34;已经选择除法功能&amp;#34;);\n                double app4 &amp;#61; divide(input1,input2);\n                System.out.println(&amp;#34;结果为&amp;#34; &amp;#43; app4);\n                break;\n\n            default:\n                System.out.print(&amp;#34;输入不合法&amp;#34;);\n\n        }\n\n\n    }\n\n    //加法\n    public static double addition(double input1, double input2) {\n        double result &amp;#61; input1 &amp;#43; input2;\n        return result;\n    }\n\n\n    //减法\n    public static double subsract(double input1, double input2) {\n        double result &amp;#61; input1 - input2;\n        return result;\n\n    }\n\n\n    //乘法\n    public static double multiply(double input1, double input2) {\n        double result &amp;#61; input1 * input2;\n        return result;\n    }\n\n    //除法\n    public static double divide(double a, double b) {\n        if (b &amp;#61;&amp;#61; 0) {\n            System.out.println(&amp;#34;除数不能为零&amp;#34;);\n            return 0;\n        }\n\n        double result &amp;#61; a / b;\n        return result;\n\n    }\n}\n&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["救救孩子！！萌新被卡住了", ["问题描述：实现一个简单的加减乘除，但是不知道如何根据用户的输入来调用不同的方法", "\n", "\n ", "\n\n", "package for01;", "\nimport java.util.Scanner;", "\n\n", "public class computer {", "\n//实现加减乘除的简单计算", "\n    public static void main(String[] args) {", "\n        // TODO Auto-generated method stub", "\n        //功能列表", "\n        System.out.println(\"请输入数字选择需要使用的功能\");", "\n        System.out.println(\"1.加法功能\");", "\n        System.out.println(\"2.减法功能\");", "\n        System.out.println(\"3.乘法功能\");", "\n        System.out.println(\"4.除法功能\");", "\n        System.out.println(\" \");", "\n        ", "\n        //告知已选择功能", "\n        ", "\n        Scanner scan = new Scanner(System.in);", "\n        int listnumber = scan.nextInt();", "\n        switch(listnumber)", "\n        {", "\n        case 1:", "\n            System.out.print(\"已经选择加法功能\");", "\n            break;", "\n            ", "\n        case 2:", "\n            System.out.print(\"已经选择减法功能\");", "\n            break;", "\n            ", "\n        case 3:", "\n            System.out.print(\"已经选择乘法功能\");", "\n            break;", "\n            ", "\n        case 4:", "\n            System.out.print(\"已经选择除法功能\");", "\n            break;", "\n            ", "\n        default:", "\n            System.out.print(\"输入不合法\");", "\n            ", "\n        }", "\n        ", "\n        ", "\n        ", "\n        System.out.println(\"请输入需要计算的数字\");", "\n        ", "\n        float input1= scan.nextInt();", "\n        float input2= scan.nextInt();", "\n        float app = add1(input1,input2);", "\n        System.out.println(\"结果为\"+app);", "\n        ", "\n        ", "\n        ", "\n    }", "\n\n", "//加法", "\npublic static float add1(float input1,float input2) {", "\n    float result = input1 + input2;", "\n    return result;", "\n}", "\n\n", "\n//减法", "\npublic static float add2(float input1,float input2) {", "\n    float result = input1 - input2;", "\n    return result;", "\n    ", "\n}", "\n\n", "\n//乘法", "\npublic static float add3(float input1,float input2) {", "\n    float result = input1 * input2;    ", "\n    return result;", "\n}", "\n\n", "//除法", "\npublic static float add4(float a,float b) {", "\n    if(b==0) {", "\n        System.out.println(\"除数不能为零\");", "\n        return 0;", "\n    }", "\n    ", "\n    float result = a/b;", "\n    return result;", "\n    ", "\n  }", "\n\n", " ", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;\nfor i &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;151&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;):\n    &lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;&amp;#43;&amp;#61;i\n&lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-built_in\"&gt;sum&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/1625124943192image.png\" alt=\"img\" /&gt;&lt;/p&gt;\n&lt;p&gt;2.&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;&lt;span class=\"hljs-variable\"&gt;l&lt;/span&gt;&amp;#61;[]\n&lt;span class=\"hljs-variable\"&gt;for&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;i&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;&lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;range&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;6&lt;/span&gt;):\n    &lt;span class=\"hljs-variable\"&gt;l.append&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;int&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;()))&lt;/span&gt;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-title\"&gt;sorted&lt;/span&gt;(&lt;span class=\"hljs-variable\"&gt;l&lt;/span&gt;))&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;img src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/1625125090847image.png\" alt=\"img\" /&gt;&lt;/p&gt;\n&lt;p&gt;其他的大部分都能搜到&amp;#xff0c;哪个不会可以再问我&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["九题基础python小程序", ["九题python", "\n", "1.编写程序，计算s=1+3+7+13+21+...+i (其中，i<=150)。 要求：输出结果s。\n2.编写程序，创建一个空列表，用循环的方法向列表中添加6个元素，用循环的方法输出录入的数据；对数据排序，输出排序后的数据。要求：按题干要求的过程完成。\n3.创建一个函数判断一个数是否为素数，调用该函数完成200~300范围内的素数输出。\n4.列表操作（创建一个课程列表（语文，数学，英语，文综），添加一个元素(理综)，删除其中一个元素(文综)），最后用循环方法输出整个列表的每一个元素。考核点：创建列表，添加元素，删除元素，遍历列表。\n5.编写程序：解决百钱百鸡问题（用100元，买100只鸡，公鸡1只5元，母鸡1只3元，小鸡3只1元）\n6.编写程序：输出九九乘法表考核点：多重循环。\n7．   { 3x-10  x>0  编写程序，计算分段函数 y={ 2x+12  x<0              { x-1   x=0\n8. 编写一个程序，处理储蓄账户取款问题，要求输入账户余额与取款额，输出取款后余额。如果取款额大于余额，输出“余额不足，不能取款！”；如果取款后余额小于100元，输出“余额不足100元！”。\n9. 编写一个名为 favorite_book() 的函数，其中包含一个名为 title 的形参。这个函数打印一条消息，如 “我最喜欢的一本书是 【书名】”。调用这个函数，并将一本图书的名称作为实参传递给它。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-python\"&gt;&lt;span class=\"hljs-keyword\"&gt;import&lt;/span&gt; re\n\ntxt &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;&amp;#39;&amp;#39;运算符    描述    示例\n&amp;#43;    相加    a &amp;#43; b\n-    相减    a - b\n*    相乘    a * b\n/    相除    a / b\n%    取模    a % b\n**    幂    a**b 表示 a 的 b 次幂\n//    取整除    9 // 4 结果为 2\n&amp;#61;&amp;#61;    是否相等    a &amp;#61;&amp;#61; b\n!&amp;#61;    是否不等于    a !&amp;#61; b\n&amp;gt;    是否大于    a &amp;gt; b\n&amp;gt;&amp;#61;    是否大于等于    a &amp;gt;&amp;#61; b\n&amp;lt;&amp;#61;    是否小于等于    a &amp;lt;&amp;#61; b\n&amp;#61;    简单的赋值运算符    a &amp;#61; b &amp;#43; c\n&amp;#43;&amp;#61;    加法赋值运算符    a &amp;#43;&amp;#61; b 等效于 a &amp;#61; a &amp;#43; b\n-&amp;#61;    减法赋值运算符    a -&amp;#61; b 等效于 a &amp;#61; a - b\n*&amp;#61;    乘法赋值运算符    a *&amp;#61; b 等效于 a &amp;#61; a * b\n/&amp;#61;    除法赋值运算符    a /&amp;#61; b 等效于 a &amp;#61; a / b\n%&amp;#61;    取模赋值运算符    a %&amp;#61; b 等效于 a &amp;#61; a % b\n**&amp;#61;    幂赋值运算符    a **&amp;#61; b 等效于 a &amp;#61; a ** b\n//&amp;#61;    取整除赋值运算符    a //&amp;#61; b 等效于 a &amp;#61; a // b\n&amp;amp;    与    a &amp;amp; b\n|    或    a | b\n^    异或    a ^ b\n~    取反    ~a\n&amp;lt;&amp;lt;    左移动    a &amp;lt;&amp;lt; 3\n&amp;gt;&amp;gt;    右移动    a &amp;gt;&amp;gt; 3\nand    布尔类型与    a and b\nor    布尔类型或    a or b\nnot    布尔类型非    not a\nis    判断两个标识符是否引用同一个对象    a is b\nis not    判断两个标识符是否引用不同对象    a is not &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;\n\nsgn &amp;#61; [s.split() &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; s &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; txt.split(&lt;span class=\"hljs-string\"&gt;&amp;#39;\\n&amp;#39;&lt;/span&gt;)]\n\ndic &amp;#61; {d[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]:&lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;.join(d[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:]) &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; d &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; sgn[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:]}\n\nexp &amp;#61; &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;()\n\n&lt;span class=\"hljs-keyword\"&gt;try&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;表达式&amp;#xff1a;&amp;#39;&lt;/span&gt;, exp)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;结  果&amp;#xff1a;&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-built_in\"&gt;eval&lt;/span&gt;(exp))\n    exp &amp;#61; re.sub(&lt;span class=\"hljs-string\"&gt;r&amp;#39;(\\d&amp;#43;)&amp;#39;&lt;/span&gt;, &lt;span class=\"hljs-string\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;, exp)\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;运算符&amp;#xff1a;&amp;#39;&lt;/span&gt;)\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; e &lt;span class=\"hljs-keyword\"&gt;in&lt;/span&gt; exp.split():\n        &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(e, dic[e])\n&lt;span class=\"hljs-keyword\"&gt;except&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;print&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#39;输入的表达式错误&amp;#xff0c;无法计算结果&amp;#39;&lt;/span&gt;)\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["input输入算式，显示结果，并且查询到相应的提示怎么做？", ["a", "=input() ", "#控制台输入5+3", "\nprint(", "a", ") ", "#print打印a的内容，显示5+3=8或者8", "\n\\n 显示：+ 相加 ", "a", "+b\n输入：", "3", "** 显示", "3", "**=__，或者__。\n\\n 显示：**    幂    ", "a", "**b 表示 ", "a", " 的 b 次幂\n", "\n", "运算符    描述    示例\n+    相加    a + ", "b", "\n-    相减    a - ", "b", "\n*    相乘    a * ", "b", "\n/    相除    a / ", "b", "\n%    取模    a % ", "b", "\n**    幂    a**", "b", " 表示 a 的 ", "b", " 次幂\n", "//    取整除    9 // 4 结果为 2", "\n==    是否相等    a == ", "b", "\n!=    是否不等于    a != ", "b", "\n>    是否大于    a > ", "b", "\n>=    是否大于等于    a >= ", "b", "\n<=    是否小于等于    a <= ", "b", "\n=    简单的赋值运算符    a = ", "b", " + c\n+=    加法赋值运算符    a += ", "b", " 等效于 a = a + ", "b", "\n-=    减法赋值运算符    a -= ", "b", " 等效于 a = a - ", "b", "\n*=    乘法赋值运算符    a *= ", "b", " 等效于 a = a * ", "b", "\n/=    除法赋值运算符    a /= ", "b", " 等效于 a = a / ", "b", "\n%=    取模赋值运算符    a %= ", "b", " 等效于 a = a % ", "b", "\n**=    幂赋值运算符    a **= ", "b", " 等效于 a = a ** ", "b", "\n", "//=    取整除赋值运算符    a //= b 等效于 a = a // b", "\n&    与    a & ", "b", "\n", "|    或    a |", " ", "b", "\n^    异或    a ^ ", "b", "\n~    取反    ~a\n<<    左移动    a << ", "3", "\n>>    右移动    a >> ", "3", "\n", "and", "    布尔类型与    a ", "and", " ", "b", "\n", "or", "    布尔类型或    a or ", "b", "\n", "not", "    布尔类型非    not a\n", "is", "    判断两个标识符是否引用同一个对象    a is ", "b", "\n", "is", " not    判断两个标识符是否引用不同对象    a is not b\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这代码问题多了&lt;br /&gt;1.除法没有判断除数不为0&lt;br /&gt;2.该用switch要用switch&amp;#xff0c;不要写一大堆if&amp;#xff0c;else&amp;#xff0c;而且你最后一个if改为else多好&amp;#xff0c;这么写不累吗&amp;#xff0c;改switch那么最后一个if可以用default代替&lt;br /&gt;3.乘方可以调用pow来做&lt;br /&gt;4.for(t; t&amp;gt;1; i--)这是啥玩意&amp;#xff0c;标准死循环&lt;br /&gt;5.先写伪代码&amp;#xff0c;感觉逻辑没问题了再翻译成代码&amp;#xff0c;你写了一大堆&amp;#xff0c;自己都绕晕了&amp;#xff0c;根本搞不清干了什么&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["纯纯初学者，之前做了一个C语言的计算器，有什么问题吗？", ["#include<stdio.h>", "int main()", "{", "    int num1, num2, sum;", "    char ys, a;", "    int i, j, cf, t;", "    i = 0;", "    j = 0;", "    printf(\"请输入数字。\\n\");", "    for (;;)", "    {", "        scanf(\"%d%c%d\", &num1, &ys, &num2);", "        if (ys == '+')//加法", "        {", "            sum = num1 + num2;", "        }", "        else if (ys == '-')//减法", "        {", "            sum = num1 - num2;", "        }", "        else if (ys == '", "')//乘法", "        {", "            sum = num1 * num2;", "        }", "        else if (ys == '/')//除法", "        {", "            sum = num1 / num2;", "        }", "        else if (ys == '^')//次方", "        {", "            i = num2;", "            cf = num1;", "            for (i; i > 1; i--)", "            {", "                sum = cf * num1;", "                cf = sum;", "            }", "        }", "        else if(ys!='^'&&ys!='/'&&ys!='", "'&&ys!='-'&&ys!='+')//输入其他符号", "        {", "            printf(\"您输入的符号错误，请重新输入。\\n\");", "            t=1;", "            continue;", "        }", "        else", "        {", "            printf(\"%d\\n\", sum);", "        }", "        for(t; t>1; i--)", "        {", "            printf(\"继续请输入o或退出请输入x。\\n\");", "        }", "        scanf(\"%c\", &a);", "        if (a == 'o')//继续", "        {", "            printf(\"请输入数字。\\n\");", "            i++;", "            continue;", "        }", "        else if (a == 'x')//退出", "        {", "            return 0;", "        }", "    }", "    return 0;", "}"]], "Tag": "算法设计"}
{"Answer": "```\r\nif (*d != '*' || *d != '-')throw *d;\r\n-&gt;\r\nif (*d != '*' &amp;&amp; *d != '-')throw *d;\r\n你的意思应该是如果不是+-*/，那么报错，因此是and\r\n```", "Konwledge_Point": "乘法", "Question": ["关于try...catch的问题", ["我fuc()函数出了错，但我不明白为什么", "\n\n", "#include \"pch.h\"\n#include <iostream>\nusing namespace std;\nvoid a(double a,double b,double *add) {\n    *add = a + b;\n}\nvoid ja(double a, double b, double *jian) {\n    *jian = a - b;\n}\nvoid m(double a, double b, double *chen) {\n    *chen = a * b;\n}\nvoid c(double a, double b, double *chu) {\n    *chu = a / b;\n}\ndouble fuc(double a, char *d, double b)\n{\n    if (*d = '/'&&b == 0)\n        throw b;\n\n    else if (*d != '/' || *d != '+')\n    {\n        if (*d != '*' || *d != '-')throw *d;\n        else return 0;\n    }\n\n\n}\nint main()\n{\n    double *s1 = NULL;\n    s1 = new double;\n    char d;\n    double x, y;\n    cout << \"请输入计算式:\";\n    cin >> x>>d>>y;\n    try\n    {\n        fuc(x,&d,y);\n        if (d == '+')\n        {\n            a(x, y, s1);\n            cout << \"加法：\" << *s1;\n        }\n        else if (d == '-') {\n            ja(x, y, s1);\n            cout << \"减法：\" << *s1;\n        }\n        else if (d == '*') {\n            m(x, y, s1);\n            cout << \"乘法：\" << *s1;\n        }\n        else if (d == '/') {\n            c(x, y, s1);\n            cout << \"除法：\" << *s1;\n        }\n\n    }\n    catch (double)\n    {\n        cout << \"请输入正确的算式！！！\";\n        exit(1);\n    }\n\n\n\n\n    return 0;\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;input7是一个对象数组 你个某个对象属性赋值 得先有这个对象才有这个属性。&lt;br /&gt;var complex&amp;#61;new Complex();&lt;br /&gt;complex.Real&amp;#61;real[i];&lt;br /&gt;complex.Image&amp;#61;imag[i];&lt;br /&gt;input[7]&amp;#61; complex;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["给复数赋值时出现Object reference not set to an instance of an object问题", ["请问大噶，这段代码想给复数的实部与虚部赋值，但是一直出现这种错误是为什么？", "下面是关于复数类的定义", "using System;", "using System.Collections.Generic;", "using System.Text;", "\n", "namespace ems004", "{", "    //复数类的一个定义", "    public class Complex", "    {", "        public Complex()", "    : this(0, 0)", "        {", "        }", "\n", "    ", "///", " ", "<summary>", "\n    ", "///", " 只有实部的构造函数", "\n    ", "///", " ", "</summary>", "\n    ", "///", " ", "<param name=\"real\">", "实部", "</param>", "\n    ", "public", " ", "Complex", "(", "double", " real", ")\n        : ", "this", "(", "real, ", "0", ")", " { }\n\n    ", "///", " ", "<summary>", "\n    ", "///", " 由实部和虚部构造", "\n    ", "///", " ", "</summary>", "\n    ", "///", " ", "<param name=\"real\">", "实部", "</param>", "\n    ", "///", " ", "<param name=\"image\">", "虚部", "</param>", "\n    ", "public", " ", "Complex", "(", "double", " real, ", "double", " image", ")", "\n    {\n        ", "this", ".real = real;\n        ", "this", ".image = image;\n    }\n\n    ", "private", " ", "double", " real;\n    ", "///", " ", "<summary>", "\n    ", "///", " 复数的实部", "\n    ", "///", " ", "</summary>", "\n    ", "public", " ", "double", " Real\n    {\n        ", "get", " { ", "return", " real; }\n        ", "set", " { real = ", "value", "; }\n    }\n\n    ", "private", " ", "double", " image;\n    ", "///", " ", "<summary>", "\n    ", "///", " 复数的虚部", "\n    ", "///", " ", "</summary>", "\n    ", "public", " ", "double", " Image\n    {\n        ", "get", " { ", "return", " image; }\n        ", "set", " { image = ", "value", "; }\n    }\n\n    ", "///", "重载加法", "\n    ", "public", " ", "static", " Complex ", "operator", " +(Complex c1, Complex c2)\n    {\n        ", "return", " ", "new", " Complex(c1.real + c2.real, c1.image + c2.image);\n    }\n\n    ", "///", "重载减法", "\n    ", "public", " ", "static", " Complex ", "operator", " -(Complex c1, Complex c2)\n    {\n        ", "return", " ", "new", " Complex(c1.real - c2.real, c1.image - c2.image);\n    }\n\n    ", "///", "重载乘法", "\n    ", "public", " ", "static", " Complex ", "operator", " *(Complex c1, Complex c2)\n    {\n        ", "return", " ", "new", " Complex(c1.real * c2.real - c1.image * c2.image, c1.image * c2.real + c1.real * c2.image);\n    }\n\n\n    ", "///", " ", "<summary>", "\n    ", "///", " 求复数的模", "\n    ", "///", " ", "</summary>", "\n    ", "///", " ", "<returns>", "模", "</returns>", "\n    ", "public", " ", "double", " ", "ToModul", "(", ")", "\n    {\n        ", "return", " Math.Sqrt(real * real + image * image);\n    }\n}\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;放入循环&amp;#xff0c;然后case 24&amp;#xff1a;break改成return 0即可。&lt;/p&gt;\n\n&lt;p&gt;如下&amp;#xff1a;&lt;/p&gt;\n\n&lt;pre&gt;\n&lt;code&gt;int main(){\n\tcout&amp;lt;&amp;lt;&amp;#34;************************************************&amp;#34;&amp;lt;&amp;lt;endl;\n\tcout&amp;lt;&amp;lt;&amp;#34;*            1 加法                            *&amp;#34;&amp;lt;&amp;lt;endl;\n\tcout&amp;lt;&amp;lt;&amp;#34;*            2 减法                            *&amp;#34;&amp;lt;&amp;lt;endl;\n\tcout&amp;lt;&amp;lt;&amp;#34;*            3 乘法                            *&amp;#34;&amp;lt;&amp;lt;endl;\n\tcout&amp;lt;&amp;lt;&amp;#34;*            4 除法                            *&amp;#34;&amp;lt;&amp;lt;endl;\n\tcout&amp;lt;&amp;lt;&amp;#34;*            5 判断数字的位数                  *&amp;#34;&amp;lt;&amp;lt;endl;\n\tcout&amp;lt;&amp;lt;&amp;#34;*            6 计算圆面积                      *&amp;#34;&amp;lt;&amp;lt;endl;\n\t//中略\n\tcout&amp;lt;&amp;lt;&amp;#34;*            24 退出                           *&amp;#34;&amp;lt;&amp;lt;endl;\n\tcout&amp;lt;&amp;lt;&amp;#34;************************************************&amp;#34;&amp;lt;&amp;lt;endl;\n\tint i;\n\twhile(true)\n\t{\n\t\tcout&amp;lt;&amp;lt;&amp;#34;您将进行的操作&amp;#xff1a;&amp;#34;;\n\t\tcin&amp;gt;&amp;gt;i;\n\t\tswitch(i){\n\t\t\tcase 1:fun1();break;\n\t\t\tcase 2:fun2();break;\n\t\t\tcase 3:fun3();break;\n\t\t\tcase 4:fun4();break;\n\t\t\tcase 5:fun5();break;\n\t\t\tcase 6:fun6();break;\n\t\t\t\t//中略\n\t\t\tcase 24:cout&amp;lt;&amp;lt;&amp;#34;欢迎下次使用&amp;#xff01;&amp;#34;&amp;lt;&amp;lt;endl;return 0;\n\t\t\tdefault:cout&amp;lt;&amp;lt;&amp;#34;请输入数字1~24&amp;#34;&amp;lt;&amp;lt;endl;  \t\n\t\t}\n\t}\n\t\n\treturn 0;\n} \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c++请问怎样使一个计算多次运行 选择退出才退出呢", ["c++小小计算机作业，主函数如下，只能是一次运行一种运算，然后直接退出，请问怎样在一次运算结束后接着选择下一种运算呢？求解答，感谢感谢感谢！~", "\n\n", "\n", "int main(){\n           cout<<\"************************************************\"<<endl;\n           cout<<\"*            1 加法                            *\"<<endl;\n           cout<<\"*            2 减法                            *\"<<endl;\n           cout<<\"*            3 乘法                            *\"<<endl;\n           cout<<\"*            4 除法                            *\"<<endl;\n           cout<<\"*            5 判断数字的位数                  *\"<<endl;\n           cout<<\"*            6 计算圆面积                      *\"<<endl;\n           //中略\n\t   cout<<\"*            24 退出                           *\"<<endl;\n           cout<<\"************************************************\"<<endl;\n           int i;\n           cout<<\"您将进行的操作：\";\n           cin>>i;\n           switch(i){\n           \tcase 1:fun1();break;\n                case 2:fun2();break;\n           \tcase 3:fun3();break;\n           \tcase 4:fun4();break;\n           \tcase 5:fun5();break;\n           \tcase 6:fun6();break;\n                //中略\n\t\tcase 24:cout<<\"欢迎下次使用！\"<<endl;break;\n           \tdefault:cout<<\"请输入数字1~24\"<<endl;  \t\n\t\t}\n\t        return 0;\n} \n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;surecallback函数里为什么要用for循环&amp;#xff1f;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    for count in range(1, 11):&lt;/span&gt;&lt;br /&gt;这样只有第一次判断的时候有效&amp;#xff0c;判断结束后&amp;#xff0c;entry01.delete(0, tk.END) 就把输入框清空&amp;#xff0c;但是没有退出for循环&amp;#xff0c;所以 result &amp;#61; int(entry01.get()) 里是空字符串&amp;#xff0c;无法转成整数&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["gui界面设计出现了“invalid literal for int() with base 10: ”的问题。", ["用pycharm做python的gui界面，利用entry.get（）得到键盘输入的答案时，出现了", "File \"D:\\pycharm\\djangoProject3\\multi_gui.py\", line 121, in surecallback", "    result = int(entry01.get())", "ValueError: invalid literal for int() with base 10: ''的报错", "\n", "困惑：搞不懂自己哪里输入了编译不了的值，系统要报错，不过结果又正常……", "\n", "import tkinter as tk\n\nimport random\n\nimport time\n\nwindow = tk.Tk()\n\nscore = 0\n\ncount = 1\n\na = random.randint(1, 9)\n\nb = random.randint(1, 9)\n\nmul01 = tk.StringVar()\n\nmul01.", "set", "(str(a))\n\nmul02 = tk.StringVar()\n\nmul02.", "set", "(str(b))\n\ncount_title = tk.StringVar()\n\ncount_title.", "set", "(", "'第1道题'", ")\n\nscore_lab = tk.StringVar()\n\nscore_lab.", "set", "(", "'0'", ")\n\nanswer_lab = tk.StringVar()\n\n\ngameover = tk.StringVar()\n\ngameover.", "set", "(", "\"共测试10道乘法，每题10分，总分100分\"", ")\n\nwindow.title(", "\"乘法口诀测试\"", ")\n\nwindow.geometry(", "'600x500'", ")\n\nwindow[", "\"background\"", "] = ", "\"LightCyan\"", "\n\ntitle01 = tk.Label(window,\n\n                   ", "textvariable", "=gameover,\n\n                   font=(", "'华文行楷'", ", 15),\n\n                   ", "bg", "=", "'SpringGreen'", ")\n\ntitle01.place(", "x", "=120, ", "y", "=30)\n\nlabel01 = tk.Label(window,\n\n                   ", "textvariable", "=count_title,\n\n                   font=(", "'华文行楷'", ", 20),\n\n                   ", "bg", "=", "'hotpink'", ")  # 第N道题\n\nlabel01.place(", "x", "=100, ", "y", "=100)\n\ntitle02 = tk.Label(window, ", "text", "=", "\"请输入答案：\"", ", font=(", "'华文行楷'", ", 20),\n\n                   ", "bg", "=", "'hotpink'", ")\n\ntitle02.place(", "x", "=80, ", "y", "=250)\n\ntitle03 = tk.Label(window,\n\n                   ", "textvariable", "=score_lab,\n\n                   font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 分数lab\n\ntitle03.place(", "x", "=340, ", "y", "=400)\n\n\ntitle04 = tk.Label(window, ", "text", "=", "\"得分：\"", ", font=(", "'华文行楷'", ", 28), ", "bg", "=", "'hotpink'", ")  # 得分lab\n\ntitle04.place(", "x", "=190, ", "y", "=400)\n\ntitle05 = tk.Label(window, ", "textvariable", "=answer_lab, font=(", "'华文行楷'", ", 28), ", "bg", "=", "'hotpink'", ")  # 得分lab\n\ntitle05.place(", "x", "=220, ", "y", "=450)\n\nentry01 = tk.Entry(window, ", "textvariable", "=0, ", "width", "=10, font=(", "'华文行楷'", ", 20), ", "show", "=None)  # 文本输入框\n\nentry01.place(", "x", "=300, ", "y", "=250)\n\nlabel02 = tk.Label(window, ", "textvariable", "=mul01, font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 被乘数lab\n\nlabel02.place(", "x", "=180, ", "y", "=175)\n\nlabel03 = tk.Label(window, ", "textvariable", "=mul02, font=(", "'华文行楷'", ", 28),\n\n                   ", "bg", "=", "'hotpink'", ")  # 乘数lab\n\nlabel03.place(", "x", "=340, ", "y", "=175)\n\nimgLabel = tk.Label(window, ", "text", "=", "'X'", ", font=(", "'黑体'", ", 28),\n\n                    ", "bg", "=", "'hotpink'", ")  # 乘号标签\n\nimgLabel.place(", "x", "=263, ", "y", "=170)\n\n\ndef surecallback():\n    global a, b, count\n\n    ", "for", " count ", "in", " range(1, 11):\n\n        product = a * b\n\n        result = int(entry01.", "get", "())\n\n        ", "if", " result == product:\n\n            global score\n\n            score = score + 10\n\n            score_lab.", "set", "(str(score))\n\n            answer_lab.", "set", "(", "\"答对了\"", ")\n\n        ", "else", ":\n\n            answer_lab.", "set", "(", "\"答错了\"", ")\n\n        entry01.delete(0, tk.END)\n\n        a = random.randint(1, 9)\n\n        b = random.randint(1, 9)\n\n        mul01.", "set", "(str(a))\n\n        mul02.", "set", "(str(b))\n\n        count = count + 1\n\n        c = ", "'第'", " + str(count) + ", "'道题'", "\n\n        count_title.", "set", "(c)\n\n    gameover.", "set", "(", "'测试已结束！'", ")\n    count_title.", "set", "(", "'第1道题'", ")\n\n\nbutton01 = tk.Button(", "text", "=", "'确认'", ",\n\n                     font=(", "'华文行楷'", ", 20),\n\n                     ", "width", "=8,\n\n                     ", "height", "=1,\n\n                     ", "command", "=surecallback)\n\nbutton01.place(", "x", "=230, ", "y", "=310)\n\nwindow.mainloop()\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;设立个数组保存加减乘除次数&amp;#xff0c;switch(mode) 里面里增加数量&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言 对运算式个数的统计", ["\n", "列举一百个题目，计算正确率会", "这个问题不知道该怎么把统计加减乘除的个数，应该放到哪里？", "请求指点、能给出代码 放到哪里最好", "谢谢", "\n", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<time.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a = ", "0", ";\n    ", "int", " b = ", "0", ";\n    ", "int", " mode = ", "0", ";", "//0:加  1:减   2:乘  3:除", "\n    ", "int", " c = ", "0", ";\n    ", "int", " result = ", "0", ";\n    ", "int", " score = ", "0", ";\n    ", "int", " i = ", "0", ";\n    ", "srand", "((", "unsigned", ")", "time", "( ", "NULL", " ) ); ", "//初始化随机数发生器，使得每次运行生成的随机数不同", "\n    ", "for", "(i=", "0", ";i<", "99", ";i++) ", "//做99题", "\n    {\n        a = ", "rand", "() % ", "99", "; ", "//生成一个0~99之间的随机数", "\n        b = ", "rand", "() % ", "99", ";  ", "//生成一个0~99之间的随机数", "\n        mode = ", "rand", "() % ", "4", "; ", "//生成一个0~3之间的随机数，代表运算符", "\n        ", "printf", "(", "\"%d\"", ", a);   ", "//打印算式", "\n        ", "switch", "(mode) ", "//确定运算符", "\n        {\n        ", "case", " ", "0", ":\n            ", "printf", "(", "\"+\"", ");\n            result= a + b;   ", "//加法运算的正确答案", "\n            ", "break", ";\n        ", "case", " ", "1", ":\n            ", "printf", "(", "\"-\"", ");\n            result= a - b;   ", "//减法运算的正确答案", "\n            ", "break", ";\n        ", "case", " ", "2", ":\n            ", "printf", "(", "\"*\"", ");\n            result= a * b;   ", "//乘法运算的正确答案", "\n            ", "break", ";\n        ", "case", " ", "3", ":\n            ", "if", "(b==", "0", ")\n            {\n            b =", "1", ";\n            }                ", "//除数不为0", "\n            ", "printf", "(", "\"/\"", ");\n            result= a / b;   ", "//除法运算的正确答案", "\n            ", "break", ";\n        ", "default", ":\n            ", "printf", "(", "\"something is wrong!\\n\"", ");\n            ", "break", ";\n        }\n        ", "printf", "(", "\"%d = \"", ", b);\n        ", "scanf", "(", "\"%d\"", ", &c); ", "//输入答案", "\n        ", "if", "(c == result) ", "//与正确答案一致", "\n        {\n            score+= ", "1", ";  ", "//答对的题数", "\n            ", "printf", "(", "\"Right\\n\\n\"", ");\n        }\n        ", "else", "\n        {\n            ", "printf", "(", "\"Wrong\\n\\n\"", "); ", "//答错", "\n        }\n    }\n    ", "printf", "(", "\"Yourscore is: %d\\n\\n\\n\"", ", score);", "//显示99道题中答对的题数", "\n    ", "return", " ", "1", ";\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;问题呢&lt;br /&gt;又一个把这里当博客分享代码的吗&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C++涉及抽象类、多态、虚函数和纯虚函数实现的计算器出现停止工作", ["Dev c++环境下运行的c++代码。编译运行时显示“已停止工作”。", "\n", "\n", "#", "include", "<iostream>", "\n", "using", " ", "namespace", " std;\n\n", "//计算器", "\n", "class", " ", "Calculator", "\n{\n", "public", ":\n    ", "void", " ", "setA", "(", "int", " a)", "\n    ", "{\n        ", "this", "->mA=a;\n    }\n    ", "void", " ", "setB", "(", "int", " b)", "\n    ", "{\n        ", "this", "->mB=b;\n    }\n    ", "void", " ", "setOperator", "(string oper)", "\n    ", "{\n        ", "this", "->mOperator = oper;\n    }\n    ", "int", " ", "getResult", "()", "\n    ", "{\n        ", "if", "(", "this", "->mOperator == ", "\"+\"", ")\n        {\n            ", "return", " mA+mB; \n        }\n        ", "else", " ", "if", "(", "this", "->mOperator == ", "\"-\"", ")\n        {\n            ", "return", " mA-mB;\n        }\n        ", "else", " ", "if", "(", "this", "->mOperator == ", "\"*\"", ")\n        {\n            ", "return", " mA*mB;\n        }\n        ", "else", " ", "if", "(", "this", "->mOperator == ", "\"/\"", ")\n        {\n            ", "return", " mA/mB;\n        }\n    }\n", "private", ":\n    ", "int", " mA;\n    ", "int", " mB;\n    string mOperator;\n}; \n\n", "//这种程序不利于扩展，维护困难，如果修改功能或者扩展功能需要在 源代码基础上修改", "\n", "//面向对象程序设计一个基本原则:开闭原则（对修改关闭，对扩展开放）", "\n\n", "//抽象基类", "\n", "class", " ", "AbstractCalculator", "\n{\n", "public", ":\n    ", "void", " ", "setA", "(", "int", " a)", "\n    ", "{\n        ", "this", "->mA = a;\n    }\n    ", "virtual", " ", "void", " ", "setB", "(", "int", " b)", "\n    ", "{\n        ", "this", "->mB=b;\n    }\n    ", "virtual", " ", "int", " ", "getResult", "()", "=", "0", ";\n    \n", "protected", ":\n    ", "int", " mA;\n    ", "int", " mB;\n    string mOperator;\n}; \n\n", "//加法计算器", "\n", "class", " ", "PlusCalculator", ":", "public", " AbstractCalculator\n{\n", "public", ":\n    ", "virtual", " ", "int", " ", "getResult", "()", "\n    ", "{\n        ", "return", " mA+mB;\n    }\n};\n\n", "//减法计算器", "\n", "class", " ", "MinusCalculator", ":", "public", " AbstractCalculator\n{\n", "public", ":\n    ", "virtual", " ", "int", " ", "getResult", "()", "\n    ", "{\n        ", "return", " mA-mB;\n    }\n};\n\n", "//乘法计算器", "\n", "class", " ", "MultipliesCalculator", ":", "public", " AbstractCalculator\n{\n", "public", ":\n    ", "virtual", " ", "int", " ", "getResult", "()", "\n    ", "{\n        ", "return", " mA*mB;    \n    }\n}; \n\n", "void", " ", "DoBusiness", "(AbstractCalculator* calculator)", "\n", "{\n    ", "int", " a =", "10", ";\n    ", "int", " b =", "20", ";\n    calculator->", "setA", "(a);\n    calculator->", "setB", "(b);\n    cout<<", "\"计算结果:\"", "<<calculator->", "getResult", "()<<endl;\n    ", "delete", " calculator;\n}\n\n", "int", " ", "main", "()", "\n", "{\n    AbstractCalculator* ac;\n    ", "DoBusiness", "(ac);\n    \n    ", "return", " ", "0", ";\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;#include &amp;lt;stdio.h&amp;gt;你都没加啊&lt;br /&gt;double x,y;&lt;/p&gt;\n&lt;p&gt;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt; \n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#include &amp;lt;math.h&amp;gt;&lt;/span&gt;\n&lt;span class=\"hljs-comment\"&gt;#define _CRT_SECURE_NO_WARNINGS&lt;/span&gt;\n \n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;ArithmeticMenu&lt;/span&gt;() {       &lt;span class=\"hljs-comment\"&gt;//排序子菜单 数学求四则运算&lt;/span&gt;\n    \n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*****************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;1.加法&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;2.减法&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;3.乘法&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;*&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;4.除法&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;&lt;span class=\"hljs-char escape_\"&gt;\\t&lt;/span&gt;*&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;******************************&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n}\n \n&lt;span class=\"hljs-variable\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Arithmetic&lt;/span&gt;() {\n    &lt;span class=\"hljs-variable\"&gt;double&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;;\n    int &lt;span class=\"hljs-variable\"&gt;choice&lt;/span&gt;;\n    &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入您的选择&amp;#xff1a;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;choice&lt;/span&gt;);\n    &lt;span class=\"hljs-title function_\"&gt;switch&lt;/span&gt; (&lt;span class=\"hljs-variable\"&gt;choice&lt;/span&gt;) {\n    &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要算的数字&amp;#xff1a;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#43;%lf&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x&amp;#43;y&amp;#61;%lf&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#43;&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要算的数字&amp;#xff1a;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf-%lf&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x-y&amp;#61;%lf&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;-&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要算的数字&amp;#xff1a;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf*%lf&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x*y&amp;#61;%lf&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;*&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-variable\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入要算的数字&amp;#xff1a;&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;scanf_s&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf/%lf&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt;, &lt;span class=\"hljs-operator\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;x/y&amp;#61;%lf&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;, &lt;span class=\"hljs-variable\"&gt;x&lt;/span&gt; / &lt;span class=\"hljs-variable\"&gt;y&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    \n    &lt;span class=\"hljs-variable\"&gt;default&lt;/span&gt;:&lt;span class=\"hljs-title function_\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请重新输入&lt;span class=\"hljs-char escape_\"&gt;\\n&lt;/span&gt;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-title function_\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}\n \nint &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;()\n{\n \n    &lt;span class=\"hljs-title class_\"&gt;ArithmeticMenu&lt;/span&gt;();\n \n    &lt;span class=\"hljs-title class_\"&gt;Arithmetic&lt;/span&gt;();\n    &lt;span class=\"hljs-title function_\"&gt;system&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n \n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c++报错如图片所示这怎么改呐", ["\n#include ", "<", "stdlib.h", ">", "\n#include ", "<", "string.h", ">", "\n#include ", "<", "math.h", ">", "\n#define _CRT_SECURE_NO_WARNINGS\n\nvoid ", "ArithmeticMenu", "() {       ", "//排序子菜单 数学求四则运算", "\n    \n    printf(", "\"*****************************", "\\n", "\"", ");\n    printf(", "\"*", "\\t", "\\t", "1.加法", "\\t", "\\t", "*", "\\n", "\"", ");\n    printf(", "\"*", "\\t", "\\t", "2.减法", "\\t", "\\t", "*", "\\n", "\"", ");\n    printf(", "\"*", "\\t", "\\t", "3.乘法", "\\t", "\\t", "*", "\\n", "\"", ");\n    printf(", "\"*", "\\t", "\\t", "4.除法", "\\t", "\\t", "*", "\\n", "\"", ");\n    \n    printf(", "\"******************************", "\\n", "\"", ");\n}\n\nvoid ", "Arithmetic", "() {\n    double x, double y;\n    int choice;\n    printf(", "\"请输入您的选择：", "\\n", "\"", ");\n    scanf_s(", "\"%d\"", ", ", "&", "choice);\n    ", "switch", " (choice) {\n    ", "case", " ", "1", ":printf(", "\"请输入要算的数字：", "\\n", "\"", ");\n        scanf_s(", "\"%lf+%lf\"", ", ", "&", "x, ", "&", "y);\n        printf(", "\"x+y=%lf", "\\n", "\"", ", x ", "+", " y);\n        ", "break", ";\n    ", "case", " ", "2", ":printf(", "\"请输入要算的数字：", "\\n", "\"", ");\n        scanf_s(", "\"%lf-%lf\"", ", ", "&", "x, ", "&", "y);\n        printf(", "\"x-y=%lf", "\\n", "\"", ", x ", "-", " y);\n        ", "break", ";\n    ", "case", " ", "3", ":printf(", "\"请输入要算的数字：", "\\n", "\"", ");\n        scanf_s(", "\"%lf*%lf\"", ", ", "&", "x, ", "&", "y);\n        printf(", "\"x*y=%lf", "\\n", "\"", ", x ", "*", " y);\n        ", "break", ";\n    ", "case", " ", "4", ":printf(", "\"请输入要算的数字：", "\\n", "\"", ");\n        scanf_s(", "\"%lf %lf\"", ", ", "&", "x, ", "&", "y);\n        printf(", "\"x/y=%lf", "\\n", "\"", ", x ", "/", " y);\n        ", "break", ";\n    \n    ", "default", ":printf(", "\"请重新输入", "\\n", "\"", ");\n        ", "break", ";\n    }\n\n}\n\nint main()\n{\n\n    ", "ArithmeticMenu", "();\n\n    ", "Arithmetic", "();\n    ", "return", " ", "0", ";\n\n}\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;运算符的统计指的是出题中加减乘除的题目个数&amp;#xff1f;&lt;br /&gt;如果是的话 定义四个变量 count_add, count_sub, count_muti, count_div 在case语句里面统计加1就行了&lt;br /&gt;还有算正确率&amp;#xff0c;你指统计了正确的&amp;#xff0c;错误的没有统计&amp;#xff0c;加一个变量统计&amp;#xff0c;之后算正确率&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["四则运算 c语言 运算符个数统计", ["我该怎么将运算符统计填入到我代码里的哪个位置", "研究了好久没研究明白", "可能是要用数组", "请各位帮我解决一下", "谢谢", "\n", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<time.h>", "\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a = ", "0", ";\n    ", "int", " b = ", "0", ";\n    ", "int", " mode = ", "0", ";", "//0:加  1:减   2:乘  3:除", "\n    ", "int", " c = ", "0", ";\n    ", "int", " result = ", "0", ";\n    ", "int", " score = ", "0", ";\n    ", "int", " i = ", "0", ";\n    ", "srand", "((", "unsigned", ")", "time", "( ", "NULL", " ) ); ", "//初始化随机数发生器，使得每次运行生成的随机数不同", "\n    ", "for", "(i=", "0", ";i<", "3", ";i++) ", "//做30题", "\n    {\n        a = ", "rand", "() % ", "10", "; ", "//生成一个0~9之间的随机数", "\n        b = ", "rand", "() % ", "10", ";  ", "//生成一个0~9之间的随机数", "\n        mode = ", "rand", "() % ", "4", "; ", "//生成一个0~3之间的随机数，代表运算符", "\n        ", "printf", "(", "\"%d\"", ", a);   ", "//打印算式", "\n        ", "switch", "(mode) ", "//确定运算符", "\n        {\n        ", "case", " ", "0", ":\n            ", "printf", "(", "\"+\"", ");\n            result= a + b;   ", "//加法运算的正确答案", "\n            ", "break", ";\n        ", "case", " ", "1", ":\n            ", "printf", "(", "\"-\"", ");\n            result= a - b;   ", "//减法运算的正确答案", "\n            ", "break", ";\n        ", "case", " ", "2", ":\n            ", "printf", "(", "\"*\"", ");\n            result= a * b;   ", "//乘法运算的正确答案", "\n            ", "break", ";\n        ", "case", " ", "3", ":\n            ", "if", "(b==", "0", ")\n            {\n            b =", "1", ";\n            }                ", "//除数不为0", "\n            ", "printf", "(", "\"/\"", ");\n            result= a / b;   ", "//除法运算的正确答案", "\n            ", "break", ";\n        ", "default", ":\n            ", "printf", "(", "\"something is wrong!\\n\"", ");\n            ", "break", ";\n        }\n        ", "printf", "(", "\"%d = \"", ", b);\n        ", "scanf", "(", "\"%d\"", ", &c); ", "//输入答案", "\n        ", "if", "(c == result) ", "//与正确答案一致", "\n        {\n            score+= ", "1", ";  ", "//答对的题数", "\n            ", "printf", "(", "\"Right\\n\\n\"", ");\n        }\n        ", "else", "\n        {\n            ", "printf", "(", "\"Wrong\\n\\n\"", "); ", "//答错", "\n        }\n    }\n    ", "printf", "(", "\"Yourscore is: %d\\n\\n\\n\"", ", score);", "//显示30道题中答对的题数", "\n    ", "return", " ", "1", ";\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode* &lt;span class=\"hljs-attr\"&gt;res&amp;#61;new&lt;/span&gt; ListNode();\n        ListNode* &lt;span class=\"hljs-attr\"&gt;prev&amp;#61;res;&lt;/span&gt;\n        int &lt;span class=\"hljs-attr\"&gt;jw&lt;/span&gt; &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        ListNode* &lt;span class=\"hljs-attr\"&gt;p1&lt;/span&gt; &amp;#61; l1;\n        ListNode* &lt;span class=\"hljs-attr\"&gt;p2&lt;/span&gt; &amp;#61; l2;\n        //ListNode* &lt;span class=\"hljs-attr\"&gt;p&lt;/span&gt; &amp;#61; nullptr;\n        while (p1 !&amp;#61; nullptr &amp;amp;&amp;amp; p2 !&amp;#61; nullptr) {\n            ListNode* ptmp;\n            int &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; p1-&amp;gt;val &amp;#43; p2-&amp;gt;val &amp;#43; jw;\n            &lt;span class=\"hljs-attr\"&gt;jw&lt;/span&gt; &amp;#61; n / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; n % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            &lt;span class=\"hljs-attr\"&gt;ptmp&lt;/span&gt; &amp;#61; new ListNode(n);\n            prev-&amp;gt;&lt;span class=\"hljs-attr\"&gt;next&amp;#61;ptmp;&lt;/span&gt;\n            &lt;span class=\"hljs-attr\"&gt;prev&amp;#61;ptmp;&lt;/span&gt;\n            &lt;span class=\"hljs-attr\"&gt;p1&lt;/span&gt; &amp;#61; p1-&amp;gt;next;\n            &lt;span class=\"hljs-attr\"&gt;p2&lt;/span&gt; &amp;#61; p2-&amp;gt;next;\n        }\n        while (p1 !&amp;#61; nullptr)\n        {\n            int &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; p1-&amp;gt;val &amp;#43; jw;\n            &lt;span class=\"hljs-attr\"&gt;jw&lt;/span&gt; &amp;#61; n / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; n % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            ListNode* &lt;span class=\"hljs-attr\"&gt;ptmp&lt;/span&gt; &amp;#61; new ListNode(n);\n            prev-&amp;gt;&lt;span class=\"hljs-attr\"&gt;next&lt;/span&gt; &amp;#61; ptmp;\n            &lt;span class=\"hljs-attr\"&gt;prev&amp;#61;ptmp;&lt;/span&gt;\n            &lt;span class=\"hljs-attr\"&gt;p1&lt;/span&gt; &amp;#61; p1-&amp;gt;next;\n        }\n        while (p2 !&amp;#61; nullptr) {\n            int &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; p2-&amp;gt;val &amp;#43; jw;\n            &lt;span class=\"hljs-attr\"&gt;jw&lt;/span&gt; &amp;#61; n / &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            &lt;span class=\"hljs-attr\"&gt;n&lt;/span&gt; &amp;#61; n % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            ListNode* &lt;span class=\"hljs-attr\"&gt;ptmp&lt;/span&gt; &amp;#61; new ListNode(n);\n            prev-&amp;gt;&lt;span class=\"hljs-attr\"&gt;next&lt;/span&gt; &amp;#61; ptmp;\n            &lt;span class=\"hljs-attr\"&gt;prev&lt;/span&gt; &amp;#61; ptmp;\n            &lt;span class=\"hljs-attr\"&gt;p2&lt;/span&gt; &amp;#61; p2-&amp;gt;next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (jw &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) {\n            ListNode* &lt;span class=\"hljs-attr\"&gt;ptmp&lt;/span&gt; &amp;#61; new ListNode(jw);\n            prev-&amp;gt;&lt;span class=\"hljs-attr\"&gt;next&lt;/span&gt; &amp;#61; ptmp;\n        }\n        return res-&amp;gt;next;\n\n\n    }\n};\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["力扣第二题两数相加未发现力扣提示的错误。", ["问题遇到的现象和发生背景", "\n", "有没有一种可能，力扣也有测试误诊断的时候？", "\n", "问题相关代码，请勿粘贴截图", "\n", "/**", "\n", "Definition for singly-linked list.", "struct ListNode {", "int", " ", "val", ";\n", "\n", "ListNode *next", ";", "\n", "\n", "ListNode() : ", "val", "(", "0", "), ", "next", "(nullptr) {}\n", "\n", "ListNode(", "int", " ", "x", ")", " : ", "val", "(x), next(nullptr) {}\n", "\n", "ListNode(", "int", " ", "x", ", ListNode ", "*", "next", ")", " : ", "val", "(x), next(next) {}\n", "\n", "};", "/", "class Solution {", "public:", "  ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)", "  {", "  ListNode *h,*", "p", "=new ListNode();\n  ", "h", "=p;\n  int ", "sum", "=0,o=0;\n  ", "if", "((l1)&&(l2))\n      ", "sum", "=l1->val+l2->val;\n  ", "else", " ", "if", "(l1)\n      ", "sum", "=l1->val;\n  ", "else", " ", "if", "(l2)\n      ", "sum", "=l2->val;\n  ", "if", "(sum>9)\n  {\n      ", "sum-", "=10;\n      ", "o", "=1;\n  }\n  p->", "val", "=sum;\n  ", "while", "((l1->next)||(l2->next)||", "o", "==1)\n  {\n      p->", "next", "=new ListNode(o);\n      ", "p", "=p->next;\n      ", "l1", "=l1->next;\n      ", "l2", "=l2->next;\n      ", "if", "((l1)&&(l2))\n          ", "sum", "=o+l1->val+l2->val;\n      ", "else", " ", "if", "(l1)\n          ", "sum", "=o+l1->val;\n      ", "else", " ", "if", "(l2)\n          ", "sum", "=o+l2->val;\n      ", "else", "\n          ", "sum", "=1;\n      ", "o", "=0;\n      ", "if", "(sum>9)\n      {\n          ", "sum-", "=10;\n          ", "o", "=1;\n      }\n      p->", "val", "=sum;\n  }\n  return h;\n", "\n", "  }", "};", "运行结果及报错内容", "\nLine 35: Char 20: runtime error: member access within null pointer of type 'ListNode' (solution.cpp)", "SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior prog_joined.cpp:44:20", "我的解答思路和尝试过的方法", "\n最开始使用的是通过乘法，还原数字并将l1和l2求和，将结果通过对10求余的方式还原成链表，我使用了long long数据类型来解决，长达11位的十进制数，结果因为计算精度丢失的原因（这我可控制不了）没能通过测试。", "于是，我就使用了上面的方法，运行结果指出链表节点有空指针，反复检查，还是没看出错在哪了。", "我想要达到的结果", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;Rational answer;&amp;#61;&amp;#61;&amp;#61;这行有问题&amp;#xff0c;也就是    Rational 类的构造函数 &lt;span class=\"hljs-constructor\"&gt;Rational(&lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;numerator&lt;/span&gt;&amp;#61;0, &lt;span class=\"hljs-params\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;denominator&lt;/span&gt;&amp;#61;0)&lt;/span&gt;;有问题\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;当定义answer时&amp;#xff0c;由于没有传入参数&amp;#xff0c;导致两个参数值默认都是0&amp;#xff0c;这样在normalize_();函数中就崩溃了&amp;#xff0c;因为 numerator /&amp;#61; a;&lt;br /&gt;&lt;span style=\"display:inline-block;text-indent:2em;\"&gt;    denominator /&amp;#61; a;时&amp;#xff0c;a是0&amp;#xff0c;所以出现除零错误。&lt;/span&gt;&lt;br /&gt;在构造函数中对参数为零进行判断&amp;#xff0c;为0则不进行normalize_()函数处理&amp;#xff0c;或者增加一个无参构造函数&amp;#xff0c;什么也不用做&amp;#xff0c;然后当前构造函数中去掉默认值。这样也可以&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;using namespace std;\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Rational&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator;                                            \n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denominator;\n    &lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;normalize_&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    Rational() {}\n    Rational(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; numerator, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denominator);  \n    friend Rational operator&amp;#43;(Rational r1, Rational r2);        \n    friend Rational operator-(Rational r1, Rational r2);\n    friend Rational operator*(Rational r1, Rational r2);\n    friend Rational operator/(Rational r1, Rational r2);\n    friend istream &amp;amp;operator&amp;gt;&amp;gt;(istream &amp;amp;in, Rational&amp;amp; r);        \n    friend ostream &amp;amp;operator&amp;lt;&amp;lt;(ostream &amp;amp;out, Rational&amp;amp; r);    \n    friend bool operator&amp;#61;&amp;#61;(Rational r1,Rational r2);\n    Rational &lt;span class=\"hljs-title function_\"&gt;normalize&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;;      \n};\nRational::Rational(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; num, &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; denom)\n{\n    numerator &amp;#61; num;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (denominator !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)   denominator &amp;#61; denom;                &lt;span class=\"hljs-comment\"&gt;// 分母不能为0,在流输入运算符重载中也有定义&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;denominator&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    normalize_();\n}\nRational Rational::normalize()                            \n{                                                                &lt;span class=\"hljs-comment\"&gt;//求出分子和分母的最大公约数&amp;#xff0c;用欧几里得算法&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; abs(numerator);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; abs(denominator);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (b &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;t&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; a % b;\n        a &amp;#61; b;\n        b &amp;#61; t;\n    }\n    Rational &lt;span class=\"hljs-title function_\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(numerator / a, denominator / a)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\nRational operator&amp;#43;(Rational r1, Rational r2)                    &lt;span class=\"hljs-comment\"&gt;//重载加法运算符&amp;#xff0c;分数的加法&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r1.denominator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r2.denominator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; a * d &amp;#43; b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;f&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; b * d;\n    Rational &lt;span class=\"hljs-title function_\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\n&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; Rational::normalize_()\n{\n \n                                                                &lt;span class=\"hljs-comment\"&gt;//求出分子和分母的最大公约数&amp;#xff0c;用欧几里得算法&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; abs(numerator);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; abs(denominator);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (b &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;t&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; a % b;\n        a &amp;#61; b;\n        b &amp;#61; t;\n    }\n    numerator /&amp;#61; a;\n    denominator /&amp;#61; a;\n}\n \nRational operator-(Rational r1, Rational r2)                    &lt;span class=\"hljs-comment\"&gt;//重载减法运算符,函数结构和加法一致&amp;#xff0c;返回加法运算&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r1.denominator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r2.denominator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; a * d - b * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;f&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; b * d;\n    Rational &lt;span class=\"hljs-title function_\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\n \nRational operator*(Rational r1, Rational r2)                    &lt;span class=\"hljs-comment\"&gt;//重载乘法运算符&amp;#xff0c;调用初始化类是化简了分数&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;a&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r1.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;b&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r1.denominator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;c&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r2.numerator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;d&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r2.denominator;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;e&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; a * c;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;f&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; b * d;\n    Rational &lt;span class=\"hljs-title function_\"&gt;R&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(e, f)&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; R;\n}\n \nRational operator/(Rational r1, Rational r2)                    &lt;span class=\"hljs-comment\"&gt;//返回乘法运算函数体&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;t&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; r2.numerator;\n    r2.numerator &amp;#61; r2.denominator;\n    r2.denominator &amp;#61; t;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; operator*(r1, r2);\n}\nbool operator&amp;#61;&amp;#61;(Rational r1,Rational r2)\n{\n     &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(r1.numerator &amp;#61;&amp;#61;r2.numerator &amp;amp;&amp;amp; r1.denominator &amp;#61;&amp;#61;r2.denominator )\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-literal\"&gt;false&lt;/span&gt;;\n}\nistream &amp;amp;operator&amp;gt;&amp;gt;(istream &amp;amp;in, Rational&amp;amp; r)                    &lt;span class=\"hljs-comment\"&gt;//流输入运算符&lt;/span&gt;\n{\n    in &amp;gt;&amp;gt; r.numerator&amp;gt;&amp;gt; r.denominator;                            &lt;span class=\"hljs-comment\"&gt;//避免除0错误&amp;#xff0c;进行判断&amp;#xff0c;分母为0时程序结束&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r.denominator !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; in;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#34;&lt;/span&gt;;\n        exit(&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;);\n    }\n}\n \nostream &amp;amp;operator&amp;lt;&amp;lt;(ostream &amp;amp;out, Rational&amp;amp; r)                    &lt;span class=\"hljs-comment\"&gt;//流输出运算符&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (r.numerator%r.denominator &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)                            &lt;span class=\"hljs-comment\"&gt;//进行判断&amp;#xff0c;当为一个整数时&amp;#xff0c;改变输出&lt;/span&gt;\n        out &amp;lt;&amp;lt; r.numerator / r.denominator;\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        out &amp;lt;&amp;lt; r.numerator &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\\\&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;r.denominator;\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; out;\n}\n&lt;span class=\"hljs-keyword\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;Test&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{&lt;!-- --&gt;&lt;span class=\"hljs-comment\"&gt;//有问题&lt;/span&gt;\n   cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;共10道题&amp;#xff0c;做100以内的加减运算&amp;#xff0c;满分100分:\\n&amp;#34;&lt;/span&gt;;\n   &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; score&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n   &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; op;\n   &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;)\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand() % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//生成1-100的随机数&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n1&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand() % &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n2&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand() % &lt;span class=\"hljs-number\"&gt;100&lt;/span&gt; &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    Rational &lt;span class=\"hljs-title function_\"&gt;a&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(m1,n1)&lt;/span&gt;,b(m2,n2);\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand()%&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n3&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand()%&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;m4&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand()%&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-variable\"&gt;n4&lt;/span&gt; &lt;span class=\"hljs-operator\"&gt;&amp;#61;&lt;/span&gt; rand()%&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;-&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n    Rational &lt;span class=\"hljs-title function_\"&gt;c&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(m3,n3)&lt;/span&gt;,d(m4,n4);\n    Rational answer;\n    op&amp;#61;rand()%&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//产生随机加减乘除运算的4个值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;switch&lt;/span&gt;(op)\n {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;:\n    answer&amp;#61;a&amp;#43;b;\n    cout&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;加上&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;等于&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;:\n    cout&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;减去&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;等于&amp;#34;&lt;/span&gt;;\n    answer &amp;#61;a-b;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;:\n    answer&amp;#61;c*d;\n    cout&amp;lt;&amp;lt;c&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;乘以&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;d&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;等于&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;:\n    answer&amp;#61;c/d;\n    cout&amp;lt;&amp;lt;c&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;除以以&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;d&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;等于&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;    \n}\n      Rational temp;\n    cin&amp;gt;&amp;gt;temp; &lt;span class=\"hljs-comment\"&gt;//输入用户计算值&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(answer&amp;#61;&amp;#61;temp) &lt;span class=\"hljs-comment\"&gt;//比较用户计算值&lt;/span&gt;\n{\nscore&amp;#43;&amp;#61;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n}\n&lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n{\ncout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;此题做错了\\n&amp;#34;&lt;/span&gt;;\ncout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;正确答案为:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;answer&amp;lt;&amp;lt;endl;\n}\n}\ncout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;你的最后得分是:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;score&amp;lt;&amp;lt;endl;\n}\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title function_\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;{\n    Rational &lt;span class=\"hljs-title function_\"&gt;r1&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)&lt;/span&gt;;\n    Rational &lt;span class=\"hljs-title function_\"&gt;r2&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)&lt;/span&gt;;\n    Rational &lt;span class=\"hljs-title function_\"&gt;r3&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;,&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&lt;/span&gt;;\n&lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;{\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;cls&amp;#34;&lt;/span&gt;);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t这是一个简单的计算器程序&amp;#xff0c;可以实现以下功能&amp;#xff0c;请按对应的按键(1-5)\\n\\n\\n&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;MENU&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;&amp;#61;\\n&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t1:有理数加法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t2:有理数减法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;    \n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t3:有理数乘法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t4:有理数除法&amp;#xff0c;以0结束\\n&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t5测试&amp;#xff1a;每次10题 由计算机随机出题 每题10分 共100分&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t0:退出程序\\n\\n:&amp;#34;&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\t请您选择:&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; choise;\n    cin &amp;gt;&amp;gt; choise;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n    {   \n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;first number r1:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r1;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;last number r2:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r2;\n        r3&amp;#61;r1&amp;#43;r2;\n        cout&amp;lt;&amp;lt;r3&amp;lt;&amp;lt;endl; \n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n    {   cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;first number r1:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r1;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;last number r2:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r2;\n        r3&amp;#61;r1-r2;\n        cout&amp;lt;&amp;lt;r3&amp;lt;&amp;lt;endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n    {   cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;first number r1:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r1;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;last number r2:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r2;\n        r3&amp;#61;r1*r2;\n        cout&amp;lt;&amp;lt;r3&amp;lt;&amp;lt;endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)\n    {   cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;first number r1:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r1;\n        cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;last number r2:&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;endl;\n        cin &amp;gt;&amp;gt; r2;\n        r3&amp;#61;r1/r2;\n        cout&amp;lt;&amp;lt;r3&amp;lt;&amp;lt;endl; \n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;){\n        Test();\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (choise &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) &lt;span class=\"hljs-comment\"&gt;//用户选0则结束调用函数&lt;/span&gt;\n    {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\n\\t欢迎下次继续使用计算器!\\n&amp;#34;&lt;/span&gt;;\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n     }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n    {\n            cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;\\n\\t输入错误&amp;#xff0c;请按任意键继续!\\n&amp;#34;&lt;/span&gt;;\n    }system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n}&lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["void Test函数是错误的 想知道怎么改", ["分数计算器", "\n", "\n", "#", "include", "<bits/stdc++.h>", "\n", "using", " ", "namespace", " std;\n", "class", " ", "Rational", "{\n    ", "int", " numerator;                                            \n    ", "int", " denominator;\n    ", "void", " ", "normalize_", "()", ";\n", "public", ":\n    ", "Rational", "(", "int", " numerator=", "0", ", ", "int", " denominator=", "0", ");  \n    ", "friend", " Rational ", "operator", "+(Rational r1, Rational r2);        \n    ", "friend", " Rational ", "operator", "-(Rational r1, Rational r2);\n    ", "friend", " Rational ", "operator", "*(Rational r1, Rational r2);\n    ", "friend", " Rational ", "operator", "/(Rational r1, Rational r2);\n    ", "friend", " istream &", "operator", ">>(istream &in, Rational& r);        \n    ", "friend", " ostream &", "operator", "<<(ostream &out, Rational& r);    \n    ", "friend", " ", "bool", " ", "operator", "==(Rational r1,Rational r2);\n    ", "Rational ", "normalize", "()", ";      \n};\nRational::", "Rational", "(", "int", " num, ", "int", " denom)\n{\n    numerator = num;\n    ", "if", " (denominator != ", "0", ")   denominator = denom;                ", "// 分母不能为0,在流输入运算符重载中也有定义", "\n    ", "else", " denominator = ", "1", ";\n    ", "normalize_", "();\n}\n", "Rational ", "Rational::normalize", "()", "                            \n", "{                                                                ", "//求出分子和分母的最大公约数，用欧几里得算法", "\n    ", "int", " a = ", "abs", "(numerator);\n    ", "int", " b = ", "abs", "(denominator);\n    ", "while", " (b > ", "0", ")\n    {\n        ", "int", " t = a % b;\n        a = b;\n        b = t;\n    }\n    ", "Rational ", "R", "(numerator / a, denominator / a)", ";\n    ", "return", " R;\n}\nRational ", "operator", "+(Rational r1, Rational r2)                    ", "//重载加法运算符，分数的加法", "\n{\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;\n    ", "int", " e = a * d + b * c;\n    ", "int", " f = b * d;\n    ", "Rational ", "R", "(e, f)", ";\n    ", "return", " R;\n}\n", "void", " ", "Rational::normalize_", "()", "\n", "{\n\n                                                                ", "//求出分子和分母的最大公约数，用欧几里得算法", "\n    ", "int", " a = ", "abs", "(numerator);\n    ", "int", " b = ", "abs", "(denominator);\n    ", "while", " (b > ", "0", ")\n    {\n        ", "int", " t = a % b;\n        a = b;\n        b = t;\n    }\n    numerator /= a;\n    denominator /= a;\n}\n\nRational ", "operator", "-(Rational r1, Rational r2)                    ", "//重载减法运算符,函数结构和加法一致，返回加法运算", "\n{\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;\n    ", "int", " e = a * d - b * c;\n    ", "int", " f = b * d;\n    ", "Rational ", "R", "(e, f)", ";\n    ", "return", " R;\n}\n\nRational ", "operator", "*(Rational r1, Rational r2)                    ", "//重载乘法运算符，调用初始化类是化简了分数", "\n{\n    ", "int", " a = r1.numerator;\n    ", "int", " b = r1.denominator;\n    ", "int", " c = r2.numerator;\n    ", "int", " d = r2.denominator;\n    ", "int", " e = a * c;\n    ", "int", " f = b * d;\n    ", "Rational ", "R", "(e, f)", ";\n    ", "return", " R;\n}\n\nRational ", "operator", "/(Rational r1, Rational r2)                    ", "//返回乘法运算函数体", "\n{\n    ", "int", " t = r2.numerator;\n    r2.numerator = r2.denominator;\n    r2.denominator = t;\n    ", "return", " ", "operator", "*(r1, r2);\n}\n", "bool", " ", "operator", "==(Rational r1,Rational r2)\n{\n     ", "if", "(r1.numerator ==r2.numerator && r1.denominator ==r2.denominator )\n        ", "return", " ", "true", ";\n    ", "else", "\n        ", "return", " ", "false", ";\n}\nistream &", "operator", ">>(istream &in, Rational& r)                    ", "//流输入运算符", "\n{\n    in >> r.numerator>> r.denominator;                            ", "//避免除0错误，进行判断，分母为0时程序结束", "\n    ", "if", " (r.denominator != ", "0", ")\n        ", "return", " in;\n    ", "else", "\n    {\n        cout << ", "\"输入有误\"", ";\n        ", "exit", "(", "0", ");\n    }\n}\n\nostream &", "operator", "<<(ostream &out, Rational& r)                    ", "//流输出运算符", "\n{\n    ", "if", " (r.numerator%r.denominator == ", "0", ")                            ", "//进行判断，当为一个整数时，改变输出", "\n        out << r.numerator / r.denominator;\n    ", "else", "\n        out << r.numerator << ", "\"\\\\\"", "<<r.denominator;\n        ", "return", " out;\n}\n", "void", " ", "Test", "()", "{", "//有问题", "\n   cout<<", "\"共10道题，做100以内的加减运算，满分100分:\\n\"", ";\n   ", "int", " score=", "0", ";\n   ", "char", " op;\n   ", "for", "(", "int", " i=", "0", ";i<=", "9", ";i++)\n{\n    ", "int", " m1 = ", "rand", "() % ", "10", " + ", "1", "; ", "//生成1-100的随机数", "\n    ", "int", " n1 = ", "rand", "() % ", "100", " + ", "1", ";\n    ", "int", " m2 = ", "rand", "() % ", "10", " + ", "1", ";\n    ", "int", " n2 = ", "rand", "() % ", "100", " + ", "1", ";\n    ", "Rational ", "a", "(m1,n1)", ",", "b", "(m2,n2)", ";\n    ", "int", " m3 = ", "rand", "()%", "20", "-10", ";\n    ", "int", " n3 = ", "rand", "()%", "20", "-10", ";\n    ", "int", " m4 = ", "rand", "()%", "20", "-10", ";\n    ", "int", " n4 = ", "rand", "()%", "20", "-10", ";\n    ", "Rational ", "c", "(m3,n3)", ",", "d", "(m4,n4)", ";\n    Rational answer;\n    op=", "rand", "()%", "4", "; ", "//产生随机加减乘除运算的4个值", "\n    ", "switch", "(op)\n {\n    ", "case", " ", "0", ":\n    answer=a+b;\n    cout<<a<<", "\"加上\"", "<<b<<", "\"等于\"", ";\n    ", "break", ";\n    ", "case", " ", "1", ":\n    cout<<a<<", "\"减去\"", "<<b<<", "\"等于\"", ";\n    answer =a-b;\n    ", "break", ";\n    ", "case", " ", "2", ":\n    answer=c*d;\n    cout<<c<<", "\"乘以\"", "<<d<<", "\"等于\"", ";\n    ", "break", ";\n    ", "case", " ", "3", ":\n    answer=c/d;\n    cout<<c<<", "\"除以以\"", "<<d<<", "\"等于\"", ";\n    ", "break", ";    \n}\n      Rational temp;\n    cin>>temp; ", "//输入用户计算值", "\n    ", "if", "(answer==temp) ", "//比较用户计算值", "\n{\nscore+=", "10", ";\n}\n", "else", "\n{\ncout<<", "\"此题做错了\\n\"", ";\ncout<<", "\"正确答案为:\"", "<<answer<<endl;\n}\n}\ncout<<", "\"你的最后得分是:\"", "<<score<<endl;\n}\n", "int", " ", "main", "()", "{\n    ", "Rational ", "r1", "(", "1", ",", "2", ")", ";\n    ", "Rational ", "r2", "(", "1", ",", "3", ")", ";\n    ", "Rational ", "r3", "(", "1", ",", "4", ")", ";\n", "do", "{\n    ", "system", "(", "\"cls\"", ");\n    cout << ", "\"\\t这是一个简单的计算器程序，可以实现以下功能，请按对应的按键(1-5)\\n\\n\\n\"", ";\n    cout << ", "\"\\t=========================MENU===========================\\n\"", ";\n    cout << ", "\"\\t1:有理数加法，以0结束\\n\"", ";\n    cout << ", "\"\\t2:有理数减法，以0结束\\n\"", ";    \n    cout << ", "\"\\t3:有理数乘法，以0结束\\n\"", ";\n    cout << ", "\"\\t4:有理数除法，以0结束\\n\"", ";\n    cout << ", "\"\\t5测试：每次10题 由计算机随机出题 每题10分 共100分\"", ";\n    cout << ", "\"\\t0:退出程序\\n\\n:\"", ";\n    cout << ", "\"\\t请您选择:\"", ";\n    ", "int", " choise;\n    cin >> choise;\n    ", "if", " (choise == ", "1", ")\n    {   \n        cout << ", "\"first number r1:\"", "<<endl;\n        cin >> r1;\n        cout << ", "\"last number r2:\"", "<<endl;\n        cin >> r2;\n        r3=r1+r2;\n        cout<<r3<<endl; \n    }\n    ", "else", " ", "if", " (choise == ", "2", ")\n    {   cout << ", "\"first number r1:\"", "<<endl;\n        cin >> r1;\n        cout << ", "\"last number r2:\"", "<<endl;\n        cin >> r2;\n        r3=r1-r2;\n        cout<<r3<<endl;\n    }\n    ", "else", " ", "if", " (choise == ", "3", ")\n    {   cout << ", "\"first number r1:\"", "<<endl;\n        cin >> r1;\n        cout << ", "\"last number r2:\"", "<<endl;\n        cin >> r2;\n        r3=r1*r2;\n        cout<<r3<<endl;\n    }\n    ", "else", " ", "if", " (choise == ", "4", ")\n    {   cout << ", "\"first number r1:\"", "<<endl;\n        cin >> r1;\n        cout << ", "\"last number r2:\"", "<<endl;\n        cin >> r2;\n        r3=r1/r2;\n        cout<<r3<<endl; \n    }\n    ", "else", " ", "if", "(choise == ", "5", "){\n        ", "Test", "();\n    }\n    ", "else", " ", "if", " (choise == ", "0", ") ", "//用户选0则结束调用函数", "\n    {\n            cout << ", "\"\\n\\n\\t欢迎下次继续使用计算器!\\n\"", ";\n            ", "break", ";\n     }\n    ", "else", "\n    {\n            cout << ", "\"\\n\\t输入错误，请按任意键继续!\\n\"", ";\n    }", "system", "(", "\"pause\"", ");\n}", "while", "(", "1", ");\n}\n\n", "\n", "运行完计算是错误的 哪里错了捏"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你这代码粘了个寂寞&amp;#xff0c;报错里的信息你是一点都没粘进来啊&lt;br /&gt;switch拼写都错了&amp;#xff0c;你也太粗心了点吧&lt;br /&gt;还有&amp;#xff0c;标题里说的case非法呢&amp;#xff0c;代码里也没有找到case&amp;#xff0c;报错信息里也没有case&amp;#xff0c;你这纯粹标题党吗&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言中case非法和一些其他问题", ["\n", "#", "include", "<stdio.h>", "\n", "#", "include", "<stdlib.h>", "\n", "#", "include", "<math.h>", "\n\n", "void", " ", "mune", "()", "\n", "{\n    ", "printf", "(", "\"**************************************************\\n\"", ");\n    ", "printf", "(", "\"**         1,乘法口诀表                         **\\n\"", ");\n    ", "printf", "(", "\"**         2,分段函数                           **\\n\"", ");\n    ", "printf", "(", "\"**         3,进制转换                           **\\n\"", ");\n    ", "printf", "(", "\"**         4,进制                               **\\n\"", ");\n    ", "printf", "(", "\"**         0,退出                               **\\n\"", ");\n    ", "printf", "(", "\"**************************************************\\n\"", ");\n}\n", "void", " ", "Cfkj", "()", "\n", "{\n    ", "int", " a;\n    ", "do", " {\n        ", "printf", "(", "\"请输入一个0-9的数字：\\n\"", ");\n        ", "scanf_s", "(", "\"%d\"", ", &a);\n        ", "if", " (a >= ", "1", " && a < ", "10", ")", "break", ";\n        ", "else", "\n            ", "printf", "(", "\"范围错误，请重新启动。\"", ");\n            ", "return", " ", "0", ";\n    } ", "while", " (", "1", ");\n    ", "int", " i = ", "0", ";\n    ", "int", " j = ", "1", ";\n    ", "for", " (i = ", "1", "; i <= a; i++)\n    {\n        ", "for", " (", "int", " j = ", "1", "; j <= i; j++)\n        {\n            ", "printf", "(", "\"%d*%d=%d\\t\"", ", j, i, i * j);\n        }\n        ", "printf", "(", "\"\\n\"", ");\n    }\n    ", "system", "(", "\"pause\"", ");\n    ", "return", " ", "0", ";\n}\n\n", "void", " ", "Fdhs", "()", "\n", "{\n    ", "int", " x, y;\n    ", "printf", "(", "\"请输入一个数字：\"", ");\n    ", "while", " (", "scanf_s", "(", "\"%d\"", ", &x) == ", "1", ")\n    {\n        ", "if", " (x > ", "0", ")\n        {  \n        ", "if", " (x<", "10", ")\n            y =x+", "1", ";\n            ", "if", " (x>= ", "10", ")\n                y = x % ", "3", ";\n            ", "printf", "(", "\"y=%d\\n\"", ", y);\n        }\n        ", "else", "\n            ", "printf", "(", "\"y=4\\n\"", ");\n        ", "printf", "(", "\"请输入一个数字【当输入‘m’时，结束输入】：\"", ");\n    }\n    ", "return", " ", "0", ";\n}\n\n", "void", " ", "Jzzha", "()", "\n", "{\n    ", "long", " ", "long", " n, a;\n    ", "int", " sum = ", "0", ", i = ", "0", ", m;\n    ", "printf", "(", "\"%lld\"", ", &n);\n    a = n;\n    ", "while", " (n != ", "0", ")\n    {\n        m = n % ", "10", ";\n        n /= ", "10", ";\n        sum += m * ", "pow", "(", "2", ", i);\n        ++i;\n    }\n    ", "printf", "(", "\"二进制%lld转换为十进制为%d\\n\"", ", a, sum);\n}\n\n", "void", " ", "Jzzhb", "()", "\n", "{\n    ", "int", " num, m, c, i = ", "0", ";\n    ", "int", " n = ", "2", ";\n    ", "int", " a[", "32", "];\n    ", "printf", "(", "\"输入一个整数：\"", ");\n    ", "scanf_s", "(", "\"%d\"", ", &num);\n    m = num;\n    ", "while", " (num > ", "0", ")\n    {\n        c = (num % n);\n        a[i] = c;\n        num = num / n;\n        i++;\n    }\n    ", "printf", "(", "\"十进制%d转换为二进制是：\"", ", m);\n    ", "for", " (i--; i >= ", "0", "; i--)\n        ", "printf", "(", "\"%d\"", ", a[i]);\n    ", "printf", "(", "\"\\n\"", ");\n}\n\n", "void", " ", "main", "()", "\n", "{\n    ", "int", " n = ", "0", ";\n    ", "while", " (", "1", ")\n    {\n        ", "mune", "();\n        ", "printf", "(", "\"请选择：\"", ");\n        ", "scanf_s", "(", "\"%d\"", ",&n);\n        ", "swtich", "(n)\n        {\n        ", "case", " ", "1", ":", "Cfkj", "();\n            ", "break", ";\n        ", "case", " ", "2", ":", "Fdhs", "();\n            ", "break", ";\n        ", "case", " ", "3", ":", "Jzzha", "();\n            ", "break", ";\n        ", "case", " ", "4", ":", "Jzzhb", "();\n            ", "break", ";\n        ", "case", " ", "0", ":\n            ", "exit", "(", "0", ");\n            ", "break", ";\n        ", "default", ":\n\n            ", "printf", "(", "\"您的选择错误！！！\\n\"", ");\n            ", "break", ";\n\n        }\n    }\n}\n", "\n", "以下是在VS2019中运行的错误提示", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你期待什么样的结果呢&amp;#xff1f;结果是什么&amp;#xff1f;&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["刚学编程，除了一点问题求大佬们帮忙", ["\n", "export default class Pro{\n\t constructor(num1,num2) {\n\t     this.num1 = num1;\n\t\t this.num2 = num2;\n\t\t return `${this.num1} * ${this.num2} = ${this.num1*this.num2}`;\n\t }\n}", "\n\n", "JS的", "\n\n", "\n", "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>99乘法表</title>\n\t\t<script type=\"module\">\n\t\t\timport Pro from './demo---1.js';\n\t\t\tlet p = new Pro(num1,num2);\n\t\t\tfor(num1=1;num1<=9;p.num1++)\n\t\t\t{\n\t\t\t\tfor(num2=1;num2<=9;num2++)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(`${p.num1}*${p.num2}=${p.num1*p.num2}`);\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\t</head>\n\t<body>\n\t</body>\n</html>\n", "\n\n", "HTML的", "\n\n", "求大佬们帮忙看一下，说一下怎么修改，谢谢大佬"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你的参数分母是6&amp;#xff0c;不是0啊&lt;br /&gt;\n    u1.useCom(new div(), 5, 6);&lt;br /&gt;\n只是计算结果是0&lt;br /&gt;\n &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Java 中if判断分母为0时出现的奇怪错误", ["package com.my.shiyan9_2;", "\n\n", "public class Text {", "\n\n", "    public static void main(String[] args) {", "\n        // TODO 自动生成的方法存根", "\n        UseCompute u1 = new UseCompute();", "\n        Compute com = new add();", "\n        u1.useCom(com, 5, 6);", "\n        u1.useCom(new sub(), 5, 6);", "\n        u1.useCom(new mul(), 5, 6);", "\n        u1.useCom(new div(), 5, 6);", "\n        u1.useCom(new div(), 9, 3);", "\n\n", "    }", "\n\n", "}", "\ninterface Compute{", "\n    public int computer(int n,int m);", "\n}", "\n//加法", "\nclass add implements Compute{", "\n\n", "    @Override", "\n    public int computer(int n,int m) {", "\n        System.out.print(\"加法:\\n n+m = \");", "\n        // TODO 自动生成的方法存根", "\n        return n+m;", "\n    }", "\n\n", "}", "\n//减法", "\nclass sub implements Compute{", "\n    @Override", "\n    public int computer(int n, int m) {", "\n        System.out.print(\"减法:\\n n-m = \");", "\n        return n-m;", "\n    }    ", "\n}", "\n//乘法", "\nclass mul implements Compute{", "\n    @Override", "\n    public int computer(int n, int m) {", "\n        System.out.print(\"乘法:\\n n×m = \");", "\n        return n*m;", "\n    }", "\n}", "\n//除法", "\nclass div implements Compute{", "\n    @Override", "\n    public int computer(int n, int m) {", "\n        if(m!=0) {", "\n            System.out.print(\"除法:\\n n÷m = \");", "\n            return n/m;", "\n        }else {", "\n            System.out.print(\"分母不能为零！\");", "\n            return 0 ;", "\n        }", "\n    }", "\n}", "\nclass UseCompute{", "\n    public void useCom(Compute com, int one, int two) {", "\n        System.out.println(com.computer(one, two));", "\n    }", "\n}", "\n", "\n\n", " ", "\n\n", "为什么输出时当除法if判断分母为零时“   System.out.print(\"分母不能为零！\");”这个语句不输出，其次就是为什么已经判断分母为零了这句“   System.out.print(\"除法:\\n n÷m = \");”还会输出？求大神赐教。"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; n,cnt&amp;#61;&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;;\n&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; a[&lt;span class=\"hljs-number\"&gt;1010&lt;/span&gt;];\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    cin&amp;gt;&amp;gt;a[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;]&amp;gt;&amp;gt;a[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;]&amp;gt;&amp;gt;n;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n&amp;amp;&amp;amp;cnt&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; t&amp;#61;a[i]*a[i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;];\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(t&amp;lt;&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;) a[cnt&amp;#43;&amp;#43;]&amp;#61;t;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            a[cnt&amp;#43;&amp;#43;]&amp;#61;t/&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n            a[cnt&amp;#43;&amp;#43;]&amp;#61;t%&lt;span class=\"hljs-number\"&gt;10&lt;/span&gt;;\n        }\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;i&amp;lt;n;i&amp;#43;&amp;#43;)\n    {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;,a[i]);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt;(i!&amp;#61;n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;) &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; &amp;#34;&lt;/span&gt;);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["请问一下本题在pta的自主测试是对的，但是提交后是答案错误，哪里需要改一下呀？", [" 乘法口诀数列", "\n", "输出格式：", "在一行中输出数列的前 n 项。数字间以 1 个空格分隔，行首尾不得有多余空格。", "\n", "输入样例：", "2 3 10", "结尾无空行", "输出样例：", "2 3 6 1 8 6 8 4 8 4", "样例解释：", "数列前 2 项为 2 和 3。从 2 开始，因为 2×3=6，所以第 3 项是 6。因为 3×6=18，所以第 4、5 项分别是 1、8。依次类推…… 最后因为第 6 项有 6×8=48，对应第 10、11 项应该是 4、8。而因为只要求输出前 10 项，所以在输出 4 后结束。", "\n", "\n// 数据结构", "13.", "cpp : 此文件包含 ", "\"main\"", " 函数。程序执行将在此处开始并结束。\n//\n\n#include <iostream>\n#include<cmath>\nusing namespace ", "std", ";\nint main()\n{\n    int ", "first", ";//第一个数\n    int ", "second", ";//第二个数\n    int ", "num", ";//项数\n    int show1;//两数乘积所得的数\n    cin >> ", "first", " >> ", "second", " >> ", "num", ";\n    cout << ", "first", " << ", "\" \"", " << ", "second", " << ", "\" \"", ";\n    int ", "show", "[", "1001", "];//存储答案\n    ", "show", "[", "0", "] = ", "first", ";\n    ", "show", "[", "1", "] = ", "second", ";\n    int ah = ", "2", ";//用来计数\n    ", "for", " (int i = ", "2", ";i<", "num", ";i++ )\n    {\n        show1 = ", "first", " * ", "second", ";\n        ", "if", " (show1 > ", "9", ")\n        {\n            ", "show", "[ah] = show1 / ", "10", ";\n            ", "show", "[ah + ", "1", "] = show1 ", "%", " ", "10", ";\n            ", "first", " = ", "show", "[i - ", "1", "];\n            ", "second", " = ", "show", "[i];\n            ", "if", "(ah==", "num", "-", "1", ")\n            {cout<<", "show", "[ah];\n                ", "break", ";}\n            ", "else", " ", "if", "(ah<", "num", "-", "2", "&&ah>=", "2", ")\n            {cout<<", "show", "[ah]<<", "\" \"", "<<", "show", "[ah+", "1", "]<<", "\" \"", ";}\n            ", "else", " ", "if", "(ah==", "num", "-", "2", ")\n            {cout<<", "show", "[ah]<<", "\" \"", "<<", "show", "[ah+", "1", "];\n            ", "break", ";}\n            \n            ah = ah + ", "2", ";\n            \n        }\n        ", "else", " ", "if", " (show1 <= ", "9", "&&show1>=", "0", ")\n        {\n            ", "show", "[ah] = show1;\n            ", "first", " = ", "show", "[i-", "1", "];\n            ", "second", " = ", "show", "[i];\n            ", "if", " (ah < ", "num", " - ", "1", "&&ah>=", "2", ")\n            {\n                cout << ", "show", "[ah] << ", "\" \"", ";\n            }\n            ", "else", " ", "if", "(ah==", "num", "-", "1", ")\n            {cout<<", "show", "[ah];\n            ", "break", ";}\n            ah++;\n        }\n        \n            }\n}\n\n\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;oo&amp;#xff0c;我知道咯&amp;#xff0c;谢谢各位啦&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么说我的inp1没有定义呢？怎么调取输入的数据？", ["from tkinter import *", "root=Tk()", "root.title('计算器')", "def run1():", "    a=float(inp1.get())", "    b=float(inp2.get())", "    s='%.2f+%.2f=%.2f\\n'%(a,b,a+b)", "    txt.insert(END,s)", "    inp1.delete(0,END)", "    inp2.delete(0,END)", "def run2():", "    a=float(inp1.get())", "    b=float(inp2.get())", "    s='%.2f-%.2f=%.2f\\n'%(a,b,a-b)", "    txt.insert(END,s)", "    inp1.delete(0,END)", "    inp2.delete(0,END)", "def run3():", "    a=float(inp1.get())", "    b=float(inp2.get())", "    s='%.2f*%.2f=%.2f\\n'%(a,b,a*b)", "    txt.insert(END,s)", "    inp1.delete(0,END)", "    inp2.delete(0,END)", "\n", "def run4():", "    a=float(inp1.get())", "    b=float(inp2.get())", "    s='%.2f/%.2f=%.2f\\n'%(a,b,a/b)", "    txt.insert(END,s)", "    inp1.delete(0,END)", "    inp2.delete(0,END)", "\n", "lb1=Label(root,text='请输入两个数，按下面按钮进行计算')", "lb1.pack()", "txt1=Entry(root)", "txt2=Entry(root)", "txt1.pack()", "txt2.pack()", "bt1=Button(root,text='加法',command=run1)", "bt2=Button(root,text='减法',command=run2)", "bt3=Button(root,text='乘法',command=run3)", "bt4=Button(root,text='除法',command=run4)", "bt1.pack()", "bt2.pack()", "bt3.pack()", "bt4.pack()", "txt=Text(root)", "txt.pack()", "root.mainloop()"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;代码都不全&amp;#xff0c;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/715491188846169.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/016372188846166.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img align=\"left\" alt=\"img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/384733188846150.png\" class=\"md_img\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["这是一个简易计算器，设置四个按钮代表加减乘除，然后三个文本框，前两个文本框输入，第三个文本框显示结果，帮我看看哪出问题了，", ["package text2;", "\n", "public class Calculator {", "    public static void main(String[] args) {", "        WindowCalculator win = new WindowCalculator();", "        win.setTitle(\"计算\");", "    }", "}", "\n", "package text2;", "\n", "import java.awt.", ";", "import java.awt.event.ActionListener;", "import javax.swing.", ";", "import javax.swing.event.*;", "\n", "public class WindowCalculator extends JFrame implements DocumentListener{", "    JTextArea t", "\n", "Button button1,button2,button3,button4;\nPanel panel = ", "new", " ", "Panel()", ";\n\n\n\n", "WindowCalculator()", "{\n\n    \n\n    text1 = ", "new", " ", "JTextArea(8,8)", ";\n    text2 = ", "new", " ", "JTextArea(8,8)", ";\n    text3 = ", "new", " ", "JTextArea(8,8)", ";\n    \n    add(text1);\n    add(text2);\n    add(text3);\n    text1.set", "LineWrap(", "true", ")", ";\n    text2.set", "LineWrap(", "true", ")", ";\n    text3.set", "LineWrap(", "true", ")", ";\n    text3.set", "Editable(", "false", ")", ";\n    (text1.get", "Document()", ").add", "DocumentListener(", "this", ")", ";\n    (text2.get", "Document()", ").add", "DocumentListener(", "this", ")", ";\n    (text3.get", "Document()", ").add", "DocumentListener(", "this", ")", ";\n\n\n    JButton button1 = ", "new", " ", "JButton(", "\"加法运算\"", ")", ";\n    JButton button2 = ", "new", " ", "JButton(", "\"减法运算\"", ")", ";\n    JButton button3 = ", "new", " ", "JButton(", "\"乘法运算\"", ")", ";\n    JButton button4 = ", "new", " ", "JButton(", "\"除法运算\"", ")", ";\n    panel.add(button1);\n    panel.add(button2);\n    panel.add(button3);\n    panel.add(button4);\n    add(panel);\n    \n    set", "Layout(", "new", " FlowLayout()", ");\n    set", "Bounds(320,200,700,400)", ";\n    set", "Visible(", "true", ")", ";\n    set", "DefaultCloseOperation(JFrame.EXIT_ON_CLOSE)", ";\n    \n\n    button1.add", "ActionListener((ActionListener)", " this);\n    button2.add", "ActionListener((ActionListener)", " this);\n    button3.add", "ActionListener((ActionListener)", " this);\n    button4.add", "ActionListener((ActionListener)", " this);\n}\n\n\npublic void insert", "Update(DocumentEvent ", "e", ")", " {\n    ", "try", "{\n    double A = ", "Double", ".", "parse", "Double(", "text1", ".", "getText", "()", ");\n    double B = ", "Double", ".", "parse", "Double(", "text2", ".", "getText", "()", ");\n    double result = ", "0", ";\n    \n       ", "if", " (panel.equals(", "\"button1\"", ")){\n          result = A + B;\n       }\n       ", "else", " ", "if", " (panel.equals(", "\"button2\"", ")){\n           result = A - B;\n       }\n       ", "else", " ", "if", " (panel.equals(", "\"button3\"", ")){\n           result = A", " * ", "B;\n       }\n       ", "else", " ", "if", " (panel.equals(", "\"button4\"", ")){\n           result = A", " / ", "B;\n       }\n    text3.append(", "\"结果是：\"", " + result);\n   }\n   catch(Exception exp){\n       text3.append(", "\"字符错误，请删除后重新输入：\"", ");\n   }\n    \n}\n\n\npublic void remove", "Update(DocumentEvent ", "e", ")", " {\n    \n    changed", "Update(", "e", ")", ";\n}\n\n\npublic void changed", "Update(DocumentEvent ", "e", ")", " {\n    changed", "Update(", "e", ")", ";\n}\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考GPT和自己的思路&amp;#xff1a;&lt;/p&gt;\n&lt;p&gt;在这个代码中&amp;#xff0c;case 5 是用来求一组数字的累加和的。t&amp;#61;1 是为了存储计算阶乘时的结果。&lt;/p&gt;\n&lt;p&gt;在语句 if(n&amp;#61;&amp;#61;0) t&amp;#61;1; 中&amp;#xff0c;当输入的个数 n 为 0 时&amp;#xff0c;如果没有 t&amp;#61;1; 的话&amp;#xff0c;t 会被初始化为0&amp;#xff0c;然后后面计算阶乘时会造成错误的结果。&lt;/p&gt;\n&lt;p&gt;另外&amp;#xff0c;直接 if(n&amp;#61;&amp;#61;0); 语句是无用的&amp;#xff0c;因为代码中没有针对这种情况的处理&amp;#xff0c;如果只是想判断 n 是否为 0 的话&amp;#xff0c;应该写成 if(n&amp;#61;&amp;#61;0) {}。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言的设计计算菜单问题", ["问一下，case:5 里面的 t=1 是什么意思，为什么要加上去这个，好像不加 t=1;", "直接if（n==0）;也一样。不明白有人能帮忙解答一下吗？", "\n", "#include <stdio.h>", "\nvoid main()\n{\n    ", "int", " oper1,oper2,choice ,s=", "0", ",", "x", ",i,n,t=", "1", ";\n    ", "int", " sum,", "sub", ",", "mul", ";\n    double div;\n    char opnd;\n    ", "printf", "(", "\"高级计算机\\n\"", ");\n    ", "printf", "(", "\"1.加法   2.减法\"", ");\n    ", "printf", "(", "\"3.乘法   4.除非\"", ");\n    ", "printf", "(", "\"5.累加和 6.阶乘\\n\"", "); \n    scanf(", "\"%d\"", ",&choice);\n    ", "if", "(choice>=", "1", "&&choice<=", "4", ")\n    {\n        ", "printf", "(", "\"输入第一个操作数\\n\"", ");\n        scanf(", "\"%d\"", ",&oper1);\n        ", "printf", "(", "\"输入第二个操作数\\n\"", ");\n        scanf(", "\"%d\"", ",&oper2);\n    }\n    switch(choice)\n        {\n            case ", "1", ":sum=oper1+oper2;\n            ", "printf", "(", "\"%d+%d=%d\\n\"", ",oper1,oper2,sum);\n                ", "break", ";\n            case ", "2", ": ", "sub", "=", "oper1", "-", "oper2", ";\n            ", "printf", "(", "\"%d-%d=%d\\n\"", ",oper1,oper2,", "sub", ")", ";\n                ", "break", ";\n            case ", "3", ": mul=oper1 * oper2;\n            ", "printf", "(", "\"%d*%d=%d\\n\"", ",oper1,oper2,mul);\n                ", "break", ";\n            case ", "4", ": ", "if", "(oper2!=", "0", ")\n            {\n                div=oper1/oper2;\n            ", "printf", "(", "\"%d/%d=%d\\n\"", ",oper1,oper2,div);\n                ", "break", ";\n            }\n            ", "else", "\n            ", "printf", "(", "\"除数不能为0\\n\"", ");\n            case ", "5", ":    ", "printf", "(", "\"输入求累计和的个数:\\n\"", ");\n            scanf(", "\"%d\"", ",&n);\n            ", "printf", "(", "\"请输入%d个数:\\n\"", ",n);\n            ", "if", "(n==", "0", ") t=", "1", ";\n            ", "for", "(i=", "0", ";i<n;i++)\n            {\n                scanf(", "\"%d\"", ",&", "x", ");\n                s=s+", "x", ";\n            }\n            ", "printf", "(", "\"%d个数的累计和=%d\\n\"", ",n,s);    \n                ", "break", ";\n            case ", "6", ":    ", "printf", "(", "\"输入所求阶乘的数:\\n\"", ");\n            scanf(", "\"%d\"", ",&n);\n            ", "for", "(i=", "1", ";i<=n;i++)\n            t=t*i;\n            ", "printf", "(", "\"%d!=%d\\n\"", ",n,t);\n            ", "break", ";\n            default:", "printf", "(", "\"选择错误！\\n\"", ");\n    \n        }\n\n}\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;你前边已经将sign的值变为了int&amp;#xff0c;后边又判断sign是否等于&amp;#39;3&amp;#39;&amp;#xff0c;当然走的是else分支&amp;#xff0c;在else分支中打印的是没经过强制转换的ret&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么这里强制数据类型转化转化不了", ["【问题描述】编程实现简易的计算器：读入两个整数运算数(data1和data2)及一个运算符(op)，计算表达式data1 op data2的值，其中op可以是 + , -, ", ", / 。", "【输入形式】控制台输入运算数和运算符 :", "1.首先输入以空格分隔的两个整数，分别是data1和data2；", "2.输入一个字符作为运算符op，op可以是'+'，'-'，'", "'，'/'。", "输入时，data1、data2、op之间各留有一个空格。具体格式见样例输入。", "【输出形式】控制台输出运算结果。作除法运算时，若能够整除，则输出为整数，否则输出结果小数点后应保留两位有效数字。", "【样例输入】23 5 *", "【样例输出】115", "【样例说明】输入中先后输入第一个运算数23, 第二个运算数5, 运算符'*', 要求对23和5进行乘法运算。计算结果为115。", "\n", "#", "define", " _CRT_SECURE_NO_WARNINGS", "\n", "#", "include", "<stdio.h>", "\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " input1 = ", "0", ";\n    ", "int", " input2 = ", "0", ";\n    ", "char", " sign = ", "0", ";\n    ", "int", " ret = ", "0", ";\n    ", "printf", "(", "\"请输入两个操作数和你的操作符\"", ");\n    ", "scanf", "(", "\"%d %d %c\"", ", &input1,&input2,&sign);\n    ", "//int (*pfArr[4])(int, int) = { Add,Sub,Mul,Div };", "\n    ", "if", " (sign == ", "'+'", ")\n        sign = ", "0", ";\n    ", "else", " ", "if", " (sign == ", "'-'", ")\n        sign = ", "1", ";\n    ", "else", " ", "if", " (sign == ", "'*'", ")\n        sign = ", "2", ";\n    ", "else", " ", "if", " (sign == ", "'/'", ")\n        sign = ", "3", ";\n    ", "switch", " (sign)\n    {\n    ", "case", " ", "0", " :\n        ret = input1 + input2;\n        ", "break", ";\n    ", "case", " ", "1", ":\n        ret = input1 + input2;\n        ", "break", "; \n    ", "case", " ", "2", ":\n            ret = input1 + input2;\n            ", "break", ";\n    ", "case", " ", "3", ":\n        ret = (", "double", ")input1 / (", "double", ")input2;\n        ", "break", ";\n    }\n    ", "if", " (sign == ", "'3'", " && input1 % input2 != ", "0", ")\n        ", "printf", "(", "\"%.2lf\"", ", (", "double", ")ret);\n    ", "else", "\n        ", "/*ret = (pfArr[sign])(input1, input2);*/", "\n    ", "printf", "(", "\"%d\\n\"", ", ret);\n\n}\n\n", "\n", "\n", "不知道为什么这里强制数据类型转化失败了，希望能够得到帮助 谢谢大家了！！"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;解决了么&amp;#xff0c;留个方式详细说说&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["java代码出错分析", ["可以帮忙看看这个求分数加减乘除的代码哪里错了吗", "\n", "\npackage tow;\nimport java.util.Scanner;\npublic ", "class", " Main {\n     public static void main(String args", "[ ]", ") {\n           Scanner reader=", "new", " ", "Scanner(System.", "in", ")", ";\n         ", "int", " a,b,c,d;\n         a=reader.next", "Int()", ";b=reader.next", "Int()", ";\n         c=reader.next", "Int()", ";d=reader.next", "Int()", ";\n         Fraction f1=", "new", " ", "Fraction(", "a", ",", "b", ")", ";\n         Fraction f2=", "new", " ", "Fraction(", "c", ",", "d", ")", ";\n         Fraction f3=f1.add(f2);\n         f3.print", "()", ";\n         Fraction f4=f1.sub(f2);\n         f4.print", "()", ";\n         Fraction f5=f1.multi(f2);\n         f5.print", "()", ";\n         Fraction f6=f1.divide(f2);\n         f6.print", "()", ";\n                        ", "//此处补充程序", "\n                }\n}\n         \n         ", "class", " Fraction{\n         ", "int", " numerator;\n         ", "int", " denominator;\n         ", "Fraction()", "{}\n         ", "Fraction(", "int", " ", "n", ",", "int", " ", "d", ")", "{\n         numerator=n; denominator=d;\n             }\n         Fraction add(Fraction f2){\n         Fraction f3=", "new", " ", "Fraction()", ";\n         f3.numerator=numerator*f2.denominator+denominator*f2.numerator;\n         f3.denominator=denominator*f2.denominator;\n         return f3;\n             }\n         Fraction sub(Fraction f2){ ", "//分数的减法运算", "\n         Fraction f4=", "new", " ", "Fraction()", ";\n         f4.numerator=numerator*f2.denominator-denominator*f2.numerator;\n         f4.denominator=denominator*f2.denominator;\n         return f4;\n             }\n         Fraction multi(Fraction f2){ ", "//分数的乘法运算", "\n         Fraction f5=", "new", " ", "Fraction()", ";\n         f5.numerator=numerator*f2.numerator;\n         f5.denominator=denominator*f2.denominator;\n         return f5;\n             }\n         Fraction divide(Fraction f2){ ", "//分数的除法运算", "\n         Fraction f6=", "new", " ", "Fraction()", ";\n         f6.numerator=numerator*f2.denominator;\n         f6.denominator=denominator*f2.numerator;\n         return f6;\n             }\n         void print", "()", "{\n         reduction", "()", ";\n         ", "//以下输出需要修改成符合题目要求的形式", "\n         ", "if", "(numerator==", "0", ")", "System", ".", "out.println(", "\"0\"", ");\n         ", "else", " ", "if", "(denominator==", "1", ")", "System", ".", "out.println(numerator+", "\"\"", ");\n         ", "else", "\n         ", "System", ".", "out.printf(", "\"%d/%d\\n\"", ",numerator,denominator);\n             }\n         void reduction", "()", "{ ", "//对分数进行约分，化成最简分数", "\n         ", "//请补充完整。此处直接对numerator和denominator进行约分", "\n         ", "//求分子分母的最大公约数，记为a", "\n            ", "int", " a,x,y;\n         x=numerator;y=denominator;\n         ", "if", "(x<", "0", ") x=-x;\n         ", "if", "(y<", "0", ")\n         {\n          y=-y;denominator=-denominator;numerator=-numerator;\n         a=x%y;\n         ", "while", "(a!=", "0", ")\n         {\n          x=y;y=a;a=x%y;\n         }\n         numerator=numerator/y;\n         denominator=denominator/y; \n             }\n         }\n         \n\n"]], "Tag": "算法设计"}
{"Answer": "不知道你的题目是什么\r\nhttps://blog.csdn.net/qq_41247335/article/details/85276466\r\n\r\n如果是这个题目\r\n\r\n\r\n数据规模和约定 \r\n每个整数不超过`10000位 `，你只有100位", "Konwledge_Point": "乘法", "Question": ["大一菜鸟求助高精度计算问题", ["1.蓝桥杯高精度乘法，程序应该是对了，可提交时一直是：", "\n\n", "我已经绝望了，试了无数次，这道题的错误率已经被我拉上来了，没脸再测了，", "\n求大佬大哥大姐救救我！", "\n\n", "#include<iostream>\n#include <algorithm>\n#include<stdlib.h>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint a[101],b[101],sum[205],anum=1,bnum=1;\nchar  a1,b1;\nint main(){\n    memset(sum,0,sizeof(sum));\n    while((a1=getchar())!=' '){\n        a[anum]=a1-48;\n        anum++;\n    }anum--;\n       while((b1=getchar())!='\\n'){\n        b[bnum]=b1-48;\n        bnum++;\n    }\n    bnum--;\n    void f1(int,int);\n    for(int i=1;i<=anum;i++){\n        f1(a[i],anum-i);\n    }\n    for(int i=bnum+anum;i>=1;i--){\n        if(i==bnum+anum&&sum[i]==0)continue;\n\n        cout<<sum[i];\n    }\nreturn 0;\n}\nvoid f1(int cheng,int mi){\n    int mid[203];\n    memset(mid,0,sizeof(mid));\n    int i=mi+1,mnum=bnum;\n    for(;mnum>=1;mnum--,i++){\n        mid[i]+=(cheng*b[mnum])%10;\n        if((cheng*b[mnum])/10)mid[i+1]+=(cheng*b[mnum])/10;\n        if(mid[i]>=10){\n            mid[i+1]+=mid[i]/10;\n            mid[i]%=10;\n        }\n    if(mid[i+1]>=10){\n        mid[i+2]+=mid[i+1]/10;\n        mid[i+1]%=10;\n    }\n    }\nvoid add(int*,int);\nadd(mid,i);\n}\nvoid add(int *mid,int i){\n    for(int j=1;j<=i;j++){\n        sum[j]+=mid[j];\n    sum[j+1]+=sum[j]/10;\n    sum[j+1]%=10;\n        sum[j+2]+=sum[j+1]/10;\n    sum[j+2]%=10;\n        sum[j]%=10;\n    }\n}\n\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;修改处见注释&amp;#xff0c;供参考&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;math.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; x, y;       &lt;span class=\"hljs-comment\"&gt;//int x, y;&lt;/span&gt;\n&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, b;\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;plus&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.5f &amp;#43; %.5f&amp;#61;%.5f\\n&amp;#34;&lt;/span&gt;, a, b, a &amp;#43; b);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;minus&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.5f - %.5f&amp;#61;%.5f\\n&amp;#34;&lt;/span&gt;, a, b, a - b);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;multiply&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.5f * %.5f&amp;#61;%.5f\\n&amp;#34;&lt;/span&gt;, a, b, a * b);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;divide&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; a, &lt;span class=\"hljs-type\"&gt;double&lt;/span&gt; b)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (b !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)                  &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%.5f / %.5f&amp;#61;%.5f\\n&amp;#34;&lt;/span&gt;, a, b, a / b);\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;intput error\\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Interface&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;--------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;|          实用计算器          |\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;|            1-加法            |\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;|            2-减法            |\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;|            3-乘法            |\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;|            4-除法            |\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;|            0-退出            |\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;--------------------------------\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    你想要进行哪一种计算&amp;#xff08;0-4&amp;#xff09; \\n&amp;#34;&lt;/span&gt;);\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;input&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第一个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;a);         &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%lf\\n&amp;#34;, &amp;amp;a);&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;请输入第二个数字&amp;#xff1a;&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;, &amp;amp;b);         &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%lf\\n&amp;#34;, &amp;amp;b);&lt;/span&gt;\n}\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; c &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-comment\"&gt;//Interface(); &lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n    {\n        &lt;span class=\"hljs-built_in\"&gt;Interface&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//修改&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;do&lt;/span&gt;\n        {\n          &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;x);\n        } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (x &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || x&amp;gt;&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;();\n            &lt;span class=\"hljs-built_in\"&gt;plus&lt;/span&gt;(a, b);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;();    &lt;span class=\"hljs-comment\"&gt;//input(a, b);&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;minus&lt;/span&gt;(a, b);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (x &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;)\n        {\n            &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//input(a, b);&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;multiply&lt;/span&gt;(a, b);\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n        {\n            &lt;span class=\"hljs-built_in\"&gt;input&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//input(a, b);&lt;/span&gt;\n            &lt;span class=\"hljs-built_in\"&gt;divide&lt;/span&gt;(a, b);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;是否继续计算&amp;#xff1f;y 继续 n 退出\\n&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34; %c&amp;#34;&lt;/span&gt;, &amp;amp;y);    &lt;span class=\"hljs-comment\"&gt;//scanf(&amp;#34;%d&amp;#34;, &amp;amp;y);&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (y &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;)\n            c &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (y &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;)\n            &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    } &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (c);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["简单计算器的运行 在操作完一次后可以继续再次运行/退出", ["问题遇到的现象和发生背景", "\n", "运行程序出现错误 但是不知道该如何解决", "\n", "问题相关代码，请勿粘贴截图", "\n", "#", "include", " ", "<stdio.h>", "\n", "#", "include", " ", "<stdlib.h>", "\n", "#", "include", " ", "<math.h>", "\n", "int", " x,y;\n", "double", " a,b;\n", "void", " ", "plus", "(", "double", " a,", "double", " b)", "\n", "{\n    ", "printf", "(", "\"%.5f + %.5f=%.5f\\n\"", ",a,b,a+b);\n}\n", "void", " ", "minus", "(", "double", " a,", "double", " b)", "\n", "{\n    ", "printf", "(", "\"%.5f - %.5f=%.5f\\n\"", ",a,b,a-b);\n}\n", "void", " ", "multiply", "(", "double", " a,", "double", " b)", "\n", "{\n    ", "printf", "(", "\"%.5f * %.5f=%.5f\\n\"", ",a,b,a*b);\n}\n", "void", " ", "divide", "(", "double", " a,", "double", " b)", "\n", "{\n    ", "printf", "(", "\"%.5f / %.5f=%.5f\\n\"", ",a,b,a/b);\n}\n", "void", " ", "Interface", "()", "\n", "{\n    ", "printf", "(", "\"--------------------------------\\n\"", ");\n    ", "printf", "(", "\"|          实用计算器          |\\n\"", ");\n    ", "printf", "(", "\"|            1-加法            |\\n\"", ");\n    ", "printf", "(", "\"|            2-减法            |\\n\"", ");\n    ", "printf", "(", "\"|            3-乘法            |\\n\"", ");\n    ", "printf", "(", "\"|            4-除法            |\\n\"", ");\n    ", "printf", "(", "\"|            0-退出            |\\n\"", ");\n    ", "printf", "(", "\"--------------------------------\\n\"", ");\n    ", "printf", "(", "\"    你想要进行哪一种计算（0-4） \\n\"", ");\n}\n", "void", " ", "input", "()", "\n", "{\n    ", "printf", "(", "\"请输入第一个数字：\"", ");\n    ", "scanf", "(", "\"%lf\\n\"", ",&a);\n    ", "printf", "(", "\"请输入第二个数字：\"", ");\n    ", "scanf", "(", "\"%lf\\n\"", ",&b);\n}\n", "int", " ", "main", "(", "void", ")", "\n", "{\n    ", "int", " c=", "0", ";\n    ", "Interface", "();\n    ", "do", "\n    {\n\n        ", "do", "\n        {\n            ", "scanf", "(", "\"%d\"", ",&x);\n        }\n        ", "while", "(x<", "0", "||x>", "4", ");\n        ", "if", "(x==", "0", ")\n            ", "break", ";\n        ", "else", " ", "if", "(x==", "1", ")\n            {\n                ", "input", "();\n                ", "plus", "(a,b);\n            }\n        ", "else", " ", "if", "(x==", "2", ")\n            {\n                ", "input", "(a,b);\n                ", "minus", "(a,b);\n            }\n        ", "else", " ", "if", "(x==", "3", ")\n            {\n                ", "input", "(a,b);\n                ", "multiply", "(a,b);\n            }\n        ", "else", "\n            {\n                ", "input", "(a,b);\n                ", "divide", "(a,b);\n            }\n        ", "printf", "(", "\"是否继续计算？y 继续 n 退出\\n\"", ");\n        ", "scanf", "(", "\"%d\"", ",&y);\n        ", "if", "(y==", "'y'", ")\n            c=", "1", ";\n        ", "else", " ", "if", "(y==", "'n'", ")\n            ", "break", ";\n    }\n    ", "while", "(c);\n    ", "return", " ", "0", ";\n\n}\n\n\n", "\n", "运行结果及报错内容", "\n", "死循环  请输入第一个数字处会连续输入两次", "\n", "我想要达到的结果", "\n", "解决代码问题 正确运行"]], "Tag": "算法设计"}
{"Answer": "第一个问题 :if使用的是判断符==而不是赋值符=\r\n第二个问题：你使用的短路或，意思是只要一个成功那么这个条件就是成功的，而非0数据n都是代表ture\r\n第三个问题：加死循环，在加break的判断标识，什么时候想退出，就执行break条件", "Konwledge_Point": "乘法", "Question": ["java制作计算器功能遇到的问题", ["import java.util.Scanner;", "\n\n", "class  demo2 ", "\n{", "\n    public static void main(String[] args)", "\n    {", "\n        Scanner scanner = new Scanner(System.in);", "\n        System.out.println(\"请选择你要使用的计算器功能：\");", "\n        System.out.println(\"1：加  2：减  3：乘  4：除  5：平方\");", "\n          int n = scanner.nextInt();", "\n/*1*/   if (n =1)", "\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1+num2));", "\n           return;", "\n          }", "\n/*2*/   if (n>1 || n\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();  ", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1-num2));", "\n           return;", "\n          }", "\n/*3*/   if (n>2 || n\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();  ", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1*num2));", "\n           return;   ", "\n          }", "\n/*4*/   if (n>3 || n\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();  ", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1/num2));", "\n           return;", "\n          }", "\n/*5*/   if (n>4)", "\n          {", "\n          System.out.println(\"请输入平方数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();", "\n          System.out.println(\"所得的结果为:\"+(num1*num1));", "\n           return;", "\n         }", "\n\n", "}\n", "\n\n", "}", "\n\n", "这是打算做一个计算器的功能，遇到了3个问题\n1：通过输入数字选择计算器功能（1、加法  2、减法 。。。），我想用if（n=1）,if(n=2) 这种的，但是报错：错误: 不兼容的类型: int无法转换为boolean\n                                      /*1*/   if (n =1)\n                                                     ^\n                所以只能用了n<2表示n=1...                                   >\n2:从选择乘法开始，也就是n=3(n>2 || n<4)时开始，计算的结果是减法，选择除法也是                                                                      >\n3: 我想做到输入数据算出结果后，不是直接结束，而是跳转到最前面，继续重新选择计算器功能\n\n求大神解惑，新学java，懂得很少，问题也比较多\n"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n#include &amp;lt;stdio.h&amp;gt; \n \n#define &lt;span class=\"hljs-symbol\"&gt;MAX&lt;/span&gt;(a, b) ((a) &amp;gt; (b) ? (a) : (b))\nint main()\n{    \n    double f[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;}, d;\n    int a[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;}, i, j, k, m, n, r, c[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;] &amp;#61; {&lt;!-- --&gt;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;}, b[&lt;span class=\"hljs-number\"&gt;20&lt;/span&gt;];\n    char l[&lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;];\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, &amp;amp;r);\n    scanf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%s&amp;#34;&lt;/span&gt;,l);\n \n \n    n &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    while(l[n] !&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;\\0&amp;#39;&lt;/span&gt;){\n        //字符转换成数字\n        a[n] &amp;#61; l[n] - &lt;span class=\"hljs-number\"&gt;48&lt;/span&gt;;\n        n&amp;#43;&amp;#43;;\n    }\n    \n    //边界初始化\n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; n - r; i&amp;#43;&amp;#43;)\n    {\n        for (d &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)\n            d &amp;#61; d * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; a[j];\n        f[i][&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;] &amp;#61; d;    \n    }\n \n    //递推\n    for (j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; r; j&amp;#43;&amp;#43;)\n    {\n        for (i &amp;#61; j; i &amp;lt; n - r &amp;#43; j; i&amp;#43;&amp;#43;)\n        {\n            for (k &amp;#61; j; k &amp;lt; i; k&amp;#43;&amp;#43;)\n            {\n                for (d &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, m &amp;#61; k &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; m &amp;lt;&amp;#61; i; m&amp;#43;&amp;#43;)\n                    d &amp;#61; d * &lt;span class=\"hljs-number\"&gt;10&lt;/span&gt; &amp;#43; a[m];\n \n                if (f[i][j] &amp;lt; f[k][j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;] * d)\n                {\n                    f[i][j] &amp;#61; f[k][j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;] * d;\n                    c[i][j] &amp;#61; k;\n                }\n            }\n        }\n    }\n \n    //结果输出\n    j &amp;#61; r;\n    i &amp;#61; n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    while (j &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        b[j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;] &amp;#61; c[i][j];\n        i &amp;#61; c[i][j];\n        j--;\n    }\n \n    for (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, k &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; k &amp;lt;&amp;#61; r; k&amp;#43;&amp;#43;)\n    {\n        for (m &amp;#61; j; m &amp;lt;&amp;#61; (k &amp;#61;&amp;#61; r ? n - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; : b[k]); m&amp;#43;&amp;#43;)\n        {\n            printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;, a[m]);\n        }\n        if (k !&amp;#61; r) printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;×&amp;#34;&lt;/span&gt;);\n        j &amp;#61; b[k] &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    }\n \n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;%d&amp;#34;&lt;/span&gt;, (int)f[n&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;][r]);\n \n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["有没有人可以看看哪错了", ["给定一个正整数 M （1≤M≤5）和一个只包含数字的字符串（5<字行串长度≤20）。使用 M 个乘号插入到字符串中，且两个乖号不能相邻，插入后生成一个乘法算式，找中一种使乘法算式数值最大的插入方式，并将结果输出。（乘号不能放在字符串的首尾位置）", "\n", "如M=2，字符申为 123456，插入2个乘号。插入方式有：", "\n", "1×2×3456=6912，1x23×456=10488，1×234×56=13104，1×2345x6=14070， 12x3x456=16416，12×34×56=22848，12x345x6=24840，123x4x56=27552， 123x45×6=33210，1234x5×6=37020， 其中乘法算式数值最大是第十种，为 37020。", "\n", "输入描述：", "第一行输入一个正整数 M (1≤M≤5），表示乘号个数", "\n", "第二行输入一个只包含数字的字符串(5＜字符串长度≤20），表示要插入M 个乘号的字符串", "\n", "输出描述：", "输出一个整数，表示最大乘积数值", "\n", "输入数据 1", "2", "123456", "输出数据 1", "37020", "\n", "#include <stdio.h> \n \n#define ", "MAX", "(a, b) ((a) > (b) ? (a) : (b))\nint main()\n{    \n    double f[", "30", "][", "20", "] = {", "0", "}, d;\n    int a[", "30", "] = {", "0", "}, i, j, k, m, n, r, c[", "30", "][", "20", "] = {", "0", "}, b[", "20", "];\n    char l[", "30", "];\n    scanf(", "\"%d\"", ", &r);\n    scanf(", "\"%s\"", ",l);\n\n \n    n = ", "0", ";\n    while(l[n] != ", "'\\0'", "){\n        //字符转换成数字\n        a[n] = l[n] - ", "48", ";\n        n++;\n    }\n    \n    //边界初始化\n    for (i = ", "0", "; i < n - r; i++)\n    {\n        for (d = ", "0", ", j = ", "0", "; j <= i; j++)\n            d = d * ", "10", " + a[j];\n        f[i][", "0", "] = d;    \n    }\n \n    //递推\n    for (j = ", "1", "; j <= r; j++)\n    {\n        for (i = j; i < n - r + j; i++)\n        {\n            for (k = j; k < i; k++)\n            {\n                for (d = ", "0", ", m = k + ", "1", "; m <= i; m++)\n                    d = d * ", "10", " + a[m];\n \n                if (f[i][j] < f[k][j", "-1", "] * d)\n                {\n                    f[i][j] = f[k][j", "-1", "] * d;\n                    //保存乘号的位置\n                    c[i][j] = k;\n                }\n            }\n        }\n    }\n \n    //打印最优解\n    b[r] = c[n", "-1", "][r];\n    for(j = r - ", "1", "; j > ", "0", "; j--)\n        b[j] = c[b[j+", "1", "]][j];\n \n    for (j = ", "1", ", i = ", "0", "; j <= r; j++)    \n    {\n        while (i <= b[j])\n            printf(", "\"%c\"", ", l[i++]);\n        printf(", "\" * \"", ");\n    }    \n    printf(", "\" = %0.0f\\n\"", ", f[n", "-1", "][r]);\n}\n\n", "\n", "如果序列为3位数，则会输出0"]], "Tag": "算法设计"}
{"Answer": "你的计算器点击按钮没反应 你可以给你的按钮设置监听事件 点击完了 对应的按钮 在显示框上有对应的结果", "Konwledge_Point": "乘法", "Question": ["用java实现这个计算器为什么不能用（点击按钮为啥没反应），求大神解答？？", ["import java.awt.BorderLayout;", "\nimport java.awt.GridLayout;", "\nimport java.awt.event.ActionEvent;", "\nimport java.awt.event.ActionListener;", "\n\n", "import javax.swing.JButton;", "\nimport javax.swing.JFrame;", "\nimport javax.swing.JPanel;", "\nimport javax.swing.JTextField;", "\npublic class Calculate implements ActionListener{", "\n    String s=\"\";//数字存入这个变量", "\n    String s1=\"\";//保存运算符", "\n    String s2=\"\";//用于显示；", "\n    JTextField jt=new JTextField(20);", "\n    String z=\"+,-,*,/\";", "\n    String z1=\"0,1,2,3,4,5,6,7,8,9,.\";", "\n    double d;//用来存储运算符左边的数", "\n    public void actionPerformed(ActionEvent e){", "\n        String s3=e.getActionCommand();", "\n        if(s3.contains(z1)){", "\n            s=s+s3;", "\n            s2=s;", "\n            jt.setText(s2);", "\n        }", "\n        if(s3.contains(z)){", "\n            d=Double.parseDouble(s2);", "\n            s=\"\";//清零", "\n            s1=s3;//存入运算符", "\n        }", "\n        if(s3.equals(\"=\")){", "\n            if(s2.equals(\"+\")){", "\n                s2=(d+Double.parseDouble(s))+\"\";//实现加法", "\n            }", "\n            if(s2.equals(\"-\")){", "\n                s2=(d-Double.parseDouble(s))+\"\";//实现减法", "\n            }", "\n            if(s2.equals(\"*\")){", "\n                s2=(d*Double.parseDouble(s))+\"\";//实现乘法", "\n            }", "\n            if(s2.equals(\"/\")){", "\n                s2=(d/Double.parseDouble(s))+\"\";//实现除法", "\n            }", "\n            jt.setText(s2);", "\n            s=\"\";//运算结束清零", "\n        }", "\n    }", "\n    public Calculate(){", "\n        JFrame jf=new JFrame(\"Calculate\");", "\n        JPanel p=new JPanel();//面板", "\n        JButton[] b=new JButton[16];", "\n            GridLayout grid=new GridLayout(4,4);", "\n            String[] lab={\"7\",\"8\",\"9\",\"+\",", "\n                          \"4\",\"5\",\"6\",\"-\",", "\n                          \"1\",\"2\",\"3\",\"*\",", "\n                          \"0\",\".\",\"/\",\"=\"", "\n            };", "\n            for(int i=0;i<b.length;i++){", "\n                b[i]=new JButton(lab[i]);", "\n                p.add(b[i]);", "\n                b[i].addActionListener(this);", "\n            }", "\n            p.setLayout(grid);", "\n            jf.add(jt,BorderLayout.NORTH);", "\n            jf.add(p);", "\n            jf.setResizable(false);", "\n            jf.setLocation(300,200);", "\n            jf.pack();", "\n            jf.setVisible(true);", "\n            jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);", "\n        }", "\n    public static void main(String[] args){", "\n        new Calculate();", "\n    }", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在case 5: 和case 6:后各放一个count&amp;#61;0;&lt;br /&gt;不然连续进行计算后count就累计了&lt;br /&gt;case 7:后面也要加一个i&amp;#61;0;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言计算器伪代码该如何写？", ["int main()", "{", "    char a[100],b;", "    long int n;", "    int i,j,re,num,select,count = 0;", "do", "    {   menu();    //打印出菜单界面", "        printf(\"\\nPlease select an option : \");", "        scanf(\"%d\", &select);   //输入你的选项", "        switch (select)", "        {", "        case 1://实现加法功能", "            printf(\"please input the number(Two digits separated by a space):  \");", "            scanf(\"%d%d\", &i, &j);", "            printf(\"%d+%d=%d\\n\", i, j, num = i + j);", "            break;", "        case 2: //实现减法功能", "            printf(\"please input the number(Two digits separated by a space): \");", "            scanf(\"%d%d\", &i, &j);", "            printf(\"%d-%d=%d\\n\", i, j, num = i - j);", "            break;", "        case 3:// 实现乘法功能", "            printf(\"please input the number(Two digits separated by a space): \");", "            scanf(\"%d%d\", &i, &j);", "            printf(\"%d*%d=%d\\n\", i, j, num = i*j);", "            break;", "        case 4:  //实现除法功能", "            printf(\"please input the number(Two digits separated by a space): \");", "            scanf(\"%d%d\", &i, &j);", "            printf(\"%d/%d=%d\\n\", i, j, num = i / j);", "            break;", "        case 5:  //实现十进制转换2进制", "            printf(\"please input the number: \");", "            scanf(\"%d\",&i);", "             do{ a[count++]=i%2;i=i/2; }while(i!=0);", "             for(int z=count-1;z>=0;z--){", "             printf(\"%d\",a[z]);}", "             break;", "        case 6:  //实现十进制转换8进制", "            printf(\"please input the number: \");", "            scanf(\"%d\",&i);", "             do{ a[count++]=i%8;i=i/8; }while(i!=0);", "             for(int z=count-1;z>=0;z--){", "             printf(\"%d\",a[z]);}", "             break;", "        case 7:  // 实现十进制转换16进制", "             printf(\"please input the number: \");", "             scanf(\"%ld\",&n);", "               while(n!=0){ re = n%16;", "               if( re>9 ){ a[i++] = (char)(re - 10) + 'a';", "                }else{ a[i++] = (char)re + '0'; }", "                n = n>>4; }", "            a[i--] = '\\0';", "                for(j=0;j<((i+1)>>1);j++){b = a[i-j]; a[i-j] = a[j]; a[j] = b;}", "             printf(\"%s\\n\",a);", "             break;", "        case 0:", "            printf(\"exit Calculator\");", "            break;", "        default:", "            printf(\"invalid number \");", "            break;", "        }", "\n", "} ", "while", " (", "select", ");\n", "return", " ", "0", ";\n", "\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;我知道了&amp;#xff0c;抱歉QAQ&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为啥这个结构不对呢#c++#", ["给定一个正整数 M （1≤M≤5）和一个只包含数字的字符串（5<字行串长度≤20）。使用 M 个乘号插入到字符串中，且两个乖号不能相邻，插入后生成一个乘法算式，找中一种使乘法算式数值最大的插入方式，并将结果输出。（乘号不能放在字符串的首尾位置）", "\n", "如M=2，字符申为 123456，插入2个乘号。插入方式有：", "\n", "1×2×3456=6912，1x23×456=10488，1×234×56=13104，1×2345x6=14070， 12x3x456=16416，12×34×56=22848，12x345x6=24840，123x4x56=27552， 123x45×6=33210，1234x5×6=37020， 其中乘法算式数值最大是第十种，为 37020。", "\n", "输入描述：", "第一行输入一个正整数 M (1≤M≤5），表示乘号个数", "\n", "第二行输入一个只包含数字的字符串(5＜字符串长度≤20），表示要插入M 个乘号的字符串", "\n", "输出描述：", "输出一个整数，表示最大乘积数值", "\n", "输入数据 1", "2", "123456", "输出数据 1", "37020", "\n", "#include <stdio.h> \n \n#define ", "MAX", "(a, b) ((a) > (b) ? (a) : (b))\nint main()\n{    \n    double f[", "30", "][", "20", "] = {", "0", "}, d;\n    int a[", "30", "] = {", "0", "}, i, j, k, m, n, r, c[", "30", "][", "20", "] = {", "0", "}, b[", "20", "];\n    char l[", "30", "];\n    scanf(", "\"%d\"", ", &r);\n    scanf(", "\"%s\"", ",l);\n \n \n    n = ", "0", ";\n    while(l[n] != ", "'\\0'", "){\n        //字符转换成数字\n        a[n] = l[n] - ", "48", ";\n        n++;\n    }\n    \n    //边界初始化\n    for (i = ", "0", "; i < n - r; i++)\n    {\n        for (d = ", "0", ", j = ", "0", "; j <= i; j++)\n            d = d * ", "10", " + a[j];\n        f[i][", "0", "] = d;    \n    }\n \n    //递推\n    for (j = ", "1", "; j <= r; j++)\n    {\n        for (i = j; i < n - r + j; i++)\n        {\n            for (k = j; k < i; k++)\n            {\n                for (d = ", "0", ", m = k + ", "1", "; m <= i; m++)\n                    d = d * ", "10", " + a[m];\n \n                if (f[i][j] < f[k][j", "-1", "] * d)\n                {\n                    f[i][j] = f[k][j", "-1", "] * d;\n                    //保存乘号的位置\n                    c[i][j] = k;\n                }\n            }\n        }\n    }\n \n    //打印最优解\n    b[r] = c[n", "-1", "][r];\n    for(j = r - ", "1", "; j > ", "0", "; j--)\n        b[j] = c[b[j+", "1", "]][j];\n \n    for (j = ", "1", ", i = ", "0", "; j <= r; j++)    \n    {\n        while (i <= b[j])\n            printf(", "\"%c\"", ", l[i++]);\n        printf(", "\" * \"", ");\n    }    \n    printf(", "\" = %0.0f\\n\"", ", f[n", "-1", "][r]);\n}\n \n\n\n", "\n", "如果序列为3位数，则会输出0"]], "Tag": "算法设计"}
{"Answer": "关于第二个问题，题主的代码是\r\n\r\n```\r\n if (n &gt; 1){\r\n\t 做减法\r\n }\r\n if (n &gt; 2){\r\n\t 做乘法\r\n }\r\n```\r\n若输入3，当程序运行到第一个if语句时由于满足 n &gt; 1的条件，所以还是会先做减法\r\n解决方法可以是\r\n```\r\n while(1){\r\n\t输入n\r\n\tswitch(n){\r\n\t\tcase 1:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\tcase 2:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t}\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["新学java遇到问题了，求大神指点", ["import java.util.Scanner;", "\n\n", "class  demo2 ", "\n{", "\n    public static void main(String[] args)", "\n    {", "\n        Scanner scanner = new Scanner(System.in);", "\n        System.out.println(\"请选择你要使用的计算器功能：\");", "\n        System.out.println(\"1：加  2：减  3：乘  4：除  5：平方\");", "\n          int n = scanner.nextInt();", "\n/*1*/   if (n < 2)", "\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1+num2));", "\n           return;", "\n          }", "\n/*2*/   if (n>1 || n\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();  ", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1-num2));", "\n           return;", "\n          }", "\n/*3*/   if (n>2 || n\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();  ", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1*num2));", "\n           return;   ", "\n          }", "\n/*4*/   if (n>3 || n\n          {", "\n          System.out.println(\"请输入第一个数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();  ", "\n          System.out.println(\"请输入第二个数据：\");", "\n           long num2 = scanner.nextInt(); ", "\n          System.out.println(\"所得的结果为:\"+(num1/num2));", "\n           return;", "\n          }", "\n/*5*/   if (n>4)", "\n          {", "\n          System.out.println(\"请输入平方数据(必须遵循算数规则）：\");", "\n           long num1 = scanner.nextInt();", "\n          System.out.println(\"所得的结果为:\"+(num1*num1));", "\n           return;", "\n         }", "\n\n", "}\n", "\n\n", "}", "\n\n", "这个我要做的是一个计算器，遇到了3个问题：\n1：输入一个数n，用来选择哪个计算（1加法，2减法。。。）我想用if（n=1）、if（n=2）但是报错：错误: 不兼容的类型: int无法转换为boolean\n                                           /*1*/   if (n =1)\n                                                          ^\n   所以我只能把n=1写成 n<2...   ;                                           >\n2：从第三个开始，也就是我想用乘法的时候（n=3，n=4,n=5）他依然计算的是减法\n\n3、我想做到，比如选择加法，计算完之后，不是直接结束而是跳转到最开始，继续重新选择要使用的计算器功能\n\n求大神指点，刚学没几天，问题比较多，大神见谅\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;while(flag1&amp;#61;flag2&amp;#61;1)造成死循环&lt;/p&gt;\n\n&lt;p&gt; &lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["为什么运行不出结果？", ["蓝桥杯马虎的算式", "\n\n", "小明是个急性子，上小学的时候经常把老师写在黑板上的题目抄错了。", "\n有一次，老师出的题目是：36 x 495 = ?", "\n他却给抄成了：396 x 45 = ?", "\n但结果却很戏剧性，他的答案竟然是对的！！", "\n因为 36 * 495 = 396 * 45 = 17820", "\n类似这样的巧合情况可能还有很多，比如：27 * 594 = 297 * 54", "\n\n", "假设 a b c d e 代表1~9不同的5个数字（注意是各不相同的数字，且不含0）", "\n能满足形如： ab * cde = adb * ce 这样的算式一共有多少种呢？", "\n请你利用计算机的优势寻找所有的可能，并回答不同算式的种类数。", "\n满足乘法交换律的算式计为不同的种类，所以答案肯定是个偶数。", "\n ", "\n\n", "用c语言jie'ti", "\n\n", "\n", "#include<stdio.h>\nint main()\n{\n\tint i,c,d,e,f,g,sum=0;\n\tint j,k;//用来代替i\n\tint flag1=0,flag2=0;//做标志 \n\tint h,t;//代表 h=f*100+d*10+g;\n\tfor(i=100;i<1000;i++){\n\t    k=i;\n\t    c=k/100;//百位 \n\t    d=k/10%10;//十位\n\t\te=k%10;//个位 \n\t    if(c!=d&&c!=e&&d!=e){\n\t    \tflag1=1;\n\t\t}\n    }\n\tfor(i=10;i<100;i++){\n\t    j=i;\n\t    f=j/10;//十位\n\t\tg=j%10;//个位 \n\t    if(f!=g){\n\t    \tflag2=1;\n\t    }\n\t}\n\t\n    while(flag1=flag2=1){\n    \th=f*100+d*10+g;\n\t    t=c*10+e;\n    \tif(j*k==h*t){\n    \t\tsum=sum+1;\n\t\t}\t\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;应该使用i2作为switch的条件,i1是第一个选择,i2才是第二个选择&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Java 中switch语句，case四个，但是不管选择1234的哪个，都是按照第一个输出", ["\n", "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage hz;\nimport java.io.*;\n/**\n *\n * @author user\n */\npublic class Hz {\n    public static void main(String[] args){\n    try\n    {\n                InputStreamReader isr = new  InputStreamReader (System.in);\n                BufferedReader br = new BufferedReader(isr);\n                System.out.println(\"请输入计算种类：\\n1.四则运算：\\n2.计算面积：\");\n                int i1 = Integer.valueOf(br.readLine());\n                if(i1==1)\n                {\n                    System.out.println(\"输入计算方法:\\n1.加法\\n2.减法\\n3.乘法\\n4.除法\");\n                    int i2 = Integer.valueOf(br.readLine());\n                    System.out.println(\"输入两个数用空格隔开：\");\n                    String[] s = br.readLine().split(\" \");\n                    double x = Double.valueOf(s[0]);\n                    double y = Double.valueOf(s[1]); \n                    switch(i1)\n                    {\n                        case 1:\n                                System.out.println(x+\"+\"+y+\"=\"+(x+y));\n                                break;\n                                \n                        case 2:\n                                System.out.println(x+\"-\"+y+\"=\"+(x-y));\n                                break;\n                        case 3:\n                                System.out.println(x+\"*\"+y+\"=\"+(x*y));\n                                break;\n                        case 4:\n                                System.out.println(x+\"/\"+y+\"=\"+(x/y));\n                                break;\n                    }   \n                }else\n                {\n                    System.out.println(\"选择图形：\\n1.正方形\\n2.矩形\\n3.图形\\n4.三角形\");\n                    int i2 = Integer.valueOf(br.readLine());\n                    System.out.println(\"输入两个数用空格隔开：\");\n                    String[] s = br.readLine().split(\" \");\n                    double x = Double.valueOf(s[0]);\n                    \n                    switch(i2)\n                    {\n                        case 1:\n                                System.out.println(\"正方形面积：\"+x*x);\n                                break;\n                        case 2:\n                                double y = Double.valueOf(s[1]);\n                                System.out.println(\"矩形面积：\"+x*y);\n                                break;\n                        case 3:\n                                System.out.println(\"圆形面积：\"+Math.PI*x*x);\n                                break;\n                        case 4:\n                                 double z = Double.valueOf(s[1]);\n                                System.out.println(\"三角形面积：\"+0.5*x*z);\n                                break;\n                }\n    }\n    }catch(Exception e)\n    {\n        e.printStackTrace();\n        \n    }}\n\n     \n    \n    \n    \n    \n    \n    \n    \n    \n}", "\n\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;Complex类没有重载&amp;lt;&amp;lt;运算符&amp;#xff0c;所以在使用cout&amp;lt;&amp;lt;t02的时候会报错。在Complex类中重载&amp;lt;&amp;lt;运算符就可以了&amp;#xff0c;代码修改如下&amp;#xff08;修改部分有注释&amp;#xff09;&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n&lt;span class=\"hljs-comment\"&gt;//在程序中想要直接使用 cin 和 cout &amp;#xff0c;必须作正确的文件包含。&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;class&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;Complex&lt;/span&gt; &lt;span class=\"hljs-comment\"&gt;//定义复数类&lt;/span&gt;\n{\n&lt;span class=\"hljs-keyword\"&gt;private&lt;/span&gt;:\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; real, imag;\n&lt;span class=\"hljs-keyword\"&gt;public&lt;/span&gt;:\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//构造无参函数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; r &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;//带参构造函数&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Complex&amp;amp; cx); &lt;span class=\"hljs-comment\"&gt;//拷贝构造函数&lt;/span&gt;\n    ~&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(); &lt;span class=\"hljs-comment\"&gt;//析构函数&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//类中的成员函数&amp;#xff0c;表示一个复数具有的行为&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;minus&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//类中的成员函数&amp;#xff0c;表示一个复数具有的行为&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;multiply&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//类中的成员函数&amp;#xff0c;表示一个复数具有的行为&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;dicision&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;/span&gt;; &lt;span class=\"hljs-comment\"&gt;//类中的成员函数&amp;#xff0c;表示一个复数具有的行为&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;span class=\"hljs-comment\"&gt;//实现复数的输出&lt;/span&gt;\n\n    &lt;span class=\"hljs-keyword\"&gt;friend&lt;/span&gt; ostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Complex&amp;amp; c); &lt;span class=\"hljs-comment\"&gt;//修改&amp;#xff0c;重载&amp;lt;&amp;lt;运算符&lt;/span&gt;\n};\n\n&lt;span class=\"hljs-comment\"&gt;//类外实现公有成员函数&lt;/span&gt;\nComplex::&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;()&lt;span class=\"hljs-comment\"&gt;//无参函数&lt;/span&gt;\n{\n    real &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    imag &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;The complex is constructed.&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n}\n\nComplex::&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; real, &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; imag)&lt;span class=\"hljs-comment\"&gt;//带参构造函数&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;real &amp;#61; real;\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;imag &amp;#61; imag;\n}\nComplex::&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Complex&amp;amp; m)&lt;span class=\"hljs-comment\"&gt;//拷贝构造函数&lt;/span&gt;\n{\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;real &amp;#61; m.real;\n    &lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;-&amp;gt;imag &amp;#61; m.imag;\n}\nComplex::~&lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;()&lt;span class=\"hljs-comment\"&gt;//析构函数&lt;/span&gt;\n{\n}\n\n&lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;Complex::add&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//复数加法&lt;/span&gt;\n&lt;/span&gt;{\n    real &amp;#43;&amp;#61; c.real;\n    imag &amp;#43;&amp;#61; c.imag;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;Complex::minus&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//复数减法&lt;/span&gt;\n&lt;/span&gt;{\n    real -&amp;#61; c.real;\n    imag -&amp;#61; c.imag;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;Complex::multiply&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//复数乘法&lt;/span&gt;\n&lt;/span&gt;{\n    real &amp;#61; real*c.real - imag*c.imag;\n    imag &amp;#61; real*c.imag &amp;#43; imag*c.real;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;Complex &lt;span class=\"hljs-title\"&gt;Complex::dicision&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(Complex c)&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//复数除法&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;float&lt;/span&gt; t &amp;#61; c.real * c.real &amp;#43; c.imag * c.imag;\n    real &amp;#61; (real*c.real &amp;#43; imag*c.imag) / t;\n    imag &amp;#61; (imag*c.real - real*c.imag) / t;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; *&lt;span class=\"hljs-keyword\"&gt;this&lt;/span&gt;;\n}\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;Complex::Display&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;&lt;span class=\"hljs-comment\"&gt;//复数输出&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (imag &amp;gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        cout &amp;lt;&amp;lt; real &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; imag &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (imag &amp;lt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n    {\n        cout &amp;lt;&amp;lt; real &amp;lt;&amp;lt; imag &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; endl;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        cout &amp;lt;&amp;lt; real &amp;lt;&amp;lt; endl;\n    }\n}\n&lt;span class=\"hljs-comment\"&gt;//修改&amp;#xff0c;重载&amp;lt;&amp;lt;运算符&lt;/span&gt;\nostream&amp;amp; &lt;span class=\"hljs-keyword\"&gt;operator&lt;/span&gt;&amp;lt;&amp;lt;(ostream&amp;amp; os, &lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; Complex&amp;amp; c)\n{\n    os &amp;lt;&amp;lt; c.real &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; c.imag &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;i&amp;#34;&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; os;\n}\n\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    Complex c1 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n    Complex c2 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;-4&lt;/span&gt;);\n    Complex c3 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;);\n    Complex c4 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;);\n    Complex c5 &amp;#61; &lt;span class=\"hljs-built_in\"&gt;Complex&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;21&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;输入的复数如下&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;;\n    c1.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    c2.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    c3.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    c4.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    c5.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;得到的运算结果如下&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;;\n    Complex t01 &amp;#61; c1.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(c2);\n    c2.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    c1.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    t01.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    Complex t02 &amp;#61; c2.&lt;span class=\"hljs-built_in\"&gt;minus&lt;/span&gt;(c3);\n    cout &amp;lt;&amp;lt; &lt;span class=\"hljs-string\"&gt;&amp;#34;t02 &amp;#61; &amp;#34;&lt;/span&gt; &amp;lt;&amp;lt; t02 &amp;lt;&amp;lt; endl;\n    t02.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    Complex t03 &amp;#61; c4.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(c2);\n    t03.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    Complex t04 &amp;#61; c5.&lt;span class=\"hljs-built_in\"&gt;minus&lt;/span&gt;(c3);\n    t04.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n    Complex t05 &amp;#61; c1.&lt;span class=\"hljs-built_in\"&gt;add&lt;/span&gt;(c1);\n    t05.&lt;span class=\"hljs-built_in\"&gt;Display&lt;/span&gt;();\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["C++语言编译，在main()函数输出时语句报错", ["问题遇到的现象和发生背景", "\n", "C++语言编译 复数类，测试输入输出", "\n", "问题相关代码，请勿粘贴截图", "\n", "#include ", "#include ", "#include<stdio.h>", "using namespace std;", "//在程序中想要直接使用 cin 和 cout ，必须作正确的文件包含。", "\n", "class Complex //定义复数类", "{", "private:", "    float real, imag;", "public:", "    Complex();  //构造无参函数", "    Complex(float r = 0, float i = 0);  //带参构造函数", "    Complex(const Complex& cx);   //拷贝构造函数", "    ~Complex();      //析构函数", "    Complex add(Complex c); //类中的成员函数，表示一个复数具有的行为", "    Complex minus(Complex c); //类中的成员函数，表示一个复数具有的行为", "    Complex multiply(Complex c); //类中的成员函数，表示一个复数具有的行为", "    Complex dicision(Complex c); //类中的成员函数，表示一个复数具有的行为", "    void Display();//实现复数的输出", "};", "\n", "//类外实现公有成员函数", "Complex::Complex()//无参函数", "{", "    real = 0;", "    imag = 0;", "    cout << \"The  complex is constructed.\" << endl;", "}", "\n", "Complex::Complex(float real, float imag)//带参构造函数", "{", "    this->real = real;", "    this->imag = imag;", "}", "Complex::Complex(const Complex& m)//拷贝构造函数", "{", "    this->real = m.real;", "    this->imag = m.imag;", "}", "Complex::~Complex()//析构函数", "{", "}", "\n", "Complex Complex::add(Complex c)//复数加法", "{", "    real += c.real;", "    imag += c.imag;", "    return *this;", "}", "\n", "Complex Complex::minus(Complex c)//复数减法", "{", "    real -= c.real;", "    imag -= c.imag;", "    return *this;", "}", "\n", "Complex Complex::multiply(Complex c)//复数乘法", "{", "    real = real", "c.real-imag", "c.imag;", "    imag = real", "c.imag+imag", "c.real;", "    return *this;", "}", "\n", "Complex Complex::dicision(Complex c)//复数除法", "{", "    float t = c.real * c.real + c.imag * c.imag;", "    real = (real", "c.real+imag", "c.imag)/t;", "    imag = (imag", "c.real-real", "c.imag)/t;", "    return *this;", "}", "\n", "void Complex::Display()//复数输出", "{", "   if(imag > 0)", "    {", "       cout << real << \"+\" << imag << \"i\" << endl;", "    }", "   else if (imag < 0)", "   {", "       cout << real << imag << \"i\" << endl;", "   }", "   else {", "       cout << real << endl;", "   }", "}", "int main()", "{", "    Complex c1 = Complex(3, 4);", "    Complex c2 = Complex(9, -4);", "    Complex c3 = Complex(4, 9);", "    Complex c4 = Complex(8, 4);", "    Complex c5 = Complex(21, 7);", "    cout << \"输入的复数如下：\\n\";", "    c1.Display();", "    c2.Display();", "    c3.Display();", "    c4.Display();", "    c5.Display();", "    cout << \"得到的运算结果如下：\\n\";", "    Complex t01 = c1.add(c2);", "    c2.Display();", "    c1.Display();", "    t01.Display();", "    Complex t02 = c2.minus(c3);", "    cout<< \"t02 = \" << t02<< endl;", "    t02.Display();", "    Complex t03 = c4.add(c2);", "    t03.Display();", "    Complex t04 = c5.minus(c3);", "    t04.Display();", "    Complex t05 = c1.add(c1);", "    t05.Display();", "}", "\n", "运行结果及报错内容", "\n", "\n", "我的解答思路和尝试过的方法", "\n", "在用cout<<\"t02=\"<<t02<<endl;作为输出语句时，“<<” 报错", "\n", "我想要达到的结果", "\n", "正常输出语句即可"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n你这里就不对\n&lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (strcmp(m, &lt;span class=\"hljs-string\"&gt;&amp;#34;Y&amp;#34;&lt;/span&gt;) &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n\n改成\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(m &amp;#61;&amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言分函数求数学运算结果", ["#", "include", "<stdio.h>", "\n", "#", "include", "<string.h>", "\n", "void", " ", "menu", "()", "\n", "{\n    ", "printf", "(", "\"\\t\\t\\t\\t*****欢迎使用简易运算系统*****\\n\"", ");\n    ", "printf", "(", "\"\\t\\t\\t\\t***|    1.加法           | ***\\n\"", ");\n    ", "printf", "(", "\"\\t\\t\\t\\t***|    2.减法           | ***\\n\"", ");\n    ", "printf", "(", "\"\\t\\t\\t\\t***|    3.乘法           | ***\\n\"", ");\n    ", "printf", "(", "\"\\t\\t\\t\\t***|    4.除法           | ***\\n\"", ");\n    ", "printf", "(", "\"\\t\\t\\t\\t***|    0.退出           | ***\\n\"", ");\n    ", "printf", "(", "\"\\t\\t\\t\\t******************************\\n\"", ");\n    ", "printf", "(", "\"\\t\\t\\t\\t请输入运行代码:\\n\"", ");\n    ", "return", ";\n}\n", "void", " ", "jia", "()", "\n", "{\n    ", "float", " x, y;\n    ", "char", " m;\n    ", "float", " z;\n    ", "printf", "(", "\"请输入两个数\"", ");\n    ", "scanf", "(", "\"%f,%f\"", ",&x,&y);\n    ", "getchar", "();\n    ", "printf", "(", "\"是否继续，请输入（Y/N）\"", ");\n    ", "scanf", "(", "\"%c\"", ", &m);\n    ", "if", " (", "strcmp", "(m, ", "\"Y\"", ") == ", "0", ")\n    {\n        z = x + y;\n        ", "printf", "(", "\"二者和为%f\"", ", z);\n    }\n    ", "else", "\n    {\n        ", "system", "(", "\"pause\"", "); ", "system", "(", "\"cls\"", ");\n    }\n}\n", "void", " ", "jian", "()", "\n", "{\n    ", "float", " x, y;\n    ", "printf", "(", "\"请输入两个数\"", ");\n    ", "scanf", "(", "\"%f,%f\"", ", &x, &y);\n    ", "printf", "(", "\"是否继续，请输入（Y/N）\"", ");\n    ", "char", " m;\n    ", "scanf", "(", "\"%c\"", ", &m);\n    ", "getchar", "();\n    ", "if", " (", "strcmp", "(m, ", "\"Y\"", ") == ", "0", ")\n    {\n        ", "float", " z;\n        z = x - y;\n        ", "printf", "(", "\"二者差为%f\"", ", z);\n    }\n    ", "else", "\n    {\n        ", "system", "(", "\"pause\"", "); ", "system", "(", "\"cls\"", ");\n    }\n}\n", "void", " ", "cheng", "()", "\n", "{\n    ", "float", " x, y;\n    ", "printf", "(", "\"请输入两个数\"", ");\n    ", "scanf", "(", "\"%f,%f\"", ", &x, &y);\n    ", "getchar", "();\n    ", "printf", "(", "\"是否继续，请输入（Y/N）\"", ");\n    ", "char", " m;\n    ", "scanf", "(", "\"%c\"", ", &m);\n    ", "if", " (", "strcmp", "(m, ", "\"Y\"", ") == ", "0", ") {\n        ", "float", " z;\n        z = x * y;\n        ", "printf", "(", "\"二者乘积为%f\"", ", z);\n    }\n    ", "else", " {\n        ", "system", "(", "\"pause\"", "); ", "system", "(", "\"cls\"", ");\n    }\n}\n", "void", " ", "chu", "()", "\n", "{\n    ", "float", " x, y;\n    ", "printf", "(", "\"请输入两个数\"", ");\n    ", "scanf", "(", "\"%f,%f\"", ", &x, &y);\n    ", "getchar", "();\n    ", "printf", "(", "\"是否继续，请输入（Y/N）\"", ");\n    ", "char", " m;\n    ", "scanf", "(", "\"%c\"", ", &m);\n    ", "if", " (", "strcmp", "(m, ", "\"Y\"", ") == ", "0", ")\n    {\n        ", "float", " z;\n        ", "if", " (y == ", "0", ")\n        {\n            ", "printf", "(", "\"输入错误！除数不能为0！\"", ");\n            ", "return", " ", "0", ";\n        }\n        ", "else", "\n        {\n            z = x / y;\n            ", "printf", "(", "\"二者商为%f\"", ", z);\n        }\n    }\n    ", "else", "\n    {\n        ", "system", "(", "\"pause\"", "); ", "system", "(", "\"cls\"", ");\n    }\n\n}\n", "int", " ", "main", "()", "\n", "{\n    ", "int", " a;\n    ", "menu", "();\n    ", "scanf", "(", "\"%d\"", ", &a);\n    ", "while", " (a != ", "5", ")\n    {\n        ", "switch", " (a)\n        {\n        ", "case", " ", "1", ":", "jia", "(); ", "break", ";\n        ", "case", " ", "2", ":", "jian", "(); ", "break", ";\n        ", "case", " ", "3", ":", "cheng", "(); ", "break", ";\n        ", "case", " ", "4", ":", "chu", "(); ", "break", ";\n        ", "case", " ", "0", ":", "printf", "(", "\"感谢使用\\n\"", "); ", "break", ";\n        ", "default", ":", "break", ";\n        }\n        ", "system", "(", "\"pause\"", "); ", "system", "(", "\"cls\"", ");\n    }\n    ", "printf", "(", "\"输入错误！！！\"", ");\n    ", "return", " ", "0", ";\n}\n\n", "\n", "为什么一到判断是否继续输入Y或者N之后就没有i判断里的结果输出"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;详解都发在这了&amp;#xff0c;那我求个采纳&amp;#xff1f;&amp;#xff08;手动狗头&amp;#xff09;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["C语言运算符的优先级和结合性详细解说", ["C语言运算符的优先级和结合性详细解说", "\n\n", "原文地址", "\n\n", "\n\t\t\t", "优先级", "\n\t\t\t", "\n\t\t\t", "运算符", "\n\t\t\t", "\n\t\t\t", "含义", "\n\t\t\t", "\n\t\t\t", "使用形式", "\n\t\t\t", "\n\t\t\t", "结合性", "\n\t\t\t", "\n\t\t\t", "操作数", "\n\t\t\t", "\n\t\t\t", "1", "\n\t\t\t", "\n\t\t\t", "[ ]", "\n\t\t\t", "\n\t\t\t", "数组下标", "\n\t\t\t", "\n\t\t\t", "数组名[整型表达式]", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\n\t\t\t", " ", "\n\t\t\t", " ", "\n\t\t\t", "( )", "\n\t\t\t", "\n\t\t\t", "圆括号", "\n\t\t\t", "\n\t\t\t", "(表达式)", "\n\t\t\t", " ", "\n\t\t\t", ".", "\n\t\t\t", "\n\t\t\t", "成员选择(对象)", "\n\t\t\t", "\n\t\t\t", "对象.成员名", "\n\t\t\t", " ", "\n\t\t\t", "->", "\n\t\t\t", "\n\t\t\t", "成员选择(指针)", "\n\t\t\t", "\n\t\t\t", "对象指针->成员名", "\n\t\t\t", " ", "\n\t\t\t", "++", "\n\t\t\t", "\n\t\t\t", "后缀自增运算符", "\n\t\t\t", "\n\t\t\t", "变量名++", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "--", "\n\t\t\t", "\n\t\t\t", "后缀自减运算符", "\n\t\t\t", "\n\t\t\t", "变量名--", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "2", "\n\t\t\t", "\n\t\t\t", "-", "\n\t\t\t", "\n\t\t\t", "负号运算符", "\n\t\t\t", "\n\t\t\t", "-表达式", "\n\t\t\t", "\n\t\t\t", "右结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "(类型)", "\n\t\t\t", "\n\t\t\t", "强制类型转换", "\n\t\t\t", "\n\t\t\t", "(数据类型)表达式", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "++", "\n\t\t\t", "\n\t\t\t", "前缀自增运算符", "\n\t\t\t", "\n\t\t\t", "++变量名", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "--", "\n\t\t\t", "\n\t\t\t", "前缀自减运算符", "\n\t\t\t", "\n\t\t\t", "--变量名", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "*", "\n\t\t\t", "\n\t\t\t", "取值运算符", "\n\t\t\t", "\n\t\t\t", "*指针表达式", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "&", "\n\t\t\t", "\n\t\t\t", "取地址运算符", "\n\t\t\t", "\n\t\t\t", "&左值表达式", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "!", "\n\t\t\t", "\n\t\t\t", "逻辑非运算符", "\n\t\t\t", "\n\t\t\t", "!表达式", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "~", "\n\t\t\t", "\n\t\t\t", "按位取反运算符", "\n\t\t\t", "\n\t\t\t", "~表达式", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "sizeof", "\n\t\t\t", "\n\t\t\t", "长度运算符", "\n\t\t\t", "\n\t\t\t", "sizeof 表达式 或 sizeof(类型)", "\n\t\t\t", "\n\t\t\t", "单目运算符", "\n\t\t\t", "\n\t\t\t", "3", "\n\t\t\t", "\n\t\t\t", "/", "\n\t\t\t", "\n\t\t\t", "除法运算符", "\n\t\t\t", "\n\t\t\t", "表达式/表达式", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "*", "\n\t\t\t", "\n\t\t\t", "乘法运算符", "\n\t\t\t", "\n\t\t\t", "表达式*表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "%", "\n\t\t\t", "\n\t\t\t", "求余运算符", "\n\t\t\t", "\n\t\t\t", "整型表达式%整型表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "4", "\n\t\t\t", "\n\t\t\t", "+", "\n\t\t\t", "\n\t\t\t", "加法运算符", "\n\t\t\t", "\n\t\t\t", "表达式+表达式", "\n\t\t\t", "左结合性", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "-", "\n\t\t\t", "\n\t\t\t", "减法运算符", "\n\t\t\t", "\n\t\t\t", "表达式-表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "5", "\n\t\t\t", "\n\t\t\t", "<<", "\n\t\t\t", "\n\t\t\t", "左移运算符", "\n\t\t\t", "\n\t\t\t", "表达式<<表达式", "\n\t\t\t", "左结合性", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", ">>", "\n\t\t\t", "\n\t\t\t", "右移运算符", "\n\t\t\t", "\n\t\t\t", "表达式>>表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "6", "\n\t\t\t", "\n\t\t\t", ">", "\n\t\t\t", "\n\t\t\t", "大于运算符", "\n\t\t\t", "\n\t\t\t", "表达式>表达式", "\n\t\t\t", "左结合性", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", ">=", "\n\t\t\t", "\n\t\t\t", "大于等于运算符", "\n\t\t\t", "\n\t\t\t", "表达式>=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "<", "\n\t\t\t", "\n\t\t\t", "小于运算符", "\n\t\t\t", "\n\t\t\t", "表达式<表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "<=", "\n\t\t\t", "\n\t\t\t", "小于等于运算符", "\n\t\t\t", "\n\t\t\t", "表达式<=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "7", "\n\t\t\t", "\n\t\t\t", "==", "\n\t\t\t", "\n\t\t\t", "等于运算符", "\n\t\t\t", "\n\t\t\t", "表达式==表达式", "\n\t\t\t", "左结合性", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "!=", "\n\t\t\t", "\n\t\t\t", "不等于运算符", "\n\t\t\t", "\n\t\t\t", "表达式!=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "8", "\n\t\t\t", "\n\t\t\t", "&", "\n\t\t\t", "\n\t\t\t", "按位与运算符", "\n\t\t\t", "\n\t\t\t", "整型表达式&整型表达式", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "9", "\n\t\t\t", "\n\t\t\t", "^", "\n\t\t\t", "\n\t\t\t", "按位异或运算符", "\n\t\t\t", "\n\t\t\t", "整型表达式^整型表达式", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "10", "\n\t\t\t", "\n\t\t\t", "|", "\n\t\t\t", "\n\t\t\t", "按位或运算符", "\n\t\t\t", "\n\t\t\t", "整型表达式|整型表达式", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "11", "\n\t\t\t", "\n\t\t\t", "&&", "\n\t\t\t", "\n\t\t\t", "逻辑与运算符", "\n\t\t\t", "\n\t\t\t", "表达式&&表达式", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "12", "\n\t\t\t", "\n\t\t\t", "||", "\n\t\t\t", "\n\t\t\t", "逻辑或运算符", "\n\t\t\t", "\n\t\t\t", "表达式||表达式", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "13", "\n\t\t\t", "\n\t\t\t", "?:", "\n\t\t\t", "\n\t\t\t", "条件运算符", "\n\t\t\t", "\n\t\t\t", "表达式1?表达式2:表达式3", "\n\t\t\t", "\n\t\t\t", "右结合性", "\n\n\t\t\t", " ", "\n\t\t\t", "\n\t\t\t", "三目运算符", "\n\t\t\t", "\n\t\t\t", "14", "\n\t\t\t", "\n\t\t\t", "=", "\n\t\t\t", "\n\t\t\t", "赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量 = 表达式", "\n\t\t\t", "右结合性", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "/=", "\n\t\t\t", "\n\t\t\t", "除后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量 /=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "*=", "\n\t\t\t", "\n\t\t\t", "乘后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量 *=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "%=", "\n\t\t\t", "\n\t\t\t", "取模后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量%=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "+=", "\n\t\t\t", "\n\t\t\t", "加后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量+=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "-=", "\n\t\t\t", "\n\t\t\t", "减后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量-=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "<<=", "\n\t\t\t", "\n\t\t\t", "左移后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量<<=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", ">>=", "\n\t\t\t", "\n\t\t\t", "右移后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量>>=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "&=", "\n\t\t\t", "\n\t\t\t", "按位与后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量&=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "^=", "\n\t\t\t", "\n\t\t\t", "按位异或后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量^=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "|=", "\n\t\t\t", "\n\t\t\t", "按位或后赋值运算符", "\n\t\t\t", "\n\t\t\t", "变量|=表达式", "\n\t\t\t", "\n\t\t\t", "双目运算符", "\n\t\t\t", "\n\t\t\t", "15", "\n\t\t\t", "\n\t\t\t", ",", "\n\t\t\t", "\n\t\t\t", "逗号运算符", "\n\t\t\t", "\n\t\t\t", "表达式,表达式,表达式,...", "\n\t\t\t", "\n\t\t\t", "左结合性", "\n\t\t\t", " ", "\n\n", "运算符", "\n\n", "在一个表达式中可能包含多个有不同运算符连接起来的或具有不同数据类型的数据对象，表达式有多种运算，不同的结合顺序可能得出不同结果或者出现运算错误，因为当表达式中含多种运算时，必须按一定顺序进行结合，才能保证运算的合理性和结果的正确性和唯一性。", "\n\n", "每种同类型的运算符都有内部的运算符优先级，不同类型的运算符之间也有相应的优先级顺序。一个表达式中既可以包括相同类型的运算符，也可以包括不同类型的运算符或者函数。当多种运算符出现在同一个表达式中时，应该先按照不同类型运算符间的优先级进行运算。可以用括号改变优先级顺序，使得括号内的运算优先于括号外的运算。对于多重括号，总是由内到外强制表达式的某些部分优先运行。括号内的运算总是最优先计算。", "\n\n", "优先级", "\n\n", "优先级与求值顺序无关。优先级高低从上到下依次递减，表达式的结合次序取决于表达式中各种运算符的优先级。优先级高的运算符先结合，优先级低的运算符后结合，同一行中的运算符的优先级相同。", "\n\n", "结合性", "\n\n", "当一个运算对象两侧的运算符优先级别相同时，则按运算符的结合性来确定表达式的运算顺序。大多数运算符结合方向是左结合性，只有三类运算符的结合方向是右结合性，即：单目运算符、条件运算符、赋值运算符。结合性是针对两个相邻的优先级相同的运算符而言，而不是表达中的运算对象，运算符是决定左右的基准点，先以前面的运算符构造运算，就是左结合性，反之，就是右结合性 。", "\n\n", "操作数", "\n\n", "运算符是一种特殊的函数，它们具有一个或多个操作数并返回相应的值。运算符可以是一目、二目或三目的，有多少目就代表有多少个操作数。只有一个运算符的操作数是三目运算符，即：条件运算符。"]], "Tag": "算法设计"}
{"Answer": "multiply一直没有赋值啊", "Konwledge_Point": "乘法", "Question": ["看看我的c语言代码存在哪？为啥计数器用不了？", ["要求：电脑连续出十道乘法题，算对一道十分，最后输出正确率和总得分。        #include ", "\n#include ", "\n#include ", "\nint main()", "\n{", "\n    int ret,magic,multiply;//ret,magic分别为计算机产生的1~10之间的随机数，multiply为它们的乘积", "\n    int write;", "\n    int counter=0;", "\n    int score,percent;//score为分数，percent为正确率", "\n    //====================1", "\n    srand(1);", "\n    ret=rand()%10+1;", "\n    magic=rand()%10+1;", "\n    printf(\"%d*%d=?\\n\",magic,ret);", "\n    scanf(\"%d\",&write);", "\n    if(write==multiply) counter++;", "\n    //==================2", "\n    srand(2);", "\n    ret=rand()%10+1;", "\n    magic=rand()%10+1;", "\n    printf(\"%d*%d=?\\n\",magic,ret);", "\n    scanf(\"%d\",&write);", "\n    if(write==multiply) counter++;", "\n    //======================3", "\n    srand(3);", "\n    ret=rand()%10+1;", "\n    magic=rand()%10+1;", "\n    printf(\"%d*%d=?\\n\",magic,ret);", "\n    scanf(\"%d\",&write);", "\n    if(write==multiply) counter++;", "\n\n", "//====================4\nsrand(4);\nret=rand()%10+1;\nmagic=rand()%10+1;\nprintf(\"%d*%d=?\\n\",magic,ret);\nscanf(\"%d\",&write);\nif(write==multiply) counter++;\n//====================5\nsrand(5);\nret=rand()%10+1;\nmagic=rand()%10+1;\nprintf(\"%d*%d=?\\n\",magic,ret);\nscanf(\"%d\",&write);\nif(write==multiply) counter++;\n//===============6\nsrand(6);\nret=rand()%10+1;\nmagic=rand()%10+1;\nprintf(\"%d*%d=?\\n\",magic,ret);\nscanf(\"%d\",&write);\nif(write==multiply) counter++;\n//=================7\nsrand(7);\nret=rand()%10+1;\nmagic=rand()%10+1;\nprintf(\"%d*%d=?\\n\",magic,ret);\nscanf(\"%d\",&write);\nif(write==multiply) counter++;\n//=====================8\nsrand(8);\nret=rand()%10+1;\nmagic=rand()%10+1;\nprintf(\"%d*%d=?\\n\",magic,ret);\nscanf(\"%d\",&write);\nif(write==multiply) counter++;\n//==================9\nsrand(9);\nret=rand()%10+1;\nmagic=rand()%10+1;\nprintf(\"%d*%d=?\\n\",magic,ret);\nscanf(\"%d\",&write);\nif(write==multiply) counter++;\n//===============10\nsrand(10);\nret=rand()%10+1;\nmagic=rand()%10+1;\nprintf(\"%d*%d=?\\n\",magic,ret);\nscanf(\"%d\",&write);\nif(write==multiply) counter++;\nscore=counter*10;\npercent=counter/10*100;\nprintf(\"总分为%d,正确率为%d%%\",score,percent);\n return 0;\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "http://blog.csdn.net/e6894853/article/details/7925260", "Konwledge_Point": "乘法", "Question": ["求java大整数的四则运算解题思路，把具体用什么知识点讲解出来", ["package org.suanfa.test;", "\n\n", "import java.io.BufferedReader;", "\nimport java.io.IOException;", "\nimport java.io.InputStreamReader;", "\n\n", "public class Test1 {", "\n private boolean isPositive=true;", "\n private String number=\"0\";", "\n public Test1() {", "\n\n", "}", "\n public Test1(String number) {", "\n  String flag=number.substring(0, 1);", "\n  if(flag.equals(\"-\")){", "\n   this.isPositive=false;", "\n   this.number=number.substring(1);", "\n  }else{", "\n   this.isPositive=true;", "\n   this.number = number;", "\n  }", "\n }", "\nprivate int compare(String a,String b){", "\n  int MaxLen=0;", "\n  if(a.length()>=b.length()){", "\n   MaxLen=a.length();", "\n   while(b.length()\n    b=\"0\"+b;", "\n   }", "\n  }else{", "\n   MaxLen=b.length();", "\n   while(a.length()\n    a=\"0\"+a;", "\n   }", "\n  }", "\n  if(a.compareTo(b)>0)", "\n   return 1;", "\n  else if(a.compareTo(b)==0)", "\n   return 0;", "\n  else", "\n   return -1;", "\n }", "\n\n", "public Test1 add(Test1 bigint){", "\n  Test1 bi=new Test1();", "\n  String a=this.number;", "\n  String b=bigint.number;", "\n  if((this.isPositive&&bigint.isPositive)||(!this.isPositive&&!bigint.isPositive)){//同符号", "\n   bi.isPositive=this.isPositive;", "\n   bi.number=absAdd(a,b);", "\n  }else{", "\n   if(compare(a,b)>0){", "\nbi.isPositive=this.isPositive;", "\n    bi.number=absSub(a,b);", "\n   }else if(compare(a,b)==0){", "\n    bi.isPositive=true;", "\n    bi.number=\"0\";", "\n   }else{", "\nbi.isPositive=bigint.isPositive;", "\n    bi.number=absSub(a,b);", "\n   }", "\n  }", "\n  return bi;", "\n }", "\n\n", "public Test1 sub(Test1 bigint){", "\n  Test1 bi=new Test1();", "\n  String a=this.number;", "\n  String b=bigint.number;", "\n  if((this.isPositive&&bigint.isPositive)||(!this.isPositive&&!bigint.isPositive)){", "\n   if(compare(a,b)>0){", "\n    bi.isPositive=this.isPositive;", "\n    bi.number=absSub(a,b);", "\n   }else if(compare(a,b)==0){", "\n     bi.isPositive=true;", "\n     bi.number=\"0\";", "\n   }else{", "\n    bi.isPositive=!bigint.isPositive;", "\n    bi.number=absSub(a,b);", "\n   }", "\n  }else{", "\n   bi.isPositive=this.isPositive;", "\n   bi.number=absAdd(a,b);", "\n  }", "\n  return bi;", "\n }", "\n\n", "public Test1 multi(Test1 bigint){", "\n     Test1 bi=new Test1();", "\n  String a=this.number;", "\n  String b=bigint.number;", "\n  if(a.equals(\"0\")||b.equals(\"0\")){", "\n   bi.isPositive=true;", "\n   bi.number=\"0\";", "\n  }else if((this.isPositive&&bigint.isPositive)||(!this.isPositive&&!bigint.isPositive)){", "\n   bi.isPositive=true;", "\n   bi.number=absMulti(a,b);", "\n  }else{", "\n   bi.isPositive=false;", "\n   bi.number=absMulti(a,b);", "\n  }", "\n  return bi;", "\n }", "\n public Test1 div(Test1 bigint){", "\n     Test1 bi=new Test1();", "\n  String a=this.number;", "\n  String b=bigint.number;", "\n  if(a.equals(\"0\")||b.equals(\"0\")){", "\n   bi.isPositive=true;", "\n   bi.number=\"0\";", "\n  }else if((this.isPositive&&bigint.isPositive)||(!this.isPositive&&!bigint.isPositive)){", "\n   bi.isPositive=true;", "\n   bi.number=absDiv(a,b);", "\n  }else{", "\n   bi.isPositive=false;", "\n   bi.number=absDiv(a,b);", "\n  }", "\n  return bi;", "\n }", "\n private String absAdd(String a, String b) {", "\n  int MaxLen=0;", "\n  if(a.length()>=b.length()){", "\n   MaxLen=a.length();", "\n   while(b.length()\n    b=\"0\"+b;", "\n   }", "\n  }else{", "\n   MaxLen=b.length();", "\n   while(a.length()\n    a=\"0\"+a;", "\n   }", "\n  }", "\n  String str = \"\";", "\n  int JW = 0;      // 进位", "\n  for (int i = MaxLen - 1; i >= 0; i--) {", "\n   int tempA = a.charAt(i)-'0';", "\n   int tempB = b.charAt(i)-'0';", "\n   int temp;", "\n   if (tempA + tempB + JW >= 10 && i != 0) {          //如果有进位", "\n    temp = tempA + tempB + JW - 10;", "\n    JW = 1;", "\n   } else {", "\n    temp = tempA + tempB + JW;", "\n    JW = 0;", "\n   }", "\n   str = String.valueOf(temp) + str;", "\n  }", "\n  while(str.length()>1&&str.charAt(0)=='0'){", "\n   str=str.substring(1);", "\n  }", "\n  return str;", "\n }", "\n  private String absSub(String a, String b) {", "\n  int MaxLen=0;", "\n  if(a.length()>=b.length()){", "\n   MaxLen=a.length();", "\n   while(b.length()\n    b=\"0\"+b;", "\n   }", "\n  }else{", "\n   MaxLen=b.length();", "\n   while(a.length()\n    a=\"0\"+a;", "\n   }", "\n  }", "\n  if(a.compareTo(b)\n   String temp=a;", "\n   a=b;", "\n   b=temp;", "\n  }", "\n  String str = \"\";", "\n  int JW = 0;          // 借位", "\n  for (int i = MaxLen - 1; i >= 0; i--) {", "\n   int tempA = a.charAt(i)-'0';", "\n   int tempB = b.charAt(i)-'0';", "\n   int temp;", "\n   if (tempA - JW - tempB < 0 && i != 0) {", "\n    temp = tempA + 10 - JW - tempB;", "\n    JW = 1;", "\n   } else {", "\n    temp = tempA - JW - tempB;", "\n    JW = 0;", "\n   }", "\n   str = temp + str;", "\n  }", "\n  while(str.length()>1&&str.charAt(0)=='0'){", "\n   str=str.substring(1);", "\n  }", "\n  return str;", "\n }", "\n  private String absMulti(String a,String b){", "\n  String result=\"0\";", "\n  if(a.equals(\"0\")||b.equals(\"0\"))", "\n   return \"0\";", "\n     for(int i = b.length()-1; i >=0; i--){", "\n      int plustimes=b.charAt(i)-'0';", "\n      String atemp=a;", "\n      for(int j=1;j<=b.length()-1-i;j++){", "\n       atemp=atemp+\"0\";", "\n      }", "\n      for(int m=1;m<=plustimes;m++){", "\n       result=absAdd(result,atemp);", "\n      }", "\n     }", "\n  return result;", "\n }", "\n  private String absDiv(String a,String b){", "\n  if(a.equals(\"0\")||b.equals(\"0\"))", "\n   return \"0\";", "\n  String result=\"\";", "\n  String dealnum=\"\";", "\n  String left=\"\";", "\n  for(int index=0;index\n   dealnum=left+a.substring(index,index+1);", "\n   while(left.length()>1&&left.charAt(0)=='0'){", "\n    left=left.substring(1);", "\n   }", "\n   while(dealnum.length()>1&&dealnum.charAt(0)=='0'){", "\n    dealnum=dealnum.substring(1);", "\n   }", "\n   if(compare(dealnum,b)\n    result+=\"0\";           ", "\n    left=dealnum;         ", "\n    continue;", "\n   }else if(compare(dealnum,b)==0){      ", "\n    result+=\"1\";           ", "\n    left=\"0\";", "\n   }else{          ", "\n    for(int i=9;i>=0;i--){", "\n     String s=absMulti(String.valueOf(i),b);", "\n     if(compare(s,dealnum)>0){", "\n      continue;", "\n     }else if(compare(s,dealnum)==0){", "\n      result+=String.valueOf(i);", "\n      left=\"0\";", "\n      break;", "\n     }else{", "\n      result+=String.valueOf(i);", "\n      left=absSub(s,dealnum);", "\n      break;", "\n     }", "\n    }", "\n   }", "\n  }", "\n  while(result.length()>1&&result.charAt(0)=='0'){", "\n   result=result.substring(1); ", "\n  }", "\n  return result;", "\n }", "\n\n", "private String absMod(String a,String b){", "\n  if(a.equals(\"0\")||b.equals(\"0\"))", "\n   return \"0\";", "\n  @SuppressWarnings(\"unused\")", "\nString result=\"\";", "\n  String dealnum=\"\";", "\n  String left=\"\";", "\n  for(int index=0;index\n   dealnum=left+a.substring(index,index+1);", "\n   while(left.length()>1&&left.charAt(0)=='0'){", "\n    left=left.substring(1);", "\n   }", "\n   while(dealnum.length()>1&&dealnum.charAt(0)=='0'){", "\n    dealnum=dealnum.substring(1);", "\n   }", "\n   if(compare(dealnum,b)\n    result+=\"0\";", "\n    left=dealnum;", "\n    continue;", "\n   }else if(compare(dealnum,b)==0){", "\n    result+=\"1\";", "\n    left=\"0\";", "\n   }else{", "\n    for(int i=9;i>=0;i--){", "\n     String s=absMulti(String.valueOf(i),b);", "\n     if(compare(s,dealnum)>0){", "\n      continue;", "\n     }else if(compare(s,dealnum)==0){", "\n      result+=String.valueOf(i);", "\n      left=\"0\";", "\n      break;", "\n     }else{", "\n      result+=String.valueOf(i);", "\n      left=absSub(s,dealnum);", "\n      break;", "\n     }", "\n    }", "\n   }", "\n  }", "\n  while(left.length()>1&&left.charAt(0)=='0'){", "\n   left=left.substring(1);", "\n  }", "\n  return left;", "\n }", "\n\n", "public String toString(){", "\n  if(this.number.equals(\"0\")){", "\n   return this.number;", "\n  }", "\n  String str=this.isPositive?\"\":\"-\"; ", "\n  str=str+this.number;", "\n  return str;", "\n }", "\n public String getString() {", "\n\n", " String str = null;\n BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));\n try {\n         str = buf.readLine();\n     }catch(IOException e) {\n         e.printStackTrace();\n }\n return str;\n", "\n\n", "}", "\n public void Operator() {", "\n     System.out.println(\"输入enter开始\");", "\n     while(true) {", "\n         String str1 = \"#\"; ", "\n         String reg=\"^-?[0-9]\\d*$\";", "\n         String temp = this.getString();", "\n                 System.out.println(\"输入第一个数字\");", "\n                 String a = this.getString();", "\n                 if(str1.equals(a)) {", "\n                     System.out.println(\"结束！！！\");", "\n                     break;", "\n                 }", "\n                 if(!a.matches(reg)){", "\n                     System.out.println(\"非整数字串！\");", "\n                     continue;", "\n                 }", "\n                 System.out.println(\"输入第二个数字\");", "\n                 String b = this.getString();", "\n                 if(str1.equals(b)) {", "\n                     System.out.println(\"结束！！！\");", "\n                     break;", "\n                 }", "\n                 if(!b.matches(reg)){", "\n                     System.out.println(\"非整数字串！\");", "\n                     continue;", "\n                 }", "\n                 Test1 bigintA=new Test1(a);", "\n                 Test1 bigintB=new Test1(b);", "\n                 Test1 result=bigintA.add(bigintB); ", "\n                 System.out.println(\"加法结果：\"+result.toString()); ", "\n                 Test1 result1=bigintA.sub(bigintB);", "\n                 System.out.println(\"减法结果：\"+result1.toString());", "\n                 Test1 result3=bigintA.multi(bigintB);", "\n                 System.out.println(\"乘法结果：\"+result3.toString());", "\n                 Test1 result4=bigintA.div(bigintB);", "\n                 System.out.println(\"除法结果：\"+result4.toString());", "\n         }", "\n\n", "}", "\n public static void main(String[] args) {", "\n  new Test1().Operator();", "\n }", "\n}"]], "Tag": "算法设计"}
{"Answer": "这里的Ajax请求得到的响应文本，是执行完JSP之后所返回的html代码,所以你的JSP页面整体输出什么，它的值就是什么。\r\n由于你的页面中包含的&lt;html&gt;、&lt;body&gt;等标签，所以返回的页面中同样也包含了这些标签，输出的值自然就是html了。\r\n若只想得到结果，只要保留JSP页面的这一部份就好了：\r\n\r\n&lt;%@ page language=\"java\" contentType=\"text/html;charset=gb2312\" pageEncoding=\"gb2312\"%&gt;\r\n&lt;% \r\n\tString number_1 = request.getParameter(\"number_1\");\r\n\tString number_2 = request.getParameter(\"number_2\");\r\n\tint num_1 = 0, num_2 = 0;\r\n\tboolean status = true;\r\n\tif (number_1 != null) {\r\n\t\ttry {\r\n\t\t\tnum_1 = Integer.parseInt(number_1);\r\n\t\t}\r\n\t\tcatch (Exception ex) {\r\n\t\t\tstatus = false;\r\n\t\t\tout.println(\"Error，乘数必须是整数.\");\r\n\t\t}\r\n\t}\r\n\tif (number_2 != null) {\r\n\t\ttry {\r\n\t\t\tnum_2 = Integer.parseInt(number_2);\r\n\t\t}\r\n\t\tcatch (Exception ex) {\r\n\t\t\tstatus = false;\r\n\t\t\tout.println(\"Error，被乘数必须是整数.\");\r\n\t\t}\r\n\t}\r\n\tif (status) out.println(num_1*num_2);\r\n%&gt;", "Konwledge_Point": "乘法", "Question": ["上手ajax遇到的问题", ["问题在注释中。谢谢！", "\n[code=\"html\"]", "\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"", "http://www.w3.org/TR/html4/loose.dtd\">", "Insert title here\n    function doCaculate() {\n        var f = document.form1;\n        \n        if ((f.number_1.value != \"\") && (f.number_2.value != \"\")) {\n            document.getElementById(\"feedback\").innerHTML = \"正在计算，请稍候...\";\n            send_request(\"process.jsp?number_1=\"+f.number_1.value+ \"&number_2=\"+f.number_2.value);\n        \n        }\n        else if (f.number_1.value == \"\") {\n            document.getElementById(\"feedback\").innerHTML = \"乘数不能为空。\";\n            }\n        else if (f.number_2.value == \"\") {\n                    document.getElementById(\"feedback\").innerHTML = \"被乘数不能未空。\";\n            }\n    }\n\n    var http_request = false;\n\n    function send_request(url) {\n        http_request = false;\n        if (window.XMLHttpRequest) {\n            http_request = new XMLHttpRequest();\n            if (http_request.overrideMimeType) {\n                http_request.overrideMimeType('text/xml');\n            }\n        }\n        else if (window.ActiveXObject) {\n            try {\n                http_request = new ActiveXObject(\"Msxml2.XMLHttp\");\n            }\n            catch (e) {\n                try {\n                    http_request = new ActiveXObject(\"Microsoft.XMLHTTP\");\n                }\n                catch (e) {}\n            }\n        }\n\n        if (!http_request) {\n            window.alert(\"不能创建XMLHttpRequest对象实例.\");\n            return false;\n        }\n\n        http_request.onreadystatechange = processRequest;\n        http_request.open(\"GET\", url, true);\n        http_request.send(null);\n    }\n\n    function processRequest() {\n        var f = document.form1;\n        if (http_request.readyState == 4) {\n        \n            if (http_request.status == 200) {\n                var returnStr = http_request.responseText;\n                \n                if (returnStr.indexOf(\"Error\") == -1) {\n                    alert(returnStr);\n                                        // 这儿得到returnStr怎么是html?还要自己解析才能等得到计算值吗？\n                    document.getElementById(\"feedback\").innerHTML = returnStr;\n                    f.result.value = returnStr;\n                }\n                else {\n                    f.result.value = \"\";\n                    document.getElementById(\"feedback\").innerHTML = returnStr;\n                }\n            }\n            else {\n                alert(http_request.status);\n                alert(\"您所请求的页面有异常.\");\n            }\n        }\n    }\n", "\n", "简单乘法计算", "\n", "\n", "\n            *", "\n            =", "\n", "\n", "\n", "\n", "\n", "  ", " ", "\n", "\n", "\n", "\n", "\n", " xx", "\n", "\n", "\n", "\n", "\n[/code]", "\n[code=\"java\"]<%@ page language=\"java\" contentType=\"text/html; charset=gb2312\"", "\n    pageEncoding=\"gb2312\"%>", "\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"", "http://www.w3.org/TR/html4/loose.dtd\">", "Insert title here", "\n    <% ", "\n        String number_1 = request.getParameter(\"number_1\");", "\n        String number_2 = request.getParameter(\"number_2\");", "\n        int num_1 = 0, num_2 = 0;", "\n        boolean status = true;", "\n        if (number_1 != null) {", "\n            try {", "\n                num_1 = Integer.parseInt(number_1);", "\n            }", "\n            catch (Exception ex) {", "\n                status = false;", "\n                out.println(\"Error，乘数必须是整数.\");", "\n            }", "\n        }", "\n        if (number_2 != null) {", "\n            try {", "\n                num_2 = Integer.parseInt(number_2);", "\n            }", "\n            catch (Exception ex) {", "\n                status = false;", "\n                out.println(\"Error，被乘数必须是整数.\");", "\n            }", "\n        }", "\n        if (status) out.println(num_1*num_2);", "\n    %>", "[/code]"]], "Tag": "算法设计"}
{"Answer": "```\r\n this.pack();\r\n//添加菜单与目录 this.setJMenuBar(mb); mb.add(mEdit); mEdit.setMnemonic(KeyEvent.VK_E); mEdit.add(mCopy); mEdit.add(mPaste); }\r\n只是添加了菜单，没有添加事件\r\nmEdit.add(mPaste); 后面加上监听事件\r\nmCopy.addActionListener(this);\r\nmPaste.addActionListener(this);\r\n```", "Konwledge_Point": "乘法", "Question": ["Java 自制的计算器菜单键无法复制", ["代码如下：", "\n\n", "import java.awt.BorderLayout;", "\nimport java.awt.Color;", "\nimport java.awt.GridLayout;", "\nimport java.awt.event.ActionEvent;", "\nimport java.awt.event.ActionListener;  ", "\n\n", "import java.awt.event.KeyEvent;", "\n\n", "import javax.swing.JButton;", "\nimport javax.swing.JFrame;", "\nimport javax.swing.JMenu;", "\nimport javax.swing.JMenuBar;", "\nimport javax.swing.JMenuItem;", "\nimport javax.swing.JPanel;", "\nimport javax.swing.JTextField;  ", "\n\n", "/** ", "\n\n", "\n", "\n", "一个计算器，与Windows附件自带计算器的标准版功能、界面相仿。 但还不支持键盘操作。 ", "/", "\npublic class Calculator extends JFrame implements ActionListener {", "\n/", "* 计算器上的键的显示名字 ", "/", "\nprivate final String[] KEYS = { \"7\", \"8\", \"9\", \"/\", \"4\", \"5\", \"6\", \"", "\"", "\n        , \"1\", \"2\", \"3\",\"-\", \"0\",\"+/-\",\".\",\"+\", \"1/x\", \"%\", \"sqrt\", \"=\" };", "\n/** 计算器上的功能键的显示名字 ", "/", "\nprivate final String[] COMMAND = { \"Backspace\", \"C\" };", "\n/", "* 计算器上键的按钮 ", "/", "\nprivate JButton keys[] = new JButton[KEYS.length];", "\n/", "* 计算器上的功能键的按钮 ", "/", "\nprivate JButton commands[] = new JButton[COMMAND.length];", "\n/", "* 计算结果文本框 */", "\nprivate JTextField resultText = new JTextField(\"0\");", "\n//", "\nprivate JMenuBar mb=new JMenuBar();", "\n//编辑", "\nprivate JMenu mEdit = new JMenu(\"编辑(E)\");", "\n//复制黏贴", "\nprivate JMenuItem mCopy = new JMenuItem(\"复制(C)\");", "\nprivate JMenuItem mPaste = new JMenuItem(\"黏贴(V)\");", "\n//剪切板", "\nprivate StringBuffer copyBoard=new StringBuffer(20);", "\n// 标志用户按的是否是整个表达式的第一个数字,或者是运算符后的第一个数字", "\nprivate boolean firstDigit = true;", "\n// 计算的中间结果。", "\nprivate double resultNum = 0.0;", "\n// 当前运算的运算符", "\nprivate String operator = \"=\";", "\n// 操作是否合法", "\nprivate boolean operateValidFlag = true;  ", "\n\n", "/** ", "\n\n", "\n", "构造函数 \n*/", "\npublic Calculator() {", "\nsuper();", "\n// 初始化计算器", "\ninit();", "\n// 设置计算器的背景颜色", "\nthis.setBackground(Color.LIGHT_GRAY);", "\nthis.setTitle(\"计算器\");", "\n// 在屏幕(500, 300)坐标处显示计算器", "\nthis.setLocation(500, 300);", "\n// 许修改计算器的大小", "\nthis.setResizable(true);", "\n// 使计算器中各组件大小合适", "\nthis.pack();", "\n//添加菜单与目录\nthis.setJMenuBar(mb);\nmb.add(mEdit);\nmEdit.setMnemonic(KeyEvent.VK_E);\nmEdit.add(mCopy);\nmEdit.add(mPaste);\n}", "\n", "\n", "\n", "/** ", "\n\n", "\n", "\n", "初始化计算器 ", "\n*/", "\nprivate void init() {", "\n// 文本框中的内容采用右对齐方式", "\nresultText.setHorizontalAlignment(JTextField.RIGHT);", "\n// 允许修改结果文本框", "\nresultText.setEditable(true);", "\n// 设置文本框背景颜色为白色", "\nresultText.setBackground(Color.white);  ", "\n\n", "// 初始化计算器上键的按钮，将键放在一个画板内", "\nJPanel calckeysPanel = new JPanel();", "\n// 用网格布局器，5行，4列的网格，网格之间的水平方向间隔为3个象素，垂直方向间隔为3个象素", "\ncalckeysPanel.setLayout(new GridLayout(5, 4, 0, 0));", "\nfor (int i = 0; i < KEYS.length; i++) {", "\n    keys[i] = new JButton(KEYS[i]);", "\n    calckeysPanel.add(keys[i]);", "\n    keys[i].setForeground(Color.black);", "\n}", "\n// 初始化功能键，都用红色标示。将功能键放在一个画板内", "\nJPanel commandsPanel = new JPanel();", "\n// 用网格布局器，1行，3列的网格，网格之间的水平方向间隔为3个象素，垂直方向间隔为3个象素", "\ncommandsPanel.setLayout(new GridLayout(1, 3, 0, 0));", "\nfor (int i = 0; i < COMMAND.length; i++) {", "\n    commands[i] = new JButton(COMMAND[i]);", "\n    commandsPanel.add(commands[i]);", "\n}  ", "\n\n", "// 下面进行计算器的整体布局，将calckeys和command画板放在计算器的中部，", "\n// 将文本框放在北部，将calms画板放在计算器的西部。  ", "\n\n", "// 新建一个大的画板，将上面建立的command和calckeys画板放在该画板内", "\nJPanel panel1 = new JPanel();", "\n// 画板采用边界布局管理器，画板里组件之间的水平和垂直方向上间隔都为3象素", "\npanel1.setLayout(new BorderLayout(3, 3));", "\npanel1.add(\"North\", commandsPanel);", "\npanel1.add(\"Center\", calckeysPanel);  ", "\n\n", "// 建立一个画板放文本框", "\nJPanel top = new JPanel();", "\ntop.setLayout(new BorderLayout());", "\ntop.add(\"Center\", resultText);  ", "\n\n", "// 整体布局", "\ngetContentPane().setLayout(new BorderLayout(3, 5));", "\ngetContentPane().add(\"North\", top);", "\ngetContentPane().add(\"Center\", panel1);", "\n// 为各按钮添加事件侦听器", "\n// 都使用同一个事件侦听器，即本对象。本类的声明中有implements ActionListener", "\nfor (int i = 0; i < KEYS.length; i++) {", "\n    keys[i].addActionListener(this);", "\n}", "\nfor (int i = 0; i < COMMAND.length; i++) {", "\n    commands[i].addActionListener(this);", "\n}", "\n}  ", "\n", "\n", "\n", "/** ", "\n\n", "\n", "\n", "处理事件 ", "\n*/", "\npublic void actionPerformed(ActionEvent e) {", "\n// 获取事件源的标签", "\nString label = e.getActionCommand();", "\nif(label.equals(\"复制(C)\"))", "\n{", "\nString temp = resultText.getText().trim();", "\ncopyBoard.replace(0, copyBoard.length(), temp);", "\n\n", "}", "\nelse if(label.equals(\"黏贴(V)\"))", "\n{", "\n    resultText.setText(copyBoard.toString());", "\n}else if (label.equals(COMMAND[0])) {", "\n    // 用户按了\"Backspace\"键", "\n    handleBackspace();", "\n}else if (label.equals(COMMAND[1])) {", "\n    // 用户按了\"C\"键", "\n    handleC();", "\n} else if (\"0123456789.\".indexOf(label) >= 0) {", "\n    // 用户按了数字键或者小数点键", "\n    handleNumber(label);", "\n    // handlezero(zero);", "\n} else {", "\n    // 用户按了运算符键", "\n    handleOperator(label);", "\n}", "\n}  ", "\n", "\n", "\n", "/** ", "\n\n", "\n", "处理Backspace键被按下的事件 \n*/", "\nprivate void handleBackspace() {", "\nString text = resultText.getText();", "\nint i = text.length();", "\nif (i > 0) {", "\n    // 退格，将文本最后一个字符去掉", "\n    text = text.substring(0, i - 1);", "\n    if (text.length() == 0) {", "\n        // 如果文本没有了内容，则初始化计算器的各种值", "\n        resultText.setText(\"0\");", "\n        firstDigit = true;", "\n        operator = \"=\";", "\n    } else {", "\n        // 显示新的文本", "\n        resultText.setText(text);", "\n    }", "\n}", "\n}", "\n", "\n", "\n", "/** ", "\n\n", "\n", "处理数字键被按下的事件 ", "\n", " ", "\n", "@param key \n*/", "\nprivate void handleNumber(String key) {", "\nif (firstDigit) {", "\n    // 输入的第一个数字", "\n    resultText.setText(key);", "\n} else if ((key.equals(\".\")) && (resultText.getText().indexOf(\".\") < 0)) {", "\n    // 输入的是小数点，并且之前没有小数点，则将小数点附在结果文本框的后面", "\n    resultText.setText(resultText.getText() + \".\");", "\n} else if (!key.equals(\".\")) {", "\n    // 如果输入的不是小数点，则将数字附在结果文本框的后面", "\n    resultText.setText(resultText.getText() + key);", "\n}", "\n// 以后输入的肯定不是第一个数字了", "\nfirstDigit = false;", "\n}", "\n", "\n", "\n", "/** ", "\n\n", "\n", "处理C键被按下的事件 \n*/", "\nprivate void handleC() {", "\n// 初始化计算器的各种值", "\nresultText.setText(\"0\");", "\nfirstDigit = true;", "\noperator = \"=\";", "\n}", "\n", "\n", "\n", "/** ", "\n\n", "\n", "处理运算符键被按下的事件 ", "\n", " ", "\n", "@param key \n", "/", "\nprivate void handleOperator(String key) {", "\nif (operator.equals(\"/\")) {", "\n    // 除法运算", "\n    // 如果当前结果文本框中的值等于0", "\n    if (getNumberFromText() == 0.0) {", "\n        // 操作不合法", "\n        operateValidFlag = false;", "\n        resultText.setText(\"除数不能为零\");", "\n    } else {", "\n        resultNum /= getNumberFromText();", "\n    }", "\n} else if (operator.equals(\"1/x\")) {", "\n    // 倒数运算", "\n    if (resultNum == 0.0) {", "\n        // 操作不合法", "\n        operateValidFlag = false;", "\n        resultText.setText(\"零没有倒数\");", "\n    } else {", "\n        resultNum = 1 / resultNum;", "\n    }", "\n} else if (operator.equals(\"+\")) {", "\n    // 加法运算", "\n    resultNum += getNumberFromText();", "\n} else if (operator.equals(\"-\")) {", "\n    // 减法运算", "\n    resultNum -= getNumberFromText();", "\n} else if (operator.equals(\"", "\")) {", "\n    // 乘法运算", "\n    resultNum *= getNumberFromText();", "\n} else if (operator.equals(\"sqrt\")) {", "\n    // 平方根运算", "\n    resultNum = Math.sqrt(resultNum);", "\n} else if (operator.equals(\"%\")) {", "\n    // 百分号运算，除以100", "\n    resultNum = resultNum / 100;", "\n} else if (operator.equals(\"+/-\")) {", "\n    // 正数负数运算", "\n    resultNum = resultNum * (-1);", "\n} else if (operator.equals(\"=\")) {", "\n    // 赋值运算", "\n    resultNum = getNumberFromText();", "\n}", "\nif (operateValidFlag) {", "\n    // 双精度浮点数的运算", "\n    long t1;", "\n    double t2;", "\n    t1 = (long) resultNum;", "\n    t2 = resultNum - t1;", "\n    if (t2 == 0) {", "\n        resultText.setText(String.valueOf(t1));", "\n    } else {", "\n        resultText.setText(String.valueOf(resultNum));", "\n    }", "\n}", "\n// 运算符等于用户按的按钮", "\noperator = key;", "\nfirstDigit = true;", "\noperateValidFlag = true;", "\n}", "\n", "\n", "\n", "/** ", "\n\n", "\n", "从结果文本框中获取数字 ", "\n", " ", "\n", "@return \n*/", "\nprivate double getNumberFromText() {", "\ndouble result = 0;", "\ntry {", "\n    result = Double.valueOf(resultText.getText()).doubleValue();", "\n} catch (NumberFormatException e) {", "\n}", "\nreturn result;", "\n}", "\n", "\n", "\n", "public static void main(String args[]) {", "\n    Calculator calculator1 = new Calculator();", "\n    calculator1.setVisible(true);", "\n    calculator1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);", "\n}", "\n}  ", "\n", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;ul&gt;&lt;li&gt;idea 右键 你要的类&amp;#xff0c; 选择 如下&amp;#xff1a;&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/252425906176145.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;ul&gt;&lt;li&gt;&lt;p&gt;然后在弹出的选择 Java Class Diagram&lt;/p&gt;\n&lt;/li&gt;&lt;li&gt;&lt;p&gt;最后把其他的类拖入 这个页面&amp;#xff0c;然后右键 Show  Dependencies&lt;/p&gt;\n&lt;/li&gt;&lt;/ul&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/984775906176122.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/889116906176154.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;PS&amp;#xff1a; 类图中&amp;#xff0c;自己可以右键选择展示 其他的内容&amp;#xff0c;比如展示方法&amp;#xff0c;成员变量等等&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["画出面向对象程序的类结构图", ["\n", "import", " javax.swing.*;\npublic ", "class", " ", "Ji", " ", "extends", " ", "JFrame", "\n{\n    public Ji()\n    {\n        add(", "new", " JiSuanQi());", "//将JiSuanQi实例加入到框架中\n        pack();//", "pack类可以调整窗口大小，以适合其组件的大小和布局\n    }\n}\n", "import", " java.awt.*;\n", "import", " javax.swing.*;\npublic ", "class", " ", "JiSuan", "\n{\n    public ", "static", " ", "void", " main(", "String", "[] args)\n    {\n        EventQueue.invokeLater", "(() -> {\n            Ji frame = ", "new", " Ji();", "//构建Ji类，调用Ji中的方法\n            frame.setTitle(\"Calculator\");//", "设置窗口标题为Calculator（计算器）\n            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);", "//构建窗口，EXIT_ON_CLOSE表示结束窗口所在的应用程序，在窗口被关闭时退出\n            frame.setVisible(true);//", "设置窗口可见，否则窗口不会显示\n        })", ";// 使用", "EventQueue", ".", "invokeLater", "，其好处是调用完这个方法后将其销毁，由于匿名内部类作为临时变量存在，给它分配的内存此时被释放\n    }\n}\n", "import", " ", "java", ".", "awt", ".*;\n", "import", " ", "java", ".", "awt", ".", "event", ".*;\n", "import", " ", "javax", ".", "swing", ".*;\n", "public", " ", "class", " ", "JiSuanQi", " ", "extends", " ", "JPanel", "\n{\n    ", "public", " ", "static", " ", "Object", " ", "event", ";\n    ", "public", " ", "JButton", " ", "display", ";\n   ", "public", " ", "JPanel", " ", "panel", ";\n    ", "public", " ", "double", " ", "result", ";\n    ", "public", " ", "String", " ", "lastCommand", ";\n    ", "public", " ", "boolean", " ", "start", ";\n    ", "public", " ", "JiSuanQi", "()", "\n    {\n        ", "setLayout", "(", "new", " BorderLayout())", ";//设置屏幕上组件的格式布局\n        ", "result", " = 0;//用于记录计算结果\n        ", "lastCommand", " = \"=\";//", "lastcommand", "译为最后指令，表示输入最后指令为“=“（输入后开始执行计算过程）\n        ", "start", " = ", "true", ";//如果为真，则开始\n        ", "display", " = ", "new", " ", "JButton", "(", "\"0\"", ")", ";//", "display", "用于生成框类型，值为0\n        ", "display", ".", "setEnabled", "(", "false", ")", ";\n        ", "add", "(display, BorderLayout.NORTH)", ";//将此框放在最上面（初始显示数值为0，此框用于展示计算结果）\n        ", "ActionListener", " ", "insert", " = ", "new", " ", "InsertAction", "()", ";//调用类里的", "InsertAction", "方法（用于获取点击按钮的数值）\n        ", "ActionListener", " ", "command", " = ", "new", " ", "CommandAction", "()", ";//调用类里的", "CommandAction", "方法（进行计算过程）\n        ", "panel", " = ", "new", " ", "JPanel", "()", ";\n        ", "panel", ".", "setLayout", "(", "new", " GridLayout(", "4", ", ", "4", "))", ";//设置4行4列的按钮\n        //下面就是设置按钮了，其中", "insert", "表示要获取该按钮的数字，", "command", "表示进行计算的按钮（", "insert", "，", "command", "已在上面构建，分别使用", "InsertAction", "，", "CommandAction", "方法）\n        //第一行按钮\n        ", "addButton", "(", "\"7\"", ", insert)", ";\n        ", "addButton", "(", "\"8\"", ", insert)", ";\n        ", "addButton", "(", "\"9\"", ", insert)", ";\n        ", "addButton", "(", "\"/\"", ", command)", ";\n        //第二行按钮\n        ", "addButton", "(", "\"4\"", ", insert)", ";\n        ", "addButton", "(", "\"5\"", ", insert)", ";\n        ", "addButton", "(", "\"6\"", ", insert)", ";\n        ", "addButton", "(", "\"*\"", ", command)", ";\n        //第三行按钮\n        ", "addButton", "(", "\"1\"", ", insert)", ";\n        ", "addButton", "(", "\"2\"", ", insert)", ";\n        ", "addButton", "(", "\"3\"", ", insert)", ";\n        ", "addButton", "(", "\"-\"", ", command)", ";\n        //第四行按钮\n        ", "addButton", "(", "\"0\"", ", insert)", ";\n        ", "addButton", "(", "\".\"", ", insert)", ";\n        ", "addButton", "(", "\"=\"", ", command)", ";\n        ", "addButton", "(", "\"+\"", ", command)", ";\n        ", "add", "(panel, BorderLayout.CENTER)", ";//将按钮布置在窗口中央位置\n    }\n    ", "public", " ", "void", " ", "addButton", "(", "String", " label, ActionListener listener)", "//开始添加按钮\n    {\n        ", "JButton", " ", "button", " = ", "new", " ", "JButton", "(label)", ";\n        ", "button", ".", "addActionListener", "(listener)", ";\n        ", "panel", ".", "add", "(button)", ";\n    }\n    ", "public", " ", "class", " ", "InsertAction", " ", "implements", " ", "ActionListener", "//用于获取按钮数值\n    {\n        ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent event)", "//点击按钮后发生的反应\n        {\n            ", "String", " ", "input", " = ", "event", ".", "getActionCommand", "()", ";//获取被点击按钮的数值（对应上面的", "insert", "）\n            ", "if", " ", "(start)", "//如果为真（即点击按钮获取到数值），前面已定义", "start", "为", "true", "，则：\n            {\n                ", "display", ".", "setText", "(", "\"\"", ")", ";//将该数值显示到最上面的框中（此框已在上面定义）\n                ", "start", " = ", "false", ";\n            }\n            ", "display", ".", "setText", "(display.getText() + input)", ";//将获取的按钮数值开始展示在框内\n        }\n    }\n    //下面方法是进行运算第一步，由于”-“可能是性质符号，而不是运算符号，所以先对”-“进行处理\n    ", "public", " ", "class", " ", "CommandAction", " ", "implements", " ", "ActionListener", "//执行计算操作前对”-“进行处理\n    {\n        ", "public", " ", "void", " ", "actionPerformed", "(ActionEvent event)", "//点击按钮后发生的反应\n        {\n            ", "String", " ", "command", " = ", "event", ".", "getActionCommand", "()", ";//获取按钮的内容（即运算符号，对应上面的", "command", "）\n            ", "if", " ", "(start)", "//如果为真（即点击了按钮并获取到运算符号的信息），则开始：\n            {\n                ", "if", " ", "(command.equals(", "\"-\"", "))", "//如果点击的按钮为”-“\n                {\n                    ", "display", ".", "setText", "(command)", ";//显示在最上面的框内（表示一个负号，此时为负数）\n                    ", "start", " = ", "false", ";//则让", "start", "变成", "false", "，防止再次被当作负号处理（例如依次输入”1“”-“”-“”1“则有一个”-“为减号）\n                }\n                ", "else", " ", "lastCommand", " = ", "command", ";//不是”-“则直接进行计算操作\n            }\n            ", "else", "\n            {\n                ", "calculate", "(Double.parseDouble(display.getText()))", ";//如果没有输入运算符号也直接进行计算操作（例如输入1-2，此时一个”-“直接作为运算符号）\n                ", "lastCommand", " = ", "command", ";\n                ", "start", " = ", "true", ";\n            }\n        }\n    }\n    ", "public", " ", "void", " ", "calculate", "(double x)", "\n    {\n        ", "if", " ", "(lastCommand.equals(", "\"+\"", "))", " ", "result", " += ", "x", ";//点击按钮”+“后进行加法运算\n        ", "else", " ", "if", " ", "(lastCommand.equals(", "\"-\"", "))", " ", "result", " -= ", "x", ";//点击按钮”-“后进行减法运算\n        ", "else", " ", "if", " ", "(lastCommand.equals(", "\"*\"", "))", " ", "result", " *= ", "x", ";//点击按钮”*“后进行乘法运算\n        ", "else", " ", "if", " ", "(lastCommand.equals(", "\"/\"", "))", " ", "result", " /= ", "x", ";//点击按钮”/“后进行除法运算\n        ", "else", " ", "if", " ", "(lastCommand.equals(", "\"=\"", "))", " ", "result", " = ", "x", ";//点击按钮”=“后进行等于运算\n        ", "display", ".", "setText", "(", "\"\"", " + result)", ";//在上面的框内显示出计算结果", "result", "\n    }\n}\n\n", "\n"]], "Tag": "算法设计"}
{"Answer": "```\r\n#include \"stdio.h\"\r\n#include \"string.h\"//字符串函数\r\n#include \"stdlib.h\"\r\nlong Fact(int n);\r\nlong FactSum(int v);\r\n//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数\r\nvoid displaymain()//显示主菜单\r\n{\r\nprintf(\"*******************\\n\");\r\nprintf(\"简易计算器\\n\");\r\nprintf(\"*******************\\n\");\r\nprintf(\"请选择\\n\");\r\nprintf(\"1：加法\\n\");\r\nprintf(\"2：减法\\n\");\r\nprintf(\"3：乘法\\n\");\r\nprintf(\"4：除法\\n\");\r\nprintf(\"5：求余\\n\");\r\nprintf(\"6：累加\\n\");\r\nprintf(\"7：阶乘\\n\");\r\nprintf(\"8：阶乘累加\\n\");\r\nprintf(\"9：退出系统\\n\");\r\n}\r\nvoid password()\r\n{\r\nint i=0,temp;\r\nchar password[10]={0}; //声明一个最多有十个元素的数组，并且初始化值为0；\r\n//for(i=0;i {\r\nprintf(\"请输入密码：\");\r\nscanf(\"%s\",password);//输入密码（字符串）\r\nif(strcmp(\"19491001\",password)==0)//strcmp:比较两个字符串是否一样\r\n{\r\nprintf(\"登陆成功\\n\");\r\nint choice,flag=0;\r\nvoid displaymain();\r\nvoid plus();\r\nvoid minus();\r\nvoid multiply();\r\nvoid divide();\r\nvoid complementation();\r\nvoid accumulation();\r\nint factorial();\r\nint factorialSum();\r\nwhile(flag==0)\r\n{\r\nputchar('\\n');\r\ndisplaymain();\r\nprintf(\"please input a digital(1-7)\\n\");\r\nscanf(\"%d\",&amp;choice);\r\nif(choice&gt;=1&amp;&amp;choice&lt;=7)\r\nswitch(choice)\r\n{\r\ncase 1:plus();break;\r\ncase 2:minus();break;\r\ncase 3:multiply();break;\r\ncase 4:divide();break;\r\ncase 5:complementation();break;\r\ncase 6:accumulation();break;\r\ncase 7:factorial();break;\r\ncase 8:factorialSum();break;\r\ndefault:printf(\"选项输入错误!\\n\");\r\n}\r\nelse\r\n{\r\nprintf(\"your inputs is error!\\n\");flag=1;\r\n}\r\n}\r\ngetch();\r\n//菜单\r\n\r\n    }\r\n    else\r\n    {\r\n        printf(\"密码错误\\n\");\r\n    }\r\n}\r\n\r\nvoid plus()\r\n{\r\ndouble a,b,temp;\r\nprintf(\"请输入以空格分隔的两个运算数：\\n\");\r\nscanf(\"%lf %lf\",&amp;a,&amp;b);\r\ntemp=a+b;\r\nprintf(\"结果是：%lf\",temp);\r\n}\r\nvoid minus()\r\n{\r\ndouble a,b,temp;\r\nprintf(\"请输入被减数与减数（并用空格隔开）：\\n\");\r\nscanf(\"%lf %lf\",&amp;a,&amp;b);\r\ntemp=a-b;\r\nprintf(\"结果是：%f\",temp);\r\n}\r\nvoid multiply()\r\n{\r\ndouble a,b,temp;\r\nprintf(\"请输入以空格分隔的两个运算数：\\n\");\r\nscanf(\"%lf %lf\",&amp;a,&amp;b);\r\ntemp=a*b;\r\nprintf(\"结果是：%f\",temp);\r\n}\r\nvoid divide()\r\n{\r\ndouble a,b,temp;\r\nprintf(\"请输入被除数与除数（并用空格隔开）：\\n\");\r\nscanf(\"%lf %lf\",&amp;a,&amp;b);\r\nif(b!=0)\r\n{\r\n    temp=a/b;\r\n    printf(\"结果是：%f\",temp);\r\n}\r\n\r\n\r\nelse\r\nprintf(\"错误！\\n\");\r\n}\r\n\r\nvoid complementation()\r\n{\r\nint a,b,temp;\r\nprintf(\"请输入两个用空格隔开的运算数：\\n\");\r\nscanf(\"%d %d\",&amp;a,&amp;b);\r\nif(b!=0)\r\n{\r\ntemp=a%b;\r\nprintf(\"结果是：%d\",temp);\r\n}\r\nelse\r\nprintf(\"错误！\\n\");\r\n}\r\nvoid accumulation()\r\n{\r\nint n,temp;\r\nint a,sum=1;\r\nprintf(\"请输入要求累加的数值：\\n\");\r\nscanf(\"%d\",&amp;n);\r\nfor(a=2;a&lt;=n;a++)\r\n{\r\nsum+=a;\r\n}\r\ntemp=sum;\r\nprintf(\"累加和为：%d\\n\",temp);\r\n}\r\nint factorial()\r\n{\r\nint m;\r\nlong ret,temp;\r\nprintf(\"请输入想求的阶乘数:\");\r\nscanf(\"%d\",&amp;m);\r\nret = Fact(m);//调用函数Fact(),并将函数的返回值存入ret\r\nif(ret==-1)\r\nprintf(\"输入错误!\\n\");\r\nelse\r\n{\r\ntemp=ret;\r\nprintf(\"结果是：%d\",temp);\r\n}\r\n\r\nreturn 0;\r\n}\r\nlong Fact(int n)//函数的定义（作用：计算输入阶乘数的阶乘，并将结果返回主函数,且当n&lt;0时，返回-1）\r\n{\r\nint i;\r\nlong result = 1;\r\nif(n&lt;0)\r\n{\r\nreturn -1;\r\n}\r\nelse\r\n{\r\nfor(i = 2;i&lt;=n;i++)\r\n{\r\nresult*=i;\r\n}\r\nreturn result;\r\n}\r\n}\r\nint factorialSum()\r\n{\r\nint m;\r\nlong ret,temp;\r\nprintf(\"请输入想求的阶乘和数:\");\r\nscanf(\"%d\",&amp;m);\r\nret = FactSum(m);//调用函数Fact(),并将函数的返回值存入ret\r\nif(ret==-1)\r\nprintf(\"输入错误!\\n\");\r\nelse\r\ntemp=ret;\r\nreturn 0;\r\n}\r\nlong FactSum(int v)//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数,且当n&lt;0时，返回-1）\r\n{\r\nint i;\r\nlong result=1,j = 1;\r\nif(v&lt;0)\r\n{\r\nreturn -1;\r\n}\r\nelse\r\n{\r\nfor(i = 2;i&lt;=v;i++)\r\n{\r\nj*=i;\r\nresult+=j;\r\n}\r\nreturn result;\r\n}\r\n}\r\nvoid main()\r\n{\r\n    int temp;\r\npassword();\r\nprintf(\"结果是：%d\",temp);\r\n}\r\n\r\n\r\n```", "Konwledge_Point": "乘法", "Question": ["C语言项目，怎么都调不出来，求修改，详细说明或者把改好的代码发出来，谢谢！", ["\n（为什么打上去是全的，发出去就缺了呢）", "\n#include", "\n#include//字符串函数", "\n#include", "\nlong Fact(int n);", "\nlong FactSum(int v);", "\n//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数", "\nvoid displaymain()//显示主菜单", "\n{", "\n    printf(\"*******************\\n\");", "\n    printf(\"简易计算器\\n\");", "\n    printf(\"*******************\\n\");", "\n    printf(\"请选择\\n\");", "\n    printf(\"1：加法\\n\");", "\n    printf(\"2：减法\\n\");", "\n    printf(\"3：乘法\\n\");", "\n    printf(\"4：除法\\n\");", "\n    printf(\"5：求余\\n\");", "\n    printf(\"6：累加\\n\");", "\n    printf(\"7：阶乘\\n\");", "\n    printf(\"8：阶乘累加\\n\");", "\n    printf(\"9：退出系统\\n\");", "\n}", "\nvoid password()", "\n{", "\n    int i=0,temp;", "\n    char password[10]={0};  //声明一个最多有十个元素的数组，并且初始化值为0；", "\n    for(i=0;i\n    {", "\n        printf(\"请输入密码：\");", "\n        scanf(\"%s\",password);//输入密码（字符串）", "\n        if(strcmp(\"19491001\",password)==0)//strcmp:比较两个字符串是否一样", "\n        {", "\n            printf(\"登陆成功\\n\");", "\n            int choice,flag=0;", "\n            void displaymain();", "\n            void plus();", "\n            void minus();", "\n            void multiply();", "\n            void divide();", "\n            void complementation();", "\n            void accumulation();", "\n            int factorial();", "\n            int factorialSum();", "\n            while(flag==0)", "\n    {", "\n        displaymain();", "\n        printf(\"please input a digital(1-7)\\n\");", "\n        scanf(\"%d\",&choice);", "\n        if(choice>=1&&choice<=7)", "\n        switch(choice)", "\n        {", "\n            case 1:plus();break;", "\n            case 2:minus();break;", "\n            case 3:multiply();break;", "\n            case 4:divide();break;", "\n            case 5:complementation();break;", "\n            case 6:accumulation();break;", "\n            case 7:factorial();break;", "\n            case 8:factorialSum();break;", "\n            default:printf(\"选项输入错误!\\n\");", "\n        }", "\n        else", "\n        {", "\n            printf(\"your inputs is error!\\n\");flag=1;", "\n        }", "\n    }", "\n    getch();", "\n                   //菜单", "\n\n", "    }\n    else\n    {\n        printf(\"密码错误\\n\");\n    }\n", "\n\n", "}", "\n\n", "void plus()", "\n{", "\n    double a,b,temp;", "\n    printf(\"请输入以空格分隔的两个运算数：\\n\");", "\n    scanf(\"%lf %lf\",&a,&b);", "\n    temp=a+b;", "\n}", "\nvoid minus()", "\n{", "\n    double a,b,temp;", "\n    printf(\"请输入被减数与减数（并用空格隔开）：\\n\");", "\n    scanf(\"%lf %lf\",&a,&b);", "\n    temp=a-b;", "\n}", "\nvoid multiply()", "\n{", "\n    double a,b,temp;", "\n    printf(\"请输入以空格分隔的两个运算数：\\n\");", "\n    scanf(\"%lf %lf\",&a,&b);", "\n    temp=a*b;", "\n}", "\nvoid divide()", "\n{", "\n    double a,b,temp;", "\n    printf(\"请输入被除数与除数（并用空格隔开）：\\n\");", "\n    scanf(\"%lf %lf\",&a,&b);", "\n    if(b!=0)", "\n    temp=a/b;", "\n    else", "\n    printf(\"错误！\\n\");", "\n}", "\n\n", "void complementation()", "\n{", "\n    int a,b,temp;", "\n    printf(\"请输入两个用空格隔开的运算数：\\n\");", "\n    scanf(\"%d %d\",&a,&b);", "\n    if(b!=0)", "\n    {", "\n        temp=a%b;", "\n    }", "\n    else", "\n    printf(\"错误！\\n\");", "\n}", "\nvoid accumulation()", "\n{", "\n    int n,temp;", "\n    int a,sum=1;", "\n    printf(\"请输入要求累加的数值：\\n\");", "\n    scanf(\"%d\",&n);", "\n    for(a=2;a<=n;a++)", "\n    {", "\n        sum+=a;", "\n    }", "\n    temp=sum;", "\n    printf(\"累加和为：%d\\n\",temp);", "\n}", "\nint factorial()", "\n{", "\n    int m;", "\n    long ret,temp;", "\n    printf(\"请输入想求的阶乘数:\");", "\n    scanf(\"%d\",&m);", "\n    ret = Fact(m);//调用函数Fact(),并将函数的返回值存入ret", "\n    if(ret==-1)", "\n        printf(\"输入错误!\\n\");", "\n    else", "\n    {", "\n        temp=ret;", "\n    }", "\n\n", "return 0;\n", "\n\n", "}", "\nlong Fact(int n)//函数的定义（作用：计算输入阶乘数的阶乘，并将结果返回主函数,且当n<0时，返回-1）", "\n{", "\n    int i;", "\n    long result = 1;", "\n    if(n<0)", "\n    {", "\n        return -1;", "\n    }", "\n    else", "\n    {", "\n        for(i = 2;i<=n;i++)", "\n        {", "\n            result*=i;", "\n        }", "\n    return result;", "\n    }", "\n}", "\nint factorialSum()", "\n{", "\n    int m;", "\n    long ret,temp;", "\n    printf(\"请输入想求的阶乘和数:\");", "\n    scanf(\"%d\",&m);", "\n    ret = FactSum(m);//调用函数Fact(),并将函数的返回值存入ret", "\n    if(ret==-1)", "\n        printf(\"输入错误!\\n\");", "\n    else", "\n    temp=ret;", "\n    return 0;", "\n}", "\nlong FactSum(int v)//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数,且当n<0时，返回-1）", "\n{", "\n    int i;", "\n    long result=1,j = 1;", "\n    if(v<0)", "\n    {", "\n        return -1;", "\n    }", "\n    else", "\n    {", "\n        for(i = 2;i<=v;i++)", "\n        {", "\n            j*=i;", "\n            result+=j;", "\n        }", "\n    return result;", "\n    }", "\n}", "\nvoid main()", "\n{", "\n  password();", "\n  printf(\"结果是：%lf\",temp);", "\n}"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;原生js里面&amp;#xff0c;不是可以通过input&lt;br /&gt;标签对象.value获取表单input标签的值吗&amp;#xff1f;&lt;br /&gt;也可以用jquery中的.val()获取input标签中点值&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["简易计算器的功能无法实现", ["我刚开始学习js，任务是完成一个简易计算器", "\n", "感觉已经可以实现功能了，但就是无法显示计算结果", "\n", "请各位指出我的问题！", "谢谢！", "\n", "\n", "我尝试了很多方法试图使单选按钮的结果被接收，", "\n", "\n```html\n", "<!DOCTYPE ", "html", ">", "\n", "<", "html", " ", "lang", "=", "\"en\"", ">", "\n", "<", "head", ">", "\n    ", "<", "meta", " ", "charset", "=", "\"UTF-8\"", ">", "\n    ", "<", "meta", " ", "http-equiv", "=", "\"X-UA-Compatible\"", " ", "content", "=", "\"IE=edge\"", ">", "\n    ", "<", "meta", " ", "name", "=", "\"viewport\"", " ", "content", "=", "\"width=device-width, initial-scale=1.0\"", ">", "\n    ", "<", "title", ">", "简单计算器", "</", "title", ">", "\n    ", "<", "style", ">", "\n        ", "h1", "{\n            ", "text-align", ": center;\n            ", "font-family", ": 楷体;\n        }\n        ", ".button", "{\n            ", "margin-left", ": ", "30px", ";\n        }\n        ", ".num1", "{\n            ", "margin-top", ": ", "40px", ";\n            ", "margin-left", ": ", "10px", ";\n            ", "width", ": ", "250px", ";\n            ", "margin", ": ", "0", "auto;\n        }\n        ", ".num2", "{\n            ", "margin-top", ": ", "20px", ";\n            ", "margin-left", ": ", "10px", ";\n            ", "width", ": ", "250px", ";\n            ", "margin", ": ", "0", "auto;\n        }\n        \n\n        \n        ", "div", "{\n            ", "width", ": ", "600px", ";\n            ", "height", ": ", "400px", ";\n            ", "background-color", ": ", "rgb", "(", "181", ", ", "232", ", ", "255", ");\n            ", "position", ": absolute;\n            ", "top", ": ", "100px", ";\n            ", "left", ": ", "550px", ";\n            ", "border-bottom", ": ", "10px", " solid ", "rgb", "(", "71", ", ", "253", ", ", "253", ");\n            ", "/* box-shadow: 10px 5px 5px rgb(255, 228, 251); */", "\n            ", "border-radius", ": ", "0", " ", "0", " ", "20px", " ", "20px", ";\n        }\n        ", ".result", "{\n            ", "margin-top", ": ", "40px", ";\n            ", "margin-left", ": ", "10px", ";\n            ", "width", ": ", "250px", ";\n            ", "margin", ": ", "0", "auto; \n        }\n        ", ".button", "{\n            ", "width", ": ", "60px", ";\n            ", "height", ": ", "20px", ";\n            ", "font-size", ": ", "15px", ";\n            ", "font-family", ": 楷体;\n            \n            ", "border", ": none;\n        }\n    ", "</", "style", ">", "\n\n", "</", "head", ">", "\n", "<", "body", ">", "\n    ", "<", "div", ">", "\n    ", "<", "h1", ">", "简单计算器", "</", "h1", ">", "\n    ", "<", "hr", ">", "\n     ", "<", "form", " ", "action", "=", "\"form1\"", " ", "method", "=", "\"get\"", ">", "\n    ", "<", "input", " ", "type", "=", "\"radio\"", " ", "name", "=", "\"button\"", " ", "id", "=", "\"a\"", " ", "class", "=", "\"button\"", " ", "onchange", "=", "\"button()\"", " ", "checked", ">", "<", "label", " ", "for", "=", "\"a\"", ">", "加法", "</", "label", ">", "\n    ", "<", "input", " ", "type", "=", "\"radio\"", " ", "name", "=", "\"button\"", " ", "id", "=", "\"b\"", " ", "class", "=", "\"button\"", " ", "onchange", "=", "\"button()\"", ">", "<", "label", " ", "for", "=", "\"b\"", ">", "减法", "</", "label", ">", "\n    ", "<", "input", " ", "type", "=", "\"radio\"", " ", "name", "=", "\"button\"", " ", "id", "=", "\"c\"", " ", "class", "=", "\"button\"", " ", "onchange", "=", "\"button()\"", ">", "<", "label", " ", "for", "=", "\"c\"", ">", "乘法", "</", "label", ">", "\n    ", "<", "input", " ", "type", "=", "\"radio\"", " ", "name", "=", "\"button\"", " ", "id", "=", "\"d\"", " ", "class", "=", "\"button\"", " ", "onchange", "=", "\"button()\"", ">", "<", "label", " ", "for", "=", "\"d\"", ">", "除法", "</", "label", ">", "\n    ", "</", "form", ">", "\n    ", "<", "br", ">", "\n    数一：", "<", "input", " ", "type", "=", "\"text\"", " ", "placeholder", "=", "\"请输入第一个数字\"", " ", "class", "=", "\"num1\"", " ", "id", "=", "\"num1\"", ">", "\n    ", "<", "br", ">", "\n    数二：", "<", "input", " ", "type", "=", "\"text\"", " ", "placeholder", "=", "\"请输入第二个数字\"", " ", "class", "=", "\"num2\"", " ", "id", "=", "\"num2\"", ">", "\n    ", "<", "br", ">", "\n    ", "<", "button", " ", "id", "=", "\"jisuan\"", " ", "class", "=", "\"button\"", " ", "name", "=", "\"jisuan\"", " ", "type", "=", "\"button\"", ">", "计算", "</", "button", ">", "\n    ", "<", "br", ">", "\n    \n    结果：", "<", "input", " ", "type", "=", "\"text\"", " ", "class", "=", "\"result\"", " ", "id", "=", "\"result\"", " ", "placeholder", "=", "\"结果是\"", ">", "\n    ", "<", "br", ">", "\n\n", "</", "div", ">", "\n", "<", "script", " ", "language", "=", "\"javescript\"", ">", "\n   \n    ", "// let num1=document.getElementById('num1');", "\n    ", "// let num2=document.getElementById('num2');", "\n    ", "// let button=document.getElementsByClassName('button');", "\n    ", "// // let subtract=document.getElementById('b');", "\n    ", "// // let mulitply=document.getElementById('c');", "\n    ", "// // let divide=document.getElementById('d');", "\n    ", "// let result=document.getElementById('result');", "\n    ", "// result.onclick=function(){", "\n    ", "//     // num1.value num2.value button.value ", "\n       \n        \n    ", "// }fo", "\n    ", "// function count(){", "\n    ", "//      var num1 = Number(document.getElementById(\"num1\").value);", "\n                \n    ", "//      var num2 = Number(document.getElementById(\"num2\").value);", "\n\n        ", "// var  re=document.getElementById(\"result\");", "\n        ", "function", " ", "button", "(", "){\n            ", "var", " but=", "document", ".", "getElementById", "(", "\"jisuan\"", ");\n            check1=", "document", ".", "getElementById", "(", "\"a\"", ").", "checked", ";\n            check2=", "document", ".", "getElementById", "(", "\"b\"", ").", "checked", ";\n            check3=", "document", ".", "getElementById", "(", "\"c\"", ").", "checked", ";\n            check4=", "document", ".", "getElementById", "(", "\"d\"", ").", "checked", ";\n            ", "//  var result=document.getElementById(\"result\");", "\n        ", "// 笔记：终止当前函数并返回当前函数的值（返回这个数值的意思），函数整体被赋值为函数的返回值", "\n            ", "if", "(check1==", "true", "){\n               ", "return", " ", "1", ";\n            }\n            ", "else", " ", "if", "(check2==", "true", "){\n               ", "return", " ", "2", ";\n            }\n            ", "else", " ", "if", "(check3==", "true", "){\n               ", "return", " ", "3", "\n            }\n            ", "else", " ", "if", "(check4==", "true", "){\n               ", "return", " ", "4", ";\n            }\n            ", "// document.getElementById(\"result\").innerText=result;", "\n    }\n    ", "var", " but=", "document", ".", "getElementById", "(", "\"jisuan\"", ");\n    but.", "onclick", "=", "function", " (", "){\n        \n        ", "var", " numa = ", "Number", "(", "document", ".", "getElementById", "(", "\"num1\"", ").", "value", ");    \n        ", "var", " numb = ", "Number", "(", "document", ".", "getElementById", "(", "\"num2\"", ").", "value", ");\n        ", "var", " result=", "document", ".", "getElementById", "(", "\"result\"", ");\n        ", "var", " result;\n       ", "if", "(", "1", "==", "button", "()){\n        result.", "value", " = ", "parseFloat", "(num1.", "value", ") + ", "parseFloat", "(num2.", "value", ");\n       }\n       ", "else", " ", "if", "(", "button", "()==", "2", "){\n        result.", "value", " = ", "parseFloat", "(num1.", "value", ") - ", "parseFloat", "(num2.", "value", ");\n       }\n       ", "else", " ", "if", "(", "button", "()==", "3", "){\n        result.", "value", " = ", "parseFloat", "(num1.", "value", ") * ", "parseFloat", "(num2.", "value", ");\n       }\n       ", "else", " ", "if", "(", "button", "()==", "4", "){\n        result.", "value", " = ", "parseFloat", "(num1.", "value", ") / ", "parseFloat", "(num2.", "value", ");\n       }\n\n        }\n\n        ", "// 另一种获取选项的方法 ", "\n        ", "// var item=null;", "\n        ", "// var a=document.getElementsByName(\"button\")", "\n        ", "// // 检索radio", "\n        ", "// for(var i=0;i<a.length;i++){", "\n        ", "//     if (a[i].checked){", "\n        ", "//         item=a[i].value", "\n        ", "//     }", "\n        ", "// }", "\n        ", "// var result = 0;", "\n     \n    ", "// result = parseFloat(num1.value) + parseFloat(num2.value);", "\n    ", "//     }", "\n    ", "// re.value=item;", "\n    ", "// }", "\n", "</", "script", ">", "\n", "</", "body", ">", "\n"]], "Tag": "算法设计"}
{"Answer": "```\r\n#include \"stdio.h\"\r\n#include \"string.h\"//字符串函数\r\n#include \"stdlib.h\"\r\nlong Fact(int n);\r\nlong FactSum(int v);\r\nvoid displaymain();\r\nvoid plus();\r\nvoid minus();\r\nvoid multiply();\r\nvoid divide();\r\nvoid complementation();\r\nvoid accumulation();\r\nint factorial();\r\nint factorialSum();\r\nvoid tuichu();\r\n//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数\r\nvoid displaymain()//显示主菜单\r\n{\r\n\tprintf(\"*******************\\n\");\r\n\tprintf(\"简易计算器\\n\");\r\n\tprintf(\"*******************\\n\");\r\n\tprintf(\"请选择\\n\");\r\n\tprintf(\"1：加法\\n\");\r\n\tprintf(\"2：减法\\n\");\r\n\tprintf(\"3：乘法\\n\");\r\n\tprintf(\"4：除法\\n\");\r\n\tprintf(\"5：求余\\n\");\r\n\tprintf(\"6：累加\\n\");\r\n\tprintf(\"7：阶乘\\n\");\r\n\tprintf(\"8：阶乘累加\\n\");\r\n\tprintf(\"9：退出系统\\n\");\r\n}\r\nvoid password()\r\n{\r\n\tint i = 0, count = 0;\r\n\tchar password[10] = { 0 }; //声明一个最多有十个元素的数组，并且初始化值为0；\r\n\tdo {\r\n\t\tprintf(\"请输入密码：\");\r\n\t\tscanf(\"%s\", password);//输入密码（字符串）\r\n\t\tif (strcmp(\"19491001\", password) == 0)\r\n\t\t\tbreak;\r\n\t\telse\r\n\t\t{\r\n\t\t\tcount++;\r\n\t\t\tprintf(\"密码错误\\n\");\r\n\t\t}\r\n\t} while (count &lt; 3);\r\n\t//strcmp:比较两个字符串是否一样\r\n\tif (strcmp(\"19491001\", password) == 0) {\r\n\t\tprintf(\"登陆成功\\n\");\r\n\t\tint choice, flag = 0;\r\n\t\twhile (flag == 0)\r\n\t\t{\r\n\t\t\tputchar('\\n');\r\n\t\t\tdisplaymain();\r\n\t\t\tprintf(\"please input a digital(1-9)\\n\");\r\n\t\t\tscanf(\"%d\", &amp;choice);\r\n\t\t\tif (choice &gt;= 1 &amp;&amp; choice &lt;= 9)\r\n\t\t\t\tswitch (choice)\r\n\t\t\t\t{\r\n\t\t\t\tcase 1:plus(); break;\r\n\t\t\t\tcase 2:minus(); break;\r\n\t\t\t\tcase 3:multiply(); break;\r\n\t\t\t\tcase 4:divide(); break;\r\n\t\t\t\tcase 5:complementation(); break;\r\n\t\t\t\tcase 6:accumulation(); break;\r\n\t\t\t\tcase 7:factorial(); break;\r\n\t\t\t\tcase 8:factorialSum(); break;\r\n\t\t\t\tcase 9:tuichu(); flag = 1; break;\r\n\t\t\t\tdefault:printf(\"选项输入错误!\\n\");\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tgetchar();\r\n\t\t//菜单\r\n\t}\r\n}\r\n\r\nvoid plus()\r\n{\r\n\tdouble a, b, temp;\r\n\tprintf(\"请输入以空格分隔的两个运算数：\\n\");\r\n\tscanf(\"%lf %lf\", &amp;a, &amp;b);\r\n\ttemp = a + b;\r\n\tprintf(\"结果是：%lf\", temp);\r\n}\r\nvoid minus()\r\n{\r\n\tdouble a, b, temp;\r\n\tprintf(\"请输入被减数与减数（并用空格隔开）：\\n\");\r\n\tscanf(\"%lf %lf\", &amp;a, &amp;b);\r\n\ttemp = a - b;\r\n\tprintf(\"结果是：%f\", temp);\r\n}\r\nvoid multiply()\r\n{\r\n\tdouble a, b, temp;\r\n\tprintf(\"请输入以空格分隔的两个运算数：\\n\");\r\n\tscanf(\"%lf %lf\", &amp;a, &amp;b);\r\n\ttemp = a * b;\r\n\tprintf(\"结果是：%f\", temp);\r\n}\r\nvoid divide()\r\n{\r\n\tdouble a, b, temp;\r\n\tprintf(\"请输入被除数与除数（并用空格隔开）：\\n\");\r\n\tscanf(\"%lf %lf\", &amp;a, &amp;b);\r\n\tif (b != 0)\r\n\t{\r\n\t\ttemp = a / b;\r\n\t\tprintf(\"结果是：%f\", temp);\r\n\t}\r\n\r\n\telse\r\n\t\tprintf(\"错误！\\n\");\r\n}\r\n\r\nvoid complementation()\r\n{\r\n\tint a, b, temp;\r\n\tprintf(\"请输入两个用空格隔开的运算数：\\n\");\r\n\tscanf(\"%d %d\", &amp;a, &amp;b);\r\n\tif (b != 0)\r\n\t{\r\n\t\ttemp = a % b;\r\n\t\tprintf(\"结果是：%d\", temp);\r\n\t}\r\n\telse\r\n\t\tprintf(\"错误！\\n\");\r\n}\r\nvoid accumulation()\r\n{\r\n\tint n, temp;\r\n\tint a, sum = 1;\r\n\tprintf(\"请输入要求累加的数值：\\n\");\r\n\tscanf(\"%d\", &amp;n);\r\n\tfor (a = 2; a &lt;= n; a++)\r\n\t{\r\n\t\tsum += a;\r\n\t}\r\n\ttemp = sum;\r\n\tprintf(\"累加和为：%d\\n\", temp);\r\n}\r\nint factorial()\r\n{\r\n\tint m;\r\n\tlong ret, temp;\r\n\tprintf(\"请输入想求的阶乘数:\");\r\n\tscanf(\"%d\", &amp;m);\r\n\tret = Fact(m);//调用函数Fact(),并将函数的返回值存入ret\r\n\tif (ret == -1)\r\n\t\tprintf(\"输入错误!\\n\");\r\n\telse\r\n\t{\r\n\t\ttemp = ret;\r\n\t\tprintf(\"结果是：%d\", temp);\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\nlong Fact(int n)//函数的定义（作用：计算输入阶乘数的阶乘，并将结果返回主函数,且当n&lt;0时，返回-1）\r\n{\r\n\tint i;\r\n\tlong result = 1;\r\n\tif (n &lt; 0)\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (i = 2; i &lt;= n; i++)\r\n\t\t{\r\n\t\t\tresult *= i;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\nint factorialSum()\r\n{\r\n\tint m;\r\n\tlong ret, temp;\r\n\tprintf(\"请输入想求的阶乘和数:\");\r\n\tscanf(\"%d\", &amp;m);\r\n\tret = FactSum(m);//调用函数Fact(),并将函数的返回值存入ret\r\n\tif (ret == -1)\r\n\t\tprintf(\"输入错误!\\n\");\r\n\telse {\r\n\t\ttemp = ret;\r\n\t\tprintf(\"结果是：%d\", temp);\r\n\t}\r\n\treturn 0;\r\n}\r\nlong FactSum(int v)//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数,且当n&lt;0时，返回-1）\r\n{\r\n\tint i;\r\n\tlong W = 1, j = 1;\r\n\tif (v &lt; 0)\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (i = 2; i &lt;= v; i++)\r\n\t\t{\r\n\t\t\tj *= i;\r\n\t\t\tW += j;\r\n\t\t}\r\n\t\treturn W;\r\n\t}\r\n}\r\nvoid tuichu()\r\n{\r\n\tprintf(\"已退出\");\r\n}\r\nint main()\r\n{\r\n\tpassword();\r\n\treturn 0;\r\n}\r\n```", "Konwledge_Point": "乘法", "Question": ["修改代码，按图示要求", ["#include \"stdio.h\"", "\n#include \"string.h\"//字符串函数", "\n#include \"stdlib.h\"", "\nlong Fact(int n);", "\nlong FactSum(int v);", "\n//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数", "\nvoid displaymain()//显示主菜单", "\n{", "\nprintf(\"*******************\\n\");", "\nprintf(\"简易计算器\\n\");", "\nprintf(\"*******************\\n\");", "\nprintf(\"请选择\\n\");", "\nprintf(\"1：加法\\n\");", "\nprintf(\"2：减法\\n\");", "\nprintf(\"3：乘法\\n\");", "\nprintf(\"4：除法\\n\");", "\nprintf(\"5：求余\\n\");", "\nprintf(\"6：累加\\n\");", "\nprintf(\"7：阶乘\\n\");", "\nprintf(\"8：阶乘累加\\n\");", "\nprintf(\"9：退出系统\\n\");", "\n}", "\nvoid password()", "\n{", "\nint i=0,temp;", "\nchar password[10]={0}; //声明一个最多有十个元素的数组，并且初始化值为0；", "\nprintf(\"请输入密码：\");", "\nscanf(\"%s\",password);//输入密码（字符串）", "\nif(strcmp(\"19491001\",password)==0)//strcmp:比较两个字符串是否一样", "\n{", "\nprintf(\"登陆成功\\n\");", "\nint choice,flag=0;", "\nvoid displaymain();", "\nvoid plus();", "\nvoid minus();", "\nvoid multiply();", "\nvoid divide();", "\nvoid complementation();", "\nvoid accumulation();", "\nint factorial();", "\nint factorialSum();", "\nvoid tuichu();", "\nwhile(flag==0)", "\n{", "\nputchar('\\n');", "\ndisplaymain();", "\nprintf(\"please input a digital(1-7)\\n\");", "\nscanf(\"%d\",&choice);", "\nif(choice>=1&&choice<=7)", "\nswitch(choice)", "\n{", "\ncase 1:plus();break;", "\ncase 2:minus();break;", "\ncase 3:multiply();break;", "\ncase 4:divide();break;", "\ncase 5:complementation();break;", "\ncase 6:accumulation();break;", "\ncase 7:factorial();break;", "\ncase 8:factorialSum();break;", "\ncase 9:tuichu();break;", "\ndefault:printf(\"选项输入错误!\\n\");", "\n}", "\n\n", "}", "\ngetch();", "\n//菜单", "\n\n", "}\nelse\n{\n    printf(\"密码错误\\n\");\n}\n", "\n\n", "}", "\n\n", "void plus()", "\n{", "\ndouble a,b,temp;", "\nprintf(\"请输入以空格分隔的两个运算数：\\n\");", "\nscanf(\"%lf %lf\",&a,&b);", "\ntemp=a+b;", "\nprintf(\"结果是：%lf\",temp);", "\n}", "\nvoid minus()", "\n{", "\ndouble a,b,temp;", "\nprintf(\"请输入被减数与减数（并用空格隔开）：\\n\");", "\nscanf(\"%lf %lf\",&a,&b);", "\ntemp=a-b;", "\nprintf(\"结果是：%f\",temp);", "\n}", "\nvoid multiply()", "\n{", "\ndouble a,b,temp;", "\nprintf(\"请输入以空格分隔的两个运算数：\\n\");", "\nscanf(\"%lf %lf\",&a,&b);", "\ntemp=a*b;", "\nprintf(\"结果是：%f\",temp);", "\n}", "\nvoid divide()", "\n{", "\ndouble a,b,temp;", "\nprintf(\"请输入被除数与除数（并用空格隔开）：\\n\");", "\nscanf(\"%lf %lf\",&a,&b);", "\nif(b!=0)", "\n{", "\n    temp=a/b;", "\n    printf(\"结果是：%f\",temp);", "\n}", "\n\n", "else", "\nprintf(\"错误！\\n\");", "\n}", "\n\n", "void complementation()", "\n{", "\nint a,b,temp;", "\nprintf(\"请输入两个用空格隔开的运算数：\\n\");", "\nscanf(\"%d %d\",&a,&b);", "\nif(b!=0)", "\n{", "\ntemp=a%b;", "\nprintf(\"结果是：%d\",temp);", "\n}", "\nelse", "\nprintf(\"错误！\\n\");", "\n}", "\nvoid accumulation()", "\n{", "\nint n,temp;", "\nint a,sum=1;", "\nprintf(\"请输入要求累加的数值：\\n\");", "\nscanf(\"%d\",&n);", "\nfor(a=2;a<=n;a++)", "\n{", "\nsum+=a;", "\n}", "\ntemp=sum;", "\nprintf(\"累加和为：%d\\n\",temp);", "\n}", "\nint factorial()", "\n{", "\nint m;", "\nlong ret,temp;", "\nprintf(\"请输入想求的阶乘数:\");", "\nscanf(\"%d\",&m);", "\nret = Fact(m);//调用函数Fact(),并将函数的返回值存入ret", "\nif(ret==-1)", "\nprintf(\"输入错误!\\n\");", "\nelse", "\n{", "\ntemp=ret;", "\nprintf(\"结果是：%d\",temp);", "\n}", "\n\n", "return 0;", "\n}", "\nlong Fact(int n)//函数的定义（作用：计算输入阶乘数的阶乘，并将结果返回主函数,且当n<0时，返回-1）", "\n{", "\nint i;", "\nlong result = 1;", "\nif(n<0)", "\n{", "\nreturn -1;", "\n}", "\nelse", "\n{", "\nfor(i = 2;i<=n;i++)", "\n{", "\nresult*=i;", "\n}", "\nreturn result;", "\n}", "\n}", "\nint factorialSum()", "\n{", "\nint m;", "\nlong ret,temp;", "\nprintf(\"请输入想求的阶乘和数:\");", "\nscanf(\"%d\",&m);", "\nret = FactSum(m);//调用函数Fact(),并将函数的返回值存入ret", "\nif(ret==-1)", "\nprintf(\"输入错误!\\n\");", "\nelse", "\ntemp=ret;", "\nreturn 0;", "\n}", "\nlong FactSum(int v)//函数的定义（作用：计算输入阶乘数的阶乘和，并将结果返回主函数,且当n<0时，返回-1）", "\n{", "\nint i;", "\nlong W=1,j = 1;", "\nif(v<0)", "\n{", "\nreturn -1;", "\n}", "\nelse", "\n{", "\nfor(i = 2;i<=v;i++)", "\n{", "\nj*=i;", "\nW+=j;", "\n}", "\nreturn W;", "\n}", "\n}", "\nvoid tuichu()", "\n{", "\n    printf(\"已退出\");", "\n}", "\nvoid main()", "\n{", "\n    int temp;", "\npassword();", "\nprintf(\"结果是：%lf\",temp);", "\n}"]], "Tag": "算法设计"}
{"Answer": "第243行for(q = pb-&gt;next;p!=NULL;q=q-&gt;next)  \r\n   改成for(q = pb-&gt;next;q!=NULL;q=q-&gt;next)再试试", "Konwledge_Point": "乘法", "Question": ["C语言链表出错·········求解···比较简单，原谅我是个初学者吧···", [" ", "\n\n", "各位 大哥 ，小弟最近在做课程设计实验时出了点小问题··一直解决不了··", "\n\n", "希望大家帮下忙：", "\n\n", " ", "\n\n", " ", "\n\n", " ", "\n\n", "#include<stdio.h>\n#include<malloc.h>\n#include<conio.h>\ntypedef struct LNode{\n    int coef;/*系数*/\n    int expn;/*指数*/\n    struct LNode *next;\n}LNode,*LinkList;\n\n\n\n\n\nvoid Insert_sort_list(LNode *head)\n{\n    LNode *p, *q, *t, *r;\n    p = head->next;\n    head->next = NULL;\n    while(NULL != p)\n    {\n       t = head;\n       q = t->next; \n       while(NULL != q && q->expn <= p->expn)\n       {\n          t = q;\n          q = q->next;\n       }\n       r = p ->next;\n       t->next = p;\n       p->next = q;\n       p = r;        \n    }\n}\n\n\n\n\n\n\nvoid CreateList(LinkList L,int m)/*带头结点*/\n{\n    LinkList p,q;\n    int i=0;\n    p=q=L;\n    L->next=NULL;\n    printf(\"先输系数后输指数，中间空格\\n\");\n    for(i=0;i<m;i++){\n        p=(LNode *)malloc(sizeof(LNode));\n        scanf(\"%d %d\",&(p->coef),&(p->expn));\n        L->next=p;\n        L=p;\n    \n    }\n    L->next=NULL;    \n    L=q;\n    Insert_sort_list(L);\n}/*test success*/\n\n\nvoid print(LinkList L)\n{\n    LinkList p;\n    p=L->next;\n    printf(\"\\n（下式中X为未知数）\\n\");\n    while(p!=NULL){\n        printf(\"\\(%dX\\^%d\\)\",p->coef,p->expn);       \n        if(p->next!=NULL)printf(\"\\ \\+\\ \");\n        p=p->next;\n    }\n    \n}\nvoid DeleteNode(LNode *p)\n{\n    LNode *q;\n    q=p->next;\n    p->next=q->next;\n    free(q);\n}/*删除节点*/\n\nint LocateElem(LinkList L,int expn)/*查找是否有与该多项式的系数相同的项*/\n{\n    LNode *p;\n    p=L;\n    while(p->expn!=expn&&p->next!=NULL) {  p=p->next; }\n    if (p->expn==expn){ return p->coef;} /*若找到则返回系数*/\n    else return 0;\n   \n}\n\nint Length(LinkList L)/*求多项式的项数*/\n{\n    LNode *p;\n    int i=0;\n    p=L->next;  \n    while(p!=NULL) {\n    p=p->next;\n    i++;\n    }  \n    return i;\n}\n/*\nvoid Delet(LinkList L)\n{\n    LNode *p,*q;\n    p=L->next;\n    while(p!=null)\n    {\n           q=p;\n           p=p->next;\n           free(q);\n    }\n}\n*/\n\nvoid Add(LinkList pa,LinkList pb,LinkList pc)/*多项式相加，pc=pa+pa,*/\n{\n     LNode *p, *q, *r, *t;\n     p = pa->next;\n     q = pb->next;\n     r = pc;\n     while(p!=NULL||q!=NULL)\n     {\n        if(p!=NULL&&q!=NULL)\n        {\n           if(p->expn<q->expn)\n           {\n              t=(LNode *)malloc(sizeof(LNode));\n              t->coef=p->coef;\n              t->expn=p->expn;\n              t->next=NULL;\n              r->next=t; \n              p=p->next;\n           }\n        else if(p->expn==q->expn)\n           {\n              t=(LNode *)malloc(sizeof(LNode));\n              t->coef=p->coef+q->coef;\n              t->expn=p->expn;\n              t->next=NULL;\n              r->next=t;\n              p=p->next;\n              q=q->next;\n                   \n           }   \n        else  \n           {\n              t=(LNode *)malloc(sizeof(LNode));\n              t->coef=q->coef;\n              t->expn=q->expn;\n              t->next=NULL;\n              r->next=t;\n              q=q->next; \n           }\n           r=r->next;\n           \n        }\n        else if(p!=NULL&&q==NULL)\n        {\n             r->next=p;\n             p=p->next;\n             r=r->next;\n        }\n        else if(p==NULL&&q!=NULL)\n        {\n             r->next=q;\n             q=q->next;\n             r=r->next;\n        }\n     }\n} \n\nvoid Subtract(LinkList pa,LinkList pb,LinkList pc)/*多项式相减,pc=pa-pa*/\n{\n     LNode *p, *q, *r, *t;\n     p = pa->next;\n     q = pb->next;\n     r = pc;\n     while(p!=NULL||q!=NULL)\n     {\n        if(p!=NULL&&q!=NULL)\n        {\n           if(p->expn<q->expn)\n           {\n              t=(LNode *)malloc(sizeof(LNode));\n              t->coef=p->coef;\n              t->expn=p->expn;\n              t->next=NULL;\n              r->next=t; \n              p=p->next;\n           }\n        else if(p->expn==q->expn)\n           {\n              t=(LNode *)malloc(sizeof(LNode));\n              t->coef=p->coef-q->coef;\n              t->expn=p->expn;\n              t->next=NULL;\n              r->next=t;\n              p=p->next;\n              q=q->next;\n                   \n           }   \n        else  \n           {\n              t=(LNode *)malloc(sizeof(LNode));\n              t->coef=q->coef*(-1);\n              t->expn=q->expn;\n              t->next=NULL;\n              r->next=t;\n              q=q->next; \n           }\n           r=r->next;\n           \n        }\n        else if(p!=NULL&&q==NULL)\n        {\n             r->next=p;\n             p=p->next;\n             r=r->next;\n        }\n        else if(p==NULL&&q!=NULL)\n        {\n             r->next=q;\n             q=q->next;\n             r=r->next;\n        }\n     }\n}\n\nvoid Multiply(LinkList pa,LinkList pb,LinkList pc)/*多项式相乘pc=pa*pb*/\n{\n     LNode *p, *q,  *t, *c, *t1,*t2,*temp1,*temp2;/*temp1放第i个与pb相乘的开成的多项式 */\n     t1=(LinkList)malloc(sizeof(LNode));\n     pc=(LinkList)malloc(sizeof(LNode));\n     t1->next=NULL;\n     pc->next=NULL;\n     c=pc;\n     t2=pc;\n     temp2=t2;\n     temp1=t1;\n     if(pa->next==NULL||pb->next==NULL){pc->next==NULL; return;}/* */\n     for(p = pa->next;p!=NULL;p=p->next)\n     {\n          for(q = pb->next;p!=NULL;q=q->next)\n          {\n\n              t=(LNode *)malloc(sizeof(LNode));\n              t->coef=(int)((p->coef)*(q->coef));\n              t->expn=(int)((p->expn)+(q->expn));\n              t->next=NULL;\n              temp1->next=t; \n              temp1=temp1->next;\n\n                     \n          }\n          \n          pc->next=NULL;\n          c=pc;\n          Add(t1,t2,c); \n          t2=pc;\n          t1->next=NULL;\n          temp1=t1;        \n          \n     }     \n}\n \nint main()\n{\n    LinkList L,M,N;\n    int m,n;\n    L=(LinkList)malloc(sizeof(LNode));\n    M=(LinkList)malloc(sizeof(LNode));\n    N=(LinkList)malloc(sizeof(LNode));\n    N->next=NULL;\n    printf(\"请输入您要构造的多项式的项数\\n\");\n    scanf(\"%d\",&m);\n    CreateList(L,m);    \n    print(L);\n    printf(\"\\n长度为:%d\",Length(L));\n    printf(\"\\n\\n输入您要查找该多项式的系数相同的项的指数值:\\n\");\n    scanf(\"%d\",&n);\n    if(n=LocateElem(L,n)) printf(\"存在指数与此相同的项,系数为：%d\\n\",n);\n    else printf(\"未找到！\");\n    printf(\"\\n以下构造多一个多项式与原多项式进行运算\\n\"); \n    printf(\"\\n请输入您要构造的多项式的项数\\n\");\n    scanf(\"%d\",&m);\n    CreateList(M,m);    \n    printf(\"\\n两个多项式相加的结果：\\n\");\n    Add(L,M,N);\n    print(N);\n    printf(\"\\n两个多项式相减的结果：\\n\");\n    Subtract(L,M,N);\n    print(N);\n    printf(\"\\n两个多项式相乘的结果：\\n\");\n    Multiply(L,M,N);  \n    print(N);  \n    \n    getch();\n    return 0;\n\n} \n", "\n\n", "下面是图片，每次运行到乘法的时候 都会出现这样的错误 ··是不是内存错误····", "\n\n", " ", "\n\n", " ", "\n\n", "各位兄台高抬躈帮下忙啊············", "感激不尽············", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "取模运算只能是整数  先确保输入进来的数为正整数\r\n1、先把num1和num2转换为正整数\r\nlong a=(long)num1;//强制转\r\nlong b=(long)num2;\r\n\r\n2、求结果\r\nelse if (opt == \"%\")\r\nlong tmpnum=a%b;\r\n editText.setText(String.valueOf(tmpnum));", "Konwledge_Point": "乘法", "Question": ["请问%的怎么实现.在网上找了好多案例,就是不能实现", ["代码写的比较渣,勿吐槽,新手写了一个星期", "\n基本功能是可以实现的,就是百分号那个真的没法实现,有会的大神麻烦教下", "\npublic class MainActivity extends Activity implements View.OnClickListener {", "\n    /*", "\n    利用数组装变量,并创建button数组存放相应的变量", "\n     */", "\n    private int[] btn = {R.id.zero, R.id.one, R.id.two, R.id.three, R.id.four, R.id.five, R.id.six, R.id.seven, R.id.eight, R.id.nine};", "\n    private Button[] bnum = new Button[btn.length];", "\n    private int[] takes = {R.id.jia, R.id.jian, R.id.cheng, R.id.chu};", "\n    private Button[] take = new Button[takes.length];", "\n    private int[] btc = {R.id.dot, R.id.zf, R.id.xc, R.id.qc, R.id.tg, R.id.bai, R.id.lf, R.id.pf, R.id.fen, R.id.sum};", "\n    private Button[] btcl = new Button[btc.length];", "\n    private EditText editText;", "\n    boolean clear_flag;     //用于：当已经运算出结果的时候，我们再次点击数字按钮的时候，清空屏幕的作用！", "\n    private String opt;    //加减乘除通用变量", "\n    double num1, num2;     //第一个值,第二个值", "\n\n", "@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    //获取输入框\n    editText = (EditText) findViewById(R.id.edittext);\n    //输入框复制空字符串\n    editText.setText(\"\");\n    //输入框不能够输入,只能接收按钮点击事件\n    editText.setEnabled(false);\n    //利用循环遍历给每个button分类进行实例化并实现OnClickListener接口\n    for (int i = 0; i < btn.length; i++) {\n        bnum[i] = (Button) findViewById(btn[i]);\n        bnum[i].setOnClickListener(this);\n    }\n    for (int i = 0; i < takes.length; i++) {\n        take[i] = (Button) findViewById(takes[i]);\n        take[i].setOnClickListener(this);\n    }\n    for (int i = 0; i < btc.length; i++) {\n        btcl[i] = (Button) findViewById(btc[i]);\n        btcl[i].setOnClickListener(this);\n    }\n\n}\n\n@Override\npublic void onClick(View v) {\n    String str = editText.getText().toString();     //获取当前edittext的内容\n    //利用switch多分支语句\n    switch (v.getId()) {\n        case R.id.zero:\n        case R.id.one:\n        case R.id.two:\n        case R.id.three:\n        case R.id.four:\n        case R.id.five:\n        case R.id.six:\n        case R.id.seven:\n        case R.id.eight:\n        case R.id.nine:\n        case R.id.dot:\n            if (clear_flag) {\n                clear_flag = false;\n                str = \"\";\n                editText.setText(\"\");\n            }\n            editText.setText(str + ((Button) v).getText());\n            break;\n        //加法\n        case R.id.jia: {\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str1);\n                opt = \"+\";\n                editText.setText(opt);\n                break;\n            }\n\n        }\n        //减法\n        case R.id.jian: {\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str1);\n                opt = \"-\";\n                editText.setText(opt);\n                break;\n            }\n        }\n        //乘法\n        case R.id.cheng: {\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str1);\n                opt = \"*\";\n                editText.setText(opt);\n                break;\n            }\n        }\n        //除法\n        case R.id.chu: {\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str1);\n                opt = \"/\";\n                editText.setText(opt);\n                break;\n            }\n        }\n        //消除 与清除一个功能\n        case R.id.xc:\n            clear_flag = false;\n            editText.setText(\"\");\n            break;\n        //退格键\n        case R.id.tg:\n            if (clear_flag) {\n                clear_flag = false;\n                editText.setText(\"\");\n            } else if (str != null && !str.equals(\"\")) {\n                editText.setText(str.substring(0, str.length() - 1));\n            }\n\n            break;\n        //清除 与消除一个功能\n        case R.id.qc:\n            Toast toast = Toast.makeText(this, \"与消除功能一样\", Toast.LENGTH_SHORT);\n            toast.show();\n            //根计算\n        case R.id.lf:\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str);\n                if (num1 < 0) {\n                    editText.setText(\"负数没有平方根\");\n                } else {\n                    editText.setText(Math.sqrt(num1) + \"\");\n                }\n                break;\n\n            }\n            //正负计算\n        case R.id.zf:\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str1);\n                if (str.length() > 0)\n                    editText.setText(-num1 + \"\");\n                break;\n            }\n        case R.id.bai:\n            if (!TextUtils.isEmpty(str)) {\n\n            }\n            //平方计算\n        case R.id.pf:\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str1);\n                editText.setText(String.valueOf(num1 * num1));\n            }\n            //  1/x计算\n        case R.id.fen:\n            if (!TextUtils.isEmpty(str)) {\n                String str1 = editText.getText().toString();\n                num1 = Double.parseDouble(str1);\n                editText.setText(String.valueOf(1 / num1));\n            }\n        case R.id.sum:\n\n              if (opt == \"+\") {\n                  String str1 = editText.getText().toString();\n                  num2 = Double.parseDouble(str);\n                  editText.setText(String.valueOf(num1 + num2));\n              } else if (opt == \"-\") {\n                  String str1 = editText.getText().toString();  //获取输入框的值\n                  str = str.substring(1);\n                  num2 = Double.parseDouble(str);\n                  editText.setText(String.valueOf(num1 - num2));\n              } else if (opt == \"*\") {\n                  String str1 = editText.getText().toString();\n                  str = str.substring(1);\n                  num2 = Double.parseDouble(str);\n                  editText.setText(String.valueOf(num1 * num2));\n              } else if (opt == \"/\") {\n                  String str1 = editText.getText().toString();\n                  str = str.substring(1);\n                  num2 = Double.parseDouble(str);\n                  editText.setText(String.valueOf(num1 / num2));\n              }\n\n\n            break;\n    }\n}\n", "\n\n", "}"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;\n&lt;span class=\"hljs-comment\"&gt;//链表实现一元多项式的加法减法乘法&lt;/span&gt;\n#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\ntypedef struct node {\n    float coef;   &lt;span class=\"hljs-comment\"&gt;//系数&lt;/span&gt;\n    int expn;     &lt;span class=\"hljs-comment\"&gt;//指数&lt;/span&gt;\n    struct node *next;\n}\nPolyNode;      &lt;span class=\"hljs-comment\"&gt;//多项式节点 polynomial node&lt;/span&gt;\ntypedef PolyNode* Polynomial;\nconst bool isFullPrint &amp;#61; &lt;span class=\"hljs-literal\"&gt;true&lt;/span&gt;;\nPolynomial createPolynomial() {  &lt;span class=\"hljs-comment\"&gt;//创建多项式&lt;/span&gt;\n    PolyNode *p, *q, *head &amp;#61; (PolyNode *)malloc(sizeof(PolyNode));   &lt;span class=\"hljs-comment\"&gt;//头节点&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    float coef;\n    int expn;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入该多项式每一项的系数和指数&amp;#xff0c;每项一行&amp;#xff0c;输入0 0结束&amp;#xff01;\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (scanf_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;%f %d&amp;#34;&lt;/span&gt;, &amp;amp;coef, &amp;amp;expn) &amp;amp;&amp;amp; coef) {   &lt;span class=\"hljs-comment\"&gt;// 默认&amp;#xff0c;按指数递减排列&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (head-&amp;gt;&lt;/span&gt;next) {\n            p &amp;#61; head;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;while&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;amp;&amp;amp; expn &amp;lt; p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;expn)\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;next) {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (expn &amp;#61;&amp;#61; p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;expn) { &lt;span class=\"hljs-comment\"&gt;//有相同指数的直接把系数加到原多项式&lt;/span&gt;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;#43;&amp;#61; coef;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;gt; -0.000001 &amp;amp;&amp;amp; p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;lt; &lt;span class=\"hljs-number\"&gt;0.000001&lt;/span&gt;) { &lt;span class=\"hljs-comment\"&gt;//若是相加后系数为0&amp;#xff0c;则舍弃该节点&lt;/span&gt;\n                        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n                        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n                        free(q);\n                    }\n                }\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                    q &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;#61; coef;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;expn &amp;#61; expn;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q;\n                }\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;#61; coef;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;expn &amp;#61; expn;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n            }\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;#61; coef;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;expn &amp;#61; expn;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;head&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;next&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n        }\n    }\n    return head;\n}\n\nvoid add(Polynomial poly1, Polynomial poly2) {  &lt;span class=\"hljs-comment\"&gt;//把 poly2 加到 poly1 上&lt;/span&gt;\n    PolyNode *p, *q, *r;\n    r &amp;#61; poly1;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; poly1-&amp;gt;&lt;/span&gt;next;  &lt;span class=\"hljs-comment\"&gt;//指向第一个节点&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; poly2-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;poly2&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p &amp;amp;&amp;amp; q) {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;gt; q-&amp;gt;&lt;/span&gt;expn) {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; p;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;lt; q-&amp;gt;&lt;/span&gt;expn) {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            PolyNode *t;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;#43;&amp;#61; q-&amp;gt;&lt;/span&gt;coef;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (!(p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;gt; -0.000001 &amp;amp;&amp;amp; p-&amp;gt;&lt;/span&gt;coef &amp;lt; &lt;span class=\"hljs-number\"&gt;0.000001&lt;/span&gt;)) &lt;span class=\"hljs-comment\"&gt;//系数不为0&lt;/span&gt;\n            {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; p;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            }\n            &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n                &lt;span class=\"hljs-comment\"&gt;//t &amp;#61; p;&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;//p &amp;#61; p-&amp;gt;next;&lt;/span&gt;\n                &lt;span class=\"hljs-comment\"&gt;//free(t);&lt;/span&gt;\n\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; p;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            }\n            t &amp;#61; q;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n            free(t);\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p)\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; p;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (q)\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; q;\n}\nPolynomial polySubtract(Polynomial poly1, Polynomial poly2) {  &lt;span class=\"hljs-comment\"&gt;//多项式减法 poly1-poly2形成一个新的多项式&lt;/span&gt;\n    &lt;span class=\"hljs-comment\"&gt;//把poly2的系数取相反数&amp;#xff0c;形成一个新的多项式&lt;/span&gt;\n    Polynomial poly &amp;#61; (PolyNode*)malloc(sizeof(PolyNode)); &lt;span class=\"hljs-comment\"&gt;//构造头节点&lt;/span&gt;\n    PolyNode *p, *q;\n    p &amp;#61; poly;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; poly2-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (q) {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;#61; -(q-&amp;gt;&lt;/span&gt;coef);  &lt;span class=\"hljs-comment\"&gt;//系数取反&lt;/span&gt;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;expn;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    add(poly, poly1);  &lt;span class=\"hljs-comment\"&gt;//利用加法&lt;/span&gt;\n    return poly;\n}\nPolynomial polyAdd(Polynomial poly1, Polynomial poly2) { &lt;span class=\"hljs-comment\"&gt;//多项式相加 poly1&amp;#43;poly2形成一个新的多项式&lt;/span&gt;\n    Polynomial poly &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));  &lt;span class=\"hljs-comment\"&gt;//和多项式的头节点&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;poly&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    PolyNode *p, *q, *r;\n    r &amp;#61; poly;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; poly1-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; poly2-&amp;gt;&lt;/span&gt;next;\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p&amp;amp;&amp;amp;q) {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;gt; q-&amp;gt;&lt;/span&gt;expn) {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;coef;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;expn;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;lt; q-&amp;gt;&lt;/span&gt;expn) {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;coef;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;expn;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;float&lt;/span&gt; m &amp;#61; p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;#43; q-&amp;gt;&lt;/span&gt;coef;\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (!(m &amp;gt; -&lt;span class=\"hljs-number\"&gt;0.000001&lt;/span&gt; &amp;amp;&amp;amp; m &amp;lt; &lt;span class=\"hljs-number\"&gt;0.000001&lt;/span&gt;)) {\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;coef &amp;#61; m;\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;expn;\n            }\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;coef;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;expn;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (q) {\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; (PolyNode*)malloc(sizeof(PolyNode));\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt; &amp;#61; r-&amp;gt;&lt;/span&gt;next;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;coef;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;expn&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;expn;\n        &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; q-&amp;gt;&lt;/span&gt;next;\n    }\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;r&lt;/span&gt;-&amp;gt;&lt;/span&gt;next &amp;#61; NULL;\n    return poly;\n}\n\nvoid printPoly(Polynomial poly) {  &lt;span class=\"hljs-comment\"&gt;//打印多项式&lt;/span&gt;\n    int cc &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (poly &amp;amp;&amp;amp; poly-&amp;gt;&lt;/span&gt;next) {\n        P&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;olyNode&lt;/span&gt; *p &amp;#61; poly-&amp;gt;&lt;/span&gt;next;  &lt;span class=\"hljs-comment\"&gt;//p指向第一个节点&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;coef !&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt; || isFullPrint){\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (cc &amp;gt; 0 &amp;amp;&amp;amp; p-&amp;gt;&lt;/span&gt;coef &amp;gt;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) printf_s(&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#43;&amp;#34;&lt;/span&gt;);\n                &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (p-&amp;gt;&lt;/span&gt;expn &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;)\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%g&amp;#34;, p-&amp;gt;&lt;/span&gt;coef);   &lt;span class=\"hljs-comment\"&gt;//打印常数项&lt;/span&gt;\n                &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt;\n                    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;printf&lt;/span&gt;(&amp;#34;%gx^%d&amp;#34;, p-&amp;gt;&lt;/span&gt;&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;coef&lt;/span&gt;, p-&amp;gt;&lt;/span&gt;expn);\n                cc&amp;#43;&amp;#43;;\n            }\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;p&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n        }\n        &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (cc &amp;#61;&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;) printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;0&amp;#34;&lt;/span&gt;);\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; {\n        printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;0\\n&amp;#34;&lt;/span&gt;);\n    }\n}\nvoid freePoly(Polynomial poly) {  &lt;span class=\"hljs-comment\"&gt;//释放内存&lt;/span&gt;\n    &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;if&lt;/span&gt; (poly &amp;amp;&amp;amp; poly-&amp;gt;&lt;/span&gt;next) {\n        PolyNode *p, *q;\n        p &amp;#61; poly;\n        &lt;span class=\"hljs-keyword\"&gt;while&lt;/span&gt; (p) {\n            &lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-title\"&gt;q&lt;/span&gt; &amp;#61; p-&amp;gt;&lt;/span&gt;next;\n            free(p);\n            p &amp;#61; q;\n        }\n    }\n    poly &amp;#61; NULL;\n}\nint main() {\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;用链表实现多项式的加减法\\n&amp;#34;&lt;/span&gt;);\n    Polynomial poly1, poly2, poly3;\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;创建多项式一\\n&amp;#34;&lt;/span&gt;);\n    poly1 &amp;#61; createPolynomial();\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;多项式一&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    printPoly(poly1);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;创建多项式二\\n&amp;#34;&lt;/span&gt;);\n    poly2 &amp;#61; createPolynomial();\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;多项式二&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    printPoly(poly2);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;两多项式相加&amp;#xff0c;和为&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    poly3 &amp;#61; polyAdd(poly1, poly2);\n    printPoly(poly3);\n    freePoly(poly3);\n    printf(&lt;span class=\"hljs-string\"&gt;&amp;#34;两多项式相减&amp;#xff0c;差为&amp;#xff1a;\\n&amp;#34;&lt;/span&gt;);\n    poly3 &amp;#61; polySubtract(poly1, poly2);\n    printPoly(poly3);\n    freePoly(poly1);\n    freePoly(poly2);\n    freePoly(poly3);\n    system(&lt;span class=\"hljs-string\"&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);\n    return &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["将下列代码改成任意两个多项式的相加和相减", ["要求1：两个相同的多项式相加减不会出现错误", "\n", "//链表实现一元多项式的加法减法乘法", "\n#include <stdio.h>\n#include <stdlib.h>\ntypedef struct node {\n    float coef;   ", "//系数", "\n    int expn;     ", "//指数", "\n    struct node *next;\n}\nPolyNode;      ", "//多项式节点 polynomial node", "\ntypedef PolyNode* Polynomial;\nPolynomial createPolynomial() {  ", "//创建多项式", "\n    PolyNode *p, *q, *head = (PolyNode *)malloc(sizeof(PolyNode));   ", "//头节点", "\n    ", "head", "->", "next = NULL;\n    float coef;\n    int expn;\n    printf(", "\"输入该多项式每一项的系数和指数，每项一行，输入0 0结束！\\n\"", ");\n    ", "while", " (scanf(", "\"%f %d\"", ", &coef, &expn) && coef) {   ", "// 默认，按指数递减排列", "\n        ", "if", " (head->", "next) {\n            p = head;\n            ", "while", " (p->", "next", " && expn < p->", "next", "->", "expn)\n                ", "p", " = p->", "next;\n            ", "if", " (p->", "next) {\n                ", "if", " (expn == p->", "next", "->", "expn) { ", "//有相同指数的直接把系数加到原多项式", "\n                    ", "p", "->", "next", "->", "coef += coef;\n                    ", "if", " (p->", "next", "->", "coef", " > -0.000001 && p->", "next", "->", "coef < ", "0.000001", ") { ", "//若是相加后系数为0，则舍弃该节点", "\n                        ", "q", " = p->", "next;\n                        ", "p", "->", "next", " = q->", "next;\n                        free(q);\n                    }\n                } ", "else", " {\n                    q = (PolyNode*)malloc(sizeof(PolyNode));\n                    ", "q", "->", "coef = coef;\n                    ", "q", "->", "expn = expn;\n                    ", "q", "->", "next", " = p->", "next;\n                    ", "p", "->", "next = q;\n                }\n            } ", "else", " {\n                ", "p", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n                ", "p", " = p->", "next;\n                ", "p", "->", "coef = coef;\n                ", "p", "->", "expn = expn;\n                ", "p", "->", "next = NULL;\n            }\n        } ", "else", " {\n            ", "head", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n            ", "head", "->", "next", "->", "coef = coef;\n            ", "head", "->", "next", "->", "expn = expn;\n            ", "head", "->", "next", "->", "next = NULL;\n        }\n    }\n    return head;\n}\nPolynomial multiply(Polynomial poly, float coef, int expn) {  ", "//多项式与指定单项式相乘，该单项式为 coefx^expn", "\n    PolyNode *p, *q, *Poly = (PolyNode*)malloc(sizeof(PolyNode));\n    p = Poly;\n    ", "q", " = poly->", "next;\n    ", "while", " (q) {\n        ", "p", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n        ", "p", " = p->", "next;\n        ", "p", "->", "coef", " = (q->", "coef*coef);\n        ", "p", "->", "expn", " = (q->", "expn + expn);\n        ", "q", " = q->", "next;\n    }\n    ", "p", "->", "next = NULL;\n    return Poly;\n}\nvoid add(Polynomial poly1, Polynomial poly2) {  ", "//把 poly2 加到 poly1 上", "\n    PolyNode *p, *q, *r;\n    r = poly1;\n    ", "p", " = poly1->", "next;  ", "//指向第一个节点", "\n    ", "q", " = poly2->", "next;\n    ", "poly2", "->", "next = NULL;\n    ", "while", " (p && q) {\n        ", "if", " (p->", "expn", " > q->", "expn) {\n            ", "r", "->", "next = p;\n            ", "p", " = p->", "next;\n            ", "r", " = r->", "next;\n        } ", "else", " ", "if", " (p->", "expn", " < q->", "expn) {\n            ", "r", "->", "next = q;\n            ", "q", " = q->", "next;\n            ", "r", " = r->", "next;\n        } ", "else", " {\n            PolyNode *t;\n            ", "p", "->", "coef", " += q->", "coef;\n            ", "if", " (!(p->", "coef", " > -0.000001 && p->", "coef < ", "0.000001", ")) ", "//系数不为0", "\n            {\n                ", "r", "->", "next = p;\n                ", "r", " = r->", "next;\n                ", "p", " = p->", "next;\n            } ", "else", " {\n                t = p;\n                ", "p", " = p->", "next;\n                free(t);\n            }\n            t = q;\n            ", "q", " = q->", "next;\n            free(t);\n        }\n    }\n    ", "if", " (p)\n        ", "r", "->", "next = p;\n    ", "if", " (q)\n        ", "r", "->", "next = q;\n}\nPolynomial polySubtract(Polynomial poly1, Polynomial poly2) {  ", "//多项式减法 poly1-poly2形成一个新的多项式", "\n    ", "//把poly2的系数取相反数，形成一个新的多项式", "\n    Polynomial poly = (PolyNode*)malloc(sizeof(PolyNode)); ", "//构造头节点", "\n    PolyNode *p, *q;\n    p = poly;\n    ", "q", " = poly2->", "next;\n    ", "while", " (q) {\n        ", "p", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n        ", "p", " = p->", "next;\n        ", "p", "->", "coef", " = -(q->", "coef);  ", "//系数取反", "\n        ", "p", "->", "expn", " = q->", "expn;\n        ", "q", " = q->", "next;\n    }\n    ", "p", "->", "next = NULL;\n    add(poly, poly1);  ", "//利用加法", "\n    return poly;\n}\nPolynomial polyAdd(Polynomial poly1, Polynomial poly2) { ", "//多项式相加 poly1+poly2形成一个新的多项式", "\n    Polynomial poly = (PolyNode*)malloc(sizeof(PolyNode));  ", "//和多项式的头节点", "\n    ", "poly", "->", "next = NULL;\n    PolyNode *p, *q, *r;\n    r = poly;\n    ", "p", " = poly1->", "next;\n    ", "q", " = poly2->", "next;\n    ", "while", " (p&&q) {\n        ", "if", " (p->", "expn", " > q->", "expn) {\n            ", "r", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n            ", "r", " = r->", "next;\n            ", "r", "->", "coef", " = p->", "coef;\n            ", "r", "->", "expn", " = p->", "expn;\n            ", "p", " = p->", "next;\n        } ", "else", " ", "if", " (p->", "expn", " < q->", "expn) {\n            ", "r", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n            ", "r", " = r->", "next;\n            ", "r", "->", "coef", " = q->", "coef;\n            ", "r", "->", "expn", " = q->", "expn;\n            ", "q", " = q->", "next;\n        } ", "else", " {\n            ", "float", " m = p->", "coef", " + q->", "coef;\n            ", "if", " (!(m > -", "0.000001", " && m < ", "0.000001", ")) {\n                ", "r", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n                ", "r", " = r->", "next;\n                ", "r", "->", "coef = m;\n                ", "r", "->", "expn", " = p->", "expn;\n            }\n            ", "q", " = q->", "next;\n            ", "p", " = p->", "next;\n        }\n    }\n    ", "while", " (p) {\n        ", "r", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n        ", "r", " = r->", "next;\n        ", "r", "->", "coef", " = p->", "coef;\n        ", "r", "->", "expn", " = p->", "expn;\n        ", "p", " = p->", "next;\n    }\n    ", "while", " (q) {\n        ", "r", "->", "next = (PolyNode*)malloc(sizeof(PolyNode));\n        ", "r", " = r->", "next;\n        ", "r", "->", "coef", " = q->", "coef;\n        ", "r", "->", "expn", " = q->", "expn;\n        ", "q", " = q->", "next;\n    }\n    ", "r", "->", "next = NULL;\n    return poly;\n}\nPolynomial polyMultiply(Polynomial poly1, Polynomial poly2) {  ", "//多项式相乘", "\n    Polynomial poly = (PolyNode*)malloc(sizeof(PolyNode));  ", "//创建多项式和的头节点", "\n    ", "poly", "->", "next = NULL;\n    PolyNode *p;\n    ", "p", " = poly2->", "next;\n    ", "while", " (p) {\n        ", "add", "(poly, multiply(poly1, p->", "coef", ", p->", "expn));\n        ", "p", " = p->", "next;\n    }\n    return poly;\n}\nvoid printPoly(Polynomial poly) {  ", "//打印多项式", "\n    ", "if", " (poly && poly->", "next) {\n        P", "olyNode", " *p = poly->", "next;  ", "//p指向第一个节点", "\n        ", "while", " (p->", "next) {\n            ", "printf", "(\"%gx^%d\", p->", "coef", ", p->", "expn);\n            ", "p", " = p->", "next;\n            ", "if", " (p && (p->", "coef > ", "0", "))\n                printf(", "\"+\"", ");\n        }\n        ", "if", " (p->", "expn == ", "0", ")\n            ", "printf", "(\"%g\", p->", "coef);   ", "//打印常数项", "\n        ", "else", "\n            ", "printf", "(\"%gx^%d\", p->", "coef", ", p->", "expn);\n        printf(", "\"\\n\"", ");\n    } ", "else", " {\n        printf(", "\"0\\n\"", ");\n    }\n}\nvoid freePoly(Polynomial poly) {  ", "//释放内存", "\n    ", "if", " (poly && poly->", "next) {\n        PolyNode *p, *q;\n        p = poly;\n        ", "while", " (p) {\n            ", "q", " = p->", "next;\n            free(p);\n            p = q;\n        }\n    }\n    poly = NULL;\n}\nint main() {\n    printf(", "\"用链表实现多项式的加减法\\n\"", ");\n    Polynomial poly1, poly2, poly3;\n    printf(", "\"创建多项式一\\n\"", ");\n    poly1 = createPolynomial();\n    printf(", "\"多项式一：\\n\"", ");\n    printPoly(poly1);\n    printf(", "\"创建多项式二\\n\"", ");\n    poly2 = createPolynomial();\n    printf(", "\"多项式二：\\n\"", ");\n    printPoly(poly2);\n    printf(", "\"两多项式相加，和为：\\n\"", ");\n    poly3 = polyAdd(poly1, poly2);\n    printPoly(poly3);\n    freePoly(poly3);\n    printf(", "\"两个多项式相乘，积为：\\n\"", ");\n    poly3 = polyMultiply(poly1, poly2);\n    printPoly(poly3);\n    freePoly(poly3);\n    printf(", "\"两多项式相减，差为：\\n\"", ");\n    poly3 = polySubtract(poly1, poly2);\n    printPoly(poly3);\n    freePoly(poly1);\n    freePoly(poly2);\n    freePoly(poly3);\n    system(", "\"pause\"", ");\n    return ", "0", ";\n}\n \n\n"]], "Tag": "算法设计"}
{"Answer": "[quote]在myFrame2中的actionPerformed方法下面加上Form1 = Application.Form1;就没问题，但是在windowOpened方法下面已经有了为什么还出现这种问题？\r\n[/quote]\r\n这个我运行了。问题出在\r\nmyFrame2中的全局变量 private myFrame1 Form1; 它是你的主窗体\r\n没有被实例化。在myFrame2你应该让他指向j02110501_Project1 中已经实例化\r\n的主窗体。在这里就是你的Application.Form1。\r\n\r\n一个对象在没有被实例化之前，对象应用是不能操作对象的方法的。\r\n会报Exception in thread \"AWT-EventQueue-0\" java.lang.NullPointerException \r\n\r\n\r\n也就是你的对象引用指向了空指针。\r\n\r\n在这里Form1 指向了空指针。所以报错。你让它指向Application.Form1\r\n就不会报错了。", "Konwledge_Point": "乘法", "Question": ["程序抛出NullPointerException异常不明白！", ["在myFrame2中的actionPerformed方法下面加上Form1 = Application.Form1;就没问题，但是在windowOpened方法下面已经有了为什么还出现这种问题？", "\n\n", " ", "\n\n", "import java.awt.*;\n", "public class j02110501_Project1  {\n", "  private static j02110501_Project1 Application;\n", "  \n", "  myFrame1 Form1;\n", "  myFrame2 Form2;\n", "  myFrame3 Form3;\n", "  \n", "  public static void main(String arg[])  {\n", "    Application = new j02110501_Project1();\n", "    Application.Form1 = new myFrame1( Application );\n", "    Application.Form2 = new myFrame2( Application );\n", "    \n", "    Application.Form1.setVisible(true);\n", "  }\n", "}\n", "import java.awt.*;\n", "import java.awt.event.*;\n", "public class myFrame1 extends Frame  {\n", "  private j02110501_Project1 Application;\n", "  private myFrame1 Form1;\n", "  private myFrame2 Form2;\n", "  private myFrame3 Form3;\n", "  \n", "  Button B1, B2;\n", "  Label L1, L2;\n", "  public myFrame1(j02110501_Project1 app)  {\n", "    Application = app;\n", "    Form1 = this;\n", "    \n", "    this.setLayout(null);\n", "    this.setBounds(100,300,265,200);\n", "    this.setTitle(\"Form1:主窗体\");\n", "    this.addWindowListener(new myWindowAdapter() );\n", "    B1 = new Button(\"Show Form2\");\n", "    B1.setBounds(60,30,140,30);\n", "    B1.addActionListener(new myActionListener() );\n", "    this.add(B1);\n", "    L1 = new Label(\"0\",Label.RIGHT);\n", "    L1.setBounds(60,70,140,30);\n", "    L1.setBackground(Color.PINK);\n", "    this.add(L1);\n", "    B2 = new Button(\"Show Form3\");\n", "    B2.setBounds(60,120,140,30);\n", "    B2.addActionListener(new myActionListener());\n", "    this.add(B2);\n", "    L2 = new Label(\"0\",Label.RIGHT);\n", "    L2.setBounds(60,160,140,30);\n", "    L2.setBackground(Color.PINK);\n", "    this.add(L2);\n", "  }\n", "  \n", "  class myWindowAdapter extends WindowAdapter  {\n", "    public void windowOpened(WindowEvent e)  {\n", "      //此时Application所有静态建立的窗体都已建立完成\n", "      //取得Form1所属项目的其他窗体\n", "      Form2 = Application.Form2;\n", "    }\n", "    public void windowClosing(WindowEvent e)  {\n", "      System.exit(0);\n", "    }\n", "  }\n", "  \n", "  class myActionListener implements ActionListener  {\n", "    public void actionPerformed(ActionEvent e)  {\n", "      if(e.getSource() == B1)  {\n", "        Form2.setVisible(true);\n", "      }\n", "      else if(e.getSource()==B2)  {\n", "        if(Form3 == null)  {\n", "          Application.Form3 = new myFrame3(Application);\n", "          Form3 = Application.Form3;\n", "          System.out.println(\"Create Form\");\n", "        }\n", "        else\n", "          System.out.println(\"Show Form\");\n", "        \n", "        Form3.setVisible(true);\n", "      }\n", "    }\n", "  }\n", "}\n", "import java.awt.*;\n", "import java.awt.event.*;\n", "import javax.swing.*;\n", "public class myFrame2 extends Frame  {\n", "  private j02110501_Project1 Application;\n", "  private myFrame1 Form1;\n", "  private myFrame2 Form2;\n", "  private myFrame3 Form3;\n", "  \n", "  TextField text1,text2;\n", "  Label lb1;\n", "  Button B1;\n", "  public myFrame2( j02110501_Project1 app)  {\n", "    Application = app;\n", "    Form2 = this;\n", "    \n", "    this.setLayout(null);\n", "    this.setBounds(420,300,300,90);\n", "    this.setTitle(\"Foem2: 加法运算\");\n", "    this.addWindowListener(new myWindowAdapter());\n", "    \n", "    text1 = new TextField(\"0\",6);\n", "    text1.setBounds(30,40,80,30);\n", "    this.add(text1);\n", "    lb1 = new Label(\"+\");\n", "    lb1.setBounds(115,40,20,30);\n", "    this.add(lb1);\n", "    text2 = new TextField(\"0\",6);\n", "    text2.setBounds(150,40,80,30);\n", "    this.add(text2);\n", "    B1 = new Button(\"计算\");\n", "    B1.setBounds(240,40,40,30);\n", "    B1.addActionListener(new myActionListener());\n", "    this.add(B1);\n", "  }\n", "  \n", "  class myActionListener implements ActionListener  {\n", "   \n", "    public void actionPerformed(ActionEvent e)  {\n", "      //Form1 = Application.Form1;\n", "      double sum;\n", "      try  {\n", "        sum = Double.parseDouble( Form2.text1.getText().trim())\n", "            + Double.parseDouble(Form2.text2.getText().trim());\n", "        \n", "        Form1.L1.setText(String.valueOf(sum));\n", "        if(Form3 != null)  {\n", "          System.out.println(\"called by Form2:\\n Form3.text1 = \"\n", "                      + Form3.text1.getText()\n", "                      + \" Form3.text2 = \"\n", "                      + Form3.text2.getText() );\n", "        }\n", "      }\n", "      catch(NumberFormatException ecp)  {\n", "        JOptionPane.showMessageDialog(null,\"必须输入两个“数值”！\");\n", "      }\n", "    }\n", "  }\n", "  \n", "  class myWindowAdapter extends WindowAdapter  {\n", "    public void windowOpend(WindowEvent e)  {\n", "      Form1 = Application.Form1;\n", "      Form3 = Application.Form3;\n", "    }\n", "    \n", "    public void windowActivated(WindowEvent e)  {\n", "      if(Form3 == null)\n", "        Form3 = Application.Form3;\n", "    }\n", "    public void windowClosing(WindowEvent e)  {\n", "      Form2.setVisible(false);\n", "    }\n", "  }\n", "}\n", "import java.awt.*;\n", "import java.awt.event.*;\n", "import javax.swing.*;\n", "public class myFrame3 extends Frame  {\n", "  private j02110501_Project1 Application;\n", "  private myFrame1 Form1;\n", "  private myFrame2 Form2;\n", "  private myFrame3 Form3;\n", "  \n", "  TextField text1,text2;\n", "  Label lb1;\n", "  Button B1;\n", "  public myFrame3(j02110501_Project1 app)  {\n", "    Application = app;\n", "    Form3 = this;\n", "    \n", "    this.setLayout(null);\n", "    this.setBounds(420,410,300,90);\n", "    this.setTitle(\"Foem3: 乘法运算\");\n", "    this.addWindowListener(new myWindowAdapter());\n", "    \n", "    text1 = new TextField(\"1\",6);\n", "    text1.setBounds(30,40,80,30);\n", "    this.add(text1);\n", "    lb1 = new Label(\"*\");\n", "    lb1.setBounds(115,40,20,30);\n", "    this.add(lb1);\n", "    text2 = new TextField(\"1\",6);\n", "    text2.setBounds(150,40,80,30);\n", "    this.add(text2);\n", "    B1 = new Button(\"计算\");\n", "    B1.setBounds(240,40,40,30);\n", "    B1.addActionListener(new myActionListener());\n", "    this.add(B1);\n", "  }\n", "  \n", "  class myActionListener implements ActionListener  {\n", "    public void actionPerformed(ActionEvent e)  {\n", "      double multiplication;\n", "      try  {\n", "        multiplication = \n", "             Double.parseDouble(Form3.text1.getText().trim())\n", "             * Double.parseDouble(Form3.text2.getText().trim());\n", "        Form1.L2.setText(String.valueOf(multiplication));\n", "        System.out.println(\"called by Form3:\\n Form2.text1 = \"\n", "                                + Form2.text1.getText()\n", "                                + \" Form2.text2 = \"\n", "                                + Form2.text2.getText() );\n", "      }\n", "      catch(NumberFormatException ecp)  {\n", "        JOptionPane.showMessageDialog(null,\"必须输入两个“数值”!\");\n", "      }\n", "    }\n", "  }\n", "  \n", "  class myWindowAdapter extends WindowAdapter  {\n", "    public void windowOpened(WindowEvent e)  {\n", "      Form1 = Application.Form1;\n", "      Form2 = Application.Form2;\n", "    }\n", "    public void windowClosing(WindowEvent e)  {\n", "      Form3.setVisible(false);\n", "    }\n", "  }\n", "}\n", "错误信息：\n", "Exception in thread \"AWT-EventQueue-0\" java.lang.NullPointerException\n", "        at myFrame2$myActionListener.actionPerformed(myFrame2.java:46)\n", "        at java.awt.Button.processActionEvent(Unknown Source)\n", "        at java.awt.Button.processEvent(Unknown Source)\n", "        at java.awt.Component.dispatchEventImpl(Unknown Source)\n", "        at java.awt.Component.dispatchEvent(Unknown Source)\n", "        at java.awt.EventQueue.dispatchEventImpl(Unknown Source)\n", "        at java.awt.EventQueue.access$000(Unknown Source)\n", "        at java.awt.EventQueue$1.run(Unknown Source)\n", "        at java.awt.EventQueue$1.run(Unknown Source)\n", "        at java.security.AccessController.doPrivileged(Native Method)\n", "        at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)\n", "        at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)\n", "        at java.awt.EventQueue$2.run(Unknown Source)\n", "        at java.awt.EventQueue$2.run(Unknown Source)\n", "        at java.security.AccessController.doPrivileged(Native Method)\n", "        at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)\n", "        at java.awt.EventQueue.dispatchEvent(Unknown Source)\n", "        at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\n", "        at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\n", "        at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n", "        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n", "        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n", "        at java.awt.EventDispatchThread.run(Unknown Source)", "\n\n", " "]], "Tag": "算法设计"}
{"Answer": "我运行了，可以出来呀。一个计算机 不过后天有问题：告：不能读取 AppletViewer 的属性文件： C:\\Users\\Administrator\\.hotjava\\properties 使用默认值。 erliangban 12-24 10         这句话是什么意思？我不懂，你能再解释一下，方便的话可以截屏看一下吗？", "Konwledge_Point": "乘法", "Question": ["程序问什么运行不出来", ["import java.applet.*;", "\nimport java.awt.*;", "\nimport javax.swing.*; ", "\nimport java.awt.event.*;", "\n//import java.Math.*;", "\npublic class cal extends Applet", "\n{", "\n//定义所有需要使用的全局变量", "\nString str=\"0\";//暂存显示屏数据", "\nString sign=\"null\";//暂存符号数据", "\ndouble num=0;//暂存内部运算数据", "\nboolean change=false;//暂存内部四则运算起用", "\n\n", "GridLayout g0,g1;//定义AWT布局部件", "\nJTextField number; ", "\nButton num_p,num_0,num_1,num_2,num_3,num_4,num_5,num_6,num_7,num_8,num_9;", "\nButton act_add,act_mul,act_div,act_sub;", "\nButton mat_sin,mat_cos,mat_tan;", "\nButton do_ans,do_del;", "\nPanel p0,p1;", "\n\n", "public void init()//主程序部分", "\n{", "\n //定义各个控件的样式", "\n number=new JTextField(20);//显示屏 ", "\n number.setHorizontalAlignment(JTextField.RIGHT); ", "\n number.setEnabled(false); ", "\n number.setText(\"0\"); ", "\n\n", "num_p=new Button(\".\");//小数点的按钮 ", "\n num_p.setForeground(Color.red); ", "\n num_p.addActionListener(new getbt()); ", "\n\n", "num_0=new Button(\"0\");//数字0的按钮 ", "\n num_0.setForeground(Color.red); ", "\n num_0.addActionListener(new getbt()); ", "\n\n", "num_1=new Button(\"1\");//数字1的按钮 ", "\n num_1.setForeground(Color.red); ", "\n num_1.addActionListener(new getbt()); ", "\n\n", "num_2=new Button(\"2\");//数字2的按钮 ", "\n num_2.setForeground(Color.red); ", "\n num_2.addActionListener(new getbt()); ", "\n\n", "num_3=new Button(\"3\");//数字3的按钮 ", "\n num_3.setForeground(Color.red); ", "\n num_3.addActionListener(new getbt()); ", "\n\n", "num_4=new Button(\"4\");//数字4的按钮 ", "\n num_4.setForeground(Color.red); ", "\n num_4.addActionListener(new getbt()); ", "\n\n", "num_5=new Button(\"5\");//数字5的按钮 ", "\n num_5.setForeground(Color.red); ", "\n num_5.addActionListener(new getbt()); ", "\n\n", "num_6=new Button(\"6\");//数字6的按钮 ", "\n num_6.setForeground(Color.red); ", "\n num_6.addActionListener(new getbt()); ", "\n\n", "num_7=new Button(\"7\");//数字7的按钮 ", "\n num_7.setForeground(Color.red); ", "\n num_7.addActionListener(new getbt()); ", "\n\n", "num_8=new Button(\"8\");//数字8的按钮 ", "\n num_8.setForeground(Color.red); ", "\n num_8.addActionListener(new getbt()); ", "\n\n", "num_9=new Button(\"9\");//数字9的按钮 ", "\n num_9.setForeground(Color.red); ", "\n num_9.addActionListener(new getbt()); ", "\n\n", "act_add=new Button(\"+\");//加法的按钮 ", "\n act_add.setForeground(Color.red); ", "\n act_add.addActionListener(new getbt()); ", "\n\n", "act_sub=new Button(\"-\");//减法的按钮 ", "\n act_sub.setForeground(Color.red); ", "\n act_sub.addActionListener(new getbt()); ", "\n\n", "act_mul=new Button(\"*\");//乘法的按钮 ", "\n act_mul.setForeground(Color.red); ", "\n act_mul.addActionListener(new getbt()); ", "\n\n", "act_div=new Button(\"/\");//除法的按钮 ", "\n act_div.setForeground(Color.red); ", "\n act_div.addActionListener(new getbt()); ", "\n\n", "do_ans=new Button(\"=\");//等于的按钮 ", "\n do_ans.setForeground(Color.red);", "\n do_ans.addActionListener(new getbt()); ", "\n\n", "do_del=new Button(\"del\");//删除的按钮 ", "\n do_del.setForeground(Color.red); ", "\n do_del.addActionListener(new getbt()); ", "\n\n", "mat_sin=new Button(\"sin\");//sin的按钮 ", "\n mat_sin.setForeground(Color.red); ", "\n mat_sin.addActionListener(new getbt()); ", "\n\n", "mat_cos=new Button(\"cos\");//cos的按钮 ", "\n mat_cos.setForeground(Color.red); ", "\n mat_cos.addActionListener(new getbt()); ", "\n\n", "mat_tan=new Button(\"tan\");//tan的按钮 ", "\n mat_tan.setForeground(Color.red); ", "\n mat_tan.addActionListener(new getbt()); ", "\n\n", "//布局整个计算器", "\n g0=new GridLayout(1,1,10,10);//布局输入输出大体位置", "\n g1=new GridLayout(4,5,10,10);", "\n\n", "p0=new Panel(); //显示屏的布局", "\n p0.setLayout(g0);", "\n p0.add(number); ", "\n p0.setBounds(0,0,100,50);", "\n\n", "//按纽的布局 ", "\n p1=new Panel();", "\n p1.setLayout(g1);", "\n p1.add(num_1);//第一排按纽", "\n p1.add(num_2);", "\n p1.add(num_3);", "\n p1.add(act_add);", "\n p1.add(act_sub);", "\n\n", "p1.add(num_4);//第二排按纽", "\n p1.add(num_5);", "\n p1.add(num_6);", "\n p1.add(act_mul);", "\n p1.add(act_div);", "\n\n", "p1.add(num_7);//第三排按纽", "\n p1.add(num_8);", "\n p1.add(num_9);", "\n p1.add(mat_sin);", "\n p1.add(mat_cos);", "\n\n", "p1.add(num_0);//第四排按钮", "\n p1.add(num_p);", "\n p1.add(do_ans);", "\n p1.add(do_del);", "\n p1.add(mat_tan);", "\n p1.setBounds(5,60,400,250); ", "\n p1.setBackground(Color.cyan);//设置按钮背景颜色", "\n\n", "setLayout(null); ", "\n add(p0);", "\n add(p1);", "\n\n", "this.setBackground(Color.cyan);//设置背景整体颜色", "\n}", "\n\n", "class getbt implements ActionListener //监听作出反应的类", "\n{", "\n public void actionPerformed(ActionEvent e)//对每个每个按钮做出响应", "\n { ", "\n if(e.getSource()==num_0)", "\n  press0();", "\n else if(e.getSource()==num_1)", "\n  press1();", "\n else if(e.getSource()==num_2)", "\n  press2();", "\n else if(e.getSource()==num_3)", "\n  press3();", "\n else if(e.getSource()==num_4)", "\n  press4();", "\n else if(e.getSource()==num_5)", "\n  press5();", "\n else if(e.getSource()==num_6)", "\n  press6();", "\n else if(e.getSource()==num_7)", "\n  press7();", "\n else if(e.getSource()==num_8)", "\n  press8();", "\n else if(e.getSource()==num_9)", "\n  press9();", "\n else if(e.getSource()==num_p)", "\n  pressp();", "\n else if(e.getSource()==act_add)", "\n  pressadd();", "\n else if(e.getSource()==act_mul)", "\n  pressmul();", "\n else if(e.getSource()==act_div)", "\n  pressdiv();", "\n else if(e.getSource()==act_sub)", "\n  presssub();", "\n else if(e.getSource()==mat_sin)", "\n  presssin();", "\n else if(e.getSource()==mat_tan)", "\n  presstan();", "\n else if(e.getSource()==mat_cos)", "\n  presscos();", "\n else if(e.getSource()==do_ans)", "\n  pressans();", "\n else if (e.getSource()==do_del)", "\n  pressdel();", "\n }", "\n\n", "}", "\npublic void press0()//对按0作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"0\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"0\";", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press1()//对按1作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"1\";", "\n }", "\n else if(str==\"0\"|| sign!=\"null\")", "\n {", "\n  str=\"1\";", "\n  change=false;", "\n } ", "\n number.setText(str);", "\n}", "\n\n", "public void press2()//对按2作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"2\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"2\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press3()//对按3作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"3\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"3\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\npublic void press4()//对按4作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"4\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"4\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press5()//对按5作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"5\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"5\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press6()//对按6作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"6\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"6\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press7()//对按7作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"7\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"7\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press8()//对按8作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"8\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"8\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void press9()//对按9作出反应", "\n{", "\n if(str.length()<16 && str!=\"0\" && change==false)", "\n {", "\n  str+=\"9\";", "\n }", "\n else if(str==\"0\" || sign!=\"null\")", "\n {", "\n  str=\"9\";", "\n  change=false;", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void pressp()//对按.作出反应", "\n{", "\n boolean p=false;", "\n for(int i=0;i<str.length();i++)", "\n  if(str.charAt(i)=='.')", "\n   p=true;", "\n if(str.length()<16 && str!=\"0\" && sign==\"null\" && p==false)", "\n {", "\n  str+=\".\";", "\n }", "\n else if((str==\"0\" || sign!=\"null\")&& p==false)", "\n {", "\n  str=\"0.\";", "\n }", "\n number.setText(str);", "\n}", "\n\n", "public void pressadd()//对按+作出反应", "\n{", "\n sign=\"add\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\n\n", "public void presssub()//对按-作出反应", "\n{", "\n sign=\"sub\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\npublic void pressmul()//对按*作出反应", "\n{", "\n sign=\"mul\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\npublic void pressdiv()//对按/作出反应", "\n{", "\n sign=\"div\";", "\n num=Double.parseDouble(str);", "\n change=true;", "\n}", "\npublic void presssin()//对按sin作出反应", "\n{", "\n if(str!=\"0.\" && str!=\"-0\" && str!=\"-0.\" && str!=\"0\")", "\n {", "\n  sign=\"null\";", "\n  num=Double.parseDouble(str);", "\n  num=Math.sin(num);", "\n  str=Double.toString(num);", "\n  if(str.length()>16)", "\n  str=str.substring(0,16);", "\n  num=0;", "\n }", "\n if(str==\"0\")", "\n {", "\n  sign=\"null\";", "\n  num=0;", "\n }", "\n number.setText(str);", "\n}", "\npublic void presstan()//对按tan作出反应", "\n{", "\n if(str!=\"0.\" && str!=\"-0\" && str!=\"-0.\"&& str!=\"0\")", "\n {", "\n  sign=\"null\";", "\n  num=Double.parseDouble(str);", "\n  num=Math.tan(num);", "\n  str=Double.toString(num);", "\n  if(str.length()>16)", "\n  str=str.substring(0,16);", "\n  num=0;", "\n }", "\n number.setText(str);", "\n}", "\npublic void presscos()//对按cos作出反应", "\n{", "\n if(str!=\"0.\" && str!=\"-0\" && str!=\"-0.\")", "\n {", "\n  sign=\"null\";", "\n  num=Double.parseDouble(str);", "\n  num=Math.cos(num);", "\n  str=Double.toString(num);", "\n  if(str.length()>16)", "\n  str=str.substring(0,16); ", "\n  num=0;", "\n }", "\n number.setText(str);", "\n}", "\npublic void pressans()//对按=作出反应", "\n{", "\n if(sign==\"null\")", "\n  number.setText(str);", "\n else if(sign==\"add\")", "\n {", "\n  num+=Double.parseDouble(str);", "\n  str=Double.toString(num);", "\n  number.setText(str);", "\n }", "\n else if(sign==\"sub\")", "\n {", "\n  num-=Double.parseDouble(str);", "\n  str=Double.toString(num);", "\n  number.setText(str);", "\n }", "\n else if(sign==\"mul\")", "\n {", "\n  num*=Double.parseDouble(str);", "\n  str=Double.toString(num);", "\n  number.setText(str);", "\n }", "\n else if(sign==\"div\")", "\n {", "\n  if(num!=0)", "\n  {", "\n   num/=Double.parseDouble(str);", "\n   str=Double.toString(num);", "\n   number.setText(str);", "\n  }", "\n  else", "\n  {", "\n   str=\"0\";", "\n   number.setText(str);", "\n  } ", "\n }", "\n sign=\"null\";", "\n}", "\npublic void pressdel()//对按del作出反应", "\n{", "\n if(str.length()>1)", "\n {", "\n  str=str.substring(0,str.length()-1);", "\n  number.setText(str);", "\n }", "\n    else if(str.length()==1)", "\n    {", "\n     str=\"0\";", "\n     number.setText(str);", "\n    }", "\n}", "\n}"]], "Tag": "算法设计"}
{"Answer": "图被压缩了，不是很清楚，001Bh地址的指令就是          停止 指令的上面一行字", "Konwledge_Point": "乘法", "Question": ["这里不是应该是零转移指令的吗？", ["看图，001Bh处的指令不是应该是零转移指令的吗？怎么会是非零转移的？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;参考下&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; ROWS 9&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;define&lt;/span&gt; COLS 9&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; array[ROWS][COLS];\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i, j;\n    \n    &lt;span class=\"hljs-comment\"&gt;// 计算乘积并将结果存入二维数组中&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; ROWS; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; COLS; j&amp;#43;&amp;#43;) {\n            array[i][j] &amp;#61; (j &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) * (i &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// 先计算大数*j&amp;#xff0c;再计算小数*i&lt;/span&gt;\n        }\n    }\n    \n    &lt;span class=\"hljs-comment\"&gt;// 打印九九乘法表&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    九九乘法表\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; COLS; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d &amp;#34;&lt;/span&gt;, i);\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; ROWS; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d  &amp;#34;&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; COLS; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%2d &amp;#34;&lt;/span&gt;, array[i][j]);\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n    \n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;你看题目要求&amp;#xff0c;每个算式的乘数和积都要输出&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c语言编程中关于数组和循环的疑惑", ["请问如何利用数组和循环进行计算机的输出", "比如以下实例", "使用循环语句在屏幕上打印“九九乘法表”。", "  ⑴ 在第1行输出4个空格，以及标题：“九九乘法表”。", "  ⑵ 每个算式的乘数小数在前，大数在后（例如：4 × 8 = 32）。", "  ⑶ 每个算式的乘数与积的域宽为2，左对齐；每个算式结尾有2个额外空格。", "  ⑷ 每个算式的积存放在二维数组array中。", "\n", "乘数小数在前、大数在后又该怎么操作？", "以及最后的输出结果究竟是算式还是乘积？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; array[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;]; &lt;span class=\"hljs-comment\"&gt;// 创建二维数组存储所有的积&lt;/span&gt;\n\n    &lt;span class=\"hljs-comment\"&gt;// 计算并存储所有积&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n            array[i][j] &amp;#61; (i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;) * (j&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;);\n        }\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 打印表格标题及第一行空格&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    九九乘法表\\n&amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    &amp;#34;&lt;/span&gt;);\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-4d&amp;#34;&lt;/span&gt;, i); &lt;span class=\"hljs-comment\"&gt;// 左对齐域宽2&amp;#xff0c;末尾2个额外空格&lt;/span&gt;\n    }\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-comment\"&gt;// 打印表格内容&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-4d&amp;#34;&lt;/span&gt;, i&amp;#43;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;); &lt;span class=\"hljs-comment\"&gt;// 左对齐域宽2&amp;#xff0c;末尾2个额外空格&lt;/span&gt;\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%-4d&amp;#34;&lt;/span&gt;, array[i][j]); &lt;span class=\"hljs-comment\"&gt;// 左对齐域宽2&amp;#xff0c;末尾2个额外空格&lt;/span&gt;\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["如何用C语言编写程序", ["使用循环语句在屏幕上打印“九九乘法表”。", "  ⑴ 在第1行输出4个空格，以及标题：“九九乘法表”。", "  ⑵ 每个算式的乘数小数在前，大数在后（例如：4 × 8 = 32）。", "  ⑶ 每个算式的乘数与积的域宽为2，左对齐；每个算式结尾有2个额外空格。", "  ⑷ 每个算式的积存放在二维数组array中"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;把那个cout&amp;lt;&amp;lt;setw(5)&amp;lt;&amp;lt;&amp;#34; &amp;#34;;去掉&lt;br /&gt;加上了自然打印到后面去了&lt;br /&gt;下面 for (j &amp;#61; 1; i &amp;lt;&amp;#61; i; j&amp;#43;&amp;#43;)&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["c＋＋关于过程化语句", ["\n", "请问各位我要怎么改呀，编程打印九九乘法表。如图片所示，我在网上学习了别人的打下来还是不行。"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在每行式子输出前的增加输出空白间距&amp;#xff0c;以输出不断递减数量的制表符来实现即可。&lt;br /&gt;&lt;br /&gt;修改如下&amp;#xff1a;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-c&amp;#43;&amp;#43;\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-keyword\"&gt;using&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;namespace&lt;/span&gt; std;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;{\n    \n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;i&amp;lt;&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;i&amp;#43;&amp;#43;){\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; k&amp;#61;&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;;k&amp;gt;i;k--){\n            cout&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;\\t&amp;#34;&lt;/span&gt;;\n        }\n        \n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j&amp;#61;&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;j&amp;lt;&amp;#61;i;j&amp;#43;&amp;#43;){\n            cout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;j&amp;lt;&amp;lt;&lt;span class=\"hljs-string\"&gt;&amp;#34;&amp;#61;&amp;#34;&lt;/span&gt;&amp;lt;&amp;lt;left&amp;lt;&amp;lt;&lt;span class=\"hljs-built_in\"&gt;setw&lt;/span&gt;(&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;)&amp;lt;&amp;lt;i*j;\n        }\n        \n        cout&amp;lt;&amp;lt;endl;\n    }\n} \n\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/433587154186138.png\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["如何使下列代码输出为右上三角", ["\n", "使用的是2010版本", "目的是输出乘法表，但需要右对齐", "如题，如何解决？"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;希望对你有帮助&amp;#xff0c;代码仅供参考&amp;#xff01;有问题多谢提出&amp;#xff01;谢谢&amp;#xff01;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/790184154086115.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/425741744086168.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/702351744086189.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;&lt;p class=\"md_img_container\"&gt;&lt;img class=\"md_img\" src=\"https://img-mid.csdnimg.cn/release/static/image/mid/ask/498751744086126.jpg\" alt=\"img\" align=\"left\" /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;\n&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt;\n{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; year;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mon;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; mday;\n} ys[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n\n&lt;span class=\"hljs-keyword\"&gt;const&lt;/span&gt; &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; arr[&lt;span class=\"hljs-number\"&gt;15&lt;/span&gt;] &amp;#61; { &lt;span class=\"hljs-number\"&gt;1868&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1912&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;7&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;30&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1926&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;12&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;25&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1989&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;8&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;2019&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;, &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt; };\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; argc, &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"hljs-comment\"&gt;// 初始化日本五个纪年日期&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;, j &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        ys[i].year &amp;#61; arr[j&amp;#43;&amp;#43;];\n        ys[i].mon &amp;#61; arr[j&amp;#43;&amp;#43;];\n        ys[i].mday &amp;#61; arr[j&amp;#43;&amp;#43;];\n    }\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; ch;\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; y, m, md, n;\n    &lt;span class=\"hljs-built_in\"&gt;scanf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c%d/%d/%d%d&amp;#34;&lt;/span&gt;, &amp;amp;ch, &amp;amp;y, &amp;amp;m, &amp;amp;md, &amp;amp;n);\n    &lt;span class=\"hljs-built_in\"&gt;switch&lt;/span&gt; (ch)\n    {\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;M&amp;#39;&lt;/span&gt;:\n        y &amp;#43;&amp;#61; ys[&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;].year - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;T&amp;#39;&lt;/span&gt;:\n        y &amp;#43;&amp;#61; ys[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;].year - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;S&amp;#39;&lt;/span&gt;:\n        y &amp;#43;&amp;#61; ys[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;].year - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;H&amp;#39;&lt;/span&gt;:\n        y &amp;#43;&amp;#61; ys[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;].year - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;case&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;:\n        y &amp;#43;&amp;#61; ys[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;].year - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        &lt;span class=\"hljs-keyword\"&gt;break&lt;/span&gt;;\n    &lt;span class=\"hljs-keyword\"&gt;default&lt;/span&gt;:\n        &lt;span class=\"hljs-built_in\"&gt;puts&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;输入有误&amp;#xff01;&amp;#34;&lt;/span&gt;);\n        &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-type\"&gt;time_t&lt;/span&gt; t, tim[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    &lt;span class=\"hljs-keyword\"&gt;struct&lt;/span&gt; &lt;span class=\"hljs-title class_\"&gt;tm&lt;/span&gt; tt, tt2[&lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;];\n    tt.tm_year &amp;#61; y - &lt;span class=\"hljs-number\"&gt;1900&lt;/span&gt;;\n    tt.tm_mon &amp;#61; m - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n    tt.tm_mday &amp;#61; md &amp;#43; n;\n    tt.tm_hour &amp;#61; &lt;span class=\"hljs-number\"&gt;23&lt;/span&gt;;\n    tt.tm_min &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n    tt.tm_sec&amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n\n    &lt;span class=\"hljs-comment\"&gt;// 转成秒&lt;/span&gt;\n    t &amp;#61; &lt;span class=\"hljs-built_in\"&gt;mktime&lt;/span&gt;(&amp;amp;tt);\n\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=\"hljs-number\"&gt;5&lt;/span&gt;; i&amp;#43;&amp;#43;)\n    {\n        tt2[i].tm_year &amp;#61; ys[i].year - &lt;span class=\"hljs-number\"&gt;1900&lt;/span&gt;;\n        tt2[i].tm_mon &amp;#61; ys[i].mon - &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;;\n        tt2[i].tm_mday &amp;#61; ys[i].mday;\n        tt2[i].tm_hour &amp;#61; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        tt2[i].tm_min&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        tt2[i].tm_sec&amp;#61;&lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n        tim[i] &amp;#61; &lt;span class=\"hljs-built_in\"&gt;mktime&lt;/span&gt;(&amp;amp;tt2[i]);\n    }\n    &lt;span class=\"hljs-comment\"&gt;// 重新输出具体日期&lt;/span&gt;\n    &lt;span class=\"hljs-type\"&gt;char&lt;/span&gt; no;\n    &lt;span class=\"hljs-comment\"&gt;// t tim&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;gt;&amp;#61; tim[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;])\n    {\n        no &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;;\n        tt.tm_year &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;-118&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;gt;&amp;#61; tim[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;] &amp;amp;&amp;amp; t &amp;lt; tim[&lt;span class=\"hljs-number\"&gt;4&lt;/span&gt;])\n    {\n        no &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;H&amp;#39;&lt;/span&gt;;\n        tt.tm_year &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;-88&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;gt;&amp;#61; tim[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;] &amp;amp;&amp;amp; t &amp;lt; tim[&lt;span class=\"hljs-number\"&gt;3&lt;/span&gt;])\n    {\n        no &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;S&amp;#39;&lt;/span&gt;;\n        tt.tm_year &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;-25&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;gt;&amp;#61; tim[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;] &amp;amp;&amp;amp; t &amp;lt; tim[&lt;span class=\"hljs-number\"&gt;2&lt;/span&gt;])\n    {\n        no &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;T&amp;#39;&lt;/span&gt;;\n        tt.tm_year &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;-11&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-keyword\"&gt;else&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (t &amp;lt; tim[&lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;])\n    {\n        no &amp;#61; &lt;span class=\"hljs-string\"&gt;&amp;#39;M&amp;#39;&lt;/span&gt;;\n        tt.tm_year &amp;#43;&amp;#61; &lt;span class=\"hljs-number\"&gt;33&lt;/span&gt;;\n    }\n    &lt;span class=\"hljs-comment\"&gt;// 输出&lt;/span&gt;\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%c%d/%d/%d&amp;#34;&lt;/span&gt;, no, tt.tm_year, tt.tm_mon &amp;#43; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;, tt.tm_mday);\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["不知道带什么标题好随便搞一个吧", ["@滴水不穿石 ", "转专业模拟考试的题，有点点没思路，感谢！顺便问问一下能不能推荐点转专业可能会出的timu，已经学习了高精度乘法，冒泡排序，高精度加法，分解质因数但是觉得还远远不够", "\n"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;比如说输入&lt;br /&gt;1 2 &amp;#43;&lt;br /&gt;输出3&lt;br /&gt;另外&amp;#xff0c;%不是除法&amp;#xff0c;而是取余&amp;#xff0c;/才是除法&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["这个我不懂应该怎样输入式子", ["请问这个应该怎样输入运算数字，加法，减法，乘法，除法应该怎么输入，麻烦帮我解决一下"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-c\"&gt;\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-keyword\"&gt;include&lt;/span&gt; &lt;span class=\"hljs-string\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span class=\"hljs-function\"&gt;&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;main&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt; &lt;/span&gt;{\n    &lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; array[&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;][&lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;];\n\n    &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;    九九乘法表\\n&amp;#34;&lt;/span&gt;);\n\n    &lt;span class=\"hljs-comment\"&gt;// 计算乘法表并存储在二维数组array中&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n            array[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;][j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;] &amp;#61; i * j;\n        }\n    }\n\n    &lt;span class=\"hljs-comment\"&gt;// 输出乘法表&lt;/span&gt;\n    &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; i &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; i &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; i&amp;#43;&amp;#43;) {\n        &lt;span class=\"hljs-keyword\"&gt;for&lt;/span&gt; (&lt;span class=\"hljs-type\"&gt;int&lt;/span&gt; j &amp;#61; &lt;span class=\"hljs-number\"&gt;1&lt;/span&gt;; j &amp;lt;&amp;#61; &lt;span class=\"hljs-number\"&gt;9&lt;/span&gt;; j&amp;#43;&amp;#43;) {\n            &lt;span class=\"hljs-keyword\"&gt;if&lt;/span&gt; (i &amp;lt;&amp;#61; j) {\n                &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;%d × %d &amp;#61; %2d  &amp;#34;&lt;/span&gt;, i, j, array[i&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;][j&lt;span class=\"hljs-number\"&gt;-1&lt;/span&gt;]);\n            }\n        }\n        &lt;span class=\"hljs-built_in\"&gt;printf&lt;/span&gt;(&lt;span class=\"hljs-string\"&gt;&amp;#34;\\n&amp;#34;&lt;/span&gt;);\n    }\n\n    &lt;span class=\"hljs-keyword\"&gt;return&lt;/span&gt; &lt;span class=\"hljs-number\"&gt;0&lt;/span&gt;;\n}\n\n&lt;/code&gt;&lt;/pre&gt;", "Konwledge_Point": "乘法", "Question": ["c语言编程关于数组的疑惑", ["请问如何利用数组和循环进行计算机的输出", "比如以下实例", "使用循环语句在屏幕上打印“九九乘法表”。", "  ⑴ 在第1行输出4个空格，以及标题：“九九乘法表”。", "  ⑵ 每个算式的乘数小数在前，大数在后（例如：4 × 8 = 32）。", "  ⑶ 每个算式的乘数与积的域宽为2，左对齐；每个算式结尾有2个额外空格。", "  ⑷ 每个算式的积存放在二维数组array中。", "\n", "乘数小数在前、大数在后又该怎么操作？", "以及最后的输出结果究竟是算式还是乘积？"]], "Tag": "算法设计"}
{"Answer": "&lt;pre&gt;&lt;code class=\"language-javascript\"&gt;result.save(output_path)\n改为&amp;#xff1a;\narcpy.&lt;span class=\"hljs-constructor\"&gt;CopyRaster(&lt;span class=\"hljs-params\"&gt;result&lt;/span&gt;, &lt;span class=\"hljs-params\"&gt;output_path&lt;/span&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;该错误提示说Result Object没有save属性&amp;#xff0c;将保存结果的方法从result.save改为arcpy.CopyRaster()&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["关于arcpy的问题，如何解决？", [" ###### arcpy对栅格计算器进行计算", "但是在运行时总会报错。找不到原因。报错：", "\n", "Runtime error \nTraceback (most recent call last):\n  File \"<string>\", line 28, in <module>\nAttributeError: ResultObject: ", "\\u672a", "\\u627e", "\\u5230", "\\u83b7", "\\u53d6", "\\u5c5e", "\\u6027", " save\n\n", "\n", "原代码如下", "\n", "import", " arcpy\nfrom arcpy.sa ", "import", " *\nfrom arcpy ", "import", " env\n\n# 设置工作空间和输出文件夹\narcpy.env.workspace ", "=", " r", "\"F:/study/DataCopy\"", "\noutput_folder ", "=", " r", "\"F:/study/DataCopy/data2/\"", "\n\n# 定义栅格计算器表达式\n# 这里使用了字典，方便后面进行循环处理\nexpression_dict ", "=", " {\n    ", "\"1991-1992\"", ": ", "\"10 * ", "\\\"", "CLCD_v01_1991_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_1992_albert_henan.tif", "\\\"", "\"", ",\n    ", "\"1991-1993\"", ": ", "\"100 * ", "\\\"", "CLCD_v01_1991_albert_henan.tif", "\\\"", " + 10 * ", "\\\"", "CLCD_v01_1992_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_1993_albert_henan.tif", "\\\"", "\"", ",\n    ", "\"1991-1994\"", ": ", "\"1000 * ", "\\\"", "CLCD_v01_1991_albert_henan.tif", "\\\"", " + 100 * ", "\\\"", "CLCD_v01_1992_albert_henan.tif", "\\\"", " + 10 * ", "\\\"", "CLCD_v01_1993_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_1994_albert_henan.tif", "\\\"", "\"", ",\n    # ", "\"2000_2001\"", ": ", "\"10 * ", "\\\"", "CLCD_v01_2000_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_2001_albert_henan.tif", "\\\"", "\"", ",\n    # ", "\"2000_2002\"", ": ", "\"100 * ", "\\\"", "CLCD_v01_2000_albert_henan.tif", "\\\"", " + 10 * ", "\\\"", "CLCD_v01_2001_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_2002_albert_henan.tif", "\\\"", "\"", ",\n    # ", "\"2000_2003\"", ": ", "\"1000 * ", "\\\"", "CLCD_v01_2000_albert_henan.tif", "\\\"", " + 100 * ", "\\\"", "CLCD_v01_2001_albert_henan.tif", "\\\"", " + 10 * ", "\\\"", "CLCD_v01_2002_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_2003_albert_henan.tif", "\\\"", "\"", ",\n    # ", "\"2000_2004\"", ": ", "\"10000 * ", "\\\"", "CLCD_v01_2000_albert_henan.tif", "\\\"", " + 1000 * ", "\\\"", "CLCD_v01_2001_albert_henan.tif", "\\\"", " + 100 * ", "\\\"", "CLCD_v01_2002_albert_henan.tif", "\\\"", " + 10 * ", "\\\"", "CLCD_v01_2003_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_2004_albert_henan.tif", "\\\"", "\"", ",\n    # ", "\"2001_2002\"", ": ", "\"10 * ", "\\\"", "CLCD_v01_2001_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_2002_albert_henan.tif", "\\\"", "\"", ",\n    # ", "\"2001_2003\"", ": ", "\"100 * ", "\\\"", "CLCD_v01_2001_albert_henan.tif", "\\\"", " + 10 * ", "\\\"", "CLCD_v01_2002_albert_henan.tif", "\\\"", " + ", "\\\"", "CLCD_v01_2003_albert_henan.tif", "\\\"", "\"", "\n}\n\n# 循环处理每个表达式，进行栅格计算并保存输出\n", "for", " key, expression ", "in", " expression_dict.items():\n    # 执行乘法和加法运算\n    result ", "=", " arcpy.gp.", "RasterCalculator", "(expression)\n    # 生成输出文件名\n    output_name ", "=", " key ", "+", " ", "\".tif\"", "\n    # 拼接输出文件路径\n    output_path ", "=", " output_folder ", "+", " ", "\"", "\\\\", "\"", " ", "+", " output_name\n    # 保存结果到输出文件\n    result.save(output_path)\n\n", "\n", "请指点"]], "Tag": "算法设计"}
{"Answer": "&lt;p&gt;在椭圆曲线密码学中&amp;#xff0c;双线性对常常用于构建高级加密协议&amp;#xff0c;例如基于身份的加密和匿名凭证。在Solidity中实现双线性对相关的计算&amp;#xff0c;可以使用bls12-381曲线上的Pairing库&amp;#xff0c;该库提供了原生支持双线性对的函数。&lt;/p&gt;\n&lt;p&gt;要得到乘法群的生成元&amp;#xff0c;可以通过调用函数G1()、G2()&amp;#xff0c;分别获取G1和G2群的生成元。要进行生成元的幂运算&amp;#xff0c;可以使用exponentiation()函数&amp;#xff0c;例如对于点P进行幂运算可以使用P.exponentiation(k)&amp;#xff0c;其中k为幂的指数。&lt;/p&gt;\n&lt;p&gt;另外&amp;#xff0c;在Solidity中不能直接执行Java文件&amp;#xff0c;因为Java运行在JVM上&amp;#xff0c;而Solidity的虚拟机则是不同的。如果需要将Java代码嵌入Solidity中&amp;#xff0c;可以使用外部函数接口&amp;#xff08;External Function Interface&amp;#xff09;或调用API的方式实现。&lt;/p&gt;", "Konwledge_Point": "乘法", "Question": ["Solidity 如何实现双线性对相关的计算？", ["如何得到乘法群的生成元，如何进行生成元的幂运算？或者可以在solidity中执行Java文件吗"]], "Tag": "算法设计"}
