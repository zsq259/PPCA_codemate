{"question": "Computational complexity of Fibonacci Sequence\r\n                \r\nI understand Big-O notation, but I don't know how to calculate it for many functions. In particular, I've been trying to figure out the computational complexity of the naive version of the Fibonacci sequence:\n\nint Fibonacci(int n)\n{\n    if (n <= 1)\n        return n;\n    else\n        return Fibonacci(n - 1) + Fibonacci(n - 2);\n}\n\n\nWhat is the computational complexity of the Fibonacci sequence and how is it calculated?\n    ", "answer": "\r\nYou model the time function to calculate Fib(n) as sum of time to calculate Fib(n-1) plus the time to calculate Fib(n-2) plus the time to add them together (O(1)).  This is assuming that repeated evaluations of the same Fib(n) take the same time - i.e. no memoization is used.\nT(n<=1) = O(1)\nT(n) = T(n-1) + T(n-2) + O(1)\nYou solve this recurrence relation (using generating functions, for instance) and you'll end up with the answer.\nAlternatively, you can draw the recursion tree, which will have depth n and intuitively figure out that this function is asymptotically O(2n). You can then prove your conjecture by induction.\nBase: n = 1 is obvious\nAssume T(n-1) = O(2n-1), therefore\nT(n) = T(n-1) + T(n-2) + O(1) which is equal to\nT(n) = O(2n-1) + O(2n-2) + O(1) = O(2n)\nHowever, as noted in a comment, this is not the tight bound. An interesting fact about this function is that the T(n) is asymptotically the same as the value of Fib(n) since both are defined as\nf(n) = f(n-1) + f(n-2).\nThe leaves of the recursion tree will always return 1. The value of Fib(n) is sum of all values returned by the leaves in the recursion tree which is equal to the count of leaves. Since each leaf will take O(1) to compute, T(n) is equal to Fib(n) x O(1). Consequently, the tight bound for this function is the Fibonacci sequence itself (~Î¸(1.6n)). You can find out this tight bound by using generating functions as I'd mentioned above.\n    "}
{"question": "Java recursive Fibonacci sequence\r\n                \r\nPlease explain this simple code:\n\npublic int fibonacci(int n)  {\n    if(n == 0)\n        return 0;\n    else if(n == 1)\n      return 1;\n   else\n      return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\n\nI'm confused with the last line especially because if n = 5 for example, then fibonacci(4) + fibonacci(3) would be called and so on but I don't understand how this algorithm calculates the value at index 5 by this method. Please explain with a lot of detail! \n    ", "answer": ""}
{"question": "Generating Fibonacci Sequence\r\n                \r\nvar x = 0;\nvar y = 1;\nvar z;\n\nfib[0] = 0;\nfib[1] = 1;\n\nfor (i = 2; i <= 10; i++) {\n  alert(x + y);\n  fib[i] = x + y;\n  x = y;\n  z = y;\n}\n\n\nI'm trying to get to generate a simple Fibonacci Sequence but there no output. \n\nCan anybody let me know what's wrong?\n    ", "answer": ""}
{"question": "Fibonacci sequence multiplying\r\n                \r\nI tried to make the fibonacci sequence with the following code:\n\ndef fibonacci(n): # write Fibonacci series up to n\n    \"\"\"Print a Fibonacci series up to n.\"\"\"\n    a = 0\n    b = 1\n    the_list = []\n    while n > len(the_list):\n        the_list.append(a)\n    #By saying a = b and b = a+b we define the\n    #fibonacci sequence, since this is how the\n    #fibonacci sequence works.\n        a = b\n        b = a+b\n    print the_list\n# Now call the function we just defined:\nfibonacci(10)\n\n\nAs far as I know this code should do it but instead of giving me the fibonacci sequence its giving the following output:\n\n[0, 1, 2, 4, 8, 16, 32, 64, 128, 256]\n\n\nSo my fibonacci sequence is multiplying instead of working correcly. I have no idea why because i thought\n\na = b\nb = a+b\n\n\nshould do the trick, if i look at my while loop the statements for this loop are also correct, so I just dont get it why i dont get the right output. \n\nSo if someone could explain me why this code is not working it would be highly appriciated\n    ", "answer": "\r\nYour code is creating an exponential sequence because of a logic flaw. Based on your code:\n\nStart:\na = 0\nb = 1\n\n1st iteration:\na = b = 1\nb = a + 1 = 1 + 1 = 2\n\n2nd iteration:\na = b = 2\nb = a + 2 = 2 + 2 = 4\n\n\nAs you can see the fact that you set a before performing the b calculation causes your issue.\n\nInstead you need would something like (to prove the point):\n\ntmp = a\na = b\nb = tmp + a\n\n\nA little extra math would eliminate the need for the extra variable:\n\nb += a\na = b - a\n\n\nBut the easiest (and most pythonic) way would be:\n\na, b = b, a + b\n\n    "}
{"question": "PHP Fibonacci Sequence\r\n                \r\nThis php method is suppose to print the Fibonacci sequence up to a specified value using a for loop. I am unsure why it does not work?\n\n<?php\nfunction fib ($n) { // a function called fib, declaire variable n (the sequence number)\n    for ($n=0;$n<30;$n++) {\n        if ($n < 3) { return $n; } // if n is smaller than 3 return n (1 or 2)\n        else { return fib ($n - 1) + fib ($n - 2); } \n    /* if the number is 3 or above do 2 sums (n-1) and (n-2)\n    and then add the 2 sums together (n-1)+(n-2)\n    Example Fibonacci number 4\n    (4-1)+(4-2) = 5\n    3 + 2 = 5\n    */\n}\nprint $n;\n?>\n\n    ", "answer": ""}
{"question": "Fibonacci Sequence\r\n                \r\nI'm trying to calculate the numbers of the fibonacci Sequence under 100, but the code I made doesn't work. What I have is:\n\ndef fib(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\nnum=0\nwhile(num<100):\n        print (fib(num))\n        num+=1\n\n\nI think this should work, but it doesn't, so it's definitely my issue with my coding. Could anyone resolve this?\n    ", "answer": "\r\nSo what about this code is not working? It looks like the implementation is correct, but it's of course, slow. You can try to store the numbers you compute in some kind of data structure as you go along to reduce your stack trace and prevent having to recalculate fib of 23 when you're trying to calculate fib of 24.\n    "}
{"question": "Recursion and fibonacci sequence\r\n                \r\nHow do I get this code to print all values of the fibonacci sequence of given terms? Right now it prints only the last term \n\n#include <stdio.h>\n\nint fibonacci(int n){\n\n    if (n==2)\n        return 1; \n    else\n      return fibonacci(n-1) + fibonacci(n-2);   \n\n}\n\n\nint main()\n{\n\n    int n;\n    int answer;\n    printf(\"Enter the number of terms you'd like in the sequence\\n\");\n    scanf(\"%d\",&n);\n\n    answer = fibonacci(n);\n    printf(\"The answer is %d\\n\", answer);\n\n}\n\n    ", "answer": "\r\nYour base case is incorrect.  When n==2, you'll call fibonacci(1) and fibonacci(0).  The latter will continue downward until you run out of stack space.\n\nYou should check for numbers less than to equal to the base case:\n\nif (n<=2)\n\n\nEDIT:\n\nIf you want to print all the values, you can't do it the way the function is currently structured because of the double recursion.\n\nIf you keep track of the numbers you've calculated previously, it can be done.  Then you only print out a number (and perform recursion) the first time you calculate a number, otherwise you look it up from the list and continue.\n\nint fibonacci(int n){\n    static int seq[50] = {0};\n\n    if (n > 50) {\n        printf(\"number too large\\n\");\n        return 0;\n    }\n    if (seq[n-1] == 0) {\n        if (n<=2) {\n            seq[n-1] = 1;\n        } else {\n            seq[n-1] = fibonacci(n-1) + fibonacci(n-2);\n        }\n        printf(\"%d \", seq[n-1]);\n    }\n    return seq[n-1];\n}\n\n\nOutput:\n\nEnter the number of terms you'd like in the sequence\n10\n1 1 2 3 5 8 13 21 34 55 The answer is 55\n\n\nNote that the above function has a limit of 50, since the result is too large for a 32 bit int at around that range.\n    "}
{"question": "Fibonacci sequence datastructure\r\n                \r\nIt is known that Fibonacci sequence is {0,1,1,2,3,5,8,13,21... ...}, try to write recursive functions and non-recursive functions, calculate the values of 10th numbers, 29th numbers, 50th numbers and 64th numbers of Fibonacci sequence on the computer, and compare the time consumed by the two, the performance of the two design methods is analyzed.\n    ", "answer": ""}
{"question": "Fibonacci Sequence Ruby\r\n                \r\nI have coded the fibonacci sequence on Ruby:\n\nn=40\ndef fibonacci (n)\n    if n == 1\n        1\n    elsif n == 2\n        1\n    else\n        fibonacci(n-1) + fibonacci(n-2)\n    end\nend\nputs \"#{n}'s fibonacci value is #{fibonacci(n)}\"\n\n\nWhat code do I need to add to allow the user to select which part of the sequence they are looking for eg: n=35? I'm using the MAC terminal to test\n    ", "answer": "\r\nRuby can take input from the user in a variety of forms, but the easiest is through ARGV, which encapsualtes the command-line arguments.\n\nFirst let's clean up the implementation by using Ruby's flexible case statement:\n\ndef fibonacci(n)\n  case (n)\n  when 1,2\n    1\n  else\n      fibonacci(n-1) + fibonacci(n-2)\n  end\nend\n\n\nThen feed input from the command-line argument thorugh to the function. Note that command-line input is always strings, so these need to be converted to integers with .to_i:\n\nn = ARGV[0].to_i\nputs \"#{n}'s fibonacci value is #{fibonacci(n)}\"\n\n\nAnd then you call it like this:\n\nruby fib.rb 35\n# => 35's fibonacci value is 9227465\n\n    "}
{"question": "Compiling error in Java Fibonacci sequence\r\n                \r\nI am confused on why I'm getting an error and how to fix it. My version of the fibonacci sequence is supposed to only print the desired target index value, and not all the numbers before it like most other Fibonacci sequences I've seen.\n\nimport java.util.Scanner;\n\npublic class Fibonacci_ronhoward\n{\npublic static void main(String[] args)\n{\n    Scanner scan = new Scanner(System.in);\n\n    System.out.println(\"This is a Fibonacci sequence generator\");\n\n    System.out.println(\"Choose what you would like to do\");\n\n    System.out.println(\"1. Find the nth Fibonacci number\");\n\n    System.out.println(\"2. Find the smallest Fibonacci number that exceeds user given value\");\n\n    System.out.println(\"Enter your choice: \");\n\n    int choice = scan.nextInt();\n\n    switch (choice)\n    {\n        case 1:\n\n            System.out.println();\n\n            System.out.println(\"Enter the target index to generate (>1): \");\n\n            int n = scan.nextInt();\n\n            int a = 0;\n\n            int b = 1;\n\n            for (int i = 1; i < n; i++)\n            {\n\n                int nextNumber = a + b;\n                a = b;\n                b = nextNumber;\n\n            }\n\n            System.out.println(\"The \" + n + \"th Fibonacci number is \" + nextNumber + \" \");\n\n            break;\n\n    }\n\n\n}\n}\n\n    ", "answer": "\r\nYou define nextNumber in for loop but then try to use it outside of for loop scope, that's the problem.\n\nYou should declare it outside of the loop. \n    "}
{"question": "Fibonacci sequence inconsistency\r\n                \r\nI've made a short program to generate the fibonacci sequence in a length specified by the user. At the moment when I run the code and input a digit like 6, it will display the sequence as follows:\n\n1 , 1,2,3,5,8,\n\nHow do i get rid of the initial spaces while the string stays on one line? below is my code\n\n#user intiger input\nprint(\"\\n\")\nf = int(input(\"Enter length of sequence: \"))\nprint(\"\\n\")\n\n\nf1 = 1\nf2 = 1\nmultiply = 2\n\n\nif f <=0:\n   print(\"Enter a positive integer for the length: \")\n\n\nelif f == 1:\n   print(\"The Fibonacci sequence: \")\n   print(\"\\n\")\n   print(f1,end=',')\n\nelse:\n   print(\"The Fibonacci sequence: \")\n   print(f1,\",\",f2,end=\",\")\n   while multiply < f:\n       f3 = f1 + f2\n       print(f3,end=\",\")\n\n       f1 = f2 \n       f2 = f3 \n       multiply += 1\n\nprint(\"\\n\")\n\n    ", "answer": "\r\nelse:\nprint(\"The Fibonacci sequence: \")\nprint(f1,end=\",\")\nprint(f2,end=\",\")\n\n\nThis is the simplest solution as per my perspective..\nbut by seeing your code its seems like output should be rid of initial spce\nhowever try as per suggetion & let me know output\n    "}
