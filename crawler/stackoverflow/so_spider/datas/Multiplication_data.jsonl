{"Question": "Catch multiple exceptions in one line (except block)\r\n                \r\nI know that I can do:\n```\ntry:\n    # do something that may fail\nexcept:\n    # do this if ANYTHING goes wrong\n```\n\nI can also do this:\n```\ntry:\n    # do something that may fail\nexcept IDontLikeYouException:\n    # say please\nexcept YouAreTooShortException:\n    # stand on a ladder\n```\n\nBut if I want to do the same thing inside two different exceptions, the best I can think of right now is to do this:\n```\ntry:\n    # do something that may fail\nexcept IDontLikeYouException:\n    # say please\nexcept YouAreBeingMeanException:\n    # say please\n```\n\nIs there any way that I can do something like this (since the action to take in both exceptions is to ```\nsay please```\n):\n```\ntry:\n    # do something that may fail\nexcept IDontLikeYouException, YouAreBeingMeanException:\n    # say please\n```\n\nNow this really won't work, as it matches the syntax for:\n```\ntry:\n    # do something that may fail\nexcept Exception, e:\n    # say please\n```\n\nSo, my effort to catch the two distinct exceptions doesn't exactly come through.\nIs there a way to do this?\n    ", "Answer": "\r\nFrom Python Documentation:\n\n\n  An except clause may name multiple exceptions as a parenthesized tuple, for example\n\n\n```\nexcept (IDontLikeYouException, YouAreBeingMeanException) as e:\n    pass\n```\n\n\nOr, for Python 2 only:\n\n```\nexcept (IDontLikeYouException, YouAreBeingMeanException), e:\n    pass\n```\n\n\nSeparating the exception from the variable with a comma will still work in Python 2.6 and 2.7, but is now deprecated and does not work in Python 3; now you should be using ```\nas```\n.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I stash only one file out of multiple files that have changed?\r\n                \r\nHow do I stash only one of the multiple changed files on my branch?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Catch multiple exceptions at once?\r\n                \r\nIt is discouraged to simply catch ```\nSystem.Exception```\n. Instead, only the \"known\" exceptions should be caught.\nNow, this sometimes leads to unnecessary repetitive code, for example:\n```\ntry\n{\n    WebId = new Guid(queryString[\"web\"]);\n}\ncatch (FormatException)\n{\n    WebId = Guid.Empty;\n}\ncatch (OverflowException)\n{\n    WebId = Guid.Empty;\n}\n```\n\nI wonder: Is there a way to catch both exceptions and only call the ```\nWebId = Guid.Empty```\n call once?\nThe given example is rather simple, as it's only a ```\nGUID```\n. But imagine code where you modify an object multiple times, and if one of the manipulations fails expectedly, you want to \"reset\" the ```\nobject```\n. However, if there is an unexpected exception, I still want to throw that higher.\n    ", "Answer": "\r\nCatch ```\nSystem.Exception```\n and switch on the types\n```\ncatch (Exception ex)            \n{                \n    if (ex is FormatException || ex is OverflowException)\n    {\n        WebId = Guid.Empty;\n        return;\n    }\n    \n    throw;\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Indent multiple lines quickly in vi\r\n                \r\nIt should be trivial, and it might even be in the help, but I can't figure out how to navigate it. How do I indent multiple lines quickly in vi?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I break a string in YAML over multiple lines?\r\n                \r\nI have a very long string:\n```\nKey: 'this is my very very very very very very long string'\n```\n\nI would like to express it over multiple shorter lines, e.g.,\n```\nKey: 'this is my very very very ' +\n     'long string'\n```\n\nI would like to use quotes as above, so that I don't need to escape anything within the string.\n    ", "Answer": "\r\nThere are 5 6 NINE (or 63*, depending how you count) different ways to write multi-line strings in YAML.\nTL;DR\n\nUse ```\n>```\n most of the time: interior line breaks are stripped out, although you get one at the end:\n```\n  key: >\n    Your long\n    string here.\n```\n\n\nUse ```\n|```\n if you want those linebreaks to be preserved as ```\n\\n```\n (for instance, embedded markdown with paragraphs).\n```\n  key: |\n    ### Heading\n\n    * Bullet\n    * Points\n```\n\n\nUse ```\n>-```\n or ```\n|-```\n instead if you don't want a linebreak appended at the end.\n\nUse ```\n\"...\"```\n if you need to split lines in the middle of words or want to literally type linebreaks as ```\n\\n```\n:\n```\n  key: \"Antidisestab\\\n   lishmentarianism.\\n\\nGet on it.\"\n```\n\n\nYAML is crazy.\n\n\nBlock scalar styles (```\n>```\n, ```\n|```\n)\nThese allow characters such as ```\n\\```\n and ```\n\"```\n without escaping, and add a new line (```\n\\n```\n) to the end of your string.\n```\n>```\n Folded style removes single newlines within the string (but adds one at the end, and converts double newlines to singles):\n```\nKey: >\n  this is my very very very\n  long string\n```\n\n→ ```\nthis is my very very very long string\\n```\n\nExtra leading space is retained and causes extra newlines. See note below.\nAdvice: Use this. Usually this is what you want.\n```\n|```\n Literal style\nturns every newline within the string into a literal newline, and adds one at the end:\n```\nKey: |\n  this is my very very very \n  long string\n```\n\n→ ```\nthis is my very very very\\nlong string\\n```\n\nHere's the official definition from the YAML Spec 1.2\n\nScalar content can be written in block notation, using a literal style (indicated by “|”) where all line breaks are significant. Alternatively, they can be written with the folded style (denoted by “>”) where each line break is folded to a space unless it ends an empty or a more-indented line.\n\nAdvice: Use this for inserting formatted text (especially Markdown) as a value.\nBlock styles with block chomping indicator (```\n>-```\n, ```\n|-```\n, ```\n>+```\n, ```\n|+```\n)\nYou can control the handling of the final new line in the string, and any trailing blank lines (```\n\\n\\n```\n) by adding a block chomping indicator character:\n\n```\n>```\n, ```\n|```\n: \"clip\": keep the line feed, remove the trailing blank lines.\n```\n>-```\n, ```\n|-```\n: \"strip\": remove the line feed, remove the trailing blank lines.\n```\n>+```\n, ```\n|+```\n: \"keep\": keep the line feed, keep trailing blank lines.\n\n\"Flow\" scalar styles (```\n ```\n, ```\n\"```\n, ```\n'```\n)\nThese have limited escaping, and construct a single-line string with no new line characters. They can begin on the same line as the key, or with additional newlines first, which are stripped. Doubled newline characters become one newline.\nplain style (no escaping, no ```\n #```\n or ```\n: ```\n combinations, first character can't be ```\n\"```\n, ```\n'```\n or many other punctuation characters ):\n```\nKey: this is my very very very \n  long string\n```\n\nAdvice: Avoid. May look convenient, but you're liable to shoot yourself in the foot by accidentally using forbidden punctuation and triggering a syntax error.\ndouble-quoted style (```\n\\```\n and ```\n\"```\n must be escaped by ```\n\\```\n, newlines can be inserted with a literal ```\n\\n```\n sequence, lines can be concatenated without spaces with trailing ```\n\\```\n):\n```\nKey: \"this is my very very \\\"very\\\" loooo\\\n  ng string.\\n\\nLove, YAML.\"\n```\n\n→ ```\n\"this is my very very \\\"very\\\" loooong string.\\n\\nLove, YAML.\" ```\n\nAdvice: Use in very specific situations. This is the only way you can break a very long token (like a URL) across lines without adding spaces. And maybe adding newlines mid-line is conceivably useful.\nsingle-quoted style (literal ```\n'```\n must be doubled, no special characters, possibly useful for expressing strings starting with double quotes):\n```\nKey: 'this is my very very \"very\"\n  long string, isn''t it.'\n```\n\n→ ```\n\"this is my very very \\\"very\\\" long string, isn't it.\"```\n\nAdvice: Avoid. Very few benefits, mostly inconvenience.\nBlock styles with indentation indicators\nJust in case the above isn't enough for you, you can add a \"block indentation indicator\" (after your block chomping indicator, if you have one):\n```\n- >8\n        My long string\n        starts over here\n- |+1\n This one\n starts here\n```\n\nNote: Leading spaces in Folded style (```\n>```\n)\nIf you insert extra spaces at the start of not-the-first lines in Folded style, they will be kept, with a bonus newline. (This doesn't happen with flow styles.) Section 6.5:\n\nIn addition, folding does not apply to line breaks surrounding text lines that contain leading white space. Note that such a more-indented line may consist only of such leading white space.\n\n```\n- >\n    my long\n      string\n                    \n    many spaces above\n- my long\n      string\n                    \n    many spaces above\n    \n```\n\n→ ```\n[\"my long\\n  string\\n                \\nmany spaces above\\n\",\"my long string\\nmany spaces above\"]```\n\nSummary\nIn this table, ```\n_```\n means ```\nspace character```\n. ```\n\\n```\n means \"newline character\" (```\n\\n```\n in JavaScript) except under \"Other features\". \"Leading space\" applies after the first line (which establishes the indent)\n\n\n\n\n\n```\n>```\n\n```\n|```\n\n\n```\n\"```\n\n```\n'```\n\n```\n>-```\n\n```\n>+```\n\n```\n|-```\n\n```\n|+```\n\n\n\n\n\nSpaces/newlines converted as:\n\n\n\n\n\n\n\n\n\n\n\nTrailing space →\n_\n_\n\n\n\n_\n_\n_\n_\n\n\nLeading space  →\n\\n_\n\\n_\n\n\n\n\\n_\n\\n_\n\\n_\n\\n_\n\n\nSingle newline →\n_\n\\n\n_\n_\n_\n_\n_\n\\n\n\\n\n\n\nDouble newline →\n\\n\n\\n\\n\n\\n\n\\n\n\\n\n\\n\n\\n\n\\n\\n\n\\n\\n\n\n\nFinal newline  →\n\\n\n\\n\n\n\n\n\n\\n\n\n\\n\n\n\nFinal double newline →\n\n\n\n\n\n\n\\n\\n\n\n\\n\\n\n\n\nHow to create a literal:\n\n\n\n\n\n\n\n\n\n\n\nSingle quote\n'\n'\n'\n'\n''\n'\n'\n'\n'\n\n\nDouble quote\n\"\n\"\n\"\n\\\"\n\"\n\"\n\"\n\"\n\"\n\n\nBackslash\n\\\n\\\n\\\n\\\\\n\\\n\\\n\\\n\\\n\\\n\n\nOther features\n\n\n\n\n\n\n\n\n\n\n\nIn-line newlines with ```\n\\n```\n\n🚫\n🚫\n🚫\n✅\n🚫\n🚫\n🚫\n🚫\n🚫\n\n\nSpaceless newlines with ```\n\\```\n\n🚫\n🚫\n🚫\n✅\n🚫\n🚫\n🚫\n🚫\n🚫\n\n\n```\n #```\n or ```\n: ```\n in value\n✅\n✅\n🚫\n✅\n✅\n✅\n✅\n✅\n✅\n\n\nCan start on sameline as key\n🚫\n🚫\n✅\n✅\n✅\n🚫\n🚫\n🚫\n🚫\n\n\n\nExamples\nNote the trailing spaces on the line before \"spaces.\"\n```\n- >\n  very \"long\"\n  'string' with\n\n  paragraph gap, \\n and        \n  spaces.\n- | \n  very \"long\"\n  'string' with\n\n  paragraph gap, \\n and        \n  spaces.\n- very \"long\"\n  'string' with\n\n  paragraph gap, \\n and        \n  spaces.\n- \"very \\\"long\\\"\n  'string' with\n\n  paragraph gap, \\n and        \n  s\\\n  p\\\n  a\\\n  c\\\n  e\\\n  s.\"\n- 'very \"long\"\n  ''string'' with\n\n  paragraph gap, \\n and        \n  spaces.'\n- >- \n  very \"long\"\n  'string' with\n\n  paragraph gap, \\n and        \n  spaces.\n\n[\n  \"very \\\"long\\\" 'string' with\\nparagraph gap, \\\\n and         spaces.\\n\", \n  \"very \\\"long\\\"\\n'string' with\\n\\nparagraph gap, \\\\n and        \\nspaces.\\n\", \n  \"very \\\"long\\\" 'string' with\\nparagraph gap, \\\\n and spaces.\", \n  \"very \\\"long\\\" 'string' with\\nparagraph gap, \\n and spaces.\", \n  \"very \\\"long\\\" 'string' with\\nparagraph gap, \\\\n and spaces.\", \n  \"very \\\"long\\\" 'string' with\\nparagraph gap, \\\\n and         spaces.\"\n]\n```\n\n```\n*```\n2 block styles, each with 2 possible block chomping indicators (or none), and with 9 possible indentation indicators (or none), 1 plain style and 2 quoted styles: 2 x (2 + 1) x (9 + 1) + 1 + 2 = 63\nSome of this information has also been summarised here.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I change the author and committer name/email for multiple commits?\r\n                \r\nHow do I change the author for a range of commits?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Inserting multiple rows in a single SQL query? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Insert multiple rows WITHOUT repeating the \"INSERT INTO ...\" part of the statement?\r\n                            \r\n                                (18 answers)\r\n                            \r\n                    \r\n                Closed 9 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI have multiple set of data to insert at once, say 4 rows. My table has three columns: ```\nPerson```\n, ```\nId```\n and ```\nOffice```\n.\n\n```\nINSERT INTO MyTable VALUES (\"John\", 123, \"Lloyds Office\");\nINSERT INTO MyTable VALUES (\"Jane\", 124, \"Lloyds Office\");\nINSERT INTO MyTable VALUES (\"Billy\", 125, \"London Office\");\nINSERT INTO MyTable VALUES (\"Miranda\", 126, \"Bristol Office\");\n```\n\n\nCan I insert all 4 rows in a single SQL statement?\n    ", "Answer": "\r\nIn SQL Server 2008 you can insert multiple rows using a single SQL INSERT statement.\n\n```\nINSERT INTO MyTable ( Column1, Column2 ) VALUES\n( Value1, Value2 ), ( Value1, Value2 )\n```\n\n\nFor reference to this have a look at MOC Course 2778A - Writing SQL Queries in SQL Server 2008.\n\nFor example:\n\n```\nINSERT INTO MyTable\n  ( Column1, Column2, Column3 )\nVALUES\n  ('John', 123, 'Lloyds Office'), \n  ('Jane', 124, 'Lloyds Office'), \n  ('Billy', 125, 'London Office'),\n  ('Miranda', 126, 'Bristol Office');\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple \"order by\" in LINQ\r\n                \r\nI have two tables, ```\nmovies```\n and ```\ncategories```\n, and I want to get an ordered list by categoryID first and then by Name.\nThe movie table has three columns ID, Name and CategoryID.\nThe category table has two columns ID and Name.\nI tried something like the following, but it didn't work.\n```\nvar movies = _db.Movies.OrderBy( m => { m.CategoryID, m.Name })\n```\n\n    ", "Answer": "\r\nThis should work for you:\n\n```\nvar movies = _db.Movies.OrderBy(c => c.Category).ThenBy(n => n.Name)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I select an element with multiple classes in jQuery?\r\n                \r\nI want to select all the elements that have the two classes ```\na```\n and ```\nb```\n.\n\n```\n<element class=\"a b\">\n```\n\n\nSo, only the elements that have both classes.\n\nWhen I use ```\n$(\".a, .b\")```\n it gives me the union, but I want the intersection.\n    ", "Answer": "\r\nIf you want to match only elements with both classes (an intersection, like a logical AND), just write the selectors together without spaces in between:\n\n```\n$('.a.b')\n```\n\n\nThe order is not relevant, so you can also swap the classes:\n\n```\n$('.b.a')\n```\n\n\nSo to match a ```\ndiv```\n element that has an ID of ```\na```\n with classes ```\nb```\n and ```\nc```\n, you would write:\n\n```\n$('div#a.b.c')\n```\n\n\n(In practice, you most likely don't need to get that specific, and an ID or class selector by itself is usually enough: ```\n$('#a')```\n.)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Undoing a git rebase\r\n                \r\nHow do I easily undo a git rebase? A lengthy manual method is:\n\ncheckout the commit parent to both of the branches\ncreate and checkout a temporary branch\ncherry-pick all commits by hand\nreset the faulty rebased branch to point to the temporary branch\n\nIn my current situation, this works because I can easily spot commits from both branches (one was my stuff, the other was my colleague's stuff). However, my approach strikes me as suboptimal and error-prone (let's say I had just rebased with two of my own branches).\nClarification: I am talking about a rebase during which multiple commits were replayed, not only one.\n    ", "Answer": "\r\nThe easiest way would be to find the head commit of the branch as it was immediately before the rebase started in the reflog...\n```\ngit reflog\n```\n\nand to reset the current branch to it (with the usual caveats about being absolutely sure before reseting with the ```\n--hard```\n option).\nSuppose the old commit was ```\nHEAD@{2}```\n in the ref log:\n```\ngit reset --hard HEAD@{2}\n```\n\nIn Windows, you may need to quote the reference:\n```\ngit reset --hard \"HEAD@{2}\"\n```\n\nYou can check the history of the candidate old head by just doing a ```\ngit log HEAD@{2}```\n (Windows: ```\ngit log \"HEAD@{2}\"```\n).\nIf you've not disabled per branch reflogs you should be able to simply do ```\ngit reflog branchname@{1}```\n as a rebase detaches the branch head before reattaching to the final head. I would double check this, though as I haven't verified this recently.\nPer default, all reflogs are activated for non-bare repositories:\n```\n[core]\n    logAllRefUpdates = true\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to change the commit author for a single commit?\r\n                \r\nI want to change the author of one specific commit in the history. It's not the latest commit.\nRelated: How do I change the author and committer name/email for multiple commits?\n    ", "Answer": "\r\nInteractive rebase off of a point earlier in the history than the commit you need to modify (```\ngit rebase -i <earliercommit>```\n). In the list of commits being rebased, change the text from ```\npick```\n to ```\nedit```\n next to the hash of the one you want to modify. Then when git prompts you to change the commit, use this:\n\n```\ngit commit --amend --author=\"Author Name <email@address.com>\" --no-edit\n```\n\n\n\n\nFor example, if your commit history is ```\nA-B-C-D-E-F```\n with ```\nF```\n as ```\nHEAD```\n, and you want to change the author of ```\nC```\n and ```\nD```\n, then you would...\n\n\nSpecify ```\ngit rebase -i B```\n (here is an example of what you will see after executing the ```\ngit rebase -i B```\n command)\n\n\nif you need to edit ```\nA```\n, use ```\ngit rebase -i --root```\n\n\nChange the lines for both ```\nC```\n and ```\nD```\n from ```\npick```\n to ```\nedit```\n\nExit the editor (for vim, this would be pressing Esc and then typing ```\n:wq```\n).\nOnce the rebase started, it would first pause at ```\nC```\n\nYou would ```\ngit commit --amend --author=\"Author Name <email@address.com>\"```\n\nThen ```\ngit rebase --continue```\n\nIt would pause again at ```\nD```\n\nThen you would ```\ngit commit --amend --author=\"Author Name <email@address.com>\"```\n again\n```\ngit rebase --continue```\n\nThe rebase would complete.\nUse ```\ngit push -f```\n to update your origin with the updated commits.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to concatenate text from multiple rows into a single text string in SQL Server\r\n                \r\nConsider a database table holding names, with three rows:\n```\nPeter\nPaul\nMary\n```\n\nIs there an easy way to turn this into a single string of ```\nPeter, Paul, Mary```\n?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Break a previous commit into multiple commits\r\n                \r\nWithout creating a branch and doing a bunch of funky work on a new branch, is it possible to break a single commit into a few different commits after it's been committed to the local repository?\n    ", "Answer": "\r\n```\ngit rebase -i```\n will do it.\nFirst, start with a clean working directory: ```\ngit status```\n should show no pending modifications, deletions, or additions.\nNow, you have to decide which commit(s) you want to split.\nA) Splitting the most recent commit\nTo split apart your most recent commit, first:\n```\n$ git reset HEAD~\n```\n\nNow commit the pieces individually in the usual way, producing as many commits as you need.\nB) Splitting a commit farther back\nThis requires rebasing, that is, rewriting history. To specify the correct commit, you have several choices:\n\nIf it is three commits back, then\n```\n  $ git rebase -i HEAD~3\n```\n\nwhere ```\n3```\n is how many commits back it is.\n\nIf it is farther back in the tree than you want to count, then\n```\n  $ git rebase -i 123abcd~\n```\n\nwhere ```\n123abcd```\n is the SHA1 of the commit you want to split up.\n\nIf you are on a different branch (e.g., a feature branch) that you want to merge into ```\nmaster```\n:\n```\n  $ git rebase -i master\n```\n\n\n\nWhen you get the rebase edit screen, find the commit you want to break apart.  At the beginning of that line, replace ```\npick```\n with ```\nedit```\n (```\ne```\n for short).  Save the buffer and exit.  Rebase will now stop just after the commit you want to edit.  Then:\n```\n$ git reset HEAD~\n```\n\nCommit the pieces individually in the usual way, producing as many commits as you need.\nFinally\n```\n$ git rebase --continue\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Selecting multiple columns in a Pandas dataframe\r\n                \r\nHow do I select columns ```\na```\n and ```\nb```\n from ```\ndf```\n, and save them into a new dataframe ```\ndf1```\n?\n```\nindex  a   b   c\n1      2   3   4\n2      3   4   5\n```\n\nUnsuccessful attempt:\n```\ndf1 = df['a':'b']\ndf1 = df.ix[:, 'a':'b']\n```\n\n    ", "Answer": "\r\nThe column names (which are strings) cannot be sliced in the manner you tried.\nHere you have a couple of options. If you know from context which variables you want to slice out, you can just return a view of only those columns by passing a list into the ```\n__getitem__```\n syntax (the []'s).\n```\ndf1 = df[['a', 'b']]\n```\n\nAlternatively, if it matters to index them numerically and not by their name (say your code should automatically do this without knowing the names of the first two columns) then you can do this instead:\n```\ndf1 = df.iloc[:, 0:2] # Remember that Python does not slice inclusive of the ending index.\n```\n\nAdditionally, you should familiarize yourself with the idea of a view into a Pandas object vs. a copy of that object. The first of the above methods will return a new copy in memory of the desired sub-object (the desired slices).\nSometimes, however, there are indexing conventions in Pandas that don't do this and instead give you a new variable that just refers to the same chunk of memory as the sub-object or slice in the original object. This will happen with the second way of indexing, so you can modify it with the ```\n.copy()```\n method to get a regular copy. When this happens, changing what you think is the sliced object can sometimes alter the original object. Always good to be on the look out for this.\n```\ndf1 = df.iloc[0, 0:2].copy() # To avoid the case where changing df1 also changes df\n```\n\nTo use ```\niloc```\n, you need to know the column positions (or indices). As the column positions may change, instead of hard-coding indices, you can use ```\niloc```\n along with ```\nget_loc```\n function of ```\ncolumns```\n method of dataframe object to obtain column indices.\n```\n{df.columns.get_loc(c): c for idx, c in enumerate(df.columns)}\n```\n\nNow you can use this dictionary to access columns through names and using ```\niloc```\n.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Using group by on multiple columns\r\n                \r\nI understand the point of ```\nGROUP BY x```\n.\nBut how does ```\nGROUP BY x, y```\n work, and what does it mean?\n    ", "Answer": "\r\n```\nGroup By X```\n means put all those with the same value for X in the one group.\n```\nGroup By X, Y```\n means put all those with the same values for both X and Y in the one group.\nTo illustrate using an example, let's say we have the following table, to do with who is attending what subject at a university:\n```\nTable: Subject_Selection\n\n+---------+----------+----------+\n| Subject | Semester | Attendee |\n+---------+----------+----------+\n| ITB001  |        1 | John     |\n| ITB001  |        1 | Bob      |\n| ITB001  |        1 | Mickey   |\n| ITB001  |        2 | Jenny    |\n| ITB001  |        2 | James    |\n| MKB114  |        1 | John     |\n| MKB114  |        1 | Erica    |\n+---------+----------+----------+\n```\n\nWhen you use a ```\ngroup by```\n on the subject column only; say:\n```\nselect Subject, Count(*)\nfrom Subject_Selection\ngroup by Subject\n```\n\nYou will get something like:\n```\n+---------+-------+\n| Subject | Count |\n+---------+-------+\n| ITB001  |     5 |\n| MKB114  |     2 |\n+---------+-------+\n```\n\n...because there are 5 entries for ITB001, and 2 for MKB114\nIf we were to ```\ngroup by```\n two columns:\n```\nselect Subject, Semester, Count(*)\nfrom Subject_Selection\ngroup by Subject, Semester\n```\n\nwe would get this:\n```\n+---------+----------+-------+\n| Subject | Semester | Count |\n+---------+----------+-------+\n| ITB001  |        1 |     3 |\n| ITB001  |        2 |     2 |\n| MKB114  |        1 |     2 |\n+---------+----------+-------+\n```\n\nThis is because, when we group by two columns, it is saying \"Group them so that all of those with the same Subject and Semester are in the same group, and then calculate all the aggregate functions (Count, Sum, Average, etc.) for each of those groups\". In this example, this is demonstrated by the fact that, when we count them, there are three people doing ITB001 in semester 1, and two doing it in semester 2. Both of the people doing MKB114 are in semester 1, so there is no row for semester 2 (no data fits into the group \"MKB114, Semester 2\")\nHopefully that makes sense.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I revert multiple Git commits?\r\n                \r\nI have a Git repository that looks like this:\n```\nA <- B <- C <- D <- HEAD\n```\n\nI want the head of the branch to point to A, i.e., I want B, C, D, and HEAD to disappear and I want head to be synonymous with A.\nIt sounds like I can either try to rebase (doesn't apply, since I've pushed changes in between), or revert. But how do I revert multiple commits? Do I revert one at a time? Is the order important?\n    ", "Answer": "\r\nExpanding what I wrote in a comment\nThe general rule is that you should not rewrite (change) history that you have published, because somebody might have based their work on it.  If you rewrite (change) history, you would make problems with merging their changes and with updating for them.\nSo the solution is to create a new commit which reverts changes that you want to get rid of.  You can do this using git revert command.\nYou have the following situation:\n\nA <-- B  <-- C <-- D                                  <-- master <-- HEAD\n\n(arrows here refers to the direction of the pointer: the \"parent\" reference in the case of commits, the top commit in the case of branch head (branch ref), and the name of branch in the case of HEAD reference).\nWhat you need to create is the following:\n\nA <-- B  <-- C <-- D <-- [(BCD)-1]                   <-- master <-- HEAD\n\nwhere ```\n[(BCD)^-1]```\n means the commit that reverts changes in commits B, C, D.  Mathematics tells us that (BCD)-1 = D-1 C-1 B-1, so you can get the required situation using the following commands:\n```\n$ git revert --no-commit D\n$ git revert --no-commit C\n$ git revert --no-commit B\n$ git commit -m \"the commit message for all of them\"\n```\n\nWorks for everything except merge commits.\n\nAlternate solution would be to checkout contents of commit A, and commit this state.  Also works with merge commits.  Added files will not be deleted, however.  If you have any local changes ```\ngit stash```\n them first:\n```\n$ git checkout -f A -- . # checkout that revision over the top of local files\n$ git commit -a\n```\n\nThen you would have the following situation:\n\nA <-- B  <-- C <-- D <-- A'                       <-- master <-- HEAD\n\nThe commit A' has the same contents as commit A, but is a different commit (commit message, parents, commit date).\n\nAlternate solution by Jeff Ferland, modified by Charles Bailey builds upon the same idea, but uses git reset.  Here it is slightly modified, this way WORKS FOR EVERYTHING:\n```\n$ git reset --hard A\n$ git reset --soft D # (or ORIG_HEAD or @{1} [previous location of HEAD]), all of which are D\n$ git commit\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Sort (order) data frame rows by multiple columns\r\n                \r\nI want to sort a data frame by multiple columns. For example, with the data frame below I would like to sort by column 'z' (descending) then by column 'b' (ascending):\n```\ndd <- data.frame(b = factor(c(\"Hi\", \"Med\", \"Hi\", \"Low\"), \n      levels = c(\"Low\", \"Med\", \"Hi\"), ordered = TRUE),\n      x = c(\"A\", \"D\", \"A\", \"C\"), y = c(8, 3, 9, 9),\n      z = c(1, 1, 1, 2))\ndd\n    b x y z\n1  Hi A 8 1\n2 Med D 3 1\n3  Hi A 9 1\n4 Low C 9 2\n```\n\n    ", "Answer": "\r\n                \r\nYou can use the ```\norder()```\n function directly without resorting to add-on tools -- see this simpler answer which uses a trick right from the top of the ```\nexample(order)```\n code:\n\n```\nR> dd[with(dd, order(-z, b)), ]\n    b x y z\n4 Low C 9 2\n2 Med D 3 1\n1  Hi A 8 1\n3  Hi A 9 1\n```\n\n\nEdit some 2+ years later:  It was just asked how to do this by column index. The answer is to simply pass the desired sorting column(s) to the ```\norder()```\n function:\n\n```\nR> dd[order(-dd[,4], dd[,1]), ]\n    b x y z\n4 Low C 9 2\n2 Med D 3 1\n1  Hi A 8 1\n3  Hi A 9 1\nR> \n```\n\n\nrather than using the name of the column (and ```\nwith()```\n for easier/more direct access).\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Group By Multiple Columns\r\n                \r\nHow can I do GroupBy multiple columns in LINQ\nSomething similar to this in SQL:\n```\nSELECT * FROM <TableName> GROUP BY <Column1>,<Column2>\n```\n\nHow can I convert this to LINQ:\n```\nQuantityBreakdown\n(\n    MaterialID int,\n    ProductID int,\n    Quantity float\n)\n\nINSERT INTO @QuantityBreakdown (MaterialID, ProductID, Quantity)\nSELECT MaterialID, ProductID, SUM(Quantity)\nFROM @Transactions\nGROUP BY MaterialID, ProductID\n```\n\n    ", "Answer": "\r\nUse an anonymous type.\n\nEg\n\n```\ngroup x by new { x.Column1, x.Column2 }\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Merge / convert multiple PDF files into one PDF [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     This question does not appear to be about a specific programming problem, a software algorithm, or software tools primarily used by programmers. If you believe the question would be on-topic on another Stack Exchange site, you can leave a comment to explain where the question may be able to be answered.\r\n                \r\n                    \r\n                        Closed 1 year ago.\r\n                    \r\n                \r\n            The community reviewed whether to reopen this question 5 months ago and left it closed:\r\n            \r\n                    Original close reason(s) were not resolved\r\n            \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nHow could I merge / convert multiple PDF files into one large PDF file?\n\nI tried the following, but the content of the target file was not as expected:\n\n```\nconvert file1.pdf file2.pdf merged.pdf\n```\n\n\nI need a very simple/basic command line (CLI) solution. Best would be if I could pipe the output of the merge / convert straight into ```\npdf2ps```\n ( as originally attempted in my previously asked question here: Linux piping ( convert -> pdf2ps -> lp) ).\n    ", "Answer": "\r\nConsidering that ```\npdfunite```\n is part of poppler it has a higher chance to be installed, usage is also simpler than ```\npdftk```\n:\n⚠ IMPORTANT: Just make sure you remember to provide ```\nout.pdf```\n, or else it will overwrite the last input file in your command ⚠\n```\npdfunite in-1.pdf in-2.pdf in-n.pdf out.pdf\n```\n\nA safer solution may include a test of non-existence\ntargeting the output file\n```\nexport output_file=out.pdf && \\\n! test -e $output_file && \\\npdfunite in-1.pdf in-2.pdf in-n.pdf $output_file\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I split the definition of a long string over multiple lines?\r\n                \r\nI have a very long query. I would like to split it in several lines in Python. A way to do it in JavaScript would be using several sentences and joining them with a ```\n+```\n operator (I know, maybe it's not the most efficient way to do it, but I'm not really concerned about performance in this stage, just code readability). Example:\n```\nvar long_string = 'some text not important. just garbage to' +\n                      'illustrate my example';\n```\n\nI tried doing something similar in Python, but it didn't work, so I used ```\n\\```\n to split the long string. However, I'm not sure if this is the only/best/pythonicest way of doing it. It looks awkward.\nActual code:\n```\nquery = 'SELECT action.descr as \"action\", '\\\n    'role.id as role_id,'\\\n    'role.descr as role'\\\n    'FROM '\\\n    'public.role_action_def,'\\\n    'public.role,'\\\n    'public.record_def, '\\\n    'public.action'\\\n    'WHERE role.id = role_action_def.role_id AND'\\\n    'record_def.id = role_action_def.def_id AND'\\\n    'action.id = role_action_def.action_id AND'\\\n    'role_action_def.account_id = ' + account_id + ' AND'\\\n    'record_def.account_id=' + account_id + ' AND'\\\n    'def_id=' + def_id\n```\n\n    ", "Answer": "\r\nAre you talking about multi-line strings? Easy, use triple quotes to start and end them.\n\n```\ns = \"\"\" this is a very\n        long string if I had the\n        energy to type more and more ...\"\"\"\n```\n\n\nYou can use single quotes too (3 of them of course at start and end) and treat the resulting string ```\ns```\n just like any other string.\n\nNOTE: Just as with any string, anything between the starting and ending quotes becomes part of the string, so this example has a leading blank (as pointed out by @root45). This string will also contain both blanks and newlines.\n\nI.e.,:\n\n```\n' this is a very\\n        long string if I had the\\n        energy to type more and more ...'\n```\n\n\nFinally, one can also construct long lines in Python like this:\n\n```\n s = (\"this is a very\"\n      \"long string too\"\n      \"for sure ...\"\n     )\n```\n\n\nwhich will not include any extra blanks or newlines (this is a deliberate example showing what the effect of skipping blanks will result in):\n\n```\n'this is a verylong string toofor sure ...'\n```\n\n\nNo commas required, simply place the strings to be joined together into a pair of parenthesis and be sure to account for any needed blanks and newlines.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Can I concatenate multiple MySQL rows into one field?\r\n                \r\nUsing ```\nMySQL```\n, I can do something like:\n\n```\nSELECT hobbies FROM peoples_hobbies WHERE person_id = 5;\n```\n\n\nMy Output:\n\n```\nshopping\nfishing\ncoding\n```\n\n\nbut instead I just want 1 row, 1 col:\n\nExpected Output:\n\n```\nshopping, fishing, coding\n```\n\n\nThe reason is that I'm selecting multiple values from multiple tables, and after all the joins I've got a lot more rows than I'd like.\n\nI've looked for a function on MySQL Doc and it doesn't look like the ```\nCONCAT```\n or ```\nCONCAT_WS```\n functions accept result sets.\n\nSo does anyone here know how to do this?\n    ", "Answer": "\r\nYou can use ```\nGROUP_CONCAT```\n:\n```\nSELECT person_id,\n   GROUP_CONCAT(hobbies SEPARATOR ', ')\nFROM peoples_hobbies\nGROUP BY person_id;\n```\n\nAs Ludwig stated in his comment, you can add the ```\nDISTINCT```\n operator to avoid duplicates:\n```\nSELECT person_id,\n   GROUP_CONCAT(DISTINCT hobbies SEPARATOR ', ')\nFROM peoples_hobbies\nGROUP BY person_id;\n```\n\nAs Jan stated in their comment, you can also sort the values before imploding it using ```\nORDER BY```\n:\n```\nSELECT person_id, \n       GROUP_CONCAT(hobbies ORDER BY hobbies ASC SEPARATOR ', ')\nFROM peoples_hobbies\nGROUP BY person_id;\n```\n\nAs Dag stated in his comment, there is a 1024 byte limit on the result. To solve this, run this query before your query:\n```\nSET group_concat_max_len = 2048;\n```\n\nOf course, you can change ```\n2048```\n according to your needs. To calculate and assign the value:\n```\nSET group_concat_max_len = CAST(\n                     (SELECT SUM(LENGTH(hobbies)) + COUNT(*) * LENGTH(', ')\n                           FROM peoples_hobbies\n                           GROUP BY person_id) AS UNSIGNED);\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to cherry-pick multiple commits\r\n                \r\nI have two branches. Commit ```\na```\n is the head of one, while the other has ```\nb```\n, ```\nc```\n, ```\nd```\n, ```\ne```\n and ```\nf```\n on top of ```\na```\n. I want to move ```\nc```\n, ```\nd```\n, ```\ne```\n and ```\nf```\n to first branch without commit ```\nb```\n. Using cherry pick it is easy: checkout first branch cherry-pick one by one ```\nc```\n to ```\nf```\n and rebase second branch onto first. But is there any way to cherry-pick all ```\nc```\n-```\nf```\n in one command?\nHere is a visual description of the scenario (thanks JJD):\n\n    ", "Answer": "\r\nGit 1.7.2 introduced the ability to cherry pick a range of commits. From the release notes:\n\n```\ngit cherry-pick```\n learned to pick a range of commits\n(e.g. ```\ncherry-pick A..B```\n and ```\ncherry-pick --stdin```\n), so did ```\ngit revert```\n; these do not support the nicer sequencing control ```\nrebase [-i]```\n has, though.\n\nTo cherry-pick all the commits from commit ```\nA```\n to commit ```\nB```\n (where ```\nA```\n is older than ```\nB```\n), run:\n```\ngit cherry-pick A^..B\n```\n\nIf you want to ignore A itself, run:\n```\ngit cherry-pick A..B\n```\n\nNotes from comments:\n\n```\nA```\n should be older than ```\nB```\n, or ```\nA```\n should be from another branch.\nOn Windows, it should be ```\nA^^..B```\n as the caret needs to be escaped, or it should be ```\n\"A^..B\"```\n (double quotes).\nIn ```\nzsh```\n shell, it should be ```\n'A^..B'```\n (single quotes) as the caret is a special character.\nFor an exposition, see the answer by Gabriel Staples.\n\n(Credits to damian, J. B. Rainsberger, sschaef, Neptilo, Pete and TMin in the comments.)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Access-Control-Allow-Origin Multiple Origin Domains?\r\n                \r\nIs there a way to allow multiple cross-domains using the ```\nAccess-Control-Allow-Origin```\n header?\n\nI'm aware of the ```\n*```\n, but it is too open. I really want to allow just a couple domains.\n\nAs an example, something like this:\n\n```\nAccess-Control-Allow-Origin: http://domain1.example, http://domain2.example\n```\n\n\nI have tried the above code but it does not seem to work in Firefox.\n\nIs it possible to specify multiple domains or am I stuck with just one?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Extract filename and extension in Bash\r\n                \r\nI want to get the filename (without extension) and the extension separately.\n\nThe best solution I found so far is:\n\n```\nNAME=`echo \"$FILE\" | cut -d'.' -f1`\nEXTENSION=`echo \"$FILE\" | cut -d'.' -f2`\n```\n\n\nThis is wrong because it doesn't work if the file name contains multiple ```\n.```\n characters. If, let's say, I have ```\na.b.js```\n, it will consider ```\na```\n and ```\nb.js```\n, instead of ```\na.b```\n and ```\njs```\n.\n\nIt can be easily done in Python with\n\n```\nfile, ext = os.path.splitext(path)\n```\n\n\nbut I'd prefer not to fire up a Python interpreter just for this, if possible.\n\nAny better ideas?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How does Python's super() work with multiple inheritance?\r\n                \r\nHow does ```\nsuper()```\n work with multiple inheritance? For example, given:\n```\nclass First(object):\n    def __init__(self):\n        print \"first\"\n\nclass Second(object):\n    def __init__(self):\n        print \"second\"\n\nclass Third(First, Second):\n    def __init__(self):\n        super(Third, self).__init__()\n        print \"that's it\"\n```\n\nWhich parent method of ```\nThird```\n does ```\nsuper().__init__```\n refer to? Can I choose which runs?\nI know it has something to do with method resolution order (MRO).\n    ", "Answer": "\r\nThis is detailed with a reasonable amount of detail by Guido himself in his blog post Method Resolution Order (including two earlier attempts).\nIn your example, ```\nThird()```\n will call ```\nFirst.__init__```\n. Python looks for each attribute in the class's parents as they are listed left to right. In this case, we are looking for ```\n__init__```\n. So, if you define\n```\nclass Third(First, Second):\n    ...\n```\n\nPython will start by looking at ```\nFirst```\n, and, if ```\nFirst```\n doesn't have the attribute, then it will look at ```\nSecond```\n.\nThis situation becomes more complex when inheritance starts crossing paths (for example if ```\nFirst```\n inherited from ```\nSecond```\n). Read the link above for more details, but, in a nutshell, Python will try to maintain the order in which each class appears on the inheritance list, starting with the child class itself.\nSo, for instance, if you had:\n```\nclass First(object):\n    def __init__(self):\n        print \"first\"\n\nclass Second(First):\n    def __init__(self):\n        print \"second\"\n\nclass Third(First):\n    def __init__(self):\n        print \"third\"\n\nclass Fourth(Second, Third):\n    def __init__(self):\n        super(Fourth, self).__init__()\n        print \"that's it\"\n```\n\nthe MRO would be ```\n[Fourth, Second, Third, First].```\n\nBy the way: if Python cannot find a coherent method resolution order, it'll raise an exception, instead of falling back to behavior which might surprise the user.\nExample of an ambiguous MRO:\n```\nclass First(object):\n    def __init__(self):\n        print \"first\"\n        \nclass Second(First):\n    def __init__(self):\n        print \"second\"\n\nclass Third(First, Second):\n    def __init__(self):\n        print \"third\"\n```\n\nShould ```\nThird```\n's MRO be ```\n[First, Second]```\n or ```\n[Second, First]```\n? There's no obvious expectation, and Python will raise an error:\n```\nTypeError: Error when calling the metaclass bases\n    Cannot create a consistent method resolution order (MRO) for bases Second, First\n```\n\nWhy do the examples above lack ```\nsuper()```\n calls? The point of the examples is to show how the MRO is constructed. They are not intended to print ```\n\"first\\nsecond\\third\"```\n or whatever. You can – and should, of course, play around with the example, add ```\nsuper()```\n calls, see what happens, and gain a deeper understanding of Python's inheritance model. But my goal here is to keep it simple and show how the MRO is built. And it is built as I explained:\n```\n>>> Fourth.__mro__\n(<class '__main__.Fourth'>,\n <class '__main__.Second'>, <class '__main__.Third'>,\n <class '__main__.First'>,\n <type 'object'>)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is multiplication and division using shift operators in C actually faster?\r\n                \r\nMultiplication and division can be achieved using bit operators, for example\n\n```\ni*2 = i<<1\ni*3 = (i<<1) + i;\ni*10 = (i<<3) + (i<<1)\n```\n\n\nand so on.\n\nIs it actually faster to use say ```\n(i<<3)+(i<<1)```\n to multiply with 10 than using ```\ni*10```\n directly? Is there any sort of input that can't be multiplied or divided in this way?\n    ", "Answer": "\r\nShort answer:  Not likely.\n\nLong answer:\nYour compiler has an optimizer in it that knows how to multiply as quickly as your target processor architecture is capable.  Your best bet is to tell the compiler your intent clearly (i.e. i*2 rather than i << 1) and let it decide what the fastest assembly/machine code sequence is.  It's even possible that the processor itself has implemented the multiply instruction as a sequence of shifts & adds in microcode.\n\nBottom line--don't spend a lot of time worrying about this.  If you mean to shift, shift.  If you mean to multiply, multiply.  Do what is semantically clearest--your coworkers will thank you later.  Or, more likely, curse you later if you do otherwise.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Switch statement for multiple cases in JavaScript\r\n                \r\nI need multiple cases in switch statement in JavaScript, Something like:\n```\nswitch (varName)\n{\n   case \"afshin\", \"saeed\", \"larry\":\n       alert('Hey');\n       break;\n\n   default:\n       alert('Default case');\n       break;\n}\n```\n\nHow can I do that? If there's no way to do something like that in JavaScript, I want to know an alternative solution that also follows the DRY concept.\n    ", "Answer": "\r\nUse the fall-through feature of the ```\nswitch```\n statement. A matched case will run until a ```\nbreak```\n (or the end of the ```\nswitch```\n statement) is found, so you could write it like:\n```\nswitch (varName)\n{\n   case \"afshin\":\n   case \"saeed\":\n   case \"larry\": \n       alert('Hey');\n       break;\n\n   default: \n       alert('Default case');\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I merge multiple commits onto another branch as a single squashed commit?\r\n                \r\nI have a remote Git server, here is the scenario which I want to perform:\n\n\nFor each bug/feature I create a different Git branch\nI keep on committing my code in that Git branch with un-official Git messages\nIn top repository we have to do one commit for one bug with official Git message\n\n\nSo how can I merge my branch to remote branch so that they get just one commit for all my check-ins (I even want to provide commit message for this)?\n    ", "Answer": "\r\nSay your bug fix branch is called ```\nbugfix```\n and you want to merge it into ```\nmaster```\n:\n```\ngit checkout master\ngit merge --squash bugfix\ngit commit\n```\n\nThis will take all the commits from the ```\nbugfix```\n branch, squash them into 1 commit, and merge it with your ```\nmaster```\n branch.\n\nExplanation:\n```\ngit checkout master\n```\n\nSwitches to your ```\nmaster```\n branch.\n```\ngit merge --squash bugfix\n```\n\nTakes all commits from the ```\nbugfix```\n branch and groups it for a 1 commit with your current branch.\n(no merge commit appears; you could resolve conflicts manually before following commit)\n```\ngit commit\n```\n\nCreates a single commit from the merged changes.\nOmitting the ```\n-m```\n parameter lets you modify a draft commit message containing every message from your squashed commits before finalizing your commit.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to effectively work with multiple files in Vim\r\n                \r\nI've started using Vim to develop Perl scripts and am starting to find it very powerful. \n\nOne thing I like is to be able to open multiple files at once with:\n\n```\nvi main.pl maintenance.pl\n```\n\n\nand then hop between them with:\n\n```\n:n\n:prev\n```\n\n\nand see which file are open with:\n\n```\n:args\n```\n\n\nAnd to add a file, I can say: \n\n```\n:n test.pl\n```\n\n\nwhich I expect would then be added to my list of files, but instead it wipes out my current file list and when I type ```\n:args```\n I only have ```\ntest.pl```\n open.\n\nSo how can I add and remove files in my args list?\n    ", "Answer": "\r\nWhy not use tabs (introduced in Vim 7)?\nYou can switch between tabs with ```\n:tabn```\n and ```\n:tabp```\n,\nWith ```\n:tabe <filepath>```\n you can add a new tab; and with a regular ```\n:q```\n or ```\n:wq```\n you close a tab.\nIf you map ```\n:tabn```\n and ```\n:tabp```\n to your F7/F8 keys you can easily switch between files.\n\nIf there are not that many files or you don't have Vim 7 you can also split your screen in multiple files: ```\n:sp <filepath>```\n. Then you can switch between splitscreens with Ctrl+W and then an arrow key in the direction you want to move (or instead of arrow keys, w for next and W for previous splitscreen)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Return multiple values in JavaScript?\r\n                \r\nI am trying to return two values in JavaScript. Is this possible?  \n\n```\nvar newCodes = function() {  \n    var dCodes = fg.codecsCodes.rs;\n    var dCodes2 = fg.codecsCodes2.rs;\n    return dCodes, dCodes2;\n};\n```\n\n    ", "Answer": "\r\nNo, but you could return an array containing your values:\n```\nfunction getValues() {\n    return [getFirstValue(), getSecondValue()]\n}\n```\n\nThen you can access them like so:\n```\nconst [first, second] = getValues()\n```\n\nThis is called destructuring assignment and is supported by every major JS environment. It's equivalent to the following:\n```\nconst values = getValues()\nconst first = values[0]\nconst second = values[1]\n```\n\nYou can also return an object if you want to assign a name to each value:\n```\nfunction getValues() {\n    return {\n        first: getFirstValue(),\n        second: getSecondValue(),\n    }\n}\n```\n\nAnd to access them:\n```\nconst {first, second} = getValues()\n```\n\nWhich is the same as:\n```\nconst values = getValues()\nconst first = values.first\nconst second = values.second\n```\n\nIt is highly recommended to return an object instead of an array unless the values make sense as a simple tuple, e.g. a coordinate pair ```\n[x, y]```\n. With an array, it's easy to forget which value is which, it's harder to add more values later, and it's marginally more difficult to correctly type with TypeScript or JSDoc.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "numpy matrix vector multiplication [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        how does multiplication differ for NumPy Matrix vs Array classes?\r\n                            \r\n                                (8 answers)\r\n                            \r\n                    \r\n                Closed 9 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nWhen I multiply two ```\nnumpy```\n arrays of sizes (n x n)*(n x 1), I get a matrix of size (n x n). Following normal matrix multiplication rules, an (n x 1) vector is expected, but I simply cannot find any information about how this is done in Python's Numpy module.\nThe thing is that I don't want to implement it manually to preserve the speed of the program.\nExample code is shown below:\n```\na = np.array([[5, 1, 3], [1, 1, 1], [1, 2, 1]])\nb = np.array([1, 2, 3])\n\nprint a*b\n   >>\n   [[5 2 9]\n   [1 2 3]\n   [1 4 3]]\n```\n\nWhat I want is:\n```\nprint a*b\n   >>\n   [16 6 8]\n```\n\n    ", "Answer": "\r\nSimplest solution\nUse ```\nnumpy.dot```\n or ```\na.dot(b)```\n. See the documentation here.\n```\n>>> a = np.array([[ 5, 1 ,3], \n                  [ 1, 1 ,1], \n                  [ 1, 2 ,1]])\n>>> b = np.array([1, 2, 3])\n>>> print a.dot(b)\narray([16, 6, 8])\n```\n\nThis occurs because numpy arrays are not matrices, and the standard operations ```\n*, +, -, /```\n work element-wise on arrays.\nNote that while you can use ```\nnumpy.matrix```\n (as of early 2021) where ```\n*```\n will be treated like standard matrix multiplication, ```\nnumpy.matrix```\n is deprecated and may be removed in future releases.. See the note in its documentation (reproduced below):\n\nIt is no longer recommended to use this class, even for linear algebra. Instead use regular arrays. The class may be removed in the future.\n\nThanks @HopeKing.\n\nOther Solutions\nAlso know there are other options:\n\nAs noted below, if using python3.5+ and numpy v1.10+, the ```\n@```\n operator works as you'd expect:\n```\n>>> print(a @ b)\narray([16, 6, 8])\n```\n\n\nIf you want overkill, you can use ```\nnumpy.einsum```\n.  The documentation will give you a flavor for how it works, but honestly, I didn't fully understand how to use it until reading this answer and just playing around with it on my own.\n```\n>>> np.einsum('ji,i->j', a, b)\narray([16, 6, 8])\n```\n\n\nAs of mid 2016 (numpy 1.10.1), you can try the experimental ```\nnumpy.matmul```\n, which works like ```\nnumpy.dot```\n with two major exceptions: no scalar multiplication but it works with stacks of matrices.\n```\n>>> np.matmul(a, b)\narray([16, 6, 8])\n```\n\n\n```\nnumpy.inner```\n functions the same way as ```\nnumpy.dot```\n for matrix-vector multiplication but behaves differently for matrix-matrix and tensor multiplication (see Wikipedia regarding the differences between the inner product and dot product in general or see this SO answer regarding numpy's implementations).\n```\n>>> np.inner(a, b)\narray([16, 6, 8])\n\n# Beware using for matrix-matrix multiplication though!\n>>> b = a.T\n>>> np.dot(a, b)\narray([[35,  9, 10],\n       [ 9,  3,  4],\n       [10,  4,  6]])\n>>> np.inner(a, b) \narray([[29, 12, 19],\n       [ 7,  4,  5],\n       [ 8,  5,  6]])\n```\n\n\nIf you have multiple 2D arrays to ```\ndot```\n together, you may consider the  ```\nnp.linalg.multi_dot```\n function, which simplifies the syntax of many nested ```\nnp.dot```\ns.  Note that this only works with 2D arrays (i.e. not for matrix-vector multiplication).\n```\n  >>> np.dot(np.dot(a, a.T), a).dot(a.T)\n  array([[1406,  382,  446],\n         [ 382,  106,  126],\n         [ 446,  126,  152]])\n  >>> np.linalg.multi_dot((a, a.T, a, a.T))\n  array([[1406,  382,  446],\n         [ 382,  106,  126],\n         [ 446,  126,  152]])\n```\n\n\n\n\nRarer options for edge cases\n\nIf you have tensors (arrays of dimension greater than or equal to one), you can use ```\nnumpy.tensordot```\n with the optional argument ```\naxes=1```\n:\n```\n>>> np.tensordot(a, b, axes=1)\narray([16,  6,  8])\n```\n\n\nDon't use ```\nnumpy.vdot```\n if you have a matrix of complex numbers, as the matrix will be flattened to a 1D array, then it will try to find the complex conjugate dot product between your flattened matrix and vector (which will fail due to a size mismatch ```\nn*m```\n vs ```\nn```\n).\n\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to create RecyclerView with multiple view types\r\n                \r\nFrom Create dynamic lists with RecyclerView:\nWhen we create a ```\nRecyclerView.Adapter```\n we have to specify ```\nViewHolder```\n that will bind with the adapter.\n```\npublic class MyAdapter extends RecyclerView.Adapter<MyAdapter.ViewHolder> {\n\n    private String[] mDataset;\n\n    public MyAdapter(String[] myDataset) {\n        mDataset = myDataset;\n    }\n\n    public static class ViewHolder extends RecyclerView.ViewHolder {\n        public TextView mTextView;\n        public ViewHolder(TextView v) {\n            super(v);\n            mTextView = v;\n        }\n    }\n\n    @Override\n    public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.some_layout, parent, false);\n\n        //findViewById...\n\n        ViewHolder vh = new ViewHolder(v);\n        return vh;\n    }\n\n    @Override\n    public void onBindViewHolder(ViewHolder holder, int position) {\n        holder.mTextView.setText(mDataset[position]);\n    }\n\n    @Override\n    public int getItemCount() {\n        return mDataset.length;\n    }\n}\n```\n\nIs it possible to create ```\nRecyclerView```\n with multiple view types?\n    ", "Answer": "\r\nYes, it's possible. Just implement getItemViewType(), and take care of the ```\nviewType```\n parameter in ```\nonCreateViewHolder()```\n.\n\nSo you do something like:\n\n```\npublic class MyAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {\n    class ViewHolder0 extends RecyclerView.ViewHolder {\n        ...\n        public ViewHolder0(View itemView){\n        ...\n        }\n    }\n\n    class ViewHolder2 extends RecyclerView.ViewHolder {\n        ...\n        public ViewHolder2(View itemView){\n        ...\n    }\n\n    @Override\n    public int getItemViewType(int position) {\n        // Just as an example, return 0 or 2 depending on position\n        // Note that unlike in ListView adapters, types don't have to be contiguous\n        return position % 2 * 2;\n    }\n\n    @Override\n    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n         switch (viewType) {\n             case 0: return new ViewHolder0(...);\n             case 2: return new ViewHolder2(...);\n             ...\n         }\n    }\n\n    @Override\n    public void onBindViewHolder(final RecyclerView.ViewHolder holder, final int position) {\n        switch (holder.getItemViewType()) {\n            case 0:\n                ViewHolder0 viewHolder0 = (ViewHolder0)holder;\n                ...\n                break;\n\n            case 2:\n                ViewHolder2 viewHolder2 = (ViewHolder2)holder;\n                ...\n                break;\n        }\n    }\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Alternatives for returning multiple values from a Python function [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is opinion-based. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it can be answered with facts and citations by editing this post.\r\n                \r\n                    \r\n                        Closed 4 years ago.\r\n                    \r\n                \r\n            This post was edited and submitted for review 11 months ago and failed to reopen the post:\r\n            \r\n                    Original close reason(s) were not resolved\r\n            \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nThe canonical way to return multiple values in languages that support it is often tupling.\nOption: Using a tuple\nConsider this trivial example:\n```\ndef f(x):\n  y0 = x + 1\n  y1 = x * 3\n  y2 = y0 ** y3\n  return (y0, y1, y2)\n```\n\nHowever, this quickly gets problematic as the number of values returned increases. What if you want to return four or five values? Sure, you could keep tupling them, but it gets easy to forget which value is where. It's also rather ugly to unpack them wherever you want to receive them.\nOption: Using a dictionary\nThe next logical step seems to be to introduce some sort of 'record notation'. In Python, the obvious way to do this is by means of a ```\ndict```\n.\nConsider the following:\n```\ndef g(x):\n  y0 = x + 1\n  y1 = x * 3\n  y2 = y0 ** y3\n  return {'y0': y0, 'y1': y1 ,'y2': y2}\n```\n\n(Just to be clear, y0, y1, and y2 are just meant as abstract identifiers. As pointed out, in practice you'd use meaningful identifiers.)\nNow, we have a mechanism whereby we can project out a particular member of the returned object. For example,\n```\nresult['y0']\n```\n\nOption: Using a class\nHowever, there is another option. We could instead return a specialized structure. I've framed this in the context of Python, but I'm sure it applies to other languages as well. Indeed, if you were working in C this might very well be your only option. Here goes:\n```\nclass ReturnValue:\n  def __init__(self, y0, y1, y2):\n     self.y0 = y0\n     self.y1 = y1\n     self.y2 = y2\n\ndef g(x):\n  y0 = x + 1\n  y1 = x * 3\n  y2 = y0 ** y3\n  return ReturnValue(y0, y1, y2)\n```\n\nIn Python the previous two are perhaps very similar in terms of plumbing - after all ```\n{ y0, y1, y2 }```\n just end up being entries in the internal ```\n__dict__```\n of the ```\nReturnValue```\n.\nThere is one additional feature provided by Python though for tiny objects, the ```\n__slots__```\n attribute. The class could be expressed as:\n```\nclass ReturnValue(object):\n  __slots__ = [\"y0\", \"y1\", \"y2\"]\n  def __init__(self, y0, y1, y2):\n     self.y0 = y0\n     self.y1 = y1\n     self.y2 = y2\n```\n\nFrom the Python Reference Manual:\n\nThe ```\n__slots__```\n declaration takes a sequence of instance variables and reserves just enough space in each instance to hold a value for each variable. Space is saved because ```\n__dict__```\n is not created for each instance.\n\nOption: Using a dataclass (Python 3.7+)\nUsing Python 3.7's new dataclasses, return a class with automatically added special methods, typing and other useful tools:\n```\n@dataclass\nclass Returnvalue:\n    y0: int\n    y1: float\n    y3: int\n\ndef total_cost(x):\n    y0 = x + 1\n    y1 = x * 3\n    y2 = y0 ** y3\n    return ReturnValue(y0, y1, y2)\n```\n\nOption: Using a list\nAnother suggestion which I'd overlooked comes from Bill the Lizard:\n```\ndef h(x):\n  result = [x + 1]\n  result.append(x * 3)\n  result.append(y0 ** y3)\n  return result\n```\n\nThis is my least favorite method though. I suppose I'm tainted by exposure to Haskell, but the idea of mixed-type lists has always felt uncomfortable to me. In this particular example the list is -not- mixed type, but it conceivably could be.\nA list used in this way really doesn't gain anything with respect to the tuple as far as I can tell. The only real difference between lists and tuples in Python is that lists are mutable, whereas tuples are not.\nI personally tend to carry over the conventions from functional programming: use lists for any number of elements of the same type, and tuples for a fixed number of elements of predetermined types.\nQuestion\nAfter the lengthy preamble, comes the inevitable question. Which method (do you think) is best?\n    ", "Answer": "\r\nNamed tuples were added in 2.6 for this purpose.  Also see os.stat for a similar builtin example.\n\n```\n>>> import collections\n>>> Point = collections.namedtuple('Point', ['x', 'y'])\n>>> p = Point(1, y=2)\n>>> p.x, p.y\n1 2\n>>> p[0], p[1]\n1 2\n```\n\n\nIn recent versions of Python 3 (3.6+, I think), the new ```\ntyping```\n library got the ```\nNamedTuple```\n class to make named tuples easier to create and more powerful. Inheriting from ```\ntyping.NamedTuple```\n lets you use docstrings, default values, and type annotations.\n\nExample (From the docs):\n\n```\nclass Employee(NamedTuple):  # inherit from typing.NamedTuple\n    name: str\n    id: int = 3  # default value\n\nemployee = Employee('Guido')\nassert employee.id == 3\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "SQL multiple column ordering\r\n                \r\nHow can I sort multiple columns in SQL and in different directions? For instance,  'column1' would be sorted descendingly and 'column2' ascendingly.\n    ", "Answer": "\r\n```\nORDER BY column1 DESC, column2\n```\n\n\nThis sorts everything by ```\ncolumn1```\n (descending) first, and then by ```\ncolumn2```\n (ascending, which is the default) whenever the ```\ncolumn1```\n fields for two or more rows are equal.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Best way to use multiple SSH private keys on one client [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     This question does not appear to be about a specific programming problem, a software algorithm, or software tools primarily used by programmers. If you believe the question would be on-topic on another Stack Exchange site, you can leave a comment to explain where the question may be able to be answered.\r\n                \r\n                    \r\n                        Closed 2 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI want to use multiple private keys to connect to different servers or different portions of the same server (my uses are system administration of server, administration of Git, and normal Git usage within the same server). I tried simply stacking the keys in the ```\nid_rsa```\n files to no avail.\n\nApparently a straightforward way to do this is to use the command \n\n```\nssh -i <key location> login@server.example.com \n```\n\n\nThat is quite cumbersome.\n\nAny suggestions as to how to go about doing this a bit easier?\n    ", "Answer": "\r\nFrom my ```\n.ssh/config```\n:\n```\nHost myshortname realname.example.com\n    HostName realname.example.com\n    IdentityFile ~/.ssh/realname_rsa # private key for realname\n    User remoteusername\n\nHost myother realname2.example.org\n    HostName realname2.example.org\n    IdentityFile ~/.ssh/realname2_rsa  # different private key for realname2\n    User remoteusername\n```\n\nThen you can use the following to connect:\n```\nssh myshortname```\n\n```\nssh myother```\n\nAnd so on.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Docker Compose - How to execute multiple commands?\r\n                \r\nI want to do something like this where I can run multiple commands in the following code:\n```\ndb:\n  image: postgres\nweb:\n  build: .\n  command: python manage.py migrate\n  command: python manage.py runserver 0.0.0.0:8000\n  volumes:\n    - .:/code\n  ports:\n    - \"8000:8000\"\n  links:\n    - db\n```\n\nHow could I execute multiple commands?\n    ", "Answer": "\r\nFigured it out, use ```\nbash -c```\n.\n\nExample:\n\n```\ncommand: bash -c \"python manage.py migrate && python manage.py runserver 0.0.0.0:8000\"\n```\n\n\nSame example in multilines:\n\n```\ncommand: >\n    bash -c \"python manage.py migrate\n    && python manage.py runserver 0.0.0.0:8000\"\n```\n\n\nOr:\n\n```\ncommand: bash -c \"\n    python manage.py migrate\n    && python manage.py runserver 0.0.0.0:8000\n  \"\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Can I specify multiple users for myself in .gitconfig?\r\n                \r\nIn my ```\n~/.gitconfig```\n, I list my personal email address under ```\n[user]```\n, since that's what I want to use for Github repos.\n\nBut, I've recently started using git for work, too. My company's git repo allows me to commit, but when it sends out announcements of new changesets, it says they are from Anonymous because it doesn't recognize the email address in my ```\n.gitconfig```\n - at least, that's my theory.\n\nIs it possible to specify multiple ```\n[user]```\n definitions in ```\n.gitconfig```\n? Or is there some other way to override the default ```\n.gitconfig```\n for a certain directory? In my case, I check out all work code in ```\n~/worksrc/```\n - is there a way to specify a ```\n.gitconfig```\n for only that directory (and its subdirectories)?\n    ", "Answer": "\r\nYou can configure an individual repo to use a specific user / email address which overrides the global configuration.  From the root of the repo, run\n\n```\ngit config user.name \"Your Name Here\"\ngit config user.email your@email.com\n```\n\n\nwhereas the default user / email is configured in your ~/.gitconfig\n\n```\ngit config --global user.name \"Your Name Here\"\ngit config --global user.email your@email.com\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Xcode 10 Error: Multiple commands produce\r\n                \r\n\nerror: Multiple commands produce '/Users/uesr/Library/Developer/Xcode/DerivedData/OptimalLive-fxatvygbofczeyhjsawtebkimvwx/Build/Products/Debug-iphoneos/OptimalLive.app/Info.plist':\n1) Target 'OptimalLive' has copy command from '/Users/uesr/Desktop/workSpace/SEALIVE/SeaLive1.1/OptimalLive/Info.plist' to '/Users/uesr/Library/Developer/Xcode/DerivedData/OptimalLive-fxatvygbofczeyhjsawtebkimvwx/Build/Products/Debug-iphoneos/OptimalLive.app/Info.plist'\n2) Target 'OptimalLive' has copy command from '/Users/uesr/Desktop/workSpace/SEALIVE/SeaLive1.1/OptimalLive/Server/Masonry/Info.plist' to '/Users/uesr/Library/Developer/Xcode/DerivedData/OptimalLive-fxatvygbofczeyhjsawtebkimvwx/Build/Products/Debug-iphoneos/OptimalLive.app/Info.plist'\n3) Target 'OptimalLive' has process command with input '/Users/uesr/Desktop/workSpace/SEALIVE/SeaLive1.1/OptimalLive/Info.plist'\n\nRunning the code in Xcode 9 works, but there is an error in Xcode 10.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to deal with floating point number precision in JavaScript? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Is floating point math broken?\r\n                            \r\n                                (33 answers)\r\n                            \r\n                    \r\n                Closed 5 months ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI have the following dummy test script:\n\n\r\n\r\n```\nfunction test() {\r\n  var x = 0.1 * 0.2;\r\n  document.write(x);\r\n}\r\ntest();```\n\r\n\r\n\r\n\n\nThis will print the result ```\n0.020000000000000004```\n while it should just print ```\n0.02```\n (if you use your calculator). As far as I understood this is due to errors in the floating point multiplication precision.\n\nDoes anyone have a good solution so that in such case I get the correct result ```\n0.02```\n? I know there are functions like ```\ntoFixed```\n or rounding would be another possibility, but I'd like to really have the whole number printed without any cutting and rounding. Just wanted to know if one of you has some nice, elegant solution.\n\nOf course, otherwise I'll round to some 10 digits or so.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Removing multiple files from a Git repo that have already been deleted from disk\r\n                \r\nI have a Git repo that I have deleted four files from using ```\nrm```\n (not ```\ngit rm```\n), and my Git status looks like this:\n\n```\n#    deleted:    file1.txt\n#    deleted:    file2.txt\n#    deleted:    file3.txt\n#    deleted:    file4.txt\n```\n\n\nHow do I remove these files from Git without having to manually go through and add each file like this:\n\n```\ngit rm file1 file2 file3 file4\n```\n\n\nIdeally, I'm looking for something that works in the same way that ```\ngit add .```\n does, if that's possible.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Extracting bits with a single multiplication\r\n                \r\nI saw an interesting technique used in an answer to another question, and would like to understand it a little better.\n\nWe're given an unsigned 64-bit integer, and we are interested in the following bits:\n\n```\n1.......2.......3.......4.......5.......6.......7.......8.......\n```\n\n\nSpecifically, we'd like to move them to the top eight positions, like so:\n\n```\n12345678........................................................\n```\n\n\nWe don't care about the value of the bits indicated by ```\n.```\n, and they don't have to be preserved.\n\nThe solution was to mask out the unwanted bits, and multiply the result by ```\n0x2040810204081```\n. This, as it turns out, does the trick.\n\nHow general is this method? Can this technique be used to extract any subset of bits? If not, how does one figure out whether or not the method works for a particular set of bits?\n\nFinally, how would one go about finding the (a?) correct multiplier to extract the given bits?\n    ", "Answer": "\r\nVery interesting question, and clever trick.\n\nLet's look at a simple example of getting a single byte manipulated. Using unsigned 8 bit for simplicity. Imagine your number is ```\nxxaxxbxx```\n and you want ```\nab000000```\n.\n\nThe solution consisted of two steps: a bit masking, followed by multiplication. The bit mask is a simple AND operation that turns uninteresting bits to zeros. In the above case, your mask would be ```\n00100100```\n and the result ```\n00a00b00```\n. \n\nNow the hard part: turning that into ```\nab......```\n.\n\nA multiplication is a bunch of shift-and-add operations. The key is to allow overflow to \"shift away\" the bits we don't need and put the ones we want in the right place.\n\nMultiplication by 4 (```\n00000100```\n) would shift everything left by 2 and get you to ```\na00b0000```\n .  To get the ```\nb```\n to move up we need to multiply by 1 (to keep the a in the right place) + 4 (to move the b up). This sum is 5, and combined with the earlier 4 we get a magic number of 20, or ```\n00010100```\n. The original was ```\n00a00b00```\n after masking; the multiplication gives:\n\n```\n000000a00b000000\n00000000a00b0000 +\n----------------\n000000a0ab0b0000\nxxxxxxxxab......\n```\n\n\nFrom this approach you can extend to larger numbers and more bits.\n\nOne of the questions you asked was \"can this be done with any number of bits?\" I think the answer is \"no\", unless you allow several masking operations, or several multiplications. The problem is the issue of \"collisions\" - for example, the \"stray b\" in the problem above. Imagine we need to do this to a number like ```\nxaxxbxxcx```\n. Following the earlier approach, you would think we need {x 2, x {1 + 4 + 16}} = x 42 (oooh - the answer to everything!). Result:\n\n```\n00000000a00b00c00\n000000a00b00c0000\n0000a00b00c000000\n-----------------\n0000a0ababcbc0c00\nxxxxxxxxabc......\n```\n\n\nAs you can see, it still works, but \"only just\". They key here is that there is \"enough space\" between the bits we want that we can squeeze everything up. I could not add a fourth bit d right after c, because I would get instances where I get c+d, bits might carry, ...\n\nSo without formal proof, I would answer the more interesting parts of your question as follows: \"No, this will not work for any number of bits. To extract N bits, you need (N-1) spaces between the bits you want to extract, or have additional mask-multiply steps.\"\n\nThe only exception I can think of for the \"must have (N-1) zeros between bits\" rule is this: if you want to extract two bits that are adjacent to each other in the original, AND you want to keep them in the same order, then you can still do it. And for the purpose of the (N-1) rule they count as two bits. \n\nThere is another insight - inspired by the answer of @Ternary below (see my comment there). For each interesting bit, you only need as many zeros to the right of it as you need space for bits that need to go there. But also, it needs as many bits to the left as it has result-bits to the left. So if a bit b ends up in position m of n, then it needs to have m-1 zeros to its left, and n-m zeros to its right. Especially when the bits are not in the same order in the original number as they will be after the re-ordering, this is an important improvement to the original criteria. This means, for example, that a 16 bit word\n\n```\na...e.b...d..c..\n```\n\n\nCan be shifted into\n\n```\nabcde...........\n```\n\n\neven though there is only one space between e and b, two between d and c, three between the others. Whatever happened to N-1?? In this case, ```\na...e```\n becomes \"one block\" - they are multiplied by 1 to end up in the right place, and so \"we got e for free\". The same is true for b and d (b needs three spaces to the right, d needs the same three to its left). So when we compute the magic number, we find there are duplicates:\n\n```\na: << 0  ( x 1    )\nb: << 5  ( x 32   )\nc: << 11 ( x 2048 )\nd: << 5  ( x 32   )  !! duplicate\ne: << 0  ( x 1    )  !! duplicate\n```\n\n\nClearly, if you wanted these numbers in a different order, you would have to space them further. We can reformulate the ```\n(N-1)```\n rule: \"It will always work if there are at least (N-1) spaces between bits; or, if the order of bits in the final result is known, then if a bit b ends up in position m of n, it needs to have m-1 zeros to its left, and n-m zeros to its right.\"\n\n@Ternary pointed out that this rule doesn't quite work, as there can be a carry from bits adding \"just to the right of the target area\" - namely, when the bits we're looking for are all ones. Continuing the example I gave above with the five tightly packed bits in a 16 bit word: if we start with\n\n```\na...e.b...d..c..\n```\n\n\nFor simplicity, I will name the bit positions ```\nABCDEFGHIJKLMNOP```\n\n\nThe math we were going to do was\n\n```\nABCDEFGHIJKLMNOP\n\na000e0b000d00c00\n0b000d00c0000000\n000d00c000000000\n00c0000000000000 +\n----------------\nabcded(b+c)0c0d00c00\n```\n\n\nUntil now, we thought anything below ```\nabcde```\n (positions ```\nABCDE```\n) would not matter, but in fact, as @Ternary pointed out, if ```\nb=1, c=1, d=1```\n then ```\n(b+c)```\n in position ```\nG```\n will cause a bit to carry to position ```\nF```\n, which means that ```\n(d+1)```\n in position ```\nF```\n will carry a bit into ```\nE```\n - and our result is spoilt. Note that space to the right of the least significant bit of interest (```\nc```\n in this example) doesn't matter, since the multiplication will cause padding with zeros from beyone the least significant bit.\n\nSo we need to modify our (m-1)/(n-m) rule. If there is more than one bit that has \"exactly (n-m) unused bits to the right (not counting the last bit in the pattern - \"c\" in the example above), then we need to strengthen the rule - and we have to do so iteratively!\n\nWe have to look not only at the number of bits that meet the (n-m) criterion, but also the ones that are at (n-m+1), etc. Let's call their number Q0 (exactly ```\nn-m```\n to next bit), Q1 (n-m+1), up to Q(N-1) (n-1). Then we risk carry if\n\n```\nQ0 > 1\nQ0 == 1 && Q1 >= 2\nQ0 == 0 && Q1 >= 4\nQ0 == 1 && Q1 > 1 && Q2 >=2\n... \n```\n\n\nIf you look at this, you can see that if you write a simple mathematical expression\n\n```\nW = N * Q0 + (N - 1) * Q1 + ... + Q(N-1)\n```\n\n\nand the result is ```\nW > 2 * N```\n, then you need to increase the RHS criterion by one bit to ```\n(n-m+1)```\n. At this point, the operation is safe as long as ```\nW < 4```\n; if that doesn't work, increase the criterion one more, etc.\n\nI think that following the above will get you a long way to your answer...\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why is MATLAB so fast in matrix multiplication?\r\n                \r\nI am making some benchmarks with CUDA, C++, C#, Java, and using MATLAB for verification and matrix generation.  When I perform matrix multiplication with MATLAB, ```\n2048x2048```\n and even bigger matrices are almost instantly multiplied.\n```\n             1024x1024   2048x2048   4096x4096\n             ---------   ---------   ---------\nCUDA C (ms)      43.11      391.05     3407.99\nC++ (ms)       6137.10    64369.29   551390.93\nC# (ms)       10509.00   300684.00  2527250.00\nJava (ms)      9149.90    92562.28   838357.94\nMATLAB (ms)      75.01      423.10     3133.90\n```\n\nOnly CUDA is competitive, but I thought that at least C++ will be somewhat close and not 60 times slower. I also don't know what to think about the C# results. The algorithm is just the same as C++ and Java, but there's a giant jump ```\n2048```\n from ```\n1024```\n.\nHow is MATLAB performing matrix multiplication so fast?\nC++ Code:\n```\nfloat temp = 0;\ntimer.start();\nfor(int j = 0; j < rozmer; j++)\n{\n    for (int k = 0; k < rozmer; k++)\n    {\n        temp = 0;\n        for (int m = 0; m < rozmer; m++)\n        {\n            temp = temp + matice1[j][m] * matice2[m][k];\n        }\n        matice3[j][k] = temp;\n    }\n}\ntimer.stop();\n```\n\n    ", "Answer": "\r\nThis kind of question is recurring and should be answered more clearly than \"MATLAB uses highly optimized libraries\" or \"MATLAB uses the MKL\" for once on Stack Overflow.\n\nHistory:\n\nMatrix multiplication (together with Matrix-vector, vector-vector multiplication and many of the matrix decompositions) is (are) the most important problems in linear algebra. Engineers have been solving these problems with computers since the early days.\n\nI'm not an expert on the history, but apparently back then, everybody just rewrote his FORTRAN version with simple loops. Some standardization then came along, with the identification of \"kernels\" (basic routines) that most linear algebra problems needed in order to be solved. These basic operations were then standardized in a specification called: Basic Linear Algebra Subprograms (BLAS). Engineers could then call these standard, well-tested BLAS routines in their code, making their work much easier.\n\nBLAS:\n\nBLAS evolved from level 1 (the first version which defined scalar-vector and vector-vector operations) to level 2 (vector-matrix operations) to level 3 (matrix-matrix operations), and provided more and more \"kernels\" so standardized more and more of the fundamental linear algebra operations. The original FORTRAN 77 implementations are still available on Netlib's website.\n\nTowards better performance:\n\nSo over the years (notably between the BLAS level 1 and level 2 releases: early 80s), hardware changed, with the advent of vector operations and cache hierarchies. These evolutions made it possible to increase the performance of the BLAS subroutines substantially. Different vendors then came along with their implementation of BLAS routines which were more and more efficient.\n\nI don't know all the historical implementations (I was not born or a kid back then), but two of the most notable ones came out in the early 2000s: the Intel MKL and GotoBLAS. Your Matlab uses the Intel MKL, which is a very good, optimized BLAS, and that explains the great performance you see.\n\nTechnical details on Matrix multiplication:\n\nSo why is Matlab (the MKL) so fast at ```\ndgemm```\n (double-precision general matrix-matrix multiplication)? In simple terms: because it uses vectorization and good caching of data. In more complex terms: see the article provided by Jonathan Moore.\n\nBasically, when you perform your multiplication in the C++ code you provided, you are not at all cache-friendly. Since I suspect you created an array of pointers to row arrays, your accesses in your inner loop to the k-th column of \"matice2\": ```\nmatice2[m][k]```\n are very slow. Indeed, when you access ```\nmatice2[0][k]```\n, you must get the k-th element of the array 0 of your matrix. Then in the next iteration, you must access ```\nmatice2[1][k]```\n, which is the k-th element of another array (the array 1). Then in the next iteration you access yet another array, and so on... Since the entire matrix ```\nmatice2```\n can't fit in the highest caches (it's ```\n8*1024*1024```\n bytes large), the program must fetch the desired element from main memory, losing a lot of time.\n\nIf you just transposed the matrix, so that accesses would be in contiguous memory addresses, your code would already run much faster because now the compiler can load entire rows in the cache at the same time. Just try this modified version:\n\n```\ntimer.start();\nfloat temp = 0;\n//transpose matice2\nfor (int p = 0; p < rozmer; p++)\n{\n    for (int q = 0; q < rozmer; q++)\n    {\n        tempmat[p][q] = matice2[q][p];\n    }\n}\nfor(int j = 0; j < rozmer; j++)\n{\n    for (int k = 0; k < rozmer; k++)\n    {\n        temp = 0;\n        for (int m = 0; m < rozmer; m++)\n        {\n            temp = temp + matice1[j][m] * tempmat[k][m];\n        }\n        matice3[j][k] = temp;\n    }\n}\ntimer.stop();\n```\n\n\nSo you can see how just cache locality increased your code's performance quite substantially. Now real ```\ndgemm```\n implementations exploit that to a very extensive level: They perform the multiplication on blocks of the matrix defined by the size of the TLB (Translation lookaside buffer, long story short: what can effectively be cached), so that they stream to the processor exactly the amount of data it can process. The other aspect is vectorization, they use the processor's vectorized instructions for optimal instruction throughput, which you can't really do from your cross-platform C++ code.\n\nFinally, people claiming that it's because of Strassen's or Coppersmith–Winograd algorithm are wrong, both these algorithms are not implementable in practice, because of hardware considerations mentioned above.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Loop inside React JSX\r\n                \r\nI'm trying to do something like the following in React JSX (where ObjectRow is a separate component):\n```\n<tbody>\n    for (var i=0; i < numrows; i++) {\n        <ObjectRow/>\n    } \n</tbody>\n```\n\nI realize and understand why this isn't valid JSX, since JSX maps to function calls. However, coming from template land and being new to JSX, I am unsure how I would achieve the above (adding a component multiple times).\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to use multiprocessing pool.map with multiple arguments\r\n                \r\nIn the Python ```\nmultiprocessing```\n library, is there a variant of ```\npool.map```\n which supports multiple arguments?\n```\nimport multiprocessing\n\ntext = \"test\"\n\ndef harvester(text, case):\n    X = case[0]\n    text + str(X)\n\nif __name__ == '__main__':\n    pool = multiprocessing.Pool(processes=6)\n    case = RAW_DATASET\n    pool.map(harvester(text, case), case, 1)\n    pool.close()\n    pool.join()\n```\n\n    ", "Answer": "\r\n\n  is there a variant of pool.map which support multiple arguments?\n\n\nPython 3.3 includes ```\npool.starmap()```\n method:\n\n```\n#!/usr/bin/env python3\nfrom functools import partial\nfrom itertools import repeat\nfrom multiprocessing import Pool, freeze_support\n\ndef func(a, b):\n    return a + b\n\ndef main():\n    a_args = [1,2,3]\n    second_arg = 1\n    with Pool() as pool:\n        L = pool.starmap(func, [(1, 1), (2, 1), (3, 1)])\n        M = pool.starmap(func, zip(a_args, repeat(second_arg)))\n        N = pool.map(partial(func, b=second_arg), a_args)\n        assert L == M == N\n\nif __name__==\"__main__\":\n    freeze_support()\n    main()\n```\n\n\nFor older versions:\n\n```\n#!/usr/bin/env python2\nimport itertools\nfrom multiprocessing import Pool, freeze_support\n\ndef func(a, b):\n    print a, b\n\ndef func_star(a_b):\n    \"\"\"Convert `f([1,2])` to `f(1,2)` call.\"\"\"\n    return func(*a_b)\n\ndef main():\n    pool = Pool()\n    a_args = [1,2,3]\n    second_arg = 1\n    pool.map(func_star, itertools.izip(a_args, itertools.repeat(second_arg)))\n\nif __name__==\"__main__\":\n    freeze_support()\n    main()\n```\n\n\nOutput\n\n```\n1 1\n2 1\n3 1\n```\n\n\nNotice how ```\nitertools.izip()```\n and ```\nitertools.repeat()```\n are used here.\n\nDue to the bug mentioned by @unutbu you can't use ```\nfunctools.partial()```\n or similar capabilities on Python 2.6, so the simple wrapper function ```\nfunc_star()```\n should be defined explicitly. See also the workaround suggested by ```\nuptimebox```\n.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Use Mockito to mock some methods but not others\r\n                \r\nIs there any way, using Mockito, to mock some methods in a class, but not others?\n\nFor example, in this (admittedly contrived) ```\nStock```\n class I want to mock the ```\ngetPrice()```\n and ```\ngetQuantity()```\n return values (as shown in the test snippet below) but I want the ```\ngetValue()```\n to perform the multiplication as coded in the ```\nStock```\n class\n\n```\npublic class Stock {\n  private final double price;\n  private final int quantity;\n\n  Stock(double price, int quantity) {\n    this.price = price;\n    this.quantity = quantity;\n  }\n\n  public double getPrice() {\n    return price;\n  }\n\n  public int getQuantity() {\n    return quantity;\n  }\n  public double getValue() {\n    return getPrice() * getQuantity();\n  }\n\n  @Test\n  public void getValueTest() {\n    Stock stock = mock(Stock.class);\n    when(stock.getPrice()).thenReturn(100.00);\n    when(stock.getQuantity()).thenReturn(200);\n    double value = stock.getValue();\n    // Unfortunately the following assert fails, because the mock Stock getValue() method does not perform the Stock.getValue() calculation code.\n    assertEquals(\"Stock value not correct\", 100.00*200, value, .00001);\n}\n```\n\n    ", "Answer": "\r\nTo directly answer your question, yes, you can mock some methods without mocking others. This is called a partial mock. See the Mockito documentation on partial mocks for more information.\n\nFor your example, you can do something like the following, in your test:\n\n```\nStock stock = mock(Stock.class);\nwhen(stock.getPrice()).thenReturn(100.00);    // Mock implementation\nwhen(stock.getQuantity()).thenReturn(200);    // Mock implementation\nwhen(stock.getValue()).thenCallRealMethod();  // Real implementation\n```\n\n\nIn that case, each method implementation is mocked, unless specify ```\nthenCallRealMethod()```\n in the ```\nwhen(..)```\n clause.\n\nThere is also a possibility the other way around with spy instead of mock:\n\n```\nStock stock = spy(Stock.class);\nwhen(stock.getPrice()).thenReturn(100.00);    // Mock implementation\nwhen(stock.getQuantity()).thenReturn(200);    // Mock implementation\n// All other method call will use the real implementations\n```\n\n\nIn that case, all method implementation are the real one, except if you have defined a mocked behaviour with ```\nwhen(..)```\n.\n\nThere is one important pitfall when you use ```\nwhen(Object)```\n with spy like in the previous example. The real method will be called (because ```\nstock.getPrice()```\n is evaluated before ```\nwhen(..)```\n at runtime). This can be a problem if your method contains logic that should not be called. You can write the previous example like this:\n\n```\nStock stock = spy(Stock.class);\ndoReturn(100.00).when(stock).getPrice();    // Mock implementation\ndoReturn(200).when(stock).getQuantity();    // Mock implementation\n// All other method call will use the real implementations\n```\n\n\n\n\nAnother possibility may be to use ```\norg.mockito.Mockito.CALLS_REAL_METHODS```\n, such as:\n\n```\nStock MOCK_STOCK = Mockito.mock( Stock.class, CALLS_REAL_METHODS );\n```\n\n\nThis delegates unstubbed calls to real implementations.\n\n\n\nHowever, with your example, I believe it will still fail, since the implementation of ```\ngetValue()```\n relies on ```\nquantity```\n and ```\nprice```\n, rather than ```\ngetQuantity()```\n and ```\ngetPrice()```\n, which is what you've mocked.\n\nAnother possibility is to avoid mocks altogether:\n\n```\n@Test\npublic void getValueTest() {\n    Stock stock = new Stock(100.00, 200);\n    double value = stock.getValue();\n    assertEquals(\"Stock value not correct\", 100.00*200, value, .00001);\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple Indexes vs Multi-Column Indexes\r\n                \r\nWhat is the difference between creating one index across multiple columns versus creating multiple indexes, one per column?\nAre there reasons why one should be used over the other?\nFor example:\n```\nCreate NonClustered Index IX_IndexName On TableName\n(Column1 Asc, Column2 Asc, Column3 Asc)\n```\n\nVersus:\n```\nCreate NonClustered Index IX_IndexName1 On TableName\n(Column1 Asc)\n\nCreate NonClustered Index IX_IndexName2 On TableName\n(Column2 Asc)\n\nCreate NonClustered Index IX_IndexName3 On TableName\n(Column3 Asc)\n```\n\n    ", "Answer": "\r\nI agree with Cade Roux.\n\nThis article should get you on the right track:\n\n\nIndexes in SQL Server 2005/2008 – Best Practices, Part 1\nIndexes in SQL Server 2005/2008 – Part 2 – Internals \n\n\nOne thing to note, clustered indexes should have a unique key (an identity column I would recommend) as the first column. \nBasically it helps your data insert at the end of the index and not cause lots of disk IO and Page splits.\n\nSecondly, if you are creating other indexes on your data and they are constructed cleverly they will be reused. \n\ne.g. imagine you search a table on three columns\n\nstate, county, zip. \n\n\nyou sometimes search by state only. \nyou sometimes search by state and county.\nyou frequently search by state, county, zip. \n\n\nThen an index with state, county, zip. will be used in all three of these searches.\n\nIf you search by zip alone quite a lot then the above index will not be used (by SQL Server anyway) as zip is the third part of that index and the query optimiser will not see that index as helpful. \n\nYou could then create an index on Zip alone that would be used in this instance.\n\nBy the way We can take advantage of the fact that with Multi-Column indexing the first index column is always usable for searching and when you search only by 'state' it is efficient but yet not as efficient as Single-Column index on 'state'\n\nI guess the answer you are looking for is that it depends on your where clauses of your frequently used queries and also your group by's.\n\nThe article will help a lot. :-)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I use threading in Python?\r\n                \r\nI would like a clear example showing tasks being divided across multiple threads.\n    ", "Answer": "\r\nSince this question was asked in 2010, there has been real simplification in how to do simple multithreading with Python with map and pool.\nThe code below comes from an article/blog post that you should definitely check out (no affiliation) - Parallelism in one line: A Better Model for Day to Day Threading Tasks. I'll summarize below - it ends up being just a few lines of code:\n```\nfrom multiprocessing.dummy import Pool as ThreadPool\npool = ThreadPool(4)\nresults = pool.map(my_function, my_array)\n```\n\nWhich is the multithreaded version of:\n```\nresults = []\nfor item in my_array:\n    results.append(my_function(item))\n```\n\n\nDescription\n\nMap is a cool little function, and the key to easily injecting parallelism into your Python code. For those unfamiliar, map is something lifted from functional languages like Lisp. It is a function which maps another function over a sequence.\nMap handles the iteration over the sequence for us, applies the function, and stores all of the results in a handy list at the end.\n\n\n\nImplementation\n\nParallel versions of the map function are provided by two libraries:multiprocessing, and also its little known, but equally fantastic step child:multiprocessing.dummy.\n\n```\nmultiprocessing.dummy```\n is exactly the same as multiprocessing module, but uses threads instead (an important distinction - use multiple processes for CPU-intensive tasks; threads for (and during) I/O):\n\nmultiprocessing.dummy replicates the API of multiprocessing, but is no more than a wrapper around the threading module.\n\n```\nimport urllib2\nfrom multiprocessing.dummy import Pool as ThreadPool\n\nurls = [\n  'http://www.python.org',\n  'http://www.python.org/about/',\n  'http://www.onlamp.com/pub/a/python/2003/04/17/metaclasses.html',\n  'http://www.python.org/doc/',\n  'http://www.python.org/download/',\n  'http://www.python.org/getit/',\n  'http://www.python.org/community/',\n  'https://wiki.python.org/moin/',\n]\n\n# Make the Pool of workers\npool = ThreadPool(4)\n\n# Open the URLs in their own threads\n# and return the results\nresults = pool.map(urllib2.urlopen, urls)\n\n# Close the pool and wait for the work to finish\npool.close()\npool.join()\n```\n\nAnd the timing results:\n```\nSingle thread:   14.4 seconds\n       4 Pool:   3.1 seconds\n       8 Pool:   1.4 seconds\n      13 Pool:   1.3 seconds\n```\n\n\nPassing multiple arguments (works like this only in Python 3.3 and later):\nTo pass multiple arrays:\n```\nresults = pool.starmap(function, zip(list_a, list_b))\n```\n\nOr to pass a constant and an array:\n```\nresults = pool.starmap(function, zip(itertools.repeat(constant), list_a))\n```\n\nIf you are using an earlier version of Python, you can pass multiple arguments via this workaround).\n(Thanks to user136036 for the helpful comment.)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Split long commands in multiple lines through Windows batch file\r\n                \r\nHow can I split long commands over multiple lines in a batch file?\n    ", "Answer": "\r\nYou can break up long lines with the caret ```\n^```\n as long as you remember that the caret and the newline following it are completely removed. So, if there should be a space where you're breaking the line, include a space. (More on that below.)\n\nExample:\n\n```\ncopy file1.txt file2.txt\n```\n\n\nwould be written as:\n\n```\ncopy file1.txt^\n file2.txt\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "What is a clean \"pythonic\" way to implement multiple constructors?\r\n                \r\nI can't find a definitive answer for this. As far as I know, you can't have multiple ```\n__init__```\n functions in a Python class. So how do I solve this problem?\nSuppose I have a class called ```\nCheese```\n with the ```\nnumber_of_holes```\n property. How can I have two ways of creating cheese objects...\n\nOne that takes a number of holes like this: ```\nparmesan = Cheese(num_holes = 15)```\n.\nAnd one that takes no arguments and just randomizes the ```\nnumber_of_holes```\n property: ```\ngouda = Cheese()```\n.\n\nI can think of only one way to do this, but this seems clunky:\n```\nclass Cheese():\n    def __init__(self, num_holes = 0):\n        if (num_holes == 0):\n            # Randomize number_of_holes\n        else:\n            number_of_holes = num_holes\n```\n\nWhat do you say? Is there another way?\n    ", "Answer": "\r\nActually ```\nNone```\n is much better for \"magic\" values:\n\n```\nclass Cheese():\n    def __init__(self, num_holes = None):\n        if num_holes is None:\n            ...\n```\n\n\nNow if you want complete freedom of adding more parameters:\n\n```\nclass Cheese():\n    def __init__(self, *args, **kwargs):\n        #args -- tuple of anonymous arguments\n        #kwargs -- dictionary of named arguments\n        self.num_holes = kwargs.get('num_holes',random_holes())\n```\n\n\nTo better explain the concept of ```\n*args```\n and ```\n**kwargs```\n (you can actually change these names):\n\n```\ndef f(*args, **kwargs):\n   print 'args: ', args, ' kwargs: ', kwargs\n\n>>> f('a')\nargs:  ('a',)  kwargs:  {}\n>>> f(ar='a')\nargs:  ()  kwargs:  {'ar': 'a'}\n>>> f(1,2,param=3)\nargs:  (1, 2)  kwargs:  {'param': 3}\n```\n\n\nhttp://docs.python.org/reference/expressions.html#calls\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to perform element-wise multiplication of two lists? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        How do I iterate through two lists in parallel?\r\n                            \r\n                                (8 answers)\r\n                            \r\n                    \r\n                    \r\n                        How can I collect the results of a repeated calculation in a list, dictionary etc. (or make a copy of a list with each element modified)?\r\n                            \r\n                                (2 answers)\r\n                            \r\n                    \r\n                Closed last year.\r\n        \r\n\r\n\r\n    \r\n\r\nI want to perform an element wise multiplication, to multiply two lists together by value in Python, like we can do it in Matlab.\n\nThis is how I would do it in Matlab.\n\n```\na = [1,2,3,4]\nb = [2,3,4,5]\na .* b = [2, 6, 12, 20]\n```\n\n\nA list comprehension would give 16 list entries, for every combination ```\nx * y```\n of ```\nx```\n from ```\na```\n and ```\ny```\n from ```\nb```\n. Unsure of how to map this.\n\nIf anyone is interested why, I have a dataset, and want to multiply it by ```\nNumpy.linspace(1.0, 0.5, num=len(dataset)) =)```\n.\n    ", "Answer": "\r\nUse a list comprehension mixed with ```\nzip()```\n:.\n\n```\n[a*b for a,b in zip(lista,listb)]\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Can the :not() pseudo-class have multiple arguments?\r\n                \r\nI'm trying to select ```\ninput```\n elements of all ```\ntype```\ns except ```\nradio```\n and ```\ncheckbox```\n.\n\nMany people have shown that you can put multiple arguments in ```\n:not```\n, but using ```\ntype```\n doesn't seem to work anyway I try it.\n\n```\nform input:not([type=\"radio\"], [type=\"checkbox\"]) {\n  /* css here */\n}\n```\n\n\nAny ideas?\n    ", "Answer": "\r\nWhy :not just use two ```\n:not```\n:\n\n```\ninput:not([type=\"radio\"]):not([type=\"checkbox\"])\n```\n\n\nYes, it is intentional\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple cases in switch statement\r\n                \r\nIs there a way to fall through multiple case statements without stating ```\ncase value:```\n repeatedly?\n\nI know this works:\n\n```\nswitch (value)\n{\n   case 1:\n   case 2:\n   case 3:\n      // Do some stuff\n      break;\n   case 4:\n   case 5:\n   case 6:\n      // Do some different stuff\n      break;\n   default:\n       // Default stuff\n      break;\n}\n```\n\n\nbut I'd like to do something like this:\n\n```\nswitch (value)\n{\n   case 1,2,3:\n      // Do something\n      break;\n   case 4,5,6:\n      // Do something\n      break;\n   default:\n      // Do the Default\n      break;\n}\n```\n\n\nIs this syntax I'm thinking of from a different language, or am I missing something?\n    ", "Answer": "\r\nI guess this has been already answered. However, I think that you can still mix both options in a syntactically better way by doing:\n\n```\nswitch (value)\n{\n    case 1: case 2: case 3:          \n        // Do Something\n        break;\n    case 4: case 5: case 6: \n        // Do Something\n        break;\n    default:\n        // Do Something\n        break;\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Tab character instead of multiple non-breaking spaces (\"nbsp\")?\r\n                \r\nIs it possible to insert a tab character in HTML instead of having to type ```\n&nbsp;```\n four times?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I know if a branch has been already merged into master?\r\n                \r\nI have a git repository with multiple branches. \n\nHow can I know which branches are already merged into the master branch?\n    ", "Answer": "\r\n```\ngit branch --merged master```\n lists branches merged into master\n\n```\ngit branch --merged```\n lists branches merged into HEAD (i.e. tip of current branch)\n\n```\ngit branch --no-merged```\n lists branches that have not been merged\n\nBy default this applies to only the local branches.  The ```\n-a```\n flag will show both local and remote branches, and the ```\n-r```\n flag shows only the remote branches.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I open multiple files using \"with open\" in Python?\r\n                \r\nI want to change a couple of files at one time, iff I can write to all of them. I'm wondering if I somehow can combine the multiple open calls with the ```\nwith```\n statement:\n\n```\ntry:\n  with open('a', 'w') as a and open('b', 'w') as b:\n    do_something()\nexcept IOError as e:\n  print 'Operation failed: %s' % e.strerror\n```\n\n\nIf that's not possible, what would an elegant solution to this problem look like?\n    ", "Answer": "\r\nAs of Python 2.7 (or 3.1 respectively) you can write\n```\nwith open('a', 'w') as a, open('b', 'w') as b:\n    do_something()\n```\n\n(Historical note: In earlier versions of Python, you can sometimes use\n```\ncontextlib.nested()```\n to nest context managers.  This won't work as expected for opening multiples files, though -- see the linked documentation for details.)\n\nIn the rare case that you want to open a variable number of files all at the same time, you can use ```\ncontextlib.ExitStack```\n, starting from Python version 3.3:\n```\nwith ExitStack() as stack:\n    files = [stack.enter_context(open(fname)) for fname in filenames]\n    # Do something with \"files\"\n```\n\nNote that more commonly you want to process files sequentially rather than opening all of them at the same time, in particular if you have a variable number of files:\n```\nfor fname in filenames:\n    with open(fname) as f:\n        # Process f\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I trigger the same function from multiple events with jQuery?\r\n                \r\nIs there a way to have ```\nkeyup```\n, ```\nkeypress```\n, ```\nblur```\n, and ```\nchange```\n events call the same function in one line or do I have to do them separately?\n\nThe problem I have is that I need to validate some data with a db lookup and would like to make sure validation is not missed in any case, whether it is typed or pasted into the box.\n    ", "Answer": "\r\nYou can use ```\n.on()```\n to bind a function to multiple events:\n\n```\n$('#element').on('keyup keypress blur change', function(e) {\n    // e.type is the type of event fired\n});\n```\n\n\nOr just pass the function as the parameter to normal event functions:\n\n```\nvar myFunction = function() {\n   ...\n}\n\n$('#element')\n    .keyup(myFunction)\n    .keypress(myFunction)\n    .blur(myFunction)\n    .change(myFunction)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication on command line terminal\r\n                \r\nI'm using a serial terminal to provide input into our lab experiment. I found that using \n\n```\n$ echo \"5X5\"\n```\n\n\njust returns a string of ```\n\"5X5\"```\n. Is there a command to execute a multiplication operation?\n    ", "Answer": "\r\nYes, you can use bash's built-in Arithmetic Expansion ```\n$(( ))```\n to do some simple maths\n\n```\n$ echo \"$((5 * 5))\"\n25\n```\n\n\nCheck the Shell Arithmetic section in the Bash Reference Manual for a complete list of operators.\n\nFor sake of completeness, as other pointed out, if you need arbitrary precision, ```\nbc```\n or ```\ndc```\n would be better.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "What's the function like sum() but for multiplication? product()? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        How can I multiply all items in a list together with Python?\r\n                            \r\n                                (15 answers)\r\n                            \r\n                    \r\n                Closed 6 months ago.\r\n        \r\n\r\n\r\n    \r\n\r\nPython's ```\nsum()```\n function returns the sum of numbers in an iterable.\n\n```\nsum([3,4,5]) == 3 + 4 + 5 == 12\n```\n\n\nI'm looking for the function that returns the product instead.\n\n```\nsomelib.somefunc([3,4,5]) == 3 * 4 * 5 == 60\n```\n\n\nI'm pretty sure such a function exists, but I can't find it.\n    ", "Answer": "\r\nHistorically, Guido vetoed the idea: http://bugs.python.org/issue1093\nAs noted in that issue, you can make your own:\n```\nfrom functools import reduce # Valid in Python 2.6+, required in Python 3\nimport operator\n\nreduce(operator.mul, (3, 4, 5), 1)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Difference between numpy dot() and Python 3.5+ matrix multiplication @\r\n                \r\nI recently moved to Python 3.5 and noticed the new matrix multiplication operator (@) sometimes behaves differently from the numpy dot operator. In example, for 3d arrays:\n\n```\nimport numpy as np\n\na = np.random.rand(8,13,13)\nb = np.random.rand(8,13,13)\nc = a @ b  # Python 3.5+\nd = np.dot(a, b)\n```\n\n\nThe ```\n@```\n operator returns an array of shape:\n\n```\nc.shape\n(8, 13, 13)\n```\n\n\nwhile the ```\nnp.dot()```\n function returns:\n\n```\nd.shape\n(8, 13, 8, 13)\n```\n\n\nHow can I reproduce the same result with numpy dot? Are there any other significant differences?\n    ", "Answer": "\r\nThe ```\n@```\n operator calls the array's ```\n__matmul__```\n method, not ```\ndot```\n. This method is also present in the API as the function ```\nnp.matmul```\n.\n```\n>>> a = np.random.rand(8,13,13)\n>>> b = np.random.rand(8,13,13)\n>>> np.matmul(a, b).shape\n(8, 13, 13)\n```\n\nFrom the documentation:\n\n```\nmatmul```\n differs from ```\ndot```\n in two important ways.\n\nMultiplication by scalars is not allowed.\nStacks of matrices are broadcast together as if the matrices were elements.\n\n\nThe last point makes it clear that ```\ndot```\n and ```\nmatmul```\n methods behave differently when passed 3D (or higher dimensional) arrays. Quoting from the documentation some more:\nFor ```\nmatmul```\n:\n\nIf either argument is N-D, N > 2, it is treated as a stack of matrices residing in the last two indexes and broadcast accordingly.\n\nFor ```\nnp.dot```\n:\n\nFor 2-D arrays it is equivalent to matrix multiplication, and for 1-D arrays to inner product of vectors (without complex conjugation). For N dimensions it is a sum product over the last axis of a and the second-to-last of b\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I specify unique constraint for multiple columns in MySQL?\r\n                \r\nI have a table:\n\n```\ntable votes (\n    id,\n    user,\n    email,\n    address,\n    primary key(id),\n);\n```\n\n\nNow I want to make the columns user, email, address unique (together).\n\nHow do I do this in MySql?\n\nOf course the example is just... an example. So please don't worry about the semantics.\n    ", "Answer": "\r\nTo add a unique constraint, you need to use two components:\n```\nALTER TABLE```\n - to change the table schema and,\n```\nADD UNIQUE```\n - to add the unique constraint.\nYou then can define your new unique key with the format ```\n'name'('column1', 'column2'...)```\n\nSo for your particular issue, you could use this command:\n```\nALTER TABLE `votes` ADD UNIQUE `unique_index`(`user`, `email`, `address`);\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to test multiple variables for equality against a single value?\r\n                \r\nI'm trying to make a function that will compare multiple variables to an integer and output a string of three letters. I was wondering if there was a way to translate this into Python. So say:\n```\nx = 0\ny = 1\nz = 3\nmylist = []\n\nif x or y or z == 0:\n    mylist.append(\"c\")\nif x or y or z == 1:\n    mylist.append(\"d\")\nif x or y or z == 2:\n    mylist.append(\"e\")\nif x or y or z == 3: \n    mylist.append(\"f\")\n```\n\nwhich would return a list of:\n```\n[\"c\", \"d\", \"f\"]\n```\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to apply multiple transforms in CSS?\r\n                \r\nUsing CSS, how can I apply more than one ```\ntransform```\n?\n\nExample: In the following, only the translation is applied, not the rotation.\n\n```\nli:nth-child(2) {\n    transform: rotate(15deg);\n    transform: translate(-20px,0px);        \n}\n```\n\n    ", "Answer": "\r\nYou have to put them on one line like this:\n\n```\nli:nth-child(2) {\n    transform: rotate(15deg) translate(-20px,0px);\n}\n```\n\n\nWhen you have multiple transform directives, only the last one will be applied. It's like any other CSS rule.\n\n\n\nKeep in mind multiple transform one line directives are applied from right to left.\n\nThis: ```\ntransform: scale(1,1.5) rotate(90deg);```\n\nand: ```\ntransform: rotate(90deg) scale(1,1.5);```\n\n\nwill not produce the same result:\n\n\r\n\r\n```\n.orderOne, .orderTwo {\r\n  font-family: sans-serif;\r\n  font-size: 22px;\r\n  color: #000;\r\n  display: inline-block;\r\n}\r\n\r\n.orderOne {\r\n  transform: scale(1, 1.5) rotate(90deg);\r\n}\r\n\r\n.orderTwo {\r\n  transform: rotate(90deg) scale(1, 1.5);\r\n}```\n\r\n```\n<div class=\"orderOne\">\r\n  A\r\n</div>\r\n\r\n<div class=\"orderTwo\">\r\n  A\r\n</div>```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to combine multiple QuerySets in Django?\r\n                \r\nI'm trying to build the search for a Django site I am building, and in that search, I am searching across three different models. And to get pagination on the search result list, I would like to use a generic object_list view to display the results. But to do that, I have to merge three QuerySets into one.\nHow can I do that? I've tried this:\n```\nresult_list = []\npage_list = Page.objects.filter(\n    Q(title__icontains=cleaned_search_term) |\n    Q(body__icontains=cleaned_search_term))\narticle_list = Article.objects.filter(\n    Q(title__icontains=cleaned_search_term) |\n    Q(body__icontains=cleaned_search_term) |\n    Q(tags__icontains=cleaned_search_term))\npost_list = Post.objects.filter(\n    Q(title__icontains=cleaned_search_term) |\n    Q(body__icontains=cleaned_search_term) |\n    Q(tags__icontains=cleaned_search_term))\n\nfor x in page_list:\n    result_list.append(x)\nfor x in article_list:\n    result_list.append(x)\nfor x in post_list:\n    result_list.append(x)\n\nreturn object_list(\n    request,\n    queryset=result_list,\n    template_object_name='result',\n    paginate_by=10,\n    extra_context={\n        'search_term': search_term},\n    template_name=\"search/result_list.html\")\n```\n\nBut this doesn't work. I get an error when I try to use that list in the generic view. The list is missing the clone attribute.\nHow can I merge the three lists, ```\npage_list```\n, ```\narticle_list```\n and ```\npost_list```\n?\n    ", "Answer": "\r\nConcatenating the querysets into a list is the simplest approach. If the database will be hit for all querysets anyway (e.g. because the result needs to be sorted), this won't add further cost.\n```\nfrom itertools import chain\nresult_list = list(chain(page_list, article_list, post_list))\n```\n\nUsing ```\nitertools.chain```\n is faster than looping each list and appending elements one by one, since ```\nitertools```\n is implemented in C. It also consumes less memory than converting each queryset into a list before concatenating.\nNow it's possible to sort the resulting list e.g. by date (as requested in hasen j's comment to another answer). The ```\nsorted()```\n function conveniently accepts a generator and returns a list:\n```\nfrom operator import attrgetter\nresult_list = sorted(\n    chain(page_list, article_list, post_list),\n    key=attrgetter('date_created')\n)\n```\n\nYou can reverse the sort order:\n```\nresult_list = sorted(\n    chain(page_list, article_list, post_list),\n    key=attrgetter('date_created'),\n    reverse=True,\n)\n```\n\n```\nattrgetter```\n is equivalet to the following ```\nlambda```\n (this was the way it had to be done before Python 2.4):\n```\nresult_list = sorted(\n    chain(page_list, article_list, post_list),\n    key=lambda instance: instance.date_created,\n)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can you create multiple cursors in Visual Studio Code\r\n                \r\nWhat are the keyboard shortcuts for creating multiple cursors in VS Code?\n    ", "Answer": "\r\nPress Alt and click. This works on Windows and Linux*, and it should work on Mac, too.\n\nMore multi-cursor features are now available in Visual Studio Code 0.2:\n\n\n  Multi cursor improvements\n  Ctrl+D (Cmd+D on Mac) selects next occurrence of word under cursor or of the current selection\n  Ctrl+K Ctrl+D moves last added cursor to next occurrence of word under cursor or of the current selection\n  The commands use matchCase by default. If the find widget is open, then the find widget settings (matchCase / matchWholeWord) will be used for determining the next occurrence\n  Ctrl+U (Cmd+U on Mac) undoes the last cursor action, so if you added a cursor too many or made a mistake, you can press Ctrl+U (Cmd+U on Mac) to go back to the previous cursor state.\n  Adding cursor up or down (Ctrl+Alt+Up / Ctrl+Alt+Down) (Cmd+Alt+Up / Cmd+Alt+Down on Mac) now reveals the last added cursor to make it easier to work with multiple cursors on more than 1 viewport height at a time (i.e. select 300 lines and only 80 fit in the viewport).  \n  \n  This makes it a lot easier to introduce multiple cursors\n\n\n* Linux drag-window conflict:\n\n\n  Some distros (e.g. Ubuntu) assign window dragging to Alt+LeftMouse, which will conflict with VSCode.\n  \n  So, recent versions of VSCode let you toggle between Alt+LeftMouse and Ctrl+LeftMouse under the Selection menu, as detailed in another answer.\n  \n  Alternately, you could change your OS key bindings using ```\ngsettings```\n as mentioned in another answer.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Dealing with multiple Python versions and PIP?\r\n                \r\nIs there any way to make ```\npip```\n play well with multiple versions of Python? For example, I want to use ```\npip```\n to explicitly install things to either my site 2.5 installation or my site 2.6 installation.\n\nFor example, with ```\neasy_install```\n, I use ```\neasy_install-2.{5,6}```\n.\n\nAnd, yes — I know about virtualenv, and no — it's not a solution to this particular problem.\n    ", "Answer": "\r\nThe current recommendation is to use ```\npython -m pip```\n, where ```\npython```\n is the version of Python you would like to use. This is the recommendation because it works across all versions of Python, and in all forms of virtualenv. For example:\n```\n# The system default python:\n$ python -m pip install fish\n\n# A virtualenv's python:\n$ .env/bin/python -m pip install fish\n\n# A specific version of python:\n$ python-3.6 -m pip install fish\n```\n\nPrevious answer, left for posterity:\nSince version 0.8, Pip supports ```\npip-{version}```\n. You can use it the same as ```\neasy_install-{version}```\n:\n```\n$ pip-2.5 install myfoopackage\n$ pip-2.6 install otherpackage\n$ pip-2.7 install mybarpackage\n```\n\n\nEDIT: pip changed its schema to use ```\npipVERSION```\n instead of ```\npip-VERSION```\n in version 1.5. You should use the following if you have ```\npip >= 1.5```\n:\n```\n$ pip2.6 install otherpackage\n$ pip2.7 install mybarpackage\n```\n\nCheck https://github.com/pypa/pip/pull/1053 for more details\n\nReferences:\n\nhttps://github.com/pypa/pip/issues/200\nhttp://www.pip-installer.org/docs/pip/en/0.8.3/news.html#id4\nhttps://pip.pypa.io/en/stable/news/#v0-8 or\nhttps://web.archive.org/web/20140310013920/http://www.pip-installer.org:80/docs/pip/en/0.8.3/news.html#id4\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "What is a mixin and why is it useful?\r\n                \r\nIn Programming Python, Mark Lutz mentions the term mixin. I am from a C/C++/C# background and I have not heard the term before. What is a mixin?\nReading between the lines of this example (which I have linked to because it is quite long), I am presuming it is a case of using multiple inheritance to extend a class as opposed to proper subclassing. Is this right?\nWhy would I want to do that rather than put the new functionality into a subclass? For that matter, why would a mixin/multiple inheritance approach be better than using composition?\nWhat separates a mixin from multiple inheritance? Is it just a matter of semantics?\n    ", "Answer": "\r\nA mixin is a special kind of multiple inheritance.  There are two main situations where mixins are used:\n\n\nYou want to provide a lot of optional features for a class.\nYou want to use one particular feature in a lot of different classes.\n\n\nFor an example of number one, consider werkzeug's request and response system.  I can make a plain old request object by saying:\n\n```\nfrom werkzeug import BaseRequest\n\nclass Request(BaseRequest):\n    pass\n```\n\n\nIf I want to add accept header support, I would make that\n\n```\nfrom werkzeug import BaseRequest, AcceptMixin\n\nclass Request(AcceptMixin, BaseRequest):\n    pass\n```\n\n\nIf I wanted to make a request object that supports accept headers, etags, authentication, and user agent support, I could do this:\n\n```\nfrom werkzeug import BaseRequest, AcceptMixin, ETagRequestMixin, UserAgentMixin, AuthenticationMixin\n\nclass Request(AcceptMixin, ETagRequestMixin, UserAgentMixin, AuthenticationMixin, BaseRequest):\n    pass\n```\n\n\nThe difference is subtle, but in the above examples, the mixin classes weren't made to stand on their own.  In more traditional multiple inheritance, the ```\nAuthenticationMixin```\n (for example) would probably be something more like ```\nAuthenticator```\n.  That is, the class would probably be designed to stand on its own.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I pull/push from multiple remote locations?\r\n                \r\nThe short: is there a way to have a git repo push to and pull from a list of remote repos (rather than a single \"origin\")?\n\nThe long: I often have a situation when I'm developing an app in multiple computers, with different connectivity – say a laptop while on transit, a computer \"A\" while I'm in a certain location, and another computer \"B\" while on another. Also, the laptop might have connectivity with only either \"A\" or \"B\", and sometimes both.\n\nWhat I would like to is for git to always \"pull\" from and \"push\" to all the computers it can currently connect to, so it's easier to jump from one machine to the other and continue working seamlessly.\n    ", "Answer": "\r\nDoing this manually is no longer necessary, with modern versions of ```\ngit```\n! See Malvineous's solution, below.\nReproduced here:\n```\ngit remote set-url origin --push --add <a remote>\ngit remote set-url origin --push --add <another remote>\n```\n\n\nOriginal answer:\nThis something I’ve been using for quite a while without bad consequences and suggested by Linus Torvalds on the git mailing list.\naraqnid’s solution is the proper one for bringing code into your repository… but when you, like me, have multiple equivalent authoritative upstreams (I keep some of my more critical projects cloned to both a private upstream, GitHub, and Codaset), it can be a pain to push changes to each one, every day.\nLong story short, ```\ngit remote add```\n all of your remotes individually… and then ```\ngit config -e```\n and add a merged‐remote. Assuming you have this repository ```\nconfig```\n:\n```\n[remote \"GitHub\"]\n    url = git@github.com:elliottcable/Paws.o.git\n    fetch = +refs/heads/*:refs/remotes/GitHub/*\n[branch \"Master\"]\n    remote = GitHub\n    merge = refs/heads/Master\n[remote \"Codaset\"]\n    url = git@codaset.com:elliottcable/paws-o.git\n    fetch = +refs/heads/*:refs/remotes/Codaset/*\n[remote \"Paws\"]\n    url = git@github.com:Paws/Paws.o.git\n    fetch = +refs/heads/*:refs/remotes/Paws/*\n```\n\n… to create a merged‐remote for ```\n\"Paws\"```\n and ```\n\"Codaset\"```\n, I can add the following after all of those:\n```\n[remote \"Origin\"]\n    url = git@github.com:Paws/Paws.o.git\n    url = git@codaset.com:elliottcable/paws-o.git\n```\n\nOnce I’ve done this, when I ```\ngit push Origin Master```\n, it will push to both ```\nPaws/Master```\n and ```\nCodaset/Master```\n sequentially, making life a little easier.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Split string with multiple delimiters in Python [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Split Strings into words with multiple word boundary delimiters\r\n                            \r\n                                (31 answers)\r\n                            \r\n                    \r\n                Closed 9 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI found some answers online, but I have no experience with regular expressions, which I believe is what is needed here.\n\nI have a string that needs to be split by either a ';' or ', '\nThat is, it has to be either a semicolon or a comma followed by a space. Individual commas without trailing spaces should be left untouched\n\nExample string:\n\n```\n\"b-staged divinylsiloxane-bis-benzocyclobutene [124221-30-3], mesitylene [000108-67-8]; polymerized 1,2-dihydro-2,2,4- trimethyl quinoline [026780-96-1]\"\n```\n\n\nshould be split into a list containing the following:\n\n```\n('b-staged divinylsiloxane-bis-benzocyclobutene [124221-30-3]' , 'mesitylene [000108-67-8]', 'polymerized 1,2-dihydro-2,2,4- trimethyl quinoline [026780-96-1]') \n```\n\n    ", "Answer": "\r\nLuckily, Python has this built-in :)\n```\nimport re\nre.split('; |, ', string_to_split)\n```\n\nUpdate:Following your comment:\n```\n>>> a='Beautiful, is; better*than\\nugly'\n>>> import re\n>>> re.split('; |, |\\*|\\n',a)\n['Beautiful', 'is', 'better', 'than', 'ugly']\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Removing multiple classes (jQuery)\r\n                \r\nIs there any better way to rewrite this:\n\n```\n$('element').removeClass('class1').removeClass('class2');\n```\n\n\nI cannot use ```\nremoveClass();```\n as it would remove ALL classes, which I don't want.\n    ", "Answer": "\r\n```\n$(\"element\").removeClass(\"class1 class2\");\n```\n\n\nFrom ```\nremoveClass()```\n, the class parameter:\n\n\n  One or more CSS classes to remove from\n  the elements, these are separated by\n  spaces.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "find -exec with multiple commands\r\n                \r\nI am trying to use find -exec with multiple commands without any success.  Does anybody know if commands such as the following are possible?\n\n```\nfind *.txt -exec echo \"$(tail -1 '{}'),$(ls '{}')\" \\;\n```\n\n\nBasically, I am trying to print the last line of each txt file in the current directory and print at the end of the line, a comma followed by the filename.\n    ", "Answer": "\r\n```\nfind```\n accepts multiple ```\n-exec```\n portions to the command. For example:\n\n```\nfind . -name \"*.txt\" -exec echo {} \\; -exec grep banana {} \\;\n```\n\n\nNote that in this case the second command will only run if the first one returns successfully, as mentioned by @Caleb. If you want both commands to run regardless of their success or failure, you could use this construct:\n\n```\nfind . -name \"*.txt\" \\( -exec echo {} \\; -o -exec true \\; \\) -exec grep banana {} \\;\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Difference between numpy.array shape (R, 1) and (R,)\r\n                \r\nIn ```\nnumpy```\n, some of the operations return in shape ```\n(R, 1)```\n but some return ```\n(R,)```\n. This will make matrix multiplication more tedious since explicit ```\nreshape```\n is required. For example, given a matrix ```\nM```\n, if we want to do ```\nnumpy.dot(M[:,0], numpy.ones((1, R)))```\n where ```\nR```\n is the number of rows (of course, the same issue also occurs column-wise). We will get ```\nmatrices are not aligned```\n error since ```\nM[:,0]```\n is in shape ```\n(R,)```\n but ```\nnumpy.ones((1, R))```\n is in shape ```\n(1, R)```\n.\n\nSo my questions are:\n\n\nWhat's the difference between shape ```\n(R, 1)```\n and ```\n(R,)```\n. I know literally it's list of numbers and list of lists where all list contains only a number. Just wondering why not design ```\nnumpy```\n so that it favors shape ```\n(R, 1)```\n instead of ```\n(R,)```\n for easier matrix multiplication.\nAre there better ways for the above example? Without explicitly reshape like this: ```\nnumpy.dot(M[:,0].reshape(R, 1), numpy.ones((1, R)))```\n\n\n    ", "Answer": "\r\n1. The meaning of shapes in NumPy\n\nYou write, \"I know literally it's list of numbers and list of lists where all list contains only a number\" but that's a bit of an unhelpful way to think about it.\n\nThe best way to think about NumPy arrays is that they consist of two parts, a data buffer which is just a block of raw elements, and a view which describes how to interpret the data buffer.\n\nFor example, if we create an array of 12 integers:\n\n```\n>>> a = numpy.arange(12)\n>>> a\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11])\n```\n\n\nThen ```\na```\n consists of a data buffer, arranged something like this:\n\n```\n┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┐\n│  0 │  1 │  2 │  3 │  4 │  5 │  6 │  7 │  8 │  9 │ 10 │ 11 │\n└────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┘\n```\n\n\nand a view which describes how to interpret the data:\n\n```\n>>> a.flags\n  C_CONTIGUOUS : True\n  F_CONTIGUOUS : True\n  OWNDATA : True\n  WRITEABLE : True\n  ALIGNED : True\n  UPDATEIFCOPY : False\n>>> a.dtype\ndtype('int64')\n>>> a.itemsize\n8\n>>> a.strides\n(8,)\n>>> a.shape\n(12,)\n```\n\n\nHere the shape ```\n(12,)```\n means the array is indexed by a single index which runs from 0 to 11. Conceptually, if we label this single index ```\ni```\n, the array ```\na```\n looks like this:\n\n```\ni= 0    1    2    3    4    5    6    7    8    9   10   11\n┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┐\n│  0 │  1 │  2 │  3 │  4 │  5 │  6 │  7 │  8 │  9 │ 10 │ 11 │\n└────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┘\n```\n\n\nIf we reshape an array, this doesn't change the data buffer. Instead, it creates a new view that describes a different way to interpret the data. So after:\n\n```\n>>> b = a.reshape((3, 4))\n```\n\n\nthe array ```\nb```\n has the same data buffer as ```\na```\n, but now it is indexed by two indices which run from 0 to 2 and 0 to 3 respectively. If we label the two indices ```\ni```\n and ```\nj```\n, the array ```\nb```\n looks like this:\n\n```\ni= 0    0    0    0    1    1    1    1    2    2    2    2\nj= 0    1    2    3    0    1    2    3    0    1    2    3\n┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┐\n│  0 │  1 │  2 │  3 │  4 │  5 │  6 │  7 │  8 │  9 │ 10 │ 11 │\n└────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┘\n```\n\n\nwhich means that:\n\n```\n>>> b[2,1]\n9\n```\n\n\nYou can see that the second index changes quickly and the first index changes slowly. If you prefer this to be the other way round, you can specify the ```\norder```\n parameter:\n\n```\n>>> c = a.reshape((3, 4), order='F')\n```\n\n\nwhich results in an array indexed like this:\n\n```\ni= 0    1    2    0    1    2    0    1    2    0    1    2\nj= 0    0    0    1    1    1    2    2    2    3    3    3\n┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┐\n│  0 │  1 │  2 │  3 │  4 │  5 │  6 │  7 │  8 │  9 │ 10 │ 11 │\n└────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┘\n```\n\n\nwhich means that:\n\n```\n>>> c[2,1]\n5\n```\n\n\nIt should now be clear what it means for an array to have a shape with one or more dimensions of size 1. After:\n\n```\n>>> d = a.reshape((12, 1))\n```\n\n\nthe array ```\nd```\n is indexed by two indices, the first of which runs from 0 to 11, and the second index is always 0:\n\n```\ni= 0    1    2    3    4    5    6    7    8    9   10   11\nj= 0    0    0    0    0    0    0    0    0    0    0    0\n┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┐\n│  0 │  1 │  2 │  3 │  4 │  5 │  6 │  7 │  8 │  9 │ 10 │ 11 │\n└────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┘\n```\n\n\nand so:\n\n```\n>>> d[10,0]\n10\n```\n\n\nA dimension of length 1 is \"free\" (in some sense), so there's nothing stopping you from going to town:\n\n```\n>>> e = a.reshape((1, 2, 1, 6, 1))\n```\n\n\ngiving an array indexed like this:\n\n```\ni= 0    0    0    0    0    0    0    0    0    0    0    0\nj= 0    0    0    0    0    0    1    1    1    1    1    1\nk= 0    0    0    0    0    0    0    0    0    0    0    0\nl= 0    1    2    3    4    5    0    1    2    3    4    5\nm= 0    0    0    0    0    0    0    0    0    0    0    0\n┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┐\n│  0 │  1 │  2 │  3 │  4 │  5 │  6 │  7 │  8 │  9 │ 10 │ 11 │\n└────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┘\n```\n\n\nand so:\n\n```\n>>> e[0,1,0,0,0]\n6\n```\n\n\nSee the NumPy internals documentation for more details about how arrays are implemented.\n\n2. What to do?\n\nSince ```\nnumpy.reshape```\n just creates a new view, you shouldn't be scared about using it whenever necessary. It's the right tool to use when you want to index an array in a different way.\n\nHowever, in a long computation it's usually possible to arrange to construct arrays with the \"right\" shape in the first place, and so minimize the number of reshapes and transposes. But without seeing the actual context that led to the need for a reshape, it's hard to say what should be changed.\n\nThe example in your question is:\n\n```\nnumpy.dot(M[:,0], numpy.ones((1, R)))\n```\n\n\nbut this is not realistic. First, this expression:\n\n```\nM[:,0].sum()\n```\n\n\ncomputes the result more simply. Second, is there really something special about column 0? Perhaps what you actually need is:\n\n```\nM.sum(axis=0)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple GitHub accounts on the same computer?\r\n                \r\nTrying to work on both my actual \"work\" repos, and my repos on GitHub, from my computer.\nThe work account was set up first, and everything works flawlessly.\nMy account, however, cannot seem to push to my repo, which is set up under a different account/email.\nI've tried copying my work key up to my account, but that throws an error because of course a key can only be attached to one account.\nHow can I push/pull to and from both accounts with their respective GitHub credentials?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I split a string with multiple separators in JavaScript?\r\n                \r\nHow do I split a string with multiple separators in JavaScript?\nI'm trying to split on both commas and spaces, but AFAIK JavaScript's ```\nsplit()```\n function only supports one separator.\n    ", "Answer": "\r\nPass in a regexp as the parameter:\n\n```\njs> \"Hello awesome, world!\".split(/[\\s,]+/)\nHello,awesome,world!\n```\n\n\nEdited to add:\n\nYou can get the last element by selecting the length of the array minus 1:\n\n```\n>>> bits = \"Hello awesome, world!\".split(/[\\s,]+/)\n[\"Hello\", \"awesome\", \"world!\"]\n>>> bit = bits[bits.length - 1]\n\"world!\"\n```\n\n\n... and if the pattern doesn't match:\n\n```\n>>> bits = \"Hello awesome, world!\".split(/foo/)\n[\"Hello awesome, world!\"]\n>>> bits[bits.length - 1]\n\"Hello awesome, world!\"\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Sqlite primary key on multiple columns\r\n                \r\nWhat is the syntax for specifying a primary key on more than 1 column in SQLITE ? \n    ", "Answer": "\r\nAccording to the documentation, it's\n\n```\nCREATE TABLE something (\n  column1, \n  column2, \n  column3, \n  PRIMARY KEY (column1, column2)\n);\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Sort a list by multiple attributes?\r\n                \r\nI have a list of lists:\n\n```\n[[12, 'tall', 'blue', 1],\n[2, 'short', 'red', 9],\n[4, 'tall', 'blue', 13]]\n```\n\n\nIf I wanted to sort by one element, say the tall/short element, I could do it via ```\ns = sorted(s, key = itemgetter(1))```\n.\n\nIf I wanted to sort by both tall/short and colour, I could do the sort twice, once for each element, but is there a quicker way?\n    ", "Answer": "\r\nA key can be a function that returns a tuple:\n\n```\ns = sorted(s, key = lambda x: (x[1], x[2]))\n```\n\n\nOr you can achieve the same using ```\nitemgetter```\n (which is faster and avoids a Python function call):\n\n```\nimport operator\ns = sorted(s, key = operator.itemgetter(1, 2))\n```\n\n\nAnd notice that here you can use ```\nsort```\n instead of using ```\nsorted```\n and then reassigning:\n\n```\ns.sort(key = operator.itemgetter(1, 2))\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I run multiple npm scripts in parallel?\r\n                \r\nIn my ```\npackage.json```\n I have these two scripts:\n\n```\n  \"scripts\": {\n    \"start-watch\": \"nodemon run-babel index.js\",\n    \"wp-server\": \"webpack-dev-server\",\n  }\n```\n\n\nI have to run these 2 scripts in parallel everytime I start developing in Node.js. The first thing I thought of was adding a third script like this:\n\n```\n\"dev\": \"npm run start-watch && npm run wp-server\"\n```\n\n\n... but that will wait for ```\nstart-watch```\n to finish before running ```\nwp-server```\n.\n\nHow can I run these in parallel? Please keep in mind that I need to see the ```\noutput```\n of these commands. Also, if your solution involves a build tool, I'd rather use ```\ngulp```\n instead of ```\ngrunt```\n because I already use it in another project.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Passing data between view controllers\r\n                \r\nI'm new to iOS and Objective-C and the whole MVC paradigm and I'm stuck with the following:\nI have a view that acts as a data entry form and I want to give the user the option to select multiple products. The products are listed on another view with a ```\nUITableViewController```\n and I have enabled multiple selections.\nHow do I transfer the data from one view to another? I will be holding the selections on the ```\nUITableView```\n in an array, but how do I then pass that back to the previous data entry form view so it can be saved along with the other data to Core Data on submission of the form?\nI have surfed around and seen some people declare an array in the app delegate. I read something about singletons, but I don't understand what these are and I read something about creating a data model.\nWhat would be the correct way of performing this and how would I go about it?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "CSS transition shorthand with multiple properties?\r\n                \r\nI can't seem to find the correct syntax for the CSS transition shorthand with multiple properties. This doesn't do anything:\n\n```\n.element {\n  -webkit-transition: height .5s, opacity .5s .5s;\n     -moz-transition: height .5s, opacity .5s .5s;\n      -ms-transition: height .5s, opacity .5s .5s;\n          transition: height .5s, opacity .5s .5s;\n  height: 0;\n  opacity: 0;\n  overflow: 0;\n}\n.element.show {\n  height: 200px;\n  opacity: 1;\n}\n```\n\n\nI add the show class with javascript. The element becomes higher and visible, it just doesn't transition. Testing in latest Chrome, FF and Safari.\n\nWhat am I doing wrong?\n\nEDIT: Just to be clear, I'm looking for the shorthand version to scale my CSS down. It's bloated enough with all the vendor prefixes. Also expanded the example code.\n    ", "Answer": "\r\nSyntax:\n\n```\ntransition: <property> || <duration> || <timing-function> || <delay> [, ...];\n```\n\n\nNote that the duration must come before the delay, if the latter is specified.\n\nIndividual transitions combined in shorthand declarations:\n\n```\n-webkit-transition: height 0.3s ease-out, opacity 0.3s ease 0.5s;\n-moz-transition: height 0.3s ease-out, opacity 0.3s ease 0.5s;\n-o-transition: height 0.3s ease-out, opacity 0.3s ease 0.5s;\ntransition: height 0.3s ease-out, opacity 0.3s ease 0.5s;\n```\n\n\nOr just transition them all:\n\n```\n-webkit-transition: all 0.3s ease-out;\n-moz-transition: all 0.3s ease-out;\n-o-transition: all 0.3s ease-out;\ntransition: all 0.3s ease-out;\n```\n\n\nHere is a straightforward example. Here is another one with the delay property.\n\n\n\nEdit: previously listed here were the compatibilities and known issues regarding ```\ntransition```\n. Removed for readability.\n\nBottom-line: just use it. The nature of this property is non-breaking for all applications and compatibility is now well above 94% globally.\n\nIf you still want to be sure, refer to http://caniuse.com/css-transitions\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Split Strings into words with multiple word boundary delimiters\r\n                \r\nI think what I want to do is a fairly common task but I've found no reference on the web. I have text with punctuation, and I want a list of the words. \n\n```\n\"Hey, you - what are you doing here!?\"\n```\n\n\nshould be\n\n```\n['hey', 'you', 'what', 'are', 'you', 'doing', 'here']\n```\n\n\nBut Python's ```\nstr.split()```\n only works with one argument, so I have all words with the punctuation after I split with whitespace. Any ideas?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Regex to replace multiple spaces with a single space\r\n                \r\nGiven a string like: \n\n\"The dog      has a long   tail, and it     is RED!\"\n\nWhat kind of jQuery or JavaScript magic can be used to keep spaces to only one space max?\n\nGoal: \n\n\"The dog has a long tail, and it is RED!\"\n    ", "Answer": "\r\nGiven that you also want to cover tabs, newlines, etc, just replace ```\n\\s\\s+```\n with ```\n' '```\n: \n\n```\nstring = string.replace(/\\s\\s+/g, ' ');\n```\n\n\nIf you really want to cover only spaces (and thus not tabs, newlines, etc), do so:\n\n```\nstring = string.replace(/  +/g, ' ');\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Understanding NumPy's einsum\r\n                \r\nHow does ```\nnp.einsum```\n work?\nGiven arrays ```\nA```\n and ```\nB```\n, their matrix multiplication followed by transpose is computed using ```\n(A @ B).T```\n, or equivalently, using:\n```\nnp.einsum(\"ij, jk -> ki\", A, B)\n```\n\n    ", "Answer": "\r\n(Note: this answer is based on a short blog post about ```\neinsum```\n I wrote a while ago.)\nWhat does ```\neinsum```\n do?\nImagine that we have two multi-dimensional arrays, ```\nA```\n and ```\nB```\n. Now let's suppose we want to...\n\nmultiply ```\nA```\n with ```\nB```\n in a particular way to create new array of products; and then maybe\nsum this new array along particular axes; and then maybe\ntranspose the axes of the new array in a particular order.\n\nThere's a good chance that ```\neinsum```\n will help us do this faster and more memory-efficiently than combinations of the NumPy functions like ```\nmultiply```\n, ```\nsum```\n and ```\ntranspose```\n will allow.\nHow does ```\neinsum```\n work?\nHere's a simple (but not completely trivial) example. Take the following two arrays:\n```\nA = np.array([0, 1, 2])\n\nB = np.array([[ 0,  1,  2,  3],\n              [ 4,  5,  6,  7],\n              [ 8,  9, 10, 11]])\n```\n\nWe will multiply ```\nA```\n and ```\nB```\n element-wise and then sum along the rows of the new array. In \"normal\" NumPy we'd write:\n```\n>>> (A[:, np.newaxis] * B).sum(axis=1)\narray([ 0, 22, 76])\n```\n\nSo here, the indexing operation on ```\nA```\n lines up the first axes of the two arrays so that the multiplication can be broadcast. The rows of the array of products are then summed to return the answer.\nNow if we wanted to use ```\neinsum```\n instead, we could write:\n```\n>>> np.einsum('i,ij->i', A, B)\narray([ 0, 22, 76])\n```\n\nThe signature string ```\n'i,ij->i'```\n is the key here and needs a little bit of explaining. You can think of it in two halves. On the left-hand side (left of the ```\n->```\n) we've labelled the two input arrays. To the right of ```\n->```\n, we've labelled the array we want to end up with.\nHere is what happens next:\n\n```\nA```\n has one axis; we've labelled it ```\ni```\n. And ```\nB```\n has two axes; we've labelled axis 0 as ```\ni```\n and axis 1 as ```\nj```\n.\n\nBy repeating the label ```\ni```\n in both input arrays, we are telling ```\neinsum```\n that these two axes should be multiplied together. In other words, we're multiplying array ```\nA```\n with each column of array ```\nB```\n, just like ```\nA[:, np.newaxis] * B```\n does.\n\nNotice that ```\nj```\n does not appear as a label in our desired output; we've just used ```\ni```\n (we want to end up with a 1D array). By omitting the label, we're telling ```\neinsum```\n to sum along this axis. In other words, we're summing the rows of the products, just like ```\n.sum(axis=1)```\n does.\n\n\nThat's basically all you need to know to use ```\neinsum```\n. It helps to play about a little; if we leave both labels in the output, ```\n'i,ij->ij'```\n, we get back a 2D array of products (same as ```\nA[:, np.newaxis] * B```\n). If we say no output labels, ```\n'i,ij->```\n, we get back a single number (same as doing ```\n(A[:, np.newaxis] * B).sum()```\n).\nThe great thing about ```\neinsum```\n however, is that it does not build a temporary array of products first; it just sums the products as it goes. This can lead to big savings in memory use.\nA slightly bigger example\nTo explain the dot product, here are two new arrays:\n```\nA = array([[1, 1, 1],\n           [2, 2, 2],\n           [5, 5, 5]])\n\nB = array([[0, 1, 0],\n           [1, 1, 0],\n           [1, 1, 1]])\n```\n\nWe will compute the dot product using ```\nnp.einsum('ij,jk->ik', A, B)```\n. Here's a picture showing the labelling of the ```\nA```\n and ```\nB```\n and the output array that we get from the function:\n\nYou can see that label ```\nj```\n is repeated - this means we're multiplying the rows of ```\nA```\n with the columns of ```\nB```\n. Furthermore, the label ```\nj```\n is not included in the output - we're summing these products. Labels ```\ni```\n and ```\nk```\n are kept for the output, so we get back a 2D array.\nIt might be even clearer to compare this result with the array where the label ```\nj```\n is not summed. Below, on the left you can see the 3D array that results from writing ```\nnp.einsum('ij,jk->ijk', A, B)```\n (i.e. we've kept label ```\nj```\n):\n\nSumming axis ```\nj```\n gives the expected dot product, shown on the right.\nSome exercises\nTo get more of a feel for ```\neinsum```\n, it can be useful to implement familiar NumPy array operations using the subscript notation. Anything that involves combinations of multiplying and summing axes can be written using  ```\neinsum```\n.\nLet A and B be two 1D arrays with the same length. For example, ```\nA = np.arange(10)```\n and ```\nB = np.arange(5, 15)```\n.\n\nThe sum of ```\nA```\n can be written:\n```\nnp.einsum('i->', A)\n```\n\n\nElement-wise multiplication, ```\nA * B```\n, can be written:\n```\nnp.einsum('i,i->i', A, B)\n```\n\n\nThe inner product or dot product, ```\nnp.inner(A, B)```\n or ```\nnp.dot(A, B)```\n, can be written:\n```\nnp.einsum('i,i->', A, B) # or just use 'i,i'\n```\n\n\nThe outer product, ```\nnp.outer(A, B)```\n, can be written:\n```\nnp.einsum('i,j->ij', A, B)\n```\n\n\n\nFor 2D arrays, ```\nC```\n and ```\nD```\n, provided that the axes are compatible lengths (both the same length or one of them of has length 1), here are a few examples:\n\nThe trace of ```\nC```\n (sum of main diagonal), ```\nnp.trace(C)```\n, can be written:\n```\nnp.einsum('ii', C)\n```\n\n\nElement-wise multiplication of ```\nC```\n and the transpose of ```\nD```\n, ```\nC * D.T```\n, can be written:\n```\nnp.einsum('ij,ji->ij', C, D)\n```\n\n\nMultiplying each element of ```\nC```\n by the array ```\nD```\n (to make a 4D array), ```\nC[:, :, None, None] * D```\n, can be written:\n```\nnp.einsum('ij,kl->ijkl', C, D)    \n```\n\n\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is it possible to break a long line to multiple lines in Python? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        How can I do a line break (line continuation) in Python?\r\n                            \r\n                                (10 answers)\r\n                            \r\n                    \r\n                Closed 5 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nJust like C, you can break a long line into multiple short lines. But in Python, if I do this, there will be an indent error... Is it possible?\n    ", "Answer": "\r\nFrom PEP 8 - Style Guide for Python Code:\n\nThe preferred way of wrapping long lines is by using Python's implied line\ncontinuation inside parentheses, brackets and braces.  If necessary, you\ncan add an extra pair of parentheses around an expression, but sometimes\nusing a backslash looks better.  Make sure to indent the continued line\nappropriately.\n\nExample of implicit line continuation:\n```\na = some_function(\n    '1' + '2' + '3' - '4')\n```\n\nOn the topic of line breaks around a binary operator, it goes on to say:\n\nFor decades the recommended style was to break after binary operators.\nBut this can hurt readability in two ways: the operators tend to get scattered across different columns on the screen, and each operator is moved away from its operand and onto the previous line.\n\n\nIn Python code, it is permissible to break before or after a binary operator, as long as the convention is consistent locally. For new code Knuth's style (line breaks before the operator) is suggested.\n\nExample of explicit line continuation:\n```\na = '1'   \\\n    + '2' \\\n    + '3' \\\n    - '4'\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to add multiple classes to a ReactJS Component?\r\n                \r\nI am new to ReactJS and JSX and I am having a little problem with the code below. \n\nI am trying to add multiple classes to the ```\nclassName```\n attribute on each ```\nli```\n:\n\n```\n<li key={index} className={activeClass, data.class, \"main-class\"}></li>\n```\n\n\nMy React component is:\n\n```\nvar AccountMainMenu = React.createClass({\n  getInitialState: function() {\n    return { focused: 0 };\n  },\n\n  clicked: function(index) {\n    this.setState({ focused: index });\n  },\n\n  render: function() {\n    var self = this;\n    var accountMenuData = [\n      {\n        name: \"My Account\",\n        icon: \"icon-account\"\n      },\n      {\n        name: \"Messages\",\n        icon: \"icon-message\"\n      },\n      {\n        name: \"Settings\",\n        icon: \"icon-settings\"\n      }\n    /*{\n        name:\"Help &amp; Support &nbsp; <span class='font-awesome icon-support'></span>(888) 664.6261\",\n        listClass:\"no-mobile last help-support last\"\n      }*/\n    ];\n\n    return (\n      <div className=\"acc-header-wrapper clearfix\">\n        <ul className=\"acc-btns-container\">\n          {accountMenuData.map(function(data, index) {\n            var activeClass = \"\";\n\n            if (self.state.focused == index) {\n              activeClass = \"active\";\n            }\n\n            return (\n              <li\n                key={index}\n                className={activeClass}\n                onClick={self.clicked.bind(self, index)}\n              >\n                <a href=\"#\" className={data.icon}>\n                  {data.name}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n});\n\nReactDOM.render(<AccountMainMenu />, document.getElementById(\"app-container\"));\n```\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to run multiple .BAT files within a .BAT file\r\n                \r\nI'm trying to get my ```\ncommit-build.bat```\n to execute other .BAT files as part of our build process.\n\nContent of ```\ncommit-build.bat```\n:\n\n```\n\"msbuild.bat\"\n\"unit-tests.bat\"\n\"deploy.bat\"\n```\n\n\nThis seems simple enough, but ```\ncommit-build.bat```\n only executes the first item in the list (```\nmsbuild.bat```\n).\n\nI have run each of the files separately with no problems.\n    ", "Answer": "\r\nUse:\n\n```\ncall msbuild.bat\ncall unit-tests.bat\ncall deploy.bat\n```\n\n\nWhen not using CALL, the current batch file stops and the called batch file starts executing. It's a peculiar behavior dating back to the early MS-DOS days.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Creating a singleton in Python\r\n                \r\nThis question is not for the discussion of whether or not the singleton design pattern is desirable, is an anti-pattern, or for any religious wars, but to discuss how this pattern is best implemented in Python in such a way that is most pythonic. In this instance I define 'most pythonic' to mean that it follows the 'principle of least astonishment'.\nI have multiple classes which would become singletons (my use-case is for a logger, but this is not important). I do not wish to clutter several classes with added gumph when I can simply inherit or decorate.\nBest methods:\n\nMethod 1: A decorator\n```\ndef singleton(class_):\n    instances = {}\n    def getinstance(*args, **kwargs):\n        if class_ not in instances:\n            instances[class_] = class_(*args, **kwargs)\n        return instances[class_]\n    return getinstance\n\n@singleton\nclass MyClass(BaseClass):\n    pass\n```\n\nPros\n\nDecorators are additive in a way that is often more intuitive than multiple inheritance.\n\nCons\n\nWhile objects created using ```\nMyClass()```\n would be true singleton objects, ```\nMyClass```\n itself is a function, not a class, so you cannot call class methods from it. Also for\n```\nx = MyClass();\ny = MyClass();\nt = type(n)();\n```\n\n\n\nthen ```\nx == y```\n but ```\nx != t && y != t```\n\n\nMethod 2: A base class\n```\nclass Singleton(object):\n    _instance = None\n    def __new__(class_, *args, **kwargs):\n        if not isinstance(class_._instance, class_):\n            class_._instance = object.__new__(class_, *args, **kwargs)\n        return class_._instance\n\nclass MyClass(Singleton, BaseClass):\n    pass\n```\n\nPros\n\nIt's a true class\n\nCons\n\nMultiple inheritance - eugh! ```\n__new__```\n could be overwritten during inheritance from a second base class? One has to think more than is necessary.\n\n\nMethod 3: A metaclass\n```\nclass Singleton(type):\n    _instances = {}\n    def __call__(cls, *args, **kwargs):\n        if cls not in cls._instances:\n            cls._instances[cls] = super(Singleton, cls).__call__(*args, **kwargs)\n        return cls._instances[cls]\n\n#Python2\nclass MyClass(BaseClass):\n    __metaclass__ = Singleton\n\n#Python3\nclass MyClass(BaseClass, metaclass=Singleton):\n    pass\n```\n\nPros\n\nIt's a true class\nAuto-magically covers inheritance\nUses ```\n__metaclass__```\n for its proper purpose (and made me aware of it)\n\nCons\n\nAre there any?\n\n\nMethod 4: decorator returning a class with the same name\n```\ndef singleton(class_):\n    class class_w(class_):\n        _instance = None\n        def __new__(class_, *args, **kwargs):\n            if class_w._instance is None:\n                class_w._instance = super(class_w,\n                                    class_).__new__(class_,\n                                                    *args,\n                                                    **kwargs)\n                class_w._instance._sealed = False\n            return class_w._instance\n        def __init__(self, *args, **kwargs):\n            if self._sealed:\n                return\n            super(class_w, self).__init__(*args, **kwargs)\n            self._sealed = True\n    class_w.__name__ = class_.__name__\n    return class_w\n\n@singleton\nclass MyClass(BaseClass):\n    pass\n```\n\nPros\n\nIt's a true class\nAuto-magically covers inheritance\n\nCons\n\nIs there not an overhead for creating each new class? Here we are creating two classes for each class we wish to make a singleton. While this is fine in my case, I worry that this might not scale. Of course there is a matter of debate as to whether it aught to be too easy to scale this pattern...\nWhat is the point of the ```\n_sealed```\n attribute\nCan't call methods of the same name on base classes using ```\nsuper()```\n because they will recurse. This means you can't customize ```\n__new__```\n and can't subclass a class that needs you to call up to ```\n__init__```\n.\n\n\nMethod 5: a module\na module file ```\nsingleton.py```\n\nPros\n\nSimple is better than complex\n\nCons\n\nNot lazily instantiated\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Adding multiple class using ng-class\r\n                \r\n\nALERT: This thread is for the old AngularJS!\n\nCan we have multiple expression to add multiple ng-class ?\nfor eg.\n```\n<div ng-class=\"{class1: expressionData1, class2: expressionData2}\"></div>\n```\n\nIf yes can anyone put up the example to do so.\n.\n    ", "Answer": "\r\nTo apply different classes when different expressions evaluate to ```\ntrue```\n:\n\n```\n<div ng-class=\"{class1 : expression1, class2 : expression2}\">\n    Hello World!\n</div>\n```\n\n\nTo apply multiple classes when an expression holds true:\n\n```\n<!-- notice expression1 used twice -->\n<div ng-class=\"{class1 : expression1, class2 : expression1}\">\n    Hello World!\n</div>\n```\n\n\nor quite simply:\n\n```\n<div ng-class=\"{'class1 class2' : expression1}\">\n    Hello World!\n</div>\n```\n\n\nNotice the single quotes surrounding css classes. \n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Can we have multiple <tbody> in same <table>?\r\n                \r\nCan we have multiple ```\n<tbody>```\n tags in same ```\n<table>```\n? If yes then in what scenarios should we use multiple ```\n<tbody>```\n tags?\n    ", "Answer": "\r\nYes you can use them, for example I use them to more easily style groups of data, like this:\n\n\r\n\r\n```\nthead th { width: 100px; border-bottom: solid 1px #ddd; font-weight: bold; }\r\ntbody:nth-child(odd) { background: #f5f5f5;  border: solid 1px #ddd; }\r\ntbody:nth-child(even) { background: #e5e5e5;  border: solid 1px #ddd; }```\n\r\n```\n<table>\r\n    <thead>\r\n        <tr><th>Customer</th><th>Order</th><th>Month</th></tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr><td>Customer 1</td><td>#1</td><td>January</td></tr>\r\n        <tr><td>Customer 1</td><td>#2</td><td>April</td></tr>\r\n        <tr><td>Customer 1</td><td>#3</td><td>March</td></tr>\r\n    </tbody>\r\n    <tbody>\r\n        <tr><td>Customer 2</td><td>#1</td><td>January</td></tr>\r\n        <tr><td>Customer 2</td><td>#2</td><td>April</td></tr>\r\n        <tr><td>Customer 2</td><td>#3</td><td>March</td></tr>\r\n    </tbody>\r\n    <tbody>\r\n        <tr><td>Customer 3</td><td>#1</td><td>January</td></tr>\r\n        <tr><td>Customer 3</td><td>#2</td><td>April</td></tr>\r\n        <tr><td>Customer 3</td><td>#3</td><td>March</td></tr>\r\n    </tbody>\r\n</table>```\n\r\n\r\n\r\n\n\nYou can view an example here. It'll only work in newer browsers, but that's what I'm supporting in my current application, you can use the grouping for JavaScript etc. The main thing is it's a convenient way to visually group the rows to make the data much more readable. There are other uses of course, but as far as applicable examples, this one is the most common one for me.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do you handle multiple submit buttons in ASP.NET MVC Framework?\r\n                \r\nIs there some easy way to handle multiple submit buttons from the same form? For example:\n\n```\n<% Html.BeginForm(\"MyAction\", \"MyController\", FormMethod.Post); %>\n<input type=\"submit\" value=\"Send\" />\n<input type=\"submit\" value=\"Cancel\" />\n<% Html.EndForm(); %>\n```\n\n\nAny idea how to do this in ASP.NET Framework Beta? All examples I've googled for have single buttons in them.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Should I use multiplication or division?\r\n                \r\nHere's a silly fun question:\n\nLet's say we have to perform a simple operation where we need half of the value of a variable. There are typically two ways of doing this:\n\n```\ny = x / 2.0;\n// or...\ny = x * 0.5;\n```\n\n\nAssuming we're using the standard operators provided with the language, which one has better performance?\n\nI'm guessing multiplication is typically better so I try to stick to that when I code, but I would like to confirm this. \n\nAlthough personally I'm interested in the answer for Python 2.4-2.5, feel free to also post an answer for other languages! And if you'd like, feel free to post other fancier ways (like using bitwise shift operators) as well.\n    ", "Answer": "\r\nPython:\n\n```\ntime python -c 'for i in xrange(int(1e8)): t=12341234234.234 / 2.0'\nreal    0m26.676s\nuser    0m25.154s\nsys     0m0.076s\n\ntime python -c 'for i in xrange(int(1e8)): t=12341234234.234 * 0.5'\nreal    0m17.932s\nuser    0m16.481s\nsys     0m0.048s\n```\n\n\nmultiplication is 33% faster\n\nLua:\n\n```\ntime lua -e 'for i=1,1e8 do t=12341234234.234 / 2.0 end'\nreal    0m7.956s\nuser    0m7.332s\nsys     0m0.032s\n\ntime lua -e 'for i=1,1e8 do t=12341234234.234 * 0.5 end'\nreal    0m7.997s\nuser    0m7.516s\nsys     0m0.036s\n```\n\n\n=> no real difference\n\nLuaJIT:\n\n```\ntime luajit -O -e 'for i=1,1e8 do t=12341234234.234 / 2.0 end'\nreal    0m1.921s\nuser    0m1.668s\nsys     0m0.004s\n\ntime luajit -O -e 'for i=1,1e8 do t=12341234234.234 * 0.5 end'\nreal    0m1.843s\nuser    0m1.676s\nsys     0m0.000s\n```\n\n\n=>it's only 5% faster\n\nconclusions: in Python it's faster to multiply than to divide, but as you get closer to the CPU using more advanced VMs or JITs, the advantage disappears.  It's quite possible that a future Python VM would make it irrelevant\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Fast ceiling of an integer division in C / C++\r\n                \r\nGiven integer values ```\nx```\n and ```\ny```\n, C and C++ both return as the quotient ```\nq = x/y```\n the floor of the floating point equivalent.  I'm interested in a method of returning the ceiling instead.  For example, ```\nceil(10/5)=2```\n and ```\nceil(11/5)=3```\n.\n\nThe obvious approach involves something like:\n\n```\nq = x / y;\nif (q * y < x) ++q;\n```\n\n\nThis requires an extra comparison and multiplication; and other methods I've seen (used in fact) involve casting as a ```\nfloat```\n or ```\ndouble```\n.  Is there a more direct method that avoids the additional multiplication (or a second division) and branch, and that also avoids casting as a floating point number?\n    ", "Answer": "\r\nFor positive numbers where you want to find the ceiling (q) of x when divided by y.\n```\nunsigned int x, y, q;\n```\n\nTo round up ...\n```\nq = (x + y - 1) / y;\n```\n\nor (avoiding overflow in x+y)\n```\nq = 1 + ((x - 1) / y); // if x != 0\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Create list of single item repeated N times\r\n                \r\nI want to create a series of lists, all of varying lengths. Each list will contain the same element ```\ne```\n, repeated ```\nn```\n times (where ```\nn```\n = length of the list).\n\nHow do I create the lists, without using a list comprehension ```\n[e for number in xrange(n)]```\n for each list?\n    ", "Answer": "\r\nYou can also write:\n```\n[e] * n\n```\n\nYou should note that if e is for example an empty list you get a list with n references to the same list, not n independent empty lists.\nPerformance testing\nAt first glance it seems that repeat is the fastest way to create a list with n identical elements:\n```\n>>> timeit.timeit('itertools.repeat(0, 10)', 'import itertools', number = 1000000)\n0.37095273281943264\n>>> timeit.timeit('[0] * 10', 'import itertools', number = 1000000)\n0.5577236771712819\n```\n\nBut wait - it's not a fair test...\n```\n>>> itertools.repeat(0, 10)\nrepeat(0, 10)  # Not a list!!!\n```\n\nThe function ```\nitertools.repeat```\n doesn't actually create the list, it just creates an object that can be used to create a list if you wish! Let's try that again, but converting to a list:\n```\n>>> timeit.timeit('list(itertools.repeat(0, 10))', 'import itertools', number = 1000000)\n1.7508119747063233\n```\n\nSo if you want a list, use ```\n[e] * n```\n. If you want to generate the elements lazily, use ```\nrepeat```\n.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is it possible to insert multiple rows at a time in an SQLite database?\r\n                \r\nIn MySQL you can insert multiple rows like this:\n\n```\nINSERT INTO 'tablename' ('column1', 'column2') VALUES\n    ('data1', 'data2'),\n    ('data1', 'data2'),\n    ('data1', 'data2'),\n    ('data1', 'data2');\n```\n\n\nHowever, I am getting an error when I try to do something like this. Is it possible to insert multiple rows at a time in an SQLite database? What is the syntax to do that?\n    ", "Answer": "\r\nupdate\nAs BrianCampbell points out here, SQLite 3.7.11 and above now supports the simpler syntax of the original post.  However, the approach shown is still appropriate if you want maximum compatibility across legacy databases.\noriginal answer\nIf I had privileges, I would bump river's reply: You can insert multiple rows in SQLite, you just need different syntax.  To make it perfectly clear, the OPs MySQL example:\n```\nINSERT INTO 'tablename' ('column1', 'column2') VALUES\n  ('data1', 'data2'),\n  ('data1', 'data2'),\n  ('data1', 'data2'),\n  ('data1', 'data2');\n```\n\nThis can be recast into SQLite as:\n```\n     INSERT INTO 'tablename'\n          SELECT 'data1' AS 'column1', 'data2' AS 'column2'\nUNION ALL SELECT 'data1', 'data2'\nUNION ALL SELECT 'data1', 'data2'\nUNION ALL SELECT 'data1', 'data2'\n```\n\na note on performance\nI originally used this technique to efficiently load large datasets from Ruby on Rails.  However, as Jaime Cook points out, it's not clear this is any faster wrapping individual ```\nINSERTs```\n within a single transaction:\n```\nBEGIN TRANSACTION;\nINSERT INTO 'tablename' table VALUES ('data1', 'data2');\nINSERT INTO 'tablename' table VALUES ('data3', 'data4');\n...\nCOMMIT;\n```\n\nIf efficiency is your goal, you should try this first.\na note on UNION vs UNION ALL\nAs several people commented, if you use ```\nUNION ALL```\n (as shown above), all rows will be inserted, so in this case, you'd get four rows of ```\ndata1, data2```\n.  If you omit the ```\nALL```\n, then duplicate rows will be eliminated (and the operation will presumably be a bit slower).  We're using UNION ALL since it more closely matches the semantics of the original post.\nin closing\nP.S.: Please +1 river's reply, as it presented the solution first.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "how does multiplication differ for NumPy Matrix vs Array classes?\r\n                \r\nThe numpy docs recommend using array instead of matrix for working with matrices. However, unlike octave (which I was using till recently), * doesn't perform matrix multiplication, you need to use the function matrixmultipy(). I feel this makes the code very unreadable.\n\nDoes anybody share my views, and has found a solution?\n    ", "Answer": "\r\nThe main reason to avoid using the ```\nmatrix```\n class is that a) it's inherently 2-dimensional, and b) there's additional overhead compared to a \"normal\" numpy array. If all you're doing is linear algebra, then by all means, feel free to use the matrix class... Personally I find it more trouble than it's worth, though.\n\nFor arrays (prior to Python 3.5), use ```\ndot```\n instead of ```\nmatrixmultiply```\n.\n\nE.g.\n\n```\nimport numpy as np\nx = np.arange(9).reshape((3,3))\ny = np.arange(3)\n\nprint np.dot(x,y)\n```\n\n\nOr in newer versions of numpy, simply use ```\nx.dot(y)```\n\n\nPersonally, I find it much more readable than the ```\n*```\n operator implying matrix multiplication...  \n\nFor arrays in Python 3.5, use ```\nx @ y```\n.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why is there huge performance hit in 2048x2048 versus 2047x2047 array multiplication?\r\n                \r\nI am making some matrix multiplication benchmarking, as previously mentioned in \nWhy is MATLAB so fast in matrix multiplication?\n\nNow I've got another issue, when multiplying two 2048x2048 matrices, there is a big difference between C# and others. When I try multiply only 2047x2047 matrices, it seems normal. Added some others for comparsion too.\n\n1024x1024 - 10 seconds.\n\n1027x1027 - 10 seconds.\n\n2047x2047 - 90 seconds.\n\n2048x2048 - 300 seconds.\n\n2049x2049 - 91 seconds. (update)\n\n2500x2500 - 166 seconds\n\nThat is three and a half minute difference for the 2k by 2k case.\n\nusing 2dim arrays\n\n```\n//Array init like this\nint rozmer = 2048;\nfloat[,] matice = new float[rozmer, rozmer];\n\n//Main multiply code\nfor(int j = 0; j < rozmer; j++)\n{\n   for (int k = 0; k < rozmer; k++)\n   {\n     float temp = 0;\n     for (int m = 0; m < rozmer; m++)\n     {\n       temp = temp + matice1[j,m] * matice2[m,k];\n     }\n     matice3[j, k] = temp;\n   }\n }\n```\n\n    ", "Answer": "\r\nThis probably has do with conflicts in your L2 cache.\n\nCache misses on matice1 are not the problem because they are accessed sequentially.\nHowever for matice2 if a full column fits in L2 (i.e when you access matice2[0, 0], matice2[1, 0], matice2[2, 0] ... etc, nothing gets evicted) than there is no problem with cache misses with matice2 either.\n\nNow to go deeper in how caches works, if byte address of your variable is X, than the cache line for it would be (X >> 6) & (L - 1). Where L is total number of cache lines in your cache. L is always power of 2. \nThe six comes from fact that 2^6 == 64 bytes is standard size of cache line.\n\nNow what does this mean? Well it means that if I have address X and address Y and \n(X >> 6) - (Y >> 6) is divisible by L (i.e. some large power of 2), they will be stored in the same cacheline.\n\nNow to go back to your problem what is the difference between 2048 and 2049, \n\nwhen 2048 is your size:\n\nif you take &matice2[x, k] and &matice2[y, k] the difference (&matice2[x, k] >> 6) - (&matice2[y,k] >> 6) will be divisible by 2048 * 4 (size of float). So a large power of 2.\n\nThus depending on size of your L2 you will have a lot of cache line conflicts, and only utilize small portion of your L2 to store a column, thus you wont actually be able to store full column in your cache, thus you will get bad performance.\n\nWhen size is 2049, then the difference is 2049 * 4 which is not power of 2 thus you will have less conflicts and your column will safely fit into your cache.\n\nNow to test this theory there are couple things you can do:\n\nAllocate your array matice2 array like this matice2 [razmor, 4096], and run with razmor = 1024, 1025 or any size, and you should see very bad performance compared to what you had before. This is because you forcefully align all columns to conflict with each other.\n\nThen try matice2 [razmor, 4097] and run it with any size and you should see much better performance.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple variables in a 'with' statement?\r\n                \r\nIs it possible to declare more than one variable using a ```\nwith```\n statement in Python?\n\nSomething like:\n\n```\nfrom __future__ import with_statement\n\nwith open(\"out.txt\",\"wt\"), open(\"in.txt\") as file_out, file_in:\n    for line in file_in:\n        file_out.write(line)\n```\n\n\n... or is cleaning up two resources at the same time the problem?\n    ", "Answer": "\r\nIt is possible in Python 3 since v3.1 and  Python 2.7. The new ```\nwith```\n syntax supports multiple context managers:\n```\nwith A() as a, B() as b, C() as c:\n    doSomething(a,b,c)\n```\n\nUnlike the ```\ncontextlib.nested```\n, this guarantees that ```\na```\n and ```\nb```\n will have their ```\n__exit__()```\n's called even if ```\nC()```\n or it's ```\n__enter__()```\n method raises an exception.\nYou can also use earlier variables in later definitions (h/t Ahmad below):\n```\nwith A() as a, B(a) as b, C(a, b) as c:\n    doSomething(a, c)\n```\n\nAs of Python 3.10, you can use parentheses:\n```\nwith (\n    A() as a, \n    B(a) as b, \n    C(a, b) as c,\n):\n    doSomething(a, c)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Can I catch multiple Java exceptions in the same catch clause?\r\n                \r\nIn Java, I want to do something like this:\n\n```\ntry {\n    ...     \n} catch (/* code to catch IllegalArgumentException, SecurityException, \n            IllegalAccessException, and NoSuchFieldException at the same time */) {\n   someCode();\n}\n```\n\n\n...instead of:\n\n```\ntry {\n    ...     \n} catch (IllegalArgumentException e) {\n    someCode();\n} catch (SecurityException e) {\n    someCode();\n} catch (IllegalAccessException e) {\n    someCode();\n} catch (NoSuchFieldException e) {\n    someCode();\n}\n```\n\n\nIs there any way to do this?\n    ", "Answer": "\r\nThis has been possible since Java 7. The syntax for a multi-catch block is:\n```\ntry { \n  ...\n} catch (IllegalArgumentException | SecurityException | IllegalAccessException |\n            NoSuchFieldException e) { \n  someCode();\n}\n```\n\nRemember, though, that if all the exceptions belong to the same class hierarchy, you can simply catch that base exception type.\nAlso note that you cannot catch both ```\nExceptionA```\n and ```\nExceptionB```\n in the same block if ```\nExceptionB```\n is inherited, either directly or indirectly, from ```\nExceptionA```\n. The compiler will complain:\n```\nAlternatives in a multi-catch statement cannot be related by subclassing\n  Alternative ExceptionB is a subclass of alternative ExceptionA\n```\n\nThe fix for this is to only include the ancestor exception in the exception list, as it will also catch exceptions of the descendant type.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "bit shift vs multiplication\r\n                \r\nI am trying convert a byte array to a number and for large numbers, \n   I see that the bit shift is giving -ve results. \n   Can one of you please why we see this issue? Do you see any drawbacks using \"multiplication\" instead of \"bit-shift\"?\n\nFor example, \n\n```\n<script language=\"JavaScript\">\n    var myVar = 1000000;\n    document.write(\"Bit shift Result: \" + (myVar << 8));\n    document.write(\"<br>\");\n    document.write(\"Multiplication Result: \" + parseInt(myVar *256));\n</script>\n```\n\n\n\n  Output: \n  \n  Bit shift Result : 256000000\n  \n  Multiplication Result: 256000000\n\n\nUpon adding one more zero to myVar, you see the issue I am talking about \n\n```\n<script language=\"JavaScript\">\n    var myVar = 10000000;\n    document.write(\"Bit shift Result: \" + (myVar << 8));\n    document.write(\"<br>\");\n    document.write(\"Multiplication Result: \" + parseInt(myVar *256));\n</script>\n```\n\n\n\n  Output:\n  Bit shift Result: -1734967296\n  \n  Multiplication Result: 2560000000\n\n    ", "Answer": "\r\nTo answer both your questions:\nCan one of you please why we see this issue?\nJavaScript numbers are standard IEEE doubles.\nThe largest integer value JavaScript can hold is: ```\n9007199254740992```\n\nHowever, the bitshift operator works on 32 bit ints.\nAnd I quote the language specification:\n\n5 . Let lnum be ToInt32(lval).\n...\nReturn the result of performing a sign-extending right shift of lnum by shiftCount bits. The most significant bit is propagated. The result is a signed 32-bit integer.\n\nDo you see any drawbacks using \"multiplication\" instead of \"bit-shift\"?\nIt still is kind of slower, but you should really avoid working directly with very large numbers in JavaScript most of the time anyway.\nThere are libraries that deal with very large numbers and there are features that are being discuss to add better support to large numbers to the language (ES7 value types).\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to comment multiple lines in Visual Studio Code?\r\n                \r\nI cannot find a way to comment and uncomment multiple lines of code in Visual Studio Code.\n\nIs it possible to comment and uncomment multiple lines in Visual Studio Code using some shortcut? If yes, how to do it?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Vertical rulers in Visual Studio Code\r\n                \r\nRendering More than One Ruler in VS Code\n\nVS Code's default configuration for a ruler is demonstrated below.\n```\n  \"editor.ruler\": 80\n```\n\nThe issue I am having with the default VS Code configuration (as shown above) is that it only renders a single ruler. In the Sublime Text Editor I can render as many rulers as I like using the following Sublime configuration.\n```\n  \"rulers\": [72, 80, 100, 120]\n```\n\nIs it possible to render multiple rulers in V.S. Code. If it is possible, What does a multi-ruler configuration look like in VS Code?\n    ", "Answer": "\r\nVisual Studio Code 0.10.10 introduced this feature. To configure it, go to menu File → Preferences → Settings and add this to to your user or workspace settings:\n\n```\n\"editor.rulers\": [80,120]\n```\n\n\nThe color of the rulers can be customized like this:\n\n```\n\"workbench.colorCustomizations\": {\n    \"editorRuler.foreground\": \"#ff4081\"\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to replace a string in multiple files in linux command line\r\n                \r\nI need to replace a string in a lot of files in a folder, with only ```\nssh```\n access to the server. How can I do this?\n    ", "Answer": "\r\n```\ncd /path/to/your/folder\nsed -i 's/foo/bar/g' *\n```\n\n\nOccurrences of \"foo\" will be replaced with \"bar\".\n\nOn BSD systems like macOS, you need to provide a backup extension like ```\n-i '.bak'```\n or else \"risk corruption or partial content\" per the manpage.\n\n```\ncd /path/to/your/folder\nsed -i '.bak' 's/foo/bar/g' *\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to pass command line arguments to a rake task\r\n                \r\nI have a rake task that needs to insert a value into multiple databases.  \n\nI'd like to pass this value into the rake task from the command line, or from another rake task.\n\nHow can I do this?\n    ", "Answer": "\r\nYou can specify formal arguments in rake by adding symbol arguments to the task call.  For example:\n\n```\nrequire 'rake'\n\ntask :my_task, [:arg1, :arg2] do |t, args|\n  puts \"Args were: #{args} of class #{args.class}\"\n  puts \"arg1 was: '#{args[:arg1]}' of class #{args[:arg1].class}\"\n  puts \"arg2 was: '#{args[:arg2]}' of class #{args[:arg2].class}\"\nend\n\ntask :invoke_my_task do\n  Rake.application.invoke_task(\"my_task[1, 2]\")\nend\n\n# or if you prefer this syntax...\ntask :invoke_my_task_2 do\n  Rake::Task[:my_task].invoke(3, 4)\nend\n\n# a task with prerequisites passes its \n# arguments to it prerequisites\ntask :with_prerequisite, [:arg1, :arg2] => :my_task #<- name of prerequisite task\n\n# to specify default values, \n# we take advantage of args being a Rake::TaskArguments object\ntask :with_defaults, :arg1, :arg2 do |t, args|\n  args.with_defaults(:arg1 => :default_1, :arg2 => :default_2)\n  puts \"Args with defaults were: #{args}\"\nend\n```\n\n\nThen, from the command line:\n\n\n> rake my_task[1,false]\nArgs were: {:arg1=>\"1\", :arg2=>\"false\"} of class Rake::TaskArguments\narg1 was: '1' of class String\narg2 was: 'false' of class String\n\n> rake \"my_task[1, 2]\"\nArgs were: {:arg1=>\"1\", :arg2=>\"2\"}\n\n> rake invoke_my_task\nArgs were: {:arg1=>\"1\", :arg2=>\"2\"}\n\n> rake invoke_my_task_2\nArgs were: {:arg1=>3, :arg2=>4}\n\n> rake with_prerequisite[5,6]\nArgs were: {:arg1=>\"5\", :arg2=>\"6\"}\n\n> rake with_defaults\nArgs with defaults were: {:arg1=>:default_1, :arg2=>:default_2}\n\n> rake with_defaults['x','y']\nArgs with defaults were: {:arg1=>\"x\", :arg2=>\"y\"}\n\n\nAs demonstrated in the second example, if you want to use spaces, the quotes around the target name are necessary to keep the shell from splitting up the arguments at the space.\n\nLooking at the code in rake.rb, it appears that rake does not parse task strings to extract arguments for prerequisites, so you can't do ```\ntask :t1 => \"dep[1,2]\"```\n.  The only way to specify different arguments for a prerequisite would be to invoke it explicitly within the dependent task action, as in ```\n:invoke_my_task```\n and ```\n:invoke_my_task_2```\n.\n\nNote that some shells (like zsh) require you to escape the brackets: ```\nrake my_task\\['arg1'\\]```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Variables Multiplication for the factorial calculation\r\n                \r\nI'm making a script that calculates the factorial for a given number, but I'm having some problems with the multiplication.\nNote: the factorial for is given by: ```\n9!=9*8*7*6*5*4*3*2*1```\n\nHere's my code:\n```\n#!/bin/bash\n\necho \"Insert an Integer\"\n\nread input\n\nif ! [[ \"$input\" =~ ^[0-9]+$ ]] ; then\n   exec >&2; echo \"Error: You didn't enter an integer\"; exit 1\nfi\n\nfunction factorial\n{\nwhile [ \"$input\" != 1 ];\ndo\n    result=$(($result * $input))\n    input=$(($input-1))\ndone\n}\nfactorial\necho \"The Factorial of \" $input \"is\" $result\n```\n\nit keeps giving me errors of all kinds for different multiplication technics :/\nCurrently the output is:\n\n```\njoaomartinsrei@joaomartinsrei ~/Área de Trabalho/Shell $ \n./factorial.sh\nInsert an Integer\n3\n./factorial.sh: line 15: * 3: syntax error: operand expected (error token is \"* 3\")\nThe factorial of 3 is\n```\n\n\n    ", "Answer": "\r\nThe main problem is that you never initialize ```\nresult```\n (to ```\n1```\n), so this:\n\n```\nresult=$(($result * $input))\n```\n\n\nis equivalent to this:\n\n```\nresult=$(( * $input))\n```\n\n\nwhich is not a valid arithmetic expression.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "What do multiple arrow functions mean in JavaScript?\r\n                \r\nI have been reading a bunch of React code and I see stuff like this that I don't understand:\n```\nhandleChange = field => e => {\n  e.preventDefault();\n  /// Do something here\n}\n```\n\n    ", "Answer": "\r\nThat is a curried function\n\nFirst, examine this function with two parameters …\n\n```\nconst add = (x, y) => x + y\nadd(2, 3) //=> 5\n```\n\n\nHere it is again in curried form …\n\n```\nconst add = x => y => x + y\n```\n\n\nHere is the same1 code without arrow functions …\n\n```\nconst add = function (x) {\n  return function (y) {\n    return x + y\n  }\n}\n```\n\n\n\n\nFocus on ```\nreturn```\n\n\nIt might help to visualize it another way. We know that arrow functions work like this – let's pay particular attention to the return value.\n\n```\nconst f = someParam => returnValue```\n\n\nSo our ```\nadd```\n function returns a function – we can use parentheses for added clarity. The bolded text is the return value of our function ```\nadd```\n\n\n```\nconst add = x => (y => x + y)```\n\n\nIn other words ```\nadd```\n of some number returns a function\n\n```\nadd(2) // returns (y => 2 + y)\n```\n\n\n\n\nCalling curried functions\n\nSo in order to use our curried function, we have to call it a bit differently …\n\n```\nadd(2)(3)  // returns 5\n```\n\n\nThis is because the first (outer) function call returns a second (inner) function. Only after we call the second function do we actually get the result. This is more evident if we separate the calls on two lines …\n\n```\nconst add2 = add(2) // returns function(y) { return 2 + y }\nadd2(3)             // returns 5\n```\n\n\n\n\nApplying our new understanding to your code\n\n\n  related: ”What’s the difference between binding, partial application, and currying?”\n\n\nOK, now that we understand how that works, let's look at your code\n\n```\nhandleChange = field => e => {\n  e.preventDefault()\n  /// Do something here\n}\n```\n\n\nWe'll start by representing it without using arrow functions …\n\n```\nhandleChange = function(field) {\n  return function(e) {\n    e.preventDefault()\n    // Do something here\n    // return ...\n  };\n};\n```\n\n\nHowever, because arrow functions lexically bind ```\nthis```\n, it would actually look more like this …\n\n```\nhandleChange = function(field) {\n  return function(e) {\n    e.preventDefault()\n    // Do something here\n    // return ...\n  }.bind(this)\n}.bind(this)\n```\n\n\nMaybe now we can see what this is doing more clearly. The ```\nhandleChange```\n function is creating a function for a specified ```\nfield```\n. This is a handy React technique because you're required to setup your own listeners on each input in order to update your applications state. By using the ```\nhandleChange```\n function, we can eliminate all the duplicated code that would result in setting up ```\nchange```\n listeners for each field. Cool!\n\n1 Here I did not have to lexically bind ```\nthis```\n because the original ```\nadd```\n function does not use any context, so it is not important to preserve it in this case.\n\n\n\nEven more arrows\n\nMore than two arrow functions can be sequenced, if necessary -\n\n```\nconst three = a => b => c =>\n  a + b + c\n\nconst four = a => b => c => d =>\n  a + b + c + d\n\nthree (1) (2) (3) // 6\n\nfour (1) (2) (3) (4) // 10\n```\n\n\nCurried functions are capable of surprising things. Below we see ```\n$```\n defined as a curried function with two parameters, yet at the call site, it appears as though we can supply any number of arguments. Currying is the abstraction of arity -\n\n\r\n\r\n```\nconst $ = x => k =>\r\n  $ (k (x))\r\n  \r\nconst add = x => y =>\r\n  x + y\r\n\r\nconst mult = x => y =>\r\n  x * y\r\n  \r\n$ (1)           // 1\r\n  (add (2))     // + 2 = 3\r\n  (mult (6))    // * 6 = 18\r\n  (console.log) // 18\r\n  \r\n$ (7)            // 7\r\n  (add (1))      // + 1 = 8\r\n  (mult (8))     // * 8 = 64\r\n  (mult (2))     // * 2 = 128\r\n  (mult (2))     // * 2 = 256\r\n  (console.log)  // 256```\n\r\n\r\n\r\n\n\nPartial application\n\nPartial application is a related concept. It allows us to partially apply functions, similar to currying, except the function does not have to be defined in curried form -\n\n```\nconst partial = (f, ...a) => (...b) =>\n  f (...a, ...b)\n\nconst add3 = (x, y, z) =>\n  x + y + z\n\npartial (add3) (1, 2, 3)   // 6\n\npartial (add3, 1) (2, 3)   // 6\n\npartial (add3, 1, 2) (3)   // 6\n\npartial (add3, 1, 2, 3) () // 6\n\npartial (add3, 1, 1, 1, 1) (1, 1, 1, 1, 1) // 3\n```\n\n\nHere's a working demo of ```\npartial```\n you can play with in your own browser -\n\n\r\n\r\n```\nconst partial = (f, ...a) => (...b) =>\r\n  f (...a, ...b)\r\n  \r\nconst preventDefault = (f, event) =>\r\n  ( event .preventDefault ()\r\n  , f (event)\r\n  )\r\n  \r\nconst logKeypress = event =>\r\n  console .log (event.which)\r\n  \r\ndocument\r\n  .querySelector ('input[name=foo]')\r\n  .addEventListener ('keydown', partial (preventDefault, logKeypress))```\n\r\n```\n<input name=\"foo\" placeholder=\"type here to see ascii codes\" size=\"50\">```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Return multiple values to a method caller\r\n                \r\nI read the C++ version of this question but didn't really understand it.\nCan someone please explain clearly if it can be done in C#, and how?\n    ", "Answer": "\r\nNow that C# 7 has been released, you can use the new included Tuples syntax\n\n```\n(string, string, string) LookupName(long id) // tuple return type\n{\n    ... // retrieve first, middle and last from data storage\n    return (first, middle, last); // tuple literal\n}\n```\n\n\nwhich could then be used like this:\n\n```\nvar names = LookupName(id);\nWriteLine($\"found {names.Item1} {names.Item3}.\");\n```\n\n\nYou can also provide names to your elements (so they are not \"Item1\", \"Item2\" etc). You can do it by adding a name to the signature or the return methods:\n\n```\n(string first, string middle, string last) LookupName(long id) // tuple elements have names\n```\n\n\nor \n\n```\nreturn (first: first, middle: middle, last: last); // named tuple elements in a literal\n```\n\n\nThey can also be deconstructed, which is a pretty nice new feature:\n\n```\n(string first, string middle, string last) = LookupName(id1); // deconstructing declaration\n```\n\n\nCheck out this link to see more examples on what can be done :)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I indent multiple lines in Xcode?\r\n                \r\nWhen I select multiple lines of code and want to indent them as usual with TAB key, it just deletes them all. I come from Eclipse where I always did it that way. How's that done in Xcode? I hope not line by line ;)\n    ", "Answer": "\r\nThe keyboard shortcuts are ⌘+] for indent and ⌘+[ for un-indent.  \n\n\nIn Xcode's preferences window, click the Key Bindings toolbar button. The Key Bindings section is where you customize keyboard shortcuts.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Capturing multiple line output into a Bash variable\r\n                \r\nI've got a script 'myscript' that outputs the following:\n\n```\nabc\ndef\nghi\n```\n\n\nin another script, I call:\n\n```\ndeclare RESULT=$(./myscript)\n```\n\n\nand ```\n$RESULT```\n gets the value\n\n```\nabc def ghi\n```\n\n\nIs there a way to store the result either with the newlines, or with '\\n' character so I can output it with '```\necho -e```\n'?\n    ", "Answer": "\r\nActually, RESULT contains what you want — to demonstrate:\n\n```\necho \"$RESULT\"\n```\n\n\nWhat you show is what you get from:\n\n```\necho $RESULT\n```\n\n\n\n\nAs noted in the comments, the difference is that (1) the double-quoted version of the variable (```\necho \"$RESULT\"```\n) preserves internal spacing of the value exactly as it is represented in the variable — newlines, tabs, multiple blanks and all — whereas (2) the unquoted version (```\necho $RESULT```\n) replaces each sequence of one or more blanks, tabs and newlines with a single space. Thus (1) preserves the shape of the input variable, whereas (2) creates a potentially very long single line of output with 'words' separated by single spaces (where a 'word' is a sequence of non-whitespace characters; there needn't be any alphanumerics in any of the words).\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I break out of multiple loops?\r\n                \r\nGiven the following code (that doesn't work):\n```\nwhile True:\n    # Snip: print out current state\n    while True:\n        ok = get_input(\"Is this ok? (y/n)\")\n        if ok.lower() == \"y\": break 2 # This doesn't work :(\n        if ok.lower() == \"n\": break\n\n    # Do more processing with menus and stuff\n```\n\nIs there a way to make this work? Or do I have do one check to break out of the input loop, then another, more limited, check in the outside loop to break out all together if the user is satisfied?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Import multiple CSV files into pandas and concatenate into one DataFrame\r\n                \r\nI would like to read several CSV files from a directory into pandas and concatenate them into one big DataFrame. I have not been able to figure it out though. Here is what I have so far:\n```\nimport glob\nimport pandas as pd\n\n# Get data file names\npath = r'C:\\DRO\\DCL_rawdata_files'\nfilenames = glob.glob(path + \"/*.csv\")\n\ndfs = []\nfor filename in filenames:\n    dfs.append(pd.read_csv(filename))\n\n# Concatenate all data into one DataFrame\nbig_frame = pd.concat(dfs, ignore_index=True)\n```\n\nI guess I need some help within the for loop?\n    ", "Answer": "\r\nSee pandas: IO tools for all of the available ```\n.read_```\n methods.\nTry the following code if all of the CSV files have the same columns.\nI have added ```\nheader=0```\n, so that after reading the CSV file's first row, it can be assigned as the column names.\n```\nimport pandas as pd\nimport glob\nimport os\n\npath = r'C:\\DRO\\DCL_rawdata_files' # use your path\nall_files = glob.glob(os.path.join(path , \"/*.csv\"))\n\nli = []\n\nfor filename in all_files:\n    df = pd.read_csv(filename, index_col=None, header=0)\n    li.append(df)\n\nframe = pd.concat(li, axis=0, ignore_index=True)\n```\n\nOr, with attribution to a comment from Sid.\n```\nall_files = glob.glob(os.path.join(path, \"*.csv\"))\n\ndf = pd.concat((pd.read_csv(f) for f in all_files), ignore_index=True)\n```\n\n\n\nIt's often necessary to identify each sample of data, which can be accomplished by adding a new column to the dataframe.\n```\npathlib```\n from the standard library will be used for this example. It treats paths as objects with methods, instead of strings to be sliced.\n\nImports and Setup\n```\nfrom pathlib import Path\nimport pandas as pd\nimport numpy as np\n\npath = r'C:\\DRO\\DCL_rawdata_files'  # or unix / linux / mac path\n\n# Get the files from the path provided in the OP\nfiles = Path(path).glob('*.csv')  # .rglob to get subdirectories\n```\n\nOption 1:\n\nAdd a new column with the file name\n\n```\ndfs = list()\nfor f in files:\n    data = pd.read_csv(f)\n    # .stem is method for pathlib objects to get the filename w/o the extension\n    data['file'] = f.stem\n    dfs.append(data)\n\ndf = pd.concat(dfs, ignore_index=True)\n```\n\nOption 2:\n\nAdd a new column with a generic name using ```\nenumerate```\n\n\n```\ndfs = list()\nfor i, f in enumerate(files):\n    data = pd.read_csv(f)\n    data['file'] = f'File {i}'\n    dfs.append(data)\n\ndf = pd.concat(dfs, ignore_index=True)\n```\n\nOption 3:\n\nCreate the dataframes with a list comprehension, and then use ```\nnp.repeat```\n to add a new column.\n\n```\n[f'S{i}' for i in range(len(dfs))]```\n creates a list of strings to name each dataframe.\n```\n[len(df) for df in dfs]```\n creates a list of lengths\n\n\nAttribution for this option goes to this plotting answer.\n\n```\n# Read the files into dataframes\ndfs = [pd.read_csv(f) for f in files]\n\n# Combine the list of dataframes\ndf = pd.concat(dfs, ignore_index=True)\n\n# Add a new column\ndf['Source'] = np.repeat([f'S{i}' for i in range(len(dfs))], [len(df) for df in dfs])\n```\n\nOption 4:\n\nOne liners using ```\n.assign```\n to create the new column, with attribution to a comment from C8H10N4O2\n\n```\ndf = pd.concat((pd.read_csv(f).assign(filename=f.stem) for f in files), ignore_index=True)\n```\n\nor\n```\ndf = pd.concat((pd.read_csv(f).assign(Source=f'S{i}') for i, f in enumerate(files)), ignore_index=True)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple Updates in MySQL\r\n                \r\nI know that you can insert multiple rows at once, is there a way to update multiple rows at once (as in, in one query) in MySQL?\n\nEdit:\nFor example I have the following\n\n```\nName   id  Col1  Col2\nRow1   1    6     1\nRow2   2    2     3\nRow3   3    9     5\nRow4   4    16    8\n```\n\n\nI want to combine all the following Updates into one query\n\n```\nUPDATE table SET Col1 = 1 WHERE id = 1;\nUPDATE table SET Col1 = 2 WHERE id = 2;\nUPDATE table SET Col2 = 3 WHERE id = 3;\nUPDATE table SET Col1 = 10 WHERE id = 4;\nUPDATE table SET Col2 = 12 WHERE id = 4;\n```\n\n    ", "Answer": "\r\nYes, that's possible - you can use INSERT ... ON DUPLICATE KEY UPDATE.\n\nUsing your example:\n\n```\nINSERT INTO table (id,Col1,Col2) VALUES (1,1,1),(2,2,3),(3,9,3),(4,10,12)\nON DUPLICATE KEY UPDATE Col1=VALUES(Col1),Col2=VALUES(Col2);\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is there a simple way to remove multiple spaces in a string?\r\n                \r\nSuppose this string:\n\n```\nThe   fox jumped   over    the log.\n```\n\n\nTurning into:\n\n```\nThe fox jumped over the log.\n```\n\n\nWhat is the simplest (1-2 lines) to achieve this, without splitting and going into lists?\n    ", "Answer": "\r\n```\n>>> import re\n>>> re.sub(' +', ' ', 'The     quick brown    fox')\n'The quick brown fox'\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Floating point division vs floating point multiplication\r\n                \r\nIs there any (non-microoptimization) performance gain by coding\n\n```\nfloat f1 = 200f / 2\n```\n\n\nin comparision to\n\n```\nfloat f2 = 200f * 0.5\n```\n\n\nA professor of mine told me a few years ago that floating point divisions were slower than floating point multiplications without elaborating the why.\n\nDoes this statement hold for modern PC architecture?\n\nUpdate1\n\nIn respect to a comment, please do also consider this case:\n\n```\nfloat f1;\nfloat f2 = 2\nfloat f3 = 3;\nfor( i =0 ; i < 1e8; i++)\n{\n  f1 = (i * f2 + i / f3) * 0.5; //or divide by 2.0f, respectively\n}\n```\n\n\nUpdate 2\nQuoting from the comments:\n\n\n  [I want] to know what are the algorithmic / architectural requirements that cause > division to be vastly more complicated in hardware than multiplication\n\n    ", "Answer": "\r\nYes, many CPUs can perform multiplication in 1 or 2 clock cycles but division always takes longer (although FP division is sometimes faster than integer division).\n\nIf you look at this answer you will see that division can exceed 24 cycles.\n\nWhy does division take so much longer than multiplication? If you remember back to grade school, you may recall that multiplication can essentially be performed with many simultaneous additions. Division requires iterative subtraction that cannot be performed simultaneously so it takes longer. In fact, some FP units speed up division by performing a reciprocal approximation and multiplying by that. It isn't quite as accurate but is somewhat faster.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple lines of text in UILabel\r\n                \r\nIs there a way to have multiple lines of text in ```\nUILabel```\n like in the ```\nUITextView```\n or should I use the second one instead?\n    ", "Answer": "\r\nSet the line break mode to word-wrapping and the number of lines to ```\n0```\n:\n```\n// Swift\ntextLabel.lineBreakMode = .byWordWrapping\ntextLabel.numberOfLines = 0\n\n// Objective-C\ntextLabel.lineBreakMode = NSLineBreakByWordWrapping;\ntextLabel.numberOfLines = 0;\n\n// C# (Xamarin.iOS)\ntextLabel.LineBreakMode = UILineBreakMode.WordWrap;\ntextLabel.Lines = 0;  \n```\n\nRestored old answer (for reference and devs willing to support iOS below 6.0):\n```\ntextLabel.lineBreakMode = UILineBreakModeWordWrap;\ntextLabel.numberOfLines = 0;\n```\n\nOn the side: both enum values yield to ```\n0```\n anyway.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is it possible to have multiple styles inside a TextView?\r\n                \r\nIs it possible to set multiple styles for different pieces of text inside a TextView?\n\nFor instance, I am setting the text as follows:\n\n```\ntv.setText(line1 + \"\\n\" + line2 + \"\\n\" + word1 + \"\\t\" + word2 + \"\\t\" + word3);\n```\n\n\nIs it possible to have a different style for each text element? E.g., line1 bold, word1 italic, etc.\n\nThe developer guide's Common Tasks and How to Do Them in Android includes Selecting, Highlighting, or Styling Portions of Text:\n\n\n```\n// Get our EditText object.\nEditText vw = (EditText)findViewById(R.id.text);\n\n// Set the EditText's text.\nvw.setText(\"Italic, highlighted, bold.\");\n\n// If this were just a TextView, we could do:\n// vw.setText(\"Italic, highlighted, bold.\", TextView.BufferType.SPANNABLE);\n// to force it to use Spannable storage so styles can be attached.\n// Or we could specify that in the XML.\n\n// Get the EditText's internal text storage\nSpannable str = vw.getText();\n\n// Create our span sections, and assign a format to each.\nstr.setSpan(new StyleSpan(android.graphics.Typeface.ITALIC), 0, 7, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\nstr.setSpan(new BackgroundColorSpan(0xFFFFFF00), 8, 19, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\nstr.setSpan(new StyleSpan(android.graphics.Typeface.BOLD), 21, str.length() - 1, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\n```\n\n\n\nBut that uses explicit position numbers inside the text. Is there a cleaner way to do this?\n    ", "Answer": "\r\nIn case, anyone is wondering how to do this, here's one way: (Thanks to Mark again!)\n\n```\nmBox = new TextView(context);\nmBox.setText(Html.fromHtml(\"<b>\" + title + \"</b>\" +  \"<br />\" + \n            \"<small>\" + description + \"</small>\" + \"<br />\" + \n            \"<small>\" + DateAdded + \"</small>\"));\n```\n\n\nFor an unofficial list of tags supported by this method, refer to this link or this question: Which HTML tags are supported by Android TextView?\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "What is the difference between canonical name, simple name and class name in Java Class?\r\n                \r\nIn Java, what is the difference between these:\n\n```\nObject o1 = ....\no1.getClass().getSimpleName();\no1.getClass().getName();\no1.getClass().getCanonicalName();\n```\n\n\nI have checked the Javadoc multiple times and yet this never explains it well.\nI also ran a test and that didn't reflect any real meaning behind the way these methods are called.\n    ", "Answer": "\r\nIf you're unsure about something, try writing a test first.\nI did this:\n```\nclass ClassNameTest {\n    public static void main(final String... arguments) {\n        printNamesForClass(\n            int.class,\n            \"int.class (primitive)\");\n        printNamesForClass(\n            String.class,\n            \"String.class (ordinary class)\");\n        printNamesForClass(\n            java.util.HashMap.SimpleEntry.class,\n            \"java.util.HashMap.SimpleEntry.class (nested class)\");\n        printNamesForClass(\n            new java.io.Serializable(){}.getClass(),\n            \"new java.io.Serializable(){}.getClass() (anonymous inner class)\");\n    }\n\n    private static void printNamesForClass(final Class<?> clazz, final String label) {\n        System.out.println(label + \":\");\n        System.out.println(\"    getName():          \" + clazz.getName());\n        System.out.println(\"    getCanonicalName(): \" + clazz.getCanonicalName());\n        System.out.println(\"    getSimpleName():    \" + clazz.getSimpleName());\n        System.out.println(\"    getTypeName():      \" + clazz.getTypeName()); // added in Java 8\n        System.out.println();\n    }\n}\n```\n\nPrints:\n```\nint.class (primitive):\n    getName():          int\n    getCanonicalName(): int\n    getSimpleName():    int\n    getTypeName():      int\n\nString.class (ordinary class):\n    getName():          java.lang.String\n    getCanonicalName(): java.lang.String\n    getSimpleName():    String\n    getTypeName():      java.lang.String\n\njava.util.HashMap.SimpleEntry.class (nested class):\n    getName():          java.util.AbstractMap$SimpleEntry\n    getCanonicalName(): java.util.AbstractMap.SimpleEntry\n    getSimpleName():    SimpleEntry\n    getTypeName():      java.util.AbstractMap$SimpleEntry\n\nnew java.io.Serializable(){}.getClass() (anonymous inner class):\n    getName():          ClassNameTest$1\n    getCanonicalName(): null\n    getSimpleName():    \n    getTypeName():      ClassNameTest$1\n```\n\nThere's an empty entry in the last block where ```\ngetSimpleName```\n returns an empty string.\nThe upshot looking at this is:\n\n\nthe name is the name that you'd use to dynamically load the class with, for example, a call to ```\nClass.forName```\n with the default ```\nClassLoader```\n. Within the scope of a certain ```\nClassLoader```\n, all classes have unique names.\nthe canonical name is the name that would be used in an import statement. It might be useful during ```\ntoString```\n or logging operations. When the ```\njavac```\n compiler has complete view of a classpath, it enforces uniqueness of canonical names within it by clashing fully qualified class and package names at compile time. However JVMs must accept such name clashes, and thus canonical names do not uniquely identify classes within a ```\nClassLoader```\n. (In hindsight, a better name for this getter would have been ```\ngetJavaName```\n; but this method dates from a time when the JVM was used solely to run Java programs.)\nthe simple name loosely identifies the class, again might be useful during ```\ntoString```\n or logging operations but is not guaranteed to be unique.\nthe type name returns \"an informative string for the name of this type\", \"It's like ```\ntoString```\n: it's purely informative and has no contract value\". (as written by sir4ur0n)\n\n\nAlso you can commonly reference the Java Language Specification documentation for these types technical Java API details:\n\n\nHere's the Java 11 Specification on this subject matter:  https://docs.oracle.com/javase/specs/jls/se11/html/jls-6.html#jls-6.7\n\n```\nExample 6.7-2.```\n and ```\nExample 6.7-2.```\n goes over ```\nFully Qualified Names```\n and ```\nFully Qualified Names v. Canonical Name```\n respectively\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Push multiple elements to array\r\n                \r\nI'm trying to push multiple elements as one array, but getting an error:\n```\n> a = []\n[]\n> a.push.apply(null, [1,2])\nTypeError: Array.prototype.push called on null or undefined\n```\n\nI'm trying to do similar stuff that I'd do in ruby, I was thinking that ```\napply```\n is something like ```\n*```\n.\n```\n>> a = []\n=> []\n>> a.push(*[1,2])\n=> [1, 2]\n```\n\n    ", "Answer": "\r\nYou can push multiple elements into an array in the following way\n\n\r\n\r\n```\nvar a = [];\r\n    \r\na.push(1, 2, 3);\r\n\r\nconsole.log(a);```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple lines of input in <input type=\"text\" />\r\n                \r\nI have this text input in a form:\n\n```\n<input type=\"text\"\n       cols=\"40\" \n       rows=\"5\" \n       style=\"width:200px; height:50px;\" \n       name=\"Text1\" \n       id=\"Text1\" \n       value=\"\" />\n```\n\n\nI am trying to get it to take multiple lines of input. The width and height make the box to be bigger, but the user can enter text all (s)he wants yet it fills one line only. \n\nHow do I make the input more like a textarea?\n    ", "Answer": "\r\nYou need to use a textarea to get multiline handling.\n\n\r\n\r\n```\n<textarea name=\"Text1\" cols=\"40\" rows=\"5\"></textarea>```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I access and process nested objects, arrays, or JSON?\r\n                \r\nI have a nested data structure containing objects and arrays. How can I extract the information, i.e. access a specific or multiple values (or keys)?\n\nFor example:\n\n```\nvar data = {\n    code: 42,\n    items: [{\n        id: 1,\n        name: 'foo'\n    }, {\n        id: 2,\n        name: 'bar'\n    }]\n};\n```\n\n\nHow could I access the ```\nname```\n of the second item in ```\nitems```\n?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication with very large operands\r\n                \r\nI am implementing a multi-precision module, and at this moment I am stuck in the multiplication.\n\nTo do my algorithm I need to multiply two unsigned operands of 64 bits, using a Haswell microarchitecture, and store the result in a memory block.\nI'm doing an implementation using 'g++' and another more efficient using 'icpc'.\n\n```\nint main(){\n\n    //Operands\n    size_t a = 10000000000000000000 //Fit in 8 bytes\n           b = 7;\n\n    //To store the result;\n    size_t dst[2];\n\n    //Multiplication here... (Note that the multiplication result don't fit in 64bits. So, I need to save the result in two memory positions)\n\n    dst[0] = //Store the less significative half..\n    dst[1] = //Store the more significative half..\n\n\n    //My function\n    print_To_Screen(dst);\n}\n```\n\n\nI don't know how to access to each half of the result to store them in the memory blocks that I want.\nAm I obligde to use assembly instructions to the multiplication and them to store the result, or exists an easy way?\n    ", "Answer": "\r\nJust use ```\n__int128```\n as suggested, most compilers support it : \n\n```\n__uint128_t mul64x64( uint64_t a, uint64_t b ) {\n    return ((__uint128_t)a) * ((__uint128_t)a);\n}\n```\n\n\nThis will translate to a single instruction multiplication on x64 architectures.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "The Use of Multiple JFrames: Good or Bad Practice? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is opinion-based. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it can be answered with facts and citations by editing this post.\r\n                \r\n                    \r\n                        Closed 8 years ago.\r\n                    \r\n                \r\n            The community reviewed whether to reopen this question 1 year ago and left it closed:\r\n            \r\n                    Original close reason(s) were not resolved\r\n            \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI'm developing an application which displays images, and plays sounds from a database. I'm trying to decide whether or not to use a separate JFrame to add images to the database from the GUI. \n\nI'm just wondering whether it is good practice to use multiple JFrame windows?\n    ", "Answer": "\r\n\n  I'm just wondering whether it is good practice to use multiple JFrames?\n\n\nBad (bad, bad) practice.  \n\n\nUser unfriendly: The user sees multiple icons in their task bar when expecting to see only one.  Plus the side effects of the coding problems..\nA nightmare to code and maintain:\n\n\nA modal dialog offers the easy opportunity to focus attention on the content of that dialog - choose/fix/cancel this, then proceed.  Multiple frames do not.\nA dialog (or floating tool-bar) with a parent will come to front when the parent is clicked on - you'd have to implement that in frames if that was the desired behavior.\n\n\n\n\n\nThere are any number of ways of displaying many elements in one GUI, e.g.:\n\n\n```\nCardLayout```\n (short demo.). Good for:\n\n\nShowing wizard like dialogs.\nDisplaying list, tree etc. selections for items that have an associated component.\nFlipping between no component and visible component.\n\n```\nJInternalFrame```\n/```\nJDesktopPane```\n typically used for an MDI.\n```\nJTabbedPane```\n for groups of components.\n```\nJSplitPane```\n A way to display two components of which the importance between one or the other (the size) varies according to what the user is doing.\n```\nJLayeredPane```\n far many well ..layered components.\n```\nJToolBar```\n typically contains groups of actions or controls.  Can be dragged around the GUI, or off it entirely according to user need.  As mentioned above, will minimize/restore according to the parent doing so.\nAs items in a ```\nJList```\n (simple example below).\nAs nodes in a ```\nJTree```\n.\nNested layouts.\n\n\nBut if those strategies do not work for a particular use-case, try the following.  Establish a single main ```\nJFrame```\n, then have ```\nJDialog```\n or ```\nJOptionPane```\n instances appear for the rest of the free-floating elements, using the frame as the parent for the dialogs.\n\nMany images\n\nIn this case where the multiple elements are images, it would be better to use either of the following instead:\n\n\nA single ```\nJLabel```\n (centered in a scroll pane) to display whichever image the user is interested in at that moment.  As seen in ```\nImageViewer```\n.\nA single row ```\nJList```\n. As seen in this answer.  The 'single row' part of that only works if they are all the same dimensions.  Alternately, if you are prepared to scale the images on the fly, and they are all the same aspect ratio (e.g. 4:3 or 16:9).\n\n\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to define multiple CSS attributes in jQuery?\r\n                \r\nIs there any syntactical way in jQuery to define multiple CSS attributes without stringing everything out to the right like this:\n\n```\n$(\"#message\").css(\"width\", \"550px\").css(\"height\", \"300px\").css(\"font-size\", \"8pt\");\n```\n\n\nIf you have, say, 20 of these your code will become hard to read, any solutions?\n\nFrom jQuery API, for example, jQuery understands and returns the correct value for both \n\n```\n.css({ \"background-color\": \"#ffe\", \"border-left\": \"5px solid #ccc\" }) \n```\n\n\nand \n\n```\n.css({backgroundColor: \"#ffe\", borderLeft: \"5px solid #ccc\" }).\n```\n\n\nNotice that with the DOM notation, quotation marks around the property names are optional, but with CSS notation they're required due to the hyphen in the name.\n    ", "Answer": "\r\nBetter to just use ```\n.addClass()```\n and ```\n.removeClass()```\n even if you have 1 or more styles to change. It's more maintainable and readable.\nIf you really have the urge to do multiple CSS properties, then use the following:\n```\n.css({\n   'font-size' : '10px',\n   'width' : '30px',\n   'height' : '10px'\n});\n```\n\nNB!\nAny CSS properties with a hyphen need to be quoted.\nI've placed the quotes so no one will need to clarify that, and the code will be 100% functional.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Using async/await for multiple tasks\r\n                \r\nI'm using an API client that is completely asynchrounous, that is, each operation either returns ```\nTask```\n or ```\nTask<T>```\n, e.g:\n\n```\nstatic async Task DoSomething(int siteId, int postId, IBlogClient client)\n{\n    await client.DeletePost(siteId, postId); // call API client\n    Console.WriteLine(\"Deleted post {0}.\", siteId);\n}\n```\n\n\nUsing the C# 5 async/await operators, what is the correct/most efficient way to start multiple tasks and wait for them all to complete:\n\n```\nint[] ids = new[] { 1, 2, 3, 4, 5 };\nParallel.ForEach(ids, i => DoSomething(1, i, blogClient).Wait());\n```\n\n\nor:\n\n```\nint[] ids = new[] { 1, 2, 3, 4, 5 };\nTask.WaitAll(ids.Select(i => DoSomething(1, i, blogClient)).ToArray());\n```\n\n\nSince the API client is using HttpClient internally, I would expect this to issue 5 HTTP requests immediately, writing to the console as each one completes.\n    ", "Answer": "\r\n```\nint[] ids = new[] { 1, 2, 3, 4, 5 };\nParallel.ForEach(ids, i => DoSomething(1, i, blogClient).Wait());\n```\n\n\nAlthough you run the operations in parallel with the above code, this code blocks each thread that each operation runs on. For example, if the network call takes 2 seconds, each thread hangs for 2 seconds w/o doing anything but waiting.\n\n```\nint[] ids = new[] { 1, 2, 3, 4, 5 };\nTask.WaitAll(ids.Select(i => DoSomething(1, i, blogClient)).ToArray());\n```\n\n\nOn the other hand, the above code with ```\nWaitAll```\n also blocks the threads and your threads won't be free to process any other work till the operation ends. \n\nRecommended Approach\n\nI would prefer ```\nWhenAll```\n which will perform your operations asynchronously in Parallel.\n\n```\npublic async Task DoWork() {\n\n    int[] ids = new[] { 1, 2, 3, 4, 5 };\n    await Task.WhenAll(ids.Select(i => DoSomething(1, i, blogClient)));\n}\n```\n\n\n\n  In fact, in the above case, you don't even need to ```\nawait```\n, you can just directly return from the method as you don't have any continuations:\n\n```\npublic Task DoWork() \n{\n    int[] ids = new[] { 1, 2, 3, 4, 5 };\n    return Task.WhenAll(ids.Select(i => DoSomething(1, i, blogClient)));\n}\n```\n\n\n\nTo back this up, here is a detailed blog post going through all the\nalternatives and their advantages/disadvantages: How and Where Concurrent Asynchronous I/O with ASP.NET Web API\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Apply multiple functions to multiple groupby columns\r\n                \r\nThe docs show how to apply multiple functions on a groupby object at a time using a dict with the output column names as the keys:\n```\nIn [563]: grouped['D'].agg({'result1' : np.sum,\n   .....:                   'result2' : np.mean})\n   .....:\nOut[563]: \n      result2   result1\nA                      \nbar -0.579846 -1.739537\nfoo -0.280588 -1.402938\n```\n\nHowever, this only works on a Series groupby object. And when a dict is similarly passed to a groupby DataFrame, it expects the keys to be the column names that the function will be applied to.\nWhat I want to do is apply multiple functions to several columns (but certain columns will be operated on multiple times). Also, some functions will depend on other columns in the groupby object (like sumif functions). My current solution is to go column by column, and doing something like the code above, using lambdas for functions that depend on other rows. But this is taking a long time, (I think it takes a long time to iterate through a groupby object). I'll have to change it so that I iterate through the whole groupby object in a single run, but I'm wondering if there's a built in way in pandas to do this somewhat cleanly.\nFor example, I've tried something like\n```\ngrouped.agg({'C_sum' : lambda x: x['C'].sum(),\n             'C_std': lambda x: x['C'].std(),\n             'D_sum' : lambda x: x['D'].sum()},\n             'D_sumifC3': lambda x: x['D'][x['C'] == 3].sum(), ...)\n```\n\nbut as expected I get a KeyError (since the keys have to be a column if ```\nagg```\n is called from a DataFrame).\nIs there any built in way to do what I'd like to do, or a possibility that this functionality may be added, or will I just need to iterate through the groupby manually?\n    ", "Answer": "\r\nThe second half of the currently accepted answer is outdated and has two deprecations. First and most important, you can no longer pass a dictionary of dictionaries to the ```\nagg```\n groupby method. Second, never use ```\n.ix```\n.\n\nIf you desire to work with two separate columns at the same time I would suggest using the ```\napply```\n method which implicitly passes a DataFrame to the applied function. Let's use a similar dataframe as the one from above\n\n```\ndf = pd.DataFrame(np.random.rand(4,4), columns=list('abcd'))\ndf['group'] = [0, 0, 1, 1]\ndf\n\n          a         b         c         d  group\n0  0.418500  0.030955  0.874869  0.145641      0\n1  0.446069  0.901153  0.095052  0.487040      0\n2  0.843026  0.936169  0.926090  0.041722      1\n3  0.635846  0.439175  0.828787  0.714123      1\n```\n\n\nA dictionary mapped from column names to aggregation functions is still a perfectly good way to perform an aggregation.\n\n```\ndf.groupby('group').agg({'a':['sum', 'max'], \n                         'b':'mean', \n                         'c':'sum', \n                         'd': lambda x: x.max() - x.min()})\n\n              a                   b         c         d\n            sum       max      mean       sum  <lambda>\ngroup                                                  \n0      0.864569  0.446069  0.466054  0.969921  0.341399\n1      1.478872  0.843026  0.687672  1.754877  0.672401\n```\n\n\nIf you don't like that ugly lambda column name, you can use a normal function and supply a custom name to the special ```\n__name__```\n attribute like this:\n\n```\ndef max_min(x):\n    return x.max() - x.min()\n\nmax_min.__name__ = 'Max minus Min'\n\ndf.groupby('group').agg({'a':['sum', 'max'], \n                         'b':'mean', \n                         'c':'sum', \n                         'd': max_min})\n\n              a                   b         c             d\n            sum       max      mean       sum Max minus Min\ngroup                                                      \n0      0.864569  0.446069  0.466054  0.969921      0.341399\n1      1.478872  0.843026  0.687672  1.754877      0.672401\n```\n\n\n\n\nUsing ```\napply```\n and returning a Series\n\nNow, if you had multiple columns that needed to interact together then you cannot use ```\nagg```\n, which implicitly passes a Series to the aggregating function. When using ```\napply```\n the entire group as a DataFrame gets passed into the function.\n\nI recommend making a single custom function that returns a Series of all the aggregations. Use the Series index as labels for the new columns:\n\n```\ndef f(x):\n    d = {}\n    d['a_sum'] = x['a'].sum()\n    d['a_max'] = x['a'].max()\n    d['b_mean'] = x['b'].mean()\n    d['c_d_prodsum'] = (x['c'] * x['d']).sum()\n    return pd.Series(d, index=['a_sum', 'a_max', 'b_mean', 'c_d_prodsum'])\n\ndf.groupby('group').apply(f)\n\n         a_sum     a_max    b_mean  c_d_prodsum\ngroup                                           \n0      0.864569  0.446069  0.466054     0.173711\n1      1.478872  0.843026  0.687672     0.630494\n```\n\n\nIf you are in love with MultiIndexes, you can still return a Series with one like this:\n\n```\n    def f_mi(x):\n        d = []\n        d.append(x['a'].sum())\n        d.append(x['a'].max())\n        d.append(x['b'].mean())\n        d.append((x['c'] * x['d']).sum())\n        return pd.Series(d, index=[['a', 'a', 'b', 'c_d'], \n                                   ['sum', 'max', 'mean', 'prodsum']])\n\ndf.groupby('group').apply(f_mi)\n\n              a                   b       c_d\n            sum       max      mean   prodsum\ngroup                                        \n0      0.864569  0.446069  0.466054  0.173711\n1      1.478872  0.843026  0.687672  0.630494\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Watch multiple $scope attributes\r\n                \r\nIs there a way to subscribe to events on multiple objects using ```\n$watch```\n\n\nE.g.\n\n```\n$scope.$watch('item1, item2', function () { });\n```\n\n    ", "Answer": "\r\nStarting from AngularJS 1.3 there's a new method called ```\n$watchGroup```\n for observing a set of expressions.\n\n```\n$scope.foo = 'foo';\n$scope.bar = 'bar';\n\n$scope.$watchGroup(['foo', 'bar'], function(newValues, oldValues, scope) {\n  // newValues array contains the current values of the watch expressions\n  // with the indexes matching those of the watchExpression array\n  // i.e.\n  // newValues[0] -> $scope.foo \n  // and \n  // newValues[1] -> $scope.bar \n});\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why is division more expensive than multiplication?\r\n                \r\nI am not really trying to optimize anything, but I remember hearing this from programmers all the time, that I took it as a truth. After all they are supposed to know this stuff.\n\nBut I wonder why is division actually slower than multiplication? Isn't division just a glorified subtraction, and multiplication is a glorified addition? So mathematically I don't see why going one way or the other has computationally very different costs.\n\nCan anyone please clarify the reason/cause of this so I know, instead of what I heard from other programmer's that I asked before which is: \"because\".\n    ", "Answer": "\r\nCPU's ALU (Arithmetic-Logic Unit) executes algorithms, though they are implemented in hardware. Classic multiplications algorithms includes Wallace tree and Dadda tree. More information is available here. More sophisticated techniques are available in newer processors. Generally, processors strive to parallelize bit-pairs operations in order the minimize the clock cycles required. Multiplication algorithms can be parallelized quite effectively (though more transistors are required).\n\nDivision algorithms can't be parallelized as efficiently. The most efficient division algorithms are quite complex (The Pentium FDIV bug demonstrates the level of complexity). Generally, they requires more clock cycles per bit. If you're after more technical details, here is a nice explanation from Intel. Intel actually patented their division algorithm.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Iterating through a Collection, avoiding ConcurrentModificationException when removing objects in a loop\r\n                \r\nWe all know you can't do the following because of ```\nConcurrentModificationException```\n:\n\n```\nfor (Object i : l) {\n    if (condition(i)) {\n        l.remove(i);\n    }\n}\n```\n\n\nBut this apparently works sometimes, but not always. Here's some specific code:\n\n```\npublic static void main(String[] args) {\n    Collection<Integer> l = new ArrayList<>();\n\n    for (int i = 0; i < 10; ++i) {\n        l.add(4);\n        l.add(5);\n        l.add(6);\n    }\n\n    for (int i : l) {\n        if (i == 5) {\n            l.remove(i);\n        }\n    }\n\n    System.out.println(l);\n}\n```\n\n\nThis, of course, results in:\n\n```\nException in thread \"main\" java.util.ConcurrentModificationException\n```\n\n\nEven though multiple threads aren't doing it. Anyway.\n\nWhat's the best solution to this problem? How can I remove an item from the collection in a loop without throwing this exception?\n\nI'm also using an arbitrary ```\nCollection```\n here, not necessarily an ```\nArrayList```\n, so you can't rely on ```\nget```\n.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Show Multiplication Tables with a button\r\n                \r\nI want to make a page with JavaScript that has a button saying \"Multiplication Tables.\" When I click the button, the multiplication table of 5 will show up in the \"p\" tag with the id \"tables.\" I want to use a for loop to calculate the tables. Nothing is happening when I click the button.\n\nHTML:\n\n```\n<body>\n<button type=\"button\" id=\"multiplication\" onclick=\"table()\">Multiplication Tables</button>\n<br/>\n<p id=\"tables\"></p>\n</body>\n</html>\n```\n\n\nJavaScript:\n\n```\nfunction table()\n{\nvar button = document.getElementById('multiplication');\n\nvar showTables = '';\nfor (var i=1; i<12; i++) {\nshowTables += 5 + \"*\" + i +\"=\"+5*i + '\\n';\n}\nvar p_tables = document.getElementById('tables').innerHTML = showTables;\n}\ntable();\n```\n\n    ", "Answer": "\r\nCheck this snippet by clicking run snippet button below, I think it's working fine\r\n\r\n```\nfunction table()\r\n{\r\nvar button = document.getElementById('multiplication');\r\n\r\nvar showTables = '';\r\nfor (var i=1; i<12; i++) {\r\nshowTables += 5 + \"*\" + i +\"=\"+5*i + '\\n';\r\n}\r\nvar p_tables = document.getElementById('tables').innerHTML = showTables;\r\n}```\n\r\n```\n<html>\r\n<body>\r\n<button type=\"button\" id=\"multiplication\" onclick=\"table()\">Multiplication Tables</button>\r\n<br/>\r\n<p id=\"tables\"></p>\r\n</body>\r\n</html>```\n\r\n\r\n\r\n\n\nYour are missing html tag before body and there might be some problem with your javascript inclusion, Also don't run table() function after declaring it. \n\nPlace the script either in head tag or before closing the body. Remove table() function calling after declaring it.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Track first digit during a long multiplication in c\r\n                \r\nI have an array of integer element range up to ```\n10^5```\n, and I have to find the first element after the total multiplication.\n\nExample: \n\n```\nArray : 2,4,6,7 \nmultiplication result: 336 and the first element is 3.\n```\n\n\nObviously I cannot multiply the elements with the range up to 10^5. \n\nHow can I track only the first digit during multiplication?\n    ", "Answer": "\r\nWe can also find the first digit with another method.\n\nSuppose p be the final value after multiplying all the elements.\n\nSo, we have to find \n\nP = a[0]*a[1]*a[2]*a[3]*.......*a[n-1]\n\nfor n sized array then we can take log with base 10 on both the side after that our expression changes to\n\nlog(p) = log(a[i])+log(a[1])+log(a[2])+.....+log(a[n-1])\n\nNow, to find the first digit we have to get the fractional part of this variable sum which can be done in this way\n\nfrac = sum - (integer)sum\n\nand at the last step calculate the 10^frac and convert it to the integer value which is our required first digit.\n\nThis algorithm is better in comparison to time complexity.    \n\n```\nint getFirstDigit(long a[], long n) {\n      double p;\n\n      for(int i=0;i<n;i++) {\n           p = p+log10(a[i]);\n      }\n\n      double frac = p - (long)p;\n\n      int firdig = (int)pow(10,frac);\n\n      return firdig; \n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why is Strassen matrix multiplication so much slower than standard matrix multiplication?\r\n                \r\nI have written programs in C++, Python and Java for matrix multiplication and tested their speed for multiplying two 2000 x 2000 matrices (see post). The standard ikj-implentation - which is in  - took:\n\n\nC++: 15 seconds (Source)\nPython: 6 minutes 13 seconds (Source)\n\n\nNow I have implemented the Strassen algorithm for matrix multiplication - which is in  - in Python and C++ as it was on wikipedia. These are the times I've got:\n\n\nC++: 45 minutes (Source)\nPython: Killed after 10 hours (Source)\n\n\nWhy is Strassen matrix multiplication so much slower than standard matrix multiplication?\n\n\nIdeas:\n\n\nSome cache effects\nImplementation:\n\n\nerror (the resulting 2000 x 2000 matrix is correct)\nnull-multiplication (shouldn't be that important for 2000 x 2000 -> 2048 x 2048)\n\n\n\n\n\nThis is especially astonishing, as it seems to contradict the experiences of others:\n\n\nWhy is my Strassen Matrix multiplier so fast?\nMatrix multiplication: Strassen vs. Standard - Strassen was also slower for him, but it was at least in the same order of magnitude.\n\n\n\n\nedit: The reason why Strassen matrix multiplication was slower in my case, were:\n\n\nI made it fully recursive (see tam)\nI had two functions ```\nstrassen```\n and ```\nstrassenRecursive```\n. The first one resized the matrix to a power of two, if required and called the second one. But ```\nstrassenRecursive```\n didn't recursively call itself, but ```\nstrassen```\n. \n\n    ", "Answer": "\r\nThe basic problem is that you're recursing down to a leaf size of 1 with your strassen implementaiton. Strassen's algorithm has a better Big O complexity, but constants do matter in reality, which means in reality you're better off with a standard n^3 matrix multiplication for smaller problem sizes.\n\nSo to greatly improve your program instead of doing:\n\n```\nif (tam == 1) {\n        C[0][0] = A[0][0] * B[0][0];\n        return;\n    }\n```\n\n\nuse ```\nif (tam == LEAF_SIZE) // iterative solution here```\n. ```\nLEAF_SIZE```\n should be a constant that you have to experimentally determine for your given architecture. Depending on the architecture it may be larger or smaller - there are architectures where the constant factors for strassen are so large that it's basically always worse than a simpler n^3 implementation for sensible matrix sizes. It all depends.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication - C\r\n                \r\nI created a program that does matrix addition,subtraction, and multiplication. I have handled the addition and subtraction portions, but when I reached the multiplication I am having trouble outputting the correct values. I have only placed the code with the multiplication function below.\n\n```\n#define _CRT_SECURE_NO_WARNINGS\n\n#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n\nint *elements;\nint rows;\nint columns;\n\n} matrix;\n\nvoid main() {\n\n        matrix a, b, c;\n\n        void read_matrix(matrix *);\n        void deallocate(matrix *);\n        void print(matrix);\n        matrix add(matrix, matrix);\n        matrix subtract(matrix, matrix);\n        matrix multiply(matrix, matrix);\n\n        read_matrix(&a);\n        read_matrix(&b);\n        /*\n        c = add(a, b);\n        printf(\"The answer of Matrix (a + b) is \\n\\n\");\n        print(a);\n        printf(\"\\n  +\\n\\n\");\n        print(b);\n        printf(\"\\n  =\\n\\n\");\n        print(c);\n        printf(\"\\n\");\n\n        deallocate(&c);\n        c = subtract(a, b);\n        printf(\"The answer of Matrix (a - b) is \\n\\n\");\n        print(a);\n        printf(\"\\n  -\\n\\n\");\n        print(b);\n        printf(\"\\n  =\\n\\n\");\n        print(c);\n        printf(\"\\n\");\n\n        deallocate(&c);\n        */\n        c = multiply(a, b);\n        printf(\"The answer of Matrix (a * b) is \\n\\n\");\n        print(a);\n        printf(\"\\n  *\\n\\n\");\n        print(b);\n        printf(\"\\n  =\\n\\n\");\n        print(c);\n        printf(\"\\n\");\n\n }\n\n void read_matrix(matrix *z) {\n\n        int d1, d2, allc, i, x, y, j, val;\n        int res;\n\n        printf(\"\\nWhat is the first dimension of the array? \");\n        res = scanf(\"%d\", &d1);\n\n        if (res != 1) {\n            fprintf(stderr, \"Something went wrong with your first dimension!\");\n                    return;\n        }\n\n        printf(\"What is the second dimension of the array? \");\n        res = scanf(\"%d\", &d2);\n        if (res != 1) {\n            fprintf(stderr, \"Something went wrong with your second dimension!\");\n            return;\n        }\n\n        printf(\"Matrix Dimension is %dx%d\\n\", d1, d2);\n\n        allc = d1*d2;\n\n        (*z).elements = (int *)calloc(allc, sizeof(int));\n        (*z).rows = d1;\n        (*z).columns = d2;\n\n        x = 0;\n        j = 0;\n\n        printf(\"\\n\");\n\n        for (i = 0; i < d1; i++) {\n\n             x++;\n\n            for (y = 0; y < d2; y++) {\n                printf(\"Enter the value for row %d column %d: \", x, y + 1);\n                res = scanf(\"%d\", &val);\n                if (res != 1) {\n                    fprintf(stderr, \"Something went wrong while reading value %d\\n\", x);\n                    return;\n                }\n\n                (*z).elements[j++] = val;\n            }\n\n        }\n    }\n\n    void deallocate(matrix *c) {\n\n        free((*c).elements);\n        (*c).elements = NULL;\n        (*c).rows = 0;\n        (*c).columns = 0;\n    }\n\n    void print(matrix z) {\n\n         int i, j, x;\n         x = 0;\n\n        for (i = 0; i < z.rows; i++) {\n\n            printf(\"[  \");\n\n            for (j = 0; j < z.columns; j++) {\n\n                printf(\"%-4d\", z.elements[x++]);\n            }\n            printf(\"]\\n\");\n        }\n    }\n\n    matrix multiply(matrix a, matrix b) {\n\n        matrix c;\n\n        int a1, a2, b1, b2, allc, i, j, x, y, z, alc, addval, val;\n\n        i = 0;\n        j = 0;\n        alc = 0;\n        val = 0;\n        addval = 0;\n\n        a1 = a.rows;\n        a2 = a.columns;\n        b1 = b.rows;\n        b2 = b.columns;\n\n        allc = (a1 * b2);\n\n        c.elements = (int *)calloc(allc, sizeof(int));\n        c.columns = a1;\n        c.rows = b2;\n\n        if (a2 != b1) {\n            printf(\"\\n\\nThe inner dimensions of your matrices do not match! Multiplication cannot be done!\\n\\n\");\n            exit(1);\n        }\n\n\n        for (x = 0; x < c.rows; x++) {\n\n            for (y = 0; y < c.rows; y++) {\n\n                for (z = 0; z < c.rows; z++) {\n\n                    i = (i * c.rows);\n\n                    addval = (a.elements[j]) * (b.elements[i]);\n\n                    val += addval;\n\n                    j++;\n                    i++;\n                }\n                c.elements[alc] = val;\n                printf(\"VAL IS: %d\\n\\n\", val);\n\n                val = 0;\n\n                i = 0;\n                alc++;\n            }\n        }\n\n        printf(\"\\n\\n\");\n\n        return c;\n    }\n```\n\n\nIn the multiplication function, the triple nested for loop is supposed to go through enough times to print out the correct number of items for the dimension of the new array. I am aware how to do matrix multiplication, but I am not sure if I have represented it correctly here. \n\nThe output for an example is:\n\n```\nWhat is the first dimension of the array? 3\nWhat is the second dimension of the array? 3\nMatrix Dimension is 3x3\n\nEnter the value for row 1 column 1: 1\nEnter the value for row 1 column 2: 2\nEnter the value for row 1 column 3: 3\nEnter the value for row 2 column 1: 4\nEnter the value for row 2 column 2: 5\nEnter the value for row 2 column 3: 6\nEnter the value for row 3 column 1: 7\nEnter the value for row 3 column 2: 8\nEnter the value for row 3 column 3: 9\n\nWhat is the first dimension of the array? 3\nWhat is the second dimension of the array? 3\nMatrix Dimension is 3x3\n\nEnter the value for row 1 column 1: 1\nEnter the value for row 1 column 2: 2\nEnter the value for row 1 column 3: 3\nEnter the value for row 2 column 1: 4\nEnter the value for row 2 column 2: 5\nEnter the value for row 2 column 3: 6\nEnter the value for row 3 column 1: 7\nEnter the value for row 3 column 2: 8\nEnter the value for row 3 column 3: 9\n\n\nThe answer of Matrix (a * b) is\n\n[  1   2   3   ]\n[  4   5   6   ]\n[  7   8   9   ]\n\n  *\n\n[  1   2   3   ]\n[  4   5   6   ]\n[  7   8   9   ]\n\n  =\n\n[  216847534336951265054271]\n[  1641572693-138635672036124672]\n[  1352368309-50514195286739134]\n\nPress any key to continue . . .\n```\n\n    ", "Answer": "\r\nBelow is my rework of your code that does matrix multiplication.  The problem was with your ```\nmultiply()```\n function.  You can see that it is doomed with it walking the ```\na```\n matrix by just incrementing the variable ```\nj```\n - in a working solution every element of matrix ```\na```\n participates in the multiplication multiple times.\n\nI also changed your routines to all pass pointers to matrix structures rather than your mix of passing pointers and passing/returning matrix structures directly by value.  I think this is more consistent and easier to follow but it means you'll need to change your other matrix math routines to work the same, if you keep it this way.\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n    int *elements;\n    int rows;\n    int columns;\n} matrix;\n\nvoid read_matrix(matrix *z) {\n\n    int d1, d2, val;\n\n    printf(\"\\nWhat is the first dimension of the array? \");\n    int result = scanf(\"%d\", &d1);\n\n    if (result != 1) {\n        fprintf(stderr, \"Something went wrong with your first dimension!\\n\");\n        exit(1);\n    }\n\n    printf(\"What is the second dimension of the array? \");\n    result = scanf(\"%d\", &d2);\n    if (result != 1) {\n        fprintf(stderr, \"Something went wrong with your second dimension!\\n\");\n        exit(1);\n    }\n\n    printf(\"Matrix Dimension is %dx%d\\n\", d1, d2);\n\n    z->elements = calloc(d1 * d2, sizeof(int));\n    z->rows = d1;\n    z->columns = d2;\n\n    int x = 0;\n    int j = 0;\n\n    printf(\"\\n\");\n\n    for (int i = 0; i < d1; i++) {\n\n        x++;\n\n        for (int y = 0; y < d2; y++) {\n            printf(\"Enter the value for row %d column %d: \", x, y + 1);\n            result = scanf(\"%d\", &val);\n            if (result != 1) {\n                fprintf(stderr, \"Something went wrong while reading value (%d, %d)\\n\", x, y + 1);\n                exit(1);\n            }\n\n            z->elements[j++] = val;\n        }\n    }\n}\n\nvoid deallocate(matrix *c) {\n\n    free(c->elements);\n\n    c->elements = NULL;\n    c->rows = 0;\n    c->columns = 0;\n}\n\nvoid print(matrix *z) {\n\n    int x = 0;\n\n    for (int i = 0; i < z->rows; i++) {\n\n        printf(\"[  \");\n\n        for (int j = 0; j < z->columns; j++) {\n\n            printf(\"%-4d\", z->elements[x++]);\n        }\n\n        printf(\"]\\n\");\n    }\n}\n\nvoid multiply(matrix *a, matrix *b, matrix *c) {\n\n    if (a->columns !=  b->rows) {\n        fprintf(stderr, \"The inner dimensions of your matrices do not match! Multiplication cannot be done!\\n\");\n        exit(1);\n    }\n\n    c->elements = calloc(a->rows * b->columns, sizeof(int));\n    c->columns = b->columns;\n    c->rows = a->rows;\n\n    int alc = 0;\n\n    for (int x = 0; x < a->rows; x++) {\n\n        for (int y = 0; y < b->columns; y++) {\n\n            int value = 0;\n\n            for (int z = 0; z < b->rows; z++) {\n\n                value += a->elements[z + x * a->columns] * b->elements[y + z * b->columns];\n            }\n\n            c->elements[alc++] = value;\n        }\n    }\n}\n\nint main() {\n\n    matrix a, b, c;\n\n    read_matrix(&a);\n    read_matrix(&b);\n\n    multiply(&a, &b, &c);\n\n    printf(\"The answer of Matrix (a * b) is \\n\\n\");\n    print(&a);\n    printf(\"\\n  *\\n\\n\");\n    print(&b);\n    printf(\"\\n  =\\n\\n\");\n    print(&c);\n    printf(\"\\n\");\n\n    deallocate(&a);\n    deallocate(&b);\n    deallocate(&c);\n\n    return 0;\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Check if multiple strings exist in another string\r\n                \r\nHow can I check if any of the strings in an array exists in another string?\nFor example:\n```\na = ['a', 'b', 'c']\ns = \"a123\"\nif a in s:\n    print(\"some of the strings found in s\")\nelse:\n    print(\"no strings found in s\")\n```\n\nHow can I replace the ```\nif a in s:```\n line to get the appropriate result?\n    ", "Answer": "\r\nYou can use ```\nany```\n:\n```\na_string = \"A string is more than its parts!\"\nmatches = [\"more\", \"wholesome\", \"milk\"]\n\nif any([x in a_string for x in matches]):\n```\n\nSimilarly to check if all the strings from the list are found, use ```\nall```\n instead of ```\nany```\n.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "C# decimal multiplication strange behavior\r\n                \r\nI noticed a strange behavior when multiplying decimal values in C#. Consider the following multiplication operations:\n\n```\n1.1111111111111111111111111111m * 1m = 1.1111111111111111111111111111 // OK\n1.1111111111111111111111111111m * 2m = 2.2222222222222222222222222222 // OK\n1.1111111111111111111111111111m * 3m = 3.3333333333333333333333333333 // OK\n1.1111111111111111111111111111m * 4m = 4.4444444444444444444444444444 // OK\n1.1111111111111111111111111111m * 5m = 5.5555555555555555555555555555 // OK\n1.1111111111111111111111111111m * 6m = 6.6666666666666666666666666666 // OK\n1.1111111111111111111111111111m * 7m = 7.7777777777777777777777777777 // OK\n1.1111111111111111111111111111m * 8m = 8.888888888888888888888888889  // Why not 8.8888888888888888888888888888 ?\n1.1111111111111111111111111111m * 9m = 10.000000000000000000000000000 // Why not 9.9999999999999999999999999999 ?\n```\n\n\nWhat I cannot understand is the last two of above cases. How is that possible?\n    ", "Answer": "\r\n```\ndecimal```\n stores 28 or 29 significant digits (96 bits). Basically the mantissa is in the range -/+ 79,228,162,514,264,337,593,543,950,335.\n\nThat means up to about 7.9.... you can get 29 significant digits accurately - but above that you can't. That's why both the 8 and the 9 go wrong, but not the earlier values. You should only rely on 28 significant digits in general, to avoid odd situations like this.\n\nOnce you reduce your original input to 28 significant figures, you'll get the output you expect:\n\n```\nusing System;\n\nclass Test\n{\n    static void Main()\n    {\n        var input = 1.111111111111111111111111111m;\n        for (int i = 1; i < 10; i++)\n        {\n            decimal output = input * (decimal) i;\n            Console.WriteLine(output);\n        }\n    }\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to iterate over arguments in a Bash script\r\n                \r\nI have a complex command that I'd like to make a shell/bash script of.  I can write it in terms of ```\n$1```\n easily:\n\n```\nfoo $1 args -o $1.ext\n```\n\n\nI want to be able to pass multiple input names to the script. What's the right way to do it?  \n\nAnd, of course, I want to handle filenames with spaces in them.\n    ", "Answer": "\r\nUse ```\n\"$@\"```\n to represent all the arguments:\n\n```\nfor var in \"$@\"\ndo\n    echo \"$var\"\ndone\n```\n\n\nThis will iterate over each argument and print it out on a separate line.  $@ behaves like $* except that when quoted the arguments are broken up properly if there are spaces in them:\n\n```\nsh test.sh 1 2 '3 4'\n1\n2\n3 4\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "C# decimal multiplication strange behavior\r\n                \r\nI noticed a strange behavior when multiplying decimal values in C#. Consider the following multiplication operations:\n\n```\n1.1111111111111111111111111111m * 1m = 1.1111111111111111111111111111 // OK\n1.1111111111111111111111111111m * 2m = 2.2222222222222222222222222222 // OK\n1.1111111111111111111111111111m * 3m = 3.3333333333333333333333333333 // OK\n1.1111111111111111111111111111m * 4m = 4.4444444444444444444444444444 // OK\n1.1111111111111111111111111111m * 5m = 5.5555555555555555555555555555 // OK\n1.1111111111111111111111111111m * 6m = 6.6666666666666666666666666666 // OK\n1.1111111111111111111111111111m * 7m = 7.7777777777777777777777777777 // OK\n1.1111111111111111111111111111m * 8m = 8.888888888888888888888888889  // Why not 8.8888888888888888888888888888 ?\n1.1111111111111111111111111111m * 9m = 10.000000000000000000000000000 // Why not 9.9999999999999999999999999999 ?\n```\n\n\nWhat I cannot understand is the last two of above cases. How is that possible?\n    ", "Answer": "\r\n```\ndecimal```\n stores 28 or 29 significant digits (96 bits). Basically the mantissa is in the range -/+ 79,228,162,514,264,337,593,543,950,335.\n\nThat means up to about 7.9.... you can get 29 significant digits accurately - but above that you can't. That's why both the 8 and the 9 go wrong, but not the earlier values. You should only rely on 28 significant digits in general, to avoid odd situations like this.\n\nOnce you reduce your original input to 28 significant figures, you'll get the output you expect:\n\n```\nusing System;\n\nclass Test\n{\n    static void Main()\n    {\n        var input = 1.111111111111111111111111111m;\n        for (int i = 1; i < 10; i++)\n        {\n            decimal output = input * (decimal) i;\n            Console.WriteLine(output);\n        }\n    }\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication In MASM611\r\n                \r\nhii i have a problem in multiplication for above 5 bits i'm working in MASM611 plz tell me the solution which is for atleast 8 bit multiplication in MASM611\n    ", "Answer": "\r\nfor unsigned integer multiply, use mul; for signed use imul. if the operand is an 8-bit register, you get a 16-bit result.\n\nfor example:\n\n```\n\nmov al, 3\nmov cl, 5\nmul cl\n```\n\n\nputs 15 in ax.\n\nstudy this page: http://web.archive.org/web/20120414214754/http://www.arl.wustl.edu/~lockwood/class/cs306/books/artofasm/Chapter_6/CH06-2.html\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "byte array multiplication [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question needs details or clarity. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Add details and clarify the problem by editing this post.\r\n                \r\n                    \r\n                        Closed 9 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nThis is my code - its classic multiplication A*B = C\n\n```\nprivate static int MASK = 0x00ff;\npublic static int multiplication(byte[] A, byte[] B, byte[] R)\n{\n    byte n = 0;\n    int bb;\n    int sum = 0;\n    int lenbyte = 0;\n\n    for (int c = 0; c < R.Length; c++) //R set 0\n    {\n        R[c] = 0;\n    }\n\n    int j = B.Length - 1;\n    int i = 0;\n\n    do //cycles go throught bytes of B from LSB to MSB\n    {\n       bb = B[j] & MASK;\n       if (bb != 0x00)\n       {\n          i = A.Length - 1;\n          n = 0x00; //carry byte\n\n          do //cycles throught bytes of A from LSB to MSB\n          {\n              sum = ((A[i] & MASK) * bb) + (R[i + j+1 ]&MASK) + (n & MASK);\n              R[i + j+1] = (byte)(sum & MASK);\n              n = (byte)((uint)sum >> 8);\n              i--;\n          } while (i >= 0);\n          R[j] = n;\n          j--;\n       }\n       else\n       {\n          R[j] = 0x00;\n          j--;\n       }\n    } while (j >= 0);\n\n    return 1;\n}\n```\n\n\nIt works bad. I think that problem is in bitwise.\nI thanks for yours ideas. :)\n    ", "Answer": "\r\nAs I understand, your code takes A and B as input and returns the output in R right? Well the way you coded it doesn't work. You are passing R as a parameter to the scope of the multiplication function. That means that once the function hits a return all the memory used by this function will be freed and R will be cleared. Also you are using passing by parameter which, in C#, makes a copy of the original parameter to use it in the function and doesn't change the original variable.\n\nWhat you can do to fix it is either pass the parameter by reference:\n\n```\npublic static int multiplication(byte[] A, byte[] B, ref byte[] R)\n{\n...\n```\n\n\nOr you can return the value as the intended return of the function which would be like this:\n\n```\npublic static byte[] multiplication(byte[] A, byte[] B)\n{\nbyte[] R; // define this and give it the correct size\n\n// add your code here\n\nreturn R;\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Group by in LINQ\r\n                \r\nLet's suppose if we have a class like:\n\n```\nclass Person { \n    internal int PersonID; \n    internal string car; \n}\n```\n\n\nI have a list of this class: ```\nList<Person> persons;```\n\n\nAnd this list can have multiple instances with same ```\nPersonID```\ns, for example: \n\n```\npersons[0] = new Person { PersonID = 1, car = \"Ferrari\" }; \npersons[1] = new Person { PersonID = 1, car = \"BMW\"     }; \npersons[2] = new Person { PersonID = 2, car = \"Audi\"    }; \n```\n\n\nIs there a way I can group by ```\nPersonID```\n and get the list of all the cars he has? \n\nFor example, the expected result would be \n\n```\nclass Result { \n   int PersonID;\n   List<string> cars; \n}\n```\n\n\nSo after grouping, I would get: \n\n```\nresults[0].PersonID = 1; \nList<string> cars = results[0].cars; \n\nresult[1].PersonID = 2; \nList<string> cars = result[1].cars;\n```\n\n\nFrom what I have done so far: \n\n```\nvar results = from p in persons\n              group p by p.PersonID into g\n              select new { PersonID = g.Key, // this is where I am not sure what to do\n```\n\n\nCould someone please point me in the right direction? \n    ", "Answer": "\r\nAbsolutely - you basically want:\n```\nvar results = from p in persons\n              group p.car by p.PersonId into g\n              select new { PersonId = g.Key, Cars = g.ToList() };\n```\n\nOr as a non-query expression:\n```\nvar results = persons.GroupBy(\n    p => p.PersonId, \n    p => p.car,\n    (key, g) => new { PersonId = key, Cars = g.ToList() });\n```\n\nBasically the contents of the group (when viewed as an ```\nIEnumerable<T>```\n) is a sequence of whatever values were in the projection (```\np.car```\n in this case) present for the given key.\nFor more on how ```\nGroupBy```\n works, see my Edulinq post on the topic.\n(I've renamed ```\nPersonID```\n to ```\nPersonId```\n in the above, to follow .NET naming conventions, which specifically call this out in the \"Capitalizing Compound Words and Common Terms\" section.)\nAlternatively, you could use a ```\nLookup```\n:\n```\nvar carsByPersonId = persons.ToLookup(p => p.PersonId, p => p.car);\n```\n\nYou can then get the cars for each person very easily:\n```\n// This will be an empty sequence for any personId not in the lookup\nvar carsForPerson = carsByPersonId[personId];\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to implement multiplication without using multiplication operator in .NET [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                It's difficult to tell what is being asked here. This question is ambiguous, vague, incomplete, overly broad, or rhetorical and  cannot be reasonably answered in its current form. For help clarifying this question so that it can be reopened,  visit the help center.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI want to implement multiplication of two integer numbers without using multiplication operator, in .NET\n\n```\npublic uint MultiplyNumbers(uint x, uint y)\n{\n\n}\n```\n\n\nAny idea!\n    ", "Answer": "\r\nI'm assuming this is homework... otherwise there's no sane reason you'd want to do it. Therefore I'll just give hints...\n\n\nIf performance isn't terribly important, consider that ```\nx * 3 = x + x + x```\n... think about using a loop.\nIf performance is important but you know that one of the numbers will be small, loop on the smaller number.\nIf performance is important and both numbers could be large, you'll need to think about bit-twiddling. Remember that ```\nx * 2```\n is ```\nx << 1```\n, and go from there. \n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Addition operation versus multiplication operation\r\n                \r\nI know, that addition operation is more trivial than multiplication operation. But will there be any difference in execution time of ```\n123456 * 3```\n and ```\n123456 + 123456 + 123456```\n?\n\nHow exactly works multiplication?\n\nDo multiplication algorithms vary in different programming languages?\n\nHow multiplication looks on low-level (i.e. Assembler code)?\n    ", "Answer": "\r\nIn x86 assembly language the addition and multiplication operations look like this:\n\nADD [operand1], [operand2] \nwhere operand1 can be register, operand 2 can be register, constant or memory address\nIt takes from 1 to 7 clocks depending on processor model and operand2 type  \n\nMUL [operand] ;for unsigned multiplication\nmultiplies the content of the accumulator register (AL, AX, EAX) with operand, which can be a register or a memory address. And again, depending on the type of the operand and processor model, it takes 12-38 clocks\nThere's also a version of MUL that does signed multiplication.\n\nThis is core assembly language, without modern SIMD extensions like SSE etc. The real speed, as mentioned above, depends on the compiler optimizations.\n\nA smart compiler will most likely replace your 123456 + 123456 + 123456 with 3*123456\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Creating the multiplication table\r\n                \r\nI'm trying to create a multiplication table. The user enters their list of numbers and the program spits out the multiplication for each number. for example,\n```\n3 x 1 = 3\n3 x 2= 6 \n3 x 3 = 9\n......\n.....\n3 x 12=42 \n```\n\nthis is what I have tried so far:\n```\nenter code here\nN = int(input(\"How many numbers would you like to multiply?:\"))\nnum = []\nq=1\np = 1\ncount=0\n\n\n\nfor i in range(0,N):\n add = int(input(f\"number {i}:\"))\n num.append(add)\n print(num)\n\n\n\nfor j in num:\n     while q <= 12:\n         print (j * q, end=\" \")\n         q+=1\n\n#The result is \nHow many numbers would you like to multiply?:3\nnumber 0:2\nnumber 1:6\nnumber 2:5\n[2, 6, 5]\n2 4 6 8 10 12 14 16 18 20 22 24 \nenter code here\n```\n\nHow do I get the program to spit out all the multiplication for every number in the list?\n    ", "Answer": "\r\nStore your tables in a dictionary and call in any way you want. See below code:\n```\ndef inputmethod():\n    N = int(input(\"How many numbers would you like to multiply?:\"))\n    num = []\n    for i in range(0,N):\n        add = int(input(f\"number {i}:\"))\n        num.append(add)\n    return num\n\ndef multiplication(m,num):\n    L = list(range(1,m+1))\n    dict_tables = {}\n    for n in num:\n        dict_tables[n] = [e*n for e in L]\n    return dict_tables\n\ndef print_tables(dict_tables):\n    for key,value in dict_tables.items():\n        print(f\"Table of {key} is : {value}\")\n\nnum = inputmethod()\ngenerate_tables = multiplication(12,num)\nprint_tables(generate_tables)\n\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Google Maps JS API v3 - Simple Multiple Marker Example\r\n                \r\nFairly new to the Google Maps Api. I've got an array of data that I want to cycle through and plot on a map. Seems fairly simple, but all the multi-marker tutorials I have found are quite complex.\nLet's use the data array from Google's site for an example:\n```\nvar locations = [\n  ['Bondi Beach', -33.890542, 151.274856, 4],\n  ['Coogee Beach', -33.923036, 151.259052, 5],\n  ['Cronulla Beach', -34.028249, 151.157507, 3],\n  ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],\n  ['Maroubra Beach', -33.950198, 151.259302, 1]\n];\n```\n\nI simply want to plot all of these points and have an ```\ninfoWindow```\n pop up when clicked to display the name.\n    ", "Answer": "\r\nThis is the simplest I could reduce it to:\n```\n<!DOCTYPE html>\n<html> \n<head> \n  <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" /> \n  <title>Google Maps Multiple Markers</title> \n  <script src=\"http://maps.google.com/maps/api/js?key=YOUR_API_KEY\" \n          type=\"text/javascript\"></script>\n</head> \n<body>\n  <div id=\"map\" style=\"width: 500px; height: 400px;\"></div>\n\n  <script type=\"text/javascript\">\n    var locations = [\n      ['Bondi Beach', -33.890542, 151.274856, 4],\n      ['Coogee Beach', -33.923036, 151.259052, 5],\n      ['Cronulla Beach', -34.028249, 151.157507, 3],\n      ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],\n      ['Maroubra Beach', -33.950198, 151.259302, 1]\n    ];\n    \n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 10,\n      center: new google.maps.LatLng(-33.92, 151.25),\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n    \n    var infowindow = new google.maps.InfoWindow();\n\n    var marker, i;\n    \n    for (i = 0; i < locations.length; i++) {  \n      marker = new google.maps.Marker({\n        position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n        map: map\n      });\n      \n      google.maps.event.addListener(marker, 'click', (function(marker, i) {\n        return function() {\n          infowindow.setContent(locations[i][0]);\n          infowindow.open(map, marker);\n        }\n      })(marker, i));\n    }\n  </script>\n</body>\n</html>\n```\n\n\n👨‍💻 Edit/fork on a Codepen →\n\nSCREENSHOT\n\nThere is some closure magic happening when passing the callback argument to the ```\naddListener```\n method. This can be quite a tricky topic if you are not familiar with how closures work. I would suggest checking out the following Mozilla article for a brief introduction if it is the case:\n❯ Mozilla Dev Center: Working with Closures\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication Error in VB.NET?\r\n                \r\n```\nDim totinr As Double\ntotinr = 325.0 * 80.6\n```\n\n\nWhen i run above code (programatically using immediate window etc.) i got output like this ```\n26194.999999```\n but manually or using calculator result come like this whole value ```\n26195```\n. How this happen? how calculation perform in .NET for the above two value multiplication? only particular values multiplication is different in .NET otherwise 99% multiplication is correct\n    ", "Answer": "\r\nOne of the most important things you need to learn in programming - any language - is that floating point arithmetic is an approximation!\n\nThis is not a \"bad thing\", and it certainly shouldn't be a \"surprising\" thing.\n\nPlease read this link:\n\n\nBinary Floating Point in .Net\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to perform multiplication, using bitwise operators?\r\n                \r\nI am working through a problem which i was able to solve, all but for the last piece - i am not sure how can one do multiplication using bitwise operators:\n\n```\n0*8 = 0\n\n1*8 = 8\n\n2*8 = 16 \n\n3*8 = 24 \n\n4*8 = 32\n```\n\n\nCan you please recommend an approach to solve this?\n    ", "Answer": "\r\nTo multiply by any value of 2 to the power of N (i.e. 2^N) shift the bits N times to the left.\n```\n0000 0001 = 1 \n\ntimes 4 = (2^2 => N = 2) = 2 bit shift : 0000 0100 = 4\n\ntimes 8 = (2^3 -> N = 3) = 3 bit shift : 0010 0000 = 32\n```\n\netc..\nTo divide shift the bits to the right.\nThe bits are whole 1 or 0 - you can't shift by a part of a bit thus if the number you're multiplying by is does not factor a whole value of N\nie.\n```\nsince: 17 = 16  + 1 \nthus:  17 = 2^4 + 1\n\ntherefore: x * 17 = (x * 16) + x in other words 17 x's  \n```\n\nthus to multiply by 17 you have to do a 4 bit shift to the left, and then add the original number again:\n```\n==> x * 17 = (x * 16) + x \n==> x * 17 = (x * 2^4) + x \n==> x * 17 = (x shifted to left by 4 bits) + x \n\nso let x = 3 = 0000 0011 \n\ntimes 16 = (2^4 => N = 4) = 4 bit shift : 0011 0000 = 48\n\nplus the x (0000 0011)\n```\n\nie.\n```\n    0011 0000  (48)  \n+   0000 0011   (3)\n=============\n    0011 0011  (51)\n```\n\nEdit: Update to the original answer. Charles Petzold has written a fantastic book 'Code' that will explain all of this and more in the easiest of ways. I thoroughly recommend this.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Fastest Method for Find Multiplication Array ( by Minimum Number of Operations)\r\n                \r\nAn interview question:\n\nI have an array: for example this one:\n\n```\na,b,c,d,e,f,g!=0\n\nList_1=[a,b,c,d,e,f,g]\n```\n\n\nand I wan to find an optimum method with least operators to find this result:\n\n```\nMultiplication=[a+bcdefg,ab+cdefg,abc+defg,abcd+efg,abcde+fg,abcdef+g]\n```\n\n\nI propose to use this method:\n\n```\nmult=a*b*c*d*e*f*g\nMultiplication=[]\nTemp=List_1[0]\nwhile(i<(len(List_1))-1):\n    mult/=List_1[i]\n    Multiplication.append(Temp+mult)\n    Temp*=List_1[i+1]\n```\n\n\nThis line ```\nmult=a*b*c*d*e*f*g```\n take $n-1$ multiplication, ```\nwhile```\n loop take $(n-1)$ multiplication, $(n-1)$ division and $(n-1)$ addition. So overall time is approximately $3n-3$ multiplication and  $(n-1)$ addition.\n\nIs this simplest method or there are other methods with minimum memory and time?\n    ", "Answer": "\r\nCreate ```\n[a, ab, abc, …]```\n first:\n\n```\nl = [a, b, c, d, e, f, g]\nresult = []\np = 1\n\nfor i in range(0, len(l) - 1):\n    p *= l[i]\n    result.append(p)\n```\n\n\nThen add ```\n[…, efg, fg, g]```\n to it:\n\n```\np = 1\n\nfor i in range(len(l) - 1, 0, -1):\n    p *= l[i]\n    result[i - 1] += p\n```\n\n\nThis takes 2(n − 1) multiplications and n − 1 additions of list elements, which is better than 2(n − 1) multiplications, 2(n − 1) divisions, and n − 1 additions.\n\nIt’s also what Primusa described.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "matrix multiplication algorithm time complexity\r\n                \r\nI came up with this algorithm for matrix multiplication. I read somewhere that matrix multiplication has a time complexity of o(n^2). \nBut I think my this algorithm will give o(n^3). \nI don't know how to calculate time complexity of nested loops. So please correct me.\n\n```\nfor i=1 to n\n   for j=1 to n    \n     c[i][j]=0\n     for k=1 to n\n         c[i][j] = c[i][j]+a[i][k]*b[k][j]\n```\n\n    ", "Answer": "\r\nUsing linear algebra, there exist algorithms that achieve better complexity than the naive O(n3). Solvay Strassen algorithm achieves a complexity of O(n2.807) by reducing the number of multiplications required for each 2x2 sub-matrix from 8 to 7. \n\nThe fastest known matrix multiplication algorithm is Coppersmith-Winograd algorithm with a complexity of O(n2.3737). Unless the matrix is huge, these algorithms do not result in a vast difference in computation time. In practice, it is easier and faster to use parallel algorithms for matrix multiplication.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiple line code example in Javadoc comment\r\n                \r\nI have a small code example I want to include in the Javadoc comment for a method.  \n\n```\n/**\n * -- ex: looping through List of Map objects --\n * <code>\n * for (int i = 0; i < list.size(); i++) {\n *      Map map = (Map)list.get(i);\n *      System.out.println(map.get(\"wordID\"));\n *      System.out.println(map.get(\"word\"));\n * }\n * </code>\n * \n * @param query - select statement\n * @return List of Map objects\n */\n```\n\n\nThe problem is the code example shows up in the Javadoc with no line breaks making it hard to read.  \n\n```\n-- ex: looping through List of Map objects -- for (int i = 0; i list.size(); i++) { Map map = (Map)list.get(i); System.out.println(map.get(\"wordID\")); System.out.println(map.get(\"word\")); } \nParameters\nquery - - select statement \nReturns:\nList of Map objects \n```\n\n\nI guess I am wrong in assuming the code tag would handle line breaks.  What is the best way to format code examples in Javadoc comments ?\n    ", "Answer": "\r\nIn addition to the already mentioned ```\n<pre>```\n tags, you should also use the ```\n@code```\n JavaDoc annotation, which will make life much easier when it comes to HTML entities issues (in particular with Generics), e.g.:\n```\n* <pre>\n* {@code\n* Set<String> s;\n* System.out.println(s);\n* }\n* </pre>\n```\n\nWill give correct HTML output:\n```\nSet<String> s;\nSystem.out.println(s);\n```\n\nWhile omitting the ```\n@code```\n block (or using a ```\n<code>```\n tag) will result in HTML like this:\n```\nSet s;\nSystem.out.println(s);\n```\n\nFor reference, a full list of tag descriptions available in Java SE 8 can be found here.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Getting the high part of 64 bit integer multiplication\r\n                \r\nIn C++, say that:\n```\nuint64_t i;\nuint64_t j;\n```\n\nthen ```\ni * j```\n will yield an ```\nuint64_t```\n that has as value the lower part of the multiplication between ```\ni```\n and ```\nj```\n, i.e., ```\n(i * j) mod 2^64```\n.\nNow, what if I wanted the higher part of the multiplication? I know that there exists an assembly instruction to do something like that when using 32 bit integers, but I am not familiar at all with assembly, so I was hoping for help.\nWhat is the most efficient way to make something like:\n```\nuint64_t k = mulhi(i, j);\n```\n\n    ", "Answer": "\r\nIf you're using gcc and the version you have supports 128 bit numbers (try using __uint128_t) then performing the 128 multiply and extracting the upper 64 bits is likely to be the most efficient way of getting the result.\nIf your compiler doesn't support 128 bit numbers, then Yakk's answer is correct. However, it may be too brief for general consumption. In particular, an actual implementation has to be careful of overflowing 64 bit integers.\nThe simple and portable solution he proposes is to break each of a and b into 2 32-bit numbers and then multiply those 32 bit numbers using the 64 bit multiply operation.  If we write:\n```\nuint64_t a_lo = (uint32_t)a;\nuint64_t a_hi = a >> 32;\nuint64_t b_lo = (uint32_t)b;\nuint64_t b_hi = b >> 32;\n```\n\nthen it is obvious that:\n```\na = (a_hi << 32) + a_lo;\nb = (b_hi << 32) + b_lo;\n```\n\nand:\n```\na * b = ((a_hi << 32) + a_lo) * ((b_hi << 32) + b_lo)\n      = ((a_hi * b_hi) << 64) +\n        ((a_hi * b_lo) << 32) +\n        ((b_hi * a_lo) << 32) +\n          a_lo * b_lo\n```\n\nprovided the calculation is performed using 128 bit (or greater) arithmetic.\nBut this problem requires that we perform all the calculcations using 64 bit arithmetic, so we have to worry about overflow.\nSince a_hi, a_lo, b_hi, and b_lo are all unsigned 32 bit numbers, their product will fit in an unsigned 64 bit number without overflow. However, the intermediate results of the above calculation will not.\nThe following code will implement mulhi(a, b) when the mathemetics must be performed modulo 2^64:\n```\nuint64_t    a_lo = (uint32_t)a;\nuint64_t    a_hi = a >> 32;\nuint64_t    b_lo = (uint32_t)b;\nuint64_t    b_hi = b >> 32;\n\nuint64_t    a_x_b_hi =  a_hi * b_hi;\nuint64_t    a_x_b_mid = a_hi * b_lo;\nuint64_t    b_x_a_mid = b_hi * a_lo;\nuint64_t    a_x_b_lo =  a_lo * b_lo;\n\nuint64_t    carry_bit = ((uint64_t)(uint32_t)a_x_b_mid +\n                         (uint64_t)(uint32_t)b_x_a_mid +\n                         (a_x_b_lo >> 32) ) >> 32;\n\nuint64_t    multhi = a_x_b_hi +\n                     (a_x_b_mid >> 32) + (b_x_a_mid >> 32) +\n                     carry_bit;\n\nreturn multhi;\n                                              \n```\n\nAs Yakk points out, if you don't mind being off by +1 in the upper 64 bits, you can omit the calculation of the carry bit.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Forcing multiplication to use __rmul__() instead of Numpy array __mul__() or bypassing the broadcasting\r\n                \r\nThis question is close to what is asked in Overriding other __rmul__ with your class's __mul__ but I am under the impression that this is a more general problem then only numerical data. Also that is not answered and I really don't want to use the matrix multiplication ```\n@```\n for this operation. Hence, the question. \n\nI do have an object which accepts multiplication with scalars and numerical arrays. As usual, the left multiplication works fine since it is the ```\nmyobj()```\n methods are used but in the right multiplication, NumPy uses broadcasting rules and gives elementwise results with ```\ndtype=object```\n.\n\nThis has also the side-effect of not being able to check the size of the array whether the size is compatible or not. \n\nTherefore, the question is \n\n\n  Is there a way to force numpy array to look for the ```\n__rmul__()```\n of the other object instead of broadcasting and performing elementwise ```\n__mul__()```\n?\n\n\nIn my particular case, the object is a MIMO (multiple-input, multiple-output) transfer function matrix (or filter coefficients matrix if you will) so matrix multiplication has a special meaning in terms of adding and multiplying linear systems. Hence in each entry there is SISO system. \n\n```\nimport numpy as np\n\nclass myobj():\n    def __init__(self):\n        pass\n\n    def __mul__(self, other):\n        if isinstance(other, type(np.array([0.]))):\n            if other.size == 1:\n                print('Scalar multiplication')\n            else:\n                print('Multiplication of arrays')\n\n    def __rmul__(self, other):\n        if isinstance(other, type(np.array([0.]))):\n            if other.size == 1:\n                print('Scalar multiplication')\n            else:\n                print('Multiplication of arrays')\n\nA = myobj()\na = np.array([[[1+1j]]])  # some generic scalar\nB = np.random.rand(3, 3)\n```\n\n\nWith these definitions, the following commands show the undesired behavior. \n\n```\nIn [123]: A*a\nScalar multiplication\n\nIn [124]: a*A\nOut[124]: array([[[None]]], dtype=object)\n\nIn [125]: B*A\nOut[125]: \narray([[None, None, None],\n       [None, None, None],\n       [None, None, None]], dtype=object)\n\nIn [126]: A*B\nMultiplication of arrays\n\nIn [127]: 5 * A\n\nIn [128]: A.__rmul__(B)  # This is the desired behavior for B*A\nMultiplication of arrays\n```\n\n    ", "Answer": "\r\nBy default, NumPy assumes that unknown object (not inheriting from ndarray) are scalars, and it needs to \"vectorize\" multiplication over each element of any NumPy arrays.\n\nTo control the operations yourself, you need to set either ```\n__array_priority__```\n (most backwards compatible) or ```\n__array_ufunc__```\n (NumPy 1.13+ only). For example:\n\n```\nclass myworkingobj(myobj):\n    __array_priority__ = 1000\n\nA = myworkingobj()\nB = np.random.rand(3, 3)\nB * A  # Multiplication of arrays\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Declare multiple module.exports in Node.js\r\n                \r\nWhat I'm trying to achieve is to create one module that contains multiple functions in it.\n\nmodule.js:\n\n```\nmodule.exports = function(firstParam) { console.log(\"You did it\"); },\nmodule.exports = function(secondParam) { console.log(\"Yes you did it\"); }, \n// This may contain more functions\n```\n\n\n```\nmain.js:```\n\n\n```\nvar foo = require('module.js')(firstParam);\nvar bar = require('module.js')(secondParam);\n```\n\n\nThe problem I have is that the ```\nfirstParam```\n is an object type and the ```\nsecondParam```\n is a URL string, but when I have that it always complains that the type is wrong.\n\nHow can I declare multiple module.exports in this case?\n    ", "Answer": "\r\nYou can do something like:\n\n```\nmodule.exports = {\n    method: function() {},\n    otherMethod: function() {},\n};\n```\n\n\nOr just:\n\n```\nexports.method = function() {};\nexports.otherMethod = function() {};\n```\n\n\nThen in the calling script: \n\n```\nconst myModule = require('./myModule.js');\nconst method = myModule.method;\nconst otherMethod = myModule.otherMethod;\n// OR:\nconst {method, otherMethod} = require('./myModule.js');\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Django Aggregation: Summation of Multiplication of two fields\r\n                \r\nI have a model something like this:\n\n```\nclass Task(models.Model):\n    progress = models.PositiveIntegerField()\n    estimated_days = models.PositiveIntegerField()\n```\n\n\nNow I would like to do a calculation ```\nSum(progress * estimated_days)```\n on the database level. Using Django Aggregation I can have the sum for each field but not the summation of multiplication of fields. \n    ", "Answer": "\r\nWith Django 1.8 and above you can now pass an expression to your aggregate:\n\n```\n from django.db.models import F\n\n Task.objects.aggregate(total=Sum(F('progress') * F('estimated_days')))['total']\n```\n\n\nConstants are also available, and everything is combinable:\n\n```\n from django.db.models import Value\n\n Task.objects.aggregate(total=Sum('progress') / Value(10))['total']\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Tracing a multiplication table w/ Python trace()\r\n                \r\nI'm interested in finding out how to implement Python's trace module to follow the execution of a multiplication table and print its annotated results.\n\nI researched Python documentation and internet sources related to trace() and the multiplication program, but I came up empty-handed.\n\n```\nimport sys\nimport trace\n\ntracer = trace.Trace(\n    ignoredirs=[sys.prefix, sys.exec_prefix],\n    trace=0,\n    count=1)\n\ndef print_multiples(n, high):\n    for i in range(1, high+1):\n        print(n * i, end=\"   \")\n    print()\n\ndef print_mult_table(high):\n    \"\"\" Return a multiplication table with n rows and columns.\"\"\"\n    for i in range(1, high+1):\n        print_multiples(i, high)\n\nprint_mult_table(7)\n\nr = tracer.results()\nr.write_results(show_missing=True, coverdir=\".\")\n```\n\n\nAgain, I'd like to figure out how to implement Python's trace module to follow the execution of a multiplication table and print it annotated results.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Hibernate throws MultipleBagFetchException - cannot simultaneously fetch multiple bags\r\n                \r\nHibernate throws this exception during SessionFactory creation:\n\n\n  org.hibernate.loader.MultipleBagFetchException: cannot simultaneously fetch multiple bags\n\n\nThis is my test case:\n\nParent.java\n\n```\n@Entity\npublic Parent {\n\n @Id\n @GeneratedValue(strategy=GenerationType.IDENTITY)\n private Long id;\n\n @OneToMany(mappedBy=\"parent\", fetch=FetchType.EAGER)\n // @IndexColumn(name=\"INDEX_COL\") if I had this the problem solve but I retrieve more children than I have, one child is null.\n private List<Child> children;\n\n}\n```\n\n\nChild.java\n\n```\n@Entity\npublic Child {\n\n @Id\n @GeneratedValue(strategy=GenerationType.IDENTITY)\n private Long id;\n\n @ManyToOne\n private Parent parent;\n\n}\n```\n\n\nHow about this problem? What can I do?\n\n\n\nEDIT\n\nOK, the problem I have is that another \"parent\" entity is inside my parent, my real behavior is this:\n\nParent.java\n\n```\n@Entity\npublic Parent {\n\n @Id\n @GeneratedValue(strategy=GenerationType.IDENTITY)\n private Long id;\n\n @ManyToOne\n private AnotherParent anotherParent;\n\n @OneToMany(mappedBy=\"parent\", fetch=FetchType.EAGER)\n private List<Child> children;\n\n}\n```\n\n\nAnotherParent.java\n\n```\n@Entity\npublic AnotherParent {\n\n @Id\n @GeneratedValue(strategy=GenerationType.IDENTITY)\n private Long id;\n\n @OneToMany(mappedBy=\"parent\", fetch=FetchType.EAGER)\n private List<AnotherChild> anotherChildren;\n\n}\n```\n\n\nHibernate doesn't like two collections with ```\nFetchType.EAGER```\n, but this seems to be a bug, I'm not doing unusual things...\n\nRemoving ```\nFetchType.EAGER```\n from ```\nParent```\n or ```\nAnotherParent```\n solves the problem, but I need it, so real solution is to use ```\n@LazyCollection(LazyCollectionOption.FALSE)```\n instead of ```\nFetchType```\n (thanks to Bozho for the solution).\n    ", "Answer": "\r\nI think a newer version of hibernate (supporting JPA 2.0) should handle this. But otherwise you can work it around by annotating the collection fields with:\n\n```\n@LazyCollection(LazyCollectionOption.FALSE)\n```\n\n\nRemember to remove the ```\nfetchType```\n attribute from the ```\n@*ToMany```\n annotation.\n\nBut note that in most cases a ```\nSet<Child>```\n is more appropriate than ```\nList<Child>```\n, so unless you really need a ```\nList```\n - go for ```\nSet```\n\n\nBut remind that with using sets you won't eliminate the underlaying Cartesian Product as described by Vlad Mihalcea in his answer!\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Bash Scripting Multiplication table\r\n                \r\nHello I am wondering if anyone can help me :\nI try to make a multiplication table for my daughter, I don't know how to make it. This is how I want to look : \n1 x 1 = ? answer \nif the answer is true then go to the next one\n1 x 2 = ?\nbut if the answer is false then ask again 1 x 1 = ?\nuntil the answer is Correct.\n\n```\n#!/bin/bash\n\n# Multiplication table \n\necho \" --== Multiplication Table ==-- \"\nsleep 2\necho \" Lesson 1\"\nsleep 1\necho \"\"\n\n\necho -n \"1 x 1 = ? \" ; read opt\nif [ \"$opt\" = 1 ] \nthen\necho \"Correct!\"\nelse \necho \"Wrong!\"\nfi\n\nsleep 1 \necho \"\"\necho -n \"1 x 2 = ? \" ; read opt\nif [ \"$opt\" = 2 ] \nthen\necho \"Correct!\"\nelse \necho \"Wrong!\"\nfi\n```\n\n\nAfter the exercise is done until 10. Then show a result of how many correct answers has and how many Wrong.\nExample: \nLesson 1 is finish you have 9 correct answers and 1 wrong answer !\n    ", "Answer": "\r\nYou can use this script:\n\n```\n#!/bin/bash\n\n# Multiplication table\n\necho \" --== Multiplication Table ==-- \"\nsleep 2\necho \" Lesson $1\"\nsleep 1\necho \"\"\n\nwrong=0\ncorrect=0\nfor i in {1..10}\ndo\n    while true\n    do\n        echo -n \"$1 x $i = ? \" ; read opt\n        if [ $opt = $(( $1 * $i )) ]\n        then\n            (( correct++ ))\n            echo \"Correct!\"\n            break\n        else\n            (( wrong++ ))\n            echo \"Wrong!\"\n        fi\n    done\ndone\n\necho \"Lesson $1 is finish you have $correct correct answers and $wrong wrong answer!\"\n```\n\n\nYou can run it with different params for any base. Such as ```\n./script 5```\n for multiplication with 5.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to assign multiple classes to an HTML container?\r\n                \r\nIs it possible to assign multiple classes to a single ```\nHTML```\n container?\nSomething like:\n```\n<article class=\"column, wrapper\"> \n```\n\n    ", "Answer": "\r\nJust remove the comma like this:\n\n```\n<article class=\"column wrapper\"> \n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "subtraction multiplication and count recursively\r\n                \r\ni need to do count and count % subtraction and multiplication as per the below format.\n\ndf1 \n\n```\nA   B   C   D   E\n8   4   3   3   8\n5   1   6   8   2\n```\n\n\nexpected output: \n\n```\n                A   B   C   D   E\n                8   4   3   3   8\n                5   1   6   8   2\nCOUNT           13  5   9   11  10\nCOUNT PERCENT   13  5   9   11  10\nSUBTRACTION     8   -4  -2  1   10\nMULTIPLICATION  104 -20 -18 11  100\n\n1.count will give the number of items in the columns, there can be n number of columns \n2.count percentage\n3.subtraction = need to subtraction of count row i.e. 13-5 = 8, 5-9 = -4, 9-11=-2, 10 as it    \n4. multiplication  - its a multiplication of count and subtraction rows. \n```\n\n    ", "Answer": "\r\n```\nlibrary(dplyr)\ndf2 <- df %>%\n  t() %>%\n  as_tibble() %>%\n  mutate(count = V1 + V2,\n         count_pct = count, # not sure what else expected here\n         subtraction = count - lead(count, default = 0),\n         multiplication = count * subtraction) %>%\n  t()\n\n               [,1] [,2] [,3] [,4] [,5]\nV1                8    4    3    3    8\nV2                5    1    6    8    2\ncount            13    5    9   11   10\ncount_pct        13    5    9   11   10\nsubtraction       8   -4   -2    1   10\nmultiplication  104  -20  -18   11  100\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix, Vector, Multiplication [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is not about programming or software development. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     This question does not appear to be about a specific programming problem, a software algorithm, or software tools primarily used by programmers. If you believe the question would be on-topic on another Stack Exchange site, you can leave a comment to explain where the question may be able to be answered.\r\n                \r\n                    \r\n                        Closed 7 months ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI understand what Vector and matrix are.\n\nBut I don't know what is vector-matrix multiplication for? How the mathematician come up this theory?\n\nWhat is matrix-matrix multiplication for? How come up this theory?\n\n\nI know how to calculate them, but no idea what it looks like in a 3D space.\n\nCan I understand that: Matrix Multiplication is: First we break one of two Matrixes to several vectors; Second, we do Vector-Matrix Multiplication and then adding all of them together?\n\nThank you for your explanation\n    ", "Answer": "\r\nBasics\nMatrices can map numbers in 2 dimensions. This video shows a good example of how to calculate with matrices.\nMatrix A = items sold per day (5 x 3 dimension)\n```\n             c\n             o\n             o  c\n             k  a  p\n             i  k  i\n             e  e  e\n             s  s  s\n             \nmonday     [ 3  5  3 ]\ntuesday    [ 7  1  2 ]\nwednesday  [ 2  5  3 ]\nthursday   [ 5  4  0 ]\nfriday     [ 3  4  4 ]\n```\n\nMatrix B = Price per item (3 x 1 dimension)\n```\n              €\ncookies    [  4 ]\ncakes      [ 10 ]\npies       [  8 ]\n```\n\nIn order to be able to multiply 2 matrices, the 2nd dimension of the 1st matrix MUST match the 1st dimension of the 2nd matrix ```\n(5 x 3) * (3 x 1)```\n (3's must match), and this multiplication will result in a ```\n5 x 1```\n matrix.\nIn this example we're multiplying a (days/item) matrix with a (items/price) matrix, and we're expecting a (days/price) matrix that indicates how much we earn per day.\nYou can immediately see why the numbers of columns of the first matrix must match the number of rows of the second matrix here.\nMultiplication\nIn order to multiply the matrices, we first position them in a better way:\n```\n                           €\n                        [  4 ]\n                        [ 10 ]\n                        [  8 ]\n\nmonday     [ 3  5  3 ]  [    ]\ntuesday    [ 7  1  2 ]  [    ]\nwednesday  [ 2  5  3 ]  [    ]\nthursday   [ 5  4  0 ]  [    ]\nfriday     [ 3  4  4 ]  [    ]\n```\n\nAs demonstrated below, each element in the resulting matrix is the sum of following multiplications:\n```\n                            €\n                      ---[  4 ]\n                    ╱  --[ 10 ]\n                  ╱  ╱  -[  8 ]\n                ╱  ╱  ╱     |\n              ╱  ╱  ╱       |\nmonday     [ 3  5  3 ]   [    ]\ntuesday    [ 7  1  2 ]   [    ]\nwednesday  [ 2  5  3 ] - [ 82 ]\nthursday   [ 5  4  0 ]   [    ]\nfriday     [ 3  4  4 ]   [    ]\n```\n\nSo for the third element, the result is as follows:\n```\n2 cookies * 4 €/cookie + 5 cakes * 10 €/cake + 3 pies * 8 €/pie = 82 €\n```\n\nExtending the example\nIf you also want to know how much time you're spending to bake the stuff you're selling, you can add those numbers to the second matrix as well:\n```\n              €   min.\ncookies    [  4     2  ]\ncakes      [ 10    30  ]\npies       [  8    20  ]\n```\n\nMultiplying them:\n```\n                            €   min\n                      ---[  4     2  ]\n                    ╱  --[ 10    30  ]\n                  ╱  ╱  -[  8    20  ]\n                ╱  ╱  ╱     |     |\n              ╱  ╱  ╱       |     |\nmonday     [ 3  5  3 ]   [           ]\ntuesday    [ 7  1  2 ]   [           ]\nwednesday  [ 2  5  3 ] - [ 82    214 ]\nthursday   [ 5  4  0 ]   [           ]\nfriday     [ 3  4  4 ]   [           ]\n```\n\nWill give you\n```\nR(3,2) = 2 * 2 + 5 * 30 + 3 * 20 = 214\n```\n\nSo as a result, you know your earnings per day, and your spent minutes per day for the items you sell\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Bitboards (uint64_t variables) multiplication in C++\r\n                \r\nI have red many sources about magic bitboards and everywhere was mentioned a bitboards multiplication such as normal aritmetic operation, for example at this picture:\n\nBut when I try to do this myself the result is not the same\n```\nuint64_t occupancy = 0x200000000A0000;\nuint64_t magic = 0x12000810020004;\nuint64_t multiplication = occupancy * magic;\n```\n\n\nI suppose the problem is that the result's size is bigger than the variable's maximum but obviously it must work somehow.\nThanks for all answers!\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Communication between multiple docker-compose projects\r\n                \r\nI have two separate ```\ndocker-compose.yml```\n files in two different folders:\n\n\n```\n~/front/docker-compose.yml```\n\n```\n~/api/docker-compose.yml```\n\n\n\nHow can I make sure that a container in ```\nfront```\n can send requests to a container in ```\napi```\n?\n\nI know that ```\n--default-gateway```\n option can be set using ```\ndocker run```\n for an individual container, so that a specific IP address can be assigned to this container, but it seems that this option is not available when using ```\ndocker-compose```\n.\n\nCurrently I end up doing a ```\ndocker inspect my_api_container_id```\n and look at the gateway in the output. It works but the problem is that this IP is randomly attributed, so I can't rely on it.\n\nAnother form of this question might thus be:\n\n\nCan I attribute a fixed IP address to a particular container using docker-compose?\n\n\nBut in the end what I'm looking after is:\n\n\nHow can two different docker-compose projects communicate with each other?\n\n    ", "Answer": "\r\nYou just need to make sure that the containers you want to talk to each other are on the same network. Networks are a first-class docker construct, and not specific to compose.\n```\n# front/docker-compose.yml\nversion: '2'\nservices:\n  front:\n    ...\n    networks:\n      - some-net\nnetworks:\n  some-net:\n    driver: bridge\n```\n\n...\n```\n# api/docker-compose.yml\nversion: '2'\nservices:\n  api:\n    ...\n    networks:\n      - front_some-net\nnetworks:\n  front_some-net:\n    external: true\n```\n\n\nNote: Your app’s network is given a name based on the “project name”, which is based on the name of the directory it lives in, in this case a prefix ```\nfront_```\n was added\n\nThey can then talk to each other using the service name. From ```\nfront```\n you can do ```\nping api```\n and vice versa.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Parametric Matrix Multiplication\r\n                \r\nDoes matlab supports such multiplication??\n\nI searched a lot and find these\n\n```\n>> X = @(a1,a2,a3,a4)[a1 a2;a3 a4];\n>> Y = @(b1,b2,b3,b4)[b1 b2;b3 b4];\n>> % Something like ==> X*Y\n```\n\n\nBut this just solves an equation with \"value\" and does not solve parametric for me. Does matlab support such a multiplication? \n    ", "Answer": "\r\nMaybe more of a long comment than an answer, but are you looking for symbolic variables? It requires the Symbolic Math Toolbox.\n\nExample:\n\n```\nclc\nclear\n\nsyms a1 a2 a3 a4 b1 b2 b3 b4\n\nA = [a1 a2;a3 a4]\nB = [b1 b2;b3 b4]\n\nC = (A*B)\n\nC =\n\n[ a1*b1 + a2*b3, a1*b2 + a2*b4]\n[ a3*b1 + a4*b3, a3*b2 + a4*b4]\n```\n\n\nIs this what you mean by \"parametric matrix\"?\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "SQL MAX of multiple columns?\r\n                \r\nHow do you return 1 value per row of the max of several columns:\n\nTableName\n\n```\n[Number, Date1, Date2, Date3, Cost]\n```\n\n\nI need to return something like this:\n\n```\n[Number, Most_Recent_Date, Cost]\n```\n\n\nQuery?\n    ", "Answer": "\r\nHere is another nice solution for the ```\nMax```\n functionality using T-SQL and SQL Server\n```\nSELECT [Other Fields],\n  (SELECT Max(v) \n   FROM (VALUES (date1), (date2), (date3),...) AS value(v)) as [MaxDate]\nFROM [YourTableName]\n```\n\nValues is the Table Value Constructor.\n\"Specifies a set of row value expressions to be constructed into a table. The Transact-SQL table value constructor allows multiple rows of data to be specified in a single DML statement. The table value constructor can be specified either as the VALUES clause of an INSERT ... VALUES statement, or as a derived table in either the USING clause of the MERGE statement or the FROM clause.\"\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication and Concataning results in Dart\r\n                \r\nI'm new in Dart language but I still working on ! I got this problem, I want to calculate the table of multiplication of : 14.\n\nSo basicly, i want to get this results:\n14,28,42,56,70,84,98,112,126, etc etc to 1400\n\nMy function work, when I print my result. But I can't paste the results in a div.\n\nThere is my .dart :\n\n```\nmain() {    \n  var numero2 = 14;\n  var multiplication = 0;\n  var element02 = query('#exercice02');   \n  for (var i = 1; i < 101; i++) {\n    multiplication = numero2 * i;\n    print(multiplication); \n  }\n  //element02.text = multiplication;\n\n}\n```\n\n\nAnd in my html i got :\n\n```\n<!DOCTYPE html>\n\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>HelloWorld</title>\n    <link rel=\"stylesheet\" href=\"HelloWorld.css\">\n  </head>\n  <body>\n    <div id=\"container\">\n      <p class=\"question\">Exercice 02 : 100 x 14 : <span id=\"exercice02\"></span></p>\n    </div>\n\n    <script type=\"application/dart\" src=\"web/HelloWorld.dart\"></script>\n    <script src=\"https://dart.googlecode.com/svn/branches/bleeding_edge/dart/client/dart.js\"></script>\n  </body>\n</html>\n```\n\n\nActually, I dont know how to concatane the results, I try as you can see the : element02.text = multiplication; in FOR, but it destroy it, and then I try the += and they are multiplicating together and I only have 1 result at the end.\n\nSome one can help me ?\n    ", "Answer": "\r\nHow do you want the results to be displayed? Like: ```\n14, 28, 42```\n?\n\ntest.dart\n\n```\nimport 'dart:html';\n\nvoid main() {\n  var results = [];\n  for (var i = 14; i <= 1400; i += 14) {\n    results.add(i.toString());\n  }\n\n  var element = query('#container');\n  element.text = Strings.join(results, ', ');\n}\n```\n\n\ntest.html\n\n```\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"container\"></div>\n\n    <script type=\"application/dart\" src=\"test.dart\"></script>\n    <script src=\"https://dart.googlecode.com/svn/branches/bleeding_edge/dart/client/dart.js\"></script>\n  </body>\n</html>\n```\n\n\nOutput:\n\n\n  14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 196, 210,\n  224, 238, 252, 266, 280, 294, 308, 322, 336, 350, 364, 378, 392, 406,\n  420, 434, 448, 462, 476, 490, 504, 518, 532, 546, 560, 574, 588, 602,\n  616, 630, 644, 658, 672, 686, 700, 714, 728, 742, 756, 770, 784, 798,\n  812, 826, 840, 854, 868, 882, 896, 910, 924, 938, 952, 966, 980, 994,\n  1008, 1022, 1036, 1050, 1064, 1078, 1092, 1106, 1120, 1134, 1148,\n  1162, 1176, 1190, 1204, 1218, 1232, 1246, 1260, 1274, 1288, 1302,\n  1316, 1330, 1344, 1358, 1372, 1386, 1400\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in F#\r\n                \r\nI can't get my answer correctly from my multiplication function\n\nMy code is:\n\n```\nlet List = [77; 14; 89; 93; 201]\n    let rec Mult =\n       match n with\n       | 24 -> 24\n       | _-> n * n\n    for i = 1 to 5 do\n       printfn \"Multiplication: %A\" (Mult i)\n```\n\n\nMy question is how do I get I get it to call my List?\n    ", "Answer": "\r\n```\nlet List = [24; 103; 7; 13; 445]\n\nlet rec Mult = function\n    | head :: tail -> head * (Mult tail)\n    | [] -> 1\n\nlet result = Mult List\nprintfn \"%A\" result\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I replace multiple spaces with a single space in C#?\r\n                \r\nHow can I replace multiple spaces in a string with only one space in C#?\n\nExample:\n\n```\n1 2 3  4    5\n```\n\n\nwould be:\n\n```\n1 2 3 4 5\n```\n\n    ", "Answer": "\r\nI like to use:\n\n```\nmyString = Regex.Replace(myString, @\"\\s+\", \" \");\n```\n\n\nSince it will catch runs of any kind of whitespace (e.g. tabs, newlines, etc.) and replace them with a single space.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in a variable\r\n                \r\nI am writing a piece of code that needs to multiply numbers by different values, all the code for the entering and validation of the 7 digit number works however the multiplication doesn't work.  This is my code.\n\n```\nwhile True:\n    try:\n        num = int(input(\"enter a 7 digit number: \"))\n        check = len(str(num))\n\n        if check == 7:\n            print(\"This code is valid\")\n            break\n\n        else:\n            num = int(input(\"enter a number that is only 7 digits: \"))\n\n    except ValueError:\n        print(\"you must enter an integer\")\n\n\nnum = int(num)        \n\ndef multiplication():\n    num[0]*3\n    num[1]*1\n    num[2]*3\n    num[3]*1\n    num[4]*3\n    num[5]*1\n    num[6]*3\n    return total\n\nmultiplication()\n```\n\n\nWhen I run it, I get the following error:\n\n\n```\nTraceback (most recent call last): \n  File \"\\\\hpdl3802\\stuhomefolders$\\12waj066\\Year 10\\Computing\\A453\\Code\\Test v2.py\", line 29, in <module> \n    multiplication() \n  File \"\\\\hpdl3802\\stuhomefolders$\\12waj066\\Year 10\\Computing\\A453\\Code\\Test v2.py\", line 20, in multiplication \n    num[0]*3 \nTypeError: 'int' object is not subscriptable\n```\n\n\n\nAny feedback is welcome \n    ", "Answer": "\r\nOf course, your code might be written in a number of ways, optimized (check @Kasravand answer, it's awesome) or not, but with a minimal effort this is what I get:\n\n```\nwhile True:\n    try:\n        num = input(\"enter a 7 digit number: \")\n        check = len(num)\n        int(num) # will trigger ValueError if not a number\n\n        if check == 7:\n            print(\"This code is valid\")\n            break\n        else:\n            print(\"bad length, try again\")\n\n    except ValueError:\n        print(\"you must enter an integer\")\n\ndef multiplication(num):\n    total  = int(num[0])*3\n    total += int(num[1])*1\n    total += int(num[2])*3\n    total += int(num[3])*1\n    total += int(num[4])*3\n    total += int(num[5])*1\n    total += int(num[6])*3\n\n    return total\n\nprint(\"Answer: \", multiplication(num))\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Formatting multiplication table f# output\r\n                \r\nI am trying to create a N x M multiplication table program using f# where the n and m values are specified by the user and the table is calculated and stored in a 2D array and displayed on the console.\n\nAny help would be much appreciated on getting my array to be displayed in a format similar to:\n\n \n\nas opposed to the one in my program\n\n\n\nMy Source Code is \n\n```\nopen System\n\nlet func() =\n        let multiplication  n m = Array2D.init n m (fun n m -> n * m)\n\n\n        printf \"Enter N Value: \"\n        let nValue = Console.ReadLine() |> System.Int32.Parse\n\n        printf \"\\nEnter M Value: \"\n        let mValue = Console.ReadLine() |> System.Int32.Parse\n\n        let grid = multiplication nValue mValue \n\n\n        printfn \"\\n\\n%A\" grid\n\nfunc()\n```\n\n\nAlso I would like to know how I can get my values to start from 1 as opposed to 0.\n\nAny help much would be much appreciated as I'm a beginner in F#. \n    ", "Answer": "\r\nFormatting output, like any UI task, usually turns out to be surprisingly tricky. This case is no exception.\n\nThe idea would be this:\n\n\nFigure out how wide the \"cells\" of the table should be.\nBuild each row by concatenating together numbers converted to string and padded to the cell width.\nPrepend the first row.\nConcatenate all rows separating them with a newline character.\n\n\nFirst, let's see how we can figure out the width of the \"cell\". What is the widest number in the table? Assuming both ```\nn```\n and ```\nm```\n are positive, the widest number would be ```\nn*m```\n, obviously. So, we can calculate the width of the cell like this:\n\n```\nlet cellWidth = (n*m) |> string |> String.length\n```\n\n\nSimilarly, the very first (leftmost) column would be as wide as the biggest number in it, which is ```\nn```\n:\n\n```\nlet firstColWidth = n |> string |> String.length\n```\n\n\nNow, let's make ourselves a function that would take a number and left-pad it with spaces to the required width:\n\n```\nlet pad totalWidth (value: obj) = \n    let s = string value\n    if s.Length >= totalWidth then s\n    else (String.replicate (totalWidth-s.Length) \" \") + s\n```\n\n\nThis function is easy to follow: if the string is already over the maximum, just return it, otherwise prepend ```\n(totalWidth-s.Length)```\n spaces to it.\n\nWith this function in hand, we can format a row of our grid:\n\n```\nlet formatRow rowIdx =\n    let cells = [for colIdx in 0..m-1 -> grid.[rowIdx,colIdx] |> pad cellWidth] // Each cell in this row padded to `cellWidth`\n    let firstCol = (rowIdx+1) |> pad firstColWidth  // Leftmost column - just the row index itself padded to `firstColWidth`\n    let wholeRow = firstCol :: cells  // Whole row consists of the leftmost column plus subsequent cells\n    String.concat \" \" wholeRow\n```\n\n\nSimilarly, format the topmost row:\n\n```\nlet firstRow = \n    let cols = [for col in 1..m -> col |> pad cellWidth]\n    let firstCol = \" \" |> pad firstColWidth\n    let wholeRow = firstCol :: cols\n    String.concat \" \" wholeRow\n```\n\n\nLook how similar these functions are: the only difference is ```\ngrid.[rowIdx,colIdx]```\n vs. ```\ncol```\n. Why don't we generalize that?\n\n```\nlet formatRowWith firstCell getCell =\n    let cells = [for colIdx in 0..m-1 -> getCell colIdx |> pad cellWidth]\n    let firstCol = firstCell |> pad firstColWidth\n    let wholeRow = firstCol :: cells\n    String.concat \" \" wholeRow\n\nlet formatRow rowIdx = formatRowWith (rowIdx+1) (fun c -> grid.[rowIdx,c])\nlet firstRow = formatRowWith \" \" (fun c -> c+1)\n```\n\n\nFinally, format each row, prepend the first, and concatenate them all together:\n\n```\nlet rows = [0..n-1] |> List.map formatRow\nlet allRows = firstRow :: rows\nString.concat \"\\n\" allRows\n```\n\n\nThe final code:\n\n```\nlet formatGrid (grid:_[,]) =\n    let n, m = grid.GetLength 0, grid.GetLength 1\n    let cellWidth = (n*m) |> string |> String.length\n    let firstColWidth = n |> string |> String.length\n\n    let pad totalWidth (value: obj) = \n        let s = string value\n        if s.Length >= totalWidth then s\n        else (String.replicate (totalWidth-s.Length) \" \") + s\n\n    let formatRowWith firstCell getCell =\n        let cells = [for colIdx in 0..m-1 -> getCell colIdx |> pad cellWidth]\n        let firstCol = firstCell |> pad firstColWidth\n        let wholeRow = firstCol :: cells\n        String.concat \" \" wholeRow\n\n    let formatRow rowIdx = formatRowWith (rowIdx+1) (fun c -> grid.[rowIdx,c])\n    let firstRow = formatRowWith \" \" id\n\n    let rows = [0..n-1] |> List.map formatRow\n    let allRows = firstRow :: rows\n    String.concat \"\\n\" allRows\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Boolean Multiplication\r\n                \r\nI would like to make a boolean multiplication using cuda 6, but I can't do it in a right way.\nB is a boolean symmetric matrix and I have to do B^n boolean multiplication.\n\nMy C++ code is:\n\n```\nfor (m=0; m<dimension; m++) {\n    for (n=0; n<dimension; n++) {\n        for (k=0; k<dimension; k++) {\n            temp=mat[m*dimension+k] && mat[k*dimension+n];\n            B[m*dimension+n]= B[m*dimension+n] || temp;\n        }\n    }\n}\n```\n\n\nI've found a piece of code, but I can't adapt it for my case.\n\n```\n__global__ void gpuMM(float *A, float *B, float *C, int N)\n{\n    int row = blockIdx.y*blockDim.y + threadIdx.y;\n    int col = blockIdx.x*blockDim.x + threadIdx.x;\n\n    float sum = 0.f;\n    for (int n = 0; n < N; ++n)\n         sum += A[row*N+n]*B[n*N+col];\n\n    C[row*N+col] = sum;\n}\n```\n\n    ", "Answer": "\r\nUsing the notation for your kernel for the first part of your code you get this.  \n\n```\nfor (row=0; row<N; row++) {\n    for (col=0; col<N; col++) {\n        for (n=0; n<N; n++) {\n            temp=mat[row*N+n] && mat[n*N+col];\n            B[row*N+col] = B[row*N+col] || temp; \n        }       \n    }\n}\n```\n\n\nSo your kernel should be something like this:\n\n```\n__global__ void gpu_booleanMM(char *mat, char *B, int N)\n{\n    int row = blockIdx.y*blockDim.y + threadIdx.y;\n    int col = blockIdx.x*blockDim.x + threadIdx.x;\n\n    for (int n=0; n<N; n++) {\n        temp=mat[row*N+n] && mat[n*N+col];\n        B[row*N+col] = B[row*N+col] || temp; \n    }   \n}\n```\n\n\nI doubt this is very efficient but something like this should nevertheless give the correct result.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "c++ 11. Matrices multiplication\r\n                \r\nHello. I write matrix class but i have some problem with matrices multiplication which have different dimensions.\n\n```\ntemplate< typename T, size_t Row, size_t Col >\nclass Matrix\n{\npublic:\n.....................................\ntemplate< typename MulT >\nauto operator * (const MulT& other) -> Matrix<T, Row, other.getColNum()>\n{\n    if (other.getRowNum() != getColNum())\n        throw std::logic_error(\"Multiplication are not possible\");\n\n    Matrix<T, Row, other.getColNum()> temp;\n\n    // Some operations.\n\n    return temp; // Must return matrix with this type Matrix<T, Row, other.getColNum()>\n                    // but it dont work.\n}\n.....................................\n}; // class Matrix\n```\n\n\nThis code don't work. It is possible to resolve this problem?\n    ", "Answer": "\r\n```\nother.getColNum()```\n is probably not a ```\nconstexpr```\n function and can therefore not be used as a template non-type argument.\n\nRead up on ```\nconstexpr```\n here: http://en.cppreference.com/w/cpp/language/constexpr\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "tensorflow: how to perform element-wise multiplication between two sparse matrix\r\n                \r\nI have two sparse matrices declared using the ```\ntf.sparse_placeholder```\n. I need to perform the element-wise multiplication between the two matrices. But I cannot find such an implementation in ```\ntensorflow```\n. The most related function is ```\ntf.sparse_tensor_dense_matmul```\n, but this is a function performing matrix multiplication between one sparse matrix and one dense matrix.\n\nWhat I hope to find is to performing element-wise multiplication between two sparse matrices. Is there any implementation of this in ```\ntensorflow```\n?\n\nI show the following example of performing multiplication between dense matrices. I'm looking forward to seeing a solution.\n\n```\nimport tensorflow as tf\nimport numpy as np\n\n# Element-wise multiplication, two dense matrices\nA = tf.placeholder(tf.float32, shape=(100, 100))\nB = tf.placeholder(tf.float32, shape=(100, 100))\nC = tf.multiply(A, B)\nsess = tf.InteractiveSession()\nRandA = np.random.rand(100, 100)\nRandB = np.random.rand(100, 100)\nprint sess.run(C, feed_dict={A: RandA, B: RandB})\n\n# matrix multiplication, A is sparse and B is dense\nA = tf.sparse_placeholder(tf.float32)\nB = tf.placeholder(tf.float32, shape=(5,5))\nC = tf.sparse_tensor_dense_matmul(A, B)\nsess = tf.InteractiveSession()\nindices = np.array([[3, 2], [1, 2]], dtype=np.int64)\nvalues = np.array([1.0, 2.0], dtype=np.float32)\nshape = np.array([5,5], dtype=np.int64)\nSparse_A = tf.SparseTensorValue(indices, values, shape)\nRandB = np.ones((5, 5))\nprint sess.run(C, feed_dict={A: Sparse_A, B: RandB})\n```\n\n\nThank you very much!!!\n    ", "Answer": "\r\nTensorFlow currently has no sparse-sparse element-wise multiplication operation. \n\nWe don't plan to add support for this currently, but contributions are definitely welcome! Feel free to create a github issue here: https://github.com/tensorflow/tensorflow/issues/new and perhaps you or someone in the community can pick it up :)\n\nThanks! \n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Implementing addition using multiplication [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     This question does not appear to be about programming within the scope defined in the help center.\r\n                \r\n                    \r\n                        Closed 6 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI've been familiar with the famous question of implementing multiplication using addition, or exponentiation using multiplication, using algorithms of looping or bit-shifting and adding shifted bit groups combos.\n\nNow, I wondered if there is any way to implement addition using only higher level operations, such as multiplication specifically, or exponentiation, logarithm etc. (subtraction excluded)\n\nCan this be achieved with some algorithm combining these operations (and possibly bitwise operators as assistants) or is addition a fundamental operation that serves as an axiom, so it can't be reproduced in other ways except for its definition?\n\nThanks.\n    ", "Answer": "\r\nYes of course: \n\n\n\nEdit: Lifting my eyes above the practicality above to the more speculative, I would say that you should expect to be able to perform lower level operations through higher. As long as the higher level operation is built up by lower level operations, these should be able to perform at least what their building stones could. However probably not in an easy and straightforward way, see the comment below. A human can tell you that 1+1=2 but it would be much much cheaper and safer to ask a computer or an even simpler device. \n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to Create Multiple Where Clause Query Using Laravel Eloquent?\r\n                \r\nI'm using the Laravel Eloquent query builder and I have a query where I want a ```\nWHERE```\n clause on multiple conditions. It works, but it's not elegant. \n\nExample:\n\n```\n$results = User::where('this', '=', 1)\n    ->where('that', '=', 1)\n    ->where('this_too', '=', 1)\n    ->where('that_too', '=', 1)\n    ->where('this_as_well', '=', 1)\n    ->where('that_as_well', '=', 1)\n    ->where('this_one_too', '=', 1)\n    ->where('that_one_too', '=', 1)\n    ->where('this_one_as_well', '=', 1)\n    ->where('that_one_as_well', '=', 1)\n    ->get();\n```\n\n\nIs there a better way to do this, or should I stick with this method?\n    ", "Answer": "\r\nIn Laravel 5.3 (and still true as of 7.x) you can use more granular wheres passed as an array:\n\n```\n$query->where([\n    ['column_1', '=', 'value_1'],\n    ['column_2', '<>', 'value_2'],\n    [COLUMN, OPERATOR, VALUE],\n    ...\n])\n```\n\n\nPersonally I haven't found use-case for this over just multiple ```\nwhere```\n calls, but fact is you can use it.\n\nSince June 2014 you can pass an array to ```\nwhere```\n\n\nAs long as you want all the ```\nwheres```\n use ```\nand```\n operator, you can group them this way:\n\n```\n$matchThese = ['field' => 'value', 'another_field' => 'another_value', ...];\n\n// if you need another group of wheres as an alternative:\n$orThose = ['yet_another_field' => 'yet_another_value', ...];\n```\n\n\nThen:\n\n```\n$results = User::where($matchThese)->get();\n\n// with another group\n$results = User::where($matchThese)\n    ->orWhere($orThose)\n    ->get();\n```\n\n\nThe above will result in such query:\n\n```\nSELECT * FROM users\n  WHERE (field = value AND another_field = another_value AND ...)\n  OR (yet_another_field = yet_another_value AND ...)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is MOD operation more CPU intensive than multiplication?\r\n                \r\nWhy is a mod (```\n%```\n) operation more expensive than a multiplication (```\n*```\n) by a bit more than a factor of 2?\nPlease be more specific about how CPU performs division operation and returns the result for MOD operation.\nIn the following  example the threads each run for a second. The test was performed on a ```\nSPARC```\n processor.\n```\n// multiplication\nvoid someThread() {\n\n    int a = 10234;\n    while (true) {\n        opers++;\n        a = a * a;\n        a++;\n    }\n\n    // opers ~ 26 * 10^6 in a sec.\n}\n\n// MOD\nvoid someThread() {\n\n    int a = 10234;\n    while (true) {\n        opers++;\n        a = a % 10000007;\n        a++;\n    }\n\n    // opers ~ 12 * 10^6 in a sec.\n}\n```\n\n    ", "Answer": "\r\nMOD is a division operation, not a multiplication operation.  Division is more expensive than multiplication.\n\nMore information about the MOD operation here: http://en.wikipedia.org/wiki/Modulo_operation\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is integer multiplication really done at the same speed as addition on a modern CPU?\r\n                \r\nI hear this statement quite often, that multiplication on modern hardware is so optimized that it actually is at the same speed as addition. Is that true?\n\nI never can get any authoritative confirmation. My own research only adds questions. The speed tests usually show data that confuses me. Here is an example:\n\n```\n#include <stdio.h>\n#include <sys/time.h>\n\nunsigned int time1000() {\n    timeval val;\n    gettimeofday(&val, 0);\n    val.tv_sec &= 0xffff;\n    return val.tv_sec * 1000 + val.tv_usec / 1000;\n}\n\nint main() {\n    unsigned int sum = 1, T = time1000();\n    for (int i = 1; i < 100000000; i++) {\n        sum += i + (i+1); sum++;\n    }\n    printf(\"%u %u\\n\", time1000() - T, sum);\n    sum = 1;\n    T = time1000();\n    for (int i = 1; i < 100000000; i++) {\n        sum += i * (i+1); sum++;\n    }\n    printf(\"%u %u\\n\", time1000() - T, sum);\n}\n```\n\n\nThe code above can show that multiplication is faster:\n\n```\nclang++ benchmark.cpp -o benchmark\n./benchmark\n746 1974919423\n708 3830355456\n```\n\n\nBut with other compilers, other compiler arguments, differently written inner loops, the results can vary and I cannot even get an approximation.\n    ", "Answer": "\r\nMultiplication of two n-bit numbers can in fact be done in O(log n) circuit depth, just like addition.  \n\nAddition in O(log n) is done by splitting the number in half and (recursively) adding the two parts in parallel, where the upper half is solved for both the \"0-carry\" and \"1-carry\" case. Once the lower half is added, the carry is examined, and its value is used to choose between the 0-carry and 1-carry case.\n\nMultiplication in O(log n) depth is also done through parallelization, where every sum of 3 numbers is reduced to a sum of just 2 numbers in parallel, and the sums are done in some manner like the above.\nI won't explain it here, but you can find reading material on fast addition and multiplication by looking up \"carry-lookahead\" and \"carry-save\" addition.\n\nSo from a theoretical standpoint, since circuits are obviously inherently parallel (unlike software), the only reason multiplication would be asymptotically slower is the constant factor in the front, not the asymptotic complexity.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Print multiplication table of 14 from a list in which multiplication table of 12 is stored\r\n                \r\nI already have a list with multiplication table of 12. I have written a piece to make another list for table of 14 using previous list\n\n```\n#how to create table of any number  we created 12\ntable_12=[]\nfor i in range(1,121):\n    if i % 12==0:\n        table_12.append(i)\nprint(table_12)\n\n#Print multiplication table of 14 from a list in which multiplication table of 12 is stored.\ntable_14=[]\nfor i in table_12:\n    i=i+2    \n    table_14.append(i)\n\nprint(table_14)\n```\n\n    ", "Answer": "\r\nYou have confused the logic here. You can't just add 2 to each element of the table of 12 to get the table of 14. Instead you want to add multiples of 2 i.e., adding 2 to the first element, 4 to the second element, 6 to the third element and so on.\n\n```\nfor i, j in enumerate(table_12):```\n returns you the index of the elements of your list ```\ntable_2```\n starting from 0 up to the length of ```\ntable_12```\n minus 1 (because the index starts from 0 in python). It also returns the actual elements of the list ```\ntable_2```\n. That's why you use two variables ```\ni```\n and ```\nj```\n so that the index goes into ```\ni```\n and the actual list elements goes into ```\nj```\n\n\nNow the main logic here is to construct the elements of table of 14. This is done using ```\nj+(i+1)*2```\n where ```\nj```\n will be taking values 12, 24, 36, 48, ... 108, 120 and ```\ni```\n will take the values 0, 1, 2, 3, ..., 8, 9. The rest of the logic is already clear to you from the comments. I am directly appending to the list but you can also use an intermediate variable as ```\nvar=j+(i+1)*2```\n and then do ```\ntable_14.append(var)```\n. But you should not use the same variable ```\ni```\n as it can potentially lead to some overwriting and is error prone\n\n```\ntable_12=[] \nfor i in range(1,121): \n    if i % 12==0: \n        table_12.append(i) \nprint(table_12)\n\n# [12, 24, 36, 48, 60, 72, 84, 96, 108, 120]\n\n\ntable_14=[] \nfor i, j in enumerate(table_12):\n    table_14.append(j+(i+1)*2)\n\nprint(table_14)\n\n# [14, 28, 42, 56, 70, 84, 98, 112, 126, 140]\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "SpeedUp Matrix Multiplication\r\n                \r\nI have to do a matrix boolean multiplication of a matrix with itself in a C++ program and I want to optimize it.\nThe matrix is symmetric so I think to do a row by row multiplication to reduce cache misses. \nI allocated space for matrix in this way:\n\n```\nmatrix=new bool*[dimension];\nfor (i=0; i<dimension; i++) {\n    matrix[i]=new bool[dimension];\n}\n```\n\n\nAnd the multiplication is the following:\n\n```\nfor (m=0; m<dimension; m++) {\n    for (n=0; n<dimension; n++) {\n         for (k=0; k<dimension; k++) {\n                temp=mat[m][k] && mat[n][k];\n                B[m][n]= B[m][n] || temp;\n...\n```\n\n\nI did some test of computation time with this version and with another version whit a row by column multiplication like this\n\n```\nfor (m=0; m<dimension; m++) {\n    for (n=0; n<dimension; n++) {\n         for (k=0; k<dimension; k++) {\n                temp=mat[m][k] && mat[k][n];\n                B[m][n]= B[m][n] || temp;\n...\n```\n\n\nI did tests on a 1000x1000 matrix The result showed that the second version ( row by column ) is faster the previous one.\nCould you show me why? Shouldn't The misses in the first algorithm  be less ?\n    ", "Answer": "\r\nIn the first multiplication approach the rows of the boolean matrices are stored consecutively in memory and also accessed consecutively so that prefetching works flawlessly. In the second approach the cacheline fetched when accessing the element (n,0) can already be evicted when accessing (n+1,0). Whether this actually happens depends on the architecture and its cache hierarchy properties you run your code on. On my machine the first approach is indeed faster for large enough matrices.\n\nAs for speeding up the computations: Do not use logical operators since they are evaluated lazy and thus branch misprediction can occur. The inner loop can be exited early as soon as B[m][n] becomes true. Instead of using booleans you might want to consider using the bits of say integers. That way you can combine 32 or 64 elements in your inner loop at once and possibly use vectorization. If your matrices are rather sparse then you might want to consider switching to sparse matrix data structures. Also changing the order of the loops can help as well as introducing blocking. However, any performance optimization is specific to an architecture and class of input matrices.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Find and replace strings in vim on multiple lines\r\n                \r\nI can do ```\n:%s/<search_string>/<replace_string>/g```\n for replacing a string across a file, or ```\n:s/<search_string>/<replace_string>/```\n to replace in current line.\n\nHow can I select and replace words from selective lines in vim?\n\nExample: replace text from lines ```\n6-10```\n, ```\n14-18```\n but not from ```\n11-13```\n.\n    ", "Answer": "\r\nReplace All:\n\n```\n:%s/foo/bar/g\n```\n\n\nFind each occurrence of 'foo' (in all lines), and replace it with 'bar'.\n\nFor specific lines:\n\n```\n:6,10s/foo/bar/g\n```\n\n\nChange each 'foo' to 'bar' for all lines from line 6 to line 10 inclusive.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "nested for loop multiplication table python\r\n                \r\nHave an assignment for python class, we have to make a program that asks for an input and will display a multiplication table for all values up to the input. It requires we use a nested for loop.\n\n```\ndef mathTable(column, tuple):\n    for column in range(1, 13):\n        for tuple in range(1, 13):\n            print(\"%6d\" % (column * tuple), end = '')\n    print(\"\")\n\nx = int(input(\"Enter the value of the multiplication table: \"))\ncolumn = \"\"\ntuple = ''\nprint(mathTable(column, tuple))\n```\n\n\nthis is what it needs to look like:\n\n\n    ", "Answer": "\r\nalright so after bashing my forehead on the numpad for a few hours I have realized I am a numbskull. \n\n```\ndef mathTable(column, tuple):\n    for c in range(1, x + 1):\n        print(\"\")\n        for t in range(1, 13):\n            print(\"%6d\" % (c * t), end = '\\t')\n    return(\"\\n\")\n\nx = int(input(\"Enter the value of the multiplication table: \"))\ncolumn = \"\"\ntuple = ''\nprint(mathTable(column, tuple))\n```\n\n\nso this is what ended up working perfectly, I used the first for statement to define how many rows I was asking for and then the second for statement was the amount of times I would be multiplying the two together.\nthe second argument in the range of the first for statement is directly tied to my inputs and this allows me to vary the output of the table to any size I want (pls don't put 9 figure numbers in it, never put a sentinel value in so you'd have to close down your command line to do anything with it) \n\nfinally to get rid of the \"NONE\" text that appears after the table prints you need to keep in mind that you have created a function that doesn't actually answer anything so just saying {return(\"\")} suited my purposes since I have achieved the output I set out to create. \n\nThank you to the person who tried to help me I am so sorry I didn't understand you at the time!\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multi-Line Comments in Ruby?\r\n                \r\nHow can I comment multiple lines in Ruby?\n    ", "Answer": "\r\n```\n#!/usr/bin/env ruby\n\n=begin\nEvery body mentioned this way\nto have multiline comments.\n\nThe =begin and =end must be at the beginning of the line or\nit will be a syntax error.\n=end\n\nputs \"Hello world!\"\n\n<<-DOC\nAlso, you could create a docstring.\nwhich...\nDOC\n\nputs \"Hello world!\"\n\n\"..is kinda ugly and creates\na String instance, but I know one guy\nwith a Smalltalk background, who\ndoes this.\"\n\nputs \"Hello world!\"\n\n##\n# most\n# people\n# do\n# this\n\n\n__END__\n\nBut all forgot there is another option.\nOnly at the end of a file, of course.\n```\n\n\nThis is how it looks (via screenshot) - otherwise it's hard to interpret how the above comments will look. Click to Zoom-in:\n\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication of bits in twos complement form\r\n                \r\nPlease help me with the following two's complement multiplication logic.\n\n```\n                     Actual      cropped\n```\n\n\nUnsigned   5 [101] 3 [011] 15 [001111] 7 [111]\n\nTwo’s comp. −3 [101] 3 [011] −9 [110111] −1 [111]\n\nI cant understand how actual multiplication is different for unsigned and two's complement multiplication when bit for both are same.\n    ", "Answer": "\r\nMultiplication for signed and unsigned integers is performed by different rules (unlike addition and subtraction, for example).\n\nThe same bits can represent different data, actual interpretation depends on type.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Python long multiplication\r\n                \r\nI'm in need of an algorithm faster than the current normal Python long multiplication.\n\nI tried to find a decent Karatsuba implementation, but I can't.\n\n```\ndef main():\n    a=long(raw_input())\n    if(a<0):\n        a=a*-1\n        a=((a*(a+1)/2)-1)\n        print(-a)\n    else:\n        a=(a*(a+1))/2\n        print(a)\nmain()\n```\n\n\nAs you see, it's nothing complicated, just a few multiplications. But it has to handle numbers with up to 100000 digits in under 2.5 sec.\n\nI'd like some snippet of a function or just a link to some implementation of a faster multiplication function, or anything that helps.\n    ", "Answer": "\r\nI'm the author of the DecInt (Decimal Integer) library so I'll make a few comments.\n\nThe DecInt library was specifically designed to work with very large integers that needed to be converted to decimal format. The problem with converting to decimal format is that most arbitrary-precision libraries store values in binary. This is fastest and most efficient for utilizing memory but converting from binary to decimal is usually slow. Python's binary to decimal conversion uses an O(n^2) algorithm and gets slow very quickly. \n\nDecInt uses a large decimal radix (usually 10^250) and stores the very large number in blocks of 250 digits. Converting a very large number to decimal format now runs in O(n). \n\nNaive, or grade school, multiplication has a running time of O(n^2). Python uses Karatsuba multiplication which has running time of O(n^1.585). DecInt uses a combination of Karatsuba, Toom-Cook, and Nussbaumer convolution to get a running time of O(n*ln(n)).\n\nEven though DecInt has much higher overhead, the combination of O(n*ln(n)) multiplication and O(n) conversion will eventually be faster than Python's O(n^1.585) multiplication and O(n^2) conversion. \n\nSince most computations don't require every result to be displayed in decimal format, almost every arbitrary-precision library uses binary since that makes the computations easier. DecInt targets a very small niche. For large enough numbers, DecInt will be faster for multiplication and division than native Python. But if you are after pure performance, a library like GMPY will be the fastest.\n\nI'm glad you found DecInt helpful.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Xcode warning: \"Multiple build commands for output file\"\r\n                \r\nI am getting an error like this:\n\n[WARN]Warning: Multiple build commands for output file /Developer/B/Be/build/Release-iphonesimulator/BB.app/no.png\n[WARN]Warning: Multiple build commands for output file /Developer/B/Be/build/Release-iphonesimulator/BB.app/d.png\n[WARN]Warning: Multiple build commands for output file /Developer/B/Be/build/Release-iphonesimulator/BB.app/n.png\n\nBut I have checked Xcode and I don't see any duplicates of such files at all. As this post in the Apple Mailing Lists say, there are no duplicates.\n    ", "Answer": "\r\nIn the Project Navigator, select your Xcode Project file. This will show you the project settings as well as the targets in the project.  Look in the \"Copy Bundle Resources\" Build Phase. You should find the offending files in that list twice. Delete the duplicate reference.\n\nXcode is complaining that you are trying to bundle the same file with your application two times.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "MPI Vector multiplication\r\n                \r\n```\n#include<stdio.h>\n#include<mpi.h>\n\nint main()\n{\n        int a_r = 0, a_c = 0, v_s = 0, i = 0, rank = 0, size = 0;\n        int local_row = 0, partial_sum = 0, sum = 0, j = 0;\n        int my_first_ele = 0, my_last_ele = 0;\n        int a[10][10], v[10], partial_mul[10] = {0}, mul[10] = {0};\n\n        MPI_Init(NULL, NULL);\n        MPI_Comm_rank(MPI_COMM_WORLD, &rank);\n        MPI_Comm_size(MPI_COMM_WORLD, &size);\n\n        if(rank == 0)\n        {\n                printf(\"Enter the row of array A: \");\n                scanf(\"%d\", &a_r);\n                printf(\"Enter the column of array A: \");\n                scanf(\"%d\", &a_c);\n                printf(\"Enter the array A: \");\n\n                for(i = 0; i < a_r; i++)\n                {\n                        for(j = 0; j < a_c; j++)\n                                scanf(\"%d\", &a[i][j]);\n                }\n\n                printf(\"Enter the size of vector array: \");\n                scanf(\"%d\", &v_s);\n                printf(\"Enter the vector array: \");\n                for(i = 0; i < v_s; i++)\n                {\n                        scanf(\"%d\", &v[i]);\n                }\n\n                MPI_Bcast(&a_r, 1, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(&a_c, 1, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(&v_s, 1, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(a, a_r*a_c, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(v, v_s, MPI_INT, 0, MPI_COMM_WORLD);\n\n                local_row = a_r / size;\n                my_first_ele = rank * local_row;\n                my_last_ele = (rank+1) * local_row;\n\n                if(a_c == v_s)\n                {      \n                        for(i = my_first_ele; i < my_last_ele; i++)\n                        {\n                                for(j = 0; j < a_c; j++)\n                                {\n                                        partial_mul[i] = partial_mul[i] + (a[i][j]*v[j]);\n                                }\n                        }\n                        printf(\"\\nPartial multiplication in Rank 0: \\n\");\n                        for(i = my_first_ele; i < my_last_ele; i++)\n                                printf(\"%d \\n\", partial_mul[i]);\n\n                        MPI_Gather(partial_mul, local_row, MPI_INT, mul, local_row, MPI_INT, 0, MPI_COMM_WORLD);\n\n                        printf(\"\\n \\nGlobal Multiplication: \\n\");\n                        for(i = 0; i < a_r; i++)\n                        {\n                                printf(\"%d \\n\", mul[i]);\n                        }\n                }\n                else\n                        printf(\"\\nCan't multiply. \\n\");\n        }\n\n        else\n        {\n                MPI_Bcast(&a_r, 1, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(&a_c, 1, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(&v_s, 1, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(a, a_r*a_c, MPI_INT, 0, MPI_COMM_WORLD);\n                MPI_Bcast(v, v_s, MPI_INT, 0, MPI_COMM_WORLD);\n\n                local_row = a_r / size;\n                my_first_ele = rank * local_row;\n                my_last_ele = (rank+1) * local_row;\n                if(a_c == v_s)\n                {     \n                        for(i = my_first_ele; i < my_last_ele; i++)\n                        {\n                                for(j = 0; j < a_c; j++)\n                                {\n                                        partial_mul[i] = partial_mul[i] + (a[i][j]*v[j]);\n                                }\n                        }\n                        printf(\"\\nPartial multiplication in Rank %d: \\n\", rank);\n                        for(i = my_first_ele; i < my_last_ele; i++)\n                                printf(\"%d \\n\", partial_mul[i]);\n\n                        MPI_Gather(partial_mul, local_row, MPI_INT, mul, local_row, MPI_INT, 0, MPI_COMM_WORLD);\n\n                }\n                else\n                        printf(\"\\nCan't multiply. \\n\");\n        }\n        MPI_FINALIZE();\n}\n```\n\n\nI have a problem with above code. My partial multiplication value is correct. But in my overall multiplication I can only gather rank 0 elements, rest of the values are being printed as 0. What is the problem can anyone explain.\n    ", "Answer": "\r\nLooking at your data layout I think you misunderstand data structures in MPI: All data is kept separate in each rank, there is no implict sharing or distribution. Your vector ```\npartial_sum```\n is separate on each rank, each with the full 10 elements. So assuming ```\nsize=2```\n, ```\na_r=10```\n and zero initialization, after the computation the contents will look like this:\n\n\nrank 0: ```\n{x0,x1,x2,x3,x4,0,0,0,0,0}```\n\nrank 1: ```\n{0,0,0,0,0,x5,x6,x7,x8,x9}```\n\n\n\nWhere x is the correct computed value. Gather will then collect the first ```\nlocal_row=5```\n elements from each rank, resulting in ```\n{x0,x1,x2,x3,x4,0,0,0,0,0}```\n.\n\nYou could just fix this by adding the correct offset:\n\n```\nMPI_Gather(&partial_mul[my_first_ele], local_row, MPI_INT, mul, local_row, MPI_INT, 0, MPI_COMM_WORLD);\n```\n\n\nBut please don't do that. Instead you should reconsider your data structures to really distribute the data, reserve the correct sizes for each part of the vector / array. To send around parts of the data to each rank, use ```\nMPI_Scatter```\n (the opposite of ```\nMPI_Gather```\n). The most difficult is to get the matrix right. This is explained in detail by this excellent answer.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "multiplication with *=\r\n                \r\nI have an array with these values:\n\n```\narray\n  0 => \n    array\n      0 => int 1\n      1 => float 0.125\n      2 => float 0.5\n      3 => float 3\n  1 => \n    array\n      1 => int 1\n      2 => float 5\n      3 => float 7\n      0 => float 8\n  2 => \n    array\n      2 => int 1\n      3 => float 3\n      0 => float 2\n      1 => float 0.2\n  3 => \n    array\n      3 => int 1\n      0 => float 0.33333333333333\n      1 => float 0.14285714285714\n      2 => float 0.33333333333333\n```\n\n\nAnd i want for each group the multiplication of each row like:\n\n```\n1*0.125*05*3\n```\n\n\nI am trying this code:\n\n```\n$final= array_fill(0, count($matrix), 0);\nfor ($i = 0; $i < count($matrix); $i++) {\n    $a = 1;\n    for ($j = 0; $j < count($matrix)-1; $j++) {\n        $final[$i] *= $matrix[$i][$j]*$matrix[$i][$a];\n        $a++;\n    }\n}\n```\n\n\nbut i got 0 for each multiplication row.\n\nThe code works well with +=, but:\n\n```\n1*0.125*05*3 = 0.1875 (this is the objective)\n```\n\n\nis different of \n\n```\n1*0.125+0.125*0.5+*0.5*3 = 16875\n```\n\n\nAny idea ?\n    ", "Answer": "\r\nCan you not just do \n\n```\n$final = array();\nforeach( $matrix as $arr ) {\n    $final[] = array_product( $arr );\n}\n\nprint_r( $final );\n```\n\n\nWhich results in\n\n```\nArray ( [0] => 0.1875 [1] => 280 [2] => 1.2 [3] => 0.015873015873015 )\n```\n\n\nAlternatively, if you want to continue to do it your way:\n\n```\n$final= array_fill(0, count($matrix), 1);\nfor ($i = 0; $i < count($matrix); $i++) {\n    for ($j = 0; $j < count($matrix); $j++) {\n        $final[$i] *= $matrix[$i][$j];\n    }\n}\n```\n\n\nI removed the ```\n-1```\n because that meant it missed the last element take ```\n1*5*8*7```\n for example. Your way ```\n= 40```\n because the ```\n7```\n was never multiplied. The above outputs the same result.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "User based Multiplication Table\r\n                \r\nHi I need help with my code. Im trying to make a user base input multiplication table using a Scanner and a method, but i dont know how to get the user base input from the main method to the method i created, here is what i have so far:\n\n```\npublic static void multiplicationTable(int i){\nfor (int i=1;i<=size;i++){\nfor (int j=1;j<=size;j++)\nSystem.out.print(\"\\t\"+i*j);\nSystem.out.println(); }\n}\npublic static void main (String[] args) {\nSystem.out.println(\"This program displays a multiplication table.\");\nScanner size = new Scanner(System.in);\nSystem.out.println(\"Enter a positive integer: \");\nint n = size.nextInt ();\n}\n```\n\n    ", "Answer": "\r\nYou can pass like :\n\n```\n    System.out.println(\"This program displays a multiplication table.\");\n    Scanner size = new Scanner(System.in);\n    System.out.println(\"Enter a positive integer: \");\n    int n = size.nextInt ();\n    multiplicationTable(n); \\\\ pass here\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Mysql Multiplication Operation\r\n                \r\nHow to execute Multiplication Operation in a Mysql Query?\n\nIf my query is like this :\n\n```\n\"SELECT registration.hosteladmissionno,\n   registration.student_name,\n   registration.semester,\n   student_month.hosteladmissionno,\n   student_month.student_name,\n   student_month.semester,\n   messexp.billmonth,messexp.billyear ,messexp.perdayrate,student_month.days_mess\n   FROM registration,\n    student_month ,messexp,blockexp\n   WHERE  student_month.hosteladmissionno = registration.hosteladmissionno\n    \";\n```\n\n\nHow to execute multiplication operation within this query? say.. multiplication operation btw days_mess and \n    ", "Answer": "\r\nThe multiplication operator is ```\n*```\n :\n\n```\nmysql> select 100 * 2;\n+---------+\n| 100 * 2 |\n+---------+\n|     200 |\n+---------+\n1 row in set (0.00 sec)\n```\n\n\n\nIn your case, if you want to multiply the values of two columns, you can use those columns, with the ```\n*```\n operator between them :\n\n```\nselect column1 * column2 as result\nfrom your_table\nwhere ...\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is sparse tensor multiplication implemented in TensorFlow?\r\n                \r\n\n\nMultiplication of sparse tensors with themselves or with dense tensors does not seem to work in TensorFlow.  The following example\n\n```\nfrom __future__ import print_function\nimport tensorflow as tf\n\nx = tf.constant([[1.0,2.0],\n                 [3.0,4.0]])\ny = tf.SparseTensor(indices=[[0,0],[1,1]], values=[1.0,1.0], shape=[2,2])\nz = tf.matmul(x,y)\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\nprint(sess.run([x, y, z]))\n```\n\n\nfails with the error message\n\n```\nTypeError: Input 'b' of 'MatMul' Op has type string that does not match type \nfloat32 of argument 'a'\n```\n\n\nBoth tensors have values of type float32 as seen by evaluating them  without the multiplication op.  Multiplication of y with itself returns a similar error message.  Multipication of x with itself works fine.\n    ", "Answer": "\r\nGeneral-purpose multiplication for ```\ntf.SparseTensor```\n is not currently implemented in TensorFlow. However, there are three partial solutions, and the right one to choose will depend on the characteristics of your data:\n\n\nIf you have a ```\ntf.SparseTensor```\n and a ```\ntf.Tensor```\n, you can use ```\ntf.sparse_tensor_dense_matmul()```\n to multiply them. This is more efficient than the next approach if one of the tensors is too large to fit in memory when densified: the documentation has more guidance about how to decide between these two methods. Note that it accepts a ```\ntf.SparseTensor```\n as the first argument, so to solve your exact problem you will need to use the ```\nadjoint_a```\n and ```\nadjoint_b```\n arguments, and transpose the result.\nIf you have two sparse tensors and need to multiply them, the simplest (if not the most performant) way is to convert them to dense and use ```\ntf.matmul```\n:\n\n```\na = tf.SparseTensor(...)\nb = tf.SparseTensor(...)\n\nc = tf.matmul(tf.sparse_tensor_to_dense(a, 0.0),\n              tf.sparse_tensor_to_dense(b, 0.0),\n              a_is_sparse=True, b_is_sparse=True)\n```\n\n\nNote that the optional ```\na_is_sparse```\n and ```\nb_is_sparse```\n arguments mean that \"```\na```\n (or ```\nb```\n) has a dense representation but a large number of its entries are zero\", which triggers the use of a different multiplication algorithm.\nFor the special case of sparse vector by (potentially large and sharded) dense matrix multiplication, and the values in the vector are 0 or 1, the ```\ntf.nn.embedding_lookup```\n operator may be more appropriate. This tutorial discusses when you might use embeddings and how to invoke the operator in more detail.\nFor the special case of sparse matrix by (potentially large and sharded) dense matrix, ```\ntf.nn.embedding_lookup_sparse()```\n may be appropriate. This function accepts one or two ```\ntf.SparseTensor```\n objects, with ```\nsp_ids```\n representing the non-zero values, and the optional ```\nsp_weights```\n representing their values (which otherwise default to one).\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Sass .scss: Nesting and multiple classes?\r\n                \r\nI'm using Sass (.scss) for my current project. \n\nFollowing example:\n\nHTML\n\n```\n<div class=\"container desc\">\n    <div class=\"hello\">\n        Hello World\n    </div>\n</div>\n```\n\n\nSCSS\n\n```\n.container {\n    background:red;\n    color:white;\n\n    .hello {\n        padding-left:50px;\n    }\n}\n```\n\n\nThis works great. \n\nCan I handle multiple classes while using nested styles.\n\nIn the sample above I'm talking about this:\n\nCSS\n\n```\n.container.desc {\n    background:blue;\n}\n```\n\n\nIn this case all ```\ndiv.container```\n would normally be ```\nred```\n but ```\ndiv.container.desc```\n would be blue.\n\nHow can I nest this inside ```\ncontainer```\n with Sass?\n    ", "Answer": "\r\nYou can use the parent selector reference ```\n&```\n, it will be replaced by the parent selector after compilation:\nFor your example:\n```\n.container {\n    background:red;\n    &.desc{\n       background:blue;\n    }\n}\n\n/* compiles to: */\n.container {\n    background: red;\n}\n.container.desc {\n    background: blue;\n}\n```\n\nThe ```\n&```\n will completely resolve, so if your parent selector is nested itself, the nesting will be resolved before replacing the ```\n&```\n.\nThis notation is most often used to write pseudo-elements and -classes:\n```\n.element{\n    &:hover{ ... }\n    &:nth-child(1){ ... }\n}\n```\n\nHowever, you can place the ```\n&```\n at virtually any position you like*, so the following is possible too:\n```\n.container {\n    background:red;\n    #id &{\n       background:blue;\n    }\n}\n\n/* compiles to: */\n.container {\n    background: red;\n}\n#id .container {\n    background: blue;\n}\n```\n\nHowever be aware, that this somehow breaks your nesting structure and thus may increase the effort of finding a specific rule in your stylesheet.\n*: No other characters than whitespaces are allowed in front of the ```\n&```\n. So you cannot do a direct concatenation of ```\nselector```\n+```\n&```\n - ```\n#id&```\n would throw an error.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I pass multiple parameters into a function in PowerShell?\r\n                \r\nIf I have a function which accepts more than one string parameter, the first parameter seems to get all the data assigned to it, and remaining parameters are passed in as empty.\n\nA quick test script:\n\n```\nFunction Test([string]$arg1, [string]$arg2)\n{\n    Write-Host \"`$arg1 value: $arg1\"\n    Write-Host \"`$arg2 value: $arg2\"\n}\n\nTest(\"ABC\", \"DEF\")\n```\n\n\nThe output generated is \n\n```\n$arg1 value: ABC DEF\n$arg2 value: \n```\n\n\nThe correct output should be:\n\n```\n$arg1 value: ABC\n$arg2 value: DEF\n```\n\n\nThis seems to be consistent between v1 and v2 on multiple machines, so obviously, I'm doing something wrong. Can anyone point out exactly what?\n    ", "Answer": "\r\nParameters in calls to functions in PowerShell (all versions) are space-separated, not comma separated. Also, the parentheses are entirely unneccessary and will cause a parse error in PowerShell 2.0 (or later) if ```\nSet-StrictMode```\n ```\n-Version 2```\n or higher is active. Parenthesised arguments are used in .NET methods only.\n```\nfunction foo($a, $b, $c) {\n   \"a: $a; b: $b; c: $c\"\n}\n\nps> foo 1 2 3\na: 1; b: 2; c: 3\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication aggregate operator in SQL\r\n                \r\nIn SQL there are aggregation operators, like AVG, SUM, COUNT. Why doesn't it have an operator for multiplication? \"MUL\" or something.\n\nI was wondering, does it exist for Oracle, MSSQL, MySQL ? If not is there a workaround that would give this behaviour?\n    ", "Answer": "\r\nBy MUL do you mean progressive multiplication of values?\n\nEven with 100 rows of some small size (say 10s), your MUL(column) is going to overflow any data type!  With such a high probability of mis/ab-use, and very limited scope for use, it does not need to be a SQL Standard.  As others have shown there are mathematical ways of working it out, just as there are many many ways to do tricky calculations in SQL just using standard (and common-use) methods.\n\nSample data:\n\n```\nColumn\n1\n2\n4\n8\n\nCOUNT : 4 items (1 for each non-null)\nSUM   : 1 + 2 + 4 + 8 = 15\nAVG   : 3.75 (SUM/COUNT)\nMUL   : 1 x 2 x 4 x 8 ? ( =64 )\n```\n\n\nFor completeness, the Oracle, MSSQL, MySQL core implementations *\n\n```\nOracle : EXP(SUM(LN(column)))   or  POWER(N,SUM(LOG(column, N)))\nMSSQL  : EXP(SUM(LOG(column)))  or  POWER(N,SUM(LOG(column)/LOG(N)))\nMySQL  : EXP(SUM(LOG(column)))  or  POW(N,SUM(LOG(N,column)))\n```\n\n\n\nCare when using EXP/LOG in SQL Server, watch the return type http://msdn.microsoft.com/en-us/library/ms187592.aspx\nThe POWER form allows for larger numbers (using bases larger than Euler's number), and in cases where the result grows too large to turn it back using POWER, you can return just the logarithmic value and calculate the actual number outside of the SQL query\n\n\n\n* LOG(0) and LOG(-ve) are undefined. The below shows only how to handle this in SQL Server. Equivalents can be found for the other SQL flavours, using the same concept\n\n\n\n```\ncreate table MUL(data int)\ninsert MUL select 1 yourColumn union all\n           select 2 union all\n           select 4 union all\n           select 8 union all\n           select -2 union all\n           select 0\n\nselect CASE WHEN MIN(abs(data)) = 0 then 0 ELSE\n       EXP(SUM(Log(abs(nullif(data,0))))) -- the base mathematics\n     * round(0.5-count(nullif(sign(sign(data)+0.5),1))%2,0) -- pairs up negatives\n       END\nfrom MUL\n```\n\n\nIngredients:\n\n\ntaking the abs() of data, if the min is 0, multiplying by whatever else is futile, the result is 0\nWhen data is 0, NULLIF converts it to null. The abs(), log() both return null, causing it to be precluded from sum()\nIf data is not 0, abs allows us to multiple a negative number using the LOG method - we will keep track of the negativity elsewhere\nWorking out the final sign\n\n\nsign(data) returns ```\n1 for >0```\n, ```\n0 for 0```\n and ```\n-1 for <0```\n.\nWe add another 0.5 and take the sign() again, so we have now classified 0 and 1 both as 1, and only -1 as -1.\nagain use NULLIF to remove from COUNT() the 1's, since we only need to count up the negatives.\n```\n% 2```\n against the count() of negative numbers returns either\n--> 1 if there is an odd number of negative numbers\n--> 0 if there is an even number of negative numbers\nmore mathematical tricks: we take 1 or 0 off 0.5, so that the above becomes\n--> (```\n0.5-1=-0.5```\n=>round to -1) if there is an odd number of negative numbers\n--> (```\n0.5-0= 0.5```\n=>round to  1) if there is an even number of negative numbers\nwe multiple this final 1/-1 against the SUM-PRODUCT value for the real result\n\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "multiplication using fenwick tree\r\n                \r\nWe can do updation in a fenwick tree like adding a value and multiplication by a value. I have the following code for adding a value x to the element at position l .\n\n```\nwhile(l <= n-1)\n{\n    tree[l] = tree[l] + x;\n    l = l + (l&(-l));\n}\n```\n\n\nSimilarly I want to perform the multiplication operation.I am not getting how to do it. Any help is appreciable.\n    ", "Answer": "\r\nCompute the difference between the old and new node values, then use the addition logic to add that difference to the node value.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Will the compiler optimize division into multiplication\r\n                \r\nDepending on this question Floating point division vs floating point multiplication. Division is slower than multiplication due to some reasons.\n\nWill the compiler, usually, replace division by multiplication if it is possibe?\n\nFor example:\n\n```\nfloat a;\n// During runtime a=5.4f\nfloat b = a/10.f;\n```\n\n\nWill it be:\n\n```\nfloat a;\n// During runtime a=5.4f\nfloat b = a*0.1f;\n```\n\n\nIf it is considered a compiler dependable question, I am using VS2013 default compiler. However, it would be nice if I got a generic answer (theoretical validity of this optimization) \n    ", "Answer": "\r\nNo, the compiler is not allowed to do that for the general case: the two operations could produce results that are not bit-identical due to the representation error of the reciprocal.\n\nIn your example, ```\n0.1```\n does not have an exact representation as ```\nfloat```\n. This causes the results of multiplication by ```\n0.1```\n and division by ```\n10```\n to differ:\n\n```\nfloat f = 21736517;\nfloat a = f / 10.f;\nfloat b = f * 0.1f;\ncout << (a == b) << endl; // Prints zero\n```\n\n\nDemo.\n\nNote: As njuffa correctly notes in the comment below, there are situations when the compiler could make some optimizations for a wide set of numbers, as described in this paper. For example, multiplying or dividing by a power of two is equivalent to addition to the exponent portion of the IEEE-754 ```\nfloat```\n representation.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Running multiple commands with xargs\r\n                \r\n```\ncat a.txt | xargs -I % echo %\n```\n\nIn the example above, ```\nxargs```\n takes ```\necho %```\n as the command argument. But in some cases, I need multiple commands to process the argument instead of one. For example:\n```\ncat a.txt | xargs -I % {command1; command2; ... }\n```\n\nBut ```\nxargs```\n doesn't accept this form. One solution I know is that I can define a function to wrap the commands, but I want to avoid that because it is complex. Is there a better solution?\n    ", "Answer": "\r\n```\ncat a.txt | xargs -d $'\\n' sh -c 'for arg do command1 \"$arg\"; command2 \"$arg\"; ...; done' _\n```\n\n\n...or, without a Useless Use Of cat:\n\n```\n<a.txt xargs -d $'\\n' sh -c 'for arg do command1 \"$arg\"; command2 \"$arg\"; ...; done' _\n```\n\n\n\n\nTo explain some of the finer points:\n\n\nThe use of ```\n\"$arg\"```\n instead of ```\n%```\n (and the absence of ```\n-I```\n in the ```\nxargs```\n command line) is for security reasons: Passing data on ```\nsh```\n's command-line argument list instead of substituting it into code prevents content that data might contain (such as ```\n$(rm -rf ~)```\n, to take a particularly malicious example) from being executed as code.\nSimilarly, the use of ```\n-d $'\\n'```\n is a GNU extension which causes ```\nxargs```\n to treat each line of the input file as a separate data item. Either this or ```\n-0```\n (which expects NULs instead of newlines) is necessary to prevent xargs from trying to apply shell-like (but not quite shell-compatible) parsing to the stream it reads. (If you don't have GNU xargs, you can use ```\ntr '\\n' '\\0' <a.txt | xargs -0 ...```\n to get line-oriented reading without ```\n-d```\n).\nThe ```\n_```\n is a placeholder for ```\n$0```\n, such that other data values added by ```\nxargs```\n become ```\n$1```\n and onward, which happens to be the default set of values a ```\nfor```\n loop iterates over.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Optimized matrix multiplication in C\r\n                \r\nI'm trying to compare different methods for matrix multiplication.\nThe first one is normal method:\n\n```\ndo\n{\n    for (j = 0; j < i; j++)\n    {\n        for (k = 0; k < i; k++)\n        {\n            suma = 0;\n            for (l = 0; l < i; l++)\n                suma += MatrixA[j][l]*MatrixB[l][k];\n                MatrixR[j][k] = suma;\n            }\n        }\n    }\n    c++;\n} while (c<iteraciones);\n```\n\n\nThe second one consist of transposing the matrix B first and then do the multiplication by rows:\n\n```\nint f, co;\nfor (f = 0; f < i; f++) {\n    for ( co = 0; co < i; co++) {\n        MatrixB[f][co] = MatrixB[co][f];\n    }\n}\n\nc = 0;\ndo\n{\n    for (j = 0; j < i; j++)\n    {\n        for (k = 0; k < i; k++)\n        {\n            suma = 0;\n            for (l = 0; l < i; l++)\n                suma += MatrixA[j][l]*MatrixB[k][l];\n                MatrixR[j][k] = suma;\n            }\n        }\n     }\n     c++;\n} while (c<iteraciones);\n```\n\n\nThe second method supposed to be much faster, because we are accessing contiguous memory slots, but I'm not getting a significant improvement in the performance. Am I doing something wrong?\n\nI can post the complete code, but I think is not needed.\n    ", "Answer": "\r\nWhat Every Programmer Should Know About Memory (pdf link) by Ulrich Drepper has a lot of good ideas about memory efficiency, but in particular, he uses matrix multiplication as an example of how knowing about memory and using that knowledge can speed this process.  Look at appendix A.1 in his paper, and read through section 6.2.1.  Table 6.2 in the paper shows that he could get his running time to be 10% from a naive implementation's time for a 1000x1000 matrix.\n\nGranted, his final code is pretty hairy and uses a lot of system-specific stuff and compile-time tuning, but still, if you really need speed, reading that paper and reading his implementation is definitely worth it.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Find Python Multiplication from user input\r\n                \r\nJunior Python Coder here! Trying to print multiplication table with user input but stuck.\n```\nmin_num=1\nmax_num=11\n\nstarting_range = int(input (\"Enter the minimum number: \"))\nending_range = int(input (\"Enter the maximum number: \"))\n\nprint (\"The Multiplication Table of: \", starting_range)    \nfor count in range(1, 11):      \n   print (starting_range, 'x', count, '=', ending_range * count)\n\nif max_num - min_num > 10 :\n   print('invalid range ')\nelse:\n   for num in range (min_num,max_num):\n      print (\"The Multiplication Table of: \", ending_range)\n      for count in range(min_num, max_num):      \n         print (starting_range, 'x', count, '=', ending_range * count)\n```\n\n    ", "Answer": "\r\nI'm not sure I really understand what you're trying to do as your code isn't formatted, but for a multiplication table, a nested loop is a solution.\nThe basic idea is: For every number in the given range, loop over the whole range and multiply it by each element. This will print the whole multiplication table.\n```\nstart = 1 # You can change these to be inputted by the user.\nend = 10\n\nfor i in range(start, end + 1): # We add 1 to the end because range() is exclusive on endpoint.\n    for j in range(start, end + 1):\n        print(f\"{i} x {j} = {i * j}\")\n```\n\nIf you only need the table as something like:\n15 x 1\n15 x 2\n15 x 3\n...\nYou can do this with one loop:\n```\nnum = 10\n\nfor i in range(1, num + 1):\n    print(f\"{num} x {i} = {num * i}\")\n```\n\nI recommend you search up on F-strings in Python if you do not understand the print(f\"..\") parts. They're very convenient. Good luck!\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiline editing in Visual Studio Code\r\n                \r\nIs it possible to enable multiline editing like in Sublime Text?\n\nFor example, press Ctrl to place additional cursor carets and being able to write/delete on multiple places in the document at one time.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Polynomial multiplication in Prolog\r\n                \r\nI tried to write a predicate that performs the multiplication of two polynomials, but work only when it receives only monomials.\nThis is the code:\nCode Monomial + Polinomial , \nCode Multiplication\n\nAnswer:\n\n```\n1 ?- polytimes(2*a*c,4*b*e,A).\nA = poly([m(8, 4, [v(1, a), v(1, c), v(1, b), v(1, e)])]).\n\n2 ?- polytimes(3*a*c,2*b,A).\nA = poly([m(6, 3, [v(1, a), v(1, c), v(1, b)])]).\n\n3 ?- polytimes(2*a + z,4*b*e,A).\nA = poly([m(8, 4, [v(1, a), v(1, z), v(1, b), v(1, e)])]).\n```\n\n\nI want to know if you had any help about it.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication Table Displaying Incorrectly\r\n                \r\nI have to write a code to make a 10x10 multiplication table and its display must look like this:\n\n\n\nHowever, I can't figure out how to display my code correctly. Here is my code below. I know I'm close, I'm just not sure what I'm doing wrong.\n\n```\n/*\n * This program displays a multiplication table of the product of every integer from 1 through 10\n * multiplied by every integer from 1 through 10.\n * \n */\n\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace DisplayMultiplicationTable\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int value = 10;\n\n            for (int x = 1; x <= value; ++x)\n\n                Console.Write(\"{0, 4}\", x);\n            Console.WriteLine();\n            Console.WriteLine(\"_________________________________________\");\n\n            for (int x = 1; x <= value; ++x)\n\n                Console.WriteLine(\"{0, 4}\", x);\n\n            for (int row = 1; row <= value; ++row)\n            {\n                for (int column = 1; column <= value; ++column)\n                {\n\n                    Console.Write(\"{0, 4}\", row * column);\n\n                }\n                Console.WriteLine();\n\n            }\n            Console.ReadLine();\n        }\n\n    }\n}\n```\n\n    ", "Answer": "\r\n```\n    int value = 10;\n\n    // Indent column headers\n    Console.Write(\"{0, 4}\", null);\n\n    // Write column headers\n    for (int x = 1; x <= value; ++x)\n        Console.Write(\"{0, 4}\", x);\n\n    // Write column header seperator\n    Console.WriteLine();\n    Console.WriteLine(\"_____________________________________________\");\n\n    // Write the table\n    for (int row = 1; row <= value; ++row)\n    {\n        // Write the row header\n        Console.Write(\"{0, 4}\", row);\n\n        for (int column = 1; column <= value; ++column)\n        {\n            // Write the row values\n            Console.Write(\"{0, 4}\", row * column);\n        }\n        // Finish the line\n        Console.WriteLine();\n\n    }\n```\n\n\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication issues\r\n                \r\nI have implemented a matrix class. It dynamically allocates memory for an arbitrarily sized matrix.When using my matrix multiplication function, it only works under specific conditions. If you have two N*M matrices, M of the first matrix must equal N of the second matrix. \nExample:\n\n```\n//matrix constructor 'matrix M(n, m)\nmatrix A(2, 3), matrix B(3, 4);\n//A and B can be multiplied because A_m == B_n\nA * B; //this works!\n//changing the size of n of the first matrix causes this to fail if n > m \nmatrix C(4, 3), matrix D(3, 5);\nC * D; // program becomes unresponsive for unknown reasons, only happens when C_n > C_m\n```\n\n\nMy matrix class and the multiplication function.\n\n```\n#include <iostream> \nclass matrix{\n    private:\n        int rows, cols;\n    public:\n        int ** data;\n        int row();\n        int col();\n        matrix();\n        matrix(int, int);\n        //~matrix();\n        matrix operator*(matrix M);\n        matrix operator%(matrix M);\n        friend std::ostream & operator<<(std::ostream & os, matrix M);      \n};\n```\n\n\nFunctions:\n\n```\n#include \"matrix.h\"\n\nusing std::cout;\nusing std::endl;\n\nmatrix::matrix(int r, int c){\n    rows = r;\n    cols = c;\n    data = new int*[rows];\n    for (int i = 0; i< rows; i++){\n        data[i] = new int[cols];\n    }\n    for (int i = 0; i < rows; i++){\n        for (int j = 0; j < cols; j++){\n            data[i][j] = 0;\n        }\n    }\n}\n\nmatrix::row(){\n    return rows;\n}\n\nmatrix::col(){\n    return cols;\n}\n\nmatrix matrix::operator*(matrix M){\n    if (this->col() == M.row()){\n        matrix result(this->row(), M.col());\n        int var = 0;\n        for (int i = 0; i < result.row(); i++){\n            for (int j = 0; j < result.col(); j++){\n                for (int k = 0; k < result.row(); k++){\n                    var += this->data[i][k] * M.data[k][j];\n                } \n            result.data[i][j] = var;\n            var = 0;\n            }\n        }\n        return result;\n    }\n    else cout << \"FAILED\";\n} \n\nstd::ostream & operator<<(std::ostream & os, matrix M){\n    for (int i = 0; i < M.row(); i++){\n        os << '|';\n        for (int j = 0; j < M.col(); j++){\n            os << M.data[i][j] << ' ';\n        }\n        os << \"|\\n\";\n    }\n    os << '\\n';\n    return os;\n}\n```\n\n\nWhy is the program not working under these circumstances?\n    ", "Answer": "\r\nFirst off, props for \n\n```\nusing std::cout;\nusing std::endl;\n```\n\n\nGood to see someone not pulling in all of std for a simple job like this.\n\nNow let's take a walk through the algorithm.\n\nmatrix C(4, 3) * matrix D(3, 5) will give matrix result (4,5)\n\n```\nfor (int i = 0; i < result.row(); i++){\n    for (int j = 0; j < result.col(); j++){\n        for (int k = 0; k < result.row(); k++){\n```\n\n\nresolves to \n\n```\nfor (int i = 0; i < 4; i++){\n    for (int j = 0; j < 5; j++){\n        for (int k = 0; k < 4; k++){\n            var += this->data[i][k] * M.data[k][j];\nArray size:                   4  3           3  5\n```\n\n\nk is going to run 0 .. 3. Valid range for k is 0 .. 2.\n\nWhat you want is:\n\n```\nfor (int i = 0; i < result.row(); i++){\n    for (int j = 0; j < result.col(); j++){\n        for (int k = 0; k < this->cols; k++){\n```\n\n\nThree suggestions:\n\nLearn to use a debugger. This sort of problem is utterly trivial if you step through the code.\n\nThen learn to test with testable inputs so you can see when the math does not work. Multiplying 0 by 0 will prove absolutely nothing.\n\nI recommend replacing \n\n```\nint ** data;\n```\n\n\nwith \n\n```\nstd::vector<std::vector<int> > data;\n```\n\n\nYou can initialize it in a constructor like this:\n\n```\nmatrix::matrix(int r, int c):rows(r), cols(c), data(r, std::vector<int>(c))\n{\n}\n```\n\n\nNo need to loop through it to zero it. The vector constructor does it for you. If you don't want to load with zeroes, you can specify another value.\n\n```\nmatrix::matrix(int r, int c):\n    rows(r), \n    cols(c), \n    data(r, std::vector<int>(c, <starting value goes here>))\n{\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in matlab [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has an answer here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Displaying rational numbers in Matlab\r\n                            \r\n                                (1 answer)\r\n                            \r\n                    \r\n                Closed 2 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\n4.082*2118\nWhen I write this multiplication in MATLAB software, I get this answer: 1.705868e+04\nbut I want to show the answer like this: 17058.68\nwhat is my wrong?\n    ", "Answer": "\r\nIn the Matlab console, type ```\nformat rational```\n. Example:\n```\n>> 4.082 * 2118\n\nans =\n\n   8.6457e+03\n\n>> format rational\n>> 4.082 * 2118\n\nans =\n\n  319890/37    \n\n```\n\nYou can also use the rat and rats functions. The rat function can also give you the numerator and the denominator as numbers:\n```\n>> [num, denom] = rat(4.082 * 2118)\n\nnum =\n\n  319890       \n\n\ndenom =\n\n      37       \n```\n\nNote that the result is only an approximation. You can improve it by decreasing the tolerance:\n```\n>> [num, denom] = rat(4.082 * 2118, 0)\n\nnum =\n\n 2161419       \n\n\ndenom =\n\n     250\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Create an array with same element repeated multiple times\r\n                \r\nIn Python, where ```\n[2]```\n is a list, the following code gives this output:\n\n```\n[2] * 5 # Outputs: [2,2,2,2,2]\n```\n\n\nDoes there exist an easy way to do this with an array in JavaScript?\n\nI wrote the following function to do it, but is there something shorter or better?\n\n```\nvar repeatelem = function(elem, n){\n    // returns an array with element elem repeated n times.\n    var arr = [];\n\n    for (var i = 0; i <= n; i++) {\n        arr = arr.concat(elem);\n    };\n\n    return arr;\n};\n```\n\n    ", "Answer": "\r\nIn ES6 using Array fill() method\n\r\n\r\n```\nconsole.log(\n  Array(5).fill(2)\n)\n//=> [2, 2, 2, 2, 2]```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in avr assembly\r\n                \r\nI can't understand the way that binary multiplication takes place in avr code. Here is code from avr freaks. What exactly does \"ror\" and \"lsr\" do? I thought that for multiplication in binary we need lsl instead.\n\n```\n.def    mc8s    =r16        ;multiplicand\n.def    mp8s    =r17        ;multiplier\n.def    m8sL    =r17        ;result Low byte\n.def    m8sH    =r18        ;result High byte\n.def    mcnt8s  =r19        ;loop counter\n\n\n mpy8s: sub m8sH,m8sH   ;clear result High byte and carry\n\n\n    ldi mcnt8s,8    ;init loop counter\n    m8s_1:  brcc    m8s_2       ;if carry (previous bit) set\n\n\n    add m8sH,mc8s   ;    add multiplicand to result High byte\n   m8s_2:   sbrc    mp8s,0      ;if current bit set\n\n    sub m8sH,mc8s   ;    subtract multiplicand from result High\n    asr m8sH        ;shift right result High byte\n\n    ror m8sL        ;shift right result L byte and multiplier\n    enter code here\n\n    dec mcnt8s      ;decrement loop counter\n   enter code here\n\n\n    brne    m8s_1       ;if not done, loop more\n    ret\n```\n\n    ", "Answer": "\r\nAs you know, multiplication can be performed using shifting and addition, e.g.\n\n```\n   101\n   101\n   ===\n   101\n1 01\n= ====\n1 1001\n```\n\n\nNotice that although the numbers fit in 4 bits, I needed to use more bits for the addition. To avoid this, the code you quote shifts the result rather than the number to be added.\n\n```\n  101\n  --- -\n   10 1\n   -- --\n    1 01\n  101\n  ===\n  110 01\n  --- --\n   11 001\n   -- ----\n    1 0001\n```\n\n\nThis way only 4 bits of addition are needed.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication Issue - Matlab\r\n                \r\nIn an attempt to create my own covariance function in MatLab I need to perform matrix multiplication on a row to create a matrix. \n\nGiven a matrix D where \n\n```\nD = [-2.2769    0.8746\n      0.6690   -0.4720\n     -1.0030   -0.9188\n      2.6111    0.5162]\n```\n\n\nNow for each row I need manufacture a matrix. For example the first row ```\nR = [-2.2770, 0.8746]```\n I would want the matrix M to be returned where ```\nM = [5.1847, -1.9915; -1.9915, 0.7649]```\n.\n\nBelow is what I have written so far. I am asking for some advice to explain how to use matrix multiplication on a rows to produce matrices? \n\n```\n% Find matrices using matrix multiplication\nfor i=1:size(D, 1)\n    P1 = (D(i,:))\n    P2 = transpose(P1)\n    M = P1*P2\nend\n```\n\n    ", "Answer": "\r\nYou are trying to compute the outer product of each row with itself stored as individual slices in a 3D matrix.\n\nYour code almost works. What you're doing instead is computing the inner product or the dot product of each row with itself. As such it'll give you a single number instead of a  matrix. You need to change the transpose operation so that it's done on ```\nP1```\n not ```\nP2```\n and ```\nP2```\n will now simply be ```\nP1```\n. Also you are overwriting the matrix ```\nM```\n at each iteration.  I'm assuming you'd like to store these as individual slices in a 3D matrix.  To do this, allocate a 3D matrix where each 2D slice has an equal number of rows and columns which is the number of columns in ```\nD```\n while the total number of slices is equal to the total number of rows in ```\nD```\n.  Then just index into each slice and place the result accordingly:\n\n```\nM = zeros(size(D,2), size(D,2), size(D,1));\n% Find matrices using matrix multiplication\nfor ii=1:size(D, 1)\n    P = D(ii,:);\n    M(:,:,ii) = P.'*P;\nend\n```\n\n\nWe get:\n\n```\n>> M\n\nM(:,:,1) =\n\n                5.18427361               -1.99137674\n               -1.99137674                0.76492516\n\n\nM(:,:,2) =\n\n                  0.447561                 -0.315768\n                 -0.315768                  0.222784\n\n\nM(:,:,3) =\n\n                  1.006009                 0.9215564\n                 0.9215564                0.84419344\n\n\nM(:,:,4) =\n\n                6.81784321                1.34784982\n                1.34784982                0.26646244\n```\n\n\nDepending on your taste, I would recommend using ```\nbsxfun```\n to help you perform the same operation but perhaps doing it faster:\n\n```\nM = bsxfun(@times, permute(D, [2 3 1]), permute(D, [3 2 1]));\n```\n\n\nIn fact, this solution is related to a similar question I asked in the past: Efficiently compute a 3D matrix of outer products - MATLAB.  The only difference is that the question wanted to find the outer product of columns instead of the rows.\n\nThe way the code works is that we shift the dimensions with ```\npermute```\n of ```\nD```\n so that we get two matrices of the sizes ```\n2 x 1 x 4```\n and ```\n1 x 2 x 4```\n.  By performing ```\nbsxfun```\n and specifying the ```\ntimes```\n function, this allows you to efficiently compute the matrix of outer products per slice simultaneously. \n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "multiplication shared preferences\r\n                \r\nI wanted to calculate the variables inside sharedPreference. Some calculation might include multiplication and \"if else\". For example, if variable is more than 4 then multiply by 10, if more than 7 multiply by 11. \n\nAnyone can show an example of how to do this? \n\nMoney is the one involving multiplication. the error says operator \"*\" cannot be applied to android.widget.EditText. How to fix this? \n\n```\npackage com.example.shyan.prototype;\n\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.TextView;\n\n\npublic class user_input2 extends Activity {\n\npublic static final String PREFS_NAME = \"MyPreferenceFile\";\n\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.user_input2);\n\n    final EditText item = (EditText) findViewById(R.id.editTextpower);\n    final EditText price = (EditText) findViewById(R.id.editTextusage);\n    Button btn = (Button) findViewById(R.id.buttonsave);\n\n    btn.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);\n            SharedPreferences.Editor editor = settings.edit();\n            editor.putString(\"item\", item.getText().toString());\n            editor.putString(\"price\", price.getText().toString());\n            editor.putString(\"money\", item*price);\n            editor.commit();\n\n\n            Intent intent = new Intent(getApplicationContext(), Report.class);\n            startActivity(intent);\n\n        }\n    });\n}\n}    \n```\n\n    ", "Answer": "\r\nyour issue is you cant multiple editTexts like that, if you want there numeric value then do this:\n\n```\nfinal EditText item_et = (EditText) findViewById(R.id.editTextpower);\n    final EditText price_et = (EditText) findViewById(R.id.editTextusage);\n\n    int item=Integer.parseInt(item.getText().toString());\n    int price = Integer.parseInt(price.getText().toString());\n```\n\n\nnow you can do item*price and save it as a int  like this:\n\n```\neditor.puInt(\"money\",item*price)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Array multiplication table\r\n                \r\nI want understand more about arrays. I came up with this question of creating multiplication table that would display this way \n\n```\n1  2  3  4  5\n\n2  4  6  8  10\n\n3  6  9  12 15\n\n4  8  12 16 20\n\n5  10 15 20 25\n```\n\n\nI though of using arrays this way\n\n```\nint myArray[] = {1,2,3,4,5};\nint myArray2[] = {1,2,3,4,5}\n```\n\n\nThe first array would serve as the horizontal set and the 2nd would be the vertical.\nThe problem is I dont know how exactly am I going to multiply each index and display them as a multiplication table.\n    ", "Answer": "\r\nAlmost the same as the above, but with formatted output.\n\n```\npublic static void main(String[] args) {\n    int[] h = {1, 2, 3, 4, 5};\n    int[] v = {1, 2, 3, 4, 5};\n    for (int i = 0; i < h.length; i++) {\n        for (int j = 0; j < v.length; j++) {\n            System.out.printf(\"%5d\", h[i] * v[j]);\n        }\n        System.out.println();\n    }\n}\n```\n\n\nThe \"%5d\" gives you some space, so that the numbers do not clutter together. (Here, I'm assuming that the language is Java, by the way. But you can easily convert this to other languages as you wish. The idea is the same. =) )\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "matrix multiplication but with variable dimensions\r\n                \r\nI'm having difficulty with my matrix multiplication here.\n\n```\nfor(i=0;i<row;i++){ /* matrix multiplication process */\n    for(j=0;j<col;j++){\n        matrix3[i][j]=0;\n```\n\n\nthe problem is with this part right here. The thing about matrix trans[col][row] is it's matrix[row][col] but transposed. And the values of variables row and col are determined by the user. So now, the problem is I can't seem to figure out how to limit the variable k in this for loop here.\n\n```\n        for(k=0;k<row;k++){ /* summation and multiplication of elements */\n            matrix3[i][j] += matrix[i][k]*trans[k][j];\n        }\n    }\n}\n```\n\n    ", "Answer": "\r\nMultiplying a ```\nrow x col```\n matrix by a ```\ncol x row```\n matrix will give you a ```\nrow x row```\n matrix. So, ```\ni```\n and ```\nj```\n are ```\n[0..row)```\n, and ```\nk```\n is ```\n[0..col)```\n. You can just look at your expression:\n\n```\n            matrix3[i][j] += matrix[i][k]*trans[k][j];\n```\n\n\nand ask yourself: “In ```\nmatrix[i][k]```\n, what is the range for ```\nk```\n, given that it's the second dimension of ```\nmatrix```\n?” Similar questions will help for other variables.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Recursion and multiplication\r\n                \r\nIs this possible guys? This is homework I have, and my teacher obviously believes it is, but it seems to me that it's impossible not to use addition or multiplication outside of the short-multiplication method. \n\n\n  Write  (and provide a tester for) a recursive algorithm:\n  \n  int multiply(int x, int y)\n  \n  to multiply two positive integers together without using the *\n  operator. Do not just add x to itself y times!!!\n  \n  (Hint: Write a recursive method that will multiply an integer by a\n  value in the range 0 .. 10. Then write a second recursive method to\n  implement the multiplication algorithm you learned to multiply\n  multi-digit numbers in elementary school.)\n\n\nMy issue is that once you break down any multi digit number and starting adding those together you have to use multiplication of numbers greater than 10, i.e 22 * 6 is 2 * 6 + 20 * 6 ... so am I totally missing something?\n\nEDIT\nI guess I should have added this is the code I have, \n\n```\npublic int mult(int x, int y){\nreturn x == 0 ? 0 : (mult(x-1, y) + y);\n}\n```\n\n\nwhich is perfect, but as far as I understand the instructions, that's breaking do not just add x to itself y times. I personally believe it isn't, but my teacher hasn't been very clear, and I'd like to know if there's some other way that I havn't thought of, sorry for the confusion.\n    ", "Answer": "\r\nYes, it's possible.  Yes, I think you're missing something.  Try writing down the steps you'd follow to manually multiply two numbers, the way you learned in elementary school.\n\nThen turn those steps into code.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in LC3\r\n                \r\nHow would one multiply in LC3 taking into account that numbers in registers could be negative? Additionally, how would one multiply a value in a register by an integer?\nFor example lets say R2 = R1 * R0\nIf both numbers inside registers were positive the LC3 code would look something like this:\n```\n.ORIG x3000\nLD R2, ZERO\nLD R0, M0\nLD R1, M1\nST R1, SaveR1\nLOOP BRz DONE\nADD R2, R2, R0\nADD R1, R1, #-1\nBR LOOP\nDONE ST R2, RESULT\nLD R1, SaveR1\nHALT\nSaveR1 .BLKW 1\nM0 .FILL x1011\nM1 .FILL x0005\n.END\n```\n\nHow would I implement multiplication if either R1 or R0 was negative? How can I check to see if both are negative? Additionally, how can I implement multiplication by a number, such as 4? R1 = R0 * 4.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Declaring multiple variables in JavaScript\r\n                \r\nIn JavaScript, it is possible to declare multiple variables like this:\n```\nvar variable1 = \"Hello, World!\";\nvar variable2 = \"Testing...\";\nvar variable3 = 42;\n```\n\n...or like this:\n```\nvar variable1 = \"Hello, World!\",\n    variable2 = \"Testing...\",\n    variable3 = 42;\n```\n\nIs one method better/faster than the other?\n    ", "Answer": "\r\nThe first way is easier to maintain. Each declaration is a single statement on a single line, so you can easily add, remove, and reorder the declarations.\nWith the second way, it is annoying to remove the first or last declaration because they start from the ```\nvar```\n keyword and finish with the semicolon respectively. Every time you add a new declaration, you have to replace the semicolon in the last old line with a comma.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Pandas: Elementwise multiplication of two dataframes\r\n                \r\nI know how to do element by element multiplication between two Pandas dataframes. However, things get more complicated when the dimensions of the two dataframes are not compatible. For instance below ```\ndf * df2```\n is straightforward, but ```\ndf * df3```\n is a problem:\n\n```\ndf = pd.DataFrame({'col1' : [1.0] * 5, \n                   'col2' : [2.0] * 5, \n                   'col3' : [3.0] * 5 }, index = range(1,6),)\ndf2 = pd.DataFrame({'col1' : [10.0] * 5, \n                    'col2' : [100.0] * 5, \n                    'col3' : [1000.0] * 5 }, index = range(1,6),)\ndf3 = pd.DataFrame({'col1' : [0.1] * 5}, index = range(1,6),)\n\ndf.mul(df2, 1) # element by element multiplication no problems\n\ndf.mul(df3, 1) # df(row*col) is not equal to df3(row*col)\n   col1  col2  col3\n1   0.1   NaN   NaN\n2   0.1   NaN   NaN\n3   0.1   NaN   NaN\n4   0.1   NaN   NaN\n5   0.1   NaN   NaN\n```\n\n\nIn the above situation, how can I multiply every column of df with df3.col1?\n\nMy attempt: I tried to replicate ```\ndf3.col1```\n  ```\nlen(df.columns.values)```\n times to get a dataframe that is of the same dimension as ```\ndf```\n:\n\n```\ndf3 = pd.DataFrame([df3.col1 for n in range(len(df.columns.values)) ])\ndf3\n        1    2    3    4    5\ncol1  0.1  0.1  0.1  0.1  0.1\ncol1  0.1  0.1  0.1  0.1  0.1\ncol1  0.1  0.1  0.1  0.1  0.1\n```\n\n\nBut this creates a dataframe of dimensions 3 * 5, whereas I am after 5*3. I know I can take the transpose with ```\ndf3.T()```\n to get what I need but I think this is not that the fastest way.\n    ", "Answer": "\r\n```\nIn [161]: pd.DataFrame(df.values*df2.values, columns=df.columns, index=df.index)\nOut[161]: \n   col1  col2  col3\n1    10   200  3000\n2    10   200  3000\n3    10   200  3000\n4    10   200  3000\n5    10   200  3000\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication table specific formatting using C++\r\n                \r\nMy teacher is asking for a specific format for this program that I've written in regards to multiplication tables. I have finished the rest of the program and it has been tested and works well so far, the only issue is that I need to match the exact format she requested but I'm having trouble doing so. \n\nMy code is as follows:\n\n```\n#include <iostream>\n\n#include <iomanip>\n\nusing namespace std;\n\nint main()\n{\nint num;\nchar selection;\n\ndo\n{\n\ncout << \"MENU\\n\";\ncout << \"a) Generate Multiplication Table\\n\";\ncout << \"q) Quit the program\\n\";\ncout << \"Please make a selection: \";\ncin >> selection;\n\n\nif (selection == 'a' || selection == 'A') {\n\n    cout << \"Please enter a number for your multiplication table: \\n\";\n    cin >> num;\n\n\n    while(num < 1 || num > 10)\n    {\n    cout << \"Invalid Selection\\n\";\n    cout << \"Re-enter a number between 1 and 10\\n\";\n    cin >> num;\n    }\n\n    cout << '\\n';\n    cout << \"MULTIPLICATION TABLE: \" << num << \"'s\\n\";\n    cout << '\\n';\n\n    for (int row = 1; row <= num; row ++)\n    {\n        cout << setw(2) << row << \"|\";\n\n        for (int col = 1; col <= num; col ++)\n        {\n            cout << setw(3) << col * row << \"| \";\n          //  cout << setw(3) << row << \"     \"\n\n        }\n        cout << endl;\n    }\n\n\n\n}\n\n\nelse if (selection == 'q' || selection == 'Q') {\n\n    cout << \" You have chosen to quit the program. Thank you for using!\\n\";\n}\n\n/*else if (selection != 'a' || selection != 'q')\n{\n    cout << \"Invalid Selection\\n\";\n    cout << '\\n';\n    cout << \"MENU\\n\";\n    cout << \"a) Generate Multiplication Table\\n\";\n    cout << \"q) Quit the program\\n\";\n    cout << \"Please make a selection: \";\n    cin >> selection;\n}*/\n\n }while (selection != 'q');\n}\n```\n\n\nThe multiplication table after printed should look something like this: It contains --- and | \n\n\n\nOne last issue is that I'm trying to figure out how to print out the numbers on top as shown below. There are duplicates going horizontally of the numbers 1-7. I can't seem to figure out how to do it without a for loop because the the numbers should be printed from 1- the users input but the spacing just doesn't work correctly and I'm not sure if that is the proper way to do it.\n\nMy output looks as follows (it looks more precise in code format): MULTIPLICATION TABLE: 7's\n\n```\n 1|  1|   2|   3|   4|   5|   6|   7| \n\n 2|  2|   4|   6|   8|  10|  12|  14| \n\n 3|  3|   6|   9|  12|  15|  18|  21| \n\n 4|  4|   8|  12|  16|  20|  24|  28| \n\n 5|  5|  10|  15|  20|  25|  30|  35| \n\n 6|  6|  12|  18|  24|  30|  36|  42| \n\n 7|  7|  14|  21|  28|  35|  42|  49| \n```\n\n\nI will post the text output as well just in case:\n\nMULTIPLICATION TABLE: 7's\n\n```\n 1|  1|   2|   3|   4|   5|   6|   7| \n\n 2|  2|   4|   6|   8|  10|  12|  14| \n\n 3|  3|   6|   9|  12|  15|  18|  21| \n\n 4|  4|   8|  12|  16|  20|  24|  28| \n\n 5|  5|  10|  15|  20|  25|  30|  35| \n\n 6|  6|  12|  18|  24|  30|  36|  42| \n\n 7|  7|  14|  21|  28|  35|  42|  49| \n```\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why in argument section is happen multiplication(recursion)?\r\n                \r\nWhy in argument section is happen multiplication, inside else statement?\n\n```\nfunction main(x, y) {\n    if (y === 0) {\n        return 1;\n    } else {\n        return x * main(x, y - 1); // Why in argument section is happen multiplication\n    }\n}\nmain(2, 3);\n```\n\n    ", "Answer": "\r\nIt is a recursive function, without the check for y==0 the function would never stop.\n\nNow it is calculated like this\n\n```\n2 * (2 * (2 * (2 * 1)))\n```\n\n\nWhere y is\n\n```\n      3    2    1    0\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Given a string of numbers and a number of multiplication operators, what is the highest number one can calculate?\r\n                \r\nThis was an interview question I had and I was embarrassingly pretty stumped by it. Wanted to know if anyone could think up an answer to it and provide the big O notation for it.\n\n```\nQuestion: Given a string of numbers and a number of multiplication operators, \n          what is the highest number one can calculate? You must use all operators\n```\n\n\nYou cannot rearrange the string. You can only use the multiplication operators to calculate a number. \n\nE.g. ```\nString = \"312\"```\n , 1 multiplication operator\n\nYou can do ```\n3*12 = 36```\n or ```\n31*2= 62```\n. The latter obviously being the right answer.\n    ", "Answer": "\r\nI am assuming here that the required number m of multiplication operators is given as part of the problem, along with the string s of digits.\n\nYou can solve this problem using the tabular method (aka \"dynamic programming\") with O(m |s|2) multiplications of numbers that are O(|s|) digits long. The optimal computational complexity of multiplication is not known, but with the schoolbook multiplication algorithm this is O(m |s|4) overall.\n\n(The idea is to compute the answer for each subproblem consisting of a tail of the string and a number m′ ≤ m. There are O(m |s|) such subproblems and solving each one involves O(|s|) multiplications of numbers that are O(|s|) digits long.)\n\nIn Python, you could program it like this, using the ```\n@memoized```\n decorator from the Python decorator library:\n\n```\n@memoized\ndef max_product(s, m):\n    \"\"\"Return the maximum product of digits from the string s using m\n    multiplication operators.\n\n    \"\"\"\n    if m == 0:\n        return int(s)\n    return max(int(s[:i]) * max_product(s[i:], m - 1)\n               for i in range(1, len(s) - m + 1))\n```\n\n\nIf you're used to the bottom-up form of dynamic programming where you build up a table, this top-down form might look strange, but in fact the ```\n@memoized```\n decorator maintains the table in the ```\ncache```\n property of the function:\n\n```\n>>> max_product('56789', 1)\n51102\n>>> max_product.cache\n{('89', 0): 89, ('9', 0): 9, ('6789', 0): 6789, ('56789', 1): 51102, ('789', 0): 789}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Verilog signed multiplication\r\n                \r\nI have a question about multiplication. In my case, row and vec are my inputs. Each contains N signed numbers with DW data width. temp1 and temp2 are arrays used for storing multiplication result. All numbers are signed.  The question is why temp1 and temp2 got a different answer? why temp1 wrong but temp2 correct?  Sorry, I'm new in Verilog and can't figure out why. Thanks! \n\n```\ninput signed [(DW * N) -1 : 0] row;\ninput signed [(DW * N) -1 : 0] vec;\nalways @(*) begin\n  for (i=0;i<N;i=i+1) begin\n    t1 = row[i*DW +: DW];\n    t2 = vec[i*DW +: DW];\n    temp1[i] = t1 * t2;\n    temp2[i] = (row[i*DW +: DW] )* (vec[i*DW +: DW]);\n  end\nend\n```\n\n    ", "Answer": "\r\nA part-select of any vector is unsigned, regardless of whether the whole is signed.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Verilog signed multiplication\r\n                \r\nI have a question about multiplication. In my case, row and vec are my inputs. Each contains N signed numbers with DW data width. temp1 and temp2 are arrays used for storing multiplication result. All numbers are signed.  The question is why temp1 and temp2 got a different answer? why temp1 wrong but temp2 correct?  Sorry, I'm new in Verilog and can't figure out why. Thanks! \n\n```\ninput signed [(DW * N) -1 : 0] row;\ninput signed [(DW * N) -1 : 0] vec;\nalways @(*) begin\n  for (i=0;i<N;i=i+1) begin\n    t1 = row[i*DW +: DW];\n    t2 = vec[i*DW +: DW];\n    temp1[i] = t1 * t2;\n    temp2[i] = (row[i*DW +: DW] )* (vec[i*DW +: DW]);\n  end\nend\n```\n\n    ", "Answer": "\r\nA part-select of any vector is unsigned, regardless of whether the whole is signed.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Faster way to initialize arrays via empty matrix multiplication? (Matlab)\r\n                \r\nI've stumbled upon the weird way (in my view) that Matlab is dealing with empty matrices. For example, if two empty matrices are multiplied the result is:\n\n```\nzeros(3,0)*zeros(0,3)\nans =\n\n 0     0     0\n 0     0     0\n 0     0     0\n```\n\n\nNow, this already took me by surprise, however, a quick search got me to the link above, and I got an explanation of the somewhat twisted logic of why this is happening. \n\nHowever, nothing prepared me for the following observation. I asked myself, how efficient is this type of multiplication vs just using ```\nzeros(n)```\n function, say for the purpose of initialization?  I've used ```\ntimeit```\n to answer this:\n\n```\nf=@() zeros(1000)\ntimeit(f)\nans =\n    0.0033\n```\n\n\nvs:\n\n```\ng=@() zeros(1000,0)*zeros(0,1000)\ntimeit(g)\nans =\n    9.2048e-06\n```\n\n\nBoth have the same outcome of 1000x1000 matrix of zeros of class ```\ndouble```\n, but the empty matrix multiplication one is ~350 times faster! (a similar result happens using ```\ntic```\n and ```\ntoc```\n and a loop)\n\nHow can this be? are ```\ntimeit```\n or ```\ntic,toc```\n bluffing or have I found a faster way to initialize matrices? \n(this was done with matlab 2012a, on a win7-64 machine,  intel-i5 650 3.2Ghz...)\n\nEDIT:\n\nAfter reading your feedback, I have looked more carefully into this peculiarity, and tested on 2 different computers (same matlab ver though 2012a) a code that examine the run time vs the size of matrix n. This is what I get:\n\n\n\nThe code to generate this used ```\ntimeit```\n as before, but a loop with ```\ntic```\n and ```\ntoc```\n will look the same. So, for small sizes, ```\nzeros(n)```\n is comparable. However, around ```\nn=400```\n there is a jump in performance for the empty matrix multiplication. The code I've used to generate that plot was:\n\n```\nn=unique(round(logspace(0,4,200)));\nfor k=1:length(n)\n    f=@() zeros(n(k));\n    t1(k)=timeit(f);\n\n    g=@() zeros(n(k),0)*zeros(0,n(k));\n    t2(k)=timeit(g);\nend\n\nloglog(n,t1,'b',n,t2,'r');\nlegend('zeros(n)','zeros(n,0)*zeros(0,n)',2);\nxlabel('matrix size (n)'); ylabel('time [sec]');\n```\n\n\nAre any of you experience this too?\n\nEDIT #2:\n\nIncidentally, empty matrix multiplication is not needed to get this effect. One can simply do:\n\n```\nz(n,n)=0;\n```\n\n\nwhere n> some threshold matrix size seen in the previous graph,  and get the exact efficiency profile as with empty matrix multiplication (again using timeit). \n\n\n\nHere's an example where it improves efficiency of a code:\n\n```\nn = 1e4;\nclear z1\ntic\nz1 = zeros( n ); \nfor cc = 1 : n\n    z1(:,cc)=cc;\nend\ntoc % Elapsed time is 0.445780 seconds.\n\n%%\nclear z0\ntic\nz0 = zeros(n,0)*zeros(0,n);\nfor cc = 1 : n\n    z0(:,cc)=cc;\nend\ntoc % Elapsed time is 0.297953 seconds.\n```\n\n\nHowever, using ```\nz(n,n)=0;```\n instead yields similar results to the ```\nzeros(n)```\n case.\n    ", "Answer": "\r\nThis is strange, I am seeing f being faster while g being slower than what you are seeing. But both of them are identical for me. Perhaps a different version of MATLAB ? \n\n```\n>> g = @() zeros(1000, 0) * zeros(0, 1000);\n>> f = @() zeros(1000)\nf =     \n    @()zeros(1000)\n>> timeit(f)  \nans =    \n   8.5019e-04\n>> timeit(f)  \nans =    \n   8.4627e-04\n>> timeit(g)  \nans =    \n   8.4627e-04\n```\n\n\nEDIT can you add + 1 for the end of f and g, and see what times you are getting.\n\nEDIT Jan 6, 2013 7:42 EST \n\nI am using a machine remotely, so sorry about the low quality graphs (had to generate them blind).\n\nMachine config:\n\ni7 920. 2.653 GHz. Linux. 12 GB RAM. 8MB cache.\n\n\n\nIt looks like even the machine I have access to shows this behavior, except at a larger size (somewhere between 1979 and 2073). There is no reason I can think of right now for the empty matrix multiplication to be faster at larger sizes. \n\nI will be investigating a little bit more before coming back.\n\nEDIT Jan 11, 2013\n\nAfter @EitanT's post, I wanted to do a little bit more of digging. I wrote some C code to see how matlab may be creating a zeros matrix. Here is the c++ code that I used.\n\n```\nint main(int argc, char **argv)\n{\n    for (int i = 1975; i <= 2100; i+=25) {\n    timer::start();\n    double *foo = (double *)malloc(i * i * sizeof(double));\n    for (int k = 0; k < i * i; k++) foo[k]  = 0;\n    double mftime = timer::stop();\n    free(foo);\n\n    timer::start();\n    double *bar = (double *)malloc(i * i * sizeof(double));\n    memset(bar, 0, i * i * sizeof(double));\n    double mmtime = timer::stop();\n    free(bar);\n\n    timer::start();\n    double *baz = (double *)calloc(i * i, sizeof(double));\n    double catime = timer::stop();\n    free(baz);\n\n    printf(\"%d, %lf, %lf, %lf\\n\", i, mftime, mmtime, catime);\n    }\n}\n```\n\n\nHere are the results.\n\n```\n$ ./test\n1975, 0.013812, 0.013578, 0.003321\n2000, 0.014144, 0.013879, 0.003408\n2025, 0.014396, 0.014219, 0.003490\n2050, 0.014732, 0.013784, 0.000043\n2075, 0.015022, 0.014122, 0.000045\n2100, 0.014606, 0.014480, 0.000045\n```\n\n\nAs you can see ```\ncalloc```\n (4th column) seems to be the fastest method. It is also getting significantly faster between 2025 and 2050 (I'd assume it would at around 2048 ?).\n\nNow I went back to matlab to check for the same. Here are the results.\n\n```\n>> test\n1975, 0.003296, 0.003297\n2000, 0.003377, 0.003385\n2025, 0.003465, 0.003464\n2050, 0.015987, 0.000019\n2075, 0.016373, 0.000019\n2100, 0.016762, 0.000020\n```\n\n\nIt looks like both f() and g() are using ```\ncalloc```\n at smaller sizes (<2048 ?). But at larger sizes f() (zeros(m, n)) starts to use ```\nmalloc```\n + ```\nmemset```\n, while g() (zeros(m, 0) * zeros(0, n)) keeps using ```\ncalloc```\n.\n\nSo the divergence is explained by the following\n\n\nzeros(..) begins to use a different (slower ?) scheme at larger sizes.\n```\ncalloc```\n also behaves somewhat unexpectedly, leading to an improvement in performance.\n\n\nThis is the behavior on Linux. Can someone do the same experiment on a different machine (and perhaps a different OS) and see if the experiment holds ?\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Wrong polynomial value after multiplication by using numpy\r\n                \r\nIn the following script, I multiply many polynomials together and try to get its correct value by setting x=1855.\n\nThe answer has to be zero because one of the equation in the multiplication is \nx-1855 but the answer is way much more than zero after multiply the seventh times.The result shows the polynomial value and the polynomial.\n\nI'm thinking that whether it is overflow somewhere but I am not sure.\nI need help.Thank you~\n\n\r\n\r\n```\nfrom matplotlib import pyplot as plt\r\nimport csv\r\nimport math\r\nimport numpy as np\r\n\r\n\r\nx=np.array([1860, 1855, 1844, 1828, 1550, 1507, 1496, 1486, 1485, 1480, 1475, 1442,\r\n1032,  950,  593,  543,  499,  243,  211,  200,  189,  173,  168,  152, 141,  140, \r\n124,   97,  87,   76,   70,   65,   59,   49,   43,   38,27,   22,   11,],'d')\r\n\r\n\r\np1=1\r\nfor i in range(1,39):\r\n         p2 = np.poly1d([1,-x[i]])\r\n         p1 = np.polymul(p1,p2)\r\n         print(p2)\r\n         print(p1(1855))```\n\r\n\r\n\r\n\n\npolynomials(first 8)\n\n```\n1 x - 1855, 1 x - 1844 , 1 x - 1828 , 1 x - 1550 ,1 x - 1507 ,1 x - 1496, 1 x - 1486,1 x - 1485 \n```\n\n\nmultiplication\n\n```\n1 x - 1855                                                           -->first\n   2\n1 x - 3699 x + 3.421e+06                                             -->second\n   3        2\n1 x - 5527 x + 1.018e+07 x - 6.253e+09                               -->third\n   4        3             2\n1 x - 7077 x + 1.875e+07 x - 2.204e+10 x + 9.692e+12                 -->forth\n   5        4             3             2\n1 x - 8584 x + 2.941e+07 x - 5.029e+10 x + 4.29e+13 x - 1.461e+16    -->fifth\n   6             5             4             3             2\n1 x - 1.008e+04 x + 4.226e+07 x - 9.429e+10 x + 1.181e+14 x - 7.878e+16 x + 2.185e+19 \n-->sixth\n   7             6             5             4             3\n1 x - 1.157e+04 x + 5.723e+07 x - 1.571e+11 x + 2.583e+14 x\n              2\n - 2.543e+17 x + 1.389e+20 x - 3.247e+22                             --seventh\n   8             7             6             5             4\n1 x - 1.305e+04 x + 7.441e+07 x - 2.421e+11 x + 4.915e+14 x\n              3             2\n - 6.378e+17 x + 5.166e+20 x - 2.388e+23 x + 4.822e+25               -->eighth\n ....\n```\n\n\n\n\n\n\nResult\n\n```\nwhen x=1855\nfirst one=first two multiplication=...=first six multiplication=0\nfirst seven multiplication=37748736.0\nfirst eight multiplication=558345748480.0\n```\n\n    ", "Answer": "\r\nIt is not overflow, it is insufficient fp resolution.\n\nLet's have a look at seven factors where you first see the wrong result:\n\n```\n>>> import numpy as np\n>>> import functools as ft\n>>> \n>>> x=np.array([1860, 1855, 1844, 1828, 1550, 1507, 1496, 1486, 1485, 1480, 1475, 1442,\n... 1032,  950,  593,  543,  499,  243,  211,  200,  189,  173,  168,  152, 141,  140, \n... 124,   97,  87,   76,   70,   65,   59,   49,   43,   38,27,   22,   11,],'d')\n>>> \n>>> L = np.c_[np.ones_like(x), -x]\n>>> first7 = ft.reduce(np.polymul, L[:7])\n>>> first7\narray([ 1.00000000e+00, -1.19400000e+04,  6.10047450e+07, -1.72890531e+11,\n        2.93522255e+14, -2.98513911e+17,  1.68387944e+20, -4.06415732e+22])\n```\n\n\nLet us focus on the last coefficient. We can use ```\nnp.nextafter```\n to obtain the next representable number in either direction.\n\n```\n>>> first7[-1] - np.nextafter(first7[-1], 0)\n-8388608.0    \n>>> first7[-1] - np.nextafter(first7[-1], 2 * first7[-1])\n8388608.0\n```\n\n\nAs we can see the resolution is much worse than 1, meaning that the coefficients are in practical terms guaranteed to be inaccurate.\n\nIf you are only interested in integer coefficients and arguments, you can use Python integers to avoid this problem (at the expense of performance):\n\n```\n>>> Li = L.astype(int).astype(object)\n>>> fullprod = ft.reduce(np.polymul, Li)\n>>> np.polyval(fullprod, np.array(1855, dtype=object))\n0\n```\n\n\nIf you need floating point, then consider using something like ```\nbigfloat```\n (```\nsympy```\n might also work).\n\n```\n>>> from bigfloat import BigFloat, setcontext, Context\n# set precision (1000 is probably way too much)\n>>> setcontext(Context(precision=1000))\n# convert array elements\n>>> Lb = np.frompyfunc(BigFloat, 1, 1)(L)\n# compute product\n>>> fullprod = ft.reduce(np.polymul, Lb)\n# evaluate\n>>> np.polyval(fullprod, BigFloat(1855))\nBigFloat.exact('0', precision=1000)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to replace multiple substrings of a string?\r\n                \r\nI would like to use the .replace function to replace multiple strings.\n\nI currently have  \n\n```\nstring.replace(\"condition1\", \"\")\n```\n\n\nbut would like to have something like\n\n```\nstring.replace(\"condition1\", \"\").replace(\"condition2\", \"text\")\n```\n\n\nalthough that does not feel like good syntax\n\nwhat is the proper way to do this? kind of like how in grep/regex you can do ```\n\\1```\n and ```\n\\2```\n to replace fields to certain search strings\n    ", "Answer": "\r\nHere is a short example that should do the trick with regular expressions:\n\n```\nimport re\n\nrep = {\"condition1\": \"\", \"condition2\": \"text\"} # define desired replacements here\n\n# use these three lines to do the replacement\nrep = dict((re.escape(k), v) for k, v in rep.iteritems()) \n#Python 3 renamed dict.iteritems to dict.items so use rep.items() for latest versions\npattern = re.compile(\"|\".join(rep.keys()))\ntext = pattern.sub(lambda m: rep[re.escape(m.group(0))], text)\n```\n\n\nFor example:\n\n```\n>>> pattern.sub(lambda m: rep[re.escape(m.group(0))], \"(condition1) and --condition2--\")\n'() and --text--'\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Lower Right Multiplication Table\r\n                \r\nI'm writing a code to output the bottom right of a multiplication table...I can get the bottom left and the top right, but I get stuck trying to get the bottom right. I'm assuming that column needs to = 12, but whenever I try to input this, it gives me an error or the same answer as before.\nThe output is supposed to look like the n's at the beginning of the code.\n\n```\n     n\n    nn\n   nnn\n\npublic static void main(String[] args) {\n    //   // part 3: lower-triangular multiplication table\n    for (int row=1; row<=12; row++) {\n        for (int column=1; column <= row; column++)   \n            System.out.printf(\"%5d\", row*column);\n        for (int column = row; column <= 0; column++)\n        System.out.printf(\"%3c\", ' ');\n        System.out.println();\n\n    }\n```\n\n    ", "Answer": "\r\nTo print the bottom (or top) right of a table, we need to iterate over the full table and omit entries\n\nThe entries omitted are replaced with whitespace so that the other entries that are printed will line up correctly\n\nTo determine if an entry is in a specific area, we can compare the X (```\ncol```\n) and Y (```\nrow```\n) values against the size (```\nsize```\n) of the table\n\n```\n 1 2 ... X\n1\n2\n...\nY\n```\n\n\nTop left includes (1,1), (1,Y), and (X,1), but not (X,Y) - ```\nX+Y < size+2```\n (+2 comes from 1 indexed vs 0 indexed)\n\nBottom left includes (1,1), (1,Y), and (X,Y), but not (X,1) - ```\nX <= Y```\n\n\nTop right includes (1,1), (1,Y), and (X,1), but not (X,Y) - ```\nX >= Y```\n\n\nBottom right includes (1,Y), (X,1), (X,Y), but not (1,1) - ```\nsize-X < Y```\n\n\nCode:\n\n```\nint size = 12; //size of the multiplication table\nfor(int row = 1; row <= size; row++) //go row by row\n{\n    for(int col = 1; col <= size; col++) //go column by column\n        if(size - col < row) //in the bottom right area\n            System.out.printf(\"%5d\", row * col); //print the number\n        else\n            System.out.print(\"     \"); //print whitespace for formatting\n    System.out.println(); //end of the row, go to the next line\n}\n```\n\n\nOutputs:\n\nSize=4\n\n```\n               4\n          6    8\n     6    9   12\n4    8   12   16\n```\n\n\nSize=12\n\n```\n                                                       12\n                                                  22   24\n                                             30   33   36\n                                        36   40   44   48\n                                   40   45   50   55   60\n                              42   48   54   60   66   72\n                         42   49   56   63   70   77   84\n                    40   48   56   64   72   80   88   96\n               36   45   54   63   72   81   90   99  108\n          30   40   50   60   70   80   90  100  110  120\n     22   33   44   55   66   77   88   99  110  121  132\n12   24   36   48   60   72   84   96  108  120  132  144\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Perform integer division using multiplication [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Why does GCC use multiplication by a strange number in implementing integer division?\r\n                            \r\n                                (5 answers)\r\n                            \r\n                    \r\n                Closed 4 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nLooking at x86 assembly produced by a compiler, I noticed that (unsigned) integer divisions are sometimes implemented as integer multiplications. These optimizations seem to follow the form\n\n```\nvalue / n => (value * ((0xFFFFFFFF / n) + 1)) / 0x100000000\n```\n\n\nFor example, performing a division by 9:\n\n```\n12345678 / 9 = (12345678 * 0x1C71C71D) / 0x100000000\n```\n\n\nA division by 3 would use multiplication with ```\n0x55555555 + 1```\n, and so on.\n\nExploiting the fact that the ```\nmul```\n instruction stores the high part of the result in the ```\nedx```\n register, the final result of the division can be obtained using a single multiplication with a magic value. (Though this optimization is sometimes used in conjunction with a bit-wise shift at the end.)\n\nI would like some insight on how this actually works. When is this approach valid? Why must 1 be added to our \"magic number\"?\n    ", "Answer": "\r\nThat method is called, \"Division by Invariant Multiplication\".\n\nThe constants that you're seeing are actually approximates of the reciprocal.\n\nSo rather than computing:\n\n```\nN / D = Q\n```\n\n\nyou do something like this instead:\n\n```\nN * (1/D) = Q\n```\n\n\nwhere ```\n1/D```\n is a reciprocal that can be precomputed.\n\nFundamentally, reciprocals are imprecise unless ```\nD```\n is a power-of-two. So there will some round-off error involved. The ```\n+1```\n that you see is there to correct for the round-off error.\n\n\n\nThe most common example is division by 3:\n\n```\nN / 3 = (N * 0xaaaaaaab) >> 33\n```\n\n\nWhere ```\n0xaaaaaaab = 2^33 / 3 + 1```\n.\n\nThis approach will generalize to other divisors.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why does two's-complement multiplication need to do sign extension?\r\n                \r\nIn the book Computer Systems A Programmer's Perspective (2.3.5), the method to calculate two's-complement multiplication is described as follows:\n\n\n  Signed multiplication in C generally is performed by truncating the 2w-bit product to w bits. \n  Truncating a two’s-complement number to w bits is equivalent to first computing its value modulo 2w and then converting from unsigned to two’s-complement.\n\n\nThus, for similar bit-level operands, why is unsigned multiplication different from two’s-complement multiplication? Why does two's-complement multiplication need to do sign extension?\n\nTo calculate same bit-level representation of unsigned and two’s-complement addition, we can convert the arguments of two’s-complement, then perform unsigned addition, and finally convert back to two’s-complement.  \n\nSince multiplication consists of multiple additions, why are the full representations of unsigned and two’s-complement multiplication different?\n    ", "Answer": "\r\nFigure 2.27 demonstrates the example below:\n```\n+------------------+----------+---------+-------------+-----------------+\n|       Mode       |    x     |    y    |    x · y    | Truncated x · y |\n+------------------+----------+---------+-------------+-----------------+\n| Unsigned         |  5 [101] | 3 [011] | 15 [001111] |  7 [111]        |\n| Two's complement | –3 [101] | 3 [011] | –9 [110111] | –1 [111]        |\n+------------------+----------+---------+-------------+-----------------+\n```\n\nIf you multiply 101 by 011, you will get 1111 (which is equal to 001111). How did they get 110111 for two's complement case then?\nThe catch here is that to get a correct 6-bit two's complement product you need to multiply 6-bit two's complement numbers. Thus, you need first to convert -3 and 3 to 6-bit two's complement representation: -3 = 111101, 3 = 000011 and only then multiply them 111101 * 000011 = 10110111. You also need to truncate the result to 6 bits to eventually get 110111 from the table above.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication Prolog\r\n                \r\nI found this code online for matrix multiplication in Prolog,\ncan anyone who has experience in Prolog explain it to me?\n```\n% SWI-Prolog has transpose/2 in its clpfd library\n\n:- use_module(library(clpfd)).\n \n% N is the dot product of lists V1 and V2.\n\ndot(V1, V2, N) :- \n    maplist(product, V1, V2, P),  \n    sumlist(P, N).\n\nproduct(N1,N2, N3) :- \n    N3 is N1 * N2.\n \n% Matrix multiplication with matrices represented\n% as lists of lists. M3 is the product of M1 and M2\n\nmmult(M1, M2, M3) :- \n    transpose(M2, MT), \n    maplist(mm_helper(MT), M1, M3).\n\nmm_helper(M2, I1, M3) :- \n   maplist(dot(I1), M2, M3).\n```\n\n    ", "Answer": "\r\n\n\nLines that start with ```\n%```\n are comments\n\n\n\nMost programming langues have methods and functions. Prolog has predicates which succeed or fail and can pass values along in variables.\n\nPredicates are denoted by their name and arity as such, ```\ntranspose/2```\n.\n\nMost programming languages use assignment, but Prolog uses unification. For the special case of solving math expressions Prolog has is/2\n\n\n\n```\n:- use_module(library(clpfd)).\n```\n\n\nIs a directive :- that brings in a library named clpfd. clpfd is used for constraints normally but in this case is used to access the ```\ntranspose/2```\n predicate.\n\n\n\n```\ndot(V1, V2, N) :- \n    maplist(product,V1,V2,P), \n    sumlist(P,N).\n```\n\n\n```\ndot/3```\n is a predicate that takes in two vectors, I am guessing implemented as Prolog list in this case, and binds the dot product as ```\nN```\n.\nmaplist/4 applies the product/3 predicate to the values in ```\nV1```\n and ```\nV2```\n to create the list ```\nP```\n.\nsumlist/2 adds up the list of values in ```\nP```\n and binds ```\nN```\n.\n\n\n\n```\nproduct(N1,N2,N3) :- N3 is N1*N2.\n```\n\n\n```\nproduct/3```\n is a helper predicate to take two numbers ```\nN1```\n and ```\nN2```\n and multiply them.   \n\n```\nN3 is N1*N2```\n can be thought of as ```\nN3 = (N1 * N2)```\n\n\n\n\n```\nmmult(M1, M2, M3) :- \n    transpose(M2,MT), \n    maplist(mm_helper(MT), M1, M3).\n```\n\n\ntranspose/2 is the typical array transpose.\n```\nmaplist/3```\n applies the helper predicate ```\nmm_helper/3```\n using ```\nMT```\n and ```\nM1```\n to bind ```\nM3```\n.  \n\n\n\n```\nmm_helper(M2, I1, M3) :- \n    maplist(dot(I1), M2, M3).\n```\n\n\n```\nmaplist/3```\n applies ```\ndot/3```\n to ```\nI1```\n and ```\nM2```\n to bind ```\nM3```\n.\n\n\n\nI take it you took the code from RosettaCode or it crossed paths with such.\n\n\n\nExample run:\n\n```\n?- mmult([[1,2],[3,4]],[[5,6],[7,8]],R).\nR = [[19, 22], [43, 50]] ;\ntrue.\n```\n\n\nVerification of example.\n\n\n\nFrom comment.\n\n\n  What does I1 represents in mm_helper predicate?\n\n\nSee trace below for details\n\nThe signature of ```\nmm_helper/3```\n is ```\nmm_helper(M2, I1, M3)```\n so the second parameter contains ```\nI1```\n. From the lines in the trace\n\n```\nExit: (11) mm_helper([[5, 7], [6, 8]], [3, 4], [43, 50])\n```\n\n\nthe second parameter is ```\n[3,4]```\n.\n\n```\nCall: (10) mm_helper([[5, 7], [6, 8]], [1, 2], _3596)\n```\n\n\nthe second parameter is ```\n[1,2]```\n.\n\nSo ```\nI2```\n is a row slice of the first matrix.\n\nBe careful of what you ask for, you might get more than expected? :)\n\n\n\nFull trace of run:\n\nThis is only here because of a question in the comment.\n\n```\n[trace]  ?- mmult([[1,2],[3,4]],[[5,6],[7,8]],R).\n\n\n   Call: (8) mmult([[1, 2], [3, 4]], [[5, 6], [7, 8]], _3238)\n   Unify: (8) mmult([[1, 2], [3, 4]], [[5, 6], [7, 8]], _3238)\n   Call: (9) clpfd:transpose([[5, 6], [7, 8]], _3536)\n   Unify: (9) clpfd:transpose([[5, 6], [7, 8]], _3536)\n   Call: (10) error:must_be(list(list), [[5, 6], [7, 8]])\n   Unify: (10) error:must_be(list(list), [[5, 6], [7, 8]])\n   Exit: (10) error:must_be(list(list), [[5, 6], [7, 8]])\n   Call: (10) clpfd:lists_transpose([[5, 6], [7, 8]], _3540)\n   Unify: (10) clpfd:lists_transpose([[5, 6], [7, 8]], _3540)\n   Call: (11) clpfd:'__aux_maplist/2_same_length+1'([[7, 8]], [5, 6])\n   Unify: (11) clpfd:'__aux_maplist/2_same_length+1'([[7, 8]], [5, 6])\n   Call: (12) lists:same_length([5, 6], [7, 8])\n   Unify: (12) lists:same_length([5, 6], [7, 8])\n   Exit: (12) lists:same_length([5, 6], [7, 8])\n   Call: (12) clpfd:'__aux_maplist/2_same_length+1'([], [5, 6])\n   Unify: (12) clpfd:'__aux_maplist/2_same_length+1'([], [5, 6])\n   Exit: (12) clpfd:'__aux_maplist/2_same_length+1'([], [5, 6])\n   Exit: (11) clpfd:'__aux_maplist/2_same_length+1'([[7, 8]], [5, 6])\n^  Call: (11) apply:foldl(transpose_, [5, 6], _3548, [[5, 6], [7, 8]], _3552)\n^  Unify: (11) apply:foldl(clpfd:transpose_, [5, 6], _3554, [[5, 6], [7, 8]], _3558)\n   Call: (12) apply:foldl_([5, 6], _3552, clpfd:transpose_, [[5, 6], [7, 8]], _3558)\n   Unify: (12) apply:foldl_([5, 6], [_3536|_3538], clpfd:transpose_, [[5, 6], [7, 8]], _3564)\n   Call: (13) clpfd:transpose_(5, _3536, [[5, 6], [7, 8]], _3562)\n   Unify: (13) clpfd:transpose_(5, _3536, [[5, 6], [7, 8]], _3562)\n   Call: (14) clpfd:'__aux_maplist/4_list_first_rest+0'([[5, 6], [7, 8]], _3536, _3560)\n   Unify: (14) clpfd:'__aux_maplist/4_list_first_rest+0'([[5, 6], [7, 8]], [_3542|_3544], [_3548|_3550])\n   Call: (15) clpfd:list_first_rest([5, 6], _3542, _3548)\n   Unify: (15) clpfd:list_first_rest([5, 6], 5, [6])\n   Exit: (15) clpfd:list_first_rest([5, 6], 5, [6])\n   Call: (15) clpfd:'__aux_maplist/4_list_first_rest+0'([[7, 8]], _3544, _3550)\n   Unify: (15) clpfd:'__aux_maplist/4_list_first_rest+0'([[7, 8]], [_3554|_3556], [_3560|_3562])\n   Call: (16) clpfd:list_first_rest([7, 8], _3554, _3560)\n   Unify: (16) clpfd:list_first_rest([7, 8], 7, [8])\n   Exit: (16) clpfd:list_first_rest([7, 8], 7, [8])\n   Call: (16) clpfd:'__aux_maplist/4_list_first_rest+0'([], _3556, _3562)\n   Unify: (16) clpfd:'__aux_maplist/4_list_first_rest+0'([], [], [])\n   Exit: (16) clpfd:'__aux_maplist/4_list_first_rest+0'([], [], [])\n   Exit: (15) clpfd:'__aux_maplist/4_list_first_rest+0'([[7, 8]], [7], [[8]])\n   Exit: (14) clpfd:'__aux_maplist/4_list_first_rest+0'([[5, 6], [7, 8]], [5, 7], [[6], [8]])\n   Exit: (13) clpfd:transpose_(5, [5, 7], [[5, 6], [7, 8]], [[6], [8]])\n   Call: (13) apply:foldl_([6], _3538, clpfd:transpose_, [[6], [8]], _3588)\n   Unify: (13) apply:foldl_([6], [_3566|_3568], clpfd:transpose_, [[6], [8]], _3594)\n   Call: (14) clpfd:transpose_(6, _3566, [[6], [8]], _3592)\n   Unify: (14) clpfd:transpose_(6, _3566, [[6], [8]], _3592)\n   Call: (15) clpfd:'__aux_maplist/4_list_first_rest+0'([[6], [8]], _3566, _3590)\n   Unify: (15) clpfd:'__aux_maplist/4_list_first_rest+0'([[6], [8]], [_3572|_3574], [_3578|_3580])\n   Call: (16) clpfd:list_first_rest([6], _3572, _3578)\n   Unify: (16) clpfd:list_first_rest([6], 6, [])\n   Exit: (16) clpfd:list_first_rest([6], 6, [])\n   Call: (16) clpfd:'__aux_maplist/4_list_first_rest+0'([[8]], _3574, _3580)\n   Unify: (16) clpfd:'__aux_maplist/4_list_first_rest+0'([[8]], [_3584|_3586], [_3590|_3592])\n   Call: (17) clpfd:list_first_rest([8], _3584, _3590)\n   Unify: (17) clpfd:list_first_rest([8], 8, [])\n   Exit: (17) clpfd:list_first_rest([8], 8, [])\n   Call: (17) clpfd:'__aux_maplist/4_list_first_rest+0'([], _3586, _3592)\n   Unify: (17) clpfd:'__aux_maplist/4_list_first_rest+0'([], [], [])\n   Exit: (17) clpfd:'__aux_maplist/4_list_first_rest+0'([], [], [])\n   Exit: (16) clpfd:'__aux_maplist/4_list_first_rest+0'([[8]], [8], [[]])\n   Exit: (15) clpfd:'__aux_maplist/4_list_first_rest+0'([[6], [8]], [6, 8], [[], []])\n   Exit: (14) clpfd:transpose_(6, [6, 8], [[6], [8]], [[], []])\n   Call: (14) apply:foldl_([], _3568, clpfd:transpose_, [[], []], _3618)\n   Unify: (14) apply:foldl_([], [], clpfd:transpose_, [[], []], [[], []])\n   Exit: (14) apply:foldl_([], [], clpfd:transpose_, [[], []], [[], []])\n   Exit: (13) apply:foldl_([6], [[6, 8]], clpfd:transpose_, [[6], [8]], [[], []])\n   Exit: (12) apply:foldl_([5, 6], [[5, 7], [6, 8]], clpfd:transpose_, [[5, 6], [7, 8]], [[], []])\n^  Exit: (11) apply:foldl(clpfd:transpose_, [5, 6], [[5, 7], [6, 8]], [[5, 6], [7, 8]], [[], []])\n   Exit: (10) clpfd:lists_transpose([[5, 6], [7, 8]], [[5, 7], [6, 8]])\n   Exit: (9) clpfd:transpose([[5, 6], [7, 8]], [[5, 7], [6, 8]])\n   Call: (9) '__aux_maplist/3_mm_helper+1'([[1, 2], [3, 4]], _3238, [[5, 7], [6, 8]])\n   Unify: (9) '__aux_maplist/3_mm_helper+1'([[1, 2], [3, 4]], [_3596|_3598], [[5, 7], [6, 8]])\n   Call: (10) mm_helper([[5, 7], [6, 8]], [1, 2], _3596)\n   Unify: (10) mm_helper([[5, 7], [6, 8]], [1, 2], _3596)\n   Call: (11) '__aux_maplist/3_dot+1'([[5, 7], [6, 8]], _3596, [1, 2])\n   Unify: (11) '__aux_maplist/3_dot+1'([[5, 7], [6, 8]], [_3602|_3604], [1, 2])\n   Call: (12) dot([1, 2], [5, 7], _3602)\n   Unify: (12) dot([1, 2], [5, 7], _3602)\n   Call: (13) '__aux_maplist/4_product+0'([1, 2], [5, 7], _3626)\n   Unify: (13) '__aux_maplist/4_product+0'([1, 2], [5, 7], [_3608|_3610])\n   Call: (14) product(1, 5, _3608)\n   Unify: (14) product(1, 5, _3608)\n   Call: (15) _3608 is 1*5\n   Exit: (15) 5 is 1*5\n   Exit: (14) product(1, 5, 5)\n   Call: (14) '__aux_maplist/4_product+0'([2], [7], _3610)\n   Unify: (14) '__aux_maplist/4_product+0'([2], [7], [_3620|_3622])\n   Call: (15) product(2, 7, _3620)\n   Unify: (15) product(2, 7, _3620)\n   Call: (16) _3620 is 2*7\n   Exit: (16) 14 is 2*7\n   Exit: (15) product(2, 7, 14)\n   Call: (15) '__aux_maplist/4_product+0'([], [], _3622)\n   Unify: (15) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (15) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (14) '__aux_maplist/4_product+0'([2], [7], [14])\n   Exit: (13) '__aux_maplist/4_product+0'([1, 2], [5, 7], [5, 14])\n   Call: (13) backward_compatibility:sumlist([5, 14], _3602)\n   Unify: (13) backward_compatibility:sumlist([5, 14], _3602)\n   Call: (14) lists:sum_list([5, 14], _3602)\n   Unify: (14) lists:sum_list([5, 14], _3602)\n   Exit: (14) lists:sum_list([5, 14], 19)\n   Exit: (13) backward_compatibility:sumlist([5, 14], 19)\n   Exit: (12) dot([1, 2], [5, 7], 19)\n   Call: (12) '__aux_maplist/3_dot+1'([[6, 8]], _3604, [1, 2])\n   Unify: (12) '__aux_maplist/3_dot+1'([[6, 8]], [_3644|_3646], [1, 2])\n   Call: (13) dot([1, 2], [6, 8], _3644)\n   Unify: (13) dot([1, 2], [6, 8], _3644)\n   Call: (14) '__aux_maplist/4_product+0'([1, 2], [6, 8], _3668)\n   Unify: (14) '__aux_maplist/4_product+0'([1, 2], [6, 8], [_3650|_3652])\n   Call: (15) product(1, 6, _3650)\n   Unify: (15) product(1, 6, _3650)\n   Call: (16) _3650 is 1*6\n   Exit: (16) 6 is 1*6\n   Exit: (15) product(1, 6, 6)\n   Call: (15) '__aux_maplist/4_product+0'([2], [8], _3652)\n   Unify: (15) '__aux_maplist/4_product+0'([2], [8], [_3662|_3664])\n   Call: (16) product(2, 8, _3662)\n   Unify: (16) product(2, 8, _3662)\n   Call: (17) _3662 is 2*8\n   Exit: (17) 16 is 2*8\n   Exit: (16) product(2, 8, 16)\n   Call: (16) '__aux_maplist/4_product+0'([], [], _3664)\n   Unify: (16) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (16) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (15) '__aux_maplist/4_product+0'([2], [8], [16])\n   Exit: (14) '__aux_maplist/4_product+0'([1, 2], [6, 8], [6, 16])\n   Call: (14) backward_compatibility:sumlist([6, 16], _3644)\n   Unify: (14) backward_compatibility:sumlist([6, 16], _3644)\n   Call: (15) lists:sum_list([6, 16], _3644)\n   Unify: (15) lists:sum_list([6, 16], _3644)\n   Exit: (15) lists:sum_list([6, 16], 22)\n   Exit: (14) backward_compatibility:sumlist([6, 16], 22)\n   Exit: (13) dot([1, 2], [6, 8], 22)\n   Call: (13) '__aux_maplist/3_dot+1'([], _3646, [1, 2])\n   Unify: (13) '__aux_maplist/3_dot+1'([], [], [1, 2])\n   Exit: (13) '__aux_maplist/3_dot+1'([], [], [1, 2])\n   Exit: (12) '__aux_maplist/3_dot+1'([[6, 8]], [22], [1, 2])\n   Exit: (11) '__aux_maplist/3_dot+1'([[5, 7], [6, 8]], [19, 22], [1, 2])\n   Exit: (10) mm_helper([[5, 7], [6, 8]], [1, 2], [19, 22])\n   Call: (10) '__aux_maplist/3_mm_helper+1'([[3, 4]], _3598, [[5, 7], [6, 8]])\n   Unify: (10) '__aux_maplist/3_mm_helper+1'([[3, 4]], [_3686|_3688], [[5, 7], [6, 8]])\n   Call: (11) mm_helper([[5, 7], [6, 8]], [3, 4], _3686)\n   Unify: (11) mm_helper([[5, 7], [6, 8]], [3, 4], _3686)\n   Call: (12) '__aux_maplist/3_dot+1'([[5, 7], [6, 8]], _3686, [3, 4])\n   Unify: (12) '__aux_maplist/3_dot+1'([[5, 7], [6, 8]], [_3692|_3694], [3, 4])\n   Call: (13) dot([3, 4], [5, 7], _3692)\n   Unify: (13) dot([3, 4], [5, 7], _3692)\n   Call: (14) '__aux_maplist/4_product+0'([3, 4], [5, 7], _3716)\n   Unify: (14) '__aux_maplist/4_product+0'([3, 4], [5, 7], [_3698|_3700])\n   Call: (15) product(3, 5, _3698)\n   Unify: (15) product(3, 5, _3698)\n   Call: (16) _3698 is 3*5\n   Exit: (16) 15 is 3*5\n   Exit: (15) product(3, 5, 15)\n   Call: (15) '__aux_maplist/4_product+0'([4], [7], _3700)\n   Unify: (15) '__aux_maplist/4_product+0'([4], [7], [_3710|_3712])\n   Call: (16) product(4, 7, _3710)\n   Unify: (16) product(4, 7, _3710)\n   Call: (17) _3710 is 4*7\n   Exit: (17) 28 is 4*7\n   Exit: (16) product(4, 7, 28)\n   Call: (16) '__aux_maplist/4_product+0'([], [], _3712)\n   Unify: (16) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (16) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (15) '__aux_maplist/4_product+0'([4], [7], [28])\n   Exit: (14) '__aux_maplist/4_product+0'([3, 4], [5, 7], [15, 28])\n   Call: (14) backward_compatibility:sumlist([15, 28], _3692)\n   Unify: (14) backward_compatibility:sumlist([15, 28], _3692)\n   Call: (15) lists:sum_list([15, 28], _3692)\n   Unify: (15) lists:sum_list([15, 28], _3692)\n   Exit: (15) lists:sum_list([15, 28], 43)\n   Exit: (14) backward_compatibility:sumlist([15, 28], 43)\n   Exit: (13) dot([3, 4], [5, 7], 43)\n   Call: (13) '__aux_maplist/3_dot+1'([[6, 8]], _3694, [3, 4])\n   Unify: (13) '__aux_maplist/3_dot+1'([[6, 8]], [_3734|_3736], [3, 4])\n   Call: (14) dot([3, 4], [6, 8], _3734)\n   Unify: (14) dot([3, 4], [6, 8], _3734)\n   Call: (15) '__aux_maplist/4_product+0'([3, 4], [6, 8], _3758)\n   Unify: (15) '__aux_maplist/4_product+0'([3, 4], [6, 8], [_3740|_3742])\n   Call: (16) product(3, 6, _3740)\n   Unify: (16) product(3, 6, _3740)\n   Call: (17) _3740 is 3*6\n   Exit: (17) 18 is 3*6\n   Exit: (16) product(3, 6, 18)\n   Call: (16) '__aux_maplist/4_product+0'([4], [8], _3742)\n   Unify: (16) '__aux_maplist/4_product+0'([4], [8], [_3752|_3754])\n   Call: (17) product(4, 8, _3752)\n   Unify: (17) product(4, 8, _3752)\n   Call: (18) _3752 is 4*8\n   Exit: (18) 32 is 4*8\n   Exit: (17) product(4, 8, 32)\n   Call: (17) '__aux_maplist/4_product+0'([], [], _3754)\n   Unify: (17) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (17) '__aux_maplist/4_product+0'([], [], [])\n   Exit: (16) '__aux_maplist/4_product+0'([4], [8], [32])\n   Exit: (15) '__aux_maplist/4_product+0'([3, 4], [6, 8], [18, 32])\n   Call: (15) backward_compatibility:sumlist([18, 32], _3734)\n   Unify: (15) backward_compatibility:sumlist([18, 32], _3734)\n   Call: (16) lists:sum_list([18, 32], _3734)\n   Unify: (16) lists:sum_list([18, 32], _3734)\n   Exit: (16) lists:sum_list([18, 32], 50)\n   Exit: (15) backward_compatibility:sumlist([18, 32], 50)\n   Exit: (14) dot([3, 4], [6, 8], 50)\n   Call: (14) '__aux_maplist/3_dot+1'([], _3736, [3, 4])\n   Unify: (14) '__aux_maplist/3_dot+1'([], [], [3, 4])\n   Exit: (14) '__aux_maplist/3_dot+1'([], [], [3, 4])\n   Exit: (13) '__aux_maplist/3_dot+1'([[6, 8]], [50], [3, 4])\n   Exit: (12) '__aux_maplist/3_dot+1'([[5, 7], [6, 8]], [43, 50], [3, 4])\n   Exit: (11) mm_helper([[5, 7], [6, 8]], [3, 4], [43, 50])\n   Call: (11) '__aux_maplist/3_mm_helper+1'([], _3688, [[5, 7], [6, 8]])\n   Unify: (11) '__aux_maplist/3_mm_helper+1'([], [], [[5, 7], [6, 8]])\n   Exit: (11) '__aux_maplist/3_mm_helper+1'([]\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "LC3 Multiplication\r\n                \r\nSo I have an LC3 coding assignment where we have to implement and test user subroutines for input and output of unsigned integers in decimal format. Now for our input we have to do a sequence of keystrokes to construct a single integer value by applying a Repeated Multiplication algorithm, which would be multiplication by 10 via 4 additions. I am not really understanding this concept of multiplication by 4 additions. Could anyone please explain?\n    ", "Answer": "\r\n```\nx```\n is number you want to multiply by ```\n10```\n\n\n```\na = x+x = 2x\nb = a+a = 4x\nc = b+b = 8x\nd = a+c = 10x\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why does GCC use multiplication by a strange number in implementing integer division?\r\n                \r\nI've been reading about ```\ndiv```\n and ```\nmul```\n assembly operations, and I decided to see them in action by writing a simple program in C:\nFile division.c\n```\n#include <stdlib.h>\n#include <stdio.h>\n\nint main()\n{\n    size_t i = 9;\n    size_t j = i / 5;\n    printf(\"%zu\\n\",j);\n    return 0;\n}\n```\n\nAnd then generating assembly language code with:\n```\ngcc -S division.c -O0 -masm=intel\n```\n\nBut looking at generated ```\ndivision.s```\n file, it doesn't contain any div operations! Instead, it does some kind of black magic with bit shifting and magic numbers. Here's a code snippet that computes ```\ni/5```\n:\n```\nmov     rax, QWORD PTR [rbp-16]   ; Move i (=9) to RAX\nmovabs  rdx, -3689348814741910323 ; Move some magic number to RDX (?)\nmul     rdx                       ; Multiply 9 by magic number\nmov     rax, rdx                  ; Take only the upper 64 bits of the result\nshr     rax, 2                    ; Shift these bits 2 places to the right (?)\nmov     QWORD PTR [rbp-8], rax    ; Magically, RAX contains 9/5=1 now, \n                                  ; so we can assign it to j\n```\n\nWhat's going on here? Why doesn't GCC use div at all? How does it generate this magic number and why does everything work?\n    ", "Answer": "\r\nInteger division is one of the slowest arithmetic operations you can perform on a modern processor, with latency up to the dozens of cycles and bad throughput.  (For x86, see Agner Fog's instruction tables and microarch guide).\n\nIf you know the divisor ahead of time, you can avoid the division by replacing it with a set of other operations (multiplications, additions, and shifts) which have the equivalent effect. Even if several operations are needed, it's often still a heck of a lot faster than the integer division itself.\n\nImplementing the C ```\n/```\n operator this way instead of with a multi-instruction sequence involving ```\ndiv```\n is just GCC's default way of doing division by constants.  It doesn't require optimizing across operations and doesn't change anything even for debugging.  (Using ```\n-Os```\n for small code size does get GCC to use ```\ndiv```\n, though.)   Using a multiplicative inverse instead of division is like using ```\nlea```\n instead of ```\nmul```\n and ```\nadd```\n\n\nAs a result, you only tend to see ```\ndiv```\n or ```\nidiv```\n in the output if the divisor isn't known at compile-time.\n\nFor information on how the compiler generates these sequences, as well as code to let you generate them for yourself (almost certainly unnecessary unless you're working with a braindead compiler), see libdivide.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "No matching client found for package name (Google Analytics) - multiple productFlavors & buildTypes\r\n                \r\nContext:\n\nI'm trying to set up Google Analytics for my app. (having 4 custom ```\nbuildTypes```\n and more than a few ```\nproductFlavors```\n)\n\nIt works fine when I select the ```\nBuild Variant```\n which has the ```\napplicationId```\n set to ```\ncom.my.app.package.name```\n (the package name used when generating the ```\ngoogle-services.json```\n). But, my other flavors have different applicationIds.\n\nI followed the offical devguide to set it up.\n\nError I get when any another build variant is selected in ```\nBuild Variants Tab```\n (which has a different ```\napplicationId```\n (package name) is as follows:\n\n\n  Error:Execution failed for task\n  ':app:processAllcategoriesDebugfreeGoogleServices'.\n  \n  \n    No matching client found for package name 'com.my.app.package.name.debug'\n  \n\n\nExplanation of Error Message: \n\nIn the task name in the error message above ```\nDebugfree```\n is my custom ```\nbuildType```\n and ```\nAllcategories```\n is one of my ```\nproductFlavors```\n.\n\nI understand the error and know the package name is different from what i used when generating the json, but that is what I'm trying to figure a way around.\n\nProblem:\n\nNow, the ```\ngoogle-services.json```\n resides in the ```\napp```\n folder and hence I am not being able to separate them out for each product flavor by dropping them in the flavor specific source set folder.\n\nQuestions:\n\n\nMy custom ```\nbyildType```\n for debugging suffixes ```\n.debug```\n to the ```\napplicationId```\n (package name). Is there a way I can make it work with the ```\ngoogle-services.json```\n which has my release ```\napplicationId```\n (i.e. without the suffix ```\n.debug```\n)\nIs there a way to have multiple product flavors configured in the same ```\ngoogle-services.json```\n file without using separate files and tasks to copy the required file to ```\napp```\n folder. I know it can be done using ```\ntask```\n as mentioned in this post. Is there a simpler way to just have one file or pick right file based on gradle configuration?\nI see the ```\npackage_name```\n field in ```\ngoogle-services.json```\n has the package name ```\ncom.my.app.package.name```\n. Can I add multiple package names manually to work for all build variants? If yes, how to do that? Could not find any instructions in documentations.\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "4x4 Matrix Pre-multiplication vs Post-multiplication\r\n                \r\nI have the following functions:\n\n```\nvoid Matrix::Scale(const float xScale, const float yScale, const float zScale)\n{\n    Matrix scaleMatrix;\n    scaleMatrix.m_data[M11] = xScale;\n    scaleMatrix.m_data[M22] = yScale;\n    scaleMatrix.m_data[M33] = zScale;\n    *this *= scaleMatrix;\n}\n\nvoid Matrix::Translate(const float xTranslation, const float yTranslation, const float zTranslation)\n{\n    Matrix translationMatrix;\n    translationMatrix.m_data[M14] = xTranslation;\n    translationMatrix.m_data[M24] = yTranslation;\n    translationMatrix.m_data[M34] = zTranslation;\n    *this *= translationMatrix;\n}\n```\n\n\nAnd I'm unsure about the last lines of both functions. Should I be doing pre-multiplication, or post-multiplication (i.e. what I'm doing now). What implications does it have for the use of this class? I'm using the class with OpenGL, so any similarities to that would probably be useful.\n\nEdit:\n\nMy shader code looks like this:\n\n```\nvoid main()\n{\n    gl_Position = vec4(v_xy, 0.0, 1.0) * v_ModelMatrix * v_ViewMatrix * v_ProjectionMatrix;\n    f_uv = v_uv;\n}\n```\n\n\nMy matrix multiplication function looks like this:\n\n```\n// Row 1\nresult[M11] = lhs[M11] * rhs[M11]   +   lhs[M12] * rhs[M21]   +   lhs[M13] * rhs[M31]   +   lhs[M14] * rhs[M41];    // Column 1\nresult[M12] = lhs[M11] * rhs[M12]   +   lhs[M12] * rhs[M22]   +   lhs[M13] * rhs[M32]   +   lhs[M14] * rhs[M42];    // Column 2\nresult[M13] = lhs[M11] * rhs[M13]   +   lhs[M12] * rhs[M23]   +   lhs[M13] * rhs[M33]   +   lhs[M14] * rhs[M43];    // Column 3\nresult[M14] = lhs[M11] * rhs[M14]   +   lhs[M12] * rhs[M24]   +   lhs[M13] * rhs[M34]   +   lhs[M14] * rhs[M44];    // Column 4\n\n// Row 2\nresult[M21] = lhs[M21] * rhs[M11]   +   lhs[M22] * rhs[M21]   +   lhs[M23] * rhs[M31]   +   lhs[M24] * rhs[M41];    // Column 1\nresult[M22] = lhs[M21] * rhs[M12]   +   lhs[M22] * rhs[M22]   +   lhs[M23] * rhs[M32]   +   lhs[M24] * rhs[M42];    // Column 2\nresult[M23] = lhs[M21] * rhs[M13]   +   lhs[M22] * rhs[M23]   +   lhs[M23] * rhs[M33]   +   lhs[M24] * rhs[M43];    // Column 3\nresult[M24] = lhs[M21] * rhs[M14]   +   lhs[M22] * rhs[M24]   +   lhs[M23] * rhs[M34]   +   lhs[M24] * rhs[M44];    // Column 4\n\n// Row 3\nresult[M31] = lhs[M31] * rhs[M11]   +   lhs[M32] * rhs[M21]   +   lhs[M33] * rhs[M31]   +   lhs[M34] * rhs[M41];    // Column 1\nresult[M32] = lhs[M31] * rhs[M12]   +   lhs[M32] * rhs[M22]   +   lhs[M33] * rhs[M32]   +   lhs[M34] * rhs[M42];    // Column 2\nresult[M33] = lhs[M31] * rhs[M13]   +   lhs[M32] * rhs[M23]   +   lhs[M33] * rhs[M33]   +   lhs[M34] * rhs[M43];    // Column 3\nresult[M34] = lhs[M31] * rhs[M14]   +   lhs[M32] * rhs[M24]   +   lhs[M33] * rhs[M34]   +   lhs[M34] * rhs[M44];    // Column 4\n\n// Row 4\nresult[M41] = lhs[M41] * rhs[M11]   +   lhs[M42] * rhs[M21]   +   lhs[M43] * rhs[M31]   +   lhs[M44] * rhs[M41];    // Column 1\nresult[M42] = lhs[M41] * rhs[M12]   +   lhs[M42] * rhs[M22]   +   lhs[M43] * rhs[M32]   +   lhs[M44] * rhs[M42];    // Column 2\nresult[M43] = lhs[M41] * rhs[M13]   +   lhs[M42] * rhs[M23]   +   lhs[M43] * rhs[M33]   +   lhs[M44] * rhs[M43];    // Column 3\nresult[M44] = lhs[M41] * rhs[M14]   +   lhs[M42] * rhs[M24]   +   lhs[M43] * rhs[M34]   +   lhs[M44] * rhs[M44];    // Column 4\n```\n\n\nI was under the impression that if you post-multiply your matrices (i.e. ```\nviewMatrix = transform * viewMatrix;```\n) then your shader code needs to apply MVP in the opposite order that I currently have?\n\nEdit2:\n\nThe summary table on http://scratchapixel.com/lessons/3d-basic-lessons/lesson-4-geometry/conventions-again-row-major-vs-column-major-vector/ is confusing me, as I'm using post-multiply with OpenGL (indicating column-major), yet my matrix is laid out in memory as row-major?\n    ", "Answer": "\r\nYou seem to be mixing two issues here which is I guess what the webpage on scratchapixel is trying to explain. From the information that is on the page you are referring to, things seem pretty clear but getting this type of stuff right in the mind is hard. You have the theory (what you do in mathematics with a pen and paper) and what you do with your implementation (C++). These are two different problems.\n\nMathematics: you can use two notations, either column or row major. As mentioned by GraphicsMuncher on this webpage as well, with row major vector, on paper, you need to write the vector-matrix multiplication vM where v is the row vector (1x4) and M your 4x4 matrix, why because you can mathematically only write [1x4]*[4x4], and not the other way around. Similarly if you use column, then the vector needs to be written down vertically, or in notation [4x1] (4 rows, 1 column). Thus, the multiplication with a matrix can only be written: [4x4][4x1]. The matrix is put in front of the vector: Mv. The first notation is called post-multiplication and the second (Mv) is called pre-multiplication (the matrix is in front).\nNow, as mentioned by GraphicsMuncher, if you need to transform a vector (or a point) then you need to pay attention to the order of multiplication, when you write them down ON PAPER. If you want to translate something with matrix T and then rotate with R and then scale with S, then in a column major world, you need to to write v' = S * R * T * v. In a row major world you need to write v' = v * T * R * S.\n\nThat's for the theory.\n\nComputer: then comes the point when you decide to implement this in C++ say. The good thing about this is that C++ doesn't impose you anything about anything. You can map the values of your matrix's coefficients in memory the way you want, and you can write the code to perform a matrix multiplication by another matrix the way you want. Similarly how you access the coefficients for a vector-matrix multiplication is completely up to you.\n\nYou need to be make a clear distinction about how you map your coefficients in memory and what conventions you need to use from a mathematical point of you view to represent your vectors. These are two independent problems. For instance in you case, you probably declare your matrix class as an array of say 16 contiguous floats. That's fine. Where coefficients m14, m24, m34 represent the translation part of the matrix (Tx, Ty, Tz), so you assume your \"convention\" is row-major even though you are told to use OpenGL matrix convention which is said to be column-major. Here your confusion comes from the fact that the mapping of the coefficients in memory is different from the mental representation you are making yourself of a \"column-major\" matrix. You code \"row\" but you were said to use (from a mathematical point of view) \"column\", hence your difficulty to make sense of whether you do things right or wrong.\n\nWhat's important is to see a matrix as a representation of a coordinate system defined by three axes, and a translation. Where and how you store this data in memory is completely up to you. Assuming the three vectors representing the three axes of the coordinate system are named AX(x,y,z), AY(x,y,z), AZ(x,y,z), and the translation vector is denoted by (Tx, Ty, Tz), then mathematically if you use column vector you have (latex not supported I guess):\n\n```\n    AXx AYx AZx Tx \nM = AXy AYy AZy Ty\n    AXz AYz AZz Tz\n     0   0   0  1 \n```\n\n\nThe axes of the coordinates system are written vertically. Now if you use row-major:\n\n```\n    AXx AXy AXz 0 \nM = AYx AYy AYz 0\n    AZx AZy AZz 0\n     Tx  Ty  Tz 1\n```\n\n\nThe axes of the coordinate system are written horizontally. So the problem now when it comes to the computer world, is how you store these coefficients in memory. You can as well do:\n\n```\nfloat m[16] = { AXx, AXy, AXz, 0, AYx, AYy, AYz, 0, AZx, AZy, AZz, 0, Tx, Ty, Tz, 1}; \n```\n\n\nDoes it tell you though which convention you use? No. You can also write:\n\n```\nfloat m[16] = { AXx, AXy, AXz, Tx, AYx, AYy, AYz, Ty, AZx, AZy, AZz, Tz, 0, 0, 0, 1}; \n```\n\n\nor\n\n```\nfloat m[16] = { AXx, AYx, AZx, Tx, AXy, AYy, AZy, Ty, AXz, AYz, AZz, Tz, 0, 0, 0, 1};\n```\n\n\nagain, that doesn't give you a particular indication of which \"mathematical\" convention you use. You are just storing 16 coefficients in memory in different ways and that's perfectly fine as long as you know what that way is, so that you can access them appropriately later on. Now keep in mind that a vector multiplied by a matrix should give you the same vector whether you use a row- or column- mathematical notation. Thus what's important really is that you multiply the (x,y,z) coordinates of your vector by the right coefficients from the matrix, which requires the knowledge of how \"you\" have decided to store the matrix coefficient in memory:\n\n```\nVector3 vecMatMult (Vector3 v,\n    float AXx, float AXy, float AXz, float Tx,\n    float AYx, float AYy, float AYz, float Ty,\n    float AZz, float AZy, float AZz, float Tz) {\n    return Vector3(\n        v.x * AXx + v.y * AYx + v.z * AZx + Tx,\n        v.x * AXy + v.y * AYy + v.z * AZy + Ty,\n        v.x * AXz + v.y * AYz + v.z * AZz + Tz\n}\n```\n\n\nEDIT: above code was wrong, fixed it now.\n\nI wrote this function to underline the fact that no matter which convention you use, the resulting of the vector * matrix multiplication is just a multiplication and an addition between the vector's input coordinates and the coordinate system's axis coordinates AX, AY and AZ (regardless of the notation you use, and regardless of the way you store them in memory).\n\nIf you use:\n\n```\nfloat m[16] = { AXx, AXy, AXz, 0, AYx, AYy, AYz, 0, AZx, AZy, AZz, 0, Tx, Ty, Tz, 1};\n```\n\n\nYou need to call:\n\n```\nvecMatMult(v, m[0], m[1], m[2], m[12], m[4], m[5], m[6], m[13], ...\n```\n\n\nIf you use:\n\n```\nfloat m[16] = { AXx, AYx, AZx, Tx, AXy, AYy, AZy, Ty, AXz, AYz, AZz, Tz, 0, 0, 0, 1};\n```\n\n\nYou need to call:\n\n```\nvecMatMult(v, m[0], m[4], m[8], m[3], m[1], m[5], m[9], m[10], ...\n```\n\n\nDoes that tell you which convention you use? No. You just need to call the right coefficients in the right places when you do a vec * mat multiplication. And that's all there is to it, as disconcerting as it may seem.\n\nNow things are slightly different when it comes to mat * mat multiplication. You can assume that the order in which you multiply the matrices is not the same. So R * S * T is not the same as T * S * R. The order indeed matters. Now again if you use \"row major\" then mathematically you need to write (using your notation):\n\nmt11 = ml11 * mr11 + ml12 * mr21 + m13 * m31 + ml14 * mr41\n\nwhere ml is the left hand matrix and mr the right hand one: mt = ml * mr. However note that i haven't been using brackets [] for the access indices because I don't want to suggest we are accessing elements stored in a 1D array here. We are just talking about the coefficients of matrices. If you want to write this in C++, then it all depends of how you have stored your coefficients in memory as suggested above.\n\nHope it helps.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Replace multiple strings with multiple other strings\r\n                \r\nI'm trying to replace multiple words in a string with multiple other words. The string is \"I have a cat, a dog, and a goat.\"\n\nHowever, this does not produce \"I have a dog, a goat, and a cat\", but instead it produces \"I have a cat, a cat, and a cat\". Is it possible to replace multiple strings with multiple other strings at the same time in JavaScript, so that the correct result will be produced?\n\n```\nvar str = \"I have a cat, a dog, and a goat.\";\nstr = str.replace(/cat/gi, \"dog\");\nstr = str.replace(/dog/gi, \"goat\");\nstr = str.replace(/goat/gi, \"cat\");\n\n//this produces \"I have a cat, a cat, and a cat\"\n//but I wanted to produce the string \"I have a dog, a goat, and a cat\".\n```\n\n    ", "Answer": "\r\nSpecific Solution\n\nYou can use a function to replace each one.\n\n```\nvar str = \"I have a cat, a dog, and a goat.\";\nvar mapObj = {\n   cat:\"dog\",\n   dog:\"goat\",\n   goat:\"cat\"\n};\nstr = str.replace(/cat|dog|goat/gi, function(matched){\n  return mapObj[matched];\n});\n```\n\n\njsfiddle example\n\nGeneralizing it\n\nIf you want to dynamically maintain the regex and just add future exchanges to the map, you can do this\n\n```\nnew RegExp(Object.keys(mapObj).join(\"|\"),\"gi\"); \n```\n\n\nto generate the regex.  So then it would look like this\n\n```\nvar mapObj = {cat:\"dog\",dog:\"goat\",goat:\"cat\"};\n\nvar re = new RegExp(Object.keys(mapObj).join(\"|\"),\"gi\");\nstr = str.replace(re, function(matched){\n  return mapObj[matched];\n});\n```\n\n\nAnd to add or change any more replacements you could just edit the map. \n\nfiddle with dynamic regex\n\nMaking it Reusable\n\nIf you want this to be a general pattern you could pull this out to a function like this\n\n```\nfunction replaceAll(str,mapObj){\n    var re = new RegExp(Object.keys(mapObj).join(\"|\"),\"gi\");\n\n    return str.replace(re, function(matched){\n        return mapObj[matched.toLowerCase()];\n    });\n}\n```\n\n\nSo then you could just pass the str and a map of the replacements you want to the function and it would return the transformed string.\n\nfiddle with function\n\nTo ensure Object.keys works in older browsers, add a polyfill eg from MDN or Es5.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "C++ Hexadecimal Calculator Multiplication\r\n                \r\nI'm having issues where my multiplication method is only handling one row, it's currently not advancing to the next row. The add function is working properly, and I'm able to update the current hex number, but for some reason I can only get one line of multiplication to work.\n\n```\nExample input:\n111# * 333# = 333\n123# * 123# = 369\n```\n\n\nHere is the code in question:\n\n```\n    LList* Calculator::multiply(LList& left, LList& right) {\n    int product, carry = 0, lval = 0, rval = 0, zeros = 0;\n    bool calculating = true;\n    listnode *leftNode;\n    vector <LList*> addList;\n    listnode *rightNode;\n    LList* newHex;\n    while(calculating) {\n\n        leftNode = left.next();\n        if(leftNode == NULL) {\n            break;\n        }\n        else {\n            lval = leftNode->data;\n        }\n\n\n        //leftNode = left.next();\n        right.reset();\n\n        if(leftNode == NULL) {\n            calculating = false;\n            if(carry != 0) {\n                //newHex->insertTail(carry);\n            }\n            lval = 0;\n            break;\n        }\n\n        LList* curList = new LList;\n        addList.push_back(curList);\n\n        while(rightNode != NULL) {\n\n            // Add however zeros we need for\n            // each entry based on the zero counter\n            for(int i = 0; i < zeros; i++) {\n                curList->insertTail(0);\n            }\n\n            rightNode = right.next();\n\n\n            if(rightNode == NULL) {\n\n            } \n            else {\n            rval = rightNode->data;\n\n            product = lval * rval + carry;\n            carry = 0;\n            if(product >= 16) {\n                carry = (product / 16);\n                product = (product % 16);\n            }\n            curList->insertTail(product);\n            }\n        }\n        zeros++;\n\n\n    }\n\n    Calculator calc;\n    LList* temp;\n    // Add up everything in the addList\n    for(int i = 0; i < addList.size() - 1; i++) {\n        if(temp == NULL)\n            temp = calc.add(*addList[i], *addList[i+1]);\n        else\n            temp = calc.add(*addList[i+1], *temp);\n    }\n\n    newHex = temp;\n\n    // Delete it\n    for(int i = 0; i < addList.size(); i++) {\n\n    }\n\n    return newHex;\n};\n```\n\n\nHere is the next method:\n\n```\nlistnode* LList::next() {\n    listnode* temp = view;\n    if(temp != NULL)\n        view = view->next;\n\n    if(view == NULL) {\n    }\n    return temp;\n};\n```\n\n\nFUll PROGRAM:\n\n```\n#include <iostream>\n#include <vector>\n#include <stdlib.h>\n#include <string>\nusing namespace std;\n#undef NULL\nconst int NULL = 0;\nconst char SENTINEL = '#';\ntypedef int element;\n\nclass listnode {\n    public:\n        element data;\n        listnode * next;\n};\n\nclass LList {\n    private:\n        listnode * head;\n        listnode * tail;\n        listnode * view;\n\n    public:\n        LList();\n        ~LList();\n        void read();\n        listnode* next();\n        void reset();\n        void print();\n        void insertTail(element val);\n        void clean();\n\n        element deleteHead();\n};\n\nclass Calculator {\n    public:\n        Calculator();\n        inline LList* add(LList& left, LList& right);\n        inline LList* multiply(LList& left, LList& right);\n};\n\nCalculator::Calculator() {\n\n};\n\nLList* Calculator::add(LList& left, LList& right) {\n    int sum, carry = 0, lval = 0, rval = 0;\n    bool calculating = true;\n    listnode *leftNode;\n    listnode *rightNode;\n    LList* newHex = new LList;\n    while(calculating) {\n        leftNode = left.next();\n        rightNode = right.next();\n\n        if(leftNode == NULL) {\n            lval = 0;\n        }\n        else\n            lval = leftNode->data;\n\n        if(rightNode == NULL) {\n            rval = 0;\n        }\n        else\n            rval = rightNode->data;\n\n\n        if(leftNode == NULL && rightNode == NULL) {\n            calculating = false;\n            if(carry != 0) {\n                newHex->insertTail(carry);\n            }\n            break;\n        }\n\n        sum = lval + rval + carry;\n        carry = 0;\n        if(sum >= 16) {\n            carry = 1;\n            sum -= 16;\n        }\n\n        newHex->insertTail(sum);\n\n    }\n\n    return newHex;\n};\n\n\nLList* Calculator::multiply(LList& left, LList& right) {\n    int product, carry = 0, lval = 0, rval = 0, zeros = 0;\n    bool calculating = true;\n    listnode *leftNode;\n    vector <LList*> addList;\n    listnode *rightNode;\n    LList* newHex;\n    while(calculating) {\n\n        leftNode = left.next();\n        if(leftNode == NULL) {\n            break;\n        }\n        else {\n            lval = leftNode->data;\n        }\n\n\n        //leftNode = left.next();\n        right.reset();\n\n        if(leftNode == NULL) {\n            calculating = false;\n            if(carry != 0) {\n                //newHex->insertTail(carry);\n            }\n            lval = 0;\n            break;\n        }\n\n        LList* curList = new LList;\n        addList.push_back(curList);\n\n        while(rightNode != NULL) {\n\n            // Add however zeros we need for\n            // each entry based on the zero counter\n            for(int i = 0; i < zeros; i++) {\n                curList->insertTail(0);\n            }\n\n            rightNode = right.next();\n\n\n            if(rightNode == NULL) {\n\n            } \n            else {\n            rval = rightNode->data;\n\n            product = lval * rval + carry;\n            carry = 0;\n            if(product >= 16) {\n                carry = (product / 16);\n                product = (product % 16);\n            }\n            curList->insertTail(product);\n            }\n        }\n        zeros++;\n\n\n    }\n\n\n\n    Calculator calc;\n    LList* temp;\n    // Add up everything in the addList\n    for(int i = 0; i < addList.size() - 1; i++) {\n        if(temp == NULL)\n            temp = calc.add(*addList[i], *addList[i+1]);\n        else\n            temp = calc.add(*addList[i+1], *temp);\n    }\n\n    newHex = temp;\n\n    // Delete it\n    for(int i = 0; i < addList.size(); i++) {\n\n    }\n\n    return newHex;\n};\n\nlistnode* LList::next() {\n    listnode* temp = view;\n    if(temp != NULL)\n        view = view->next;\n\n    if(view == NULL) {\n    }\n    return temp;\n};\n\nvoid LList::reset() {\n    view = head;\n}\n\n\nLList::LList(){\n    /*\n    next:\n    This is used to set the linked\n    list to NULL.\n    */\n    head = NULL;\n    view = NULL;\n};\n\n\nvoid LList::print() {\n    listnode * temp;\n    int i = 0;\n    string printValues;\n    temp = head;\n    while(temp != NULL) {\n        int var = temp -> data;\n        char character = ' ';\n        if(i % 3 == 0 && i != 0)\n            printValues += ',';\n        i++;    \n        if(var > 9 && var < 16) {\n            character = static_cast <char>(var + 65 - 10);\n        };\n        if (var <= 9 && var >= 0) {\n            character = static_cast <char>(var + 48);\n        };\n        if (var > 96 && var < 103) {\n            character = static_cast <char>(var + 97 + 10);\n        };\n\n        printValues += character;\n        temp = temp -> next;\n\n    }\n    string tempValues;\n    for(int i = printValues.length() - 1; i >= 0; i--)\n        tempValues += printValues[i];\n    cout << tempValues;\n    cout << endl;\n};\n\n void LList::read() {\n    string userval;\n    int i;\n    bool parsing = true;\n    char curval;\n    vector <int> values;\n    clean();\n    while(parsing) {\n        cin >> userval;\n        for(unsigned int i = 0; i < userval.length(); i++) {\n            curval = userval[i];    \n            if(curval >= 48 && curval <= 57)\n                values.push_back(static_cast <int>(curval - \n            48));\n\n            if(curval >= 65 && curval <= 70)\n                values.push_back(static_cast <int>(curval - \n            65 + 10));\n\n            if(curval >= 97 && curval <= 102)\n                values.push_back(static_cast <int>(curval - \n            97 + 10)); \n\n            if(curval == ' ')\n                break;\n\n            if(curval == SENTINEL) {\n                parsing = false;\n                break;\n            }   \n        }\n    }\n    for(int i = values.size() -1; i >= 0; i--) {\n        insertTail(values[i]);\n    }\n}; \n\nvoid LList::insertTail(element val) {\n    listnode * temp;\n    temp = new listnode;\n    temp -> data = val;\n    temp -> next = NULL;\n\n    if(head == NULL) {\n        head = temp;\n        view = head;\n    }\n    else\n        tail -> next = temp;\n    tail = temp;\n};\n\nvoid LList::clean() {\n    while(head != NULL)\n        deleteHead();\n};\n\nvoid validCommands() {\n    cout << \"Valid commands are:\" << endl;\n    cout << \"  e enter  enter the current \";\n    cout << \"hexadecimal \";\n    cout << \"number from the keyboard\" << endl;\n    cout << \"  a add        add a new hexadecimal \";\n    cout << \"number to the current hex. number\" << endl;\n    cout << \"  m multiply   \";\n    cout << \"multiply a new hexadecimal number \";\n    cout << \"by the current hex. number\" << endl;\n    cout << \"  h help   show this help menu\" << endl;\n    cout << \"  q quit   quit the program\" << endl << endl;\n};\n\nelement LList::deleteHead() {\n    listnode * temp;\n    temp = head;\n    head = head -> next;\n    delete temp;\n    return temp -> data;\n};\n\nLList::~LList(){\n    delete head;\n};\n\nint main() {\n    LList L, add,multiply;\n    Calculator calc;\n    L.insertTail(0);\n    char option;\n    bool run;\n    cout << \"Hexadecimal Calculator, Ver 1.0.0 \\n\";\n\n\n\n    do {\n        /*\n    This do while is used to continuosly run the \n    program until the user decides to end.\n    */\n    cout << \"Current Hexadecimal number is: \";\n    L.print();\n    cout << endl;\n\n    cout << \"Command (h for help): \";\n    cin >> option;\n\n    cout << endl << endl;\n        switch(option) {\n            case 'e' : \n                cout << \"Enter a hexadecimal number \";\n                cout << \"followed by #: \";\n                L.read();\n                cout << endl << \"Entering completed.\";\n                cout << endl << endl;\n            break;\n            case 'a' :  \n                cout << \"Adding a new hexadecimal number \";\n                cout << \"to the current hex. number\" << endl;\n                cout << endl;\n                cout << \"Enter a hexadecimal \";\n                cout << \"number, follow by #: \";\n                add.read();\n                cout << endl << \"Addition completed.\";\n                cout << endl;\n                L = *calc.add(L, add);\n                cout << endl;\n                break;\n            case 'm' : \n                cout << \"Multiplying a new hexadecimal \";\n                cout << \"number \";\n                cout << \"to the current hex. number\" << endl;\n                cout << endl;\n                cout << \"Enter a hexadecimal \";\n                cout << \"number, follow by #: \";\n                multiply.read();\n                cout << endl << \"Multiplication completed.\";\n                cout << endl;\n                L = *calc.multiply(L, multiply);\n                cout << endl;\n                break;\n            case 'h' : validCommands();\n            break;\n            case 'q' : run = false;\n            break;\n        };\n    } while (run);\n        exit(0);\n\n}\n```\n\n    ", "Answer": "\r\nThe first evaluation of ```\nwhile(rightNode != NULL)```\n uses an uninitialized value for ```\nrightNode```\n, which happens to be non-NULL when you run the program.  After this check, before it is dereferenced, ```\nrightNode```\n is set to a valid node pointer value  from ```\nright.next()```\n.  But for the next left digit, rightnode is still NULL from the previous loop, because it is not updated after ```\nright.reset()```\n, so for every digit after the first, ```\nwhile(rightNode != NULL)```\n always starts off with rightNode set to NULL, so all loops after the first one are skipped.\n\nOnce this is fixed, another bug will be exposed: zeros are added to curList inside the right-digit loop, so the zeros get added whenever a right-digit is processed.  Instead the zeros should be added before the right-digit loop, after curList is created within the left-digit loop.\n\nThere is another bug (I think) -- after the right-digit loop ends, any carry value is not added to the last digit of ```\ncurList```\n -- instead it gets saved for the beginning of the next right-digit loop.  This might be intentional, but I don't think it will always end up in the correct digit position (but maybe I'm wrong on this point -- I haven't dedicated much thought to the possibilities). \n\nFor debugging your problem, I had to duplicate your code, fill in missing parts and fix the bugs.  Also, there were some style issues which are not actual mistakes or bugs, but are known to promote problems. So here are changes I made to my version for testing:\n\n\nLList contains a stateful iterator (```\nview```\n) accessed with ```\nnext()```\n and ```\nreset()```\n.  In the future, multiple sections of your code might want to iterate over the same LList, at the same time, but they will not be able to share the single iteration state held by the LList object.  Iterator objects solve this problem.\nUse of raw pointers in \"user\" code:  Pointer manipulation should be avoided, if possible, or restricted to \"library\" code -- like within the LList object.  There is no need to handle pointers inside the Calculator class.\nVariables should be declared inside the innermost scope required for their use.  The code's first problem, where ```\nrightNode```\n was carrying a value over from a previous loop, could not have happened if this style point was being followed.\nThere was no need to keep a vector (```\naddList```\n) of terms to sum up at the end of the function.  My version keeps a running sum as the ```\nLList```\n named ```\nprodSum```\n.\n\n\nHere is my version of the code, including my own ```\nLList```\n and Calculator::add, because you did not make those available.  Note that ```\nLList```\n works with iterators here, not a ```\nview```\n member.  My iterators can be \"dereferenced\" when at their end position, giving a zero.  This was done for convenience, because an infinite string of high-order zeros above the highest digit is implied for any value:\n\n```\n#include <iostream>\n#include <string>\n#include <vector>\n\nstruct listnode {\n    int data;\n    listnode *next;\n    listnode(int data=0) : data(data), next(0) {}\n};\n\nclass LList {\n    listnode *head, *tail;  // head is least significant end\n    void delNodes() {\n        listnode* node = head;\n        while(node) {\n            listnode* todel = node;\n            node = node->next;\n            delete todel;\n        }\n        head = tail = 0;\n    }\npublic:\n    LList() : head(0), tail(0) {}\n    LList(std::string digits) : head(0), tail(0) {\n        for(auto it = digits.rbegin(); it != digits.rend(); ++it) {\n            if(*it >= '0' && *it <= '9') insertTail(*it - '0');\n            else if(*it >= 'a' && *it <= 'f') insertTail(*it - 'a' + 10);\n            else if(*it >= 'A' && *it <= 'F') insertTail(*it - 'A' + 10);\n    }   }\n    LList(const LList& src) : head(0), tail(0) {\n        for(int data : src) { insertTail(data); }\n    }\n    ~LList() { delNodes(); }\n    LList& operator = (const LList& src) {\n        delNodes();\n        for(int data : src) { insertTail(data); }\n        return *this;\n    }\n    void insertTail(int value) {\n        listnode *newnode = new listnode(value);\n        if(!head) {\n            head = tail = newnode;\n        } else {\n            tail->next = newnode;\n            tail = newnode;\n    }   }\n    class iterator {\n        friend LList;\n        const listnode* node;\n        iterator(const listnode* node) : node(node) {}\n    public:\n        iterator& operator ++ () { if(node) node = node->next; return *this; }\n        int operator * () const { return node ? node->data : 0; }\n        bool operator != (iterator iter) const { return iter.node != node; }\n        bool operator == (iterator iter) const { return iter.node == node; }\n    };\n    iterator begin() const { return iterator(head); }\n    iterator end()   const { return iterator(0); }\n    std::string get_digits() const {\n        static const char da[] = \"0123456789abcdef\";\n        std::string digits;\n        for(int d : *this) {\n            digits = da[d] + digits;\n        }\n        return digits;\n    }\n};\n\nLList add(const LList& left, const LList& right) {\n    LList sum;\n    auto liter = left.begin();\n    auto riter = right.begin();\n    int carry = 0;\n    while(liter != left.end() || riter != right.end()) {\n        int s = *liter + *riter + carry;\n        carry = s / 16;\n        sum.insertTail(s % 16);\n        ++liter;\n        ++riter;\n    }\n    if(carry) sum.insertTail(carry);\n    return sum;\n}\n\nLList multiply(const LList& left, const LList& right) {\n    LList prodSum;\n    auto leftNode = left.begin();\n    int zeros = 0;\n    for(;;) {\n        if(leftNode == left.end()) break;\n        int lval = *leftNode;\n        LList curList;\n        for(int i = 0; i < zeros; i++) {\n            curList.insertTail(0);\n        }\n        auto rightNode = right.begin();\n        int carry = 0;\n        while(rightNode != right.end()) {\n            int rval = *rightNode;\n            int product = lval * rval + carry;\n            carry = product / 16;\n            product %= 16;\n            curList.insertTail(product);\n            ++rightNode;\n        }\n        while(carry) {\n            curList.insertTail(carry % 16);\n            carry /= 16;\n        }\n        prodSum = add(prodSum, curList);\n        ++leftNode;\n        ++zeros;\n    }\n\n    return prodSum;\n}\n\nint main() {\n    LList a(\"111\");\n    LList b(\"333\");\n    LList c = multiply(a, b);  // 36963\n    std::cout << c.get_digits() << '\\n';\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Simple CUBLAS Matrix Multiplication Example?\r\n                \r\nI'm looking for a very bare bones matrix multiplication example for CUBLAS that can multiply M times N and place the results in P for the following code, using high-performance GPU operations:\n\n```\nfloat M[500][500], N[500][500], P[500][500];\nfor(int i = 0; i < Width; i++){\n    for(int j = 0; j < Width; j++)\n    {\n        M[i][j] = 500;\n        N[i][j] = 500;\n        P[i][j] = 0;\n    }\n}\n```\n\n\nSo far, most code I'm finding to do any kind of matrix multiplication using CUBLAS is (seemingly?) overly complicated.\n\nI am attempting to design a basic lab where students can compare the performance of matrix multiplication on the GPU vs matrix multiplication on the CPU, presumably with increased performance on the GPU.\n    ", "Answer": "\r\nThe SDK contains matrixMul which illustrates the use of CUBLAS. For a simpler example see the CUBLAS manual section 1.3.\n\nThe matrixMul sample also shows a custom kernel, this won't perform as well as CUBLAS of course.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "error in matrix multiplication in java\r\n                \r\nI am working on java addition, subtraction and multiplication program.  I have created and completed the program but the output of multiplication is wrong and also i want to check if rows of first matrix equals second or not in matrix multiplication. \n\n```\nimport java.util.*;\n\nclass matrix\n{\n\npublic static void matrix_oper(int A[][],int B[][],int m, int n, int p, int q)\n{\n\n    int[][] C = new int[m][n];\n    System.out.println(\"Matrix A: \");\n    for(int i=0 ; i < A.length ; i++)\n    {\n        System.out.println();\n        for(int j=0 ; j < A[i].length ; j++)\n        {\n            System.out.print(A[i][j]+\" \");\n        }\n    }\n    System.out.println();\n    System.out.println();\n\n    System.out.println(\"Matrix B: \");\n    for(int i=0 ; i < B.length ; i++)\n    { \n        System.out.println();\n        for(int j=0 ; j < B[i].length ; j++)\n        {\n            System.out.print(B[i][j]+\" \");\n        }\n    }\n    System.out.println();\n    System.out.println();\n\n    System.out.println(\"Addition Of Matrices: \");\n    for(int i=0;i<C.length;i++)\n    {\n        for(int j=0;j<C[i].length;j++)\n        {\n            C[i][j]=A[i][j]+B[i][j];\n            System.out.print(C[i][j]+\" \");\n        }\n        System.out.println();\n    }\n\n    System.out.println();\n    System.out.println();\n\n    System.out.println(\"Substraction Of Matrices: \");\n    for(int i=0;i<C.length;i++)\n    {\n        for(int j=0;j<C[i].length;j++)\n        {\n            C[i][j]=A[i][j]-B[i][j];\n            System.out.print(C[i][j]+\" \");\n        }\n    System.out.println();\n    }\n\n    System.out.println();\n    System.out.println();\n\n    System.out.println(\"Multiplication Of Matrices: \");\n    for(int i=0;i<C.length;i++)\n    {\n        for(int j=0;j<C[i].length;j++)\n        {\n            C[i][j]=A[i][j]*B[j][i];\n            System.out.print(C[i][j]+\" \");\n        }\n        System.out.println();\n    }\n\n}\n\n\npublic static void main(String[] args)\n{\n    Scanner input = new Scanner(System.in);\n    System.out.print(\"Enter Number of rows: \");\n    int m = input.nextInt();\n\n    System.out.print(\"Enter Number of columns: \");\n    int n = input.nextInt();\n    int[][] A = new int[m][n];\n\n    System.out.print(\"Enter Number of rows: \");\n    int p = input.nextInt();\n\n    System.out.print(\"Enter Number of columns: \");\n    int q = input.nextInt();\n    int[][] B = new int[p][q];\n\n    System.out.println(\"Enter elements for matrix A : \");\n    for(int i=0 ; i < A.length ; i++)\n        for(int j=0 ; j < A[i].length ; j++)\n        {\n            A[i][j] = input.nextInt();\n        }\n\n    System.out.println(\"Enter elements for matrix B : \");\n    for (int i=0 ; i < B.length ; i++)\n        for (int j=0 ; j < B[i].length ; j++)\n        {\n            B[i][j] = input.nextInt();\n        }\n\n    matrix mx=new matrix();\n    mx.matrix_oper(A,B,m,n,p,q);\n}\n}\n```\n\n\noutput of this is : \n\n```\nEnter Number of rows: 2\nEnter Number of columns: 2\nEnter elements for matrix A :\n1\n1\n1\n1\nEnter elements for matrix B :\n2\n2\n2\n2\nMatrix A:\n\n1 1\n1 1\n\nMatrix B:\n\n2 2\n2 2\n\nAddition Of Matrices:\n3 3\n3 3\n\n\nSubstraction Of Matrices:\n-1 -1\n-1 -1\n\n\nMultiplication Of Matrices:\n2 2\n2 2\n```\n\n\nwhats error in my matrix multiplication?\n    ", "Answer": "\r\ntry this\n\n```\n   for (int i = 0; i < rowsInA; i++) {\n       for (int j = 0; j < columnsInB; j++) {\n           for (int k = 0; k < columnsInA; k++) {\n               C[i][j] = C[i][j] + A[i][k] * B[k][j];\n           }\n       }\n   }\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "quick/fast integer multiplication in ruby?\r\n                \r\nI am trying to make a quick/efficient Mandelbrot implementation in Ruby. A long long time ago, one way to speed it up was using fixed point integers instead of floats.\n\nSo i made the following benchmark, comparing float and integer raising to a square, using multiplication or square ** operand.\n\n```\nrequire 'benchmark'\n\nBenchmark.bmbm(10) do |x|  \n  x.report(\"float-multip\") do\n    for z in 0..100000 \n      zf = z.to_f\n      y = zf*zf\n    end\n  end  \n\n  x.report(\"float-square\") do\n    for z in 0..100000 \n      zf = z.to_f\n      y = zf**2\n    end\n  end  \n\n  x.report(\"int-multip\") do\n    zo = 0\n    for zi in 0..100000 \n      y2 = zo*zo\n      zo += 1\n    end\n  end   \n\n  x.report(\"int-multip\") do\n    for zi in 0..100000 \n      y2 = zi**2\n    end\n  end  \nend\n```\n\n\nand this generates the following output:\n\n```\nRehearsal ------------------------------------------------\nfloat-multip   0.125000   0.000000   0.125000 (  0.125000)\nfloat-square   0.125000   0.000000   0.125000 (  0.125000)\nint-multip     0.250000   0.000000   0.250000 (  0.250000)\nint-multip     0.282000   0.000000   0.282000 (  0.282000)\n--------------------------------------- total: 0.782000sec\n\n                   user     system      total        real\nfloat-multip   0.110000   0.000000   0.110000 (  0.110000)\nfloat-square   0.125000   0.000000   0.125000 (  0.125000)\nint-multip     0.219000   0.016000   0.235000 (  0.235000)\nint-multip     0.265000   0.015000   0.280000 (  0.282000)\n```\n\n\nwhich clearly shows the the Fixnum multiplication is almost twice as slow as floating point.\n\nI have two questions:\n\n\nCan anyone explain this? A reason I can imagine is that Fixnum multiplication is slower because of the internal checking whether or not it needs to be converted to a Bignum.\nsecondly is there than a quick integer multiplication for ruby?\n\n    ", "Answer": "\r\nA couple of things come to mind. You do not specify what Ruby implementation you are using. Since you run Ruby 1.8.6 on Windows, I am going to assume that you are using MRI installed via the Windows One-Click Installer.\n\nThis is kind of a worst-case scenario:\n\n\nMRI is the slowest of all the Ruby implementations\nMRI on Windows is even slower than MRI on Linux or OSX\nThe One-Click Installer uses the pre-compiled binaries from Ruby-Lang.Org, which are compiled with Microsoft Visual C++ 6.0 from 1996, and thus are even slower than MRI on Windows compiled with Microsoft Visual C++ 10.0 or GCC 4.x or even GCC 3.x.\n\n\nHere's a couple of tips that you could try to improve performance:\n\n\nuse the RubyInstaller project, which uses interpreters compiled with GCC 3.x instead of MSVC6, \nmaybe recompile the interpreter yourself (it's not that hard with the Rakefiles provided by the RubyInstaller project) with GCC 4.x and/or different optimization options (RubyInstaller is compiled with moderate optimization options and for generic 386 CPUs), \nuse a newer version of MRI than 1.8.6, \nuse a different implementation of Ruby: \n\n\nYARV is significantly faster than MRI (unfortunately, it only implements Ruby 1.9, so you might have to change your code), \nJRuby is significantly faster than YARV in a lot of scenarios, and it implements both Ruby 1.8 and Ruby 1.9 (it also has a ```\n-fast```\n commandline option, which is slightly incompatible with Ruby, but improves performance, including arithmetic performance) and \nIronRuby might also be faster than YARV, depending on the workload.\n\n\n\nIn the latter two cases you might want to revise your benchmarks a bit. Both eventually can compile Ruby code to native machine code, but it might take a while. JRuby for example compiles to JVM bytecode after a method has been executed 20 times and HotSpot Server compiles JVM bytecode to native machine code after it has executed 20000 times. Also, compilation itself takes time, so the program needs to run a while to gain back that cost through improved performance.\n\nIn particular, Charles Oliver Nutter, one of the JRuby lead developers, said that depending on the workload, JRuby might take up to 5-15 seconds to ramp up to full speed. Your benchmarks are about 100x too fast (here's a sentence you don't hear every day ...).\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication table structure\r\n                \r\nQuestion about structure of this multiplication table..\n\nHow do I make spaces so the output would be like this:\n\n```\n      1 X 9 + 2 = 11\n     12 X 9 + 3 = 111\n    123 X 9 + 4 = 1111\n   1234 X 9 + 5 = 11111\n  12345 X 9 + 6 = 111111\n 123456 X 9 + 7 = 1111111\n1234567 X 9 + 8 = 11111111\n```\n\n\nCode:\n\n```\n#region MTABLE\n\nint number1 = 1;\n\nfor (int i = 2; i <= 8; i++)\n\n{\n    int number2 = number1 * 9 + i;\n    Console.WriteLine(\"{0} x {1} + {2} = {3}  \", number1, 9, i, number2);\n    number1 = number1 * 10 + i;\n\n    for (int j = 1; j <= i; j++)\n    Console.Write(\" \");\n}\n\nConsole.ReadKey();\n\n#endregion\n```\n\n\nMy code currently outputs:\n\n```\n1 x 9 + 2 = 11\n  12 x 9 + 3 = 111\n   123 x 9 + 4 = 1111\n    1234 x 9 + 5 = 11111\n     12345 x 9 + 6 = 111111\n      123456 x 9 + 7 = 1111111\n       1234567 x 9 + 8 = 11111111\n```\n\n    ", "Answer": "\r\nMove the inner loop to the beginning of the outer loop and count backwards from 8-i:\n\n```\nfor (int i = 2; i <= 8; i++)\n{\n    for (int j = 8-i; j >0; j--)\n        Console.Write(\" \");\n\n    int number2 = number1 * 9 + i;\n    Console.WriteLine(\"{0} x {1} + {2} = {3}  \", number1, 9, i, number2);\n    number1 = number1 * 10 + i;\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is floating point math broken?\r\n                \r\nConsider the following code:\n```\n0.1 + 0.2 == 0.3  ->  false\n```\n\n```\n0.1 + 0.2         ->  0.30000000000000004\n```\n\nWhy do these inaccuracies happen?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to specify multiple return types using type-hints\r\n                \r\nI have a function in python that can either return a ```\nbool```\n or a ```\nlist```\n. Is there a way to specify the return types using type hints?\nFor example, is this the correct way to do it?\n```\ndef foo(id) -> list or bool:\n    ...\n```\n\n    ", "Answer": "\r\nFrom the documentation - Union Type:\n\nA union object holds the value of the ```\n|```\n (bitwise or) operation on multiple type objects. These types are intended primarily for type annotations. The union type expression enables cleaner type hinting syntax compared to ```\ntyping.Union```\n.\n\nThis use of ```\n|```\n was added in Python 3.10. Hence the proper way to represent more than one return data type is:\n```\ndef foo(client_id: str) -> list | bool:\n```\n\nFor earlier versions, use ```\ntyping.Union```\n:\n```\nfrom typing import Union\n\n\ndef foo(client_id: str) -> Union[list, bool]:\n```\n\n\nBut do note that typing is not enforced.  Python continues to remain a dynamically-typed language.  The annotation syntax has been developed to help during the development of the code prior to being released into production.  As PEP 484 states, \"no type checking happens at runtime.\"\n```\n>>> def foo(a: str) -> list:\n...     return \"Works\"\n... \n>>> foo(1)\n'Works'\n```\n\nAs you can see I am passing an int value and returning a str. However the ```\n__annotations__```\n will be set to the respective values.\n```\n>>> foo.__annotations__ \n{'return': <class 'list'>, 'a': <class 'str'>}\n```\n\n\nPlease go through PEP 483 for more about Type hints. Also see What are type hints in Python 3.5??\nKindly note that this is available only for Python 3.5 and upwards. This is mentioned clearly in PEP 484.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Russian Peasant Multiplication\r\n                \r\nHere is my short implementation of Russian Peasant Multiplication. How can it be improved?\n\nRestrictions : only works when a>0,b>0\n\n```\nfor(p=0;p+=(a&1)*b,a!=1;a>>=1,b<<=1);\n```\n\n    ", "Answer": "\r\nIt can be improved by adding whitespace, proper indentation, and a proper function body:\n\n```\nint peasant_mult (int a, int b) {\n  for (p = 0;\n       p += (a & 1) * b, a != 1;\n       a /= 2, b *= 2);\n  return p;}\n```\n\n\nSee? Now it's clear how the three parts of the ```\nfor```\n declaration are used.  Remember, programs are written mainly for human eyes.  Unreadable code is always bad code.\n\nAnd now, for my personal amusement, a tail recursive version:\n\n\n(defun peasant-mult (a b &optional (sum 0))\n  \"returns the product of a and b,\n   achieved by peasant multiplication.\"\n  (if (= a 1)\n      (+ b sum)\n      (peasant-mult (floor (/ a 2))\n                    (* b 2)\n                    (+ sum (* b (logand a 1))))))\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Javascript Multiplication Timetable\r\n                \r\nI am trying to create a Javascript Multiplication Timetable for any number entered in the input box. So that when I click the button \"Generate\" it would produce a multiplication of numbers from 1 to 12 and then print out its result in HTML.\nThe Output result would then be printed in HTML Table. So far I have created the following code.\n\n```\n<!DOCTYPE HTML PUBLIC>\n\n<html>\n<head>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>5 Multiplication Table</title>\n<!--<script type=\"text/javascript\" src=\"timetable.js\"></script> -->\n</head>\n<body>\n   <script>\n      function timesTable(){\n      for (var i = 0; i <= 12; i++){\n          var number1 ={}; //Empty placeholder for input\n          var number1 = +document.getElementById(\"number1\").value;\n          var input = number1 * i;\n          var generate = +document.getElementById(\"answers\").value = input;   \n          }\n        }\n   </script>\n   <table>\n     <tr>\n        <td>Time Table for:</td>\n        <td>\n           <input type=\"text\" id = \"num1\" /></td>\n        <td rowspan=\"2\">\n           <input type=\"button\" value=\"Generate\" onclick=\"timesTable()\"/>\n        </td>\n        <td style=\"text-align:right\" id=\"answers\">Time Table:</td>\n    </tr>\n  </table>\n</body>\n</html>\n```\n\n    ", "Answer": "\r\nFirstly, you're going to have to parse the users's input as a value - ```\nparseFloat```\n or ```\nparseInt```\n will work for that, depending on whether you want a floating point or integer value .\n\nSecondly, you'll probably want a new table row for each multiplier and product: for example, \n\n```\n<tr><td>0</td><td>0</td></tr>\n<tr><td>1</td><td>42</td></tr>\n<tr><td>2></td><td>84</td></tr>\n```\n\n\netc.  The tricky thing here is being able to add these to the end of the table on user input, and then remove them again when the button is next pressed. Though I like keeping things basic myself, I would definitely encourage you to use JQuery to do the html updating of the table - otherwise, finding each of the rows you added is just painful.  You can use something like\n\n```\n$(\".timestable\").remove()\n```\n\n\nto remove all/any previous timestable rows (http://api.jquery.com/remove/), and then code such as \n\n```\n$('#mytable').append(\"<tr class='timestable'>...</tr>\")\n```\n\n\nto write out each row of the new (or first) times table (http://api.jquery.com/append/)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "ARM Assembly Multiplication Error\r\n                \r\nI'm having a problem trying to multiply two numbers and store them in a memory location in ARM assembly.  I'm simulating an ARM Cortex M0 Plus.  Everything seems to be working fine when I comment out the multiplication.  I'm not sure whether I need to use MUL or MULS but either way I don't see why it's not working.  The equation I'm trying to solve is:\n\n```\nA = 2\nB = 4\nC = 6\nD = A+(C*B)-2\n```\n\n\nWhen I uncomment the multiplication the error I get is \"Error: could not load file.  Debugger aborted!\"  *Error was caused by registers in an incorrect order.  It's easier to add location first, then the registers used to multiply\n\nCode:\n\n```\n    AREA |.text|, CODE, READONLY, ALIGN=2\n    EXPORT __main\n\n    ;equate x20000000 with some x\nA   EQU 0x20000000\nB   EQU 0x20000004\nC   EQU 0x20000008\nD   EQU 0x2000000C\n\n__main\n    ;A = 2\n    MOVS R0, #2\n    ;move pointer to =0x20000000\n    LDR R7, =A\n    ;Store R0 in memory cell of address R7\n    STR R0, [R7]\n\n    ;B = 4\n    MOVS R0, #4\n    LDR R7, =B\n    STR R0, [R7]\n\n    ;C = 6\n    MOVS R0, #6\n    LDR R7, =C\n    STR R0, [R7]\n\n    ;A+(C*B)-2\n    LDR R7, =C\n    LDR R0, [R7]\n    LDR R7, =B\n    LDR R1, [R7]\n;   MUL R0, R1 ;C*B\n\n;EDIT FIXED above line should be:\n    MULS R0, R1, R0\n;   This stores in location R0, multiplication R1, R0\n\n    LDR R7, =A\n    LDR R1, [R7]\n    ADDS R0, R1 ;A+(C*B)\n    SUBS R0, #2 ;(A+(C*B))-2\n\n    ;D = R0\n    LDR R7, =D ;storing result in D\n    STR R0, [R7]\n\ndone\n    B done\n    END\n```\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Recursive multiplication in prolog\r\n                \r\nNew to prolog.\n\nedit: using swi-prolog\n\nI want to recursively do what the multiplication method already does in prolog without actually using the multiplication method.\n\nThe algorithm I want to implement it looks something like:\n\n```\n    multn(N1, N2, output){\n    if (n2 <=0) return output;\n    else\n        multn(N1, (N2-1), output + N1)\n    }\n```\n\n\nEx: 4*4 = 4+4+4+4 = 16\n\nedit*: only passing in positive numbers for this algo.\n\nmy knowledge db looks like:\n\n```\n    multn(Num1, 0, Result) :- Result is 0.\n\n    multn(Num1, Num2, Result) :- \n        NewNum2 = Num2 - 1, \n        multn(Num1, NewNum2, NewResult),\n        Result is Num1 + NewResult.\n```\n\n\nHowever, when I call:\n\n```\n    ?- multn(2,2,R).\n```\n\n\nIt goes on forever, why is this not stopping at the above base case?\n\nHelp is much appreciated.\n    ", "Answer": "\r\nFor integer arithmetic, use clpfd constraints. All serious Prolog systems provide them. For example, for SICStus Prolog, put ```\n:- use_module(library(clpfd))```\n in your initialisation file to make CLP(FD) constraints available in all your programs.\n\nUsing CLP(FD) constraints and some small modifications, your initial program becomes:\n\n\nint_int_prod(_, 0, 0).\nint_int_prod(Num1, Num2, Result) :- \n        NewNum2 #= Num2 - 1, \n        int_int_prod(Num1, NewNum2, NewResult),\n        Result #= Num1 + NewResult.\n\n\nAnd now the point: You obviously meant your clauses to be mutually exclusive.\n\nInsert ```\nNum2 #> 0```\n at an appropriate place to do that!\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication with threads\r\n                \r\nI want to multiplication matrix.When I use Parallel.For,single thread is slower than multi thread.But when I use two threads, single thread is faster than two threads.\nI want to multiplication matrix with use two threads. What is my error ? I don't understand.  Thank you for your answers..\n\n```\n class carp\n {\n     double[,] a = new double[300, 300];\n     double[,] b = new double[300, 300];\n     double[,] c = new double[300, 300];\n     int indis = 0;\n\n     public carp(double[,] a, double[,] b, double[,] c,int i)\n     {\n         this.a = a;\n         this.b = b;\n         this.c = c;\n         indis = i;\n     }\n     public void matrixloop()\n     {\n         Thread t1;\n         Thread t2;\n         ThreadStart starter;\n         ThreadStart starter2;\n         int s = a.GetLength(0);\n         for (int i = 0; i < s; i++)\n         {\n             for (int j = 0; j < s; j++)\n             {\n\n                starter = () => carpı(i,s,j);\n                 starter2 = () => carpı(i, s, j+1);\n\n               t1=new Thread(starter);\n                 t2 = new Thread(starter);                        \n                 t1.Start();\n                 t2.Start();\n                 t1.Join();\n                 t2.Join();\n                 j = j + 1;                     \n\n             }\n         }            \n     }\n\n     private void carpı(int i, int s, int j)\n     {\n         //multiplication operation\n         double v = 0;\n\n         for (int k = 0; k < s; k++)\n         {\n             v += a[i, k] * b[k, j];\n         }\n\n         c[i, j] = v + 1;            \n     }        \n }\n```\n\n    ", "Answer": "\r\nThis does what you want using two ```\nBackgroundWorker```\n objects\n\n```\npublic class MatrixCalc\n{\n    readonly double[,] a, b, c;\n    readonly int a_rows, a_cols, b_rows, b_cols, c_rows, c_cols;\n    bool result_ok;\n    int thread_count;\n    BackgroundWorker bw1, bw2;\n    AutoResetEvent re;\n\n    public MatrixCalc(double[,] a, double[,] b, double[,] c)\n    {\n        a_rows=a.GetLength(0);\n        a_cols=a.GetLength(1);\n        b_rows=b.GetLength(0);\n        b_cols=b.GetLength(1);\n        c_rows=c.GetLength(0);\n        c_cols=c.GetLength(1);\n        // keep references of arrays\n        this.a=a;\n        this.b=b;\n        this.c=c;\n    }\n\n    public void Multiply()\n    {\n        result_ok=false;\n        this.bw1=new BackgroundWorker();\n        this.bw2=new BackgroundWorker();\n        this.re=new AutoResetEvent(false);\n        bw1.WorkerSupportsCancellation=true;\n        bw1.DoWork+=new DoWorkEventHandler(bw_DoWork);            \n        bw1.RunWorkerCompleted+=new RunWorkerCompletedEventHandler(bw_RunWorkerCompleted);\n        bw1.RunWorkerAsync(0);\n        bw2.WorkerSupportsCancellation=true;\n        bw2.DoWork+=new DoWorkEventHandler(bw_DoWork);\n        bw2.RunWorkerCompleted+=new RunWorkerCompletedEventHandler(bw_RunWorkerCompleted);\n        bw2.RunWorkerAsync(1);\n        re.WaitOne();\n        re.WaitOne();\n    }\n    public bool OK { get { return result_ok; } }\n    public void Cancel()\n    {\n        bw1.CancelAsync();\n        bw2.CancelAsync();\n        re.WaitOne();\n        re.WaitOne();\n    }\n\n    void bw_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n    {\n        thread_count--;\n        this.result_ok=(!e.Cancelled)&&(thread_count==0);\n    }\n\n    void bw_DoWork(object sender, DoWorkEventArgs e)\n    {\n        thread_count++;\n        if(!e.Cancel)\n        {\n            var offset=(int)e.Argument;\n            for(int i=0; i<a_rows; ++i)\n            {\n                // This is the trick. Start from column 0 or 1\n                // and skip over one column.\n                //\n                // Thread 1 Columns : 0,2,4,6,...\n                // Thread 2 Columns:  1,3,5,7,...\n                //\n                for(int j=offset; j<b_cols; ++j, ++j)\n                {\n                    var sum =InnerLoop(i, j);\n                    lock(c)\n                    {\n                        c[i, j]=sum;\n                    }\n                    // Debug.WriteLine(\"C[{0},{1}]={2}\", i, j, sum);\n                }\n            }\n        }\n        re.Set();\n    }\n\n    public double InnerLoop(int a_row, int b_col)\n    {\n        double sum=0;\n        for(int i=0; i<a_cols; i++)\n        {\n            sum+=a[a_row, i]*b[i, b_col];\n        }\n        return sum;\n    }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        const int N=5;\n        double[,] a = new double[N,N], b=new double[N,N], c=new double[N,N];\n        MatrixCalc calc=new MatrixCalc(a, b, c);\n        // Fill in some values into arrays\n        for(int i=0; i<N; i++)\n        {\n            a[i, i]=1;\n            b[i, i]=1;\n            if(i>0)\n            {\n                b[i, 0]=-i;\n                a[0, i]=i;\n            }\n        }\n\n        calc.Multiply();\n\n        // Debug.WriteLine(\"Result: {0}\", calc.OK);\n    }\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Error in Multiplication of matrix [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question needs debugging details. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     Edit the question to include desired behavior, a specific problem or error, and the shortest code necessary to reproduce the problem. This will help others answer the question.\r\n                \r\n                    \r\n                        Closed 6 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nError in Multiplication of matrixError in Multiplication of matrixError in Multiplication of matrix\n\n```\nMatrix operator * (Matrix tmp)\n{\n    Matrix prod;\n    prod.size = size;\n    prod.ptr = new int *[size];\n\n    for(int i=0; i<size; i++)\n\n        prod.ptr[i] = new int [size];\n\n        for(int i=0; i<size; i++)\n        {\n            for(int j=0; j<size; j++)\n            {\n                for(int k=0; k<size; k++)\n                {\n                     *(*(prod.ptr+i)+j) += *(*(ptr+i)+k) * *(*(tmp.ptr+k)+j);\n                }\n            }\n        }           \n    return prod;\n}\n```\n\n    ", "Answer": "\r\nBefore you proceed with the multiplication, don't forget to initialize the elements of you ```\nprod```\n matrix to 0, because they will then accumulate sums.\n\n\n```\nfor(int i=0; i<size; i++)\n    prod.ptr[i] = new int [size];\n```\n\n\n\nAfter this, initialize the elements of the result matrix to 0:\n\n```\nfor(int i=0; i<size; i++) for(int j=0; j<size; j++)\n        prod.ptr[i][j] = 0;\n```\n\n\np.s: your code works only for square matrices (#rows = #columns)\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix multiplication in Python\r\n                \r\nHello (excuse my English), I have a big doubt in python with matrix multiplication, I create a list of lists and multiplied by a scaling matrix, this is what I've done and I can not alparecer perform a multiplication operation problem with indexes, I check with paper and pencil and it works, I'm doing something bad to accommodate indexes or am I wrong accommodating matrices from the beginning?\n\n```\ndef main():\nif len(sys.argv) > 1:\n    v = int(sys.argv[1])\nelse:\n    print \"error python exe:\"\n    print \"\\tpython <programa.py> <num_vertices>\"\nA = []\nfor i in range(v):\n    A.append([0]*2)\nfor i in range(v):\n    for j in range(2):\n        A[i][j] = input(\"v: \")  \n\n\nprint A \n    Escala(A)\n\ndef Escala(A):\n    print \"Escala\"\n    sx = input(\"Sx: \")\n    sy = input(\"Sy: \")\n    S = [(sx,0),(0,sy)]\n    print S\n    M = mult(S,A)\n    print M\n\n\n\ndef mult(m1,m2):\nM = zero(len(m1),len(m2[0])) \n    for i in range(len(m2)):   \n        for j in range(len(m2[0])): \n            for k in range(len(m1)): \n                M[i][j] += m1[k][j]*m2[k][j]\n    print M                 \n    return M\n\ndef zero(m,n):\n# Create zero matrix\nnew_matrix = [[0 for row in range(n)] for col in range(m)]\nreturn new_matrix\n```\n\n    ", "Answer": "\r\nThis seems wrong to me:\n\n```\nM[i][j] += m1[k][j]*m2[k][j]\n```\n\n\nshouldn't it be:\n\n```\nM[i][j] += m1[i][k]*m2[k][j]\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do I match any character across multiple lines in a regular expression?\r\n                \r\nFor example, this regex\n\n```\n(.*)<FooBar>\n```\n\n\nwill match:\n\n```\nabcde<FooBar>\n```\n\n\nBut how do I get it to match across multiple lines?\n\n```\nabcde\nfghij<FooBar>\n```\n\n    ", "Answer": "\r\nTry this:  \n\n```\n((.|\\n)*)<FooBar>\n```\n\n\nIt basically says \"any character or a newline\" repeated zero or more times.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Karatsuba multiplication in Python : execution time\r\n                \r\nI have recently learned Karatsuba multiplication. In order to fully understand this concept, I have attempted to write the code in Python and compared the running time against classical multiplication. Although the results are equal, the execution time of karatsuba is still the lowest, despite I am using recursive calls. What's wrong with my approach? Some helps would definitely allow me to understand more about algorithm design.\n\nBest\n\nJP\n\n```\nprint('Karatsuba multiplication in Python')\nx=raw_input(\"first_number=\")\ny=raw_input(\"second_number=\")\nprint('------------------------')\nx=int(x)\ny=int(y)\nimport math\nimport time\ndef karatsuba(x,y):\n\n  x=str(x)\n  y=str(y)\n\n  len_x=len(x)\n  len_y=len(y)\n\n  if(int(len_x)==1 or int(len_y)==1):    \n    return int(x)*int(y)\n  else:\n\n    B=10\n    exp1=int(math.ceil(len_x/2.0))\n    exp2=int(math.ceil(len_y/2.0))\n    if(exp1<exp2):\n      exp=exp1\n    else:\n      exp=exp2\n    m1=len_x-exp\n    m2=len_y-exp\n    a=karatsuba(int(x[0:m1]),int(y[0:m2]))\n    c=karatsuba(int(x[m1:len_x]),int(y[m2:len_y]))\n    b=karatsuba(int(x[0:m1])+int(x[m1:len_x]),int(y[0:m2])+int(y[m2:len_y]))-a-c\n    results=a*math.pow(10,2*exp) + b*math.pow(10,exp) + c\n    return int(results)\n\nstart_time=time.time()\nctrl = x*y\ntpt=time.time() - start_time\nprint x,'*',y,'=',ctrl\nprint(\"--- %s seconds ---\" % tpt)\n\nstart_time=time.time()\noutput=karatsuba(x,y)\ntpt=time.time() - start_time\nprint 'karatsuba(',x,',',y,')=',output\nprint(\"--- %s seconds ---\" % tpt)\n```\n\n    ", "Answer": "\r\n\nKaratsuba multiplication has bigger overhead then classical binary multiplication\n\nthe complexity is better but the overhead cause that karatsuba is faster for bigger numbers. The better is Karatsuba coded the less the treshold operands size.\nI see in your code that you convert number to string to get digit count\n\nthat is very slow operation especially for big numbers use logarithms (constant binary to decadic digits ratio) and binary bit count instead. Look here for ideas on how to code Karatsuba faster (code is in C++)\nusage of pow\n\nanother slow down use table of powers of 10 instead\nwhat are you comparing it to? (originally asked by Padraic Cunningham)\n\nKaratsuba is faster because it does operations on lower bit-count variables !!! I do not code in Phyton at all so I can missing something (like arbitrary int) but I do not see anywhere you lower the data-type with lowering the bit-count so you will be always slower !!!. Also nice will be to add example of slow multiplication you are comparing the times to like binary or radix multiplication ... (add what you use). If you use just ```\n*```\n operator then if you are on some bigint lib then it is possible you are comparing Karatsuba with Karatsuba or even Schönhage-Strassen\ntime measurement\n\nhow do you measure time ? The times should be bigger then 10ms if not loop the computations ```\nN```\n times and measure the whole thing to avoid accuracy problems. Also take in mind scheduling granularity of OS look here if you have no idea what I am writing about \n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Print Multiplication Table\r\n                \r\nI want to print a multiplication table of user input number. But nothing's happening in the click But what's the mistake? or have I jump into this program early?\n\n```\n<body>\n<p>Multiplication table</p>\n<input placeholder=\"Enter the number\" type=\"text\" name=\"number\" id=\"quest\"/>\n<br />\n<button onclick=\"multFunction()\">Process</button>\n<br />\n\n<p id=\"multiply\"></p>\n\n<script>\n    function multFunction() {\n        var a = document.getElementsById(\"quest\").value;\n        var i = 1;\n        for (i = 1 ; i < 11 ; i++) {\n            var c = parseInt(a) * parseInt(i);\n            document.getElementById(\"multiply\").innerHTML = a + \"x\" + i + \"=\" + c;\n        }\n\n    }\n</script>\n```\n\n\n\n    ", "Answer": "\r\nThere's a couple of mistakes in your code:\n\n```\nvar a = document.getElementsById(\"quest\").value;\n```\n\n\nShould be: \n\n```\nvar a = document.getElementById(\"quest\").value;\n//                         ^ No \"s\" there.\n```\n\n\nNext, you don't want to replace the ```\ninnerHTML```\n each time, you want to add a new row to it, instead. However, writing to ```\ninnerHTML```\n that often isn't a good idea. (each write to it causes your browser to re-parse the DOM)\nReplace: \n\n```\ndocument.getElementById(\"multiply\").innerHTML = a + \"x\" + i + \"=\" + c;\n```\n\n\nWith:\n\n```\nresult += a + \" x \" + i + \" = \" + c + '</br>';\n```\n\n\nAnd add ```\nresult = '';```\n at the front of your function. Then, after the loop, write ```\nresult```\n to the ```\ninnerHTML```\n\n\nHere's a working demo:\n\n\r\n\r\n```\nfunction multFunction() {\r\n    var a = document.getElementById(\"quest\").value;\r\n    var i = 1;\r\n    var result = '';\r\n    for (i = 1 ; i < 11 ; i++) {\r\n        var c = parseInt(a) * parseInt(i);\r\n        result += a + \" x \" + i + \" = \" + c + '</br>';\r\n    }\r\n    document.getElementById(\"multiply\").innerHTML = result;\r\n}```\n\r\n```\n<p>Multiplication table</p>\r\n<input placeholder=\"Enter the number\" type=\"text\" name=\"number\" id=\"quest\"/>\r\n<br />\r\n<button onclick=\"multFunction()\">Enter the number</button>\r\n<br />\r\n\r\n<p id=\"multiply\"></p>```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to get the Cartesian product of multiple lists\r\n                \r\nHow can I get the Cartesian product (every possible combination of values) from a group of lists?\nFor example, given\n```\nsomelists = [\n   [1, 2, 3],\n   ['a', 'b'],\n   [4, 5]\n]\n```\n\nHow do I get this?\n```\n[(1, 'a', 4), (1, 'a', 5), (1, 'b', 4), (1, 'b', 5), (2, 'a', 4), (2, 'a', 5), ...]\n```\n\n\nOne common application for this technique is to avoid deeply nested loops. See Avoiding nested for loops for a more specific duplicate. Similarly, this technique might be used to \"explode\" a dictionary with list values; see Combine Python Dictionary Permutations into List of Dictionaries .\nIf you want a Cartesian product of the same list with itself multiple times, ```\nitertools.product```\n can handle that elegantly. See Operation on every pair of element in a list or How can I get \"permutations with repetitions\" from a list (Cartesian product of a list with itself)?.\nMany people who already know about ```\nitertools.product```\n struggle with the fact that it expects separate arguments for each input sequence, rather than e.g. a list of lists. The accepted answer shows how to handle this with ```\n*```\n. However, the use of ```\n*```\n here to unpack arguments is fundamentally not different from any other time it's used in a function call. Please see Expanding tuples into arguments for this topic (and use that instead to close duplicate questions, as appropriate).\n    ", "Answer": "\r\nUse ```\nitertools.product```\n, which has been available since Python 2.6.\n```\nimport itertools\n\nsomelists = [\n   [1, 2, 3],\n   ['a', 'b'],\n   [4, 5]\n]\nfor element in itertools.product(*somelists):\n    print(element)\n```\n\nThis is the same as:\n```\nfor element in itertools.product([1, 2, 3], ['a', 'b'], [4, 5]):\n    print(element)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Overloading Multiplication Operator\r\n                \r\nI am working on an assignment for my c++ class. We are having to overload several operators such as +, -, !=, =, etc. Well, I have all of them figured out except the multiplication. Everything I have tried gives an overflow or just doesn't compile. Not sure what I need for it. \n\nHere is the header file that holds my overloads.\n\n```\n#ifndef COMPLEXNUMBER_H\n#define COMPLEXNUMBER_H\n#include<iostream>\nusing namespace std;\n\nclass ComplexNumber{\npublic:\n\n    double real, imaginary;\n    ComplexNumber(){\n        real = 0;\n        imaginary = 0;\n    }\n    ComplexNumber(double a, double b){\n        real = a;\n        imaginary = b;\n    }\n    ComplexNumber(double a){\n\n        real = a;\n        imaginary = 0;\n\n    }\n\n    ComplexNumber & operator= (const ComplexNumber & rhs){\n\n        if(this == &rhs){\n\n            return *this;\n\n        }\n        else{\n\n            real = rhs.imaginary;\n            imaginary = rhs.imaginary;\n        }\n\n        return *this;\n    }\n\n    ComplexNumber & operator+= (const ComplexNumber &rhs){\n\n        real += rhs.real;\n        imaginary += rhs.imaginary;\n        return *this;\n\n    }\n\n    ComplexNumber & operator-= (const ComplexNumber &rhs){\n\n        real -= rhs.real;\n        imaginary -= rhs.imaginary;\n        return *this;\n\n    }\n\n    const ComplexNumber operator+ (const ComplexNumber &rhs){\n\n        ComplexNumber result = *this;\n        result += rhs;\n        return result;\n\n    }\n\n    const ComplexNumber operator- (const ComplexNumber &rhs){\n\n        ComplexNumber result = *this;\n        result -= rhs;\n        return result;\n\n    }\n\n    const ComplexNumber operator* (const ComplexNumber &rhs){\n\n        return *this * rhs;\n\n    }\n\n    friend ostream & operator<< (ostream &out, const ComplexNumber &c){\n\n        out << \"(\" << c.real << (c.imaginary<0?\" - \":\" + \") << abs(c.imaginary) << \" i)\";\n        return out;\n\n    }\n\n    friend istream & operator>> (istream & in, ComplexNumber &c){\n\n        in >> c.real >> c.imaginary;\n        return in;\n\n    }\n\n    operator double(){\n\n        return real;\n\n    }\n\n    bool operator== (const ComplexNumber & rhs) const {\n\n        bool result = (this->real == rhs.real) && (this->imaginary == rhs.imaginary);\n        return result;\n\n    }\n\n    bool operator!= (const ComplexNumber &rhs) const{\n\n        return !(*this == rhs);\n\n    }\n};\n\n#endif\n```\n\n\nI know that multiplication operator is way off, but its just what I have at the moment. Here it is on its own. Any ideas would be greatly appreciated!!\n\n```\nconst ComplexNumber operator* (const ComplexNumber &rhs){\n\n            return *this * rhs;\n\n        }\n```\n\n    ", "Answer": "\r\nIt gives you an overflow because of the way you call it. With your call, you are multiplying  a complex number with a complex number, and it just keeps calling the same operator without doing anything. You could try to use some basic math and derive the formula for complex number multiplication. Specifically, let's say we have two complex numbers Z1 and Z2. Let Z1 = a + bi, where a is the real part, and b is the imaginary part, and Z2 = c + di, where c is the real part, and d is the imaginary part. We have Z1 * Z2 = (a + bi)(c + di) = ( ac + adi + cbi - bd ). Now, we separate the real and the imaginary part, the real part here is everything without i, so ac - bd, and the imaginary part would be ad + cb. Now, use that in the terms of your class members, and you would get something like this:\n\n```\nconst ComplexNumber operator* (const ComplexNumber &rhs)\n{\n    ComplexNumber result;\n    result.real = real * rhs.real - imaginary * rhs.imaginary;\n    result.imaginary = real * rhs.imaginary + imaginary * rhs.real;\n    return result;\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "multiplication speed for different primitive types\r\n                \r\nDoes multiplication speed are the same for byte, short, int, and long or it grows logarithmically, linearly, exponentially?\nI wrote a small program to test it. the result all returns 0;\n\n```\n#include <unistd.h>\n#include <chrono>\n#include <iostream>\n\nusing namespace std;\nusing namespace std::chrono;\n\nint main()\n{\n    short a = 0xffea, b = 0xffaa;\n    int result, ia = 0xffeaffae, ib = 0xeaffaeff;\n    long iresult, la = 0xffeaffaeffdaffad, lb = 0xeaffaeffdaffadff;\n    long long lresult;\n\n    auto start = high_resolution_clock::now();\n    result = a * b;\n    auto end = high_resolution_clock::now();\n    auto dur = duration_cast<microseconds>(end - start);\n\n    cout << \"short multiplication : \" << dur.count() << endl;\n\n    start = high_resolution_clock::now();\n    iresult = ia * ib;\n    end = high_resolution_clock::now();\n    dur = duration_cast<microseconds>(end - start);\n\n    cout << \"int multiplication : \" << dur.count() << endl;\n\n    start = high_resolution_clock::now();\n    lresult = la * lb;\n    end = high_resolution_clock::now();\n    dur = duration_cast<microseconds>(end - start);\n\n    cout << \"long multiplication : \" << dur.count() << endl;\n\n    return 0;\n }\n```\n\n\nI assume a 64bits processor can compute primitive types in same speed;\n\nThanks\n    ", "Answer": "\r\nIt is machine dependent. For native datatypes, the number of cycles consumed for the multiplication instructions is relevant. To definitely tell the used instructions, use inline assembly or check the assembly output. For intel processors, this document lists cpu cycles for many instructions.\n\nThe rtdsc instruction, amongst others like cpuid might give you a rough idea about how many cpu cycles are used by parts of your code but you're probably better of studying assembly or profiling your application.\n\nBut most of the time, none of this is relevant for practice. They take around one cycle, that is something like around 0,000000001 seconds.\n\nIn most cases, you can stick to your assumption and regard multiplication to have the same cost for all native datatypes.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "On integer multiplication, overflow, and information loss\r\n                \r\nI'm reading through Chapter 3 of Joshua Bloch's Effective Java.  In Item 8: Always override hashCode when you override equals, the author uses the following combining step in his hashing function:\n\n```\nresult = 37 * result + c;\n```\n\n\nHe then explains why 37 was chosen (emphasis added):\n\n\n  The multiplier 37 was chosen because it is an odd prime. If it was even and\n  the multiplication overflowed, information would be lost because multiplication\n  by two is equivalent to shifting. The advantages of using a prime number are less\n  clear, but it is traditional to use primes for this purpose.\n\n\nMy question is why does it matter that the combining factor (37) is odd?  Wouldn't multiplication overflow result in a loss of information regardless of whether the factor was odd or even?\n    ", "Answer": "\r\nConsider what happens when a positive value is repeatedly multiplied by two in a base-2 representation -- all the set bits eventually march off the end, leaving you with zero. \n\nAn even multiplier would result in hash codes with less diversity.\n\nOdd numbers, on the other hand, may result in overflow, but without loss of diversity. \n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "creating a multiplication table using JOptionPane\r\n                \r\nI have an assignment due tomorrow, I finished it, I just keep getting one error. Well its not exactly an error as much as it is my output is not the output my teacher wants. \n\nMy teacher wants me to create a multiplication table using ```\nJOptionPane```\n \n\nAnd this is what I have so far:\n\n```\nimport javax.swing.JOptionPane;\n\npublic class assign3 {\n\npublic static void main(String[] args) {\n\n        String Boundary1 = JOptionPane.showInputDialog(null, \"Please enter the first boundary of the multiplication table.\");\n        String Boundary2 = JOptionPane.showInputDialog(null, \"Please enter the second boundary of the multiplication table.\");\n\n        int X = Integer.parseInt(Boundary1);\n        int Y = Integer.parseInt(Boundary2);\n        int j = 1;\n        String Result = \"\";\n        int x = 1;\n\n        while (x <= X){\n            for(int i = 1;i<= Y; i++ ){\n                j = i * x;\n                Result = Result + j + \"    \";\n            }\n            x++;\n            Result = Result + \"\\n\";\n        }\n        JOptionPane.showMessageDialog(null, Result);\n    }\n}\n```\n\n\nMy output shows up like this.\n\nhttps://www.dropbox.com/s/ulp1gj9sqi94d3a/IMG_20140114_162054.jpg\n\nBut my teacher wants the output to show up like this.\n\nhttps://www.dropbox.com/s/6gtexqoj3rs7xvl/IMG-20140114-WA0000.jpg\n\nMy code does not have the correct spacing between the digits, I have been trying to fix it somehow for sometime with no luck.\n    ", "Answer": "\r\nOne solution(assumes ```\nresult```\n already has needed tabs(```\n\\t```\n)):\n\n```\nJTextArea jf=new JTextArea(result);\n\njf.setEditable(false);\njf.setOpaque(false);\n\nJOptionPane.showMessageDialog(null, jf);\n```\n\n\nEDIT:\n\n```\npublic static void main(String[] args) {\n\n        String Boundary1 = JOptionPane.showInputDialog(null, \"Please enter the first boundary of the multiplication table.\");\n        String Boundary2 = JOptionPane.showInputDialog(null, \"Please enter the second boundary of the multiplication table.\");\n\n        int X = Integer.parseInt(Boundary1);\n        int Y = Integer.parseInt(Boundary2);\n        int j = 1;\n        String Result = \"\";\n        int x = 1;\n\n        while (x <= X) {\n            for (int i = 1; i <= Y; i++) {\n                j = i * x;\n                Result = Result + j + \"\\t\";\n            }\n            x++;\n            Result = Result + \"\\n\";\n        }\n        JTextArea jt=new JTextArea(Result);\n        jt.setEditable(false);\n        jt.setOpaque(false);\n        jt.setTabSize(3);\n        JOptionPane.showMessageDialog(null, jt);\n    }\n```\n\n\nO/P:\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Numpy ndarray multiplication switching to matrix multiplication\r\n                \r\nThis is the error I am getting:\n\n```\nFile \"/data/eduardoj/linear.py\", line 305, in _fit_model\n        de_dl = (dl_dt + de_dt) * dt_dl\n      File \"/data/eduardoj/MSc-env/lib/python3.4/site-packages/numpy/matrixlib/defmatrix.py\", line 343, in __mul__\n        return N.dot(self, asmatrix(other))\n    ValueError: shapes (1,53097) and (1,53097) not aligned: 53097 (dim 1) != 1 (dim 0)\n```\n\n\nAnd this is the piece of code of numpy where it is crashing:\n\n```\n   340     def __mul__(self, other):                                           \n>* 341         if isinstance(other, (N.ndarray, list, tuple)) :                \n   342             # This promotes 1-D vectors to row vectors                  \n   343             return N.dot(self, asmatrix(other))                         \n   344         if isscalar(other) or not hasattr(other, '__rmul__') :          \n   345             return N.dot(self, other)                                   \n   346         return NotImplemented  \n```\n\n\n(There is a break point there ```\n>*```\n )\n\nIn my script I have a loop containing the following line:\n\n```\nde_dl = (dloss_dt + dr_dt) * dt_dl\n```\n\n\nThe expected types and shapes for ```\nde_dl```\n, ```\ndloss_dt```\n, ```\ndr_dt```\n and ```\ndt_dl```\n are:\n\n```\nndarray float32 (1, 53097)\n```\n\n\nSo, I just want to compute the element-wise multiplication. I am using pudb3 for debugging my script. I checked that in the first iteration (```\ni == 0```\n) it works great (initially producing zeros). I notice that for this first iteration the thread did NOT reach the break-point I set. In the next iteration (```\ni==1```\n), I decided to stopped right before to calling the multiplication just to make sure the type and shape of ```\ndloss_dt```\n, ```\ndr_dt```\n and ```\ndt_dl```\n were the still the same. They were.\n\nThough they were the same, it seems that the program went through a different set of steps and some how ended in this ```\nN.dot```\n multiplication.\n\nSo, I am asking for any clue of what might be keeping me from operating just a simple element-wise multiplication.\n    ", "Answer": "\r\nThe snippet of numpy source code you showed in your question corresponds to the ```\n__mul__```\n method of ```\nnp.matrixlib.defmatrix.matrix```\n.\n\nThis method gets called when you right-multiply a matrix object with another matrix or array, i.e. ```\nA * B```\n is equivalent to ```\nA.__mul__(B)```\n if ```\nA```\n is a matrix (it doesn't matter whether ```\nB```\n is an ndarray or matrix).\n\nThe only way that method could possibly be called is if ```\n(dl_dt + de_dt)```\n is a matrix (or some other derived matrix class) rather than an ndarray. Therefore, either ```\ndl_dt```\n or ```\nde_dt```\n is being cast to a matrix somewhere in your code.\n\nSince ```\n__mul__```\n is not called on the first iteration, this must occur somewhere after line 305 in your code (```\nde_dl = (dl_dt + de_dt) * dt_dl```\n).\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication of fixed point numbers\r\n                \r\nI have a very basic question. In my program, i am doing multiplication of two fixed point numbers, which is given below. My inputs are of Q1.31 format and output also should be of same format. In order to do this, i am storing the result of multiplication in a temporary 64 bit variable and then doing some operations to get the result in required format. \n\n```\nint conversion1(float input, int Q_FORMAT)\n{\nreturn ((int)(input * ((1 << Q_FORMAT)-1)));\n}\n\nint mul(int input1, int input2, int format)\n{\n    __int64 result;\n    result = (__int64)input1 * (__int64)input2;//Q2.62 format\n    result = result << 1;//Q1.63 format\n    result = result >> (format + 1);//33.31 format\n    return (int)result;//Q1.31 format\n}\n\nint main()\n{\n    int Q_FORMAT = 31;\n    float input1 = 0.5, input2 = 0.5;\n    int q_input1, q_input2;\n    int temp_mul;\n    float q_muls;\n\n    q_input1 = conversion1(input1, Q_FORMAT);\n    q_input2 = conversion1(input2, Q_FORMAT);\n    q_muls = ((float)temp_mul / ((1 << (Q_FORMAT)) - 1));\n    printf(\"result of multiplication using q format = %f\\n\", q_muls);\n    return 0; \n}\n\n My question is while converting float input to integer input (and also while converting int output \n to float output), i am using (1<<Q_FORMAT)-1 format. But i have seen people using (1<<Q_FORMAT) \n directly in their codes. The Problem i am facing when using (1<<Q_FORMAT) is i am getting the \n negative of the desired result.\n```\n\n\nFor example, in my program,\n\n```\n If i use (1<<Q_FORMAT), i am getting -0.25 as the result\n But, if i use (1<<Q_FORMAT)-1, i am getting 0.25 as the result which is correct.\n```\n\n\nWhere am i going wrong? Do i need to understand any other concepts?\n    ", "Answer": "\r\nOn common platforms, ```\nint```\n is a two’s complement 32-bit integer providing 31 digits (plus a 'sign' bit). It's a bit too narrow to represent a Q1.31 number which requires 32 digits (plus a 'sign' bit).\n\nIn your example, this is manifesting as effective arithmetic overflow in the expression, ```\n1 << Q_FORMAT```\n.\n\nTo avoid this, you need to either use a type providing more digits (e.g. ```\nlong long```\n) or a fixed-point format requiring fewer digits (e.g. Q1.30). You can use ```\nunsigned```\n to fix your example but the result will be a 'sign' bit short of Q2.30.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why is naive multiplication n^2 time?\r\n                \r\nI've read that operations such as addition/subtraction were linear time, and that \"grade-school\" long multiplication is n^2 time. Why is this true?\nIsn't addition ```\nfloor(log n)```\n times, when n is the smaller operand? The same argument goes for subtraction, and for multiplication, if we make a program to do long multiplication instead of adding integers together, shouldn't the complexity be ```\nfloor(log a) * floor(log b)```\n where a and b are the operands?\n    ", "Answer": "\r\nThe answer depends on what is \"n.\" When they say that addition is O(n) and multiplication (with the naïve algorithm) is O(n^2), n is the length of the number, either in bits or some other unit. This definition is used because arbitrary precision arithmetic is implemented as operations on lists of \"digits\" (not necessarily base 10).\n\nIf n is the number being added or multiplied, the complexities would be log n and (log n)^2 for positive n, as long as the numbers are stored in log n space.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Calculates the multiplication of all elements of an array by calling the method\r\n                \r\nI need help with the multiplication of my array. This is what I've got so far and I'm not sure on how to continue. The question requires I use recursion. The output should look something like this:\n\nThe length of your array is: 6\n\nThe elements of your array are: 1 2 3 4 5 6\n\nThe multiplication of {1, 2, 3, 4, 5, 6} is 720.\n\nI don't want an exact answer but an explanation of things I can do/research, although you can provide a working code if you would like, thank you.\n\n```\n\npublic static void main(String[] args) {\n\n    Scanner userInput = new Scanner(System.in);\n\n    System.out.printf(\"The length of your array is: \");\n    int Length = Integer.parseInt(userInput.nextLine());\n    System.out.printf(\"The elements of your array are: \");\n    int[] myArray = new int[Length];\n    //Determines Length of array based on user input\n    for (int i = 0; i < Length; i ++) {\n        myArray[i] = Integer.parseInt(userInput.next());\n    }\n    //Is the defined elements in array, based on user input\n    System.out.printf(\"The multiplication is %s%n\", multiplication(myArray, 0, Length - 1));\n}\n\npublic static String multiplication(int[] myArray, int startIndex, int endIndex) {\n\n    myArray[] * 1;\n    if (startIndex == endIndex)\n        return myArray[endIndex] + \".\";\n    else\n        return myArray[startIndex]+ multiplication(myArray, startIndex + 1, endIndex);\n\n}\n```\n\n    ", "Answer": "\r\n\nThe ```\nmultiplication```\n should return ```\nint```\n or ```\nlong```\n (for multiplication the result will grow very fast)\nRemove ```\nmyArray[] * 1;```\n, no need, 1 is neutral for multiplication\nFor the stop condition ```\nstartIndex == endIndex```\n just return the element ```\nreturn myArray[endIndex];```\n. Your recuretion function is f(n) = n * f(n-1)\n\n\n```\npublic static long multiplication(int[] myArray, int startIndex, int endIndex) {\n    if (startIndex == endIndex)\n        return myArray[endIndex];\n    else\n        return myArray[startIndex] * multiplication(myArray, startIndex + 1, endIndex);\n\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "explain in Matrix Multiplication\r\n                \r\nHere is my code for matrix multiplication.\n\n```\n  #include <stdio.h>\n  main()\n  {\n     int a[10][10],b[10][10],c[10][10],m,n,o,i,j,k;\n     printf(\"Enter rows and column for matrix: \");\n     scanf(\"%d%d%d\",&m,&n,&o);\n     printf(\"\\nEnter elements of matrix 1:\\n\");\n     for(i=0;i<m;i++)\n     {\n            for(j=0;j<n;j++)\n            {\n\n                            printf(\"Enter elements a[%d][%d]: \",i,j);\n                    scanf(\"%d\",&a[i][j]);\n            }\n    }\n    printf(\"\\nEnter elements of matrix 2:\\n\");\n    for(i=0;i<n;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    printf(\"Enter elements b[%d][%d]: \",i,j);\n                    scanf(\"%d\",&b[i][j]);\n            }\n    }\n    for(i=0;i<m;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    c[i][j]=0;\n            }\n    }\n    for(i=0;i<m;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    for(k=0; k<n; ++k)\n                    {\n                            c[i][j]=c[i][j]+a[i][k]*b[k][j];\n                    }\n            }\n    }\n    printf(\"\\nOutput Matrix:\\n\");\n    for(i=0;i<m;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    printf(\"%d \\t\\t \",c[i][j]);\n            }\n            printf(\"\\n\\n\");\n    }\n}\n```\n\n\nMy question is in matrix multiplication why we initialize resultant array (```\nc[i][j]```\n) into 0 and then also add that resultant array with multiplication of both matrix i.e. ```\nc[i][j] = c[i][j]+a[i][k]*b[k][j]```\n?\nWhy we cant directly write ```\nc[i][j] = a[i][k]*b[k][j]```\n?\n    ", "Answer": "\r\nYou must initialize your matrix because each cell is a sum. These sums need initialization.\nThe initialization is usually zero since you want C=A*B.\nyou could initialize C with an hypothetical D matrix, you would then obtain C= A*B + D.\n\nedit: note that for a fixed size matrix (said 3x3) you could expand the sum with a simpler expression, and avoid an initialization.\nfor instance, A and B (and C) are 3x3 matrix, you could write something like:\n\n```\nfor(int i=0; i<3; ++i){\n    for(int j=0; j<3; ++j){\n        c[i][j] = a[i][0]*b[0][j] + a[i][1]*b[1][j] + a[i][2]*b[2][j];\n    }    \n}\n```\n\n\nThis code requires no initialization since ```\nc[i][j]```\n is fully defined from one single expression.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Large integer multiplication isn't correct\r\n                \r\nThis I s what I got so far. Overall, I just need the multiplication fix small number are good when outputting. Large numbers are displaying the wrong output.\n```\ncout << \"Enter an integer\";\nint finteger; cin >> finteger;\ncout << \"Enter another integer\";\n int sinteger; cin >> sinteger;\nint addition = finteger + sinteger;\nint subtraction = finteger - sinteger;\nint multiplication = finteger * sinteger;\n//Outputting the answers along with the equations\ncout << finteger << \" + \" << sinteger << \" = \" << addition << endl;\ncout << finteger << \" - \" << sinteger << \" = \" << subtraction << endl;\ncout << finteger << \" * \" << sinteger << \" = \" << multiplication << endl;\n```\n\n    ", "Answer": "\r\nMost likely, the multiplied result is outside the range of an ```\nint```\n on your platform. That's undefined behaviour. On some platforms the range can be as small as -32767 to +32767.\nDespite all the advances over the years C++ still remains a ridiculously difficult language in which to perform even the simplest mathematical calculations without undefined behaviour creeping in somewhere.\nThe fact is that all your expressions are vulnerable to overflow!\nIf you're building a calculator from standard input then probably the simplest thing to do is to use a multi precision library such as the one that's part of the Boost distribution. www.boost.org.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in C#\r\n                \r\nI'm new to C# and tried the following program on multiplication using Switch. The program is perfectly going thru the Switch cases, but the multiplied result is not displaying in the console. Can you please help:\n\n```\nusing System;\n\npublic class Program\n{\n public static void Main(string[] args)\n {\n    int _pLicense = 50;\n    int _sLicense = 100;\n    int _eLicense = 150;\n    String lType;\n    int nSeats;\nConsole.WriteLine(\"\\n1.Personal License\\n2.Startup License\\n3.Enterprise License\");\n        Console.WriteLine(\"Enter the license type\");\n        lType = Console.ReadLine();\n        //lType = char.Parse(Console.ReadLine());\n\n\nswitch(lType)\n    {\n        case \"1\":\n            Console.WriteLine(\"Enter the number of seats\");\n            nSeats = int.Parse(Console.ReadLine());\n            //Console.WriteLine(_pLicense);\n            int Cost = _pLicense*nSeats;\n            Console.WriteLine(\"Personal License Cost : $\", +Cost);\n            break;\n        case \"2\":\n            Console.WriteLine(\"Enter the number of seats\");\n            nSeats = int.Parse(Console.ReadLine());\n            //Console.WriteLine(_sLicense);\n            Cost = (_sLicense * nSeats);\n            Console.WriteLine(\"Startup License Cost : $\", Cost);\n            break;\n        case \"3\":\n            Console.WriteLine(\"Enter the number of seats\");\n            nSeats = int.Parse(Console.ReadLine());\n            //Console.WriteLine(_pLicense);\n            Cost = (_eLicense * nSeats);\n            Console.WriteLine(\"Enterprise License Cost : $\", Cost);\n            break;\n        default:\n        Console.WriteLine(\"Invalid Type\");\n           break;\n    }\n}\n```\n\n\n}\n    ", "Answer": "\r\nChange your ```\nConsole.Writeline```\n to \n\n```\nConsole.WriteLine($\"Personal License Cost : ${Cost}\");\n```\n\n\nand\n\n```\nConsole.WriteLine($\"Enterprise License Cost : ${Cost}\");\n```\n\n\nYou can also format Cost using ```\n{Cost:d}```\n see https://learn.microsoft.com/en-us/dotnet/standard/base-types/composite-formatting.\n\nIt is also advisable that you don't use int.Parse because it will throw an error if a character is entered. So change the code to something like\n\n```\nif(int.TryParse(Console.ReadLine(), out int nSeats)\n{\n    Console.WriteLine($\"Enterprise License Cost : ${Cost}\");\n}\nelse\n{\n    //Try again\n}\n```\n\n\nYou don't have to declare nSeats at the top, and it handles the error.\n\nThis is how I would've write the code\n\n```\npublic static void Main(string[] args)\n{\n    int nSeats = 0;\n    Console.WriteLine(\"\\n1.Personal License\\n2.Startup License\\n3.Enterprise License\");\n    Console.WriteLine(\"Enter the license type\");\n    var lType = Console.ReadLine();  //ReadLine returns a string, so it will automatically make lType a string\n    int _LicenseCost = lType == \"1\" ? 50 : lType == \"2\" ? 100 : lType == \"3\" ? 150 : 0;\n    if(_LicenseCost > 0)\n    {\n        while(true)\n        {\n            Console.WriteLine(\"Enter the number of seats\");\n            if(int.TryParse(Console.ReadLine(), out nSeats))\n                break;\n            else\n                Console.WriteLine(\"Please enter a valid number\");\n        }\n        Console.WriteLine((lType == \"1\" ? \"Personal\" : lType == \"2\" ? \"Startup\" : lType == \"3\" ? \"Enterprise\" : \"\") + $\" License Cost : ${_LicenseCost * nSeats}\");\n    }\n    else\n        Console.WriteLine(\"License type is not valid. Good bye!\");\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "explain in Matrix Multiplication\r\n                \r\nHere is my code for matrix multiplication.\n\n```\n  #include <stdio.h>\n  main()\n  {\n     int a[10][10],b[10][10],c[10][10],m,n,o,i,j,k;\n     printf(\"Enter rows and column for matrix: \");\n     scanf(\"%d%d%d\",&m,&n,&o);\n     printf(\"\\nEnter elements of matrix 1:\\n\");\n     for(i=0;i<m;i++)\n     {\n            for(j=0;j<n;j++)\n            {\n\n                            printf(\"Enter elements a[%d][%d]: \",i,j);\n                    scanf(\"%d\",&a[i][j]);\n            }\n    }\n    printf(\"\\nEnter elements of matrix 2:\\n\");\n    for(i=0;i<n;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    printf(\"Enter elements b[%d][%d]: \",i,j);\n                    scanf(\"%d\",&b[i][j]);\n            }\n    }\n    for(i=0;i<m;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    c[i][j]=0;\n            }\n    }\n    for(i=0;i<m;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    for(k=0; k<n; ++k)\n                    {\n                            c[i][j]=c[i][j]+a[i][k]*b[k][j];\n                    }\n            }\n    }\n    printf(\"\\nOutput Matrix:\\n\");\n    for(i=0;i<m;i++)\n    {\n            for(j=0;j<o;j++)\n            {\n                    printf(\"%d \\t\\t \",c[i][j]);\n            }\n            printf(\"\\n\\n\");\n    }\n}\n```\n\n\nMy question is in matrix multiplication why we initialize resultant array (```\nc[i][j]```\n) into 0 and then also add that resultant array with multiplication of both matrix i.e. ```\nc[i][j] = c[i][j]+a[i][k]*b[k][j]```\n?\nWhy we cant directly write ```\nc[i][j] = a[i][k]*b[k][j]```\n?\n    ", "Answer": "\r\nYou must initialize your matrix because each cell is a sum. These sums need initialization.\nThe initialization is usually zero since you want C=A*B.\nyou could initialize C with an hypothetical D matrix, you would then obtain C= A*B + D.\n\nedit: note that for a fixed size matrix (said 3x3) you could expand the sum with a simpler expression, and avoid an initialization.\nfor instance, A and B (and C) are 3x3 matrix, you could write something like:\n\n```\nfor(int i=0; i<3; ++i){\n    for(int j=0; j<3; ++j){\n        c[i][j] = a[i][0]*b[0][j] + a[i][1]*b[1][j] + a[i][2]*b[2][j];\n    }    \n}\n```\n\n\nThis code requires no initialization since ```\nc[i][j]```\n is fully defined from one single expression.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to print the value of a Tensor object in TensorFlow?\r\n                \r\nI have been using the introductory example of matrix multiplication in TensorFlow.\n\n```\nmatrix1 = tf.constant([[3., 3.]])\nmatrix2 = tf.constant([[2.],[2.]])\nproduct = tf.matmul(matrix1, matrix2)\n```\n\n\nWhen I print the product, it is displaying it as a ```\nTensor```\n object:\n\n```\n<tensorflow.python.framework.ops.Tensor object at 0x10470fcd0>\n```\n\n\nBut how do I know the value of ```\nproduct```\n?\n\nThe following doesn't help:\n\n```\nprint product\nTensor(\"MatMul:0\", shape=TensorShape([Dimension(1), Dimension(1)]), dtype=float32)\n```\n\n\nI know that graphs run on ```\nSessions```\n, but isn't there any way I can check the output of a ```\nTensor```\n object without running the graph in a ```\nsession```\n?\n    ", "Answer": "\r\nThe easiest[A] way to evaluate the actual value of a ```\nTensor```\n object is to pass it to the ```\nSession.run()```\n method, or call ```\nTensor.eval()```\n when you have a default session (i.e. in a ```\nwith tf.Session():```\n block, or see below). In general[B], you cannot print the value of a tensor without running some code in a session.\n\nIf you are experimenting with the programming model, and want an easy way to evaluate tensors, the ```\ntf.InteractiveSession```\n lets you open a session at the start of your program, and then use that session for all ```\nTensor.eval()```\n (and ```\nOperation.run()```\n) calls. This can be easier in an interactive setting, such as the shell or an IPython notebook, when it's tedious to pass around a ```\nSession```\n object everywhere. For example, the following works in a Jupyter notebook:\n\n```\nwith tf.Session() as sess:  print(product.eval()) \n```\n\n\nThis might seem silly for such a small expression, but one of the key ideas in Tensorflow 1.x is deferred execution: it's very cheap to build a large and complex expression, and when you want to evaluate it, the back-end (to which you connect with a ```\nSession```\n) is able to schedule its execution more efficiently (e.g. executing independent parts in parallel and using GPUs).\n\n\n\n[A]: To print the value of a tensor without returning it to your Python program, you can use the ```\ntf.print()```\n operator, as Andrzej suggests in another answer. According to the official documentation: \n\n\n  To make sure the operator runs, users need to pass the produced op to ```\ntf.compat.v1.Session```\n's run method, or to use the op as a control dependency for executed ops by specifying with ```\ntf.compat.v1.control_dependencies([print_op]```\n), which is printed to standard output. \n\n\nAlso note that:\n\n\n  In Jupyter notebooks and colabs, ```\ntf.print```\n prints to the notebook cell outputs. It will not write to the notebook kernel's console logs.\n\n\n[B]: You might be able to use the ```\ntf.get_static_value()```\n function to get the constant value of the given tensor if its value is efficiently calculable.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication int and float(double) in JavaScript [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Is floating point math broken?\r\n                            \r\n                                (33 answers)\r\n                            \r\n                    \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI want to make multiplication using ```\nJavaScript```\n. \n\nMultiplication of 2 and 0.15 is 0.3 but 3 and 0.15 is 0.44999999999999996. I want to get 0.45 such as result. How can I do it with ```\nJavaScript?```\n\n    ", "Answer": "\r\nIt's a rounding error. You may want to round your number to a fixed amount of digits, like this:\n\n```\nparseFloat((your_number).toFixed(2));\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Polynomial multiplication complexity reduction\r\n                \r\nI have been trying to figure tis ou for 3 days and have not gotten anywhere. I have to implement polynomial multiplication (multiply 2 quadratic equations). They look like: \n\n```\n( a1 x^2 + b1 x + c1 ) * ( a2 x^2 + b2 x + c2 );\n```\n\n\nBut the trickier part is to implement it in 5 coefficient multplications. I have reduced it to 6. For eg, a1 * b1, ( a1 + a2 ) * ( b1 + b2 ) count as one multiplication. But (a1 x + a2 ) * ( b1 x + b2 ) count as 4 (a1 b1, a1 b2, a2 b1, a2 b2).\n    ", "Answer": "\r\nYou may want to have a look at the Toom-3 algorithm used in multiprecision multiplication. Ref: Toom-Cook multiplication.  \n\nBasically, you eval each polynomial at x=-2,-1,0,+1,infinity using only additions and shifts, then multiply these 5 values to get the values of the product at x=-2,-1,0,+1,infinity. The final step is to get back to the coefficients of the result.\n\nFor ```\nP(X) = A*X^2 + B*X + C```\n the values at x=-2,-1,0,+1,infinity are:\n\n```\nP(-2) = 4*A - 2*B + C  (the products here are bit shifts)\nP(-1) = A - B + C\nP( 0) = C\nP(+1) = A + B + C\nP(oo) = A\n```\n\n\nThe product ```\nR(X) = T*X^4 + U*X^3 + V*X^2 + W*X + K```\n, and the values are:\n\n```\nR(-2) = 16*T - 8*U + 4*V - 2*W + K\nR(-1) = T - U + V - W + K\nR( 0) = K\nR(+1) = T + U + V + W + K\nR(oo) = T\n```\n\n\nYou know the values ```\nR(x) = P(x)*Q(x)```\n for x=-2,-1,0,+1,infinity, and you have to solve this linear system to get coefficients T,U,V,W,K.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to combine element-wise multiplication and matrix multiplication\r\n                \r\nI'm trying to combine element-wise multiplication and matrix multiplication for two matrix:\n\nMatrix 1 shape: (N, N, 3, 3)\nMatrix 2 shape: (N, N, 3, 1)\n\nI would like to perform element-wise operation for the first two dimensions (N, N), and matrix multiplication for the last two dimensions. The goal is to get a (N, N, 3, 1) matrix.\nI was not able to find a good operation in numpy, may I know if there is a proper operation for this? Thanks!\n    ", "Answer": "\r\nProbably you want this. This is essentially matrix multiplication of the inner ```\n(3, 3)```\n and ```\n(3, 1)```\n shaped matrices.\n```\nimport numpy as np\n>>> a = np.random.rand(2, 2, 3, 3)\n>>> b = np.random.rand(2, 2, 3, 1)\n>>> c = np.matmul(a, b)\n>>> c.shape\n(2, 2, 3, 1)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Which algorithm does Java use for multiplication?\r\n                \r\nThe list of possible algorithms for multiplication is quite long:\n\nSchoolbook long multiplication\nKaratsuba algorithm\n3-way Toom–Cook multiplication\nk-way Toom–Cook multiplication\nMixed-level Toom–Cook\nSchönhage–Strassen algorithm\nFürer's algorithm\n\nWhich one is used by Java by default and why? When does it switch to a \"better performance\" algorithm?\n    ", "Answer": "\r\nWell ... the ```\n*```\n operator will use whatever the hardware provides.  Java has no say in it.\nBut if you are talking about ```\nBigInteger.multiply(BigInteger)```\n, the answer depends on the Java version.  For Java 11 it uses:\n\nnaive \"long multiplication\" for small numbers,\nKaratsuba algorithm for medium sized number, and\n3-way Toom–Cook multiplication for large numbers.\n\nThe thresholds are Karatsuba for numbers represented by 80 to 239 ```\nint```\n values, an 3-way Toom-Cook for >= 240 ```\nint```\n values.  The smaller of the numbers being multiplied controls the algorithm selection.\n\n\nWhich one is used by Java by default and why?\n\nWhich ones?  See above.\nWhy?  Comments in the code imply that the thresholds were chosen empirically; i.e. someone did some systematic testing to determine which threshold values gave the best performance1.\nYou can find more details by reading the source code2.\n\n1 - The current implementation ```\nBigInteger```\n implementation hasn't changed significantly since 2013, so it is possible that it doesn't incorporate more recent research results.\n2 - Note that this link is to the latest version on Github.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "cuBLAS element-wise multiplication\r\n                \r\nSuppose i have two integer arrays in device memory (cuda c code).\nExample```\nx = [1, 2, 4, 8, 16, 32] y = [2, 5, 10, 20, 40, 50]```\n\ni want to do element-wise multiplication using cuBLAS.\nI tried this and works but i think it is not the point of cuBLAS usage:\n```\nfor (int i = 0; i < n; i++) {\n        cublasSscal(handle, 1, &x[i], &y[i], n);\n    }\n\n```\n\nand then the result is saved in y.\nResult: ```\ny = [2, 10, 40, 160, 640, 1600```\n]\nCan i do the above multiplication in cuBLAS without using for loop?\nThanks\nI expect avoid the for loop\n    ", "Answer": "\r\n\nSuppose i have two integer arrays\n\nNote that cublas doesn't have any options for handling integer data in most cases (excepting certain gemm operations that tap into tensor core, but these only support 8 bit integer or smaller.)  If you must use integer data, I would recommend the other approaches below such as writing your own kernel or using thrust.\n(I'm just copying my answer from here.)\nFor floating point data, it’s possible to use the CUBLAS dgmm function to do a vector elementwise multiply:\n```\n$ cat t2268.cu\n#include <cublas_v2.h>\n#include <iostream>\n\nint main(){\n\n  const int ds = 32;\n\n  float *d_a, *d_b, *d_c;\n  cudaMalloc(&d_a, sizeof(d_a[0])*ds);\n  cudaMalloc(&d_b, sizeof(d_b[0])*ds);\n  cudaMalloc(&d_c, sizeof(d_c[0])*ds);\n  float *h = new float[ds];\n  for (int i = 0; i < ds; i++) h[i] = i+1;\n  cudaMemcpy(d_a, h, sizeof(d_a[0])*ds, cudaMemcpyHostToDevice);\n  for (int i = 0; i < ds; i++) h[i] = 2;\n  cudaMemcpy(d_b, h, sizeof(d_b[0])*ds, cudaMemcpyHostToDevice);\n  cublasHandle_t hd;\n  cublasStatus_t stat = cublasCreate(&hd);\n  cublasSideMode_t mode = CUBLAS_SIDE_LEFT;\n  int m = ds;\n  int n = 1;\n  int lda = ds;\n  int incx = 1;\n  int ldc = ds;\n  stat = cublasSdgmm(hd, mode, m, n, d_a, lda, d_b, incx, d_c, ldc);\n  std::cout << (int)stat << std::endl;\n  cudaError_t err = cudaMemcpy(h, d_c, sizeof(d_c[0])*ds, cudaMemcpyDeviceToHost);\n  std::cout << cudaGetErrorString(err) << std::endl;\n  for (int i = 0; i < ds; i++) std::cout << h[i] << std::endl;\n}\n$ nvcc -o t2268 t2268.cu -lcublas\n$ ./t2268\n0\nno error\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n$\n```\n\nHowever its trivial to write a CUDA kernel to perform this task (it would be a trivial modification to the CUDA vectorAdd sample code, and I expect it would be faster than the above approach.\nAlso see here for thrust (and dgmm) suggestion.\nIt looks like it could probably be done with sbmv also.\nThis operation (regardless of approach used above) could be directly extended to a matrix-matrix elementwise product, simply be treating the matrices as vectors, and may in some settings be referred to as a Hadamard product.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Using omp parallel for in multiplication algorithm (BigInt multiplication)\r\n                \r\nFor educational purpose I'm developing c++ library for operating with large numbers represented as vectors of chars (```\nvector<char>```\n).\nHere is algorithm that I am using for multiplication:\n```\nstring multiplicationInner(CharVector a, CharVector b) {\n  reverse(a.begin(), a.end());\n  reverse(b.begin(), b.end());\n\n  IntVector stack(a.size() + b.size() + 1);\n\n  int i, j;\n  for (i = 0; i < a.size(); i++)\n    for (j = 0; j < b.size(); j++)\n      stack[i + j] += charToInt(a[i]) * charToInt(b[j]);\n \n\n  for (int i = 0; i < stack.size(); i++) {\n    int num = stack[i] % 10;\n    int move = stack[i] / 10;\n    stack[i] = num;\n\n    if (stack[i + 1])\n      stack[i + 1] += move;\n    else if (move)\n      stack[i + 1] = move;\n  }\n\n  CharVector stackChar = intVectorToCharVector(&stack);\n  deleteZerosAtEnd(&stackChar);\n  reverse(stackChar.begin(), stackChar.end());\n\n  return charVectorToString(&stackChar);\n};\n```\n\nThis function is called billion times in my program, so I would like to implement #pragma omp parallel for in it.\nMy question is: How can i parallelize first cycle?\nThis is what I have tried:\n```\nint i, j;\n  #pragma omp parallel for\n  for (i = 0; i < a.size(); i++) {\n    for (j = 0; j < b.size(); j++)\n      stack[i + j] += charToInt(a[i]) * charToInt(b[j]);\n  }\n```\n\nAlgorithm stops working properly.\nAdvice needed.\nEdit:\nThis variant works, but (with omp parallel for) benchmark shows it is 15x-20x slower than without it. (CPU: M1 Pro, 8 cores)\n```\n#pragma omp parallel for schedule(dynamic)\n  for (int k = 0; k < a.size() + b.size(); k++) { \n    for (int i = 0; i < a.size(); i++) {\n      int j = k - i;\n      if (j >= 0 && j < b.size()) {\n        stack[k] += charToInt(a[i]) * charToInt(b[j]);\n      }\n    }\n  }\n```\n\nThis is part of my program, where multiplication is called most often. (Miller-Rabin test)\n```\nBigInt modularExponentiation(BigInt base, BigInt exponent, BigInt mod) {\n  BigInt x = B_ONE; // 1\n  BigInt y = base;\n\n  while (exponent > B_ZERO) { // while exponent > 0\n    if (isOdd(exponent))\n      x = (x * y) % mod;\n    y = (y * y) % mod;\n    exponent /= B_TWO; // exponent /= 2\n  }\n\n  return (x % mod);\n};\n\nbool isMillerRabinTestOk(BigInt candidate) {\n  if (candidate < B_TWO)\n    return false;\n\n  if (candidate != B_TWO && isEven(candidate))\n    return false;\n\n  BigInt canditateMinusOne = candidate - B_ONE;\n  BigInt s = canditateMinusOne;\n  while (isEven(s))\n    s /= B_TWO;\n\n  for (int i = 0; i < MILLER_RABIN_TEST_ITERATIONS; i++) {\n    BigInt a = BigInt(rand()) % canditateMinusOne + B_ONE;\n    BigInt temp = s;\n    BigInt mod = modularExponentiation(a, temp, candidate);\n\n    while (temp != canditateMinusOne && mod != B_ONE && mod != canditateMinusOne) {\n      mod = (mod * mod) % candidate;\n      temp *= B_TWO;\n    }\n\n    if (mod != canditateMinusOne && isEven(temp))\n      return false;\n  }\n\n  return true;\n};\n```\n\n    ", "Answer": "\r\nYour loops do not have the proper structure for parallelization. However, you can transform them:\n```\nfor (k=0; k<a.size()+b.size(); k++) { \n  for (i=0; i<a.size(); i++) {\n    j=k-i;\n    stack[k] += a[i] * b[j];\n}\n```\n\nNow the outer loop has no conflicts. Look at this as a \"coordinate transformation\": you're still traversing the same i/j row/column space, but now in new coordinates: k/i stands for diagonal/row.\nBtw, this code is a little metaphorical. Check your loop bounds, and use the right multiplication. I'm just indicating the principle here.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "IMUL OllyDbg multiplication\r\n                \r\nI have problem to understand one of instruction in Assembly Language -> IMUL\n\nFrom what I know, Imul is ->\n\n```\nimul dest, source1, source2\n```\n\n\nThe problem that I have now, the result of multiplication of Imul in ollyDBG and mine is not same !\n\nHere is IMUL on OllyDbg ->\n\n\n\n\n\nAnd the result of the multiplication is 0x367AA048 or 914006088 in decimal..\n\nI try to test with that multiplication with this PHP code..\n\n```\necho dechex(0x00000053 * 0x97C9F598);\n```\n\n\nSurprisingly, the result of my PHP multiplication is not same from what OllyDbg get..\n\nI hope someone can get me clear from this problem..\n\nThanks.\n    ", "Answer": "\r\nThe result of this multiplication does not fit into a 32-bit value, as a result the value you see in ```\nEAX```\n is only the lower 4 bytes of the result.\n\nSince this multiplication results in: ```\n0x31367AA048```\n, the lower 4 bytes:```\n0x367AA048```\n are put into ```\nEAX```\n, as you are seeing.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "printing multiplication table in python 3\r\n                \r\nI want to print the multiplication table using dictionary.Suppose,if a user enters a number then i want the multiplication of next 10numbers to be print in dictionary format as:\n\n```\nmultiplication_table = {\n  \"2\" : { \n    \"2 X 1\" : 2, \n    \"2 X 2\" : 4,\n    \"2 X 3\" : 6,\n    \"2 X 4\" : 8,\n    \"2 X 5\" : 10,\n    \"2 X 6\" : 12,\n    \"2 X 7\" : 14,\n    \"2 X 8\" : 16,\n    \"2 X 9\" : 18,\n    \"2 X 10\" : 20,\n  },\n  \"3\" :{\n    .\n    .\n    .\n  }\n}\n```\n\n\nSo,I tried:\n\n```\ng = input(\"Enter the number of multiplication to be print\") \nfor x in range(1,10):\n  a=x\n  b=g*x\n  multiplication_table = {\n    a:b\n  };\nprint(multiplication_table);\n```\n\n\nI am not getting the expected output.How can I get the expected output?\n    ", "Answer": "\r\n```\ng = int(input(\"Enter number: \")) # g is the input number\n\nmultiplication_table = {} # defines the dictionary\nfor i in range(1, 11): # iterates from i = 1, 2, ..., 10\n    multiplication_table[str(g) + \" x \" + str(i)] = g*i\n\nprint(multiplication_table)\n```\n\n\nIn this code, str(g) + \" x \" + str(i) basically appends the numbers g and i to a string, i.e. the string \"5 x 4\". Then, the value is set to g*i (20 in this example).\n\nEdit\n\nTo answer Random Guy's comment:\n\n```\ng = int(input(\"Enter number: \")) # g is the input number\n\nmultiplication_table = {} # defines the dictionary\nfor i in range(1, 10*int(g/10) + 11): \n    multiplication_table[str(g) + \" x \" + str(i)] = g*i\n\nprint(multiplication_table)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Does multiplication take unit time?\r\n                \r\nI have the following problem\n\n\n  Under what circumstances can multiplication be regarded as a unit time\n  operation?\n\n\nBut I thought multiplication is always considered to be taking unit time. Was I wrong?\n    ", "Answer": "\r\nIt depends on what ```\nN```\n is. If ```\nN```\n is the number of bits in an arbitrarily large number, then as the number of bits increases, it takes longer to compute the product. However, in most programming languages and applications, the size of numbers are capped to some reasonable number of bits (usually 32 or 64). In hardware, these numbers are multiplied in one step that does not depend on the size of the number.\n\nWhen the number of bits is a fixed number, like 32, then it doesn't make sense to talk about asymptotic complexity, and you can treat multiplication like an ```\nO(1)```\n operation in terms of whatever algorithm you're looking at. When  can become arbitrarily large, like with Java's ```\nBigInteger```\n class, then multiplication depends on the size of those numbers, as does the memory required to store them.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How can I multiply and divide using only bit shifting and adding?\r\n                \r\nHow can I multiply and divide using only bit shifting and adding? \n    ", "Answer": "\r\nTo multiply in terms of adding and shifting you want to decompose one of the numbers by powers of two, like so:\n\n```\n21 * 5 = 10101_2 * 101_2             (Initial step)\n       = 10101_2 * (1 * 2^2  +  0 * 2^1  +  1 * 2^0)\n       = 10101_2 * 2^2 + 10101_2 * 2^0 \n       = 10101_2 << 2 + 10101_2 << 0 (Decomposed)\n       = 10101_2 * 4 + 10101_2 * 1\n       = 10101_2 * 5\n       = 21 * 5                      (Same as initial expression)\n```\n\n\n(```\n_2```\n means base 2)\n\nAs you can see, multiplication can be decomposed into adding and shifting and back again. This is also why multiplication takes longer than bit shifts or adding - it's O(n^2) rather than O(n) in the number of bits. Real computer systems (as opposed to theoretical computer systems) have a finite number of bits, so multiplication takes a constant multiple of time compared to addition and shifting. If I recall correctly, modern processors, if pipelined properly, can do multiplication just about as fast as addition, by messing with the utilization of the ALUs (arithmetic units) in the processor.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication using CUDA\r\n                \r\nI am struck up with Matrix multiplication on CUDA. The resultant product matrix is always zero. I have read some sample codes like matrix multiplication in cuda for resolving my problem, but all in vain.\n\nApart from erratic result of 0, the maximum size of \"Width\" (code below) is not even 512. I was not able to debug where the problem lies. May be we can discuss it on StackOverflow. \n\nI am referring \"Programming Massively Parallel Processors\"\n\n```\n#include<cuda.h>\n#include<stdio.h>\n\nint main(void) {\n    void MatrixMultiplication(float *, float *, float *, int);\n    const int Width = 5;\n    float M[Width*Width], N[Width*Width], P[Width*Width];\n    for(int i = 0; i < (Width*Width) ; i++) {\n        M[i] = 5;\n        N[i] = 5;\n        P[i] = 0;\n    }\n    MatrixMultiplication(M, N, P, Width);\n    for(int i = 0; i < (Width*Width) ; i++) {\n        printf(\"%d \\n\", P[i]);\n    }\n    int quit;\n    scanf(\"%d\",&quit);\n    return 0;\n}\n\n//Matrix multiplication kernel - thread specification\n__global__ void MatrixMulKernel(float *Md, float *Nd, float *Pd, int Width) {\n    //2D Thread ID\n    int tx = threadIdx.x;\n    int ty = threadIdx.y;\n\n    //Pvalue stores the Pd element that is computed by the thread\n    float Pvalue = 0;\n\n    for(int k = 0; k < Width ; ++k) {\n        float Mdelement = Md[ty*Width + k];\n        float Ndelement = Nd[k*Width + tx];\n        Pvalue += (Mdelement*Ndelement);\n    }\n\n    Pd[ty*Width + tx] = Pvalue;\n}\n\nvoid MatrixMultiplication(float *M, float *N, float *P, int Width) {\n    int size = Width*Width*sizeof(float);\n    float *Md, *Nd, *Pd;\n\n    //Transfer M and N to device memory\n    cudaMalloc((void**)&Md, size);\n    cudaMemcpy(Md,M,size,cudaMemcpyHostToDevice);\n    cudaMalloc((void**)&Nd, size);\n    cudaMemcpy(Nd,N,size,cudaMemcpyHostToDevice);\n\n    //Allocate P on the device\n    cudaMalloc((void**)&Pd,size);\n\n    //Setup the execution configuration\n    dim3 dimBlock(Width,Width);\n    dim3 dimGrid(1,1);\n\n    //Launch the device computation threads!\n    MatrixMulKernel<<<dimGrid,dimBlock>>>(Md,Nd,Pd,Width);\n\n    //Transfer P from device to host\n    cudaMemcpy(P,Pd,size,cudaMemcpyDeviceToHost);\n\n    //Free device matrices\n    cudaFree(Md);\n    cudaFree(Nd);\n    cudaFree(Pd);\n}\n```\n\n    ", "Answer": "\r\nYou were doing fine until this point:\n\n```\nfor(int i = 0; i < (Width*Width) ; i++) {\n    printf(\"%d \\n\", P[i]);\n}\n```\n\n\nI changed it to %f (because it's a float) and they all print nicely :)\n\n```\n$ ./test.exe\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication using CUDA\r\n                \r\nI am struck up with Matrix multiplication on CUDA. The resultant product matrix is always zero. I have read some sample codes like matrix multiplication in cuda for resolving my problem, but all in vain.\n\nApart from erratic result of 0, the maximum size of \"Width\" (code below) is not even 512. I was not able to debug where the problem lies. May be we can discuss it on StackOverflow. \n\nI am referring \"Programming Massively Parallel Processors\"\n\n```\n#include<cuda.h>\n#include<stdio.h>\n\nint main(void) {\n    void MatrixMultiplication(float *, float *, float *, int);\n    const int Width = 5;\n    float M[Width*Width], N[Width*Width], P[Width*Width];\n    for(int i = 0; i < (Width*Width) ; i++) {\n        M[i] = 5;\n        N[i] = 5;\n        P[i] = 0;\n    }\n    MatrixMultiplication(M, N, P, Width);\n    for(int i = 0; i < (Width*Width) ; i++) {\n        printf(\"%d \\n\", P[i]);\n    }\n    int quit;\n    scanf(\"%d\",&quit);\n    return 0;\n}\n\n//Matrix multiplication kernel - thread specification\n__global__ void MatrixMulKernel(float *Md, float *Nd, float *Pd, int Width) {\n    //2D Thread ID\n    int tx = threadIdx.x;\n    int ty = threadIdx.y;\n\n    //Pvalue stores the Pd element that is computed by the thread\n    float Pvalue = 0;\n\n    for(int k = 0; k < Width ; ++k) {\n        float Mdelement = Md[ty*Width + k];\n        float Ndelement = Nd[k*Width + tx];\n        Pvalue += (Mdelement*Ndelement);\n    }\n\n    Pd[ty*Width + tx] = Pvalue;\n}\n\nvoid MatrixMultiplication(float *M, float *N, float *P, int Width) {\n    int size = Width*Width*sizeof(float);\n    float *Md, *Nd, *Pd;\n\n    //Transfer M and N to device memory\n    cudaMalloc((void**)&Md, size);\n    cudaMemcpy(Md,M,size,cudaMemcpyHostToDevice);\n    cudaMalloc((void**)&Nd, size);\n    cudaMemcpy(Nd,N,size,cudaMemcpyHostToDevice);\n\n    //Allocate P on the device\n    cudaMalloc((void**)&Pd,size);\n\n    //Setup the execution configuration\n    dim3 dimBlock(Width,Width);\n    dim3 dimGrid(1,1);\n\n    //Launch the device computation threads!\n    MatrixMulKernel<<<dimGrid,dimBlock>>>(Md,Nd,Pd,Width);\n\n    //Transfer P from device to host\n    cudaMemcpy(P,Pd,size,cudaMemcpyDeviceToHost);\n\n    //Free device matrices\n    cudaFree(Md);\n    cudaFree(Nd);\n    cudaFree(Pd);\n}\n```\n\n    ", "Answer": "\r\nYou were doing fine until this point:\n\n```\nfor(int i = 0; i < (Width*Width) ; i++) {\n    printf(\"%d \\n\", P[i]);\n}\n```\n\n\nI changed it to %f (because it's a float) and they all print nicely :)\n\n```\n$ ./test.exe\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n125.000000\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "CSR Matrix - Matrix multiplication\r\n                \r\nI have two square matrices ```\nA```\n and ```\nB```\n\n\nI must convert ```\nB```\n to ```\nCSR Format```\n and determine the product ```\nC```\n\n\n```\nA * B_csr = C\n```\n\n\nI have found a lot of information online regarding CSR Matrix - Vector multiplication. The algorithm is:\n\n```\nfor (k = 0; k < N; k = k + 1)\n  result[i] = 0;\n\nfor (i = 0; i < N; i = i + 1)\n{  \n  for (k = RowPtr[i]; k < RowPtr[i+1]; k = k + 1)\n  {  \n    result[i] = result[i] + Val[k]*d[Col[k]];\n  }  \n}\n```\n\n\nHowever, I require ```\nMatrix - Matrix```\n multiplication.\n\nFurther, it seems that most algorithms apply ```\nA_csr - vector```\n multiplication where I require ```\nA * B_csr```\n. My solution is to transpose the two matrices before converting then transpose the final product.\n\nCan someone explain how to compute a ```\nMatrix - CSR Matrix```\n product and/or a ```\nCSR Matrix - Matrix```\n product?\n    ", "Answer": "\r\nHere is a simple solution in Python for the ```\nDense Matrix X CSR Matrix```\n. It should be self-explanatory. \n\n```\ndef main():\n  # 4 x 4 csr matrix\n  #    [1, 0, 0, 0],\n  #    [2, 0, 3, 0],\n  #    [0, 0, 0, 0],\n  #    [0, 4, 0, 0],\n  csr_values = [1, 2, 3, 4]\n  col_idx    = [0, 0, 2, 1]\n  row_ptr    = [0, 1, 3, 3, 4]\n  csr_matrix = [\n      csr_values,\n      col_idx,\n      row_ptr\n      ]\n\n  dense_matrix = [\n      [1, 3, 3, 4],\n      [1, 2, 3, 4],\n      [1, 4, 3, 4],\n      [1, 2, 3, 5],\n      ]\n\n  res = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      ]\n\n  # matrix order, assumes both matrices are square\n  n = len(dense_matrix)\n\n  # res = dense X csr\n  csr_row = 0 # Current row in CSR matrix\n  for i in range(n):\n    start, end = row_ptr[i], row_ptr[i + 1]\n    for j in range(start, end):\n      col, csr_value = col_idx[j], csr_values[j]\n      for k in range(n):\n        dense_value = dense_matrix[k][csr_row]\n        res[k][col] += csr_value * dense_value\n    csr_row += 1\n\n  print res\n\n\nif __name__ == '__main__':\n  main()\n```\n\n\n```\nCSR Matrix X Dense Matrix```\n is really just a sequence of ```\nCSR Matrix X Vector```\n product for each row of the dense matrix right? So it should be really easy to extend the code you show above to do this.\n\nMoving forward, I suggest you don't code these routines yourself. If you are using C++ (based on the tag), then you could have a look at Boost ublas for example, or Eigen. The APIs may seem a bit cryptic at first but it's really worth it in the long term. First, you gain access to a lot more functionality, which you will probably require in the future. Second these implementations will be better optimised.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Java matrix operations, parallel colt matrix - matrix multiplication\r\n                \r\nI was using Jama for matrix operation in java but since they don't have sparse matrix then I start to use Parallel Cold Library (PColt) .  It is a multithreaded version of Colt. I tried to multiply two square matrices,AxB (it is matrix-matrix multiplication, Not elementwise(or scalar) multiplication), size (NxN).I couldn't find a provided method for matrix-matrix multiplication in PColt (I don't want elementwise multiplication), so that I coded the method as following. When I multiply for N=1000 two matrices it tooks almost 5 minutes to complete.\nIf anyone knows how to multiply two matrices in pcolt, it will be really grateful.\nOr if you see there is any bug in the code which is unnecessary and makes complexity high, please inform me. My method is as follows:\n```\n    /**\n * Linear algebraic matrix-matrix multiplication; (new)A = A x B. A[i,j] =\n * Sum(A[i,k] * B[k,j]), k=0..n-1. Matrix shapes: A(m x n), B(n x p), A(m x\n * p).\n * \n * @param matrix1\n *            first matrix\n * @param matrix2\n *            second matrix\n * @return changes matrix1 with new values matrix-matrix multiplication\n */\n\npublic static FloatMatrix2D multiplyMatrix(FloatMatrix2D matrix1,\n        FloatMatrix2D matrix2) {\n    // create a matrix same size of input matrix\n    FloatMatrix2D resultMatrix = matrix1.like();\n    // matrix-matrix multiplication row of first matrix must be equal to\n    // column of second matrix\n    if (matrix1.rows() == matrix2.columns()) {\n        for (int i = 0; i < matrix1.rows(); i++) {\n            for (int j = 0; j < matrix2.columns(); j++) {\n                FloatMatrix1D rowVec = getRow(matrix1, i).copy();\n                FloatMatrix1D colVec = getCol(matrix2, j).copy();\n                // first multiplies each row with each column and then sum\n                // up the result and assign the result to value of matrix\n                float multOfVects = rowVec.assign(colVec,\n                        FloatFunctions.mult).aggregate(FloatFunctions.plus,\n                        FloatFunctions.identity);\n                // set sum of vectors to the new matrix\n                resultMatrix.setQuick(i, j, multOfVects);\n                \n            }\n            System.out.println(\" i th row \"+ i);\n        }\n    } else {\n        System.err\n                .println(\"Row size of first matrix must be equal to Column size of second matrix: \"\n                        + matrix1 + \" != \" + matrix2);\n    }\n\n    return resultMatrix;\n}\n```\n\nTHE SOLUTION...\nOkie Dokie, I got the solution.\nActually forget the above code. PColt provides matrix-matrix multiplication, but the method name is confusing. In order to muliply two matrices use the following  method:\n```\npublic DoubleMatrix2D zMult(DoubleMatrix2D B,\n                            DoubleMatrix2D C)\n```\n\nLinear algebraic matrix-matrix multiplication; C = A x B;\nHere, be careful about the order of parameters, as the result is saved to the last parameter ```\nC```\n. ```\nC```\n can also be set to null, which causes a new matrix to be returned.\n    ", "Answer": "\r\nThe matrix multiplication method is in the ```\nDoubleAlgebra```\n class.\n\n```\nDenseDoubleAlgebra algebra = new DenseDoubleAlgebra();\nDoubleMatrix2D productMatrix = algebra.mult(aMatrix, anotherMatrix);\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is floating-point multiplication commutative? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Is multiplication always commutative in inexact floating point arithmetic?\r\n                            \r\n                                (2 answers)\r\n                            \r\n                    \r\n                Closed 7 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nFloating point numbers are not exact due to its limited precision. My question is: is multiplication commutative in floating number computer calculation?\n\nFor example\n\n```\ndouble a = ..;\ndouble b = ...;\ndouble c = a * b;\ndouble d = b * a;\nif (c == d)\n   cout << \"Yes, great floating\";\n```\n\n    ", "Answer": "\r\nAccording to Wikipedia, yes, float multiplication is commutative. \n\n\n  While floating-point addition and multiplication are both commutative (a + b = b + a and a×b = b×a), they are not necessarily associative. That is, (a + b) + c is not necessarily equal to a + (b + c).\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How do you write multiline strings in Go?\r\n                \r\nDoes Go have anything similar to Python's multiline strings: \n\n```\n\"\"\"line 1\nline 2\nline 3\"\"\"\n```\n\n\nIf not, what is the preferred way of writing strings spanning multiple lines?\n    ", "Answer": "\r\n                \r\nAccording to the language specification, you can use a raw string literal, where the string is delimited by backticks instead of double quotes.\n```\n`line 1\nline 2\nline 3`\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in FUN argument\r\n                \r\nI have this dataframe\n```\nx <- data.frame(\n        matrix(\n          c(letters[1:3], c(\"x\", \"x\", \"y\") ,\n          sample(c(rep(1,100),0), size = 1),\n          sample(c(rep(1,100),0), size = 1),\n          sample(c(rep(1,100),0), size = 1)), ncol = 3)\n)\n```\n\nI would like to do multiplication by group X and Y.\nMy suggestion\n```\nagg <- aggregate(x$X3,\n                 by = list(x$X2),\n                 FUN = *)\n```\n\nI would like to use something like ```\nsum```\n, ```\nmean```\n byt to multiply\n    ", "Answer": "\r\n```\n+```\n is to ```\nsum```\n as ```\n*```\n is to ```\nprod```\n (for product).\nYour sample data follows the anti-pattern of ```\ndata.frame(matrix())```\n. A matrix can only have one data type. You mix character and numeric data in the matrix, and the matrix makes it all ```\ncharacter```\n class, and you can't do math on characters. Here's proper sample data and a demonstration the solution works. Also note that using ```\nby = X[\"X2\"]```\n instead of ```\nby = list(x$X2)```\n gives a nicer column name in the result.\n```\n(x <- data.frame(\n          X1 = letters[1:3],\n          X2 = c(\"x\", \"x\", \"y\") ,\n          X3 = 2:4\n))\n#   X1 X2 X3\n# 1  a  x  2\n# 2  b  x  3\n# 3  c  y  4\n\naggregate(x$X3, by = x[\"X2\"], FUN = prod)\n#   X2 x\n# 1  x 6\n# 2  y 4\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Optimal bitshift multiplication\r\n                \r\nMultiplication by a constant can be replaced by left shifts, additions and subtractions:\n\n```\nint multiply10(int x){\n    return (x<<3)+(x<<1);\n}\n\nint multiply31(int x){\n    return (x<<5)-x;\n}\n```\n\n\nSo I thought, why not extend this to larger numbers? But a simple sum is very slow:\n\n```\nint multiply52429(int x){\n    return (x<<15)+(x<<14)+(x<<11)+(x<<10)+(x<<7)+(x<<6)+(x<<3)+(x<<2)+x;\n}\n```\n\n\nso we make some variables:\n\n```\nint multiply52429(int x){\n    int y = (x<<1)+x;\n    y = (y<<4)+y;\n    y = (y<<8)+y;\n    return (y<<2)+x;\n}\n```\n\n\nSo now we ask, how to generate code for such a function that is optimal?*\n\nOnly additions, subtractions and left shift by constant will be counted towards the total, all with a \"cost\" of 1, everything else is free.\n\n*AST, assembly, whatever, any format that can be converted is fine. Here what matters is the optimal multiplication algorithm, not the code formatting.\n\nSome examples which are probably near optimal:\n\n```\nint multiply1671523a(int x){\n    int x3 = (x<<1)+x;\n    int x99 = (x3<<5)+x3;\n    return (x99<<15)-(x3<<19)+(x<<8)+x99;\n}\n\nint multiply1671523b(int x){\n    int x3 = (x<<1)+x;\n    int x51 = (x3<<4)+x3;\n    return (x51<<15)+(x<<8)+(x3<<4)+x51;\n}\n\nint multiply1671523c(int x){\n    int x3 = (x<<1)+x;\n    return (x3<<19)+(x3<<15)+(x<<8)+(x3<<5)+x3;\n}\n\nint multiply220374293(int x){\n    int x5 = (x<<2)+x;\n    int x21 = (x5<<2)+x;\n    int x105 = (x21<<2)+x21;\n    return (x105<<21)+(x21<<13)+(x5<<8)+x21;\n}\n```\n\n\nNote the reuse in the last example.\n\n\n\nThis has no practical use (multiplication is always faster, and if it's somehow slower the compiler will take care of it), but I thought it was a neat problem and was curious. What kind of algorithm would solve it, and with what time complexity?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Strange multiplication result\r\n                \r\nIn my code I have this multiplications in a C++ code with all variable types as double[]\n\n```\nf1[0] = (f1_rot[0] * xu[0]) + (f1_rot[1] * yu[0]); \nf1[1] = (f1_rot[0] * xu[1]) + (f1_rot[1] * yu[1]); \nf1[2] = (f1_rot[0] * xu[2]) + (f1_rot[1] * yu[2]); \n\nf2[0] = (f2_rot[0] * xu[0]) + (f2_rot[1] * yu[0]); \nf2[1] = (f2_rot[0] * xu[1]) + (f2_rot[1] * yu[1]);\nf2[2] = (f2_rot[0] * xu[2]) + (f2_rot[1] * yu[2]);\n```\n\n\ncorresponding to these values \n\n```\nForce Rot1 : -5.39155e-07, -3.66312e-07\nForce Rot2 : 4.04383e-07, -1.51852e-08\n\nxu: 0.786857, 0.561981, 0.255018\nyu: 0.534605, -0.82715, 0.173264\n\nF1: -6.2007e-07, -4.61782e-16, -2.00963e-07\nF2: 3.10073e-07, 2.39816e-07, 1.00494e-07\n```\n\n\nthis multiplication in particular produces a wrong value -4.61782e-16 instead of 1.04745e-13\n\n```\nf1[1] = (f1_rot[0] * xu[1]) + (f1_rot[1] * yu[1]);  \n```\n\n\nI hand verified the other multiplications on a calculator and they all seem to produce the correct values.\n\nthis is an open mpi compiled code and the above result is for running a single processor, there are different values when running multiple processors for example 40 processors produces 1.66967e-13 as result of F1[1] multiplication.\n\nIs this some kind of mpi bug ? or a type precision problem ? and why does it work okay for the other multiplications ? \n    ", "Answer": "\r\nYour problem is an obvious result of what is called catastrophic summations:\nAs we know, a double precision float can handle numbers of around 16 significant decimals.\n\n```\nf1[1] = (f1_rot[0] * xu[1]) + (f1_rot[1] * yu[1])\n      = -3.0299486605499998e-07 + 3.0299497080000003e-07\n      = 1.0474500005332475e-13\n```\n\n\nThis is what we obtain with the numbers you have given in your example.\nNotice that ```\n(-7) - (-13) = 6```\n, which corresponds to the number of decimals in the float you give in your example: (ex: -5.39155e-07 -3.66312e-07, each mantissa is of a precision of 6 decimals). It means that you used here single precision floats.\n\nI am sure that in your calculations, the precision of your numbers is bigger, that's why you find a more precise result.\n\nAnyway, if you use single precision floats, you can't expect a better precision. With a double precision, you can find a precision up to 16. You shouldn't trust a difference between two numbers, unless it is bigger than the mantissa:\n\n\nSimple precision floats: (a - b) / b >= ~1e-7\nDouble precision floats: (a - b) / b >= ~4e-16\n\n\nFor further information, see these examples ... or the table in this article ...\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Optimizing a Multiplication and Division\r\n                \r\nI set up a few boundaries/constraints and wanted to solve them, however when I use the functions multiplication and division the optimisation is not as it should be in my opinion.\n\nHere is my Code:\n\n```\nimport com.microsoft.z3.*;\nimport java.util.*;\n\nSystem.setProperty( \"java.library.path\", \"/local/Programs/z3-4.6.0-x64-osx-10.11.6/bin/\" );\n\n//set sys_paths to null\nfinal Field sysPathsField = ClassLoader.class.getDeclaredField(\"sys_paths\");\n        sysPathsField.setAccessible(true);\n        sysPathsField.set(null, null);\n        //System.loadLibrary(\"libz3java\");\nHashMap<String, String> cfg = new HashMap<String, String>();\n        cfg.put(\"model\", \"true\");\n        Context ctx = new Context(cfg);\nRealExpr P = ctx.mkRealConst(\"Power\");\nRealExpr LowerBoundP = ctx.mkReal(0);\nRealExpr UpperBoundP = ctx.mkReal(4000);\nBoolExpr boundP1 = ctx.mkLe(P, UpperBoundP);\nBoolExpr boundP2 = ctx.mkGe(P, LowerBoundP);\nBoolExpr bothBoundsP = ctx.mkAnd(boundP1, boundP2);\nRealExpr Mass = ctx.mkRealConst(\"Mass\");\nRealExpr LowerBoundMass = ctx.mkReal(1000);\nRealExpr UpperBoundMass = ctx.mkReal(2000);\nBoolExpr boundMass1 = ctx.mkLe(Mass, UpperBoundMass);\nBoolExpr boundMass2 = ctx.mkGe(Mass, LowerBoundMass);\nBoolExpr bothBoundsMass = ctx.mkAnd(boundMass1, boundMass2);\nSystem.out.println(\"Optimizing System ...\");\nOptimize optsys = ctx.mkOptimize();\noptsys.Add(\nbothBoundsP,\nbothBoundsMass,\n//Here is the Division that does not work\nctx.mkEq(ctx.mkDiv(P,Mass), Speed)\n//Multiplication does not work as well\n//ctx.mkEq(ctx.mkMul(P,Mass), Speed)\n);\nOptimize.Handle optimizeSpeed = optsys.MkMaximize(Speed);\nSystem.out.println(optsys.Check());\nSystem.out.println(optsys.getReasonUnknown());\nSystem.out.println(\"Optimized Speed: \" + optimizeSpeed);\n```\n\n\nIt gets as an output for Division and Multiplication:\n\n```\nOptimizing System ...\nUNKNOWN\n(incomplete (theory arithmetic))\nOptimized Speed: 0\n```\n\n\nThough it should be 4 and 8000000 respectively. And it should be satisfiable and not unknown.\nWhat is the problem here and why can't I optimise for this simple function?\n\nI found this:\nHow does Z3 handle non-linear integer arithmetic?\n\nDoes that mean this equation is not solvable? Isn't Multiplication and division linear?\n    ", "Answer": "\r\nThe issue here is that Z3's optimizer cannot really handle non-linear arithmetic. (In this context, non-linear means you are multiplying/dividing two symbolic quantities. Multiplying/dividing with constants should be OK.)\n\nThe trick in these cases is to do an iterative loop. You put your assertions in, then iterate to get a \"better\" value so long as constraints are satisfied. Of course, this is not guaranteed to converge, so you might have to \"cut\" the loop at some point.\n\nFor your example, here's the equivalent coding in Python:\n\n```\nfrom z3 import *\n\ns = Solver()\n\nPower = Real ('Power')\ns.add (Power >= 0);\ns.add (Power <= 4000)\n\nMass = Real ('Mass')\ns.add (Mass >= 1000);\ns.add (Mass <= 2000);\n\nSpeed = Real ('Speed');\n\ns.add (Speed == Power/Mass);\n\ni = 1\nm = None\n\nwhile s.check() == sat:\n  m = s.model ()\n  print (\"Iteration %d: \" % i),\n  print m[Speed]\n  s.add (Speed > m[Speed])\n  i = i+1\n\nprint \"Final model: \"\nprint m\n```\n\n\nThis prints:\n\n```\n$ python a.py\nIteration 1:  1/1001\nIteration 2:  2/1001\nIteration 3:  3/1001\nIteration 4:  2\nIteration 5:  3\nIteration 6:  4\nFinal model:\n[Power = 4000, Mass = 1000, Speed = 4]\n```\n\n\nI'm sure you can translate this to Java; though I'd recommend using a better language at least to play around with the ideas.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "SIMD matrix multiplication for a rectangular matrix\r\n                \r\nIs it possible to do a generic matrix multiplication for a rectangular matrix using SIMD instructions. So far all the examples that i came across through online are of square matrix     ( N X N) and the N is know. I understand that SIMD instructions has nothing to do with matrices size and its more of a parallel computing.\nIs it a good idea or Is it possible to have a matrix multiplication using SIMD instruction of size M X N where are M, N are set in the constructor of class.\n```\nclass MatrixMN {\n  MatrixMN(size_t rows, size_t cols) {..}\n  MatrixMN operator*(const MatrixMN& m) const {\n    // check for dimension match\n\n    // USE SIMD INSTRUCTION TO PERFORM MATRIX MULTIPLICATION ??\n  }\n};\n```\n\nThe Matrix is double precision, and since we are using older hardware we have only access to ```\n__m128d```\n. Which result in loading two doubles\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Is pow() function slower than simple multiplication when exponent is integer? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        What is more efficient? Using pow to square or just multiply it with itself?\r\n                            \r\n                                (7 answers)\r\n                            \r\n                    \r\n                Closed 8 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI have got one question:  for calculating simple integer powers of a double, is pow() function slower than simple multiplication? such as for  ```\n2.71828^4```\n, is ```\npow(2.71828, double(4))```\n slower than the simple multiplication using for loop?\n\nI have tried to compare the durations for both approaches, but the durations are not stable, sometimes ```\npow()```\n wins and sometimes simple multiplication wins. Can anyone give me an confirmatory answer?\n\nmy code is as followed:\n\n```\n#include <iostream>\n#include <cmath>\n#include <ctime>\n\nusing namespace std;\n\ndouble myFunction(double a) {\n    double c = 1;\n    for (int i = 1; i <= 4; i++)\n        c *= a;\n    return c;\n}\n\nint main() {\n    // Calculate the time used by pow function\n    clock_t start = clock();\n    for (double i = 0; i < 1000000; i = i + 0.001)\n        pow(i, 4);\n    clock_t durationP = double(clock() - start);\n    cout << \"the duration for pow function is:   \" << durationP << \"s\" << endl;\n\n    // Calculate the time used by simple multiplication\n    start = clock();\n    for (double i = 0; i < 1000000; i = i + 0.001)\n        myFunction(i);\n    double durationS = double(clock() - start);\n    cout << \"the duration for simple multiplication is:\" << durationS << \"s\"\n         << endl;\n}\n```\n\n\nthanks a lot!\n    ", "Answer": "\r\nYes, pow is slower than multiplication, multiplication is slower than addition. Tradeoff is, for simple power like pow(x, 2), use x*x instead\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "user input output multiplication table\r\n                \r\nI need to make a multiplication table that displays the users input from 1-9, so if they enter 3 it will display the multiplication table for 3 from 1-9. it must do this with each number. \n\nI have a for loop working for only 1 number and I dont know what else to do, I'm still really new to this so I'm not sure how to make it work for me. \n\n```\nprompt (\"please enter a number\");\nvar a = 1;\nvar b;\n\nfor (var i = 1; i <= 9; i++){\n    b= a*i\n    document.write(\"\" + a + \"*\" + i + \"=\", + b +\"<br>\");\n}\n```\n\n\nIf I enter any number from 1-9 it must display the multiplication from 1-9 for that one number. Must work for each number entered. \n    ", "Answer": "\r\nthe variable a should have the value received from the prompt and not 1\n\n\r\n\r\n```\nvar a = prompt (\"please enter a number\");\r\nvar b;\r\n\r\nfor (var i = 1; i <= 9; i++){\r\n    b= a*i\r\n    document.write(\"\" + a + \"*\" + i + \"=\", + b +\"<br>\");\r\n}```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "CUBLAS matrix multiplication\r\n                \r\nAfter implementing matrix multiplication with CUDA. I tried to implement it with CUBLAS(thanks to the advice of some people here in the forum).\n\nI can multiply square matrices but (yes once again...) I am having difficulties working with non square matrices. The only type of non square matrix multiplication that works is when you vary Matrix A's Width(A*B=C). \n\nI don't get any errors but the resulting matrix returns wrong values. Here is my code(it is basically an adaptation of the simpleCUBLAS SDK example):\n\n```\n#include <stdlib.h>\n#include <stdio.h>\n#include \"cublas.h\"\n#define HA 2\n#define WA 9\n#define WB 2\n#define HB WA \n#define WC WB   \n#define HC HA  \n#define index(i,j,ld) (((j)*(ld))+(i))\n\nvoid printMat(float*P,int uWP,int uHP){\n//printf(\"\\n %f\",P[1]);\nint i,j;\nfor(i=0;i<uHP;i++){\n\n    printf(\"\\n\");\n\n    for(j=0;j<uWP;j++)\n        printf(\"%f \",P[index(i,j,uHP)]);\n        //printf(\"%f \",P[i*uWP+j]);\n}\n}\n\n\n\n\n int  main (int argc, char** argv) {\n    cublasStatus status;\n        int i,j;\n        cublasInit();\n\n        float *A = (float*)malloc(HA*WA*sizeof(float));\n        float *B = (float*)malloc(HB*WB*sizeof(float));\n        float *C = (float*)malloc(HC*WC*sizeof(float));\n    if (A == 0) {\n        fprintf (stderr, \"!!!! host memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n    }\n    if (B == 0) {\n        fprintf (stderr, \"!!!! host memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n    }\n    if (C == 0) {\n        fprintf (stderr, \"!!!! host memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n\n        for (i=0;i<HA;i++)\n     for (j=0;j<WA;j++)\n        A[index(i,j,HA)] = (float) index(i,j,HA);   \n        for (i=0;i<HB;i++)\n     for (j=0;j<WB;j++)\n        B[index(i,j,HB)] = (float) index(i,j,HB); \n    /*\n    for (i=0;i<HA*WA;i++)\n    A[i]=(float) i;\n    for (i=0;i<HB*WB;i++)\n    B[i]=(float) i;         */  \n\n\n        float* AA; float* BB; float* CC;\n\n    /*ALLOCATE ON THE DEVICE*/\n    status=cublasAlloc(HA*WA,sizeof(float),(void**)&AA);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! device memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n        status=cublasAlloc(HB*WB,sizeof(float),(void**)&BB);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! device memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n        status=cublasAlloc(HC*WC,sizeof(float),(void**)&CC);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! device memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n    /*SET MATRIX*/\n        status=cublasSetMatrix(HA,WA,sizeof(float),A,HA,AA,HA);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! device memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n        status=cublasSetMatrix(HB,WB,sizeof(float),B,HB,BB,HB);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! device memory allocation error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n    /*KERNEL*/\n        cublasSgemm('n','n',HA,WB,WA,1,AA,HA,BB,HB,0,CC,HC);\n\n        status = cublasGetError();\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! kernel execution error.\\n\");\n        return EXIT_FAILURE;\n        }\n        cublasGetMatrix(HC,WC,sizeof(float),CC,HC,C,HC);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! device read error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n\n    /* PERFORMANCE OUTPUT*/\n\n    printf(\"\\nMatriz A:\\n\");\n    printMat(A,WA,HA);\n    printf(\"\\nMatriz B:\\n\");\n    printMat(B,WB,HB);\n    printf(\"\\nMatriz C:\\n\");\n    printMat(C,WC,HC);\n\n        free( A );  free( B );  free ( C );\n        status = cublasFree(AA);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! memory free error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n        status = cublasFree(BB);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! memory free error (B)\\n\");\n        return EXIT_FAILURE;\n        }\n        status = cublasFree(CC);\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! memory free error (C)\\n\");\n    return EXIT_FAILURE;\n    }\n\n        /* Shutdown */\n        status = cublasShutdown();\n        if (status != CUBLAS_STATUS_SUCCESS) {\n        fprintf (stderr, \"!!!! shutdown error (A)\\n\");\n        return EXIT_FAILURE;\n        }\n\n    if (argc > 1) {\n        if (!strcmp(argv[1], \"-noprompt\") ||!strcmp(argv[1], \"-qatest\") ) \n        {\n    return EXIT_SUCCESS;\n        }\n        } \n        else\n        {\n            printf(\"\\nPress ENTER to exit...\\n\");\n            getchar();\n        }\n\nreturn EXIT_SUCCESS;\n\n\n  }\n```\n\n\nAny thoughts? Also, does anyone has a matrix multiplication implementation in CUBLAS that is working, so i could compare? Thanks in advance.\n    ", "Answer": "\r\nI don't understand why you think that code you posted doesn't work. When I compile and run it, the resulting executable produces the same output that I get if I enter the same matrices into matlab and compute the product of them.\n\nCUBLAS is a FORTRAN BLAS, it expects inputs in column major order (and your code is column major ordered). If the results don't match what you want, you must be confusing column and row major ordering somewhere.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication With Multiple Threads in C\r\n                \r\nI want to create a C program that calculates the multiplication of two N*N matrices by using threads.\nI started this code by referring to Matrix Multiplication using multiple threads but instead of creating N * N threads for each cell of the resulting matrix, I want to create N threads to do the multiplication concurrently where each row of the result matrix will be computed by a different thread.\nMy code looks like this so far:\n```\n#include <stdio.h>\n#include <pthread.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 2\n\nstruct v {\n    int i;  //Row\n    int j;  //Column\n};\n\nint A[N][N] = {{ 1, 2 }, { 3, 4 }};//Matrix 1\nint B[N][N] = {{ 2, 3 }, { 4, 5 }};//Matrix 2\nint C[N][N];  //Resulting Matrix\n\nstatic void *fnc(void *arg) {\n    struct v *data = (struct v *)arg;\n    int l;\n    for (l = 0; l < N; l++) {\n        int i = ((struct v *)data[l]).i;  //Row No\n        int j = ((struct v *)data[l]).j;  //Column No\n        int accumulator = 0;\n        int d, sum = 0;\n        for (d = 0; d < N; d++) {\n            sum = sum + A[i][d] * B[d][j];\n        }\n        C[i][j] = sum;\n        sum = 0;\n    }\n    return;\n}\n\nint main() {\n    pthread_t threads[N];\n    int i, k;\n    for (i = 0; i < N; i++) {\n        struct v *data[N];\n        for (k = 0; k < N; k++) {\n            data[k] = (struct v *)malloc(sizeof(struct v));\n            data[k].i = i; //assign the row of C for thread to calculate\n            data[k].j = k; //assign the column of C for thread to calculate\n        }\n        //In this example it creates 2 threads with passing data.\n        //Data consists of row and column pairs for each thread, that will be calcuting the pairs.\n        //Consider first iteration of this loop:\n        //Thread 1 is created and data consists of (0,0) and (0,1) which are the targeted calculation cells for thread 1. \n        //In the second iteration: Thread 2 will have (1,0) and (1,1) pairs in its data.\n\n        pthread_create(&threads[i], NULL, fnc, data);\n    }\n    for (i = 0; i < N; i++)\n        pthread_join(threads[i], NULL);\n\n   for (i = 0; i < N; i++)\n      for (k = 0; k < N; k++)\n        printf(\"%d\\t\", C[i][k]);\n\n    return 0;\n}\n```\n\nWhen I compile with\n```\ngcc thread.c -lpthread -lrt\n```\n\nI receive this Error:\n```\nthread.c: In function ‘fnc’:\nthread.c:24:24: error: cannot convert to a pointer type\n         int i=((struct v*)data[l]).i;//Row No\n                        ^\nthread.c:24:35: error: request for member ‘i’ in something not a structure or union\n         int i=((struct v*)data[l]).i;//Row No\n                                   ^\nthread.c:25:24: error: cannot convert to a pointer type\n         int j=((struct v*)data[l]).j;//Column No\n                        ^\nthread.c:25:35: error: request for member ‘j’ in something not a structure or union\n         int j=((struct v*)data[l]).j;//Column No\n                                   ^\nthread.c: In function ‘main’:\nthread.c:48:20: error: request for member ‘i’ in something not a structure or union\n             data[k].i = i; //assign the row of C for thread to calculate\n                    ^\nthread.c:49:20: error: request for member ‘j’ in something not a structure or union\n             data[k].j = k; //assign the column of C for thread to calculate\n```\n\nI believe the logic behind the code is correct and this sure looks like a simple argument passing problem. I put the whole code because I will be happy if I receive your comments about the problem and also a possible better solution for the desired job.\n    ", "Answer": "\r\nHere it is a working solution was posted by @Michi. Your problem was that you were passing a pointer with the same address into a ```\npthread_create```\n also you had some issues with memory allocation. You had to allocate memory for two dimensional array, and pass into the ```\npthread_create```\n.\n```\n#include <stdio.h>\n#include <pthread.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define N 3\n#define n 3\n\nstruct v\n{\n    size_t i;\n    size_t j;\n};\n\ndouble A[N][N] = {{1.0, 2.0, 4.0}, {3.0, 4.0, 5.0}, {4.0, 5.0, 7.0}};\ndouble B[N][N] = {{2.0, 3.0, 9.0}, {4.0, 5.0, 7.0}, {2.0, 3.0, 9.0}};\ndouble C[N][N];\n\nstatic void * multiplication(void *arg){\n    struct v *data = (struct v *)arg;\n\n    size_t l;\n    for(l=0; l < N; l++)\n    {\n        size_t i=(data[l]).i;\n        size_t j=(data[l]).j;\n        double sum=0;\n        size_t d;\n\n        for (d = 0; d < N; d++)\n        {\n            sum = sum + A[i][d]*B[d][j];\n        }\n\n        C[i][j] = sum;\n        sum = 0;\n    }\n    return 0;\n}\n\nint main(void)\n{\n    pthread_t threads[n];\n    size_t i, k;\n\n    struct v **data;\n    data = (struct v **)malloc(n * sizeof(struct v*));\n\n    for(i = 0; i < n; i++)\n    {\n        data[i] = (struct v *)malloc(n * sizeof(struct v));\n\n        for(k = 0; k < n; k++)\n        {\n            data[i][k].i = i;\n            data[i][k].j = k;\n        }\n\n        pthread_create(&threads[i], NULL, multiplication, data[i]);\n    }\n\n    for(i = 0; i < n; i++)\n    {\n        pthread_join(threads[i], NULL);\n    }\n\n    for (i = 0; i < N; i++)\n    {\n        for (k = 0; k < N; k++)\n        {\n            printf(\"%lf\\t\", C[i][k]);\n        }\n\n        printf(\"\\n\");\n\n        free(data[i]);\n    }\n\n    free(data);\n\n    return 0;\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "user input output multiplication table\r\n                \r\nI need to make a multiplication table that displays the users input from 1-9, so if they enter 3 it will display the multiplication table for 3 from 1-9. it must do this with each number. \n\nI have a for loop working for only 1 number and I dont know what else to do, I'm still really new to this so I'm not sure how to make it work for me. \n\n```\nprompt (\"please enter a number\");\nvar a = 1;\nvar b;\n\nfor (var i = 1; i <= 9; i++){\n    b= a*i\n    document.write(\"\" + a + \"*\" + i + \"=\", + b +\"<br>\");\n}\n```\n\n\nIf I enter any number from 1-9 it must display the multiplication from 1-9 for that one number. Must work for each number entered. \n    ", "Answer": "\r\nthe variable a should have the value received from the prompt and not 1\n\n\r\n\r\n```\nvar a = prompt (\"please enter a number\");\r\nvar b;\r\n\r\nfor (var i = 1; i <= 9; i++){\r\n    b= a*i\r\n    document.write(\"\" + a + \"*\" + i + \"=\", + b +\"<br>\");\r\n}```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "subtraction and multiplication column wise\r\n                \r\ni need to do subtraction and multiplication columns. as per the below format. \n\ndf1\n\n```\n A  B   C   D   E\n10  11  13  12  15\n11  13  10  15  13\n```\n\n\nthere can be 'n' number of columns. \n\n```\nformula - subtraction: \ncolumn 1 - column B, them col B - col C then col C - col D and so on. \n\nformula - Multiplication: \nrow1 multiply by row2 \n```\n\n\nexpected output:\n\n```\n                   A      B   C    D    E\nSUBTRACTION       -1     -2   1   -3    15\nMULTIPLCATION    -11     -26  10 -45    195\n```\n\n    ", "Answer": "\r\nIf you only want the first row to be subtracted and then multiplied by row 2:\n\n```\narr = df.values\ndf\n    A   B   C   D   E\n0   10  11  13  12  15\n1   11  13  10  15  13\n\ndf.iloc[0, :-1] = arr[0, :-1] - arr[0, 1:]\ndf\n\n     A  B   C   D   E\n0   -1  -2  1   -3  15\n1   11  13  10  15  13\n```\n\n\nThe ```\n.values```\n will convert the Data Frame into a numpy array. If you don't do this, then pandas will only subtract corresponding columns. \n\n```\ndf.iloc[1,:] = arr[0] * arr[1]\ndf\n     A  B   C    D   E\n0   -1  -2  1   -3   15\n1   -11 -26 10  -45  195\n```\n\n\nThen change the index:\n\n```\ndf.index = ['SUBTRACTION', 'MULTIPLCATION']\ndf\n\n                 A   B   C  D   E\nSUBTRACTION      -1 -2   1  -3  15\nMULTIPLCATION   -11 -26  10 -45 195\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "long long vs int multiplication\r\n                \r\nGiven the following snippet:\n\n```\n#include <stdio.h>\n\ntypedef signed long long int64;\ntypedef signed int int32;\ntypedef signed char int8;\n\nint main()\n{\n    printf(\"%i\\n\", sizeof(int8));\n    printf(\"%i\\n\", sizeof(int32));\n    printf(\"%i\\n\", sizeof(int64));\n\n    int8 a = 100;\n    int8 b = 100;\n    int32 c = a * b;\n    printf(\"%i\\n\", c);\n\n    int32 d = 1000000000;\n    int32 e = 1000000000;\n    int64 f = d * e;\n    printf(\"%I64d\\n\", f);\n}\n```\n\n\nThe output with MinGW GCC 3.4.5 is (-O0):\n\n```\n1\n4\n8\n10000\n-1486618624\n```\n\n\nThe first multiplication is casted to an int32 internally (according to the assembler output). The second multiplication is not casted. I'm not sure if the results differ because the program was running on a IA32, or because it is defined somewhere in the C standard. Nevertheless I'm interested if this exact behavior is defined somewhere (ISO/IEC 9899?), because I like to better understand why and when I've to cast manually (I've problems porting a program from a different architecture).\n    ", "Answer": "\r\nThe C99 standard does specify that binary operators such as ```\n*```\n do not operate on integer types smaller than ```\nint```\n. Expressions of these types are promoted to ```\nint```\n before the operator is applied. See 6.3.1.4 paragraph 2 and the numerous occurrences of the words \"integer promotion\". But this is somewhat orthogonal to the assembly instructions generated by the compiler, which operate on ```\nint```\ns because this is faster even when the compiler would be allowed to computed a shorter result (because the result is immediately stored in an l-value of a short type, for instance).\n\nRegarding ```\nint64 f = d * e;```\n where ```\nd```\n and ```\ne```\n are of type ```\nint```\n, the multiplication is done as an ```\nint```\n in accordance with the same promotion rules. The overflow is technically undefined behavior, you are getting two-s-complement result here, but you could get anything according to the standard.\n\nNote: the promotion rules distinguish signed and unsigned types when promoting. The rule is to promote smaller types to ```\nint```\n unless ```\nint```\n cannot represent all values of the type, in which case ```\nunsigned int```\n is used.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Tensorflow convolution vs. Tensorflow multiplication and sum vs. Numpy multiplication and sum\r\n                \r\nI am experiencing different results (on 16th least significant bit) while performing a single step of a dot product, implemented differently in TF and numpy. \n\nThe inputs are float32 5x5 image and 5x5 kernel.\n\n```\ni = tf.constant(I2D, dtype=tf.float32, name='i')    \nk = tf.constant(K2D, dtype=tf.float32, name='k')\n```\n\n\nScenario 1: Tensorflow convolution\n\n```\ntf_convolution = tf.nn.convolution(input=i4d, filter=k4d, padding=\"VALID\")\n```\n\n\nScenario 2: Tensorflow multiplication and sum\n\n```\ntf_multiply = tf.multiply(i, k)\ntf_dot = tf.reduce_sum(tf_multiply)\n```\n\n\nScenario 3: Numpy multiplication and sum\n\n```\nnp_multiply = np.multiply(I2D, K2D)\nnp_dot = np.sum(np_multiply)\n```\n\n\nThe results of element-wise multiplication in Scenario 2 and 3 are the same, but after the sum they are not.\nResults remain the same regardless of whether it is executed using tensorflow or tensorflow-gpu.\n\nI would like to better understand how it comes to this, what is the format type in which results are calculated (input is always float32, for numpy output is also float32), and whether there is a way to achieve that the results are bit identical.\n\nThank you in advance for your help.\n\nEDIT:\n\nActual numbers:\n\n```\nI2D = np.array([[ 0.218994140625,  0.30615234375,   0.43115234375,     0.46923828125,   0.515869140625],\n              [0.2880859375,    0.306640625 ,    0.361572265625,  0.430419921875,  0.408203125],\n              [0.380615234375 , 0.318359375,     0.278076171875,  0.325927734375,   0.306640625],\n              [0.319580078125,  0.30859375,      0.306640625,     0.28857421875,   0.29345703125],\n              [0.28125,        0.319580078125 , 0.3515625 ,      0.3486328125,   0.3349609375]])\n\n\nK2D = np.array([[0.0890502929687500,  0.0557556152343750, -0.0900573730468750,  0.0840759277343750,  0.1080932617187500],\n            [0.0617370605468750, -0.0567016601562500,  0.0847473144531250,  0.0191040039062500, -0.0368041992187500],\n            [0.1333923339843750, -0.0764160156250000,  0.1204223632812500, -0.1223754882812500, -0.0852966308593750],\n            [0.1645507812500000, -0.0398864746093750, -0.0663452148437500,  0.0543823242187500,  0.1416015625000000],\n            [-0.1589050292968750, -0.1628723144531250, -0.1723327636718750, -0.1340332031250000, 0.0513305664062500]\n])\n```\n\n\nResults:\n\n```\nTF convolution = 0.001403801143169403076171875\nTF multiplication + add = 0.00140382\nnumpy = 0.00140381604433\n```\n\n    ", "Answer": "\r\nI believe the default ```\ndtype```\n for these numpy arrays ```\nI2D```\n and ```\nK2D```\n is ```\nnp.float64```\n, so all operations are 64-bit. But you're comparing it to 32-bit operations result in tensorflow.\n\nI've changed the ```\ndtype=tf.float64```\n and got the same result up to the last digit:\n\n```\ni = tf.constant(I2D, dtype=tf.float64, name='i')\nk = tf.constant(K2D, dtype=tf.float64, name='k')\n```\n\n\n... the result values:\n\n```\n0.00140381604433  # tensorflow\n0.00140381604433  # numpy\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "AES word multiplication\r\n                \r\nI'm studying AES encryption algorithm, but I can't understand word multiplication as requested by AES.\nIf I have this two words multiplication:\n\n```\n{a3}{a2}{a1}{a0} * {b3}{b2}{b1}{b0}\n```\n\n\nI arrived to write the polynomial:\n\n```\n{2d}x^6+{10}x^5+{1c}x^4+{29}x^2+{10}x+{18}\n```\n\n\nNow AES standard asks to divide the previous polynomial with\n\n```\n x^4+1\n```\n\n\nand take coefficient the MOD of this division.\nHow can I make the division? I mean that I understand when  polynomial coefficients are 0 and 1 (bits), but when they are byte I really can't figure it out...\n\nAfter reading other AES documents I suspect that word multiplication in AES is like the following matrix multiplication:\n\n```\n{a0}{a3}{a2}{a1}   {b0}\n{a1}{a0}{a3}{a2} * {b1}\n{a2}{a1}{a0}{a3}   {b2}\n{a3}{a2}{a1}{a0}   {b3}\n```\n\n\nSo in the end my result is:\n\n```\n{a3}{a2}{a1}{a0} * {b3}{b2}{b1}{b0} = {00}{04}{00}{04}. \n```\n\n\nIs it correct for AES calculation?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication of complex vectors in Swift\r\n                \r\nI have two complex vectors:\n\n```\na = [(0.5 + 2.0i), (-1.0 - 3.0i), (-3.0 + 1.5i)]\n\nb = [(-0.5 - 2.2i), (1.3 + 2.0i), (3.0 - 2.5i)]\n\nIn Matlab, c = a.*b\n```\n\n\nThat is, element by element multiplication of the two complex vectors gives me:\n\n```\nc = [(4.15 - 2.1i), (4.7 - 5.9i), (-5.25 + 12.0i)]\n```\n\n\nGenerally, in Swift, I represent real and imaginary parts of the complex vectors in separate arrays.\n\nSo,\n\n```\nlet aReal = [0.5, -1.0, -3.0]\n\nlet bReal = [-0.5, 1.3, 3.0]\n\nlet aImag = [2.0, -3.0, 1.5]\n\nlet bImag = [-2.2, 2.0, -2.5]\n```\n\n\nBased on the above multiplication, in Swift, I am looking to get:\n\n```\n// cReal = [4.15, 4.7, -5.25]\n\n// cImag = [-2.1, -5.9, 12.0]\n```\n\n    ", "Answer": "\r\nIt depends upon what you're doing with these, but I'd define a ```\nComplex```\n type with a ```\n*```\n operator. For example in Swift 3:\n\n```\nstruct Complex<T: FloatingPoint> {\n    let real: T\n    let imaginary: T\n\n    static func +(lhs: Complex<T>, rhs: Complex<T>) -> Complex<T> {\n        return Complex(real: lhs.real + rhs.real, imaginary: lhs.imaginary + rhs.imaginary)\n    }\n\n    static func -(lhs: Complex<T>, rhs: Complex<T>) -> Complex<T> {\n        return Complex(real: lhs.real - rhs.real, imaginary: lhs.imaginary - rhs.imaginary)\n    }\n\n    static func *(lhs: Complex<T>, rhs: Complex<T>) -> Complex<T> {\n        return Complex(real: lhs.real * rhs.real - lhs.imaginary * rhs.imaginary,\n                       imaginary: lhs.imaginary * rhs.real + lhs.real * rhs.imaginary)\n    }\n}\n\n// you can print it any way you want, but I'd probably do:\n\nextension Complex: CustomStringConvertible {\n    var description: String {\n        switch (real, imaginary) {\n        case (_, 0):\n            return \"\\(real)\"\n        case (0, _):\n            return \"\\(imaginary)i\"\n        case (_, let b) where b < 0:\n            return \"\\(real) - \\(abs(imaginary))i\"\n        default:\n            return \"\\(real) + \\(imaginary)i\"\n        }\n    }\n}\n```\n\n\nYou can then use ```\nzip```\n and ```\nmap```\n to take two arrays and perform some calculation taking the respective values from the two arrays:\n\n```\nlet a = [Complex<Double>(real: 0.5, imaginary: 2.0), Complex<Double>(real: -1.0, imaginary: -3.0), Complex<Double>(real: -3.0, imaginary: 1.5)]\nlet b = [Complex<Double>(real: -0.5, imaginary: -2.2), Complex<Double>(real: 1.3, imaginary: 2.0), Complex<Double>(real: 3.0, imaginary: -2.5)]\n\nlet c = zip(a, b).map { $0 * $1 }\n\nprint(c)\n```\n\n\nAnd that would say:\n\n\n  [4.15 - 2.1i, 4.7 - 5.9i, -5.25 + 12.0i]\n\n\nOr, if you really have your separate arrays, convert them to ```\n[Complex]```\n first:\n\n```\nlet aReal = [0.5, -1.0, -3.0]\nlet aImag = [2.0, -3.0, 1.5]\n\nlet bReal = [-0.5, 1.3, 3.0]\nlet bImag = [-2.2, 2.0, -2.5]\n\nlet a = zip(aReal, aImag).map { Complex<Double>(real: $0, imaginary: $1) }\nlet b = zip(bReal, bImag).map { Complex<Double>(real: $0, imaginary: $1) }\n\nlet c = zip(a, b).map { $0 * $1 }\nprint(c)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Incorrect Multiplication Result [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        1000 * 60 * 60 * 24 * 30 results in a negative number [duplicate]\r\n                            \r\n                                (4 answers)\r\n                            \r\n                    \r\n                Closed 9 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI'm trying to understand why this multiplication results in an incorrect value:\n\n```\nlong max = (60 * 24 * 60 * 60 * 1000);\n```\n\n\nThis should = 5,184,000,000\n\nBut in my Java program it = 889,032,704\n\nAny idea why this is the case?\n    ", "Answer": "\r\nAll of the values you're multiplying are ```\nint```\ns so the result is an ```\nint```\n which is cast to a ```\nlong```\n after overflow has already happened.  Make one of the factors a ```\nlong```\n so that they are multiplied using 64b instructions\nTry\n```\nlong max = (60L * 24L * 60L * 60L * 1000L);\n```\n\nThe ```\nL```\n suffix specifies that the constant is a ```\nlong```\n value, not an ```\nint```\n constant.\nThe language specification says\n\nAn integer literal is of type ```\nlong```\n if it is suffixed with an ASCII letter L or l (ell); otherwise it is of type ```\nint```\n (§4.2.1).\n\nand the section on multiplication says\n\nThe type of a multiplicative expression is the promoted type of its operands.\n\nand type promotion of two ```\nint```\ns leaves them as ```\nint```\ns:\n\nWidening primitive conversion (§5.1.2) is applied to convert either or both operands as specified by the following rules:\n\nIf either operand is of type ```\ndouble```\n, the other is converted to ```\ndouble```\n.\nOtherwise, if either operand is of type ```\nfloat```\n, the other is converted to ```\nfloat```\n.\nOtherwise, if either operand is of type ```\nlong```\n, the other is converted to ```\nlong```\n.\nOtherwise, both operands are converted to type ```\nint```\n\n\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "what is the difference between \" CSD multiplication\" \"verilog multiplication\"?\r\n                \r\nI have seen 2 posting at here Verilog - Floating points multiplication\nand\nhow can I apply fixed fraction to the integer\nAs you can se,  those are all regarding of verilog fraction multiplication.\nBut I can confused that Mogan's answer of this.\n```\nreg [7:0] a = 0010_1000; reg [7:0] b = 0010_1000;\n```\n\nHow can he got this binary? Is this CSD terms?\nUpdate\nI know well interger * CSD term. It will converted like this figure( integer >>2)+(integer>> 5)..\nBut I want to kow CSD term * CSD term.\nWhat about this?\n```\nwire [11:0] y;\nwire [11:0] x;\nwire [11:0] z;\ny= {3.1, 10'b0}\nx= {2.5, 10'b0}\nz= y*x\nz = z >> 10;\n```\n\nNow I think this is little a bit cost than your way.\nyou can use just just one multiplication.\nBut my method is need shifter to right.\n    ", "Answer": "\r\nTo answer a question in a comment How to multiply 3.1*2.4 in Signed 4 int 4 frac wordlength.\n\n```\n3.1 => 0011_0001 (actually 3.0625) .1 is very difficult to represent in fixed point.\n2.5 => 0010_1000\n```\n\n\nEDA Playground:\n\n```\nreg signed [15:0] mul;\ninitial begin\n  mul = 8'sb0011_0001 * 8'sb0010_1000;\n  $display(\"mul = %16b\", mul);\nend\n//mul = 0000011110101000\n```\n\n\nBreak down of result:\n\n```\n     2^ 76543210 -1-2-3-4-5\n  mul = 00000111_ 1 0 1 0 1 000\n2^2 + 2^1 + 2^0 + 2^-1 + 2^-3 2^-5\n  4 +   2 +   1 + 0.5 +0.125 + 0.03125\n              =======\n              7.65625\n```\n\n\nOn a normal calculator:\n\n```\n3.0625 * 2.5 => 7.65625\n```\n\n\nThe rounding from 3.1 to 3.0625 caused this error ```\n3.1*2.5 => 7.75```\n, quantisation error of 0.09375.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Double integer precision multiplication in C++\r\n                \r\nIs there any standard C++ way (e.g. class library) which provides integer multiplication with double precision? What I mean is: given two unsigned int's a,b the multiplication of them should give me an array of two unsigned int's {c, d} such that a*b = c + d*(UINT_MAX+1) ?\n    ", "Answer": "\r\nGMP could be an option\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why is python's built in multiplication so fast [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question needs to be more focused. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it focuses on one problem only by editing this post.\r\n                \r\n                    \r\n                        Closed 9 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nSo the other day I was trying something in python, I was trying to write a custom multiplication function in python\n\n```\ndef multi(x, y):\n    z = 0\n    while y > 0:\n        z = z + x\n        y = y - 1\n    return z\n```\n\n\nHowever, when I ran it with extremely large numbers like (1 << 90) and (1 << 45) which is (2 ^ 90) * (2 ^ 45). It took forever to compute.\nSo I tried looking into different types of multiplication, like the russian peasant multiplication technique, implemented down there, which was extremely fast but not as readable as multi(x, y)\n\n```\ndef russian_peasant(x, y):\n    z = 0\n    while y > 0:\n        if y % 2 == 1: z = z + x\n        x = x << 1\n        y = y >> 1\n    return z \n```\n\n\nWhat I want you to answer is how do programming languages like python multiply numbers ? \n    ", "Answer": "\r\nYour ```\nmulti```\n version runs in O(N) whereas ```\nrussian_peasant```\n version runs in O(logN), which is far better than O(N).\n\nTo realize how fast your ```\nrussian_peasant```\n version is, check this out\n\n```\nfrom math import log\nprint round(log(100000000, 2))   # 27.0\n```\n\n\nSo, the loop has to be executed just 27 times, but your ```\nmulti```\n version's while loop has to be executed 100000000 times, when ```\ny```\n is 100000000.\n\nTo answer your other question,\n\n\n  What I want you to answer is how do programming languages like python\n  multiply numbers ?\n\n\nPython uses O(N^2) grade school multiplication algorithm for small numbers, but for big numbers it uses Karatsuba algorithm.\n\nBasically multiplication is handled in C code, which can be compiled to machine code and executed faster.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Overflow integer multiplication in MATLAB\r\n                \r\nI am trying to implement murmurHash in MATLAB which I have already a code in C++. In C++ code:\n\n```\nstatic const uint32_t c1 = 0xcc9e2d51; //(3432918353 in decimal)\n        .\n        .\n        .\nk1 *= c1;// k1 is 6649713 before multiplication\n```\n\n\nAfter multiplication it gives the result 3117918145(which is mod(3432918353*6649713,4294967296) in order to keep it in bounds of the 32-bit unsigned integer). \n\nBut, in MATLAB, it gives the result 4294967296 which is max for 32-bit unsigned integer. Is there anyway to overcome this problem by not converting the numbers into 64-bit and calculating modulo wrt 4294967296 (32-bit max)? \n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "C# generics syntax for multiple type parameter constraints [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\n\n  Possible Duplicate:\n  Generic methods and multiple constraints  \n\n\n\n\nI need a generic function that has two type constraints, each inheriting from a different base class. I know how to do this with one type:\n\n```\nvoid foo<T>() where T : BaseClass\n```\n\n\nHowever, I don't know how to do this with two types:\n\n```\nvoid foo<TOne, TTwo>() where TOne : BaseOne // and TTwo : BaseTwo ???\n```\n\n\nHow do you do this? (using .NET 2)\n    ", "Answer": "\r\n```\nvoid foo<TOne, TTwo>() \n   where TOne : BaseOne\n   where TTwo : BaseTwo\n```\n\nMore info here:\nhttps://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/constraints-on-type-parameters#constraining-multiple-parameters\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Divide and Conquer Matrix Multiplication\r\n                \r\nI am having trouble getting divide and conquer matrix multiplication to work. From what I understand, you split the matrices of size nxn into quadrants (each quadrant is n/2) and then you do:   \n\n```\nC11 = A11⋅ B11 + A12 ⋅ B21   \nC12 = A11⋅ B12 + A12 ⋅ B22  \nC21 = A21 ⋅ B11 + A22 ⋅ B21  \nC22 = A21 ⋅ B12 + A22 ⋅ B22  \n```\n\n\nMy output for divide and conquer is really large and I'm having trouble figuring out the problem as I am not very good with recursion.  \n\nexample output:  \n\nOriginal Matrix A:  \n\n```\n4 0 4 3   \n5 4 0 4   \n4 0 4 0  \n4 1 1 1 \n```\n\n\nA x A  \n\nClassical:  \n\n```\n44 3 35 15  \n56 20 24 35  \n32 0 32 12  \n29 5 21 17  \n```\n\n\nDivide and Conquer:  \n\n```\n992 24 632 408  \n1600 272 720 1232   \n512 0 512 384  \n460 17 405 497  \n```\n\n\nCould someone tell me what I am doing wrong for divide and conquer? All my matrices are ```\nint[][]```\n and classical method is the traditional 3 for loop matrix multiplication\n    ", "Answer": "\r\nYou are recursively calling ```\ndivideAndConquer```\n in the wrong way. What your function does is square a matrix. In order for divide and conquer matrix multiplication to work, it needs to be able to multiply two potentially different matrixes together.\n\nIt should look something like this:\n\n```\nprivate static int[][] divideAndConquer(int[][] matrixA, int[][] matrixB){\n    if (matrixA.length == 2){\n         //calculate and return base case\n    }\n    else {\n        //make a11, b11, a12, b12 etc. by dividing a and b into quarters      \n        int[][] c11 = addMatrix(divideAndConquer(a11,b11),divideAndConquer(a12,b21));\n        int[][] c12 = addMatrix(divideAndConquer(a11,b12),divideAndConquer(a12,b22));\n        int[][] c21 = addMatrix(divideAndConquer(a21,b11),divideAndConquer(a22,b21));\n        int[][] c22 = addMatrix(divideAndConquer(a21,b12),divideAndConquer(a22,b22));\n        //combine result quarters into one result matrix and return\n    }\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "multiplication table formatting issue\r\n                \r\nCurrently when I run my code it displays the  basic multiplication vertically.\n\n```\n1\n2\n2\n4\n```\n\n\nHow would I get it to display in table format like horizontally and vertically to form a table? Assuming that ```\ni```\n and ```\nj```\n are how big you want the table to be.\n\n```\n123\n246\n369\n```\n\n\nCode\n\n```\nfor(int i=1; i<=2; i++){\n    for (int j=1; j <= 2; j++){\n        //int multiplier =1;\n        int answer = i*j;\n        //multiplier++;  \n        System.out.println(answer);\n    }\n}\n```\n\n    ", "Answer": "\r\nFor a simpler method, you can use 'System.out.print()' (only works for same length results):\n\n```\nfor(int i=1; i<=2; i++){\n    for (int j=1; j <= 2; j++){\n        //int multiplier =1;\n        int answer = i*j;\n        //multiplier++;  \n        System.out.print(answer+\" \");\n    }\n    System.out.println();\n}\n```\n\n\nOtherwise, you can use 'System.out.format()':\n\n```\nfor(int i=1; i<=10; i++){\n    for (int j=1; j <= 10; j++){\n        //int multiplier =1;\n        int answer = i*j;\n        //multiplier++;  \n        System.out.format(\"%5s\", answer);\n    }\n    System.out.println();\n}\n```\n\n\nMore information about 'System.out.format()':\nhttps://docs.oracle.com/javase/tutorial/java/data/numberformat.html\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication of two short values, answer is also short\r\n                \r\nAfter multiplication of two short values I want to save the left 16 bits as the answer(also short).\nNormally the right 16 values are saved. What can I do?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "sparse matrix multiplication with python\r\n                \r\nI wonder how to do matrix multiplication if one of the matrices is sparse.\nthe mul(A,B) command does not support sparse matrices as far as I know, Should I write my own routine ? \n\nA  sparse matrix such as lil_matrix\nB  full matrix, any regular matrix or ndarray.\n\nC = A*B , * being matrix multiplication ?\n    ", "Answer": "\r\nYou should look at module scipy.sparse. I think it should get the job done fairly quickly. Obviously you would need the Scipy and numpy library for this though.\n\nFor More info please read the following answer: Matrix multiplication for sparse matrices in Python\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "OpenMPI matrix multiplication\r\n                \r\nI am learning OpenMPI in C.  I'm having a bit of trouble doing matrix multiplication with this program when I do it, the results are wrong.  The program compiles , but I feel that my matrix multiplication algorithm is wrong somewhere.\nMy approach to solving this problem is to use MPI_Scatter to scatter matrix A then transpose matrix B.  Then MPI_Scatter matrix B.  Once they are scattered I do the calculation for matrix multiplication and Gather the result back to the root process.   I'm not sure if I'm missing something, but I don't fully understand Scatter and Gather yet.  I know with Send you can send to individual processes and Recv from different processes, but how does this work with Scatter and Gather.  Let me know if I made a mistake somewhere in this code.  Thanks.\nMy source code:\n```\n#define N 512\n#include <stdio.h>\n#include <math.h>\n#include <mpi.h>\n#include <sys/time.h>\nprint_results(char *prompt, float a[N][N]);\n int main(int argc, char *argv[]) {\n  int size, rank, blksz, i, j, k;\n  float a[N][N], b[N][N], c[N][N];\n  char *usage = \"Usage: %s file\\n\";\n  float row[N][N], col[N][N];\n  FILE *fd;\n  int portion, lowerbound, upperbound;\n  double elapsed_time, start_time, end_time;\n  struct timeval tv1, tv2;\n\n  MPI_Init(&argc, &argv);\n  MPI_Comm_rank(MPI_COMM_WORLD, &rank);\n  MPI_Comm_size(MPI_COMM_WORLD, &size);\n  blksz = (int) ceil((double) N / size);\n  /*\n  if (argc < 2) {\n      fprintf (stderr, usage, argv[0]);\n      return -1;\n  }\n  if ((fd = fopen(argv[1], \"r\")) == NULL) {\n         fprintf(stderr, \"%s: Cannot open file %s for reading.\\n\", argv[0],argv[1]);\n         fprintf(stderr, usage, argv[0]);\n         return -1;\n }\n */\n\n//Read input from file for matrices a and b.\n//The I/O is not timed because this I/O needs\n//to be done regardless of whether this program\n//is run sequentially on one processor or in\n//parallel on many processors. Therefore, it is\n//irrelevant when considering speedup.\nif (rank == 0) {\n    for (i = 0; i < N; i++)\n        for (j = 0; j < N; j++)\n            a[i][j] = i + j;\n    for (i = 0; i < N; i++)\n        for (j = 0; j < N; j++)\n            b[i][j] = i + j;\n    /*\n    for (i = 0; i < N; i++) {\n        for (j = i + 1; j < N; j++) {\n            int temp = b[i][j];\n            b[i][j] = b[j][i];\n            b[j][i] = temp;\n        }\n    }\n    */\n}\n\n//TODO: Add a barrier prior to the time stamp.\nMPI_Barrier(MPI_COMM_WORLD);\n// Take a time stamp\ngettimeofday(&tv1, NULL);\n//TODO: Scatter the input matrices a and b.\n    MPI_Scatter(a, blksz * N, MPI_FLOAT, row, blksz * N, MPI_FLOAT, 0,\n        MPI_COMM_WORLD);\n    MPI_Scatter(b, blksz * N, MPI_FLOAT, col, blksz * N, MPI_FLOAT, 0,\n        MPI_COMM_WORLD);\n//TODO: Add code to implement matrix multiplication (C=AxB) in parallel.\nfor (i = 0; i < blksz && rank * blksz + i < N; i++) {\n    for (j = 0; j < N; j++) {\n        c[i][j] = 0.0;\n        for (k = 0; k < N; k++) {\n            c[i][j] += row[i][j] * col[j][k];\n        }\n    }\n}\n//TODO: Gather partial result back to the master process.\nMPI_Gather(c, blksz * N, MPI_FLOAT, c, blksz * N, MPI_FLOAT, 0,\n        MPI_COMM_WORLD);\n// Take a time stamp. This won't happen until after the master\n// process has gathered all the input from the other processes.\ngettimeofday(&tv2, NULL);\nelapsed_time = (tv2.tv_sec - tv1.tv_sec) + ((tv2.tv_usec - tv1.tv_usec)\n        / 1000000.0);\nprintf(\"elapsed_time=\\t%lf (seconds)\\n\", elapsed_time);\n// print results\nMPI_Barrier(MPI_COMM_WORLD);\nprint_results(\"C = \", c);\nMPI_Finalize();\n\n}\n\nprint_results(char *prompt, float a[N][N]) {\nint i, j;\nprintf(\"\\n\\n%s\\n\", prompt);\nfor (i = 0; i < N; i++) {\n    for (j = 0; j < N; j++) {\n        printf(\" %.2f\", a[i][j]);\n    }\n    printf(\"\\n\");\n}\nprintf(\"\\n\\n\");\n}\n```\n\n    ", "Answer": "\r\nYou computational kernel is wrong. As ```\nb```\n is supposedly transposed and ci,j is simply the dot product of row ```\ni```\n from ```\na```\n and row ```\nj```\n from ```\nb```\n, the innermost loop should read:\n\n```\nfor (k = 0; k < N; k++) {\n    c[i][j] += row[i][k] * col[j][k];  // row[i][k] and not row[i][j]\n}\n```\n\n\nBesides your matrices are ```\nfloat```\n but in the (commented out) transposition code the ```\ntemp```\n variable is ```\nint```\n. It might work for that particular case, because you initialise the elements of ```\na```\n and ```\nb```\n with integers, but won't work in the general case.\n\nOtherwise the scatter/gather part looks fine. Mind that your code would not work if ```\nN```\n is not divisble by the number of MPI processes. To handle those cases you might want to look into using ```\nMPI_Scatterv```\n and ```\nMPI_Gatherv```\n.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Why is performance of 64bit multiplication comparable to 32bit multiplication?\r\n                \r\nI am measuring performance of rust when two 64 bits numbers are multiplied vs when two 32 bits numbers are multiplied. Recall that result for 64 multiplication is 128 number and result for 32 bits multiplication is 64 bit number. I expected 64 bits multiplication to at least 2x slower than the other. Mainly because there is no native 128 bits support and to multiply two 64 bits numbers you divide them into 32 bits hi and lows. However when I ran the test, it turns out both performs similar.\nHere is the script I have used:\n```\nfn main() {\n    test_64_mul();\n    test_32_mul();\n}\n\nfn test_64_mul() {\n    let test_num: u64 = 12345678653435363454;\n    use std::time::Instant;\n    let mut now = Instant::now();\n    let mut elapsed = now.elapsed();\n    for _ in 1..2000 {\n        now = Instant::now();\n        let _prod = test_num as u128 * test_num as u128;\n        elapsed = elapsed + now.elapsed();\n    }\n    println!(\"Elapsed For 64: {:.2?}\", elapsed);\n}\n\nfn test_32_mul() {\n    let test_num: u32 = 1234565755;\n    use std::time::Instant;\n    let mut now = Instant::now();\n    let mut elapsed = now.elapsed();\n    for _ in 1..2000 {\n        now = Instant::now();\n        let _prod = test_num as u64 * test_num as u64;\n        elapsed = elapsed + now.elapsed();\n    }\n    println!(\"Elapsed For 32: {:.2?}\", elapsed);\n}\n```\n\nOutput of after running this code is\nElapsed For 64: 25.58µs\nElapsed For 32: 26.08µs\nI am using MacBook Pro with M1 chip\nand rust version 1.60.0\n    ", "Answer": "\r\nBecause the compiler has noticed you don't use the result, and eliminated the multiplication completely.\nSee the diff at https://rust.godbolt.org/z/5sjze7Mbv.\nYou should use something like ```\nstd::hint::black_box()```\n, or much better, a benchmarking framework like criterion.\nAlso, the overhead of creating a new ```\nInstant```\n every time is likely much higher than of the multiplication itself. Like I said, use a benchmarking framework.\nAs noted by @StephenC, it is also unlikely that your clock resolution is small enough to measure one multiplication.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "pyspark.mllib DenseMatrix multiplication\r\n                \r\nI have to do matrix multiplication in PySpark but can't find how to do it with ```\nDenseMatrix```\n. For example\n\n```\nfrom pyspark.mllib.linalg import DenseMatrix\n\nQ = DenseMatrix(nfeatures, nfeatures, [1, 0, 0, 0, 1, 0, 0, 0, 1])\nw = DenseMatrix(nfeatures, 1, [0, 0, 0])\nprint( Q * w )\n```\n\n\nresults in the following error:\n\n```\nTypeError: unsupported operand type(s) for *: 'DenseMatrix' and 'DenseMatrix'\n```\n\n\nWhat am I doing wrong? Is there a method for doing matrix multiplication? What is the usual way of doing this with PySpark streaming?\n\nBest regards,\nNoelia\n    ", "Answer": "\r\nNeither ```\npyspark.ml.linalg.Matrix```\n nor ```\npyspark.mllib.linalg.Matrix```\n implements matrix multiplication. These classes are used mostly as an exchange formats for ```\nmllib```\n / ```\nml```\n algorithms and are not designed to be used as full featured data structures for linear algebra. \n\nIf you need something more than to pass data to some ML / MLlib algorithm just use standard NumPy / SciPy stack. \n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Code problem in Javascript to Print Multiplication Table\r\n                \r\nCode problem in Javascript while trying to print a multiplication table. I am trying to code a program, that takes two inputs from the user. One will be for the multiplication table which he wants, i.e., if he gives 2, then the multiplication table of 2 will ve displayed. The other input shall be the number up to which the number should be printed. So, if the person gives 5 as the input, then multiplication table f 2, up to times 5 shall be printed by the program. But for some reason, it isn't working. Please advise me on what I should do.\n\r\n\r\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Print Multiplication Table using Javascript</title>\n</head>\n<body bgcolor=\"#6030A8\">\n<p> Please enter the number for which you want to see the multiplication table: <input type=\"number\" id=\"multi\"></input></p>\n Please enter the number till much you would like your number to be multiplied: <input type=\"number\" id=\"limit\"></input></p>\n\n<p> To get your answer, please click the button below: </p> <br>\n\n<button onclick=\"function1()\">Your_Result</button>\n\n<p id = \"ans\"></p>\n\n<script>\nvar A = parseInt(document.getElementById(\"multi\").innerHTML.value);\nvar B = parseInt(document.getElementById(\"limit\").innerHTML.value);\n\nfunction function1()\n{\n    var i;\n for  (i=1; i<B; i++) {\n     document.getElementbyId(\"ans\").innerHTML = \"A*i\";\n }\n}\n\n</script>\n\n</body>\n</html>```\n\r\n\r\n\r\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Insert multiple rows WITHOUT repeating the \"INSERT INTO ...\" part of the statement?\r\n                \r\nI know I've done this before years ago, but I can't remember the syntax, and I can't find it anywhere due to pulling up tons of help docs and articles about \"bulk imports\".\n\nHere's what I want to do, but the syntax is not exactly right... please, someone who has done this before, help me out :)\n\n```\nINSERT INTO dbo.MyTable (ID, Name)\nVALUES (123, 'Timmy'),\n    (124, 'Jonny'),\n    (125, 'Sally')\n```\n\n\nI know that this is close to the right syntax. I might need the word \"BULK\" in there, or something, I can't remember. Any idea?\n\nI need this for a SQL Server 2005 database. I've tried this code, to no avail:\n\n```\nDECLARE @blah TABLE\n(\n    ID INT NOT NULL PRIMARY KEY,\n    Name VARCHAR(100) NOT NULL\n)\n\nINSERT INTO @blah (ID, Name)\n    VALUES (123, 'Timmy')\n    VALUES (124, 'Jonny')\n    VALUES (125, 'Sally')\n\nSELECT * FROM @blah\n```\n\n\nI'm getting ```\nIncorrect syntax near the keyword 'VALUES'.```\n\n    ", "Answer": "\r\nYour syntax almost works in SQL Server 2008 (but not in SQL Server 20051):\n\n```\nCREATE TABLE MyTable (id int, name char(10));\n\nINSERT INTO MyTable (id, name) VALUES (1, 'Bob'), (2, 'Peter'), (3, 'Joe');\n\nSELECT * FROM MyTable;\n\nid |  name\n---+---------\n1  |  Bob       \n2  |  Peter     \n3  |  Joe       \n```\n\n\n\n\n1 When the question was answered, it was not made evident that the question was referring to SQL Server 2005. I am leaving this answer here, since I believe it is still relevant.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Create Multiplication Table\r\n                \r\nI want to have a Multiplication table... with a given n.\nI tried... but my solution does not return what I want!\n\nIf n=3\ndef should return this:\n\n```\n[[1, 2, 3, 4],\n[2, 4, 6, 8],\n[3, 6, 9, 12],\n[4, 8, 12, 16]]\n```\n\n\nMy solution:\n\n```\ndef multiplication_table(n):\n    r=[]\n    m = list(list(range(1*i,(n+1)*i, i)) for i in range(1,n+1))\n    for i in m:\n        i = [str(j).rjust(len(str(m[-1][-1]))+1) for j in i]\n        r.append(i)\n    return r\nn=4\nprint(multiplication_table(n))\n```\n\n\nBut it returns:\n\n```\n[[' 1',' 2',' 3',' 4'],\n[' 2',' 4',' 6',' 8'],\n[' 3',' 6',' 9',' 12'],\n[' 4',' 8',' 12',' 16']]\n```\n\n\nIt return string in list... but I want int in my list!\nI tried other ways but I could not solve this!\nCan anyone help me?\n    ", "Answer": "\r\nThis should solve your problem I guess.\n\n```\ndef multiplication_table(n):\nr=[]\nm = list(list(range(1*i,(n+1)*i, i)) for i in range(1,n+1))\nfor i in m:\n    i = [int(str(j).rjust(len(str(m[-1][-1]))+1)) for j in i]\n    r.append(i)\nreturn r\n```\n\n\nn=4\nprint(multiplication_table(n))\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication Pooling in Tensorflow\r\n                \r\nIs there an existing implementation of Multiplication pooling in tensorflow? In TensorFlow documentation, I found only average and max pooling operations.\nCan someone suggest me how to do the multiplication pooling?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix multiplication issue\r\n                \r\nI have this problem, i have a NxM matrix and i want to multiply it by a 3x3 matrix just as a convolutional matrix multiplication \nexample in this link\n\nThis are the code of the matrix:\n\n```\n int width = img.getWidth();\n int height = img.getHeight();\n\n int matrix[][] = new int[width][height];\n int edgeMatrix[][] = {\n       {-1,-1,-1},\n       {-1,8,-1},\n       {-1,-1,-1}\n };\n```\n\n\nThis is the code of the cycle:\n\n```\nfor (int x = 0; x < width; x++) {\n    w = 0;\n    holderX = x;\n    for (w = 0; w < 3; w++) {\n        v = 0;\n        if (w > 0)\n            x++;\n            for (v = 0; v < 3; v++) {\n                sum = sum + matrix[v][x] * edgeMatrix[v][w];\n                if (w == 2 && v == 2)\n                    x = holderX;\n            }\n        }\n    }\n```\n\n\nThis cycle already multiply the first \"row\" of 3 of the matrix.\n\nT tried in a different ways to achieve this but i just cant get that when the matrix reach the end of the width automatically the N value increase one and then starts over again and in the same time the value still working on the internal matrix multiplication.\n\nThanks for the help. \n    ", "Answer": "\r\nYou dont need ```\nholderX```\n, but need one more loop.\n\n```\nint width = img.getWidth();\nint height = img.getHeight();\n\nint input[][] = img.getPixels(); // or whatever api you use\nint output[][] = new int[height][width];\nint kernel[][] = {\n  {-1,-1,-1},\n  {-1,8,-1},\n  {-1,-1,-1}\n};\n\n\nfor (int y = 0; y < height; y++) {\n  for (int x = 0; x < width; x++) {\n    int accumulator = 0;\n    for (int v = 0; v < 3; v++) {\n      for (int w = 0; w < 3; w++) {\n        int sy = y + v - 1;\n        int sx = x + w - 1;\n        if (sy >= 0 && sy < height && sx >= 0 && sx < width)) {\n          accumulator += input[sy][sx] * kernel[v][w];\n        }\n      }\n    }\n    output[sy][sx] = accumulator;\n  }\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication Pooling in Tensorflow\r\n                \r\nIs there an existing implementation of Multiplication pooling in tensorflow? In TensorFlow documentation, I found only average and max pooling operations.\nCan someone suggest me how to do the multiplication pooling?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix multiplication in java\r\n                \r\nI wanted to do matrix multiplication in Java, and the speed needs to be very good.\nI was thinking of calling R through java to achieve this.\nI had a couple of Qs though:\n\nIs calling R using Java a good idea? If yes, are there any code samples that can be shared?\n\nWhat are the other ways that can be considered to do matrix multiplication in Java?\n\n\nUpdate:\nMy colleague who quit the firm was a C# programmer, who was forced to write Java code that involved matrix multiplication.\n-- He has written his own DataTable class in Java, in order to be able to\na) create indexes to sort and join with other DataTables\nb) matrix multiplication.\nSo, I want to essentially clean up the code, and thought using something like R within Java will help me focus on business logic rather than sorting, joining, matrix multiplication, etc.\n    ", "Answer": "\r\nYou could use a matrix package such as JAMA.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "What is the multiplication operator actually doing with numpy arrays? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        how does multiplication differ for NumPy Matrix vs Array classes?\r\n                            \r\n                                (8 answers)\r\n                            \r\n                    \r\n                Closed 9 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI am learning NumPy and I am not really sure what is the operator ```\n*```\n actually doing. It seems like some form of multiplication, but I am not sure how is it determined. From ipython:\n\n```\nIn [1]: import numpy as np\n\nIn [2]: a=np.array([[1,2,3]])\n\nIn [3]: b=np.array([[4],[5],[6]])\n\nIn [4]: a*b\nOut[4]: \narray([[ 4,  8, 12],\n       [ 5, 10, 15],\n       [ 6, 12, 18]])\n\nIn [5]: b*a\nOut[5]: \narray([[ 4,  8, 12],\n       [ 5, 10, 15],\n       [ 6, 12, 18]])\n\nIn [6]: b.dot(a)\nOut[6]: \narray([[ 4,  8, 12],\n       [ 5, 10, 15],\n       [ 6, 12, 18]])\n\nIn [7]: a.dot(b)\nOut[7]: array([[32]])\n```\n\n\nIt seems like it is doing matrix multiplication, but only ```\nb```\n multiplied by ```\na```\n, not the other way around. What is going on?\n    ", "Answer": "\r\nIt's a little bit complicated and has to do with the concept of broadcasting and the fact that all numpy operations are element wise.\n\n```\na```\n is a 2D array with 1 row and 3 columns and ```\nb```\n is a 2D array with 1 column and 3 rows.\nIf you try to multiply them element by element (which is what numpy tries to do if you do ```\na * b```\n because every basic operation except the ```\ndot```\n operation is element wise), it must broadcast the arrays so that they match in all their dimensions.\nSince the first array is 1x3 and the second is 3x1 they can be broadcasted to 3x3 matrix according to the broadcasting rules. They will look like:\n\n```\na = [[1, 2, 3],\n     [1, 2, 3],\n     [1, 2, 3]]\n\nb = [[4, 4, 4],\n     [5, 5, 5],\n     [6, 6, 6]]\n```\n\nAnd now Numpy can multiply them element by element, giving you the result:\n```\n[[ 4,  8, 12],\n [ 5, 10, 15],\n [ 6, 12, 18]]\n```\n\nWhen you are doing a ```\n.dot```\n operation it does the standard matrix multiplication. More in docs\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication operator\r\n                \r\nIn Scheme * returns the product of its arguments. If called with no arguments it returns 1, or with one argument it returns the argument:\n\n```\n(*) => 1\n(* 2) => 2\n```\n\n\nWhat are the semantics of this? How can it return any value? It appears to be implicitly adding an argument of 1 to perform the multiplication. Where is this explained?\n\nThis question arose in my mind when coming across the following:\n\n```\n(call-with-values * -) => -1\n```\n\n\nObviously this is because 1 is the identity for multiplication, but I can't quite see this referred to anywhere. In brief, why is the product of no arguments 1?\n    ", "Answer": "\r\nThis is a useful property of both ```\n+```\n and ```\n*```\n: they both return the identity for their respective operations when called with no arguments. The fact that ```\n(+)```\n returns ```\n0```\n instead of simply throwing an error is probably more obviously useful, since it makes the common idiom of summing a list using ```\n(apply + list-of-numbers)```\n work for the empty list. Similarly, you could use ```\n*```\n to take the product of all numbers in a list, but this is perhaps less obviously useful.\n\nStill, I think the analogue to ```\n+```\n is strong enough to argue that the zero-argument behavior of ```\n*```\n at least makes sense. I don’t think that making it throw would prevent all that many bugs, and it might make some useful code harder to write. I think the fact that making it return the identity improves the “smoothness” of the language (it is more internally-consistent) is one of the reasons Scheme feels like such a clean and principled language.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multidimensional array multiplication\r\n                \r\nSuppose I want a code in PHP that replicates matrix multiplication, where my matrices look like:\n\n```\n$matrix_1 = array(array(1,2), array(3,4))\n```\n\n\nThe number of subarrays (2) is equivalent to the number of columns in the matrix, whereas the number of elements in each subarray (2) represents the number of rows in the matrix.\n\nThe code would need to:\n\n\nAccount for matrices of different dimensions.\nRecognise when two matrices cannot be multipled (where the number of columns in matrix A is not the same as the number of rows in matrix B).\nPossibly account for scalar multiplication, where each element of a matrix is multiplied by a constant.\n\n\nI have attached slides here that explain what the code should achieve (with two examples).\n    ", "Answer": "\r\nHere's my (long-winded) solution. I'm going to try to see if I can simplify this in places.  Note that:\n\n\nThis solution does not account for scalar multiplication, but this is relatively easy to incorporate if you wanted to include it. Assume a scalar is a one-element array - in which case, in the ```\nelse```\n command simply include a ```\ncount()```\n command to recognise if one (or more) of arrays is a scalar and apply a multiplication function accordingly using ```\narray_map```\n.\nI am assuming that the arrays follow matrix form - e.g. one column\ncannot have more elements than another. You can account for this\nformally by making sure each subarray has the same number of\nelements.\n\n\nThe code:\n\n```\n<?php\n\n// FUNCTIONS\n\nfunction mul($x, $y){\n    return ($x * $y);\n}\n\n// Example Arrays\n\n$array_1 = array(array(1,4,7), array(2,5,8), array(3,6,9));\n$array_2 = array(array(7,6,4), array(5,8,1), array(4,3,2));\n\n// Check for row/column equivalence\n\n$array_1_cols = count($array_1);\n$array_1_rows = count($array_1[0]);\n$array_2_cols = count($array_2);\n$array_2_rows = count($array_2[0]);\n\n// Check to see if matrix multiplication is possible\n\nif($array_1_cols == $array_2_rows) {\n\n$m_cols = $array_2_cols;\n$m_rows = $array_1_rows;\n\n$array_3 = array();\n$col_index = 1;\n\n// Start loop for each column of the new matrix\n\nwhile($col_index <= $m_cols) {\n$m_col_index = $col_index - 1;\n$sub_array[$col_index] = array();\n\n// Start loop for each row of the new matrix\n\n$row_index = 1;\nwhile($row_index <= $m_rows) {\n$m_row_index = $row_index - 1;\n\n// Auxiliary array for each row of A\n$a_row[$row_index] = array();\n\n$a_index = 1;\nwhile($a_index <= $array_1_cols) {\n$start_p = $a_index - 1;\n$el_part_[$a_index] = $array_1[$start_p];\n$el_part_[$a_index] = $el_part_[$a_index][$m_row_index];\narray_push($a_row[$row_index], $el_part_[$a_index]);\n++$a_index;\n}\n\n// Array for columns of B\n\n$b_col[$col_index] = $array_2[$m_col_index];\n\n// Build matrix C - defined over the rows of A and the columns of B\n\n$c_part[$row_index][$col_index] = array_map('mul', $a_row[$row_index], $b_col[$col_index]);\n\n$c_el[$row_index][$col_index] = array_sum($c_part[$row_index][$col_index]);\n\narray_push($sub_array[$col_index], $c_el[$row_index][$col_index]);\n\n// End row loop\n\n++$row_index;\n}\n\narray_push($array_3,$sub_array[$col_index]);\n\n++$col_index;\n}\n\nprint_r($array_3);\n\n} else {\n\necho \"This is not possible!\";\n\n}\n\n\n?>\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "When is multiplication of large dense matrices useful? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nIs there a scenario or application that uses multiplication of large dense matrices? Something like computer vision?\n    ", "Answer": "\r\nBesides computer vision, matrix multiplication is being heavily used in computer graphics. For example, when you were typing in your question, if anything moved onto your screen that was matrix multiplication in action.\n\nAnother application I can think of lies in computer and internet security. For example, if you have ever done any online shopping or banking chances are there was some matrix multiplication going on in the background to protect your password or PIN number.\n\nAlso, if you have ever taken any operations research course, you may be impressed by how often matrix multiplication is being used with the linear programming technique.\n\nThat's all right off the top of my head. Hope this helps.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "BigQuery: straight table format of matrix multiplication into more traditional Matrix multiplication format?\r\n                \r\nThis question here shows how to get matrix multiplication into straight table format, for example given (6x1) (Path, value) matrix, you will get (36,1) straight table. Now I want to get the traditional matrix multiplication format, in the example it would be (6x6) matrix.\n\nHow to shape a straight table of matrix multiplication into more traditional matrix multiplication format?\n\n```\n--standardSQL\nWITH MatrixA AS (\n  SELECT 1 AS p, 2 AS val UNION ALL\n  SELECT 2, -3 UNION ALL\n  SELECT 3, 4 UNION ALL\n  SELECT 4, -1 UNION ALL\n  SELECT 5, 0 UNION ALL\n  SELECT 6, 2 \n), MatrixB AS (\n  SELECT 1 AS p, -1 AS val UNION ALL\n  SELECT 2, 2 UNION ALL\n  SELECT 3, 3 UNION ALL\n  SELECT 4, 3 UNION ALL\n  SELECT 5, 0 UNION ALL\n  SELECT 6, 1\n),\nmatrixMultiplication AS\n(\nSELECT a.p AS ap, b.p as bp, SUM(a.val * b.val) val\nFROM MatrixA AS a\nCROSS JOIN MatrixB AS b\nGROUP BY a.p, b.p\nORDER BY a.p, b.p\n)\n\n--36 elements for the 6x6 PATHS Matrix\n--TODO: how to shape it to 6x6 matrix?\nSELECT * FROM matrixMultiplication\n```\n\n    ", "Answer": "\r\n\n  how to shape it to 6x6 matrix?   \n\n\nBelow is for BigQuery Standard SQL. Few simple options       \n\n\n  Option #1    \n\n\n```\n#standardSQL\nSELECT ap AS row, STRING_AGG(CAST(val AS STRING), ' ' ORDER BY bp) AS cols\nFROM matrixMultiplication\nGROUP BY row\n-- ORDER BY row   \n```\n\n\nwhen applied to dummy data from your question  - result is   \n\n```\nRow     row     cols     \n1       1       -2 4 6 6 0 2     \n2       2       3 -6 -9 -9 0 -3  \n3       3       -4 8 12 12 0 4   \n4       4       1 -2 -3 -3 0 -1  \n5       5       0 0 0 0 0 0  \n6       6       -2 4 6 6 0 2     \n```\n\n\n\n  Option #2    \n\n\n```\n#standardSQL\nSELECT row, \n  cols[OFFSET(0)] AS col1,\n  cols[OFFSET(1)] AS col2,\n  cols[OFFSET(2)] AS col3,\n  cols[OFFSET(3)] AS col4,\n  cols[OFFSET(4)] AS col5,\n  cols[OFFSET(5)] AS col6\nFROM (  \n  SELECT ap AS row, ARRAY_AGG(val ORDER BY bp) AS cols\n  FROM matrixMultiplication\n  GROUP BY ap\n)\n-- ORDER BY row    \n```\n\n\nwhen applied to dummy data from your question  - result is   \n\n```\nRow row col1    col2    col3    col4    col5    col6     \n1   1   -2      4       6       6       0       2    \n2   2   3       -6      -9      -9      0       -3   \n3   3   -4      8       12      12      0       4    \n4   4   1       -2      -3      -3      0       -1   \n5   5   0       0       0       0       0       0    \n6   6   -2      4       6       6       0       2    \n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "orderBy multiple fields in Angular\r\n                \r\nHow to sort by using multiple fields at same time in angular? fist by group and then by sub-group\nfor Example\n```\n$scope.divisions = [{'group':1,'sub':1}, {'group':2,'sub':10}, {'group':1,'sub':2},{'group':1,'sub':20},{'group':2,'sub':1},\n    {'group':2,'sub':11}];\n```\n\nI wanted to display this as\ngroup : Sub-group\n1 - 1\n1 - 2\n1 - 20\n2 - 1\n2 - 10\n2 - 11\n```\n<select ng-model=\"divs\" ng-options=\"(d.group+' - '+d.sub) for d in divisions | orderBy:'group' | orderBy:'sub'\" />\n```\n\n    ", "Answer": "\r\nPlease see this:\n\nhttp://jsfiddle.net/JSWorld/Hp4W7/32/\n\n```\n<div ng-repeat=\"division in divisions | orderBy:['group','sub']\">{{division.group}}-{{division.sub}}</div>\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Arrays multiplication\r\n                \r\nHow to write arrayt multiplication (multiplicating two matrieces ie 3x3) of arrays of known size in c++ ? What will be the difference using pointers and reference ?\n    ", "Answer": "\r\nHave you looked at Boost.MultiArray which is a multi-dimentional array and implementing your own multiplication logic or perhaps Boost.BasicLinearAlgebra which has Matrix types in it?  These libraries will do most if not all of the work you need to do.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Two dimensional array (multiplication/division)\r\n                \r\nI currently have this class created called Array Math which is loading into the 10x10 array the multiplication by location as shown in the image displayed under the code, however what I want to do is divide each location by 2 after the multiplication. So in other words (row * column) / 2 at the current moment i'm just loading into the array these numbers. I'm not sure how to approach this logically since i'm using two for loops to produce the multiplication between rows and columns.\n\n```\nclass ArrayMath\n{\n        private static final int tableSize = 10;\n        public static void main(String[] args)\n        {\n                int table[][] = new int [tableSize][tableSize];\n                for (int row = 1; row <= 10; row++)\n                {\n                        for (int col = 1; col <= 10; col++)\n                        {\n                                System.out.printf(row * col +\"\\t\");\n                        }\n                        System.out.println();\n                }\n        }\n}\n```\n\n\nOutput of array\n    ", "Answer": "\r\nAll your need to do is add ```\n/2.0```\n. Order of operations takes care of the rest\n\n```\nSystem.out.printf( ( row * col / 2.0 ) + \"\\t\" );\n```\n\n\nThe reason you need to use ```\n2.0```\n it because otherwise Java will round the result.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Replacing multiplication operator in existing keras (tensorflow) model\r\n                \r\nI am currently using an existing Keras implementation of a certain model and I would like to study the effects of different multiplication implementations on its computational speed and accuracy.\n\nIs there a simple way to replace the Keras (TensorFlow) multiplication that is used in its Dense and Conv (and other pre-existing) layers with a custom one?\n\nThe idea is also to see the difference between training with normal multiplication + testing with custom multiplication and doing both with the custom multiplication.\n\nSo I'm looking for a solution that's something like:\n\n```\nimport tensorflow as tf\ntf.__mul__ = custom_mult\n```\n\n\nand will replace all multiplication operations in Keras's default layers with my own implementation.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "tricky binary multiplication\r\n                \r\nI attempted to multiply binary 1111 as first input and 1111 as second input. When I multiply as usual I came across having to do the addition below I encounter having to carry the 1 with the three 1's which would mean 4 in binary with 2 bits. But that's impossible to represent 4 in 2 bits for this multiplication problem. \n    ", "Answer": "\r\nIf you want to add multiple binary values, then you just carry whatever is left over after adding a column, regardless of how many bits you need to represent the carry.\n\nIt's just like doing the decimal add 99+99+99+99+99+99+99+99+99+99+99+99, when adding the least significant column, you end up with 108, so you carry 10 eventhough it's too large to fit in a single digit.\n\nLikewise, if you add the binary 11+11+11+11+11 you end up with 101 when adding the least significant column, so you carry 10.\n\nHowever, normally you only add two binary numbers at a time, as that lets you get away with using a single bit for carry.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "I am working with Matrix multiplication but have problem\r\n                \r\n\n  index 1 is out of bounds for axis 0 with size 1\n\n\nits working perfectly with sq matrix multiplication but having problem with\nrectangular matrix \nkindly find me the mistake\n\n```\nimport numpy as np\nA=np.array([[12,7,3],\n    [4 ,5,6],\n   [7 ,8,9]]) \nB=np.array([[1],[1],[1]])\nr1,c1=A.shape\nr2,c2=B.shape\nC=np.array([[0 for j in range(c2)] for i in range(r1)])\nif c1==r2:\n    for k in range(r1):\n        for i in range(c2+1):\n            for j in range(c1):\n                C[i][j]+=A[k][j]*B[j][i]\n    print(\"Matrix After Multiplication \\n\\n\",C)\nelse:\n    print('Multiplication is not possible')\n```\n\n    ", "Answer": "\r\nI think\n\n```\nfor i in range(c2+1):\n```\n\n\nruns out of the range, since \n\n```\nr2,c2=B.shape\n```\n\n\nso (c2+1) is too large.\n\nBut\n\n```\nA=np.array([[12,7,3],\n    [4 ,5,6],\n   [7 ,8,9]]) \nB=np.array([[1],[1],[1]])\n\nC = A@B\nC\n```\n\n\nor \n\n```\nC = np.dot(A,B)\nC\n```\n\n\nis MUCH more efficient\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "mix left-add multiplier, school book algo for signed multiplication\r\n                \r\nI am trying to produce an efficient extended multiplication in assembly language. Although my code works well, I have some issue with a signed multiplication. Presently, my number are based on the two complement method, I convert my number to positive make my multiplication and then adjust the final size. It works but a little dummy, as it necessitates extra copy. I opened a hardware book and I discovers the shift-add multiplier which run well for signed number.\n\nSo considering I work on 4 bit number for input, I get a 8 bit for output. I want to make the multiplication -3 * 3, with a left shift binary multiplier, I have : \n\n```\n                     1101  // -3\n               X     0011  // 3 \n         -----------------------\n         11111101 // I make the first x with sign extension\n         1111101 // I make the a second x with sign extension,\n         000000  // 0 no sign extension\n         00000   // Later I will subtract this in case \"of\", as in book\n         -----------------------\n         11110111 <----------- final addition I get -9 OK it works\n```\n\n\nSo now let's go for an hybrid solution with school book algo, I decompose my first number\n1101 to 11 and 01, and the same for 0011 to 00 and 11. If I rewrite my algo, as we learnt at school:\n\n```\n           11 01\n           00 11\n           ---------------\n           00 11  (unsigned mul 01 x 11 gives 00 11) , no sign extension\n        10 01     (11 * 11  gives 10 01)                             \n        --------------------\n        10 01 11 (sum)\n     11 10 01 11 (I made a sign extension until 8 bit)\n     00 00 00 00 (the last multiplication only 0)\n     -----------------------       \n     11 10 01 11 (final sum) \n```\n\n\nConclusion 11110111 != 11100111, I lost a bit.\n\nWell, where is the pb ?\n\nBest.\n    ", "Answer": "\r\nYou're doing something odd.\n\nThere are several common ways to multiply signed integers:\n\n\nAs you describe, you can first multiply the absolute values of the two multiplicands and then if the product is expected to be negative, negate it.\nYou multiply the integers using unsigned multiplication and then if one multiplicand is negative you subtract the other one from the most significant half of the product (and then you repeat the same symmetrically, checking the other multiplicand for less than 0, etc).\nYou use Booth's algorithm.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Type-safe matrix multiplication\r\n                \r\nAfter the long-winded discussion at Write this Scala Matrix multiplication in Haskell, I was left wondering...what would a type-safe matrix multiplication look like? So here's your challenge: either link to a Haskell implementation, or implement yourself, the following:\n\n```\ndata Matrix ... = ...\n\nmatrixMult :: Matrix ... -> Matrix ... -> Matrix ...\nmatrixMult ... = ...\n```\n\n\nWhere ```\nmatrixMult```\n produces a type error at compile time if you try to multiply two matricies with incompatible dimensions. Brownie points if you link to papers or books that discuss this precise topic, and/or discuss yourself how useful/useless this functionality is.\n    ", "Answer": "\r\nThere are a number of packages that implement this:\n\n\nhttp://hackage.haskell.org/package/hmatrix-static\nhttp://hackage.haskell.org/packages/archive/repa-algorithms/2.2.0.1/doc/html/Data-Array-Repa-Algorithms-Matrix.html\nhttp://hackage.haskell.org/packages/archive/blas/0.7.6/doc/html/Data-Matrix-Dense.html#t:Matrix\nhttp://hackage.haskell.org/package/Vec\n\n\nThe Repa papers in particular have a really nice discussion of the design space and choices made: http://repa.ouroborus.net/\n\nOf historical interest is McBride's \"Faking It\" from 2001 which describes strongly typed vectors. The techniques he employs are fairly similar to those used in the above packages. They were obviously known in circles doing dependently typed programming, but my impression is that the \"Faking It\" paper is one of the earlier instances where these were used in Haskell. Oleg's 2005 Monad Reader article on number-parameterized types has some good discussion on the history of these techniques as well.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Scalar Multiplication\r\n                \r\nEDIT\nThe question is this: Scalar multiplication is defined as B = A * s, where B and A are equally sized matrices (2D array of numbers, in this example let's use integers) and s is a scalar value. Each element of A is multiplied to s, which is then stored in the corresponding element in matrix B. \n\nWrite a program that accepts a 4x4 matrix and a scalar value, and perform scalar multiplication, storing the result in a separate 4x4 matrix.\n\n```\nimport java.util.*;\npublic class arrayExercises {\n\npublic static void main (String [] args){\n\n//Scalar Value  \nScanner sc = new Scanner (System.in);\nint scalar = 0;\n\n//Array for A\nint matrix [][];\nmatrix = new int [4][4];\n\nSystem.out.println(\"Enter the numbers in the 4x4 matrix\");\nfor (int i=0; i < matrix.length; i++)\n    {\n    for (int j =0; j<matrix[i].length; j++)\n        matrix[i][j] = sc.nextInt();    \n}\n\nSystem.out.println(\"Enter scaler value:\");\nscalar = sc.nextInt();\n\n\n\nsc.close(); \n}\n```\n\n\n}\n    ", "Answer": "\r\nnot giving a direct solution. giving you a hint instead.\n\nso far from your code, you have created a matrix and withing 2 for loop you have set the values of the matrix from user input.\n\nnow to get a scalar multiplication you need to do a similar operation. create another matrix of the same size as the previous matrix. and in a similar way within 2 loop multiply each and every element of the old matrix with the scalar value and set it to the coresponding index of the new matrix.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Replacing multiplication operator in existing keras (tensorflow) model\r\n                \r\nI am currently using an existing Keras implementation of a certain model and I would like to study the effects of different multiplication implementations on its computational speed and accuracy.\n\nIs there a simple way to replace the Keras (TensorFlow) multiplication that is used in its Dense and Conv (and other pre-existing) layers with a custom one?\n\nThe idea is also to see the difference between training with normal multiplication + testing with custom multiplication and doing both with the custom multiplication.\n\nSo I'm looking for a solution that's something like:\n\n```\nimport tensorflow as tf\ntf.__mul__ = custom_mult\n```\n\n\nand will replace all multiplication operations in Keras's default layers with my own implementation.\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Algorithm for matrix multiplication\r\n                \r\nI am required to write a one-loop algorithm for matrix multiplication without using ```\n%*%```\n, with the help of ```\ncolSums()```\n.\nI have tried working through matrix multiplication traits, but failed to find a pattern which can be attained with ```\ncolSums()```\n.\n    ", "Answer": "\r\n                \r\nIf you are NOT ALLOWED to use ```\n%*%```\n and HAVE TO take ```\ncolSums```\n anyway, you can try\n```\nmatrix(\n    colSums(t(a)[, rep(1:nrow(a), each = ncol(b))] * b[, rep(1:ncol(b), nrow(a))]), \n    nrow(a),\n    byrow = TRUE\n)\n```\n\nExample: Given two matrices ```\na```\n and ```\nb```\n like below\n```\n> set.seed(0)\n\n> (a <- matrix(runif(12), 3))\n          [,1]      [,2]      [,3]       [,4]\n[1,] 0.8966972 0.5728534 0.8983897 0.62911404\n[2,] 0.2655087 0.9082078 0.9446753 0.06178627\n[3,] 0.3721239 0.2016819 0.6607978 0.20597457\n\n> (b <- matrix(rnorm(8), 4))\n             [,1]       [,2]\n[1,] -0.928567035  0.7635935\n[2,] -0.294720447 -0.7990092\n[3,] -0.005767173 -1.1476570\n[4,]  2.404653389 -0.2894616\n```\n\nwe have\n```\n> a %*% b\n            [,1]       [,2]\n[1,]  0.50614499 -0.9861506\n[2,] -0.37108354 -1.6249737\n[3,]  0.08650475 -0.6949853\n\n> matrix(\n+     colSums(t(a)[, rep(1:nrow(a), each = ncol(b))] * b[, rep(1:ncol(b), nrow(a))]),\n+     nrow(a),\n+     byrow = TRUE\n+ )\n            [,1]       [,2]\n[1,]  0.50614499 -0.9861506\n[2,] -0.37108354 -1.6249737\n[3,]  0.08650475 -0.6949853\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Rust type-level multiplication\r\n                \r\nI'm trying to implement type-level multiplication in Rust.\n\nAddition is already working, but I got issues with a \"temporary\" type variable.\n\nThe code:\n\n```\nuse std::marker::PhantomData;\n\n//Trait for the type level naturals\ntrait Nat {}\nimpl Nat for Zero {}\nimpl<T: Nat> Nat for Succ<T> {}\n\n//Zero and successor types\nstruct Zero;\nstruct Succ<T: Nat>(PhantomData<T>);\n\n//Type level addition\ntrait Add<B,C> \n  where Self: Nat,\n        B: Nat,\n        C: Nat \n  {}\n\nimpl<B: Nat> Add<B,B> for Zero {}\nimpl<A: Nat,B: Nat,C: Nat> Add<B,C> for Succ<A>\n  where A: Add<Succ<B>,C>\n  {}\n\nfn add<A: Nat, B: Nat, C: Nat>(\n  a: PhantomData<A>, \n  b: PhantomData<B>) \n  -> PhantomData<C> \n    where A: Add<B,C> { PhantomData }\n\n//Type level multiplication\ntrait Mult<B,C>\n  where Self: Nat,\n        B: Nat,\n        C: Nat,\n  {}\n\nimpl<B: Nat> Mult<B,Zero> for Zero {}\n\n//ERROR HERE: \"unconstrained type parameter 'C'\"\n//impl<A: Nat, B: Nat,C: Nat, D: Nat> Mult<B,D> for Succ<A>\n//  where A: Mult<B,C>,\n//        B: Add<C,D>\n//        {}\n\n\nfn main() {\n    let x: PhantomData<Succ<Succ<Zero>>> = PhantomData;\n    let y: PhantomData<Succ<Zero>> = PhantomData;\n\n    //uncomment ': i32' in the next line to see infered type\n    let z /*: i32*/ = add(x,y);\n}\n```\n\n\nThe posted code compiles just fine and addition works.\nIf I uncomment the ERROR HERE section I get the following error message:\n\n```\nerror[E0207]: the type parameter `C` is not constrained by the impl trait, self type, or predicates\n  --> src/main.rs:40:21\n   |\n40 | impl<A: Nat, B: Nat,C: Nat, D: Nat> Mult<B,D> for Succ<A>\n   |                     ^ unconstrained type parameter\n\nerror: aborting due to previous error\n\nerror: Could not compile `4_18_generics`.\n\nTo learn more, run the command again with --verbose.\n```\n\n\n\n\n\nIs there a way to use such \"temporary/intermediate\" type parameters?\nIs multiplication possible in any other way (I am currently not thinking of)?\nIs it generally not possible?\nWill it be possible in a future version of the language?\n\n    ", "Answer": "\r\nI think you are misusing generics, and that is the root of your issue.\n\nGenerics in Rust have inputs and outputs:\n\n\nThe inputs are specified as parameters between ```\n<>```\n\nThe outputs (also called associated types) are specified inside the type\n\n\nThe intuition is that for a given set of inputs, a single type is selected for each output.\n\nIn your case, we have to rework the traits for that:\n\n```\ntrait Add<Rhs: Nat>: Nat {\n    type Result: Nat;\n}\n```\n\n\nThe definition of the trait says:\n\n\n```\nAdd```\n requires that ```\nSelf```\n be ```\nNat```\n\n```\nAdd```\n is implemented for a right-hand side argument which must be ```\nNat```\n\nA given implementation of ```\nAdd```\n has a ```\nResult```\n type, which must be ```\nNat```\n\n\n\nNow we can implement it:\n\n```\nimpl<T: Nat> Add<T> for Zero {\n    type Result = T;\n}\n\nimpl<A: Nat, B: Nat> Add<B> for Succ<A>\n    where A: Add<Succ<B>>\n{\n    type Result = < A as Add<Succ<B>> >::Result;\n}\n```\n\n\nNote that functions are completely unnecessary, the result of \"A + B\" is:\n\n```\n<A as Add<B>>::Result\n```\n\n\nNow, on to multiplication:\n\n```\ntrait Mul<Rhs: Nat>: Nat {\n    type Result: Nat;\n}\n\nimpl<T: Nat> Mul<T> for Zero {\n    type Result = Zero;\n}\n\n\n// The first attempt does not work, but I'm keeping it here as \n// it is good for learning purpose.\n// \n// impl<A: Nat, B: Nat> Mul<B> for Succ<A>\n//    where A: Mul<B> + Add< <A as Mul<B>>::Result >\n// {\n//    type Result = <A as Add< <A as Mul<B>>::Result >>::Result;\n// }\n//\n// Think: \n//   1. Why exactly does it not work? \n//   2. What exactly is going on here?\n//   3. How would you multiply numbers in terms of addition? \n//   4. m * n = m + m + m ... (n times)? Or: n + n + .. (m times)?\n// \n// Answering these questions will help learning the intricacies of\n// Rust's traits/type-system and how they work. \n\nimpl<A: Nat, B: Nat> Mul<B> for Succ<A>\nwhere\n    A: Mul<B>,\n    B: Add<<A as Mul<B>>::Result>,\n{\n    type Result = <B as Add<<A as Mul<B>>::Result>>::Result;\n}\n```\n\n\nAnd this now compiles:\n\n```\nfn main() {\n    type One = Succ<Zero>;\n    type Two = <One as Add<One>>::Result;\n    type Four = <Two as Mul<Two>>::Result;\n}\n```\n\n\nNote that such Peano arithmetic has fairly annoying limitations though, notably in the depth of recursion. Your addition is O(N), your multiplication is O(N^2), ...\n\nIf you are interested in more efficient representations and computations, I advise you to check the typenum crate which is the state of the art.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "mix left-add multiplier, school book algo for signed multiplication\r\n                \r\nI am trying to produce an efficient extended multiplication in assembly language. Although my code works well, I have some issue with a signed multiplication. Presently, my number are based on the two complement method, I convert my number to positive make my multiplication and then adjust the final size. It works but a little dummy, as it necessitates extra copy. I opened a hardware book and I discovers the shift-add multiplier which run well for signed number.\n\nSo considering I work on 4 bit number for input, I get a 8 bit for output. I want to make the multiplication -3 * 3, with a left shift binary multiplier, I have : \n\n```\n                     1101  // -3\n               X     0011  // 3 \n         -----------------------\n         11111101 // I make the first x with sign extension\n         1111101 // I make the a second x with sign extension,\n         000000  // 0 no sign extension\n         00000   // Later I will subtract this in case \"of\", as in book\n         -----------------------\n         11110111 <----------- final addition I get -9 OK it works\n```\n\n\nSo now let's go for an hybrid solution with school book algo, I decompose my first number\n1101 to 11 and 01, and the same for 0011 to 00 and 11. If I rewrite my algo, as we learnt at school:\n\n```\n           11 01\n           00 11\n           ---------------\n           00 11  (unsigned mul 01 x 11 gives 00 11) , no sign extension\n        10 01     (11 * 11  gives 10 01)                             \n        --------------------\n        10 01 11 (sum)\n     11 10 01 11 (I made a sign extension until 8 bit)\n     00 00 00 00 (the last multiplication only 0)\n     -----------------------       \n     11 10 01 11 (final sum) \n```\n\n\nConclusion 11110111 != 11100111, I lost a bit.\n\nWell, where is the pb ?\n\nBest.\n    ", "Answer": "\r\nYou're doing something odd.\n\nThere are several common ways to multiply signed integers:\n\n\nAs you describe, you can first multiply the absolute values of the two multiplicands and then if the product is expected to be negative, negate it.\nYou multiply the integers using unsigned multiplication and then if one multiplicand is negative you subtract the other one from the most significant half of the product (and then you repeat the same symmetrically, checking the other multiplicand for less than 0, etc).\nYou use Booth's algorithm.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Python range function: increase step by multiplication of a number [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        How do i loop over a geometric sequence. i need to loop some function over 1, 2, 4, 8, 16\r\n                            \r\n                                (3 answers)\r\n                            \r\n                    \r\n                Closed last year.\r\n        \r\n\r\n\r\n    \r\n\r\nIn C++, it can be written inside a ```\nfor```\n loop:\n```\nfor(int i = 1; i < n; i++)\n{\n    for(int j = i; j <= n; j = j*7)    // increase j multiplication of 7\n    {    \n        // codes goes here\n    }\n}\n```\n\nbut how to increase step by multiplication of a number in ```\nrange()```\n function in Python?\n    ", "Answer": "\r\n```\nrange```\n only does linear ranges. There are a number of things you could do.\nYou could use a while loop:\n```\nfor i in range(1, n):\n   j = i\n   while j <= n:\n      # code goes here\n      j *= 7\n```\n\nIf you want to use this kind of loop multiple times, you could write a generators:\n```\ndef mul_range(start, stop, multiple):\n    value = start\n    while value < stop: # using < for consistency with range\n        yield value\n        value *= multiple\n\n...\n\nfor i in range(1, n):\n    for j in mul_range(i, n + 1, 7):\n        ... # code here\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "jQuery Array multiplication & addition\r\n                \r\nI have two arrays:\n\nEx: ```\ncount[\"1\",\"3\",\"1\"..........]```\n, ```\namount[\"10\",\"20\",\"30\"..........]```\n\n\nI need to perform multiplication & addition as:\n\n```\nvar total = (1x10)+(2x20)+(1x30)...........\n```\n\n\nCan anyone help. Thanks\n    ", "Answer": "\r\nYou can use this code\n\n\r\n\r\n```\nvar count = [1, 3, 1];\r\nvar amount = [10, 20, 30];\r\nvar sum = 0;\r\nfor (var i = 0; i < count.length; i++) {\r\n  sum += count[i] * amount[i];\r\n}\r\nconsole.log(sum)```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Cryptarithmetic Multiplication Prolog\r\n                \r\nI have the grasp of the idea of crypt arithmetic and addition but I cannot figure out how to do a multiplication crypt arithmetic problem. It's simply TWO*SIX=TWELVE or something along those lines without the middle additional part of the multiplication problem given. I couldn't find anything online and I already found some constraints for the problem but nothing to leads me to some answers. Not sure where to ask this and thought this would be the best place.\n\nI want to know how to solve a multiplication crypt arithmetic problem.\n\nI already concluded:\n\n```\n         T  W  O\n*        S  I  X\n_________________\nT  W  E  L  V  E\n\n\nT \\= 0 which also means S \\= 0\nT is 1-6\nE is (O*X) mod 10\nO or X cannot be 0 or 1 since E has to be different and 0 or 1 gives the same value \nas either O or X.\n```\n\n\nEDIT: I was using the generate and test method\n\n```\nsolve(T,W,O,S,I,X,E,L,V) :-\n        X = [T,W,O,S,I,X,E,L,V],\n        Digits = [0,1,2,3,4,5,6,7,8,9],\n        assign_digits(X, Digits),\n        T > 0, \n        S > 0,\n        100*T + 10*W + O * 100*S + 10*I + X =:=\n        100000*T + 10000*W + 1000*E + 100*L + 10*V + E,\n        write(X).\n\nselect(X, [X|R], R).\nselect(X, [Y|Xs], [Y|Ys]):- select(X, Xs, Ys).\n\nassign_digits([], _List).\nassign_digits([D|Ds], List):-\n        select(D, List, NewList),\n        assign_digits(Ds, NewList).\n```\n\n    ", "Answer": "\r\nTrivially to do with constraint logic programming. For example, in ECLiPSe Prolog:\n\n```\n:- lib(ic).\npuzzle(Vars) :-\n    [T,W,O,S,I,X,E,L,V] = Vars,\n    Vars :: 0..9,\n    alldifferent(Vars),\n    T #> 0, S #> 0,\n    (100*T + 10*W + O) * (100*S + 10*I + X) #= \n      100000*T + 10000*W + 1000*E + 100*L + 10*V + E,\n    labeling(Vars).\n```\n\n\nFirst solution:\n\n```\n[eclipse]: puzzle([T,W,O,S,I,X,E,L,V]).\nT = 1\nW = 6\nO = 5\nS = 9\nI = 7\nX = 2\nE = 0\nL = 3\nV = 8\nYes (0.01s cpu, solution 1, maybe more) ? \n```\n\n\nThere are 3 different solutions:\n\n```\n[eclipse]: puzzle([T,W,O,S,I,X,E,L,V]), writeln([T,W,O,S,I,X,E,L,V]), fail.\n[1, 6, 5, 9, 7, 2, 0, 3, 8]\n[2, 1, 8, 9, 6, 5, 0, 3, 7]\n[3, 4, 5, 9, 8, 6, 0, 1, 7]\nNo (0.02s cpu)\n```\n\n\nUpdate - translation to SWI Prolog:\n\n```\n:- use_module(library(clpfd)).\npuzzle(Vars) :-\n    [T,W,O,S,I,X,E,L,V] = Vars,\n    Vars ins 0..9,\n    all_different(Vars),\n    T #> 0, S #> 0,\n    (100*T + 10*W + O) * (100*S + 10*I + X) #= \n      100000*T + 10000*W + 1000*E + 100*L + 10*V + E,\n    label(Vars).\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication in pyspark\r\n                \r\nI tried to implement matrix multiplication in pyspark, but it seems that there is something wrong with the multiply() function, could anyone help me with that?\nThank you!\n\n```\n    from pyspark import SparkContext, SparkConf\n    import sys\n    #define multiplication method\n    def multiply(x):\n        res = []\n        for a in x[1]:\n            if a[0] != 'A':\n                continue\n            else:\n                for b in x[1]:\n                    if b[0] != 'B':\n                        continue\n                    else:\n                        res.union(((a[1], b[1]), (a[2]*b[2])))\n        return res\n\n    conf = SparkConf().setMaster(\"local[*]\").setAppName(\"MatrixMultiplication\")\n    sc = SparkContext(conf = conf)\n\n    matA = sc.textFile(sys.argv[1])\n    matB = sc.textfile(sys.argv[2])\n\n\n    matA = matA.map(lambda x: x.split(','))\n    matA = matA.map(lambda x:(x[1], ('A', x[0], x[2])))\n\n    matB = matB.map(lambda x: x.split(','))\n    matB = matB.map(lambda x:(x[0], ('B', x[1], x[2])))\n\n    mat = matA.union(matB)\n    mat = mat.groupByKey()\n\n    matC = mat.flatMap(multiply).reduceByKey(lambda x,y: x+y)\n    output = matC.collect()\n    f = open(sys.argv[3], 'w')\n    for x in output:\n        f.write(str(x[0][0]) + ',' + str(x[0][1])+'\\t' + str(x[1]) + '\\n')\n```\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to use Java 17 vector instructions to optimize matrix multiplication?\r\n                \r\nI'm trying to optimize matrix multiplication implemented using Java with nested loops. I'm planning to use Java 17 vector API to optimize performance.\nI have read the documentation of the Vector API, but I am not sure how to apply them to my matrix multiplication code.\nI'm using the following code to multiply the metrics based on this tutorial.\n```\n    int row1 = 4, col1 = 3, row2 = 3, col2 = 4;\n\n    int A[][] = { { 1, 1, 1 },\n                  { 2, 2, 2 },\n                  { 3, 3, 3 },\n                  { 4, 4, 4 } };\n\n    int B[][] = { { 1, 1, 1, 1 },\n                  { 2, 2, 2, 2 },\n                  { 3, 3, 3, 3 } };\n\n    int i, j, k;\n\n    // Check if multiplication is Possible\n    if (row2 != col1) {\n        System.out.println(\"Multiplication Not Possible\");\n        return;\n    }\n\n    // Matrix to store the result\n    // The product matrix will\n    // be of size row1 x col2\n    int C[][] = new int[row1][col2];\n\n    // Multiply the two matrices\n    for (i = 0; i < row1; i++) {\n        for (j = 0; j < col2; j++) {\n            for (k = 0; k < row2; k++)\n                C[i][j] += A[i][k] * B[k][j];\n        }\n    }\n```\n\nMy questions are:\n\nHow do I handle cases where the array length or the matrix size is not a multiple of the vector length?\nI would appreciate some guidance or examples on how to use Java 17 vector instructions to optimize matrix multiplication.\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "What will happen first multiplication after increment or multiplication before increment? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Undefined behavior and sequence points\r\n                            \r\n                                (5 answers)\r\n                            \r\n                    \r\n                    \r\n                        Why are these constructs using pre and post-increment undefined behavior?\r\n                            \r\n                                (15 answers)\r\n                            \r\n                    \r\n                Closed 6 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nThe Output of this program is coming out to be 4.00000.\nI don't know that what will happen first multiplication of 2 with c and then increment takes place or multiplication of 2 with increased c?  \n\n```\nint main()        \n{\nint c=1;\nc=c+2*c++;\nprintf(\"\\n%f\", c);\nreturn 0;\n}\n```\n\n    ", "Answer": "\r\nThis invokes undefined behavior, which means that anything can happen in your program.\n\nSee the C99 spec, specifically J.2 Undefined Behavior:\n\n\n  The behavior is undefined in the following circumstances: [...]\n  \n  \n  Between two sequence points, an object is modified more than once, or is modified and the prior value is read other than to determine the value to be stored (6.5).\n  \n\n\nAs a rule of thumb, \"between two sequence points\" means between two semicolons (```\n;```\n) that end a statement. The \"object\" mentioned in the excerpt is the variable ```\nc```\n.\n\nWith that out of the way, we can clearly see that the object is modified twice between two sequence points. It's modified once during the evaluation of the expression ```\nc++```\n and once during the assignment.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Where is strassen's matrix multiplication useful?\r\n                \r\nStrassen's algorithm for matrix multiplication just gives a marginal improvement over the conventional ```\nO(N^3)```\n algorithm. It has higher constant factors and is much harder to implement. Given these shortcomings, is strassens algorithm actually useful and is it implemented in any library for matrix multiplication? Moreover, how is matrix multiplication implemented in libraries?\n    ", "Answer": "\r\nGenerally Strassen’s Method is not preferred for practical applications for following reasons.\n\n\nThe constants used in Strassen’s method are high and for a typical application Naive method works better.\nFor Sparse matrices, there are better methods especially designed\nfor them.\nThe submatrices in recursion take extra space.\nBecause of the limited precision of computer arithmetic on\nnoninteger values, larger errors accumulate in Strassen’s algorithm\nthan in Naive Method.\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication in object javascript [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Self-references in object literals / initializers\r\n                            \r\n                                (31 answers)\r\n                            \r\n                    \r\n                Closed 6 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI have object like this :\n\n```\nvar item = {\n A : 3,\n B : 4,\n C : parseInt(A*B)\n}\n```\n\n\nI want to perform multiplication, C = A*B , i have tried to do multiplication as specfied in above object but did not work . How can i do that . Please help me\n    ", "Answer": "\r\nYou could reach the desired result with a simple function.\n\n\r\n\r\n```\nvar item = {\r\n A : 3,\r\n B : 4,\r\n C : function() {\r\n       return this.A * this.B;\r\n     }\r\n}\r\n\r\nconsole.log(item.C());```\n\r\n\r\n\r\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "How to use Java 17 vector instructions to optimize matrix multiplication?\r\n                \r\nI'm trying to optimize matrix multiplication implemented using Java with nested loops. I'm planning to use Java 17 vector API to optimize performance.\nI have read the documentation of the Vector API, but I am not sure how to apply them to my matrix multiplication code.\nI'm using the following code to multiply the metrics based on this tutorial.\n```\n    int row1 = 4, col1 = 3, row2 = 3, col2 = 4;\n\n    int A[][] = { { 1, 1, 1 },\n                  { 2, 2, 2 },\n                  { 3, 3, 3 },\n                  { 4, 4, 4 } };\n\n    int B[][] = { { 1, 1, 1, 1 },\n                  { 2, 2, 2, 2 },\n                  { 3, 3, 3, 3 } };\n\n    int i, j, k;\n\n    // Check if multiplication is Possible\n    if (row2 != col1) {\n        System.out.println(\"Multiplication Not Possible\");\n        return;\n    }\n\n    // Matrix to store the result\n    // The product matrix will\n    // be of size row1 x col2\n    int C[][] = new int[row1][col2];\n\n    // Multiply the two matrices\n    for (i = 0; i < row1; i++) {\n        for (j = 0; j < col2; j++) {\n            for (k = 0; k < row2; k++)\n                C[i][j] += A[i][k] * B[k][j];\n        }\n    }\n```\n\nMy questions are:\n\nHow do I handle cases where the array length or the matrix size is not a multiple of the vector length?\nI would appreciate some guidance or examples on how to use Java 17 vector instructions to optimize matrix multiplication.\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "how to do two complement multiplication and division of integers?\r\n                \r\nI have read this post on binary multiplication using two complement. but it is not very clear to me. Even I have difficulty understanding the wiki article on this. I want to know how to go about calculating multiplications of negative numbers:\n\n```\neg: -1 with -7 should give 7.\nA 4-bit, 2's complement of -1 is : 1111\nA 4-bit, 2's complement of -7 is : 1001\n```\n\n\nsome step-wise way of calculating the multiplication will be helpful. No article I came across talks about division. How to approach this?\n    ", "Answer": "\r\nstep 1: ```\nsign extend```\n both integers to twice as many bits. This is safe to do, though may not always be necessary.\n```\nfor 4-bit --> 1111, you would extend as 1111 1111\nfor 4-bit --> 0111,you would extend as 0000 0111\n```\n\nstep 2: do elementary multiplication\nsep 3: take the correct number of result bits from the least significant portion of the result.\neg: after multiplication, you end up with something such as ```\n0010011110 ```\ntake the last 8 bits i.e ```\n10011110```\n\nLet me illustrate with the example you provided: ```\n-1 X -7```\n in 4-bit representation\n```\n         1111 1111        -1\n       x 1111 1001     x  -7\n      ----------------    ------\n          11111111         7\n         00000000\n        00000000\n       11111111\n      11111111\n     11111111\n    11111111\n   11111111\n   ----------------\n1  00000000111       --->  7 (notice the Most significant bit is zer``o)\n      --------  (last 8-bits needed) \n```\n\nyou could get more details here;\nfor division: convert to positive and after the calculation adjust the sign. I will leave this as exercise but you could refer this page.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Integer division, or float multiplication?\r\n                \r\nIf one has to calculate a fraction of a given int value, say:\n\n```\nint j = 78;\nint i = 5* j / 4;\n```\n\n\nIs this faster than doing:\n\n```\nint i = 1.25*j; // ?\n```\n\n\nIf it is, is there a conversion factor one could use to decide which to use, as in how many ```\nint```\n divisions can be done in the same time a one ```\nfloat```\n multiplication?\n\nEdit: I think the comments make it clear that the floating point math will be slower, but the question is, by how much? If I need to replace each ```\nfloat```\n multiplication by N ```\nint```\n divisions, for what N will this not be worth it anymore?\n    ", "Answer": "\r\nYou've said all the values are dynamic, which makes a difference. For the specific values ```\n5 * j / 4```\n, the integer operations are going to be blindingly fast, because pretty much the worst case is that the compiler optimises them to two shifts and one addition, plus some messing around to cope with the possibility that ```\nj```\n is negative. If the CPU can do better (single-cycle integer multiplication or whatever) then the compiler typically knows about it. The limits of compilers' abilities to optimize this kind of thing basically come when you're compiling for a wide family of CPUs (generating lowest-common-denominator ARM code, for example), where the compiler doesn't really know much about the hardware and therefore can't always make good choices.\n\nI suppose that if ```\na```\n and ```\nb```\n are fixed for a while (but not known at compile time), then it's possible that computing ```\nk = double(a) / b```\n once and then ```\nint(k * x)```\n for many different values of ```\nx```\n, might be faster than computing ```\na * x / b```\n for many different values of ```\nx```\n. I wouldn't count on it.\n\nIf all the values vary each time, then it seems unlikely that the floating-point division to compute the ```\n1.25```\n, followed by floating-point multiplication, is going to be any faster than the integer multiplication followed by integer division. But you never know, test it.\n\nIt's not really possible to give simple relative timings for this on modern processors, it really depends a lot on the surrounding code. The main costs in your code often aren't the \"actual\" ops: it's \"invisible\" stuff like instruction pipelines stalling on dependencies, or spilling registers to stack, or function call overhead. Whether or not the function that does this work can be inlined might easily make more difference than how the function actually does it. As far as definitive statements of performance are concerned you can basically test real code or shut up. But the chances are that if your values start as integers, doing integer ops on them is going to be faster than converting to ```\ndouble```\n and doing a similar number of ```\ndouble```\n ops.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Are there errors in purely integer multiplication?\r\n                \r\nI know there are errors in floating point multiplication but are there errors in purely integer multiplication? Let's say I'm using Python, how large of integers A and B can I compute A*B and get answers that are exactly right? where is the wall? Also the same with addition?\n    ", "Answer": "\r\nThere is no error in (correct) floating-point multiplication.  Rounding may occur, but that’s not an error, that’s the defined behavior of the arithmetic.  Colloquially this is called “rounding error”, but it is not an “error” in the normal sense of the word.\n\nThere is no error in (correct) integer multiplication.  In some languages, overflow may occur, but that’s not an error, that’s the defined behavior of the arithmetic*.\n\nIn Python in particular, overflow does not occur with integer multiplication**; the result is equal to the “mathematically exact” result, and is silently promoted to a bignum if necessary.  The same holds true for addition.\n\n[*] there are some languages where overflow produces a trap or throws an exception; again, however, that’s the defined behavior in those languages.\n\n[**] so long as the result isn’t so large that storage for it cannot be allocated.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "multiplication in java by using *=?\r\n                \r\n```\n(i += 1)```\n is equivalent to ```\ni = i + 1```\n\n\nis it possible to have something like above by using multiplication like:\n\n```\n(i *= 1)```\n ,  ```\ni = i * 1```\n\n\nI have try it by declare as double but I keep get 0.0 value in my result?\n    ", "Answer": "\r\nIt sounds like you're multiplying zero by one.\n\n```\n0 * 1 = 0```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "multik vectorized subtraction and multiplication\r\n                \r\nI am looking to perform the following on android using multik and I have been unsuccessful:\nGiven\n```\n    A = [3x3]\n    v = [nx3]\n    C = [1x3]\n\n    result = A*(v-C)\n```\n\nIs there a way to perform the subtraction of [nx3] - [1x3] ?\nSimilarly, can the multiplication of [3x3] * [3xn] be done?\nOn the Quick Start guide , the multiplication example (f*d) seems to show element-wise multiplication not vector multiplication.\nAny recommendations to use different libraries is welcome.\nThanks\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication program\r\n                \r\nI am making this multiplication program in python 2.7.5 for my sister, and I don't know how to count the correct answers.  Here is the code:\n\n```\nimport easygui\nfor i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:\n    answer = easygui.enterbox(\"What is \" + str(i) + ' times 8?')\n    if int(answer) == i * 8:\n        easygui.msgbox(\"That is correct!\")\n    else:\n        easygui.msgbox(\"Wrong!\")\n```\n\n    ", "Answer": "\r\nWhy not just add a variable to keep count for you?\n\n```\nimport easygui\ncorrect_answers = 0 # start with none correct\nfor i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:\n    answer = easygui.enterbox(\"What is \" + str(i) + ' times 8?')\n    if int(answer) == i * 8:\n        easygui.msgbox(\"That is correct!\")\n        correct_answers += 1 # increment\n    else:\n        easygui.msgbox(\"Wrong!\")\n```\n\n\nYou could improve your program by making the base number a variable, too, and using Python's ```\nstr.format()```\n rather than addition:\n\n```\nbase = 8\n...\n    answer = easygui.enterbox(\"What is {0} times {1}?\".format(i, base))\n    if int(answer) == i * base:\n        ...\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Polynomial multiplication using linked list in c\r\n                \r\nIam working on a program to perform addition,subtraction,multiplication and differentiation operations on a polynomial using linked list in c.\nThe other operations are working fine except multiplication one.\nhere is the code\n\n```\n#include<stdio.h>\n#include<malloc.h>\n#include<conio.h>\nstruct link{\n   int coeff;\n   int pow;\n   struct link *next;\n   };\nstruct link *poly1=NULL,*poly2=NULL,*poly=NULL;\nvoid create(struct link *node)\n{\n char ch;\n do\n {\n  printf(\"\\n\\nenter coeff:\");\n  scanf(\"%d\",&node->coeff);\n  printf(\"\\nenter power:\");\n  scanf(\"%d\",&node->pow);\n  node->next=(struct link*)malloc(sizeof(struct link));\n  node=node->next;\n  node->next=NULL;\nprintf(\"\\ncontinue(y/n):\");\nch=getch();\n}\nwhile(ch=='y' || ch=='Y');\n}\nvoid show(struct link *node)\n{\nwhile(node->next!=NULL)\n{\n\nprintf(\"%dx^%d\",node->coeff,node->pow);\nnode=node->next;\nif(node->next!=NULL)\nprintf(\" + \");\n\n\n}\n}\nvoid polyadd(struct link *poly1,struct link *poly2,struct link *poly)\n{\n while(poly1->next &&  poly2->next)\n {\n  if(poly1->pow>poly2->pow)\n  {\n   poly->pow=poly1->pow;\n   poly->coeff=poly1->coeff;\n   poly1=poly1->next;\n   }\n  else if(poly1->pow<poly2->pow)\n  {\n   poly->pow=poly2->pow;\n   poly->coeff=poly2->coeff;\n   poly2=poly2->next;\n   }\n  else\n  {\n   poly->pow=poly1->pow;\n   poly->coeff=poly1->coeff+poly2->coeff;\n   poly1=poly1->next;\n   poly2=poly2->next;\n   }\n  poly->next=(struct link *)malloc(sizeof(struct link));\n  poly=poly->next;\n  poly->next=NULL;\n }\n while(poly1->next || poly2->next)\n {\n  if(poly1->next)\n  {\n   poly->pow=poly1->pow;\n   poly->coeff=poly1->coeff;\n   poly1=poly1->next;\n   }\n  if(poly2->next)\n  {\n   poly->pow=poly2->pow;\n   poly->coeff=poly2->coeff;\n   poly2=poly2->next;\n   }\n   poly->next=(struct link *)malloc(sizeof(struct link));\n   poly=poly->next;\n   poly->next=NULL;\n   }\n```\n\n\n}\n\n```\nvoid polysub(struct link *poly1,struct link *poly2,struct link *poly)\n{\n while(poly1->next &&  poly2->next)\n {\n  if(poly1->pow>poly2->pow)\n  {\n   poly->pow=poly1->pow;\n   poly->coeff=poly1->coeff;\n   poly1=poly1->next;\n   }\n  else if(poly1->pow<poly2->pow)\n  {\n   poly->pow=poly2->pow;\n   poly->coeff=poly2->coeff;\n   poly2=poly2->next;\n   }\n  else\n  {\n   poly->pow=poly1->pow;\n   poly->coeff=poly1->coeff-poly2->coeff;\n   poly1=poly1->next;\n   poly2=poly2->next;\n   }\n  poly->next=(struct link *)malloc(sizeof(struct link));\n  poly=poly->next;\n  poly->next=NULL;\n }\n while(poly1->next || poly2->next)\n {\n  if(poly1->next)\n  {\n   poly->pow=poly1->pow;\n   poly->coeff=poly1->coeff;\n   poly1=poly1->next;\n   }\n  if(poly2->next)\n  {\n   poly->pow=poly2->pow;\n   poly->coeff=poly2->coeff;\n   poly2=poly2->next;\n   }\n   poly->next=(struct link *)malloc(sizeof(struct link));\n   poly=poly->next;\n   poly->next=NULL;\n   }\n```\n\n\n}\n\n```\nvoid polymul(struct link *n1, struct link *n2, struct link *n)\n{\n    struct link * n2beg=n2;\n\n            while (n1) \n            {\n                    struct link * temp=(struct link *)malloc(sizeof(struct link));\n                    temp->next=NULL;    \n                    n2=n2beg;\n                    while (n2) \n                    {\n                            temp->coeff = n1->coeff * n2->coeff;\n\n                            temp->pow = n1->pow + n2->pow;\n\n                            n2 = n2->next;\n                            temp->next=(struct link *)malloc(sizeof(struct link));\n                            temp=temp->next;\n                            temp->next=NULL;\n\n                    }\n\n                    polyadd(temp,n,n);\n                    n1 = n1->next;\n                    free(temp);\n            }\n```\n\n\n}\n\n```\nvoid diff(struct link* p1,struct link* p2)\n{\n\nwhile(p1->next!=NULL)\n{\n    p2->coeff=p1->coeff*p1->pow;\n    p2->pow=p1->pow-1;\n    p2->next=NULL;\n    p2->next=(struct link *)malloc(sizeof(struct link));\n   p2=p2->next;\n   p2->next=NULL;\n   p1=p1->next;\n}\n\n}\n  main()\n  {\n  int op;\n  char ch;\n  do{\n  poly1=(struct link *)malloc(sizeof(struct link));\n  poly2=(struct link *)malloc(sizeof(struct link));\n  poly=(struct link *)malloc(sizeof(struct link));\n  printf(\"\\n\\nWhat do you want to do?\\n1.Addition\\n2.Subtraction\n          \\n3.Multiplication\\n4.Differentiation\\n0.Exit\n          \\nEnter your choice:\");\n  scanf(\"%d\",&op);\n  switch(op)\n  {\n        case 1:\n            printf(\"\\n\\nenter 1st polynomial:\");\n            create(poly1);\n            printf(\"\\n\\nenter 2nd polynomial:\");\n            create(poly2);\n            printf(\"\\n1st Polynomial:\\t\");\n            show(poly1);\n            printf(\"\\n2nd Polynomial:\\t\");\n            show(poly2);\n            polyadd(poly1,poly2,poly);\n            printf(\"\\nAdded polynomial:\\t\");\n            show(poly);\n            break;\n        case 2:\n            printf(\"\\n\\nenter 1st polynomial:\\t\");\n            create(poly1);\n            printf(\"\\n\\nenter 2nd polynomial:\\t\");\n            create(poly2);\n            printf(\"\\n\\n1st Polynomial:\\t\");\n            show(poly1);\n            printf(\"\\n\\n2nd Polynomial:\\t\");\n            show(poly2);\n            polysub(poly1,poly2,poly);\n            printf(\"\\n\\nSubtracted polynomial:\\t\");\n            show(poly);\n            break;  \n        case 3:\n            printf(\"\\n\\nenter 1st polynomial:\");\n            create(poly1);\n            printf(\"\\n\\nenter 2nd polynomial:\");\n            create(poly2);\n            printf(\"\\n\\n1st Polynomial:\\t\");\n            show(poly1);\n            printf(\"\\n\\n2nd Polynomial:\\t\");\n            show(poly2);\n            polymul(poly1,poly2,poly);\n            printf(\"\\n\\nMultiplied polynomial:\\t\");\n            show(poly);\n            break;\n        case 4:\n            printf(\"\\n\\nenter polynomial:\");\n            create(poly1);\n            printf(\"\\n\\nPolynomial:\\t\");\n            show(poly1);\n            diff(poly1,poly2);\n            printf(\"\\n\\nDifferentiated Polynomial:\\t\");\n            show(poly2);\n            break;\n        }\n\n /* printf(\"\\n Want to continue? Y/N:\");\n  ch=getch();*/\n  }\n  while(op);\n```\n\n\n}\n    ", "Answer": "\r\n```\npolyadd(temp,n,n)```\n as used in ```\npolymul()```\n has trouble coping with using ```\nn```\n as a source polynomial and as the sum destination polynomial.  \n\nEither re-work ```\npolyadd()```\n to cope with parameters that point to the same polynomial or re-work the call of ```\npolyadd()```\n in ```\npolymul()```\n to use distinct polynomials.  Suggest the first.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "16-Bit Multiplication In Assembly?\r\n                \r\nSo I am using C++ with assembly to do 16-bit signed multiplication.\n\nI know that for 16-bits, the multiplicand is AX and the multiplier is either a register or memory operand 16 bit with the product being stored in EDX:EAX which is twice the size of operands.\n\nI am a beginner so I tried first with 8 bit signed multiplication in which it works:\n\n```\n#include \"stdafx.h\"\n#include <stdio.h>\n\nint main()\n{\n    char X, Y;\n    short Z;\n    _asm\n    {\n        MOV X, 5\n        MOV Y, 11\n\n        MOV AL, X\n        MOV BL, Y\n        IMUL BL\n\n        MOV Z, AX\n\n    }\n\n    printf(\"The result times is = %i\", Z);\n\n\n\n    getchar();\n    //system(\"pause\");\n    return 0;\n}\n```\n\n\nbut I'm unsure why the following code wouldn't work for 16 bit instead.\n\n```\n#include \"stdafx.h\"\n#include <stdio.h>\n\nint main()\n{\n    short X, Y;\n    int Z;\n    _asm\n    {\n            MOV X, 5\n            MOV Y, 11\n\n            MOV AX, X\n            MOV BX, Y\n            IMUL BX\n\n            MOV Z, [DX::AX]\n\n    }\n\n    printf(\"The result times is = %i\", Z);\n\n\n\n    getchar();\n    //system(\"pause\");\n    return 0;\n}\n```\n\n    ", "Answer": "\r\nThe reason it doesn't work is that the instruction ```\nMOV Z, [DX::AX]```\n does not exist.  \n\nYou are correct that the result will be stored in DX:AX, but to store the result of those two registers in a memory location you'll have to do two stores.  \n\n```\nlea ecx,z        //load the address of z into cx\nmov [ecx],ax     //8086 is little endian, so store the lower bytes first.\nmov [ecx+2],dx   //store the high bytes \n```\n\n\nI must say that I'm appalled to see 16-bit assembly. The 386 was introduced in 1985, so you are about 30 years behind the times.  \n\nThe way to multiply two 16 bit values is:\n\n```\nmovsx eax, word ptr x        //sign extension prevents partial register writes\nmovsx edx, word ptr y        //use movzx if you want to do an unsigned mul\nimul eax,edx                 //multiply, but only store result in EAX.\nmov z,eax                    //save result in one go.\n```\n\n\nUse of 16 bit registers in x86 leads to very slow code, because the processor is not optimized for this mode of operation. Sometimes 16 bit code can be many times slower than normal code.\nThe below code will run much, much faster than the above.\n\n\nIt does not suffer from stalls due to partial register writes.  \nIt does not perform operations on partial registers.  \nIt does not use two writes (one of which is unaligned) where a single write would suffice.  \n\n\nYou also don't have to be aware of the subtleties of little endian in the last example.\nYou should avoid using the 16-bit registers at all costs.\nThe equivalent 32-bit code is almost always much faster.\nThe only exception if writing 16-bit values to memory if you are unable to combine two 16-bit writes into one 32-bit.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication operator is changing original values\r\n                \r\nHow can I create an operator that will perform multiplication without changing the original values?\n\n```\nMatrix3 & operator*(const Matrix3 &matrix)\n{\n     //do multiplication\n\n     return *this;\n}\n```\n\n\nSo...\n\n```\nMatrix3 m1 = Matrix3(1, 2, 3, 3, 2, 1, 2, 1, 3);\nMatrix3 m2 = Matrix3(4, 5, 6, 6, 5, 4, 4, 6, 5);\n\nMatrix3 mNew = m1 * m2; <--- mNew is now correct, but it has also changed m1\n```\n\n\nThis behavior is totally expected and makes absolute sense, but how can I avoid it happening?\n\nI want to mulitply ```\nm1```\n by ```\nm2```\n and leave them unchanged, only updating ```\nmNew```\n. I think I want a method with 2 params coming in (similar to the operator in this thread -> [simple c++: How to overload the multiplication operator so that float*myClass and myClass*float works) but I can't find an acceptable definition that my compiler will allow.\n    ", "Answer": "\r\nYour implementation of ```\noperator*```\n should be a member function as ```\noperator*=```\n, which will change the lvalue; and add a non-member function ```\noperator*```\n, which will not change the original value:\n\n```\nclass Matrix3 {\npublic:\n    Matrix3 & operator*=(const Matrix3 &matrix)\n    {\n        //do multiplication\n\n        return *this;\n    }    \n};\n\nMatrix3 operator*(const Matrix3 &matrix1, const Matrix3 &matrix2)\n{\n    Matrix3 m( matrix1 );\n    return m *= matrix2;\n}\n```\n\n\nDEMO\n\nNote that here ```\noperator*```\n is a nonmember function, so that it will have the desirable property of accepting the same implicit conversions on its left-hand side and right-hand side parameters. And always prefer making functions nonmember nonfriends to improve encapsulation by minimizing dependencies.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Opencv Multiplication of Large matrices\r\n                \r\nI have 2 matrices of dimension 1*280000.\n\nI wanted to multiply one matrix with transposed second matrix using opencv. \n\nI tried to multiply them using Multiplication operator(*).\n\nBut it is giving me error :'The total size matrix does not fit to size_t type'\n\nAs after multiplication the size will be 280000*28000 of matrix.\n\nSo,I am thinking multiplication should 32 bit.\n\nIs there any method to do the 32bit multiplication?\n    ", "Answer": "\r\nWhy do you want to multiply them like that? But because this is an answer, I would like to help you thinking more than just do it:\n\n\nsupposing that you have the two matrix: ```\nA```\n and ```\nB```\n (```\nA.size() == B.size() == [1x280000]```\n).\nand ```\nA * B.t() = AB```\n (AB is the result)\nthen ```\nAB = [A[0][0]*B A[0][1]*B ... A[0][279999]*B]```\n (each column is the transposed matrix multiplied by the corresponding element of the other matrix)\n\n\n```\nAB```\n may also be written as:\n\n\n```\n[ B[0][0]*A\n  B[0][1]*A\n  ...\n  B[0][279999]*A]\n```\n\n\n\n(each row of the result will be the row matrix multiplied by the corresponding element of the column (transposed) matrix)\n\nHope that this will help you in what you are doing... Using a for loop you can print, or store, or what you need with the result\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "algorithm to simulate multiplication by addition\r\n                \r\nHow to design an algorithm to simulate multiplication by addition. input two integers. they may be zero, positive or negative..\n    ", "Answer": "\r\n```\ndef multiply(a, b):                                                                                                                                                               \n    if (a == 1):\n        return b\n    elif (a == 0):\n        return 0\n    elif (a < 0):\n        return -multiply(-a, b)\n    else:\n        return b + multiply(a - 1, b)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multithreading for large Number multiplication\r\n                \r\nI need to multiply large numbers using multithreading. each number can be up to 256 digits . I have written multiplication code using a single thread. However, I am not entirely sure how to do the calculation when I am assigning multiple threads to different digits. Like I am not sure how to split the tasks that each thread will share the work as equal as possible.\n```\n enter code here\n    string multiplication(string number1, string number2) \n    { \n        int len1 = number1.size(); \n        int len2 = number2.size(); \n        if (len1 == 0 || len2 == 0) \n        return \"0\"; \n      \n        vector<int> result(len1 + len2, 0); \n      \n        // two indexes are used to find positions \n        // in result.  \n        int i_n1 = 0;  \n        int i_n2 = 0;  \n          \n        // Go from right to left in num1 \n        for (int i=len1-1; i>=0; i--) \n        { \n            int carry = 0; \n            int n1 = num1[i] - '0'; \n      \n            // To shift position to left after every \n            // multiplication of a digit in num2 \n            i_n2 = 0;  \n              \n            // Go from right to left in num2              \n            for (int j=len2-1; j>=0; j--) \n            { \n                // Take current digit of second number \n                int n2 = num2[j] - '0'; \n      \n                 \n                int sum = n1*n2 + result[i_n1 + i_n2] + carry; \n      \n                // Carry for next iteration \n                carry = sum/10; \n      \n                // Store result \n                result[i_n1 + i_n2] = sum % 10; \n      \n                i_n2++; \n            } \n      \n            // store carry in next cell \n            if (carry > 0) \n                result[i_n1 + i_n2] += carry; \n      \n            // To shift position to left after every \n            // multiplication of a digit in num1. \n            i_n1++; \n        } \n      \n        // ignore '0's from the right \n        int i = result.size() - 1; \n        while (i>=0 && result[i] == 0) \n        i--; \n      \n        // If all were '0's - means either both or \n        // one of num1 or num2 were '0' \n        if (i == -1) \n        return \"0\"; \n    }\n\nint main() \n{\n     for (int i = 0; i < threads; i++ ) {\n            pthread_create( &tid[ i ], NULL, multiplication, NULL );\n        }\n\n        for (int i = 0; i < threads; i++) {\n            pthread_join(tid[i], NULL);\n        } \n}\n```\n\n    ", "Answer": "\r\nI'd suggest you to do some research on existing parallel multiplication algorithms. Multithreaded algortihms are not single threaded algortihms + threads! The following is just some naive considerations about how far we can get with most basic maths.\nConsider you multiply two two digit numbers:\n```\n result = x * y\n```\n\nWith ```\nx0```\n,```\nx1```\n and ```\ny0```\n,```\ny1```\n being the digits of the numbers, respectively, this can be written as:\n```\n result = ( 10 * x1 + x0 ) * ( 10 * y1 + y0 )\n        = (100 * x1 * y1) + 10 * ( x0 * y1 + x1 * y0 ) + ( x0 * y0 )\n```\n\nThe result of multiplying two one digit numbers has either 1 or 2 digits, hence digits of result are made up of the above terms like this:\n```\n r3     r2     r1          r0\n (100*x1*y1)                           // A\n        10*(x0*y1+x1*y0)               // B\n               (   x0 * y0   )         // C\n```\n\nThe individual terms ```\nA```\n,```\nB```\n and ```\nC```\n can be calculated independtly by different threads. The 4th digit of ```\nresult```\n only depends on second digit of ```\nx```\n and ```\ny```\n while its first digit only depends on their first digit.\nFinally consider that one can do the same with other factors than 10. You can split the numbers into several chunks and calculate parts of the result independently. For example when total number of digits is ```\n2*N```\n and we split digits in only two chunks (now ```\nx0```\n,```\nx1```\n, ```\ny0```\n,```\ny1```\n are numbers with ```\nN```\n digits):\n```\n result = x * y\n        = ( 10^N * x1 + x0 ) * ( 10^N * y1 + y0)\n        = ( 10^(2*N) * x1 * y1 ) + 10^N ( x1 * y0 + x0 * y1) + ( x0 * y0)\n```\n\nThis reduces multiplication of two numbers with ```\n2*N```\n digits to 4 independent multiplications of numbers with only ```\nN```\n digits and subsequent addition.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Operator Overloading Multiplication\r\n                \r\nI am having trouble overloading multiplication operator for the purpose of array multiplication. How would you find the length of the array? I tried a.arr.length() for my for-loop but no luck. \n\nJust curious, how exactly does the code know when to apply the overloading\nwhen multiplying two objects?\n\n```\nclass Box {\npublic:\n    int arr[5] = {1,2,3};\n    int sum;\n    int getarr() {\n        return sum;\n    }\n\n    // Overload * operator to add two Box objects.\n\n\n};\nint operator*(const Box& a, const Box& b) {\n    Box box;\n    Box d;\n    int sum = 0;\n    for(int x = 0; x<3;x++){\n        sum  += d.arr[x]  * b.arr[x];\n    }\n\n    return sum;\n}\n\nint main(){\n    int sum = 0;\n    Box box2;                // Declare Box2 of type Box\n    Box box3;\n    sum = box2 * box3;\n    std::cout<<sum;\n\n}\n```\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Operator Overloading Multiplication\r\n                \r\nI am having trouble overloading multiplication operator for the purpose of array multiplication. How would you find the length of the array? I tried a.arr.length() for my for-loop but no luck. \n\nJust curious, how exactly does the code know when to apply the overloading\nwhen multiplying two objects?\n\n```\nclass Box {\npublic:\n    int arr[5] = {1,2,3};\n    int sum;\n    int getarr() {\n        return sum;\n    }\n\n    // Overload * operator to add two Box objects.\n\n\n};\nint operator*(const Box& a, const Box& b) {\n    Box box;\n    Box d;\n    int sum = 0;\n    for(int x = 0; x<3;x++){\n        sum  += d.arr[x]  * b.arr[x];\n    }\n\n    return sum;\n}\n\nint main(){\n    int sum = 0;\n    Box box2;                // Declare Box2 of type Box\n    Box box3;\n    sum = box2 * box3;\n    std::cout<<sum;\n\n}\n```\n\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Question regarding JavaScript multiplication table\r\n                \r\nI am trying to build a multiplication table  and display the results, but need to put the x in the top left corner, for some reason it is showing up on the bottom right, what am I doing wrong?\n\r\n\r\n```\ndocument.write(\"<table><tbody>\");\nvar blank = \"x\";\nvar cols = 0;\nvar rows = 0;\n// ca\nfor (let rows = 0; rows <= 10; rows++) {\n    document.write('<tr>');\n    for (let cols = 0; cols <= 10; cols++)\n        document.write('<td>' + rows + ',' + cols + '</td>')\n}\n\nif (rows === 0 && cols === 0) {\n    document.write('<td>' + blank + '</td>')\n}```\n\r\n\r\n\r\n\n    ", "Answer": "\r\n\"What am I doing wrong?\" A lot.\nYou should think about what you are trying to do first, before going at it.\nYour html table is ill-formed, you don't even close the ```\n<tr>```\n tags.\n```\nfor (let row = 0; row <= 10; row++) {\n    document.write('<tr>');\n    for (let col = 0; col <= 10; col++) {\n        if (row == 0 && col == 0) {\n            document.write('<td>x</td>');\n        }\n        else if (row == 0) {\n            document.write('<td>' + col + '</td>');\n        }\n        else if (col == 0) {\n            document.write('<td>' + row + '</td>');\n        }\n        else {\n            document.write('<td>' + row * col + '</td>');\n        }\n    }\n    document.write('</tr>');\n}\n```\n\nTry it here.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Rust doesn't see my overloaded f64 multiplication operator\r\n                \r\nI'm implementing a simple matrix library in rust and I'm currently writing the operator for scalar multiplication. Right-multiplication works:\n\n```\nimpl<T: Num + Zero + Clone + Float> Mul<T, Mat<T>> for Mat<T> {\n    fn mul(&self, rhs: &T) -> Mat<T> {\n        self.componentwise(|v| v.clone() * *rhs)\n    }\n}\n```\n\n\nBut I can't seem to do left-multiplication, I assumed the following code would do what I want:\n\n```\nimpl<T: Num + Zero + Clone + Float> Mul<Mat<T>, Mat<T>> for T {\n    fn mul(&self, rhs: &Mat<T>) -> Mat<T> {\n        rhs.componentwise(|v| *self * v.clone())\n    }\n}\n```\n\n\nBut the following doesn't work:\n\n```\nlet A = mat![[1f64, 2., 3.], [4., 5., 6.]];\nlet P = A * 4f64; // works!\nlet Q = 4f64 * A; // error...\n```\n\n\nThe error is ```\nerror: mismatched types: expected `f64`, found `linalg::Mat<f64>` (expected f64, found struct linalg::Mat)```\n. Can I only have f64 * f64 multiplication, or am I approaching the second case wrong? I tried implementing it for f64 specifically with ```\nimpl Mul<Mat<f64>, Mat<f64>> for f64```\n, but that still doesn't work.\n\nI found that I could make it work using ```\n4f64.mul(&A)```\n, but that is not ideal.\n    ", "Answer": "\r\nMaybe it is related with the declaration : your seconde impl declration is for ```\nMult<Mat<T>, Mat<T>>```\n, so my guess is that it permits to multiply two matrices, which is not what you want.\n\n(I wanted to post a comment, but I cannot do this yet :()\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Addition and multiplication C language\r\n                \r\nWhy I get wrong answers for addition and multiplication sections in this code? \n\n```\n#include <stdio.h>\n#include <stdlib.h> \n\nint main()\n{\n    char x, y, z;\n    printf(\"Enter the calculation: \");\n    scanf(\"%c %c %c\", &x, &y, &z);\n\n    int a = (int)x;\n    int b = (int)z;\n}\n```\n\n\nProblem is here:\n\n```\nif(y == '+'){\n    printf(\"The answer is %d\", a+b);\n}\n```\n\n\nAnd here:\n\n```\nelse if(y == '*'){\n         printf(\"The answer is %d\", a*b);\n     }\n     else{\n             printf(\"Use only +, -, /, * signs\");\n     }\n     return 0;\n}\n```\n\n    ", "Answer": "\r\nFirst of all understand that you are using character variables to take user input and then typecasting them to integer variables. This typecasting will result in the value of ASCII code of the character to be copied to those integer variables. So even if you enter input as ```\n3 + 2```\n , x will contain the value 51 (ASCII code) and z will contain the value 50 (ASCII code) and the answer will be 101 which, according to the code is correct.\nFor ASCII codes,refer to http://ascii.cl/\nAlso, there seems to be a small mistake in your code (this may depend on the compiler being used. I use Turbo C++ which gave me error for variable declaration after any other operation like printf in this case).\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n\n\n\nint main()\n{\nchar x, y, z;\nint a;\nint b;\n\n\nprintf(\"Enter the calculation: \");\nscanf(\"%c %c %c\", &x, &y, &z);\n\na=(int) x;\nb=(int) z;\n\nif(y == '+'){\nprintf(\"The answer is %d\", a+b);\n   }\nelse if(y == '*'){\n    printf(\"The answer is %d\", a*b);\n   }\nelse{\n    printf(\"Use only +, -, /, * signs\");\n   }\n\nreturn 0;\n}\n```\n\n\nThis code works fine. If you still want to keep the same code then simply do this.\n\n```\nint a = x - '0';\n```\n\n\nIt'll work.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Insert multiplication sign between parenthesis\r\n                \r\nSuppose you have the following string:\n\n\n  5+5(5)\n\n\nI want to insert a multiplication sign between the 5 and (5)\n\n\n  5+5*(5)\n\n\nNow also suppose you have the following other possibility:\n\n\n  5+(5)(5)\n\n\nI want to insert a multiplication sign between the (5) and (5)\n\n\n  5+(5)*(5)\n\n\nMy attempt:\n\n```\nimport re\n\nex1 = '4+6.9(39.3)(-2.3)(5+4)'\n\ndef convert(string):\n\n  return re.sub(r\"((?:\\d+)|(?:[a-zA-Z]\\w*\\(\\w+\\)))((?:[a-zA-Z]\\w*)|\\()\", r\"\\1*\\2\", string)\n\nprint(convert(ex1))\n```\n\n\n\n  4+6.9*(39.3)(-2.3)(5+4)\n\n\nThis code only adds a multiplication to the first instance.\n\nIf the string is:\n\n```\nex2 = '5(5)+5(5)+5(5)'\n```\n\n\n\n  5*(5)+5*(5)+5*(5)\n\n\nThe code works for numbers before a parenthesis.\n\nHow can I modify the code to include closed parenthesis before an open one?\n    ", "Answer": "\r\nYou can use positive lookbehind:\n\n```\nimport re\n\na = '4+6.9(39.3)(-2.3)(5+4)'\n\nprint(re.sub('(?<=\\d|\\))(\\()', '*(', a))\n#4+6.9*(39.3)*(-2.3)*(5+4)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Matrix Multiplication using loop\r\n                \r\nI have a matrix multiplication problem in a chain format. I only have a input Matrix A, will save Matrix B <- Matrix A. Need to multiply in the below fashion\n\n```\nC = B * A\nD = C * A\nE = D * A\n```\n\n\nA is a reference matrix for all the multiplication for each month. \nthis chain of multiplication taken places till 18 months.\n\nMatrix A:\n\n```\n2   3\n4   2\n```\n\n\nCode:\n\n```\na = matrix( c(2, 3, 4, 2), nrow=2, ncol=2, byrow = TRUE) \nb <- a \nc <- b %*% a\nd <- c %*% a\ne <- d %*% a\nf <- e %*% a\ng <- f %*% a\n```\n\n\nEach time A is the reference matrix for future multiplication with the result. This repeated for 18 times. \n\nI have to manually right the above multiplication for 18 times, so looking for a loop. \n\nExpected Output: \n\n\n  c <- b %*% a\n  \n  c\n\n\n```\n     [,1] [,2]\n[1,]   16   12\n[2,]   16   16\n```\n\n\n\n  d <- c %*% a\n  \n  d\n\n\n```\n     [,1] [,2]\n[1,]   80   72\n[2,]   96   80\n```\n\n\n\n  e <- d %*% a\n  \n  e\n\n\n```\n     [,1] [,2]\n[1,]  448  384\n[2,]  512  448\n```\n\n\n\n  f <- e %*% a\n  \n  f\n\n\n```\n     [,1] [,2]\n[1,] 2432 2112\n[2,] 2816 2432\n```\n\n\nso this should be repeated for 18 times. Please help. Thanks in Advance. \n\nthe logic is different in the earlier question posted. \n    ", "Answer": "\r\nYou can do:\n\n```\nMpow <- function(A, n) {\n  if (n==1) return(list(A))\n  L <- list(A)\n  P <- A\n  for (i in 2:n) {\n    P <- P %*% A\n    L[[i]] <- P\n  }\n  return(L)\n}\n\na = matrix( c(2, 3, 4, 2), nrow=2, ncol=2, byrow = TRUE) \nMpow(a, 1)\nMpow(a, 2)\nMpow(a, 18)\n```\n\n\nYou will get a list of the powers of the matrix. The matrix ```\nf```\n in the question is the last element of ```\nMpow(a,5)```\n.\nHere is short variant of the function:\n\n```\nMpow <- function(A, n) {\n  L <- list(A)\n  if (n==1) return(L)\n  P <- A\n  for (i in 2:n) L[[i]] <- (P <- P %*% A)\n  return(L)\n}\n```\n\n\nWithout defining a new function you can do:\n\n```\nn <- 5\nReduce('%*%', rep(list(a), n), accumulate=TRUE)\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "question on karatsuba multiplication\r\n                \r\nI want to implement Karatsuba's 2-split multiplication in Python. However, writing numbers in the form\n\n```\nA=c*x+d\n```\n\n\nwhere x is a power of the base (let x=b^m) close to sqrt(A).\n\nHow am I supposed to find x, if I can't even use division and multiplication? Should I count the number of digits and shift A to the left by half the number of digits?\n\nThanks.\n    ", "Answer": "\r\nAlmost. You don't shift A by half the number of digits; you shift 1. Of course, this is only efficient if the base is a power of 2, since \"shifting\" in base 10 (for example) has to be done with multiplications. (Edit: well, ok, you can multiply with shifts and additions. But it's ever so much simpler with a power of 2.)\n\nIf you're using Python 3.1 or greater, counting the bits is easy, because 3.1 introduced the ```\nint.bit_length()```\n method. For other versions of Python, you can count the bits by copying A and shifting it right until it's 0. This can be done in O(log N) time (N = # of digits) with a sort of binary search method - shift by many bits, if it's 0 then that was too many, etc.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "MPI Block matrix multiplication\r\n                \r\nI am trying to generate two matrices A&B of size n, partition them into s*s sub-matrices and after scattering them through the processors, perform a multiplication between the block matrices. I have been able to successfully generate and scatter the sub-matrices through the processors; however, I am stuck in performing multiplication on the sub-matrices at each processor. My code is pretty much similar to the one in the following post (the code in the answer section) but I modified it for two matrices:\nMPI partition matrix into blocks\n\nCould you please tell me how I can modify this to perform multiplication?\n\nI stayed with the same tags to be easier to follow up.\n\n```\n    #include <stdio.h>\n    #include <stdlib.h>\n    #include <mpi.h>\n    #include <time.h>\n\n    #define COLSa 10\n    #define ROWSa 10\n\n    #define COLSb 10\n    #define ROWSb 10\n    #define s 2\n\n   int main(int argc, char **argv) {\n\n    MPI_Init(&argc, &argv);\n    int p, rank;\n    MPI_Comm_size(MPI_COMM_WORLD, &p);\n    MPI_Comm_rank(MPI_COMM_WORLD, &rank);\n\n    char i;\n    char j;\n\n    char a[ROWSa*COLSa];\n    char b[ROWSb*COLSb];\n    char c[ROWSa*COLSb];  // c=a*b\n\n    const int NPROWS=s;  /* number of rows in _decomposition_ */\n    const int NPCOLS=s;  /* number of cols in _decomposition_ */\n\n    const int BLOCKROWSa = ROWSa/NPROWS;  /* number of rows in _block_ */\n    const int BLOCKCOLSa = COLSa/NPCOLS; /* number of cols in _block_ */\n\n    const int BLOCKROWSb = ROWSb/NPROWS;  /* number of rows in _block_ */\n    const int BLOCKCOLSb= COLSb/NPCOLS; /* number of cols in _block_ */\n\n    if (rank == 0) {\n\n    for (int ii=0; ii<ROWSa*COLSa; ii++) {\n         a[ii]=rand() %10 ;\n    }\n\n    for (int ii=0; ii<ROWSb*COLSb; ii++) {\n         b[ii]=rand() %10 ;\n\n       }\n    }\n\n    char BLa[BLOCKROWSa*BLOCKCOLSa];\n    for (int ii=0; ii<BLOCKROWSa*BLOCKCOLSa; ii++)\n    BLa[ii] = 0;\n\n    char BLb[BLOCKROWSb*BLOCKCOLSb];\n    for (int ii=0; ii<BLOCKROWSb*BLOCKCOLSb; ii++)\n    BLb[ii] = 0;  \n\n    char BLc[BLOCKROWSa*BLOCKCOLSb];\n    for (int ii=0; ii<BLOCKROWSa*BLOCKCOLSb; ii++)\n    BLc[ii] = 0; \n\n    MPI_Datatype blocktype;\n    MPI_Datatype blocktype2;\n\n    MPI_Type_vector(BLOCKROWSa, BLOCKCOLSa, COLSa, MPI_CHAR, &blocktype2);\n    MPI_Type_vector(BLOCKROWSb, BLOCKCOLSb, COLSb, MPI_CHAR, &blocktype2);\n\n    MPI_Type_create_resized( blocktype2, 0, sizeof(char), &blocktype);\n    MPI_Type_commit(&blocktype);\n\n    int dispsa[NPROWS*NPCOLS];\n    int countsa[NPROWS*NPCOLS];\n    int dispsb[NPROWS*NPCOLS];\n    int countsb[NPROWS*NPCOLS];\n\n    //*******************************Start Time Record****************//\n\n    clock_t t;\n    t=clock();\n\n    for (int ii=0; ii<NPROWS; ii++) {\n    for (int jj=0; jj<NPCOLS; jj++) {\n    dispsa[ii*NPCOLS+jj] = ii*COLSa*BLOCKROWSa+jj*BLOCKCOLSa;\n    countsa [ii*NPCOLS+jj] = 1;\n        }\n    }\n\n    MPI_Scatterv(a, countsa, dispsa, blocktype, BLa, BLOCKROWSa*BLOCKCOLSa, MPI_CHAR, 0,   MPI_COMM_WORLD);\n\n\n    for (int ii=0; ii<NPROWS; ii++) {\n    for (int jj=0; jj<NPCOLS; jj++) {\n    dispsb[ii*NPCOLS+jj] = ii*COLSb*BLOCKROWSb+jj*BLOCKCOLSb;\n    countsb [ii*NPCOLS+jj] = 1;\n         }\n    }\n\n    MPI_Scatterv(b, countsb, dispsb, blocktype, BLb, BLOCKROWSb*BLOCKCOLSb, MPI_CHAR, 0, MPI_COMM_WORLD);\n\n\n\n\n     for (int proc=0; proc<p; proc++) {\n        if (proc == rank) {\n\n          printf(\"Rank = %d\\n\", rank);\n\n                if (rank == 0) {\n                  printf(\"Global matrix A : \\n\");\n\n                   for (int ii=0; ii<ROWSa; ii++) {\n                     for (int jj=0; jj<COLSa; jj++) {\n                       printf(\"%3d \",(int)a[ii*COLSa+jj]);\n                }\n                        printf(\"\\n\");\n            }\n                 printf(\"\\n\");\n            printf(\"Global matrix B : \\n\");\n\n           for (int ii=0; ii<ROWSb; ii++) {\n             for (int jj=0; jj<COLSb; jj++) {\n              printf(\"%3d \",(int)b[ii*COLSb+jj]);\n                }\n         printf(\"\\n\");\n            }\n        printf(\"\\n\");\n                  printf(\"Local Matrix A:\\n\");\n              for (int ii=0; ii<BLOCKROWSa; ii++) {\n                for (int jj=0; jj<BLOCKCOLSa; jj++) {\n            printf(\"%3d \",(int)BLa[ii*BLOCKCOLSa+jj]);\n\n                }\n\n             printf(\"\\n\");\n            }\n\n           printf(\"\\n\");\n              printf(\"Local Matrix B:\\n\");\n                for (int ii=0; ii<BLOCKROWSb; ii++) {\n                   for (int jj=0; jj<BLOCKCOLSb; jj++) {\n                       printf(\"%3d \",(int)BLb[ii*BLOCKCOLSb+jj]);\n\n                }\n\n          printf(\"\\n\");\n            }\n                }\n\n\n            printf(\"Local Matrix A:\\n\");\n                    for (int ii=0; ii<BLOCKROWSa; ii++) {\n                   for (int jj=0; jj<BLOCKCOLSa; jj++) {\n                       printf(\"%3d \",(int)BLa[ii*BLOCKCOLSa+jj]);\n                  }\n\n             printf(\"\\n\");\n            }\n\n          printf(\"Local Matrix B:\\n\");\n            for (int ii=0; ii<BLOCKROWSb; ii++) {\n                for (int jj=0; jj<BLOCKCOLSb; jj++) {\n                   printf(\"%3d \",(int)BLb[ii*BLOCKCOLSb+jj]);\n                }\n\n        printf(\"\\n\");\n            }\n\n  //**********************Multiplication***********************//\n\n       for (int i = 0; i < BLOCKROWSa; i++) {\n          for (j = 0; j < BLOCKCOLSb; j++) {\n\n        for (k = 0; k < BLOCKCOLSb; k++) {  //I am considering square matrices with the same sizes\n               BLc[i + j*BLOCKROWSa] += BLa[i + k*BLOCKROWSa]*BLb[k + BLOCKCOLb*j];\n                  printf(\"%3d \",(int)BLc[i+j*BLOCKROWSa]);\n                     }\n    printf(\"\\n\");\n\n                 }\n\n      printf(\"\\n\");\n\n             }\n\n       }\n\n      MPI_Barrier(MPI_COMM_WORLD);\n    }\n\n   MPI_Finalize();\n\n   //**********************End Time Record************************//\n\n    t=clock()-t;\n     printf(\"It took %f seconds (%d clicks).\\n\",t,((float)t)/CLOCKS_PER_SEC);\n\n\n       return 0;\n     }\n```\n\n    ", "Answer": "\r\nTo get the blocks back into the matrix on proc 0, you may use the \"opposite\" of ```\nMPI_Scatterv()```\n which is called ```\nMPI_Gatherv()```\n  http://www.mpich.org/static/docs/latest/www3/MPI_Gatherv.html :\n\n```\nMPI_Gatherv(BLc, BLOCKROWSb*BLOCKCOLSb,MPI_CHAR, c, countsb, dispsb,blocktype, 0, MPI_COMM_WORLD);\n\nif (rank == 0) {\n    printf(\"Global matrix C : \\n\");\n\n    for (int ii=0; ii<ROWSa; ii++) {\n        for (int jj=0; jj<COLSa; jj++) {\n            printf(\"%3d \",(int)c[ii*COLSa+jj]);\n        }\n        printf(\"\\n\");\n    }\n}\n```\n\n\nKeep in mind that you are performing blockwise multiplications, that is different from a matrix multiplication.\n\nBye,\n\nFrancis\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication speed of zero\r\n                \r\nI have the next lines of code:\n```\npublic static void Main(string[] args)\n{\n    Stopwatch stopwatch = new Stopwatch();\n\n    float variable = 0;\n\n    stopwatch.Start();\n\n    variable *= 2.0f;\n            \n    stopwatch.Stop();\n            \n    Console.WriteLine(\"Speed zero:\" + stopwatch.ElapsedTicks);\n            \n    stopwatch = new Stopwatch();\n\n    variable = 0.0f;\n            \n    stopwatch.Start();\n\n    variable *= 2.0f;\n            \n    stopwatch.Stop();\n            \n    Console.WriteLine(\"Speed one:\" + stopwatch.ElapsedTicks);\n    Console.ReadKey();\n}\n```\n\nAnd this code gives the next result:\n\nSpeed zero:34\nSpeed one:1\n\nWhy multiplication of zero gives so many different result instead of multiplication on none zero variable?\n    ", "Answer": "", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "Multiplication Table PHP\r\n                \r\nI wanted to create a multiplication table with a custom function and also get the number of rows and columns from the user, and I want if each row was an even number then its field would be red (background) and if it was odd number it would have a green background and i also write some codes but i'm not sure if it's true or not:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\n</head>\n<body>\n    <form method=\"post\">\n        <input type=\"number\" name=\"rows\" placeholder=\"Rows\">\n        <input type=\"number\" name=\"columns\" placeholder=\"Columns\">\n        <button type=\"submit\" name=\"button\">\n            Create \n        </button>\n    </form>\n    <table border=\"1px\">\n        <?php\n\n        if (isset($_POST[\"button\"])) {\n\n            $userRows = $_POST[\"rows\"];\n            $userColumns = $_POST[\"columns\"];\n\n            function multiplicationTable($rows, $columns)\n            {\n                $zarb = $rows * $columns;\n                return $zarb;\n            }\n\n            $x = 1;\n            while ($x <= $userRows) {\n                echo \"<tr>\";\n                $y = 1;\n                while ($y <= $userColumns) {\n                    if ($x % 2 == 0) {\n                        echo \"<td style='background-color: red;'>\" . multiplicationTable($x, $y) . \"</td>\";\n                    } else {\n                        echo \"<td style='background-color: green;'>\" . multiplicationTable($x, $y) . \"</td>\";\n                    }\n                    $y++;\n                }\n                $x++;\n                echo \"</tr>\";\n            }\n        }\n        ?>\n    </table>\n</body>\n\n</html>\n```\n\n    ", "Answer": "\r\nHow about changing the while loops to this:\n```\nwhile ($x <= $userRows) {\n    echo \"<tr>\";\n    $y = 1;\n    while ($y <= $userColumns) {\n        \n        $val = multiplicationTable($x, $y);\n        \n        if ($val % 2 == 0) {\n            echo \"<td style='background-color: red;'>\" . $val . \"</td>\";\n        } else {\n            echo \"<td style='background-color: green;'>\" . $val . \"</td>\";\n        }\n        $y++;\n    }\n    $x++;\n    echo \"</tr>\";\n}\n```\n\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "numerical test for matrix multiplication\r\n                \r\nI was wondering how to implement a test function in c++ for a matrix multiplication. \nIs there a common way, how to do that?\nI know that it should have something to do with the Inverse, but I'm not sure how to implement this properly.\n\nLet's say this would be the multiplication I'd like to test:\n\n```\n  #include <stdio.h>\n  #include <stdlib.h>\n  //#include <stdint.h>\n\n  // ---------------------------------------------------------------------------\n  // allocate space for empty matrix A[row][col]\n  // access to matrix elements possible with:\n  // - A[row][col]\n  // - A[0][row*col]\n\n\n  float **alloc_mat(int row, int col)\n  {\n      float **A1, *A2;\n\n      A1 = (float **)calloc(row, sizeof(float *));      // pointer on rows\n      A2 = (float *)calloc(row*col, sizeof(float));    // all matrix elements\n\n\n      for (int i=0; i<row; i++)\n          A1[i] = A2 + i*col;\n\n      return A1;\n  }\n\n  // ---------------------------------------------------------------------------\n  // random initialisation of matrix with values [0..9]\n\n  void init_mat(float **A, int row, int col)\n  {   \n\n      for (int i = 0; i < row*col; i++)\n          A[0][i] = (float)(rand() % 10);\n  }\n\n  // ---------------------------------------------------------------------------\n  // DEBUG FUNCTION: printout of all matrix elements\n\n  void print_mat(float **A, int row, int col, char *tag)\n  {\n      int i, j;\n\n      printf(\"Matrix %s:\\n\", tag);\n      for (i = 0; i < row; i++)\n      {\n\n          for (j=0; j<col; j++) \n              printf(\"%6.1f   \", A[i][j]);\n          printf(\"\\n\"); \n      }\n  }\n\n  // ---------------------------------------------------------------------------\n\n  int main(int argc, char *argv[])\n  {\n      float **A, **B, **C;  // matrices\n      int d1, d2, d3;         // dimensions of matrices\n      int i, j, k;          // loop variables\n\n\n      double start, end;\n      start = omp_get_wtime();\n\n      /* print user instruction */\n      if (argc != 4)\n      {\n          printf (\"Matrix multiplication: C = A x B\\n\");\n          printf (\"Usage: %s <NumRowA>; <NumColA> <NumColB>\\n\",argv[0]); \n           return 0;\n       }\n\n       /* read user input */\n       d1 = atoi(argv[1]);      // rows of A and C\n       d2 = atoi(argv[2]);     // cols of A and rows of B\n       d3 = atoi(argv[3]);     // cols of B and C\n\n       printf(\"Matrix sizes C[%d][%d] = A[%d][%d] x B[%d][%d]\\n\", \n       d1, d3, d1, d2, d2, d3);\n\n       /* prepare matrices */\n       A = alloc_mat(d1, d2);\n       init_mat(A, d1, d2); \n       B = alloc_mat(d2, d3);\n       init_mat(B, d2, d3);\n       C = alloc_mat(d1, d3);   // no initialisation of C, \n   //because it gets filled by matmult\n\n       /* serial version of matmult */\n       printf(\"Perform matrix multiplication...\\n\");\n\n\n\n       int sum;\n\n           for (i = 0; i < d1; i++)\n               for (j = 0; j < d3; j++)\n                   for (k = 0; k < d2; k++){\n                   C[i][j] = C[i][j] + A[i][k] * B[k][j];\n\n\n\n\n\n\n       /* test output */\n       print_mat(A, d1, d2, \"A\"); \n       print_mat(B, d2, d3, \"B\"); \n       print_mat(C, d1, d3, \"C\"); \n\n       printf(\"This task took %f seconds\\n\", end-start);\n       printf (\"\\nDone.\\n\");\n\n       return 0;\n   }\n```\n\n    ", "Answer": "\r\nHow about using openCV library, you can define matrices of different types and sizes easily using it.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "numpy matrix multiplication shapes [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        how does multiplication differ for NumPy Matrix vs Array classes?\r\n                            \r\n                                (8 answers)\r\n                            \r\n                    \r\n                Closed 9 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nIn matrix multiplication, assume that the ```\nA```\n is a 3 x 2 matrix (3 rows, 2 columns ) and ```\nB```\n is a 2 x 4 matrix (2 rows, 4 columns ), then if a matrix ```\nC = A * B```\n, then ```\nC```\n should have 3 rows and 4 columns.  Why does numpy not do this multiplication?  When I try the following code I get an error : ```\nValueError: operands could not be broadcast together with shapes (3,2) (2,4)```\n \n\n```\na = np.ones((3,2))\nb = np.ones((2,4))\nprint a*b\n```\n\n\nI try with transposing A and B and alwasy get the same answer.  Why?  How do I do the matrix multiplication in this case?\n    ", "Answer": "\r\nThe ```\n*```\n operator for numpy arrays is element wise multiplication (similar to the Hadamard product for arrays of the same dimension), not matrix multiply.\n\nFor example:\n\n```\n>>> a\narray([[0],\n       [1],\n       [2]])\n>>> b\narray([0, 1, 2])\n>>> a*b\narray([[0, 0, 0],\n       [0, 1, 2],\n       [0, 2, 4]])\n```\n\n\nFor matrix multiply with numpy arrays:\n\n```\n>>> a = np.ones((3,2))\n>>> b = np.ones((2,4))\n>>> np.dot(a,b)\narray([[ 2.,  2.,  2.,  2.],\n       [ 2.,  2.,  2.,  2.],\n       [ 2.,  2.,  2.,  2.]])\n```\n\n\nIn addition you can use the matrix class:\n\n```\n>>> a=np.matrix(np.ones((3,2)))\n>>> b=np.matrix(np.ones((2,4)))\n>>> a*b\nmatrix([[ 2.,  2.,  2.,  2.],\n        [ 2.,  2.,  2.,  2.],\n        [ 2.,  2.,  2.,  2.]])\n```\n\n\nMore information on broadcasting numpy arrays can be found here, and more information on the matrix class can be found here.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
{"Question": "(opencv rc1) What causes Mat multiplication to be 20x slower than per-pixel multiplication?\r\n                \r\n```\n// 700 ms\ncv::Mat in(height,width,CV_8UC1);\nin /= 4;\n```\n\n\nReplaced with\n\n```\n//40 ms\ncv::Mat in(height,width,CV_8UC1);\nfor (int y=0; y < in.rows; ++y)\n{\n    unsigned char* ptr = in.data + y*in.step1();\n    for (int x=0; x < in.cols; ++x)\n    {\n        ptr[x] /= 4;\n    }\n}\n```\n\n\nWhat can cause such behavior? Is it due to opencv \"promoting\" Mat with Scalar multiplication to a Mat with Mat multiplication, or is it a specific failed optimization for arm? (NEON is enabled).\n    ", "Answer": "\r\nThis is a very old issue (I reported it couple of years ago) that many basic operations are taking extra time. Not just division but also addition, abs, etc... I don't know the real reason for that behavior. What is even more weird, is that the operations that supposed to take more time, like addWeighted,  are actually very efficient. Try this one:\n\n```\naddWeighted(in, 1.0/4, in, 0, 0, in);\n```\n\n\nIt performs multiple operations per pixel yet it run few times faster than either add function and loop implementation.\n\nHere is my report on bug tracker.\n    ", "Knowledge_point": "Multiplication", "Tag": "算法分析"}
