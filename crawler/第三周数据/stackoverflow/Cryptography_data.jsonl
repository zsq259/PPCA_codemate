{"Question": "Failed to install Python Cryptography package with PIP and setup.py\r\n                \r\nWhen I try to install the Cryptography package for Python through either ```\npip install cryptography```\n or by downloading the package from their site and running ```\npython setup.py```\n, I get the following error:\n\n\n\n```\nD:\\Anaconda\\Scripts\\pip-script.py run on 02/27/14 16:13:17\nDownloading/unpacking cryptography\n  Getting page https://pypi.python.org/simple/cryptography/\n  URLs to search for versions for cryptography:\n  * https://pypi.python.org/simple/cryptography/\n  Analyzing links from page https://pypi.python.org/simple/cryptography/\n    Skipping https://pypi.python.org/packages/cp26/c/cryptography/cryptography-0.2-cp26-none-win32.whl#md5=13e5c4b19520e7dc6f07c6502b3f74e2 (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Skipping https://pypi.python.org/packages/cp26/c/cryptography/cryptography-0.2.1-cp26-none-win32.whl#md5=00e733648ee5cdb9e58876238b1328f8 (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Skipping https://pypi.python.org/packages/cp27/c/cryptography/cryptography-0.2-cp27-none-win32.whl#md5=013ccafa6a5a3ea92c73f2c1c4879406 (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Skipping https://pypi.python.org/packages/cp27/c/cryptography/cryptography-0.2.1-cp27-none-win32.whl#md5=127d6a5dc687250721f892d55720a06c (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Skipping https://pypi.python.org/packages/cp32/c/cryptography/cryptography-0.2-cp32-none-win32.whl#md5=051424a36e91039807b72f112333ded3 (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Skipping https://pypi.python.org/packages/cp32/c/cryptography/cryptography-0.2.1-cp32-none-win32.whl#md5=53f6f57db8e952d64283baaa14cbde3d (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Skipping https://pypi.python.org/packages/cp33/c/cryptography/cryptography-0.2-cp33-none-win32.whl#md5=302812c1c1a035cf9ba3292f8dbf3f9e (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Skipping https://pypi.python.org/packages/cp33/c/cryptography/cryptography-0.2.1-cp33-none-win32.whl#md5=81acca90caf8a45f2ca73f3f9859fae4 (from https://pypi.python.org/simple/cryptography/) because it is not compatible with this Python\n    Found link https://pypi.python.org/packages/source/c/cryptography/cryptography-0.1.tar.gz#md5=bdc1c5fe069deca7467b71a0cc538f17 (from https://pypi.python.org/simple/cryptography/), version: 0.1\n    Found link https://pypi.python.org/packages/source/c/cryptography/cryptography-0.2.1.tar.gz#md5=872fc04268dadc66a0305ae5ab1c123b (from https://pypi.python.org/simple/cryptography/), version: 0.2.1\n    Found link https://pypi.python.org/packages/source/c/cryptography/cryptography-0.2.tar.gz#md5=8a3d21e837a21e1b7634ee1f22b06bb6 (from https://pypi.python.org/simple/cryptography/), version: 0.2\n  Using version 0.2.1 (newest of versions: 0.2.1, 0.2, 0.1)\n  Downloading from URL https://pypi.python.org/packages/source/c/cryptography/cryptography-0.2.1.tar.gz#md5=872fc04268dadc66a0305ae5ab1c123b (from https://pypi.python.org/simple/cryptography/)\n  Running setup.py (path:c:\\users\\paco\\appdata\\local\\temp\\pip_build_Paco\\cryptography\\setup.py) egg_info for package cryptography\n    In file included from c/_cffi_backend.c:7:0:\n    c/misc_win32.h:225:23: error: two or more data types in declaration specifiers\n    c/misc_win32.h:225:1: warning: useless type name in empty declaration [enabled by default]\n    c/_cffi_backend.c: In function 'convert_array_from_object':\n    c/_cffi_backend.c:1105:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1105:26: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c:1130:30: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1130:30: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c:1150:30: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1150:30: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'convert_struct_from_object':\n    c/_cffi_backend.c:1183:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1183:26: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c:1196:30: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1196:30: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'cdata_repr':\n    c/_cffi_backend.c:1583:13: warning: unknown conversion type character 'L' in format [-Wformat]\n    c/_cffi_backend.c:1583:13: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c:1595:9: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1595:9: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'cdataowning_repr':\n    c/_cffi_backend.c:1647:30: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1647:30: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function '_cdata_get_indexed_ptr':\n    c/_cffi_backend.c:1820:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1820:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1820:26: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function '_cdata_getslicearg':\n    c/_cffi_backend.c:1872:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1872:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1872:26: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'cdata_ass_slice':\n    c/_cffi_backend.c:1951:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1951:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1951:26: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c:1969:30: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1969:30: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1969:30: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c:1983:22: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:1983:22: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'cdata_call':\n    c/_cffi_backend.c:2367:30: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:2367:30: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]\n    c/_cffi_backend.c:2367:30: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'cast_to_integer_or_char':\n    c/_cffi_backend.c:2916:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:2916:26: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]\n    c/_cffi_backend.c:2916:26: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c:2928:26: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:2928:26: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]\n    c/_cffi_backend.c:2928:26: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'new_array_type':\n    c/_cffi_backend.c:3480:9: warning: unknown conversion type character 'l' in format [-Wformat]\n    c/_cffi_backend.c:3480:9: warning: too many arguments for format [-Wformat-extra-args]\n    c/_cffi_backend.c: In function 'b_complete_struct_or_union':\n    c/_cffi_backend.c:3878:22: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:3878:22: warning: unknown conversion type character 'z' in format [-Wformat]\n    c/_cffi_backend.c:3878:22: warning: too many arguments for format [-Wformat-extra-args]\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"c:\\users\\paco\\appdata\\local\\temp\\pip_build_Paco\\cryptography\\setup.py\", line 113, in <module>\n        \"build\": cffi_build,\n      File \"D:\\Anaconda\\lib\\distutils\\core.py\", line 112, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\dist.py\", line 239, in __init__\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\dist.py\", line 264, in fetch_build_eggs\n      File \"build\\bdist.win-amd64\\egg\\pkg_resources.py\", line 580, in resolve\n        dist = best[req.key] = env.best_match(req, ws, installer)\n      File \"build\\bdist.win-amd64\\egg\\pkg_resources.py\", line 818, in best_match\n        return self.obtain(req, installer) # try and download/install\n      File \"build\\bdist.win-amd64\\egg\\pkg_resources.py\", line 830, in obtain\n        return installer(requirement)\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\dist.py\", line 314, in fetch_build_egg\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 593, in easy_install\n\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 623, in install_item\n\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 809, in install_eggs\n\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 1015, in build_and_install\n\n      File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 1003, in run_setup\n\n    distutils.errors.DistutilsError: Setup script exited with error: command 'gcc' failed with exit status 1\n    Complete output from command python setup.py egg_info:\n    In file included from c/_cffi_backend.c:7:0:\n\nc/misc_win32.h:225:23: error: two or more data types in declaration specifiers\n\nc/misc_win32.h:225:1: warning: useless type name in empty declaration [enabled by default]\n\nc/_cffi_backend.c: In function 'convert_array_from_object':\n\nc/_cffi_backend.c:1105:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1105:26: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c:1130:30: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1130:30: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c:1150:30: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1150:30: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'convert_struct_from_object':\n\nc/_cffi_backend.c:1183:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1183:26: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c:1196:30: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1196:30: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'cdata_repr':\n\nc/_cffi_backend.c:1583:13: warning: unknown conversion type character 'L' in format [-Wformat]\n\nc/_cffi_backend.c:1583:13: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c:1595:9: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1595:9: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'cdataowning_repr':\n\nc/_cffi_backend.c:1647:30: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1647:30: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function '_cdata_get_indexed_ptr':\n\nc/_cffi_backend.c:1820:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1820:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1820:26: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function '_cdata_getslicearg':\n\nc/_cffi_backend.c:1872:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1872:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1872:26: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'cdata_ass_slice':\n\nc/_cffi_backend.c:1951:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1951:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1951:26: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c:1969:30: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1969:30: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1969:30: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c:1983:22: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:1983:22: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'cdata_call':\n\nc/_cffi_backend.c:2367:30: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:2367:30: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]\n\nc/_cffi_backend.c:2367:30: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'cast_to_integer_or_char':\n\nc/_cffi_backend.c:2916:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:2916:26: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]\n\nc/_cffi_backend.c:2916:26: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c:2928:26: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:2928:26: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]\n\nc/_cffi_backend.c:2928:26: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'new_array_type':\n\nc/_cffi_backend.c:3480:9: warning: unknown conversion type character 'l' in format [-Wformat]\n\nc/_cffi_backend.c:3480:9: warning: too many arguments for format [-Wformat-extra-args]\n\nc/_cffi_backend.c: In function 'b_complete_struct_or_union':\n\nc/_cffi_backend.c:3878:22: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:3878:22: warning: unknown conversion type character 'z' in format [-Wformat]\n\nc/_cffi_backend.c:3878:22: warning: too many arguments for format [-Wformat-extra-args]\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"c:\\users\\paco\\appdata\\local\\temp\\pip_build_Paco\\cryptography\\setup.py\", line 113, in <module>\n\n    \"build\": cffi_build,\n\n  File \"D:\\Anaconda\\lib\\distutils\\core.py\", line 112, in setup\n\n    _setup_distribution = dist = klass(attrs)\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\dist.py\", line 239, in __init__\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\dist.py\", line 264, in fetch_build_eggs\n\n  File \"build\\bdist.win-amd64\\egg\\pkg_resources.py\", line 580, in resolve\n\n    dist = best[req.key] = env.best_match(req, ws, installer)\n\n  File \"build\\bdist.win-amd64\\egg\\pkg_resources.py\", line 818, in best_match\n\n    return self.obtain(req, installer) # try and download/install\n\n  File \"build\\bdist.win-amd64\\egg\\pkg_resources.py\", line 830, in obtain\n\n    return installer(requirement)\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\dist.py\", line 314, in fetch_build_egg\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 593, in easy_install\n\n\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 623, in install_item\n\n\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 809, in install_eggs\n\n\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 1015, in build_and_install\n\n\n\n  File \"build\\bdist.win-amd64\\egg\\setuptools\\command\\easy_install.py\", line 1003, in run_setup\n\n\n\ndistutils.errors.DistutilsError: Setup script exited with error: command 'gcc' failed with exit status 1\n\n----------------------------------------\nCleaning up...\n  Removing temporary dir c:\\users\\paco\\appdata\\local\\temp\\pip_build_Paco...\nCommand python setup.py egg_info failed with error code 1 in c:\\users\\paco\\appdata\\local\\temp\\pip_build_Paco\\cryptography\nException information:\nTraceback (most recent call last):\n  File \"D:\\Anaconda\\lib\\site-packages\\pip-1.5.4-py2.7.egg\\pip\\basecommand.py\", line 122, in main\n    status = self.run(options, args)\n  File \"D:\\Anaconda\\lib\\site-packages\\pip-1.5.4-py2.7.egg\\pip\\commands\\install.py\", line 278, in run\n    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\n  File \"D:\\Anaconda\\lib\\site-packages\\pip-1.5.4-py2.7.egg\\pip\\req.py\", line 1229, in prepare_files\n    req_to_install.run_egg_info()\n  File \"D:\\Anaconda\\lib\\site-packages\\pip-1.5.4-py2.7.egg\\pip\\req.py\", line 325, in run_egg_info\n    command_desc='python setup.py egg_info')\n  File \"D:\\Anaconda\\lib\\site-packages\\pip-1.5.4-py2.7.egg\\pip\\util.py\", line 697, in call_subprocess\n    % (command_desc, proc.returncode, cwd))\nInstallationError: Command python setup.py egg_info failed with error code 1 in c:\\users\\paco\\appdata\\local\\temp\\pip_build_Paco\\cryptography\n```\n\n\nI found other egg_info error posts (here and here) but the solutions there provided wouldn't solve my problem. Also, I am able to install other packages through PIP.\n\nPIP version 1.5.4 setuptools version 2.2\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to install cryptography on ubuntu?\r\n                \r\nMy ubuntu is 14.04 LTS.\n\nWhen I install cryptography, the error is:\n\n```\nInstalling egg-scripts.\nuses namespace packages but the distribution does not require setuptools.\nGetting distribution for 'cryptography==0.2.1'.\n\nno previously-included directories found matching 'documentation/_build'\nzip_safe flag not set; analyzing archive contents...\nsix: module references __path__\n\nInstalled /tmp/easy_install-oUz7ei/cryptography-0.2.1/.eggs/six-1.10.0-py2.7.egg\nSearching for cffi>=0.8\nReading https://pypi.python.org/simple/cffi/\nBest match: cffi 1.5.0\nDownloading https://pypi.python.org/packages/source/c/cffi/cffi-1.5.0.tar.gz#md5=dec8441e67880494ee881305059af656\nProcessing cffi-1.5.0.tar.gz\nWriting /tmp/easy_install-oUz7ei/cryptography-0.2.1/temp/easy_install-Yf2Yl3/cffi-1.5.0/setup.cfg\nRunning cffi-1.5.0/setup.py -q bdist_egg --dist-dir /tmp/easy_install-oUz7ei/cryptography-0.2.1/temp/easy_install-Yf2Yl3/cffi-1.5.0/egg-dist-tmp-A2kjMD\nc/_cffi_backend.c:15:17: fatal error: ffi.h: No such file or directory\n #include <ffi.h>\n                 ^\ncompilation terminated.\nerror: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\nAn error occurred when trying to install cryptography 0.2.1. Look above this message for any errors that were output by easy_install.\nWhile:\n  Installing egg-scripts.\n  Getting distribution for 'cryptography==0.2.1'.\nError: Couldn't install: cryptography 0.2.1\n```\n\n\nI don't know why it was failed. What is the reason. Is there something necessary when install it on ubuntu system?\n    ", "Answer": "\r\nThe answer is on the docs of ```\ncryptography```\n's installation section which pretty much reflects Angelos' answer:\n\nQuoting it:\n\n\n  For Debian and Ubuntu, the following command will ensure that the\n  required dependencies are installed:\n\n```\n$ sudo apt-get install build-essential libssl-dev libffi-dev python-dev\n```\n\n  \n  For Fedora and RHEL-derivatives, the following command will ensure\n  that the required dependencies are installed:\n\n```\n$ sudo yum install gcc libffi-devel python-devel openssl-devel\n```\n\n  \n  You should now be able to build and install cryptography with the\n  usual\n\n```\n$ pip install cryptography\n```\n\n\n\nIf you're using Python 3, please use ```\npython3-dev```\n instead of ```\npython-dev```\n in the first command. (thanks to @chasmani)\n\nIf you're installing this on ```\nUbuntu 18.04```\n, please use ```\nlibssl1.0```\n instead of ```\nlibssl-dev```\n in the first command. (thanks to @pobe)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography not installing\r\n                \r\nI've been trying to install cryptography for a while and I keep receiving the same error. I have installed Rust through Rustup and I am using the latest version of Rust. I  am also not very savvy when it comes to installations so a basic explanation would be helpful if you can. Thanks.\n= note: LINK : fatal error LNK1181: cannot open input file 'python3.lib'\nerror: could not compile ```\ncryptography-rust```\n due to previous error\n` error: cargo failed with code: 101\n```\n  [end of output]\n```\n\nnote: This error originates from a subprocess, and is likely not a problem with pip.\nERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography, which is required to install pyproject.toml-based projects`\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Checking if Unlimited Cryptography is available\r\n                \r\nHow can I check, in Java code, if the current JVM have unlimited strength cryptography available?\n    ", "Answer": "\r\nIn the same spirit as the answer of Dan Cruz, but with a single line of code and without  going trough exceptions:\n\n```\nboolean limit = Cipher.getMaxAllowedKeyLength(\"RC5\")<256;\n```\n\n\nSo a complete program might be:\n\n```\nimport javax.crypto.Cipher;\n\npublic class TestUCE {\n  public static void main(String args[]) throws Exception {\n    boolean unlimited =\n      Cipher.getMaxAllowedKeyLength(\"RC5\") >= 256;\n    System.out.println(\"Unlimited cryptography enabled: \" + unlimited);\n  }\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Problems installing cryptography\r\n                \r\nSo when I am trying to install cryptography via\n\n```\npython -m pip install cryptography\n```\n\n\nI get two error messages coming back:\n\n\n  \n  Failed building wheel for cryptography\n  command \"/usr/local/bin/python -c \"import setuptools, tokenize;file='/private/var/folders/qf/57zhxjfn4hl95y8xg7l12xpm0000gn/T/pip-build-DBR7_Y/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /var/folders/qf/57zhxjfn4hl95y8xg7l12xpm0000gn/T/pip-msQ3gT-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/qf/57zhxjfn4hl95y8xg7l12xpm0000gn/T/pip-build-DBR7_Y/cryptography\n  \n\n\nAny ideas on how to fix this problem?\n    ", "Answer": "\r\nLike in your other post Trouble with running pip install\n\nrun your same command with ```\nsudo```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ModuleNotFoundError: No module named 'cryptography' - Unable to recognize cryptography\r\n                \r\nI've installed and reinstalled Python 3 (using version 3.7.9) as well as pip and cryptography via the command prompt with success (message below):\n\nRequirement already satisfied: cryptography in c:\\users\\myusername\\appdata\\local\\programs\\python\\python39\\lib\\site-packages (3.4.7)\n\nHowever, python is unable to recognize Cryptography and continues to give the same error message (below) each time I try and run a python script that is using cryptography to download packages.\n```\nfrom cryptography.hazmat.backends import default_backend \n\nModuleNotFoundError: No module named 'cryptography'\n```\n\nFor whatever reason, python is unable to recognize that Cryptography is installed, or at least seems to be installed.\nIs there any other way I can test or look for errors?\nDoes it take a certain amount of time after being installed before python can recognize cyptographgy (I've only just installed it an hour ago)?\nI'll keep trying and re-attempting to find a solution, but if you've seen this before or know a solutions, please let me know.\nThe program I'm using is IDLE to run the scripts.\nThank you all in advance.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ModuleNotFoundError: No module named 'cryptography'\r\n                \r\nthese are the Error messages I am geeting on running any of my project modules.\n```\nTraceback (most recent call last):\n  File \"C:\\Users\\hsnl\\BlockchainCodesTutor\\Wallet.py\", line 3, in <module>\n    import Transactions\n  File \"C:\\Users\\hsnl\\BlockchainCodesTutor\\Transactions.py\", line 2, in <module>\n    import Signatures\n  File \"C:\\Users\\hsnl\\BlockchainCodesTutor\\Signatures.py\", line 2, in <module>\n    import cryptography\nModuleNotFoundError: No module named 'cryptography'\n```\n\nI have already installed the cryptography module and was working perfectly until today I start getting this message that \" No module named 'cryptography'\".\nI have again installed the cryptography as well as pip package but still showing the same error.\n    ", "Answer": "\r\nThere might be loose versions running on your system. Please try the following:\n```\npython -m pip uninstall cryptography\npython -m pip install cryptography\n```\n\nYou can also check out this with ```\npython -m```\n to make sure you are not using a loose pip.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\r\n                \r\nI get an error when pip builds wheels for the cryptography package.\n\nError:\n\n\n\n```\nLINK : fatal error LNK1181: cannot open input file 'libssl.lib'\n  error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.16.27023\\\\bin\\\\HostX86\\\\x86\\\\link.exe' failed with exit status 1181\n  ----------------------------------------\n  ERROR: Failed building wheel for cryptography\n  Running setup.py clean for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\n\nI have already installed OpenSSL and set the environment variables as suggested in this post yet the problem persists. My setup details: \n\n\nSystem - Windows 10 \nPython - 3.8  \nPip - 19.3.1\n\n    ", "Answer": "\r\nIn my case (windows 10 + conda) updating pip fixed the problem:\n```\npython -m pip install --upgrade pip\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "cryptography install with pip3\r\n                \r\nI've been trying to install cryptography python-3.4.3 on ubuntu 14.04 LTS. After downloading the libbfi and libssl, when I'm using pip3 to install cryptography. This is what I'm getting:-\n\n```\nCommand /usr/bin/python3 -c \"import setuptools,\ntokenize;__file__='/tmp/pip_build_gogol/cryptography/setup.py';exec(compile(getattr(tokenize,\n'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__,\n'exec'))\" install --record /tmp/pip-s1t_s_oy-record/install-record.txt\n--single-version-externally-managed --compile failed with error code 1 in /tmp/pip_build_gogol/cryptography Storing debug log for failure in\n/home/gogol/.pip/pip.log\n```\n\n\nIf I run pip3 install again, this is what I'm getting.\n\n```\ngogol@gogol-Vostro-3558tio:~$ pip3 install cryptography \n\nTraceback (most recent call last):\n\n  File \"/usr/bin/pip3\", line 5, in <module>\n\n    from pkg_resources import load_entry_point\n\n  File \"/usr/local/lib/python3.4/dist-packages/pkg_resources/__init__.py\", line 70, in <module>\n\n    import packaging.version\nImportError: No module named 'packaging'\n\ngogol@gogol-Vostro-3558tio:~$ \n```\n\n\nplease, can anyone help me? I have looked up extensively all answers here regarding cryptography, but still can't make anything out of this. A detailed answer would be very helpful. Thanks in advance.\n    ", "Answer": "\r\nAll credits go to this blog: https://odedrabhavesh.blogspot.ca/2017/02/importerror-no-module-named.html\n\nSince you are using python3, try the following with root permission:\n\n```\napt-get purge -y python3-pip\nwget https://bootstrap.pypa.io/get-pip.py\npython3 ./get-pip.py\n```\n\n\nThen try ```\npip install```\n again.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Problem installing cryptography on Raspberry Pi\r\n                \r\nI'm trying to install the cryptography package within a Docker container on a Raspberry Pi. It has worked before, but, for some reason, stopped working, when I had to rebuild my container.\nWhen running\n```\nRUN pip install cryptography\n```\n\nThis is the error message I get:\n```\n  ERROR: Command errored out with exit status 1:\n   command: /usr/local/bin/python /usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py build_wheel /tmp/tmpnvp_3buk\n       cwd: /tmp/pip-install-h70clj5g/cryptography_5f6f98a08a774493a9829b0d6e8c5a6a\n  Complete output (208 lines):\n  running bdist_wheel\n  running build\n  running build_py\n  creating build\n  creating build/lib.linux-armv7l-3.9\n  creating build/lib.linux-armv7l-3.9/cryptography\n  copying src/cryptography/__about__.py -> build/lib.linux-armv7l-3.9/cryptography\n  copying src/cryptography/fernet.py -> build/lib.linux-armv7l-3.9/cryptography\n  copying src/cryptography/__init__.py -> build/lib.linux-armv7l-3.9/cryptography\n  copying src/cryptography/utils.py -> build/lib.linux-armv7l-3.9/cryptography\n  copying src/cryptography/exceptions.py -> build/lib.linux-armv7l-3.9/cryptography\n  creating build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/general_name.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/ocsp.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/oid.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/certificate_transparency.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/base.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/extensions.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  copying src/cryptography/x509/name.py -> build/lib.linux-armv7l-3.9/cryptography/x509\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat\n  copying src/cryptography/hazmat/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat\n  copying src/cryptography/hazmat/_oid.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/backends\n  copying src/cryptography/hazmat/backends/interfaces.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends\n  copying src/cryptography/hazmat/backends/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings\n  copying src/cryptography/hazmat/bindings/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/hashes.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/keywrap.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/_cipheralgorithm.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/_asymmetric.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/constant_time.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/poly1305.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/cmac.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/_serialization.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/padding.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/hmac.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/rsa.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/x25519.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backeFailed to build cryptography\nnds/openssl\n  copying src/cryptography/hazmat/backends/openssl/ed448.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/encode_asn1.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/hashes.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/ed25519.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/decode_asn1.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/aead.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/dh.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/poly1305.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/backend.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/cmac.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/ec.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/hmac.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/dsa.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/utils.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/ciphers.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/x509.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/x448.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/backends/openssl\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl\n  copying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl\n  copying src/cryptography/hazmat/bindings/openssl/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl\n  copying src/cryptography/hazmat/bindings/openssl/_conditional.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/openssl\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/rsa.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/x25519.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/ed448.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/ed25519.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/dh.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/types.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/padding.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/ec.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/dsa.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/utils.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/x448.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/asymmetric\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/modes.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/aead.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/algorithms.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/base.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/ciphers\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor\n  copying src/cryptography/hazmat/primitives/twofactor/totp.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor\n  copying src/cryptography/hazmat/primitives/twofactor/hotp.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor\n  copying src/cryptography/hazmat/primitives/twofactor/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/twofactor\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/hkdf.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/concatkdf.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/kbkdf.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/scrypt.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/x963kdf.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/kdf\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/ssh.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/pkcs7.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/pkcs12.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/__init__.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/base.py -> build/lib.linux-armv7l-3.9/cryptography/hazmat/primitives/serialization\n  running egg_info\n  writing src/cryptography.egg-info/PKG-INFO\n  writing dependency_links to src/cryptography.egg-info/dependency_links.txt\n  writing requirements to src/cryptography.egg-info/requires.txt\n  writing top-level names to src/cryptography.egg-info/top_level.txt\n  reading manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  reading manifest template 'MANIFEST.in'\n  no previously-included directories found matching 'docs/_build'\n  warning: no previously-included files found matching 'vectors'\n  warning: no previously-included files matching '*' found under directory 'vectors'\n  warning: no previously-included files matching '*' found under directory '.github'\n  warning: no previously-included files found matching 'release.py'\n  warning: no previously-included files found matching '.coveragerc'\n  warning: no previously-included files found matching 'codecov.yml'\n  warning: no previously-included files found matching '.readthedocs.yml'\n  warning: no previously-included files found matching 'dev-requirements.txt'\n  warning: no previously-included files found matching 'tox.ini'\n  warning: no previously-included files found matching 'mypy.ini'\n  warning: no previously-included files matching '*' found under directory '.zuul.d'\n  warning: no previously-included files matching '*' found under directory '.zuul.playbooks'\n  adding license file 'LICENSE'\n  adding license file 'LICENSE.APACHE'\n  adding license file 'LICENSE.BSD'\n  adding license file 'LICENSE.PSF'\n  writing manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  copying src/cryptography/py.typed -> build/lib.linux-armv7l-3.9/cryptography\n  creating build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/__init__.pyi -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/asn1.pyi -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/ocsp.pyi -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/x509.pyi -> build/lib.linux-armv7l-3.9/cryptography/hazmat/bindings/_rust\n  running build_ext\n  generating cffi module 'build/temp.linux-armv7l-3.9/_openssl.c'\n  creating build/temp.linux-armv7l-3.9\n  running build_rust\n      Updating crates.io index\n  \n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation/ for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq/\n      4) Ensure you have a recent Rust toolchain installed:\n         https://cryptography.io/en/latest/installation/#rust\n  \n      Python: 3.9.7\n      platform: Linux-5.10.63-v7+-armv7l-with-glibc2.28\n      pip: n/a\n      setuptools: 58.3.0\n      setuptools_rust: 0.12.1\n      =============================DEBUG ASSISTANCE=============================\n  \n  Traceback (most recent call last):\n    File \"/usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 363, in <module>\n      main()\n    File \"/usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 345, in main\n      json_out['return_val'] = hook(**hook_input['kwargs'])\n    File \"/usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 261, in build_wheel\n      return _build_backend().build_wheel(wheel_directory, config_settings,\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools/build_meta.py\", line 221, in build_wheel\n      return self._build_with_temp_dir(['bdist_wheel'], '.whl',\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools/build_meta.py\", line 207, in _build_with_temp_dir\n      self.run_setup()\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools/build_meta.py\", line 150, in run_setup\n      exec(compile(code, __file__, 'exec'), locals())\n    File \"setup.py\", line 39, in <module>\n      setup(\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools/__init__.py\", line 159, in setup\n      return distutils.core.setup(**attrs)\n    File \"/usr/local/lib/python3.9/distutils/core.py\", line 148, in setup\n      dist.run_commands()\n    File \"/usr/local/lib/python3.9/distutils/dist.py\", line 966, in run_commands\n      self.run_command(cmd)\n    File \"/usr/local/lib/python3.9/distutils/dist.py\", line 985, in run_command\n      cmd_obj.run()\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/wheel/bdist_wheel.py\", line 299, in run\n      self.run_command('build')\n    File \"/usr/local/lib/python3.9/distutils/cmd.py\", line 313, in run_command\n      self.distribution.run_command(command)\n    File \"/usr/local/lib/python3.9/distutils/dist.py\", line 985, in run_command\n      cmd_obj.run()\n    File \"/usr/local/lib/python3.9/distutils/command/build.py\", line 135, in run\n      self.run_command(cmd_name)\n    File \"/usr/local/lib/python3.9/distutils/cmd.py\", line 313, in run_command\n      self.distribution.run_command(command)\n    File \"/usr/local/lib/python3.9/distutils/dist.py\", line 985, in run_command\n      cmd_obj.run()\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/cffi/setuptools_ext.py\", line 144, in run\n      base_class.run(self)\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools_rust/setuptools_ext.py\", line 103, in run\n      build_rust.run()\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools_rust/command.py\", line 52, in run\n      self.run_for_extension(ext)\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools_rust/build.py\", line 92, in run_for_extension\n      dylib_paths = self.build_extension(ext)\n    File \"/tmp/pip-build-env-eus_qh_e/overlay/lib/python3.9/site-packages/setuptools_rust/build.py\", line 131, in build_extension\n      metadata = json.loads(check_output(metadata_command))\n    File \"/usr/local/lib/python3.9/subprocess.py\", line 424, in check_output\n      return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\n    File \"/usr/local/lib/python3.9/subprocess.py\", line 528, in run\n      raise CalledProcessError(retcode, process.args,\n  subprocess.CalledProcessError: Command '['cargo', 'metadata', '--manifest-path', 'src/rust/Cargo.toml', '--format-version', '1']' died with <Signals.SIGSEGV: 11>.\n  ----------------------------------------\n  ERROR: Failed building wheel for cryptography\nERROR: Could not build wheels for cryptography, which is required to install pyproject.toml-based projects\nThe command '/bin/sh -c pip install cryptography' returned a non-zero code: 1\n```\n\nAs suggested in the message I've already tried updating pip, but without any success. Not sure if it matters, but the base image is ```\npython:3.9-slim-buster```\n\nEdit:\nHere is the Dockerfile up to the point where I try to install the cryptography package:\n```\nARG PYTHON_VERSION=3.9-slim-buster\n\n# define an alias for the specfic python version used in this file.\nFROM python:${PYTHON_VERSION} as python\n\n# Python build stage\nFROM python as python-build-stage\n\nARG BUILD_ENVIRONMENT=production\n\n# Install apt packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  # dependencies for building Python packages\n  build-essential \\\n  libpq-dev\\\n  libssl-dev \\\n  libffi-dev \\\n  libatlas-base-dev \\\n  cargo \\\n  rustc \\\n  gcc \\\n  libssl-dev \\\n  python3-dev \\\n  libjpeg62 \\\n  musl-dev \\\n  zlib1g-dev\\\n  libjpeg-dev \\\n  openssl\n\nCOPY ./requirements .\n\nRUN pip install --upgrade pip\nRUN pip install cryptography\n```\n\nEdit 2:\nThe workaround from this question did solve my problem. It just doesn't seem to be very future proof to pin the cryptography version to sth. < 3.5\nTo be clear, this works:\n```\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\nRUN pip install cryptography==3.4.6 \n```\n\n    ", "Answer": "\r\nThis worked for me. TL;DR\n```\nsudo apt remove rustc\nsudo curl https://sh.rustup.rs -sSf | sh\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": ".NET cryptography for licence keys?\r\n                \r\nI want to create a license key, which cryptography algorithm would you recommend?\n\nBasically the inputs would be:\n\n\n  company name\n  major version number\n  date created\n  expirey date\n  has feature1:\n  has feature2:\n  has feature3:\n\n\ne.g.  Acme Inc 5.0 20081102 20081102 0 1 0\n\nRelated: Which built-in .NET cryptography algorithm is the most secure?\n    ", "Answer": "\r\nI would recommend: Don't spend too much time on securing your keys. \nWith byte compiled languages it is very easy to decompile and just make the application skip the validation step. No matter how secure your keys are, they don't matter when your validation function always return true. Serial keys are there to keep honest people honest.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to get rid of cryptography build error?\r\n                \r\nI am trying to build a dockerfile but the problem is when it trying to build specifically cryptography is not building.\nMY Dockerfile\n```\nFROM python:3.7-alpine\n\nENV PYTHONUNBUFFERED 1\n\nRUN apk update \\\n  # psycopg2 dependencies\n  && apk add --virtual build-deps gcc python3-dev musl-dev\\\n  && apk add postgresql-dev \\\n  && apk add build-base \\\n  # Pillow dependencies\n  && apk add jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev tcl-dev \\\n  # CFFI dependencies\n  && apk add libffi-dev py-cffi \\\n  # Translations dependencies\n  && apk add gettext \\\n  # https://docs.djangoproject.com/en/dev/ref/django-admin/#dbshell\n  && apk add postgresql-client \\\n  # cairo\n  && apk add cairo cairo-dev pango-dev gdk-pixbuf-dev poppler-utils\n\n# fonts for weasyprint\nRUN mkdir ~/.fonts\nCOPY ./fonts/* /root/.fonts/\n\n# secret key (should be in docker-secrets, or we need to run minikube locally\nRUN mkdir /etc/secrets\nCOPY secret.readme proxy_rsa_key* /etc/secrets/\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements /requirements\nRUN pip install -r /requirements/local.txt\n\nCOPY ./compose/local/django/entrypoint /entrypoint\nRUN sed -i 's/\\r//' /entrypoint\nRUN chmod +x /entrypoint\n\nCOPY ./compose/local/django/start /start\nRUN sed -i 's/\\r//' /start\nRUN chmod +x /start\n\nCOPY ./compose/local/django/celery/worker/start /start-celeryworker\nRUN sed -i 's/\\r//' /start-celeryworker\nRUN chmod +x /start-celeryworker\n\nCOPY ./compose/local/django/celery/beat/start /start-celerybeat\nRUN sed -i 's/\\r//' /start-celerybeat\nRUN chmod +x /start-celerybeat\n\nCOPY ./compose/local/django/celery/flower/start /start-flower\nRUN sed -i 's/\\r//' /start-flower\nRUN chmod +x /start-flower\n\nWORKDIR /app\n\nENTRYPOINT [\"/entrypoint\"]\n```\n\nwhen I try to build my dockerfile it shows:\n```\nBuilding wheel for cryptography (PEP 517): finished with status 'error'\n  ERROR: Command errored out with exit status 1:\n  \n  error: Can not find Rust compiler\n  ----------------------------------------\n  ERROR: Failed building wheel for cryptography\n\n```\n\nI tried to solve but i couldn't. I am newbie in docker.Please help how to get rid of this problem.\n    ", "Answer": "\r\ncryptography < 3.5:\nYou can skip the rust installation and other related dependencies by adding the line below before apk add commands:\n```\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n```\n\ncryptography >= 3.5:  Thanks @riptusk331\nAfter this version rust will be required. Either install a specific version <3.5 or follow cryptography installation instructions. It is stated in the attached link that they are very aggressively explained in the docs.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Symmetric cryptography and salt\r\n                \r\nI need to encrypt two-way (symmetric) distinct tokens. These tokens are expected to be repeated (e.g. They are people first names), but I do not want an attacker to conclude which encrypted tokens came from the same original tokens. Salt is the way to go for one-way cryptography (hashing).\n\nIs there a method that can work in symmetric cryptography, a workaround or an alternative?\n    ", "Answer": "\r\nYes. Properly used, symmetric encryption does not reveal anything about the plaintext, not even the fact that multiple plaintexts are the same.\n\nProper usage means choosing a mode of operation that uses an initialization vector (IV) or nonce (that is, not ECB), and choosing the IV appropriately (usually random bytes). Encrypting multiple plaintexts with the same key and IV allows this attack pretty much just like with ECB mode, and using a static IV is a common mistake.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Pip install cryptography in windows\r\n                \r\nI'm get the following error when running ```\npip install cryptography```\n:\n\n```\nbuild\\temp.win32-2.7\\Release\\_openssl.c(434) : fatal error C1083: Cannot open include file: 'openssl/opensslv.h': No such file or directory```\n\n\nI'm running windows 10, 64 bit, with python 2.7. I'm trying to install cryptography 1.9.\n    ", "Answer": "\r\nInstalling openssl and changing environment variables fixed this problem for me.\n\n\nInstall OpenSSL by using the installer from here: https://slproweb.com/products/Win32OpenSSL.html\nUse the ```\nWin32OpenSSL-1_1_0f```\n, even if your system is 64 bit (I tried installing the 64 bit version of OpenSSL and this did not fix the problem)\nThe following two folders should now exist: ```\nC:\\OpenSSL-Win32\\include```\n, ```\nC:\\OpenSSL-Win32\\lib```\n\nOpen a cmd line terminal and run the following:\n```\n> set INCLUDE=C:\\OpenSSL-Win32\\include;%INCLUDE%```\n\n```\n> set LIB=C:\\OpenSSL-Win32\\lib;%LIB%```\n\n```\n> pip install cryptography```\n\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to install cryptography on Mac OS X?\r\n                \r\nMy OS: Mac OS X El Capitan\n\nWhen I install cryptography like this:\n\n```\npip install cryptography==0.2.1\n```\n\n\nThe error was:\n\n```\nCollecting cryptography==0.2.1\n  Using cached cryptography-0.2.1.tar.gz\n    Complete output from command python setup.py egg_info:\n    no previously-included directories found matching 'documentation/_build'\n    zip_safe flag not set; analyzing archive contents...\n    six: module references __path__\n\n    Installed /private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/six-1.10.0-py2.7.egg\n    Searching for cffi>=0.8\n    Reading https://pypi.python.org/simple/cffi/\n    Best match: cffi 1.5.0\n    Downloading https://pypi.python.org/packages/source/c/cffi/cffi-1.5.0.tar.gz#md5=dec8441e67880494ee881305059af656\n    Processing cffi-1.5.0.tar.gz\n    Writing /var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/easy_install-ZAtQYR/cffi-1.5.0/setup.cfg\n    Running cffi-1.5.0/setup.py -q bdist_egg --dist-dir /var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/easy_install-ZAtQYR/cffi-1.5.0/egg-dist-tmp-Dl08xt\n    creating /private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg\n    Extracting cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg to /private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs\n\n    Installed /private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg\n    Searching for pycparser\n    Reading https://pypi.python.org/simple/pycparser/\n    Best match: pycparser 2.14\n    Downloading https://pypi.python.org/packages/source/p/pycparser/pycparser-2.14.tar.gz#md5=a2bc8d28c923b4fe2b2c3b4b51a4f935\n    Processing pycparser-2.14.tar.gz\n    Writing /var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/easy_install-80l9Lo/pycparser-2.14/setup.cfg\n    Running pycparser-2.14/setup.py -q bdist_egg --dist-dir /var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/easy_install-80l9Lo/pycparser-2.14/egg-dist-tmp-5dC3Ib\n    warning: no previously-included files matching 'yacctab.*' found under directory 'tests'\n    warning: no previously-included files matching 'lextab.*' found under directory 'tests'\n    warning: no previously-included files matching 'yacctab.*' found under directory 'examples'\n    warning: no previously-included files matching 'lextab.*' found under directory 'examples'\n    zip_safe flag not set; analyzing archive contents...\n    Copying pycparser-2.14-py2.7.egg to /private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs\n\n    Installed /private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/pycparser-2.14-py2.7.egg\n    running egg_info\n    creating pip-egg-info/cryptography.egg-info\n    writing requirements to pip-egg-info/cryptography.egg-info/requires.txt\n    writing pip-egg-info/cryptography.egg-info/PKG-INFO\n    writing top-level names to pip-egg-info/cryptography.egg-info/top_level.txt\n    writing dependency_links to pip-egg-info/cryptography.egg-info/dependency_links.txt\n    writing manifest file 'pip-egg-info/cryptography.egg-info/SOURCES.txt'\n    warning: manifest_maker: standard file '-c' not found\n\n    cryptography/hazmat/bindings/__pycache__/_cffi__xfdb41ad9xb4fc9075.c:369:5: error: conflicting types for 'ASN1_GENERALIZEDTIME_check'\n    int ASN1_GENERALIZEDTIME_check(ASN1_GENERALIZEDTIME *);\n        ^\n    /usr/local/include/openssl/asn1.h:856:5: note: previous declaration is here\n    int ASN1_GENERALIZEDTIME_check(const ASN1_GENERALIZEDTIME *a);\n        ^\n    1 error generated.\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/setup.py\", line 113, in <module>\n        \"build\": cffi_build,\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/core.py\", line 151, in setup\n        dist.run_commands()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n        self.run_command(cmd)\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/dist.py\", line 972, in run_command\n        cmd_obj.run()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/site-packages/setuptools/command/egg_info.py\", line 180, in run\n        self.find_sources()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/site-packages/setuptools/command/egg_info.py\", line 207, in find_sources\n        mm.run()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/site-packages/setuptools/command/egg_info.py\", line 291, in run\n        self.add_defaults()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/site-packages/setuptools/command/egg_info.py\", line 320, in add_defaults\n        sdist.add_defaults(self)\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/site-packages/setuptools/command/sdist.py\", line 118, in add_defaults\n        build_py = self.get_finalized_command('build_py')\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/cmd.py\", line 312, in get_finalized_command\n        cmd_obj.ensure_finalized()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n        self.finalize_options()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/site-packages/setuptools/command/build_py.py\", line 28, in finalize_options\n        orig.build_py.finalize_options(self)\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/command/build_py.py\", line 46, in finalize_options\n        ('force', 'force'))\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/cmd.py\", line 298, in set_undefined_options\n        src_cmd_obj.ensure_finalized()\n      File \"/Users/username/.pyenv/versions/2.7.11/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n        self.finalize_options()\n      File \"/private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/setup.py\", line 55, in finalize_options\n        OpenSSLBinding().ffi.verifier.get_extension(),\n      File \"cryptography/hazmat/bindings/openssl/binding.py\", line 83, in __init__\n        self._ensure_ffi_initialized()\n      File \"cryptography/hazmat/bindings/openssl/binding.py\", line 99, in _ensure_ffi_initialized\n        libraries)\n      File \"cryptography/hazmat/bindings/utils.py\", line 72, in build_ffi\n        ext_package=\"cryptography\",\n      File \"/private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg/cffi/api.py\", line 433, in verify\n        lib = self.verifier.load_library()\n      File \"/private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg/cffi/verifier.py\", line 110, in load_library\n        self._compile_module()\n      File \"/private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg/cffi/verifier.py\", line 207, in _compile_module\n        outputfilename = ffiplatform.compile(tmpdir, self.get_extension())\n      File \"/private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg/cffi/ffiplatform.py\", line 29, in compile\n        outputfilename = _build(tmpdir, ext, compiler_verbose)\n      File \"/private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography/.eggs/cffi-1.5.0-py2.7-macosx-10.11-x86_64.egg/cffi/ffiplatform.py\", line 62, in _build\n        raise VerificationError('%s: %s' % (e.__class__.__name__, e))\n    cffi.ffiplatform.VerificationError: CompileError: command 'clang' failed with exit status 1\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/48/lrr_y58s4rq70qdnjcvqc8l8j2g31b/T/pip-build-zGO9s0/cryptography\n```\n\n\nI am sure that I have upgrade the ```\nopenssl```\n to the newest version:\n\n```\n$ openssl version\nOpenSSL 1.0.2f  28 Jan 2016\n```\n\n\nBut I don't know how to fix it. Even I checked the official documentation:\n\n\n  https://cryptography.io/en/latest/installation/#building-cryptography-on-os-x\n\n\nAnd follow that to do, the result was the same.\n    ", "Answer": "\r\n```\nbrew```\n to the rescue:\n\n```\nbrew install openssl\n```\n\n\nthen ```\nbrew```\n gives a hint:\n\nApple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries\n\nGenerally there are no consequences of this for you. If you build your\nown software and it requires this formula, you'll need to add to your\nbuild variables:\n\n```\nLDFLAGS:  -L/usr/local/opt/openssl/lib\nCPPFLAGS: -I/usr/local/opt/openssl/include\nPKG_CONFIG_PATH: /usr/local/opt/openssl/lib/pkgconfig\n```\n\n\nSo just export these env vars and rerun your favorite pip install (or better to avoid havoc in future add following to your ```\n~/.bash_profile```\n:\n\n```\nexport LDFLAGS=\"-L/usr/local/opt/openssl/lib\"\nexport CPPFLAGS=\"-I/usr/local/opt/openssl/include\"\nexport PKG_CONFIG_PATH=\"/usr/local/opt/openssl/lib/pkgconfig\"\n```\n\n\nThis worked for me like a charm!\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python DLL ImportError cryptography\r\n                \r\nI'm trying to convert script below into an exe, but I think that even including the package cryptography, when the tool is executed in another machine, DLL importerror pronpts out, any idea of how I can solve it?, thanks!\n\nerror\n\n```\ntrying import.... 1\nTraceback (most recent call last):\n  File \"XXX\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\cx_Freeze\\initscripts\\__startup__.py\", line 40, in run\n  File \"XXX\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\cx_Freeze\\initscripts\\Console.py\", line 23, in run\n  File \"pod pdf merge tool.py\", line 2, in <module>\n  File \"XXX\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\cryptography\\hazmat\\backends\\openssl\\__init__.py\", line 7, in <module>\n  File \"XXX\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\cryptography\\hazmat\\backends\\openssl\\backend.py\", line 74, in <module>\n  File \"XXX\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\cryptography\\hazmat\\bindings\\openssl\\binding.py\", line 195, in <module>\n  File \"XXX\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\cryptography\\hazmat\\bindings\\openssl\\binding.py\", line 142, in init_static_locks\nImportError: DLL load failed: The specified module could not be found.\n```\n\n\nscript.py\n\n```\nprint (\"trying import.... 1\")\nfrom cryptography.hazmat.backends.openssl.backend import Backend as OpenSSLBackend\nprint (\"import ok\")\nprint (\"trying import... 2\")\nimport pysftp\nfrom pysftp import CnOpts\nprint (\"import ok\")\nimport re\nimport _ssl\nimport os, msvcrt\nprint (\"trying import... 3\")\nimport cryptography\nprint (\"import ok\")\nimport time\nfrom PyPDF2 import PdfFileMerger\n```\n\n\nsetup.py\n\n```\nfrom cx_Freeze import setup, Executable\nimport os\n\npackages = ['pysftp','time','bcrypt','pycparser','six','re','msvcrt','os','PyPDF2','paramiko','cryptography','cffi']\nincludes = ['_cffi_backend']\n\n\n# Dependencies are automatically detected, but it might need fine tuning.\nbuild_exe_options = {\"packages\":packages,'includes': includes}\n\n# GUI applications require a different base on Windows (the default is for a\n# console application).\nbase = None\n\nsetup(  name = \"POD PDF Merger tool\",\n        version = \"0.1\",\n        description = \"V1\",\n        options = {\"build_exe\": build_exe_options},\n        executables = [Executable(\"pod pdf merge tool.py\", base=base)])\n```\n\n    ", "Answer": "\r\nThis may appear if ```\nopenssl```\n isn't installed on your machine or in anaconda.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Benchmarking symmetric and asymmetric cryptography\r\n                \r\nIn order to integrity protect a byte stream one can conceptually either use symmetric cryptography (e.g. an HMAC with SHA-1) or asymmetric cryptography (e.g. digital signature with RSA).\nIt is common sense that asymmetric cryptography is much more expensive than using symmetric cryptography. However, I would like to have hard numbers and would like to know whether there exist benchmark suites for existing crypto libraries (e.g. openssl) in order to gain some measurement results for symmetric and asymmetric cryptography algorithms.\nThe numbers I get from the built-in \"openssl speed\" app can, unfortunately, not be compared to each other.\n\nPerhaps somebody already implemented a small benchmarking suite for this purpose?\n\nThanks,\nMartin\n    ", "Answer": "\r\nI don't think a benchmark is useful here, because the two things you're comparing are built for different use-cases. An HMAC is designed for situations in which you have a shared secret you can use to authenticate the message, whilst signatures are designed for situations in which you don't have a shared secret, but rather want anyone with your public key be able to verify your signature. There are very few situations in which either primitive would be equally appropriate, and when there is, there's likely to be a clear favorite on security, rather than performance grounds.\n\nIt's fairly trivial to demonstrate that an HMAC is going to be faster, however: Signing a message requires first hashing it, then computing the signature over the hash, whilst computing an HMAC requries first hashing it, then computing the HMAC (which is merely two additional one-block hash computations). For the same reason, though, for any reasonable assumption as to message length and speed of your cryptographic primitives, the speed difference is going to be negligible, since the largest part of the cost is shared between both operations.\n\nIn short, you shouldn't choose the structure of your cryptosystem based on insignificant differences in performance.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How do you use bcrypt for hashing passwords in PHP? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        How to use PHP's password_hash to hash and verify passwords\r\n                            \r\n                                (4 answers)\r\n                            \r\n                    \r\n                Closed last year.\r\n            The community is reviewing whether to reopen this question as of 3 days ago.\r\n        \r\n\r\n\r\n    \r\n\r\nEvery now and then I hear the advice \"Use bcrypt for storing passwords in PHP, bcrypt rules\".\n\nBut what is ```\nbcrypt```\n? PHP doesn't offer any such functions, Wikipedia babbles about a file-encryption utility and Web searches just reveal a few implementations of Blowfish in different languages. Now Blowfish is also available in PHP via ```\nmcrypt```\n, but how does that help with storing passwords? Blowfish is a general purpose cipher, it works two ways. If it could be encrypted, it can be decrypted. Passwords need a one-way hashing function.\n\nWhat is the explanation?\n    ", "Answer": "\r\n```\nbcrypt```\n is a hashing algorithm which is scalable with hardware (via a configurable number of rounds). Its slowness and multiple rounds ensures that an attacker must deploy massive funds and hardware to be able to crack your passwords. Add to that per-password salts (```\nbcrypt```\n REQUIRES salts) and you can be sure that an attack is virtually unfeasible without either ludicrous amount of funds or hardware.\n\n```\nbcrypt```\n uses the Eksblowfish algorithm to hash passwords. While the encryption phase of Eksblowfish and Blowfish are exactly the same, the key schedule phase of Eksblowfish ensures that any subsequent state depends on both salt and key (user password), and no state can be precomputed without the knowledge of both. Because of this key difference, ```\nbcrypt```\n is a one-way hashing algorithm. You cannot retrieve the plain text password without already knowing the salt, rounds and key (password). [Source]\n\nHow to use bcrypt:\n\nUsing PHP >= 5.5-DEV\n\nPassword hashing functions have now been built directly into PHP >= 5.5. You may now use ```\npassword_hash()```\n to create a ```\nbcrypt```\n hash of any password:\n\n```\n<?php\n// Usage 1:\necho password_hash('rasmuslerdorf', PASSWORD_DEFAULT).\"\\n\";\n// $2y$10$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n// For example:\n// $2y$10$.vGA1O9wmRjrwAVXD98HNOgsNpDczlqm3Jq7KnEd1rVAGv3Fykk1a\n\n// Usage 2:\n$options = [\n  'cost' => 11\n];\necho password_hash('rasmuslerdorf', PASSWORD_BCRYPT, $options).\"\\n\";\n// $2y$11$6DP.V0nO7YI3iSki4qog6OQI5eiO6Jnjsqg7vdnb.JgGIsxniOn4C\n```\n\n\nTo verify a user provided password against an existing hash, you may use the ```\npassword_verify()```\n as such:\n\n```\n<?php\n// See the password_hash() example to see where this came from.\n$hash = '$2y$07$BCryptRequires22Chrcte/VlQH0piJtjXl.0t1XkA8pw9dMXTpOq';\n\nif (password_verify('rasmuslerdorf', $hash)) {\n    echo 'Password is valid!';\n} else {\n    echo 'Invalid password.';\n}\n```\n\n\nUsing PHP >= 5.3.7, < 5.5-DEV (also RedHat PHP >= 5.3.3)\n\nThere is a compatibility library on GitHub created based on the source code of the above functions originally written in C, which  provides the same functionality. Once the compatibility library is installed, usage is the same as above (minus the shorthand array notation if you are still on the 5.3.x branch).\n\nUsing PHP < 5.3.7 (DEPRECATED)\n\nYou can use ```\ncrypt()```\n function to generate bcrypt hashes of input strings. This class can automatically generate salts and verify existing hashes against an input. If you are using a version of PHP higher or equal to 5.3.7, it is highly recommended you use the built-in function or the compat library. This alternative is provided only for historical purposes.\n\n```\nclass Bcrypt{\n  private $rounds;\n\n  public function __construct($rounds = 12) {\n    if (CRYPT_BLOWFISH != 1) {\n      throw new Exception(\"bcrypt not supported in this installation. See http://php.net/crypt\");\n    }\n\n    $this->rounds = $rounds;\n  }\n\n  public function hash($input){\n    $hash = crypt($input, $this->getSalt());\n\n    if (strlen($hash) > 13)\n      return $hash;\n\n    return false;\n  }\n\n  public function verify($input, $existingHash){\n    $hash = crypt($input, $existingHash);\n\n    return $hash === $existingHash;\n  }\n\n  private function getSalt(){\n    $salt = sprintf('$2a$%02d$', $this->rounds);\n\n    $bytes = $this->getRandomBytes(16);\n\n    $salt .= $this->encodeBytes($bytes);\n\n    return $salt;\n  }\n\n  private $randomState;\n  private function getRandomBytes($count){\n    $bytes = '';\n\n    if (function_exists('openssl_random_pseudo_bytes') &&\n        (strtoupper(substr(PHP_OS, 0, 3)) !== 'WIN')) { // OpenSSL is slow on Windows\n      $bytes = openssl_random_pseudo_bytes($count);\n    }\n\n    if ($bytes === '' && is_readable('/dev/urandom') &&\n       ($hRand = @fopen('/dev/urandom', 'rb')) !== FALSE) {\n      $bytes = fread($hRand, $count);\n      fclose($hRand);\n    }\n\n    if (strlen($bytes) < $count) {\n      $bytes = '';\n\n      if ($this->randomState === null) {\n        $this->randomState = microtime();\n        if (function_exists('getmypid')) {\n          $this->randomState .= getmypid();\n        }\n      }\n\n      for ($i = 0; $i < $count; $i += 16) {\n        $this->randomState = md5(microtime() . $this->randomState);\n\n        if (PHP_VERSION >= '5') {\n          $bytes .= md5($this->randomState, true);\n        } else {\n          $bytes .= pack('H*', md5($this->randomState));\n        }\n      }\n\n      $bytes = substr($bytes, 0, $count);\n    }\n\n    return $bytes;\n  }\n\n  private function encodeBytes($input){\n    // The following is code from the PHP Password Hashing Framework\n    $itoa64 = './ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    $output = '';\n    $i = 0;\n    do {\n      $c1 = ord($input[$i++]);\n      $output .= $itoa64[$c1 >> 2];\n      $c1 = ($c1 & 0x03) << 4;\n      if ($i >= 16) {\n        $output .= $itoa64[$c1];\n        break;\n      }\n\n      $c2 = ord($input[$i++]);\n      $c1 |= $c2 >> 4;\n      $output .= $itoa64[$c1];\n      $c1 = ($c2 & 0x0f) << 2;\n\n      $c2 = ord($input[$i++]);\n      $c1 |= $c2 >> 6;\n      $output .= $itoa64[$c1];\n      $output .= $itoa64[$c2 & 0x3f];\n    } while (true);\n\n    return $output;\n  }\n}\n```\n\n\nYou can use this code like this:\n\n```\n$bcrypt = new Bcrypt(15);\n\n$hash = $bcrypt->hash('password');\n$isGood = $bcrypt->verify('password', $hash);\n```\n\n\nAlternatively, you may also use the Portable PHP Hashing Framework.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Free Cryptography libraries\r\n                \r\nWhat are the most stable and useful Cryptography libraries, that they are:\n\n\nwritten with/for python, c++, c#, .net\nopensource, GNU, or other free license\n\n    ", "Answer": "\r\nThe standard Python library (implementing common ciphers like AES and RSA) is PyCrypto. It doesn't support things like PKCS yet, however. There is a partial Python wrapper for the Crypto++ library given by PyCryptopp, which you may find useful.\n\nThe OpenSSL library is also wrapped for Python by PyOpenSSL. A Python implementation of SSH is Paramiko.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic curve cryptography for ActionScript\r\n                \r\nDoes anyone know if there is a (preferably efficient :-) ) implementation of elliptic curve cryptography for ActionScript?\n\nThe only library I know of is as3crypto, which offers great implementations for symmetric cryptography, hashing and several other cryptography-related operations, but it has only RSA for public key cryptography.\n\nThanks in advance,\nJan\n    ", "Answer": "\r\nHere is a library that implements a lot of cryptographic algorithms including the Elliptic Curve Diffie-Hellman (ECDH) algorithm: http://code.google.com/p/flame. All algorithms are compatible with .NET Framework and have nearly the same API as .NET ones.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is Firebase using cryptography?\r\n                \r\nI am using firebase and email sign in method on my iOS app and also using database firebase, should I say \"YES\" on Export Compliance question about cryptography on iTunes Connect? if I should say yes what should I provide on the next step?\n    ", "Answer": "\r\nHere is a similar question - IOS App submission Export Compliance: Firebase. Based on the answers there it seems, that there is no need to answer \"YES\". But, as it was mentioned there - it is not a legal advice.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is off-topic. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it's on-topic for Stack Overflow.\r\n                \r\n                    \r\n                        Closed 12 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI’m studying “Elliptic Curve Cryptography”. It seems like that; it is very hard to understand the concept of “Identity Element”. \n\nActually my question is why we need “Identity Element”? As far as I understood, we need “Identity Element” in order to define inverse –P of any group element P.\nAm I correct?\n\nMoreover can somebody show me some introductory material on elliptic curve cryptography?\n    ", "Answer": "\r\nA lot of cryptographic proofs rely on very general mathematical concepts about \"sets of objects\". Some of these concepts are \"groups\" (Abelian Groups), \"modules\", \"fields\" and \"rings\". For these structured sets of objects a lot of lemmas and theorems have been derived and proofed in a very general way, once you accept the fundamental axioms as true which were used to construct them. \n\nThese structures can be constructed. You need \"Elements\", \"Identity Elements\", \"Inverse Elements\" and \"Operations\" and some \"Axioms\" that are assumed as always true. (Like \"Use operation XY, apply it to ELEMENT and INVERSE_ELEMENT and the result will always be IDENTITY_ELEMENT.\") So if you can verify about any set of objects that it fulfills the minimal pre-conditions for one of the abovely mentioned structures, then it will also fulfill all generally proven high level theorems.\n\nFor Elliptic Curves you just proof all the basic ingredients (i.e. axiomatically defined properties) are there to make them an Abelian Group, and BANG!, you've prooven that all other theorems related to Abelian Groups are also true. One of the axiomatic pre-conditions for Abelian Groups is the \"identity element\".\n\n\n\nI found this publication to be a very good introduction into Elliptic Curve cryptography, for people with some mathematical background. It comes with quite a few Java applets to play with online. Unfortunately it's German only, but maybe that helps you anyway:\n\nhttp://www.warendorf-freckenhorst.de/elliptische-kurven/frame.html\n\nAnother piece of software that lets you play with all sorts of cryptographic algorithms (including Elliptic Curves) is the now open sourced \"CrypTool\", available in English, German and Spanish. It is suitable for anybody with interest in technical or IT things:\n\nhttps://www.cryptool.org/en/\nhttps://www.cryptool.org/en/ct1-download-en (Download)    \n\nHere is a short introduction to CrypTool in the form of a presentation:\n\nhttp://www.cryptool.de/download/CrypToolPresentation-en.pdf\n\nEdit: Here is an English-language introduction into Elliptic Curve mathematics:\nhttp://www.certicom.com/index.php/ecc-tutorial\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Home-Made Cryptography [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is off-topic. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it's on-topic for Stack Overflow.\r\n                \r\n                    \r\n                        Closed 12 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI know you should never make your own cryptography, whether it is a cipher or hashing algorithm or even a secure pseudo random number generator these things I developed over a long standardisation process. However what I'm looking for quotes or good point in order to quickly describe/argue this to the occasional developer that decides to write their own cryptographic algorithm.\n    ", "Answer": "\r\nYou can tell this developer that existing algorithms such as AES have been analyzed by countless experts in cryptanalysis (which would certainly involve an advanced understanding of numbers and computer science) and tested in competitions, where there's a real incentive for creating secure algorithms.\n\nYou can also tell this developer that just because an algorithm is popular, it doesn't mean that it's insecure (if that was this developer's rationale). Just because lots of people know how door locks work doesn't make door locks insecure, nor is it a good justification for people to create their own door locks.\n\nFor a real world example, see this TDWTF article about Nintendo's bug in the Wii's security functions. Nintendo (a big, well-known company with plenty of programmers) tried to implement an existing algorithm and managed to screw that up. What makes this developer think that he/she has the l33t h4x0r skills to write a new, secure algorithm?\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography module not installing\r\n                \r\nI am working on a project where I need cryptography module for python. When I go to install it (when I run pip install cryptography) I get an error and I dont know how to fix it. Do you have any ideas how to fix this, or any suggestions (is this common, is it a problem with my pip installation):\n\n```\n(venv) C:\\Users\\PC\\Documents\\Codes>pip install cryptography\nCollecting cryptography\n  Using cached https://files.pythonhosted.org/packages/be/60/da377e1bed002716fb2d5d1d1cab720f298cb33ecff7bf7adea72788e4e4/cryptography-2.8.tar.gz\n  Installing build dependencies ... error\n  Complete output from command C:\\Users\\PC\\Documents\\Codes\\venv\\Scripts\\python.exe C:\\Users\\PC\\Documents\\Codes\\venv\\lib\\site-packages\\pip-19.0.3-py3.8.egg\\pip install --ignore-installed --no-user --prefix C:\\Users\\PC\\AppData\\Local\\Temp\\pip-build-env-hc0skefe\\overlay -\n-no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools>=40.6.0 wheel \"cffi>=1.8,!=1.11.3; platform_python_implementation != 'PyPy'\":\n  Collecting setuptools>=40.6.0\n    Using cached https://files.pythonhosted.org/packages/3d/72/1c1498c1e908e0562b1e1cd30012580baa7d33b5b0ffdbeb5fde2462cc71/setuptools-45.2.0-py3-none-any.whl\n  Collecting wheel\n    Using cached https://files.pythonhosted.org/packages/8c/23/848298cccf8e40f5bbb59009b32848a4c38f4e7f3364297ab3c3e2e2cd14/wheel-0.34.2-py2.py3-none-any.whl\n  Collecting cffi!=1.11.3,>=1.8\n    Using cached https://files.pythonhosted.org/packages/05/54/3324b0c46340c31b909fcec598696aaec7ddc8c18a63f2db352562d3354c/cffi-1.14.0.tar.gz\n      Complete output from command python setup.py egg_info:\n      Traceback (most recent call last):\n        File \"C:\\Users\\PC\\Documents\\Codes\\venv\\lib\\site-packages\\setuptools-40.8.0-py3.8.egg\\setuptools\\msvc.py\", line 489, in _find_latest_available_vc_ver\n      IndexError: list index out of range\n\n      During handling of the above exception, another exception occurred:\n\n      Traceback (most recent call last):\n        File \"<string>\", line 1, in <module>\n        File \"C:\\Users\\PC\\AppData\\Local\\Temp\\pip-install-w8il8_c_\\cffi\\setup.py\", line 127, in <module>\n          if sys.platform == 'win32' and uses_msvc():\n        File \"C:\\Users\\PC\\AppData\\Local\\Temp\\pip-install-w8il8_c_\\cffi\\setup.py\", line 105, in uses_msvc\n          return config.try_compile('#ifndef _MSC_VER\\n#error \"not MSVC\"\\n#endif')\n        File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\distutils\\command\\config.py\", line 225, in try_compile\n          self._compile(body, headers, include_dirs, lang)\n        File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\distutils\\command\\config.py\", line 132, in _compile\n          self.compiler.compile([src], include_dirs=include_dirs)\n        File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\distutils\\_msvccompiler.py\", line 360, in compile\n          self.initialize()\n        File \"C:\\Users\\PC\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\distutils\\_msvccompiler.py\", line 253, in initialize\n          vc_env = _get_vc_env(plat_spec)\n        File \"C:\\Users\\PC\\Documents\\Codes\\venv\\lib\\site-packages\\setuptools-40.8.0-py3.8.egg\\setuptools\\msvc.py\", line 185, in msvc14_get_vc_env\n        File \"C:\\Users\\PC\\Documents\\Codes\\venv\\lib\\site-packages\\setuptools-40.8.0-py3.8.egg\\setuptools\\msvc.py\", line 843, in __init__\n        File \"C:\\Users\\PC\\Documents\\Codes\\venv\\lib\\site-packages\\setuptools-40.8.0-py3.8.egg\\setuptools\\msvc.py\", line 485, in __init__\n        File \"C:\\Users\\PC\\Documents\\Codes\\venv\\lib\\site-packages\\setuptools-40.8.0-py3.8.egg\\setuptools\\msvc.py\", line 492, in _find_latest_available_vc_ver\n      distutils.errors.DistutilsPlatformError: Microsoft Visual C++ 14.0 is required. Get it with \"Microsoft Visual C++ Build Tools\": https://visualstudio.microsoft.com/downloads/\n\n      ----------------------------------------\n  Command \"python setup.py egg_info\" failed with error code 1 in C:\\Users\\PC\\AppData\\Local\\Temp\\pip-install-w8il8_c_\\cffi\\\n\n  ----------------------------------------\nCommand \"C:\\Users\\PC\\Documents\\Codes\\venv\\Scripts\\python.exe C:\\Users\\PC\\Documents\\Codes\\venv\\lib\\site-packages\\pip-19.0.3-py3.8.egg\\pip install --ignore-installed --no-user --prefix C:\\Users\\PC\\AppData\\Local\\Temp\\pip-build-env-hc0skefe\\overlay --no-warn-script-locati\non --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools>=40.6.0 wheel \"cffi>=1.8,!=1.11.3; platform_python_implementation != 'PyPy'\"\" failed with error code 1 in None\n\n```\n\n\nThanks in advance!!!!\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Problems installing Pip Cryptography in Windows [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        Fatal error C1083: Cannot open include file: 'openssl/opensslv.h'\r\n                            \r\n                                (2 answers)\r\n                            \r\n                    \r\n                Closed 2 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI am trying to install cryptography, but I am seeing a bunch of problems.\nFor some reasons there seems to be some dependency to my Visual Studio application and it tries to initiate some build process from there?!\n\npip install cryptography\nCollecting cryptography\nUsing cached https://files.pythonhosted.org/packages/bf/ac/552fc8729d90393845cc3a2062facf4a89dcbe206fa78771d60ddaae7554/cryptography-3.0.tar.gz\nRequirement already satisfied: six>=1.4.1 in c:\\python38\\lib\\site-packages (from cryptography)\nRequirement already satisfied: cffi!=1.11.3,>=1.8 in c:\\python38\\lib\\site-packages (from cryptography)\nRequirement already satisfied: pycparser in c:\\python38\\lib\\site-packages (from cffi!=1.11.3,>=1.8->cryptography)\nInstalling collected packages: cryptography\nRunning setup.py install for cryptography ... error\nComplete output from command c:\\python38\\python.exe -u -c \"import setuptools, tokenize;file='C:\\Users\\daw\\AppData\\Local\\Temp\\pip-build-jxm0knmz\\cryptography\\setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record C:\\Users\\daw\\AppData\\Local\\Temp\\pip-2sjuum9y-record\\install-record.txt --single-version-externally-managed --compile:\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build\\lib.win-amd64-3.8\ncreating build\\lib.win-amd64-3.8\\cryptography\ncopying src\\cryptography\\exceptions.py -> build\\lib.win-amd64-3.8\\cryptography\ncopying src\\cryptography\\fernet.py -> build\\lib.win-amd64-3.8\\cryptography\ncopying src\\cryptography\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\ncopying src\\cryptography_about_.py -> build\\lib.win-amd64-3.8\\cryptography\ncopying src\\cryptography_init_.py -> build\\lib.win-amd64-3.8\\cryptography\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat_der.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat_oid.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\ncreating build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509\\base.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509\\certificate_transparency.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509\\extensions.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509\\general_name.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509\\name.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509\\ocsp.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509\\oid.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncopying src\\cryptography\\x509_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\ncopying src\\cryptography\\hazmat\\backends\\interfaces.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\ncopying src\\cryptography\\hazmat\\backends_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\ncopying src\\cryptography\\hazmat\\bindings_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\cmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\constant_time.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\hashes.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\hmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\keywrap.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\padding.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\poly1305.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\aead.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\backend.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ciphers.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\cmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\decode_asn1.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\dh.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\dsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ec.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ed25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ed448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\encode_asn1.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\hashes.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\hmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ocsp.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\poly1305.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\rsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x509.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl\\binding.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl_conditional.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\dh.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\dsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ec.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\padding.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\x25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\x448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\aead.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\algorithms.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\base.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\modes.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\concatkdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\hkdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\kbkdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\pbkdf2.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\scrypt.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\x963kdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\base.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\pkcs12.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\ssh.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\ncreating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\hotp.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\totp.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor_init_.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\nrunning egg_info\nwriting src\\cryptography.egg-info\\PKG-INFO\nwriting dependency_links to src\\cryptography.egg-info\\dependency_links.txt\nwriting requirements to src\\cryptography.egg-info\\requires.txt\nwriting top-level names to src\\cryptography.egg-info\\top_level.txt\nreading manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs_build'\nwarning: no previously-included files found matching 'vectors'\nwarning: no previously-included files matching '' found under directory 'vectors'\nwarning: no previously-included files found matching '.travis.yml'\nwarning: no previously-included files found matching '.travis'\nwarning: no previously-included files matching '' found under directory '.travis'\nwarning: no previously-included files matching '*' found under directory '.github'\nwarning: no previously-included files found matching 'release.py'\nwarning: no previously-included files found matching '.coveragerc'\nwarning: no previously-included files found matching 'codecov.yml'\nwarning: no previously-included files found matching 'dev-requirements.txt'\nwarning: no previously-included files found matching 'rtd-requirements.txt'\nwarning: no previously-included files found matching 'tox.ini'\nwriting manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build\\temp.win-amd64-3.8\\Release\\_padding.c'\ncreating build\\temp.win-amd64-3.8\ncreating build\\temp.win-amd64-3.8\\Release\ngenerating cffi module 'build\\temp.win-amd64-3.8\\Release\\_openssl.c'\nbuilding '_openssl' extension\ncreating build\\temp.win-amd64-3.8\\Release\\build\ncreating build\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\ncreating build\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\\Release\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC\\Tools\\MSVC\\14.23.28105\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Ic:\\python38\\include -Ic:\\python38\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC\\Tools\\MSVC\\14.23.28105\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC\\Tools\\MSVC\\14.23.28105\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" /Tcbuild\\temp.win-amd64-3.8\\Release_openssl.c /Fobuild\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\\Release_openssl.obj\n_openssl.c\nbuild\\temp.win-amd64-3.8\\Release_openssl.c(546): fatal error C1083: Cannot open include file: 'openssl/opensslv.h': No such file or directory\nerror: command 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC\\Tools\\MSVC\\14.23.28105\\bin\\HostX86\\x64\\cl.exe' failed with exit status 2\n\nDoes anyone have an idea what goes wrong here and how to fix it?\n    ", "Answer": "\r\nThe real error seems to be: ```\nCannot open include file: 'openssl/opensslv.h'```\n.\nYou seem to be missing the OpenSSL development libraries. According to the documentation:\n```\nC:\\> \\path\\to\\vcvarsall.bat x86_amd64\nC:\\> set LIB=C:\\OpenSSL-win64\\lib;%LIB%\nC:\\> set INCLUDE=C:\\OpenSSL-win64\\include;%INCLUDE%\nC:\\> pip install cryptography\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pip not installing cryptography\r\n                \r\nI am running pip on an Arduino Yun, which runs OpenWRT, a variant of Linux.\n\nOn this device, I already have multiple packages installed, such as crypto, pycrypto, pyOpenSSL, etc.\n\nWhen I run ```\npip install cryptography```\n:\n\n```\nCollecting cryptography\n  Retrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x76895850>: Failed to establish a new connection: [Errno -2] Name or service not known',)': /simple/cryptography/\n  Retrying (Retry(total=3, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x768950f0>: Failed to establish a new connection: [Errno -2] Name or service not known',)': /simple/cryptography/\n  Retrying (Retry(total=2, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x768951d0>: Failed to establish a new connection: [Errno -2] Name or service not known',)': /simple/cryptography/\n  Retrying (Retry(total=1, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x76895650>: Failed to establish a new connection: [Errno -2] Name or service not known',)': /simple/cryptography/\n  Retrying (Retry(total=0, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x76895a10>: Failed to establish a new connection: [Errno -2] Name or service not known',)': /simple/cryptography/\n  Could not find a version that satisfies the requirement cryptography (from versions: )\nNo matching distribution found for cryptography\n```\n\n\nWhen I run ```\npip show cryptography```\n, it returns a blank.\n\nWhen I run ```\npip show pip```\n (for comparison):\n\n```\n---\nMetadata-Version: 1.1\nName: pip\nVersion: 8.1.2\n...\n```\n\n\nWhen I run ```\npip search cryptography```\n:\n\n```\nRetrying (Retry(total=4, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x76d48690>: Failed to establish a new connection: [Errno -2] Name or service not known',)': /pypi\nRetrying (Retry(total=3, connect=None, read=None, redirect=None)) after connection broken by 'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x76d3dc90>: Failed to establish a new connection: [Errno -2] Name or service not known',)': /pypi\n^COperation cancelled by user\n```\n\n\nBy contrast, I then tried a different package: ```\npip install crypto```\n:\n\n```\nRequirement already satisfied (use --upgrade to upgrade): crypto in /usr/lib/python2.7/site-packages\nRequirement already satisfied (use --upgrade to upgrade): shellescape in /usr/lib/python2.7/site-packages (from crypto)\nRequirement already satisfied (use --upgrade to upgrade): Naked in /usr/lib/python2.7/site-packages (from crypto)\nRequirement already satisfied (use --upgrade to upgrade): requests in /usr/lib/python2.7/site-packages (from Naked->crypto)\nRequirement already satisfied (use --upgrade to upgrade): pyyaml in /usr/lib/python2.7/site-packages (from Naked->crypto)\n```\n\n\nAny idea what is going on here, and how I can successfully install cryptography?\n    ", "Answer": "\r\nIt seems pretty clear that you have networking issues. This is not normal:\n\n```\n'NewConnectionError('<pip._vendor.requests.packages.urllib3.connection.VerifiedHTTPSConnection object at 0x76895850>: Failed to establish a new connection: [Errno -2] Name or service not known'\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pypy3 install Cryptography failed\r\n                \r\nI tried to install Cryptography through: \n\n```\nlsn@lsn-Super-Server:~/pypy/pypy3-v6.0.0-linux64/bin$ ./pypy3 -m pip install PyMySQL\n```\n\n\nBut, it failed with the comments:\n\n```\nrunning egg_info\nwriting src/cryptography.egg-info/PKG-INFO\nwriting dependency_links to src/cryptography.egg-info/dependency_links.txt\nwriting requirements to src/cryptography.egg-info/requires.txt\nwriting top-level names to src/cryptography.egg-info/top_level.txt\nreading manifest file 'src/cryptography.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nwriting manifest file 'src/cryptography.egg-info/SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build/temp.linux-x86_64-3.5/_padding.c'\ncreating build/temp.linux-x86_64-3.5\ngenerating cffi module 'build/temp.linux-x86_64-3.5/_constant_time.c'\ngenerating cffi module 'build/temp.linux-x86_64-3.5/_openssl.c'\nbuilding '_openssl' extension\ncreating build/temp.linux-x86_64-3.5/build\ncreating build/temp.linux-x86_64-3.5/build/temp.linux-x86_64-3.5\ncc -pthread -DNDEBUG -O2 -Qunused-arguments -fPIC -I/home/lsn/pypy/pypy3-v6.0.0-linux64/include -c build/temp.linux-x86_64-3.5/_openssl.c -o build/temp.linux-x86_64-3.5/build/temp.linux-x86_64-3.5/_openssl.o -Wconversion -Wno-error=sign-conversion\ncc: error: unrecognized command line option ‘-Qunused-arguments’; did you mean ‘-Wunused-parameter’?\nerror: command 'cc' failed with exit status 1\n\n----------------------------------------\nCommand \"/home/lsn/pypy/pypy3-v6.0.0-linux64/bin/pypy3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-87db0m7x/Cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-9zd03ixf/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-87db0m7x/Cryptography/\n```\n\n    ", "Answer": "\r\nI faced the same error while installing paypalrestsdk for python3 and I found the solution that needs to install or update python-openssl for that.\n\nTry below commands, it's working for me.\n\nFor python2\n\n```\nsudo apt-get install python-openssl\n```\n\n\nFor python3\n\n```\nsudo apt-get install python3-openssl\n```\n\n\nHope it works for you too.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Calculate MD5 checksum for a file\r\n                \r\nI'm using iTextSharp to read the text from a PDF file. However, there are times I cannot extract text, because the PDF file is only containing images. I download the same PDF files everyday, and I want to see if the PDF has been modified. If the text and modification date cannot be obtained, is a MD5 checksum the most reliable way to tell if the file has changed? \n\nIf it is, some code samples would be appreciated, because I don't have much experience with cryptography.\n    ", "Answer": "\r\nIt's very simple using System.Security.Cryptography.MD5:\n\n```\nusing (var md5 = MD5.Create())\n{\n    using (var stream = File.OpenRead(filename))\n    {\n        return md5.ComputeHash(stream);\n    }\n}\n```\n\n\n(I believe that actually the MD5 implementation used doesn't need to be disposed, but I'd probably still do so anyway.)\n\nHow you compare the results afterwards is up to you; you can convert the byte array to base64 for example, or compare the bytes directly. (Just be aware that arrays don't override ```\nEquals```\n. Using base64 is simpler to get right, but slightly less efficient if you're really only interested in comparing the hashes.)\n\nIf you need to represent the hash as a string, you could convert it to hex using ```\nBitConverter```\n:\n\n```\nstatic string CalculateMD5(string filename)\n{\n    using (var md5 = MD5.Create())\n    {\n        using (var stream = File.OpenRead(filename))\n        {\n            var hash = md5.ComputeHash(stream);\n            return BitConverter.ToString(hash).Replace(\"-\", \"\").ToLowerInvariant();\n        }\n    }\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ImportError: No module named cryptography\r\n                \r\nI'm trying to run a script that is using \"cryptography\" module but when i run it says\n```\nNo module named cryptography: \n\nTraceback (most recent call last):\nFile \"....\\Desktop\\script.py\", line 12, in <module>\n\n    from cryptography import x509\n\nImportError: No module named cryptography\n```\n\nThe module is correctly installed:\n```\nPackage            Version\ncryptography       3.4.8\n```\n\nI'm using:\n\npython 3.9\nwindows 10\n*pip 21.2.4 from c:\\program files\\python39\\lib\\site-packages\\pip (python 3.9)\n\nAlready tried to uninstall and install the module, already updated pip.\nAny advice ?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Graduation Project on Cryptography [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is opinion-based. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it can be answered with facts and citations by editing this post.\r\n                \r\n                    \r\n                        Closed 7 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI have to do a graduation project:\n\n\nTheme: Cryptography\nDevelopment time: 2 months max\n\n\nI am looking for creative ideas :), not simple proof of concepts ;)\n\nThanks\n    ", "Answer": "\r\nYou could create an actual implementation of a fair Mental Poker game.  There's plenty of open source card games out there that you could use for the user interface part, leaving the crypto and network protocol as the main work you'd have to do.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography output limit characters\r\n                \r\nIam trying to encrypt file names using the cryptography library but the output is so long that windows doesn't rename it and gives me error. This was asked here but didnt have a solution.\n```\nfileName= f.encrypt(b'#Filenamehere')\n\nprint(fileName)\n```\n\nOutput\n```\nb'gAAAAABhpf2t5brpCcfFoMZ9NvQ9R21uCeGGpVGZE2L_xfWwSw4IwSEj0Eos5smAmfZz3nySqGXsQOCjbThrTAFZuBOD3r1-t-aaV6RVpHWadybdE5A5RKVudM8BoD4_wvksaw4W9swNqgDZuGw=='\n```\n\nIs there a way to limit the output encrypted message to a certain number in cryptography library.\n    ", "Answer": "\r\nchange the filename so that nobody knows what it is. Windows has a limit on filename characters. Is there any other way to do this.\nI suggest taking look at Vernam cipher, cryptomuseum.com article explain how it is working and describe history of its' usage. Vernam is easy to implement, gives ciphertext same length as plaintext, but requires key length no lesser than plaintext.\nBeware that as it does deals with bits, you might get byte outside 0-127 range (I am not sure how windows filesystem will react to that) or byte with character not allowed in filename\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pyconfig.h missing during \"pip install cryptography\"\r\n                \r\nI wanna set up scrapy cluster follow this link scrapy-cluster,Everything is ok before I run this command:\n\n```\npip install -r requirements.txt\n```\n\n\nThe requirements.txt looks like:\n\n```\ncffi==1.2.1\ncharacteristic==14.3.0\nConcurrentLogHandler>=0.9.1\ncryptography==0.9.1\n...\n```\n\n\nI guess the above command means to install packages in requirements.txt.But I don't want it to specify the version,So I change it to this:\n\n```\ncat requirements.txt | while read line; do pip install ${line%%[>=]*} --user;done\n```\n\n\nWhen install cryptography,it gives me the error:\n\n```\nbuild/temp.linux-x86_64-2.7/_openssl.c:12:24:fatal error:pyconfig.h:No such file or directory \n#include <pyconfig.h>\n```\n\n\nI don't know how to solved this , I have tried a lot of methods ,but failed. my system is centos 7, and the version of python is 2.7.5(default).\nBesides, Is there any other scrapy frame which is appliable for a large number of urls . Thanks in advance\n    ", "Answer": "\r\nFor Ubuntu, python2\n\n```\napt-get install python-dev \n```\n\n\nFor Ubuntu, python3\n\n```\napt-get install python3-dev\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python and Cryptography: md5\r\n                \r\nI am very interested in python and cryptography and I would like to know what would be the most simple method in python to crack a hash.\n\nI would like to build a small python script that can crack this hash:21232f297a57a5a743894a0e4a801fc3\nwhich is simply 'admin'.\n\nWhat process would I need to go through to guess what this hash represents?\n\nI have read up about md5 and at this point in time I have only just started learning the methods behind cryptography, but they also go into deep computer science which is something I don't understand as of yet.\n\nI did some research here: http://nsfsecurity.pr.erau.edu/crypto/md5.html\n    ", "Answer": "\r\nYou can output a hex md5 like so:\n\n```\n>>> from hashlib import md5\n>>> md5('admin').hexdigest()\n'21232f297a57a5a743894a0e4a801fc3'\n```\n\n\nIf you have a list of words, you could try them one by one and output if their md5 matches your desired one. (This is known as a dictionary attack)\n\n```\n>>> words = 'test', 'alex', 'steve', 'admin'\n>>> for word in words:\n...     if md5(word).hexdigest() == '21232f297a57a5a743894a0e4a801fc3':\n...         print word\n...         break\n... \nadmin\n```\n\n\nIf you were serious about cracking an MD5 you'd have much better results on the GPU - try a tool like OCLHashCat\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "how to fix error - No module named 'cryptography'\r\n                \r\nwhen I run command ```\npython manage.py runserver```\n I got an error\n\nalso I try to install cryptography on virtual environment by command ```\npip install cryptography```\n. It says successfully installed the cryptography with following message. \n\nBut still I am not able to avoid the message ```\nNo module named 'cryptography'```\n when I run the server on AWS instance. Please help me to fix this issue.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is base 64 part of cryptography?\r\n                \r\nIs Base 64 part of cryptography. Does Base 64 provides any security? Does Base 64 encrypt and decrypt data??\n    ", "Answer": "\r\nNo.\n\nWell, to be really very pedantic, if you are trying to hide content from a complete-computer novice who doesn't really want the content very much: sure, it's plenty good. It's a bit better than the Caesar Cipher.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "PHP Cryptography Class Issues\r\n                \r\nI'm having a few issues regarding this Cryptography class. I am new to PHP, and I'm sure this is a minor syntax issue, but can anyone point me in the right direction? The code does not work at all at the moment.\n\nHere is the code\n\nCryptography.php\n\n\n\n```\nclass Cryptography\n{\n    # the key should be random binary, use scrypt, bcrypt or PBKDF2 to\n    # convert a string into a key\n    # key is specified using hexadecimal\n    # use either 16, 24 or 32 byte keys for AES-128, 192\n    # and 256 respectively\n    private static $key = pack('H*', \"I-AINT-SHOWING-YOU-MY-KEY-LOL\");\n    private static $iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);\n\n    public static function encrypt($plaintext)\n    {\n        # --- ENCRYPTION ---\n\n        # create a random IV to use with CBC encoding\n        $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);\n\n        # creates a cipher text compatible with AES (Rijndael block size = 128)\n        # to keep the text confidential \n        # only suitable for encoded input that never ends with value 00h\n        # (because of default zero padding)\n        $ciphertext = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $key, $plaintext, MCRYPT_MODE_CBC, $iv);\n\n        # prepend the IV for it to be available for decryption\n        $ciphertext = $iv . $ciphertext;\n\n        # encode the resulting cipher text so it can be represented by a string\n        return base64_encode($ciphertext);\n    }\n\n    public static function decrypt($ciphertext_base64)\n    {\n        # --- DECRYPTION ---\n\n        $ciphertext_dec = base64_decode($ciphertext_base64);\n\n        # retrieves the IV, iv_size should be created using mcrypt_get_iv_size()\n        $iv_dec = substr($ciphertext_dec, 0, $iv_size);\n\n        # retrieves the cipher text (everything except the $iv_size in the front)\n        $ciphertext_dec = substr($ciphertext_dec, $iv_size);\n\n        # may remove 00h valued characters from end of plain text\n        return mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $key, $ciphertext_dec, MCRYPT_MODE_CBC, $iv_dec);\n    } \n}\n```\n\n\nTest.php\n\n\n\n```\n    require_once('Cryptography.php');\n\n    $text = 'This is the string I am going to encrypt' . \"\\n\\n\";\n\n    echo $text;\n\n    $encrypted_text = Cryptography::encrypt($text);\n\n    echo \"{$encrypted_text}\\n\\n\";\n\n    $decrypted_text = Cryptography::decrypt($encrypted_text);\n\n    echo \"{$decrypted_text}\\n\\n\";\n```\n\n    ", "Answer": "\r\nstatic $key cannot be an output from another function. It must be literal. You can change ```\n$key```\n to some function, like ```\ncreate_key()```\n and return that ```\npack()```\n output. All ```\n$key```\n must be then changed to ```\nself::create_key()```\n. And the same concerns ```\n$iv_size```\n, it needs to be converted to ```\nself::get_iv_size()```\n as well.\n\n```\nprivate static function create_key(){\n    return pack('H*', \"I-AINT-SHOWING-YOU-MY-KEY-LOL\");\n}\nprivate static function get_iv_size(){ \n    return mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Why is XOR used in cryptography?\r\n                \r\nWhy is only XOR used in cryptographic algorithms, and other logic gates like OR, AND, and NOR are not used?\n    ", "Answer": "\r\nIt isn't exactly true to say that the logical operation XOR is the only one used throughout all cryptography, however it is the only two way encryption where it is used exclusively.\n\nHere is that explained:\n\nImagine you have a string of binary digits ```\n10101```\n\nand you XOR the string ```\n10111```\n with it you get ```\n00010```\n\n\nnow your original string is encoded and the second string becomes your key\nif you XOR your key with your encoded string you get your original string back.\n\nXOR allows you to easily encrypt and decrypt a string, the other logic operations don't.\n\nIf you have a longer string you can repeat your key until its long enough\nfor example if your string was ```\n1010010011```\n then you'd simple write your key twice and it would become ```\n1011110111```\n and XOR it with the new string\n\nHere's a wikipedia link on the XOR cipher.\n\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How does public-key cryptography work? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is off-topic. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it's on-topic for Stack Overflow.\r\n                \r\n                    \r\n                        Closed 12 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nand what are the differences between conventional cryptography and public-key cryptography?\n    ", "Answer": "\r\nYou should probably re-phrase your question:\n\nPublic-key cryptography uses an asymmetric approach where the key used to encrypt and the key used to decrypt a message are not the same. Here is a description of the RSA asymmetric algorithm: RSA (asymmetric cryptography)\n\nThere is probably no \"conventional crypthography\". What you probably mean are symmetric algorithms where both keys are the same. Symmetric key algorithm\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Security, Hacking, Cryptography Reading? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is seeking recommendations for books, tools, software libraries, and more. It does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     We don’t allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.\r\n                \r\n                    \r\n                        Closed 7 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI'm very interested in learning about cryptography, steganography, and similar practices.\n\nWhat books, resources, would you guys recommend in this area?\n    ", "Answer": "\r\nseminal crypto book\nhttp://www.schneier.com/book-applied.html\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography algorithms in Java\r\n                \r\nWe're a couple of amateurs in cryptography. We have to implement different algorithms related to Elliptic curve cryptography in Java. So far, we have been able to identify some key algorithms like ```\nECDH```\n, ```\nECIES```\n, ```\nECDSA```\n, ```\nECMQV```\n from the Wikipedia page on elliptic curve cryptography. \n\nNow, we are at a loss in trying to understand how and where to start implementing these algorithms. Also, does Java already provide these algorithms in its architecture? Or do we have to use some API like ```\nBouncyCastle```\n (we're seeing it all over this site!)? Or can we simply implement the algorithms on our own using standard code?\nAny help would be much appreciated!\n    ", "Answer": "\r\nYes, you can always rely on Bouncy Castle libraries to implement most required algorithms, certainly including Elliptic Curve crypto. No need to implement your own; instead try and get Bouncy fixed if you find any issues.\n\nThe OpenJDK 7 and Java 7 SE from Oracle also implements Elliptic Curve cryptography, earlier editions only contained a comprehensive API for Elliptic Curve cryptography, but you required a JCE provider (like Bouncy Castle) to provide the actual implementation.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "is this XOR cryptography secure? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is off-topic. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it's on-topic for Stack Overflow.\r\n                \r\n                    \r\n                        Closed 10 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\ncan somebody explain this algorithm is secure or not? is there attack to break that? this algorithm uses common XOR cryptography but has some differences:\n\nM(1) = key XOR Message(1)\nM(2) = h(key) XOR Message(2)\nM(3) = h(h(key)) XOR Message(3)\nand so on\n\nNotes: \n\n\nM(i) is ciphered text  \nMessage(i) is message that we are going to cipher it  \nkey and Message(i) have the same lengths**  \nattacker just has the ciphered text and knows key making scheme(continues hashing) and XOR cryptography \nhash algorithm is SHA-512\n\n    ", "Answer": "\r\nIf the attacker ever gets to know a plaintext-ciphertext pair, he can calculate the corresponding key.  And from that he can calculate all later keys. i.e. it's trivially vulnerable to a known plain text attack.\n\nNote that when I say that the attacker guesses the message, I don't mean that he's sure that his guess is correct. He might make a few trillion guesses, and if one of them is correct, your whole scheme is broken.\n\nAnd of course you must not ever reuse a key.\n\n\n\nA more secure (but twice as slow) algorithm would be:\n\n```\nKey(i+1) = h(\"A\"+key)\nM(i) = h(\"B\"+key) XOR Message(i)\n```\n\n\nOr a construction similar to CTR mode:\n\n```\nM(i) =  h(i+key) XOR Message(i)\n```\n\n\nBut I still wouldn't use either.\n\n\n\nBut there is no reason to use such a homebrew algorithm. There are plenty of existing algorithms that work well. For example if you like a stream cipher design, you could use AES in CTR mode.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Genetic Algorithm in cryptography\r\n                \r\nCan anyone explain how genetic algorithms can be used in cryptography?\nGenetic algorithms are optimizing problems, and they use some kind of pseudorandom code as key. How this key can be transferred to the receiver? \n    ", "Answer": "\r\nThey are unlikely to be of much use in general.  Genetic algorithms rely on a reasonably small change in output for a small change in input -- that allows them to close in on a good solution to the problem.\n\nCryptographic algorithms are designed to have a large change in output for a small change in input.  A good hash algorithm will flip around half the output bits if a single input bit is changed.\n\nThat makes genetic algorithms in general little better than a brute force search.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Good Stanford Javascript Crypto Library (SJCL) examples? (JS cryptography) [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is seeking recommendations for books, tools, software libraries, and more. It does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     We don’t allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.\r\n                \r\n                    \r\n                        Closed 7 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI am looking at a way to do client-side cryptography in Javascript (keeping http://www.matasano.com/articles/javascript-cryptography/ in mind) and have found SJCL. But I seem unable to find good code examples for it. Any pointers?\n    ", "Answer": "\r\nI did a presentation last year titled Developer's Guide to JavaScript and Web Cryptography and have the demo site online at https://jswebcrypto.azurewebsites.net/ \n\nThis includes simple Hash, HMAC, PBKDF2 and AES examples for OpenSSL command line (as a baseline) SJCL,  CryptoJS, Node.js Crypto, and even W3C Web Cryptography API\n\nHere are the SJCL examples:\n\nHash\n\n```\nvar out = sjcl.hash.sha1.hash(\"The quick brown fox jumps over the lazy dog\");\nvar hash = sjcl.codec.hex.fromBits(out)\n// \"2fd4e1c67a2d28fced849ee1bb76e7391b93eb12\"\n```\n\n\nHMAC\n\n```\nvar key = sjcl.codec.utf8String.toBits(\"key\");\nvar out = (new sjcl.misc.hmac(key, sjcl.hash.sha256)).mac(\"The quick brown fox jumps over the lazy dog\");\nvar hmac = sjcl.codec.hex.fromBits(out)\n// \"f7bc83f430538424b13298e6aa6fb143ef4d59a14946175997479dbc2d1a3cd8\"\n```\n\n\nPBKDF2\n\n```\nvar hmacSHA1 = function (key) {\n    var hasher = new sjcl.misc.hmac( key, sjcl.hash.sha1 );\n    this.encrypt = function () {\n        return hasher.encrypt.apply( hasher, arguments );\n    };\n};\n\nvar passwordSalt = sjcl.codec.hex.toBits( \"cf7488cd1e48e84990f51b3f121e161318ba2098aa6c993ded1012c955d5a3e8\" );\nvar derivedKey = sjcl.misc.pbkdf2( \"password\", passwordSalt, 100, 256, hmacSHA1 );\nvar hexKey = sjcl.codec.hex.fromBits( derivedKey );\n// c12b2e03a08f3f0d23f3c4429c248c275a728814053a093835e803bc8e695b4e\n```\n\n\nNote: This requires you in include sha1.js in addition to sjcl.js.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Sed replacing for cryptography\r\n                \r\nI am currently making a very simple cryptography tool, using the Linux command ```\nsed```\n.\n\nI have one problem though...\n\nHere is my code:\n\n```\n#!/bin/bash\necho -n \"String } \"\nread String\necho $String | sed -e 's/a/alpha/g' | sed -e 's/b/bravo/g' |\nsed -e 's/c/charlie/g' | sed -e 's/d/delta/g' | sed -e 's/e/echo/g' |\nsed -e 's/f/foxtrot/g' | sed -e 's/g/golf/g' | sed -e 's/h/hotel/g' |\nsed -e 's/i/indigo/g' | sed -e 's/j/juliet/g' | sed -e 's/k/kilo/g' |\nsed -e 's/l/lemar/g' | sed -e 's/m/mike/g' | sed -e 's/n/november/g' |\nsed -e 's/o/oscar/g' | sed -e 's/p/papa/g' | sed -e 's/q/quebec/g' |\nsed -e 's/r/romeo/g' | sed -e 's/s/sierra/g' | sed -e 's/t/tango/g' |\nsed -e 's/u/uniform/g' | sed -e 's/v/vector/g' | sed -e 's/w/whiskey/g' |\nsed -e 's/x/x-ray/g' | sed -e 's/y/yankee/g' | sed -e 's/z/zulu/g' |\nsed -e 's/A/Alpha/g' | sed -e 's/B/Bravo/g' | sed -e 's/C/Charlie/g' |\nsed -e 's/D/Delta/g' | sed -e 's/E/Echo/g' | sed -e 's/F/Foxtrot/g' |\nsed -e 's/G/Golf/g' | sed -e 's/H/Hotel/g' | sed -e 's/I/Indigo/g' |\nsed -e 's/J/Juliet/g' | sed -e 's/K/Kilo/g' | sed -e 's/L/Lemar/g' |\nsed -e 's/M/Mike/g' | sed -e 's/N/November/g' | sed -e 's/O/Oscar/g' |\nsed -e 's/P/Papa/g' | sed -e 's/Q/Quebec/g' | sed -e 's/R/Romeo/g' |\nsed -e 's/S/Sierra/g' | sed -e 's/T/Tango/g' | sed -e 's/U/Uniform/g' |\nsed -e 's/V/Vector/g' | sed -e 's/W/Whiskey/g' | sed -e 's/X/X-ray/g' |\nsed -e 's/Y/Yankee/g' | sed -e 's/Z/Zulu/g'\n```\n\n\nAnd when I execute it and put input, this is the output:\n\n```\nroot@kali:~# ./String2Phonetic \nString } StackOverflow\nSierratangoalemikearomeopapahosierracaromeotangoelemikearomeoachosierracaromeotangoelemikearomeoaromeolemikearomeoinosierracaromeovectoremberomeodigosierracaromeoechosierracaromeotangoelemikearomeoosierracaromeokilemikearomeoosierracaromeoOscarvectorechosierracaromeotangoelemikearomeoosierracaromeoromeofosierracaromeoxrayankeetangoromeoosierracaromeotangolemikearomeoosierracaromeowhiskeyankee\nroot@kali:~# \n```\n\n\nWhen it should be (based on Australia phonetics)\n\n```\nroot@kali:~# ./String2Phonetic \nString } StackOverflow\nSierratangoalphacharliekiloOscarvectorechoromeofoxtrotlemaroscarwhiskey\n```\n\n\nDoes anyone have a fix for this?\n    ", "Answer": "\r\nThis might work for you (GNU sed):\n\n```\nsed -r 's/.*/\\n&\\n:alpha:bravo:charlie:delta:echo:foxtrot:golf:hotel:indigo:juliet:kilo:lemur:mike:november:oscar:papa:quebec:romeo:sierra:tango:uniform:vector:whiskey:x-ray:yankee:zulu/;:a;s/\\n([^\\n])(.*\\n.*:\\1([^:]*))/\\1\\3\\n\\2/I;ta;s/\\n.*//' file\n```\n\n\nThis solution works by a prefixing a newline (a marker) to the front of the word to be translated and appending another newline and a lookup table to the end of the word. Each character is matched with a starting word in the lookup and the newline is used to mark where the matching has occured. Matching is terminated where two newlines are encountered. Substitution uses the ```\nI```\n flag to match on caseless characters.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "packaging cryptography software and distributing\r\n                \r\nI'm developing a python GUI application and plan on calling external program packaged with my program to do some encryption. I noticed from sites like OpenSSL that talk about export laws regarding cryptography software.\n\nIf I can't package binary forms of the cryptography software with my application, how can I work around this to still be able to encrypt the output of my program?\n    ", "Answer": "\r\nYou need to pick your target audiences with care, especially when you are dancing around with ITAR -- the International Traffic in Arms Regulations. Identify the countries you can legally export your product to and then, at the very least, say that people from other countries can't download it. You may have to do more than that to stay legal in your country.\n\nLegally, this is getting into the deep end of the pool and you will want to talk to a knowledgeable attorney about this. If you live in Finland, you can probably do whatever you like. If you live in the US, be careful. If you live in France, be very careful.\n\nUpdate: Sometimes I feel old, other days I prove it. Without checking on the current ITAR handling of strong cryptography I responded with an answer that is at least 12 years out of date. Prior to 1997 exporting crypto of any sort, from/to any country, was a very dicey thing to do and carried severe legal penalties. This was especially true in France which, for a time, outlawed all non-governmental uses of crypto, even very weak 40-bit DES. Although France has loosened up a bit, they still seem to behind most other developed countries in understanding that a) their citizens have a valid right to privacy, and b) there's not much they can do to stop it in a world where 4096 bit RSA is available all over the net.\n\nITAR's stance on crypto changed in 96-97. Although matters have improved in general, there are still obstacles to exporting/importing crypto. Before you go too much further you should thoroughly familiarize yourself with the laws of your country regarding cryto -- you might be shocked/saddened by what you find. Even the U.S. still has some restrictions on what kind of crypto you can export to whom and in what form. \n\nSome countries, notably France and the U.K., have had (and appear to still have in some form or other) laws that can require the supplier of the software to either escrow keys used by their customers and/or provide a backdoor into the system in case the government wants to see what you are talking about.\n\nBottom line: Good crypto makes governments nervous and the laws on what is legal/illegal are all over the map. Try to understand exactly what role encryption plays in your proposed product/project and determine if it's something that a user can opt in/out of based on their own country's stance on the subject.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cryptography module import error\r\n                \r\nI am attempting to run a website that is built on CherryPy and working on deploying it in a new environment with Python 2.7.13 and been working to get everything necessary setup. Currently I am stuck on importing pyOpenSSL to enable SSL support but pyOpenSSL is unable to install because a required module, Cryptography, is not installing. So I have been working on installing just Cryptography for the time being as all other required modules are installed.\n\nEarlier, after I had used ```\npip2.7 install cryptography > /tmp/piplog.txt```\n to attempt to install the module and log the whole output to a separate file and I was able to see errors like these\n\n```\ngcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/usr/local/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o\nbuild/temp.linux-x86_64-2.7/_openssl.c:434:30: error: openssl/opensslv.h: No such file or directory\nbuild/temp.linux-x86_64-2.7/_openssl.c:448:27: error: openssl/e_os2.h: No such file or directory\nbuild/temp.linux-x86_64-2.7/_openssl.c:468:25: error: openssl/aes.h: No such file or directory\nbuild/temp.linux-x86_64-2.7/_openssl.c:471:26: error: openssl/asn1.h: No such file or directory\n```\n\n\nThis lead me to see where those files currently actually were installed with ```\nfind / -name opensslv.h```\n and then I copied the files from my install of openssl with\n\n```\ncp -rf /usr/local/ssl/inclue/openssl/* /usr/local/include/python2.7/openssl\n```\n\n\nso that the cryptography module would find the appropriate files and it seems like the installer got a bit farther, but I am not able to currently make sense of the errors I am seeing in the output. The full output is below\n\n```\nCollecting cryptography\n  Using cached cryptography-1.9.tar.gz\nRequirement already satisfied: idna>=2.1 in /usr/local/lib/python2.7/site-packages (from cryptography)\nRequirement already satisfied: asn1crypto>=0.21.0 in /usr/local/lib/python2.7/site-packages (from cryptography)\nRequirement already satisfied: six>=1.4.1 in /usr/local/lib/python2.7/site-packages/six-1.10.0-py2.7.egg (from cryptography)\nRequirement already satisfied: enum34 in /usr/local/lib/python2.7/site-packages (from cryptography)\nRequirement already satisfied: ipaddress in /usr/local/lib/python2.7/site-packages (from cryptography)\nRequirement already satisfied: cffi>=1.7 in /usr/local/lib/python2.7/site-packages (from cryptography)\nRequirement already satisfied: pycparser in /usr/local/lib/python2.7/site-packages (from cffi>=1.7->cryptography)\nInstalling collected packages: cryptography\n  Running setup.py install for cryptography: started\n    Running setup.py install for cryptography: finished with status 'error'\n    Complete output from command /usr/local/bin/python2.7 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-VvLC6F/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-iAcBaS-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib.linux-x86_64-2.7\n    creating build/lib.linux-x86_64-2.7/cryptography\n    copying src/cryptography/exceptions.py -> build/lib.linux-x86_64-2.7/cryptography\n    copying src/cryptography/__init__.py -> build/lib.linux-x86_64-2.7/cryptography\n    copying src/cryptography/utils.py -> build/lib.linux-x86_64-2.7/cryptography\n    copying src/cryptography/__about__.py -> build/lib.linux-x86_64-2.7/cryptography\n    copying src/cryptography/fernet.py -> build/lib.linux-x86_64-2.7/cryptography\n    creating build/lib.linux-x86_64-2.7/cryptography/x509\n    copying src/cryptography/x509/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/x509\n    copying src/cryptography/x509/extensions.py -> build/lib.linux-x86_64-2.7/cryptography/x509\n    copying src/cryptography/x509/oid.py -> build/lib.linux-x86_64-2.7/cryptography/x509\n    copying src/cryptography/x509/base.py -> build/lib.linux-x86_64-2.7/cryptography/x509\n    copying src/cryptography/x509/general_name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\n    copying src/cryptography/x509/name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\n    copying src/cryptography/x509/certificate_transparency.py -> build/lib.linux-x86_64-2.7/cryptography/x509\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat\n    copying src/cryptography/hazmat/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\n    copying src/cryptography/hazmat/backends/interfaces.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\n    copying src/cryptography/hazmat/backends/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\n    copying src/cryptography/hazmat/bindings/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/interfaces.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/serialization.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/mac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/constant_time.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/keywrap.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    copying src/cryptography/hazmat/primitives/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/dh.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/decode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/x509.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    copying src/cryptography/hazmat/backends/openssl/encode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\n    copying src/cryptography/hazmat/bindings/openssl/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\n    copying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\n    copying src/cryptography/hazmat/bindings/openssl/_conditional.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\n    copying src/cryptography/hazmat/primitives/twofactor/totp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\n    copying src/cryptography/hazmat/primitives/twofactor/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\n    copying src/cryptography/hazmat/primitives/twofactor/hotp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\n    copying src/cryptography/hazmat/primitives/twofactor/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    copying src/cryptography/hazmat/primitives/asymmetric/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    copying src/cryptography/hazmat/primitives/asymmetric/dh.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    copying src/cryptography/hazmat/primitives/asymmetric/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    copying src/cryptography/hazmat/primitives/asymmetric/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    copying src/cryptography/hazmat/primitives/asymmetric/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    copying src/cryptography/hazmat/primitives/asymmetric/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    copying src/cryptography/hazmat/primitives/asymmetric/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\n    copying src/cryptography/hazmat/primitives/ciphers/algorithms.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\n    copying src/cryptography/hazmat/primitives/ciphers/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\n    copying src/cryptography/hazmat/primitives/ciphers/base.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\n    copying src/cryptography/hazmat/primitives/ciphers/modes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\n    creating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    copying src/cryptography/hazmat/primitives/kdf/x963kdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    copying src/cryptography/hazmat/primitives/kdf/kbkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    copying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    copying src/cryptography/hazmat/primitives/kdf/__init__.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    copying src/cryptography/hazmat/primitives/kdf/concatkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    copying src/cryptography/hazmat/primitives/kdf/hkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    copying src/cryptography/hazmat/primitives/kdf/scrypt.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\n    running egg_info\n    writing requirements to src/cryptography.egg-info/requires.txt\n    writing src/cryptography.egg-info/PKG-INFO\n    writing top-level names to src/cryptography.egg-info/top_level.txt\n    writing dependency_links to src/cryptography.egg-info/dependency_links.txt\n    writing entry points to src/cryptography.egg-info/entry_points.txt\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'src/cryptography.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    no previously-included directories found matching 'docs/_build'\n    warning: no previously-included files matching '*' found under directory 'vectors'\n    writing manifest file 'src/cryptography.egg-info/SOURCES.txt'\n    running build_ext\n    generating cffi module 'build/temp.linux-x86_64-2.7/_padding.c'\n    creating build/temp.linux-x86_64-2.7\n    generating cffi module 'build/temp.linux-x86_64-2.7/_constant_time.c'\n    generating cffi module 'build/temp.linux-x86_64-2.7/_openssl.c'\n    building '_openssl' extension\n    creating build/temp.linux-x86_64-2.7/build\n    creating build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7\n    gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/usr/local/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o\n    build/temp.linux-x86_64-2.7/_openssl.c: In function ‘_setup_ssl_threads’:\n    build/temp.linux-x86_64-2.7/_openssl.c:3400: warning: comparison is always false due to limited range of data type\n    gcc -pthread -shared build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o -lssl -lcrypto -o build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/_openssl.so\n    /usr/bin/ld: cannot find -lssl\n    collect2: ld returned 1 exit status\n    error: command 'gcc' failed with exit status 1\n\n    ----------------------------------------\n```\n\n    ", "Answer": "\r\nWell, it seems that I was running into a similar error as before since once I added symbolic links to the libssl.so and libcrypto.so files to my /usr/lib/ directory. As root I did\n\n```\nln -s /usr/local/ssl/lib/libssl.so /usr/lib/libssl.so\nln -s /usr/local/ssl/lib/libcrypto.so /usr/lib/libcrypto.so\n```\n\n\nAfter that I was able to successfully do ```\npip2.7 install cryptography```\n and ```\npip2.7 install pyOpenSSL```\n\n\nNow when I start up my cherrypy website I no longer get errors about the pyOpenSSL being required.\n\nPossibly some rookie mistakes with my previous software install caused the files to be not where the new installer was looking, or I should have known to put the symbolic link there to avoid these types of issues. But a good learning experience \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography run time error on _init_cffi_1_0_external_module\r\n                \r\ninstalling cryptography:\n\nsuccessfully installed gcc, libffi-devel on python 2.7.\n\nWhen i try executing the script getting the below error:\n\n\n  \n    \n      from cryptography.fernet import Fernet\n      Traceback (most recent call last):\n        File \"\", line 1, in \n        File \"/usr/lib64/python2.7/site-packages/cryptography-2.4.2-py2.7-linux-x86_64.egg/cryptography/fernet.py\", line 17, in \n          from cryptography.hazmat.primitives import hashes, padding\n        File \"/usr/lib64/python2.7/site-packages/cryptography-2.4.2-py2.7-linux-x86_64.egg/cryptography/hazmat/primitives/padding.py\", line 13, in \n          from cryptography.hazmat.bindings._padding import lib\n      AttributeError: _init_cffi_1_0_external_module\n    \n  \n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Review Board installation of cryptography module\r\n                \r\nWhen installing Review Board, I found I needed a cryptography module.  While installing that, with the following command:\n\n```\nsudo easy_install --upgrade cryptography\n```\n\n\nI get the following error:\n\n```\nSearching for cryptography\nReading https://pypi.python.org/simple/cryptography/\nBest match: cryptography 1.4\nDownloading https://pypi.python.org/packages/a9/5b/a383b3a778609fe8177bd51307b5ebeee369b353550675353f46cb99c6f0/cryptography-1.4.\ntar.gz#md5=a9763e3831cc7cdb402c028fac1ceb39\nProcessing cryptography-1.4.tar.gz\nWriting /tmp/easy_install-psOI1n/cryptography-1.4/setup.cfg\nRunning cryptography-1.4/setup.py -q bdist_egg --dist-dir /tmp/easy_install-psOI1n/cryptography-1.4/egg-dist-tmp-EEG_6Z\nc/_cffi_backend.c:15:17: fatal error: ffi.h: No such file or directory\n #include <ffi.h>\n                 ^\ncompilation terminated.\nerror: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n```\n\n\nHow do I fix it?\n    ", "Answer": "\r\nInstall libffi:\n\n```\nsudo apt-get install libffi-dev\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Weak Cryptography (broken algorithm) error\r\n                \r\nI have a function that I use for encoding which is like this:\n\n```\n$skey = \"whateveryoulike\"; // you can change it\nif(!$value){return false;}\n$text = $value;\n$iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, MCRYPT_MODE_ECB);\n$iv = mcrypt_create_iv($iv_size, MCRYPT_DEV_URANDOM);\n$crypttext = mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $skey, $text, MCRYPT_MODE_ECB, $iv);\n```\n\n\nbut thing is when I run PHP RIPS scanner for the sake of PCI I get an error on the following line that says: Weak Cryptography (broken algorithm)\n\n```\n--> $crypttext = mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $skey, $text, MCRYPT_MODE_ECB, $iv);\n```\n\n\nIs there anyone who can point me which Cryptography should I use here. Thanks in advance.\n    ", "Answer": "\r\nMCRYPT_RIJNDAEL_256 is not AES, it is Rijndael with a block size of 256-bits, not a key size of 256-bits. It is best to use AES which has a block size of 128-bits which is RIJNDAEL_128.\n\nInsure th ekey is exactly the correct size, 16, 24 or 32 bytes in length, other wist the function will reject the key or pad it with something, there is no standard for key padding.\n\nDo not use ECB mode, it is insecure, see ECB mode, scroll down to the Penguin. Instead use CBC mode with a random IV, just prefix the encrypted data with the IV for use in decryption.\n\nmcrypt does not support PKCS#7 padding, only non-standard null padding that can't even be used with binary data. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Custom Asymmetric Cryptography Algorithm\r\n                \r\nI want to use an asymmetric cryptography algorithm, but I need it have short Key Size(not like RSA which is at least 384).\nI need it to be about around 20.\nIs it possible? \n    ", "Answer": "\r\nThat's a .NET restriction on the key size; RSA can be used with any key size. It just doesn't make sense to do so.\n\nThink about it, with a 20-bit key you can brute force the it in 2^20 attempts and that's just too easy with today's computers.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "External iPhone Cryptography Libs\r\n                \r\nAre there any legal problems using external crypto libs in my iPhone application? I know that Apple has to comply to US cryptography export rules but do I as a developer have any responsibility? How does it work?\n    ", "Answer": "\r\nIf you use encryption in your app for anything other than authentication, then you'll need to declare it to Apple and you'll need to explain exactly what is encrypted, why, and how.\n\nI think that's pretty much the most of it. It's then down to the export masters (I have no idea who actually manages this stuff) to decide if they will allow your app to be sold/distributed outside the US.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography Upgrade Issue on OSX\r\n                \r\nI am trying to install Scrapy, but I am running into an openssl error. All forums seem to suggest that the problem should be solved by updating cryptography, but I am also having an error upgrading it. \n\nI am running macOS Catalina 10.15.1. I've updated my xcode, pip, and brew. How do I fix this?\n\n```\n$ pip install cryptography\n\nWARNING: Executing a script that is loading libcrypto in an unsafe way. This will fail in a future version of macOS. Set the LIBRESSL_REDIRECT_STUB_ABORT=1 in the environment to force this into an error.\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\nRequirement already satisfied: cryptography in /Library/Python/2.7/site-packages (2.1.3)\nRequirement already satisfied: cffi>=1.7; platform_python_implementation != \"PyPy\" in /Library/Python/2.7/site-packages (from cryptography) (1.11.2)\nRequirement already satisfied: enum34; python_version < \"3\" in /Library/Python/2.7/site-packages (from cryptography) (1.1.6)\nRequirement already satisfied: asn1crypto>=0.21.0 in /Library/Python/2.7/site-packages (from cryptography) (0.23.0)\nRequirement already satisfied: idna>=2.1 in /Library/Python/2.7/site-packages (from cryptography) (2.6)\nRequirement already satisfied: six>=1.4.1 in /Library/Python/2.7/site-packages (from cryptography) (1.11.0)\nRequirement already satisfied: ipaddress; python_version < \"3\" in /Library/Python/2.7/site-packages (from cryptography) (1.0.18)\nRequirement already satisfied: pycparser in /Library/Python/2.7/site-packages (from cffi>=1.7; platform_python_implementation != \"PyPy\"->cryptography) (2.18)\nFrom cffi callback <function _verify_callback at 0x10e937230>:\nTraceback (most recent call last):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/OpenSSL/SSL.py\", line 309, in wrapper\n    _lib.X509_up_ref(x509)\nAttributeError: 'module' object has no attribute 'X509_up_ref'\nCould not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')],)\",),)) - skipping\n\n\n```\n\n\n```\n$ pip install Scrapy\n\nWARNING: Executing a script that is loading libcrypto in an unsafe way. This will fail in a future version of macOS. Set the LIBRESSL_REDIRECT_STUB_ABORT=1 in the environment to force this into an error.\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\nFrom cffi callback <function _verify_callback at 0x10f9acc08>:\nTraceback (most recent call last):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/OpenSSL/SSL.py\", line 309, in wrapper\n    _lib.X509_up_ref(x509)\nAttributeError: 'module' object has no attribute 'X509_up_ref'\nWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(\"bad handshake: Error([('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')],)\",),)': /simple/scrappy/\n```\n\n    ", "Answer": "\r\nThis issue is a complex interaction between a bunch of dependencies that ultimately breaks pip's ability to fetch things over TLS, but the easy fix is to use a browser to download the right wheel file from https://pypi.org/project/cryptography/#files and then type ```\npip install /path/to/wheel/wheel-file.whl```\n. As of this writing the wheel file that should work for you is ```\ncryptography-2.8-cp27-cp27m-macosx_10_6_intel.whl```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What means donna in cryptography?\r\n                \r\nI've often see the word \"donna\" in some cryptography algorithm implementations.  So what it means?\n\nExample: poly1305-donna, curve25519-donna and etc.\n    ", "Answer": "\r\nThe poly1305-donna implementation was written by Andrew Moon, who states the following on naming his project at GitHub:\n\n\n  I borrowed the idea for these from Adam Langley's curve25519-donna,\n  hence the name.\n\n\nAnd Adam Langley, who is the author of curve25519-donna, runs a weblog about security and cryptography with his email address on (agl AT imperialviolet DOT org). Furthermore, he also has a Twitter account.\n\nSo if you are really interested, maybe just drop him a line. I'd suppose, it simply is his wife's name. Or maybe it is related to the term prima donna, who is the leading female singer in the opera, to emphasize the algorithm's supremacy? But again, just guessing.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python3 cryptography installation fails at screamingsnakecase\r\n                \r\nI'm trying to install python cryptography, which seems to be needed for the current homeassistant.\npip install cryptography however crashes with the following messages:\n```\nCompiling Inflector v0.11.4\n\nRunning `rustc --crate-name inflector /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off -C overflow-checks=on -C metadata=24d92325aeb54f99 -C extra-filename=-24d92325aeb54f99 --out-dir /home/ha/pip_tmp/pip-install-rlon2cnz/cryptography_70234a9f3a1d4c4e96ab4ab0fdb076c9/src/rust/target/release/deps -L dependency=/home/ha/pip_tmp/pip-install-rlon2cnz/cryptography_70234a9f3a1d4c4e96ab4ab0fdb076c9/src/rust/target/release/deps --cap-lints allow`\n  error[E0583]: file not found for module `screamingsnakecase`\n    --> /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/cases/mod.rs:22:1\n     |\n  22 | pub mod screamingsnakecase;\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: to create the module `screamingsnakecase`, create file \"/home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/cases/screamingsnakecase.rs\" or \"/home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/cases/screamingsnakecase/mod.rs\"\n\n  error[E0432]: unresolved import `cases::screamingsnakecase::to_screaming_snake_case`\n    --> /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/lib.rs:62:5\n     |\n  62 | use cases::screamingsnakecase::to_screaming_snake_case;\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `to_screaming_snake_case` in `cases::screamingsnakecase`\n\n  error[E0432]: unresolved import `cases::screamingsnakecase::is_screaming_snake_case`\n    --> /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/lib.rs:63:5\n     |\n  63 | use cases::screamingsnakecase::is_screaming_snake_case;\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `is_screaming_snake_case` in `cases::screamingsnakecase`\n\n  Some errors have detailed explanations: E0432, E0583.\n```\n\nDebug assistance tells these are the components I'm using:\n```\n      Python: 3.9.2\n      platform: Linux-5.10.0-20-rt-armmp-armv7l-with-glibc2.31\n      pip: n/a\n      setuptools: 66.0.0\n      setuptools_rust: 1.5.2\n      rustc: n/a\n\n```\n\nI've been searching the web for solutions but have not found anything useful. I've started this in a new virtualenv in and up-to-date debian 11. Installed python3-cryptography, freshly installed rustc but I've not been able to get past this point.\nHas someone ran in the same dead end at SCREAMING_SNAKE_CASE and is there a solution?\n    ", "Answer": "\r\n@harmic, you probably were right. I found out that the files in .cargo had an older date. No idea how that happened. When I completely removed the entire virtual environment and all python related (hidden) directories and started completely anew, it completed the compilation and installation.\nThanks for the suggestion!\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "While I am installing cryptography in django project using pycharm, I got the error. Failed building wheel for cryptography\r\n                \r\nWhile I am installing cryptography got the following error.\n```\nFailed building wheel for cryptography\nRunning setup.py clean for cryptography\nFailed to build cryptography\nCould not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\n    ", "Answer": "\r\ni was have same problem\nmy config was : ```\npython==3.7```\n ```\ndjango==2.2```\n ```\npip==19.0.3```\n\nand its not from ```\npycharm```\n\nits from ```\npip```\n\njust upgrade ```\npip```\n to ```\n21.0.1```\n\n\nUpdate:\n\nsome error code:\n```\nrunning build_rust\n\n=============================DEBUG ASSISTANCE=============================\nIf you are seeing a compilation error please try the following steps to\nsuccessfully install cryptography:\n1) Upgrade to the latest pip and try again. This will fix errors for most\nusers. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n2) Read https://cryptography.io/en/latest/installation.html for specific\ninstructions for your platform.\n3) Check our frequently asked questions for more information:\nhttps://cryptography.io/en/latest/faq.html\n4) Ensure you have a recent Rust toolchain installed:\nhttps://cryptography.io/en/latest/installation.html#rust\n5) If you are experiencing issues with Rust for *this release only* you may\nset the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.\n=============================DEBUG ASSISTANCE=============================\n\n\nerror: Can not find Rust compiler\n\n----------------------------------------\nRunning setup.py clean for cryptography\nFailed to build cryptography\n\nFailed building wheel for cryptography\nCould not build wheels for cryptography which use PEP 517 and cannot be installed directly\n\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python pip cryptography build wheel fail\r\n                \r\nI am trying to install python packages like quandl. Since I am using pip3 I am installing the package using the following command in ubuntu 16.\n\n```\nsudo pip3 install quandl\n```\n\n\nThis gives me the following error. \n\n```\nRunning setup.py clean for cryptography\nFailed to build cryptography\n```\n\n\nI have installed wheel and cryptography as well. But it would not work. Could some one help me with this?\n    ", "Answer": "\r\nCleared the error. I installed the Openssl. I upgraded cryptography.\n\nInstall Open-ssl using the following command for Ubuntu.\n\n```\nsudo apt-get install libssl-dev\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python3 cryptography installation fails at screamingsnakecase\r\n                \r\nI'm trying to install python cryptography, which seems to be needed for the current homeassistant.\npip install cryptography however crashes with the following messages:\n```\nCompiling Inflector v0.11.4\n\nRunning `rustc --crate-name inflector /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debug-assertions=off -C overflow-checks=on -C metadata=24d92325aeb54f99 -C extra-filename=-24d92325aeb54f99 --out-dir /home/ha/pip_tmp/pip-install-rlon2cnz/cryptography_70234a9f3a1d4c4e96ab4ab0fdb076c9/src/rust/target/release/deps -L dependency=/home/ha/pip_tmp/pip-install-rlon2cnz/cryptography_70234a9f3a1d4c4e96ab4ab0fdb076c9/src/rust/target/release/deps --cap-lints allow`\n  error[E0583]: file not found for module `screamingsnakecase`\n    --> /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/cases/mod.rs:22:1\n     |\n  22 | pub mod screamingsnakecase;\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: to create the module `screamingsnakecase`, create file \"/home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/cases/screamingsnakecase.rs\" or \"/home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/cases/screamingsnakecase/mod.rs\"\n\n  error[E0432]: unresolved import `cases::screamingsnakecase::to_screaming_snake_case`\n    --> /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/lib.rs:62:5\n     |\n  62 | use cases::screamingsnakecase::to_screaming_snake_case;\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `to_screaming_snake_case` in `cases::screamingsnakecase`\n\n  error[E0432]: unresolved import `cases::screamingsnakecase::is_screaming_snake_case`\n    --> /home/ha/.cargo/registry/src/github.com-1285ae84e5963aae/Inflector-0.11.4/src/lib.rs:63:5\n     |\n  63 | use cases::screamingsnakecase::is_screaming_snake_case;\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `is_screaming_snake_case` in `cases::screamingsnakecase`\n\n  Some errors have detailed explanations: E0432, E0583.\n```\n\nDebug assistance tells these are the components I'm using:\n```\n      Python: 3.9.2\n      platform: Linux-5.10.0-20-rt-armmp-armv7l-with-glibc2.31\n      pip: n/a\n      setuptools: 66.0.0\n      setuptools_rust: 1.5.2\n      rustc: n/a\n\n```\n\nI've been searching the web for solutions but have not found anything useful. I've started this in a new virtualenv in and up-to-date debian 11. Installed python3-cryptography, freshly installed rustc but I've not been able to get past this point.\nHas someone ran in the same dead end at SCREAMING_SNAKE_CASE and is there a solution?\n    ", "Answer": "\r\n@harmic, you probably were right. I found out that the files in .cargo had an older date. No idea how that happened. When I completely removed the entire virtual environment and all python related (hidden) directories and started completely anew, it completed the compilation and installation.\nThanks for the suggestion!\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Why is the Java Cryptography limited?\r\n                \r\nI'm a bit new to cryptography and i'm wondering why there is a Limit for the Key size in Java?\n\nIt's only possible to use bigger Keys with especially installing the unlimited strength jurisdiction policy file...\n    ", "Answer": "\r\nBasically because of politics. USA had an export restriction on encryption stronger than 40-bits back in the days, and even these days some governments don't allow strong encryption.\n\nOracle can distribute the default weak JCE version without being blocked by backwards governments, and make the policy files available as needed (those can then be blocked by the backwards governments).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cannot install cryptography 0.9.3 on OSX 10.8\r\n                \r\nI'm new to python and django. I'm struggling to install our company's development package locally since the latest release of django. Here's the message stack:\n\n```\nInstalling django.\ndjango: There's no directory named after our project. Probably you want to run 'bin/django startproject project'\nGetting distribution for 'cryptography>=0.7'.\n\nInstalled /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/cffi-1.1.2-py2.7-macosx-10.8-x86_64.egg\nSearching for ipaddress\nReading https://pypi.python.org/simple/ipaddress/\nBest match: ipaddress 1.0.14\nDownloading https://pypi.python.org/packages/source/i/ipaddress/ipaddress-1.0.14.tar.gz#md5=e2f2f6593b2b8a7e8abba0fbdf33f046\nProcessing ipaddress-1.0.14.tar.gz\nWriting /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-Q3JRP9/ipaddress-1.0.14/setup.cfg\nRunning ipaddress-1.0.14/setup.py -q bdist_egg --dist-dir /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-Q3JRP9/ipaddress-1.0.14/egg-dist-tmp-QxA7aQ\nzip_safe flag not set; analyzing archive contents...\nCopying ipaddress-1.0.14-py2.7.egg to /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs\n\nInstalled /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/ipaddress-1.0.14-py2.7.egg\nSearching for enum34\nReading https://pypi.python.org/simple/enum34/\nBest match: enum34 1.0.4\nDownloading https://pypi.python.org/packages/source/e/enum34/enum34-1.0.4.zip#md5=9843e97527f3126c851df7afeb0524b3\nProcessing enum34-1.0.4.zip\nWriting /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-GiulwR/enum34-1.0.4/setup.cfg\nRunning enum34-1.0.4/setup.py -q bdist_egg --dist-dir /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-GiulwR/enum34-1.0.4/egg-dist-tmp-NSgjuy\nzip_safe flag not set; analyzing archive contents...\nCopying enum34-1.0.4-py2.7.egg to /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs\n\nInstalled /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/enum34-1.0.4-py2.7.egg\nSearching for six>=1.4.1\nReading https://pypi.python.org/simple/six/\nBest match: six 1.9.0\nDownloading https://pypi.python.org/packages/source/s/six/six-1.9.0.tar.gz#md5=476881ef4012262dfc8adc645ee786c4\nProcessing six-1.9.0.tar.gz\nWriting /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-xWVhoY/six-1.9.0/setup.cfg\nRunning six-1.9.0/setup.py -q bdist_egg --dist-dir /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-xWVhoY/six-1.9.0/egg-dist-tmp-WO8SGv\nno previously-included directories found matching 'documentation/_build'\nzip_safe flag not set; analyzing archive contents...\nsix: module references __path__\ncreating /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/six-1.9.0-py2.7.egg\nExtracting six-1.9.0-py2.7.egg to /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs\n\nInstalled /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/six-1.9.0-py2.7.egg\nSearching for pyasn1\nReading https://pypi.python.org/simple/pyasn1/\nBest match: pyasn1 0.1.8\nDownloading https://pypi.python.org/packages/2.7/p/pyasn1/pyasn1-0.1.8-py2.7.egg#md5=59f23a2692b9b4bc7901d166eba69167\nProcessing pyasn1-0.1.8-py2.7.egg\nMoving pyasn1-0.1.8-py2.7.egg to /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs\n\nInstalled /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/pyasn1-0.1.8-py2.7.egg\nSearching for idna\nReading https://pypi.python.org/simple/idna/\nBest match: idna 2.0\nDownloading https://pypi.python.org/packages/source/i/idna/idna-2.0.tar.gz#md5=bd17a9d15e755375f48a62c13b25b801\nProcessing idna-2.0.tar.gz\nWriting /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-ne4LbF/idna-2.0/setup.cfg\nRunning idna-2.0/setup.py -q bdist_egg --dist-dir /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-ne4LbF/idna-2.0/egg-dist-tmp-8YLfu7\nwarning: no previously-included files matching '*.pyc' found under directory 'tools'\nwarning: no previously-included files matching '*.pyc' found under directory 'tests'\nzip_safe flag not set; analyzing archive contents...\nCopying idna-2.0-py2.7.egg to /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs\n\nInstalled /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/idna-2.0-py2.7.egg\nSearching for pycparser\nReading https://pypi.python.org/simple/pycparser/\nBest match: pycparser 2.14\nDownloading https://pypi.python.org/packages/source/p/pycparser/pycparser-2.14.tar.gz#md5=a2bc8d28c923b4fe2b2c3b4b51a4f935\nProcessing pycparser-2.14.tar.gz\nWriting /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-M45io9/pycparser-2.14/setup.cfg\nRunning pycparser-2.14/setup.py -q bdist_egg --dist-dir /var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/temp/easy_install-M45io9/pycparser-2.14/egg-dist-tmp-TZWoS1\nwarning: no previously-included files matching 'yacctab.*' found under directory 'tests'\nwarning: no previously-included files matching 'lextab.*' found under directory 'tests'\nwarning: no previously-included files matching 'yacctab.*' found under directory 'examples'\nwarning: no previously-included files matching 'lextab.*' found under directory 'examples'\nzip_safe flag not set; analyzing archive contents...\nCopying pycparser-2.14-py2.7.egg to /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs\n\nInstalled /private/var/folders/hf/y3d63zk55893w65jr6dxpk5m0000gn/T/easy_install-bi2ZfW/cryptography-0.9.3/.eggs/pycparser-2.14-py2.7.egg\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nUndefined symbols for architecture x86_64:\n  \"_EC_GFp_nistp224_method\", referenced from:\n      __cffi_f_EC_GFp_nistp224_method in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_EC_GFp_nistp256_method\", referenced from:\n      __cffi_f_EC_GFp_nistp256_method in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_EC_GFp_nistp521_method\", referenced from:\n      __cffi_f_EC_GFp_nistp521_method in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_EC_curve_nid2nist\", referenced from:\n      __cffi_f_EC_curve_nid2nist in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_SSL_CTX_set_alpn_protos\", referenced from:\n      __cffi_f_SSL_CTX_set_alpn_protos in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_SSL_CTX_set_alpn_select_cb\", referenced from:\n      __cffi_f_SSL_CTX_set_alpn_select_cb in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_SSL_get0_alpn_selected\", referenced from:\n      __cffi_f_SSL_get0_alpn_selected in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_SSL_set_alpn_protos\", referenced from:\n      __cffi_f_SSL_set_alpn_protos in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_X509_VERIFY_PARAM_set1_email\", referenced from:\n      __cffi_f_X509_VERIFY_PARAM_set1_email in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_X509_VERIFY_PARAM_set1_host\", referenced from:\n      __cffi_f_X509_VERIFY_PARAM_set1_host in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_X509_VERIFY_PARAM_set1_ip\", referenced from:\n      __cffi_f_X509_VERIFY_PARAM_set1_ip in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_X509_VERIFY_PARAM_set1_ip_asc\", referenced from:\n      __cffi_f_X509_VERIFY_PARAM_set1_ip_asc in _Cryptography_cffi_a269d620xd5c405b7.o\n  \"_X509_VERIFY_PARAM_set_hostflags\", referenced from:\n      __cffi_f_X509_VERIFY_PARAM_set_hostflags in _Cryptography_cffi_a269d620xd5c405b7.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nerror: Setup script exited with error: command '/usr/bin/clang' failed with exit status 1\nAn error occurred when trying to install cryptography 0.9.3. Look above this message for any errors that were output by easy_install.\nWhile:\n  Installing django.\n  Getting distribution for 'cryptography>=0.7'.\nError: Couldn't install: cryptography 0.9.3\n```\n\n\nI've run:\n\n```\nbrew install openssl\nbrew install pkg-config libffi\nenv ARCHFLAGS=\"-arch x86_64\" LDFLAGS=\"-L/usr/local/opt/openssl/lib\" CFLAGS=\"-I/usr/local/opt/openssl/include\"\npip install cffi\n```\n\n\nI noticed my machine already had an older version of openssl so I created a symlink to the new one:\n\n```\nopenssl version\nOpenSSL 1.0.1f 6 Jan 2014\nmv /sw/bin/openssl /sw/bin/openssl_OLD\nln -s /usr/local/Cellar/openssl/1.0.2d_1/bin/openssl /sw/bin/openssl\nopenssl version\nOpenSSL 1.0.2d 9 Jul 2015\n```\n\n\nI can also confirm I have a 64bit machine:\n\n```\nfile /sw/lib/libffi.6.dylib\n/sw/lib/libffi.6.dylib: Mach-O 64-bit dynamically linked shared library\n```\n\n\nRunning the same script with a dependency of cryptography==0.7 results in the same error.\n\nI'm running GCC 4.2\n\nNothing I've tried so far changes the error I get in django buildout :( When I run pip install cryptography it seems to install cleanly but this buildout script insists on installing a local copy. \n\nDoes anyone have any suggestions on what I should try next? I'm running out of ideas.\n    ", "Answer": "\r\nSo turns out the problem was with ```\nbrew install openssl```\n version 1.0.2d.\n\nI switched to using ```\nport install openssl```\n and the same env flags as described in https://cryptography.io/en/latest/installation/\nThis meant buildout successfully completed.\n\nHowever when trying to run ```\n./bin/django migrate```\n I got another error:\n\n```\n  raise ImproperlyConfigured(\"Error loading psycopg2 module: %s\" % e)\ndjango.core.exceptions.ImproperlyConfigured: Error loading psycopg2 module: dlopen(/Users/<user>/Sites/<site>/eggs/psycopg2-2.6-py2.7-macosx-10.8-x86_64.egg/psycopg2/_psycopg.so, 2): Library not loaded: /usr/local/opt/openssl/lib/libssl.1.0.0.dylib\n  Referenced from: /usr/local/lib/libpq.5.dylib\n  Reason: image not found\n```\n\n\nThis is because macports installs libssl to /opt/local/lib/. I fixed this with a cheeky symlink:\n\n```\nln -s /opt/local/lib/ /usr/local/opt/openssl/lib\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pip cffi package installation failed on osx\r\n                \r\nI am installing cffi package for cryptography and Jasmin installation.\nI did some research before posting question, so I found following option but which is seems not working:\nSystem\n\nMac OSx 10.9.5\npython2.7\n\nError\n```\nc/_cffi_backend.c:13:10: fatal error: 'ffi.h' file not found\n\n#include <ffi.h>\n\n         ^\n\n1 warning and 1 error generated.\n```\n\nPlease guide me on following issue.\nThanks\nCommand\n\nenv DYLD_LIBRARY_PATH=/usr/local/opt/openssl/lib/ ARCHFLAGS=\"-Wno-error=unused-command-line-argument-hard-error-in-future\" LDFLAGS=\"-L/usr/local/opt/openssl/lib\" CFLAGS=\"-I/usr/local/opt/openssl/include\" sudo -E pip install cffi\n\nLOG\n```\nbhushanvaiude$ env DYLD_LIBRARY_PATH=/usr/local/opt/openssl/lib/ ARCHFLAGS=\"-Wno-error=unused-command-line-argument-hard-error-in-future\" LDFLAGS=\"-L/usr/local/opt/openssl/lib\" CFLAGS=\"-I/usr/local/opt/openssl/include\" sudo -E pip install cffi\nPassword:\nDownloading/unpacking cffi\n  Downloading cffi-0.8.6.tar.gz (196kB): 196kB downloaded\n  Running setup.py egg_info for package cffi\n    warning: unknown warning option '-Werror=unused-command-line-argument-hard-error-in-future'; did you mean '-Werror=unused-command-line-argument'? [-Wunknown-warning-option]\n    1 warning generated.\n    \nDownloading/unpacking pycparser (from cffi)\n  Downloading pycparser-2.10.tar.gz (206kB): 206kB downloaded\n  Running setup.py egg_info for package pycparser\n    \nInstalling collected packages: cffi, pycparser\n  Running setup.py install for cffi\n    warning: unknown warning option '-Werror=unused-command-line-argument-hard-error-in-future'; did you mean '-Werror=unused-command-line-argument'? [-Wunknown-warning-option]\n    1 warning generated.\n    building '_cffi_backend' extension\n    cc -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -I/usr/local/opt/openssl/include -Qunused-arguments -pipe -Wno-error=unused-command-line-argument-hard-error-in-future -DUSE__THREAD -I@@HOMEBREW_CELLAR@@/libffi/3.0.13/lib/libffi-3.0.13/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c c/_cffi_backend.c -o build/temp.macosx-10.9-intel-2.7/c/_cffi_backend.o\n    warning: unknown warning option '-Werror=unused-command-line-argument-hard-error-in-future'; did you mean '-Werror=unused-command-line-argument'? [-Wunknown-warning-option]\n    c/_cffi_backend.c:13:10: fatal error: 'ffi.h' file not found\n    #include <ffi.h>\n             ^\n    1 warning and 1 error generated.\n    error: command 'cc' failed with exit status 1\n    Complete output from command /Users/****project path***/bin/python -c \"import setuptools;__file__='/Users/****project path***/build/cffi/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/7w/8z_mn3g120n34bv0w780gnd00000gn/T/pip-e6d6Ay-record/install-record.txt --single-version-externally-managed --install-headers /Users/****project path***/include/site/python2.7:\n    warning: unknown warning option '-Werror=unused-command-line-argument-hard-error-in-future'; did you mean '-Werror=unused-command-line-argument'? [-Wunknown-warning-option]\n\n1 warning generated.\n\nrunning install\n\nrunning build\n\nrunning build_py\n\ncreating build\n\ncreating build/lib.macosx-10.9-intel-2.7\n\ncreating build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/__init__.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/api.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/backend_ctypes.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/commontypes.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/cparser.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/ffiplatform.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/gc_weakref.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/lock.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/model.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/vengine_cpy.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/vengine_gen.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\ncopying cffi/verifier.py -> build/lib.macosx-10.9-intel-2.7/cffi\n\nrunning build_ext\n\nbuilding '_cffi_backend' extension\n\ncreating build/temp.macosx-10.9-intel-2.7\n\ncreating build/temp.macosx-10.9-intel-2.7/c\n\ncc -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -I/usr/local/opt/openssl/include -Qunused-arguments -pipe -Wno-error=unused-command-line-argument-hard-error-in-future -DUSE__THREAD -I@@HOMEBREW_CELLAR@@/libffi/3.0.13/lib/libffi-3.0.13/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c c/_cffi_backend.c -o build/temp.macosx-10.9-intel-2.7/c/_cffi_backend.o\n\nwarning: unknown warning option '-Werror=unused-command-line-argument-hard-error-in-future'; did you mean '-Werror=unused-command-line-argument'? [-Wunknown-warning-option]\n\nc/_cffi_backend.c:13:10: fatal error: 'ffi.h' file not found\n\n#include <ffi.h>\n\n         ^\n\n1 warning and 1 error generated.\n\nerror: command 'cc' failed with exit status 1\n\n----------------------------------------\nCleaning up...\n```\n\n    ", "Answer": "\r\nIn your terminal try and run: \n\n```\nxcode-select --install\n```\n\n\nAfter that try installing the package again. \n\nBy default, XCode installs itself as the IDE and does not set up the environment for the use by command line tools; for example, the ```\n/usr/include```\n folder will be missing. \n\nRunning the above command will install the tools necessary to run compilation from the command line and create the required symbolic links. Since Python packages compile native code parts using the command-line interface of XCode, this step is required to install Python packages that include native components.\n\nYou only need to do this once per XCode install/upgrade, or if you see a similar error.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Initialization Vector on Cryptography\r\n                \r\n\nI have a question regarding how initialization vector works on cryptography.\n\nI have bit of knowledge about creating a IV and my question would be this,\nI know about SecureRandom class so once I create a IV through this it will perfectly encrypt the data, what I don't understand is how can you get the same IV for the decryption process? (Please explain I need to know about this to create an algorithm for a assignment)\n    ", "Answer": "\r\nUsually, the IV is sent along with the ciphertext in network protocols, or stored somewhere along with the ciphertext, e.g. at the beginning of the file in a file encryption scheme.  For block ciphers in CBC mode, it is very common to simply send or store the IV as first ciphertext block.  The IV is not a secret, but depending on your cryptosystem, it should not be reused or be predictable.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What means donna in cryptography?\r\n                \r\nI've often see the word \"donna\" in some cryptography algorithm implementations.  So what it means?\n\nExample: poly1305-donna, curve25519-donna and etc.\n    ", "Answer": "\r\nThe poly1305-donna implementation was written by Andrew Moon, who states the following on naming his project at GitHub:\n\n\n  I borrowed the idea for these from Adam Langley's curve25519-donna,\n  hence the name.\n\n\nAnd Adam Langley, who is the author of curve25519-donna, runs a weblog about security and cryptography with his email address on (agl AT imperialviolet DOT org). Furthermore, he also has a Twitter account.\n\nSo if you are really interested, maybe just drop him a line. I'd suppose, it simply is his wife's name. Or maybe it is related to the term prima donna, who is the leading female singer in the opera, to emphasize the algorithm's supremacy? But again, just guessing.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ImportError Cryptography python's module\r\n                \r\ni'm working on aix6 and trying to ping a windows server via ansible installed on this aix server. But with my python CLI I have an issue with cryptography... :\npython\n\n```\nPython 2.7.16 (default, Mar 12 2019, 21:23:24)\n[GCC 6.3.0] on aix6\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import requests\n>>> from requests_credssp import HttpCredSSPAuth\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/opt/freeware/lib/python2.7/site-packages/requests_credssp/__init__.py\", line 6, in <module>\n    from requests_credssp.credssp import HttpCredSSPAuth\n  File \"/opt/freeware/lib/python2.7/site-packages/requests_credssp/credssp.py\", line 14, in <module>\n    from OpenSSL import SSL\n  File \"/opt/freeware/lib/python2.7/site-packages/OpenSSL/__init__.py\", line 8, in <module>\n    from OpenSSL import crypto, SSL\n  File \"/opt/freeware/lib/python2.7/site-packages/OpenSSL/crypto.py\", line 15, in <module>\n    from OpenSSL._util import (\n  File \"/opt/freeware/lib/python2.7/site-packages/OpenSSL/_util.py\", line 6, in <module>\n    from cryptography.hazmat.bindings.openssl.binding import Binding\n  **File \"/opt/freeware/lib/python2.7/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 15, in <module>\n    from cryptography.hazmat.bindings._openssl import ffi, lib\nImportError: rtld: 0712-001 Symbol strncpy was referenced\n      from module /opt/freeware/lib/python2.7/site-packages/cryptography/hazmat/bindings/_openssl.so(), but a runtime definition\n            of the symbol was not found.**\n```\n\n\nIf someone has any idea about my issue I will be very thankful !!\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Botan vs OpenSSL vs Crypto++ for cryptography [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is opinion-based. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it can be answered with facts and citations by editing this post.\r\n                \r\n                    \r\n                        Closed 6 years ago.\r\n                    \r\n                \r\n            The community reviewed whether to reopen this question last year and left it closed:\r\n            \r\n                    Original close reason(s) were not resolved\r\n            \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI want to use a cryptography library to implement RSA, DSA and others. Can anyone suggest which is better if you have used it.\n    ", "Answer": "\r\nMy personal favorite is Botan. It allows for as much control as you want.\n\nIt allows you to chain several steps together in a \"pipe\" , where you basically write your data to it and botan first BZip2's it and then RSA /DSA's it or whichever function you want and botan provides. \n\nI like the nitty-gritty stuff, like setting bzip to compress at level 9 , so I mix and match whatever functions I find in Botan with what I pick up from other libraries.\nBotan doesn't force much upon the user , and the API is quite sane too.\n\nAlso, last one, big ups:\n\nIt's reasonably well-documented! ; http://botan.randombit.net/manual/index.html\n\nI've also tried cryptopp under windows, but had quite a few headaches trying to get it to link and work correctly in my projects (version 5.6.0 using MSVC2010) , but according to the changelog, 5.6.1 should've fixed this. Also, the documentation is horribly outdated, the tutorial stems from 2002.\n\nAnd last but not least I have to admit not having tried OpenSSL, but from what I've heard, it had quite a learning curve, and the API is in C instead of C++. (I Certainly prefer the latter)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "PHP Cryptography Good Practices?\r\n                \r\nSo I heard ```\nmd5()```\n and ```\nsha1()```\n are both outdated and potentially broken. I've heard that ```\ncrypt()```\n isn't a viable solution as well.\n\nIf that's the case, can anyone point out what are the current up to date cryptography good practices in PHP? I've searched the web but didn't find anything that looked up to date/potential.\n    ", "Answer": "\r\nHash plus salt alone is outdated, too, and generally no longer endorsed in password hashing schemes. It's too easy to calculate such hashes in parallel (even with individual per-user salts), a resourceful attacker is most likely able to break such a scheme.\n\nYou should use some form of iterative hashing instead. In addition to applying salts to your passwords, such an algorithm artificially slows the entire hashing process down (cryptographic hashes are generally designed to be as fast as possible while upholding a fixed \"security margin\"). Suitable primitives to reach this goal are generally considered to be the bcrypt, scrypt or PBKDF2 algorithms. See for example this answer for a discussion on how to use bcrypt in PHP.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Install cryptography on rasperry pi 3\r\n                \r\ni'm newbe with python.\n\nI'm simulating the connection between server and client via Modbus. I do that with pymodbus library.\n\nMy server is an asynchronous server and i know that it's necessary install cryptography on raspberry to make it works.\n\nI found these instructions and I followed:\n\n-sudo apt-get install build-essential libssl-dev libffi-dev python-dev;\n\n-sudo pip install cryptography;\n\nAfter that, i have an error:\n\n```\nTraceback (most recent call last):\nFile \"modbus_server.py\", line 4, in <module>\nfrom pymodbus.server.async import StartTcpServer\nFile \"/usr/local/lib/python2.7/dist-packages/pymodbus/server/async.py\", line 18, in <module>\nfrom pymodbus.internal.ptwisted import InstallManagementConsole\nFile \"/usr/local/lib/python2.7/dist-packages/pymodbus/internal/ptwisted.py\", line 5, in <module>\nfrom twisted.conch import manhole, manhole_ssh\nFile \"/usr/local/lib/python2.7/dist-packages/twisted/conch/manhole_ssh.py\", line 14, in <module>\nfrom twisted.conch.ssh import factory, session\nFile \"/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/factory.py\", line 17, in <module>\nfrom twisted.conch.ssh import (_kex, transport, userauth, connection)\nFile \"/usr/local/lib/python2.7/dist-packages/twisted/conch/ssh/transport.py\", line 23, in <module>\nfrom cryptography.hazmat.backends import default_backend\nFile \"/usr/local/lib/python2.7/dist-packages/cryptography/hazmat/backends/__init__.py\", line 7, in <module>\nimport pkg_resources\nFile \"/usr/local/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 70, in <module>\nimport packaging.version\nImportError: No module named packaging.version\n```\n\n\nI tried the same code python into Eclipse on Windows machine and it works.\n\nHow can I solve this problem?\n    ", "Answer": "\r\nThere is a missing dependency\n\nRun ```\npip install packaging```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Using Python Cryptography module to encrypt recursively\r\n                \r\nThe following code is using the pyAesCrypt module. I would like to achieve the same recursive encryption using the standard Cryptography module. I have tried to read through the documentation for Cryptography, but I can't find a thorough explanation of how to feed it the kind of input on line 21:\n```\nimport pyAesCrypt\n\nimport glob\nimport os\n# Encryption/decryption buffer size - 64K\nbufferSize = 64 * 1024\n# Get current directory\ncurrentdirectory = os.getcwd()\n# Prompt user for password to encrypt files\npassword1 = input('\\n> Enter password to encrypt: ')\n \nprint('\\n> Beginning recursive encryption...\\n\\n')\n# Main loop to encrypt all files recursively\nfor x in glob.glob('./test', recursive=True):\n    fullpath = os.path.join(curDir, x)\n    fullnewf = os.path.join(curDir, x + '.aes')\n    # Encrypt\n    if os.path.isfile(fullpath):\n        print('>>> Original: \\t' + fullpath + '')\n        print('>>> Encrypted: \\t' + fullnewf + '\\n')\n        pyAesCrypt.encryptFile(fullpath, fullnewf, password1, bufferSize)\n```\n\nCan anyone help me with how to replace the final line of pyAesCrypt code with code from the Cryptography module?\n    ", "Answer": "\r\nthe module uses itself cryptography so you can have a look yourself:\nhttps://github.com/marcobellaccini/pyAesCrypt/blob/master/pyAesCrypt/crypto.py\nI wouldn't consider myself a crypto expert but I would not consider this implementation as secure.\n\nThey implement their own Key-Derivation-Function instead of PBKDF2HMAC or SCyrpt (as mentioned in the cryptography docs https://cryptography.io/en/latest/fernet/#using-passwords-with-fernet)\nThey implement the padding on their own instead of the cryptography functions (but their implementation seems okay...)\nThe file-standard seems to expect certain conditions which are not clearly stated. The KDF is not part of the file, the AES mode is not defined... I expect that this \"file-standard\" is mostly compatible with other implementations of the same author...\n\nNo real red flags but a strange feeling in my gut...\nIf you want to hide something from your little sister it seems fine, if you're up against sophisticated attackers use something different... And if you want to decrypt stuff in the future, keep a copy of the module since the implementation does not seem to be interoperable with other software.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Getting \"weak reference\" error in cryptography-0.8.2 python install\r\n                \r\nOn our linux redhat RHEL 6 cluster, I downloaded  cryptography-0.8.2.tar.gz and then ran\n\n```\npython setup.py install --user \n```\n\n\nin the cryptography-0.8.2 directory.  I am getting the following error.  Can anyone help me solve it?  I'm not up to speed on weak references, just trying to install the cryptography module.  Thanks much!  \n\n```\nrcook@rzgpu2 (cryptography-0.8.2 ): python setup.py install --user\nrunning install\nTraceback (most recent call last):\n  File \"setup.py\", line 342, in <module>\n    **keywords_with_side_effects(sys.argv)\n  File \"/usr/apps/python/lib/python2.7/distutils/core.py\", line 152, in setup\n    dist.run_commands()\n  File \"/usr/apps/python/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/usr/apps/python/lib/python2.7/distutils/dist.py\", line 971, in run_command\n    cmd_obj.ensure_finalized()\n  File \"/usr/apps/python/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n    self.finalize_options()\n  File \"setup.py\", line 119, in finalize_options\n    self.distribution.ext_modules = get_ext_modules()\n  File \"setup.py\", line 78, in get_ext_modules\n    from cryptography.hazmat.bindings.commoncrypto.binding import (\n  File \"src/cryptography/hazmat/bindings/commoncrypto/binding.py\", line 14, in <module>\n    class Binding(object):\n  File \"src/cryptography/hazmat/bindings/commoncrypto/binding.py\", line 36, in Binding\n    \"-framework\", \"Security\", \"-framework\", \"CoreFoundation\"\n  File \"src/cryptography/hazmat/bindings/utils.py\", line 97, in build_ffi_for_binding\n    extra_link_args=extra_link_args,\n  File \"src/cryptography/hazmat/bindings/utils.py\", line 106, in build_ffi\n    ffi.cdef(cdef_source)\n  File \"/g/g0/rcook/.local/lib/python2.7/site-packages/cffi/api.py\", line 106, in cdef\n    self._parser.parse(csource, override=override, packed=packed)\n  File \"/g/g0/rcook/.local/lib/python2.7/site-packages/cffi/cparser.py\", line 165, in parse\n    self._internal_parse(csource)\n  File \"/g/g0/rcook/.local/lib/python2.7/site-packages/cffi/cparser.py\", line 199, in _internal_parse\n    realtype = self._get_type(decl.type, name=decl.name)\n  File \"/g/g0/rcook/.local/lib/python2.7/site-packages/cffi/cparser.py\", line 360, in _get_type\n    return self._get_struct_union_enum_type('struct', type, name)\n  File \"/g/g0/rcook/.local/lib/python2.7/site-packages/cffi/cparser.py\", line 434, in _get_struct_union_enum_type\n    return self._structnode2type[type]\n  File \"/usr/apps/python/lib/python2.7/weakref.py\", line 256, in __getitem__\n    return self.data[ref(key)]\nTypeError: cannot create weak reference to 'Struct' object\n```\n\n    ", "Answer": "\r\nThe problem is actually in the pycparser module.\n\nAs per https://bugs.launchpad.net/openstack-gate/+bug/1446882 do the following:\n\n```\npip uninstall pycparser && pip install -Iv pycparser==2.10\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Android cryptography library FIPS validation\r\n                \r\nI want to know, is the android's cryptography library (```\njavax.crypto```\n) \"validated to FIPS 140-2\"?\n\nI need for a specific product which FIPS is important.\n    ", "Answer": "\r\nNo, ```\njavax.crypto```\n is not FIPS-validated, you'll need another lib for that.  \n\nHowever, it is impossible to reach level 2 with libraries alone, as it has requirements\non the hardware too (and a typical Android device is not validated either).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error selenium wire linux with dependency cryptography\r\n                \r\nI have a problem installing the seleniumwire library on a Linux server, it sends me an error in the rust for cryptography, I have tried to solve it but I have not been able, any ideas?\n```\nCaused by:\n      process didn't exit successfully: `rustc --crate-name syn --edition=2018 /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.60/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -Cembed-bitcode=no --cfg 'feature=\"clone-impls\"' --cfg 'feature=\"default\"' --cfg 'feature=\"derive\"' --cfg 'feature=\"extra-traits\"' --cfg 'feature=\"full\"' --cfg 'feature=\"parsing\"' --cfg 'feature=\"printing\"' --cfg 'feature=\"proc-macro\"' --cfg 'feature=\"quote\"' -C metadata=6cea30fcaa1c5280 -C extra-filename=-6cea30fcaa1c5280 --out-dir /tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps -L dependency=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps --extern proc_macro2=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps/libproc_macro2-5d343acc4305025a.rmeta --extern quote=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps/libquote-f7a0a97a31c8d8ce.rmeta --extern unicode_xid=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps/libunicode_xid-b5e42475a0c5edb5.rmeta --cap-lints allow --cfg syn_disable_nightly_tests` (signal: 9, SIGKILL: kill)\n\n        =============================DEBUG ASSISTANCE=============================\n        If you are seeing a compilation error please try the following steps to\n        successfully install cryptography:\n        1) Upgrade to the latest pip and try again. This will fix errors for most\n           users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n        2) Read https://cryptography.io/en/latest/installation.html for specific\n           instructions for your platform.\n        3) Check our frequently asked questions for more information:\n           https://cryptography.io/en/latest/faq.html\n        4) Ensure you have a recent Rust toolchain installed:\n           https://cryptography.io/en/latest/installation.html#rust\n        5) If you are experiencing issues with Rust for *this release only* you may\n           set the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.\n        =============================DEBUG ASSISTANCE=============================\n\n    error: cargo failed with code: 101\n\n\n    ----------------------------------------\n  Can't rollback cryptography, nothing uninstalled.\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-h7zcmi4l/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-p2wos9g_-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-h7zcmi4l/cryptography/\n```\n\n    ", "Answer": "\r\n```\nrustc```\n failed compilation with a ```\nSIGKILL```\n. This probably happened as a result of it using up too much memory, and the OOM manager deciding to kill it, since the ```\nsyn```\n crate is quite large and requires a lot of RAM to compile. Getting more RAM, or increasing the amount of swap space will allow the compilation to finish.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Failed to install cryptography package with Poetry on Python 3.9\r\n                \r\nWhen I try to install cryptography module with Python Poetry 1.1.4 package manager (```\npoetry add cryptography```\n) in a Python 3.9.0 virtual environment, I get:\n```\n    error: can't find Rust compiler\n    \n    If you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the need for a Rust compiler.\n    \n    To update pip, run:\n    \n        pip install --upgrade pip\n    \n    and then retry package installation.\n    \n    If you did intend to build this package from source, try installing a Rust compiler from your system package manager and ensure it is on the PATH during installation. Alternatively, rustup (available at https://rustup.rs) is the recommended way to download and update the Rust compiler toolchain.\n    \n    This package requires Rust >=1.41.0.\n    ----------------------------------------\n    ERROR: Failed building wheel for cryptography\n  Failed to build cryptography\n  ERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\nThough I'm using pip 21.0.1 (latest), and I have no issue with Python 3.8.\nAny idea on why and how to solve that? Latest cryptography module information says it's compatible with Python 3.6+.\n    ", "Answer": "\r\nI had the same issue, and even following this answer at Cannot “pip install cryptography” in Docker Alpine Linux 3.3 with OpenSSL 1.0.2g and Python 2.7 of installing cargo to get Rust did not work in my case, though it was approved by many as a working solution. I have an alpine docker container where I pip installed poetry after cargo, with the same error again.\nInstalling cargo does indeed install Rust, but it is not found by poetry during installation of cryptography.\nThe solution for this poetry problem here is to install cryptography on its own before you install poetry.\nThe other and accepted answer of the same link shows the way:\nYou need to install\n```\ngcc musl-dev python3-dev libffi-dev openssl-dev\n```\n\nusing apt, apk or whatever.\nThen you can pip install cryptography. With Python 3.9, you just test this without a version first.\n```\npython3 -m pip install cryptography\n```\n\nIf that crashes, as it does with Python 3.6, add a chosen version, one that is compatible, here I take an old version 2.3 that works with 3.6, it seems:\n```\npython3 -m pip install cryptography==2.3\n```\n\nAfter this, I could install poetry. Again, start without a version:\n```\npython3 -m pip install poetry\n```\n\nAnd if that fails, choose a compatible version, in my case I needed an older one compatible with Python 3.6:\n```\npython3 -m pip install \"poetry==1.1.8\"\n```\n\nFrom a total beginner's perspective, my guess is as follows. The standalone installer gets the tools needed to get cryptography installed on its own and therefore runs trough. On the other hand, poetry seems to use a pool of tools without loading chosen tools only for one package. And if that pool is somehow not compatible enough, the installation fails and there is no more effort to reach out for the needed tools on the run.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error selenium wire linux with dependency cryptography\r\n                \r\nI have a problem installing the seleniumwire library on a Linux server, it sends me an error in the rust for cryptography, I have tried to solve it but I have not been able, any ideas?\n```\nCaused by:\n      process didn't exit successfully: `rustc --crate-name syn --edition=2018 /home/ubuntu/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-1.0.60/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -Cembed-bitcode=no --cfg 'feature=\"clone-impls\"' --cfg 'feature=\"default\"' --cfg 'feature=\"derive\"' --cfg 'feature=\"extra-traits\"' --cfg 'feature=\"full\"' --cfg 'feature=\"parsing\"' --cfg 'feature=\"printing\"' --cfg 'feature=\"proc-macro\"' --cfg 'feature=\"quote\"' -C metadata=6cea30fcaa1c5280 -C extra-filename=-6cea30fcaa1c5280 --out-dir /tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps -L dependency=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps --extern proc_macro2=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps/libproc_macro2-5d343acc4305025a.rmeta --extern quote=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps/libquote-f7a0a97a31c8d8ce.rmeta --extern unicode_xid=/tmp/pip-build-h7zcmi4l/cryptography/src/rust/target/release/deps/libunicode_xid-b5e42475a0c5edb5.rmeta --cap-lints allow --cfg syn_disable_nightly_tests` (signal: 9, SIGKILL: kill)\n\n        =============================DEBUG ASSISTANCE=============================\n        If you are seeing a compilation error please try the following steps to\n        successfully install cryptography:\n        1) Upgrade to the latest pip and try again. This will fix errors for most\n           users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n        2) Read https://cryptography.io/en/latest/installation.html for specific\n           instructions for your platform.\n        3) Check our frequently asked questions for more information:\n           https://cryptography.io/en/latest/faq.html\n        4) Ensure you have a recent Rust toolchain installed:\n           https://cryptography.io/en/latest/installation.html#rust\n        5) If you are experiencing issues with Rust for *this release only* you may\n           set the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.\n        =============================DEBUG ASSISTANCE=============================\n\n    error: cargo failed with code: 101\n\n\n    ----------------------------------------\n  Can't rollback cryptography, nothing uninstalled.\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-h7zcmi4l/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-p2wos9g_-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-h7zcmi4l/cryptography/\n```\n\n    ", "Answer": "\r\n```\nrustc```\n failed compilation with a ```\nSIGKILL```\n. This probably happened as a result of it using up too much memory, and the OOM manager deciding to kill it, since the ```\nsyn```\n crate is quite large and requires a lot of RAM to compile. Getting more RAM, or increasing the amount of swap space will allow the compilation to finish.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Failed to install cryptography package with Poetry on Python 3.9\r\n                \r\nWhen I try to install cryptography module with Python Poetry 1.1.4 package manager (```\npoetry add cryptography```\n) in a Python 3.9.0 virtual environment, I get:\n```\n    error: can't find Rust compiler\n    \n    If you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the need for a Rust compiler.\n    \n    To update pip, run:\n    \n        pip install --upgrade pip\n    \n    and then retry package installation.\n    \n    If you did intend to build this package from source, try installing a Rust compiler from your system package manager and ensure it is on the PATH during installation. Alternatively, rustup (available at https://rustup.rs) is the recommended way to download and update the Rust compiler toolchain.\n    \n    This package requires Rust >=1.41.0.\n    ----------------------------------------\n    ERROR: Failed building wheel for cryptography\n  Failed to build cryptography\n  ERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\nThough I'm using pip 21.0.1 (latest), and I have no issue with Python 3.8.\nAny idea on why and how to solve that? Latest cryptography module information says it's compatible with Python 3.6+.\n    ", "Answer": "\r\nI had the same issue, and even following this answer at Cannot “pip install cryptography” in Docker Alpine Linux 3.3 with OpenSSL 1.0.2g and Python 2.7 of installing cargo to get Rust did not work in my case, though it was approved by many as a working solution. I have an alpine docker container where I pip installed poetry after cargo, with the same error again.\nInstalling cargo does indeed install Rust, but it is not found by poetry during installation of cryptography.\nThe solution for this poetry problem here is to install cryptography on its own before you install poetry.\nThe other and accepted answer of the same link shows the way:\nYou need to install\n```\ngcc musl-dev python3-dev libffi-dev openssl-dev\n```\n\nusing apt, apk or whatever.\nThen you can pip install cryptography. With Python 3.9, you just test this without a version first.\n```\npython3 -m pip install cryptography\n```\n\nIf that crashes, as it does with Python 3.6, add a chosen version, one that is compatible, here I take an old version 2.3 that works with 3.6, it seems:\n```\npython3 -m pip install cryptography==2.3\n```\n\nAfter this, I could install poetry. Again, start without a version:\n```\npython3 -m pip install poetry\n```\n\nAnd if that fails, choose a compatible version, in my case I needed an older one compatible with Python 3.6:\n```\npython3 -m pip install \"poetry==1.1.8\"\n```\n\nFrom a total beginner's perspective, my guess is as follows. The standalone installer gets the tools needed to get cryptography installed on its own and therefore runs trough. On the other hand, poetry seems to use a pool of tools without loading chosen tools only for one package. And if that pool is somehow not compatible enough, the installation fails and there is no more effort to reach out for the needed tools on the run.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography with Python 3.6\r\n                \r\nI have been working on Cryptography Question. What I tried to write first code with OrderedDict is this.\n```\nfrom collections import OrderedDict\n\nalphabet = OrderedDict(\n    [(u'a', u'ç'), (u'b', u'd'), (u'c', u'e'), (u'ç', u'f'), (u'd', u'g'), (u'e', u'g'), (u'f', u'h'),\n     (u'g', u'i'), (u'g', u'i'), (u'h', u'j'), (u'i', u'k'), (u'i', u'l'), (u'j', u'm'), (u'k', u'n'),\n     (u'l', u'o'), (u'm', u'ö'), (u'n', u'p'), (u'o', u'r'), (u'ö', u's'), (u'p', u'ş'), (u'r', u't'),\n     (u's', u'u'), (u'ş', u'ü'), (u't', u'v'), (u'u', u'y'), (u'ü', u'z'), (u'v', u'a'),\n     (u'y', u'b'), (u'z',u'c'), (9, '')])\n\n\ntext = 'öğtjçdç9dğp9grnvrt9jyuğbkp9içokoğr9pyp9nçtkbğt9iypoğtk9gycğpoğgkikpk9gybgyö9ağ9uğpkp9kekp9drboğ9dkt9urty9\\\n            jçcktoçgkö9içokoğr9gç9uvçmç9dçuoçöçn9kekp9vğn9bçşöçp9iğtğnğp9\\\n                çpçjvçtk9dyogyiyp9ağ9dy9öğvkp9grubçukpk9rnybçdkogkikp9\\\n                    çoirtkvöçoçtk9kuvğgkikp9gkogğ9nrgoçöçp9ağ9dçuoçtkpç9çpçjvçt9\\\n                        ağ9ngvççmnçç9bçcçtçn9nrgoçtkpk9uktnğvkp9kphr9çgğtğukpğ9öçko9çvöçpgkt9\\jçgk9irtğbkö9uğpk'\n\nout = []\n\nfor k, v in alphabet.items():\n    for i in list(text):\n        if i == v:\n            out.append(alphabet[v])\n\noutlast = (''.join(out))\n\nprint(outlast)\n```\n\nI can't compare list of 'text' and alphabet values. I want to \"text's every element(i) compare values and if it be 'i==values' Append i to 'out' list but as keys!\" I'm using PyCharm 2017.2.2 Can you Help Me?\nActually Cryptyography Key is 3. \"3 times go up on Turkish alphabet\"\nThis is WRONG Output:\n```\nffffffffffffffffffffffffffffffffffffffffffffgggggggggggiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiijllllllllllmmmmmmööpppppppppppprrrrrrrrrrrrrrrrrrsssssssssssşşşşşşşşşşşşşşşşşşşşşşşşşşşştttttttttttttüvvvvvvvvvvvvvvvvvvvvyyyyyyyyyyyyaaaaaaaaaaabbbbbbbbbbbbççççdddddddddeee\n```\n\nExpected Output:\n```\nmerhaba ben doktor huseyin galileo nun kariyer gunleri duzenledigini duydum ve senin icin boyle bir soru hazirladim galileo da staja baslamak icin tek yapman gereken anahtari buldugun ve bu metin dosyasini okuyabildigin algoritmalari istedigin dilde kodlaman ve baslarina anahtar ve kdtaajkaa yazarak kodlarini sirketin info aderesine mail atmandir hadi goreyim seni\n```\n\n    ", "Answer": "\r\nNot sure why you need OrderedDict, list of tuples works well. Here is how your code may look.\n```\nalphabet = [(u'a', u'ç'), (u'b', u'd'), (u'c', u'e'), (u'ç', u'f'), (u'd', u'g'), (u'e', u'g'), (u'f', u'h'),\n     (u'g', u'i'), (u'g', u'i'), (u'h', u'j'), (u'i', u'k'), (u'i', u'l'), (u'j', u'm'), (u'k', u'n'),\n     (u'l', u'o'), (u'm', u'ö'), (u'n', u'p'), (u'o', u'r'), (u'ö', u's'), (u'p', u'ş'), (u'r', u't'),\n     (u's', u'u'), (u'ş', u'ü'), (u't', u'v'), (u'u', u'y'), (u'ü', u'z'), (u'v', u'a'),\n     (u'y', u'b'), (u'z',u'c'), \n(' ', '9')]    #'9' should be quoted and be the second element of the tuple\n\ntext = 'öğtjçdç9dğp9grnvrt9jyuğbkp9içokoğr9pyp9nçtkbğt9iypoğtk9gycğpoğgkikpk9gybgyö9ağ9uğpkp9kekp9drboğ9dkt9urty9\\\n            jçcktoçgkö9içokoğr9gç9uvçmç9dçuoçöçn9kekp9vğn9bçşöçp9iğtğnğp9\\\n                çpçjvçtk9dyogyiyp9ağ9dy9öğvkp9grubçukpk9rnybçdkogkikp9\\\n                    çoirtkvöçoçtk9kuvğgkikp9gkogğ9nrgoçöçp9ağ9dçuoçtkpç9çpçjvçt9\\\n                        ağ9ngvççmnçç9bçcçtçn9nrgoçtkpk9uktnğvkp9kphr9çgğtğukpğ9öçko9çvöçpgkt9\\jçgk9irtğbkö9uğpk'\n\nout = []\n\nfor t in list(text): #outer loop is over the text \n    for v in alphabet:  #and inner loop is to search char in the alphabet\n        if t == v[1]:\n            out += v[0]\n\noutlast = (''.join(out))\nprint(outlast)\n```\n\nOutput.\n```\nmrhaba bn deoktor husyin ggalilo nun kariyr ggunlri deuznldeiggini deuydeum v snin icin boyl bir soru hazirladeim ggalilo dea staja baslamak icin tk yapman ggrkn anahtari buldeuggun v bu mtin deosyasini okuyabildeiggin alggoritmalari istdeiggin deilde kodelaman v baslarina anahtar v kdetaajkaa yazarak kodelarini sirktin info adersin mail atmandeir hadei ggoryim sni\n```\n\nThere are still some errors in your ```\nalphabet```\n definition, I leave fixing them to you.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is there really a use for trigonometry in cryptography? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is off-topic. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it's on-topic for Stack Overflow.\r\n                \r\n                    \r\n                        Closed 10 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nSo I'm reading this book on an introduction to cryptography, there's this exercise about reading a message from a paper and you'd have to use a cosine function to find out how many letters each strip of paper should have (once you tear it, so you could decode the message). \n\nI mean really? Will there be a similar scenario to this? whats the use? Or are there other applications of trigonometry in cryptography?\n    ", "Answer": "\r\nAny function/method that implements the properties of diffusion and confusion (cit. Shannon) is eligible to be used for cryptographic purpose  \n\nHowever, diffusion and confusion are relative to the computational power of the system in which the algorithm will run. For the average guy with paper&pencil trigonometric functions will suffice, for modern CPUs more complicated math should be used (factorization of large numbers, inversion of discrete logarithms, math over elliptic curve etc..)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cryptography Fernet.generate_key() key length\r\n                \r\nI don't know much about cryptography but when I used cryptography library in python and tried generating a key, the key length was above 32\n```\nfrom cryptography.fernet import Fernet\nimport base64\n\nkey = Fernet.generate_key()\n>>>x2pXHXqCcUGjcq4HTcvdqH5xSEF_SLATO6p1Xk3tejM=\n```\n\nIf I use this key to decrypt a message online or outside python, it would say key's max length is 32\nI read that cryptography library uses 128 bit key CBC AES.\nI'm not sure if this is something related to padding, my question is it possible to decrypt Fernet-encrypted messages outside python using this key or is there anyway I can get the original 16 bytes key (since it should be using 128 key)\n    ", "Answer": "\r\nThe key generated by ```\nFernet.generate_key()```\n and expected by the constructor actually consists of two 128-bit keys: one for signing, and the other is for encryption, concatenated in that order.\nFrom the source code:\n```\n    key = base64.urlsafe_b64decode(key)\n    if len(key) != 32:\n        raise ValueError(\n            \"Fernet key must be 32 url-safe base64-encoded bytes.\"\n        )\n\n    self._signing_key = key[:16]\n    self._encryption_key = key[16:]\n```\n\nUpdate thanks to @PaulKehrer\nThis is described in the format specification, quoting below:\nA fernet key is the base64url encoding of the following fields:\n```\nSigning-key ‖ Encryption-key\n```\n\n\nSigning-key, 128 bits\nEncryption-key, 128 bits\n\nUsing low-level libraries and services to decrypt Fernet messages requires parsing the token format manually:\n\nFernet produces url-safe base64\nBesides data, the token contains version, timestamp, IV and HMAC\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Java SE strong cryptography for Java 7? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is seeking recommendations for books, tools, software libraries, and more. It does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     We don’t allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.\r\n                \r\n                    \r\n                        Closed 6 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nThe preview release of Java 7 seems to be missing JCE package for unlimited cryptography strength. Has someone stumbled upon such?\n    ", "Answer": "\r\nhttp://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography in Java 6\r\n                \r\nIs it possible to use Elliptic Curve Cryptography in Java 6 by default? I don't want use any third party providers like Bouncy castle.\n    ", "Answer": "\r\nThe answer is a simple no, ECC functionality was not added until Java 7. Java 6 simply provided the API interface - a pretty well defined one at that - but not an actual implementation. That said, it may be usable through a PKCS#11 module (using the Sun PKCS#11 provider). But in that case you need a PKCS#11 compatible ```\n.dll```\n which is probably unacceptable unless you are able to install a third party native library.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "OpenSSL FIPS_mode_set not working in Python cryptography library\r\n                \r\nAccording to Python Cryptography library's documentation [1], it is possible to build a custom cryptography wheel with OpenSSL statically linked. I tried doing this with an OpenSSL installation built with FIPS object module and was able to successfully build the wheel but found out that it did not have FIPS functionality (unable to set FIPS_mode_set=1).\n\nI have created a Dockerfile that can reproduce the same result. The Python code at the end are supposed to show \"1\" and \"OpenSSL 1.0.2t-fips  10 Sep 2019\" and but instead show \"0\" and \"OpenSSL 1.0.2t  10 Sep 2019\" (no ```\n-fips```\n designation).\n\nThe thing that boggles my mind is that when I invoke ```\nopenssl version```\n CLI that I built, it correctly shows the version with the ```\n-fips```\n suffix. Because, of this I'm guessing that I went wrong somewhere in building cryptography.\n\nAppreciate any help here!\n\n```\nFROM centos\n\n# Install build dependencies\nRUN yum groupinstall -y  \"Development Tools\" && \\\n    yum install -y python-devel libffi-devel\n\n# Install Python dependencies\nRUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \\\n    python get-pip.py && \\\n    pip install virtualenv setuptools wheel pip\n\n# Build Fips object module\nRUN curl -O https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz && \\\n    tar xvf openssl-fips-2.0.16.tar.gz && \\\n    cd openssl-fips-2.0.16 && \\\n    ./config && \\\n    make && \\\n    make install\n\n# Build OpenSSL\nRUN curl -O https://www.openssl.org/source/openssl-1.0.2t.tar.gz && \\\n    tar xvf openssl-1.0.2t.tar.gz && \\\n    cd /openssl-1.0.2t && \\\n    ./config fips no-shared -fPIC --prefix=/openssl-1.0.2t/openssl && \\\n    make depend && \\\n    make && \\\n    make install_sw\n\n# Build cryptography\nRUN CFLAGS=\"-I/openssl-1.0.2t/openssl/include\" LDFLAGS=\"-L/openssl-1.0.2t/openssl/lib\" pip wheel --no-cache --no-binary :all: cryptography && \\\n    pip install cryptography*.whl\n\n# Test if fips is enabled\nRUN python -c \"\\\nfrom cryptography.hazmat.backends.openssl.backend import backend;\\\nprint backend._lib.FIPS_mode_set(1);\\\nprint ''.join([backend._lib.OPENSSL_VERSION_TEXT[i] for i in range(30)])\"\n```\n\n\n[1] https://cryptography.io/en/latest/installation/#static-wheels\n\nEDIT: By adding ```\n-DOPENSSL_FIPS```\n to the cryptography build, I was able to make output of ```\nOPENSSL_VERSION_TEXT```\n become ```\nOpenSSL 1.0.2t-fips  10 Sep 20```\n but the output of FIPS_mode_set(1) is still 0.\n\nEDIT 2: Using ```\nERR_get_error()```\n shows the following:\n\n```\n>>> print backend._lib.FIPS_mode_set(1)\n0\n>>> print backend._lib.ERR_get_error()\n755413103\n```\n\n\nWhen I pop this into ```\nopenssl errstr```\n I get:\n\n```\nopenssl errstr 755413103\nerror:755413103:lib(85):func(1043):reason(259)\n```\n\n\nAccording to some Google searches, this indicates that fingerprint doesn't match (```\nFIPS_R_FINGERPRINT_DOES_NOT_MATCH```\n). Not sure where to go from here though.\n    ", "Answer": "\r\n1. General\nFirst of all, I want to mention that although I understand the reasons, I don't fully agree with Cryptography's vision ([Cryptography]: Installation - Static Wheels). Shared libraries exist for decades and have proven their superiority. Not to mention that Python ships 2 (standard) modules (_ssl and _hashlib) that dynamically link to OpenSSL (whatever it's on the system). As a side note, on Win, the 2 Python modules also used to link statically to OpenSSL, but starting with v3.7, they no longer do. Back to Nix: 2 OpenSSL versions are loaded into the same (Python) process. It doesn't seem to harm, but it looks funny. And as things are today (191009), there are a bunch of .whls for v2.7 and v3.4, but none for a fairly decent (Python) environment:\n\nI remember a similar situation a while ago: besides the 2 standard modules, M2Crypto was also used. In that situation (we shipped Python entirely), the 2 specific (FIPS capable) OpenSSL (dynamic) libs were shipped too, and all the Python modules linked to them. It worked on a variety of (desktop) environments (out of which many \"exotic\" ones):\n\nCPU architectures (LE / BE): x86, AMD64, IA64, SPARC, PPC, zSeries\nOSes (with multiple versions): Win, Lnx (RH, CentOS, OEL, SuSE, Xen, Ubuntu), Solaris, AIX, HP-UX (and as personal exercise, I added OSX)\n\n[OpenSSL]: UserGuide-2.0.pdf - User Guide for the OpenSSL FIPS Object Module v2.0 (referenced from [OpenSSL]: FIPS-140 in case the URL changes) contains all the details needed.\nBefore going further, here are some terms that I'm going to use throughout the post:\n\nFOM - FIPS object module (fipscanister.o)\n\nFOME - The executable (ELF (PE on Win)) that FOM was linked in. Bear in mind, that it can be either an executable per se, either an .so (.dll). Also, if it's included in a static lib (.a), it's not linked (just archived). As a side note, when OpenSSL is built shared, FOME is libcrypto.so.*, while when built statically (like in this case), it's the executable that links with libcrypto.a (e.g. openssl executable)\n\n\nFOM comes on top of OpenSSL (and probably other such cryptography providers, like LibreSSL, WolfSSL, ), and it's meant to strengthen security, (according to NIST standards), by restricting some features that otherwise would be available. One such feature example is the usage of md5 hash, which is considered weak (I'm pretty sure that sha1 will follow too, in the next version about to be released). Here's a (very simplified) version of what happens (at runtime):\n\nFIPS mode on:\n\nCheck whether the additional constraints are met:\n\nYes: Proceed (with default functionality)\n\nNo: Return with error\n\n\n\n\n\nFIPS mode off:\n\nFall back to default functionality\n\n\n\nPart of #1.1. is the selftest. That consists of:\n\nComputing the FOME signature\n\nComparing it to a value (that was also stored in FOME)\n\n\nThis happens to make sure (or drastically reduce the chances) that no one tampered (manually modifying, disassembling, ...) with FOME. To have a better understanding of the signature mechanism, let's dive into FOME build process:\n\nAll the FOME sources + FOM are compiled (into object files)\n\nThey are linked together (into FOME). This is when a normal build ends\n\nThe FOME signature is being computed\n\nItems from #1. + fips_premain.o are being linked into a (real, not .dll) executable (FPD)\n\nFPD is invoked against FOME (#1.). It reads FOME's .rodata section and computes its sha1 hash. Note that it ignores a 41 bytes zone (punches a hole) located at a specific address\n\n\n\n#3.1. is repeated, but this time fips_premain.o was recompiled to also include the hash from previous step. Now it becomes clear the punched hole from previous step, it's the place where the signature goes: (length of sha hash (40) + nul). This is the final FOME\n\n\nNote: On Win, things happen just a bit differently.\nI've managed to reproduce the problem. I'm going to start with the test script.\ncode00.py:\n```\n#!/usr/bin/env python\n\nimport sys\n\nimport cffi\n\nfrom cryptography.hazmat.backends.openssl.backend import backend\n\n\ndef main(*argv):\n    ffi = cffi.FFI()\n    lib = backend._lib\n    fmt = \"OpenSSL version: {0:s}\\nFIPS_mode(): {1:d}\\nFIPS_mode_set(1): {2:d}\\nFIPS_mode(): {3:d}\"\n    print(fmt.format(ffi.string(\n        lib.OPENSSL_VERSION_TEXT).decode(),\n        lib.FIPS_mode(),lib.FIPS_mode_set(1), lib.FIPS_mode()\n    ))\n    err = lib.ERR_get_error()\n    if err:\n        err_fmt = \"error:[{0:d}]:[{1:s}]:[{2:s}]:[{3:s}]\"\n        print(err_fmt.format(\n            err,\n            ffi.string(lib.ERR_lib_error_string(err)).decode(),\n            ffi.string(lib.ERR_func_error_string(err)).decode(),\n            ffi.string(lib.ERR_reason_error_string(err)).decode()\n        ))\n    else:\n        print(\"Success !!!\")\n\n\nif __name__ == \"__main__\":\n    print(\"Python {:s} {:03d}bit on {:s}\\n\".format(\" \".join(elem.strip() for elem in sys.version.split(\"\\n\")),\n                                                   64 if sys.maxsize > 0x100000000 else 32, sys.platform))\n    rc = main(*sys.argv[1:])\n    print(\"\\nDone.\")\n    sys.exit(rc)\n```\n\n2. Setup\nI've already built FOM and a FIPS capable OpenSSL (similar to yours, but I customized their paths). The ${FIPSDIR} variable was used when building both FOM and OpenSSL.\n\n\n```\n[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow/q058228435]> ~/sopr.sh\n*** Set shorter prompt to better fit when pasted in StackOverflow (or other) pages ***\n\n[064bit-prompt]> uname -a\nLinux cfati-ubtu16x64-0 4.15.0-65-generic #74~16.04.1-Ubuntu SMP Wed Sep 18 09:51:44 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\n[064bit-prompt]> cat /etc/lsb-release | grep DESCR\nDISTRIB_DESCRIPTION=\"Ubuntu 16.04.6 LTS\"\n[064bit-prompt]> gcc --version | grep gcc\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\n[064bit-prompt]>\n[064bit-prompt]> echo ${FIPSDIR}\n/home/cfati/Work/Dev/Tools/zzz_Build/OpenSSL/int/openssl-fips-2.0.16\n[064bit-prompt]> tree ${FIPSDIR}\n/home/cfati/Work/Dev/Tools/zzz_Build/OpenSSL/int/openssl-fips-2.0.16\n├── bin\n│   ├── fipsld\n│   └── fips_standalone_sha1\n├── include\n│   └── openssl\n│       ├── aes.h\n│       ├── bn.h\n│       ├── buffer.h\n│       ├── cmac.h\n│       ├── crypto.h\n│       ├── des.h\n│       ├── des_old.h\n│       ├── dh.h\n│       ├── dsa.h\n│       ├── ebcdic.h\n│       ├── ecdh.h\n│       ├── ecdsa.h\n│       ├── ec.h\n│       ├── e_os2.h\n│       ├── evp.h\n│       ├── fips.h\n│       ├── fips_rand.h\n│       ├── fipssyms.h\n│       ├── hmac.h\n│       ├── modes.h\n│       ├── opensslconf.h\n│       ├── opensslv.h\n│       ├── ossl_typ.h\n│       ├── rsa.h\n│       ├── sha.h\n│       └── symhacks.h\n└── lib\n    ├── fipscanister.o\n    ├── fipscanister.o.sha1\n    ├── fips_premain.c\n    └── fips_premain.c.sha1\n\n4 directories, 32 files\n[064bit-prompt]>\n[064bit-prompt]> echo ${OPENSSL_DIR}\n/home/cfati/Work/Dev/Tools/openssl-1.0.2t-fips-2.0.16-static\n[064bit-prompt]> tree ${OPENSSL_DIR}/bin ${OPENSSL_DIR}/lib\n/home/cfati/Work/Dev/Tools/openssl-1.0.2t-fips-2.0.16-static/bin\n├── c_rehash\n└── openssl\n/home/cfati/Work/Dev/Tools/openssl-1.0.2t-fips-2.0.16-static/lib\n├── engines\n├── libcrypto.a\n├── libssl.a\n└── pkgconfig\n    ├── libcrypto.pc\n    ├── libssl.pc\n    └── openssl.pc\n\n2 directories, 7 files\n[064bit-prompt]>\n[064bit-prompt]> ldd ${OPENSSL_DIR}/bin/openssl\n    linux-vdso.so.1 =>  (0x00007ffeec045000)\n    libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f12c19c2000)\n    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f12c15f8000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007f12c1bc6000)\n[064bit-prompt]>\n[064bit-prompt]> ${OPENSSL_DIR}/bin/openssl version\nOpenSSL 1.0.2t-fips  10 Sep 2019\n[064bit-prompt]> ${OPENSSL_DIR}/bin/openssl sha1 ./code00.py\nSHA1(./code00.py)= ff122260b025103dbc03316e3d3e26cd683e7a12\n[064bit-prompt]> ${OPENSSL_DIR}/bin/openssl md5 ./code00.py\nMD5(./code00.py)= eac85e46734260c1bfcceb89d6a3bd32\n[064bit-prompt]> OPENSSL_FIPS=1 ${OPENSSL_DIR}/bin/openssl sha1 ./code00.py\nSHA1(./code00.py)= ff122260b025103dbc03316e3d3e26cd683e7a12\n[064bit-prompt]> OPENSSL_FIPS=1 ${OPENSSL_DIR}/bin/openssl md5 ./code00.py\nError setting digest md5\n140584610875032:error:060A80A3:digital envelope routines:FIPS_DIGESTINIT:disabled for fips:fips_md.c:180:\n```\n\n\n3. Cryptography module\n\n```\n[064bit-prompt]> ls\ncode00.py  cryptography-2.7.tar.gz\n[064bit-prompt]> mkdir build\n[064bit-prompt]> cd build\n[064bit-prompt]>\n[064bit-prompt]> CFLAGS=\"-I${OPENSSL_DIR}/include -DOPENSSL_FIPS=1\" LDFLAGS=\"-L${OPENSSL_DIR}/lib\" python3 -m pip wheel --no-cache --no-binary :all: ../cryptography-2.7.tar.gz\nProcessing /home/cfati/Work/Dev/StackOverflow/q058228435/cryptography-2.7.tar.gz\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n    Preparing wheel metadata ... done\nCollecting asn1crypto>=0.21.0 (from cryptography==2.7)\n  Downloading https://files.pythonhosted.org/packages/d1/e2/c518f2bc5805668803ebf0659628b0e9d77ca981308c7e9e5564b30b8337/asn1crypto-1.0.1.tar.gz (115kB)\n     |████████████████████████████████| 122kB 801kB/s\nCollecting cffi!=1.11.3,>=1.8 (from cryptography==2.7)\n  Downloading https://files.pythonhosted.org/packages/93/1a/ab8c62b5838722f29f3daffcc8d4bd61844aa9b5f437341cc890ceee483b/cffi-1.12.3.tar.gz (456kB)\n     |████████████████████████████████| 460kB 1.8MB/s\nCollecting six>=1.4.1 (from cryptography==2.7)\n  Downloading https://files.pythonhosted.org/packages/dd/bf/4138e7bfb757de47d1f4b6994648ec67a51efe58fa907c1e11e350cddfca/six-1.12.0.tar.gz\nCollecting pycparser (from cffi!=1.11.3,>=1.8->cryptography==2.7)\n  Downloading https://files.pythonhosted.org/packages/68/9e/49196946aee219aead1290e00d1e7fdeab8567783e83e1b9ab5585e6206a/pycparser-2.19.tar.gz (158kB)\n     |████████████████████████████████| 163kB 4.5MB/s\nBuilding wheels for collected packages: cryptography, asn1crypto, cffi, six, pycparser\n  Building wheel for cryptography (PEP 517) ... done\n  Stored in directory: /home/cfati/Work/Dev/StackOverflow/q058228435/build\n  Building wheel for asn1crypto (setup.py) ... done\n  Stored in directory: /home/cfati/Work/Dev/StackOverflow/q058228435/build\n  Building wheel for cffi (setup.py) ... done\n  Stored in directory: /home/cfati/Work/Dev/StackOverflow/q058228435/build\n  Building wheel for six (setup.py) ... done\n  Stored in directory: /home/cfati/Work/Dev/StackOverflow/q058228435/build\n  Building wheel for pycparser (setup.py) ... done\n  Stored in directory: /home/cfati/Work/Dev/StackOverflow/q058228435/build\nSuccessfully built cryptography asn1crypto cffi six pycparser\nWARNING: You are using pip version 19.1.1, however version 19.2.3 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n[064bit-prompt]>\n[064bit-prompt]> ls\nasn1crypto-1.0.1-py3-none-any.whl        cryptography-2.7-cp35-cp35m-linux_x86_64.whl  six-1.12.0-py2.py3-none-any.whl\ncffi-1.12.3-cp35-cp35m-linux_x86_64.whl  pycparser-2.19-py2.py3-none-any.whl\n[064bit-prompt]>\n[064bit-prompt]> for f in $(ls *.whl); do unzip ${f} > /dev/null; done\n[064bit-prompt]> ls\nasn1crypto                         cffi-1.12.3-cp35-cp35m-linux_x86_64.whl        cryptography-2.7-cp35-cp35m-linux_x86_64.whl  pycparser-2.19-py2.py3-none-any.whl\nasn1crypto-1.0.1.dist-info         cffi-1.12.3.dist-info                          cryptography-2.7.dist-info                    six-1.12.0.dist-info\nasn1crypto-1.0.1-py3-none-any.whl  _cffi_backend.cpython-35m-x86_64-linux-gnu.so  pycparser                                     six-1.12.0-py2.py3-none-any.whl\ncffi                               cryptography                                   pycparser-2.19.dist-info                      six.py\n[064bit-prompt]> PYTHONPATH=.:${PYTHONPATH} python3 ../code00.py\nPython 3.5.2 (default, Jul 10 2019, 11:58:48) [GCC 5.4.0 20160609] 64bit on linux\n\nOpenSSL version: OpenSSL 1.0.2t-fips  10 Sep 2019\nFIPS_mode(): 0\nFIPS_mode_set(1): 0\nFIPS_mode(): 0\nerror:[755413103]:[FIPS routines]:[FIPS_check_incore_fingerprint]:[fingerprint does not match]\n\nDone.\n```\n\n\nAs seen, I'm pretty much where you are.\n4. Deeper dive\nAfter long (and some might consider painful) hours of debugging, trials, ...,  I reached to a conclusion. Considering that:\n\nTampering with anything from FOM (contents of ${FIPSDIR}), will no loner qualify as FIPS validated. To be frank, neither does this, as there are specific instructions that when building FOM, only a sys admin should copy the artifacts in a secure location ...., bla, bla, bla. This seems paranoid to me, but these are the facts. As a remark, back in 2013, when we 1st came in contact with FIPS (probably to prevent any possible attack (e.g. MITM)), the FOM sources CD was shipped from USA to ROU :)))\nDefault Python version is statically (again :) ) built, meaning that ${PYTHONCORE} (the Python interpreter) resides in the python executable, rather than in a .so (libpython*.so*) that can be linked to (and that the python executable does in case of shared builds)\nCryptography's _openssl extension module (_openssl.abi*.so) needs symbols from ${PYTHONCORE} (e.g. PyLong_FromLong), but that's OK since at the moment it will be loaded into the (Python) process (launched from the aforementioned executable), it will find them (this is a common practice on Nix)\nBuild step #3.2.: the executable (FPD - which must run) doesn't find the symbols, so it fails\n\nThis is a deadlock (whatever room one constraint leaves, is closed by others), so IT SIMPLY CAN'T BE DONE !!! (at least, at this time). Period!!! X(\n5. Alternative\nI was going to suggest this as an elegant alternative (including the OpenSSL .sos (with any (.so) client having rpath set to \"there\") in the .whl, next to _openssl.abi3.so which links to them), but apparently this is the only way (that I've found, at least).\nThe 1st step, is to build a shared OpenSSL version (FOME will be libcrypto.so.*).\n\n```\n[064bit-prompt]> ls\ncode00.py  cryptography-2.7.tar.gz\n[064bit-prompt]> export OPENSSL_DIR=/home/cfati/Work/Dev/Tools/openssl-1.0.2t-fips-2.0.16\n[064bit-prompt]> ldd ${OPENSSL_DIR}/bin/openssl\n        linux-vdso.so.1 =>  (0x00007ffe62faf000)\n        libssl.so.1.0.0 => /home/cfati/Work/Dev/Tools/openssl-1.0.2t-fips-2.0.16/lib/libssl.so.1.0.0 (0x00007fe33c06f000)\n        libcrypto.so.1.0.0 => /home/cfati/Work/Dev/Tools/openssl-1.0.2t-fips-2.0.16/lib/libcrypto.so.1.0.0 (0x00007fe33bb92000)\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fe33b7c8000)\n        libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fe33b5c4000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007fe33c2e3000)\n[064bit-prompt]>\n[064bit-prompt]> ${OPENSSL_DIR}/bin/openssl version\nOpenSSL 1.0.2t-fips  10 Sep 2019\n[064bit-prompt]> ${OPENSSL_DIR}/bin/openssl md5 ./code00.py\nMD5(./code00.py)= eac85e46734260c1bfcceb89d6a3bd32\n[064bit-prompt]> OPENSSL_FIPS=1 ${OPENSSL_DIR}/bin/openssl md5 ./code00.py\nError setting digest md5\n139796140275352:error:060A80A3:digital envelope routines:FIPS_DIGESTINIT:disabled for fips:fips_md.c:180\n```\n\n\nAfter another session of deep diving (lots of failed attempts), I was able to get it working. However, took a lot of actions:\n\nManual interventions\nHacks\n(Lame) workarounds (gainarii)\n\nI'm afraid that if I'd put everything here it would well exceed the 30K chars limit ([SE.Meta]: Knowing Your Limits: What is the maximum length of a question title, post, image and links used?).\nHowever, I published the .whl at [GitHub]: CristiFati/Prebuilt-Binaries - (master) Prebuilt-Binaries/Cryptography/v2.7. So far it's for Python 3.5 (64bit) only, as it's the default version that comes on Ubuntu 16. If you use another (newer) version, just let me know, and I'll get it (maybe build it myself), and build the .whl for that version too (I am going to do it anyway).\nAfter replacing the original .whl with the one built by me:\n\n```\n[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow/q058228435/build]> ll\ntotal 2936\ndrwxrwxr-x 2 cfati cfati    4096 Oct  9 21:40 .\ndrwxrwxr-x 4 cfati cfati    4096 Oct  9 21:28 ..\n-rw-rw-r-- 1 cfati cfati  108067 Oct  9 08:43 asn1crypto-1.0.1-py3-none-any.whl\n-rw-rw-r-- 1 cfati cfati  318045 Oct  9 08:43 cffi-1.12.3-cp35-cp35m-linux_x86_64.whl\n-rw-rw-r-- 1 cfati cfati 2438739 Oct  9 21:40 cryptography-2.7-cp35-cp35m-linux_x86_64.whl\n-rw-rw-r-- 1 cfati cfati  112066 Oct  9 08:43 pycparser-2.19-py2.py3-none-any.whl\n-rw-rw-r-- 1 cfati cfati   12099 Oct  9 08:43 six-1.12.0-py2.py3-none-any.whl\n[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow/q058228435/build]> for f in $(ls *.whl); do unzip ${f} > /dev/null; done\n[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow/q058228435/build]> ls\nasn1crypto                         cffi-1.12.3-cp35-cp35m-linux_x86_64.whl        cryptography-2.7-cp35-cp35m-linux_x86_64.whl  pycparser-2.19-py2.py3-none-any.whl\nasn1crypto-1.0.1.dist-info         cffi-1.12.3.dist-info                          cryptography-2.7.dist-info                    six-1.12.0.dist-info\nasn1crypto-1.0.1-py3-none-any.whl  _cffi_backend.cpython-35m-x86_64-linux-gnu.so  pycparser                                     six-1.12.0-py2.py3-none-any.whl\ncffi                               cryptography                                   pycparser-2.19.dist-info                      six.py\n[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow/q058228435/build]> PYTHONPATH=.:${PYTHONPATH} python3 ../code00.py\nPython 3.5.2 (default, Jul 10 2019, 11:58:48) [GCC 5.4.0 20160609] 64bit on linux\n\nOpenSSL version: OpenSSL 1.0.2t-fips  10 Sep 2019\nFIPS_mode(): 0\nFIPS_mode_set(1): 1\nFIPS_mode(): 1\nSuccess !!!\n\nDone.\n```\n\n\nRelated (more or less) posts:\n\n[SO]: Unable to build a working FIPS capable OpenSSL on HP-UX\n\n[SO]: How to enable FIPS mode for libcrypto and libssl packaged with Python? (@CristiFati's answer)\n\n[SO]: How to implement FIPS_mode() and FIPS_mode_set() in Python 3.6's ssl module? (@CristiFati's answer)\n\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Can't install python cryptography on Cygwin\r\n                \r\nI have installed python38-cryptogrpahy package v.3.3.2-1 thru cygwin but when I try to install fabric via pip - it tries to build it and fails with next error:\n```\n$ pip install -r ./requirements.txt\nCollecting fabric3\n  Using cached Fabric3-1.14.post1-py3-none-any.whl (92 kB)\nCollecting paramiko<3.0,>=2.0\n  Using cached paramiko-2.8.1-py2.py3-none-any.whl (206 kB)\nRequirement already satisfied: six>=1.10.0 in ./env/lib/python3.8/site-packages (from fabric3->-r ./requirements.txt (line 1)) (1.16.0)\nCollecting pynacl>=1.0.1\n  Using cached PyNaCl-1.4.0-cp38-cp38-cygwin_3_3_3_x86_64.whl\nCollecting bcrypt>=3.1.3\n  Using cached bcrypt-3.2.0-cp38-cp38-cygwin_3_3_3_x86_64.whl\nCollecting cryptography>=2.5\n  Using cached cryptography-36.0.1.tar.gz (572 kB)\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n  Preparing metadata (pyproject.toml) ... done\nCollecting cffi>=1.1\n  Using cached cffi-1.15.0-cp38-cp38-cygwin_3_3_3_x86_64.whl\nRequirement already satisfied: pycparser in ./env/lib/python3.8/site-packages (from cffi>=1.1->bcrypt>=3.1.3->paramiko<3.0,>=2.0->fabric3->-r ./requirements.txt (line 1)) (2.21)\nBuilding wheels for collected packages: cryptography\n  Building wheel for cryptography (pyproject.toml) ... error\n  ERROR: Command errored out with exit status 1:\n   command: /home/dnester/repo/vastuf_server_common/containers/smart_home/rvalarm/env/bin/python /home/dnester/repo/vastuf_server_common/containers/smart_home/rvalarm/env/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py build_wheel /tmp/tmpojt6ejpa\n       cwd: /tmp/pip-install-cxk1g2b2/cryptography_9e2405fed34048fcbe4e2c9e871e31b6\n  Complete output (168 lines):\n  running bdist_wheel\n  running build\n  running build_py\n  creating build\n  creating build/lib.cygwin-3.3.3-x86_64-3.8\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography\n  copying src/cryptography/exceptions.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography\n  copying src/cryptography/fernet.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography\n  copying src/cryptography/utils.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography\n  copying src/cryptography/__about__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography\n  copying src/cryptography/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat\n  copying src/cryptography/hazmat/_oid.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat\n  copying src/cryptography/hazmat/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/base.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/certificate_transparency.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/extensions.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/general_name.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/name.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/ocsp.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/oid.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  copying src/cryptography/x509/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/x509\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends\n  copying src/cryptography/hazmat/backends/interfaces.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends\n  copying src/cryptography/hazmat/backends/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings\n  copying src/cryptography/hazmat/bindings/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/cmac.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/constant_time.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/hashes.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/hmac.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/keywrap.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/padding.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/poly1305.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/_asymmetric.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/_cipheralgorithm.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/_serialization.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  copying src/cryptography/hazmat/primitives/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/aead.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/backend.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/ciphers.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/cmac.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/decode_asn1.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/dh.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/dsa.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/ec.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/ed25519.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/ed448.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/encode_asn1.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/hashes.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/hmac.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/poly1305.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/rsa.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/utils.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/x25519.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/x448.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/x509.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  copying src/cryptography/hazmat/backends/openssl/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/backends/openssl\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/openssl\n  copying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/openssl\n  copying src/cryptography/hazmat/bindings/openssl/_conditional.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/openssl\n  copying src/cryptography/hazmat/bindings/openssl/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/openssl\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/dh.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/dsa.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/ec.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/ed25519.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/ed448.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/padding.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/rsa.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/types.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/utils.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/x25519.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/x448.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  copying src/cryptography/hazmat/primitives/asymmetric/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/asymmetric\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/aead.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/algorithms.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/base.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/modes.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/ciphers\n  copying src/cryptography/hazmat/primitives/ciphers/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/ciphers\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/concatkdf.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/hkdf.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/kbkdf.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/scrypt.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/x963kdf.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  copying src/cryptography/hazmat/primitives/kdf/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/kdf\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/base.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/pkcs12.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/pkcs7.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/ssh.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/serialization\n  copying src/cryptography/hazmat/primitives/serialization/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/serialization\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/twofactor\n  copying src/cryptography/hazmat/primitives/twofactor/hotp.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/twofactor\n  copying src/cryptography/hazmat/primitives/twofactor/totp.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/twofactor\n  copying src/cryptography/hazmat/primitives/twofactor/__init__.py -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/primitives/twofactor\n  running egg_info\n  writing src/cryptography.egg-info/PKG-INFO\n  writing dependency_links to src/cryptography.egg-info/dependency_links.txt\n  writing requirements to src/cryptography.egg-info/requires.txt\n  writing top-level names to src/cryptography.egg-info/top_level.txt\n  reading manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  reading manifest template 'MANIFEST.in'\n  no previously-included directories found matching 'docs/_build'\n  warning: no previously-included files found matching 'vectors'\n  warning: no previously-included files matching '*' found under directory 'vectors'\n  warning: no previously-included files matching '*' found under directory '.github'\n  warning: no previously-included files found matching 'release.py'\n  warning: no previously-included files found matching '.coveragerc'\n  warning: no previously-included files found matching 'codecov.yml'\n  warning: no previously-included files found matching '.readthedocs.yml'\n  warning: no previously-included files found matching 'dev-requirements.txt'\n  warning: no previously-included files found matching 'tox.ini'\n  warning: no previously-included files found matching 'mypy.ini'\n  warning: no previously-included files matching '*' found under directory '.zuul.d'\n  warning: no previously-included files matching '*' found under directory '.zuul.playbooks'\n  adding license file 'LICENSE'\n  adding license file 'LICENSE.APACHE'\n  adding license file 'LICENSE.BSD'\n  adding license file 'LICENSE.PSF'\n  writing manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  copying src/cryptography/py.typed -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography\n  creating build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/__init__.pyi -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/asn1.pyi -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/ocsp.pyi -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/_rust\n  copying src/cryptography/hazmat/bindings/_rust/x509.pyi -> build/lib.cygwin-3.3.3-x86_64-3.8/cryptography/hazmat/bindings/_rust\n  running build_ext\n  running build_rust\n\n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation/ for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq/\n      4) Ensure you have a recent Rust toolchain installed:\n         https://cryptography.io/en/latest/installation/#rust\n\n      Python: 3.8.12\n      platform: CYGWIN_NT-10.0-22000-3.3.3-341.x86_64-x86_64-64bit-WindowsPE\n      pip: n/a\n      setuptools: 59.7.0\n      setuptools_rust: 1.1.2\n      =============================DEBUG ASSISTANCE=============================\n\n  error: can't find Rust compiler\n\n  If you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the need for a Rust compiler.\n\n  To update pip, run:\n\n      pip install --upgrade pip\n\n  and then retry package installation.\n\n  If you did intend to build this package from source, try installing a Rust compiler from your system package manager and ensure it is on the PATH during installation. Alternatively, rustup (available at https://rustup.rs) is the recommended way to download and update the Rust compiler toolchain.\n\n  This package requires Rust >=1.41.0.\n  ----------------------------------------\n  ERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography, which is required to install pyproject.toml-based projects\n```\n\nI didn't find Rust compiler in Cygwin packages and don't want to build it from sources. So I want to figure out why installed cryptography package is not recognized by pip.\n    ", "Answer": "\r\n3.3.2 is the last ```\ncryptography```\n version that does not require ```\nrust```\n. So the last possible and available on Cygwin that has no ```\nrust```\n compiler.\nAs it seems that ```\npip```\n is trying to install the latest upstream release of ```\ncryptography```\n, forcing the ```\ncryptography==3.3.2```\n on the requirement should work.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Which built-in .NET cryptography algorithm is the most secure?\r\n                \r\nWhich cryptography algorithm is the most secure that ships with .net?\n    ", "Answer": "\r\nYou cannot directly compare all types of cryptographic algorithms. That would be like comparing a sorting algorithm with a multiplication algorithm: they have different purposes.\nThat being said, I would answer:\n\n\nSymmetric cipher: AES-256\nAsymmetric cipher: RSA with 4096 bit key (I believe that is the maximum in .NET) or ECDSA with 571 bit key (but that is only supported in .NET 3.5)\nHash: SHA-512\nMessage Authentication Code: HMAC with SHA-512\n\n\nThat being said, those are overkill for most applications, and you should do fine using AES-128, RSA with 2048 bit key, SHA-256 and HMAC with SHA-256.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Problem with Byte Flood Cryptography (C library)\r\n                \r\nI have a little problem with a C library: Byte Flood Cryptography. ( http://bfcrypt.sourceforge.net ).  \n\nI would create a program which use both linux sockets and Byte Flood Cryptography (the Byte Flood Cryptography functions are near from those provided from stdio.h, and this, I have understand).  \n\nI don't know how to 'bind' the two stream. I would encrypt data directly to the network.\nHow can I do?? (I don't want to use temporary array or files)\n    ", "Answer": "\r\nDon't use that library.  Use only ciphers and protocols that were designed and reviewed by professional cryptographers, not crackpots who talk about \"non-mathematical\" approaches to cipher design.\n\nI'd reach for GnuTLS (for C programs) or Botan (if C++ is okay), myself.  OpenSSL is popular but has a weird license and should not be used for new code.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Salt in cryptography\r\n                \r\nI was reading about salts in hashing and cryptography and I saw that in other answers in StackOverflow about salting:\nsalting is adding data to the password (or anything we want to encrypt) to make it harder for people who want to crack it with bruteforce and rainbow tables.\nfor example, my password is PASSWORD and my salt is SALT so the program converts it to ```\nPASSWORDSALT```\n and then hash it.\nBut it does not work when I used ```\nscrypt```\n and ```\nblake```\n (I have not tried other encryption types with salt)\nPython code:\n```\n>>> blake2b(b'PASSWORD', salt=b'SALT').hexdigest()\n52d9cb2e8690fcc5d34ef948e09c51aae66ff1d8e099bb72e2db333d6aa90b12c1745872b72004d6a64210cbb9be11307817f156863073d85cad0f2d643a4416\n>>> blake2b(b'PASSWORDSALT').hexdigest()\naa2fd2094ec83915eef264d4f24870f3d2ebb676449bc824161cf53aa62142dd64e5a80214a0638195eb1d3c2474727711c4e2149d10afc5767c0c25f5625a54\n```\n\nSo Why they are not equal?\n    ", "Answer": "\r\nThe password and salt are just inputs to a password hash function. Password hash functions are allowed to have more than one input. This is different from a secure hash such as SHA-256 that simply takes a single input to hash: the message.\nIf you look at the Blake specification you will see in section 2.8 that the salt is put in a parameter block, and that it is not used as separate input for each iteration.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "PIP Cryptography Failing to Install\r\n                \r\nThere are a quite a few answers to this question covering a ton of different scenarios but I've yet to find a solution to the self-same issue. When I try to install pip install cryptography I get:\n\n\n  generating cffi module\n  'build\\temp.win-amd64-3.8\\Release\\_padding.c'   creating\n  build\\temp.win-amd64-3.8   creating build\\temp.win-amd64-3.8\\Release\n  generating cffi module\n  'build\\temp.win-amd64-3.8\\Release\\_constant_time.c'   generating\n  cffi module 'build\\temp.win-amd64-3.8\\Release\\_openssl.c'\n  building '_openssl' extension   creating\n  build\\temp.win-amd64-3.8\\Release\\build   creating\n  build\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8   creating\n  build\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\\Release\n  C:\\Program Files (x86)\\Microsoft Visual\n  Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe\n  /c /nologo /Ox /W3 /GL /DNDEBUG /MD\n  -IC:\\Users\\be004cr\\PycharmProjects\\SSLTest\\venv\\include -IC:\\ Python\\Python38\\include -IC:\\Python\\Python38\\include \"-IC:\\Program\n  Files (x86)\\Microsoft Visual\n  Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\"\n  \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\\n  2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program\n  Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program\n  Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program\n  Files (x86) \\Windows Kits\\10\\include\\10.0.17763.0\\shared\"\n  \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\um\"\n  \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\"\n  \"-IC:\\Program Files (x86)\\Wind ows\n  Kits\\10\\include\\10.0.17763.0\\cppwinrt\"\n  /Tcbuild\\temp.win-amd64-3.8\\Release_openssl.c\n  /Fobuild\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\\Release_openssl.obj\n  _openssl.c   build\\temp.win-amd64-3.8\\Release_openssl.c(498): fatal error C1083: Cannot open include file: 'openssl/opensslv.h': No such\n  file or directory   error: command 'C:\\Program Files (x86)\\Microsoft\n  Visual\n  Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe'\n  failed with exit status 2\n  \n  ----------------------------------------   Failed building wheel for\n  cryptography   Running setup.py clean for cryptography Failed to build\n  cryptography Could not build wheels for cryptography which use PEP 517\n  and cannot be installed directly\n\n\n\nI am running a virtual environment within PyCharm 2019.2.5 on a Windows 10. \nI have installed OpenSSL from https://slproweb.com/products/Win32OpenSSL.html and selected the\nlatest 32bit version (I had the 64bit installed at first attempt but read elsewhere people had trouble with this so swtiched to 32bit)\nI have updated the LIB and INCLUDE locations to the relevant ../openssl/include and ../openssl/lib                                         locations and tried re-running the pip install but I keep gettng the same message. I've done this within the terminal within PyCharm and the standard CMD prompt.\nI'm running PIP version 19.0.3\n\n\nI'm sure I'm missing something super simple. Just don't know what.\n\nI'm looking to use the cryptography (originally planned to use pyopenssl but have noticed it's been superceded by cryptography) to enable HTTPS for my flask application.\n\nIs there anything I've missed? I feel there is.\n\nMany thanks\n    ", "Answer": "\r\nYou can try this\n1. Open PyCharm.\n2. go to ```\nFile -> settings -> Project:test(test means your project name) -> select project interpretor -> click add button```\n\n\n3. after clicking add button and search ```\n<package name>```\n then install it.\nfinally, run the program.\n\nUpdate\nNewer versions of Pycharm have a \"```\n+```\n\" mark (add button) here.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "No Module named '_cffi_backend' while using cryptography\r\n                \r\nI'm using the \"cryptography\" library in my Django web app and facing 'Module Not Found Error: No Module named '_cffi_backend' in my server log. I've upgraded my Python version from Python3.6 to Python3.9 and using a virtual environment. I've uninstalled all related libraries (i.e. cryptography, cffi, paramiko and etc) and reinstalled them again but still facing the same error.\nThis error is happening after the below line in the terminal.\n```\nfrom cryptography.hazmat.bindings._padding import lib\n```\n\nBelow are my environment details\nRHEL7.9, Python3.9, Django-3.11, cryptography-3.3.1, cffi-1.15.1\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Module not found error no module named 'cryptography'\r\n                \r\nModulenotfounderror: no module named 'cryptography'\nModulenotfounderror: no module named 'cryptography'\n    ", "Answer": "\r\nPlease do try to uninstall and re-install cryptography from the command prompt using pip, sometimes a package might not be installed properly which can happen because of change in path, which is also to be verified after uninstalling.\n```\n    pip uninstall cryptography\n    pip install cryptography \n```\n\nMeanwhile you can also try to check all the libraries installed in python using:\n```\n    pip freeze\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pyca/cryptography and \"BestAvailableEncryption\"\r\n                \r\nI've been looking at the pyca cryptography documents on cryptography.io, but can't determine how the ```\nBestAvailableEncryption```\n determines which encryption to use.\nI recognize that it's using the underlying openssl implementation, so do I need to look at how openssl determines this? I'm not that clued up on openssl and it's inner workings.\nIs there a documented flow for this? Is there a python-esque way to determine what encryption ```\nBestAvailableEncryption```\n is being used?\nAlternatively, is there a way to determine what encryption is in the ```\npkcs12_best_encryption```\n object?\nThis is my sample code:\n```\npkcs12_best_encryption = serialization.pkcs12.serialize_key_and_certificates(\n    name=b\"My Certificate\",\n    key=private_key,\n    cert=certificate,\n    cas=None,\n    encryption_algorithm=serialization.BestAvailableEncryption(passphrase)\n)\n```\n\nAny guidance is most welcome.\nTIA\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing python cryptography inside venv, invalid command 'bdist_wheel'?\r\n                \r\nHi I've been trying to install cryptography into my venv, but my venv doesn't find ```\n'bdist_wheel'```\n. (Python3)\n\nI installed ```\nwheel```\n like so ```\npip install --user wheel```\n and tried to install cryptography ```\npip install --user cryptography```\n I get back this error ```\nerror: invalid command 'bdist_wheel'```\n during the setup.py script. I've also tried ```\npip install --upgrade setuptools```\n\n\nWhat am I missing? I've seen similar QAs in here but didn't seem to occur inside a venv.\n\n```\npip install --user cryptography\n\nCollecting cryptography\n  Using cached https://files.pythonhosted.org/packages/ec/b2/faa78c1ab928d2b2c634c8b41ff1181f0abdd9adf9193211bd606ffa57e2/cryptography-2.2.2.tar.gz\nCollecting idna>=2.1 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/27/cc/6dd9a3869f15c2edfab863b992838277279ce92663d334df9ecf5106f5c6/idna-2.6-py2.py3-none-any.whl\nCollecting asn1crypto>=0.21.0 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl\nCollecting six>=1.4.1 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/67/4b/141a581104b1f6397bfa78ac9d43d8ad29a7ca43ea90a2d863fe3056e86a/six-1.11.0-py2.py3-none-any.whl\nCollecting cffi>=1.7 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/59/cc/0e1635b4951021ef35f5c92b32c865ae605fac2a19d724fb6ff99d745c81/cffi-1.11.5-cp35-cp35m-manylinux1_x86_64.whl\nCollecting pycparser (from cffi>=1.7->cryptography)\nBuilding wheels for collected packages: cryptography\n  Running setup.py bdist_wheel for cryptography ... error\n  Complete output from command /usr/local/virtualenvs/profiles_api/profiles_api3/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-2sa4x5ab/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" bdist_wheel -d /tmp/tmplvmgp_y8pip-wheel- --python-tag cp35:\n\n  Installed /tmp/pip-build-2sa4x5ab/cryptography/.eggs/cffi-1.11.5-py3.5-linux-x86_64.egg\n  Searching for pycparser\n  Reading https://pypi.python.org/simple/pycparser/\n  Best match: pycparser 2.18\n  Downloading https://files.pythonhosted.org/packages/8c/2d/aad7f16146f4197a11f8e91fb81df177adcc2073d36a17b1491fd09df6ed/pycparser-2.18.tar.gz#sha256=99a8ca03e29851d96616ad0404b4aad7d9ee16f25c9f9708a11faf2810f7b226\n  Processing pycparser-2.18.tar.gz\n  Writing /tmp/easy_install-_vc_2z13/pycparser-2.18/setup.cfg\n  Running pycparser-2.18/setup.py -q bdist_egg --dist-dir /tmp/easy_install-_vc_2z13/pycparser-2.18/egg-dist-tmp-omz1wtad\n  warning: no previously-included files matching 'yacctab.*' found under directory 'tests'\n  warning: no previously-included files matching 'lextab.*' found under directory 'tests'\n  warning: no previously-included files matching 'yacctab.*' found under directory 'examples'\n  warning: no previously-included files matching 'lextab.*' found under directory 'examples'\n  zip_safe flag not set; analyzing archive contents...\n  pycparser.ply.__pycache__.lex.cpython-35: module references __file__\n  pycparser.ply.__pycache__.lex.cpython-35: module MAY be using inspect.getsourcefile\n  pycparser.ply.__pycache__.ygen.cpython-35: module references __file__\n  pycparser.ply.__pycache__.yacc.cpython-35: module references __file__\n  pycparser.ply.__pycache__.yacc.cpython-35: module MAY be using inspect.getsourcefile\n  pycparser.ply.__pycache__.yacc.cpython-35: module MAY be using inspect.stack\n  creating /tmp/pip-build-2sa4x5ab/cryptography/.eggs/pycparser-2.18-py3.5.egg\n  Extracting pycparser-2.18-py3.5.egg to /tmp/pip-build-2sa4x5ab/cryptography/.eggs\n\n  Installed /tmp/pip-build-2sa4x5ab/cryptography/.eggs/pycparser-2.18-py3.5.egg\n  /usr/lib/python3.5/distutils/dist.py:261: UserWarning: Unknown distribution option: 'python_requires'\n    warnings.warn(msg)\n  usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n     or: -c --help [cmd1 cmd2 ...]\n     or: -c --help-commands\n     or: -c cmd --help\n\n  error: invalid command 'bdist_wheel'\n\n  ----------------------------------------\n  Failed building wheel for cryptography\n  Running setup.py clean for cryptography\nFailed to build cryptography\nInstalling collected packages: idna, asn1crypto, six, pycparser, cffi, cryptography\n  Running setup.py install for cryptography ... done\nSuccessfully installed asn1crypto cffi cryptography idna pycparser six\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How To Start Learn Cryptography With C#?\r\n                \r\nI want to learn about Cryptography theory (basics) and I want to use the algorithms in c#.\nSo I need some guides , books , tutorials to get start.\n\nPlease help me. Thanks.\n    ", "Answer": "\r\nread Practical Cryptography by niels ferguson and bruce schneier.  You might also want to read Bruce's previous (older, but still very cool) book - Applied Cryptography.\n\nThey won't teach you everything you want to know - but it will dispel a lot of myths and teach you a lot of the theory and practise.\n\nThere's no code in them but the reason I've plumped for a language-independent answer is because after learning the different types of cryptography and how to use them, use of the primitives in C# is significantly easier.\n\nAfter that, in my opinion, the MSDN becomes the primary reference for how to use those primitives.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pip install cryptography -> error...failed with exit status 1120\r\n                \r\nI am trying to install the cryptography module for python yet I keep getting errors and so far I have been able to solve each one as they come including:\n\n\nerror: Unable to find vcvarsall.bat\nmysql-python install problem using virtualenv, windows, pip\nInstalling lxml for Python 3.4 on Windows x 86 (32 bit) with Visual Studio C++ 2010 Express\nFailing to run pip install cryptography on Windows 7\n\n\nHowever I have ran into an error that no matter how hard I look I find nothing so I decided I shall do what everyone else has done in the past and ask.\n\nWhat do I need to do to get the ```\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft\\\\Visual Studio\\\\14.0\\\\VC\\\\BIN\\\\amd64\\\\link.exe' failed with exit status 1120```\n error to go away so I can install the cryptographic module.\n\nP.S. Yes I have tried ```\neasy_install```\n\n\n\n\nSystem Info\n\n\nWindows 7 Home Premium - Service Pack 1 - 64-bit - AMD64x\nPython 3.5.0a4\n\n\n\n\nSetting up the environment\n\n```\n\"C:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\Common7\\Tools\\vsvars32.bat\"\nset INCLUDE=C:\\ProgramData\\Runtime\\OpenSSL\\include;%INCLUDE%\nset LIB=C:\\ProgramData\\Runtime\\OpenSSL\\lib;C:\\ProgramData\\Runtime\\OpenSSL\\lib\\VC\\static;%LIB%\n```\n\n\n\n\nChecking the path\n\n```\nC:\\PROGRA~1\\Calibre2\nC:\\PROGRA~1\\MICROS~1\\120\\Tools\\Binn\\\nC:\\PROGRA~1\\MICROS~2\\Dnvm\\\nC:\\PROGRA~2\\GNU\\GnuPG\\pub\nC:\\PROGRA~2\\WI3CF2~1\\8.1\\WINDOW~1\\\nC:\\PROGRA~3\\Oracle\\Java\\javapath\nC:\\PROGRA~3\\Runtime\\JAVASC~1\\nodejs\nC:\\PROGRA~3\\Runtime\\Perl\\STRAWB~1\\c\\bin\nC:\\PROGRA~3\\Runtime\\Perl\\STRAWB~1\\perl\\bin\nC:\\PROGRA~3\\Runtime\\Python\\\nC:\\PROGRA~3\\Runtime\\Python\\Scripts\\\nC:\\PROGRA~3\\Runtime\\libxml2\\bin\nC:\\PROGRA~3\\Runtime\\libxslt\\bin\nC:\\Program Files (x86)\\HTML Help Workshop\nC:\\Program Files (x86)\\MSBuild\\14.0\\bin\nC:\\Program Files (x86)\\Microsoft SDKs\\F#\\4.0\\Framework\\v4.0\\\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v8.1A\\bin\\NETFX 4.5.1 Tools\\\nC:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\Common7\\IDE\\\nC:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\nC:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\Common7\\Tools\nC:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\Team Tools\\Performance Tools\nC:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\VC\\BIN\nC:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\VC\\VCPackages\nC:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86\nC:\\ProgramData\\Runtime\\Gradle\\bin\nC:\\ProgramData\\Runtime\\Lua\\bin\nC:\\ProgramData\\Runtime\\OpenSSL/bin\nC:\\Users\\Brandon\\.dnx\\bin\nC:\\Users\\Brandon\\AppData\\Local\\Android\\sdk\\platform-tools\nC:\\Windows\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\nC:\\Windows\\System32\\Wbem\nC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\\nC:\\Windows\\system32\nS:\\xampp\\php\n```\n\n\n\n\npip install cryptography\n\n```\nCollecting cryptography\n  Using cached cryptography-0.8.2.tar.gz\nRequirement already satisfied (use --upgrade to upgrade): pyasn1 in c:\\programdata\\runtime\\python\\lib\\site-packages (from cryptography)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.4.1 in c:\\programdata\\runtime\\python\\lib\\site-packages (from cryptography)\nRequirement already satisfied (use --upgrade to upgrade): setuptools in c:\\programdata\\runtime\\python\\lib\\site-packages (from cryptography)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=0.8 in c:\\programdata\\runtime\\python\\lib\\site-packages (from cryptography)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in c:\\programdata\\runtime\\python\\lib\\site-packages (from cffi>=0.8->cryptography)\nInstalling collected packages: cryptography\n  Running setup.py install for cryptography\n    Complete output from command C:\\ProgramData\\Runtime\\Python\\python.exe -c \"import setuptools, tokenize;__file__='S:\\\\Temp\\\\Local\\\\pip-build-j3dfyfa3\\\\cryptography\\\\setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record S:\\Temp\\Local\\pip-igpv1y8a-record\\install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build\\lib.win-amd64-3.5\n    creating build\\lib.win-amd64-3.5\\cryptography\n    copying src\\cryptography\\exceptions.py -> build\\lib.win-amd64-3.5\\cryptography\n    copying src\\cryptography\\fernet.py -> build\\lib.win-amd64-3.5\\cryptography\n    copying src\\cryptography\\utils.py -> build\\lib.win-amd64-3.5\\cryptography\n    copying src\\cryptography\\x509.py -> build\\lib.win-amd64-3.5\\cryptography\n    copying src\\cryptography\\__about__.py -> build\\lib.win-amd64-3.5\\cryptography\n    copying src\\cryptography\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\n    copying src\\cryptography\\hazmat\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\n    copying src\\cryptography\\hazmat\\backends\\interfaces.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\n    copying src\\cryptography\\hazmat\\backends\\multibackend.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\n    copying src\\cryptography\\hazmat\\backends\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\n    copying src\\cryptography\\hazmat\\bindings\\utils.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\n    copying src\\cryptography\\hazmat\\bindings\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    copying src\\cryptography\\hazmat\\primitives\\cmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    copying src\\cryptography\\hazmat\\primitives\\constant_time.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    copying src\\cryptography\\hazmat\\primitives\\hashes.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    copying src\\cryptography\\hazmat\\primitives\\hmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    copying src\\cryptography\\hazmat\\primitives\\padding.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    copying src\\cryptography\\hazmat\\primitives\\serialization.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    copying src\\cryptography\\hazmat\\primitives\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\commoncrypto\n    copying src\\cryptography\\hazmat\\backends\\commoncrypto\\backend.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\commoncrypto\n    copying src\\cryptography\\hazmat\\backends\\commoncrypto\\ciphers.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\commoncrypto\n    copying src\\cryptography\\hazmat\\backends\\commoncrypto\\hashes.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\commoncrypto\n    copying src\\cryptography\\hazmat\\backends\\commoncrypto\\hmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\commoncrypto\n    copying src\\cryptography\\hazmat\\backends\\commoncrypto\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\commoncrypto\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\backend.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\ciphers.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\cmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\dsa.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\ec.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\hashes.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\hmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\rsa.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\utils.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\x509.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    copying src\\cryptography\\hazmat\\backends\\openssl\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\backends\\openssl\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\binding.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\cf.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\common_cryptor.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\common_digest.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\common_hmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\common_key_derivation.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\secimport.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\secitem.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\seckey.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\seckeychain.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\sectransform.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    copying src\\cryptography\\hazmat\\bindings\\commoncrypto\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\commoncrypto\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\aes.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\asn1.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\bignum.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\binding.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\bio.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\cmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\cms.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\conf.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\crypto.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\dh.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\dsa.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\ec.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\ecdh.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\ecdsa.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\engine.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\err.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\evp.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\hmac.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\nid.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\objects.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\opensslv.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\osrandom_engine.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\pem.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\pkcs12.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\pkcs7.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\rand.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\rsa.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\ssl.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\x509.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\x509name.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\x509v3.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\x509_vfy.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    copying src\\cryptography\\hazmat\\bindings\\openssl\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\openssl\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    copying src\\cryptography\\hazmat\\primitives\\asymmetric\\dh.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    copying src\\cryptography\\hazmat\\primitives\\asymmetric\\dsa.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    copying src\\cryptography\\hazmat\\primitives\\asymmetric\\ec.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    copying src\\cryptography\\hazmat\\primitives\\asymmetric\\padding.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    copying src\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    copying src\\cryptography\\hazmat\\primitives\\asymmetric\\utils.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    copying src\\cryptography\\hazmat\\primitives\\asymmetric\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\asymmetric\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\ciphers\n    copying src\\cryptography\\hazmat\\primitives\\ciphers\\algorithms.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\ciphers\n    copying src\\cryptography\\hazmat\\primitives\\ciphers\\base.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\ciphers\n    copying src\\cryptography\\hazmat\\primitives\\ciphers\\modes.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\ciphers\n    copying src\\cryptography\\hazmat\\primitives\\ciphers\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\ciphers\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\interfaces\n    copying src\\cryptography\\hazmat\\primitives\\interfaces\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\interfaces\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\kdf\n    copying src\\cryptography\\hazmat\\primitives\\kdf\\hkdf.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\kdf\n    copying src\\cryptography\\hazmat\\primitives\\kdf\\pbkdf2.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\kdf\n    copying src\\cryptography\\hazmat\\primitives\\kdf\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\kdf\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\twofactor\n    copying src\\cryptography\\hazmat\\primitives\\twofactor\\hotp.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\twofactor\n    copying src\\cryptography\\hazmat\\primitives\\twofactor\\totp.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\twofactor\n    copying src\\cryptography\\hazmat\\primitives\\twofactor\\__init__.py -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\twofactor\n    running egg_info\n    writing entry points to src\\cryptography.egg-info\\entry_points.txt\n    writing top-level names to src\\cryptography.egg-info\\top_level.txt\n    writing requirements to src\\cryptography.egg-info\\requires.txt\n    writing dependency_links to src\\cryptography.egg-info\\dependency_links.txt\n    writing src\\cryptography.egg-info\\PKG-INFO\n\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    no previously-included directories found matching 'docs\\_build'\n    warning: no previously-included files matching '*' found under directory 'vectors'\n    writing manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\__pycache__\n    copying src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_15f8accfx62b488b1.c -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\__pycache__\n    copying src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.c -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\__pycache__\n    copying src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_c4c16865xffc7b1ce.c -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\bindings\\__pycache__\n    creating build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\src\n    copying src\\cryptography\\hazmat\\primitives\\src\\constant_time.c -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\src\n    copying src\\cryptography\\hazmat\\primitives\\src\\constant_time.h -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\src\n    copying src\\cryptography\\hazmat\\primitives\\src\\padding.c -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\src\n    copying src\\cryptography\\hazmat\\primitives\\src\\padding.h -> build\\lib.win-amd64-3.5\\cryptography\\hazmat\\primitives\\src\n    running build_ext\n\n    building '_Cryptography_cffi_89292e72x399b1113' extension\n    creating build\\temp.win-amd64-3.5\n    creating build\\temp.win-amd64-3.5\\Release\n    creating build\\temp.win-amd64-3.5\\Release\\src\n    creating build\\temp.win-amd64-3.5\\Release\\src\\cryptography\n    creating build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\n    creating build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\n    creating build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\\__pycache__\n\n    C:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\VC\\BIN\\amd64\\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\\ProgramData\\Runtime\\Python\\include -IC:\\ProgramData\\Runtime\\Python\\include /Tcsrc\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.c /Fobuild\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.obj\n    _Cryptography_cffi_89292e72x399b1113.c\n    src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.c(2539): warning C4048: different array subscripts: 'unsigned char (*)[0]' and 'unsigned char (*)[32]'\n    src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.c(2540): warning C4048: different array subscripts: 'unsigned char (*)[0]' and 'unsigned char (*)[32]'\n    src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.c(2567): warning C4048: different array subscripts: 'unsigned char (*)[0]' and 'unsigned char (*)[48]'\n    C:\\Program Files (x86)\\Microsoft\\Visual Studio\\14.0\\VC\\BIN\\amd64\\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\\ProgramData\\Runtime\\Python\\libs /LIBPATH:C:\\ProgramData\\Runtime\\Python\\PCbuild\\amd64 libeay32mt.lib ssleay32mt.lib advapi32.lib crypt32.lib gdi32.lib user32.lib ws2_32.lib /EXPORT:PyInit__Cryptography_cffi_89292e72x399b1113 build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.obj /OUT:build\\lib.win-amd64-3.5\\cryptography\\_Cryptography_cffi_89292e72x399b1113.cp35-win_amd64.pyd /IMPLIB:build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.cp35-win_amd64.lib /MANIFESTFILE:build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.cp35-win_amd64.pyd.manifest_Cryptography_cffi_89292e72x399b1113.obj : warning LNK4197: export 'PyInit__Cryptography_cffi_89292e72x399b1113' specified multiple times; using first specification\n        Creating library build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.cp35-win_amd64.lib and object build\\temp.win-amd64-3.5\\Release\\src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_89292e72x399b1113.cp35-win_amd64.exp\n        libeay32mt.lib(cryptlib.obj) : error LNK2019: unresolved external symbol sscanf referenced in function OPENSSL_cpuid_setup\n        libeay32mt.lib(v3_utl.obj) : error LNK2001: unresolved external symbol sscanf\n        libeay32mt.lib(cryptlib.obj) : error LNK2019: unresolved external symbol _vsnwprintf referenced in function OPENSSL_showfatal\n        libeay32mt.lib(cryptlib.obj) : error LNK2019: unresolved external symbol _vsnprintf referenced in function OPENSSL_showfatal\n        ssleay32mt.lib(t1_enc.obj) : error LNK2001: unresolved external symbol __iob_func\n        libeay32mt.lib(txt_db.obj) : error LNK2001: unresolved external symbol __iob_func\n        libeay32mt.lib(gost_eng.obj) : error LNK2001: unresolved external symbol __iob_func\n        libeay32mt.lib(ui_openssl.obj) : error LNK2001: unresolved external symbol __iob_func\n        ssleay32mt.lib(s3_srvr.obj) : error LNK2001: unresolved external symbol __iob_func\n        ssleay32mt.lib(d1_both.obj) : error LNK2001: unresolved external symbol __iob_func\n        libeay32mt.lib(cryptlib.obj) : error LNK2001: unresolved external symbol __iob_func\n        libeay32mt.lib(eng_openssl.obj) : error LNK2001: unresolved external symbol __iob_func\n        libeay32mt.lib(pem_lib.obj) : error LNK2001: unresolved external symbol __iob_func\n        libeay32mt.lib(e_capi.obj) : error LNK2001: unresolved external symbol __iob_func\n        ssleay32mt.lib(s3_srvr.obj) : error LNK2019: unresolved external symbol fprintf referenced in function ssl3_accept\n        ssleay32mt.lib(d1_both.obj) : error LNK2001: unresolved external symbol fprintf\n        ssleay32mt.lib(t1_enc.obj) : error LNK2001: unresolved external symbol fprintf\n        libeay32mt.lib(txt_db.obj) : error LNK2001: unresolved external symbol fprintf\n        libeay32mt.lib(eng_openssl.obj) : error LNK2001: unresolved external symbol fprintf\n        libeay32mt.lib(pem_lib.obj) : error LNK2001: unresolved external symbol fprintf\n        libeay32mt.lib(gost_eng.obj) : error LNK2001: unresolved external symbol fprintf\n        libeay32mt.lib(ui_openssl.obj) : error LNK2001: unresolved external symbol fprintf\n        libeay32mt.lib(gost_eng.obj) : error LNK2019: unresolved external symbol printf referenced in function bind_gost\n        libeay32mt.lib(pqueue.obj) : error LNK2001: unresolved external symbol printf\n        libeay32mt.lib(e_cswift.obj) : error LNK2019: unresolved external symbol sprintf referenced in function cswift_mod_exp\n        libeay32mt.lib(dso_win32.obj) : error LNK2001: unresolved external symbol sprintf\n        build\\lib.win-amd64-3.5\\cryptography\\_Cryptography_cffi_89292e72x399b1113.cp35-win_amd64.pyd : fatal error LNK1120: 7 unresolved externals\n\n    error: command 'C:\\\\Program Files (x86)\\\\Microsoft\\\\Visual Studio\\\\14.0\\\\VC\\\\BIN\\\\amd64\\\\link.exe' failed with exit status 1120\n\n    ----------------------------------------\n    Command \"C:\\ProgramData\\Runtime\\Python\\python.exe -c \"import setuptools, tokenize;__file__='S:\\\\Temp\\\\Local\\\\pip-build-j3dfyfa3\\\\cryptography\\\\setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record S:\\Temp\\Local\\pip-igpv1y8a-record\\install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in S:\\Temp\\Local\\pip-build-j3dfyfa3\\cryptography\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to fix this error when trying to install Django channels/cryptography? \"Failed to build cryptography\"\r\n                \r\nI have seen a couple threads for this question already, however None of the solutions have worked for me. I am trying to create a simple chat app using Python and Django, and one of the first steps I have seen in every tutorial is to install channels (which includes cryptography). However, every time I try to install them, the installer gets to cryptography, then gives me a huge error (error code attached)\nWHAT I HAVE TRIED\n-> Over 5 or 6 different stack overflow posts asking the same (or a very similar question), none of their solutions worked for me\n-> Upgrade Pip\n-> Downgrade pip/python (from the latest versions)\n-> Manually install cryptography (using OpenSSL)\n-> Uninstalling EVERYTHING python related off of my machine, then clean installing\n-> Working in a virtual environment\n-> Not working in a virtual environment\n-> Messing around with some environment variables (i.e. changing around the order of paths for python)\n-> Trying different commands to install channels and cryptography (eg.\n\npip install channels\npip3 install channels\npython -m pip install -U channels\npython3 -m pip install -U channels\n\nNOTE: I am quite new to all of this (Python, django, channels, environment variables, etc...) so I apologize if I am unable to explain everything properly.\n--------------Error Message Below-----------------\n```\n  Using cached cryptography-37.0.4.tar.gz (585 kB)\n  Installing build dependencies ... error\n  error: subprocess-exited-with-error\n  \n  × pip subprocess to install build dependencies did not run successfully.\n  │ exit code: 1\n  ╰─> [42 lines of output]\n      Collecting setuptools!=60.9.0,>=40.6.0\n        Downloading setuptools-64.0.3-py3-none-any.whl (1.2 MB)\n           ---------------------------------------- 1.2/1.2 MB 11.4 MB/s eta 0:00:00\n      Collecting wheel\n        Using cached wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n      Collecting cffi>=1.12\n        Using cached cffi-1.15.1.tar.gz (508 kB)\n        Preparing metadata (setup.py): started\n        Preparing metadata (setup.py): finished with status 'error'\n        error: subprocess-exited-with-error\n\n        python setup.py egg_info did not run successfully.\n        exit code: 1\n\n        [16 lines of output]\n        Traceback (most recent call last):\n          File \"<string>\", line 2, in <module>\n          File \"<pip-setuptools-caller>\", line 34, in <module>\n          File \"C:\\Users\\avijo\\AppData\\Local\\Temp\\pip-install-36jculgl\\cffi_261fdf0c61334d77971826ea36706558\\setup.py\", line 126, in <module>\n            if sys.platform == \"win32\" and uses_msvc():\n          File \"C:\\Users\\avijo\\AppData\\Local\\Temp\\pip-install-36jculgl\\cffi_261fdf0c61334d77971826ea36706558\\setup.py\", line 105, in uses_msvc\n            return config.try_compile('#ifndef _MSC_VER\\n#error \"not MSVC\"\\n#endif')\n          File \"C:\\msys64\\mingw64\\lib\\python3.9\\site-packages\\setuptools\\_distutils\\command\\config.py\", line 224, in try_compile\n            self._compile(body, headers, include_dirs, lang)\n          File \"C:\\msys64\\mingw64\\lib\\python3.9\\site-packages\\setuptools\\_distutils\\command\\config.py\", line 129, in _compile\n            self.compiler.compile([src], include_dirs=include_dirs)\n          File \"C:\\msys64\\mingw64\\lib\\python3.9\\site-packages\\setuptools\\_distutils\\_msvccompiler.py\", line 366, in compile\n            self.initialize()\n          File \"C:\\msys64\\mingw64\\lib\\python3.9\\site-packages\\setuptools\\_distutils\\_msvccompiler.py\", line 246, in initialize\n            raise DistutilsPlatformError(\n        distutils.errors.DistutilsPlatformError: --plat-name must be one of ('win32', 'win-amd64', 'win-arm32', 'win-arm64')\n        [end of output]\n\n        note: This error originates from a subprocess, and is likely not a problem with pip.\n      error: metadata-generation-failed\n\n      Encountered error while generating package metadata.\n\n      See above for output.\n\n      note: This is an issue with the package mentioned above, not pip.\n      hint: See above for details.\n      [end of output]\n\n  note: This error originates from a subprocess, and is likely not a problem with pip.\nerror: subprocess-exited-with-error\n\n× pip subprocess to install build dependencies did not run successfully.\n│ exit code: 1\n╰─> See above for output.\n\nnote: This error originates from a subprocess, and is likely not a problem with pip.\n```\n\nSnippet 1 of error message\nSnippet 2 of error message\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "error installing cryptography on centos\r\n                \r\nwhen I try to install Cryptography I have this error\n\n```\n/usr/local/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distributio\nn option: 'zip_safe'\n  warnings.warn(msg)\n/usr/local/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distributio\n\n    if not self.distribution.include_package_data:\nAttributeError: Distribution instance has no attribute 'include_package_data'\n```\n\n\nI try to install it from pip & easy_install and same error\n\nhow can I fix it?\n\nthx.\n    ", "Answer": "\r\nI would first try getting rid of that first warning.\n\nAs said SO question: Distribute has been merged into Setuptools as of version 0.7. If you are using a version <=0.6, upgrade using \n\n\n  ```\npip install --upgrade setuptools```\n\n\n\nor \n\n\n  ```\neasy_install -U setuptools```\n\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography export key to DER\r\n                \r\nIn the past when using PyCrypto I was able to do the following to generate a fingerprint of a RSA public key:\n\n```\nrsa_cipher = PKCS1_v1_5.new(RSA.importKey(pub_rsa_key))\nhashlib.sha1(rsa_cipher._key.exportKey(\"DER\")).hexdigest()\n```\n\n\nHow can I achieve the same without PyCrypto? \n\n\n\nEDIT\n\nWhat I provide in ```\npub_rsa_key```\n is a content of a ```\n.perm```\n file, i.e.:\n\n```\n-----BEGIN PUBLIC KEY-----\nMII...AB\n-----END PUBLIC KEY-----\n```\n\n\nPyCrypto is deemed unsafe and is not maintained anymore so I switched to Python's Cryptography but it seems that it does not have an adequate feature.\n\n\nIs there similar functionality that I missed in the Pythons Cryptography API?  \nIs PyCryptoDome possible is a worthy (stable and safe) replacement for PyCrypto to use to implement this functionality?\nIf none of the above is it possible to export that key in a DER format by a self written function?\n\n\nAny documentation or search terms to perform the export would be helpful.\n\n\n\nEDIT 2\nMaarten Bodewes' comments (thank you) took me to a place that seems to be the thing I was looking for. But the results of the DER export differ:  \n\n```\n# Python 3.7 using Cryptography\nfrom cryptography.hazmat.primitives import serialization\n\nwith open('pub_key.perm', 'rb') as key_file: \n    public_key = serialization.load_pem_public_key(key_file.read(), backend=default_backend())\n\npub_der = public_key.public_bytes(encoding=serialization.Encoding.DER, format=serialization.PublicFormat.PKCS1)\n\nprint(sha1(pub_der).hexdigest())\n# gives \"d291c142648b7........c2f4676f4213203c4bd\"\n```\n\n\nwhere\n\n```\n# Python 2.7 using PyCrypto\nfrom Crypto.Cipher import PKCS1_v1_5\nfrom Crypto.PublicKey import RSA\n\nwith open('pub_key.perm', 'r') as key_file:\n    public_key = RSA.importKey(key_file.read())\n\npub_der = public_key.exportKey('DER')  # this assumes PKCS1 by default per the __doc__\n\nprint(sha1(pub_der).hexdigest())\n# gives \"bb070664079f5........64c97fcadbad847cce9\"\n```\n\n\nThis is an effort to move from Py2 to Py3 - please notice that the two examples use different Python versions. Could encoding be an issue here?\n    ", "Answer": "\r\nTo answer my question (which was resolved with the help provided in the comments, thanks again).\n\nTo achieve what I was able to do with PyCrypto:\n\n```\n# Python 2.7 using PyCrypto\nfrom Crypto.Cipher import PKCS1_v1_5\nfrom Crypto.PublicKey import RSA\n\nwith open('pub_key.perm', 'r') as key_file:\n    public_key = RSA.importKey(key_file.read())\n\npub_der = public_key.exportKey('DER')  # this assumes PKCS1 by default per the __doc__\n\nprint(sha1(pub_der).hexdigest())\n# gives \"bb070664079f5........64c97fcadbad847cce9\"\n```\n\n\nwith Cryptography, one can do the following:\n\n```\n# Python 3.7 using Cryptography\nfrom cryptography.hazmat.primitives import serialization\n\nwith open('pub_key.perm', 'rb') as key_file: \n    public_key = serialization.load_pem_public_key(key_file.read(), backend=default_backend())\n\npub_der = public_key.public_bytes(\n    encoding=serialization.Encoding.DER,\n    format=serialization.PublicFormat.SubjectPublicKeyInfo,\n)\n\nprint(sha1(pub_der).hexdigest())\n# gives \"bb070664079f5........64c97fcadbad847cce9\"\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "neural cryptography in C# [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                It's difficult to tell what is being asked here. This question is ambiguous, vague, incomplete, overly broad, or rhetorical and  cannot be reasonably answered in its current form. For help clarifying this question so that it can be reopened,  visit the help center.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 12 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nHello Dears\nI'm developing a communication protocol to secure data transfer \nover a tcp network.\nI want to use neural networks to e change the keys.\nI found a protocol specification in wikipedia :\nhttp://en.wikipedia.org/wiki/Neural_cryptography#Tree_parity_machine\nand an implementation in Delphi :\nhttp://www.codeproject.com/KB/security/Neural_Cryptography1.aspx\nand recently A new project in F# :\nhttp://neuralcryptography.codeplex.com\nI tried to implement it n C#\nusing aforge But I think it does not have some necessary features to implement a neural cryptography protocol\nCan you help me to implement it in C#?\nThanks\n    ", "Answer": "\r\nNeural Cryptography (as in the links you posted) is crypto-analysis - using genetic algorithms rather than brute force to search a key space.  It seems to be the reverse of what you are wanting to build.\n\nAdditionally, to quote your wikipedia article:\n\n\n  As of yet there no practical applications\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Testing a implemented algorithm in cryptography\r\n                \r\nI have implemented a cryptography algorithm using my own code using ```\nC#.net```\n,\n\ni need to test this implemented algorithm for its accuracy and execution time ..\n\nis there a standard way which i can test these algorithm for its accuracy and execution time?\n\nthis algo is implemented as class in ```\nC#.net```\n\n    ", "Answer": "\r\nThere are two obvious ways, and you should do both. Test it against a respected existing implementation, and test it using known good test vectors such as the known answer tests (KAT) supplied by the U.S. NIST for algorithms in their standards. Most algorithms in the IETF RFCs also have test values.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to use cryptography in Java?\r\n                \r\nI need to protect a sequence of bytes with cryptography and I will need to recover the data later.\nI want to use a key/password to encrypt and decrypt the data.\n\nI am using Java. How do I encrypt and decrypt a string with a key or password in Java?\n\nThanks.\n\nEdit: The method cannot be slow.\n    ", "Answer": "\r\nI hope this helps you get a general idea. This one is Symmetric cryptography.  \n\n```\nimport java.security.*;\nimport java.security.cert.*;\nimport java.security.interfaces.*;\nimport java.security.spec.*;\nimport javax.crypto.*;\nimport javax.crypto.interfaces.*;\nimport javax.crypto.spec.*;\nimport java.io.*;\n/**\n *  AES\n */\npublic class SymmetricAES {\n\n    public SymmetricAES() {\n    }\n\n    public static void main(String args[]){\n        BufferedReader ch = new BufferedReader(new InputStreamReader(System.in));\n        char[] toCode;\n        byte[] toCode2;\n        byte[] Coded;\n        char[] Coded2;\n        byte[] decoded;\n        char[] deco2;\n\n        try{\n            System.out.print(\"Text to Encrypt : \");\n            String toMake = ch.readLine();\n\n            /** Arxikopoihsh antikeimenou KeyGenerator gia AES\n             *  kai dhmhourgia Kleidioy */\n            KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n            SecretKey aesKey = keyGen.generateKey();\n\n            /* Arxikopoihsh aesCipher gia AES */\n            Cipher aesCipher = Cipher.getInstance(\"AES\");\n\n            /* Orismos aesCipher se ENCRYPT_MODE me to aesKey */\n            aesCipher.init(Cipher.ENCRYPT_MODE, aesKey);\n            System.out.println(\"The Key : \" + aesKey.getEncoded());\n\n            /* Metatroph antikeimenou String se pinaka Char\n             * kai o ka8e xarakthras gineta Cast se Byte kai eisagwgh\n             * se pinaka Byte isou mege8ous me ton prwto pinaka */\n            toCode = toMake.toCharArray();\n            toCode2 = new byte[toCode.length];\n            Coded = new byte[toCode.length];\n            for(int i=0;i<toCode.length;i++)\n                toCode2[i] = (byte)toCode[i];\n\n            /* Teliko stadio Kryptografhshs */\n            Coded = aesCipher.doFinal(toCode2);\n\n            /* byte[] --> char[] kai ektypwsh*/\n            Coded2 = new char[Coded.length];\n            for(int i=0;i<Coded.length;i++)\n                Coded2[i] = (char)Coded[i];\n            System.out.println(\"Test Encrypt: \" + new String(Coded2));\n\n\n            Cipher aesCipher2 = Cipher.getInstance(\"AES\");\n\n            /* Orismos aesCipher2 se DECRYPT_MODE me to aesKey */\n            aesCipher2.init(Cipher.DECRYPT_MODE, aesKey);\n\n            decoded = aesCipher2.doFinal(Coded);\n\n            /* byte[] --> char[] kai ektypwsh*/\n            deco2 = new char[decoded.length];\n            for(int i=0;i<decoded.length;i++)\n                deco2[i] = (char)decoded[i];\n            System.out.println(\"Test Decrypt: \" + new String(deco2));\n        }\n        catch(Exception e){\n            System.out.println(e);\n        }   \n    }\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing \"cryptography\" on Python 3.9.0a5 (error)\r\n                \r\njust updated Python from 3.8.2 to 3.9.0a5 due to the merge operator for dictionaries.\nWhen I now try to install \"cryptography\" in my virtual environment, I get the following error:\n\ncryptography install error\n\nPip Version is: 20.1.1,\nPython Version is: 3.9.0a5\n    ", "Answer": "\r\nThis package does not publish a wheel (precompiled) version for python 3.9 only up to 3.8\n\nhttps://pypi.org/project/cryptography/2.9.2/#files\n\nso this means that you will need to install the headers into your computer's build environment so that python can compile with openssl from source (on some linux systems that will be as simple as installing a package with the openssl headers and library, on windows you may also need to install a c compiler)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography in .NET with HSM without PKCS11\r\n                \r\nI am developing an application performing cryptographic operation (for customer demonstration purposes) using a HSM in .NET  3.5 without PKCS#11, in c# (Cryptography namespace)\n\n\nI have found the algorithms supported by the HSM's CSP (with ```\ncertutil -csp \"HSM's CSP Provider name found in regedit\" -csptest```\n), and some of them don't have a CryptoServiceProvider in the ```\nCryptography namespace```\n (RC2, RC4, DESX symmetric algo; MD4, MD2, AES-GMAC hash algo), but they are listed as supported in MS Documentation : https://msdn.microsoft.com/en-us/library/windows/desktop/bb931354(v=vs.85).aspx . Would anyone have an idea about how to be able to use on of these to perform operations ? In other words, is it possible to choose an algorithm which doesn't have a special CSP classe ?\nI have a similar problem with random number generation. My HSM supports these RNG algorithm : RNG, FIPS186DSARNG, DUALECRNG (found the same way as the algo in 1.) Is there a way to generate random number with a specified algorithm in C# ?\nI finally would like to save generated symmetric key directly on the HSM, but the Cryptography namespace only has KeyContainers for asymmetric keys.\n\n\nThank you in advance for anyone having an idea on any of these problems !\nEdit : Added the version of .NET framework, 3.5\n    ", "Answer": "\r\nPKCS#11 interface is superior when compared to CSP interface which for example does not support persistence of symmetric keys. There were some improvements in .NET 4.6.2 cryptography classes but they are all CNG related.\n\nMy advice: Use PKCS#11 if you need anything else than RSA.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "convert cryptography vb.net to c#\r\n                \r\nI have a Cryptography class in Vb.net that works fine, but i need convert in c# code.\nMy Vb.net method is this:\n\n```\n   Public Shared Function CryptSenha(ByVal strCdSenha As String) As String\n\n\n        Dim Chave As String\n\n        Const MIN_ASC = 48\n        Const MAX_ASC = 126\n        Const NUM_ASC = MAX_ASC - MIN_ASC + 1\n\n        Chave = 2001 \n\n        Dim offset As Long\n        Dim str_len As Integer\n        Dim i As Integer\n        Dim ch As Integer\n        Dim to_text As String\n\n        Try\n            to_text = \"\"\n            offset = NumericPassword(Chave)\n            Rnd(-1)\n            Randomize(offset)\n            str_len = Len(strCdSenha)\n\n            For i = 1 To str_len 'Faça 1 até str_len\n                ch = Asc(Mid$(strCdSenha, i, 1))\n\n                'Início do If\n                If ch >= MIN_ASC And ch <= MAX_ASC Then\n                    ch = ch - MIN_ASC\n                    offset = Int((NUM_ASC + 1) * Rnd())\n                    ch = ((ch + offset) Mod NUM_ASC)\n                    ch = ch + MIN_ASC\n                    to_text = to_text & Chr(ch)\n                End If\n\n            Next i\n            Return to_text\n        Catch ex As Exception\n            Throw ex\n        End Try\n    End Function\n```\n\n\nAnd my C# code is this:\n\n```\n public static string CryptSenha(string strCdSenha)\n    {\n    string Chave = null;\n\n    const int MIN_ASC = 48;\n    const int MAX_ASC = 126;\n    const int NUM_ASC = MAX_ASC - MIN_ASC + 1;\n\n    Chave = \"2001\";\n    long offset = 0;\n    int str_len = 0;\n    int i = 0;\n    int ch = 0;\n    string to_text = null;\n\n    try\n    {\n        to_text = \"\";\n        offset = NumericPassword(Chave);\n        VBMath.Rnd(-1);\n        VBMath.Randomize(offset);\n        str_len = Strings.Len(strCdSenha);\n\n        for (i = 1; i <= str_len; i++)\n        {\n            ch = Strings.Asc(Strings.Mid(strCdSenha, i, 1));\n\n            if (ch >= MIN_ASC & ch <= MAX_ASC)\n            {\n                ch = ch - MIN_ASC;\n                offset = Convert.ToInt64((NUM_ASC + 1) * VBMath.Rnd());\n                ch = Convert.ToInt16((ch + offset) % NUM_ASC);\n                ch = ch + MIN_ASC;\n                to_text = to_text + Strings.Chr(ch);\n            }\n        }\n\n        return to_text;\n}\ncatch (Exception ex)\n{\n    throw ex;\n}\n```\n\n\n}\n\nSo when I used my function in vb.net a simple word like 'Igor' is equals \"iLCA\"\n\nand in function c# the word 'Igor' is equals \"iLDB\", I guess that a convertion \n\nin this line in c# code:\n\n```\noffset = Convert.ToInt64((NUM_ASC + 1) * VBMath.Rnd());\n```\n\n\nSomeone can Help me?\n    ", "Answer": "\r\nYour conversion of 'Int' is incorrect - 'Int' truncates. Replace the following 2 lines of code:\n\n```\noffset = Convert.ToInt32(Math.Floor(Convert.ToDouble((NUM_ASC + 1) * VBMath.Rnd())));\nch = (int)((ch + offset) % NUM_ASC);\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Why Installation of Cryptography python package is failing?\r\n                \r\nI am trying to install a package Cryptography in Python but each time I try it's failing with error.Command I used to install this package is: pip install cryptography==2.8 Error I'm getting is as follows:\n```\nCollecting cryptography==2.8\nUsing cached cryptography-2.8.tar.gz (504 kB)\nInstalling build dependencies ... done\nGetting requirements to build wheel ... done\nPreparing wheel metadata ... done\nRequirement already satisfied: cffi!=1.11.3,>=1.8 in c:\\users\\abcd\\appdata\\local\\programs\\python\\python39\\lib\\site-packages (from cryptography==2.8) (1.14.5)\nRequirement already satisfied: six>=1.4.1 in c:\\users\\abcd\\appdata\\local\\programs\\python\\python39\\lib\\site-packages (from cryptography==2.8) (1.15.0)\nRequirement already satisfied: pycparser in c:\\users\\abcd\\appdata\\local\\programs\\python\\python39\\lib\\site-packages (from cffi!=1.11.3,>=1.8->cryptography==2.8) (2.20) \nBuilding wheels for collected packages: cryptography\nBuilding wheel for cryptography (PEP 517) ... error\nERROR: Command errored out with exit status 1:\ncommand: 'c:\\users\\abcd\\appdata\\local\\programs\\python\\python39\\python.exe' 'c:\\users\\abcd\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\pip\\_vendor\\pep517\\_in_process.py' build_wheel 'C:\\Users\\abcd\\AppData\\Local\\Temp\\tmply9tk3q1'\ncwd: C:\\Users\\abcd\\AppData\\Local\\Temp\\pip-install-hespmf8p\\cryptography_59cf671691e246028ecf9a6a37f5e88c\nComplete output (137 lines):\nrunning bdist_wheel\nrunning build\nrunning build_py\ncreating build\ncreating build\\lib.win-amd64-3.9\ncreating build\\lib.win-amd64-3.9\\cryptography\ncopying src\\cryptography\\exceptions.py -> build\\lib.win-amd64-3.9\\cryptography\ncopying src\\cryptography\\fernet.py -> build\\lib.win-amd64-3.9\\cryptography\ncopying src\\cryptography\\utils.py -> build\\lib.win-amd64-3.9\\cryptography\ncopying src\\cryptography\\__about__.py -> build\\lib.win-amd64-3.9\\cryptography\ncopying src\\cryptography\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat\\_der.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat\\_oid.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\ncreating build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\base.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\certificate_transparency.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\extensions.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\general_name.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\name.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\ocsp.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\oid.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncopying src\\cryptography\\x509\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\x509\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\ncopying src\\cryptography\\hazmat\\backends\\interfaces.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\ncopying src\\cryptography\\hazmat\\backends\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\bindings\ncopying src\\cryptography\\hazmat\\bindings\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\bindings\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\cmac.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\constant_time.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\hashes.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\hmac.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\keywrap.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\padding.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\poly1305.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\aead.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\backend.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ciphers.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\cmac.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\decode_asn1.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\dh.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\dsa.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ec.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ed25519.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ed448.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\encode_asn1.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\hashes.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\hmac.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ocsp.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\poly1305.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\rsa.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\utils.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x25519.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x448.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x509.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\backends\\openssl\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl\\binding.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl\\_conditional.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\bindings\\openssl\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\dh.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\dsa.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ec.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed25519.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed448.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\padding.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\utils.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\x25519.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\x448.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\asymmetric\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\aead.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\algorithms.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\base.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\modes.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\ciphers\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\concatkdf.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\hkdf.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\kbkdf.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\pbkdf2.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\scrypt.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\x963kdf.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\kdf\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\base.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\pkcs12.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\ssh.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\serialization\ncreating build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\hotp.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\totp.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\utils.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\__init__.py -> build\\lib.win-amd64-3.9\\cryptography\\hazmat\\primitives\\twofactor\nrunning egg_info\nwriting src\\cryptography.egg-info\\PKG-INFO\nwriting dependency_links to src\\cryptography.egg-info\\dependency_links.txt\nwriting requirements to src\\cryptography.egg-info\\requires.txt\nwriting top-level names to src\\cryptography.egg-info\\top_level.txt\nreading manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs\\_build'\nwarning: no previously-included files found matching 'vectors'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nwarning: no previously-included files found matching 'azure-pipelines.yml'\nwarning: no previously-included files found matching '.azure-pipelines'\nwarning: no previously-included files found matching '.travis.yml'\nwarning: no previously-included files found matching '.travis'\nwarning: no previously-included files matching '*' found under directory '.azure-pipelines'\nwarning: no previously-included files matching '*' found under directory '.travis'\nwarning: no previously-included files found matching 'release.py'\nwarning: no previously-included files found matching '.coveragerc'\nwarning: no previously-included files found matching 'codecov.yml'\nwarning: no previously-included files found matching 'dev-requirements.txt'\nwarning: no previously-included files found matching 'rtd-requirements.txt'\nwarning: no previously-included files found matching 'tox.ini'\nwriting manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build\\\\temp.win-amd64-3.9\\\\Release\\\\_padding.c'\ncreating build\\temp.win-amd64-3.9\ncreating build\\temp.win-amd64-3.9\\Release\ngenerating cffi module 'build\\\\temp.win-amd64-3.9\\\\Release\\\\_constant_time.c'\ngenerating cffi module 'build\\\\temp.win-amd64-3.9\\\\Release\\\\_openssl.c'\nbuilding '_openssl' extension\ncreating build\\temp.win-amd64-3.9\\Release\\build\ncreating build\\temp.win-amd64-3.9\\Release\\build\\temp.win-amd64-3.9\ncreating build\\temp.win-amd64-3.9\\Release\\build\\temp.win-amd64-3.9\\Release\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.28.29910\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Ic:\\users\\abcd\\appdata\\local\\programs\\python\\python39\\include -Ic:\\users\\abcd\\appdata\\local\\programs\\python\\python39\\include -IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.28.29910\\ATLMFC\\include -IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.28.29910\\include -IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\include\\um -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\um -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\winrt -IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\cppwinrt /Tcbuild\\temp.win-amd64-3.9\\Release\\_openssl.c /Fobuild\\temp.win-amd64-3.9\\Release\\build\\temp.win-amd64-3.9\\Release\\_openssl.obj   \n_openssl.c\nbuild\\temp.win-amd64-3.9\\Release\\_openssl.c(575): fatal error C1083: Cannot open include file: 'openssl/opensslv.h': No such file or directory\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\Enterprise\\\\VC\\\\Tools\\\\MSVC\\\\14.28.29910\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2    \n----------------------------------------\nERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\nNot sure what could be the wrong here. Earlier I had got Something related to Wheely package and so I installed that package and there after it's throwing this error.\nI am new to Python and I am from .Net background, so facing difficulties dealing with Python packages.\nAny help is appreciated. I even tried to install OpenSSL but it seems to be of no use or I am missing something here.\n    ", "Answer": "\r\n```\ncryptography```\n ships binary wheels on Windows so that users don't need to compile, but the version you are attempting to install (2.8) does not have a wheel that works for Python 3.9. If you can use a newer version then this will resolve the problem (although also be sure you upgrade to the latest ```\npip```\n!).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Deploying Python, takes forever to build wheel for cryptography\r\n                \r\nI'm running a Django Python project in Heroku, and to support the Python cryptography package, my dockerfile contains instructions to first install the non-Python dependencies for that package:\n```\nrun apk add openssl-dev cargo\n```\n\nAnd then my build log shows that deployment builds various wheels. The cryptography wheel takes several minutes to build:\n```\n  Building wheel for cryptography (PEP 517): started\n  Building wheel for cryptography (PEP 517): still running...\n  Building wheel for cryptography (PEP 517): still running...\n  Building wheel for cryptography (PEP 517): finished with status 'done'\n  Created wheel for cryptography: filename=cryptography-3.4.7-cp38-cp38-linux_x86_64.whl size=534047 sha256=8c3212278fa23bad7ecfbc54d036e8d35ba9308479d87e8ec39697aed26095dc\n```\n\nIs there any kind of precompiled wheel or buildpack or similar that I can use to more speed up my deployments?\n    ", "Answer": "\r\nBased on your ```\napk```\n command it's likely you're running Alpine Linux. Alpine uses ```\nmusl```\n for its ```\nlibc```\n implementation and this has historically prevented the ```\ncryptography```\n project from uploading binary wheels. However, with the acceptance of PEP 656 (and a lot of follow up work with auditwheel, pypa/manylinux containers, and pypa/warehouse allowing uploads) we can now upload ```\nmusllinux```\n wheels. ```\ncryptography```\n uploaded a wheel for cryptography 3.4.8 (x86_64 arch) on September 19, 2021.\nTo get this wheel there are two prerequisites:\n\nYou need to upgrade to the latest ```\npip```\n. No version older than 21.2.4 supports ```\nmusllinux```\n wheels.\nYou need to ensure you're installing cryptography >= 3.4.8. Older versions do not have these wheels.\n\nIf you meet those requirements then ```\npip install cryptography```\n will no longer require a compiler (rust or gcc/clang) on Alpine.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Deploying Python, takes forever to build wheel for cryptography\r\n                \r\nI'm running a Django Python project in Heroku, and to support the Python cryptography package, my dockerfile contains instructions to first install the non-Python dependencies for that package:\n```\nrun apk add openssl-dev cargo\n```\n\nAnd then my build log shows that deployment builds various wheels. The cryptography wheel takes several minutes to build:\n```\n  Building wheel for cryptography (PEP 517): started\n  Building wheel for cryptography (PEP 517): still running...\n  Building wheel for cryptography (PEP 517): still running...\n  Building wheel for cryptography (PEP 517): finished with status 'done'\n  Created wheel for cryptography: filename=cryptography-3.4.7-cp38-cp38-linux_x86_64.whl size=534047 sha256=8c3212278fa23bad7ecfbc54d036e8d35ba9308479d87e8ec39697aed26095dc\n```\n\nIs there any kind of precompiled wheel or buildpack or similar that I can use to more speed up my deployments?\n    ", "Answer": "\r\nBased on your ```\napk```\n command it's likely you're running Alpine Linux. Alpine uses ```\nmusl```\n for its ```\nlibc```\n implementation and this has historically prevented the ```\ncryptography```\n project from uploading binary wheels. However, with the acceptance of PEP 656 (and a lot of follow up work with auditwheel, pypa/manylinux containers, and pypa/warehouse allowing uploads) we can now upload ```\nmusllinux```\n wheels. ```\ncryptography```\n uploaded a wheel for cryptography 3.4.8 (x86_64 arch) on September 19, 2021.\nTo get this wheel there are two prerequisites:\n\nYou need to upgrade to the latest ```\npip```\n. No version older than 21.2.4 supports ```\nmusllinux```\n wheels.\nYou need to ensure you're installing cryptography >= 3.4.8. Older versions do not have these wheels.\n\nIf you meet those requirements then ```\npip install cryptography```\n will no longer require a compiler (rust or gcc/clang) on Alpine.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Bad Data: Cryptography C#\r\n                \r\nI am new to C# and cryptography and I've made up the below code by picking up data from various sources like CodeProject and StackOverflow.\n\n```\npublic class CryptoSafe\n{\n    private const int SaltSize = 8;\n\n    public void EncryptAndWrite(FileInfo targetFile, string password)\n    {\n        FileStream stream = new FileStream(targetFile.FullName, FileMode.Open, FileAccess.Write);\n\n        DESCryptoServiceProvider cryptic = new DESCryptoServiceProvider();\n        // \n        var keyGenerator = new Rfc2898DeriveBytes(password, SaltSize);\n        var rijndael = Rijndael.Create();\n        var length = rijndael.BlockSize;\n\n        // BlockSize, KeySize in bit --> divide by 8\n        cryptic.IV = keyGenerator.GetBytes(rijndael.BlockSize / 16);\n        cryptic.Key = keyGenerator.GetBytes(rijndael.KeySize / 32);\n\n        CryptoStream crStream = new CryptoStream(stream, cryptic.CreateEncryptor(), CryptoStreamMode.Write);\n        byte[] data = ASCIIEncoding.ASCII.GetBytes(System.DateTime.Now.ToString(\"dd-MMM-yyyy HH;mm:ss\"));\n\n        crStream.Write(data, 0, data.Length);\n\n        crStream.Close();\n        stream.Close();\n    }\n\n\n\n    public string DecryptAndRead(FileInfo sourceFile, string password)\n    {\n        FileStream stream = new FileStream(sourceFile.FullName, FileMode.Open, FileAccess.Read);\n        DESCryptoServiceProvider cryptic = new DESCryptoServiceProvider();\n        // read salt\n        //var fileStream = sourceFile.OpenRead();\n        //var salt = new byte[SaltSize];\n        // fileStream.Read(salt, 0, SaltSize);\n\n        // initialize algorithm with salt\n        var keyGenerator = new Rfc2898DeriveBytes(password, SaltSize);\n        var rijndael = Rijndael.Create();\n        cryptic.IV = keyGenerator.GetBytes(rijndael.BlockSize / 16);\n        cryptic.Key = keyGenerator.GetBytes(rijndael.KeySize / 32);\n\n        // decrypt\n        CryptoStream crStream = new CryptoStream(stream, cryptic.CreateDecryptor(), CryptoStreamMode.Read);\n        StreamReader reader = new StreamReader(crStream);\n\n        string data = reader.ReadToEnd();\n\n        reader.Close();\n        stream.Close();\n        return data;\n    }\n\n}\n```\n\n\nEncryption is going good and is being written in file. But, while decrypting the file It gives the error \"Bad Data\". I tried searching for it on SO but it didnt help much.\n\nWhat Am i doing wrong? Please Help!\n    ", "Answer": "\r\nSo, what are you doing wrong.  \n\n1st DES has been brute force crackable since the 90's. \n\n2nd you have a different random salt for Encryption and Decryption so you'll never be able to decrypt. \n\n3rd there are a just a lot of mistakes to be made with crypto, it's deceptively easy, either start with a better example or use a highlevel library.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "network connection using public key cryptography\r\n                \r\nWhen ```\nA```\n sends data to ```\nB```\n over a network connection using public key cryptography, how does ```\nA```\n achieve the goals of authentication, confidentiality ?\n    ", "Answer": "\r\nIn a case like this, A is using B's public key, and B is using A's.\n\nConfidentiality:  If A encrypts something using B's public key, then only somebody with B's private key can read it.  In practice, A is likely to generate a random key for some symmetric cipher like AES, since that's more efficient, but if encrypted with B's public key only A and B should have it.\n\nAuthentication:  This is more complicated.  In general, if you can send information confidentially, you can send authentication credentials.  Public key encryption can help, provided that A's public key is known to be A's for some reason.  Perhaps it's registered in a place B trusts for some reason, perhaps B has communicated with A before and wants to know if it's the same key.  Then A can send a message encrypted with A's private key, which can be read with A's public key.  This can be used as a cryptographic signature by hashing a message and encrypting the hash.\n\nIn these cases, I'm assuming that A and B have private and public keys, and that nobody else knows their private keys (and A doesn't know B's private key and vice versa).  If E knows A's private key, then E can send messages that appear to be from A, and E can read all private messages to A.  Moreover, if B doesn't know that A's public key is A's to begin with, B can't tell if E is doing a man-in-the-middle attack, by communicating with B with B's and E's public keys, communicating with A with A's and E's public keys, and relaying the communications.  This means that E can read (violating confidentiality) and change (violating authentication) communications between the two.  This is usually dealt with with certificates issued by a trusted certificate authority, which is getting out of scope of the question.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ERROR: No matching distribution found for cryptography==3.2.1\r\n                \r\nI'm trying to install  cryptography==3.2.1 to my django project but I got this error\n```\nCollecting cryptography==3.2.1\n  Downloading cryptography-3.2.1.tar.gz (540 kB)\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'error'\n  ERROR: Command errored out with exit status 1:\n   command: /usr/local/bin/python /usr/local/lib/python3.10/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-5acxrfz0/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- 'setuptools>=40.6.0' wheel 'cffi>=1.8,!=1.11.3; platform_python_implementation != '\"'\"'PyPy'\"'\"''\n       cwd: None\n  Complete output (122 lines):\n  Collecting setuptools>=40.6.0\n    Downloading setuptools-54.1.1-py3-none-any.whl (784 kB)\n  Collecting wheel\n    Downloading wheel-0.36.2-py2.py3-none-any.whl (35 kB)\n  Collecting cffi!=1.11.3,>=1.8\n    Downloading cffi-1.14.5.tar.gz (475 kB)\n  Collecting pycparser\n    Downloading pycparser-2.20-py2.py3-none-any.whl (112 kB)\n  Building wheels for collected packages: cffi\n    Building wheel for cffi (setup.py): started\n    Building wheel for cffi (setup.py): finished with status 'error'\n    ERROR: Command errored out with exit status 1:\n     command: /usr/local/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-h86bujlk\n         cwd: /tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/\n    Complete output (47 lines):\n  \n        No working compiler found, or bogus compiler options passed to\n        the compiler from Python's standard \"distutils\" module.  See\n        the error messages above.  Likely, the problem is not related\n        to CFFI but generic to the setup.py of any Python package that\n        tries to compile C code.  (Hints: on OS/X 10.8, for errors about\n        -mno-fused-madd see http://stackoverflow.com/questions/22313407/\n        Otherwise, see https://wiki.python.org/moin/CompLangPython or\n        the IRC channel #python on irc.freenode.net.)\n  \n        Trying to continue anyway.  If you are trying to install CFFI from\n        a build done in a different context, you can ignore this warning.\n  \n    running bdist_wheel\n    running build\n    running build_py\n    creating build\n    creating build/lib.linux-x86_64-3.10\n    creating build/lib.linux-x86_64-3.10/cffi\n    copying cffi/api.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/vengine_cpy.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/cffi_opcode.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/backend_ctypes.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/setuptools_ext.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/ffiplatform.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/cparser.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/verifier.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/vengine_gen.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/lock.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/commontypes.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/model.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/error.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/recompiler.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/pkgconfig.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/__init__.py -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/_cffi_include.h -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/parse_c_type.h -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/_embedding.h -> build/lib.linux-x86_64-3.10/cffi\n    copying cffi/_cffi_errors.h -> build/lib.linux-x86_64-3.10/cffi\n    warning: build_py: byte-compiling is disabled, skipping.\n  \n    running build_ext\n    building '_cffi_backend' extension\n    creating build/temp.linux-x86_64-3.10\n    creating build/temp.linux-x86_64-3.10/c\n    gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -DTHREAD_STACK_SIZE=0x100000 -fPIC -I/usr/include/ffi -I/usr/include/libffi -I/usr/local/include/python3.10 -c c/_cffi_backend.c -o build/temp.linux-x86_64-3.10/c/_cffi_backend.o\n    error: command 'gcc' failed: No such file or directory\n    ----------------------------------------\n    ERROR: Failed building wheel for cffi\n    Running setup.py clean for cffi\n  Failed to build cffi\n  Installing collected packages: pycparser, wheel, setuptools, cffi\n      Running setup.py install for cffi: started\n      Running setup.py install for cffi: finished with status 'error'\n      ERROR: Command errored out with exit status 1:\n       command: /usr/local/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-sx_wm_b2/install-record.txt --single-version-externally-managed --prefix /tmp/pip-build-env-5acxrfz0/overlay --compile --install-headers /tmp/pip-build-env-5acxrfz0/overlay/include/python3.10/cffi\n           cwd: /tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/\n      Complete output (47 lines):\n  \n          No working compiler found, or bogus compiler options passed to\n          the compiler from Python's standard \"distutils\" module.  See\n          the error messages above.  Likely, the problem is not related\n          to CFFI but generic to the setup.py of any Python package that\n          tries to compile C code.  (Hints: on OS/X 10.8, for errors about\n          -mno-fused-madd see http://stackoverflow.com/questions/22313407/\n          Otherwise, see https://wiki.python.org/moin/CompLangPython or\n          the IRC channel #python on irc.freenode.net.)\n  \n          Trying to continue anyway.  If you are trying to install CFFI from\n          a build done in a different context, you can ignore this warning.\n  \n      running install\n      running build\n      running build_py\n      creating build\n      creating build/lib.linux-x86_64-3.10\n      creating build/lib.linux-x86_64-3.10/cffi\n      copying cffi/api.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/vengine_cpy.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/cffi_opcode.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/backend_ctypes.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/setuptools_ext.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/ffiplatform.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/cparser.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/verifier.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/vengine_gen.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/lock.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/commontypes.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/model.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/error.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/recompiler.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/pkgconfig.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/__init__.py -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/_cffi_include.h -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/parse_c_type.h -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/_embedding.h -> build/lib.linux-x86_64-3.10/cffi\n      copying cffi/_cffi_errors.h -> build/lib.linux-x86_64-3.10/cffi\n      warning: build_py: byte-compiling is disabled, skipping.\n  \n      running build_ext\n      building '_cffi_backend' extension\n      creating build/temp.linux-x86_64-3.10\n      creating build/temp.linux-x86_64-3.10/c\n      gcc -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -DTHREAD_STACK_SIZE=0x100000 -fPIC -I/usr/include/ffi -I/usr/include/libffi -I/usr/local/include/python3.10 -c c/_cffi_backend.c -o build/temp.linux-x86_64-3.10/c/_cffi_backend.o\n      error: command 'gcc' failed: No such file or directory\n      ----------------------------------------\n  ERROR: Command errored out with exit status 1: /usr/local/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-p5wjmnwg/cffi_4138eef598d743ef92d64bbc9e0b8ac5/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-sx_wm_b2/install-record.txt --single-version-externally-managed --prefix /tmp/pip-build-env-5acxrfz0/overlay --compile --install-headers /tmp/pip-build-env-5acxrfz0/overlay/include/python3.10/cffi Check the logs for full command output.\n  ----------------------------------------\nWARNING: Discarding https://files.pythonhosted.org/packages/94/5c/42de91c7fbdb817b2d9a4e64b067946eb38a4eb36c1a09c96c87a0f86a82/cryptography-3.2.1.tar.gz#sha256=d3d5e10be0cf2a12214ddee45c6bd203dab435e3d83b4560c03066eda600bfe3 (from https://pypi.org/simple/cryptography/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*). Command errored out with exit status 1: /usr/local/bin/python /usr/local/lib/python3.10/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-5acxrfz0/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- 'setuptools>=40.6.0' wheel 'cffi>=1.8,!=1.11.3; platform_python_implementation != '\"'\"'PyPy'\"'\"'' Check the logs for full command output.\nERROR: Could not find a version that satisfies the requirement cryptography==3.2.1\nERROR: No matching distribution found for cryptography==3.2.1\nERROR: Service 'web' failed to build : The command '/bin/sh -c pip install --upgrade pip     && pip install -r requirements.txt     && chmod +x docker-entrypoint.sh' returned a non-zero code: 1\n```\n\nbase image docker file content built with tag ```\npython3.10-alpine:base```\n\n```\nFROM python:3.10.0a6-alpine3.13\nENV PYTHONUNBUFFERED 1\nRUN apk add --no-cache --virtual .build-deps \\\n    ca-certificates gcc postgresql-dev linux-headers musl-dev openssl-dev cargo  ffmpeg \\\n    libffi-dev jpeg-dev zlib-dev python3-dev    py3-cryptography \\\n#    && pip install psycopg2==2.8.1 Pillow==6.0.0 \\\n    && find /usr/local \\\n        \\( -type d -a -name test -o -name tests \\) \\\n        -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n        -exec rm -rf '{}' + \\\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner --recursive /usr/local \\\n                | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n                | sort -u \\\n                | xargs -r apk info --installed \\\n                | sort -u \\\n    )\" \\\n    && apk add --virtual .rundeps $runDeps \\\n    && apk del .build-deps\n```\n\nmy project Dockerfile\n```\nFROM python3.10-alpine:base\n\n# set work directory\nENV APP_PATH /usr/src/src/\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\nWORKDIR $APP_PATH\n\n\n\n## install dependencies\n#COPY ./src .\n\n# py-cryptography is required\nCOPY requirements.txt docker-entrypoint.sh $APP_PATH\n\nRUN pip install --upgrade pip \\\n    && pip install -r requirements.txt \\\n    && chmod +x docker-entrypoint.sh\n# RUN apt update \\\n#    && apk add gcc musl-dev python3-dev libffi-dev openssl-dev cargo jpeg-dev zlib-dev  ffmpeg \\\n#    && pip install --upgrade pip \\\n#    && pip install -r requirements.txt \\\n#    && chmod +x docker-entrypoint.sh\n\n# copy project\nCOPY . .\n```\n\n    ", "Answer": "\r\nYou are missing the ```\ngcc```\n compiler from the image. The reason the fist Dockerfile works is that, before the ```\npip install```\n was called, the build environment was set up.\nUncomment the environment preparation steps, change the order of the actions, to prepare the environment with the tools before you can install python libraries.\n```\nRUN apt update \\\n    && apk add alpine-sdk gcc musl-dev python3-dev libffi-dev openssl-dev cargo jpeg-dev zlib-dev  ffmpeg\n\nRUN pip install --upgrade pip \\\n    && pip install -r requirements.txt \\\n    && chmod +x docker-entrypoint.sh\n```\n\nYou might need to add additional binary libraries if you need them for your python library.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing Cryptography on an Apple Silicon M1 Mac\r\n                \r\nHelp! I'm trying to install cryptography on my m1. I know I can run terminal in rosetta mode, but I'm wondering if there is a way not to do that.\nOutput:\n```\n    ERROR: Command errored out with exit status 1:\n     command: /opt/homebrew/opt/python@3.9/bin/python3.9 /opt/homebrew/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py prepare_metadata_for_build_wheel /var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/tmpl4sga84k\n         cwd: /private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-install-jko4b562/cryptography_7b1bbc9ece2f481a8e8e9ea03b1a0030\n    Complete output (55 lines):\n    \n        =============================DEBUG ASSISTANCE=============================\n        If you are seeing a compilation error please try the following steps to\n        successfully install cryptography:\n        1) Upgrade to the latest pip and try again. This will fix errors for most\n           users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n        2) Read https://cryptography.io/en/latest/installation.html for specific\n           instructions for your platform.\n        3) Check our frequently asked questions for more information:\n           https://cryptography.io/en/latest/faq.html\n        =============================DEBUG ASSISTANCE=============================\n    \n    Traceback (most recent call last):\n      File \"/opt/homebrew/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py\", line 280, in <module>\n        main()\n      File \"/opt/homebrew/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py\", line 263, in main\n        json_out['return_val'] = hook(**hook_input['kwargs'])\n      File \"/opt/homebrew/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py\", line 133, in prepare_metadata_for_build_wheel\n        return hook(metadata_directory, config_settings)\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/setuptools/build_meta.py\", line 161, in prepare_metadata_for_build_wheel\n        self.run_setup()\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/setuptools/build_meta.py\", line 145, in run_setup\n        exec(compile(code, __file__, 'exec'), locals())\n      File \"setup.py\", line 44, in <module>\n        setup(\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/setuptools/__init__.py\", line 153, in setup\n        return distutils.core.setup(**attrs)\n      File \"/opt/homebrew/Cellar/python@3.9/3.9.1_7/Frameworks/Python.framework/Versions/3.9/lib/python3.9/distutils/core.py\", line 108, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/setuptools/dist.py\", line 432, in __init__\n        _Distribution.__init__(self, {\n      File \"/opt/homebrew/Cellar/python@3.9/3.9.1_7/Frameworks/Python.framework/Versions/3.9/lib/python3.9/distutils/dist.py\", line 292, in __init__\n        self.finalize_options()\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/setuptools/dist.py\", line 708, in finalize_options\n        ep(self)\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/setuptools/dist.py\", line 715, in _finalize_setup_keywords\n        ep.load()(self, ep.name, value)\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/cffi/setuptools_ext.py\", line 219, in cffi_modules\n        add_cffi_module(dist, cffi_module)\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/cffi/setuptools_ext.py\", line 49, in add_cffi_module\n        execfile(build_file_name, mod_vars)\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/cffi/setuptools_ext.py\", line 25, in execfile\n        exec(code, glob, glob)\n      File \"src/_cffi_src/build_openssl.py\", line 77, in <module>\n        ffi = build_ffi_for_binding(\n      File \"src/_cffi_src/utils.py\", line 54, in build_ffi_for_binding\n        ffi = build_ffi(\n      File \"src/_cffi_src/utils.py\", line 74, in build_ffi\n        ffi = FFI()\n      File \"/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/cffi/api.py\", line 48, in __init__\n        import _cffi_backend as backend\n    ImportError: dlopen(/private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/_cffi_backend.cpython-39-darwin.so, 2): Symbol not found: _ffi_prep_closure\n      Referenced from: /private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/_cffi_backend.cpython-39-darwin.so\n      Expected in: flat namespace\n     in /private/var/folders/hj/5zfkv68d7lqgrfqt046bn23c0000gn/T/pip-build-env-9bqzge_f/overlay/lib/python3.9/site-packages/_cffi_backend.cpython-39-darwin.so\n```\n\nI've tried to build and run like their instructions say in that code block to the same error. I've looked around and nobody has seemingly found the fix yet, but those things are two months old usually. What am I missing?\n    ", "Answer": "\r\nThis issue is due to a mismatch between the libffi header version and the version of libffi the dynamic linker finds. In general it appears users encountering this problem have homebrew libffi installed and have a Python built against that in some fashion.\nWhen this happens ```\ncffi```\n (a ```\ncryptography```\n dependency) compiles, but fails at runtime raising this error. This should be fixable by passing the right path as a linker argument. To reinstall ```\ncffi```\n you should ```\npip uninstall cffi```\n followed by\n```\nLDFLAGS=-L$(brew --prefix libffi)/lib CFLAGS=-I$(brew --prefix libffi)/include pip install cffi --no-binary :all:```\n\nThis is an ugly workaround, but will get you past this hurdle for now.\nUpdate: I've uploaded arm64 wheels for macOS so the below compilation is no longer required if your ```\npip```\n is up-to-date. However, if, for some reason you wish to compile it yourself:\n```\nLDFLAGS=\"-L$(brew --prefix openssl@1.1)/lib\" CFLAGS=\"-I$(brew --prefix openssl@1.1)/include\" pip install cryptography```\n\nUpdate 2023: As of 2023 there are wheels for cffi and cryptography for Apple Silicon. If you are still seeing this type of error, there are a few likely culprits:\n\nYour ```\npip```\n is out of date. Update to latest! You can (and should) do all of this in a virtual environment.\nYou are attempting to install an older version of ```\ncryptography```\n. Any version >= 3.4.6 has an apple silicon wheel (either ```\narm64```\n or ```\nuniversal2```\n), but we only support the latest release so always update.\nYou are attempting to install an older version of ```\ncffi```\n. ```\ncffi```\n cannot use ```\nabi3```\n so new wheels must be uploaded for each major Python release. If you're attempting to run an older ```\ncffi```\n on a newer Python then a wheel may not be available and you'll need to compile.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Buildozer fails when using Cryptography module\r\n                \r\ni'm getting this error when including ```\ncryptography```\n module in my kivy app,\nhere's the entire error\nmy buildozer.specs file:-\n```\n[app]\n \n# (str) Title of your application\ntitle = My Application\n \n# (str) Package name\npackage.name = myapp\n \n# (str) Package domain (needed for android/ios packaging)\npackage.domain = org.test\n \n# (str) Source code where the main.py live\nsource.dir = .\n \n# (list) Source files to include (let empty to include all the files)\nsource.include_exts = py,png,jpg,kv,atlas,txt\n \n# (list) List of inclusions using pattern matching\n#source.include_patterns = assets/*,images/*.png\n \n# (list) Source files to exclude (let empty to not exclude anything)\n#source.exclude_exts = spec\n \n# (list) List of directory to exclude (let empty to not exclude anything)\n#source.exclude_dirs = tests, bin\n \n# (list) List of exclusions using pattern matching\n#source.exclude_patterns = license,images/*/*.jpg\n \n# (str) Application versioning (method 1)\nversion = 0.1\n \n# (str) Application versioning (method 2)\n# version.regex = __version__ = ['\"](.*)['\"]\n# version.filename = %(source.dir)s/main.py\n \n# (list) Application requirements\n# comma separated e.g. requirements = sqlite3,kivy\nrequirements = python3,kivy,plyer,android,kivymd,httplib2,gcloud,jwcrypto,pyasn1,pyasn1-modules,rsa,PIL,pycryptodome,protobuf==3.14.0,kivy_garden,mapview,requests,urllib3,chardet,idna,sseclient,oauth2client,cryptography,requests_toolbelt,python_jwt,firebase\n \n \n# (str) Custom source folders for requirements\n# Sets custom source for any requirements with recipes\n# requirements.source.kivy = ../../kivy\n \n# (list) Garden requirements\n#garden_requirements =\n \n# (str) Presplash of the application\n#presplash.filename = %(source.dir)s/data/presplash.png\n \n# (str) Icon of the application\n#icon.filename = %(source.dir)s/data/icon.png\n \n# (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)\norientation = portrait\n \n# (list) List of service to declare\n#services = NAME:ENTRYPOINT_TO_PY,NAME2:ENTRYPOINT2_TO_PY\n \n#\n# OSX Specific\n#\n \n#\n# author = © Copyright Info\n \n# change the major version of python used by the app\nosx.python_version = 3\n \n# Kivy version to use\nosx.kivy_version = 1.11.1\n \n#\n# Android specific\n#\n \n# (bool) Indicate if the application should be fullscreen or not\nfullscreen = 0\n \n# (string) Presplash background color (for new android toolchain)\n# Supported formats are: #RRGGBB #AARRGGBB or one of the following names:\n# red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray,\n# darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy,\n# olive, purple, silver, teal.\n#android.presplash_color = #FFFFFF\n \n# (list) Permissions\nandroid.permissions = INTERNET\n \n# (int) Target Android API, should be as high as possible.\n#android.api = 27\n \n# (int) Minimum API your APK will support.\n#android.minapi = 21\n \n# (int) Android SDK version to use\n#android.sdk = 20\n \n# (str) Android NDK version to use\n#android.ndk = 19b\n \n# (int) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi.\n#android.ndk_api = 21\n \n# (bool) Use --private data storage (True) or --dir public storage (False)\n#android.private_storage = True\n \n# (str) Android NDK directory (if empty, it will be automatically downloaded.)\n#android.ndk_path =\n \n# (str) Android SDK directory (if empty, it will be automatically downloaded.)\n#android.sdk_path =\n \n# (str) ANT directory (if empty, it will be automatically downloaded.)\n#android.ant_path =\n \n# (bool) If True, then skip trying to update the Android sdk\n# This can be useful to avoid excess Internet downloads or save time\n# when an update is due and you just want to test/build your package\n# android.skip_update = False\n \n# (bool) If True, then automatically accept SDK license\n# agreements. This is intended for automation only. If set to False,\n# the default, you will be shown the license when first running\n# buildozer.\n# android.accept_sdk_license = False\n \n# (str) Android entry point, default is ok for Kivy-based app\n#android.entrypoint = org.renpy.android.PythonActivity\n \n# (str) Android app theme, default is ok for Kivy-based app\n# android.apptheme = \"@android:style/Theme.NoTitleBar\"\n \n# (list) Pattern to whitelist for the whole project\n#android.whitelist =\n \n# (str) Path to a custom whitelist file\n#android.whitelist_src =\n \n# (str) Path to a custom blacklist file\n#android.blacklist_src =\n \n# (list) List of Java .jar files to add to the libs so that pyjnius can access\n# their classes. Don't add jars that you do not need, since extra jars can slow\n# down the build process. Allows wildcards matching, for example:\n# OUYA-ODK/libs/*.jar\n#android.add_jars = foo.jar,bar.jar,path/to/more/*.jar\n \n# (list) List of Java files to add to the android project (can be java or a\n# directory containing the files)\n#android.add_src =\n \n# (list) Android AAR archives to add (currently works only with sdl2_gradle\n# bootstrap)\n#android.add_aars =\n \n# (list) Gradle dependencies to add (currently works only with sdl2_gradle\n# bootstrap)\n#android.gradle_dependencies =\n \n# (list) add java compile options\n# this can for example be necessary when importing certain java libraries using the 'android.gradle_dependencies' option\n# see https://developer.android.com/studio/write/java8-support for further information\n# android.add_compile_options = \"sourceCompatibility = 1.8\", \"targetCompatibility = 1.8\"\n \n# (list) Gradle repositories to add {can be necessary for some android.gradle_dependencies}\n# please enclose in double quotes\n# e.g. android.gradle_repositories = \"maven { url 'https://kotlin.bintray.com/ktor' }\"\n#android.add_gradle_repositories =\n \n# (list) packaging options to add\n# see https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.PackagingOptions.html\n# can be necessary to solve conflicts in gradle_dependencies\n# please enclose in double quotes\n# e.g. android.add_packaging_options = \"exclude 'META-INF/common.kotlin_module'\", \"exclude 'META-INF/*.kotlin_module'\"\n#android.add_gradle_repositories =\n \n# (list) Java classes to add as activities to the manifest.\n#android.add_activities = com.example.ExampleActivity\n \n# (str) OUYA Console category. Should be one of GAME or APP\n# If you leave this blank, OUYA support will not be enabled\n#android.ouya.category = GAME\n \n# (str) Filename of OUYA Console icon. It must be a 732x412 png image.\n#android.ouya.icon.filename = %(source.dir)s/data/ouya_icon.png\n \n# (str) XML file to include as an intent filters in <activity> tag\n#android.manifest.intent_filters =\n \n# (str) launchMode to set for the main activity\n#android.manifest.launch_mode = standard\n \n# (list) Android additional libraries to copy into libs/armeabi\n#android.add_libs_armeabi = libs/android/*.so\n#android.add_libs_armeabi_v7a = libs/android-v7/*.so\n#android.add_libs_arm64_v8a = libs/android-v8/*.so\n#android.add_libs_x86 = libs/android-x86/*.so\n#android.add_libs_mips = libs/android-mips/*.so\n \n# (bool) Indicate whether the screen should stay on\n# Don't forget to add the WAKE_LOCK permission if you set this to True\n#android.wakelock = False\n \n# (list) Android application meta-data to set (key=value format)\n#android.meta_data =\n \n# (list) Android library project to add (will be added in the\n# project.properties automatically.)\n#android.library_references =\n \n# (list) Android shared libraries which will be added to AndroidManifest.xml using <uses-library> tag\n#android.uses_library =\n \n# (str) Android logcat filters to use\n#android.logcat_filters = *:S python:D\n \n# (bool) Copy library instead of making a libpymodules.so\n#android.copy_libs = 1\n \n# (str) The Android arch to build for, choices: armeabi-v7a, arm64-v8a, x86, x86_64\nandroid.arch = armeabi-v7a\n \n# (int) overrides automatic versionCode computation (used in build.gradle)\n# this is not the same as app version and should only be edited if you know what you're doing\n# android.numeric_version = 1\n \n#\n# Python for android (p4a) specific\n#\n \n# (str) python-for-android fork to use, defaults to upstream (kivy)\n#p4a.fork = kivy\n \n# (str) python-for-android branch to use, defaults to master\n#p4a.branch = master\n \n# (str) python-for-android git clone directory (if empty, it will be automatically cloned from github)\n#p4a.source_dir =\n \n# (str) The directory in which python-for-android should look for your own build recipes (if any)\n#p4a.local_recipes =\n \n# (str) Filename to the hook for p4a\n#p4a.hook =\n \n# (str) Bootstrap to use for android builds\n# p4a.bootstrap = sdl2\n \n# (int) port number to specify an explicit --port= p4a argument (eg for bootstrap flask)\n#p4a.port =\n \n \n#\n# iOS specific\n#\n \n# (str) Path to a custom kivy-ios folder\n#ios.kivy_ios_dir = ../kivy-ios\n# Alternately, specify the URL and branch of a git checkout:\nios.kivy_ios_url = https://github.com/kivy/kivy-ios\nios.kivy_ios_branch = master\n \n# Another platform dependency: ios-deploy\n# Uncomment to use a custom checkout\n#ios.ios_deploy_dir = ../ios_deploy\n# Or specify URL and branch\nios.ios_deploy_url = https://github.com/phonegap/ios-deploy\nios.ios_deploy_branch = 1.7.0\n \n# (str) Name of the certificate to use for signing the debug version\n# Get a list of available identities: buildozer ios list_identities\n#ios.codesign.debug = \"iPhone Developer: <lastname> <firstname> (<hexstring>)\"\n \n# (str) Name of the certificate to use for signing the release version\n#ios.codesign.release = %(ios.codesign.debug)s\n \n \n[buildozer]\n \n# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))\nlog_level = 2\n \n# (int) Display warning if buildozer is run as root (0 = False, 1 = True)\nwarn_on_root = 1\n \n# (str) Path to build artifact storage, absolute or relative to spec file\n# build_dir = ./.buildozer\n \n# (str) Path to build output (i.e. .apk, .ipa) storage\n# bin_dir = ./bin\n \n#    -----------------------------------------------------------------------------\n#    List as sections\n#\n#    You can define all the \"list\" as [section:key].\n#    Each line will be considered as a option to the list.\n#    Let's take [app] / source.exclude_patterns.\n#    Instead of doing:\n#\n#[app]\n#source.exclude_patterns = license,data/audio/*.wav,data/images/original/*\n#\n#    This can be translated into:\n#\n#[app:source.exclude_patterns]\n#license\n#data/audio/*.wav\n#data/images/original/*\n#\n \n \n#    -----------------------------------------------------------------------------\n#    Profiles\n#\n#    You can extend section / key with a profile\n#    For example, you want to deploy a demo version of your application without\n#    HD content. You could first change the title to add \"(demo)\" in the name\n#    and extend the excluded directories to remove the HD content.\n#\n#[app@demo]\n#title = My Application (demo)\n#\n#[app:source.exclude_patterns@demo]\n#images/hd/*\n#\n#    Then, invoke the command line with the \"demo\" profile:\n#\n#buildozer --profile demo android debug\n```\n\nthings i tried:-\nreinstalling cryptography,\nusing an older verison of cryptography,\ncleaning buildozer with ```\nbuildozer android clean```\n,\nusing this command ```\nsudo apt install build-essential libltdl-dev libffi-dev libssl-dev python-dev```\n\n    ", "Answer": "\r\ni still don't know what the problem is, but reinstalling Linux OS entirely fixed my problem.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "I have javax.crypto.BadPaddingException: RSA Cryptography\r\n                \r\nI have a problem with RSA cryptography when messages are too long.\n\nMyCipher:\n\n```\npublic static byte[] encrypt(byte[] dataToEncrypt, PublicKey pubk){\n    try{\n    System.out.println(\"in encrypt\");\n    Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");\n    cipher.init(Cipher.ENCRYPT_MODE, pubk);\n\n    byte[] encrypted = new byte[dataToEncrypt.length];\n    System.out.println(\"Imagebyte length: \" + dataToEncrypt.length);\n    byte[] temp = new byte[53];\n    byte[] temp2 = null;\n    int x, y, z = 0;\n    int repeats = dataToEncrypt.length / 53;\n    System.out.println(\"Iterations: \" + repeats);\n    for (z = 0; z < repeats; z++) {\n        System.out.println(\"Iteration number: \" + z);\n        int offset = z * 53;\n        for (x = 0; x < 53; x++) {\n            temp[x] = (byte) dataToEncrypt[offset + x];\n        }\n        temp2 = cipher.doFinal(temp);\n        for (y = 0; y < 53; y++) {\n            encrypted[offset + y] = (byte) temp2[y];\n        }\n        temp2 = null;\n    }\n    return encrypted;\n    }catch(Exception e){\n        return null;\n    }\n}\n\n\npublic static byte[] decrypt(byte[] bytesIn, PrivateKey prvk){\n    try {\n        System.out.println(\"in decrypt\");\n        Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\");\n        System.out.println(\"read out\" + prvk);\n        cipher.init(Cipher.DECRYPT_MODE, prvk);\n        byte[] decrypted = new byte[bytesIn.length];\n        System.out.println(\"Imagebyte length: \" + bytesIn.length);\n        byte[] temp = new byte[53];\n        byte[] temp2 = null;\n        int x, y, z = 0;\n        int repeats = bytesIn.length / 53;\n        System.out.println(\"Iterations: \" + repeats);\n\n        for (z = 0; z < repeats; z++) {\n            System.out.println(\"Iteration number: \" + z);\n            int offset = z * 53;\n            for (x = 0; x < 53; x++) {\n                temp[x] = (byte) bytesIn[offset + x];\n            }\n            temp2 = cipher.doFinal(temp);\n            for (y = 0; y < 53; y++) {\n                decrypted[offset + y] = (byte) temp2[y];\n            }\n            temp2 = null;\n        }\n        return decrypted;\n    } catch (Exception e) {\n        System.err.println(e);\n        return null;\n    }\n}\n```\n\n\nMain:\n\n```\n public static void main(String args[]) { \n    MsgAtoB_1 msg= new MsgAtoB_1(new BigInteger(String.valueOf(System.currentTimeMillis())), \"login\");\n    byte [] tab = MySerializer.serialize(msg);\n    KeyPair key = Keys.generateKeyPair();\n    byte [] crypt = MyCipher.encrypt(tab, key.getPublic());\n    byte [] decrypt = MyCipher.decrypt(crypt,key.getPrivate() );\n    if(tab.equals(decrypt)) System.out.println(\"yes it's work \");\n    else System.out.println(\"KOOOOOOOOOOO\");          \n}\n```\n\n\nOutput:\n\n```\nrun:\nin encrypt\nImagebyte length: 319\nIterations: 6\nIteration number: 0\nIteration number: 1\nIteration number: 2\nIteration number: 3\nIteration number: 4\nIteration number: 5\nin decrypt\nread outsun.security.rsa.RSAPrivateCrtKeyImpl@fff5bef2\nImagebyte length: 319\nIterations: 6\nIteration number: 0\njavax.crypto.BadPaddingException: Data must start with zero\nKOOOOOOOOOOO\n```\n\n    ", "Answer": "\r\nHi the solution was here : Encrypting and decrypting large data using Java and RSA\nEncrypting and decrypting large data using Java and RSA\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "D/DP/DQ Parameters in RSA Cryptography\r\n                \r\nI see some parameters in RSA cryptography such as  ```\nD / DP/ DQ P and Q```\n what this parameters really do is it some kind of padding for the cipher text?\n    ", "Answer": "\r\nThese parameters are used to speed up the private key operations using the Chinese remainder theorem.\nThe wikipedia article on RSA describes how this is done.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": ".NET implementation (libraries) of elliptic curve cryptography\r\n                \r\nPlease can you suggest any implementation of elliptical curve cryptography to be used on .NET platform?\n\nAlso if you have used them, can you tell me the recommended curves that should be used?\n\n[EDIT]\n\nAs @FatCat mentioned, its implementation is available in .NET framework 3.5 but that is only available on windows vista. Can you please suggest another way/library to use it?\n    ", "Answer": "\r\nThe .NET Framework already includes Diffie-Hellman, which is an elliptic curve crypto algorithm. Look under System.Security.Cryptography.ECDiffieHellmanCng. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python-2.7.18: cryptography-3.3.2 module installation from source failed\r\n                \r\nI need to install custom module of cryptography@3.3.2 with python-2.7.18 on Ubuntu-18.04, on installation from source got below error\n```\n build/temp.linux-x86_64-2.7/_openssl.c: In function '_cffi_d_i2d_re_X509_REQ_tbs':\n  build/temp.linux-x86_64-2.7/_openssl.c:50709:10: warning: implicit declaration of function 'i2d_re_X509_REQ_tbs'; did you mean 'i2d_re_X509_tbs'? [-Wimplicit-function-declaration]\n     return i2d_re_X509_REQ_tbs(x0, x1);\n            ^~~~~~~~~~~~~~~~~~~\n            i2d_re_X509_tbs\n\n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation.html for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq.html\n      =============================DEBUG ASSISTANCE=============================\n\n  error: command 'gcc' failed with exit status 1\n  ----------------------------------------\n ERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\nCurrent pip version is : pip 20.3.4 (latest supported)\nopenssl version : OpenSSL 1.1.1\nAlso all required dependencies are installed.\nIf\n```\npip install cryptography```\n is done it successfully installs 3.3.2 version.\nKindly suggest.\nI tried to install all dependencies but did not solved my problem.\nAlso attempted to install non patched cryptography-3.3.2 module from source but got the same error.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography reference not working for Xamarin IOS\r\n                \r\n\n\nI have added the PCL Crypto package in my project and I am trying to use the Cryptography service in MVVMCross..but it is showing up..as in the image.\n\nAny help?\n    ", "Answer": "\r\n```\nPCLCrypto```\n doesn't provide the ```\nSystem.Security.Cryptography```\n namespace. Its APIs are exposed in ```\nPCLCrypto.WinRTCrypto```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Replacement for cryptography package in python [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is seeking recommendations for books, tools, software libraries, and more. It does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     We don’t allow questions seeking recommendations for books, tools, software libraries, and more. You can edit the question so it can be answered with facts and citations.\r\n                \r\n                    \r\n                        Closed 2 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI need to encrypt a little piece of string, nothing very complex, just as so as it gets unintelligible to human eyes, but as I am using my company's notebook to do this I don't have the cryptography package installed nor can I install it.\nIs there any replacement for this matter?\nPS: I am using python 3.7\n    ", "Answer": "\r\njust as so as it gets unintelligible to human eyes\nThen you might use ```\nrot_13```\n from built-in module ```\ncodecs```\n. Consider following simple example:\n```\nimport codecs\nplain = \"Hello World\"\ncipher = codecs.encode(plain, \"rot_13\")\nprint(cipher)  # Uryyb Jbeyq\nagainplain = codecs.decode(cipher, \"rot_13\")\nprint(againplain)  # Hello World\n```\n\n(tested in python 3.7.3)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is there an industry standard for client side cryptography\r\n                \r\nThere are numerous articles on the web quoting the perils of JavaScript cryptography including this stackoverflow question and the article and message board it links to. \n\nMy users need to be able to access our website using passwords. While the connection is established using SSL, we also want to provide any additional protection we can (even if they're futile) against malware in the user's machine/browser. \n\nAre there any industry standards/best practices for client-side cryptography which help overcome any/all the limitations mentioned in the links above?\n\nNOTE: When we finally chose a library, it was jCryption because it supported asymmetric encryption.\n    ", "Answer": "\r\nThe Stanford Javascript Crypto Library (hosted http://crypto.stanford.edu/sjcl/ on Stanford's server or here on GitHub) is a project by the Stanford Computer Security Lab to build a secure, powerful, fast, small, easy-to-use, cross-browser library for cryptography in Javascript.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic curve threshold cryptography in node\r\n                \r\nI'd like to implement something like the two-man rule using elliptic curve cryptography in javascript. \n\nEdit: I'm essentially looking for something like Bitcoin multisig.\n\nSo I need to take combine two public keys to get a combined key that requires both private keys to produce a signature. See https://crypto.stackexchange.com/questions/25250/adding-two-public-keys.\n\nHow can I do this in node?\n    ", "Answer": "\r\nSince elliptic curve threshold cryptosystems have the property of adding keys, why not just do that?\n\nI've attempted this using the ```\nelliptic```\n module for node.js, just install it with npm and then try the following\n\n```\nvar EC = require('elliptic').ec;\n// we use the same preset of bitcoin, but should work with the other ones too\nvar ec = new EC('secp256k1');\n\n// generate two (or more) starting keypairs\nvar key1 = ec.genKeyPair();\nvar key2 = ec.genKeyPair();\n\n// sum the public... \nvar sum = key1.getPublic().add(key2.getPublic());\n// ...and private keys\nvar psum = key1.getPrivate().add(key2.getPrivate());\n```\n\n\nSince public keys are ```\nPoint```\n objects and private keys are ```\nBigNumber```\n objects, you can just call the ```\nadd()```\n function on both of them.\nAt this point, ```\nsum```\n and ```\npsum```\n hold your combined keys, but before using them to sign a message you'll need to create a ```\nKeyPair```\n object (part of the elliptic module).\n\n```\n// generate two new random keypairs\nvar privateKeySum = ec.genKeyPair();\nvar publicKeySum = ec.genKeyPair();\n\n// we don't care about their values\n// so just import the sum of keys into them\nprivateKeySum._importPrivate(psum);\npublicKeySum._importPublic(sum);\n```\n\n\nAs you can see, to create a new keypair I just make new random ones and then use the ```\n_importPrivate()```\n and ```\n_importPublic()```\n functions to load the combined keys.\n\nIt's a bit hacky, I know, but it works.\n\nA better solution would be to just export the KeyPair object from the module and create new ones with their constructor.    \n\nAfter this, just proceed as normal, like in the sample provided by the module's readme:\n\n```\nvar msg = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\n// Sign the message with our new combined private key\nvar signature = privateKeySum.sign(msg);\n\n// Export DER encoded signature in Array\nvar derSign = signature.toDER();\n\n// Verify signature using the combined public key, should return true\nconsole.log(publicKeySum.verify(msg, derSign));\n```\n\n\nUsing this, after the first generation, you can ask for the two (or more) public keys required to verify a message signature.\nIf you treat the public keys as 'passwords', you can then check a signature against any message to verify that the two public keys are the original ones. \n\nAlso, this should work with multiple keys, but it will always require all of them to succeed.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to install cryptography in Python virtual environment? [ undefined symbol: __syscall_error]\r\n                \r\nSteps I've tried so far:\n\n\ncreate the virtual environment.\n\npython3.4 -m venv [venv_name_here]\nenter the virtual environment.\n\ncd [venv_name_here]\nactivate the virtual environment.\n\nsource bin/activate\ninstall setuptools.\n\npip install --upgrade setuptools\ninstall pyparser.\n\npip install --upgrade pyparser\n\n\nOutput:\n\n```\nDownloading/unpacking pyparser\n  Downloading pyparser-1.0.tar.gz\n  Running setup.py (path:[path-to-venv]/build/pyparser/setup.py) egg_info for package pyparser\nDownloading/unpacking parse==1.6.5 (from pyparser)\n  Downloading parse-1.6.5.tar.gz\n  Running setup.py (path:[path-to-venv]/build/parse/setup.py) egg_info for package parse\nInstalling collected packages: pyparser, parse\n  Running setup.py install for pyparser\n  Could not find .egg-info directory in install record for pyparser\n  Running setup.py install for parse\n  Could not find .egg-info directory in install record for parse==1.6.5 (from pyparser)\nSuccessfully installed pyparser parse\nCleaning up..\n```\n\n\n\ninstall cffi.\n\npip install --upgrade cffi\n\n\nOutput:\n\n```\nDownloading/unpacking cffi\n  Downloading cffi-1.11.5.tar.gz (438kB): 438kB downloaded\n  Running setup.py (path:[path-to-venv]/build/cffi/setup.py) egg_info for package cffi\nDownloading/unpacking pycparser (from cffi)\n  Downloading pycparser-2.18.tar.gz (245kB): 245kB downloaded\n  Running setup.py (path:[path-to-venv]/build/pycparser/setup.py) egg_info for package pycparser\n    warning: no previously-included files matching 'yacctab.*' found under directory 'tests'\n    warning: no previously-included files matching 'lextab.*' found under directory 'tests'\n    warning: no previously-included files matching 'yacctab.*' found under directory 'examples'\n    warning: no previously-included files matching 'lextab.*' found under directory 'examples'\nInstalling collected packages: cffi, pycparser\n  Running setup.py install for cffi\n    building '_cffi_backend' extension\n    gcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -DUSE__THREAD -DHAVE_SYNC_SYNCHRONIZE -I/usr/local/lib/libffi-3.1/include -I[path-to-venv]/include -I/usr/local/include/python3.4m -c c/_cffi_backend.c -o build/temp.linux-i686-3.4/c/_cffi_backend.o\n    gcc -pthread -shared build/temp.linux-i686-3.4/c/_cffi_backend.o -L$(libdir) -lffi -o build/lib.linux-i686-3.4/_cffi_backend.cpython-34m.so\n  Could not find .egg-info directory in install record for cffi\n  Running setup.py install for pycparser\n    warning: no previously-included files matching 'yacctab.*' found under directory 'tests'\n    warning: no previously-included files matching 'lextab.*' found under directory 'tests'\n    warning: no previously-included files matching 'yacctab.*' found under directory 'examples'\n    warning: no previously-included files matching 'lextab.*' found under directory 'examples'\n    Build the lexing/parsing tables\n  Could not find .egg-info directory in install record for pycparser (from cffi)\nSuccessfully installed cffi pycparser\nCleaning up...\n```\n\n\n\ninstall cryptography.\n\npip install --upgrade cryptography\n\n\nOutput:\n\n```\nDownloading/unpacking cryptography\n  Downloading cryptography-2.2.2.tar.gz (443kB): 443kB downloaded\n  Running setup.py (path:[path-to-venv]/build/cryptography/setup.py) egg_info for package cryptography\n    no previously-included directories found matching 'docs/_build'\n    warning: no previously-included files matching '*' found under directory 'vectors'\nDownloading/unpacking idna>=2.1 (from cryptography)\n  Downloading idna-2.6-py2.py3-none-any.whl (56kB): 56kB downloaded\nDownloading/unpacking asn1crypto>=0.21.0 (from cryptography)\n  Downloading asn1crypto-0.24.0-py2.py3-none-any.whl (101kB): 101kB downloaded\nDownloading/unpacking six>=1.4.1 (from cryptography)\n  Downloading six-1.11.0-py2.py3-none-any.whl\nInstalling collected packages: cryptography, idna, asn1crypto, six\n  Running setup.py install for cryptography\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"[path-to-venv]/build/cryptography/setup.py\", line 319, in <module>\n        **keywords_with_side_effects(sys.argv)\n      File \"[path-to-venv]/lib/python3.4/site-packages/setuptools/__init__.py\", line 129, in setup\n        return distutils.core.setup(**attrs)\n      File \"/usr/local/lib/python3.4/distutils/core.py\", line 108, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"[path-to-venv]/lib/python3.4/site-packages/setuptools/dist.py\", line 363, in __init__\n        _Distribution.__init__(self, attrs)\n      File \"/usr/local/lib/python3.4/distutils/dist.py\", line 280, in __init__\n        self.finalize_options()\n      File \"[path-to-venv]/lib/python3.4/site-packages/setuptools/dist.py\", line 519, in finalize_options\n        ep.load()(self, ep.name, value)\n      File \"[path-to-venv]/lib/python3.4/site-packages/cffi/setuptools_ext.py\", line 204, in cffi_modules\n        add_cffi_module(dist, cffi_module)\n      File \"[path-to-venv]/lib/python3.4/site-packages/cffi/setuptools_ext.py\", line 49, in add_cffi_module\n        execfile(build_file_name, mod_vars)\n      File \"[path-to-venv]/lib/python3.4/site-packages/cffi/setuptools_ext.py\", line 25, in execfile\n        exec(code, glob, glob)\n      File \"src/_cffi_src/build_openssl.py\", line 106, in <module>\n        extra_link_args=extra_link_args(compiler_type()),\n      File \"[path-to-venv]/build/cryptography/src/_cffi_src/utils.py\", line 49, in build_ffi_for_binding\n        extra_link_args=extra_link_args,\n      File \"[path-to-venv]/build/cryptography/src/_cffi_src/utils.py\", line 57, in build_ffi\n        ffi = FFI()\n      File \"[path-to-venv]/lib/python3.4/site-packages/cffi/api.py\", line 46, in __init__\n        import _cffi_backend as backend\n    ImportError: [path-to-venv]/lib/python3.4/site-packages/_cffi_backend.cpython-34m.so: undefined symbol: __syscall_error\n    Complete output from command [path-to-venv]/bin/python3.4 -c \"import setuptools, tokenize;__file__='[path-to-venv]/build/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-pm4i20dg-record/install-record.txt --single-version-externally-managed --compile --install-headers [path-to-venv]/include/site/python3.4:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"[path-to-venv]/build/cryptography/setup.py\", line 319, in <module>\n    **keywords_with_side_effects(sys.argv)\n\n  File \"[path-to-venv]/lib/python3.4/site-packages/setuptools/__init__.py\", line 129, in setup\n    return distutils.core.setup(**attrs)\n\n  File \"/usr/local/lib/python3.4/distutils/core.py\", line 108, in setup\n    _setup_distribution = dist = klass(attrs)\n\n  File \"[path-to-venv]/lib/python3.4/site-packages/setuptools/dist.py\", line 363, in __init__\n    _Distribution.__init__(self, attrs)\n\n  File \"/usr/local/lib/python3.4/distutils/dist.py\", line 280, in __init__\n    self.finalize_options()\n\n  File \"[path-to-venv]/lib/python3.4/site-packages/setuptools/dist.py\", line 519, in finalize_options\n    ep.load()(self, ep.name, value)\n\n  File \"[path-to-venv]/lib/python3.4/site-packages/cffi/setuptools_ext.py\", line 204, in cffi_modules\n    add_cffi_module(dist, cffi_module)\n\n  File \"[path-to-venv]/lib/python3.4/site-packages/cffi/setuptools_ext.py\", line 49, in add_cffi_module\n    execfile(build_file_name, mod_vars)\n\n  File \"[path-to-venv]/lib/python3.4/site-packages/cffi/setuptools_ext.py\", line 25, in execfile\n    exec(code, glob, glob)\n\n  File \"src/_cffi_src/build_openssl.py\", line 106, in <module>\n    extra_link_args=extra_link_args(compiler_type()),\n\n  File \"[path-to-venv]/build/cryptography/src/_cffi_src/utils.py\", line 49, in build_ffi_for_binding\n    extra_link_args=extra_link_args,\n\n  File \"[path-to-venv]/build/cryptography/src/_cffi_src/utils.py\", line 57, in build_ffi\n    ffi = FFI()\n\n  File \"[path-to-venv]/lib/python3.4/site-packages/cffi/api.py\", line 46, in __init__\n    import _cffi_backend as backend\n\nImportError: [path-to-venv]/lib/python3.4/site-packages/_cffi_backend.cpython-34m.so: undefined symbol: __syscall_error\n\n----------------------------------------\nCleaning up...\nCommand [path-to-venv]/bin/python3.4 -c \"import setuptools, tokenize;__file__='[path-to-venv]/build/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-pm4i20dg-record/install-record.txt --single-version-externally-managed --compile --install-headers [path-to-venv]/include/site/python3.4 failed with error code 1 in [path-to-venv]/build/cryptography\nStoring debug log for failure in /home/webdev/.pip/pip.log\n```\n\n\n\n\nWhat's malfunctioning here and how to fix it?\n\nInstalling cryptography seems like a relatively straightforward thing to do with a virtual environment, but it's not working and I don't see any references to problems like this one anywhere online.\n\nUpdate: the operating system type is Linux, and installation of cryptography works fine on the system itself. This problem only appears when attempting to install into a virtual environment.\n    ", "Answer": "\r\nfor me using ```\nvirtualenv```\n solved the problem\ncreate virtual environment by\n```\npython3 -m virtualenv venv```\n\nthen install cryptography\n```\npip install cryptography```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "InvalidSignature with python cryptography\r\n                \r\nI want to verify a signature of some payload, given a public ECDSA key, and I know beforehand that the signature is correct. I want to use  the cryptography python library, but the problem being, I can't make the verification work and always get a ```\nInvalidSignature```\n exception, even though the signature should be correct.\n\nHere the code snippet I'm currently using. The public key is base64 encoded and in DER format (so no ```\n---BEGIN PUBLIC KEY ---```\n etc.) and the signature is base64 encoded as well. The message is some JSON data as a string, with no spaces.\n\n```\nimport base64\nfrom cryptography.hazmat.primitives.asymmetric import ec\nfrom cryptography.hazmat.primitives import serialization, hashes\nfrom cryptography.hazmat.backends import default_backend\n\ndef cryptography_verify(signature: str, public_key: str, message: str):\n    public = base64.b64decode(public_key)\n    pub = serialization.load_der_public_key(public, default_backend())\n\n    sig = base64.b64decode(signature)\n\n    msg = bytearray(message, 'utf-8')\n\n    return pub.verify(sig, msg, ec.ECDSA(hashes.SHA256()))\n```\n\n\nThis will result in the following error.\n\n```\nTraceback (most recent call last):\n  File \"verify.py\", line 49, in <module>\n    test()\n  File \"verify.py\", line 44, in test\n    print(cryptography_verify(signature, public_key, message))\n  File \"verify.py\", line 31, in cryptography_verify\n    return pub.verify(sig, msg, ec.ECDSA(hashes.SHA256()))\n  File \"/home/philipp/.local/lib/python3.6/site-packages/cryptography/hazmat/backends/openssl/ec.py\", line 352, in verify\n    _ecdsa_sig_verify(self._backend, self, signature, data)\n  File \"/home/philipp/.local/lib/python3.6/site-packages/cryptography/hazmat/backends/openssl/ec.py\", line 101, in _ecdsa_sig_verify\n    raise InvalidSignature\ncryptography.exceptions.InvalidSignature\n```\n\n\nThe reason I know the signature works for sure, is because I tried out another library called ecdsa, where I can successfully verify the signature. Here the snippet for that.\n\n```\nimport hashlib\nimport base64\nimport ecdsa\n\ndef ecdsa_verify(signature: str, public_key: str, message: str):\n    public = base64.b64decode(public_key)\n    pub = ecdsa.VerifyingKey.from_der(public)\n\n    sig = base64.b64decode(signature)\n\n    msg = bytearray(message, 'utf-8')\n\n    return pub.verify(sig, msg, hashfunc=hashlib.sha256)\n```\n\n\nThis will just return ```\nTrue```\n. The reason why I'm not just using the working solution is, because I have to use the ```\ncryptography```\n library eventually, for some functionality that the ```\necdsa```\n is not providing. Plus I don't want to use two libraries for the same purpose.\n\nAfter doing some digging, trying prehashing the message with no positive results, I tried printing out the public key bytes of both deserialized keys (meaning the ```\npub```\n variable).\n\n```\n# for ecdsa library\nprint(pub.to_string())\n\n# for cryptography library\nprint(pub.public_bytes(serialization.Encoding.DER, serialization.PublicFormat.SubjectPublicKeyInfo))\n```\n\n\nInterestingly enough, this resuts in the following.\n\n```\n# for ecdsa library\nb'3Le\\xf0^g\\xc0\\x85w \\n\\xee\\xd4\\xf7\\xfc\\xe5`\\xa8\\xe1\\xc7\\xd39\\x0fu\\x8e\\x1cUi\\r\\xf1\\x1c\\xc7\\x96\\xe3}*\\xed\\x1e\\x07\\xfe\\xd2f\\x01u\\x19\\x05\\xef\\xa795\\xfc\\xa6\\x0bf\\xac\\xbaS\\xf8{\\xbf\\x1f\\xbaT\\x87'\n\n# for cryptography library\nb'0Y0\\x13\\x06\\x07*\\x86H\\xce=\\x02\\x01\\x06\\x08*\\x86H\\xce=\\x03\\x01\\x07\\x03B\\x00\\x043Le\\xf0^g\\xc0\\x85w \\n\\xee\\xd4\\xf7\\xfc\\xe5`\\xa8\\xe1\\xc7\\xd39\\x0fu\\x8e\\x1cUi\\r\\xf1\\x1c\\xc7\\x96\\xe3}*\\xed\\x1e\\x07\\xfe\\xd2f\\x01u\\x19\\x05\\xef\\xa795\\xfc\\xa6\\x0bf\\xac\\xbaS\\xf8{\\xbf\\x1f\\xbaT\\x87'\n```\n\n\nMeaning the ```\ncryptography```\n library prepends some bytes to the public key, in comparison to the ```\necdsa```\n library. Why and how can I prevent this? I feel like I'm just misusing the library and this can somehow be solved, but I just don't know how.\n\n\n\nUpdate1: To clarify things more, here the invocations of the verification methods. \n\n```\ndef test():\n    file_path = \"sample.json\"\n    with open(file_path, \"r\") as file:\n        file_json = json.load(file)\n\n    signature = '9CMVpSkDaKUmZFoluiURVyjJGZ3GgcY1ZopPmw8qR+TsbEH2wbh4zkZDHcNzvV8MeFVn2ln5PuLv2v/+24AMSg=='\n    public_key = 'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEM0xl8F5nwIV3IAru1Pf85WCo4cfTOQ91jhxVaQ3xHMeW430q7R4H/tJmAXUZBe+nOTX8pgtmrLpT+Hu/H7pUhw=='\n    message = json.dumps(file_json, separators=(',', ':'))\n\n    print(ecdsa_verify(signature, public_key, message))\n    print()\n    print(cryptography_verify(signature, public_key, message))\n    return\n```\n\n\nThe ```\nsample.json```\n looks like this.\n\n```\n{\n    \"_type\": \"Targets\",\n    \"delegations\": {\n        \"keys\": {},\n        \"roles\": []\n    },\n    \"expires\": \"2023-01-09T11:31:27.627615676+01:00\",\n    \"targets\": {\n        \"v1\": {\n            \"hashes\": {\n                \"sha256\": \"E4irx6ElMoNsOoG9sAh0CbFSCPWuunqHrtz9VtY3wUU=\"\n            },\n            \"length\": 1994\n        },\n        \"v2\": {\n            \"hashes\": {\n                \"sha256\": \"uKOFIodqniVQ1YLOUaHYfr3GxXDl5YXQhWC/1kb3+AQ=\"\n            },\n            \"length\": 1994\n        }\n    },\n    \"version\": 2\n}\n```\n\n\nAs I understand it, both methods use the exact same inputs, so there shouldn't be any difference in the JSON message. I also hex-encoded the deserialized public keys, here you go.\n\n```\n# for ecdsa\n334c65f05e67c08577200aeed4f7fce560a8e1c7d3390f758e1c55690df11cc796e37d2aed1e07fed26601751905efa73935fca60b66acba53f87bbf1fba5487\n\n# for cryptography\n3059301306072a8648ce3d020106082a8648ce3d03010703420004334c65f05e67c08577200aeed4f7fce560a8e1c7d3390f758e1c55690df11cc796e37d2aed1e07fed26601751905efa73935fca60b66acba53f87bbf1fba5487\n```\n\n    ", "Answer": "\r\nThe signature format that you provided isn't suitable for OpenSSL. OpenSSL's error can be extracted by augmenting the cryptography method that is called when OpenSSL throws an error:\n\n```\ndef _consume_errors(lib):\n    errors = []\n    while True:\n        code = lib.ERR_get_error()\n        if code == 0:\n            break\n        print(hex(code))  # <-- ADD THIS\n\n        err_lib = lib.ERR_GET_LIB(code)\n        err_func = lib.ERR_GET_FUNC(code)\n        err_reason = lib.ERR_GET_REASON(code)\n\n        errors.append(_OpenSSLError(code, err_lib, err_func, err_reason))\n        print('ERROR: ', err_lib, err_func, err_reason)\n\n    return errors\n```\n\n\nYou'll receive error codes ```\nd0680a8```\n and ```\nd07803a```\n which can be translated using the OpenSSL CLI:\n\n```\n$ openssl errstr d0680a8    \nerror:0D0680A8:asn1 encoding routines:asn1_check_tlen:wrong tag\n$ openssl errstr d07803a    \nerror:0D07803A:asn1 encoding routines:asn1_item_embed_d2i:nested asn1 error\n```\n\n\nYou can achieve the same result using the OpenSSL CLI, avoiding the cryptography library altogether. To do so, store the public key in a file:\n\n```\n$ cat pub.key \n-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEM0xl8F5nwIV3IAru1Pf85WCo4cfT\nOQ91jhxVaQ3xHMeW430q7R4H/tJmAXUZBe+nOTX8pgtmrLpT+Hu/H7pUhw==\n-----END PUBLIC KEY-----\n```\n\n\nStore the signature (base64-decoded) in a file:\n\n```\necho -n '9CMVpSkDaKUmZFoluiURVyjJGZ3GgcY1ZopPmw8qR+TsbEH2wbh4zkZDHcNzvV8MeFVn2ln5PuLv2v/+24AMSg==' | base64 -d > sig\n```\n\n\nVerify that we got the correct input, by comparing the digest computed by OpenSSL:\n\n```\n$ echo -ne '{\"_type\":\"Targets\",\"delegations\":{\"keys\":{},\"roles\":[]},\"expires\":\"2023-01-09T11:31:27.627615676+01:00\",\"targets\":{\"v1\":{\"hashes\":{\"sha256\":\"E4irx6ElMoNsOoG9sAh0CbFSCPWuunqHrtz9VtY3wUU=\"},\"length\":1994},\"v2\":{\"hashes\":{\"sha256\":\"uKOFIodqniVQ1YLOUaHYfr3GxXDl5YXQhWC/1kb3+AQ=\"},\"length\":1994}},\"version\":2}' | openssl dgst -sha256\n(stdin)= e46bb43c417cac7d72ba24d48a7c5d669afaa88129f5a73ac3c7da1f9a3ae409\n```\n\n\nAnd finally try to check the signature:\n\n```\n$ echo -ne '{\"_type\":\"Targets\",\"delegations\":{\"keys\":{},\"roles\":[]},\"expires\":\"2023-01-09T11:31:27.627615676+01:00\",\"targets\":{\"v1\":{\"hashes\":{\"sha256\":\"E4irx6ElMoNsOoG9sAh0CbFSCPWuunqHrtz9VtY3wUU=\"},\"length\":1994},\"v2\":{\"hashes\":{\"sha256\":\"uKOFIodqniVQ1YLOUaHYfr3GxXDl5YXQhWC/1kb3+AQ=\"},\"length\":1994}},\"version\":2}' | openssl dgst -sha256 -verify pub.key -signature sig\nError Verifying Data\n140338533991616:error:0D0680A8:asn1 encoding routines:asn1_check_tlen:wrong tag:../crypto/asn1/tasn_dec.c:1130:\n140338533991616:error:0D07803A:asn1 encoding routines:asn1_item_embed_d2i:nested asn1 error:../crypto/asn1/tasn_dec.c:290:Type=ECDSA_SIG\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "is there cryptography algorithm space /input invariant?\r\n                \r\ni m searching a algoritm for cryptography that produces always the same result for the same input and if in the input at position k there is XXXXXX,\nin the output at position k there is always the field YYYYYY\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography reference not working for Xamarin IOS\r\n                \r\n\n\nI have added the PCL Crypto package in my project and I am trying to use the Cryptography service in MVVMCross..but it is showing up..as in the image.\n\nAny help?\n    ", "Answer": "\r\n```\nPCLCrypto```\n doesn't provide the ```\nSystem.Security.Cryptography```\n namespace. Its APIs are exposed in ```\nPCLCrypto.WinRTCrypto```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Fast and secure cryptography algorithm C#\r\n                \r\nI'm looking for a fast and secure cryptography algorithm with C# implementation. I need to be able to restore the initial message. What could you suggest?\n\nThank you for your help!\n    ", "Answer": "\r\nIf you need asymmetric encryption, use 2048-bits RSA.\nIf you can get away with symmetric encryption, use 256-bit AES.\nMSDN Reference:\nSystem.Security.Cryptography\nRSACryptoServiceProvider\nAesCryptoServiceProvider\nYou can read about the difference between them here: Symmetric versus Asymmetric.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography Python Docker multistage build\r\n                \r\nI have a Python project that runs in a docker container and I am trying to convert to a multistage docker build process. My project depends on the cryptography package. My Dockerfile consists of:\n\n```\n# Base                                                                          \nFROM python:3.6 AS base                                                         \n\nRUN pip install cryptography                                                    \n\n# Production                                                                    \nFROM python:3.6-alpine                                                          \n\nCOPY --from=base /root/.cache /root/.cache                                      \n\nRUN pip install cryptography \\                                                  \n        && rm -rf /root/.cache                                                  \n\nCMD python\n```\n\n\nWhich I try to build with e.g:\n\n```\ndocker build -t my-python-app .\n```\n\n\nThis process works for a number of other Python requirements I have tested, such as ```\npycrypto```\n and ```\npsutil```\n, but throws the following error for ```\ncryptography```\n:\n\n```\nStep 5/6 : RUN pip install cryptography         && rm -rf /root/.cache\n ---> Running in ebc15bd61d43\nCollecting cryptography\n  Downloading cryptography-2.1.4.tar.gz (441kB)\nCollecting idna>=2.1 (from cryptography)\n  Using cached idna-2.6-py2.py3-none-any.whl\nCollecting asn1crypto>=0.21.0 (from cryptography)\n  Using cached asn1crypto-0.24.0-py2.py3-none-any.whl\nCollecting six>=1.4.1 (from cryptography)\n  Using cached six-1.11.0-py2.py3-none-any.whl\nCollecting cffi>=1.7 (from cryptography)\n  Downloading cffi-1.11.5.tar.gz (438kB)\n    Complete output from command python setup.py egg_info:\n\n        No working compiler found, or bogus compiler options passed to\n        the compiler from Python's standard \"distutils\" module.  See\n        the error messages above.  Likely, the problem is not related\n        to CFFI but generic to the setup.py of any Python package that\n        tries to compile C code.  (Hints: on OS/X 10.8, for errors about\n        -mno-fused-madd see http://stackoverflow.com/questions/22313407/\n        Otherwise, see https://wiki.python.org/moin/CompLangPython or\n        the IRC channel #python on irc.freenode.net.)\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-uyh9_v63/cffi/\n```\n\n\nObviously I was hoping not to have to install any compiler on my production image. Do I need to copy across another directory other than ```\n/root/.cache```\n?\n    ", "Answer": "\r\nThere is no manylinux wheel for Alpine, so you need to compile it yourself. Below is pasted from documentation on installation. Install and remove build dependencies in the same command to only save the package to the docker image layer. \n\n\n  If you are on Alpine or just want to compile it yourself then\n  cryptography requires a compiler, headers for Python (if you’re not\n  using pypy), and headers for the OpenSSL and libffi libraries\n  available on your system.\n  \n  Alpine Replace python3-dev with python-dev if you’re using Python 2.\n\n```\n$ sudo apk add gcc musl-dev python3-dev libffi-dev openssl-dev\n```\n\n  \n  If you get an error with openssl-dev you may have to use libressl-dev.\n\n\nDocs can be found here\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "AES Encryption in Python - different results when using pycryptodome and cryptography\r\n                \r\nWe're moving away from ```\npycryptodome```\n to ```\ncryptography```\n due to security considerations. \nWhen encoding the same plain-text string with pycryptodome I get a different cypher text than cryptography, consider the following code:\n\nPycryptodome:\n\n```\n    def aes_encrypt(self, plain_text):\n        try:\n            plain_text_with_padding = self._aes_pad(plain_text).encode(\"utf-8\")\n            cipher = AES.new(self.aes_secret_key, AES.MODE_CBC, self.aes_iv)\n\n            msg = cipher.encrypt(plain_text_with_padding)\n\n            return msg.encode(\"hex\")\n        except Exception as e:\n            raise AesError(e.message)\n```\n\n\nCryptography:\n\n```\n\n    def aes_encrypt(self, plain_text):\n        try:\n            plain_text_with_padding = self._aes_pad(plain_text)\n            encryptor = Cipher(\n                algorithm=algorithms.AES(self.aes_secret_key),\n                mode=modes.CBC(self.aes_iv),\n                backend=default_backend(),\n\n            ).encryptor()\n\n            msg = encryptor.update(plain_text_with_padding) + encryptor.finalize()\n\n            return msg.encode(\"hex\")\n        except Exception as e:\n            raise AesError(e.message)\n\n    @staticmethod\n    def _aes_pad(s):\n        padding_length = AES.block_size - (len(s) % AES.block_size)\n        return s + padding_length * chr(padding_length)\n```\n\n\nThe test code:\n\n```\n    def setUp(self):\n        secret_manager = Mock()\n        secret_manager.get_secret.return_value = {\n            \"hmac_secret_key\": \"secret\",\n            \"aes_secret_key\": \"fbc1f4bf4c826fc41d27905bc3eb8cbb\",\n            \"aes_iv\": \"J3wmcjV0Vzd9Jw==\"\n        }\n        self.crypto_utils = CryptoUtils(secret_manager)\n\n    def test_aes_encrypt(self):\n        asset_id = \"123456\"\n\n        encrypted_asset_id = self.crypto_utils.aes_encrypt(asset_id)\n\n        self.assertEqual(\n            \"926fbb0584c6e357157709e723b0e0d2\",\n            encrypted_asset_id\n        )\n\n```\n\n\nThe same test code pass using ```\npycryptodome```\n but generate much longer cipher text when using ```\ncryptography```\n.\n\nAny help on this matter is appreciated.\n    ", "Answer": "\r\nThe issue seemed to be the AES block size - in the previous implementation (```\nPycryptodome```\n) it’s given in ```\nbytes```\n while in the new lib (```\ncryptography```\n) it’s given in ```\nbits```\n.\n\nWhen running the same code with the following changes using ```\ncryptography```\n it produces the expected results:\n\n```\n    @staticmethod\n    def _aes_pad(s):\n        block_size_bytes = AES.block_size / 8\n        padding_length = block_size_bytes - (len(s) % block_size_bytes)\n        return s + padding_length * chr(padding_length)\n\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "iTunes Connect - Is your app designed to use cryptography?\r\n                \r\nWhen I tried to activate a build of my app for Test Flight usage, I got asked this question:\n\n\n  Is your app designed to use cryptography or does it contain or incorporate cryptography? (Select Yes even if your app is only utilizing the encryption available in iOS or OS X.)\n\n\nIn my app, I'm sending API calls over HTTPS to my remote server so users can make friends, chat, authenticate, etc. \n\nDoes this count? I'm kind of confused why they're asking this now AND only for Test Flight.\n    ", "Answer": "\r\nYou can select NO as using HTTPS is now exempt from the Exporter Registration and Reporting (ERN) as of late September, 2016:\nhttps://stackoverflow.com/a/40919650/4976373\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "cryptography with python, it is for a project\r\n                \r\nI need some help creating cryptography code for python. i have some code myself but if someone can add to it and maybe and some brute force techniques that could help a lot thanks.\n\n```\ndef crypto():\n   for character in range(0,256):\n       print chr(character)\n\n\ndef Caesar_Encrypt (plaintext, key):\n   cipher = \"\"\n   for index in range(0, len(plaintext)):\n       cipher += chr((ord(plaintext[index]) + key) % 256)\n   return cipher\n\ndef Caesar_Decrypt (cipher,key):\n   plaintext = \"\"\n   for index in range(0, len(cipher)):\n       plaintext += chr((ord(cipher[index]) - key) % 256)\n   return plaintext\ndef main():\n   crypto()\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python padding for cryptography AES\r\n                \r\nsince I don't have much knowledge of Python or cryptography I wasn't able to figure out the solution, but I guess the problem is with padding.\nThis script get's and decrypts the password using two functions.\nI am getting an error:\n\n```\nValueError: The length of the provided data is not a multiple of the block length.```\n\n\nWhich I guess has something to do with padding.\n\nHere are the values used by the script:\n\nKey: ```\n8$4Tws[14R!,0Ba|```\n\n\nEncrypted pass: ```\nYTj+F1oo5OUNBgKyfifN/2R2zvFLFHbXu4Te2+OvBJ7JRae1DMVJR42qK0GucmiUyTGdtQzFSUeNqitBrnJolMkxp7UMxUlHeaor```\n\n\nFunctions:\n\n```\nfrom django.utils.encoding import force_bytes, force_text\n\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import default_backend\n\n @property\ndef password(self):\n    \"\"\"Password getter.\"\"\"\n    return decrypt(self._password)\n\ndef decrypt(ct):\n    backend = default_backend()\n    key = param_tools.get_global_parameter(\"secret_key\", app=\"core\")\n    print(key)\n    cipher = Cipher(\n        algorithms.AES(force_bytes(key)), modes.ECB(), backend=backend)\n    ct = base64.b64decode(force_bytes(ct))\n    decryptor = cipher.decryptor()\n    clear = decryptor.update(ct) + decryptor.finalize()\n    return force_text(clear.rstrip(b\" \"))\n```\n\n\nCan you please help? Thanks\n    ", "Answer": "\r\nSo, for everyone facing this problem with package modoboa-imap-migration\n\nThe problem was that in the DB table ```\nmodoboa_imap_migration_migration```\n this package stores all the passwords for the migration, hovewer the column ```\n_password```\n is se to varchar(100) which is not enough for the encrypted pass to be saved. I increased this to varchar(255) and now everything works ok.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does the Facebook or AdMob SDK use cryptography?\r\n                \r\nI'm developing a mobile application with Cordova and the Ionic framework. I'm also using the Cordova Facebook plugin and Cordova AdMobPro plugin which are written in java and objective c. I don't know java and objective c programming language. \nWhile submitting the application on iTunes Connect it asks me if my application is using cryptography or not. Do any of these SDKs or plugins use cryptography?\n    ", "Answer": "\r\nI am not sure about @Daniel Storm answer\n\nFacebook have their own crypto library, named Conceal https://facebook.github.io/conceal/\n\nAnd according to their page, this is used to store the images into the SD into android devices, so, probably, the answer to the question title is YES.\n\nBut, quoting again their page \n\n\n  Conceal doesn't implement any crypto, but instead, it uses specific\n  cryptographics algorithms from OpenSSL.\n\n\nThey are only cryptographics algorithms, not crypto per se, so probably the answer to Apple Question about cryptography usage is NOT\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Creative uses for cryptography beyond the usual encryption/authentication\r\n                \r\nLately I've been intrigued by some of the less traditional uses of cryptography. Things like:\n\n\nmaking invoice numbers unpredictable\nrolling dice in a p2p game\nshuffling a deck of cards in a p2p game\n\n\nWhat other applications of cryptography can you think of outside the usual realm of message authentication and confidentiality?\n    ", "Answer": "\r\nMy favorite use of cryptography is for deleting information. You encrypt the information you have (GB worth, TB worth), and store the key WITH THE DATA. When you want to erase all of the data, you simply overwrite the key. This makes key management simple, and the erasure is as good as your cryptography.\n\nAlternatively, you can simply increase the work factor to recover the erased information. You can, for example, erase one bit of the key every hour. This makes it twice as hard to recover the data every hour, which is useful if you want to give the user a chance to \"undelete\" the data, but you want to make that harder and harder as time goes on.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to fix ImportError: No module named cryptography?\r\n                \r\nI want to auto renew certificate via certbot, but not working, got error \"ImportError: No module named cryptography\"\n\n# ./certbot-auto --dry-run\n\nError: couldn't get currently installed version for /opt/eff.org/certbot/venv/bin/letsencrypt:\nTraceback (most recent call last):\n  File \"/opt/eff.org/certbot/venv/bin/letsencrypt\", line 7, in \n    from certbot.main import main\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/certbot/main.py\", line 10, in \n    import josepy as jose\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/josepy/init.py\", line 41, in \n    from josepy.interfaces import JSONDeSerializable\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/josepy/interfaces.py\", line 7, in \n    from josepy import errors, util\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/josepy/util.py\", line 7, in \n    import OpenSSL\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/OpenSSL/init.py\", line 8, in \n    from OpenSSL import crypto, SSL\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/OpenSSL/crypto.py\", line 12, in \n    from cryptography import x509\nImportError: No module named cryptography\n\nI tried to install cryptography, and got this result\n\nsudo /opt/eff.org/certbot/venv/bin/pip install cryptography\n\nYou are using pip version 9.0.1, however version 19.2.3 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n\nThen I tried this command\npip install --upgrade pip\n\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\nRequirement already up-to-date: pip in /usr/lib/python2.7/dist-packages/pip-19.2.3-py2.7.egg (19.2.3)\n\nHow to get cryptography installed?\n    ", "Answer": "\r\nSuccessfully installedI got the exact same error message after I ran certbot-auto and it upgraded to the new version. \n\nHere's how I solve this in my case: \n\n```\npip install cryptography \ncd /opt/eff.org/certbot/venv/lib64/python2.7 \nmv site-packages site-packages.sav \nln -s dist-packages/ site-packages \n```\n\n\nIt's because the letsencrypt's custom version of python is looking for the package under site-packages subfolder while it's empty in my case and the package is under dist-packages subfolder. \n\nNote: If you see cryptography is successfully installed then no need to run 'pip install --upgrade pip' command and can disregard the warning information.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Problem \"EXCEPTION NOT FOUND\" in Cryptography (Python)\r\n                \r\nCODE\n```\nstart_time1 = time.time()\n\nec = EC(a, b, num)\ng, _ = ec.at(at)\nassert ec.order(g) <= ec.q\n            \n# ElGamal enc/dec usage\neg = ElGamal(ec, g)\n# mapping value to ec point\n# \"masking\": value k to point ec.mul(g, k)\n# (\"imbedding\" on proper n:use a point of x as 0 <= n*v <= x < n*(v+1) < q)\nmapping = [ec.mul(g, i) for i in range(eg.n)]\nplain = mapping[at]    \npub = eg.gen(priv)   \ncipher = eg.enc(plain, pub, r) \ndecoded = eg.dec(cipher, priv)\nassert decoded == plain\nassert cipher != pub\n\naverage_time1 = time.time() - start_time1\n```\n\n\nERROR TRACEBACK\n```\nException                                 Traceback (most recent call last)\n<ipython-input-2-77934393a2f8> in <module>\n    256 \n    257 ec = EC(a, b, num)\n--> 258 g, _ = ec.at(at)\n    259 assert ec.order(g) <= ec.q\n    260 \n\n1 frames\n<ipython-input-2-77934393a2f8> in sqrt(n, q)\n     85             return (i, q - i)\n     86         pass\n---> 87     raise Exception(\"not found\")\n     88 \n     89 \n\nException: not found\n```\n\n\nDonot know what to do with this error.This is basically an ECC Cryptography Code in Python.\nI found this on the stack overflow -\n```\nuse \\Exception as Exception;\n```\n\nBut Error.\n    ", "Answer": "\r\nThe exception appear to originate in this code for calculating (or really, just brute-forcing by trying all integer possibilities) the square root of a number n, modulo q.\n```\ndef sqrt(n, q):\n    \"\"\"sqrt on PN modulo: returns two numbers or exception if not exist\n    >>> assert (sqrt(n, q)[0] ** 2) % q == n\n    >>> assert (sqrt(n, q)[1] ** 2) % q == n\n    \"\"\"\n    assert n < q\n    for i in range(1, q):\n        if i * i % q == n:\n            return (i, q - i)\n        pass\n    raise Exception(\"not found\")\n```\n\nNot all whole numbers are squares of other whole numbers, so the function will throw an exception with the message \"not found\" for that case.\nThis in turn is happening because on the line\n```\ng, _ = ec.at(at)\n```\n\nyou are asking for a point on the elliptic curve which does not exist.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python + No module named cryptography.fernet after upgrade cryptography pkg\r\n                \r\nwe update some python pkgs and modules\n\none of them was the pkg  ```\ncryptography```\n \n\nwe update the  cryptography  from version ```\ncryptography (1.7.1)```\n to ```\ncryptography (2.9.2)```\n\n\nbut when we access the python shell , we get ```\nImportError: No module named cryptography.fernet```\n\n\nin spite cryptography is installed \n\n```\npip list |grep  cryptography\ncryptography (2.9.2)\n```\n\n\nfrom python shell\n\n```\npython\nPython 2.7.5 (default, Sep 12 2018, 05:31:16)\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-36)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from cryptography.fernet import Fernet\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nImportError: No module named cryptography.fernet\n```\n\n\nNote - on the previous version ```\ncryptography (1.7.1)```\n , every thing was ok\n\nso what could be the problem with the module? \n\nnote the same problem is from the python script\n\n```\nimport sys\nimport os\nimport base64\nfrom cryptography.fernet import Fernet\n.\n.\n.\n```\n\n    ", "Answer": "\r\ninstalling of the following rpm file solved the problem\n\n```\nyum localinstall python2-cryptography-1.7.2-2.el7.x86_64.rpm\nLoaded plugins: langpacks\nConfiguration\nExamining python2-cryptography-1.7.2-2.el7.x86_64.rpm: python2-cryptography-1.7.2-2.el7.x86_64\nMarking python2-cryptography-1.7.2-2.el7.x86_64.rpm to be installed\nResolving Dependencies\n--> Running transaction check\n---> Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n=============================================================================================================================================================================================\n Package                                       Arch                            Version                               Repository                                                         Size\n=============================================================================================================================================================================================\nInstalling:\n python2-cryptography                          x86_64                          1.7.2-2.el7                           /python2-cryptography-1.7.2-2.el7.x86_64                          2.6 M\n\nTransaction Summary\n=============================================================================================================================================================================================\nInstall  1 Package\n\nTotal size: 2.6 M\nInstalled size: 2.6 M\nIs this ok [y/d/N]: n\nExiting on user command\nYour transaction was saved, rerun it with:\n yum load-transaction /tmp/yum_save_tx.2020-06-04.09-55.SDc8o9.yumtx\n[root@master02 TEST1]# yum localinstall python2-cryptography-1.7.2-2.el7.x86_64.rpm\nLoaded plugins: langpacks\nRepository HDP-2.6-repo-1 is listed more than once in the configuration\nRepository HDP-UTILS-1.1.0.22-repo-1 is listed more than once in the configuration\nExamining python2-cryptography-1.7.2-2.el7.x86_64.rpm: python2-cryptography-1.7.2-2.el7.x86_64\nMarking python2-cryptography-1.7.2-2.el7.x86_64.rpm to be installed\nResolving Dependencies\n--> Running transaction check\n---> Package python2-cryptography.x86_64 0:1.7.2-2.el7 will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n=============================================================================================================================================================================================\n Package                                       Arch                            Version                               Repository                                                         Size\n=============================================================================================================================================================================================\nInstalling:\n python2-cryptography                          x86_64                          1.7.2-2.el7                           /python2-cryptography-1.7.2-2.el7.x86_64                          2.6 M\n\nTransaction Summary\n=============================================================================================================================================================================================\nInstall  1 Package\n\nTotal size: 2.6 M\nInstalled size: 2.6 M\nIs this ok [y/d/N]: y\nDownloading packages:\nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\n  Installing : python2-cryptography-1.7.2-2.el7.x86_64                                                                                                                                   1/1\n  Verifying  : python2-cryptography-1.7.2-2.el7.x86_64                                                                                                                                   1/1\n\nInstalled:\n  python2-cryptography.x86_64 0:1.7.2-2.el7\n\nComplete!\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "DES Cryptography in C#\r\n                \r\nI've been trying to find out the correct way to encrypt a byte[16] variable using DES algorithm. Here's the scenario:  \n\n\nThe data should be encrypted in 8-byte parts. the key for encryption is: ```\nbyte[] {11, 11, 11, 11, 11, 11, 11, 11}```\n\nFirst 8 bytes is encrypted using ```\nInstance Vector = new byte[8]```\n (8 bytes with 0 value).\nthe encrypted result will be the IV for the next 8 bytes.  (is this CBC?)\nthat last 8 byte is the result I should send.  \n\n\nWith this information, I have implemented the ```\nEncrypt```\n method as follows:  \n\n```\npublic static byte[] Encrypt(byte[] data)\n{\n    var dataChunk = new byte[8];\n    var IV = new byte[8];\n    var result = new byte[8];\n    var key = new byte[] { 11, 11, 11, 11, 11, 11, 11, 11 };\n\n    for (int counter = 0; counter < data.Length / 8; counter++)\n    {\n        // Copy the next 8-byte chunk.\n        Array.Copy(data, counter * 8, dataChunk, 0, 8);\n        var des = System.Security.Cryptography.DES.Create();\n        des.Key = key;\n        des.IV = IV;\n        des.Padding = PaddingMode.None;\n        ICryptoTransform cryptoTransform = des.CreateEncryptor(key, IV);\n\n        // Encrypt the datra chunk.\n        cryptoTransform.TransformBlock(dataChunk, 0, 8, result, 0);\n\n        // Set the new IV.\n        Array.Copy(result, IV, 8);\n    } \nreturn result;\n}\n```\n\n\nIs this the correct way of encrypting data using DES cryptography?\n    ", "Answer": "\r\nYou don't need to create an encryptor for each block. The encryptor itself implements the operation modes (CBC, ...) and padding.\nSo you need something like this:\n\n```\nbyte[] input = ...\nbyte[] key = ...\nbyte[] iv = ...\n\nusing (DES des = DES.Create())\n{\n    des.Mode = CipherMode.CBC;\n    des.Padding = PaddingMode.None;\n\n    using (ICryptoTransform encryptor = des.CreateEncryptor(key , iv))\n    {\n        byte[] output = encryptor.TransformFinalBlock(input, 0, input.Length);\n    }\n}\n```\n\n\nI'm omitting the warning of using DES here. You might also want to take a look at CryptoStream afterwards for an even easier en- and decryption ...\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pip._vendor.pep517.wrappers.BackendUnavailable error while installing cryptography\r\n                \r\nI'm trying to install cryptography to my system, but I get this error:\n\n```\n  WARNING: Missing build requirements in pyproject.toml for cryptography from https://files.pythonhosted.org/packages/07/ca/bc827c5e55918ad223d59d299fff92f3563476c3b00d0a9157d9c0217449/cryptography-2.6.1.tar.gz#sha256=26c821cbeb683facb966045e2064303029d572a87ee69ca5a1bf54bf55f93ca6.\n  WARNING: The project does not specify a build backend, and pip cannot fall back to setuptools without 'setuptools>=40.8.0' and 'wheel'.\n  Getting requirements to build wheel ... done\nERROR: Exception:\nTraceback (most recent call last):\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/cli/base_command.py\", line 178, in main\n    status = self.run(options, args)\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/commands/install.py\", line 352, in run\n    resolver.resolve(requirement_set)\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 131, in resolve\n    self._resolve_one(requirement_set, req)\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 294, in _resolve_one\n    abstract_dist = self._get_abstract_dist_for(req_to_install)\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/resolve.py\", line 242, in _get_abstract_dist_for\n    self.require_hashes\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/operations/prepare.py\", line 368, in prepare_linked_requirement\n    abstract_dist.prep_for_dist(finder, self.build_isolation)\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/operations/prepare.py\", line 175, in prep_for_dist\n    self.install_backend_dependencies(finder=finder)\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_internal/operations/prepare.py\", line 123, in install_backend_dependencies\n    reqs = req.pep517_backend.get_requires_for_build_wheel()\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_vendor/pep517/wrappers.py\", line 71, in get_requires_for_build_wheel\n    'config_settings': config_settings\n  File \"/data/packages/usr/local/lib/python3.6/site-packages/pip/_vendor/pep517/wrappers.py\", line 162, in _call_hook\n    raise BackendUnavailable\npip._vendor.pep517.wrappers.BackendUnavailable\n```\n\n\nThis is my setup:\n\n\nAlpine Linux 3.6.2 \nPython 3.6.3 \npip 19.1 \nwheel 0.33.1  \nsetuptools 41.0.1\n\n\nAny idea what could be the problem, or how to solve it?\nThanks for the help in advance!\n    ", "Answer": "\r\nI did not find any uniform solution to this problem. You can try the following troubleshooting steps. one of them should work.\n\nUpgrade the ```\npip```\n version.\n\nChange the library/package version.\n\nIf you are installing from source, try a different .```\nwhl```\n package or use ```\ntar.gz```\n.\n\nUse ```\n--no-use-pep517```\n with your ```\npip install```\n command (didn't work for me though, but I see it worked for some).\n\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Trouble installing cryptography with pip3 (Ubuntu 16.04 LTS)\r\n                \r\ni'm currently having trouble installing cryptography with pip3.\nI tried all the other solutions but non of them worked.\n\nHere is the output from \"sudo -H pip install cryptography\":\n\n```\nCollecting cryptography\n  Using cached cryptography-1.5.tar.gz\nRequirement already satisfied (use --upgrade to upgrade): idna>=2.0 in /usr/local/lib/python3.5/dist-packages (from cryptography)\nRequirement already satisfied (use --upgrade to upgrade): pyasn1>=0.1.8 in /usr/lib/python3/dist-packages (from cryptography)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.4.1 in /usr/lib/python3/dist-packages (from cryptography)\nRequirement already satisfied (use --upgrade to upgrade): setuptools>=11.3 in /usr/local/lib/python3.5/dist-packages (from cryptography)\nCollecting cffi>=1.4.1 (from cryptography)\n  Using cached cffi-1.8.2.tar.gz\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /usr/local/lib/python3.5/dist-packages (from cffi>=1.4.1->cryptography)\nBuilding wheels for collected packages: cryptography, cffi\n  Running setup.py bdist_wheel for cryptography ... error\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-2saf6qpj/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" bdist_wheel -d /tmp/tmpme9hnxc5pip-wheel- --python-tag cp35:\n  c/_cffi_backend.c:2:20: fatal error: Python.h: No such file or directory\n  compilation terminated.\n  Traceback (most recent call last):\n    File \"/usr/lib/python3.5/distutils/unixccompiler.py\", line 118, in _compile\n      extra_postargs)\n    File \"/usr/lib/python3.5/distutils/ccompiler.py\", line 909, in spawn\n      spawn(cmd, dry_run=self.dry_run)\n    File \"/usr/lib/python3.5/distutils/spawn.py\", line 36, in spawn\n      _spawn_posix(cmd, search_path, dry_run=dry_run)\n    File \"/usr/lib/python3.5/distutils/spawn.py\", line 159, in _spawn_posix\n      % (cmd, exit_status))\n  distutils.errors.DistutilsExecError: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"/usr/lib/python3.5/distutils/core.py\", line 148, in setup\n      dist.run_commands()\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 955, in run_commands\n      self.run_command(cmd)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\n      cmd_obj.run()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/bdist_egg.py\", line 161, in run\n      cmd = self.call_command('install_lib', warn_dir=0)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/bdist_egg.py\", line 147, in call_command\n      self.run_command(cmdname)\n    File \"/usr/lib/python3.5/distutils/cmd.py\", line 313, in run_command\n      self.distribution.run_command(command)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\n      cmd_obj.run()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/install_lib.py\", line 11, in run\n      self.build()\n    File \"/usr/lib/python3.5/distutils/command/install_lib.py\", line 109, in build\n      self.run_command('build_ext')\n    File \"/usr/lib/python3.5/distutils/cmd.py\", line 313, in run_command\n      self.distribution.run_command(command)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\n      cmd_obj.run()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/build_ext.py\", line 77, in run\n      _build_ext.run(self)\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 338, in run\n      self.build_extensions()\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 447, in build_extensions\n      self._build_extensions_serial()\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 472, in _build_extensions_serial\n      self.build_extension(ext)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/build_ext.py\", line 198, in build_extension\n      _build_ext.build_extension(self, ext)\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 532, in build_extension\n      depends=ext.depends)\n    File \"/usr/lib/python3.5/distutils/ccompiler.py\", line 574, in compile\n      self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts)\n    File \"/usr/lib/python3.5/distutils/unixccompiler.py\", line 120, in _compile\n      raise CompileError(msg)\n  distutils.errors.CompileError: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 156, in save_modules\n      yield saved\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 197, in setup_context\n      yield\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 246, in run_setup\n      DirectorySandbox(setup_dir).run(runner)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 276, in run\n      return func()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 245, in runner\n      _execfile(setup_script, ns)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 47, in _execfile\n      exec(code, globals, locals)\n    File \"/tmp/easy_install-sjss3av8/cffi-1.8.2/setup.py\", line 193, in <module>\n      return True\n    File \"/usr/lib/python3.5/distutils/core.py\", line 163, in setup\n      raise SystemExit(\"error: \" + str(msg))\n  SystemExit: error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 1100, in run_setup\n      run_setup(setup_script, args)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 249, in run_setup\n      raise\n    File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n      self.gen.throw(type, value, traceback)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 197, in setup_context\n      yield\n    File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n      self.gen.throw(type, value, traceback)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 168, in save_modules\n      saved_exc.resume()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 143, in resume\n      six.reraise(type, exc, self._tb)\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/_vendor/six.py\", line 685, in reraise\n      raise value.with_traceback(tb)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 156, in save_modules\n      yield saved\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 197, in setup_context\n      yield\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 246, in run_setup\n      DirectorySandbox(setup_dir).run(runner)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 276, in run\n      return func()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 245, in runner\n      _execfile(setup_script, ns)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 47, in _execfile\n      exec(code, globals, locals)\n    File \"/tmp/easy_install-sjss3av8/cffi-1.8.2/setup.py\", line 193, in <module>\n      return True\n    File \"/usr/lib/python3.5/distutils/core.py\", line 163, in setup\n      raise SystemExit(\"error: \" + str(msg))\n  SystemExit: error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"<string>\", line 1, in <module>\n    File \"/tmp/pip-build-2saf6qpj/cryptography/setup.py\", line 334, in <module>\n      **keywords_with_side_effects(sys.argv)\n    File \"/usr/lib/python3.5/distutils/core.py\", line 108, in setup\n      _setup_distribution = dist = klass(attrs)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/dist.py\", line 348, in __init__\n      self.fetch_build_eggs(attrs['setup_requires'])\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/dist.py\", line 394, in fetch_build_eggs\n      replace_conflicting=True,\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 851, in resolve\n      dist = best[req.key] = env.best_match(req, ws, installer)\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 1123, in best_match\n      return self.obtain(req, installer)\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 1135, in obtain\n      return installer(requirement)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/dist.py\", line 461, in fetch_build_egg\n      return cmd.easy_install(req)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 664, in easy_install\n      return self.install_item(spec, dist.location, tmpdir, deps)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 694, in install_item\n      dists = self.install_eggs(spec, download, tmpdir)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 875, in install_eggs\n      return self.build_and_install(setup_script, setup_base)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 1114, in build_and_install\n      self.run_setup(setup_script, setup_base, args)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 1102, in run_setup\n      raise DistutilsError(\"Setup script exited with %s\" % (v.args[0],))\n  distutils.errors.DistutilsError: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  ----------------------------------------\n  Failed building wheel for cryptography\n  Running setup.py clean for cryptography\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-2saf6qpj/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" clean --all:\n  c/_cffi_backend.c:2:20: fatal error: Python.h: No such file or directory\n  compilation terminated.\n  Traceback (most recent call last):\n    File \"/usr/lib/python3.5/distutils/unixccompiler.py\", line 118, in _compile\n      extra_postargs)\n    File \"/usr/lib/python3.5/distutils/ccompiler.py\", line 909, in spawn\n      spawn(cmd, dry_run=self.dry_run)\n    File \"/usr/lib/python3.5/distutils/spawn.py\", line 36, in spawn\n      _spawn_posix(cmd, search_path, dry_run=dry_run)\n    File \"/usr/lib/python3.5/distutils/spawn.py\", line 159, in _spawn_posix\n      % (cmd, exit_status))\n  distutils.errors.DistutilsExecError: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"/usr/lib/python3.5/distutils/core.py\", line 148, in setup\n      dist.run_commands()\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 955, in run_commands\n      self.run_command(cmd)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\n      cmd_obj.run()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/bdist_egg.py\", line 161, in run\n      cmd = self.call_command('install_lib', warn_dir=0)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/bdist_egg.py\", line 147, in call_command\n      self.run_command(cmdname)\n    File \"/usr/lib/python3.5/distutils/cmd.py\", line 313, in run_command\n      self.distribution.run_command(command)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\n      cmd_obj.run()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/install_lib.py\", line 11, in run\n      self.build()\n    File \"/usr/lib/python3.5/distutils/command/install_lib.py\", line 109, in build\n      self.run_command('build_ext')\n    File \"/usr/lib/python3.5/distutils/cmd.py\", line 313, in run_command\n      self.distribution.run_command(command)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 974, in run_command\n      cmd_obj.run()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/build_ext.py\", line 77, in run\n      _build_ext.run(self)\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 338, in run\n      self.build_extensions()\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 447, in build_extensions\n      self._build_extensions_serial()\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 472, in _build_extensions_serial\n      self.build_extension(ext)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/build_ext.py\", line 198, in build_extension\n      _build_ext.build_extension(self, ext)\n    File \"/usr/lib/python3.5/distutils/command/build_ext.py\", line 532, in build_extension\n      depends=ext.depends)\n    File \"/usr/lib/python3.5/distutils/ccompiler.py\", line 574, in compile\n      self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts)\n    File \"/usr/lib/python3.5/distutils/unixccompiler.py\", line 120, in _compile\n      raise CompileError(msg)\n  distutils.errors.CompileError: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 156, in save_modules\n      yield saved\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 197, in setup_context\n      yield\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 246, in run_setup\n      DirectorySandbox(setup_dir).run(runner)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 276, in run\n      return func()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 245, in runner\n      _execfile(setup_script, ns)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 47, in _execfile\n      exec(code, globals, locals)\n    File \"/tmp/easy_install-rfvxg0ae/cffi-1.8.2/setup.py\", line 193, in <module>\n      return True\n    File \"/usr/lib/python3.5/distutils/core.py\", line 163, in setup\n      raise SystemExit(\"error: \" + str(msg))\n  SystemExit: error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 1100, in run_setup\n      run_setup(setup_script, args)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 249, in run_setup\n      raise\n    File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n      self.gen.throw(type, value, traceback)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 197, in setup_context\n      yield\n    File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n      self.gen.throw(type, value, traceback)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 168, in save_modules\n      saved_exc.resume()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 143, in resume\n      six.reraise(type, exc, self._tb)\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/_vendor/six.py\", line 685, in reraise\n      raise value.with_traceback(tb)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 156, in save_modules\n      yield saved\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 197, in setup_context\n      yield\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 246, in run_setup\n      DirectorySandbox(setup_dir).run(runner)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 276, in run\n      return func()\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 245, in runner\n      _execfile(setup_script, ns)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/sandbox.py\", line 47, in _execfile\n      exec(code, globals, locals)\n    File \"/tmp/easy_install-rfvxg0ae/cffi-1.8.2/setup.py\", line 193, in <module>\n      return True\n    File \"/usr/lib/python3.5/distutils/core.py\", line 163, in setup\n      raise SystemExit(\"error: \" + str(msg))\n  SystemExit: error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  During handling of the above exception, another exception occurred:\n\n  Traceback (most recent call last):\n    File \"<string>\", line 1, in <module>\n    File \"/tmp/pip-build-2saf6qpj/cryptography/setup.py\", line 334, in <module>\n      **keywords_with_side_effects(sys.argv)\n    File \"/usr/lib/python3.5/distutils/core.py\", line 108, in setup\n      _setup_distribution = dist = klass(attrs)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/dist.py\", line 348, in __init__\n      self.fetch_build_eggs(attrs['setup_requires'])\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/dist.py\", line 394, in fetch_build_eggs\n      replace_conflicting=True,\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 851, in resolve\n      dist = best[req.key] = env.best_match(req, ws, installer)\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 1123, in best_match\n      return self.obtain(req, installer)\n    File \"/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py\", line 1135, in obtain\n      return installer(requirement)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/dist.py\", line 461, in fetch_build_egg\n      return cmd.easy_install(req)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 664, in easy_install\n      return self.install_item(spec, dist.location, tmpdir, deps)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 694, in install_item\n      dists = self.install_eggs(spec, download, tmpdir)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 875, in install_eggs\n      return self.build_and_install(setup_script, setup_base)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 1114, in build_and_install\n      self.run_setup(setup_script, setup_base, args)\n    File \"/usr/local/lib/python3.5/dist-packages/setuptools/command/easy_install.py\", line 1102, in run_setup\n      raise DistutilsError(\"Setup script exited with %s\" % (v.args[0],))\n  distutils.errors.DistutilsError: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  ----------------------------------------\n  Failed cleaning build dir for cryptography\n  Running setup.py bdist_wheel for cffi ... error\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-2saf6qpj/cffi/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" bdist_wheel -d /tmp/tmp689jaw0cpip-wheel- --python-tag cp35:\n  running bdist_wheel\n  running build\n  running build_py\n  creating build\n  creating build/lib.linux-x86_64-3.5\n  creating build/lib.linux-x86_64-3.5/cffi\n  copying cffi/cffi_opcode.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/cparser.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/recompiler.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/vengine_gen.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/commontypes.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/verifier.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/model.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/api.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/setuptools_ext.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/vengine_cpy.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/ffiplatform.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/__init__.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/lock.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/backend_ctypes.py -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/_cffi_include.h -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/parse_c_type.h -> build/lib.linux-x86_64-3.5/cffi\n  copying cffi/_embedding.h -> build/lib.linux-x86_64-3.5/cffi\n  running build_ext\n  building '_cffi_backend' extension\n  creating build/temp.linux-x86_64-3.5\n  creating build/temp.linux-x86_64-3.5/c\n  x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DUSE__THREAD -I/usr/include/python3.5m -c c/_cffi_backend.c -o build/temp.linux-x86_64-3.5/c/_cffi_backend.o\n  c/_cffi_backend.c:2:20: fatal error: Python.h: No such file or directory\n  compilation terminated.\n  error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  ----------------------------------------\n  Failed building wheel for cffi\n  Running setup.py clean for cffi\nFailed to build cryptography cffi\nInstalling collected packages: cffi, cryptography\n  Running setup.py install for cffi ... error\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-2saf6qpj/cffi/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-7jmqgdpf-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib.linux-x86_64-3.5\n    creating build/lib.linux-x86_64-3.5/cffi\n    copying cffi/cffi_opcode.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/cparser.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/recompiler.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/vengine_gen.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/commontypes.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/verifier.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/model.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/api.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/setuptools_ext.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/vengine_cpy.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/ffiplatform.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/__init__.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/lock.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/backend_ctypes.py -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/_cffi_include.h -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/parse_c_type.h -> build/lib.linux-x86_64-3.5/cffi\n    copying cffi/_embedding.h -> build/lib.linux-x86_64-3.5/cffi\n    running build_ext\n    building '_cffi_backend' extension\n    creating build/temp.linux-x86_64-3.5\n    creating build/temp.linux-x86_64-3.5/c\n    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DUSE__THREAD -I/usr/include/python3.5m -c c/_cffi_backend.c -o build/temp.linux-x86_64-3.5/c/_cffi_backend.o\n    c/_cffi_backend.c:2:20: fatal error: Python.h: No such file or directory\n    compilation terminated.\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n    ----------------------------------------\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-2saf6qpj/cffi/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-7jmqgdpf-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-2saf6qpj/cffi/\n```\n\n\nI tried understanding the errors but all it says is \"failed with error code 1\" :/\n\nChecking out other questions, they mentioned about the dependencies for cryptography which is all installed and up-to-date (sudo apt-get install build-essential libssl-dev libffi-dev python-dev):\n\n```\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nbuild-essential is already the newest version (12.1ubuntu2).\nlibffi-dev is already the newest version (3.2.1-4).\npython-dev is already the newest version (2.7.11-1).\nlibssl-dev is already the newest version (1.0.2g-1ubuntu4.2).\n0 upgraded, 0 newly installed, 0 to remove and 135 not upgraded.\n```\n\n\npip3 version:\n\n```\npip 8.1.2 from /usr/local/lib/python3.5/dist-packages (python 3.5)\n```\n\n\nNot even easy_install worked. I really don't know what i'm doing wrong here, please help.\n    ", "Answer": "\r\nFrom the ```\nPython.h: No such file or directory```\n error messages appearing in various places of the log, you need to install ```\npython3-dev```\n:\n\n```\nsudo apt install python3-dev\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to install cryptography on ubuntu 18.04 bionic?\r\n                \r\nI keep getting gcc errors when trying to install the python library cryptography. \n\nThe main error is:\n\n```\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n```\n\n\nNote I'm using docker with ```\nubuntu:bionic```\n, and installing the following items:\n\n```\nENV DEBIAN_FRONTEND=noninteractive \nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    python3 \\\n    python3-pip \\\n    python3-dev \\\n    git \\\n    libffi-dev \\\n    libssl-dev\n```\n\n\nHere's a longer log output:\n\n```\n    At top level:\n    build/temp.linux-x86_64-3.6/_openssl.c:3555:13: warning: '_ssl_thread_locking_function' defined but not used [-Wunused-function]\n     static void _ssl_thread_locking_function(int mode, int n, const char *file,\n                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n    ----------------------------------------\n  Can't rollback cryptography, nothing uninstalled.\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-6z_lweq8/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-3303ra3b-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-6z_lweq8/cryptography/\nThe command '/bin/sh -c pip3 install --no-cache-dir -r requirements.txt' returned a non-zero code: 1\n```\n\n    ", "Answer": "\r\nThank you to @pobe's comment in How to install cryptography on ubuntu? , I realized that I needed to install ```\nlibssl1.0```\n instead! Posted as a separate question because it took a really long time to find that answer.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does cryptography ecdsa support SHA3\r\n                \r\nI am using cryptography to implement some blockchain application, after I looked code, I don't know how to distinguish SHA2-256 and SHA3-256.\n    ", "Answer": "\r\nThe Elliptic Curve Digital Signature Algorithm (ECDSA) supports any hash function not limited to the SHA family, as MD5. SHA-3 should be supported, yes, indeed, I recommend using it as it is a open contest standard  and improves security.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Tools to practice cryptanalysis and cryptography techniques\r\n                \r\nI am looking for tools (preferably free) to practice various cryptoanalysis and cryptography techniques. Something along the lines of following two online tools but with more techniques.\n\nhttp://www.cryptool-online.org/index.php?option=com_content&view=article&id=55&Itemid=53&lang=en\n\nhttp://www.simonsingh.net/The_Black_Chamber/letterfrequencies.html\n\nAny suggestions would be very welcome.\n\nThanks,\nAmbi.\n    ", "Answer": "\r\nThe Matasano Crypto Challenges are an excellent learning resource for cryptography.\n\n\n  We've built a collection of 48 exercises that demonstrate attacks on\n  real-world crypto.\n  \n  This is a different way to learn about crypto than taking a class or\n  reading a book. We give you problems to solve. They're derived from\n  weaknesses in real-world systems and modern cryptographic\n  constructions. We give you enough info to learn about the underlying\n  crypto concepts yourself. When you're finished, you'll not only have\n  learned a good deal about how cryptosystems are built, but you'll also\n  understand how they're attacked.\n\n\nThe first couple of sets may seem a bit too easy for someone acquainted with cryptography, but the challenges quickly get more tricky and advanced.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "integer factorization and cryptography\r\n                \r\ni know that public key cryptography uses prime numbers, \nalso know that two large(e.g. 100 digit) prime numbers (P, Q)  are used as the private key,\nthe product is a public key N = P * Q,\nand using prime numbers is because the factorization of N to obtain P , Q is sooo difficult and takes much time,\ni'm ok with that, but i'm puzzled\nwhy not just use any ordinary large non-prime numbers for P , Q \nand so the factorization of N will be still difficult\nbecause there would because now , there are not only 2 factors possible, but even more.\n\nthanks....\n    ", "Answer": "\r\nI am not a crypto expert.\n\n\n  why not just use any ordinary large\n  non-prime numbers for P , Q\n\n\nBecause there would be more factors. Integer factorization is an attack against public private key encryption. This attack exploits this very relation.\n\nOne could more easily find the relation and possible values with more common factors. It boils down to algebra.\n\nN = P * Q\n\nif P and Q are both Prime then N has 4 factors {N P Q 1}\n\nHowever!\nif P and Q both share a factor of 2\n\nN / 4 = P / 2 * Q / 2\n\nIf N could have been 0..2^4096 it is now  0..2^4094 and since 2 was a factor another large number was also a factor.\n\nThis means that I could find a scalar multiple, P', Q' of P,Q S.T. P',Q' < P,Q \n\nI don't fully understand the concept myself but I believe this shows where i'm going with this.\n\nYou have to search a smaller space until you brute force the key.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Asymmetric cryptography with reversed key roles\r\n                \r\nI'm trying to implement licensing system for a software to prevent piracy.\n\nFor this I need to read a license file within the application, and I need to make sure this file is written by the owner company.\n\nAsymmetric cryptography has good potential for this aim, but in other way around!\n\nAsymmetric cryptography algorithms, like RSA, give you a ```\nPublic key```\n and a ```\nPrivate key```\n which are used as follow:\n\n\nPrivate keys are used to decrypt.\nPublic keys are used to encrypt.\n\n\nBut I need them like this:\n\n\nPrivate keys to be used to encrypt.\nPublic keys to be used to decrypt.\n\n\nA simplistic idea would be to switch the role of public and private keys, but there are posts saying that in RSA public keys can be generated from private ones which make this idea impractical.\n\nSo here's my question: Is there any asymmetric cryptography with reversed key roles?\n    ", "Answer": "\r\nIf speaking about RSA public/private key pair  can be used in both cases you described. When you use private key to encrypt then public key decrypts and vice-versa.\n\nAs you said public key can be derived from private key but not the other way.\n\nIf you want to prove the origin of licensing file, use RSA in signature mode. In signature mode a hash is computed from the data you want to protect and then encrypted using private key. The result -the digital signature - is appended to the protected data.\n\nVerification process starts by decrypting the signature which gives you the hash. Then compute hash value from the data. Computed and decrypted value shall be the same.\n\nThere are a lot of libraries providing comfortable way of signature creation and verification. You can choose depending on the platform you use for your application development. \n\nhttp://en.wikipedia.org/wiki/Digital_signature\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Can't install cryptography on raspberry pi because of libffi [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has answers here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                    \r\n                        pip install failing with: OSError: [Errno 13] Permission denied on directory\r\n                            \r\n                                (9 answers)\r\n                            \r\n                    \r\n                Closed 5 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI've been trying to install the package \"flask-ask\" on my Raspberry Pi Zero. However, there's a problem when trying to install the dependency \"cryptography\":\n\n```\nDownloading/unpacking cryptography\n  Downloading cryptography-2.2.2.tar.gz (443kB): 443kB downloaded\n  Running setup.py (path:/tmp/pip-build-wg353po4/cryptography/setup.py) egg_info for package cryptography\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/tmp/pip-build-wg353po4/cryptography/setup.py\", line 28, in <module>\n        \"cryptography requires setuptools 18.5 or newer, please upgrade to a \"\n    RuntimeError: cryptography requires setuptools 18.5 or newer, please upgrade to a newer version of setuptools\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/tmp/pip-build-wg353po4/cryptography/setup.py\", line 28, in <module>\n\n    \"cryptography requires setuptools 18.5 or newer, please upgrade to a \"\n\nRuntimeError: cryptography requires setuptools 18.5 or newer, please upgrade to a newer version of setuptools\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip-build-wg353po4/cryptography\nStoring debug log for failure in /home/pi/.pip/pip.log\n```\n\n\n(these logs gotten from trying to install cryptography on its own, but the same error is gotten when installing flask-ask)\n\nI've tried ```\npip3 install -U setuptools```\n to upgrade it, but that doesn't work:\n\n```\npi@raspberrypi:~ $ pip3 install -U setuptools\nDownloading/unpacking setuptools from https://files.pythonhosted.org/packages/7f/e1/820d941153923aac1d49d7fc37e17b6e73bfbd2904959fffbad77900cf92/setuptools-39.2.0-py2.py3-none-any.whl#sha256=8fca9275c89964f13da985c3656cb00ba029d7f3916b37990927ffdf264e7926\n  Downloading setuptools-39.2.0-py2.py3-none-any.whl (567kB): 567kB downloaded\nInstalling collected packages: setuptools\n  Found existing installation: setuptools 5.5.1\n    Not uninstalling setuptools at /usr/lib/python3/dist-packages, owned by OS\n  Can't roll back setuptools; was not uninstalled\nCleaning up...\nException:\nTraceback (most recent call last):\n  File \"/usr/lib/python3/dist-packages/pip/basecommand.py\", line 122, in main\n    status = self.run(options, args)\n  File \"/usr/lib/python3/dist-packages/pip/commands/install.py\", line 295, in run\n    requirement_set.install(install_options, global_options, root=options.root_path)\n  File \"/usr/lib/python3/dist-packages/pip/req.py\", line 1436, in install\n    requirement.install(install_options, global_options, *args, **kwargs)\n  File \"/usr/lib/python3/dist-packages/pip/req.py\", line 672, in install\n    self.move_wheel_files(self.source_dir, root=root)\n  File \"/usr/lib/python3/dist-packages/pip/req.py\", line 902, in move_wheel_files\n    pycompile=self.pycompile,\n  File \"/usr/lib/python3/dist-packages/pip/wheel.py\", line 214, in move_wheel_files\n    clobber(source, lib_dir, True)\n  File \"/usr/lib/python3/dist-packages/pip/wheel.py\", line 208, in clobber\n    shutil.copy2(srcfile, destfile)\n  File \"/usr/lib/python3.4/shutil.py\", line 244, in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n  File \"/usr/lib/python3.4/shutil.py\", line 108, in copyfile\n    with open(dst, 'wb') as fdst:\nPermissionError: [Errno 13] Permission denied: '/usr/local/lib/python3.4/dist-packages/easy_install.py'\n\nStoring debug log for failure in /home/pi/.pip/pip.log\n```\n\n\nSo what should I do? I've done a lot of googling of various different things, and I've seen other people have problems with cryptography on the Pi, but not this specific problem.\n\nEDIT: Ok, so I've done ```\npip install --user -U setuptools```\n now, and that works fine. Now I'm getting a totally different error:\n\n```\n    running install_egg_info\n    running egg_info\n    creating lib/PyYAML.egg-info\n    writing lib/PyYAML.egg-info/PKG-INFO\n    writing top-level names to lib/PyYAML.egg-info/top_level.txt\n    writing dependency_links to lib/PyYAML.egg-info/dependency_links.txt\n    writing manifest file 'lib/PyYAML.egg-info/SOURCES.txt'\n    reading manifest file 'lib/PyYAML.egg-info/SOURCES.txt'\n    writing manifest file 'lib/PyYAML.egg-info/SOURCES.txt'\n    Copying lib/PyYAML.egg-info to /home/pi/.local/lib/python2.7/site-packages/PyYAML-3.12$\n    running install_scripts\n    writing list of installed files to '/tmp/pip-XYXo6X-record/install-record.txt'\n  Could not find .egg-info directory in install record for PyYAML==3.12 (from flask-ask)\n  Running setup.py install for cryptography\n    Running command /usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/pip-bui$\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    c/_cffi_backend.c:2:20: fatal error: Python.h: No such file or directory\n     #include <Python.h>\n                        ^\n    compilation terminated.\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-2gl72v/cryptography/setup.py\", line 319, in <module>\n        **keywords_with_side_effects(sys.argv)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/__init__.py\", line 128,$\n        _install_setup_requires(attrs)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/__init__.py\", line 123,$\n        dist.fetch_build_eggs(dist.setup_requires)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/dist.py\", line 514, in $\n        replace_conflicting=True,\n      File \"/home/pi/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 7$\n        replace_conflicting=replace_conflicting\n      File \"/home/pi/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1$\n        return self.obtain(req, installer)\n      File \"/home/pi/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1$\n        return installer(requirement)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/dist.py\", line 581, in $\n        return cmd.easy_install(req)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py$\n        return self.install_item(spec, dist.location, tmpdir, deps)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py$\n        dists = self.install_eggs(spec, download, tmpdir)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py$\n        return self.build_and_install(setup_script, setup_base)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py$\n        self.run_setup(setup_script, setup_base, args)\n      File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py$\n        raise DistutilsError(\"Setup script exited with %s\" % (v.args[0],))\n    distutils.errors.DistutilsError: Setup script exited with error: command 'arm-linux-gn$\n\n    Complete output from command /usr/bin/python -c \"import setuptools, tokenize;__file__=$\n    Package libffi was not found in the pkg-config search path.\n\nPerhaps you should add the directory containing `libffi.pc'\n\nto the PKG_CONFIG_PATH environment variable\n\nNo package 'libffi' found\n\nPackage libffi was not found in the pkg-config search path.\n\nPerhaps you should add the directory containing `libffi.pc'\n\nto the PKG_CONFIG_PATH environment variable\n\nNo package 'libffi' found\n\nPackage libffi was not found in the pkg-config search path.\n\nPerhaps you should add the directory containing `libffi.pc'\n\nto the PKG_CONFIG_PATH environment variable\n\nNo package 'libffi' found\n\nPackage libffi was not found in the pkg-config search path.\n\nPerhaps you should add the directory containing `libffi.pc'\n\nto the PKG_CONFIG_PATH environment variable\n\nNo package 'libffi' found\n\nPackage libffi was not found in the pkg-config search path.\n\nPerhaps you should add the directory containing `libffi.pc'\n\nto the PKG_CONFIG_PATH environment variable\n\nNo package 'libffi' found\n\nc/_cffi_backend.c:2:20: fatal error: Python.h: No such file or directory\n\n #include <Python.h>\n\n                    ^\n\ncompilation terminated.\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"/tmp/pip-build-2gl72v/cryptography/setup.py\", line 319, in <module>\n\n    **keywords_with_side_effects(sys.argv)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/__init__.py\", line 128, in $\n\n    _install_setup_requires(attrs)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/__init__.py\", line 123, in $\n\n    dist.fetch_build_eggs(dist.setup_requires)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/dist.py\", line 514, in fetc$\n\n    replace_conflicting=True,\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 770, $\n\n    replace_conflicting=replace_conflicting\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1053,$\n\n    return self.obtain(req, installer)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1065,$\n\n    return installer(requirement)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/dist.py\", line 581, in fetc$\n\n    return cmd.easy_install(req)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", l$\n\n    return self.install_item(spec, dist.location, tmpdir, deps)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", l$\n\n    dists = self.install_eggs(spec, download, tmpdir)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", l$\n\n    return self.build_and_install(setup_script, setup_base)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", l$\n\n    self.run_setup(setup_script, setup_base, args)\n\n  File \"/home/pi/.local/lib/python2.7/site-packages/setuptools/command/easy_install.py\", l$\n\n    raise DistutilsError(\"Setup script exited with %s\" % (v.args[0],))\n\ndistutils.errors.DistutilsError: Setup script exited with error: command 'arm-linux-gnueab$\n\n----------------------------------------\nCleaning up...\nCommand /usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/pip-build-2gl72v/cr$\nException information:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/pip/basecommand.py\", line 122, in main\n    status = self.run(options, args)\n  File \"/usr/lib/python2.7/dist-packages/pip/commands/install.py\", line 295, in run\n    requirement_set.install(install_options, global_options, root=options.root_path)\n  File \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 1436, in install\n    requirement.install(install_options, global_options, *args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 707, in install\n    cwd=self.source_dir, filter_stdout=self._filter_install, show_stdout=False)\n  File \"/usr/lib/python2.7/dist-packages/pip/util.py\", line 716, in call_subprocess\n    % (command_desc, proc.returncode, cwd))\nInstallationError: Command /usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/$\n```\n\n\nI have no clue why this is happening at this point.\n    ", "Answer": "\r\nI've had luck in a similar situation recently by first updating pip.\n\n```\nsudo apt-get install -y python3-pip\nsudo pip3 -H pip3 install --upgrade pip\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "cryptography with python, it is for a project\r\n                \r\nI need some help creating cryptography code for python. i have some code myself but if someone can add to it and maybe and some brute force techniques that could help a lot thanks.\n\n```\ndef crypto():\n   for character in range(0,256):\n       print chr(character)\n\n\ndef Caesar_Encrypt (plaintext, key):\n   cipher = \"\"\n   for index in range(0, len(plaintext)):\n       cipher += chr((ord(plaintext[index]) + key) % 256)\n   return cipher\n\ndef Caesar_Decrypt (cipher,key):\n   plaintext = \"\"\n   for index in range(0, len(cipher)):\n       plaintext += chr((ord(cipher[index]) - key) % 256)\n   return plaintext\ndef main():\n   crypto()\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to compile Cryptography via setup.py using Cython?\r\n                \r\nMy code requires cryptography moduleI use Cython to distribute my code, say foo.pyx\n \nI want to perform following task using cryptography\n```\nimport cryptography.fernet\nkey = b\"My Key\"\nfer = Fernet(key)\ncontent = input().encode()\nfer.encrypt(content)\n```\n\nNext, I want to distribute this as .pyd\n\nAgain, I don't want users to pip install cryptography on their own pc.\nIs there any way to distribute foo.px file as foo.pyd file including Cryptography with it?\n\nMy setup.py file is:\n```\nfrom setuptools import setup\nfrom Cython.Build import cythonize\n\nsetup(\n    ext_modules = cythonize(\"foo.pyx\")\n)\n```\n\n\nKindly Note: My platform is Windows 10\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "\"cryptography is required for sha256_password or caching_sha2_password\"\r\n                \r\nGood day. Hope your all are well. Can someone help me with fix this? \n\nI'm new to the MySQL environment. I'm trying to connect to MySQL Database remotely. I used the following python code and got this error.  \n\n```\nPrint(e) = \"cryptography is required for sha256_password or \n             caching_sha2_password\"\n```\n\n\nAnd have no idea how to solve the error.\n\n```\nimport pymysql as db\n\nHOST = \"XXXXX.XXX.XX”\nPORT = XXXX\nUSER = \"my_username\"\nPASSWORD = \"my_password”\nDB = \"db_name\"\n\ntry:\n    connection = db.Connection(host=HOST, port=PORT,user=USER,                 \n    passwd=PASSWORD, db=DB)\n\n    dbhandler = connection.cursor()\n    dbhandler.execute(\"SELECT * from table_name\")\n    result = dbhandler.fetchall()\n    for item in result:\n        print (DB)\n except Exception as e:\n    print(e)\n\nfinally:\n    connection.close()\n```\n\n    ", "Answer": "\r\nThe error message can be made more comprehensive and helpful. In order to fix this \"cryptography\" package needs to be installed.\n\n```\npip install cryptography\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to sign data using blackberry cryptography\r\n                \r\nI am trying to sign data using Blackberry cryptography but generated signature is not getting verify by the server side(PHP)\n\nI tried this -\n\n```\n    RSACryptoSystem rsaCryptoSystem = new RSACryptoSystem(1024);\n    // Create an RSA key pair.\n     RSAKeyPair rsaKeyPair = new RSAKeyPair( rsaCryptoSystem );\n\n    // Create the necessary RSA key pair for signing and verifying.\n    RSACryptoSystem cryptoSystem = new RSACryptoSystem(1024);\n    RSAKeyPair keyPair = new RSAKeyPair( cryptoSystem );\n\n    // Create the digest and the salt value.\n    SHA1Digest digest = new SHA1Digest();\n    byte[] salt = RandomSource.getBytes( digest.getDigestLength() );\n\n    // Create the RSASignatureSigner passing in a digest algorithm\n    // and PSS signature formatter.\n    PSSSignatureSigner signer =\n             new PSSSignatureSigner( rsaKeyPair.getRSAPrivateKey(), digest, salt );\n\n    signer.update( stringToSign.getBytes() );\n\n    // Encode the signature using X509.\n    EncodedSignature encSignature = SignatureEncoder.encode( signer,\"X509\" );\n    String signedIdentifier = Base64.encode(encSignature.getEncodedSignature());\n```\n\n\nPlease help \n    ", "Answer": "\r\nChange your code with\n\n```\nbyte[] dataBytes = stringToSign.getBytes();\n   PKCS1SignatureSigner signer = new PKCS1SignatureSigner(rsaKeyPair.getRSAPrivateKey());\n\n   signer.update(dataBytes, 0, dataBytes.length);\n   byte[] signatureBytes = new byte[signer.getLength()];\n   signer.sign(signatureBytes, 0);\n   String signedIdentifier = Base64.encode(signatureBytes);\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to fix ImportError: No module named cryptography?\r\n                \r\nI want to auto renew certificate via certbot, but not working, got error \"ImportError: No module named cryptography\"\n\n# ./certbot-auto --dry-run\n\nError: couldn't get currently installed version for /opt/eff.org/certbot/venv/bin/letsencrypt:\nTraceback (most recent call last):\n  File \"/opt/eff.org/certbot/venv/bin/letsencrypt\", line 7, in \n    from certbot.main import main\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/certbot/main.py\", line 10, in \n    import josepy as jose\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/josepy/init.py\", line 41, in \n    from josepy.interfaces import JSONDeSerializable\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/josepy/interfaces.py\", line 7, in \n    from josepy import errors, util\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/josepy/util.py\", line 7, in \n    import OpenSSL\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/OpenSSL/init.py\", line 8, in \n    from OpenSSL import crypto, SSL\n  File \"/opt/eff.org/certbot/venv/local/lib/python2.7/dist-packages/OpenSSL/crypto.py\", line 12, in \n    from cryptography import x509\nImportError: No module named cryptography\n\nI tried to install cryptography, and got this result\n\nsudo /opt/eff.org/certbot/venv/bin/pip install cryptography\n\nYou are using pip version 9.0.1, however version 19.2.3 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n\nThen I tried this command\npip install --upgrade pip\n\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\nRequirement already up-to-date: pip in /usr/lib/python2.7/dist-packages/pip-19.2.3-py2.7.egg (19.2.3)\n\nHow to get cryptography installed?\n    ", "Answer": "\r\nSuccessfully installedI got the exact same error message after I ran certbot-auto and it upgraded to the new version. \n\nHere's how I solve this in my case: \n\n```\npip install cryptography \ncd /opt/eff.org/certbot/venv/lib64/python2.7 \nmv site-packages site-packages.sav \nln -s dist-packages/ site-packages \n```\n\n\nIt's because the letsencrypt's custom version of python is looking for the package under site-packages subfolder while it's empty in my case and the package is under dist-packages subfolder. \n\nNote: If you see cryptography is successfully installed then no need to run 'pip install --upgrade pip' command and can disregard the warning information.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Encrypt large file with Asymmetric cryptography\r\n                \r\ni want to encrypt a file with public key in python, Asymmetric methode \nim really use cryptography biblio and PyCrypto but all algorithm encrypt short text not big file i need solution for my problem , \nin cryptography biblio i use hazmat module .\ni converted my file to string format , so this is result : \n\n'Data too long for key size. Encrypt less data or use a \nValueError: Data too long for key size. Encrypt less data or use a larger key size.'\n\n```\ndef Encrypt(file,public_key):\n    encrypted = public_key.encrypt(\n        file,\n        padding.OAEP(\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\n            algorithm=hashes.SHA256(),\n            label=None\n        )\n    )\n    f = open('myEncreptedFile.txt', 'wb')\n    f.write(encrypted)\n    f.close()\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What's the current status of cryptography export restrictions? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     This question does not appear to be about programming within the scope defined in the help center.\r\n                \r\n                    \r\n                        Closed 8 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nLet's say I want to add some basic encryption capabilities to my application (without making it the application's primary purpose) - for example, using public-key cryptography to encrypt/sign private messages in a video game. Should I be worried about export restrictions (mainly in the US)? Is there a limit to how \"strong\" the encryption can be?\n    ", "Answer": "\r\nAccording to this article:\n\nOn June 25, 2010, the Department of Commerce’s Bureau of Industry and Security (BIS) published a notice in the Federal Register implementing substantial and far-reaching amendments to controls of encryption software and hardware under the U.S. Export Administration Regulations (EAR).  These changes were originally announced in early May, and mark the first step in the Obama Administration’s efforts toward reform of U.S. export controls intended to expand access for U.S. exporters to foreign markets.\n...\nDecontrolling Ancillary Cryptography Products\nThis amendment to the regulations incorporates changes adopted in December at meetings of the Wassenaar Arrangement.  Previously, exporters were permitted to self-classify most ancillary cryptography items (i.e., items, such as video games, that use encryption but where the encryption is ancillary to the item’s main purpose) as ECCN 5D002.  Such items could then be exported immediately using License Exception ENC.  Certain other ancillary cryptography items were classified under ECCN 5D992, and were eligible for export to most destinations other than Cuba, Iran, North Korea, Sudan, and Syria.\nThe new regulations effectively decontrol ancillary cryptography products.  Specifically, the regulations add a note to Category 5 of the Commerce Control List stating that such items will no longer be controlled on the basis of their cryptographic functionality.  Rather, ancillary cryptography items will be controlled under whatever other ECCN is applicable to the item.  In many cases, such items will likely be classified as EAR99.\n\n(emphasis added)\nSo, it looks like video games are off the hook as far as US is concerned.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What's the current status of cryptography export restrictions? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question does not meet Stack Overflow guidelines. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     This question does not appear to be about programming within the scope defined in the help center.\r\n                \r\n                    \r\n                        Closed 8 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nLet's say I want to add some basic encryption capabilities to my application (without making it the application's primary purpose) - for example, using public-key cryptography to encrypt/sign private messages in a video game. Should I be worried about export restrictions (mainly in the US)? Is there a limit to how \"strong\" the encryption can be?\n    ", "Answer": "\r\nAccording to this article:\n\nOn June 25, 2010, the Department of Commerce’s Bureau of Industry and Security (BIS) published a notice in the Federal Register implementing substantial and far-reaching amendments to controls of encryption software and hardware under the U.S. Export Administration Regulations (EAR).  These changes were originally announced in early May, and mark the first step in the Obama Administration’s efforts toward reform of U.S. export controls intended to expand access for U.S. exporters to foreign markets.\n...\nDecontrolling Ancillary Cryptography Products\nThis amendment to the regulations incorporates changes adopted in December at meetings of the Wassenaar Arrangement.  Previously, exporters were permitted to self-classify most ancillary cryptography items (i.e., items, such as video games, that use encryption but where the encryption is ancillary to the item’s main purpose) as ECCN 5D002.  Such items could then be exported immediately using License Exception ENC.  Certain other ancillary cryptography items were classified under ECCN 5D992, and were eligible for export to most destinations other than Cuba, Iran, North Korea, Sudan, and Syria.\nThe new regulations effectively decontrol ancillary cryptography products.  Specifically, the regulations add a note to Category 5 of the Commerce Control List stating that such items will no longer be controlled on the basis of their cryptographic functionality.  Rather, ancillary cryptography items will be controlled under whatever other ECCN is applicable to the item.  In many cases, such items will likely be classified as EAR99.\n\n(emphasis added)\nSo, it looks like video games are off the hook as far as US is concerned.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Proper versions of cryptography and paramiko to run together?\r\n                \r\nI suddenly started getting cryptography/paramiko errors the other day when I upgraded my Python's runtime version from 3.7 to 3.7.10. The exact error I'm getting is: ```\ntype object 'EllipticCurvePublicKey' has no attribute 'from_encoded_point'```\n\nI'm also running ```\ncryptography=2.4```\n and ```\nparamiko=2.4.2```\n. I tried upgrading ```\ncryptography```\n to 2.4.2 as well and 2.5 but still keep getting the same errors.\nParamiko is a dependency for another another package that I'm using, ```\npysftp```\n so I don't explicitly use ```\nparamiko```\n.\nAny help in getting the two packages to work together would be much appreciated.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pip3 install cryptography MacOs gives error\r\n                \r\nthe title says it all.\nThis is my error message:\n```\nERROR: Command errored out with exit status 1:\n   command: /Library/Developer/CommandLineTools/usr/bin/python3 /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /var/folders/wy/9tlqy66d5630rd5htpz1dtnr0000gn/T/tmppjwpg3pg\n       cwd: /private/var/folders/wy/9tlqy66d5630rd5htpz1dtnr0000gn/T/pip-install-cz6pcrd6/cryptography\n  Complete output (52 lines):\n  \n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation/ for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq/\n      4) Ensure you have a recent Rust toolchain installed:\n         https://cryptography.io/en/latest/installation/#rust\n  \n      Python: 3.8.9\n      platform: macOS-12.0.1-x86_64-i386-64bit\n      pip: 20.2.3\n      setuptools: 49.2.1\n      setuptools_rust: 1.3.0\n      =============================DEBUG ASSISTANCE=============================\n  \n  Traceback (most recent call last):\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/pip/_vendor/pep517/_in_process.py\", line 280, in <module>\n      main()\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/pip/_vendor/pep517/_in_process.py\", line 263, in main\n      json_out['return_val'] = hook(**hook_input['kwargs'])\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/pip/_vendor/pep517/_in_process.py\", line 114, in get_requires_for_build_wheel\n      return hook(config_settings)\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/build_meta.py\", line 146, in get_requires_for_build_wheel\n      return self._get_build_requires(\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/build_meta.py\", line 127, in _get_build_requires\n      self.run_setup()\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/build_meta.py\", line 142, in run_setup\n      exec(compile(code, __file__, 'exec'), locals())\n    File \"setup.py\", line 39, in <module>\n      setup(\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/__init__.py\", line 165, in setup\n      return distutils.core.setup(**attrs)\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/_distutils/core.py\", line 108, in setup\n      _setup_distribution = dist = klass(attrs)\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/dist.py\", line 429, in __init__\n      _Distribution.__init__(self, {\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/_distutils/dist.py\", line 293, in __init__\n      self.finalize_options()\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/dist.py\", line 721, in finalize_options\n      ep(self)\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/setuptools/dist.py\", line 727, in _finalize_setup_keywords\n      ep.require(installer=self.fetch_build_egg)\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2483, in require\n      items = working_set.resolve(reqs, env, installer, extras=self.extras)\n    File \"/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 790, in resolve\n      raise VersionConflict(dist, req).with_context(dependent_req)\n  pkg_resources.VersionConflict: (setuptools 49.2.1 (/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages), Requirement.parse('setuptools>=58.0'))\n  ----------------------------------------\nERROR: Command errored out with exit status 1: /Library/Developer/CommandLineTools/usr/bin/python3 /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /var/folders/wy/9tlqy66d5630rd5htpz1dtnr0000gn/T/tmppjwpg3pg Check the logs for full command output.\n```\n\nAlready tried the approach outlined here: How to install cryptography on Mac OS X?\nwith installing OpenSSL, just giving me the same error.\nAppreciate any help\nThanks!\n    ", "Answer": "\r\nThe package requires ```\nsetuptools```\n version 58.0 or greater to build. See output:\n```\npkg_resources.VersionConflict: (setuptools 49.2.1 (/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib/python3.8/site-packages), Requirement.parse('setuptools>=58.0'))\n```\n\nTry ```\npip install --upgrade pip setuptools```\n then retry the install.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Default_backend not defined in cryptography-RSA (python)\r\n                \r\nI am getting default_backend is not defined error while using RSA algorithm from hazmat in python 3.5 . Can anyone solve my problem ? The problem occurs while creating private key for rsa algorithm using cryptography module in python.\n    ", "Answer": "\r\nyou should have post your code to tell you your mistake. I think you are not passing the ```\ndefault_backend```\n to ec to generate the private key. here is the implementation:\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import ec\n\nclass Wallet:\n    def __init__(self):\n        \n        # SECP=standard efficient cryptography prime. prime is used to genereate the curve\n        # that prime number is 256 bit, K=kobler, 1 stands for first\n        self.private_key=ec.generate_private_key(ec.SECP256K1(), default_backend())\n        self.public_key=self.private_key.public_key()\n        \n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Failed to install cryptography in python on linux\r\n                \r\nso I am running a Linux machine with python 3.10 and the latest version of pip.\nwhen I try installing Cryptography using PIP i get a successful installed message with one warning:\n```\nsh-5.1$ pip install cryptography\n\n\n\nDefaulting to user installation because normal site-packages is not writeable\nCollecting cryptography\n  Using cached cryptography-39.0.0-cp36-abi3-manylinux_2_28_x86_64.whl (4.2 MB)\nCollecting cffi>=1.12\n  Using cached cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\nCollecting pycparser\n  Using cached pycparser-2.21-py2.py3-none-any.whl (118 kB)\nInstalling collected packages: pycparser, cffi, cryptography\nSuccessfully installed cffi-1.15.1 cryptography-39.0.0 pycparser-2.21\n```\n\nHowever when I try verifying if it was installed correctly and try importing it I get an error:\n```\nsh-5.1$ python -c \"import cryptography\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nModuleNotFoundError: No module named 'cryptography'\nsh-5.1$  \n```\n\nAnd yes I am running the import command from the same environment where the it was installed.\nthe python version:\n```\nsh-5.1$ python --version\nPython 3.10.6\n\nsh-5.1$ type python\npython is hashed (/usr/bin/python)\n```\n\nPIP Version:\n```\nsh-5.1$ pip --version\npip 22.3.1 from /usr/lib/python3.10/site-packages/pip (python 3.10)\n\nsh-5.1$ python -m pip show cryptography\nWARNING: Package(s) not found: cryptography\n```\n\nAlternative method I tried as suggested:\n```\nsh-5.1$ python3.10 -m pip install cryptography \n\n\n\nDefaulting to user installation because normal site-packages is not writeable\nCollecting cryptography\n  Using cached cryptography-39.0.0-cp36-abi3-manylinux_2_28_x86_64.whl (4.2 MB)\nCollecting cffi>=1.12\n  Using cached cffi-1.15.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\nCollecting pycparser\n  Using cached pycparser-2.21-py2.py3-none-any.whl (118 kB)\nInstalling collected packages: pycparser, cffi, cryptography\nSuccessfully installed cffi-1.15.1 cryptography-39.0.0 pycparser-2.21\n\n\n\nsh-5.1$ python -c \"import cryptography\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nModuleNotFoundError: No module named 'cryptography'\nsh-5.1$ \n```\n\nLOCATION where it is installed? :\n```\npython -c \"import cryptography; print(cryptography.__file__)\"\n\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nModuleNotFoundError: No module named 'cryptography'\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cannot Install cryptography and pynacl libraries in pyCharm running on Windows\r\n                \r\nI am running pyCharm on Windows 10 Pro. When I try to install autobahn libraries using pip, I get the following error:\n\n```\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.24.28314\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit status 2```\n.\n\nThe complete log for the command prompt is as follows:\n\n```\n  Using cached https://files.pythonhosted.org/packages/35/77/1bf9b3c4c0850fd6f00996afcf5e71e35295c145833f4e2430d0a7fddbaa/autobahn-19.11.1-py2.py3-none-any.whl\nCollecting six>=1.11.0 (from autobahn)\n  Using cached https://files.pythonhosted.org/packages/65/26/32b8464df2a97e6dd1b656ed26b2c194606c16fe163c695a992b36c11cdf/six-1.13.0-py2.py3-none-any.whl\nCollecting cryptography>=2.7 (from autobahn)\n  Using cached https://files.pythonhosted.org/packages/be/60/da377e1bed002716fb2d5d1d1cab720f298cb33ecff7bf7adea72788e4e4/cryptography-2.8.tar.gz\n  Installing build dependencies: started\n  Installing build dependencies: finished with status 'done'\n  Getting requirements to build wheel: started\n  Getting requirements to build wheel: finished with status 'done'\n    Preparing wheel metadata: started\n    Preparing wheel metadata: finished with status 'done'\nCollecting txaio>=18.8.1 (from autobahn)\n  Using cached https://files.pythonhosted.org/packages/e9/6d/e1a6f7835cde86728e5bb1f577be9b2d7d273fdb33c286e70b087d418ded/txaio-18.8.1-py2.py3-none-any.whl\nCollecting cffi!=1.11.3,>=1.8 (from cryptography>=2.7->autobahn)\n  Using cached https://files.pythonhosted.org/packages/2d/bf/960e5a422db3ac1a5e612cb35ca436c3fc985ed4b7ed13a1b4879006f450/cffi-1.13.2.tar.gz\nCollecting pycparser (from cffi!=1.11.3,>=1.8->cryptography>=2.7->autobahn)\n  Using cached https://files.pythonhosted.org/packages/68/9e/49196946aee219aead1290e00d1e7fdeab8567783e83e1b9ab5585e6206a/pycparser-2.19.tar.gz\nBuilding wheels for collected packages: cryptography\n  Building wheel for cryptography (PEP 517): started\n  Building wheel for cryptography (PEP 517): finished with status 'error'\n  Complete output from command C:\\Users\\divya\\PycharmProjects\\auto1\\venv-new_without_global\\Scripts\\python.exe C:\\Users\\divya\\PycharmProjects\\auto1\\venv-new_without_global\\lib\\site-packages\\pip-19.0.3-py3.8.egg\\pip\\_vendor\\pep517\\_in_process.py build_wheel C:\\Users\\divya\\AppData\\Local\\Temp\\tmp6wfys117:\n  running bdist_wheel\n  running build\n  running build_py\n  creating build\n  creating build\\lib.win-amd64-3.8\n  creating build\\lib.win-amd64-3.8\\cryptography\n  copying src\\cryptography\\exceptions.py -> build\\lib.win-amd64-3.8\\cryptography\n  copying src\\cryptography\\fernet.py -> build\\lib.win-amd64-3.8\\cryptography\n  copying src\\cryptography\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\n  copying src\\cryptography\\__about__.py -> build\\lib.win-amd64-3.8\\cryptography\n  copying src\\cryptography\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\n  copying src\\cryptography\\hazmat\\_der.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\n  copying src\\cryptography\\hazmat\\_oid.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\n  copying src\\cryptography\\hazmat\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\n  creating build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\base.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\certificate_transparency.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\extensions.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\general_name.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\name.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\ocsp.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\oid.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  copying src\\cryptography\\x509\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\x509\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\n  copying src\\cryptography\\hazmat\\backends\\interfaces.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\n  copying src\\cryptography\\hazmat\\backends\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\n  copying src\\cryptography\\hazmat\\bindings\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\cmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\constant_time.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\hashes.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\hmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\keywrap.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\padding.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\poly1305.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  copying src\\cryptography\\hazmat\\primitives\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\aead.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\backend.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\ciphers.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\cmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\decode_asn1.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\dh.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\dsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\ec.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\ed25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\ed448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\encode_asn1.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\hashes.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\hmac.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\ocsp.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\poly1305.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\rsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\x25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\x448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\x509.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  copying src\\cryptography\\hazmat\\backends\\openssl\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\backends\\openssl\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\n  copying src\\cryptography\\hazmat\\bindings\\openssl\\binding.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\n  copying src\\cryptography\\hazmat\\bindings\\openssl\\_conditional.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\n  copying src\\cryptography\\hazmat\\bindings\\openssl\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\bindings\\openssl\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\dh.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\dsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\ec.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\padding.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\x25519.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\x448.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  copying src\\cryptography\\hazmat\\primitives\\asymmetric\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\asymmetric\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\n  copying src\\cryptography\\hazmat\\primitives\\ciphers\\aead.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\n  copying src\\cryptography\\hazmat\\primitives\\ciphers\\algorithms.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\n  copying src\\cryptography\\hazmat\\primitives\\ciphers\\base.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\n  copying src\\cryptography\\hazmat\\primitives\\ciphers\\modes.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\n  copying src\\cryptography\\hazmat\\primitives\\ciphers\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\ciphers\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  copying src\\cryptography\\hazmat\\primitives\\kdf\\concatkdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  copying src\\cryptography\\hazmat\\primitives\\kdf\\hkdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  copying src\\cryptography\\hazmat\\primitives\\kdf\\kbkdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  copying src\\cryptography\\hazmat\\primitives\\kdf\\pbkdf2.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  copying src\\cryptography\\hazmat\\primitives\\kdf\\scrypt.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  copying src\\cryptography\\hazmat\\primitives\\kdf\\x963kdf.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  copying src\\cryptography\\hazmat\\primitives\\kdf\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\kdf\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\n  copying src\\cryptography\\hazmat\\primitives\\serialization\\base.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\n  copying src\\cryptography\\hazmat\\primitives\\serialization\\pkcs12.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\n  copying src\\cryptography\\hazmat\\primitives\\serialization\\ssh.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\n  copying src\\cryptography\\hazmat\\primitives\\serialization\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\serialization\n  creating build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\n  copying src\\cryptography\\hazmat\\primitives\\twofactor\\hotp.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\n  copying src\\cryptography\\hazmat\\primitives\\twofactor\\totp.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\n  copying src\\cryptography\\hazmat\\primitives\\twofactor\\utils.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\n  copying src\\cryptography\\hazmat\\primitives\\twofactor\\__init__.py -> build\\lib.win-amd64-3.8\\cryptography\\hazmat\\primitives\\twofactor\n  running egg_info\n  writing src\\cryptography.egg-info\\PKG-INFO\n  writing dependency_links to src\\cryptography.egg-info\\dependency_links.txt\n  writing requirements to src\\cryptography.egg-info\\requires.txt\n  writing top-level names to src\\cryptography.egg-info\\top_level.txt\n  reading manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\n  reading manifest template 'MANIFEST.in'\n  no previously-included directories found matching 'docs\\_build'\n  warning: no previously-included files found matching 'vectors'\n  warning: no previously-included files matching '*' found under directory 'vectors'\n  warning: no previously-included files found matching 'azure-pipelines.yml'\n  warning: no previously-included files found matching '.azure-pipelines'\n  warning: no previously-included files found matching '.travis.yml'\n  warning: no previously-included files found matching '.travis'\n  warning: no previously-included files matching '*' found under directory '.azure-pipelines'\n  warning: no previously-included files matching '*' found under directory '.travis'\n  warning: no previously-included files found matching 'release.py'\n  warning: no previously-included files found matching '.coveragerc'\n  warning: no previously-included files found matching 'codecov.yml'\n  warning: no previously-included files found matching 'dev-requirements.txt'\n  warning: no previously-included files found matching 'rtd-requirements.txt'\n  warning: no previously-included files found matching 'tox.ini'\n  writing manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\n  warning: build_py: byte-compiling is disabled, skipping.\n\n  running build_ext\n  generating cffi module 'build\\\\temp.win-amd64-3.8\\\\Release\\\\_padding.c'\n  creating build\\temp.win-amd64-3.8\n  creating build\\temp.win-amd64-3.8\\Release\n  generating cffi module 'build\\\\temp.win-amd64-3.8\\\\Release\\\\_constant_time.c'\n  generating cffi module 'build\\\\temp.win-amd64-3.8\\\\Release\\\\_openssl.c'\n  building '_openssl' extension\n  creating build\\temp.win-amd64-3.8\\Release\\build\n  creating build\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\n  creating build\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\\Release\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.24.28314\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -IC:\\Users\\divya\\PycharmProjects\\auto1\\venv-new_without_global\\include -IC:\\Users\\divya\\AppData\\Local\\Programs\\Python\\Python38\\include -IC:\\Users\\divya\\AppData\\Local\\Programs\\Python\\Python38\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.24.28314\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" /Tcbuild\\temp.win-amd64-3.8\\Release\\_openssl.c /Fobuild\\temp.win-amd64-3.8\\Release\\build\\temp.win-amd64-3.8\\Release\\_openssl.obj\n  _openssl.c\n  build\\temp.win-amd64-3.8\\Release\\_openssl.c(498): fatal error C1083: Cannot open include file: 'openssl/opensslv.h': No such file or directory\n  error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.24.28314\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit status 2\n\n  ----------------------------------------\n  Running setup.py clean for cryptography\nFailed to build cryptography\n\n  Failed building wheel for cryptography\nCould not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\n\nHowever, when I try to install autobahn and cryptography using windows elevated command prompt(run as administrator), it installs correctly. Can anyone iterate how to install autobahn and cryptography without admin privileges and without including global-site packages in pyCharm?\n\nP.S I have already installed MS Visual Studio build tools 2019 and openssl_X64.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does an android cryptography provider need to be signed?\r\n                \r\nIn Java SE from Oracle, it is required for a provider of cryptographic functions to be signed. This signing needs to occur using a private key belonging to a certificate that has been signed by Oracle. If the ```\n.jar```\n of the provider is not signed, then the provider cannot be plugged into the Java Cryptography Architecture (JCA) as a Java Cryptography Extension (JCE).\n\nDoes Android 4.0-4.4 require the providers to be signed as well? If so, are there specific regulations to creating a key/certificate pair that is used for signing?\n    ", "Answer": "\r\nNo, it does not. Your application is the only thing running in the Android sandbox, so the SecurityManager interface doesn't make any sense. As a caveat, you shouldn't load and run untrusted code (see the Android docs on SecurityManager)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Can the Bouncy Castle cryptography API be used in Android?\r\n                \r\nI am writing an application for the Android platform which makes use of cryptography. Is it possible for the Bouncy Castle cryptography API to be used in Android?\n    ", "Answer": "\r\nYes, in fact, it is already partly included (see http://code.google.com/p/android/issues/detail?id=3280). To get the full functionality, use Spongy Castle.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "arm cryptography/hazmat/bindings/_openssl.abi3.so: undefined symbol: pthread_atfork\r\n                \r\nI'm trying to install HomeAssistant on a Synology ds213j (arm).\nIt depends on cryptography, which i installed using ```\npip install cryptography```\n (v2.9.2). During the home assistang start sequence, an error appears in the log\n\n```\ncryptography/hazmat/bindings/_openssl.abi3.so: undefined symbol: pthread_atfork\n```\n\n\nDoes anybody know how to fix this?\n\nThanks\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Chat Application - Cryptography\r\n                \r\n\nI have created a chat application and to finish it I have to implement some Cryptography algorithm to secure the messages between server - client.\n\nMy implementation is:\n1.Client creates kaypair (public and private key) and sends public key to server.\n2.Server gets public key and creates symmetric key encrypted with the public key.\n3.Server sends the encrypted key to Client.\n4.Client unlocks symmetric key with private key.\n5.Client and Server communicate with Symmetric key.\n\nThis part of the code is where the server gets the public key and sends the symmetric key encrypted\n\n```\n else if(msg.type.equals(\"pubKey\")){\n                    pubKey = msg.content;                     //get public key\n                    String key = Arrays.toString(crypt.geteKey());\n                    clients[findClient(ID)].send(new Message(\"symmKey\", \"SERVER\", key, msg.sender));//!  //send symmetric key encrypted with public key\n            }\n```\n\n\nKey encryption method:\n\n```\npublic void keyEncryption() throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException{\n    Cipher cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\"); \n    cipher.init(Cipher.ENCRYPT_MODE, pubKey);\n    eKey = cipher.doFinal(key.getBlowfishKeyBytes());           //symmetric key encrypted with public key\n    //System.out.println(\"2. cipherText= \" + bytesToHex(symmKey));\n}\n```\n\n\nHow I get encrypted symmetric key from server:\n\n```\n   else if(msg.type.equals(\"symmKey\")){\n                    symmKey = (String) msg.content;     //get encrypted symmetric key (must unlock with private key)\n                }\n```\n\n\nThe Server Message class:  (Client Message class has \"object content\" instead of String)\n\n```\npackage com.socket;\n\nimport java.io.Serializable;\n\npublic class Message implements Serializable{\n\n    private static final long serialVersionUID = 1L;\n    public String type, sender,content, recipient;\n\n    public Message(String type, String sender, String content, String recipient){\n        this.type = type; this.sender = sender; this.content = content; this.recipient = recipient;\n    }\n\n    @Override\n    public String toString(){\n        return \"{type='\"+type+\"', sender='\"+sender+\"', content='\"+content+\"', recipient='\"+recipient+\"'}\";\n    }\n}\n```\n\n\nClient GUI where I send the key to the Server:\n\n```\nprivate void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         \n    //KeyPair\n    try {\n        keyPair = new Keypair();\n    } catch (NoSuchAlgorithmException ex) {\n        jTextArea1.append(\"Security Error! You are not safe!\");\n    }\n    Object pubKey = keyPair.getKeyPair().getPublic();\n    username = jTextField3.getText();\n    password = jPasswordField1.getText();\n\n    if (!username.isEmpty() && !password.isEmpty()) {\n        client.send(new Message(\"login\", username, password, \"SERVER\"));\n        client.send(new Message(\"pubKey\",username, pubKey, \"SERVER\"));      //send Public key to Server           \n    }\n}   \n```\n\n\nError I Get on Server:\n\n```\nDatabase exception : userExists()\n53846 ERROR reading: cannot assign instance of sun.security.rsa.RSAPublicKeyImpl to field com.socket.Message.content of type java.lang.String in instance of com.socket.Message\n```\n\n\nI have implemented steps 1-3 but I get this exception... If anyone has any idea how to deal with this issue, please help me.\n\n(I will provide any additional code if required.)\n\nThank you.\n    ", "Answer": "\r\nmsg.content is instance of String and you trying assign it to sun.security.rsa.RSAPublicKeyImpl here:\n\n```\npubKey = msg.content;\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python + script failed regarding to cryptography under /usr/lib64/python2.7\r\n                \r\nI create the following python script\n\nthis python script will read the file ```\n/lpp/airflow/.sec/rmq_pass```\n to var - ```\npass_hash```\n\n\nand will decrypt it to ```\ndecrypted_pass```\n\n\n```\nmore security_test.py\nimport sys\nimport os\nimport base64\nfrom cryptography.fernet import Fernet\n\nkey_file = \"/lpp/airflow/.sec/key\"\nrmq_pass_file = \"/lpp/airflow/.sec/rmq_pass\"\n\nkey = open(key_file, 'r')\nf = Fernet(key.read())\n\npass_hash  = open(rmq_pass_file, 'r')\n#decrypting the password from \"pass_file\" file using the key from the \"key_file\".\ndecrypted_pass = f.decrypt(pass_hash.read())\nConnStr = \"amqp://airflow:\" + decrypted_pass  + \"@localhost:5672//\"\n```\n\n\nwhen I run the script\nits failed on /usr/lib64/python2.7/site-packages/cryptography/fernet.py , or any under ```\n/usr/lib64/python2.7/site-packages/cryptography```\n \n\nwe try to re-install the package cryptography , but this didn't help\n\nand idea what is could be ?\n\n```\npython  security_test.py\nTraceback (most recent call last):\n  File \"security_test.py\", line 14, in <module>\n    decrypted_pass = f.decrypt(pass_hash.read())\n  File \"/usr/lib64/python2.7/site-packages/cryptography/fernet.py\", line 75, in decrypt\n    return self._decrypt_data(data, timestamp, ttl)\n  File \"/usr/lib64/python2.7/site-packages/cryptography/fernet.py\", line 117, in _decrypt_data\n    self._verify_signature(data)\n  File \"/usr/lib64/python2.7/site-packages/cryptography/fernet.py\", line 101, in _verify_signature\n    h = HMAC(self._signing_key, hashes.SHA256(), backend=self._backend)\n  File \"/usr/lib64/python2.7/site-packages/cryptography/hazmat/primitives/hmac.py\", line 31, in __init__\n    self._ctx = self._backend.create_hmac_ctx(key, self.algorithm)\n  File \"/usr/lib64/python2.7/site-packages/cryptography/hazmat/backends/openssl/backend.py\", line 207, in create_hmac_ctx\n    return _HMACContext(self, key, algorithm)\n  File \"/usr/lib64/python2.7/site-packages/cryptography/hazmat/backends/openssl/hmac.py\", line 34, in __init__\n    key_ptr = self._backend._ffi.from_buffer(key)\nTypeError: from_buffer() cannot return the address of the raw string within a str or unicode or bytearray object\n```\n\n\nIMPORTANT NOTE - on other machine this script is working fine\n\nwhat is the best way to resolve it ? by remove all modules and install them again ? or by re-install python ?\n    ", "Answer": "\r\nIf this was installed by ```\npip```\n, then this issue is due to having an out-of-date ```\ncffi```\n package (I was able to reproduce this problem by force-installing ```\ncffi```\n 1.5 in a ```\nvirtualenv```\n). Newer versions of ```\ncryptography```\n require ```\ncffi >= 1.8```\n, but ```\npip```\n does not always resolve that properly (depending on a variety of other scenarios). You can ```\npip install -U cffi```\n to see if that resolves it, but in general you should strongly consider running Python code inside of a ```\nvirtualenv```\n and not installing packages into the global package space. The OS package manager assumes that it owns global packages and you can cause many issues with your install if you mix and match distribution packages with ```\npip```\n installs.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography - Server's public key\r\n                \r\nI am a total beginner asp.net cryptography-wise.\n\nI want to send a digitally signed, encrypted message from client to the server.\n\nEvery tutorial I found states that \"you obtain other person's (server?!?) public key (from its certificate), use that key to encrypt and sign your message and than after that other person receives your message can decrypt it with its private key.\n\nI know how to access client certificate's properties through asp.net's Request object.\n\nMy question is - how do I obtain server's public key to start that whole process in the first place.\n\nAm I missing something important?\n    ", "Answer": "\r\nAs you can see in method for encryption and decryption you can use RSA.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography: converting C function to python\r\n                \r\nI am trying to solve a cryptography problem (https://callicode.fr/pydefis/Reverse/txt), the alghorithm make use of the following C function (F1). \nI don't know C, I tried to convert it to python(F2) without success. Thank you in advance for letting me know what I did wrong.\n\nF1:\n\n```\nvoid Encrypt(unsigned char key[20], unsigned char *pPlainBuffer, unsigned char *pCipherBuffer, unsigned int nLength) \n{\nint nKeyPos = 0;\nunsigned int n;\nunsigned char KeyA = 0;\n\nif ((pPlainBuffer != NULL) && (pCipherBuffer != NULL)) {\nfor (n = 0; n < 20; n++) \n  KeyA ^= key[n];\n  nKeyPos = KeyA % 20;\nfor (n = 0; n < nLength; n++) {\n  pCipherBuffer[n] = pPlainBuffer[n]^(key[nKeyPos]*KeyA);\n  KeyA += pCipherBuffer[n];\n  nKeyPos = pCipherBuffer[n] % 20;\n}\n }\n}\n```\n\n\nF2:\n\n```\ndef Encrypt(plainText, key):  # plainText is a list of hexadecimals representing ascii \n                              # characters, key is a list of int size 20  each int \n                              # beetween 0 and 255\n    keyA = 0\n\n    for n in range(20):\n        keyA ^= key[n]\n\n    nKeyPos = KeyA % 20\n\n    for n in range(len(plainText)):\n         codedText[n] = plainText[n]^(key[nKeyPos]*KeyA)\n         keyA += codedText[n]\n         nKeyPos = codedText[n] % 20\n```\n\n    ", "Answer": "\r\nyou have many issues... the most glaring being that python integers are not constrained to a byte width by default so you must explicitly set the width\n\nadditionally you must convert the letters to numbers in python as they are fundamentally different things (in C/c++ letters are really just numbers)\n\n```\ndef Encrypt(plainText, key):  # plainText is a list of hexadecimals representing ascii \n                              # characters, key is a list of int size 20  each int                                   # beetween 0 and 255\n    keyA = 0    \n    for letter in key:\n        keyA ^= ord(letter) # conver letter to number    \n    keyA = keyA & 0xFF # fix width to one byte\n    key = itertools.cycle(key) # repeate forever\n    codedText = \"\"\n    for letter,keyCode in zip(plainText,key):\n         xorVal = (ord(keyCode) * keyA) & 0xFF # make one byte wide\n         newLetter = chr((ord(letter) ^ xorVal )&0xFF) # make one byte wide\n\n         codedText += newLetter\n         keyA += ord(newLetter)\n         keyA = keyA&0xFF # keep it one byte wide\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "AES CTR decryption: Cryptography and Cryptodome give different results\r\n                \r\nThe below code snippet that AES-decrypts some bytes using Cryptodome works as I expect:\n```\nfrom Crypto.Cipher import AES\nfrom Crypto.Util import Counter\n\nkey = b'\\x12' * 32\ndecryptor = AES.new(key, AES.MODE_CTR,counter=Counter.new(nbits=128, little_endian=True))\nprint(decryptor.decrypt(b'Something encrypted'))\n```\n\nThe below uses Python Cryptography, and gives different results:\n```\nfrom cryptography.hazmat.primitives.ciphers import Cipher, modes, algorithms\n\nkey = b'\\x12' * 32\ndecryptor = Cipher(algorithms.AES(key), modes.CTR(b'\\0' * 16)).decryptor()\nprint(decryptor.update(b'Something encrypted'))\n```\n\nWhy? And how can I change the Python Cryptography version to output the same results as Cryptodome?\n(Context is writing AES decrypt code for unzipping files, and am considering using Python Cryptography)\n    ", "Answer": "\r\nIn PyCryptodome the counter is started at 1 by default. Also, the counter for little endian counts as follows: ```\n0x0100...0000, 0x0200...0000, 0x0300...0000```\n etc.\nSince in Cryptography the endianess of the counter cannot be configured and big endian is used, this count cannot be implemented. Although the start value can be explicitly set to ```\n0x0100...00```\n , but the counter would then count: ```\n0x0100...0000, 0x0100...0001, 0x0100...0002```\n etc.\nThis can be verified with the following code:\n```\nfrom Crypto.Cipher import AES\nfrom Crypto.Util import Counter\nkey = b'\\x12' * 32\ndecryptor = AES.new(key, AES.MODE_CTR,counter=Counter.new(nbits=128, little_endian=True, initial_value=1))\nprint(decryptor.decrypt(b'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx').hex())\n\nfrom cryptography.hazmat.primitives.ciphers import Cipher, modes, algorithms\nkey = b'\\x12' * 32\ndecryptor = Cipher(algorithms.AES(key), modes.CTR(b'\\x01' + b'\\0' * 15)).decryptor()\nprint(decryptor.update(b'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx').hex())\n```\n\nwith the output:\n```\nfaebe2ab213094fcd5c9ec3dae32372b 13b3b971b7694faa5e15f5387ac5a67f bc5dbc82ce54cf1bbe2719488b322078\nfaebe2ab213094fcd5c9ec3dae32372b 6ddda72218780c287bc74956395bf7db 0603820b26889ec64e7f7964a14518c5\n```\n\nBecause the counter value for the first block matches, the first block is identical. However, because of the different values for the following blocks the following blocks are different.\nI currently don't see any way how the Cryptography library could be used to generate the PyCryptodome library result when PyCryptodome is configured for little endian.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography for P2P card game\r\n                \r\nI'm considering writing a computer adaptation of a semi-popular card game. I'd like to make it function without a central server, and I'm trying to come up with a scheme that will make cheating impossible without having to trust the client.\n\nThe basic problem as I see it is that each player has a several piles of cards (draw deck, current hand and discard deck). It must be impossible for either player to alter the composition of these piles except when allowed by the game rules (ie drawing or discarding cards), nor should players be able to know what is in their or their oppponent's piles.\n\nI feel like there should be some way to use something like public-key cryptography to accomplish this, but I keep finding holes in my schemes. Can anyone suggest a protocol or point me to some resources on this topic?\n\n[Edit]\nOk, so I've been thinking about this a bit more, and here's an idea I've come up with. If you can poke any holes in it please let me know. \n\nAt shuffle time, a player has a stack of cards whose value is known to them. They take these values, concatenate a random salt to each, then hash them. They record the salts, and pass the hashes to their opponent. \n\nThe opponent concatenates a salt of their own, hashes again, then shuffles the hashes and passes the deck back to the original player. \n\nI believe at this point, the deck has been randomized and neither player can have any knowledge of the values. However, when a card is drawn, the opponent can reveal their salt, allowing the first player to determine what the original value is, and when the card is played the player reveals their own salt, allowing the opponent to verify the card value.\n    ", "Answer": "\r\nYour problem is the famous Mental Poker Problem in cryptography (this was one of my favorite parts of crypto-class in college).  It is possible, and it has been solved (in part, like all things crypto, by Ron Rivest), as long as you don't mind a huge performance hit.\n\nCheck the wiki page for more details.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is .NET AesManaged cryptography hardware accelerated?\r\n                \r\nDoes anyone know whether the AesManaged Cryptography provider from .NET (>4.0) supports hardware acceleration, if the CPU has AES extensions (Like Haswell based CPU)?\n\nIf so, is there a way to confirm with code?\n    ", "Answer": "\r\nClearly the .NET ```\nAesManaged```\n implementation is not hardware accelerated. Searches of SO and Google indicate that ```\nAesCryptoServiceProvider```\n (which is a wrapper over the OS crypto) is generally much slower than the ```\nAesManaged```\n implementation.\n\nHowever, I have found that the ```\nAesCryptoServiceProvider```\n was actually faster, way faster, as in order of magnitude difference. I'm suspecting that the OS level implementation is actually handing AES-NI instructions off to the CPU for hardware acceleration.\n\nI cannot locate any documentation on the above observation, but if my suspicions are correct then at least on a Core i7 4770 CPU running 64-Bit Windows 8.1 Update 1, the ```\nAesCryptoServiceProvider```\n is hardware accelerated.\n\nPerformance observations are that on the above machine, 8 threads of AES CBC decryption using ```\nAesManaged```\n will max out the CPU and consume as much memory as needed for the data (i.e. for us 32GB of RAM gets maxed out regularly). The exact same code but using ```\nAesCryptoServiceProvider```\n has the CPU cores average around 30-40% and memory (private working bytes) seldom go over 10GB.\n\nTo semi-answer my own question, try ```\nAesCryptoServiceProvider```\n, especially on 64-bit Windows 8.1 Update 1.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Books On Cryptography from Very Basics to Very Advanced [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 11 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nFrom Long back I wanted to learn cryptography and I wanted to become an expert in that. I wanted to learn most of the cryptography algorithms (hashing, encryption, decryption and cracking). After learning the concepts I wanted to implement some of the algorithms using Java. (Even there is JCE API but I am interested to create a kind of one).\n\nPlease provide me list of books in order \n\nBooks for learning cryptographic concepts (therotical)\nbooks for implementing cryptographic concepts (Practical).\n    ", "Answer": "\r\nSome of my favourites:\n\nCryptography Decrypted\n(theory, basic)\n\n\nExcellent diagrams and explanations of concepts and algorithms\n\n\nSecret and Lies\n(security, general reading)\n\n\nAnother book by Schneier which is more about Security than Cryptography. In other words, why cryptography (by itself) cannot guarantee security. In my Top-Ten list.\nIn his own words (from the book's Preface:)\n\nSeven years ago I wrote another book: Applied Cryptography. In it I described a mathematical utopia: algorithms that would keep your deepest secrets safe for millennia, protocols that could perform the most fantastical electronic interactions-unregulated gambling, undetectable authentication, anonymous cash-safely and securely. In my vision cryptography was the great technological equalizer; anyone with a cheap (and getting cheaper every year) computer could have the same security as the largest government. In the second edition of the same book, written two years later, I went so far as to write: \"It is insufficient to protect ourselves with laws; we need to protect ourselves with mathematics.\"\nIt's just not true. Cryptography can't do any of that.\n\n\n\nMalicious Cryptography: Exposing Cryptovirology\n(theory, advanced)\n\n\nWhat malicious code that uses cryptography techniques can do (and counter-measures).\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "telegram-python-bot ImportError No module named 'cryptography' Alpine Docker\r\n                \r\nI am trying to run script which sends message to telegram using python-telegram-bot module.\nThe script runs in docker on alpine. \n\nThe script cannot import Telegram, I get an error ModuleNotFoundError: No module named 'cryptography'\n\nMy docker file\n\n```\nFROM nickgryg/alpine-pandas:3.7.7 as base\nFROM base as builder\n\nRUN pip install --upgrade pip\n\nRUN mkdir /install\nRUN apk update && apk add postgresql-dev gcc musl-dev python3-dev libffi-dev openssl-dev \nWORKDIR /install\nCOPY requirements.txt /requirements.txt\nRUN pip install --install-option=\"--prefix=/install\" -r /requirements.txt\nFROM base\nCOPY --from=builder /install /usr/local\nCOPY src /app\nRUN apk --no-cache add libpq \nWORKDIR /app\n```\n\n\nrequirements.txt is below\n\n```\ncertifi==2020.4.5.1\nchardet==3.0.4\nDjango==3.0.3\nfuture==0.18.2\nidna==2.9\npandas==1.0.3\npycountry==19.8.18\npython-dateutil==2.8.1\npytz==2019.3\nrequests==2.23.0\nsix==1.14.0\nsqlparse==0.3.1\nurllib3==1.25.8\nvertica-python==0.10.3\ncurrencyconverter==0.14.1\npython-telegram-bot==12.6.1\npsycopg2==2.8.5\n```\n\n\nI also tried to add line ```\nadd apk py3-cryptography```\n to dockerfile but that didn't help.\n\nI found many questions related to issues with cryptography but no solutions helped.\n    ", "Answer": "\r\nManaged to resolve it myself. As the image is built in two stages I don't install cryptography during the first stage now, it is packaged into a wheel file. Which will then be copied and installed in the new image.\n\n```\nFROM nickgryg/alpine-pandas as base\nFROM base as builder\n\nRUN pip install --upgrade pip\n\nRUN mkdir /install\nRUN apk update && apk add gcc musl-dev python3-dev libffi-dev openssl-dev libc-dev postgresql-dev \nWORKDIR /install\nCOPY requirements.txt /requirements.txt\nRUN pip install --install-option=\"--prefix=/install\" -r /requirements.txt\n\nRUN mkdir /wheels\nWORKDIR /wheels\nRUN pip wheel cryptography\n\nFROM base\nRUN apk add libressl\nCOPY --from=builder /install /usr/local\nCOPY --from=builder /wheels /wheels\nRUN pip install /wheels/*.whl\nCOPY src /app\nRUN apk --no-cache add libpq \nWORKDIR /app\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Doing cryptography on Windows Phone\r\n                \r\nI have made some code that allows me to do cryptography in c# - using primarily ```\nAesManaged()```\n and ```\nSHA256Managed()```\n in System.Security.Cryptography.\n\nThe use case is that the tool needs to be able to pull off an encrypted piece of data, decrypt it, display it to the user, allow for editing and encrypt again before sending it back again.\n\nI would like to be able to do similar on Windows Phone, but it seems that the namespace is not available on the phone.\n\nSo what are my options now? Will it be available on Windows Phone 10? It seems that doing crypto-stuff would be a relatively common task in a phone app?\n\nEdit: added information about what the app should do\n    ", "Answer": "\r\nWhat are you trying to do with the cryptography?\nBecause if you just need to store some user credentials, best way is using the ```\nPasswordVault```\n\n\nMSDN reference here https://msdn.microsoft.com/en-us/library/windows/apps/xaml/windows.security.credentials.passwordvault.aspx\n\nI've made an example of this here\nhttp://depblog.weblogs.us/2014/11/20/migrating-from-sl8-0-protectdata-to-rt8-1-passwordvault/\n\nAdded some example code on how to add and remove entries from the Vault ( more details on the blog post )\n\n```\npublic async Task AddAccount(Account accountToAdd)\n{\n    //Reinitialize the vault to see if the given account is already available\n    await this.InitializeSettingsService();\n    Account accountFromVault = this.Accounts.FirstOrDefault(item => item.UserName.Equals(accountToAdd.UserName, StringComparison.OrdinalIgnoreCase));\n\n    if(accountFromVault == null)\n        _vault.Add(new PasswordCredential(Constants.VAULTRESOURCENAME, accountToAdd.UserName, accountToAdd.Password));\n\n    if (accountFromVault != null && !accountFromVault.Password.Equals(accountToAdd.Password, StringComparison.Ordinal))\n    {\n        _vault.Remove(new PasswordCredential(Constants.VAULTRESOURCENAME, accountFromVault.UserName, accountFromVault.Password));\n        _vault.Add(new PasswordCredential(Constants.VAULTRESOURCENAME, accountToAdd.UserName, accountToAdd.Password));\n    }\n\n    Account accountFromMemory = this.Accounts.FirstOrDefault(item => item.UserName.Equals(accountToAdd.UserName, StringComparison.OrdinalIgnoreCase));\n    if (accountFromMemory != null)\n    {\n        if (!accountFromMemory.Password.Equals(accountToAdd.Password, StringComparison.OrdinalIgnoreCase))\n        {\n            this.Accounts.Remove(accountFromMemory);\n            this.Accounts.Add(accountToAdd);\n        }\n    }\n    else\n        this.Accounts.Add(accountToAdd);\n}\n\npublic async Task RemoveAccount(Account accountToRemove)\n{\n    //Reinitialize the vault to see if the given account is already available\n    await this.InitializeSettingsService();\n    Account accountFromVault = this.Accounts.FirstOrDefault(item => item.UserName.Equals(accountToRemove.UserName, StringComparison.OrdinalIgnoreCase));\n\n    if (accountFromVault != null)\n        _vault.Remove(new PasswordCredential(Constants.VAULTRESOURCENAME, accountToRemove.UserName, accountToRemove.Password));\n\n    Account accountFromMemory = this.Accounts.FirstOrDefault(item => item.UserName.Equals(accountToRemove.UserName, StringComparison.OrdinalIgnoreCase));\n    if (accountFromMemory != null)\n        this.Accounts.Remove(accountFromMemory);\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ARM assembly cryptography extensions\r\n                \r\nI'm working implementing AES-ECB encode/decode in ARM assembly. I'm working with a Jetson Nano which uses an ARM Cortex A57 which has cryptography extensions on hardware. The issue I'm running into is whenever I attempt to assemble my code, the assembler outputs the following.\n```\naes.asm: Assembler messages:\naes.asm:14: Error: selected processor does not support `aese V0.16b,V0.16b'\n```\n\nBased on the documentation this CPU should support these instructions, I'm not sure what I am missing.\n```\n.section .text\n.global _start\n.arch armv8-a\n\n_start:\n        mov x8, 64\n        mov x0, 1\n        ldr x1, =str\n        mov x2, str_len\n        svc 0\n\n        ldr x0, =a\n        ldp q0, q1, [x0]\n        aese V0.16b, V0.16b\n\n        mov x8, 0x5D\n        mov x0, 0x45\n        svc 0\n\n\n.section .data\nstr: .ascii \"starting\\n\"\nstr_len = .-str\n\n.balign 1\na: .skip 16\na_len = .-a\n\nb: .single 3.4, 2.5, 4.4, 6.6, 7.7, 8.8\nb_size = .-b\n```\n\n    ", "Answer": "\r\n```\n.arch armv8-a```\n tells the assembler to only accept base ARMv8-A instructions.  The crypto instructions are not in the base instruction set, so you have to tell the assembler if you want to use this extension.  Try ```\n.arch armv8-a+crypto```\n.\nKeep in mind that the assembler has no knowledge of what extensions are supported by your target machine, unless you tell it.\nSee https://sourceware.org/binutils/docs/as/ARM-Options.html#ARM-Options for all architectures accepted by the ```\n-march```\n command line option and the ```\n.arch```\n directive.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cannot \"pip install cryptography\" in Docker Alpine Linux 3.3 with OpenSSL 1.0.2g and Python 2.7\r\n                \r\nSolved Wow, these guys are fast... It's basically this https://github.com/pyca/cryptography/issues/2750 It turned out that a security update for openssl was released (DROWN Attack) and that update contained an unexpected function signature change which caused the incompatibility, so this was just bad luck for me.\n\n\n\nI need to use ```\npip install cryptography```\n in a Docker container running Alpine Linux. Actually, it's another module, ```\nservice_identity```\n, but the problem resides in the ```\ncryptography```\n module, which is a dependency.\n\nI have the following Dockerfile\n\n```\nFROM alpine:3.3\n\nRUN apk --update add build-base libffi-dev openssl-dev python-dev py-pip\nRUN pip install cryptography\n```\n\n\nwhich fails with the following error\n\n```\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_openssl.c'\nbuilding '_openssl' extension\ncreating build/temp.linux-x86_64-2.7/build\ncreating build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7\ngcc -fno-strict-aliasing -Os -fomit-frame-pointer -DNDEBUG -Os -fomit-frame-pointer -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o\nbuild/temp.linux-x86_64-2.7/_openssl.c:726:6: error: conflicting types for 'BIO_new_mem_buf'\n BIO *BIO_new_mem_buf(void *, int);\n      ^\nIn file included from /usr/include/openssl/asn1.h:65:0,\n                 from build/temp.linux-x86_64-2.7/_openssl.c:434:\n/usr/include/openssl/bio.h:692:6: note: previous declaration of 'BIO_new_mem_buf' was here\n BIO *BIO_new_mem_buf(const void *buf, int len);\n      ^\nerror: command 'gcc' failed with exit status 1\n```\n\n\nopenssl 1.0.2g was released on 2016-03-01 (yesterday) and the alpine package already got updated to that version. Can it be related to this?\n\nHow can I resolve this issue? Maybe some environment variables which I can set?\n\nUpdate I've been checking the GitHub Repo for openssl, and in fact ```\nBIO *BIO_new_mem_buf(void *buf, int len)```\n of ```\nopenssl/bio.h```\n got changed to ```\nBIO *BIO_new_mem_buf(const void *buf, int len)```\n during the 1.0.2f to 1.0.2g transition (search for \"BIO_new_mem_buf\" in https://github.com/openssl/openssl/compare/OpenSSL_1_0_2f...OpenSSL_1_0_2g). I don't know where this ```\nopenssl/asn1.h```\n is coming from, which is importing an outdated version of ```\nopenssl/bio.h```\n, as it does not look like the one in the openssl repo. Any ideas?\n\nOk, I see some are already working on this:\nhttps://github.com/pyca/cryptography/issues/2750\n    ", "Answer": "\r\nFor those who are still experiencing problems installing ```\ncryptography==2.1.4```\n in Alpine 3.7 like this:\n\n```\nwriting manifest file 'src/cryptography.egg-info/SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_padding.c'\ncreating build/temp.linux-x86_64-2.7\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_constant_time.c'\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_openssl.c'\nbuilding '_openssl' extension\ncreating build/temp.linux-x86_64-2.7/build\ncreating build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7\ngcc -fno-strict-aliasing -Os -fomit-frame-pointer -g -DNDEBUG -Os -fomit-frame-pointer -g -DTHREAD_STACK_SIZE=0x100000 -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o -Wconversion -Wno-error=sign-conversion\nbuild/temp.linux-x86_64-2.7/_openssl.c:493:30: fatal error: openssl/opensslv.h: No such file or directory\n #include <openssl/opensslv.h>\n                              ^\ncompilation terminated.\nerror: command 'gcc' failed with exit status 1\n```\n\n\nSolution\n\nInstall these dependencies in the Alpine container:\n\n```\n$ apk add --no-cache libressl-dev musl-dev libffi-dev\n```\n\n\nTo install these dependencies using a Dockerfile:\n\n```\nRUN apk add --no-cache \\\n        libressl-dev \\\n        musl-dev \\\n        libffi-dev && \\\n    pip install --no-cache-dir cryptography==2.1.4 && \\\n    apk del \\\n        libressl-dev \\\n        musl-dev \\\n        libffi-dev\n```\n\n\nReference\n\nInstallation instructions for ```\ncryptography```\n on Alpine can be found here:\n\n\nhttps://cryptography.io/en/latest/installation/#building-cryptography-on-linux\nA version from the time of writing is available on github\n\n\nHere is the relevant portion:\n\n\n  Building cryptography on Linux\n  \n  [skipping over the part for non-Alpine Linux] …\n  \n  ```\n$ pip install cryptography\n```\n\n  \n  If you are on Alpine or just want to compile it yourself then\n  ```\ncryptography```\n requires a compiler, headers for Python (if you're not\n  using ```\npypy```\n), and headers for the OpenSSL and ```\nlibffi```\n libraries\n  available on your system.\n  \n  Alpine\n  \n  Replace ```\npython3-dev```\n with ```\npython-dev```\n if you're using Python 2.\n  \n  ```\n$ sudo apk add gcc musl-dev python3-dev libffi-dev openssl-dev\n```\n\n  \n  If you get an error with ```\nopenssl-dev```\n you may have to use ```\nlibressl-dev```\n.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Symmetric and Asymmetric Cryptography\r\n                \r\nI'm looking for an advice regarding cryptography.\n\nI'm working on a .Net application which I need to create a license for it, so I plan to create an encrypted license file which my application will use to know if it is licensed or not.\n\nHandling license is as following:\n\n\nLicense Generation:\n\n\nGenerate unique symmetric key.\nUse symmetric key to encrypt license information.\nUse asymmetric public key to encrypt symmetric key.\nWrite encrypted symmetric key and encrypted license information to file.\n\nLicense Decryption:\n\n\nMy application will read license file.\nDecrypt symmetric key using asymmetric private key which is embedded\nxml file inside dll.\nUse decrypted symmetric key to decrypt license information.\n\n\n\nMy questions are:\n\n\nIf the dll which is responsible for decrypting the license has the asymmetric private key as xml embedded resource, is it possible to spy on the dll to get the key and generate a new license?\nIs there another technique I can use which is more secure?\n\n    ", "Answer": "\r\nAs a very general overview, the simplest way is to sign (there's no real need to encrypt anything really) the information with a private key, and verify the signature with the corresponding public key. That's it. The private key is kept safe and no valid new signatures can be generated without it, so if someone changes the signed information the signature becomes invalid. There's no need for extra symmetric encryption on top of it - it's pointless work as far as I'm concerned.\n\nThere are plenty of libraries that already do this easily enough, but it's also not that hard to do it manually. https://github.com/dnauck/Portable.Licensing is one I used before.\n\nEdit: also yes, in general it's very easy to decompile .net assemblies, including extracting resources from them.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "correct implementation of asymmetric cryptography\r\n                \r\nI have mobile apps that make requests to server. I am thinking of using asymmetric cryptography where the private key resides in the server. The public key will be distributed to all users. Meaning all users will use the same public key for encryption. Is this way viable?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Axis2/rampart cryptography problem with signaturePropFile\r\n                \r\nI have problem with WebService client that has to use WS-Security.\nMy client is written with ```\naxis2```\n. It works when I do not enable\ncryptography (of course with my server emulator). I enabled cryptography\nby adding to ```\naxis.xml```\n:\n\n```\n<!--Signature and Encryption : Using the request's certificate-->\n<module ref=\"rampart\" />\n\n<parameter name=\"OutflowSecurity\">\n  <action>\n    <items>Signature</items>\n    <user>mn</user>\n      <passwordCallbackClass>PWCallback</passwordCallbackClass>\n      <signaturePropFile>client.properties</signaturePropFile>\n    <signatureKeyIdentifier>SKIKeyIdentifier</signatureKeyIdentifier>\n    <signatureParts>{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body</signatureParts>\n  </action>\n</parameter> \n```\n\n\nNow, when I invoke client from Eclipse with arguments:\n\n```\n-Daxis2.xml=axis-repo/conf/axis2.xml -Daxis2.repo=axis-repo\n```\n\n\nI got:\n\n```\norg.apache.axis2.AxisFault: CryptoFactory: Cannot load properties: client.properties\nat org.apache.rampart.handler.WSDoAllSender.processMessage(WSDoAllSender.java:67)\nat org.apache.rampart.handler.WSDoAllHandler.invoke(WSDoAllHandler.java:72)\nat org.apache.axis2.engine.Phase.invoke(Phase.java:318)\nat org.apache.axis2.engine.AxisEngine.invoke(AxisEngine.java:251)\nat org.apache.axis2.engine.AxisEngine.send(AxisEngine.java:416)\nat org.apache.axis2.description.OutInAxisOperationClient.send(OutInAxisOperation.java:402)\nat org.apache.axis2.description.OutInAxisOperationClient.executeImpl(OutInAxisOperation.java:229)\nat org.apache.axis2.client.OperationClient.execute(OperationClient.java:165)\n...\nCaused by: java.lang.RuntimeException: CryptoFactory: Cannot load properties: client.properties\nat org.apache.ws.security.components.crypto.CryptoFactory.getProperties(CryptoFactory.java:258)\nat org.apache.ws.security.components.crypto.CryptoFactory.getInstance(CryptoFactory.java:171)\nat org.apache.ws.security.handler.WSHandler.loadSignatureCrypto(WSHandler.java:431)\nat org.apache.ws.security.handler.WSHandler.doSenderAction(WSHandler.java:137)\nat org.apache.rampart.handler.WSDoAllSender.processBasic(WSDoAllSender.java:201)\nat org.apache.rampart.handler.WSDoAllSender.processMessage(WSDoAllSender.java:64)\n... 9 more\nCaused by: java.lang.NullPointerException\nat org.apache.ws.security.components.crypto.CryptoFactory.getProperties(CryptoFactory.java:253)\n... 14 more\n```\n\n\nI'm able to open ```\nclient.properties```\n as ```\nFile```\n object. I tried to put this\nfile in various directories or changed its name to use full path (both with slashes,\nand backslashes while I work on Windows) but nothing helps.\n\nMy client.properties file looks like:\n\n```\norg.apache.ws.security.crypto.provider=org.apache.ws.security.components.crypto.Merlin\norg.apache.ws.security.crypto.merlin.keystore.type=jks\norg.apache.ws.security.crypto.merlin.keystore.password=mn\norg.apache.ws.security.crypto.merlin.file=mn_keystore.ks\n```\n\n\nAny idea why I got this error?\n    ", "Answer": "\r\nI have found that I have to add ```\nclient.properties```\n and ```\nmn_keystore.ks```\n to\n```\nwss4j-1.5.8.jar```\n. I don't know if it is by design. My preference is to have both files out of this ```\n.jar```\n library.\n\nEDIT: on other environment I tried with separate ```\nclient.properties```\n and it worked! Now ```\nwss4j-1.5.8.jar```\n is as original, without configuration and keystore. I don't know why this work, and this not worked earlier :(\n\nEDIT2: when Eclipse run application it probably does not add project directory to claaspath. I resigned from adding .properies file to some .jar and now I use: from menu select Run->Debug Configurations, locate your Java application and its classpath tab. Then select \"User Entries\" and click the \"Advanced\" button from right panel, and select \"Add External Folder\". Now add directory with your ```\n.properties```\n files.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Ironclad Cryptography Library for Emacs Lisp?\r\n                \r\nI love the Ironclad cryptography library for Common Lisp. Out of curiosity, has anyone implemented this library into their Emacs Lisp project?  In researching this question, I suspected there would be too much work to make it compatible with a pure Emacs Lips project, but a hybrid Elisp and CL project might also be an option for what I need to do.\n    ", "Answer": "\r\nSome of the functionality of ironclad is built-in to Emacs via the ```\nsecure-hash```\n and ```\nmd5```\n functions. http://www.gnu.org/software/emacs/manual/html_node/elisp/Checksum_002fHash.html has more information.\n\nThese functions are written in C. I don't know for sure, but it seems like Emacs Lisp's slow speed and small fixnums would be a real obstacle for doing this work directly in pure elisp.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Use of byte arrays and hex values in Cryptography\r\n                \r\nWhen we are using cryptography always we are seeing byte arrays are being used instead of String values. But when we are looking at the techniques of most of the cryptography algorithms they uses hex values to do any operations. Eg. AES: MixColumns, SubBytes all these techniques(I suppose it uses) uses hex values to do those operations. \nCan you explain how these byte arrays are used in these operations as hex values. \n\nI have an assignment to develop a encryption algorithm , therefore any related sample codes would be much appropriate.\n    ", "Answer": "\r\nEvery four digits of binary makes a hexadecimal digit, so, you can convert back and forth quite easily (see: http://en.wikipedia.org/wiki/Hexadecimal#Binary_conversion).\n\nI don't think I full understand what you're asking, though. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "PyECC Example - Python Elliptic Curve Cryptography\r\n                \r\nI am working with PyECC - it is the only elliptic curve cryptography module for python that I can find. I was wondering if anyone had an example of how to use the module? I'll try reading the source, but I couldn't find anything on Stack Overflow on the topic regarding python.\n\nThanks!\n    ", "Answer": "\r\nFigured it out. Thank you for your suggestions. For anyone wanting information on how to implement PyECC, check out the crypto wrapper I wrote on github. \n\nCryptoWrapper - https://github.com/f47h3r/CryptoWrapper\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography for iPhone\r\n                \r\nI'm trying to make a software for iPhone to connect to one secured mail server and does the basic cryptography function. It would be encryption-signing and decryption.\n\nI found a few frameworks like http://www.chilkatsoft.com/ that can be used even for iOS programming but according to http://support.apple.com/kb/HT4979# iOS 5 has the support, so it would be easier to use the iOS feature rather than the third-party code, right? \n\nBut not all of users would able to setup secure mails. I was thinking of writing an app that just setup a mail account on the user's iPhone.\n\nThis application just needs to get the username and password (remember I want it for one single server) and does the configuration, like the things that was described in above link; is it possible? If yes how? Does http://www.rootmanager.com/iphone-ota-configuration/iphone-ota-setup-with-signed-mobileconfig.html work fine for my requirements?\n\n\n  Additional info:\n\n\n\nZimbra 5 is working in the server side!\nNo one here is expert on iOS. We have written the server code in Java and also some applications for the client side but now we are forced to add support for iPhone!\nFeel free to ask for additional information!\n\n    ", "Answer": "\r\nYou can 'install' mail settings on a user's phone using Profiles generated by the iPhone configuration utility  \n\nS/mime keys for send mail to other users are distributed via exchange or by receiving mail from other users. apple blurb\n\n\n\nThe Apple link you give is for sending encrypted emails; which is different from securing the connection to the mail-server.  The iphone is capable of both.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Bouncy castle java - Triple DES cryptography is symetric or asymmetric?\r\n                \r\nBouncy castle java - Triple DES cryptography is symemtric or asymmetric?\n\nI am using bouncy castle Java API for implementing tripleDES, but I do not know if it is symmetric or asymmetric key cryptography.\n\nCan somebody help me to answer this question.\n    ", "Answer": "\r\nTriple DES is an symmetric block cipher, a rather old one. I would stick to stronger algorithms (e.g. AES) if I had the choice.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python cryptography not installing pkcs7 on Apple Silicon M1 PRO\r\n                \r\nI had installed cryptography 2.9.2, but in ```\nvenv/lib/python3.9/site-packages/cryptography```\n there is not pkcs7 module. I'm running python under rosetta.\n    ", "Answer": "\r\nBoth the changelog and the PKCS7 section of the documentation state that PKCS7 support was added in 3.1 and expanded in later versions. You should install a newer version.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Ironclad Cryptography Library for Emacs Lisp?\r\n                \r\nI love the Ironclad cryptography library for Common Lisp. Out of curiosity, has anyone implemented this library into their Emacs Lisp project?  In researching this question, I suspected there would be too much work to make it compatible with a pure Emacs Lips project, but a hybrid Elisp and CL project might also be an option for what I need to do.\n    ", "Answer": "\r\nSome of the functionality of ironclad is built-in to Emacs via the ```\nsecure-hash```\n and ```\nmd5```\n functions. http://www.gnu.org/software/emacs/manual/html_node/elisp/Checksum_002fHash.html has more information.\n\nThese functions are written in C. I don't know for sure, but it seems like Emacs Lisp's slow speed and small fixnums would be a real obstacle for doing this work directly in pure elisp.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python cryptography not installing pkcs7 on Apple Silicon M1 PRO\r\n                \r\nI had installed cryptography 2.9.2, but in ```\nvenv/lib/python3.9/site-packages/cryptography```\n there is not pkcs7 module. I'm running python under rosetta.\n    ", "Answer": "\r\nBoth the changelog and the PKCS7 section of the documentation state that PKCS7 support was added in 3.1 and expanded in later versions. You should install a newer version.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Pipenv install fails on cryptography package: \"Disabling PEP 517 processing is invalid\" error\r\n                \r\nWithout being aware of it, I've been using the cryptography package for many months now without issue, but suddenly it won't build and it's brought development on my project to a halt.\nIt turns out cryptography is a dependency of one of the other packages in my Pipfile: ```\napns2```\n. As I said, it's been working fine, but something must have changed in my environment. Here is my Pipfile with just that package isolated:\n```\n[[source]]\nurl = \"https://pypi.python.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[requires]\npython_version = \"3.7.9\"\n\n[packages]\n\napns2 = \"*\"\n\n[dev-packages]\n```\n\nThis fails. I use ```\npipenv```\n (the latest version 2020.11.15), so when I run it now this is the output:\n```\n# pipenv install\nCreating a virtualenv for this project...\nPipfile: /Users/dylan/Dev/RideHare/server/Pipfile\nUsing /Users/dylan/.pyenv/versions/3.7.9/bin/python3.7m (3.7.9) to create virtualenv...\n⠏ Creating virtual environment...created virtual environment CPython3.7.9.final.0-64 in 502ms\n  creator CPython3Posix(dest=/Users/dylan/.local/share/virtualenvs/server-2uc2X-TS, clear=False, global=False)\n  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/dylan/Library/Application Support/virtualenv)\n    added seed packages: pip==20.2.2, setuptools==51.0.0, wheel==0.35.1\n  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator\n\n✔ Successfully created virtual environment! \nVirtualenv location: /Users/dylan/.local/share/virtualenvs/server-2uc2X-TS\nInstalling dependencies from Pipfile.lock (aa4cd9)...\nAn error occurred while installing cryptography==3.3.1; python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5' --hash=sha256:84ef7a0c10c24a7773163f917f1cb6b4444597efd505a8aed0a22e8c4780f27e --hash=sha256:788a3c9942df5e4371c199d10383f44a105d67d401fb4304178020142f020244 --hash=sha256:9f6b0492d111b43de5f70052e24c1f0951cb9e6022188ebcb1cc3a3d301469b0 --hash=sha256:a69bd3c68b98298f490e84519b954335154917eaab52cf582fa2c5c7efc6e812 --hash=sha256:b4890d5fb9b7a23e3bf8abf5a8a7da8e228f1e97dc96b30b95685df840b6914a --hash=sha256:0003a52a123602e1acee177dc90dd201f9bb1e73f24a070db7d36c588e8f5c7d --hash=sha256:7e177e4bea2de937a584b13645cab32f25e3d96fc0bc4a4cf99c27dc77682be6 --hash=sha256:dc42f645f8f3a489c3dd416730a514e7a91a59510ddaadc09d04224c098d3302 --hash=sha256:69e836c9e5ff4373ce6d3ab311c1a2eed274793083858d3cd4c7d12ce20d5f9c --hash=sha256:9e21301f7a1e7c03dbea73e8602905a4ebba641547a462b26dd03451e5769e7c --hash=sha256:0e85aaae861d0485eb5a79d33226dd6248d2a9f133b81532c8f5aae37de10ff7 --hash=sha256:c366df0401d1ec4e548bebe8f91d55ebcc0ec3137900d214dd7aac8427ef3030 --hash=sha256:594a1db4511bc4d960571536abe21b4e5c3003e8750ab8365fafce71c5d86901 --hash=sha256:83d9d2dfec70364a74f4e7c70ad04d3ca2e6a08b703606993407bf46b97868c5! Will try again.\n  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 10/10 — 00:00:08\nInstalling initially failed dependencies...\n[InstallError]:   File \"/usr/local/Cellar/pipenv/2020.11.15/libexec/lib/python3.9/site-packages/pipenv/cli/command.py\", line 233, in install\n[InstallError]:       retcode = do_install(\n[InstallError]:   File \"/usr/local/Cellar/pipenv/2020.11.15/libexec/lib/python3.9/site-packages/pipenv/core.py\", line 2052, in do_install\n[InstallError]:       do_init(\n[InstallError]:   File \"/usr/local/Cellar/pipenv/2020.11.15/libexec/lib/python3.9/site-packages/pipenv/core.py\", line 1304, in do_init\n[InstallError]:       do_install_dependencies(\n[InstallError]:   File \"/usr/local/Cellar/pipenv/2020.11.15/libexec/lib/python3.9/site-packages/pipenv/core.py\", line 899, in do_install_dependencies\n[InstallError]:       batch_install(\n[InstallError]:   File \"/usr/local/Cellar/pipenv/2020.11.15/libexec/lib/python3.9/site-packages/pipenv/core.py\", line 796, in batch_install\n[InstallError]:       _cleanup_procs(procs, failed_deps_queue, retry=retry)\n[InstallError]:   File \"/usr/local/Cellar/pipenv/2020.11.15/libexec/lib/python3.9/site-packages/pipenv/core.py\", line 703, in _cleanup_procs\n[InstallError]:       raise exceptions.InstallError(c.dep.name, extra=err_lines)\n[pipenv.exceptions.InstallError]: Looking in indexes: https://pypi.python.org/simple\n[pipenv.exceptions.InstallError]: Collecting cryptography==3.3.1\n[pipenv.exceptions.InstallError]:   Using cached cryptography-3.3.1.tar.gz (539 kB)\n[pipenv.exceptions.InstallError]: ERROR: Disabling PEP 517 processing is invalid: project specifies a build backend of setuptools.build_meta in pyproject.toml\nERROR: Couldn't install package: cryptography\n Package installation failed...\n  ☤  ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 0/1 — 00:00:01\n```\n\nIf instead of the apns2 line in the Pipfile I substitute cryptography explicitly (crytography = \"*\"), it fails too in the same way.\n    ", "Answer": "\r\nIf you are on a recent macOS version, the default pip version in your pipenv virtualenv incorrectly detects your OS version which makes looking up a compatible wheel fail (and it will start compiling cryptography dependencies).\nTo avoid the issue at it's root you can upgrade pip (in the virtualenv) to a version that detects mac os correctly:\n```\npipenv shell\npip install -U pip\n```\n\nThe bug was fixed in pip version 20.3 (2020-11-30) https://github.com/pypa/pip/issues/9138\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Obsolete cryptography warning from Browser\r\n                \r\nI have started a Windows Server with Apache 2.4 and SSL. When I connect with https://www.example.com and click on green lock, i have message:\n\n\n  Your connection to website is encrypted with obsolete cryptography\n\n\nAny advice, please?\n\nBelow is ```\nssl.conf```\n:\n\n```\n    #\n    # This is the Apache server configuration file providing SSL support.\n    # It contains the configuration directives to instruct the server how to\n    # serve pages over an https connection. For detailed information about these \n    # directives see <URL:http://httpd.apache.org/docs/2.4/mod/mod_ssl.html>\n    # \n    # Do NOT simply read the instructions in here without understanding\n    # what they do.  They're here only as hints or reminders.  If you are unsure\n    # consult the online docs. You have been warned.  \n    #\n    # Required modules: mod_log_config, mod_setenvif, mod_ssl,\n    #          socache_shmcb_module (for default value of SSLSessionCache)\n\n    #\n    # Pseudo Random Number Generator (PRNG):\n    # Configure one or more sources to seed the PRNG of the SSL library.\n    # The seed data should be of good random quality.\n    # WARNING! On some platforms /dev/random blocks if not enough entropy\n    # is available. This means you then cannot use the /dev/random device\n    # because it would lead to very long connection times (as long as\n    # it requires to make more entropy available). But usually those\n    # platforms additionally provide a /dev/urandom device which doesn't\n    # block. So, if available, use this one instead. Read the mod_ssl User\n    # Manual for more details.\n    #\n    #SSLRandomSeed startup file:/dev/random  512\n    #SSLRandomSeed startup file:/dev/urandom 512\n\n    #\n    # When we also provide SSL we have to listen to the \n    # standard HTTP port (see above) and to the HTTPS port\n    #\n    Listen 443\n\n    ##\n    ##  SSL Global Context\n    ##\n    ##  All SSL configuration in this context applies both to\n    ##  the main server and all SSL-enabled virtual hosts.\n    ##\n\n    #   SSL Cipher Suite:\n    #   List the ciphers that the client is permitted to negotiate.\n    #   See the mod_ssl documentation for a complete list.\n    #SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5\n\n\n    #   Speed-optimized SSL Cipher configuration:\n    #   If speed is your main concern (on busy HTTPS servers e.g.),\n    #   you might want to force clients to specific, performance\n    #   optimized ciphers. In this case, prepend those ciphers\n    #   to the SSLCipherSuite list, and enable SSLHonorCipherOrder.\n    #   Caveat: by giving precedence to RC4-SHA and AES128-SHA\n    #   (as in the example below), most connections will no longer\n    #   have perfect forward secrecy - if the server's key is\n    #   compromised, captures of past or future traffic must be\n    #   considered compromised, too.\n    SSLCipherSuite RC4-SHA:AES128-SHA:HIGH:MEDIUM:!aNULL:!MD5\n    #SSLHonorCipherOrder on \n\n    #   Pass Phrase Dialog:\n    #   Configure the pass phrase gathering process.\n    #   The filtering dialog program (`builtin' is an internal\n    #   terminal dialog) has to provide the pass phrase on stdout.\n    SSLPassPhraseDialog  builtin\n\n    #   Inter-Process Session Cache:\n    #   Configure the SSL Session Cache: First the mechanism \n    #   to use and second the expiring timeout (in seconds).\n    #SSLSessionCache         \"dbm:c:/Apache24/logs/ssl_scache\"\n\n    # Estes 2 estavam ativos\n    #SSLSessionCache        \"shmcb:c:/Apache24/logs/ssl_scache(512000)\"\n    #SSLSessionCacheTimeout  300\n\n    #   OCSP Stapling (requires OpenSSL 0.9.8h or later)\n    #\n    #   This feature is disabled by default and requires at least\n    #   the two directives SSLUseStapling and SSLStaplingCache.\n    #   Refer to the documentation on OCSP Stapling in the SSL/TLS\n    #   How-To for more information.\n    #\n    #   Enable stapling for all SSL-enabled servers:\n    #SSLUseStapling On\n\n    #   Define a relatively small cache for OCSP Stapling using\n    #   the same mechanism that is used for the SSL session cache\n    #   above.  If stapling is used with more than a few certificates,\n    #   the size may need to be increased.  (AH01929 will be logged.)\n    #SSLStaplingCache \"shmcb:c:/Apache24/logs/ssl_stapling(32768)\"\n\n    #   Seconds before valid OCSP responses are expired from the cache\n    #SSLStaplingStandardCacheTimeout 3600\n\n    #   Seconds before invalid OCSP responses are expired from the cache\n    #SSLStaplingErrorCacheTimeout 600\n\n    ##\n    ## SSL Virtual Host Context\n    ##\n\n    <VirtualHost *:443>\n\n    #   General setup for the virtual host\n    DocumentRoot \"c:/Apache24/htdocs\"\n    ServerName www.xxx.com:443\n    ServerAdmin webmaster@xxx.com\n    ErrorLog \"c:/Apache24/logs/error.log\"\n    TransferLog \"c:/Apache24/logs/access.log\"\n\n    #   SSL Engine Switch:\n    #   Enable/Disable SSL for this virtual host.\n    SSLEngine on\n\n\n    #   Server Certificate:\n    #   Point SSLCertificateFile at a PEM encoded certificate.  If\n    #   the certificate is encrypted, then you will be prompted for a\n    #   pass phrase.  Note that a kill -HUP will prompt again.  Keep\n    #   in mind that if you have both an RSA and a DSA certificate you\n    #   can configure both in parallel (to also allow the use of DSA\n    #   ciphers, etc.)\n    #   Some ECC cipher suites (http://www.ietf.org/rfc/rfc4492.txt)\n    #   require an ECC certificate which can also be configured in\n    #   parallel.\n    SSLCertificateFile \"c:/Apache24/conf/aws-101.crt\"\n    #SSLCertificateFile \"c:/Apache24/conf/server-dsa.crt\"\n    #SSLCertificateFile \"c:/Apache24/conf/server-ecc.crt\"\n\n    #   Server Private Key:\n    #   If the key is not combined with the certificate, use this\n    #   directive to point at the key file.  Keep in mind that if\n    #   you've both a RSA and a DSA private key you can configure\n    #   both in parallel (to also allow the use of DSA ciphers, etc.)\n    #   ECC keys, when in use, can also be configured in parallel\n    SSLCertificateKeyFile \"c:/Apache24/conf/aws-101.key\"\n\n    #   Server Certificate Chain:\n    #   Point SSLCertificateChainFile at a file containing the\n    #   concatenation of PEM encoded CA certificates which form the\n    #   certificate chain for the server certificate. Alternatively\n    #   the referenced file can be the same as SSLCertificateFile\n    #   when the CA certificates are directly appended to the server\n    #   certificate for convenience.\n    SSLCertificateChainFile \"c:/Apache24/conf/aws-101_ca_bundle.crt\"\n\n    #   Certificate Authority (CA):\n    #   Set the CA certificate verification path where to find CA\n    #   certificates for client authentication or alternatively one\n    #   huge file containing all of them (file must be PEM encoded)\n    #   Note: Inside SSLCACertificatePath you need hash symlinks\n    #         to point to the certificate files. Use the provided\n    #         Makefile to update the hash symlinks after changes.\n    #SSLCACertificatePath \"c:/Apache24/conf/aws-101_ca_bundle.crt\"\n    #SSLCACertificateFile \"c:/Apache24/conf/aws-101_ca_bundle.crt\"\n\n    #   Certificate Revocation Lists (CRL):\n    #   Set the CA revocation path where to find CA CRLs for client\n    #   authentication or alternatively one huge file containing all\n    #   of them (file must be PEM encoded).\n    #   The CRL checking mode needs to be configured explicitly\n    #   through SSLCARevocationCheck (defaults to \"none\" otherwise).\n    #   Note: Inside SSLCARevocationPath you need hash symlinks\n    #         to point to the certificate files. Use the provided\n    #         Makefile to update the hash symlinks after changes.\n    #SSLCARevocationPath \"c:/Apache24/conf/ssl.crl\"\n    #SSLCARevocationFile \"c:/Apache24/conf/ssl.crl/ca-bundle.crl\"\n    #SSLCARevocationCheck chain\n\n    #   Client Authentication (Type):\n    #   Client certificate verification type and depth.  Types are\n    #   none, optional, require and optional_no_ca.  Depth is a\n    #   number which specifies how deeply to verify the certificate\n    #   issuer chain before deciding the certificate is not valid.\n    #SSLVerifyClient require\n    #SSLVerifyDepth  10\n\n    #   TLS-SRP mutual authentication:\n    #   Enable TLS-SRP and set the path to the OpenSSL SRP verifier\n    #   file (containing login information for SRP user accounts). \n    #   Requires OpenSSL 1.0.1 or newer. See the mod_ssl FAQ for\n    #   detailed instructions on creating this file. Example:\n    #   \"openssl srp -srpvfile c:/Apache24/conf/passwd.srpv -add username\"\n    #SSLSRPVerifierFile \"c:/Apache24/conf/passwd.srpv\"\n\n    #   Access Control:\n    #   With SSLRequire you can do per-directory access control based\n    #   on arbitrary complex boolean expressions containing server\n    #   variable checks and other lookup directives.  The syntax is a\n    #   mixture between C and Perl.  See the mod_ssl documentation\n    #   for more details.\n    #<Location />\n    #SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)/ \\\n    #            and %{SSL_CLIENT_S_DN_O} eq \"Snake Oil, Ltd.\" \\\n    #            and %{SSL_CLIENT_S_DN_OU} in {\"Staff\", \"CA\", \"Dev\"} \\\n    #            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \\\n    #            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \\\n    #           or %{REMOTE_ADDR} =~ m/^192\\.76\\.162\\.[0-9]+$/\n    #</Location>\n\n    #   SSL Engine Options:\n    #   Set various options for the SSL engine.\n    #   o FakeBasicAuth:\n    #     Translate the client X.509 into a Basic Authorisation.  This means that\n    #     the standard Auth/DBMAuth methods can be used for access control.  The\n    #     user name is the `one line' version of the client's X.509 certificate.\n    #     Note that no password is obtained from the user. Every entry in the user\n    #     file needs this password: `xxj31ZMTZzkVA'.\n    #   o ExportCertData:\n    #     This exports two additional environment variables: SSL_CLIENT_CERT and\n    #     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the\n    #     server (always existing) and the client (only existing when client\n    #     authentication is used). This can be used to import the certificates\n    #     into CGI scripts.\n    #   o StdEnvVars:\n    #     This exports the standard SSL/TLS related `SSL_*' environment variables.\n    #     Per default this exportation is switched off for performance reasons,\n    #     because the extraction step is an expensive operation and is usually\n    #     useless for serving static content. So one usually enables the\n    #     exportation for CGI and SSI requests only.\n    #   o StrictRequire:\n    #     This denies access when \"SSLRequireSSL\" or \"SSLRequire\" applied even\n    #     under a \"Satisfy any\" situation, i.e. when it applies access is denied\n    #     and no other module can change it.\n    #   o OptRenegotiate:\n    #     This enables optimized SSL connection renegotiation handling when SSL\n    #     directives are used in per-directory context. \n    #SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire\n    <FilesMatch \"\\.(cgi|shtml|phtml|php)$\">\n        SSLOptions +StdEnvVars\n    </FilesMatch>\n    <Directory \"c:/Apache24/cgi-bin\">\n        SSLOptions +StdEnvVars\n    </Directory>\n\n    #   SSL Protocol Adjustments:\n    #   The safe and default but still SSL/TLS standard compliant shutdown\n    #   approach is that mod_ssl sends the close notify alert but doesn't wait for\n    #   the close notify alert from client. When you need a different shutdown\n    #   approach you can use one of the following variables:\n    #   o ssl-unclean-shutdown:\n    #     This forces an unclean shutdown when the connection is closed, i.e. no\n    #     SSL close notify alert is sent or allowed to be received.  This violates\n    #     the SSL/TLS standard but is needed for some brain-dead browsers. Use\n    #     this when you receive I/O errors because of the standard approach where\n    #     mod_ssl sends the close notify alert.\n    #   o ssl-accurate-shutdown:\n    #     This forces an accurate shutdown when the connection is closed, i.e. a\n    #     SSL close notify alert is send and mod_ssl waits for the close notify\n    #     alert of the client. This is 100% SSL/TLS standard compliant, but in\n    #     practice often causes hanging connections with brain-dead browsers. Use\n    #     this only for browsers where you know that their SSL implementation\n    #     works correctly. \n    #   Notice: Most problems of broken clients are also related to the HTTP\n    #   keep-alive facility, so you usually additionally want to disable\n    #   keep-alive for those clients, too. Use variable \"nokeepalive\" for this.\n    #   Similarly, one has to force some clients to use HTTP/1.0 to workaround\n    #   their broken HTTP/1.1 implementation. Use variables \"downgrade-1.0\" and\n    #   \"force-response-1.0\" for this.\n    BrowserMatch \"MSIE [2-5]\" \\\n             nokeepalive ssl-unclean-shutdown \\\n             downgrade-1.0 force-response-1.0\n\n    #   Per-Server Logging:\n    #   The home of a custom SSL log file. Use this when you want a\n    #   compact non-error SSL logfile on a virtual host basis.\n    CustomLog \"c:/Apache24/logs/ssl_request.log\" \\\n              \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n\n    </VirtualHost>                                  \n```\n\n    ", "Answer": "\r\nFrom https://www.chromium.org/Home/chromium-security/education/tls#TOC-Deprecation-of-TLS-Features-Algorithms-in-Chrome\n\n\n  Obsolete Cipher Suites\n  \n  You may see:\n  \n  “Your connection to example.com is encrypted with obsolete\n  cryptography.”\n  \n  This means that the connection to the current website is using an\n  outdated cipher suite (which Chrome still allows if the server insists\n  on it).\n  \n  In order for the message to indicate “modern cryptography”, the\n  connection should use forward secrecy and either AES-GCM or\n  CHACHA20_POLY1305. Other cipher suites are known to have weaknesses.\n  Most servers will wish to negotiate\n  TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256.\n\n\nAll this boils down to the following lines in your configuration, that determine which cipher suites are supported and prioritized for connections with clients.\n\n```\nSSLProtocol\nSSLCipherSuite\nSSLHonorCipherOrder\n```\n\n\nPer https://certsimple.com/blog/chrome-outdated-cryptography and https://mozilla.github.io/server-side-tls/ssl-config-generator/, you may want to give this a try:\n\n```\nSSLProtocol             all -SSLv2 -SSLv3\nSSLCipherSuite          ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\nSSLHonorCipherOrder     on\n```\n\n\nSee also:\n\n[1] https://mozilla.github.io/server-side-tls/ssl-config-generator/ - Suggests security configurations\n\n[2] https://www.ssllabs.com/ssltest/index.html -- Test your server's SSL configuration\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is DES cryptography available in .NET Standard?\r\n                \r\nI'm trying to use DES cryptography in a .NET Standard project (I know it's old and awful, but things out there still use it!) but I cannot find it in the framework for the life of me. All of the crypto classes in .NET Standard appear to reside in the assembly ```\nSystem.Security.Cryptography.Algorithms```\n and browsing the source I can see a DES implementation: https://github.com/dotnet/corefx/blob/master/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/DES.cs\n\nMy VS2017 IDE refuses to accept that the ```\nDES```\n class exists in any version of .NET Standard, reporting that:\n\n\n  The name 'DES' does not exist in the current context\n\n\nAny ideas?\n    ", "Answer": "\r\nLooks like it's being added in standard 2.0, here is a link to the diff between 1.6 and 2.0.  I'm assuming that you're looking for \n\n```\npublic abstract class DES\n```\n\n\nAdditional good news is that it got released I believe, so if you target 2.0 I think you should be good.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to check that \"Java Cryptography Extension\" is installed? [duplicate]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                This question already has an answer here:\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\n\n  Possible Duplicate:\n  Check for JCE Unlimited Strength Jurisdiction Policy files  \n\n\n\n\nI'm working on a project where I need to install the \"Java Cryptography Extension\" (JCE), which I think I've done. I followed the instructions here:\n\nhttp://suhothayan.blogspot.com/2012/05/how-to-install-java-cryptography.html\n\nIs there any way to verify that I've installed it correctly - some of the tests that I am running indicate that it's not.\n\n\n\nTurns out my question is a duplicate of the following, and the accepted solution works perfectly: \n\nCheck for JCE Unlimited Strength Jurisdiction Policy files\n    ", "Answer": "\r\nHere is a more modern Java implementation\n\n```\nimport java.security.Provider;\nimport java.security.Security;\nimport java.util.Arrays;\n\npublic class ShowCryptoProviders\n{\n    private static final String EOL = System.getProperty(\"line.separator\");\n\n    public static void main(final String[] args)\n    {\n        final Provider[] providers = Security.getProviders();\n        final Boolean verbose = Arrays.asList(args).contains(\"-v\");\n        for (final Provider p : providers)\n        {\n            System.out.format(\"%s %s%s\", p.getName(), p.getVersion(), EOL);\n            for (final Object o : p.keySet())\n            {\n                if (verbose)\n                {\n                    System.out.format(\"\\t%s : %s%s\", o, p.getProperty((String)o), EOL);\n                }\n            }\n        }\n    }\n}\n```\n\n\nI can't imagine that something in here can't tell you what you need to know. If it doesn't just test for \"Unlimited Strength\" by checking the ```\nCypher.getMaxAllowedKeyLength()```\n it should return a very large number well above 128.\n\nUse ```\n-v```\n ( verbose ) to get the following output.\n\n```\nSunJCE 1.7\n    Cipher.Blowfish SupportedKeyFormats : RAW\n        AlgorithmParameters.DESede : com.sun.crypto.provider.DESedeParameters\n        AlgorithmParameters.DES : com.sun.crypto.provider.DESParameters\n        Cipher.DES SupportedPaddings : NOPADDING|PKCS5PADDING|ISO10126PADDING\n        AlgorithmParameters.Blowfish : com.sun.crypto.provider.BlowfishParameters\n        Cipher.DESedeWrap SupportedKeyFormats : RAW\n        Alg.Alias.KeyAgreement.1.2.840.113549.1.3.1 : DiffieHellman\n        AlgorithmParameterGenerator.DiffieHellman : com.sun.crypto.provider.DHParameterGenerator\n        Cipher.RSA SupportedPaddings : NOPADDING|PKCS1PADDING|OAEPWITHMD5ANDMGF1PADDING|OAEPWITHSHA1ANDMGF1PADDING|OAEPWITHSHA-1ANDMGF1PADDING|OAEPWITHSHA-256ANDMGF1PADDING|OAEPWITHSHA-384ANDMGF1PADDING|OAEPWITHSHA-512ANDMGF1PADDING\n        Alg.Alias.Cipher.TripleDES : DESede\n        Cipher.ARCFOUR SupportedModes : ECB\n        Mac.SslMacSHA1 SupportedKeyFormats : RAW\n        KeyGenerator.DES : com.sun.crypto.provider.DESKeyGenerator\n        Provider.id version : 1.7\n        KeyGenerator.DESede : com.sun.crypto.provider.DESedeKeyGenerator\n        Alg.Alias.SecretKeyFactory.PBE : PBEWithMD5AndDES\n        Alg.Alias.KeyFactory.1.2.840.113549.1.3.1 : DiffieHellman\n        Mac.HmacSHA1 : com.sun.crypto.provider.HmacSHA1\n        Cipher.PBEWithMD5AndDES : com.sun.crypto.provider.PBEWithMD5AndDESCipher\n        Cipher.AES SupportedModes : ECB|CBC|PCBC|CTR|CTS|CFB|OFB|CFB8|CFB16|CFB24|CFB32|CFB40|CFB48|CFB56|CFB64|OFB8|OFB16|OFB24|OFB32|OFB40|OFB48|OFB56|OFB64|CFB72|CFB80|CFB88|CFB96|CFB104|CFB112|CFB120|CFB128|OFB72|OFB80|OFB88|OFB96|OFB104|OFB112|OFB120|OFB128\n        Cipher.AESWrap SupportedModes : ECB\n        SecretKeyFactory.DESede : com.sun.crypto.provider.DESedeKeyFactory\n        KeyGenerator.SunTlsKeyMaterial : com.sun.crypto.provider.TlsKeyMaterialGenerator\n        AlgorithmParameters.OAEP : com.sun.crypto.provider.OAEPParameters\n        Cipher.AES SupportedKeyFormats : RAW\n        AlgorithmParameters.RC2 : com.sun.crypto.provider.RC2Parameters\n        AlgorithmParameters.PBE : com.sun.crypto.provider.PBEParameters\n        Alg.Alias.KeyPairGenerator.DH : DiffieHellman\n        Alg.Alias.KeyAgreement.OID.1.2.840.113549.1.3.1 : DiffieHellman\n        Cipher.AES : com.sun.crypto.provider.AESCipher\n        KeyGenerator.RC2 : com.sun.crypto.provider.KeyGeneratorCore$RC2KeyGenerator\n        Mac.HmacSHA512 : com.sun.crypto.provider.HmacCore$HmacSHA512\n        Provider.id info : SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)\n        Cipher.AES SupportedPaddings : NOPADDING|PKCS5PADDING|ISO10126PADDING\n        Alg.Alias.AlgorithmParameters.OID.1.2.840.113549.1.12.1.6 : PBEWithSHA1AndRC2_40\n        Cipher.Blowfish SupportedPaddings : NOPADDING|PKCS5PADDING|ISO10126PADDING\n        Alg.Alias.AlgorithmParameters.OID.1.2.840.113549.1.12.1.3 : PBEWithSHA1AndDESede\n        Alg.Alias.KeyGenerator.SunTls12KeyMaterial : SunTlsKeyMaterial\n        KeyStore.JCEKS : com.sun.crypto.provider.JceKeyStore\n        Cipher.Blowfish SupportedModes : ECB|CBC|PCBC|CTR|CTS|CFB|OFB|CFB8|CFB16|CFB24|CFB32|CFB40|CFB48|CFB56|CFB64|OFB8|OFB16|OFB24|OFB32|OFB40|OFB48|OFB56|OFB64\n        Alg.Alias.SecretKeyFactory.1.2.840.113549.1.5.12 : PBKDF2WithHmacSHA1\n        Mac.HmacSHA384 SupportedKeyFormats : RAW\n        Cipher.DESedeWrap : com.sun.crypto.provider.DESedeWrapCipher\n        Cipher.ARCFOUR SupportedPaddings : NOPADDING\n        Alg.Alias.KeyPairGenerator.1.2.840.113549.1.3.1 : DiffieHellman\n        Cipher.PBEWithMD5AndTripleDES : com.sun.crypto.provider.PBEWithMD5AndTripleDESCipher\n        Alg.Alias.Cipher.1.2.840.113549.1.12.1.6 : PBEWithSHA1AndRC2_40\n        Alg.Alias.Cipher.1.2.840.113549.1.12.1.3 : PBEWithSHA1AndDESede\n        Mac.HmacSHA256 SupportedKeyFormats : RAW\n        Alg.Alias.KeyGenerator.SunTls12RsaPremasterSecret : SunTlsRsaPremasterSecret\n        Alg.Alias.AlgorithmParameterGenerator.1.2.840.113549.1.3.1 : DiffieHellman\n        Cipher.PBEWithSHA1AndDESede : com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndDESede\n        Alg.Alias.KeyGenerator.SunTls12MasterSecret : SunTlsMasterSecret\n        SecretKeyFactory.PBEWithMD5AndDES : com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES\n        KeyPairGenerator.DiffieHellman : com.sun.crypto.provider.DHKeyPairGenerator\n        Cipher.RC2 SupportedModes : ECB|CBC|PCBC|CTR|CTS|CFB|OFB|CFB8|CFB16|CFB24|CFB32|CFB40|CFB48|CFB56|CFB64|OFB8|OFB16|OFB24|OFB32|OFB40|OFB48|OFB56|OFB64\n        Alg.Alias.AlgorithmParameters.Rijndael : AES\n        KeyAgreement.DiffieHellman SupportedKeyClasses : javax.crypto.interfaces.DHPublicKey|javax.crypto.interfaces.DHPrivateKey\n        Mac.HmacMD5 SupportedKeyFormats : RAW\n        KeyGenerator.SunTlsRsaPremasterSecret : com.sun.crypto.provider.TlsRsaPremasterSecretGenerator\n        Cipher.AESWrap SupportedKeyFormats : RAW\n        SecretKeyFactory.DES : com.sun.crypto.provider.DESKeyFactory\n        Cipher.AESWrap SupportedPaddings : NOPADDING\n        Provider.id name : SunJCE\n        KeyGenerator.HmacSHA512 : com.sun.crypto.provider.KeyGeneratorCore$HmacSHA512KG\n        Mac.HmacSHA256 : com.sun.crypto.provider.HmacCore$HmacSHA256\n        Cipher.ARCFOUR SupportedKeyFormats : RAW\n        Cipher.DES SupportedModes : ECB|CBC|PCBC|CTR|CTS|CFB|OFB|CFB8|CFB16|CFB24|CFB32|CFB40|CFB48|CFB56|CFB64|OFB8|OFB16|OFB24|OFB32|OFB40|OFB48|OFB56|OFB64\n        Cipher.RSA SupportedKeyClasses : java.security.interfaces.RSAPublicKey|java.security.interfaces.RSAPrivateKey\n        SecretKeyFactory.PBEWithMD5AndTripleDES : com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndTripleDES\n        Cipher.PBEWithSHA1AndRC2_40 : com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC2_40\n        AlgorithmParameters.DiffieHellman : com.sun.crypto.provider.DHParameters\n        Mac.HmacMD5 : com.sun.crypto.provider.HmacMD5\n        Cipher.RSA : com.sun.crypto.provider.RSACipher\n        Mac.SslMacMD5 : com.sun.crypto.provider.SslMacCore$SslMacMD5\n        Alg.Alias.AlgorithmParameters.OID.1.2.840.113549.1.5.3 : PBEWithMD5AndDES\n        Cipher.DESede SupportedPaddings : NOPADDING|PKCS5PADDING|ISO10126PADDING\n        Alg.Alias.AlgorithmParameterGenerator.OID.1.2.840.113549.1.3.1 : DiffieHellman\n        Cipher.DESede : com.sun.crypto.provider.DESedeCipher\n        Alg.Alias.AlgorithmParameters.OID.1.2.840.113549.1.3.1 : DiffieHellman\n        Alg.Alias.AlgorithmParameters.1.2.840.113549.1.5.3 : PBEWithMD5AndDES\n        Mac.HmacSHA512 SupportedKeyFormats : RAW\n        Mac.HmacPBESHA1 SupportedKeyFormats : RAW\n        Alg.Alias.AlgorithmParameterGenerator.DH : DiffieHellman\n        Cipher.DESedeWrap SupportedPaddings : NOPADDING\n        Alg.Alias.SecretKeyFactory.OID.1.2.840.113549.1.5.12 : PBKDF2WithHmacSHA1\n        Alg.Alias.AlgorithmParameters.1.2.840.113549.1.3.1 : DiffieHellman\n        Mac.HmacPBESHA1 : com.sun.crypto.provider.HmacPKCS12PBESHA1\n        Cipher.DES SupportedKeyFormats : RAW\n        AlgorithmParameters.PBEWithMD5AndTripleDES : com.sun.crypto.provider.PBEParameters\n        Cipher.DESedeWrap SupportedModes : CBC\n        Alg.Alias.KeyFactory.OID.1.2.840.113549.1.3.1 : DiffieHellman\n        Alg.Alias.Cipher.OID.1.2.840.113549.1.5.3 : PBEWithMD5AndDES\n        AlgorithmParameters.AES : com.sun.crypto.provider.AESParameters\n        Alg.Alias.AlgorithmParameters.TripleDES : DESede\n        Alg.Alias.SecretKeyFactory.TripleDES : DESede\n        KeyGenerator.HmacSHA256 : com.sun.crypto.provider.KeyGeneratorCore$HmacSHA256KG\n        Alg.Alias.KeyGenerator.TripleDES : DESede\n        Alg.Alias.AlgorithmParameters.DH : DiffieHellman\n        KeyGenerator.AES : com.sun.crypto.provider.AESKeyGenerator\n        Cipher.RC2 SupportedPaddings : NOPADDING|PKCS5PADDING|ISO10126PADDING\n        Alg.Alias.Cipher.RC4 : ARCFOUR\n        Alg.Alias.KeyPairGenerator.OID.1.2.840.113549.1.3.1 : DiffieHellman\n        Mac.HmacSHA384 : com.sun.crypto.provider.HmacCore$HmacSHA384\n        SecretKeyFactory.PBKDF2WithHmacSHA1 : com.sun.crypto.provider.PBKDF2HmacSHA1Factory\n        Provider.id className : com.sun.crypto.provider.SunJCE\n        Cipher.DES : com.sun.crypto.provider.DESCipher\n        Cipher.Blowfish : com.sun.crypto.provider.BlowfishCipher\n        KeyGenerator.SunTlsMasterSecret : com.sun.crypto.provider.TlsMasterSecretGenerator\n        KeyGenerator.HmacSHA1 : com.sun.crypto.provider.HmacSHA1KeyGenerator\n        Alg.Alias.SecretKeyFactory.1.2.840.113549.1.5.3 : PBEWithMD5AndDES\n        KeyGenerator.SunTlsPrf : com.sun.crypto.provider.TlsPrfGenerator$V10\n        SecretKeyFactory.PBEWithSHA1AndDESede : com.sun.crypto.provider.PBEKeyFactory$PBEWithSHA1AndDESede\n        KeyGenerator.ARCFOUR : com.sun.crypto.provider.KeyGeneratorCore$ARCFOURKeyGenerator\n        Alg.Alias.KeyAgreement.DH : DiffieHellman\n        Alg.Alias.KeyGenerator.Rijndael : AES\n        AlgorithmParameters.PBEWithSHA1AndDESede : com.sun.crypto.provider.PBEParameters\n        Alg.Alias.KeyGenerator.RC4 : ARCFOUR\n        Alg.Alias.Cipher.OID.1.2.840.113549.1.12.1.6 : PBEWithSHA1AndRC2_40\n        Alg.Alias.Cipher.OID.1.2.840.113549.1.12.1.3 : PBEWithSHA1AndDESede\n        Mac.SslMacMD5 SupportedKeyFormats : RAW\n        Mac.HmacSHA1 SupportedKeyFormats : RAW\n        Cipher.DESede SupportedKeyFormats : RAW\n        Cipher.RC2 : com.sun.crypto.provider.RC2Cipher\n        KeyGenerator.SunTls12Prf : com.sun.crypto.provider.TlsPrfGenerator$V12\n        SecretKeyFactory.PBEWithSHA1AndRC2_40 : com.sun.crypto.provider.PBEKeyFactory$PBEWithSHA1AndRC2_40\n        KeyGenerator.HmacMD5 : com.sun.crypto.provider.HmacMD5KeyGenerator\n        AlgorithmParameters.PBEWithSHA1AndRC2_40 : com.sun.crypto.provider.PBEParameters\n        KeyGenerator.HmacSHA384 : com.sun.crypto.provider.KeyGeneratorCore$HmacSHA384KG\n        Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.6 : PBEWithSHA1AndRC2_40\n        KeyFactory.DiffieHellman : com.sun.crypto.provider.DHKeyFactory\n        Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.3 : PBEWithSHA1AndDESede\n        AlgorithmParameters.PBEWithMD5AndDES : com.sun.crypto.provider.PBEParameters\n        Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.6 : PBEWithSHA1AndRC2_40\n        Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.3 : PBEWithSHA1AndDESede\n        Cipher.AESWrap : com.sun.crypto.provider.AESWrapCipher\n        Alg.Alias.SecretKeyFactory.OID.1.2.840.113549.1.5.3 : PBEWithMD5AndDES\n        Alg.Alias.Cipher.Rijndael : AES\n        Cipher.RSA SupportedModes : ECB\n        Cipher.DESede SupportedModes : ECB|CBC|PCBC|CTR|CTS|CFB|OFB|CFB8|CFB16|CFB24|CFB32|CFB40|CFB48|CFB56|CFB64|OFB8|OFB16|OFB24|OFB32|OFB40|OFB48|OFB56|OFB64\n        Alg.Alias.SecretKeyFactory.OID.1.2.840.113549.1.12.1.6 : PBEWithSHA1AndRC2_40\n        Alg.Alias.SecretKeyFactory.OID.1.2.840.113549.1.12.1.3 : PBEWithSHA1AndDESede\n        Cipher.ARCFOUR : com.sun.crypto.provider.ARCFOURCipher\n        Alg.Alias.Cipher.1.2.840.113549.1.5.3 : PBEWithMD5AndDES\n        Mac.SslMacSHA1 : com.sun.crypto.provider.SslMacCore$SslMacSHA1\n        KeyAgreement.DiffieHellman : com.sun.crypto.provider.DHKeyAgreement\n        Cipher.RC2 SupportedKeyFormats : RAW\n        Alg.Alias.KeyFactory.DH : DiffieHellman\n        KeyGenerator.Blowfish : com.sun.crypto.provider.BlowfishKeyGenerator\n```\n\n\nI believe that checking for a specific keygenerator such as ```\nKeyGenerator.HmacSHA512 : com.sun.crypto.provider.KeyGeneratorCore$HmacSHA512KG```\n may tell you the same thing without having to rely on the key length query.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Stuck at Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\r\n                \r\nUpgraded pip command still having this message. I am trying to install django-allauth.\nThe following error is generated while using pip install django-allauth\n(venv) C:\\Users\\Tubai\\PycharmProjects\\food>pip install django-allauth\nCollecting django-allauth\nUsing cached https://files.pythonhosted.org/packages/70/8c/18e9fd164b0e1e578995cf916da49a074b22a629a71c6017455d1ba151e1/django-allauth-0.44.0.tar.gz\nRequirement already satisfied: Django>=2.0 in c:\\users\\tubai\\documents\\pycharmprojects\\ldjangocrash\\venv\\lib\\site-packages (from django-allauth) (3.1.7)\nCollecting python3-openid>=3.0.8 (from django-allauth)\nUsing cached https://files.pythonhosted.org/packages/e0/a5/c6ba13860bdf5525f1ab01e01cc667578d6f1efc8a1dba355700fb04c29b/python3_openid-3.2.0-py3-none-any.whl\nCollecting requests-oauthlib>=0.3.0 (from django-allauth)\nUsing cached https://files.pythonhosted.org/packages/a3/12/b92740d845ab62ea4edf04d2f4164d82532b5a0b03836d4d4e71c6f3d379/requests_oauthlib-1.3.0-py2.py3-none-any.whl\nCollecting requests (from django-allauth)\nUsing cached https://files.pythonhosted.org/packages/29/c1/24814557f1d22c56d50280771a17307e6bf87b70727d975fd6b2ce6b014a/requests-2.25.1-py2.py3-none-any.whl\nCollecting pyjwt[crypto]>=1.7 (from django-allauth)\nUsing cached https://files.pythonhosted.org/packages/3f/32/d5d3cab27fee7f6b22d7cd7507547ae45d52e26030fa77d1f83d0526c6e5/PyJWT-2.1.0-py3-none-any.whl\nRequirement already satisfied: asgiref<4,>=3.2.10 in c:\\users\\tubai\\documents\\pycharmprojects\\ldjangocrash\\venv\\lib\\site-packages (from Django>=2.0->django-allauth) (3.3.1)\nRequirement already satisfied: pytz in c:\\users\\tubai\\documents\\pycharmprojects\\ldjangocrash\\venv\\lib\\site-packages (from Django>=2.0->django-allauth) (2021.1)\nRequirement already satisfied: sqlparse>=0.2.2 in c:\\users\\tubai\\documents\\pycharmprojects\\ldjangocrash\\venv\\lib\\site-packages (from Django>=2.0->django-allauth) (0.4.1)\nCollecting defusedxml (from python3-openid>=3.0.8->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/07/6c/aa3f2f849e01cb6a001cd8554a88d4c77c5c1a31c95bdf1cf9301e6d9ef4/defusedxml-0.7.1-py2.py3-none-any.whl\nCollecting oauthlib>=3.0.0 (from requests-oauthlib>=0.3.0->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/05/57/ce2e7a8fa7c0afb54a0581b14a65b56e62b5759dbc98e80627142b8a3704/oauthlib-3.1.0-py2.py3-none-any.whl\nCollecting chardet<5,>=3.0.2 (from requests->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/19/c7/fa589626997dd07bd87d9269342ccb74b1720384a4d739a1872bd84fbe68/chardet-4.0.0-py2.py3-none-any.whl\nCollecting urllib3<1.27,>=1.21.1 (from requests->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/0c/cd/1e2ec680ec7b09846dc6e605f5a7709dfb9d7128e51a026e7154e18a234e/urllib3-1.26.5-py2.py3-none-any.whl\nCollecting certifi>=2017.4.17 (from requests->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/5e/a0/5f06e1e1d463903cf0c0eebeb751791119ed7a4b3737fdc9a77f1cdfb51f/certifi-2020.12.5-py2.py3-none-any.whl\nCollecting idna<3,>=2.5 (from requests->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/a2/38/928ddce2273eaa564f6f50de919327bf3a00f091b5baba8dfa9460f3a8a8/idna-2.10-py2.py3-none-any.whl\nCollecting cryptography<4.0.0,>=3.3.1; extra == \"crypto\" (from pyjwt[crypto]>=1.7->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/9b/77/461087a514d2e8ece1c975d8216bc03f7048e6090c5166bc34115afdaa53/cryptography-3.4.7.tar.gz\nInstalling build dependencies ... done\nGetting requirements to build wheel ... done\nPreparing wheel metadata ... done\nCollecting cffi>=1.12 (from cryptography<4.0.0,>=3.3.1; extra == \"crypto\"->pyjwt[crypto]>=1.7->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/c6/92/9188a1dff4934d0bd18df7f92dc481324b3342814cea34849b393ea2d232/cffi-1.14.5-cp37-cp37m-win_amd64.whl\nCollecting pycparser (from cffi>=1.12->cryptography<4.0.0,>=3.3.1; extra == \"crypto\"->pyjwt[crypto]>=1.7->django-allauth)\nUsing cached https://files.pythonhosted.org/packages/ae/e7/d9c3a176ca4b02024debf82342dab36efadfc5776f9c8db077e8f6e71821/pycparser-2.20-py2.py3-none-any.whl\nBuilding wheels for collected packages: cryptography\nBuilding wheel for cryptography (PEP 517) ... error\nComplete output from command C:\\Users\\Tubai\\Documents\\PycharmProjects\\ldjangocrash\\venv\\Scripts\\python.exe c:\\users\\tubai\\documents\\pycharmprojects\\ldjangocrash\\venv\\lib\\site-packages\\pip\n-19.0.3-py3.7.egg\\pip_vendor\\pep517_in_process.py build_wheel C:\\Users\\Tubai\\AppData\\Local\\Temp\\tmpw0h2fd70:\nrunning bdist_wheel\nrunning build\nrunning build_py\ncreating build\ncreating build\\lib.win-amd64-3.7\ncreating build\\lib.win-amd64-3.7\\cryptography\ncopying src\\cryptography\\exceptions.py -> build\\lib.win-amd64-3.7\\cryptography\ncopying src\\cryptography\\fernet.py -> build\\lib.win-amd64-3.7\\cryptography\ncopying src\\cryptography\\utils.py -> build\\lib.win-amd64-3.7\\cryptography\ncopying src\\cryptography_about_.py -> build\\lib.win-amd64-3.7\\cryptography\ncopying src\\cryptography_init_.py -> build\\lib.win-amd64-3.7\\cryptography\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat_der.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat_oid.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat_types.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\ncopying src\\cryptography\\hazmat_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\ncreating build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509\\base.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509\\certificate_transparency.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509\\extensions.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509\\general_name.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509\\name.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509\\ocsp.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509\\oid.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncopying src\\cryptography\\x509_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\x509\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\ncopying src\\cryptography\\hazmat\\backends\\interfaces.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\ncopying src\\cryptography\\hazmat\\backends_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\bindings\ncopying src\\cryptography\\hazmat\\bindings_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\bindings\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\cmac.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\constant_time.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\hashes.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\hmac.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\keywrap.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\padding.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives\\poly1305.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives_asymmetric.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives_cipheralgorithm.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives_serialization.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncopying src\\cryptography\\hazmat\\primitives_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\aead.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\backend.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ciphers.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\cmac.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\decode_asn1.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\dh.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\dsa.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ec.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ed25519.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ed448.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\encode_asn1.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\hashes.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\hmac.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\ocsp.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\poly1305.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\rsa.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\utils.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x25519.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x448.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl\\x509.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncopying src\\cryptography\\hazmat\\backends\\openssl_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\backends\\openssl\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl\\binding.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl_conditional.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\bindings\\openssl\ncopying src\\cryptography\\hazmat\\bindings\\openssl_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\bindings\\openssl\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\dh.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\dsa.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ec.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed25519.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\ed448.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\padding.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\rsa.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\utils.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\x25519.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric\\x448.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncopying src\\cryptography\\hazmat\\primitives\\asymmetric_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\asymmetric\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\aead.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\algorithms.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\base.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers\\modes.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\ciphers\ncopying src\\cryptography\\hazmat\\primitives\\ciphers_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\ciphers\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\concatkdf.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\hkdf.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\kbkdf.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\pbkdf2.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\scrypt.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf\\x963kdf.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncopying src\\cryptography\\hazmat\\primitives\\kdf_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\kdf\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\base.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\pkcs12.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\pkcs7.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization\\ssh.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\serialization\ncopying src\\cryptography\\hazmat\\primitives\\serialization_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\serialization\ncreating build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\hotp.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\totp.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor\\utils.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\twofactor\ncopying src\\cryptography\\hazmat\\primitives\\twofactor_init_.py -> build\\lib.win-amd64-3.7\\cryptography\\hazmat\\primitives\\twofactor\nrunning egg_info\nwriting src\\cryptography.egg-info\\PKG-INFO\nwriting dependency_links to src\\cryptography.egg-info\\dependency_links.txt\nwriting requirements to src\\cryptography.egg-info\\requires.txt\nwriting top-level names to src\\cryptography.egg-info\\top_level.txt\nreading manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs_build'\nwarning: no previously-included files found matching 'vectors'\nwarning: no previously-included files matching '' found under directory 'vectors'\nwarning: no previously-included files matching '' found under directory '.github'\nwarning: no previously-included files found matching 'release.py'\nwarning: no previously-included files found matching '.coveragerc'\nwarning: no previously-included files found matching 'codecov.yml'\nwarning: no previously-included files found matching '.readthedocs.yml'\nwarning: no previously-included files found matching 'dev-requirements.txt'\nwarning: no previously-included files found matching 'tox.ini'\nwarning: no previously-included files found matching 'mypy.ini'\nwarning: no previously-included files matching '' found under directory '.zuul.d'\nwarning: no previously-included files matching '' found under directory '.zuul.playbooks'\nadding license file 'LICENSE'\nadding license file 'LICENSE.APACHE'\nadding license file 'LICENSE.BSD'\nadding license file 'LICENSE.PSF'\nwriting manifest file 'src\\cryptography.egg-info\\SOURCES.txt'\ncopying src\\cryptography\\py.typed -> build\\lib.win-amd64-3.7\\cryptography\nrunning build_ext\ngenerating cffi module 'build\\temp.win-amd64-3.7\\Release\\_padding.c'\ncreating build\\temp.win-amd64-3.7\ncreating build\\temp.win-amd64-3.7\\Release\ngenerating cffi module 'build\\temp.win-amd64-3.7\\Release\\_openssl.c'\nrunning build_rust\n```\n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation.html for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq.html\n      4) Ensure you have a recent Rust toolchain installed:\n         https://cryptography.io/en/latest/installation.html#rust\n      5) If you are experiencing issues with Rust for *this release only* you may\n         set the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.\n      =============================DEBUG ASSISTANCE=============================\n\n  error: can't find Rust compiler\n\n  If you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the n\need for a Rust compiler.\n\n  To update pip, run:\n\n      pip install --upgrade pip\n\n  and then retry package installation.\n\n  If you did intend to build this package from source, try installing a Rust compiler from your system package manager and ensure it is on the PATH during installation. Alternatively, rustu\np (available at https://rustup.rs) is the recommended way to download and update the Rust compiler toolchain.\n\n  This package requires Rust >=1.41.0.\n\n  ----------------------------------------\n  Failed building wheel for cryptography\n  Running setup.py clean for cryptography\n  Complete output from command C:\\Users\\Tubai\\Documents\\PycharmProjects\\ldjangocrash\\venv\\Scripts\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\Tubai\\\\AppData\\\\Local\\\\T\nemp\\\\pip-install-fq61nc2j\\\\cryptography\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" clean --a\nll:\n  running clean\n  removing 'build\\temp.win-amd64-3.7' (and everything under it)\n  removing 'build\\lib.win-amd64-3.7' (and everything under it)\n  'build\\bdist.win-amd64' does not exist -- can't clean it\n  'build\\scripts-3.7' does not exist -- can't clean it\n  removing 'build'\n  running clean_rust\n  error: can't find Rust compiler\n\n  If you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the n\need for a Rust compiler.\n\n  To update pip, run:\n\n      pip install --upgrade pip\n\n  and then retry package installation.\n\n  If you did intend to build this package from source, try installing a Rust compiler from your system package manager and ensure it is on the PATH during installation. Alternatively, rustu\np (available at https://rustup.rs) is the recommended way to download and update the Rust compiler toolchain.\n\n  This package requires Rust >=1.41.0.\n\n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation.html for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq.html\n      4) Ensure you have a recent Rust toolchain installed:\n         https://cryptography.io/en/latest/installation.html#rust\n      5) If you are experiencing issues with Rust for *this release only* you may\n         set the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.\n      =============================DEBUG ASSISTANCE=============================\n\n\n  ----------------------------------------\n  Failed cleaning build dir for cryptography\nFailed to build cryptography\nCould not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\n    ", "Answer": "\r\n```\ncryptography```\n recently changed its dependencies to include Rust. There are a number of longer discussions on this topic (e.g. https://github.com/pyca/cryptography/issues/5771), but upgrading to the latest version of ```\npip```\n is likely to fix your issue.\n```\npip install --upgrade pip```\n\nIf that doesn't work, have you tried all of the suggestions in the \"DEBUG ASSISTANCE\" section of the logs you pasted into your question?\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to install cryptography library on Docker container?\r\n                \r\nI develop our company website with Odoo 14. I installed Odoo on my local machine (```\nmacOS Monterey (12.5.1)```\n) via Docker. I use Docker Desktop and I have created ```\ndocker-compose.yaml```\n taking official Odoo docker image page as reference.\n```\nversion: '2'\nservices:\n  web:\n    image: odoo:14.0\n    depends_on:\n      - db\n    ports:\n      - \"8069:8069\"\n    volumes:\n      - odoo-web-data:/var/lib/odoo©\n      - ./config:/etc/odoo\n      - ./addons:/mnt/extra-addons\n  db:\n    image: postgres:10\n    environment:\n      - POSTGRES_DB=postgres\n      - POSTGRES_PASSWORD=odoo\n      - POSTGRES_USER=odoo\n      - PGDATA=/var/lib/postgresql/data/pgdata\n    volumes:\n      - odoo-db-data:/var/lib/postgresql/data/pgdata\n      - ./db:/db\nvolumes:\n  odoo-web-data:\n  odoo-db-data:\n```\n\nI wanted to install Odoo eCommerce module but I couldn't. It gives that error:\n\nUnable to install module \"account_edi_proxy_client\" because an\nexternal dependency is not met: Python library not installed:\ncryptography\n\nI already installed it but it still gives the same error.\n```\n$ pip3 install cryptography\nRequirement already satisfied: cryptography in /usr/local/lib/python3.10/site-packages (38.0.4)\nRequirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.10/site-packages (from cryptography) (1.15.1)\nRequirement already satisfied: pycparser in /usr/local/lib/python3.10/site-packages (from cffi>=1.12->cryptography) (2.21)\n```\n\nThere were some suggestion to install ```\npycryptodome```\n instead, I installed it as well but still the same result.\nAfter all, I realised that I was trying installing cryptography library on my local machine and actually I had to install it in the docker container.\nSo, I ran this command:\n```\ndocker exec -it [container_name] pip3 install cryptography\n```\n\nand I got this error now:\n\nCommand \"/usr/bin/python3 -m pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-ynyd_o0_ --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools>=40.6.0,!=60.9.0 wheel \"cffi>=1.12; platform_python_implementation != 'PyPy'\" setuptools-rust>=0.11.4\" failed with error code 1 in None\n\nWhat is missing here, any idea?\n    ", "Answer": "\r\nTry to upgrade pip and setuptools first and then install cryptography\n```\ndocker exec -it CONTAINER_ID pip3 install --upgrade pip\ndocker exec -it CONTAINER_ID pip3 install --upgrade setuptools\n\ndocker exec -it CONTAINER_ID pip3 install cryptography\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to load a RSA public key using Python's cryptography module\r\n                \r\nI'm trying to load a public key using the cryptography module, this is what the key looks like:\n\n```\n>>> print(pubkey)\n-----BEGIN RSA PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC+6gvHdCUCjnc4hSMwbdIIspk4\n69pVAzjjb8tDJsCH/QpiK9vXe4nDZ7p9kiw2ACw0fkWaPnApKBwXNB9Nd9Sf+XFt\ncIzdqKKBcAqZZCu2pA729amNRug9DoZdkstaBG+VfTxXhdzQRSTxxqJQWgdV8ejK\nkt4D1M6pAiTkAyD0eQIDAQAB\n-----END RSA PUBLIC KEY-----\n```\n\n\nI'm trying to load it using the ```\nload_pem_public_key()```\n method:\n\n```\n>>> from cryptography.hazmat.backends import default_backend\n>>> from cryptography.hazmat.primitives.serialization import load_pem_public_key\n>>> load_pem_public_key(pubkey, default_backend())\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/elias/.virtualenvs/ckpypkg/local/lib/python2.7/site-packages/cryptography/hazmat/primitives/serialization.py\", line 24, in load_pem_public_key\n    return backend.load_pem_public_key(data)\n  File \"/home/elias/.virtualenvs/ckpypkg/local/lib/python2.7/site-packages/cryptography/hazmat/backends/multibackend.py\", line 285, in load_pem_public_key\n    return b.load_pem_public_key(data)\n  File \"/home/elias/.virtualenvs/ckpypkg/local/lib/python2.7/site-packages/cryptography/hazmat/backends/openssl/backend.py\", line 1376, in load_pem_public_key\n    self._handle_key_loading_error()\n  File \"/home/elias/.virtualenvs/ckpypkg/local/lib/python2.7/site-packages/cryptography/hazmat/backends/openssl/backend.py\", line 1595, in _handle_key_loading_error\n    raise ValueError(\"Could not unserialize key data.\")\nValueError: Could not unserialize key data.\n```\n\n\nAm I doing something wrong? Is there something wrong with this key? Why can't it be unserialized?\n\nOpenSSL version:\n\n```\n$ openssl version\nOpenSSL 1.0.1f 6 Jan 2014\n```\n\n\nUPDATE: I just tested the same code with a different key (the same one from this other SO question) and it worked, which makes this yet more puzzling: why it works for that key and not for mine?\n    ", "Answer": "\r\nYou are trying to treat the key like a PEM encoded RSA key, but in fact what you have is public key using PKCS#1 format.  The data between ```\n-----BEGIN RSA PUBLIC KEY-----```\n and ```\n-----END RSA PUBLIC KEY-----```\n is actually just base-64 encoded DER data.  There may be a library function to get at this (I started looking through the ```\ncryptography```\n documentation and my eyes started to glaze over), but the following will work...\n\nWe start with your key data:\n\n```\n>>> print pubkey\n-----BEGIN RSA PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC+6gvHdCUCjnc4hSMwbdIIspk4\n69pVAzjjb8tDJsCH/QpiK9vXe4nDZ7p9kiw2ACw0fkWaPnApKBwXNB9Nd9Sf+XFt\ncIzdqKKBcAqZZCu2pA729amNRug9DoZdkstaBG+VfTxXhdzQRSTxxqJQWgdV8ejK\nkt4D1M6pAiTkAyD0eQIDAQAB\n-----END RSA PUBLIC KEY-----\n```\n\n\nWe drop the ```\nBEGIN```\n and ```\nEND```\n lines:\n\n```\n>>> b64data = '\\n'.join(pubkey.splitlines()[1:-1])\n>>> print b64data\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC+6gvHdCUCjnc4hSMwbdIIspk4\n69pVAzjjb8tDJsCH/QpiK9vXe4nDZ7p9kiw2ACw0fkWaPnApKBwXNB9Nd9Sf+XFt\ncIzdqKKBcAqZZCu2pA729amNRug9DoZdkstaBG+VfTxXhdzQRSTxxqJQWgdV8ejK\nkt4D1M6pAiTkAyD0eQIDAQAB\n```\n\n\nAnd then we base64 decode the data:\n\n```\n>>> derdata = base64.b64decode(b64data)\n```\n\n\nNow we have the DER encoded public key, so we can feed this to\n```\nload_der_public_key```\n:\n\n```\n>>> from cryptography.hazmat.backends import default_backend\n>>> from cryptography.hazmat.primitives.serialization import load_der_public_key\n>>> key = load_der_public_key(derdata, default_backend())\n>>> print key\n<cryptography.hazmat.backends.openssl.rsa._RSAPublicKey object at 0x7fe590ea6d10>\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does OpenJDK 1.8 support elliptic curve cryptography?\r\n                \r\nDoes OpenJDK 1.8 support elliptic curve cryptography?\n\nThe API is there but the SunEC implementation seems to require a library that is enabled only for the Oracle JDK.\n    ", "Answer": "\r\nYes, it does.\nHave a look here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/SunProviders.html\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What techniques do you use when writing your own cryptography methods? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nFor years, maybe 10, I've been fascinated with cryptography. I read a book about XOR bit-based encryption, and have been hooked ever since thing.\n\nI guess it's more fair to say that I'm fascinated by those who can break various encryption methods, but I digress.\n\nTo the point -- what methods do you use when writing cryptography? Is obfuscation good in cryptography? \n\nI use two key-based XOR encryption, various hashing techniques (SHA1) on the keys, and simple things such as reversing strings here and there, etc.\n\nI'm interested to see what others think of and try when writing a not-so-out-of-the-box encryption method. Also -- any info on how the pros go about \"breaking\" various cryptography techniques would be interesting as well.\n\nTo clarify -- I have no desire to use this in any production code, or any code of mine for that matter. I'm interesting in learning how it works through toying around, not reinventing the wheel. :)\n\nIan\n    ", "Answer": "\r\nThe best advice I can give you is: resist the temptation to reinvent the wheel.  Cryptography is harder than you think.\n\nGet Bruce Schneier's book Applied Cryptography and read it carefully.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "error occurs when installing cryptography for scrapy in virtualenv on OS X [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question needs debugging details. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                     Edit the question to include desired behavior, a specific problem or error, and the shortest code necessary to reproduce the problem. This will help others answer the question.\r\n                \r\n                    \r\n                        Closed 7 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI was installing scrapy with ```\npip```\n in ```\nvirtualenv```\n on ```\nOS X 10.11```\n. When it's installing cryptography, it said:\n\n```\nbuilding '_openssl' extension\ncc -fno-strict-aliasing -fno-common -dynamic -arch i386 -arch x86_64 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c build/temp.macosx-10.11-intel-2.7/_openssl.c -o build/temp.macosx-10.11-intel-2.7/build/temp.macosx-10.11-intel-2.7/_openssl.o\nbuild/temp.macosx-10.11-intel-2.7/_openssl.c:423:10: fatal error: 'openssl/e_os2.h' file not found\n#include <openssl/e_os2.h>\n     ^\n1 error generated.\nerror: command 'cc' failed with exit status 1\n```\n\n\n\n\n```\nCommand \"/Users/Kris/Workspace/env/scrapy/bin/python -c \"import setuptools, tokenize;__file__='/private/var/folders/wx/jm7lxhps3n7484zl4gv9s3180000gn/T/pip-build-2rJYgI/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/wx/jm7lxhps3n7484zl4gv9s3180000gn/T/pip-nXp2mE-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/Kris/Workspace/env/scrapy/include/site/python2.7/cryptography\" failed with error code 1 in /private/var/folders/wx/jm7lxhps3n7484zl4gv9s3180000gn/T/pip-build-2rJYgI/cryptography\n```\n\n\nAny suggestions that could help me fix it?\nBTW, when I was installing ```\nscrapy```\n without ```\nvirtualenv```\n, everything went well.\n    ", "Answer": "\r\n```\npip install --upgrade pip\n```\n\n\nmay help\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography in React Native\r\n                \r\nDoes anyone know if there is an implementation of Elliptic Curve Diffie Hellman cryptography (ECDH) for React Native?\n\nI found some libraries for this. each of them has some issues:\n\n\nreact-native-ecc: it only generates key pairs and does not implement generating shared key(secret key) from private and public key for encryption\nreact-native-crypto: it uses some hacks and changes node_modules recursively and i think it's not stable.\nelliptic : it's in a plain javascript implementation and it does not work in react native\n\n    ", "Answer": "\r\nTo the best of my knowledge, there is none (in Feb 2020).\nIn a project that I'm working on, we evaluated known libraries but could not find any for iOS. Operations that we need include ECDH (with the P-256 curve).\nIt is still work in progress, but our idea is to build the crypto operations natively in Swift, expose them with a bridge to fill in the missing parts of the ```\ncrypto.subtle```\n API.\nUpdate: The code is open-source (part of the Cliqz browser for iOS):\nJavaScript (ReactNative):\n\nhttps://github.com/cliqz/user-agent-ios/blob/develop/ReactNative/js/globals/window/crypto.ts\n\nSwift (native code built on the CryptoKit library):\n\nhttps://github.com/cliqz/user-agent-ios/blob/develop/ReactNative/WindowAPI/WindowCrypto.m\nhttps://github.com/cliqz/user-agent-ios/blob/develop/ReactNative/WindowAPI/WindowCryto.swift\n\nThat was the code to provide the ```\nwindow.crypto.subtle```\n functionality, as you would expect it on a Desktop browser like Firefox or Chrome. To see how it was used, you can look at the actual usage, or - maybe easier - at the commented-out example.\nI'll added the links here in the hope that it provides entry points for someone facing the same problem. Please note that the Cliqz project has been discontinued, so be careful if you copy-paste the solution, as it will not receive security patches.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Can't install specific library cryptography in Python 3 using Pip\r\n                \r\nI am inside a corporate internet that uses proxy\n\nI run the command\n\n```\npip install --trusted-host pypi.org --trusted-host files.python hosted.org --proxy=http://721094:Fafafa51..@proxy.pucminas.br:80 flask_restful\n```\n\n\nand it works perfectly, but when I try to run\n\n```\npip install --trusted-host pypi.org --trusted-host files.python hosted.org --proxy=http://721094:Fafafa51..@proxy.pucminas.br:80 cryptography\n```\n\n\nI got an error:\n\n```\nHTTP error 403 while getting https://files.pythonhosted.org/packages/25/c0/e46342325e9d1faf2d3d8b12acadb527e283a5cd4455dc95d98f453df876/cryptography-2.4.1-cp36-cp36m-win_amd64.whl#sha256=b0833d27c7eb536bc27323a1e8e22cb39ebac78c4ef3be0167ba40f447344808 (from https://pypi.org/simple/cryptography/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*)\nCould not install requirement cryptography from https://files.pythonhosted.org/packages/25/c0/e46342325e9d1faf2d3d8b12acadb527e283a5cd4455dc95d98f453df876/cryptography-2.4.1-cp36-cp36m-win_amd64.whl#sha256=b0833d27c7eb536bc27323a1e8e22cb39ebac78c4ef3be0167ba40f447344808 because of error 403 Client Error: MediaTypeBlocked for url: https://files.pythonhosted.org/packages/25/c0/e46342325e9d1faf2d3d8b12acadb527e283a5cd4455dc95d98f453df876/cryptography-2.4.1-cp36-cp36m-win_amd64.whl\n```\n\n\nHow can if fix this?\n\nIs it strange because I was able to install some libraries, but it was not possible install cryptography library\n\nI use some code that needs cryptography library, but it won't install for me\n\nMy python version is 3.6.6.1\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Java cryptography generated key portability\r\n                \r\nIn Java, I'm generating and serializing a symmetric key for encryption purposes:\n\n```\n    KeyGenerator keyGen = KeyGenerator.getInstance(algorithm);\n    SecretKey symmetricKey = keyGen.generateKey();\n    Base64.encode(symmetricKey.getEncoded(), new FileOutputStream(filename));    \n```\n\n\nwhere Base64 is from the Bouncycastle cryptography package and algorithm is AES.\n\nThe key, when used with Oracle (Sun) JVM 1.6.0_21, works perfectly is moved from, e.i, Windows to Linux (even between 32/64 bits OSs).\n\nOn OS X (Intel), with Apple's JVM, the key is loaded without exception but every string encrypted on Windows or Linux generates a BadPaddingException.\n\nA string is encoded with the following code:\n\n```\n    Cipher cipher = Cipher.getInstance(algorithm, \"BC\");\n    cipher.init(Cipher.ENCRYPT_MODE, secretKey);\n    encryptedString = new String(Base64.encode(cipher.doFinal(string.getBytes())));\n```\n\n\nwhere algorithm is AES.\n\nAny clues?\n    ", "Answer": "\r\nPadding has nothing to do with the key.\n\nWhat padding algorithm are you specifying when creating the ```\nCipher```\n?\n\n\n\nIf you are literally using just \"AES\" as the cipher algorithm, you should be explicit about the mode and padding. Otherwise, the crypto provider is free to choose some default of its own, and that's likely to vary from machine to machine.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Can't install specific library cryptography in Python 3 using Pip\r\n                \r\nI am inside a corporate internet that uses proxy\n\nI run the command\n\n```\npip install --trusted-host pypi.org --trusted-host files.python hosted.org --proxy=http://721094:Fafafa51..@proxy.pucminas.br:80 flask_restful\n```\n\n\nand it works perfectly, but when I try to run\n\n```\npip install --trusted-host pypi.org --trusted-host files.python hosted.org --proxy=http://721094:Fafafa51..@proxy.pucminas.br:80 cryptography\n```\n\n\nI got an error:\n\n```\nHTTP error 403 while getting https://files.pythonhosted.org/packages/25/c0/e46342325e9d1faf2d3d8b12acadb527e283a5cd4455dc95d98f453df876/cryptography-2.4.1-cp36-cp36m-win_amd64.whl#sha256=b0833d27c7eb536bc27323a1e8e22cb39ebac78c4ef3be0167ba40f447344808 (from https://pypi.org/simple/cryptography/) (requires-python:>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*)\nCould not install requirement cryptography from https://files.pythonhosted.org/packages/25/c0/e46342325e9d1faf2d3d8b12acadb527e283a5cd4455dc95d98f453df876/cryptography-2.4.1-cp36-cp36m-win_amd64.whl#sha256=b0833d27c7eb536bc27323a1e8e22cb39ebac78c4ef3be0167ba40f447344808 because of error 403 Client Error: MediaTypeBlocked for url: https://files.pythonhosted.org/packages/25/c0/e46342325e9d1faf2d3d8b12acadb527e283a5cd4455dc95d98f453df876/cryptography-2.4.1-cp36-cp36m-win_amd64.whl\n```\n\n\nHow can if fix this?\n\nIs it strange because I was able to install some libraries, but it was not possible install cryptography library\n\nI use some code that needs cryptography library, but it won't install for me\n\nMy python version is 3.6.6.1\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "mitmproxy: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\r\n                \r\n```\nBuilding wheels for collected packages: cryptography\n  Building wheel for cryptography (PEP 517) ... error\n......\n  ----------------------------------------\n  ERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\nWhen I use pip to install mitmproxy, it always gives me the same error, the computer has cryptography version 3.1.1 installed!\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "AWS Lambda Python Cryptography - Cannot open shared object files\r\n                \r\nI am working on a Serverless Flask app that is deployed to AWS Lambda.  The program uses the Cryptography library (using version 3.4.7).  Locally, the program runs fine without any issue.  However, whenever deployed on Lambda, the following error appears:\n```\nfrom cryptography.fernet import Fernet\n\nFile \"/var/task/cryptography/fernet.py\", line 16, in <module>\n\nfrom cryptography.hazmat.primitives import hashes, padding\n\nFile \"/var/task/cryptography/hazmat/primitives/padding.py\", line 11, in <module>\n\nfrom cryptography.hazmat.bindings._padding import lib\n\nImportError: /var/task/cryptography/hazmat/bindings/_padding.abi3.so: cannot open shared object file: No such file or directory\n```\n\nAnd when using some required functions from the \"Hazardous Material\" module, a very similar error appears:\n```\nFile \"/var/task/cryptography/hazmat/primitives/kdf/pbkdf2.py\", line 28, in __init__\n    backend = _get_backend(backend)\nFile \"/var/task/cryptography/hazmat/backends/__init__.py\", line 23, in _get_backend\n    return default_backend()\nFile \"/var/task/cryptography/hazmat/backends/__init__.py\", line 14, in default_backend\n    from cryptography.hazmat.backends.openssl.backend import backend\nFile \"/var/task/cryptography/hazmat/backends/openssl/__init__.py\", line 6, in <module>\n    from cryptography.hazmat.backends.openssl.backend import backend\nFile \"/var/task/cryptography/hazmat/backends/openssl/backend.py\", line 113, in <module>\n    from cryptography.hazmat.bindings.openssl import binding\nFile \"/var/task/cryptography/hazmat/bindings/openssl/binding.py\", line 14, in <module>\n    from cryptography.hazmat.bindings._openssl import ffi, lib\nImportError: /var/task/cryptography/hazmat/bindings/_openssl.abi3.so: cannot open shared object file: No such file or directory\n```\n\nHowever, the library files referenced do exist and they are in the exact paths indicated.\nThe app includes ```\ncryptography==3.4.7```\n in the requirements.txt as a dependency.  Serverless then installs the packages while deploying to AWS with ```\nsls deploy```\n.  Serverless puts everything in a zip and uploads it to AWS.  I can see all the files in this zip folder as expected.\nI thought that it might be an issue with serverless incorrectly uploading or installing the packages when deploying, so I even tried including the cryptography folder directly in my project.  However, despite any changes to the serverless configuration or the cryptography package itself, I have been unsuccessful in using this package on my deployed Lambda.  Does anyone have any ideas what I could do to make this work?\n    ", "Answer": "\r\nI had a similar problem before that was resolved by running the deployment command from a linux machine. I use a mac for development and I was trying to deploy my lambda function from my mac. However, when it was deployed some of the dependencies threw import errors.\nFrom my experience, it was due to the operating system that packages the dependencies differently when it runs in a mac or a linux environment. Hence, try running the serverless deployment command from inside a linux machine to see if that works.\nIn my case, I set up a gitlab CI/CD pipeline to run the command inside the environment of gitlab pipeline and that resolved the problem.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography 0.0.6 not getting installed in Windows 10 UWP app\r\n                \r\nWhen I am trying to install Cryptography 0.0.6 in NuGet pakage for Windows 10 UWP app it gives me the below error:\n\n```\nCryptography 0.0.6 is not compatible with UAP,Version=v10.0.\nSome packages are not compatible with UAP,Version=v10.0.\nCryptography 0.0.6 is not compatible with UAP,Version=v10.0 (win10-arm).\nSome packages are not compatible with UAP,Version=v10.0 (win10-arm).\nCryptography 0.0.6 is not compatible with UAP,Version=v10.0 (win10-arm-aot).\nSome packages are not compatible with UAP,Version=v10.0 (win10-arm-aot).\nCryptography 0.0.6 is not compatible with UAP,Version=v10.0 (win10-x64).\nSome packages are not compatible with UAP,Version=v10.0 (win10-x64).\nCryptography 0.0.6 is not compatible with UAP,Version=v10.0 (win10-x64-aot).\nSome packages are not compatible with UAP,Version=v10.0 (win10-x64-aot).\nCryptography 0.0.6 is not compatible with UAP,Version=v10.0 (win10-x86).\nSome packages are not compatible with UAP,Version=v10.0 (win10-x86).\nCryptography 0.0.6 is not compatible with UAP,Version=v10.0 (win10-x86-aot).\nSome packages are not compatible with UAP,Version=v10.0 (win10-x86-aot).\n```\n\n\nAs I am new to Windows development and I want to use ```\nRijndaelManaged```\n class for AES encryption so please provide me suggestions.\n\nHow can I install ```\nCryptography 0.0.6```\n or how to use ```\nRijndaelManaged```\n class for AES encryption in Windows UWP?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Good library for pairing based cryptography in Java\r\n                \r\nI am looking for a good library that can perform pairing based cryptography (PBC).\nOne I could find is jPBC\n\nWhat have others used? and their experiences?\n\nThe idea is to test the performance of algorithms using standard pairings (Weil, Tate) as well as some of the newer proposals without getting my hands too much dirty in the math. \n    ", "Answer": "\r\nI do work in this space as well. The best thing we could find in java was jPBC. Its not very good.\n\nNon java alternatives: \n\n\nMIRACL: I believe this is the  current\nfastest c implementation. \ncharm crypto:  a python framework for\nrapidly prototyping crypto systems. Full disclosure, I am a dev on\nit. It has bindings to some subset of  MIRACL and Lynn's  PBC lib.\nThese are more than enough to impliment most schemes.These subsets\nare expanding and probably can be readily expanded without getting\ninto the math involved. Given specific requests, we might even be willing to do those\nextensions \n\nFurthermore, it already has support for benchmarking that can\ngive specific time spent in cryptographic operations, the number of operations (e.g.\npairings and exponentiations), and other stats.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to Serialize Python Cryptography CRL Object into PEM\r\n                \r\nI use python cryptography package to create a CRL object. But I need to convert this object into PEM format. In their documentation they don't seem to have an opposite of deserialization operation x509.load_pem_x509_crl. At the end of the codes below, how do I convert \"crl\" to PEM. Any idea?\n```\nfrom cryptography import x509\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.x509.oid import NameOID\nimport datetime\none_day = datetime.timedelta(1, 0, 0)\nprivate_key = rsa.generate_private_key(\n    public_exponent=65537,\n    key_size=2048,\n)\nbuilder = x509.CertificateRevocationListBuilder()\nbuilder = builder.issuer_name(x509.Name([\n    x509.NameAttribute(NameOID.COMMON_NAME, u'cryptography.io CA'),\n]))\nbuilder = builder.last_update(datetime.datetime.today())\nbuilder = builder.next_update(datetime.datetime.today() + one_day)\nrevoked_cert = x509.RevokedCertificateBuilder().serial_number(\n    333\n).revocation_date(\n    datetime.datetime.today()\n).build()\nbuilder = builder.add_revoked_certificate(revoked_cert)\ncrl = builder.sign(\n    private_key=private_key, algorithm=hashes.SHA256(),\n)\n# how to convert crl to PEM?\n```\n\n    ", "Answer": "\r\nThe ```\nCertificateRevocationListBuilder#sign()```\n method returns a ```\nCertificateRevocationList```\n object whose ```\npublic_bytes()```\n method can be used to perform serialization.\nDeserialization is done with ```\nx509.load_pem_x509_crl()```\n.\nExample:\n```\n...\n\n# Serialize\nfrom cryptography.hazmat.primitives import serialization\npem = crl.public_bytes(encoding=serialization.Encoding.PEM)\nprint(pem.decode('utf8'))\n\n# Deserialize\nfrom cryptography import x509\ncrl = x509.load_pem_x509_crl(pem)\npem = crl.public_bytes(encoding=serialization.Encoding.PEM) # Check\nprint(pem.decode('utf8')) \n```\n\nwith e.g. the following output:\n```\n-----BEGIN X509 CRL-----\nMIIBfDBmAgEBMA0GCSqGSIb3DQEBCwUAMB0xGzAZBgNVBAMMEmNyeXB0b2dyYXBo\neS5pbyBDQRcNMjEwOTExMDg0OTI3WhcNMjEwOTEyMDg0OTI3WjAVMBMCAgFNFw0y\nMTA5MTEwODQ5MjdaMA0GCSqGSIb3DQEBCwUAA4IBAQCmO+pCzndqgeZBgfMNUsk4\nSSVQg+lJ5WPm/cpFiR2UtKkwjKb60Gy4/zTDULojQVCzSdHfEUd+84JNMRzXrAqO\nOEIr9S1xcyR3zrDVyciJOqxNxx+bMo0mpj4B7LMo3X4Xt02WZZEFuEwf7aICKl2r\nuuas6HQ/jEtwRiEGFLeBN5+TcB5qW+ri/hNLJbfFRBoGSB6mvIysxgDi+7/6EIQn\nH5o8H8AD5BoQ28jtB9H9u2JX5/oJivWorpiVFd2oOaNx2frc7Emchz0a7G9LpL3H\nqS3QyRJyXqgRPXloFiKhOBRoO7lORGs+92pSBAwYaaWm38mmetzkBKIhMY8dWN4M\n-----END X509 CRL-----\n\n-----BEGIN X509 CRL-----\nMIIBfDBmAgEBMA0GCSqGSIb3DQEBCwUAMB0xGzAZBgNVBAMMEmNyeXB0b2dyYXBo\neS5pbyBDQRcNMjEwOTExMDg0OTI3WhcNMjEwOTEyMDg0OTI3WjAVMBMCAgFNFw0y\nMTA5MTEwODQ5MjdaMA0GCSqGSIb3DQEBCwUAA4IBAQCmO+pCzndqgeZBgfMNUsk4\nSSVQg+lJ5WPm/cpFiR2UtKkwjKb60Gy4/zTDULojQVCzSdHfEUd+84JNMRzXrAqO\nOEIr9S1xcyR3zrDVyciJOqxNxx+bMo0mpj4B7LMo3X4Xt02WZZEFuEwf7aICKl2r\nuuas6HQ/jEtwRiEGFLeBN5+TcB5qW+ri/hNLJbfFRBoGSB6mvIysxgDi+7/6EIQn\nH5o8H8AD5BoQ28jtB9H9u2JX5/oJivWorpiVFd2oOaNx2frc7Emchz0a7G9LpL3H\nqS3QyRJyXqgRPXloFiKhOBRoO7lORGs+92pSBAwYaaWm38mmetzkBKIhMY8dWN4M\n-----END X509 CRL-----\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to use DpapiSymmetricCryptoProvider with Cryptography encryption block?\r\n                \r\nI am using cryptography application block. and configure DpapiSymmetricCryptoProvider. but there is not option to store key file. So from where it will get the key and in load balancing how will we handle it?\n\nThanks,\nGirish\n    ", "Answer": "\r\nWhen you add a provider that requires a key to your configuration (pick Add Symmetric Algorithm Provider), the configuration tool starts the Cryptographic Key Wizard. It will allow you to generate a new key and save it to a file and to set the appropriate values in the configuration. \nFor more inforation, see this chapter, specifically the Configuring Cryptographic Providers section.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "how to solve \"NO MODULE NAMED CRYPTOGRAPHY\"found in pyhton\r\n                \r\nWhen I try to run my program with database connectivity from mysql in python it shows an error cyptography package required for sha256 password. But when I put the statement \"import cryptography\" it says no module named cyptography.\nI have also installed it using \"pip install cryptography\"\n```\nfrom tkinter import *\nfrom tkinter import ttk, messagebox\nimport pymysql, os\nimport credentials as cr\nimport hashlib\nimport cryptography\n\n\nclass SignUp:\n    def __init__(self, root):\n        self.window = root\n        self.window.title(\"Sign Up\")\n        self.window.geometry(\"1280x800+0+0\")\n        self.window.config(bg = \"white\")\n\n        frame = Frame(self.window, bg=\"white\")\n        frame.place(x=350,y=100,width=500,height=550)\n\n        title1 = Label(frame, text=\"Sign Up\", font=(\"times new roman\",25,\"bold\"),bg=\"white\").place(x=20, y=10)\n        title2 = Label(frame, text=\"play with bangtan\", font=(\"times new roman\",13),bg=\"white\", fg=\"gray\").place(x=20, y=50)\n\n        self.username_txt = Entry(frame,font=(\"arial\"))\n        self.username_txt.place(x=20, y=130, width=200)\n\n        password = Label(frame, text=\"New password\", font=(\"helvetica\", 15 ,\"bold\") ,bg=\"white\").place(x=20, y=340)\n\n        self.password_txt = Entry(frame,font=(\"arial\"))\n        self.password_txt.place(x=20, y=370, width=420)\n\n        self.signup = Button(frame, text=\"Sign Up\", command=self.signup_func, font=(\"times new roman\", 18, \"bold\"),\n                          bd=0, cursor=\"hand2\", bg=\"green2\", fg=\"white\").place(x=120, y=470, width=250)\n\n    def signup_func(self):\n        if self.username_txt.get()==\"\"  or self.password_txt.get() == \"\":\n            messagebox.showerror(\"Error!\",\"Sorry!, All fields are required\",parent=self.window)\n        else:\n            try:\n                connection = pymysql.connect(host=\"localhost\", user='user1', password='root1@11', database=\"logindata\")\n                cur = connection.cursor()\n                cur.execute(\"select * from userdata where username_text=%s\",self.username_txt.get())\n                row=cur.fetchone()\n\n                # Check if th entered email id is already exists or not.\n                if row!=None:\n                    messagebox.showerror(\"Error!\",\"The email id is already exists, please try again with another email id\",parent=self.window)\n                else:\n                    cur.execute(\"insert into student_register (f_name,l_name,email,question,answer,password) values(%s,%s,%s,%s,%s,%s)\",\n                                    (\n                                        self.username_txt.get(),\n                                        self.password_txt.get()\n                                    ))\n                    connection.commit()\n                    connection.close()\n                    messagebox.showinfo(\"Congratulations!\",\"Register Successful\",parent=self.window)\n                    self.reset_fields()\n            except Exception as es:\n                messagebox.showerror(\"Error!\",f\"Error due to {es}\",parent=self.window)\n\n    def reset_fields(self):\n        self.username_txt.delete(0, END)\n        self.password_txt.delete(0, END)\n\nif __name__ == \"__main__\":\n    root = Tk()\n    obj = SignUp(root)\n    root.mainloop()\n\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Asymmetric cryptography with public key and private key\r\n                \r\nI am a beginner with asymmetric cryptography. I am understand something about basic asymmetric cryptography on public key and private key but I want to implement its with java programming for do authentication like login username and password. I don't know how to implement a public key and store its to database and generate private key from my input password for validate with public key. Addition I seen other approach like BCrypt and SCrypt password hashing function and they're good to use? If i wrote something wrong please advice. Please provide some code for me to know its. Thank you in advance!\n    ", "Answer": "\r\nIf your intention is to do authentication using login and password, say in a web service, then you do not need to write any custom code. Many java frameworks support the same.\n\nThen you want to store the password securely, using some hashing function, SHA256, bcrypt etc. Again the frameworks like spring security, keycloak etc will take care of this. It is all about configuring these frameworks properly. For that you will surely need some understanding of the underlying concepts but you will not have to write any code.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "AES CTR Mode with Bouncycastle Cryptography\r\n                \r\nI am trying to use to implement AES CTR encryption using the Bouncy castle cryptography library in C#. .NET provides RijndaelManaged Crypto Library but it does not support CTR mode for AES hence the selection of Bouncycastle. \n\nI haven't been able to code it properly The problem seems to be with IV.\n\n```\n    public string BytesToHex(byte[] bytes)\n    {\n        char[] c = new char[bytes.Length * 2];\n\n        byte b;\n\n        for (int bx = 0, cx = 0; bx < bytes.Length; ++bx, ++cx)\n        {\n            b = ((byte)(bytes[bx] >> 4));\n            c[cx] = (char)(b > 9 ? b + 0x37 + 0x20 : b + 0x30);\n\n            b = ((byte)(bytes[bx] & 0x0F));\n            c[++cx] = (char)(b > 9 ? b + 0x37 + 0x20 : b + 0x30);\n        }\n\n        return new string(c);\n    }\n\n    public byte[] HexToBytes(string str)\n    {\n        if (str.Length == 0 || str.Length % 2 != 0)\n            return new byte[0];\n\n        byte[] buffer = new byte[str.Length / 2];\n        char c;\n        for (int bx = 0, sx = 0; bx < buffer.Length; ++bx, ++sx)\n        {\n            // Convert first half of byte\n            c = str[sx];\n            buffer[bx] = (byte)((c > '9' ? (c > 'Z' ? (c - 'a' + 10) : (c - 'A' + 10)) : (c - '0')) << 4);\n\n            // Convert second half of byte\n            c = str[++sx];\n            buffer[bx] |= (byte)(c > '9' ? (c > 'Z' ? (c - 'a' + 10) : (c - 'A' + 10)) : (c - '0'));\n        }\n\n        return buffer;\n    }\n   private static byte[] cipherData(PaddedBufferedBlockCipher cipher, byte[] data)\n    {\n        int minSize = cipher.GetOutputSize(data.Length);\n        byte[] outBuf = new byte[minSize];\n        int length1 = cipher.ProcessBytes(data, 0, data.Length, outBuf, 0);\n        int length2 = cipher.DoFinal(outBuf, length1);\n        int actualLength = length1 + length2;\n        byte[] result = new byte[actualLength];\n        Array.Copy(outBuf,result,actualLength);\n\n        //System.arraycopy(outBuf, 0, result, 0, result.length);\n        return result;\n    }\n    private static byte[] decryptCTR(byte[] cipher, byte[] key, byte[] iv)\n    {\n        //Org.BouncyCastle.Crypto.Modes.SicBlockCipher\n\n      PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new SicBlockCipher(new AesEngine()));\n\n      ParametersWithIV   ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n      aes.Init(false, ivAndKey);\n\n      return cipherData(aes, cipher);\n    }\n    private static byte[] encryptCTR(byte[] plain, byte[] key, byte[] iv)\n    {\n        PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new SicBlockCipher(\n                new AesEngine()));\n\n        ParametersWithIV ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n        aes.Init(true, ivAndKey);\n        return cipherData(aes, plain);\n    }\n```\n\n\nAnd I am trying to decrypt a given cipher text using the following method\n\n```\n   private void btnDecryptDirectly_Click(object sender, EventArgs e)\n    {\n        String encodedMsgHex =  \"770b80259ec33beb2561358a9f2dc617e46218c0a53cbeca695ae45faa8952aa0e311bde9d4e01726d3184c34451\";\n        String key = \"36f18357be4dbd77f050515c73fcf9f2\";\n        byte [] keyBytes = HexToBytes(key);\n\n        byte[] cipher = HexToBytes(encodedMsgHex);\n\n        txtDecryptedText = BytesToHex(decryptCTR(cipher, keyBytes, IV));\n\n        rtbDecrypted.Text = txtDecryptedText;\n    }\n```\n\n\nEvery time I run this I get error the \n\n\n  last block incomplete in decryption\n\n\nError. \n\nCan any one please help me out.\n    ", "Answer": "\r\nYou don't need to use ```\nPaddedBufferedBlockCipher```\n at all. Counter mode encryption is a streaming mode for a block cipher. Streaming ciphers don't need padding.\n\nYou can use ```\nBufferedBlockCipher```\n to access the streaming mode as ```\nSicBlockCipher```\n only lets you encrypt one block at a time.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cryptography module public_key verify() method\r\n                \r\nI'm on python 3.8.5, using cryptography 2.9.2. I need to verify a digital signature from a public key, but I'm very confused about the padding class in cryptography.\nThe public keys and signatures are sent to me in an XML file. Using LXML, I load the file into the variable inxml and get those items with this code. This code works.\n```\nmessage = inxml.findall('//message).text #The message that was signed.\nuser-key = inxml.findall('//pubkey')[0].text #The text file ---BEGIN PUBLIC KEY--- and so on.\nc=bytes(user0key.encode()) #Convert the string to a bytes object.\nuser-key = serialization.load_pem_public_key(c, backend=default_backend()) #Use the py-cryptography method to make a public-key object.\nuser-sig = inxml.findall('//signature')[0].text #Get the base64-encoded signature.\nuser-sig = base64.b64decode(user-sig) #Decode the signature back to binary. \n```\n\nThis gives me:\n\nmessage as a string\nuser-key as type public_key\nuser-sig as bytes.\n\nThe next line of code gives me an error:\n```\nuser-key.verify(user-sig, message, padding.PKCS7(128), hashes.SHA512)\n```\n\nThe error I get is:\n```\nExpected instance of hashes.HashAlgorithm\n```\n\nThe person who made the XML file created the signature with these commands (in Powershell):\n./openssl.exe dgst -sha512 -sign $private-key -passin pass:$password -out sig.sig $message\n./openssl.exe base64 -in sig.sig -out $base64\nThe $base64 variable was then put into the XML file.\nI don't understand why using hashes.SHA512 should cause an error. And I really don't understand the padding argument at all. Can someone point me in the right direction?\n    ", "Answer": "\r\nYou have two issues here. Assuming you're calling RSAPublicKey.verify the documentation notes that padding needs to be an instance of ```\nAsymmetricPadding```\n, and not a symmetric padding instance. Since this is a signature there are two possible paddings that may be in use: PSS or PKCS1v15. It would be useful to find out which one it should be, but you can also just try PKCS1v15 (which it likely is) and see if it works.\nThe other problem you have is that this method requires an instance of the hash, not the bare class. In other words, you should be passing ```\nhashes.SHA512()```\n, not ```\nhashes.SHA512```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography generate a CSR with an attribute section challenge\r\n                \r\nI am trying to add a Challenge OID to the attributes section of a CSR using Python cryptography. I've looked into the documentation and so far i've just been able to add extra attributes to the subject which is not what i need. Using the following code:\n\n```\nOID_CHALLENGE = ObjectIdentifier(\"1.2.840.113549.1.9.7\")\n\ncsr = x509.CertificateSigningRequestBuilder().subject_name(x509.Name([\n        x509.NameAttribute(NameOID.COMMON_NAME, cn),\n        x509.NameAttribute(OID_CHALLENGE, challenge)\n    ]))\n```\n\n\nThis generates the cert with the following subject line:\n\n```\n        Subject: CN=G9P3AwtMlj5RC9QF31GsMDsqzcn1rlBu/challengePassword=3F33A8D3B20CD3DC6016\n```\n\n\nWhat i need to achieve is the following:\n\n```\n Attributes:\n            challengePassword        (unable to print attribute)\n```\n\n\nIs there a way to do this using python cryptography (ideally) or a similar library?\n    ", "Answer": "\r\nAttributes are not supported in the CSR Builder as of version 2.6.1. ```\ncryptography```\n prioritizes feature work by requests/use case so if you could open an issue/comment on an existing issue/PR explaining exactly what you need that would be useful!\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography implementation in Java 7\r\n                \r\nI am trying to implement Elliptic Curve Cryptography (ECC) in java as java 7 provides native provider SunEC which supports Elliptic Curve Cryptography (ECC)\nBut I am always getting an error java.security.InvalidKeyException: Invalid key length: 91 bytes because the  Elliptic  curve \nI am creating is not appropriate.\n\nI am using java 7 my task is to use ECC to generate key for encryption and decryption\n\n```\npackage com.acc;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.PrivateKey;\nimport java.security.Provider;\nimport java.security.PublicKey;\nimport java.security.SecureRandom;\nimport java.security.Security;\nimport java.security.Signature;\nimport java.security.spec.ECGenParameterSpec;\nimport java.security.spec.ECParameterSpec;\nimport java.security.spec.EllipticCurve;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.CipherInputStream;\nimport javax.crypto.CipherOutputStream;\nimport javax.crypto.spec.DESKeySpec;\n\n\npublic class TestECC {\n\n    public static void main(String args[]) {\n        try {\n            Provider p[] = Security.getProviders();\n            Provider p1 = Security.getProvider(\"SunEC\");\n            System.out.println(p1.getName());\n            KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"EC\", \"SunEC\");\n            System.out.println(kpg.getAlgorithm());\n\n            Cipher cipher = Cipher.getInstance(\"DES\");\n            System.out.println(\"provider=\" + cipher.getProvider());\n\n            ECGenParameterSpec ecsp = new ECGenParameterSpec(\"sect163r2\");\n\n            kpg.initialize(ecsp);\n            KeyPair kyp = kpg.genKeyPair();\n            PublicKey pubKey = kyp.getPublic();\n\n            PrivateKey privKey = kyp.getPrivate();\n            System.out.println(cipher.getProvider());\n\n            cipher.init(Cipher.ENCRYPT_MODE, pubKey);\n\n            String cleartextFile = \"cleartext.txt\";\n            String ciphertextFile = \"ciphertextECIES.txt\";\n\n            byte[] block = new byte[64];\n            FileInputStream fis = new FileInputStream(cleartextFile);\n            FileOutputStream fos = new FileOutputStream(ciphertextFile);\n            CipherOutputStream cos = new CipherOutputStream(fos, cipher);\n\n            int i;\n            while ((i = fis.read(block)) != -1) {\n                cos.write(block, 0, i);\n            }\n            cos.close();\n\n            // Decrypt\n\n            String cleartextAgainFile = \"cleartextAgainECIES.txt\";\n\n            cipher.init(Cipher.DECRYPT_MODE, privKey, ecsp);\n\n            fis = new FileInputStream(ciphertextFile);\n            CipherInputStream cis = new CipherInputStream(fis, cipher);\n            fos = new FileOutputStream(cleartextAgainFile);\n\n            while ((i = cis.read(block)) != -1) {\n                fos.write(block, 0, i);\n            }\n            fos.close();\n\n        } catch (Exception e) {\n            System.out.println(e);\n        }\n    }\n\n}\n```\n\n\nOutput:\nSunEC\nEC\nprovider=SunJCE version 1.7\nSunJCE version 1.7\njava.security.InvalidKeyException: Invalid key length: 91 bytes\n\nCan you please help with ECC curve and Algorithm to use\n    ", "Answer": "\r\nFrom what I read, you are trying to:\n\n\nGenerate a random key pair using ECC\nUse the ECC private key as a DES symmetric key for encryption\nUse the ECC public key as a DES symmetric key for decryption\nExpect the result to be a round-trip\n\n\nThis will not work -- DES is a symmetric algorithm; it requires that the same 56-bit key be used for encryption and decryption. Throwing an ECC key at it won't magically make it accept a different key for the two operations!\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Vendoring dependencies fails to find cryptography\r\n                \r\nI am trying to deploy an app in cloud foundry which has a reference to paramiko package, which in turns references the cryptography package. I would like to deploy this with complete build isolation hence I am vendoring the dependencies and pushing to CF. However I face an issue when the python buildpack tries to pip install paramiko and it fails with an not found error for the cryptography package. This works fine if I try to install unvendored.\nThis is the command we use to download the packages to the vendor folder:\n```\npip download -r requirements.txt --no-binary :none: --dest vendor```\n\nThis is the error we face:\n\nI see the package in question while listing out the contents of the vendor directory\n\n    ", "Answer": "\r\nYou're probably using a version of ```\npip```\n at least 20.3 or higher and your buildpack in CF is probably using a version of ```\npip```\n below 20.3.  According to this documentation, only ```\npip```\n versions 20.3 and above understand ```\nmanylinux_x_y```\n tags, which is how your ```\ncryptography-3.4.8-cp36-abi3-manylinux_2_24_x86_64.whl```\n file is tagged (```\nmanylinux_2_24```\n).  ```\ncryptography```\n has other wheels for the same version but with other tags that lower versions of ```\npip```\n will understand, but you're not downloading them because your version of ```\npip```\n understands the ```\nmanylinux_x_y```\n tags.\nFrom the other wheel files shown in your screenshot, your buildpack must be using ```\npip```\n version 19.0 or higher, because it's successfully processing ```\nbcrypt```\n with a ```\nmanylinux2010```\n tag.\nTo vendor the correct wheel that CF will be able to find, use the flag ```\n--platform manylinux2010_x86_64```\n in your download command.  If it's using ```\npip```\n version 19.3 or higher, which it likely is, you can use the flag ```\n--platform manylinux2014_x86_64```\n instead.  ```\ncryptography```\n has wheels with either of those tags, both for the current version (v35.0.0) and the version you were trying to use (v3.4.8).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography hex,binaries and ascii python\r\n                \r\nI am new to cryptography and when it comes to xor I get really confused.\nGiven a text in ascii and a cipher in hex how can I get them to be both in the same format?\nMy current code is:\n\n```\nimport binascii\nstring = b'09e1c5f70a65ac519458e7e53f36'\nbinary = binascii.unhexlify(string)\n#This make the hex string to raw bytes\n```\n\n\nMy question is how can I get an ascii string to be in raw bytes also so I can xor?\nor if it is not possible what should I do to xor?\n    ", "Answer": "\r\nascii is simply a byte string\n\n```\nXOR_WITH = 0x12\n\ndef xor_encode(byte):\n    if isinstance(byte,basestring):\n        byte = ord(byte) #convert to ascii integer value\n    byte = byte ^ XOR_WITH #encode\n    return chr(byte) # convert it back to a string and return\n\nencoded_string = \"\".join(map(xor_encode,\"Test String\"))\n```\n\n\nmaybe what you are looking for\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error when installing cryptography python library with pip in Centos\r\n                \r\nI'm trying to install the cryptography python library using pip (so I can use paramiko), but I'm getting a gcc error.\n\nSome background: this is on a CentOS 5.11 VM that I was given with Python 2.4.3 installed. I installed Python 2.7.12 alongside it, and had to struggle a little bit to get all the dependencies for cryptography installed.\n\nWhen I run the command\n\n```\nsudo pip2.7 install cryptography\n```\n\n\nI first get an SNIMissingWarning error (which I think is tangential, but I'll give details at the end of the question, in case it's not). Then I get several hundred lines of install logs, finally ending with:\n\n\n  build/temp.linux-i686-2.7/_openssl.c:72077: error: storage class specified for parameter ‘_cffi_type_context’\n  \n  build/temp.linux-i686-2.7/_openssl.c:72077: error: parameter ‘_cffi_type_context’ is initialized\n  \n  build/temp.linux-i686-2.7/_openssl.c:72120: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘attribute’ before ‘{’ token\n  \n  build/temp.linux-i686-2.7/_openssl.c:72122: error: old-style parameter declarations in prototyped function definition\n  \n  build/temp.linux-i686-2.7/_openssl.c:591: error: parameter name omitted\n  \n  build/temp.linux-i686-2.7/_openssl.c:72122: error: expected ‘{’ at end of input\n  \n  error: command 'gcc' failed with exit status 1\n  \n  \n  \n  Command \"/usr/local/bin/python2.7 -u -c \"import setuptools, tokenize;file='/tmp/pip-build-RGpvd5/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /tmp/pip-kwpB5q-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-RGpvd5/cryptography/\n\n\nSince it's a gcc error, I'm not sure what to do. I looked for information about it, but I don't know much about C, so the answers didn't mean much to me. I couldn't find anything relating to installing cryptography for python discussing this specific error.\n\nAny ideas what may be happening?\n\n\n\nIn more detail, the SNIMissingWarning message I get is:\n\n\n  /usr/local/lib/python2.7/site-packages/pip-9.0.1-py2.7.egg/pip/vendor/requests/packages/urllib3/util/ssl.py:318: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#snimissingwarning.\n  \n  SNIMissingWarning\n  \n  Using cached cryptography-1.6.tar.gz\n\n\nThe readthedocs.io link has this to say about the error: \"This happens on Python 2 versions older than 2.7.9. These older versions lack SNI support.\" Since I am using 2.7.12, hopefully that's not a problem. It further suggests installing urllib3 with the secure option, which I tried, using\n\n```\npip2.7 install urllib3[secure]\n```\n\n\nThis automatically attempted to install cryptography, and that failed with a gcc error, the same way as before.\n    ", "Answer": "\r\nI remember having difficulty with this as well. From what I remember, the command that worked for me was:  ```\nsudo python -m pip install cryptography```\n\n\nIf Python 2.7 isn't default on your system, you may need to use: ```\nsudo python2.7 -m pip install cryptography```\n\n\nEdit:\nThought I'd also add this. Try reinstalling gcc. Since you're on CentOS: ```\n$ sudo yum reinstall gcc```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "AES CTR Mode with Bouncycastle Cryptography\r\n                \r\nI am trying to use to implement AES CTR encryption using the Bouncy castle cryptography library in C#. .NET provides RijndaelManaged Crypto Library but it does not support CTR mode for AES hence the selection of Bouncycastle. \n\nI haven't been able to code it properly The problem seems to be with IV.\n\n```\n    public string BytesToHex(byte[] bytes)\n    {\n        char[] c = new char[bytes.Length * 2];\n\n        byte b;\n\n        for (int bx = 0, cx = 0; bx < bytes.Length; ++bx, ++cx)\n        {\n            b = ((byte)(bytes[bx] >> 4));\n            c[cx] = (char)(b > 9 ? b + 0x37 + 0x20 : b + 0x30);\n\n            b = ((byte)(bytes[bx] & 0x0F));\n            c[++cx] = (char)(b > 9 ? b + 0x37 + 0x20 : b + 0x30);\n        }\n\n        return new string(c);\n    }\n\n    public byte[] HexToBytes(string str)\n    {\n        if (str.Length == 0 || str.Length % 2 != 0)\n            return new byte[0];\n\n        byte[] buffer = new byte[str.Length / 2];\n        char c;\n        for (int bx = 0, sx = 0; bx < buffer.Length; ++bx, ++sx)\n        {\n            // Convert first half of byte\n            c = str[sx];\n            buffer[bx] = (byte)((c > '9' ? (c > 'Z' ? (c - 'a' + 10) : (c - 'A' + 10)) : (c - '0')) << 4);\n\n            // Convert second half of byte\n            c = str[++sx];\n            buffer[bx] |= (byte)(c > '9' ? (c > 'Z' ? (c - 'a' + 10) : (c - 'A' + 10)) : (c - '0'));\n        }\n\n        return buffer;\n    }\n   private static byte[] cipherData(PaddedBufferedBlockCipher cipher, byte[] data)\n    {\n        int minSize = cipher.GetOutputSize(data.Length);\n        byte[] outBuf = new byte[minSize];\n        int length1 = cipher.ProcessBytes(data, 0, data.Length, outBuf, 0);\n        int length2 = cipher.DoFinal(outBuf, length1);\n        int actualLength = length1 + length2;\n        byte[] result = new byte[actualLength];\n        Array.Copy(outBuf,result,actualLength);\n\n        //System.arraycopy(outBuf, 0, result, 0, result.length);\n        return result;\n    }\n    private static byte[] decryptCTR(byte[] cipher, byte[] key, byte[] iv)\n    {\n        //Org.BouncyCastle.Crypto.Modes.SicBlockCipher\n\n      PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new SicBlockCipher(new AesEngine()));\n\n      ParametersWithIV   ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n      aes.Init(false, ivAndKey);\n\n      return cipherData(aes, cipher);\n    }\n    private static byte[] encryptCTR(byte[] plain, byte[] key, byte[] iv)\n    {\n        PaddedBufferedBlockCipher aes = new PaddedBufferedBlockCipher(new SicBlockCipher(\n                new AesEngine()));\n\n        ParametersWithIV ivAndKey = new ParametersWithIV(new KeyParameter(key), iv);\n        aes.Init(true, ivAndKey);\n        return cipherData(aes, plain);\n    }\n```\n\n\nAnd I am trying to decrypt a given cipher text using the following method\n\n```\n   private void btnDecryptDirectly_Click(object sender, EventArgs e)\n    {\n        String encodedMsgHex =  \"770b80259ec33beb2561358a9f2dc617e46218c0a53cbeca695ae45faa8952aa0e311bde9d4e01726d3184c34451\";\n        String key = \"36f18357be4dbd77f050515c73fcf9f2\";\n        byte [] keyBytes = HexToBytes(key);\n\n        byte[] cipher = HexToBytes(encodedMsgHex);\n\n        txtDecryptedText = BytesToHex(decryptCTR(cipher, keyBytes, IV));\n\n        rtbDecrypted.Text = txtDecryptedText;\n    }\n```\n\n\nEvery time I run this I get error the \n\n\n  last block incomplete in decryption\n\n\nError. \n\nCan any one please help me out.\n    ", "Answer": "\r\nYou don't need to use ```\nPaddedBufferedBlockCipher```\n at all. Counter mode encryption is a streaming mode for a block cipher. Streaming ciphers don't need padding.\n\nYou can use ```\nBufferedBlockCipher```\n to access the streaming mode as ```\nSicBlockCipher```\n only lets you encrypt one block at a time.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "updating python cryptography causes error and does not work scripts\r\n                \r\nI am trying to update Python cryptography, but an error occurs that does not let me run almost any script\n\nI tried different ways to update it but it still happens from my Linux PC \"ubuntu\" 32bits\n\n```\nsudo pip install cryptography --upgrade\nTraceback (most recent call last):\n  File \"/usr/bin/pip\", line 9, in <module>\n    from pip import main\nImportError: cannot import name main\n```\n\n\nHe tried to update it because every time he ran a series of scripts he shows me an error that he didn't do before\n\nerror message when running a script:\n\n```\n Traceback (most recent call last):\n          File \"fbi.py\", line 21, in <module>\n            import requests\n          File \"/home/elvaquero/.local/lib/python2.7/site-packages/requests/__init__.py\", line 95, in <module>\n            from urllib3.contrib import pyopenssl\n          File \"/home/elvaquero/.local/lib/python2.7/site-packages/urllib3/contrib/pyopenssl.py\", line 46, in <module>\n            import OpenSSL.SSL\n          File \"build/bdist.linux-i686/egg/OpenSSL/__init__.py\", line 8, in <module>\n          File \"build/bdist.linux-i686/egg/OpenSSL/SSL.py\", line 194, in <module>\n        AttributeError: 'module' object has no attribute 'Cryptography_HAS_SSL_ST'\n```\n\n\nI tried to try this\n\n$ apt-get --auto-remove remove python-openssl\n\nWhen trying the command \n\n$ pip install pyopenSSL\n\nReturns the following error:\n\n```\nTraceback (last most recent call):\nFile \"/ usr / bin / pip\", line 9, in <module>\nfrom pip import main\nImportError: the name main cannot be imported\n```\n\n\nI Then try with\n\n$ sudo apt install --reinstall python-openssl\n\nIt has been installed correctly but the error still occurs.\n\n```\n    $ python example.py\n    Traceback (most recent call last):\n      File \"fbi.py\", line 21, in <module>\n        import requests\n      File \"/home/elvaquero/.local/lib/python2.7/site-packages/requests/__init__.py\", line 95, in <module>\n        from urllib3.contrib import pyopenssl\n      File \"/home/elvaquero/.local/lib/python2.7/site-packages/urllib3/contrib/pyopenssl.py\", line 46, in <module>\n        import OpenSSL.SSL\n      File \"build/bdist.linux-i686/egg/OpenSSL/__init__.py\", line 8, in <module>\n      File \"build/bdist.linux-i686/egg/OpenSSL/SSL.py\", line 194, in <module>\n    AttributeError: 'module' object has no attribute 'Cryptography_HAS_SSL_ST'\n```\n\n\nI found that you can also try with\n\n$ sudo easy_install -U cffi\n$ sudo easy_install -U cryptography\n\nBut it doesn't work either\n\n```\n    $ sudo easy_install -U cffi\n    Searching for cffi\n    Reading https://pypi.python.org/simple/cffi/\n    Best match: cffi 1.12.3\n    Downloading https://files.pythonhosted.org/packages/93/1a/ab8c62b5838722f29f3daffcc8d4bd61844aa9b5f437341cc890ceee483b/cffi-1.12.3.tar.gz#sha256=041c81822e9f84b1d9c401182e174996f0bae9991f33725d059b771744290774\n    Processing cffi-1.12.3.tar.gz\n    Writing /tmp/easy_install-2lyiDA/cffi-1.12.3/setup.cfg\n    Running cffi-1.12.3/setup.py -q bdist_egg --dist-dir /tmp/easy_install-2lyiDA/cffi-1.12.3/egg-dist-tmp-yrDbvQ\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    c/_cffi_backend.c:2:20: fatal error: Python.h: No existe el fichero o el directorio\n    compilation terminated.\n    error: Setup script exited with error: command 'i686-linux-gnu-gcc' failed with exit status 1\n```\n\n\n```\n$ sudo easy_install -U cryptography\nSearching for cryptography\nReading https://pypi.python.org/simple/cryptography/\nBest match: cryptography 2.7\nDownloading https://files.pythonhosted.org/packages/c2/95/f43d02315f4ec074219c6e3124a87eba1d2d12196c2767fadfdc07a83884/cryptography-2.7.tar.gz#sha256=e6347742ac8f35ded4a46ff835c60e68c22a536a8ae5c4422966d06946b6d4c6\nProcessing cryptography-2.7.tar.gz\nWriting /tmp/easy_install-nKssiw/cryptography-2.7/setup.cfg\nRunning cryptography-2.7/setup.py -q bdist_egg --dist-dir /tmp/easy_install-nKssiw/cryptography-2.7/egg-dist-tmp-e9llQ5\n/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\n  warnings.warn(msg)\n/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'long_description_content_type'\n  warnings.warn(msg)\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files found matching 'vectors'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nwarning: no previously-included files found matching 'azure-pipelines.yml'\nwarning: no previously-included files found matching '.azure-pipelines'\nwarning: no previously-included files found matching '.travis.yml'\nwarning: no previously-included files found matching '.travis'\nwarning: no previously-included files matching '*' found under directory '.azure-pipelines'\nwarning: no previously-included files matching '*' found under directory '.travis'\nwarning: no previously-included files found matching 'release.py'\nwarning: no previously-included files found matching '.coveragerc'\nwarning: no previously-included files found matching 'codecov.yml'\nwarning: no previously-included files found matching 'dev-requirements.txt'\nwarning: no previously-included files found matching 'rtd-requirements.txt'\nwarning: no previously-included files found matching 'tox.ini'\nbuild/temp.linux-i686-2.7/_openssl.c:22:24: fatal error: pyconfig.h: No existe el fichero o el directorio\ncompilation terminated.\nerror: Setup script exited with error: command 'i686-linux-gnu-gcc' failed with exit status 1\n```\n\n    ", "Answer": "\r\nYou are modifying your system python installation by using ```\nsudo```\n. That's dangerous and you may have already modified a library that your system depends upon. Use virtualenv or virtualenvwrapper instead.\n\nHere is virtualenvwrapper in action using python2:\n\n```\nbrew@ontario:~$ mkvirtualenv -p `which python2` crypto2\nRunning virtualenv with interpreter /usr/local/bin/python2\nNew python executable in /Users/brew/.virtualenvs/crypto2/bin/python2.7\nAlso creating executable in /Users/brew/.virtualenvs/crypto2/bin/python\nInstalling setuptools, pip, wheel...\ndone.\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto2/bin/predeactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto2/bin/postdeactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto2/bin/preactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto2/bin/postactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto2/bin/get_env_details\n(crypto2) brew@ontario:~$ pip install --upgrade pip\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\nRequirement already up-to-date: pip in ./.virtualenvs/crypto2/lib/python2.7/site-packages (19.2.2)\n(crypto2) brew@ontario:~$ pip install cryptography\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\nCollecting cryptography\n  Downloading https://files.pythonhosted.org/packages/e2/bf/3b641820c561aedde134e88528ba68dffe41ed238899fab7f7ef20118aaf/cryptography-2.7-cp27-cp27m-macosx_10_6_intel.whl (1.6MB)\n     |################################| 1.6MB 896kB/s\nCollecting enum34; python_version < \"3\" (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/c5/db/e56e6b4bbac7c4a06de1c50de6fe1ef3810018ae11732a50f15f62c7d050/enum34-1.1.6-py2-none-any.whl\nCollecting cffi!=1.11.3,>=1.8 (from cryptography)\n  Downloading https://files.pythonhosted.org/packages/16/f6/46a3dece43541b2cbf3776ec2299e370a2408d9380958401cacb6d101853/cffi-1.12.3-cp27-cp27m-macosx_10_6_intel.whl (245kB)\n     |################################| 256kB 6.6MB/s\nCollecting six>=1.4.1 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\nCollecting asn1crypto>=0.21.0 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl\nCollecting ipaddress; python_version < \"3\" (from cryptography)\n  Downloading https://files.pythonhosted.org/packages/fc/d0/7fc3a811e011d4b388be48a0e381db8d990042df54aa4ef4599a31d39853/ipaddress-1.0.22-py2.py3-none-any.whl\nCollecting pycparser (from cffi!=1.11.3,>=1.8->cryptography)\nInstalling collected packages: enum34, pycparser, cffi, six, asn1crypto, ipaddress, cryptography\nSuccessfully installed asn1crypto-0.24.0 cffi-1.12.3 cryptography-2.7 enum34-1.1.6 ipaddress-1.0.22 pycparser-2.19 six-1.12.0\n(crypto2) brew@ontario:~$ deactivate\nbrew@ontario:~$ \n```\n\n\nSame thing with python3:\n\n```\nbrew@ontario:~$ mkvirtualenv -p `which python3` crypto3\nRunning virtualenv with interpreter /usr/local/bin/python3\nUsing base prefix '/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7'\nNew python executable in /Users/brew/.virtualenvs/crypto3/bin/python3.7\nAlso creating executable in /Users/brew/.virtualenvs/crypto3/bin/python\nInstalling setuptools, pip, wheel...\ndone.\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto3/bin/predeactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto3/bin/postdeactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto3/bin/preactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto3/bin/postactivate\nvirtualenvwrapper.user_scripts creating /Users/brew/.virtualenvs/crypto3/bin/get_env_details\n(crypto3) brew@ontario:~$ pip install --upgrade pip\nRequirement already up-to-date: pip in ./.virtualenvs/crypto3/lib/python3.7/site-packages (19.2.2)\n(crypto3) brew@ontario:~$ pip install cryptography\nCollecting cryptography\n  Using cached https://files.pythonhosted.org/packages/63/4e/57b7a6bd98906872fcd2531e74b532de2abe17d675a5cf171931fcb4a9e8/cryptography-2.7-cp34-abi3-macosx_10_6_intel.whl\nCollecting six>=1.4.1 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\nCollecting cffi!=1.11.3,>=1.8 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/f0/48/5aa4ea664eba26dd5142558d04762f5065c02220b4665b3f7eecb9bb614e/cffi-1.12.3-cp37-cp37m-macosx_10_9_x86_64.whl\nCollecting asn1crypto>=0.21.0 (from cryptography)\n  Using cached https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl\nCollecting pycparser (from cffi!=1.11.3,>=1.8->cryptography)\nInstalling collected packages: six, pycparser, cffi, asn1crypto, cryptography\nSuccessfully installed asn1crypto-0.24.0 cffi-1.12.3 cryptography-2.7 pycparser-2.19 six-1.12.0\n(crypto3) brew@ontario:~$ deactivate \nbrew@ontario:~$ \n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to encrypt JSON in python, error using cryptography\r\n                \r\nThis question has already been answered here:\nHow to encrypt JSON in python\nHowever, I'm getting an error when using the cryptography module.\n```\nraise TypeError(\"{} must be bytes\".format(name))\n   TypeError: data must be bytes\n```\n\nHere's my code:\n```\nfrom cryptography.fernet import Fernet\nkey= b'F9tdtAlS5kqVL5_uxKCnOPailXUqKsJmxbHWGLv_H-c='\n\nwith open('info.json', 'rb') as loader1:\n    params = json.load(loader1)\n\nif xyz(x, y)==True:\n\n        fernet = Fernet(key)\n        encrypted=fernet.encrypt(params)\n        print(encrypted)\n        with open('info.json', 'wb') as writer1:\n            json.dump(encrypted, writer1)\n        \n        print(\"Operation was a success\")\nelse:\n     print(\"error\")\n```\n\n    ", "Answer": "\r\nIf you see in the original answer they are reading the contents from json file and not using json.load, so the content they are encrypting is in byte format however you are feeding in a json therefore the error data must be bytes. Quick fix will be to convert json to string using ```\njson.loads```\n and then encoding to byte format before feeding it into fernet.encrypt()\nTo encode to byte\nhttps://www.geeksforgeeks.org/python-convert-string-to-bytes/\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is Javascript a proper platform for cryptography? Or, can it be? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI noticed a good while back that Wikipedia links to a Javascript implementation of different hash functions. Also found Clipperz Crypto. Even Mozilla implements a crypto object in Firefox.\n\nSo, Is Javascript a proper platform for cryptography? Or, can it be?\nOr, I suppose.. Are there any purposes or benefits for hashing data before POST?\n    ", "Answer": "\r\nThere are uses for hashing functions in Javascript, for example validating captchas client side (by comparing hash in session to computed hash from input). Obviously, the uses are limited since it runs almost exclusively client side (and you can't trust client input), but the potential is there.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cloudspeech demo in voice AIY kit cryptography error\r\n                \r\nI am running the cloudspeech_demo.py in my Google AIY voice kit. \n\nI have also included the Google Cloud Speech to Text credentials\n\nThis is the error I am running into\n\n```\nINFO:root:Initializing for language en_GB...\nTraceback (most recent call last):\n  File \"examples/voice/cloudspeech_demo.py\", line 71, in <module>\n    main()\n  File \"examples/voice/cloudspeech_demo.py\", line 46, in main\n    client = CloudSpeechClient()\n  File \"/home/pi/AIY-projects-python/src/aiy/cloudspeech.py\", line 62, in __init__\n    credentials = service_account.Credentials.from_service_account_file(service_accout_file)\n  File \"/usr/local/lib/python3.7/dist-packages/google/oauth2/service_account.py\", line 209, in from_service_account_file\n    filename, require=['client_email', 'token_uri'])\n  File \"/usr/local/lib/python3.7/dist-packages/google/auth/_service_account_info.py\", line 73, in from_filename\n    return data, from_dict(data, require=require)\n  File \"/usr/local/lib/python3.7/dist-packages/google/auth/_service_account_info.py\", line 54, in from_dict\n    signer = crypt.RSASigner.from_service_account_info(data)\n  File \"/usr/local/lib/python3.7/dist-packages/google/auth/crypt/base.py\", line 115, in from_service_account_info\n    info.get(_JSON_FILE_PRIVATE_KEY_ID))\n  File \"/usr/local/lib/python3.7/dist-packages/google/auth/crypt/_cryptography_rsa.py\", line 148, in from_string\n    key, password=None, backend=_BACKEND)\n  File \"/usr/lib/python3/dist-packages/cryptography/hazmat/primitives/serialization/base.py\", line 16, in load_pem_private_key\n    return backend.load_pem_private_key(data, password)\n  File \"/usr/lib/python3/dist-packages/cryptography/hazmat/backends/openssl/backend.py\", line 1045, in load_pem_private_key\n    password,\n  File \"/usr/lib/python3/dist-packages/cryptography/hazmat/backends/openssl/backend.py\", line 1271, in _load_key\n    self._handle_key_loading_error()\n  File \"/usr/lib/python3/dist-packages/cryptography/hazmat/backends/openssl/backend.py\", line 1329, in _handle_key_loading_error\n    raise ValueError(\"Could not deserialize key data.\")\nValueError: Could not deserialize key data.\n\n```\n\n\nI am running the program on Python3 and the cryptography version is 2.2\n\nPlease help\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Hybrid cryptography. Length of the data to decrypt is invalid\r\n                \r\nI am getting above mentioned error during a hybrid cryptography implementation.\n\nas per https://en.wikipedia.org/wiki/Hybrid_cryptosystem\n\nI am just stucked at the last step\n\nMy code is \n\n```\n private void button1_Click(object sender, EventArgs e)\n        {\n            try\n            {\n                CspParameters cspParams = new CspParameters { ProviderType = 1 };\n                RSACryptoServiceProvider rsaProvider = new RSACryptoServiceProvider(2048, cspParams);\n                string publicKey =lblPublicKey.Text = Convert.ToBase64String(rsaProvider.ExportCspBlob(false));\n                string privateKey = lblPrivateKey.Text= Convert.ToBase64String(rsaProvider.ExportCspBlob(true));\n                string symmericKey = txtBoxSymmetricKey.Text = \"Kamran12\";\n                txtEncryptedData.Text = EncryptData(txtInputData.Text, symmericKey);\n                txtBoxEncryptedSymmetricKey.Text = RSA_Encrypt(symmericKey, publicKey);\n\n\n\n                txtBoxDescryptedSymmetricKey.Text = RSA_Decrypt(txtBoxEncryptedSymmetricKey.Text, privateKey);\n                txtDecryptedData.Text = DecryptData(txtEncryptedData.Text, txtBoxDescryptedSymmetricKey.Text); //getting error length of the data to decrypt is invalid\n            }\n            catch (Exception exc)\n            {\n\n            }\n\n        }\n\n        public static string RSA_Decrypt(string encryptedText, string privateKey)\n        {\n            CspParameters cspParams = new CspParameters { ProviderType = 1 };\n            RSACryptoServiceProvider rsaProvider = new RSACryptoServiceProvider(cspParams);\n            rsaProvider.ImportCspBlob(Convert.FromBase64String(privateKey));\n            var buffer = Convert.FromBase64String(encryptedText);\n            byte[] plainBytes = rsaProvider.Decrypt(buffer, false);\n            string plainText = Encoding.UTF8.GetString(plainBytes, 0, plainBytes.Length);\n            return plainText;\n        }\n\n        public static string RSA_Encrypt(string data, string publicKey)\n        {\n            CspParameters cspParams = new CspParameters { ProviderType = 1 };\n            RSACryptoServiceProvider rsaProvider = new RSACryptoServiceProvider(cspParams);\n            rsaProvider.ImportCspBlob(Convert.FromBase64String(publicKey));\n            byte[] plainBytes = Encoding.UTF8.GetBytes(data);\n            byte[] encryptedBytes = rsaProvider.Encrypt(plainBytes, false);\n            return Convert.ToBase64String(encryptedBytes);\n        }\n\n\n\n        public string EncryptData(string data, string key)\n        {\n            string encryptedData = null;\n            byte[] buffer = Encoding.UTF8.GetBytes(data);\n            DESCryptoServiceProvider desCryptSrvckey = new DESCryptoServiceProvider\n            {\n                Key = new UTF8Encoding().GetBytes(key)\n            };\n            desCryptSrvckey.IV = desCryptSrvckey.Key;\n            using (MemoryStream stmCipherText = new MemoryStream())\n            {\n                using (CryptoStream cs = new CryptoStream(stmCipherText, desCryptSrvckey.CreateEncryptor(), CryptoStreamMode.Write))\n                {\n                    cs.Write(buffer, 0, buffer.Length);\n                    cs.FlushFinalBlock();\n\n\n                    encryptedData = Encoding.UTF8.GetString(stmCipherText.ToArray());\n                }\n            }\n            return encryptedData;\n        }\n\n        public string DecryptData(string data, string key)\n        {\n\n            byte[] encryptedMessageBytes = Encoding.UTF8.GetBytes(data);\n            string decryptedData = null;\n            DESCryptoServiceProvider desCryptSrvckey = new DESCryptoServiceProvider\n            {\n                Key = new UTF8Encoding().GetBytes(key)\n            };\n            desCryptSrvckey.IV = desCryptSrvckey.Key;\n            using (MemoryStream encryptedStream = new MemoryStream(encryptedMessageBytes))\n            {\n                using (\n                    CryptoStream cs = new CryptoStream(encryptedStream, desCryptSrvckey.CreateDecryptor(),\n                        CryptoStreamMode.Read))\n                {\n                    using (StreamReader sr = new StreamReader(cs))\n                    {\n                        decryptedData = sr.ReadToEnd();\n                    }\n                }\n            }\n            return decryptedData;\n        }\n```\n\n    ", "Answer": "\r\nYou declare ```\nencryptedData```\n as a string. This is incorrect.  Your encrypted data is bytes, not a character string.  Attempting to convert raw bytes to UTF-8 text, as in ```\nencryptedData = Encoding.UTF8.GetString(stmCipherText.ToArray());```\n will not result in UTF-8 text but give you garbage and possibly lose data.\n\nIf you want the output from your encryption to be as text, then take the cyphertext bytes and use ```\nConvert.ToBase64String()```\n to turn them into a text string.\n\nWhen decrypting, convert the Base64 string back into bytes and decrypt the bytes.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to hide javascript with cryptography? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question needs to be more focused. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it focuses on one problem only by editing this post.\r\n                \r\n                    \r\n                        Closed 6 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI am looking for method to hide my plugin's javascript with complex obfuscator but i read everywhere that it is not possible to hide javascript completely.\nI want to know that is there any way to hide java script with cryptography?\ncan any one make the algorithm which can be adopt by every web hosting like they have php , jommla, java, magneto etc in which we can encrypt our javascript with our own secret key and we add this key in our license manager in our hosting and on user side we can add license manager client in our applications which need to connect our server and get that key to run our application.\n    ", "Answer": "\r\nDoing this would be almost exactly like deobfuscating the code. If you obfuscate the code, and provide it only on pages when you're logged in, then this would accomplish pretty much the same task. At some point, you'd need to fetch this key to decrypt it to run it on the client, and when that happens, someone can easily reverse engineer the decryption code and get to the code that's being run on the client side.\n\nSimply put: If it's run on the client side, at some point, you'll have to get it into a state that the compiler can read. At this point, someone can inject code to fetch that code, and reverse engineer the output.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "PHP & Silverlight Cryptography Challenge\r\n                \r\nOK, I give up. I think I will leave it to the crowd-sourcing machine.\n\nCan somebody make a PHP 5 equivalent of anyone of the 2 classes below?\n(I mean with that both encrypted\n\nSilverlight Cryptography Class 1:\n\n```\nPublic Class AES128Helper\n    Public Password As String = Nothing\n    Public PasswordSalt As String = Nothing\n    Private DefaultIntSize As Integer = 4\n\n    Public Function Encryptaes128(ByVal PlainText() As Byte) As Byte()\n        Try\n            Using MStream As New MemoryStream 'Memory stream to write encrypted data to.\n                Using A128 As New AesManaged\n                    'Key.\n                    Dim DeriveBytes As New Rfc2898DeriveBytes(Password, Encoding.UTF8.GetBytes(PasswordSalt))\n                    A128.Key = DeriveBytes.GetBytes(128 / 8)\n                    'IV.\n                    If Integer.MaxValue = Int64.MaxValue Then DefaultIntSize = 8\n                    MStream.Write(BitConverter.GetBytes(A128.IV.Length), 0, DefaultIntSize)\n                    MStream.Write(A128.IV, 0, A128.IV.Length)\n                    'Create Crypto Stream that transforms memory stream using des encryption.\n                    Using CryptoStream As New CryptoStream(MStream, A128.CreateEncryptor(), CryptoStreamMode.Write)\n                        'Write out and flush TripleDES encrypted file to memory stream.\n                        With CryptoStream\n                            .Write(PlainText, 0, PlainText.Length)\n                            .FlushFinalBlock()\n                        End With\n                        CryptoStream.Close()\n                    End Using\n                    'Return encrypted data.\n                    Return MStream.ToArray\n                End Using\n                MStream.Close()\n            End Using\n        Catch ex As Exception\n            Return Nothing\n        End Try\n    End Function\n\n    Public Function Decryptaes128(ByVal EncryptedByteData() As Byte) As Byte()\n        Try\n            Using MStream As MemoryStream = New MemoryStream(EncryptedByteData) 'Memory stream to write decrypted data to.\n                Using A128 As New AesManaged\n                    'Key.\n                    Dim DeriveBytes As New Rfc2898DeriveBytes(Password, Encoding.UTF8.GetBytes(PasswordSalt))\n                    A128.Key = DeriveBytes.GetBytes(128 / 8)\n                    'Get the IV from the encrypted stream.\n                    A128.IV = ReadByteArray(MStream)\n                    'Create crypto stream set to read and do a TripleDES decryption transform on incoming bytes.\n                    Using CryptoStream As New CryptoStream(MStream, A128.CreateDecryptor(), CryptoStreamMode.Read)\n                        'Get the decrypted bytes.\n                        Dim DestArray() As Byte = New BinaryReader(CryptoStream).ReadBytes(MStream.Length * 2)\n                        Return DestArray 'Return decrypted data.\n                    End Using\n                End Using\n                MStream.Close()\n            End Using\n        Catch ex As Exception\n            Return Nothing\n        End Try\n    End Function\n\n    Private Function ReadByteArray(ByVal s As Stream) As Byte()\n        If Integer.MaxValue = Int64.MaxValue Then DefaultIntSize = 8\n        Dim rawLength(DefaultIntSize - 1) As Byte\n        If s.Read(rawLength, 0, rawLength.Length) <> rawLength.Length Then\n            Throw New SystemException(\"Stream did not contain properly formatted byte array.\")\n        End If\n        Dim buffer(BitConverter.ToInt32(rawLength, 0) - 1) As Byte\n        If s.Read(buffer, 0, buffer.Length) <> buffer.Length Then\n            Throw New SystemException(\"Did not read byte array properly.\")\n        End If\n        Return buffer\n    End Function\nEnd Class\n```\n\n\nExample Usage For The Above:\n\n```\nDim g As New AES128Helper\ng.Password = \"Password\"\ng.PasswordSalt = \"PasswordSalt\"\nDim b As Byte() = System.Text.Encoding.UTF8.GetBytes(\"Sad day really.\")\nDim b2 As Byte() = g.Encryptaes128(b)\nDim b64 As String = Convert.ToBase64String(b2)\n```\n\n\nOR For This Silverlight Class (if you think it's easier)\n\n```\nPublic Class AES128Helper2\n    Public Key As Byte() = Nothing\n    Public IV As Byte() = Nothing\n\n    Public Function Encryptaes128(ByVal PlainText() As Byte) As Byte()\n        Dim CryptoStream As CryptoStream = Nothing\n        Dim MStream As New System.IO.MemoryStream 'Memory stream to write encrypted data to.\n        Dim A128 As New AesManaged\n        Try\n            'Create aes128 Encryptor from this instance.\n            Dim A128Encrypt As ICryptoTransform = A128.CreateEncryptor(Key, IV)\n            'Create Crypto Stream that transforms memory stream using des encryption.\n            CryptoStream = New CryptoStream(MStream, A128Encrypt, CryptoStreamMode.Write)\n            'Write out and flush TripleDES encrypted file to memory stream.\n            With CryptoStream\n                .Write(PlainText, 0, PlainText.Length)\n                .FlushFinalBlock()\n            End With\n            'Return encrypted data.\n            Return MStream.ToArray\n        Catch ex As Exception\n            Return Nothing\n        Finally 'Close streams.\n            If CryptoStream IsNot Nothing Then CryptoStream.Close()\n            If MStream IsNot Nothing Then MStream.Close()\n        End Try\n        Return Nothing\n    End Function\n\n    Public Function Decryptaes128(ByVal EncryptedByteData() As Byte) As Byte()\n        Dim MStream As System.IO.MemoryStream = Nothing 'Memory stream to write decrypted data to.\n        Dim CryptoStreamDecr As CryptoStream\n        Dim A128 As New AesManaged\n        Try\n            'Create aes128 instance and Decryptor.\n            Dim A128Decrypt As ICryptoTransform = A128.CreateDecryptor(Key, IV)\n            'Create crypto stream set to read and do a TripleDES decryption transform on incoming bytes.\n            MStream = New MemoryStream(EncryptedByteData)\n            CryptoStreamDecr = New CryptoStream(MStream, A128Decrypt, CryptoStreamMode.Read)\n            'Get the decrypted bytes.\n            Dim DestArray() As Byte = New BinaryReader(CryptoStreamDecr).ReadBytes(MStream.Length * 2)\n            Return DestArray 'Return decrypted data.\n        Catch ex As Exception\n            Return Nothing\n        Finally 'Close streams.\n            If MStream IsNot Nothing Then MStream.Close()\n            '-- Don't use the following. It gives error \"Stream does not support writing\n            'If Not (cryptostreamDecr Is Nothing) Then cryptostreamDecr.Close()\n        End Try\n        Return Nothing\n    End Function\n\n    Public Function Md5Hash(ByVal ByteData() As Byte) As Byte()\n        Return New MD5CryptoServiceProvider().ComputeHash(ByteData)\n    End Function\n\n    Public Function Md5HashString(ByVal ByteData() As Byte) As String\n        Return BitConverter.ToString(Md5Hash(ByteData)).Replace(\"-\", \"\").ToLower()\n    End Function\nEnd Class\n```\n\n\nExample Usage For The Above:\n\n```\nDim c As New Cryptography.AES128Helper\nDim md5 As String = c.Md5HashString(UTF8Encoding.UTF8.GetBytes(\"Password\"))\nDim key As Byte() = System.Text.Encoding.UTF8.GetBytes(md5)\nDim iv As Byte() = System.Text.Encoding.UTF8.GetBytes(\"PasswordSalt\")\nDim data As Byte() = System.Text.Encoding.UTF8.GetBytes(\"Sad day really.\")\nc.Key = key\nc.IV = iv\nDim enc As Byte() = c.Encryptaes128(data)\nDim b64 As String = Convert.ToBase64String(enc)\n```\n\n\nAGAIN, What I would like is a PHP mcrypt function that takes a base 64 string, the Password and PasswordSalt variables and just spits out the decrypted \"Sad day really.\"\n\n(NOTE: The MD5 function on the second class is another custom class because SL does not support MD5. If anyone needs I would be glad to post it here.)\n\nThe below PHP does NOT work.\n\n```\n$cc = $_POST['VariableFromSilverlight'];\n$key = 'Password';\n$iv = 'PasswordSalt';\n$length = strlen($cc);\n$cipher = mcrypt_module_open(\"rijndael-128\", '', 'cbc', '');\n$ks = mcrypt_enc_get_key_size($cipher);\n$key = substr(md5($key), 0, $ks);\nmcrypt_generic_init($cipher, $key, $iv);\n$decrypted = mdecrypt_generic($cipher, $cc);\nmcrypt_generic_deinit($cipher);\necho \"decrypted: \" . substr($decrypted, 0, $length) . \"\\n\";\n```\n\n    ", "Answer": "\r\nWhy don't you use the openssl PHP extension ? It works fine (I use it for DES and 3DES, it works like a charm).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "reimplementing crypto-js in python cryptography\r\n                \r\nI want to implement the following code (written in JavaScript, using the crypto-js library) in Python (using the cryptography package)\n```\nconst data = 'base 64 encoded encrypted data';\nconst salt = 'XB7sHH26Hn&FmPLxnjGccKTfPV(yk';\nconst pass = '.. password ..';\nconst psw = `${PBKDF2(pass, salt)}(tXntTbJFzh]4EuQVmjzM9GXHCth8`;\nlet data = AES.decrypt(data, psw).toString(enc.Utf8);\n```\n\nHere's what I have so far on the python front.\n```\ndata = 'base 64 encoded encrypted data'\npassword = b'.. password ..'\nsalt = b'XB7sHH26Hn&FmPLxnjGccKTfPV(yk'\nkdf = PBKDF2HMAC(\n    algorithm=hashes.SHA1(),\n    length=16,\n    salt=salt,\n    iterations=1\n)\npsw = kdf.derive(password)\n\nkey = lh.hex() + '(tXntTbJFzh]4EuQVmjzM9GXHCth8'\nkey = key.encode('utf-8')\ncipher = Cipher(algorithms.AES(key), modes.CBC([0] * 16))\ndecryptor = cipher.decryptor()\nres = decryptor.update(data) + decryptor.finalize()\n\n```\n\nThere are several things amiss:\n\nCurrently, the values of ```\nkey```\n and ```\npsw```\n are the same, but I don't know if crypto-js has hex encoded strings as the data format.\nI don't know what to supply as the IV, not sure what this is in crypto-js.\nThe ```\nCipher```\n creation will fail with ```\nValueError: Invalid key size (488) for AES.```\n The key size (```\nlen(key)```\n) is 61 bytes.\n\n    ", "Answer": "\r\nThe CryptoJS code uses the key derivation function PBKDF2 to derive key material from a constant salt and a password. This key material is passed to ```\nCryptoJS.AES.encrypt()```\n as string, whereby it is interpreted as password and the internal key derivation function ```\nEVP_BytesToKey()```\n is applied.\n```\nEVP_BytesToKey()```\n generates a random 8 bytes salt during encryption and derives a 32 bytes key and a 16 bytes IV based on salt and password.\nThe result of ```\nCryptoJS.AES.encrypt(...).toString()```\n is the Base64 encoding of the ASCII encoding of ```\nSalted__```\n plus the salt plus the actual ciphertext.\nIn the posted Python code there are the following flaws:\n\nTypo: ```\nlh```\n is not defined and must be replaced by ```\npsw```\n\n\nSeparation of salt and ciphertext and derivation of key and IV are missing. This needs to be implemented:\n```\nimport base64\n...\nencrypted = base64.b64decode(data)\nsalt = encrypted[8:16]\nciphertext = encrypted[16:]\nkeyIv = bytesToKey(salt, key)\nkey = keyIv[:32]\niv = keyIv[32:]\n```\n\nwith the following possible implementation for ```\nEVP_BytesToKey()```\n:\n```\nfrom cryptography.hazmat.primitives import hashes\n...\ndef bytesToKey(salt, password):\n  bytes = b''\n  last = b''\n  while len(bytes) < 48:\n    md5 = hashes.Hash(hashes.MD5())\n    md5.update(last + password + salt)\n    last = md5.finalize()\n    bytes += last\n  return bytes\n```\n\n\nDuring decryption, the separated ciphertext and the derived key and IV must be used:\n```\ncipher = Cipher(algorithms.AES(key), modes.CBC(iv)) \ndecryptor = cipher.decryptor()\nres = decryptor.update(ciphertext) + decryptor.finalize()  \n```\n\n\nThe padding must be removed:\n\n\n```\n  from cryptography.hazmat.primitives import padding\n  ...\n  unpadder = padding.PKCS7(128).unpadder()\n  decrypted = unpadder.update(res) + unpadder.finalize()\n  print(decrypted.decode('utf8'))\n```\n\n\nThe design of the CryptoJS code for deriving the key and IV is unnecessarily cumbersome and should be changed to apply exclusively PBKDF2 in conjunction with a random salt. ```\nEVP_BytesToKey()```\n is considered insecure, so it should be avoided entirely. A constant salt is a vulnerability. Instead, a random salt should be generated during encryption with a length of e.g. 16 bytes. Salt and ciphertext should be concatenated, e.g. ```\nsalt|ciphertext```\n.\nAlternatively, the IV can be decoupled from the key derivation by generating it randomly. In this case, the concatenation would be e.g. ```\nsalt|iv|ciphertext```\n. Note that salt and IV are not secret, so their disclosure is not critical.\nIn this design, key and IV are thus derived directly with PBKDF2, whereby the iteration count in particular must be increased to the maximum while maintaining acceptable performance (1 is much too low). As digest, SHA256 should be used instead of the less secure SHA1 (although SHA1 is not a known security risk in the context of HMAC).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How i can use Cryptography library to encryption files in python\r\n                \r\nI'm trying to encrypt and decrypt PDF file using ```\ncrypto```\n and everything works well but I need to use another library like ```\nCryptography```\n https://github.com/pyca/cryptography .\n\nHow I can use ```\nCryptography```\n library to encrypt and decrypt files like PDF file because I search a lot and I can't find one example of how I can use ```\nCryptography```\n with files.\n\nAny example may help.\n    ", "Answer": "\r\nTo answer your question Cryptography's documentation could potentially help you with this. I used the library to encrypt text files, python files, i not sure about pdf's though. But the doc's were helpful.  https://cryptography.io/en/latest/\nPlus this website also helped me out as well.\nhttps://www.thepythoncode.com/article/encrypt-decrypt-files-symmetric-python\nIt implements the Fernet key type encryption which is symmetric encryption.\nThere is asymmetric encryption (I believe this type uses public and private keys) you can as far i know encrypt strings with this type of encryption. As far as encrypting files with this type of encryption i am not sure about that as i have not done any research on that my self lol!\nI was messing around with some of the functions in this library and found some useful things in it. Hope this helps.\np.s. Stay away from the hazmat section of this library. ONLY use this if you really know what your doing in terms of cryptography!\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Java to swift conversion in cryptography\r\n                \r\nI have a java code, where i used cryptography( Encryption and decryption). I want to use the same process on swift code. \n//my java code for encryption in crypto class\n\n```\nclass Crypto {\n\n        private SecretKeySpec skc;\n        private final static char[] hexArray = \"0123456789abcdef\".toCharArray();\n        String TAG = \"TAG\";\n        @RequiresApi(api = Build.VERSION_CODES.O)\n        Crypto(String token) {\n            try {\n                MessageDigest md = MessageDigest.getInstance(\"MD5\");\n                byte[] thedigest = md.digest((\"YourStrongKey\" + token).getBytes(\"UTF-8\"));\n\n\n                skc = new SecretKeySpec(thedigest, \"AES/ECB/PKCS5Padding\");\n\n            } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n                e.printStackTrace();\n            }\n        }\n  private byte[] hexStringToByteArray(String s) {\n            int len = s.length();\n            byte[] data = new byte[len/2];\n            for(int i = 0; i < len; i+=2){\n                data[i/2] = (byte) ((Character.digit(s.charAt(i), 16) << 4) + Character.digit(s.charAt(i+1), 16));\n            }\n            return data;\n        }\n\n    public byte[] encrypt(String clear) throws Exception {\n            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");\n            cipher.init(Cipher.ENCRYPT_MODE, skc);\n            byte[] input = clear.getBytes(\"utf-8\");\n            byte[] cipherText = new byte[cipher.getOutputSize(input.length)];\n            int ctLength = cipher.update(input, 0, input.length, cipherText, 0);\n            cipher.doFinal(cipherText, ctLength);\n            Log.d(TAG, \"encrypt: ciper: \"+cipher.toString());\n            return cipherText;\n        }\n\n        public byte[] decrypt(byte[] buf, int offset, int len) throws Exception {\n            Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");\n            cipher.init(Cipher.DECRYPT_MODE, skc);\n            byte[] dec = new byte[cipher.getOutputSize(len - offset)];\n            int ctLength = cipher.update(buf, offset, len - offset, dec, 0);\n            cipher.doFinal(dec, ctLength);\n            Log.d(TAG, \"encrypt: dec: \"+dec.toString());\n            return dec;\n        }\n    }\n```\n\n\n//uses of java form main activity class\n\n```\nCrypto crypto;\nString token = \"Jpc3MiOiJodHRwczovL3NlY3VyZXRva2\";\ncrypto = new Crypto(token);\n\nJSONObject msg = new JSONObject();\nmsg.put(\"phoneData\", \"data1\"); \nmsg.put(\"countryData\", \"data2\");\n\nLog.d(TAG, \"startHttpApiRequest: msg: \"+msg);\nString ss = msg.toString();\nbyte[] msgD = crypto.encrypt(ss);\n```\n\n\n//my swift code on playground\n\n```\nclass SecretSpec {\n    var algorithm: String = \"AES/ECB/PKCS7padding\"\n    var key = [UInt8]()\n\n    func secretSpec(key: [UInt8], algorithm: String){\n        self.key = key\n        self.algorithm = algorithm\n    }\n\n    func getAlgorithm() -> String {\n        return self.algorithm\n    }\n\n    func getFormat() -> String {\n        return \"RAW\"\n    }\n\n    func getEncoded() -> [UInt8] {\n        return self.key\n    }\n\n    func hashCode() -> Int {\n        var retval: Int = 0\n        for i in 1...key.count-1 {\n            retval = retval + Int(key[i]) * Int(i)\n        }\n\n        if (algorithm.lowercased() == \"tripledes\"){\n            retval = retval ^ Int(\"desede\".hashValue)\n            return retval\n        }else{\n            retval = retval ^ Int(algorithm.lowercased().hashValue)\n            return retval\n        }\n    }\n}\n\n\nextension String {\n    func aesEncrypt(key: String) -> String? {\n        if let keyData = key.data(using: String.Encoding.utf8),\n            let data = self.data(using: String.Encoding.utf8),\n            let cryptData = NSMutableData(length: Int((data.count)) + kCCBlockSizeAES128) {\n\n            let keyLength = size_t(kCCKeySizeAES128)\n            let operation: CCOperation = UInt32(kCCEncrypt)\n            let algoritm: CCAlgorithm = UInt32(kCCAlgorithmAES128)\n            let options: CCOptions = UInt32(kCCOptionECBMode + kCCOptionPKCS7Padding)\n\n            var numBytesEncrypted :size_t = 0\n\n            let cryptStatus = CCCrypt(operation, algoritm, options,\n                                      (keyData as NSData).bytes,keyLength,nil, (data as NSData).bytes, data.count,cryptData.mutableBytes, cryptData.length,&numBytesEncrypted)\n\n            if UInt32(cryptStatus) == UInt32(kCCSuccess) {\n                cryptData.length = Int(numBytesEncrypted)\n\n                var bytes = [UInt8](repeating: 0, count: cryptData.length)\n                cryptData.getBytes(&bytes, length: cryptData.length)\n\n                var hexString = \"\"\n                for byte in bytes {\n                    hexString += String(format:\"%02x\", UInt8(byte))\n                }\n                return hexString\n            }\n            else {\n                return nil\n            }\n        }\n        return nil\n    }\n}\n\nfunc MD5(_ string: String) -> String? {\n    let length = Int(CC_MD5_DIGEST_LENGTH)\n    var digest = [UInt8](repeating: 0, count: length)\n\n    if let d = string.data(using: String.Encoding.utf8) {\n        _ = d.withUnsafeBytes { (body: UnsafePointer<UInt8>) in\n            CC_MD5(body, CC_LONG(d.count), &digest)\n        }\n    }\n\n    return (0..<length).reduce(\"\") {\n        $0 + String(format: \"%02x\", digest[$1])\n    }\n}\n\n\n\nvar token = \"YourStrongKeyJpc3MiOiJodHRwczovL3NlY3VyZXRva2\"    \nvar algorithm: String = \"AES/ECB/PKCS5padding\"    \nvar tokenRes = MD5(token)    \nlet digest = hexstringToBytes(tokenRes!)\nvar skcSpec = SecretSpec()\nskcSpec.secretSpec(key: digest!, algorithm: algorithm)\nprint(\"hello: \\(skcSpec)\")\n\nlet msg: NSMutableDictionary = NSMutableDictionary()    \nmsg.setValue(\"data1\", forKey: \"phoneData\")\nmsg.setValue(\"data2\", forKey: \"countryData\")\n\nlet msgData: NSData\nvar msgStr: String = \"\"\nvar requestUrl: String = \"\"\n\ndo {\n    msgData = try JSONSerialization.data(withJSONObject: msg, options: JSONSerialization.WritingOptions()) as NSData\n    msgStr = NSString(data: msgData as Data, encoding: String.Encoding.utf8.rawValue)! as String\n\n} catch _ {\n    print (\"JSON Failure\")\n}\nvar str = skcSpec.getEncoded()\nprint(str)\n\nlet skc = NSString(bytes: str, length: str.count, encoding: String.Encoding.ascii.rawValue)! as String\n\nlet eneMsg = msgStr.aesEncrypt(key: skc)!\nprint(\"encoded: \\(eneMsg)\")\n```\n\n\nit does not gives me the same output. please help me to finding same output. nb: java code is fixed for encryption and decryption. \n\nOutputs:\n\n\n  in java:\n  ffe957f00bdd93cfe1ef1133993cc9d2d8682310c648633660b448d92098e7fa07ae25f600467894ac94ccdcbe4039b8\n  \n  in swift:\n  2e130be30aa3d8ff7fdc31dc8ffe1c39afe987ccbf8481caed9c78b49624a31c68df63a899df130128af6852c82d9aea\n\n    ", "Answer": "\r\nI have tried to convert your ```\nCrypto```\n class directly into Swift, and got this:\n\n```\nimport Foundation\nimport CommonCrypto\n\nfunc MD5(_ data: Data) -> Data {\n    let length = Int(CC_MD5_DIGEST_LENGTH)\n    var digest = Data(count: length)\n\n    data.withUnsafeBytes {bytes in\n        _ = digest.withUnsafeMutableBytes {mutableBytes in\n            CC_MD5(bytes.baseAddress, CC_LONG(bytes.count), mutableBytes.bindMemory(to: UInt8.self).baseAddress)\n        }\n    }\n\n    return digest\n}\n\nfunc hexStringToData(_ s: String) -> Data {\n    let len = s.count\n    var data = Data(count: len/2)\n    var start = s.startIndex\n    for i in 0..<len/2 {\n        let end = s.index(start, offsetBy: 2)\n        data[i] = UInt8(s[start..<end], radix: 16)!\n        start = end\n    }\n    return data\n}\n\nclass Crypto {\n\n    private var key: Data\n\n    init(_ token: String) {\n        let theDigest = MD5((\"YourStrongKey\" + token).data(using: .utf8)!)\n\n        key = theDigest\n\n    }\n\n    public func encrypt(_ clear: String) -> Data? {\n        let input = clear.data(using: .utf8)!\n        var cipherText = Data(count: input.count + kCCBlockSizeAES128)\n        let keyLength = size_t(kCCKeySizeAES128)\n        assert(key.count >= keyLength)\n        let operation: CCOperation = UInt32(kCCEncrypt)\n        let algoritm: CCAlgorithm = UInt32(kCCAlgorithmAES128)\n        let options: CCOptions = UInt32(kCCOptionECBMode + kCCOptionPKCS7Padding)\n\n        var ctLength: size_t = 0\n\n        let cryptStatus = key.withUnsafeBytes {keyBytes in\n            input.withUnsafeBytes {inputBytes in\n                cipherText.withUnsafeMutableBytes {mutableBytes in\n                    CCCrypt(operation, algoritm, options,\n                            keyBytes.baseAddress, keyLength, nil,\n                            inputBytes.baseAddress, inputBytes.count,\n                            mutableBytes.baseAddress, mutableBytes.count,\n                            &ctLength)\n                }\n            }\n        }\n        if cryptStatus == CCCryptorStatus(kCCSuccess) {\n            cipherText.count = Int(ctLength)\n            return cipherText\n        } else {\n            return nil\n        }\n    }\n\n    public func decrypt(_ buf: Data, _ offset: Int, _ len: Int) -> Data? {\n        var dec = Data(count: len)\n        let keyLength = size_t(kCCKeySizeAES128)\n        let operation: CCOperation = UInt32(kCCDecrypt)\n        let algoritm: CCAlgorithm = UInt32(kCCAlgorithmAES128)\n        let options: CCOptions = UInt32(kCCOptionECBMode + kCCOptionPKCS7Padding)\n\n        var ctLength :size_t = 0\n\n        let cryptStatus = key.withUnsafeBytes {keyBytes in\n            buf.withUnsafeBytes {inputBytes in\n                dec.withUnsafeMutableBytes {mutableBytes in\n                    CCCrypt(operation, algoritm, options,\n                            keyBytes.baseAddress, keyLength, nil,\n                            inputBytes.baseAddress, inputBytes.count,\n                            mutableBytes.baseAddress, mutableBytes.count,\n                            &ctLength)\n                }\n            }\n        }\n        if cryptStatus == CCCryptorStatus(kCCSuccess) {\n            dec.count = Int(ctLength)\n            return dec\n        } else {\n            return nil\n        }\n    }\n}\nlet token = \"Jpc3MiOiJodHRwczovL3NlY3VyZXRva2\"\nlet crypto = Crypto(token)\n\nlet msg = [\n    \"phoneData\": \"data1\",\n    \"countryData\": \"data2\",\n]\nlet msgData = try! JSONSerialization.data(withJSONObject: msg)\n\nlet ss = String(data: msgData, encoding: .utf8)!\nprint(ss) //->{\"phoneData\":\"data1\",\"countryData\":\"data2\"}\n//### Be careful, this may be different than the result of JSONObject#toString() in Java.\n//### Sometimes, outputs->{\"countryData\":\"data2\",\"phoneData\":\"data1\"}\n\nlet msgD = crypto.encrypt(ss)!\nprint(msgD as NSData) //-><ffe957f0 0bdd93cf e1ef1133 993cc9d2 24e8b9a1 162520e5 54a3d8af 8f478db7 07ae25f6 00467894 ac94ccdc be4039b8>\n//### When `ss` is {\"phoneData\":\"data1\",\"countryData\":\"data2\"}\n\nlet decrypted = crypto.decrypt(msgD, 0, msgD.count)!\nprint(String(data: decrypted, encoding: .utf8)!) //->{\"phoneData\":\"data1\",\"countryData\":\"data2\"}\n```\n\n\n\n\nIn your Java code, your key String (```\n\"YourStrongKey\" + token```\n) gets two conversions until used as a binary key data for AES:\n\n```\n key: \"YourStrongKey\" + token\n ↓\n UTF-8 bytes\n ↓\n MD5 digest\n```\n\n\nBut, in your Swift code, you are converting the key more times:\n\n```\n token: \"YourStrongKeyJpc3MiOiJodHRwczovL3NlY3VyZXRva2\"\n ↓\n UTF-8 bytes (`d` in `MD5(_:)`)\n ↓\n MD5 digest\n ↓\n binary to HEX String conversion (return value from `MD5(_:)`)\n ↓\n UTF-8 bytes (`keyData` in `aesEncrypt(key:)`)\n```\n\n\nThere's no binary to HEX String conversion in your Java code and you should have not done that.\n\n\n\nBy the way, ECB is not considered to be a safe way to encrypt, you should better update your Java code.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography Python: Diffie-Hellman key exchange implementation\r\n                \r\nIm currently trying to build an implementation of the Ephemeral Diffie-Hellman algorithm using the python cryptography module. It's important for our purposes that the users are authenticated. Both Alice and Bob have a public-private key pair and a certificate signed by a certificate authority to be able to verify their public key and link it to their identity.\n\nUsing Authenticated DH means that the sent messages (see image) will be signed using the above private key.\n\nThe documentation on DH using the python cryptography library can be found here:\nhttps://cryptography.io/en/latest/hazmat/primitives/asymmetric/dh/\n\nHowever, I can not seem to understand what the described exchange function actually does.\nIs anyone able to explain to me where to situate it in the DH-algorithm?\nPreferably using the analogy of the following image:\n\n\n\nThanks in advance!\n    ", "Answer": "\r\nIn their example (from the POV of Alice) the ```\nprivate_key```\n is the orange paint, and ```\npeer_public_key```\n is the light blue paint. ```\nshared_key```\n is the brown paint at the end. That means of course that you need to do this twice, once for Bob, and once for Alice.\n\nExample code in python2:\n\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import dh\n\nparameters = dh.generate_parameters(generator=2, key_size=512, backend=default_backend())\n\na_private_key = parameters.generate_private_key()\na_peer_public_key = a_private_key.public_key()\n\nb_private_key = parameters.generate_private_key()\nb_peer_public_key = b_private_key.public_key()\n\na_shared_key = a_private_key.exchange(b_peer_public_key)\nb_shared_key = b_private_key.exchange(a_peer_public_key)\n\nprint 'a_secret: '+a_shared_key\nprint 'b_secret: '+b_shared_key\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography module save/load RSA keys to/from file\r\n                \r\nUsing the Cryptography module for Python,\n\nI want to save my generated private key in a file, to use it later on. \n\nBut from the docs I was unable to find the method needed for this.\n\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\n\n# Working RSA encryption you can run for yourself\nMESSAGE = 'I am a very secret message'\n\n# Create private key\nprivate_key = rsa.generate_private_key(\n    public_exponent=65537,\n    key_size=2048,\n    backend=default_backend()\n)\n\n# Create public key\npublic_key = private_key.public_key()\n\n# Encrypt\nciphertext = public_key.encrypt(\n    MESSAGE,\n    padding.OAEP(\n        mgf=padding.MGF1(algorithm=hashes.SHA1()),\n        algorithm=hashes.SHA1(),\n        label=None\n    )\n)\n\n# Encrypted text\nprint ciphertext\n\n# Decrypt\nplaintext = private_key.decrypt(\n    ciphertext,\n    padding.OAEP(\n        mgf=padding.MGF1(algorithm=hashes.SHA1()),\n        algorithm=hashes.SHA1(),\n        label=None\n    )\n)\n\n# Decrypted text\nprint plaintext\n\n# Print human readable key\npem = private_key.private_bytes(\n    encoding=serialization.Encoding.PEM,\n    format=serialization.PrivateFormat.TraditionalOpenSSL,\n    encryption_algorithm=serialization.NoEncryption()\n)\npem_data = pem.splitlines()\nprint pem_data\n\n\n# How to Save//Load\n```\n\n\nI know how to generate keys, but how can I save correctly to a file. By just storing the ```\npem_data```\n in a file and later on loading from that file with\n```\nload_pem_public_key```\n?\n\nSince Cryptography is still new for me, I would like to know the correct way of storing RSA keys in a file.\n\nThis is my current try,  but I get an error.\n\n```\nValueError: Could not deserialize key data.```\n\n\n```\nif os.path.exists('key.pem'):\n    print 'file exist'\nelse:\n    f = open(os.path.join(__location__, 'key.pem'), 'w')\n    for i in pem_data:\n       f.write(i)\n    f.close()\n\nwith open(os.path.join(__location__, 'key.pem'), \"rb\") as key_file:\n   private_key = serialization.load_pem_private_key(\n        key_file.read(),\n        password=None,\n        backend=default_backend()\n    )\n```\n\n    ", "Answer": "\r\nYour method of saving the private key throws away the newlines which ```\nload_pem_private_key()```\n expects to see. I have modified your example slightly to illustrate this. The method ```\nsave_key_bad()```\n is your method, and the method ```\nsave_key()```\n shows a simple correct method.\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.serialization import load_pem_private_key\n\n\ndef gen_key():\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n    return private_key\n\n\ndef save_key(pk, filename):\n    pem = pk.private_bytes(\n        encoding=serialization.Encoding.PEM,\n        format=serialization.PrivateFormat.TraditionalOpenSSL,\n        encryption_algorithm=serialization.NoEncryption()\n    )\n    with open(filename, 'wb') as pem_out:\n        pem_out.write(pem)\n\n\ndef save_key_bad(pk, filename):\n    pem = pk.private_bytes(\n        encoding=serialization.Encoding.PEM,\n        format=serialization.PrivateFormat.TraditionalOpenSSL,\n        encryption_algorithm=serialization.NoEncryption()\n    )\n    pem_data = pem.splitlines()\n    with open(filename, 'wb') as pem_out:\n        for line in pem_data:\n            pem_out.write(line)\n\n\ndef load_key(filename):\n    with open(filename, 'rb') as pem_in:\n        pemlines = pem_in.read()\n    private_key = load_pem_private_key(pemlines, None, default_backend())\n    return private_key\n\n\nif __name__ == '__main__':\n    pk = gen_key()\n    filename = 'privkey.pem'\n    save_key(pk, filename)\n    pk2 = load_key(filename)\n    save_key_bad(pk, filename)\n    pk3 = load_key(filename)\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography with ASCII in python 3\r\n                \r\nI am trying to make a cryptography program.\nWhen I run this program and insert for example ```\nabc```\n with shift 2 it will return ```\ncde```\n which is good. But I tried to insert ```\nxyz```\n aswell with shift 3 and instead of shifting correctly ```\nabc```\n it returns ```\naaa```\n. This also happens if I use shift 2 then it returns ```\nzaa```\n.\nHow can I adjust my program to correctly start from the beginning when the alphabet is done with the ASCII tabel?\n```\nshift = int(input(\"Please insert a number you want to shift the characters with: \"))\n\nend = \"\"\n\nfor x in alf:\n    ascii = ord(x)\n\nif ascii >= 97 and ascii <= 122:\n    res = ascii + shift\n    if res > 122:\n        res = 0 + 97\n        min = res + shift\n    end = end + chr(min)\n\nprint (end)                                \n```\n\n    ", "Answer": "\r\nIt is because your logic expression is wrong. Here is an example that will allow any positive integer as right shift, beginning again at a again. And it can be very much optimized (hint: use modulo operator), but this is with minor changes to your code and numerics written out loud.\n\n```\nfor x in alf:\n  ascii = ord(x)\n\n  if ascii >= 97 and ascii <= 122:\n    res = ascii + shift\n    while res > 122:\n      res = res - (122 - 97) - 1\n    end = end + chr(res)\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python - Store cryptography keys in SQL database\r\n                \r\nWorking on a \"Password Saver\" and will be using the module \"cryptography\" to encrypt the passwords. I need to save the key you generate from cryptography in the database as well, but I am not sure how you actually do this.\nDone some google searches myself and it seems to be called a \"byte string\"? Not really sure what it is though.\nThis is what I have currently:\n```\nfrom cryptography.fernet import Fernet\nimport mysql.connector\n\ndb = mysql.connector.connect(\n    host='localhost',\n    user='root',\n    password='',\n    database='password_saver'\n)\n\ncursor = db.cursor()\n\nkey = Fernet.generate_key()\n\ncursor.execute(f\"INSERT INTO `encryption`(`encryption_key`) VALUES ({key})\")\n```\n\nWith that code I am getting this error:\n```\nmysql.connector.errors.ProgrammingError: 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'b'cryptographys key is here')' at line 1```\n\nNot sure if there is a specific data type I need to use for SQL or if it is something I need to do in python?\n    ", "Answer": "\r\nTL;DR\nUse: ```\nkey = Fernet.generate_key().decode()```\n, and change the query to a parameterised query.\n\nThere are two key elements in play here:\n\nWhat is a byte string?\nSQL injection\n\n\nByte String:\nGiven the rule that everything in a computer is a number, a 'byte string' is just that, it's a string of bytes - which is not human readable. However, the reason we can read ```\nb'my string'```\n is because Python is doing us a favour in converting the bytes back into a readable string. But under the hood, it's just a string of bytes.\nFurther (interesting) reading on the subject\nAs for converting the byte string into a string (```\nstr```\n), something MySQL can store in a ```\nVARCHAR```\n field, it's as simple as:\n```\nb'my string'.decode() \n```\n\nSo in your case, the key will be:\n```\nkey = Fernet.generate_key().decode()\n```\n\nAnother option:\nOr, if you want to store the raw byte string in the database, you can convert your ```\nencryption_key```\n column to a ```\nBLOB```\n data type. This is a 'Binary Large OBject' field, used to store bytes. However, when it comes time to use the key value, you'll have to convert it into a string. So might as well do the conversion up front, and just store the string.\n\nSQL Injection:\nPlease read up on this, I won't get into it here - but it's important.\nThe short story is use parameterised queries.\nChange this:\n```\ncursor.execute(f\"INSERT INTO `encryption` (`encryption_key`) VALUES ({key})\")\n```\n\nTo this:\n```\ncursor.execute(\"INSERT INTO `encryption` (`encryption_key`) VALUES (%s)\", (key,))   \n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "cryptography-40.0.2-pp39-pypy39_pp73-win_amd64.whl is not a supported wheel on this platform\r\n                \r\nAm trying to install cryptography-40.0.2-pp39-pypy39_pp73-win_amd64.whl on a server that is not connected to the internet. Have upgraded to the latest version of pip 23.1.\nThis is Windows Server 2016. Python 3.10\nd:\\python\\software\\cp310>pip list\nPackage        Version\n\ncffi           1.15.1\ncx-Oracle      8.3.0\nDateTime       5.1\npip            23.1\npycparser      2.21\npyodbc         4.0.34\npytz           2022.2.1\nsetuptools     65.5.0\nzope.event     4.5.0\nzope.interface 6.0\nWhen I run pip install cryptography-40.0.2-pp39-pypy39_pp73-win_amd64.whl I get this error\nERROR: cryptography-40.0.2-pp39-pypy39_pp73-win_amd64.whl is not a supported wheel on this platform.\nI have reviewed the documentation at https://pypi.org/project/cryptography/ to no avail. It does not mention the wheel version that I could find and only instructs on how to install when connected to the interweb, which does not apply in this instance.\nI have used older versions of cryptography with older versions of python. But want to upgrade to 3.10 to take advantage of the 64 bit version of cx_oracle. cryptography is the final package I need! Yikes, what is wrong?\nIs there a version of cryptography for cp310? Perhaps that is issue.\nAm trying to install cryptography-40.0.2-pp39-pypy39_pp73-win_amd64.whl on a server that is not connected to the internet. Have upgraded to the latest version of pip 23.1.\nThis is Windows Server 2016. Python 3.10\nd:\\python\\software\\cp310>pip list\nPackage        Version\n\ncffi           1.15.1\ncx-Oracle      8.3.0\nDateTime       5.1\npip            23.1\npycparser      2.21\npyodbc         4.0.34\npytz           2022.2.1\nsetuptools     65.5.0\nzope.event     4.5.0\nzope.interface 6.0\nWhen I run pip install cryptography-40.0.2-pp39-pypy39_pp73-win_amd64.whl I get this error\nERROR: cryptography-40.0.2-pp39-pypy39_pp73-win_amd64.whl is not a supported wheel on this platform.\nI have reviewed the documentation at https://pypi.org/project/cryptography/ to no avail. It does not mention the wheel version that I could find and only instructs on how to install when connected to the interweb, which does not apply in this instance.\nI have used older versions of cryptography with older versions of python. But want to upgrade to 3.10 to take advantage of the 64 bit version of cx_oracle. cryptography is the final package I need! Yikes, what is wrong?\nIs there a version of cryptography for cp310? Perhaps that is issue.\nBob's your uncle. There it's different.\n    ", "Answer": "\r\nThanks to everyone who replied. I ended up doing a shake and bake on module versions and landed on 3.9 being the one that let me thread this needle.  Kind of wish cryptography was available for the latest version of Python. What with not having internet access and multiple dependencies that would be automatically satisfied if it was connected, this is a very time consuming process.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "private encrypt (generate signature) using cryptography/ pycrypto as generated by M2Crypto\r\n                \r\nI am trying to generate a signature for a payload. My tech stack is in Python3.6, which provides library like cryptography or pycrypto. Problem is, I am unable to recreate the function ```\nprivate_encrypt```\n of M2Crypto in libraries like cryptography. The signature generated by M2Crypto is accepted by my peer end as valid signature, while the ones generated by either two libraries are discarded saying invalid signature. \n\nI have created a minimal POC using python2.7 to make my case. \n\n```\nimport base64\n\npayload = b'This is the payload for which I wish to generate signature'\n\n### Using library cryptography ###\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization, hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\n\nwith open(\"private_key\", \"rb\") as key_file:\n    private_key = serialization.load_pem_private_key(\n        key_file.read(),\n        password=None,\n        backend=default_backend()\n    )\n\n\nsignature = private_key.sign(\n    payload,\n    padding=padding.PKCS1v15(),\n    algorithm=hashes.SHA1()\n)\nencoded_signature = base64.b16encode(signature)\nprint(\"Signature using cryptography - \", encoded_signature)\n\n\n### Using library pycrypto ###\nfrom Crypto.Signature import PKCS1_v1_5, PKCS1_PSS\nfrom Crypto.Hash import SHA\nfrom Crypto.PublicKey import RSA\n\nkey = RSA.importKey(open('private_key').read())\nh = SHA.new(payload)\nsigner = PKCS1_v1_5.new(key)\nsignature = signer.sign(h)\nencoded_signature = base64.b16encode(signature)\nprint(\"Signature using pycrypto - \", encoded_signature)\n\n\n### Using M2Crypto ###\nimport hashlib\nimport M2Crypto\ndigest = hashlib.sha1(payload).hexdigest()\nprivate_key = M2Crypto.RSA.load_key('./private_key')\n\n# Encrypt digest using private key and encode in Hex (Base16)\nencoded_signature = base64.b16encode(private_key.private_encrypt(\n    digest, M2Crypto.RSA.pkcs1_padding))\nprint(\"Signature using M2Crypto - \", encoded_signature)\n```\n\n\nThe signatures created by ```\ncryptography```\n and ```\nCrypto```\n are same, and different from one generated by ```\nM2Crypto```\n. TIA. \n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Hybrid Cryptography in hybrid mobile application\r\n                \r\nI would like to implement Hybrid cryptography in client side using javascript. I found this tutorial for server side coding. Now i'm done with server side part, but stuck in client side development. Whether there is any pre-build cordova / javascript lib available for this ?  I'm using sencha touch framework for front end development.\n    ", "Answer": "\r\nYou can use https://github.com/brix/crypto-js\n\nfor client side data decryption.\n\n\n  However, when sending response back to client side, you will have to\n  combine encrypted data + encrypted key in single response with some\n  kind of separator and retrieve same at client side and then decrypt\n  them. One simple practice I can suggest is to send response in\n  following JSON format:\n\n\n```\n{\n  data: encrypted_data_with_dynamically_generated_key,\n  key: dynamically_generated_key_encrypted_with_client_private_key\n}\n```\n\n\nWith this you won't require to put data separator to get key and data from data.\n\nAdditionally, if you want another layer of security to store client key securely, you can use following cordova plugin: https://github.com/Crypho/cordova-plugin-secure-storage\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography and 3rd party content for submitting iOS apps\r\n                \r\nI have 2 questions:\n\n\nWhen submitting an iOS app to the App Store, Apple asks:\n\n\n\n  Is your app designed to use cryptography or does it contain or incorporate cryptography? (Select Yes even if your app is only utilizing the encryption available in iOS or macOS.)\n\n\nIf my app uses Core Data, is it counted as cryptographic?\n\n\nApple also asks if the app uses 3rd party libraries. Are open-sourced projects on GitHub counted as \"3rd party\"\n\n\nThanks!\n    ", "Answer": "\r\nregarding to 1st question , No Core Data is not counted as cryptographic\n2nd question, No open-sourced projects are not counted as 3rd party.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing cryptography 2.2.1 or higher from wheel\r\n                \r\nI am trying to install cryptography 2.2.1 or higher from a wheel. Pip is no longer able to connect to the pypi site due to an SSL error. The suggestion is to upgrade python. But the software I am supporting (ArcGIS 10.2.1) uses python 2.7.5. So, cannot change python versions. Therefore, I have been using downloaded wheel files for my installs. But I can not get cryptography to install.\n\nPip:\n\nCould not find a version that satisfies the requirement enum34; python_version < \"3\"\n\nIt looks like pip is looking for a version of python that is less than 3. Suggestions?\n    ", "Answer": "\r\ncheck the wheel file you are using according to your system as both cryptography and enum64 supports 2.7 .\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography Key Verification fails\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                This question was migrated from Information Security Stack Exchange because it can be answered on Stack Overflow.\r\n                                Migrated 24 days ago.\r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n\r\n\r\n    \r\n\r\nI'am trying to get a feel for Elliptic Curve Cryptography. I wrote a small Python program below to generate key material but I don't get the same result for ```\ny_squared```\n and ```\nQ.y^2```\n. I'am using the parameters from 256-Bit Random ECP Group (RFC 5903 page 4) and the implementation steps Key Pair Generation Using Extra Random Bits (NIST.SP.800-56Ar3 page 30).\n```\n# RFC 5903 256-Bit Random ECP Group page 4\n# NIST.SP.800-56Ar3 Key Pair Generation Using Extra Random Bits page 30\nimport sympy\nimport os\n\ns = 128\np = pow(2, 256) - pow(2, 224) + pow(2, 192) + pow(2, 96) - 1\ngroup_prime = int.from_bytes(bytes.fromhex('FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF'), byteorder='big')\nassert p == group_prime\n\nx, b = sympy.symbols('x, b')\necurve = x**3 - 3*x + b \n\ngroup_b = int.from_bytes(bytes.fromhex('5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B'), byteorder='big')\ngroup_order = int.from_bytes(bytes.fromhex('FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'), byteorder='big')\ngx = int.from_bytes(bytes.fromhex('6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296'), byteorder='big')\ngy = int.from_bytes(bytes.fromhex('4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5'), byteorder='big')\n\nL = group_order.bit_length() + 64\nc = int.from_bytes(os.urandom(max(s, L) // 8))\n\nassert c > 0 and c < (pow(2, max(s, L)) - 1)\n\nd = (c % (group_order - 1)) + 1\nQ = (d*gx, d*gy)\ny_squared = pow(Q[1], 2, group_prime)\nprint(f\"y_squared: {y_squared}\")\nprint(f\"Q.y^2: {ecurve.subs([(x, Q[0]),(b, group_b)]) % group_prime}\")\n```\n\n    ", "Answer": "\r\nI believe the problem may be related (at least in part) to this line from your script:\n```\nQ = (d*gx, d*gy)\n```\n\nIt seems that the intention here is to implement step 7 of the process that you referenced from NIST.SP.800-56Ar3 page 30, which is:\n```\nQ = dG\n```\n\nNote here that G is a point on an elliptic curve, and d is a scalar.  So, this is elliptic curve multiplication.   EC multiplication is not as simple as simply multiplying d by gx and gy respectively.\nSee this blog post by Andrea Corbellini for a good write-up of how EC math (including EC multiplication) works.  The author also has some useful python scripts on Github that implement the methods described in the blog post.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What is the difference between signing by OpenSSL and Microsoft Cryptography libraries?\r\n                \r\nI wrote two methods for signing using RSA and SHA256, the first one with OpenSSL library and the second one with Microsoft Cryptography library.\n\nOpenSSL implementation:\n\n```\n    private string PasswordHandler(bool verify, object userdata)\n    {\n        return userdata.ToString();\n    }\n\n    private string Sign(string signParams)\n    {\n        var privateCertPath = HttpContext.Current.Server.MapPath(@\"~\\certificate.pem\");\n        string privateKey;\n\n        using (StreamReader sr = new StreamReader(privateCertPath))\n        {\n            privateKey = sr.ReadToEnd();                \n        }\n\n        OpenSSL.Crypto.RSA rsa = OpenSSL.Crypto.RSA.FromPrivateKey(new BIO(privateKey), PasswordHandler, _password);\n        //hash method\n        MessageDigest md = MessageDigest.SHA1;\n\n        BIO b = new BIO(signParams);\n        CryptoKey ck = new CryptoKey(rsa);\n\n        byte[] res1 = MessageDigestContext.Sign(md, b, ck);\n\n        return Uri.EscapeDataString(System.Convert.ToBase64String(res1));\n    }\n```\n\n\nCryptography implementation:\n\n```\n    private string Sign(string data)\n    {\n        var privateCertPath = HttpContext.Current.Server.MapPath(@\"~\\certificate.pfx\");\n\n        X509Certificate2 privateCert = new X509Certificate2(privateCertPath, _password, X509KeyStorageFlags.Exportable);\n\n        RSACryptoServiceProvider privateKey = (RSACryptoServiceProvider)privateCert.PrivateKey;\n        RSACryptoServiceProvider privateKey1 = new RSACryptoServiceProvider();\n        privateKey1.ImportParameters(privateKey.ExportParameters(true));\n\n        // Get the bytes to be signed from the string \n        var bytes = System.Text.Encoding.UTF8.GetBytes(data);\n\n        //const string sha256Oid = \"2.16.840.1.101.3.4.2.1\";\n        //HashAlgorithm algorithm = new SHA256CryptoServiceProvider();\n        //byte[] hashBytes = algorithm.ComputeHash(bytes);\n        //byte[] signature = privateKey1.SignHash(hashBytes, sha256Oid);\n\n        byte[] signature = privateKey1.SignData(bytes, \"SHA256\");\n\n        // Base 64 encode the sig so its 8-bit clean \n        return Convert.ToBase64String(signature);\n    }\n```\n\n\nSigning with OpenSSL works, generates valid digital signature but signing with Cryptography lib generates invalid signature so my question is what I implemented wrong?\n\nI tried to use different encoding but it did not help. Certificates are generated correctly.\n\nIt might by also useful to tell basic info about the .pem certificate:\n\n```\n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: DES-EDE3-CBC\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Verifying Browserid Assertions in JavaScript with Web Cryptography API\r\n                \r\nWill the additions to JavaScript runtime environment in the web browser proposed in the Web Cryptography API allow us to securely verify browserid assertions in the browser with JavaScript?\n    ", "Answer": "\r\nYou could already verify BrowserID assertions client-side in Javascript, but the problem is that you can't trust the client.\n\nA user could for example run your code through a proxy server which alters the Javascript to always claim that assertions are valid. Unless you're doing server-side verification, your server code will be vulnerable to clients claiming that everything is fine when in fact the assertion is bogus.\n\nNo browser API will change the fact that as far as the server is concerned, you cannot rely on the client doing the right thing. The server needs to do that verification itself.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Convert node.js cryptography code into dart\r\n                \r\nI need to sign message in dart using Ed25519 algorithm.\nI have such implementation in node.js, but have troubles converting it into dart.\nHere is my node.js code:\n```\n\nconst { publicKey, privateKey } = crypto.generateKeyPairSync(\"ed25519\");\n\nconst userBasePublicKey = publicKey.export({ format: 'der', type: 'spki' }).toString('base64');\nconst userBasePrivateKey = privateKey.export({ format: 'der', type: 'pkcs8' }).toString('base64');\n\nconsole.log(\"base64 private_key:\", userBasePrivateKey)\nconsole.log(\"base64 public_key:\", userBasePublicKey)\n\nconst message = 'Test message';\nconst signature = crypto.sign(null, Buffer.from(message), privateKey);\nconsole.log(\"Signature: \", signature.toString(\"base64\"));\n```\n\nOn Dart I'm using https://pub.dev/packages/cryptography.\nsource code:\n```\nimport 'package:cryptography/cryptography.dart';\nimport 'dart:convert';\n\ntest('test key pair logic', () async {\n    final algorithm = Ed25519();\n    final keyPair = await algorithm.newKeyPair();\n\n    final message = utf8.encode('Test message');\n\n    final signature = await algorithm.sign(message, keyPair: keyPair);\n\n    keyPair\n        .extractPublicKey()\n        .then((value) => print(base64.encode(value.bytes)));\n\n    keyPair\n        .extractPrivateKeyBytes()\n        .then((value) => print(base64.encode(value)));\n\n    final signatureBase64 = base64.encode(signature.bytes);\n    print(signatureBase64);\n}\n\n```\n\nOn Dart my public and private keys are 32 bytes long, but on node.js it is 44 and 48 bytes long accordingly.\nHow can I achieve same behaviour for my Dart code?\n```\nfinal publicBase64 = 'MCowBQYDK2VwAyEAhbI14Sb4SJFRUU/IuIaeZKuoEGZ1eJIJCTDBU3XH3Yo=';\nfinal privateBase64 = 'MC4CAQAwBQYDK2VwBCIEID5dnoErClBkzVC+hLi6UvrE3nq3UashcLur+nEFNrJM';\n\nfinal publicKey = SimplePublicKey(base64.decode(publicBase64), type: crypto.KeyPairType.ed25519);\n\nfinal testKeyPair = SimpleKeyPairData(base64.decode(privateBase64), publicKey: publicKey, type: crypto.KeyPairType.ed25519);\n\nfinal message = utf8.encode('Test message');\nfinal signature = await algorithm.sign(message, keyPair: testKeyPair);\n\nfinal signatureBase64 = base64.encode(signature.bytes);\nprint(signatureBase64);\n\n```\n\nAlso, if I tried to create public and private key in Dart code from generated keys in node.js, but my signature was not the same as in node.js code.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error installing cryptography on Big Sur running on Apple Silicon\r\n                \r\nI've tried to install cryptography on my brand new Air M1. But something goes wrong.\nI already tried some solutions from google but it didn't help.\nEnvironment Details:\n\nPython 3.9.1\npip 21.0.1\nmacOS BigSur 11.2 Appl1 M1\ncffi==1.14.5\nopenssl@1.1\n\nSteps to reproduce:\n```\npip3 install cryptography```\n\ntraceback:\n```\n  copying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.macosx-11-arm64-3.9/cryptography/hazmat/bindings/openssl\n  running egg_info\n  writing src/cryptography.egg-info/PKG-INFO\n  writing dependency_links to src/cryptography.egg-info/dependency_links.txt\n  writing requirements to src/cryptography.egg-info/requires.txt\n  writing top-level names to src/cryptography.egg-info/top_level.txt\n  reading manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  reading manifest template 'MANIFEST.in'\n  no previously-included directories found matching 'docs/_build'\n  warning: no previously-included files found matching 'vectors'\n  warning: no previously-included files matching '*' found under directory 'vectors'\n  warning: no previously-included files matching '*' found under directory '.github'\n  warning: no previously-included files found matching 'release.py'\n  warning: no previously-included files found matching '.coveragerc'\n  warning: no previously-included files found matching 'codecov.yml'\n  warning: no previously-included files found matching '.readthedocs.yml'\n  warning: no previously-included files found matching 'dev-requirements.txt'\n  warning: no previously-included files found matching 'tox.ini'\n  warning: no previously-included files found matching 'mypy.ini'\n  warning: no previously-included files matching '*' found under directory '.zuul.d'\n  warning: no previously-included files matching '*' found under directory '.zuul.playbooks'\n  writing manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  copying src/cryptography/py.typed -> build/lib.macosx-11-arm64-3.9/cryptography\n  running build_ext\n  generating cffi module 'build/temp.macosx-11-arm64-3.9/_padding.c'\n  creating build/temp.macosx-11-arm64-3.9\n  generating cffi module 'build/temp.macosx-11-arm64-3.9/_openssl.c'\n  running build_rust\n\n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation.html for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq.html\n      4) Ensure you have a recent Rust toolchain installed:\n         https://cryptography.io/en/latest/installation.html#rust\n      5) If you are experiencing issues with Rust for *this release only* you may\n         set the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.\n      =============================DEBUG ASSISTANCE=============================\n\n  error: Can not find Rust compiler\n  ----------------------------------------\n  ERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n```\n\n    ", "Answer": "\r\nRust currently works on m1 via\n```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh```\n\nHowever you will most likely experience another error after fixing rust.\n\nimport _cffi_backend as backend\nImportError: dlopen(/private/var/folders/fd/s3rl30nj6790c3p5df6x2_700000gn/T/pip-build-env-w44a7bqz/overlay/lib/python3.x/site-packages/_cffi_backend.cpython-3X-darwin.so, 2): no suitable image found.  Did find:\n/private/var/folders/fd/s3rl30nj6790c3p5df6x2_700000gn/T/pip-build-env-w44a7bqz/overlay/lib/python3.X/site-packages/_cffi_backend.cpython-3X-darwin.so: mach-o, but wrong architecture\n\nThe issue is discussed here where it's stated that CFFI maintainers don't support m1 macs: https://github.com/gevent/gevent/issues/1721\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "cryptography python encryption for creating password error\r\n                \r\nI have a problem in printing the encryption in file for password using cryptography, I want to encrypt the creation of master key and the login key to decrypt and check password\n```\nfrom cryptography.fernet import Fernet\n\nclass hash_password():\n    def genewrite_key():\n        key= Fernet.generate_key()\n        with open(\"pass.key\",\"wb\") as key_file:\n            key_file.write(key)\n\n    def get_key():\n        key= open(\"pass.key\",\"rb\").read()\n        return key\n\n\nclass signIn():\n    def create_masterkey(hash):\n        hash_password.genewrite_key()\n        cr_pass = input(\"Create your password so you can access your data in future and please remember it: \")\n        hash = cr_pass.encode()\n        key= hash_password.get_key()\n        a= Fernet(key)\n        txt = a.encrypt(hash)\n\n        with open('P1ssW0rd.txt', 'a') as f:\n            f.write(str(hash) +\"\\n\")     \n        if len(cr_pass)<= 6:\n            print(\"Password is too short\")\n            signIn().create_masterkey()\n        else: print(\"Passcode Created Successfully!\")\n\n    def Login():\n        \n        hash_password.genewrite_key() \n        key= hash_password.get_key()\n        a= Fernet(key)\n        login_pass = input(\"whats you passcode? \")\n        file = open(\"P1ssW0rd.txt\")\n        decoded_text = a.decrypt(hash)\n\n        if(login_pass in file.read()):\n            print(\"true password\")\n        else:\n            print(\"Creditionals doesn't exist\")\n            signIn().create_masterkey()\n        file.close()\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "gcc error installing python cryptography centos 7 64\r\n                \r\nI have a Centos 7 64bit updated.\nI'm trying to install python cryptography using this command:\n\n```\n pip install cryptography\n```\n\n\nBut I got this error message:\n\n```\nFailed to build cryptography\nInstalling collected packages: cryptography\nRunning setup.py install for cryptography ... error\nComplete output from command /usr/bin/python3.4 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-lulu_cn7/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-2t0eqhin-record/install-record.txt --single-version-externally-managed --compile:\n\ngcc -pthread -Wno-unused-result -DDYNAMIC_ANNOTATIONS_ENABLED=1 -DNDEBUG -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -I/usr/include/python3.4m -c build/temp.linux-x86_64-3.4/_openssl.c -o build/temp.linux-x86_64-3.4/build/temp.linux-x86_64-3.4/_openssl.o\nbuild/temp.linux-x86_64-3.4/_openssl.c:12:24: fatal error: pyconfig.h: No such file or directory\n #  include <pyconfig.h>\n                        ^\ncompilation terminated.\nerror: command 'gcc' failed with exit status 1\n\n----------------------------------------\nCommand \"/usr/bin/python3.4 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-lulu_cn7/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-2t0eqhin-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-lulu_cn7/cryptography/\n```\n\n\nI look everywhere for a solution but no luck\nHere version of my packages:\n\nPython 2.7.5\nPython 3.4.5\npip 9.0.1 from /usr/lib/python3.4/site-packages (python 3.4)\n    ", "Answer": "\r\nDo ```\nyum install -y python34-devel```\n, as you lack the libraries it provides. If you don't have the package, you probably don't have EPEL in your repositories. Add it with ```\nyum install epel-release```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "In cryptography, a Caesar cipher Ruby\r\n                \r\nIn cryptography, there is a Caesar cipher. I am trying to build one in Ruby, but I don't know how to use capital letters in my range ```\n('a'..'z').to_a.join```\n. How do I use capital letters?\n\n```\nclass Caesar\n\ndef initialize(shift)\n  alphabet = ('a'..'z').to_a.join\n\n\n  i = shift % alphabet.size\n\n\n  @decrypt = alphabet\n  @encrypt = alphabet[i..-1] + alphabet[0...i]\nend\n\ndef encrypt(string)\n  string.tr(@decrypt, @encrypt)\nend\n\ndef decrypt(string)\n  string.tr(@encrypt, @decrypt)\nend\nend\n\ncipher_1 = Caesar.new(1)\ns = 'A man, a plan, a canal: Panama!'\nputs s\ns_encoded = cipher_1.encrypt(s)\nputs s_encoded\npudaats = cipher_1.decrypt(s_encoded)\nputs pudaats\n```\n\n\nOUTput\n\n\n  A man, a plan, a canal: Panama!\n  \n  A nbo, b qmbo, b dbobm: Pbobnb!\n  \n  A man, a plan, a canal: Panama!\n\n\nBut i need Out Put \n\n\n  A man, a plan, a canal: Panama!\n  \n  B nbo, b qmbo, b dbobm: Qbobnb!\n  \n  A man, a plan, a canal: Panama!\n\n    ", "Answer": "\r\nThe issue here lies within what you've defined as the alphabet.\n\n```\na..z # [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n```\n\n\nNotice here that there's no capital letters. The only letters that are being transposed are the lowercase ones. Therefore you will need to change your range to include uppercase characters as well:\n\n```\nalphabet = ((\"A\"..\"Z\").to_a + (\"a\"..\"z\").to_a).join\n```\n\n\nThen you will get the correct result.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "dbt install -snowflake fails with cryptography and MarkupSafe being outdated\r\n                \r\nInstalling dbt in a virtual environment using pip install dbt-snowflake has been failing with the following error:\n```\nERROR: pyopenssl 22.1.0 has requirement cryptography<39,>=38.0.0, but you'll have cryptography 36.0.2 which is incompatible.\nERROR: werkzeug 2.2.2 has requirement MarkupSafe>=2.1.1, but you'll have markupsafe 2.0.1 which is incompatible.\n```\n\nThe snowflake package seems to have older version of cryptography and MarkupSafe. Any help on this is appreciated.\n    ", "Answer": "\r\nHey I had the same issue, I fix it by pinning the pyopenssl version ```\npyopenssl==22.0.0```\n this version has a minimum dependency ```\ncryptography>=35.0```\n\nThe newer pyopenssl version had a dependency change of ```\ncryptography>=37.0.2```\n and this conflicts with snowflake-connector requirement of ```\ncryptography==36.0.2```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "In cryptography, a Caesar cipher Ruby\r\n                \r\nIn cryptography, there is a Caesar cipher. I am trying to build one in Ruby, but I don't know how to use capital letters in my range ```\n('a'..'z').to_a.join```\n. How do I use capital letters?\n\n```\nclass Caesar\n\ndef initialize(shift)\n  alphabet = ('a'..'z').to_a.join\n\n\n  i = shift % alphabet.size\n\n\n  @decrypt = alphabet\n  @encrypt = alphabet[i..-1] + alphabet[0...i]\nend\n\ndef encrypt(string)\n  string.tr(@decrypt, @encrypt)\nend\n\ndef decrypt(string)\n  string.tr(@encrypt, @decrypt)\nend\nend\n\ncipher_1 = Caesar.new(1)\ns = 'A man, a plan, a canal: Panama!'\nputs s\ns_encoded = cipher_1.encrypt(s)\nputs s_encoded\npudaats = cipher_1.decrypt(s_encoded)\nputs pudaats\n```\n\n\nOUTput\n\n\n  A man, a plan, a canal: Panama!\n  \n  A nbo, b qmbo, b dbobm: Pbobnb!\n  \n  A man, a plan, a canal: Panama!\n\n\nBut i need Out Put \n\n\n  A man, a plan, a canal: Panama!\n  \n  B nbo, b qmbo, b dbobm: Qbobnb!\n  \n  A man, a plan, a canal: Panama!\n\n    ", "Answer": "\r\nThe issue here lies within what you've defined as the alphabet.\n\n```\na..z # [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n```\n\n\nNotice here that there's no capital letters. The only letters that are being transposed are the lowercase ones. Therefore you will need to change your range to include uppercase characters as well:\n\n```\nalphabet = ((\"A\"..\"Z\").to_a + (\"a\"..\"z\").to_a).join\n```\n\n\nThen you will get the correct result.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Convert node.js cryptography code into dart\r\n                \r\nI need to sign message in dart using Ed25519 algorithm.\nI have such implementation in node.js, but have troubles converting it into dart.\nHere is my node.js code:\n```\n\nconst { publicKey, privateKey } = crypto.generateKeyPairSync(\"ed25519\");\n\nconst userBasePublicKey = publicKey.export({ format: 'der', type: 'spki' }).toString('base64');\nconst userBasePrivateKey = privateKey.export({ format: 'der', type: 'pkcs8' }).toString('base64');\n\nconsole.log(\"base64 private_key:\", userBasePrivateKey)\nconsole.log(\"base64 public_key:\", userBasePublicKey)\n\nconst message = 'Test message';\nconst signature = crypto.sign(null, Buffer.from(message), privateKey);\nconsole.log(\"Signature: \", signature.toString(\"base64\"));\n```\n\nOn Dart I'm using https://pub.dev/packages/cryptography.\nsource code:\n```\nimport 'package:cryptography/cryptography.dart';\nimport 'dart:convert';\n\ntest('test key pair logic', () async {\n    final algorithm = Ed25519();\n    final keyPair = await algorithm.newKeyPair();\n\n    final message = utf8.encode('Test message');\n\n    final signature = await algorithm.sign(message, keyPair: keyPair);\n\n    keyPair\n        .extractPublicKey()\n        .then((value) => print(base64.encode(value.bytes)));\n\n    keyPair\n        .extractPrivateKeyBytes()\n        .then((value) => print(base64.encode(value)));\n\n    final signatureBase64 = base64.encode(signature.bytes);\n    print(signatureBase64);\n}\n\n```\n\nOn Dart my public and private keys are 32 bytes long, but on node.js it is 44 and 48 bytes long accordingly.\nHow can I achieve same behaviour for my Dart code?\n```\nfinal publicBase64 = 'MCowBQYDK2VwAyEAhbI14Sb4SJFRUU/IuIaeZKuoEGZ1eJIJCTDBU3XH3Yo=';\nfinal privateBase64 = 'MC4CAQAwBQYDK2VwBCIEID5dnoErClBkzVC+hLi6UvrE3nq3UashcLur+nEFNrJM';\n\nfinal publicKey = SimplePublicKey(base64.decode(publicBase64), type: crypto.KeyPairType.ed25519);\n\nfinal testKeyPair = SimpleKeyPairData(base64.decode(privateBase64), publicKey: publicKey, type: crypto.KeyPairType.ed25519);\n\nfinal message = utf8.encode('Test message');\nfinal signature = await algorithm.sign(message, keyPair: testKeyPair);\n\nfinal signatureBase64 = base64.encode(signature.bytes);\nprint(signatureBase64);\n\n```\n\nAlso, if I tried to create public and private key in Dart code from generated keys in node.js, but my signature was not the same as in node.js code.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "what symmetric keys we can use in angular cryptography?\r\n                \r\nI am using ionic to develop my mobile application.\nTo achieve encryption, am using angular mdo cryptography.\n\nhttps://github.com/middleout/angular-cryptography/blob/master/mdo-angular-cryptography.js\n\nApplication has Remember Me feature where initially I save server token in localStorage and then check the same while launching the app.\n\nEncryption is done to encrypt sensitive details only which are stored in localStorage.\nI am stuck in knowing the key that can be used in the above angular cryptography library.\nI tried device UUID but seems it gets changed while app. upgrade or while ad-hoc testing builds.\n\nAny ideas of what we can use as key so that it remains same irrespective of install or delete or upgrade ?\nApplication is targeted for Android,iOS and Windows\n\nHelp is appreciated !\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python - cryptography - generate new RSA private key\r\n                \r\nI need a function that generates me a new RSA private key that can then be stored as a string in a Django model field. \nI'm using cryptography==2.1.4.\n\nI though I had accomplished that through:\n\n```\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.backends import default_backend\n\nKEY_SIZE = 2048\nPUBLIC_EXP = 65537\nprivate_key = rsa.generate_private_key(\n    public_exponent=PUBLIC_EXP,\n    key_size=KEY_SIZE,\n    backend=default_backend()\n)\nprivate_key_str = private_key.private_bytes(\n    encoding=serialization.Encoding.PEM,\n    format=serialization.PrivateFormat.TraditionalOpenSSL,\n    encryption_algorithm=serialization.NoEncryption()\n).decode()\n```\n\n\nbut clearly i'm missing something here or some steps (though I'm supposed to know why...) since ```\nprivate_key_str```\n has always the same value.\n\nany suggestion here?\n    ", "Answer": "\r\nI try your code with cryptography==2.1.4 and I find that the ```\nprivate_key_str```\n is not the same. I think maybe you didn't carefully compare the two string.\n\nThey both use a PEM encoded PKCS#1 structure to encode the key, so they just have a similar structure.\n\nprivate_key1\n\n```\n-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAspdHsnVqiY0RFYVAHcqa9AQvZC4u7gGv36wWCEUIlemJx2L7\n1UvAbD5b/n/RPp4nw2xTIpSFguC+d4t5IaomQR7WR0aCcWda9SveNk4KyJmnHUox\nZ6BBz4vBhdLWLLwZwxGsmuml60Wv5JMVEbf0lDgZqjIBMH0W5hFxa6f3AvI2L2Xf\nLzwhfcyDMBIENx47aDFyWwfJvkIotFcLS9gYvo5KQXCdoHMbkoygF2cF+JAfSPEb\nHaRw0qCOIDb0pC/L8HUxyiSeGH9eu93KyweRTqoXdkWdmKLYlJHUsdv24xrUxeA3\nrARho2flkL/kz6AKO4NJJy+pvDCCtk8PW+HnTwIDAQABAoIBAD8587Yof5lHCf9W\nd4aUjhtJyAVtnEvC6SME55/x4MJCNfcTAhlXgj5QLX2Cfu/uSiGTnjMl5caaDpSA\nGlhixrxTUIVXXyMK9lbKOxd6tbKjQ1jJRYhsYiA6WD8qj4yy42P+Q99sTMNonocL\n02+8cqhu3Bc3MNib0JmPH1p/0qGFy1BsKVUAajiOfFAA8phKyBa1gRON8CtDihLc\noTFfr5b3oaYCBsfA/YYnvf0fEsBrX/xPKVqG5NRVg0dT9op6Z+PBWOZeqSEIk0OV\nKNuFTB/xP7oLJgjO6A9upnSHauFZu0sT9UXa9PdTfb8H6zaRwwwqsbCljG0jHUdo\n/FcJF8ECgYEA3TbmmkVVX5no6jC1b0bAoWfgqvCLEoBAXEKIbLEYrQ9snfB0bHR8\nvS/XydhUvD2Ysf/J+hEHQg8ScQgrOUkkpl2Az88pN17eYIA/i1/yJ6rL2Ju/qOcN\nOmo+Zk8sZR3xLt5zXqeNuC7UkuQVg0aQ1JDxszZEkFCf/Wwq64AsoBECgYEAzqyM\nUEPwFAj/gL2LM/DFDDnZT2z4NMS6y0rqzHAPcn7hJGjG6dp4o3cEJPM3GObKUT3z\nwrzy/Iw6rq7h8DOOHFklt6uAVrrYiFlQ1OSgl/H4a7Ohpi33UjqU3Hy0TFxcBSLy\nxNQAcIqSQHxGs42je4JjLiUX4jNor12fm6j7cV8CgYBUGuyAGP5Fk8nHSG+i+B6C\n/3Ce7Uei6BoQOceOs6JzIdslDWfmWD+Y2ljLyDEnRLAKdPsA1XqR9hMH4Jg2doW1\nrvUrjVLZV3tq6ze9sOPrivdnyoeLGxWfcQd6dH2nkEPDkxYAFeo+7acqlgdL2wdz\nmgwbG/XjfJPnkTmcQiY1UQKBgQCAMEPjcRASzTX02xvhPoBpwePIwNT+ndsiRrh1\nzze1k37/v0FJQSm8chCO/o/5EQUB+QQdkGbCQBQRzwTyoHePm7eqQWSb5s5xW7yo\nH5qARCQKYWNtGGujhBRa4bpO9qZYxUGA1eHj6/8kojCUI9D3xXrQ307+DVbsFozt\n1pUGzwKBgEKDzYhr1AQjOysqxthRATj+UTPIODFuhUHH9/RowCa9wCWEEKnpv7Wa\npfmBJd3FkFC4+UQ6b5LyRc4dlMtDh8+GuomUFFPTBrU8oDLzPBZiotIBt1bmd/cq\nJsJbimkNvUXY1XY03VajNbAXdsNDUAgbNx00zuOFvD/66Os0hclD\n-----END RSA PRIVATE KEY-----\n```\n\n\nprivate_key2\n\n```\n-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAxJuI29hhZTLyVx/ePLG30I/DrVMUykeV6QeydwDkxRbI/ZKZ\nJhCGyV8NtCyGKHa+vsRjwzzTGgBhpsxMzOwB37liGVlZ/LN0QC5rZ0hR9nVkTted\nH8jkMlwV5/R8nMq35yDAdTtWxF2ngM9OLNDRPmyTa7AA0sZLfYYn8UwKTFikfPZ6\nXLhb0YoApj6hUDAwKPj4rje3VcxVpLpv/Tfr+Z1qw9YSWCcFdLA89ppQqB0/TfZw\nchpCdC5tpmzeucAz2QvuWBe4/LBAJ2vc/Hv4vCztQi2JtN/LJLjfSxdXM1IC4Acu\nBqhdQ3sjkHYscp3TTTeVjuhnL+wF4OqtXejK3wIDAQABAoIBAH960gyqisxRcm0n\njrQQD7292gUCf9KBBCTrBr6+55cbpQs2CPNzd9IOPhZ7YCnQhPGw6Xboc4DCio7a\nnVmqFbT4wTDqjLybp18OOjnn3K1PhNDSYWEAo2Y760BReJM5pnDI/cGFzkbY6wlM\nYcYRR/uP7y6+GmqQhNZJLJD62xqQovMGxFlmqEEjBnru+5Zabbok7DMgzBXE/T/K\ndNQC7tfm7KRn3eFxYzAlhUsime0/k4eQGJp+XMsI+SqUYQCkKicI/AgNW6nXsGT/\nYMT/B0XDYvT+KCxnhW9pOAof6FbQ8XWrx4VfW73H0TSGtCo4OWi55OoIZDRz/5ff\nb7lsAOECgYEA+HVz6heFNAt4v4cTrXHFZFkBlLoAtm/6NRnDBKHbdg6wmnVV3aJ7\nZ3YdDSNlvmov5whLKwOLZlI0jONeZnKCaJAz8uOYOF8hoMFehurhsJUfHhQLzZVj\n6BD2e62a8R377KFlMIY0JsHWkEwZEQO/KakqdY90xIE7LMTncz9SaHcCgYEAypMx\naCiyzVAXHMVY9rRLa7Iqdot+OnzF86T7RW/F8T5md3y6lJX2Y1HdHxLDYPm1xXBo\ngg7Du/Eq/+L24YGJzg+CQs00Z3l5mJxt9OSsjuXqFJQqf9PeJUeNkhdY77xuzBfH\ntS2dChmRfwLRqaatYq4RZ4s4tByib/8vjo1RMtkCgYAA5Qth0GveYBwzNF1RxpMb\nZWaoDnNqNMUF4+3b2mlb53mjVMDWZ3tiR/6ayYHYSbGad2Et6nlaCPm/eCIi5E6r\n6bkGKuOlcFJCre+VNMtTQ3Y1OYVBXERb1ZPNpjZkn+MEWyBuKE2PxirrohqFASpz\nD/TjL30QKBb6dksPEy9MyQKBgQCN7r+pOQq+K6Vl9Se2AvDtDjIOSQIyPIX9hdS/\n++Z2dsAYa/3WaZPuVsdVJDJcWdlv8qhmp62gmwMDsqRDsB07kUY1Q825yjTWJpQs\nB6SXoqN1s7JrSajV+eJJP66CmkYPHYJBgSoMj4mPsgvwj+XfxBJRuAwMthth2Swa\n9wyzUQKBgCp9eBK/0mgEjRr1JacjDVZEcsIcj/erGA2FwoGRu1fXPevi1ggyJIKU\nDA+aRZehHqUVOafNQsMJafMqFTTJxYtgkzMRqxfDz6HpNC1hWyvE5/STswEl5Izu\nl2QSz4TU1Yk2wnrtDlIVkb6gM/JkQiOkSG5PSx9EAACZ1Yoz+NqS\n-----END RSA PRIVATE KEY-----\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Use ECDiffieHellman with or without Cryptography Next Generation (CNG)\r\n                \r\nI try to figure out how ECDiffieHellman is working under .Net.\n\nI wonder, why there are two implementations of ECDiffieHellman which seems to be very simliar.\nThe ```\nCng```\n stands for Cryptography Next Generation (CNG), it should be the better one, or not?\n\nWhy this dualism? Which one to use?\n\nSystem.Security.Cryptography.ECDiffieHellman.Create()\n\n```\nvar alice = ECDiffieHellman.Create();\nvar bob = ECDiffieHellman.Create();\n\nAssert.That(alice.PublicKey.ToXmlString(),\n    Is.Not.EqualTo(bob.PublicKey.ToXmlString()));\n\nvar aliceSharedSecret = alice.DeriveKeyMaterial(bob.PublicKey);\nvar bobSharedSecret = bob.DeriveKeyMaterial(alice.PublicKey);\n\nAssert.That(aliceSharedSecret, Is.EqualTo(bobSharedSecret));\n```\n\n\nnew System.Security.Cryptography.ECDiffieHellmanCng()\n\n```\nvar alice = new ECDiffieHellmanCng();\nvar bob = new ECDiffieHellmanCng();\n\nAssert.That(alice.PublicKey.ToXmlString(),\n    Is.Not.EqualTo(bob.PublicKey.ToXmlString()));\n\nvar aliceSharedSecret = alice.DeriveKeyMaterial(bob.PublicKey);\nvar bobSharedSecret = bob.DeriveKeyMaterial(alice.PublicKey);\n\nAssert.That(aliceSharedSecret, Is.EqualTo(bobSharedSecret));\n```\n\n    ", "Answer": "\r\n```\nECDiffieHellman```\n is an abstract base class, ```\nECDiffieHellmanCng```\n is a full implementation type, based on Windows CNG.\n\n```\nECDiffieHellman.Create()```\n, by default, returns an ECDiffieHellmanCng instance.\n\nThe DeriveKeyMaterial method, unfortunately, takes extra parameters which are exposed as properties on ECDiffieHellmanCng. This was addressed in .NET Framework 4.6.2, with the creation of several more DeriveKey* methods on the ECDiffieHellman class which use parameters only (no properties).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography Unit Testing Logic\r\n                \r\nI'm relatively new to C# and I've just learnt cryptography (symmetric and one way hash). Now I can surely create two methods that encrypt/decrypt text and they work fine. I encountered my problem when I tried to unit test the two methods. What do I test exactly? If I use for example TDES or AES to encrypt, there's not a single online encrypter that gives the same cipher text ( let alone that no online encrypter gives the same result of another one) for me to use as an expected result to compare with my actual result, so how do I verify that my method actually encrypted my text? Also are there any other logical tests to run on such methods?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Obtain int CRL Number from CRL using Cryptography Library\r\n                \r\nI'm playing around with the cryptography library in Python and I have a CRL object. Here is the setup:\n```\nfrom cryptography import x509\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.x509.oid import ExtensionOID, NameOID, AuthorityInformationAccessOID\n\n# Need to set default backend for cryptography as our version is low:\ndefault_backend = default_backend()\n\ncrl_file = path_to/some_crl_file.crl\n\ncrl = x509.load_pem_x509_crl(crl_file, default_backend)\nprint(crl.extensions)\n```\n\nI receive the following output of extensions:\n```\n<Extensions([<Extension(oid=<ObjectIdentifier(oid=2.5.29.20, name=cRLNumber)>, critical=False, value=<CRLNumber(17)>)>, <Extension(oid=<ObjectIdentifier(oid=2.5.29.35, name=authorityKeyIdentifier)>, critical=False, value=<AuthorityKeyIdentifier(key_identifier=b\"\\xe4\\xaf+&q\\x1a+H'\\x85/Rf,\\xef\\xf0\\x89\\x13q>\", authority_cert_issuer=None, authority_cert_serial_number=None)>)>])>\n```\n\nI then get the CRL Number with the following:\n```\nprint(crl.extensions.get_extension_for_oid(ExtensionOID.CRL_NUMBER).value)\n```\n\nThis outputs ```\n<CRLNumber(17)>```\n. How do I get it so that I receive the ```\nint```\n value of 17 from this?\n    ", "Answer": "\r\nI swear someone answered this and I responded, but maybe I dreamed it up.\nAnywho. I took another look into this and resolved it with the following:\n```\nprint(crl.extensions.get_extension_for_oid(ExtensionOID.CRL_NUMBER).value.crl_number)```\n\nI needed to add the ```\n.crl_number```\n at the end of value.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to generate and use public key cryptography in WinCrypt\r\n                \r\nI'm currently experimenting with the Windows Cryptography API and running into some problems with Public-Key-Cryptography. I can find lots of examples of how to encrypt items, but nothing directly addressing a start-to-finish public key model.\n\nHere's a rough outline of how my current code looks to generate an encryption key pair, I've removed the error checking code for readability\n\n```\n// MAKE AN RSA PUBLIC/PRIVATE KEY:\n    CryptGenKey(hProv, CALG_RSA_KEYX, CRYPT_EXPORTABLE, &hKey);\n\n// NOW LET'S EXPORT THE PUBLIC KEY:\n    DWORD keylen;\n    CryptExportKey(hKey,0,PUBLICKEYBLOB,0,NULL,&keylen);\n    LPBYTE KeyBlob;\n    KeyBlob = (LPBYTE)malloc(keylen);\n    CryptExportKey(hKey,NULL,PUBLICKEYBLOB,0,KeyBlob,&keylen);\n    ofstream outputkey;\n    outputkey.open(\"TestPublicKey.txt\", ios_base::out | ios_base::binary);\n    for(size_t i=0; i &lt keylen; ++i)\n        outputkey&lt&ltKeyBlob[i];\n    outputkey.close();\n    free(KeyBlob);\n\n// NOW LET'S EXPORT THE PRIVATE KEY:\n    CryptExportKey(hKey, 0, PRIVATEKEYBLOB,0,NULL,&keylen);\n    KeyBlob = (LPBYTE)malloc(keylen);\n    CryptExportKey(hKey,NULL,PRIVATEKEYBLOB,0,KeyBlob,&keylen)\n    outputkey.open(\"TestPrivateKey.txt\", ios_base::out | ios_base::binary);\n    for(size_t i=0;i&ltkeylen;++i)\n        outputkey&lt&ltKeyBlob[i];\n    outputkey.close();\n    free(KeyBlob);\n\n// ENCRYPT A (SHORT) TEST MESSAGE [SHOULD JUST BE ANOTHER ALG'S KEY LATER]:\n    DWORD encryptBufferLen=0;\n    CryptEncrypt(hKey, 0, true, 0, NULL, &encryptBufferLen, 0); // how much space?\n    BYTE* encryptionBuffer = (BYTE*)malloc(encryptBufferLen);\n    memcpy(encryptionBuffer, TestMessage, TestMessageLen); // move for in-place-encrypt\n    CryptEncrypt(hKey,0,true,0, encryptionBuffer, &bufferlen, encryptBufferLen );\n\n    ofstream message;\n    message.open(\"Message.txt\", ios_base::out | ios_base::binary);\n    for(size_t i=0;i&ltencryptBufferLen;++i)\n        message&lt&ltencryptionBuffer[i];\n    message.close();\n```\n\n\nMy two exported keys are different, but both are able to decrypt message without the other key being loaded. Additionally, if I encrypt a new message in a new session that loads the exported public key, I can still decrypt it with either key.\n\nCan anyone advise me on what I might be doing wrong or missing? Am I on completely the wrong path?\n    ", "Answer": "\r\nI do not fully understand your query. But generally\n\n\nYou do not encrypt data directly using a public key.\nDuring Encryption: You use a session/symmetric/private key to encrypt data. This session key is then being encrypted by the AT_EXCHANGE public key.\nDuring Decryption: The AT_EXCHANGE private key will decrypt the session key. In turn this session key will be used to decrypt the actual data.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Problem installing cryptography on MacOS Monterey with ARM chip\r\n                \r\nI am trying to install the cryptography package on my MacBook with ARM chip running Monterey MacOS. The command I issue is\n```\npip3 install cryptography --global-option=build_ext \n  --global-option=\"-L/opt/homebrew/Cellar/openssl@1.1/1.1.1m/lib/\"\n  --global-option=\"-I/opt/homebrew/Cellar/openssl@1.1/1.1.1m/include\"\n```\n\nI am getting the error:\n```\nbuild/temp.macosx-10.14-arm64-3.8/_openssl.c:575:10: \n   fatal error: '***openssl/opensslv.h***' file not found\n```\n\n```\n#include <openssl/opensslv.h>```\n. I definitely have that file under ```\n/opt/homebrew/Cellar/openssl@1.1/1.1.1m/include/```\n, and that directory is in my path. Please, advise what I am doing wrong.\n    ", "Answer": "\r\nI was having the same issue.\nTry installing openssl with brew\n\nbrew install openssl\n\n, then what really does the trick is in cryptography's documentation: https://cryptography.io/en/latest/installation/\n\nbrew install openssl@1.1 rust\n\n\nenv LDFLAGS=\"-L$(brew --prefix openssl@1.1)/lib\" CFLAGS=\"-I$(brew --prefix openssl@1.1)/include\" pip3 install cryptography\n\nDon't forget to adjust pip/pip3 and cryptography's versions as needed at the end of the command.\nHope it works for you as well! :)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is the Fernet cryptography module safe, and can I do AES encryption with that module?\r\n                \r\nCan I do AES encryption with the Fernet cryptography module? What is Fernet, and is it safe like AES encryption?\n    ", "Answer": "\r\nFernet made more sense before GCM came around, as correctly implementing CBC + HMAC by yourself is difficult, and the CBC mode requires padding to 16 byte blocks. \n\nIt is still safe but I would not recommend it for new systems because AES256-GCM combines encryption and authentication into the same standard protocol, which can be en/decrypted by browsers (Javascript subtle crypto API) and all other crypto libraries and tools, not just the Python cryptography module. The GCM mode is also a lot faster, reaching several gigabytes per second with AES-NI.\n\nIt is unfortunate that it is hidden deep inside the ```\nhazmat```\n module:\n\n```\nimport secrets\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\n# Generate a random secret key (AES256 needs 32 bytes)\nkey = secrets.token_bytes(32)\n\n# Encrypt a message\nnonce = secrets.token_bytes(12)  # GCM mode needs 12 fresh bytes every time\nciphertext = nonce + AESGCM(key).encrypt(nonce, b\"Message\", b\"\")\n\n# Decrypt (raises InvalidTag if using wrong key or corrupted ciphertext)\nmsg = AESGCM(key).decrypt(ciphertext[:12], ciphertext[12:], b\"\")\n```\n\n\nEven with the same key and the same message, the ciphertext will always be completely different (because of a different nonce). Do note that ciphertext is always exactly 28 bytes longer than the message, so if the message length needs to be hidden, you could pad all messages to same length before encryption.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Can Forest crack public-key cryptography? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question needs to be more focused. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it focuses on one problem only by editing this post.\r\n                \r\n                    \r\n                        Closed last year.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nCan Rigetti Forest quantum computing be used to crack (in a reasonable amount of time) public-key cryptography. Ie, can you use it to hack Bitcoin & Ethereum?\n\nIf so, write a solution in code using the Python library for Quil, called pyQuil. \n    ", "Answer": "\r\nNo. They are announcing so far a computer with 2 qubit gate scheme. This is not enough for doing anything. It's exciting news to work with this because it SEEMS to be a good environment (a full stack eco-system) to test the interfaces between classic/quantum computers, creating the API, etc... but the quantum computer with 2 qubits is not very useful in general.\n\nAbout the cryptocoins, let's separate the issues: Bitcoin address is NOT the public key of the owner of the coin, but a hash of the public key. The public key is only revealed when you SPEND your bitcoins. Then you HASH you public key again (to prove that you own that address) and use you private key to sign the transactions, etc, etc...\n\nSo, EVEN IF you have a strong quantum computer, they will not break the bitcoin. HOWEVER IF you use the same address TWICE, it means, you spend some money with the address A and then make another deposit to the same address, then the public key is accessible because it was published at the time you spent the first time... then the strong quantum computer will be able to find the private key and spend your bitcoins.\n\nI don't know about Etherium, but I assume it must be something similiar to Bitcoin... any serious cryptographic system today must prevent to be protected against quantum computers.\n\n--\n\nKudos to Graig, in the comments: Yes, there's yet another risk. Someone could crack the keys in between the moment that transaction is published and \"committed\". Very interesting point.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Are there any high abstraction level Cryptography libraries for C#?\r\n                \r\nCodingHorror's adventure with encryption and Coda Hale's comment on it left me wondering if there are any encryption libraries that offer the type of cryptography services that Coda is describing.  Namely providing the correct current methodologies of cryptography for specific purposes.  Coda mentions BouncyCastle but that library doesn't provide the the high abstraction of encryption methods that I am looking for.\n\nFor instance, if you need to encrypt an email you would choose a method or class specifically for that purpose, but encrypting a short term message such as a query string or state information may be provided in a different class/method.  Does such a library exist? Can one that can stay current exist?\n    ", "Answer": "\r\nIt sound like you're looking for something that's drop-dead simple?  I don't think you're going to find that.  Cryptography is not simple.  I would suggest studying up on the classes in the System.Security.Cryptography Namespace.  Considering how complicated some of the cryptographic algorithms are, I'd say many of the methods in these classes still qualify as \"high level abstractions\".\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "how to distribute Java apps with unlimited strength cryptography?\r\n                \r\nI am making an app that uses unlimited strength cryptography (larger keys, etc).\nFor my development, I needed to modify the JDK in order to use these as described  here and here.\n\nWhat are my options for distributing the app? One method is to distribute a custom JRE with the modified policy files.\n    ", "Answer": "\r\nIn general, users will be running other cryptographic applications in their JRE. They may already have a suitable JRE. As a user, I wouldn't want to install a new copy just for your application.\n\nI'd suggest giving them instructions to install the unlimited strength jurisdiction files, or creating a tool to install them, rather than trying to distribute an entire JRE.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA Cryptography with raw keys, c#\r\n                \r\nI have been given a 256 byte modulus ('n'), a 256 byte private exponent ('d') and a 3  byte {1,0,1} public exponent ('e').  I am trying to sign 32 bytes of data.\n\nI have tried to create a new RSAParameters.\n\n```\nbyte[] n = new byte[256]; //populated in my code \nbyte[] d = new byte[256]; //populated in my code\nbyte[] e = new byte[]{1,0,1}; \nbyte[] junkData = new byte[32]; //populated in my code\n\nRSAParameters rsaParam = new RSAParameters();\nrsaParam.Modulus = n;\nrsaParam.Exponent = e;\nrsaParam.D = d;\n```\n\n\nI then create a RSACrytoServiceProvider, import the parameters into it, and try to sign data.\n\n```\nvar csp = new RSACryptoServiceProvider(2048);\ncsp.ImportParameters(rsaParam);\ncsp.SignData(junkData, new SHA1CryptoServiceProvider());\n```\n\n\nThe problem is that the RSACryptoServiceProvider appears to be public only, and when I try to sign I receive a 'Keyset does not exist' Cryptography Exception.\n\nDo I also need the P and Q elements to properly sign the data, or am I doing something that is obviously wrong?  Thanks for the help!\n    ", "Answer": "\r\nI'm surprised that the ImportParameters didn't throw (are you using Mono?).\n\nRSACryptoServiceProvider (and all of the RSA implementations in .NET Framework and .NET Core) require a fully populated RSAParameters structure for private keys.\n\nhttps://stackoverflow.com/a/42117655/6535399 gives the answer in a bit more detail.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "how to distribute Java apps with unlimited strength cryptography?\r\n                \r\nI am making an app that uses unlimited strength cryptography (larger keys, etc).\nFor my development, I needed to modify the JDK in order to use these as described  here and here.\n\nWhat are my options for distributing the app? One method is to distribute a custom JRE with the modified policy files.\n    ", "Answer": "\r\nIn general, users will be running other cryptographic applications in their JRE. They may already have a suitable JRE. As a user, I wouldn't want to install a new copy just for your application.\n\nI'd suggest giving them instructions to install the unlimited strength jurisdiction files, or creating a tool to install them, rather than trying to distribute an entire JRE.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA Cryptography with raw keys, c#\r\n                \r\nI have been given a 256 byte modulus ('n'), a 256 byte private exponent ('d') and a 3  byte {1,0,1} public exponent ('e').  I am trying to sign 32 bytes of data.\n\nI have tried to create a new RSAParameters.\n\n```\nbyte[] n = new byte[256]; //populated in my code \nbyte[] d = new byte[256]; //populated in my code\nbyte[] e = new byte[]{1,0,1}; \nbyte[] junkData = new byte[32]; //populated in my code\n\nRSAParameters rsaParam = new RSAParameters();\nrsaParam.Modulus = n;\nrsaParam.Exponent = e;\nrsaParam.D = d;\n```\n\n\nI then create a RSACrytoServiceProvider, import the parameters into it, and try to sign data.\n\n```\nvar csp = new RSACryptoServiceProvider(2048);\ncsp.ImportParameters(rsaParam);\ncsp.SignData(junkData, new SHA1CryptoServiceProvider());\n```\n\n\nThe problem is that the RSACryptoServiceProvider appears to be public only, and when I try to sign I receive a 'Keyset does not exist' Cryptography Exception.\n\nDo I also need the P and Q elements to properly sign the data, or am I doing something that is obviously wrong?  Thanks for the help!\n    ", "Answer": "\r\nI'm surprised that the ImportParameters didn't throw (are you using Mono?).\n\nRSACryptoServiceProvider (and all of the RSA implementations in .NET Framework and .NET Core) require a fully populated RSAParameters structure for private keys.\n\nhttps://stackoverflow.com/a/42117655/6535399 gives the answer in a bit more detail.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Assistance with Public Key Cryptography\r\n                \r\nI am trying to make my Server more secure, using public key cryptography. I'm not looking for examples on how this works, I understand it. I need help actually encrypting my strings that i'm sending...\n\nSo, currently, I'm simply making a public/private key string by taking the current nano time, and converting it into a hexidecimal string, 20 times. It makes an output like:\n\n```\n8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df8ebe14df\n```\n\n\nwhich is fine. But how would i encrypt my message, say \"hi\", with this key? I've tried converting both into binary, and multiplying them, but then i couldnt un-convert them, because to do that, there have to be spaces in the binary number, but to multiply them, there cant be. can anyone help me?\n\nThanks in advance!\n\nAlso, let me know if you need any more info!\n    ", "Answer": "\r\nTake a look at this example: http://stilius.net/java/java_ssl.php\n\nDon't try to invent your own cryptographic algorithm, I know that it sounds interesting but it's also not very safe. Try to use already implemented algorithms and protocols. I suggest you to take a look at the link. Though if you do this just for the fun of it then go ahead, if it's for a client or for something that others (than you at least) use then stick to the known protocols.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "When can you trust yourself to implement cryptography based solutions?\r\n                \r\nI've read quite a few times how I shouldn't use cryptography if I'm not an expert. Basically both Jeff and Eric tell you the same:\n\n\n  Cryptography is difficult, better buy the security solution from experts than doing it yourself.\n\n\nI completely agree, for a start it's incredibly difficult to perceive all possible paths an scenario might take, all the possible attacks against it and against your solution... but then When should we use it?\n\nI will face in a few months with the task of providing a security solution to a preexisting solution we have. That is, we exchange data between servers, second phase of the project is providing good security to it. Buying a third party solution will eat up the budget anyway so ... When is it good to use cryptography for a security solution? Even if you are not a TOP expert.\n\nEdit: To clarify due to some comments.\nThe project is based on data transport across network locations, the current implementation allows for a security layer to be placed before transport and we can make any changes in implementation we like (assuming reasonable changes, the architecture is well design so changes should have an acceptable impact). The question revolves around this phrase from Eric Lippert:\n\n\n  I don’t know nearly enough about cryptography to safely design or implement a crypto-based security system.\n\n\nWe're not talking about reinventing the wheel, I had in mind a certain schema when I designed the system that implied secure key exchange, encryption and decryption and some other \"counter measures\" (man in the middle, etc) using C# .NET and the included cryptography primitives, but I'm by no means an expert in the field so when I read that, I of course start doubting myself. Am I even capable of implementing a secure system? Would it always be parts of the system that will be insecure unless I subcontract that part?\n    ", "Answer": "\r\nI think this blog posting (not mine!) gives some good guidelines. \n\nOther than that there are some things you should never do unless you're an expert. This is stuff like implementing your own crypto algorithm (or your own version of a published algorithm). It's just crazy to do that yourself! (When there's CAPI, JCE, OpenSSL, ....)\n\nBeyond that though if you're 'inventing' anything it's almost certainly wrong. In the Coding Horror post you linked to - the main mistake to my mind is that he's doing it a very low level and you just don't need to. If you were encrypting things in Java (I'm not so familiar with .NET) you could use Jasypt which uses strong default algorithms and parameters and doesn't require you to know about ECB and CBC (though, arguably, you should anyway just because...).\n\nThere is going to be a prebuilt system for just about anything you're going to want to do with crypto. If you're storing keys then theres KeyCzar, in other cases theres Jasypt. The point is if you're doing anything 'unusual' with crypto - you shouldn't be; if you're doing something not 'unusual' then you don't need to do the crypto yourself. Don't invent a new way to store keys, generate keys from passwords, verify signatures etc - it's not necessary, it's complicated and you'll almost certainly make a mistake unless you're very very careful...\n\nSo... I don't think you necessarily need to be afraid of encrypting things but be aware that if you're specifying algorithms and parameters to those algorithms directly in your code it is probably not good. There are exceptions to any rule but as in the blog post I linked above - if you type AES into your code you're doing it wrong!\n\n\n\nThe key \"take-away\" from the Matasano blog post is right at the end (note that TLS is a more precise name for SSL):\n\n\n  THOMAS PTACEK\n  \n  GPG for data at rest. TLS for data in\n  motion.\n  \n  NATE LAWSON\n  \n  You can also use Guttman's cryptlib,\n  which has a sane API. Or Google\n  Keyczar. They both have really simple\n  interfaces, and they try to make it\n  hard to do the wrong thing. What we\n  need are fewer libraries with higher\n  level interfaces. But we also need\n  more testing for those libraries.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to parse cryptography x509 extension\r\n                \r\nI have an x509 cert that I am trying to parse (specifically the KeyUsage) which appears to be of type extensions.KeyUsage (from extensions.py) in the python cryptography module.\n```\ntype(KeyUsage)```\n\nreturns\n```\n<class 'cryptography.x509.extensions.KeyUsage'>```\n\nThe full extension string returned from\n```\nKeyUsage = certDecoded.extensions.get_extension_for_oid(ExtensionOID.KEY_USAGE)```\n\nlooks like:\n```\nKeyUsage: <Extension(oid=<ObjectIdentifier(oid=2.5.29.15, name=keyUsage)>, critical=True, value=<KeyUsage(digital_signature=True, content_commitment=False, key_encipherment=True, data_encipherment=False, key_agreement=False, key_cert_sign=False, crl_sign=False, encipher_only=False, decipher_only=False)>)>```\n\ncalling ```\nKeyUsage.value```\n returns\n```\n<KeyUsage(digital_signature=True, content_commitment=False, key_encipherment=True, data_encipherment=False, key_agreement=False, key_cert_sign=False, crl_sign=False, encipher_only=False, decipher_only=False)>```\n\nWhich returns a the type above (extensions.KeyUsage)\nLooking at the source for the class it 'appears' (to me) to return a string (so thats my first misunderstanding...) because I thought extensions were iterable according to the docs.\nHowever, can anyone help me understand (firstly) the object type, so I can feed myself in the future, and (secondly) some suggestions on how I should parse this; say into a simple dict object please?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is Java Cryptography standard libraries in Android run as native code\r\n                \r\nI am integrating standard java cryptography classes in my Android application, but I noticed that the AES algorithm is not that fast, it cannot encrypt more than about 5 Kb per second, so do someone know if I can get more performance if I implement my own cryptography methods using NDK? or it is just being done already in the standard library? any suggestions is appreciated \n    ", "Answer": "\r\n\n  Is Java Cryptography standard libraries in Android run as native code\n\n\nOn older devices, ```\njavax.crypto```\n is implemented in Java code. Starting in Android 4.3 or 4.4, Android uses an OpenSSL-based ```\njavax.crypto```\n provider, so most of the code will be native.\n\n\n  so do someone know if I can get more performance if I implement my own cryptography methods using NDK?\n\n\nIf by \"implement my own cryptography methods\", you mean \"link to and use ```\nlibcrypto```\n\", that may be faster on older devices, but I would not expect much difference on newer devices.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "n-Party Public Key Cryptography\r\n                \r\nWhile 2-party public key cryptography is very well laid out in .net framework going n-party concerns me a lot. For instance securing a two-party video-conf. communication is quite easy:\n\n1) Each party generate session specific RSA key pairs and get their public-keys signed by a trusted authority (i.e. a trusted server).\n2) Eachy party exchange keys using ```\nECDiffieHellmanCng```\n thus the connection is now both authentic and secure (thinking that they use Vista/W7).\n\nNow adding a 3rd participant to this communication will not work because key exchange algorithms are designed to derive a shared secret from 2 public keys only (especially using .NET and BouncyCastle). So the question is, how would you go about implementing a n-party public key cryptography schema which is still authentic (i.e. resistant to man in the middle attack) and secure (i.e. secure from eavesdropping).\n\nEdit: Currently the ideas are as below, I'll go ahead and implement the most popular one as a part of the NBusy.Communicator library:\n\n\nUse a two-party communication scheme where one party acts as a federation server.\nInitiate a two-party communication and let one party to authenticate third-parties and share the secret/symmetric key.\nUse Multi-Party Key Agreement Scheme.\n\n\nEdit2: I'm going with the \"n-Party Diffie Hellman\" algorithm, similar to the one described here but with some modifications: http://www.codeproject.com/KB/cs/diffy_helman.aspx\n    ", "Answer": "\r\n(Just thinking out loud)\n\nYou don't need a (complete) mesh of secure relations. \n\nThe point of the PK+Certificate is to distribute a symmetric key. \n\nAny new participant only needs to establish identities with 1 existing node and can then get a copy of that symm key.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography Generate Random Keys\r\n                \r\nI am using the python Cryptography module and I have generated private and public keys using examples from the documentation. The problem I am having is that I want to be able to generate different key pairs. Like I generate one but it is always the same one being generated every time I run it. I've tried reading through the documentation as much as I cam but cannot find any kind of solution to this problem. Thanks.\n    ", "Answer": "\r\nI actually did that a while ago, so i'll just copy/paste my solution :)\n\n```\nimport os\nfrom Cryptodome.PublicKey import RSA\nfrom Cryptodome import Random\n\ndef generate_keypair(bits=2048):\n    random_generator = Random.new().read\n    rsa_key = RSA.generate(bits, random_generator)\n    return rsa_key.exportKey(), rsa_key.publickey().exportKey()\n```\n\n\nTo genarate a random key, you have to include a random generator in RSA.generate.\n\n\n\nA little more human readable:\n\n```\nfrom Cryptodome.PublicKey import RSA\nfrom Cryptodome import Random\n\ndef generate_keypair(bits=2048):\n    random_generator = Random.new().read\n    rsa_key = RSA.generate(bits, random_generator)\n    print(repr(rsa_key))\n    print(repr(rsa_key.publickey()))\n\ngenerate_keypair()\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is apksigner compliant with JCE (Java Cryptography Extension) specification?\r\n                \r\nIs apksigner tool that comes along with Android SDK Build Tools compliant with JCE (Java Cryptography Extension) specification?\n    ", "Answer": "\r\nThe current (as of July 25 2017) ```\napksigner```\n version ```\n0.7```\n released in Andriod SDK Build Tools ```\n26.0.1```\n supports signing using HSM keys via Sun/Oracle's PKCS #11 Provider and its extensions. For example:\n\n```\napksigner sign --provider-class sun.security.pkcs11.SunPKCS11 \\\n  --provider-arg token.cfg --ks NONE --ks-type PKCS11 app.apk\n```\n\n\nAlso see https://geoffreymetais.github.io/code/key-signing/.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Tools for visualizing and implementing elliptic curve cryptography\r\n                \r\nI need to create a program which will show how elliptic curve cryptography works. I was considering using Java Swing to create the GUI, but the main problem is what tool to use to plot the elliptic curve itself, and how to integrate that with Java Swing. \n\nI would like the plot to be included in the user interface and also allow changes to be made to it. Can you suggest any tools that would help with this?\n    ", "Answer": "\r\nThe quickest way to get pixels on screen (and still leverage your Java experience) is to use Processing.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Docker: Installing python cryptography on alpine linux distribution\r\n                \r\nI am a little bit new to Docker and deployment cycle.\n\nI have Django application that we would like to deploy with uWSGI to docker container. Actually the deploy worked perfectly for a few weeks, but now it soundly report error... \n\nError seam to be with cryptography package:\n\n```\nbuild/temp.linux-x86_64-3.6/_openssl.c:52862:10: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]\nbuild/temp.linux-x86_64-3.6/_openssl.c: In function '_cffi_f_SSL_set_options':\nbuild/temp.linux-x86_64-3.6/_openssl.c:52895:14: warning: conversion to 'long int' from 'long unsigned int' may change the sign of the result [-Wsign-conversion]\n   { result = SSL_set_options(x0, x1); }\n              ^~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-3.6/_openssl.c:52895:14: warning: conversion to 'long unsigned int' from 'long int' may change the sign of the result [-Wsign-conversion]\nerror: command 'gcc' failed with exit status 1\n----------------------------------------\nCommand \"/usr/local/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-dg_tg9pa/cryptography/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-my98rwq4/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-dg_tg9pa/cryptography/ \nThe command '/bin/sh -c pip install --no-cache-dir -r requirements.txt' returned a non-zero code: 1\nERROR: Job failed: exit code 1\n```\n\n\nOur docker file looks like \n\n```\nFROM python:3-alpine\n\nENV PYTHONUNBUFFERED 1\n\nWORKDIR /usr/src/app\n\nRUN apk add --no-cache gcc mailcap python3-dev build-base linux-headers pcre-dev postgresql-dev libffi-dev libressl-dev\n\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\n```\n\n\nAs I mention the docker file and requirement.txt hasn't change between success build and failed one. (What is the most strange to me...)\n\nThe only think I could think is that command \n\n```\nFROM python:3-alpine\n```\n\n\nis taking the different version of alpine...\n\nIs this possible? What could be wrong? How to fix it? \n    ", "Answer": "\r\nAlpine is a headache distro for most Python packages that ship C/C++ extensions (code written in C/C++ that is compiled to a shared object and loaded in Python via a foreign function library). The reason for that is that is PEP 513 which portability definition between Linux distros, manylinux1, is based on glibc/glibcxx. Since Alpine uses musl libc, no manylinux1 compatible wheel can be installed on Alpine. So when you issue pip install cryptography, the wheel with the compiled extensions is filtered and pip tries to build the package with all the C extensions from source.\n\ninstalling with the system package manager\n\nThis is the preferred way and was mentioned by @GracefulRestart in the comments; use it if you don't need the bleeding edge version of the package. Install it with apk:\n\n```\n$ apk add py-cryptography\n```\n\n\ninstalling with pip\n\nShould you need the bleeding edge version, you can try building it from source by installing with pip.\n\nPreparing the build environment\n\nYou will need the compiler and libraries with header files: musl, OpenSSL, libffi and Python itself:\n\n```\n$ apk add gcc musl-dev libffi-dev openssl-dev python3-dev\n```\n\n\n\nBuilding \n\n\n\n  $ pip install pkgname\n\n\nhides the build log by default. To see the complete build log, add -vvv to increase verbosity. (Optional) Also, you can explicitly prohibit installing manylinux1 wheels by adding -\n\n\n  -no-binary=pkgname\n\n\nso the build from source will be enforced.\n\n```\n$ pip install cryptography -vvv --no-binary=cryptography\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "IIS TLS Certificate - Chrome says we are using \"obsolete cryptography\"\r\n                \r\nWe have installed a server certificate in IIS for a website. When browsing over HTTPS to the website and inspecting the icon using chrome, we get a message \"Your connection ... is encrypted with obsolete cryptography\".\n\nHow do I configure IIS so that Chrome stops displaying this message, also need to balance the need to support IE>=8.\n\n\n\n[EDIT]: As per the screenshot, we can see that the encryption method used is \"AES_256_CBC with SHA1 for message authentication\". The question is how do we change this in IIS so that Chrome no longer complains about \"Obselete Cryptography\". \n    ", "Answer": "\r\nThe answer Steffen gave is incorrect (although the link he provided does provide the answer if you read further down). The reason Chrome gives the error regarding obsolete cryptography in this case is due to AES in CBC mode.\n\nIt has nothing to do with having a SHA-1 certificate.\n\nThe TL;DR - ignore this error, it doesn't matter.\n\nIf you really want to get rid of the error then you need to enable AES GCM instead. However this is easier said than done. I answered this in full on serverfault recently - see the second half of my answer here;\n\nhttps://serverfault.com/questions/683697/change-key-exchange-mechanism-in-iis-8/683705#683705\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to configure ASP.NET MembershipProvider with custom cryptography?\r\n                \r\nI want to set System.Web.Security.Membership.HashAlgorithmType (or thru web.config) to a custom Cryptography class I created, In this function I have Encrypt and Decrypt functions I wanna map the property value to use this class.\n\nHow do I do this?\n\nPS. I don't mind changing the crypto class' struct, my point is using a custom crypto class.\n\nThanks in advance.\n    ", "Answer": "\r\nI placed the following into the MembershipProvider implementation:\n\n```\nstring PasswordEncryptionKey = \"the Key\"; //should be set somewhere else\ninternal static byte[] EncryptPassword(string password)\n{\n    MD5CryptoServiceProvider hash = new MD5CryptoServiceProvider();\n    byte[] key = hash.ComputeHash(\n                    UTF8Encoding.UTF8.GetBytes(PasswordEncryptionKey));\n    hash.Clear();\n\n    RijndaelManaged rm = new RijndaelManaged();\n    rm.Key = key;\n    rm.Mode = CipherMode.ECB;\n    rm.Padding = PaddingMode.PKCS7;\n\n    ICryptoTransform transform = rm.CreateEncryptor();\n    byte[] bytes = UTF8Encoding.UTF8.GetBytes(password);\n    byte[] result = transform.TransformFinalBlock(bytes, 0, bytes.Length);\n    rm.Clear();\n    return result;\n}\n\ninternal new static string DecryptPassword(byte[] encodedPassword)\n{\n    MD5CryptoServiceProvider hash = new MD5CryptoServiceProvider();\n    byte[] key = hash.ComputeHash(\n                          UTF8Encoding.UTF8.GetBytes(PasswordEncryptionKey));\n    hash.Clear();\n\n    RijndaelManaged rm = new RijndaelManaged();\n    rm.Key = key;\n    rm.Mode = CipherMode.ECB;\n    rm.Padding = PaddingMode.PKCS7;\n\n    ICryptoTransform transform = rm.CreateDecryptor();\n    byte[] result = transform.TransformFinalBlock(\n                              encodedPassword, 0, encodedPassword.Length);\n    rm.Clear();\n    return UTF8Encoding.UTF8.GetString(result); ;\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Signing Certs - python-cryptography library behavior changes between versions\r\n                \r\nI'm using the Cryptography 1.0 library for python to sign SSL certificates with our company's CA. This snippet illustrates the code I'm using.\n\nIn version 1.0, the snippet produces a correctly signed certificate, but when I upgrade any newer version (including 1.0.1), the certificate hierarchy is flat, as you'd expect with a self-signed certificate. The issuer details on the Details tab, is the same, however. But of course the status of the cert signed by 1.7.1 is \"The issuer of this certificate could not be found.\"\n\nThe only variation is the cryptography version. Same python, same system, same OpenSSL library.\n\n\n\nI've reviewed the Cryptography docs, and I can't see what changed in the newer versions. Anyone have sharper eyes?\n\nTIA!!\n    ", "Answer": "\r\nOk, this is a bug in cryptography; filed at #3515.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography AES-CTR in SSH\r\n                \r\nright now im trying to implement an SSH implementation (for educational reasons) and im trying to get the aes-ctr mode right. Im using scapy together with cryptography. I know my Plaintext is correct, because its working in the cbc mode and stays the same for ctr.\nHowever when im encrypting and decrypting the first packet is right and can be handled by the server, but everything after that is false. Im pretty sure my mistake is somewhere at the iv (counter) range, but i cant get it.\nDo i need to increment the iv by myself? I tried it and it didnt work :(\n```\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\n\n\nclass _SSH_Streamcipher:\n    def __init__(self, key, iv, algorithm, mode, block_length=None, key_length=None):\n        self.algorithm = algorithm\n        self.mode = mode\n        self.block_length = block_length\n        self.key_length = key_length\n        self.key = key[:self.key_length]\n        self.iv = iv[:self.block_length]\n        self._cipher = Cipher(self.algorithm(self.key), self.mode(self.iv))\n\n        # for stream ciphers and aes with ctr mode we need both of them the whole time\n        self.decryptor = None\n        self.encryptor = None\n\n    def encrypt(self, data: bytes) -> bytes:\n        if self.encryptor is None:\n            self.encryptor = self._cipher.encryptor()\n        ciphertext = self.encryptor.update(data)\n        return ciphertext\n\n    def decrypt(self, data: bytes) -> bytes:\n        if self.decryptor is None:\n            self.decryptor = self._cipher.decryptor()\n        ciphertext = self.decryptor.update(data)\n        return ciphertext\n\nclass SSH_Cipher_AES_256_CTR(_SSH_Streamcipher):\n    def __init__(self, key, iv):\n        super(SSH_Cipher_AES_256_CTR, self).__init__(key, iv,\n                                                     algorithm=algorithms.AES,\n                                                     mode=modes.CTR,\n                                                     block_length=16, key_length=32)\n```\n\n    ", "Answer": "\r\nquestion answered by myself after many hours. wrong implementation of the overall layout\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How works Public-key cryptography on Github?\r\n                \r\nIn Public-key cryptography is generated a pair of key, one private and one public, the public I put in the Github.\n\nThe Private-key decrypts the data and the Public-key encrypts the data. This means when I sent data to github this data is not encrypted because only Private-key decrypts the data?\n\nUpdate:\n\nThanks guys, i'm understanding now.\n\nI'm was thinking my data is encypted with that way in github when I send push/pulls. This case is used for login/verification/signing. That's all completely different from the encrypted transmission stream that the SSH connection sets up to send my datas.\n\nThanks everyone for your responses...\n    ", "Answer": "\r\nNot wrong at all, but wrong. (a) The private key decrypts the data encrypted by the public key and (b) the public key decrypts the data encrypted by the private key.\n\n(a): Everybody can encrypt something, but only the owner of the private key can decrypt it.\n\n(b): The owner \"encrypt\" something with his private key and everybody can decrypt it, what ensures, the it were really the owner, that encrypts the data and not somebody else.\n\ngit(hub) makes use of the second scenario: If you push something, it its signed with your private key. The receiver now validates the signature againts the public key it knows from you. If its match, everything is fine.\n\nUpdate: A (maybe too) simplified description on what happens (when using github with ssh)\n\n\nGithub sends you something random, that is encrypted with his _private_ key (Maybe its not that random, I dont know, but doesnt matter here)\nYou receive it and decrypt it with his _public_ key. If this is possible, you are sure, that you are really talking to the official github server\nThen you send the same random stuff encrypted with your _private_ key to the github-server\nHe tries to encrypt it with your _public_ key. If this is possible and its the random stuff he has sent you before, he knows for sure, that you are you.\nThen you send you stuff encrypted with his _public_ key. Now only the github server can decrypt. Also he will answer with messages/data encrypted with your _public_ key, because only you can decrypt it.\n\n\nEven if its not completely correct, it should describe the idea.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cryptography fails with \"Expected interface of CipherAlgorithm\"\r\n                \r\nI'm trying to use the cryptography python module (cryptography.io) but cannot implement a working example. From example in documentation.\n\nThis code:\n\n```\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import openssl\nfrom cryptography.hazmat.backends import default_backend\n\ndbackend = default_backend\niv = 'ababababcdcdcdcd1212121234343434'.encode('hex')\ncipher = Cipher(modes.CBC(iv), algorithms.AES('aabbccddaabbccdd1122334411223344'.decode('hex')), backend=dbackend)\n\ne = cipher.encryptor()\nct = e.update(\"Secret messagexx\") + e.finalize()\n\nd = cipher.decryptor()\n\nclear = d.update(ct) + d.finalize()\n```\n\n\nfails with:\n\n```\ncryptography.exceptions.UnsupportedAlgorithm: Backend object does not implement CipherBackend.\n```\n\n\nI then try with openssl backend:\n\n```\nobackend = openssl.backend\ncipher = Cipher(modes.CBC(iv), algorithms.AES('aabbccddaabbccdd1122334411223344'.decode('hex')), backend=obackend)\n```\n\n\nAnd it fails with:\n\n```\nTypeError: Expected interface of CipherAlgorithm.\n```\n\n\nI've been trying to read the docs but I can't even get the example code to work. Any help appreciated.\n\nUpdate - solved:\n\nIn case someone stumbles over this I add this working example here (where I use ECB mode which was what I actually wanted). \n\n```\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import default_backend\n\nbackend = default_backend()\ncipher = Cipher(algorithms.AES('aabbccddaabbccdd1122334411223344'.decode('hex')), modes.ECB(), backend=backend)\n\ne = cipher.encryptor()\nct = e.update(\"Secret messagexx\") + e.finalize()\n\nd = cipher.decryptor()\n\nclear = d.update(ct) + d.finalize()\n\nprint clear\n```\n\n    ", "Answer": "\r\nYou are passing ```\ndefault_backend```\n as the backend argument, but that's actually a function. Call it with ```\ndefault_backend()```\n and it will return a backend object you can pass in.\n\nThe non-hazmat layer does contain a symmetric encryption recipe (known as Fernet), so you may want to consider using that if it meets your needs.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python : Cryptography Fernet : Reduce length of encrypted text generated\r\n                \r\nI am using Cryptography Fernet for encryption and decryption. After encrypting data, it's length is to huge, is there any way to reduce it length or limit it?\nExample : gAAAAABgUZeX2ffM7H07MfyZ2FGPj2xPSPbN0r3rQ1BzfKHsJ7QFUOgsqoOjOAh6Ksq-9fDCrLxb32g0NPbbU6F7lZeSk7Xfgj-2vHHtTjxd3rj02qWGoaQ=\n```\ndef encrypt(message):\n    encoded_message = message.encode()\n    f = Fernet(app.config['SECRET_KEY'])\n    encrypted_message = f.encrypt(encoded_message)\n\n    return encrypted_message.decode()\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ASP.NET cryptography SHA-1 to SHA-2\r\n                \r\nCurrently, I have source code that is calling external web services that is using SHA-1 cryptography and i'm currently calling these external WS by the following \n\n```\nusing System.Security.Cryptography.X509Certificates;\nX509Certificate2 x509Certificate2 = new X509Certificate2(\"client.p12\", \"password\"); \n```\n\n\nand each time calling the WS I have to pass the variable as per below: \n\n```\n WebserviceName.Timeout = 20000000;\n WebserviceName.PreAuthenticate = true;\n WebserviceName.ClientCertificates.Add(x509Certificate2);\n```\n\n\nNow, I was wondering if .NET framework 4.0 supports SHA-2. \n\nPlease advise if X509Certificate2 could be used for SHA-2 and/or any other resource that I could use for this upgrade. \n\nThank you. \n    ", "Answer": "\r\nX.509 certificates themselves do not specify which algorithm is to be used for signature generation / verification. An RSA public key can be used for any RSA based algorithm.\n\nCertificates can however be signed with an algorithm that uses SHA-1 (usually PKCS#1 v1.5 signatures; PSS signatures usually use SHA-2 but both are compatible with SHA-1 and SHA-2). So you must make sure that your certificate itself isn't considered invalid if SHA-1 is not considered secure enough anymore.\n\nSHA-2 has been supported by .NET for a long time (the ```\nSHA256```\n is even in 1.1), but it never hurts to test your configuration.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography AES-CTR in SSH\r\n                \r\nright now im trying to implement an SSH implementation (for educational reasons) and im trying to get the aes-ctr mode right. Im using scapy together with cryptography. I know my Plaintext is correct, because its working in the cbc mode and stays the same for ctr.\nHowever when im encrypting and decrypting the first packet is right and can be handled by the server, but everything after that is false. Im pretty sure my mistake is somewhere at the iv (counter) range, but i cant get it.\nDo i need to increment the iv by myself? I tried it and it didnt work :(\n```\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\n\n\nclass _SSH_Streamcipher:\n    def __init__(self, key, iv, algorithm, mode, block_length=None, key_length=None):\n        self.algorithm = algorithm\n        self.mode = mode\n        self.block_length = block_length\n        self.key_length = key_length\n        self.key = key[:self.key_length]\n        self.iv = iv[:self.block_length]\n        self._cipher = Cipher(self.algorithm(self.key), self.mode(self.iv))\n\n        # for stream ciphers and aes with ctr mode we need both of them the whole time\n        self.decryptor = None\n        self.encryptor = None\n\n    def encrypt(self, data: bytes) -> bytes:\n        if self.encryptor is None:\n            self.encryptor = self._cipher.encryptor()\n        ciphertext = self.encryptor.update(data)\n        return ciphertext\n\n    def decrypt(self, data: bytes) -> bytes:\n        if self.decryptor is None:\n            self.decryptor = self._cipher.decryptor()\n        ciphertext = self.decryptor.update(data)\n        return ciphertext\n\nclass SSH_Cipher_AES_256_CTR(_SSH_Streamcipher):\n    def __init__(self, key, iv):\n        super(SSH_Cipher_AES_256_CTR, self).__init__(key, iv,\n                                                     algorithm=algorithms.AES,\n                                                     mode=modes.CTR,\n                                                     block_length=16, key_length=32)\n```\n\n    ", "Answer": "\r\nquestion answered by myself after many hours. wrong implementation of the overall layout\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA cryptography outputs wrong values\r\n                \r\nI am making a simple program to encrypt/decrypt plain text with RSA cryptography in c#.\nThe problem is that my encryption result and decryption result are identically the same.\nI've debugged my code a lot and if I use as starting values p = 3 and q = 11, the result of E = 3, and result of D = 7. As I said before, encryption and decryption return values are same, I've checked my encryption and decryption methods twice, they're properly written using formulas.\nCould someone explain me what am I doing wrong while finding E or D?\nJust in case, f = φ (n).\n\nHere's a method to find E:\n\n```\n public BigInteger GetE(BigInteger f) \n    {\n        int value = 0;\n\n        for(int i = 2; i < n2; i++)\n        {             \n           if (gcd(f, i) == 1)\n            {\n                value = i;\n                break;\n\n            }          \n        }\n        return value;\n\n    }\n\n    BigInteger GetGCD(BigInteger a, BigInteger b)\n    {\n\n        if (a == 0)\n            return b;\n        return gcd(b % a, a);\n    }\n```\n\n\nHere's a method to find D:\n\n```\n BigInteger GetPrivateKey(BigInteger f, BigInteger e)\n    {\n        BigInteger d = 0;\n        for (int i = 1; i <= e; i++)\n        {\n            d = (1 + i * f) / e; \n            if (d % 1 == 0)\n            {                   \n                break;\n            }\n        }\n        return d;\n    }\n```\n\n\nEncryption method(Array is declared as global):\n\n```\n public BigInteger[] GetEncryptedValues(int length)\n    {\n        encryptedValues = new BigInteger[length];\n        for (int i = 0; i < textValues.Length; i++)\n        {\n            BigInteger k = GetPow(textValues[i], e);\n            k %= n;\n\n            encryptedValues[i] = k;\n        }\n\n        return encryptedValues;\n    }\n```\n\n\nDecryption:\n\n```\n privateKey = GetPrivateKey(f, e);\n\n        BigInteger[] decryptedValues = new BigInteger[length];\n\n        for (int i = 0; i < encryptedValues.Length; i++)\n        {\n            BigInteger k = GetPow(encryptedValues[i], privateKey);\n            k %= n;\n            decryptedValues[i] = k;\n        }\n```\n\n\nGetPow method:\n\n```\n public static BigInteger GetPow(BigInteger a, BigInteger b)\n    {\n        BigInteger result = 1;\n        for (BigInteger i = 1; i < b; i++)\n            result *= a;\n        return result;\n    }\n```\n\n\nString to bytes:\n\n```\n public byte[] GetTextValues(string text)\n    {\n        byte[] asciiBytes = Encoding.ASCII.GetBytes(text);\n\n        return asciiBytes;\n    }\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography in java bytes to bits\r\n                \r\nI wrote server and client and I would like to send some file which will be encrypted. So I have to operate on bits, not bytes, because my cryptography metod is like that: I send my file in parts of about 8 bits and I add to them some specific MAC. (its: winnowing and Chaffing metod)\n\nIn my program I read file into byte array. But I need byte to bits to add MAC adress to each part of file and send them in parts. \n\nMy question is:\nIs there any posibility to operate on bits in Java, or if not how would you solve this problem? \n    ", "Answer": "\r\nWhy dont you just use SSL or TLS? Or any other built in security protocol. It seems weird to re-invent the wheel here.\n\nOften, proprietary encryption systems are less secure than well known ones, because they have not been subject to public scrutiny.\n\nThe fact that nobody knows about it does not make it more secure. \"Security by Obscurity\" is never the best practice.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to encrypt a variable with the cryptography module?\r\n                \r\nI'm not sure if any of you are familiar with the cryptography module, but I'm trying to encrypt a variable that stands for a string. \n\nFor example:\n\n```\nstring = input('String here')\n```\n\n\nThe example they give on the module page is:\n\n```\nfrom cryptography.fernet import Fernet\nkey = Fernet.generate_key()\ncipher_suite = Fernet(key)\ncipher_text = cipher_suite.encrypt(b\"A really secret message. Not for prying eyes.\")\nplain_text = cipher_suite.decrypt(cipher_text)\n```\n\n\nWhich is all fine and dandy, but when I try and replace the \"Really secret message string with a variable, It doesn't work.\n\nIf it's in quotes, it just prints the name of the variable(duh)\n\nIf it's out of quotes like this: cipher_text = ```\ncipher_suite.encrypt(bstring)```\n, it says variable is not defined(also duh)\n\nBut if I just put the variable in, it gives me an error: ```\nTypeError: data must be bytes.```\n\n\nAny ideas? Thanks!\n    ", "Answer": "\r\nAccording to the Python documentation, \n\n\n  bytes and bytearray objects are sequences of integers (between 0 and 255), representing the ASCII value of single bytes\n\n\nI think the input needs to be like so\n\n```\na = b\"abc\"\n```\n\n\n(Note the \"b\"). \n\nAn alternate way of achieving this is \n\n```\na = bytes(\"abc\")\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Rust Decrypt from Python cryptography\r\n                \r\nI used cryptography to encrypt image file in Python. The code is here:\n```\nimport hashlib\nimport base64\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import padding\nimport time\n\nkey = \"secretkey\"\nkeyBytes = hashlib.sha256(key.encode()).digest()\n\nivBytes = b\"\\xda\\xe4\\x87\\xa7i\\x8arbOC\\xbd \\x02\\xbc*[\"\n\nfile_name = \"1024.jpg\"\n\nwith open(file_name, \"rb\") as f:\n    imageBytes = f.read()\n\ncipher = Cipher(algorithms.AES(keyBytes), modes.CBC(ivBytes), backend=default_backend())\n\nencryptor = cipher.encryptor()\npadder = padding.PKCS7(algorithms.AES.block_size).padder()\nimageBytes = padder.update(imageBytes) + padder.finalize()\nencryptedImageBytes = encryptor.update(imageBytes) + encryptor.finalize()\n\nencodedImageString = base64.b64encode(encryptedImageBytes).decode()\n\nencrpyted_file_name = \"encrypted_image\" + file_name\nwith open(encrpyted_file_name, \"wb\") as f:\n    f.write(encryptedImageBytes)\n```\n\nand I got encrpyted_image1024.jpg. Now I want to decrypt this file in Rust. The code is here :\n```\nuse std::fs;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::Path;\n\nuse base64;\nuse crypto::aes::{cbc_decryptor, KeySize};\nuse crypto::blockmodes::NoPadding;\nuse crypto::buffer::{RefReadBuffer, RefWriteBuffer};\n\nfn main() {\n    let mut file = File::open(\"./src/encrypted_image1024.jpg\").unwrap();\n    let mut encrypted_image = Vec::new();\n    file.read_to_end(&mut encrypted_image).unwrap();\n    println!(\"{:?}\", &encrypted_image);\n\n    let decoded_image = base64::decode(&encrypted_image).unwrap();  // error\n\n    let key = b\"secretkey\";\n    let iv = b\"\\xda\\xe4\\x87\\xa7i\\x8arbOC\\xbd \\x02\\xbc*[\";\n    let mut decryptor = cbc_decryptor(KeySize::KeySize256, key, iv, NoPadding);\n    let mut decrypted_image = Vec::<u8>::new();\n    let mut read_buffer = RefReadBuffer::new(&decoded_image);\n    let mut write_buffer = RefWriteBuffer::new(&mut decrypted_image);\n    decryptor\n        .decrypt(&mut read_buffer, &mut write_buffer, true)\n        .unwrap();\n\n    let path = Path::new(\"decrypted_image1024.jpg\");\n    let mut file = File::create(&path).unwrap();\n    file.write_all(&decrypted_image).unwrap();\n}\n```\n\nI got the error : ```\nErr` value: InvalidByte(1, 59)```\n in base64::decode(&encrypted)_image), and I found this error occurred because the bytes of image file is not Base64.\nSo I printed the encrypted_image like using ```\nprintln!(\"{:?}\", &encrypted_image);```\n and the result was:\n```\n[11, 90, 193, 68, 189, 179, 37, 240, 16, 87, 141, 123, 112, 213, 173, 242, 218, 0, 219, 151, 151, 53, 30, 96, 168, 90, 105, 62, 16, 52, 152, 8, 33, 2, 158, 52, 52, 112, 113, 203, 169, 32, 251, 203, 203, 177, 242, 199, 174, 203, 198, 111, 2, 54, 96, 207, 117, 115, 12, 18, 136, 189, 11, 155, 10, 79, 252, 122, 172, 208, 124, 116, 179, 34, 52, 239, 159, 142, 218, 153, 217, 224, 210, 225, 171, 190, 163, 7, 113, 67, 165, 6, 126, 47, 101, 43, 113, 254, 30, 201, 0, 192, 121, 252, 199, 39, 112, 119, 0, 48, 58, 124, 162, 124, 77, 115, 134, 40, 19, 172, 171, 165, 167, 14, 77, 155, 138, 48, 71, 157, 65, 146, 84, 130, 95, 79, 58, 45, 198, 164, 141, 249, 119, 25, 240, 149, 72, 129, 194, 31, 234] // it's too long, so I shortened..\n```\n\nIn this situation, do I need to change using base64 encoding in Python code? Or Is there any way to decrpyt this kind of bytes in Rust?\nMany thanks :)\n    ", "Answer": "\r\nThanks for @freaskish, I changed my Python code not using base64 encoding, and write ```\nencryptedImageBytes```\n. Here's my Python code :\n```\nimport hashlib\nimport base64\nfrom cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import padding\nimport time\n\nkey = \"oingisprettyintheworld1234567890\"\nkeyBytes = hashlib.sha256(key.encode()).digest()\n\nivBytes = b\"\\xda\\xe4\\x87\\xa7i\\x8arbOC\\xbd \\x02\\xbc*[\"\n\nfile_name = \"1024.jpg\"\n\nwith open(file_name, \"rb\") as f:\n    imageBytes = f.read()\n\ncipher = Cipher(algorithms.AES(keyBytes), modes.CBC(ivBytes), backend=default_backend())\n\nencryptor = cipher.encryptor()\npadder = padding.PKCS7(algorithms.AES.block_size).padder()\nimageBytes = padder.update(imageBytes) + padder.finalize()\nencryptedImageBytes = encryptor.update(imageBytes) + encryptor.finalize()\n\nencrpyted_file_name = \"encrypted_image\" + file_name\nwith open(encrpyted_file_name, \"wb\") as f:\n    f.write(encryptedImageBytes)\n```\n\nand In rust, I put ```\nencrypted_image_bytes```\n to ```\nread_buffer```\n right away.\n```\nuse std::fs;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::Path;\n\nuse base64;\nuse crypto::aes::{cbc_decryptor, KeySize};\nuse crypto::blockmodes::NoPadding;\nuse crypto::buffer::{RefReadBuffer, RefWriteBuffer};\n\nfn main() {\n    let mut file = File::open(\"./src/encrypted_image1024.jpg\").unwrap();\n    let mut encrypted_image = Vec::new();\n    let mut encrypted_image_bytes = Vec::new();\n    file.read_to_end(&mut encrypted_image_bytes).unwrap();\n\n    let key = b\"oingisprettyintheworld1234567890\";\n    let iv = b\"\\xda\\xe4\\x87\\xa7i\\x8arbOC\\xbd \\x02\\xbc*[\";\n    let mut decryptor = cbc_decryptor(KeySize::KeySize256, key, iv, NoPadding);\n    let length = encrypted_image_bytes.len();\n    let mut decrypted_image = vec![0; length];\n    let mut read_buffer = RefReadBuffer::new(&encrypted_image_bytes);\n    let mut write_buffer = RefWriteBuffer::new(&mut decrypted_image);\n    decryptor\n        .decrypt(&mut read_buffer, &mut write_buffer, true)\n        .unwrap();\n\n    let path = Path::new(\"decrypted_image1024.jpg\");\n    let mut file = File::create(&path).unwrap();\n    file.write_all(&decrypted_image).unwrap();\n}\n```\n\nAnd this code didn't get any compile error, but I coundn't open the result, 'decrypted_image1024.jpg' file. I think there was something wrong in decryption..\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cdk Project in an Ubuntu environment running on WSL2 - cryptography is not a supported wheel on this platform\r\n                \r\nI am using Poetry and trying to install a Python 3.9.5 cdk project in an Ubuntu environment running on WSL2. I get this error message, but its not a package I have referenced in the pyproject.toml\n```\nCommand ['/home/john/dev/project/.venv/bin/python', '-m', 'pip', 'install', '--disable-pip-version-check', '--isolated', '--no-input', '--prefix', '/home/john/dev/project/.venv', '--no-deps', '/home/john/.cache/pypoetry/artifacts/a5/1a/ee/80cfaef968ccdefdb8d69f4cf8e39d064da498dfed7b7ad17529cbb570/cryptography-39.0.0-cp36-abi3-manylinux_2_28_x86_64.whl'] errored with the following return code 1, and output:\n  ERROR: cryptography-39.0.0-cp36-abi3-manylinux_2_28_x86_64.whl is not a supported wheel on this platform.\n```\n\nDoes anyone know how to locate the package causing this error or what are the ways to support/enable that particular cryptography package? I tried installing cryptography ```\nsudo apt-get install python-cryptography```\n but that didn't help either.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What is protected division? (in reference to genetic programming and cryptography)\r\n                \r\nI am getting references in a paper on genetic programming, to a \"protected division\" operation. When I google this, i get mostly papers on genetic programming and various results related to cryptography, but none that explain what it actually is. Does anybody know?\n    ", "Answer": "\r\n\n  Protected division (often notated with %) checks to see if its second\n  argument is 0. If so, % typically returns the value 1 (regardless of\n  the value of the first argument).\n\n\nhttp://en.wikipedia.org/wiki/Genetic_programming\n\nIn cryptography it doesn't seem to be well-defined, but the top google hit is for protecting against side channel attacks (in that case, via power use - you can guess what numbers are being used in the division by looking at the power consumption of the hardware doing the encryption)  http://dl.acm.org/citation.cfm?id=1250996 http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.9.7298&rep=rep1&type=pdf\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Securing Java RMI with Asymmetric key cryptography\r\n                \r\nI have a requirement to secure the Java RMI calls with Asymmetric key cryptography (RSA) in a Peer 2 Peer File sharing application.\n\nI referred this, but it uses a passphrase (Symmetric Key) to XOR the messages. I want that the client encrypts the RMI Socket stream with server's public key and the server should use its private key to decrypt the socket input stream. \nAssumption: Every node in the P2P File sharing application has each other's public key\n\nSince there can be multiple client-servers (P2P nodes), the clients should use the relevant server's public key to encrypt the socket stream data.\n\nI could not find any other reference using asymmetric key to secure RMI calls. Please help.\n\nUPDATE:\n\nI'm a student and this is a university project where I have to secure the communications happening over the RMI using RSA cryptography. So, I don't have any choice left. \n\nIn the previous projects, I created a Napster & Gnutella style P2P file sharing system. Now the task is to use RSA to encrypt the communications between nodes using their public-private keys.\n\nI really appreciate any help/guidance in this direction. Please do not close this question.\n\nUPDATE 2\nImplement RSA cryptography without using in-built libraries except ```\njava.math.BigInteger```\n and ```\njava.security.SecureRandom```\n\n    ", "Answer": "\r\nI don't know if I should answer my own question.\n\nI tried many approaches but I got exceptions and the nodes were not starting. So, I believe there is not a generic way to secure RMI communications through RSA cryptography for my situations.\n\nSo, I tried a different approach.\n\nI changed the method signature of the RMI methods in the interface and implementations from\n\n```\npublic void query(MessageID messageID, long TTL, String fileName, String upstreamIP) throws RemoteException\n```\n\n\nto \n\n```\npublic void query(byte[] bytes) throws RemoteException\n```\n\n\nNow, before every RMI call, I convert the arguments to a custom object and then into bytes, apply the RSA encryption using the sender's private key to convert into encrypted bytes and then pass it to the server.\n\nOn the server end, collect the bytes, decrypt them using the sender's RSA public key and then cast to the custom object, extract the information and finally pass to the business logic. This process is done on each RMI call.\n\nThis is similar to the sockets, where we write everything into the the stream. Eventually, in the RMI call, the objects which we pass are converted into bytes. So, using this approach I'm explicitly converting them into bytes and then apply the encryption and pass it through RMI. Over the network, it will be transferred as encrypted bytes. This will be for all the RMI calls which includes the messages as well as the file content.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to integrate CoinGate APIS for cryptography in asp.net c#?\r\n                \r\nevery one I need to integrate Cryptography currency in our project.And I have to choose CoinGate APIS for Cryptography currency. I am new for this Cryptography payment integration so any know how can do with the asp.net with MVC c#.\nI have created one demo for the payment integration and I go for the create order but that time I am getting an error Unauthorized. And In this demo I have not idea how can set callback_url for the payment etc.. Anyone know how can do that then please let me know.\nHere below I have listed my code.\nI have to go with this URL: \n\n```\nhttps://github.com/cizu64/Coingate.net\n```\n\n\nThis is my controller Index method for the go create order:\n\n```\n    public async Task<ActionResult> Index()\n    {\n        var cg = new Coingate.Net.Coingate(apikey, apiSecret,appId);\n        var orders = await cg.CreateOrder(new Order\n        {\n            Price = 100,\n            Currency = \"USD\",\n            ReceiveCurrency = \"BTC\"\n        });\n        return View();\n    }\n\n public async Task<dynamic> CreateOrder(Order dto, string resourcePath = \"/v1/orders/\")\n    {\n        _client.BaseAddress = new Uri(_baseUri);\n        ConfigureHeaders(Signature());\n        var body = new FormUrlEncodedContent(new[]\n        {\n            new KeyValuePair<string, string>(\"order_id\", dto.OrderId.ToString()),\n            new KeyValuePair<string, string>(\"price\", dto.Price.ToString()),\n            new KeyValuePair<string, string>(\"currency\", dto.Currency),\n            new KeyValuePair<string, string>(\"receive_currency\", dto.ReceiveCurrency),\n            new KeyValuePair<string, string>(\"title\", dto.Title),\n            new KeyValuePair<string, string>(\"description\", dto.Description),\n            new KeyValuePair<string, string>(\"callback_url\", dto.CallbackUrl),\n            new KeyValuePair<string, string>(\"cancel_url\", dto.CancelUrl),\n            new KeyValuePair<string, string>(\"success_url\", dto.SuccessUrl)\n        });\n        var response = await _client.PostAsync(resourcePath, body);\n        if (!response.IsSuccessStatusCode) return HttpStatusCode.BadRequest;\n        var order = await response.Content.ReadAsAsync<dynamic>();\n        return order;\n    }\n```\n\n\nThis is my order class:\n\n```\n    public int OrderId { get; set; }\n    public double Price { get; set; }\n    public string Currency { get; set; }\n    public string ReceiveCurrency { get; set; }\n    public string Title { get; set; }\n    public string Description { get; set; }\n    public string CallbackUrl { get; set; }\n    public string CancelUrl { get; set; }\n    public string SuccessUrl { get; set; }\n```\n\n\nAnyone know how can do that then please let me know.\n    ", "Answer": "\r\nSo i took a look at the linked github to see how the request was made, and noticed that in the creation there is a sandbox boolean.\n\nWhen this is entered it redirects to a diffrent API\n\nSandbox: https://api-sandbox.coingate.com/\n\nNon-sandbox: https://api.coingate.com/\n\nThe sandbox requires an different account to be created, which is why you are getting the Unauthorized as i'm guessing you are using the credentials from the production entviroment.\n\nYou can solve this in 2 ways, 1. Create an account on the sandbox enviroment.\n2. change ```\nvar cg = new Coingate.Net.Coingate(apikey, apiSecret,appId);```\n to ```\nvar cg = new Coingate.Net.Coingate(apikey, apiSecret,appId, false);```\n\n\nThis can be all found here\n\nRegarding the callback URL. This can easily be added in the following way\n\n```\nvar orders = cg.CreateOrder(new Order\n{\n    Price = 100,\n    Currency = \"USD\",\n    ReceiveCurrency = \"BTC\",\n    CallbackUrl = \"url here\"\n});\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Most efficient cryptography method for encrypting a string\r\n                \r\nWhat is the most efficient method / cryptography provider for encrypting strings which results in the shortest possible string. Our goal is that we have to encrypt a string and we want to achieve the shortest possible string after encryption. \n\nSo far we have tested with Tripple DES and Rijndael and both resulted in exactly the same encrypted length. I have also played around with longer and shorter key sizes but that also did not make much difference. \n\nI'm not much of an expert on cryptography so I don't know if there is perhaps some mathematical reason or explanation why a string of length y can only be encrypted to length x - hoping to hear from your expert opinions.\n    ", "Answer": "\r\nHow long are your strings?  Very long strings can be compressed before encryption.\n\nTo produce a cyphertext the same length as the plaintext you can:\n\n\nuse a stream cypher such as RC4, or one of the eSTREAM cyphers\nuse a block cypher (e.g. AES) in CTR mode.\n\n\nIf your strings are all exactly 8 bytes or all 16 bytes, then you could use a block cypher with the appropriate block size in ECB mode and no padding.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error with cryptography, cffi on Apple M1 processor\r\n                \r\nMy system:\nApple M1 Max, Ventura 13.0.1\nPython 3.8.15\nPip 22.3.1\nTrying to install project, by running ```\npip install -r requirements.txt```\n\n```\nrequirements.txt```\n contains:\nhttps://privatebin.net/?a124b74f822ae43b#HxpLMnYwSz5hKqvv129A5Qpq4n3WsnYRW8JiJntXLVZN\nHere's the error output I get:\n```\nBuilding wheels for collected packages: cffi, numpy, pillow, reportlab\nERROR: Failed building wheel for cffi\n\nBuilding wheel for pillow (setup.py) ... error\n  error: subprocess-exited-with-error\n\nFailed to build cffi numpy pillow reportlab\nERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects\n```\n\nFull output: https://privatebin.net/?99bd0ca11b7969e0#Bg6rjoznhdzekjPD82G5Myou1m5kHjPtaxhrZQUJxdSm\nI would be very grateful for any help!\nI tried upgrading pip, installing pillow, cryptography, cffi, numpy manually. Re-installed project and recreated venv a couple of times.\n    ", "Answer": "\r\nSharing my way of resolving.\nDelete the system/delete the user on your Mac and first thing first, install Rosetta 2.\nAfter it, run your Terminal in Rosetta mode and install Python + all the requirements using the Terminal in Rosetta mode.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Most efficient cryptography method for encrypting a string\r\n                \r\nWhat is the most efficient method / cryptography provider for encrypting strings which results in the shortest possible string. Our goal is that we have to encrypt a string and we want to achieve the shortest possible string after encryption. \n\nSo far we have tested with Tripple DES and Rijndael and both resulted in exactly the same encrypted length. I have also played around with longer and shorter key sizes but that also did not make much difference. \n\nI'm not much of an expert on cryptography so I don't know if there is perhaps some mathematical reason or explanation why a string of length y can only be encrypted to length x - hoping to hear from your expert opinions.\n    ", "Answer": "\r\nHow long are your strings?  Very long strings can be compressed before encryption.\n\nTo produce a cyphertext the same length as the plaintext you can:\n\n\nuse a stream cypher such as RC4, or one of the eSTREAM cyphers\nuse a block cypher (e.g. AES) in CTR mode.\n\n\nIf your strings are all exactly 8 bytes or all 16 bytes, then you could use a block cypher with the appropriate block size in ECB mode and no padding.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error with cryptography, cffi on Apple M1 processor\r\n                \r\nMy system:\nApple M1 Max, Ventura 13.0.1\nPython 3.8.15\nPip 22.3.1\nTrying to install project, by running ```\npip install -r requirements.txt```\n\n```\nrequirements.txt```\n contains:\nhttps://privatebin.net/?a124b74f822ae43b#HxpLMnYwSz5hKqvv129A5Qpq4n3WsnYRW8JiJntXLVZN\nHere's the error output I get:\n```\nBuilding wheels for collected packages: cffi, numpy, pillow, reportlab\nERROR: Failed building wheel for cffi\n\nBuilding wheel for pillow (setup.py) ... error\n  error: subprocess-exited-with-error\n\nFailed to build cffi numpy pillow reportlab\nERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects\n```\n\nFull output: https://privatebin.net/?99bd0ca11b7969e0#Bg6rjoznhdzekjPD82G5Myou1m5kHjPtaxhrZQUJxdSm\nI would be very grateful for any help!\nI tried upgrading pip, installing pillow, cryptography, cffi, numpy manually. Re-installed project and recreated venv a couple of times.\n    ", "Answer": "\r\nSharing my way of resolving.\nDelete the system/delete the user on your Mac and first thing first, install Rosetta 2.\nAfter it, run your Terminal in Rosetta mode and install Python + all the requirements using the Terminal in Rosetta mode.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Invalid key exception when doing elliptical curve cryptography\r\n                \r\nI got this error when I did elliptical curve cryptography using flexyprovider. I received an InvalidKeyException but I can't figure out how to solve it:\n\n```\nException in thread \"main\" java.security.InvalidKeyException: Illegal key size\nat javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1024)\nat javax.crypto.Cipher.init(Cipher.java:1345)\nat javax.crypto.Cipher.init(Cipher.java:1282)\nat ExampleECIES.main(ExampleECIES.java:43)\n```\n\n\nThis is my code  \n\n```\npublic class ExampleECIES {\n\n    public static void main(String[] args) throws Exception {\n\n    Security.addProvider(new FlexiCoreProvider());\n    Security.addProvider(new FlexiECProvider());\n\n    KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"ECIES\", \"FlexiEC\");\n\n    CurveParams ecParams = new BrainpoolP160r1();\n\n    kpg.initialize(ecParams, new SecureRandom());\n    KeyPair keyPair = kpg.generateKeyPair();\n    PublicKey pubKey = keyPair.getPublic();\n    PrivateKey privKey = keyPair.getPrivate();\n\n    // Encrypt\n\n    Cipher cipher = Cipher.getInstance(\"ECIES\", \"FlexiEC\");\n\n    IESParameterSpec iesParams = new IESParameterSpec(\"AES128_CBC\",\n        \"HmacSHA1\", null, null);\n    System.out.println(iesParams);\n    cipher.init(Cipher.ENCRYPT_MODE, pubKey, iesParams);\n\n    String cleartextFile = \"cleartext.txt\";\n    String ciphertextFile = \"ciphertextECIES.txt\";\n\n    byte[] block = new byte[64];\n    FileInputStream fis = new FileInputStream(cleartextFile);\n    FileOutputStream fos = new FileOutputStream(ciphertextFile);\n    CipherOutputStream cos = new CipherOutputStream(fos, cipher);\n\n    int i;\n    while ((i = fis.read(block)) != -1) {\n        cos.write(block, 0, i);\n    }\n    cos.close();\n\n    // Decrypt\n\n    String cleartextAgainFile = \"cleartextAgainECIES.txt\";\n\n    cipher.init(Cipher.DECRYPT_MODE, privKey, iesParams);\n\n    fis = new FileInputStream(ciphertextFile);\n    CipherInputStream cis = new CipherInputStream(fis, cipher);\n    fos = new FileOutputStream(cleartextAgainFile);\n\n    while ((i = cis.read(block)) != -1) {\n        fos.write(block, 0, i);\n    }\n    fos.close();\n    }\n\n}\n```\n\n\nCan anyone please help me? I'm using JDK version 1.7.0_25.\n    ", "Answer": "\r\nI had the same problem when looking at the same example. I solved it with this answer.\n\nRoot Cause :\n\nThere are key size restrictions with the default JDK comes with - which limits it to 128. If your security policy uses a key size larger than this - then the exception is thrown.\n\nSolution :\n\nYou need to patch your JDK with Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files.\n\nInstructions on how to download JCE Policy files\n\nsrc: java.security.InvalidKeyException: Illegal key size or default parameters\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Scrapy installation fails while installing cryptography package\r\n                \r\nI am trying to install scrapy with \"pip install scrapy\" . I followed the instructions as mentioned on http://doc.scrapy.org/en/latest/intro/install.html#intro-install-platform-notes. It first starts downloading packages and running setup.py for each but fails while trying to install cryptography package. Does any one know how to resolve this issue. Here is my complete traceback:\n\n```\n    C:\\Users\\Mubashar Kamran>pip install scrapy\n    Downloading/unpacking scrapy\n  Downloading Scrapy-0.24.4.tar.gz (783kB): 783kB downloaded\n  Running setup.py egg_info for package scrapy\n\n    no previously-included directories found matching 'docs\\build'\nRequirement already satisfied (use --upgrade to upgrade): Twisted>=10.0.0 in c:\\\npython27\\lib\\site-packages (from scrapy)\nDownloading/unpacking w3lib>=1.8.0 (from scrapy)\n  Downloading w3lib-1.10.0.tar.gz\n  Running setup.py egg_info for package w3lib\n\nDownloading/unpacking queuelib (from scrapy)\n  Downloading queuelib-1.2.2.tar.gz\n  Running setup.py egg_info for package queuelib\n\nRequirement already satisfied (use --upgrade to upgrade): lxml in c:\\python27\\li\nb\\site-packages (from scrapy)\nDownloading/unpacking pyOpenSSL (from scrapy)\n  Downloading pyOpenSSL-0.14.tar.gz (128kB): 128kB downloaded\n  Running setup.py egg_info for package pyOpenSSL\n\n    warning: no previously-included files matching '*.pyc' found anywhere in dis\ntribution\n    no previously-included directories found matching 'doc\\_build'\nDownloading/unpacking cssselect>=0.9 (from scrapy)\n  Downloading cssselect-0.9.1.tar.gz\n  Running setup.py egg_info for package cssselect\n\n    no previously-included directories found matching 'docs\\_build'\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in c:\\pytho\nn27\\lib\\site-packages (from scrapy)\nRequirement already satisfied (use --upgrade to upgrade): zope.interface>=3.6.0\nin c:\\python27\\lib\\site-packages (from Twisted>=10.0.0->scrapy)\nDownloading/unpacking cryptography>=0.2.1 (from pyOpenSSL->scrapy)\n  Downloading cryptography-0.5.4.tar.gz (320kB): 320kB downloaded\n  Running setup.py egg_info for package cryptography\n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"c:\\users\\mubash~1\\appdata\\local\\temp\\pip_build_Mubashar Kamran\\crypt\nography\\setup.py\", line 174, in <module>\n        \"test\": PyTest,\n      File \"C:\\Python27\\lib\\distutils\\core.py\", line 112, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"build\\bdist.win32\\egg\\setuptools\\dist.py\", line 239, in __init__\n      File \"build\\bdist.win32\\egg\\setuptools\\dist.py\", line 263, in fetch_build_\neggs\n      File \"build\\bdist.win32\\egg\\pkg_resources.py\", line 568, in resolve\n        if entry is None:\n      File \"build\\bdist.win32\\egg\\pkg_resources.py\", line 806, in best_match\n        is returned.\n      File \"build\\bdist.win32\\egg\\pkg_resources.py\", line 818, in obtain\n\n      File \"build\\bdist.win32\\egg\\setuptools\\dist.py\", line 313, in fetch_build_\negg\n      File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 609,\n in easy_install\n\n      File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 639,\n in install_item\n\n      File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 825,\n in install_eggs\n\n      File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 1031\n, in build_and_install\n\n      File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 1019\n, in run_setup\n\n    distutils.errors.DistutilsError: Setup script exited with error: Unable to f\nind vcvarsall.bat\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"c:\\users\\mubash~1\\appdata\\local\\temp\\pip_build_Mubashar Kamran\\cryptogra\nphy\\setup.py\", line 174, in <module>\n\n    \"test\": PyTest,\n\n  File \"C:\\Python27\\lib\\distutils\\core.py\", line 112, in setup\n\n    _setup_distribution = dist = klass(attrs)\n\n  File \"build\\bdist.win32\\egg\\setuptools\\dist.py\", line 239, in __init__\n\n  File \"build\\bdist.win32\\egg\\setuptools\\dist.py\", line 263, in fetch_build_eggs\n\n\n  File \"build\\bdist.win32\\egg\\pkg_resources.py\", line 568, in resolve\n\n    if entry is None:\n\n  File \"build\\bdist.win32\\egg\\pkg_resources.py\", line 806, in best_match\n\n    is returned.\n\n  File \"build\\bdist.win32\\egg\\pkg_resources.py\", line 818, in obtain\n\n\n\n  File \"build\\bdist.win32\\egg\\setuptools\\dist.py\", line 313, in fetch_build_egg\n\n  File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 609, in\neasy_install\n\n\n\n  File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 639, in\ninstall_item\n\n\n\n  File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 825, in\ninstall_eggs\n\n\n\n  File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 1031, in\n build_and_install\n\n\n\n  File \"build\\bdist.win32\\egg\\setuptools\\command\\easy_install.py\", line 1019, in\n run_setup\n\n\n\ndistutils.errors.DistutilsError: Setup script exited with error: Unable to find\nvcvarsall.bat\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in c:\\users\\mubash~1\\a\nppdata\\local\\temp\\pip_build_Mubashar Kamran\\cryptography\nStoring complete log in C:\\Users\\Mubashar Kamran\\pip\\pip.log\n\nC:\\Users\\Mubashar Kamran>\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How does the User1 send the encryption and decryption key to User2 in Symmetric Cryptography?\r\n                \r\nIn cryptography and specifically in symmetric cryptography , When message is sent from User1 after encrypting it using a key so that the attacker cannot read the message , My doubt is how can the attacker not see the key or how does User1 send the key to User2??\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Install pip3 install quandl -returns Failed cleaning build dir for cryptography\r\n                \r\nI have following configuration\n\n\nUbuntu 16.04 LTS\nPython 3.5 \npip 8.1.1.\ncffi 1.8.3\nIDE PyCharm 2.3 (is not important but just in case)\n\n\nI have checked the article Python Cryptography package with PIP and setup.py - Failed to install Python Cryptography package with PIP and setup.py. Nothing seems to work out.\n\nI have the latest versions of modules (setuptools e.t.c.)\n\nIt seems that is trying to build a constructor  and finds some mismatch version\n\n```\n          File \"/tmp/pip-build-nrsep1ln/cryptography/src/_cffi_src/utils.py\", line 69, in build_ffi\n      ffi = FFI()\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/api.py\", line 59, in __init__\n      \"version mismatch, %s != %s\" % (backend.__version__, __version__)\n  AssertionError: version mismatch, 1.5.2 != 1.8.3\n\n       MY SYSTEM HAS 1.8.3 VERSION SEE BELOW\n----------------------------------------------------------------------  \nCollecting cffi - see http://cffi.readthedocs.io/en/latest/installation.html\n\n  Using cached cffi-1.8.3-cp35-cp35m-manylinux1_x86_64.whl\nCollecting pycparser (from cffi)\nInstalling collected packages: pycparser, cffi\nSuccessfully installed cffi-1.8.3 pycparser-2.16\n------------------------------------------------------\n```\n\n\nJust take in mind that I'm not an OS expert\nThank you for your support\n\nthe console command history for pip3 install quandl\n\n```\npip3 install quandl\nCollecting quandl\n  Using cached Quandl-3.0.1-py2.py3-none-any.whl\nCollecting numpy>=1.8 (from quandl)\n  Using cached numpy-1.11.2-cp35-cp35m-manylinux1_x86_64.whl\nCollecting more-itertools (from quandl)\nCollecting inflection>=0.3.1 (from quandl)\nCollecting pyOpenSSL (from quandl)\n  Using cached pyOpenSSL-16.2.0-py2.py3-none-any.whl\nCollecting six (from quandl)\n  Using cached six-1.10.0-py2.py3-none-any.whl\nCollecting python-dateutil (from quandl)\n  Using cached python_dateutil-2.5.3-py2.py3-none-any.whl\nCollecting pyasn1 (from quandl)\n  Using cached pyasn1-0.1.9-py2.py3-none-any.whl\nCollecting pandas>=0.14 (from quandl)\n  Using cached pandas-0.19.0-cp35-cp35m-manylinux1_x86_64.whl\nCollecting requests>=2.7.0 (from quandl)\n  Using cached requests-2.11.1-py2.py3-none-any.whl\nCollecting ndg-httpsclient (from quandl)\nCollecting cryptography>=1.3.4 (from pyOpenSSL->quandl)\n  Using cached cryptography-1.5.2.tar.gz\nCollecting pytz>=2011k (from pandas>=0.14->quandl)\n  Using cached pytz-2016.7-py2.py3-none-any.whl\nCollecting idna>=2.0 (from cryptography>=1.3.4->pyOpenSSL->quandl)\n  Using cached idna-2.1-py2.py3-none-any.whl\nCollecting setuptools>=11.3 (from cryptography>=1.3.4->pyOpenSSL->quandl)\n  Using cached setuptools-28.6.1-py2.py3-none-any.whl\nCollecting cffi>=1.4.1 (from cryptography>=1.3.4->pyOpenSSL->quandl)\n  Using cached cffi-1.8.3-cp35-cp35m-manylinux1_x86_64.whl\nCollecting pycparser (from cffi>=1.4.1->cryptography>=1.3.4->pyOpenSSL->quandl)\nBuilding wheels for collected packages: cryptography\n  Running setup.py bdist_wheel for cryptography ... error\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-nrsep1ln/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" bdist_wheel -d /tmp/tmp79dm6ulvpip-wheel- --python-tag cp35:\n  Traceback (most recent call last):\n    File \"<string>\", line 1, in <module>\n    File \"/tmp/pip-build-nrsep1ln/cryptography/setup.py\", line 334, in <module>\n      **keywords_with_side_effects(sys.argv)\n    File \"/usr/lib/python3.5/distutils/core.py\", line 108, in setup\n      _setup_distribution = dist = klass(attrs)\n    File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 272, in __init__\n      _Distribution.__init__(self,attrs)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 281, in __init__\n      self.finalize_options()\n    File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 327, in finalize_options\n      ep.load()(self, ep.name, value)\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 181, in cffi_modules\n      add_cffi_module(dist, cffi_module)\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 48, in add_cffi_module\n      execfile(build_file_name, mod_vars)\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 24, in execfile\n      exec(code, glob, glob)\n    File \"src/_cffi_src/build_openssl.py\", line 81, in <module>\n      extra_link_args=extra_link_args(compiler_type()),\n    File \"/tmp/pip-build-nrsep1ln/cryptography/src/_cffi_src/utils.py\", line 61, in build_ffi_for_binding\n      extra_link_args=extra_link_args,\n    File \"/tmp/pip-build-nrsep1ln/cryptography/src/_cffi_src/utils.py\", line 69, in build_ffi\n      ffi = FFI()\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/api.py\", line 59, in __init__\n      \"version mismatch, %s != %s\" % (backend.__version__, __version__)\n  AssertionError: version mismatch, 1.5.2 != 1.8.3\n\n  ----------------------------------------\n  Failed building wheel for cryptography\n  Running setup.py clean for cryptography\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-nrsep1ln/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" clean --all:\n  Traceback (most recent call last):\n    File \"<string>\", line 1, in <module>\n    File \"/tmp/pip-build-nrsep1ln/cryptography/setup.py\", line 334, in <module>\n      **keywords_with_side_effects(sys.argv)\n    File \"/usr/lib/python3.5/distutils/core.py\", line 108, in setup\n      _setup_distribution = dist = klass(attrs)\n    File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 272, in __init__\n      _Distribution.__init__(self,attrs)\n    File \"/usr/lib/python3.5/distutils/dist.py\", line 281, in __init__\n      self.finalize_options()\n    File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 327, in finalize_options\n      ep.load()(self, ep.name, value)\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 181, in cffi_modules\n      add_cffi_module(dist, cffi_module)\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 48, in add_cffi_module\n      execfile(build_file_name, mod_vars)\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 24, in execfile\n      exec(code, glob, glob)\n    File \"src/_cffi_src/build_openssl.py\", line 81, in <module>\n      extra_link_args=extra_link_args(compiler_type()),\n    File \"/tmp/pip-build-nrsep1ln/cryptography/src/_cffi_src/utils.py\", line 61, in build_ffi_for_binding\n      extra_link_args=extra_link_args,\n    File \"/tmp/pip-build-nrsep1ln/cryptography/src/_cffi_src/utils.py\", line 69, in build_ffi\n      ffi = FFI()\n    File \"/home/alex/.local/lib/python3.5/site-packages/cffi/api.py\", line 59, in __init__\n      \"version mismatch, %s != %s\" % (backend.__version__, __version__)\n  AssertionError: version mismatch, 1.5.2 != 1.8.3\n\n  ----------------------------------------\n  Failed cleaning build dir for cryptography\nFailed to build cryptography\nInstalling collected packages: numpy, more-itertools, inflection, idna, pyasn1, six, setuptools, pycparser, cffi, cryptography, pyOpenSSL, python-dateutil, pytz, pandas, requests, ndg-httpsclient, quandl\n  Running setup.py install for cryptography ... error\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-nrsep1ln/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-qz2rogd_-record/install-record.txt --single-version-externally-managed --compile --user --prefix=:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-nrsep1ln/cryptography/setup.py\", line 334, in <module>\n        **keywords_with_side_effects(sys.argv)\n      File \"/usr/lib/python3.5/distutils/core.py\", line 108, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 272, in __init__\n        _Distribution.__init__(self,attrs)\n      File \"/usr/lib/python3.5/distutils/dist.py\", line 281, in __init__\n        self.finalize_options()\n      File \"/usr/lib/python3/dist-packages/setuptools/dist.py\", line 327, in finalize_options\n        ep.load()(self, ep.name, value)\n      File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 181, in cffi_modules\n        add_cffi_module(dist, cffi_module)\n      File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 48, in add_cffi_module\n        execfile(build_file_name, mod_vars)\n      File \"/home/alex/.local/lib/python3.5/site-packages/cffi/setuptools_ext.py\", line 24, in execfile\n        exec(code, glob, glob)\n      File \"src/_cffi_src/build_openssl.py\", line 81, in <module>\n        extra_link_args=extra_link_args(compiler_type()),\n      File \"/tmp/pip-build-nrsep1ln/cryptography/src/_cffi_src/utils.py\", line 61, in build_ffi_for_binding\n        extra_link_args=extra_link_args,\n      File \"/tmp/pip-build-nrsep1ln/cryptography/src/_cffi_src/utils.py\", line 69, in build_ffi\n        ffi = FFI()\n      File \"/home/alex/.local/lib/python3.5/site-packages/cffi/api.py\", line 59, in __init__\n        \"version mismatch, %s != %s\" % (backend.__version__, __version__)\n    AssertionError: version mismatch, 1.5.2 != 1.8.3\n\n    ----------------------------------------\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-nrsep1ln/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-qz2rogd_-record/install-record.txt --single-version-externally-managed --compile --user --prefix=\" failed with error code 1 in /tmp/pip-build-nrsep1ln/cryptography/\n```\n\n    ", "Answer": "\r\nI'm running python on a Raspberry  Pi (linux as well).\n\nAfter some research I found that the proper libraries may not be installed to then install quandl, the most likely being ssl. Pandas and sklearn might also be necessary (Pandas for sure).\n\n```\nsudo apt-get install libssl-dev\n\npip install pandas\n\npip install sklearn\n```\n\n\nIf after this it still doesn't work, try installing ffi. After all the other stuff, this is the one that worked for me.\n\n```\nsudo apt-get install libffi-dev\n```\n\n\nTHIS is what made it properly do the wheel stuff for cryptography and ciffi.\n\nUsing a Pip3 command might work for some, but didn't change the fact for me thatI didn't have the proper tools installed. Hope this works for you.\n\nP.S. I also thought that it had to do with me using virtual environments or the quandl repository but those seemed totally unrelated to the error, as it was actually trying to install, but was just missing the tools it needed.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Fails to install cryptography when a pants build is run\r\n                \r\nI try to run a dockerized pants build for a scala project and it fails with an error message \"error in cryptography setup command: Invalid environment marker: python_version < '3' \".\nI haven't manually specified anything to install cryptography. In the documentation of cryptography I could see that it happens either because of pip or setuptools is out of date. I tried to update this as well. But in case of pants I'm not very sure where should I specify this also. I specified this in pants file and in thidparty \"requirements.txt\" file. But no difference . It was working fine but suddenly it failed one day.\n\nI use the following versions of \n\nUbuntu -14.04\n\npython -2.7.4\n\npants -1.0.0 (tried upgrading to 1.1.0 but no difference)\n    ", "Answer": "\r\nExplicitly mentioning following versions in requirements.txt for pants builds will resolve the issue\n\npycparser==2.17\ncryptography==2.0.1\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How insert bits into block in java cryptography?\r\n                \r\nI am trying to make a simple Java program that involves cryptography.\n\nFirst I read a block of 32 bytes from file clearmsg.txt. Then I convert this block to integer number, and use it for encryption. Unfortunately the size of the ciphertext is not static; sometimes it returns 30 bytes and sometimes 26 bytes. This seems independent on result of add operation.\n\nHow can I make sure it becomes a cipher block of 32 bytes? How add bits / bytes to this block? Because when I try decrypt this block I need to read 32 ciphertext bytes.\n\n```\nprivate void ENC_add() {\n\n    final File clearmsg = new File(\"F:/java_projects/clearmsg.txt\");\n    final File ciphermsg = new File(\"F:/java_projects/ciphermsg.txt\");\n    final byte[] block = new byte[32];\n    try {\n        final FileInputStream fis = new FileInputStream(clearmsg);\n        final FileOutputStream fcs = new FileOutputStream(ciphermsg);\n        int i;\n        while ((i = fis.read(block)) != -1) {\n            // Is this process true\n            // here M2 (Plain text) shuld be 32 byte\n            M2 = new BigInteger(block);\n            // here encrypt M2 by add k1 where k1 any number less than P\n            CM2 = M2.add(K1).mod(P);\n            // here my problem some time Cipher CM2 length 31 , some time CM2 length 32 ,some time CM2 length 30\n            System.out.println(\"THE CM2=\" + CM2.toByteArray().Length);\n            fcs.write(CM2.toByteArray(), 0, i);\n        }\n        fcs.close();\n\n    }\n\n    catch (final IOException e) {\n        e.printStackTrace();\n    }\n}\n\n// Here problem for decrypt\nprivate void DEC_ADD() {\n\n    // DECREPT METHOD\n    final File ciphermsg = new File(\"F:/java_projects/ciphermsg.txt\");\n    final File clearmsg = new File(\"F:/java_projects/rciphermsg.txt\");\n    final byte[] block = new byte[32];\n    try {\n        final FileInputStream fis = new FileInputStream(ciphermsg);\n        final FileOutputStream fos = new FileOutputStream(clearmsg);\n        int i;\n        while ((i = fis.read(block)) != -1) {\n            // CM2 NOT STATIC BITS NUMBER BECAUSE INDEPENDET ON RESULT ADDITIONAL AND PRIME NUMBER P through ENCRYPT\n            // Process\n            CM2 = new BigInteger(block);\n            // here RM2 is decrypt cipher (CM2) NOTE When encrypt above M2 WAS 32 bytes and Cipher CM2 was 30 bytes\n            // and When I read from file 32 bytes then this is my problem\n            RM2 = CM2.subtract(K1).mod(P);\n\n            fos.write(RM2.toByteArray(), 0, i);\n        }\n        fos.close();\n        System.out.println(\"THE RM2=\" + CM2.bitLength());\n    } catch (final IOException e) {\n        e.printStackTrace();\n    }\n}\n```\n\n    ", "Answer": "\r\nFor the encrypt a function is required that is normally called Integer to Octet String Primitive or I2OSP. For decryption you need an OS2IP function to convert back to integers. Both are explained in my answer on the cryptography sister site. They are part of the RSA PKCS#1 specifications, for which version 2.2 is specified here.\nThe I2OSP and OS2IP functions are also used for other cryptographic primitives. For instance, they can be used for Elliptic Curve Cryptography to create flat ECDSA signatures or EC public key representations.\nThese functions are used to encode/decode to an octet string (byte array) of a given size. This size is normally directly related to the size of the modulus (P in your case) of RSA encryption.\nThe I2OSP function should be coded like this:\n```\npublic static byte[] i2osp(final BigInteger i, final int size) {\n    if (size < 1) {\n        throw new IllegalArgumentException(\"Size of the octet string should be at least 1 but is \" + size);\n    }\n\n    if (i == null || i.signum() == -1 || i.bitLength() > size * Byte.SIZE) {\n        throw new IllegalArgumentException(\"Integer should be a positive number or 0, no larger than the given size\");\n    }\n\n    final byte[] signed = i.toByteArray();\n    if (signed.length == size) {\n        // (we are lucky, already the right size)\n        return signed;\n    }\n\n    final byte[] os = new byte[size];\n    if (signed.length < size) {\n        // (the dynamically sized array is too small, pad with 00 valued bytes at the left)\n        System.arraycopy(signed, 0, os, size - signed.length, signed.length);\n        return os;\n    }\n\n    // (signed representation too large, remove leading 00 valued byte)\n    System.arraycopy(signed, 1, os, 0, size);\n    return os;\n}\n```\n\nOf course, to use this with the correct size in octets / bytes you should first know the key size in bytes first. For an RSA public- or private key this can be easily calculated from the modulus (in case it is not directly available, as in the Java JCA):\n```\npublic static int keySizeInOctets(RSAKey key) {\n    int keySizeBits = key.getModulus().bitLength();\n    int keySizeBytes = (keySizeBits + Byte.SIZE - 1) / Byte.SIZE;\n    return keySizeBytes;\n}\n```\n\nNote that ```\nRSAPublicKey```\n, ```\nRSAPrivateKey```\n and ```\nRSAPrivateCrtKey```\n all extend ```\nRSAKey```\n which provides access to the modulus. So you can use instances of these classes directly as argument for this method. Of course, the RSA providers in Java already contain I2OSP and OS2IP within the ```\nCipher```\n and ```\nSignature```\n implementation classes, but the conversion from bit size to byte size (without floating point calculations) could come in handy.\n\nFortunately, the reverse function is not as complicated:\n```\npublic static BigInteger os2ip(final byte[] data, final int size) {\n    if (data.length != size) {\n        throw new IllegalArgumentException(\"Size of the octet string should be precisely \" + size);\n    }\n\n    return new BigInteger(1, data); \n}\n```\n\nI've kept in the size validation so it can be called with the expected octet size, even though it is not required for the calculation itself.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cannot sign a JWT using Elliptic Curve (EC) cryptography\r\n                \r\nI have generated a private key using Elliptic Curve cryptography:\n```\nopenssl ecparam -genkey -name secp521r1 -noout | openssl pkcs8 -topk8 -nocrypt\n```\n\nI have used the following Java code to sign a JWT:\n```\n    String privateKeyPEM = \"MIHtAgEAMBAGByqGSM49AgEGBSuBBAAjBIHVMIHSAgEBBEEmSOGpmkjzKM+uWhya\"\n        + \"Cl6sbSsmROUol4HaDbORnOI6klbEjbCkPEyxKRnrrtrGFShhu7TPPlGDK39f+K3G\"\n        + \"IZhbYKGBiQOBhgAEAJQiOIKV7YmIVI30Y3y1UZIvgZFRviHFWvSiTXEG4IqzHKpF\"\n        + \"jOIYs0rzn1F2zrFHKpmMtZ0Kh5OzyfJsGeu1GZPzANYLZQ9m13Joi3fhGFUgHLNL\"\n        + \"0hsz/HQP89aTa9Qr8QqEP7r/vCvrcoKn9cKPGwRxOFkRgG4FWGv76F/hv+1Cj2Z7\";\n\n    byte[] encoded = Base64.decodeBase64(privateKeyPEM);\n    KeyFactory keyFactory = KeyFactory.getInstance(\"EC\");\n    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);\n    ECPrivateKey privateKey = (ECPrivateKey) keyFactory.generatePrivate(keySpec);\n\n    final JwtBuilder jwtBuilder = Jwts.builder()\n        .setSubject(\"713f42c9-7df5-4271-8b53-112f30936c56\")\n        .signWith(SignatureAlgorithm.ES512, privateKey)\n        .setHeaderParam(\"typ\", \"JWT\");\n\n    System.out.println(jwtBuilder.compact());\n```\n\nHowever, the resulting JWT always have an invalid signature:\n```\neyJ0eXAiOiJKV1QiLCJhbGciOiJFUzUxMiJ9.eyJzdWIiOiI3MTNmNDJjOS03ZGY1LTQyNzEtOGI1My0xMTJmMzA5MzZjNTYifQ.MIGHAkFvCPq_BeXvATTN1duKjEf3K_Fja0ueoTuPQHC9kBc828wem7YO0vnlK6PVYXSkBk4gBaD0-OIMY_r-HS7-4-HaBwJCAMbj0k5YsBywMzme_adKTQq7YUsVvyZwGp8aVgX7vxsMhf-WNvQJSg7AG_zQiUaQ4jqtT9ZKzNoU4P5NZIGMDRCh\n```\n\nI can't figure out what's wrong with my code.\n    ", "Answer": "\r\nThe posted private key is a PKCS#8 key. From this the following public X.509 key can be derived:\n```\n-----BEGIN PUBLIC KEY-----\nMIGbMBAGByqGSM49AgEGBSuBBAAjA4GGAAQAlCI4gpXtiYhUjfRjfLVRki+BkVG+\nIcVa9KJNcQbgirMcqkWM4hizSvOfUXbOsUcqmYy1nQqHk7PJ8mwZ67UZk/MA1gtl\nD2bXcmiLd+EYVSAcs0vSGzP8dA/z1pNr1CvxCoQ/uv+8K+tygqf1wo8bBHE4WRGA\nbgVYa/voX+G/7UKPZns=\n-----END PUBLIC KEY-----\n```\n\nIf a JWT is created with the posted code, e.g.:\n```\neyJ0eXAiOiJKV1QiLCJhbGciOiJFUzUxMiJ9.eyJzdWIiOiI3MTNmNDJjOS03ZGY1LTQyNzEtOGI1My0xMTJmMzA5MzZjNTYifQ.AE0sx6wHk2xBPkbam24n8NE39qkB0YX4j65DhrWyBKtaQXRMZjuzV78vFir3scfXVolFOf2gpo2K6x_hu0jPz-0IAIMbYQsglePQHQ9OZMSb2XAxKCVXccdvW27QeBov-VGUxxlL-CFNviaPaAGbNny_sc8cRjIF97pDD4KjOPBKkZzt\n```\n\nthen this can be verified without problems with this public key, check it e.g. here, i.e. the posted code produces a valid signature.\n\nOn the other hand, the JWT posted in the question:\n```\neyJ0eXAiOiJKV1QiLCJhbGciOiJFUzUxMiJ9.eyJzdWIiOiI3MTNmNDJjOS03ZGY1LTQyNzEtOGI1My0xMTJmMzA5MzZjNTYifQ.MIGHAkFvCPq_BeXvATTN1duKjEf3K_Fja0ueoTuPQHC9kBc828wem7YO0vnlK6PVYXSkBk4gBaD0-OIMY_r-HS7-4-HaBwJCAMbj0k5YsBywMzme_adKTQq7YUsVvyZwGp8aVgX7vxsMhf-WNvQJSg7AG_zQiUaQ4jqtT9ZKzNoU4P5NZIGMDRCh\n```\n\ncan indeed not be verified. The signature of this JWT is Base64url decoded:\n```\n30818702416f08fabf05e5ef0134cdd5db8a8c47f72bf1636b4b9ea13b8f4070bd90173cdbcc1e9bb60ed2f9e52ba3d56174a4064e2005a0f4f8e20c63fafe1d2efee3e1da07024200c6e3d24e58b01cb033399efda74a4d0abb614b15bf26701a9f1a5605fbbf1b0c85ff9636f4094a0ec01bfcd0894690e23aad4fd64accda14e0fe4d64818c0d10a1\n```\n\nand thus ASN.1 encoded, s. here and here. However, JWTs use a signature encoded as r|s, see e.g. here. If the signature is converted to this encoding, the result is:\n```\n6f08fabf05e5ef0134cdd5db8a8c47f72bf1636b4b9ea13b8f4070bd90173cdbcc1e9bb60ed2f9e52ba3d56174a4064e2005a0f4f8e20c63fafe1d2efee3e1da07c6e3d24e58b01cb033399efda74a4d0abb614b15bf26701a9f1a5605fbbf1b0c85ff9636f4094a0ec01bfcd0894690e23aad4fd64accda14e0fe4d64818c0d10a1\n```\n\nIf this is Base64url encoded and used in the posted JWT (instead of the old signature), that is:\n```\neyJ0eXAiOiJKV1QiLCJhbGciOiJFUzUxMiJ9.eyJzdWIiOiI3MTNmNDJjOS03ZGY1LTQyNzEtOGI1My0xMTJmMzA5MzZjNTYifQ.bwj6vwXl7wE0zdXbioxH9yvxY2tLnqE7j0BwvZAXPNvMHpu2DtL55Suj1WF0pAZOIAWg9PjiDGP6_h0u_uPh2gfG49JOWLAcsDM5nv2nSk0Ku2FLFb8mcBqfGlYF-78bDIX_ljb0CUoOwBv80IlGkOI6rU_WSszaFOD-TWSBjA0QoQ\n```\n\nthe JWT can be successfully validated.\nSince the posted code generates an RFC compliant JWT (with r|s signature), the JWT posted in the question was probably not generated with the posted code (because of the ASN.1 signature).\n\nUpdate: According to the jjwt bugtracker there is a bug (#125) that causes the signature to be signed incorrectly with ASN.1. This bug should be fixed with jjwt 0.7 and would be a plausible explanation for your issue, provided you are working with an affected version (the bug is from 05.2016).I have tested your code with jjwt 0.9.1 (from 07.2018), which generates a valid signature, meaning it works.The current version is jjwt 0.11.2 (from 06.2020), which also works according to the other answer.So if you are working with an affected version, it would be best to use a newer / the current jjwt version. If this is not possible for some reason you can of course convert the signature manually from ASN.1 to r|s encoding.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Converting C# cryptography to Java\r\n                \r\nI have been tasked with converting a C# cryptography method to Java and am stuck. I know the C# codes works, but I am having trouble getting my Java code to work.\n\nHere is the C# code:\n\n```\nprivate const int Nb = 4; // Legal values:  4 = 128-bit blocks\n\npublic static void Decrypt(byte[] input, Stream output)\n    { \n        var s1 = new MemoryStream(input);\n        const int BufferSize = 1024;\n        byte[] buffer = new byte[BufferSize];\n\n        input.Read(buffer, 0, 4);\n        int pad = buffer[3];\n\n        RijndaelManaged rijndael = new RijndaelManaged();\n        rijndael.BlockSize = Nb * 32;\n        rijndael.KeySize = buffer[1] * 32;\n\n        rijndael.Mode = CipherMode.ECB;\n        rijndael.Padding = PaddingMode.None;\n\n        byte[] key = GetKey(buffer[1]);\n        ICryptoTransform decryptor = rijndael.CreateDecryptor(key, GetIV());\n\n        int bytes;\n        while ((bytes = input.Read(buffer, 0, BufferSize)) > 0)\n        {\n            for (int i = 0; i < bytes; i += rijndael.BlockSize)\n            {\n                decryptor.TransformBlock(buffer, i, rijndael.BlockSize, buffer, i);\n            }\n            output.Write(buffer, 0, bytes);\n        }\n        output.SetLength(output.Length - pad - 4);\n    }\n```\n\n\nAnd here is my attempt in Java so far:\n\n```\npublic static String decrypt(byte[] input) throws Exception {\n    Cipher cipher = Cipher.getInstance(\"AES/ECB/NoPadding\");\n    byte[] key = getKey(input[1]);\n    SecretKey secretKey = new SecretKeySpec(key, 0, key.length, \"AES/ECB/NoPadding\");\n    cipher.init(Cipher.DECRYPT_MODE, secretKey, new IvParameterSpec(getIV()));\n    // remove first 4 since C# code reads past those\n    byte[] finalDecoded = Arrays.copyOfRange(input, 4, input.length);\n    byte[] decryptedVal = cipher.doFinal(finalDecoded);\n    return new String(decryptedVal);\n}\n```\n\n\nSome More Information\n\n\nFor ```\nGetIV```\n and ```\nGetKey```\n, I can guarantee that the results in java are the same (I have compared every byte), but I am not including those methods because I believe that is sensitive information. I can also guarantee that the input byte[] is identical and (redundantly) the same length. \nDebugging attempts: The current error in Java is ```\nECB mode cannot use IV```\n. \n\n\nWhen I remove this code : ```\nnew IvParameterSpec(getIV())```\n I get this error: ```\nWrong algorithm: AES or Rijndael required```\n\nIf I change the algorithm to only ```\nAES```\n or only ```\nRijndael```\n I get this error: ```\nInput length must be multiple of 16 when decrypting with padded cipher```\n. The input length starting is ```\n424```\n and ```\n420```\n after reading past/removing the first 4 bytes. I have verified that the input bytes are the same for Java and C#.\n\n\n\nWhere am I going wrong in the Java code?\n    ", "Answer": "\r\nYou are getting the error ```\nECB mode cannot use IV```\n because ECB doesn't perform chaining, so IV is meaningless. The difference is Java throws an error whereas C# just ignores the IV.\n\nWhen I remove this code : ```\nnew IvParameterSpec(getIV())```\n I get this error: ```\nWrong algorithm:```\n```\nAES or Rijndael```\n```\nrequired```\n\nIf I change the algorithm to only AES or only Rijndael I get this error: ```\nInput length must be multiple of 16 when decrypting with ```\n```\npadded cipher.```\n\n\nYou had the right idea, but you went too far. This error is only to do with the ```\nSecretKeySpec```\n, which doesn't care about the mode, but just the algorithm. ```\nCipher```\n is where you specify mode. Also, Rijndael and AES aren't quite the same thing.\nSo start by changing the first few lines to this:\n```\nCipher cipher = Cipher.getInstance(\"Rijndael/ECB/NoPadding\");\nbyte[] key = getKey(input[1]);\nSecretKey secretKey = new SecretKeySpec(key, 0, key.length, \"Rijndael\");\ncipher.init(Cipher.DECRYPT_MODE, secretKey);\n```\n\nNote that since you're using the entire ```\nkey```\n you don't need the offset and length arguments, so you can just do\n```\nSecretKey secretKey = new SecretKeySpec(key, \"Rijndael\");\n```\n\n\nThe original C# code has some not-so-obvious behavior:\n```\nwhile ((bytes = input.Read(buffer, 0, BufferSize)) > 0)\n{\n    for (int i = 0; i < bytes; i += rijndael.BlockSize)\n    {\n        decryptor.TransformBlock(buffer, i, rijndael.BlockSize, buffer, i);\n    }\n    output.Write(buffer, 0, bytes);\n}\n```\n\nWhen the loop gets to the end of the ```\ninput```\n, it will copy however much is left of it into ```\nbuffer```\n. Unless the last ```\nRead```\n was exactly 1024 bytes, there will be residue from the previous loop (or from initialization if it gets the whole ```\ninput```\n with one ```\nRead```\n operation) after the end of the input.\nThe inner loop decrypts one 16-byte block at a time. In the case of your 420-byte example, the last block will consist of the remaining 4 bytes of input and 12 more bytes of garbage. But it's okay because the ```\noutput.Write```\n only writes ```\nbytes```\n number of bytes to truncate the garbage. You will have to replicate this behavior in your Java code.\n\nSide note: do you absolutely have to use ECB? It's not very secure...\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Initialization vector - best practices (symmetric cryptography)\r\n                \r\nI would like to ask about best practices regarding a usage of an initialization vector (IV) and a key for symmetric cryptography algorithms.\n\nI want to accept messages from a client, encrypt them and store in a backend. This will be done over a time, and there will be requests coming at a later time for pooling out the messages and return them in a readable form.\n\nAccording what I know, the key can be the same during the encryption of multiple separate messages. The IV should change with every new encryption. This however, will cause problems, because every message will need a different IV for de-cryption at a later time. \n\nI’d like to know if this is the best way of doing it. Is there any way to avoid storing IV with every message, which would simplify entire process of working with encryption/decryption?\n    ", "Answer": "\r\nIV selection is a bit complicated because the exact requirements depend on the mode of operation. There are some general rules, however:\n\n\nYou can't go wrong¹ with a random IV, except when using shorter IVs in modes that allow this.\nNever use the same IV with the same key.\nIf you only ever encrypt a single message with a given key, the choice of IV doesn't matter².\nChoose the IV independently of the data to encrypt.\nNever use ECB.\n\n\nOf the most common specific modes of operation:\n\n\nCBC requires the IV to be generated uniformly at random. Do not use a counter as IV for CBC. Furthermore, if you're encrypting some data that contains parts that you receive from a third party, don't reveal the IV until you've fully received the data, .\nCTR uses the IV as the initial value of a counter which is incremented for every block, not for every message, and the counter value needs to be unique for every block. A block is 16 bytes for all modern symmetric ciphers (including AES, regardless of the key size). So for CTR, if you encrypt a 3-block message (33 to 48 bytes) with 0 as the IV, the next message must start with IV=3 (or larger), not IV=1.\nModern modes such as Chacha20, GCM, CCM, SIV, etc. use a nonce as their IV. When a mode is described as using a nonce rather than an IV, this means that the only requirement is that the IV is never reused with the same key. It doesn't have to be random.\n\n\nWhen encrypting data in a database, it is in general not safe to use the row ID (or a value derived from it) as IV. Using the row ID is safe only if the row is never updated or removed, because otherwise the second time data is stored using the same ID, it would repeat the IV. An adversary who sees two different messages encrypted with the same key and IV may well be able to decrypt both messages (the details depend on the mode and on how much the attacker can guess about the message content; note that even weak guesses such as “it's printable UTF-8” may suffice).\n\nUnless you have a very good reason to do otherwise (just saving a few bytes per row does not count as a very good reason) and a cryptographer has reviewed the specific way in which you are storing and retrieving the data:\n\n\nUse an authenticated encryption mode such as GCM, CCM, SIV or Chacha20+Poly1305.\nIf you can store a counter somewhere and make sure that it's never reset as long as you keep using the same encryption key, then each time you encrypt a message:\n\n\nIncrement the counter.\nUse the new value of the counter as the nonce for the authenticated encryption.\n\n\nThe reason to increment the counter first is that if the process is interrupted, it will lead to a skipped counter value, which is not a problem. If step 2 was done without step 1, it would lead to repeating a nonce, which is bad. With this scheme, you can shave a few bytes off the nonce length if the mode allows it, as long as the length is large enough for the number of messages that you'll ever encrypt.\nIf you don't have such a counter, then use the maximum nonce length and generate a random counter. The reason to use the maximum nonce length is that due to the birthday paradox, a random n-bit nonce is expected to repeat when the number of messages approaches 2n/2.\nIn either case, you need to store the nonce in the row.\n\n\n¹  Assuming that everything is implemented correctly, e.g. random values need to be generated with a random generator that is appropriate for cryptography. \n²  As long as it isn't chosen in a way that depends on the key.   \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Converting a php cryptography and hash_hmac('sha512' code to c#\r\n                \r\nI am having troubles converting a cryptography code from php to c#, and i would really appreciate some help, here is the php code\n```\n$postdata = http_build_query($param, '', '&');\n\n    $hash = '/' .$method . hash('sha256', $nonce . $postdata, true);\n    $signature = hash_hmac('sha512', $hash, base64_decode($this->secret), true);\n    $signature = base64_encode($signature);\n```\n\nexample data are the following:\n```\n$method = 'auth/register';\n$param = [\n \"email\"                => 'test@test.com',\n \"password\"             => 'Password1234',\n \"customerId\"               => '1234',\n];\n```\n\nwhat i did so far is\n```\n    string nonce =\"123456789\"\n    string param=\"email=test@test.com.lb&password=Devilmaycry@5&customerId=20210309035037\"\npublic string CalculateSignature(string nonce,string pth)\n    {\n       \n        string hash =pth+ ComputeSha256Hash(nonce);\n        \n       \n\n        Encoding ascii = Encoding.ASCII;                       \n        \n        HMACSHA512 hmac = new HMACSHA512(ascii.GetBytes(client_secret));\n        string calc_sig = Convert.ToBase64String(hmac.ComputeHash(ascii.GetBytes(hash)));\n        return calc_sig;\n\n    }\n    static string ComputeSha256Hash(string rawData)\n    {\n        // Create a SHA256   \n        using (SHA256 sha256Hash = SHA256.Create())\n        {\n            // ComputeHash - returns byte array  \n            byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(rawData));\n\n            // Convert byte array to a string   \n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < bytes.Length; i++)\n            {\n                builder.Append(bytes[i].ToString(\"x2\"));\n            }\n            return builder.ToString();\n        }\n    }\n```\n\ni am stuck in these two lines and i have no idea if i translate it them right\n```\n$signature = hash_hmac('sha512', $hash, base64_decode($this->secret), true);\n$signature = base64_encode($signature);\n```\n\n    ", "Answer": "\r\nTo compare both implementations, sample data is useful.\nThe following PHP code:\n```\n$nonce = 'nonce';           // sample data\n$secret = 'c2VjcmV0';       // sample data\n\n$method = 'auth/register';\n$param = [\n    \"email\"                => 'test@test.com',\n    \"password\"             => 'Password1234',\n    \"customerId\"           => '1234',\n];\n$postdata = http_build_query($param, '', '&');\nprint('Postdata:  ' . $postdata . PHP_EOL);\n\n$hash = '/' . $method . hash('sha256', $nonce . $postdata, true);\n$signature = hash_hmac('sha512', $hash, base64_decode($secret), true);\n$signature = base64_encode($signature);\n\nprint('Signature: ' . $signature . PHP_EOL);\n```\n\nreturns as result:\n```\nPostdata:  email=test%40test.com&password=Password1234&customerId=1234\nSignature: EYvVUz9oyis+0EA+PkfSIbDlD2uhd75BTQmuOM8ousmXSUALnB4l/9CkdxjgVy0X2oMsSKiDlzPQq/RLDeU70w==\n```\n\nThe C# implementation below gives the same result:\n```\nstring method = \"auth/register\";\nstring nonce = \"nonce\";\nstring postdata = \"email=test%40test.com&password=Password1234&customerId=1234\";\nstring secret = \"c2VjcmV0\";\n\nstring signatureB64 = CalculateSignature(method, nonce, postdata, secret);\n\nConsole.WriteLine(signatureB64);\n```\n\nwith\n```\npublic static string CalculateSignature(string method, string nonce, string postdata, string secret)\n{\n    // Encoding\n    byte[] methodBytes = Encoding.ASCII.GetBytes(\"/\" + method);\n    byte[] noncePostdataBytes = Encoding.ASCII.GetBytes(nonce + postdata);\n    byte[] secretBytes = Convert.FromBase64String(secret);\n\n    // $hash = '/' . $method . hash('sha256', $nonce . $postdata, true);\n    byte[] nonceHash = SHA256.Create().ComputeHash(noncePostdataBytes);\n    byte[] hash = concat(methodBytes, nonceHash);\n\n    // $signature = hash_hmac('sha512', $hash, base64_decode($secret), true);\n    byte[] signature = new HMACSHA512(secretBytes).ComputeHash(hash);\n\n    // $signature = base64_encode($signature);\n    string signatureB64 = Convert.ToBase64String(signature);\n\n    return signatureB64; // EYvVUz9oyis+0EA+PkfSIbDlD2uhd75BTQmuOM8ousmXSUALnB4l/9CkdxjgVy0X2oMsSKiDlzPQq/RLDeU70w==\n}\n```\n\nand\n```\npublic static byte[] concat(byte[] arr1, byte[] arr2)\n{\n    byte[] newArr = new byte[arr1.Length + arr2.Length];\n    Buffer.BlockCopy(arr1, 0, newArr, 0, arr1.Length);\n    Buffer.BlockCopy(arr2, 0, newArr, arr1.Length, arr2.Length);\n    return newArr;\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Commercial .NET libraries for Public-key cryptography\r\n                \r\nThere are many examples of public-key cryptography implementations on SO, code project, etc.\n\nI want to evaluate some commercial solutions since, not being from the domain myself, would rather rely on mature products.\n\nScenario:\n\n\nASP .NET application encrypts a file container.\nWinForms applications decrypts the container.\nASP .NET application should not have access to the WinForms' private key.\nWinForms' application should not have access to the ASP .NET application's private key.\n\n\nResult: Strong encryption, tamper-proofing and identity verification.\n    ", "Answer": "\r\nMake sure that SSL won't work for what you have in mind. It seems that you are trying to get secure communication and authentication between a client and a server. Use SSL for this. In fact, that's probably the best you can get on the server side for security because of where you'd have store the encryption keys. See my answer here for an in depth explication.  \n\nIf you want to secure data on the client(not from the user, that would be DRM) use DPAPI or its managed wrapper. This is actually more secure than anything you can buy since it solves the key storage issued. IF you have encrypted data on the client and it needs to be accessed offline, you end up either storing the key on the system, making the user plug something in, or making them enter a separate password. The first one is insecure, the second two are a pain. DPAPI encrypts under a key derived from the user's login password( or smart card or biometrics of windows is using them)\n\non the subject of crypto libraries\n\n.net Ships with both a managed code crypto package with public key cryptography and wrappers to native code. Its the System.security.cryptography package and its free and already installed on any windows system that has .net on it.\n\nMinimally, you could use this to handle the public private key parts without any real effort(.e.g to encrypt the key from zipblackbox).\n\nSeveral free/ open source libraries also support creating encrypted containers from a password. Truecrypt, tarsnap, and 7zip come to mind ( though those may require admin privileges to install). There is alos dotNetZip which does encryption, I don't believe needs admin privileges to install, and is free and open source under a non copy left license.\n\nYou can also make the encrypted container you want really easily, though I can see why you might be hesitant to do so. Just use this class which is written by the guys on the Microsoft CLR security, write the file to that stream, prepend the IV and tag, then encrypt the key it provides using public key encryption. On the other end, decrypt the key, read off the iv, decrypt the data, verify the tags match, and then your good.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "OSX El Capitan python install cryptography fail\r\n                \r\nI tried \n\nsudo pip install cryptography\n\nAnd the error message is \n\n\n  Collecting cryptography\n   Using cached cryptography-1.3.2-cp27-none-macosx_10_6_intel.whl\n  Requirement already satisfied (use --upgrade to upgrade): cffi>=1.4.1 in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): pyasn1>=0.1.8 in /Library/Python/2.7/site-packages (from cryptography)\n  Collecting setuptools>=11.3 (from cryptography)\n    Using cached setuptools-21.0.0-py2.py3-none-any.whl\n  Requirement already satisfied (use --upgrade to upgrade): six>=1.4.1 in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): idna>=2.0 in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): ipaddress in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): enum34 in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): pycparser in /Library/Python/2.7/site-packages (from cffi>=1.4.1->cryptography)\n  Installing collected packages: setuptools, cryptography\n    Found existing installation: setuptools 1.1.6\n      Uninstalling setuptools-1.1.6:\n  Exception:\n  Traceback (most recent call last):\n    File \"/Library/Python/2.7/site-packages/pip/basecommand.py\", line 215, in main\n      status = self.run(options, args)\n    File \"/Library/Python/2.7/site-packages/pip/commands/install.py\", line 317, in run\n      prefix=options.prefix_path,\n    File \"/Library/Python/2.7/site-packages/pip/req/req_set.py\", line 736, in install\n      requirement.uninstall(auto_confirm=True)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_install.py\", line 742, in uninstall\n      paths_to_remove.remove(auto_confirm)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_uninstall.py\", line 115, in remove\n      renames(path, new_path)\n    File \"/Library/Python/2.7/site-packages/pip/utils/init.py\", line 267, in renames\n      shutil.move(old, new)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 299, in move\n      copytree(src, real_dst, symlinks=True)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 208, in copytree\n      raise Error, errors\n  Error: [('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib'\")]\n\n\nThen I searched some post and tried \n\nbrew install pkg-config libffi openssl\n\n\n  Warning: pkg-config-0.28 already installed\n  Warning: libffi-3.0.13 already installed\n  Warning: openssl-1.0.2d_1 already installed\n\n\nand\n\nCFLAGS=\"-I/usr/local/opt/openssl/include\" sudo pip install cryptography==0.8\n\nI got this error message:\n\n\n  src/cryptography/hazmat/bindings/pycache/_Cryptography_cffi_f3e4673fx399b1113.c:217:10: fatal error: 'openssl/aes.h' file not found\n     #include \n               ^\n     1 error generated.\n     error: command 'cc' failed with exit status 1\n  \n  \n  \n  Command \"/usr/bin/python -u -c \"import setuptools, tokenize;file='/private/tmp/pip-build-MxT6op/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /tmp/pip-G6b8Y_-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/tmp/pip-build-MxT6op/cryptography/\n\n\nI also tried\n\nbrew install pkg-config libffi openssl\n\nenv LDFLAGS=\"-L$(brew --prefix openssl)/lib\" CFLAGS=\"-I$(brew --prefix openssl)/include\" pip install cryptography\n\nand got this\n\n\n  Found existing installation: setuptools 1.1.6\n      Uninstalling setuptools-1.1.6:\n  Exception:\n  Traceback (most recent call last):\n    File \"/Library/Python/2.7/site-packages/pip/basecommand.py\", line 215, in main\n      status = self.run(options, args)\n    File \"/Library/Python/2.7/site-packages/pip/commands/install.py\", line 317, in run\n      prefix=options.prefix_path,\n    File \"/Library/Python/2.7/site-packages/pip/req/req_set.py\", line 736, in install\n      requirement.uninstall(auto_confirm=True)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_install.py\", line 742, in uninstall\n      paths_to_remove.remove(auto_confirm)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_uninstall.py\", line 115, in remove\n      renames(path, new_path)\n    File \"/Library/Python/2.7/site-packages/pip/utils/init.py\", line 267, in renames\n      shutil.move(old, new)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 299, in move\n      copytree(src, real_dst, symlinks=True)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 208, in copytree\n      raise Error, errors\n  Error: [('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib'\")]\n\n\nPlease help me to get this fixed. Thanks a lot.\n    ", "Answer": "\r\nWhat worked for me was:\n\n```\nsudo brew reinstall python\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Adobe AIR cryptography native extension sample\r\n                \r\nI am an Adobe AIR/AS3 developer and I need to use in my AIR application an encryption/decryption based on private/public keys.\n\nI have found 2 cryptography native extensions:\nhttps://github.com/vpmedia/botan-crypto-ane\nhttps://github.com/vpmedia/cryptopp-ane\n\nbut neither of them has any documentation or samples in AS3. I would appreciate it if anyone would have any tips or samples of how i could encrypt a message with a public key and decrypt it with a private key, using either of the 2 aforementioned libraries.\n\nI have generated my keys using an online \"rsa key generator\".\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography encryption with C#\r\n                \r\nHow can I use ECC in C#? I think I should use ECDiffieHellman (although I am not sure, because it's probably not an asymmetric encryption algorithm that I would like to use, but on the internet I didn't find any other recommended ones by searching for the phrase ECC), but there's no any method for encrypting and I'm not good enough at cryptography to write my own. I also don't see any NuGet packages that would allow me to encrypt with ECC. But I think it must be done somehow, but how?\n    ", "Answer": "\r\nFrom WIKI - Several discrete logarithm-based protocols have been adapted to elliptic curves, replacing the group Zp^x with an elliptic curve:\n\nThe Elliptic Curve Diffie–Hellman (ECDH) key agreement scheme is based on the Diffie–Hellman scheme,\nThe Elliptic Curve Integrated Encryption Scheme (ECIES), also known as Elliptic Curve Augmented Encryption Scheme or simply the Elliptic Curve Encryption Scheme,\nThe Elliptic Curve Digital Signature Algorithm (ECDSA) is based on the Digital Signature Algorithm,\nThe deformation scheme using Harrison's p-adic Manhattan metric,\nThe Edwards-curve Digital Signature Algorithm (EdDSA) is based on Schnorr signature and uses twisted Edwards curves,\nThe ECMQV key agreement scheme is based on the MQV key agreement scheme,\nThe ECQV implicit certificate scheme.\n\nAt the RSA Conference 2005, the National Security Agency (NSA) announced Suite B which exclusively uses ECC for digital signature generation and key exchange. The suite is intended to protect both classified and unclassified national security systems and information\nHere is the list of C# adoptions available:\n\nECDH (RFC6239, RFC6460 part of NSA Suite B) https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.ecdiffiehellmancng?view=net-6.0\nECIES (available in OpenCrypto project) - see example of usage in Unit Test https://github.com/kazuki/opencrypto.net/blob/master/UnitTests/ECIESTest.cs\nECDSA (RFC5759, RFC6460 part of NSA Suite B) there is a light-weight tool with example https://github.com/starkbank/ecdsa-dotnet\nEdDSA can be done with BouncyCastle https://www.scottbrady91.com/c-sharp/eddsa-for-jwt-signing-in-dotnet-core\nECMQV (key agreement) can be done with BouncyCastle https://github.com/bcgit/bc-csharp/blob/93b32a75656955faf7996d0f3e0ed391968d2ac6/crypto/src/crypto/agreement/ECMqvBasicAgreement.cs\nECQV was able to figure out Java implementation  (at least give some reference , algorithm is public) https://github.com/Trustpoint/tpm2m/tree/master/java/src/ca/trustpoint/m2m/ecqv\n\nTo summarize out of all ECC algorithms ECDH and ECDSA are most widely used and have MS support, the rest are available but can be more tricky.\nThe deformation scheme using Harrison's p-adic Manhattan metric - this one is poorly documented and seems to be a scientific matter (not live/widely used algorithm)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "OSX El Capitan python install cryptography fail\r\n                \r\nI tried \n\nsudo pip install cryptography\n\nAnd the error message is \n\n\n  Collecting cryptography\n   Using cached cryptography-1.3.2-cp27-none-macosx_10_6_intel.whl\n  Requirement already satisfied (use --upgrade to upgrade): cffi>=1.4.1 in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): pyasn1>=0.1.8 in /Library/Python/2.7/site-packages (from cryptography)\n  Collecting setuptools>=11.3 (from cryptography)\n    Using cached setuptools-21.0.0-py2.py3-none-any.whl\n  Requirement already satisfied (use --upgrade to upgrade): six>=1.4.1 in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): idna>=2.0 in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): ipaddress in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): enum34 in /Library/Python/2.7/site-packages (from cryptography)\n  Requirement already satisfied (use --upgrade to upgrade): pycparser in /Library/Python/2.7/site-packages (from cffi>=1.4.1->cryptography)\n  Installing collected packages: setuptools, cryptography\n    Found existing installation: setuptools 1.1.6\n      Uninstalling setuptools-1.1.6:\n  Exception:\n  Traceback (most recent call last):\n    File \"/Library/Python/2.7/site-packages/pip/basecommand.py\", line 215, in main\n      status = self.run(options, args)\n    File \"/Library/Python/2.7/site-packages/pip/commands/install.py\", line 317, in run\n      prefix=options.prefix_path,\n    File \"/Library/Python/2.7/site-packages/pip/req/req_set.py\", line 736, in install\n      requirement.uninstall(auto_confirm=True)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_install.py\", line 742, in uninstall\n      paths_to_remove.remove(auto_confirm)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_uninstall.py\", line 115, in remove\n      renames(path, new_path)\n    File \"/Library/Python/2.7/site-packages/pip/utils/init.py\", line 267, in renames\n      shutil.move(old, new)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 299, in move\n      copytree(src, real_dst, symlinks=True)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 208, in copytree\n      raise Error, errors\n  Error: [('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', \"[Errno 1] Operation not permitted: '/tmp/pip-p7Ywro-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib'\")]\n\n\nThen I searched some post and tried \n\nbrew install pkg-config libffi openssl\n\n\n  Warning: pkg-config-0.28 already installed\n  Warning: libffi-3.0.13 already installed\n  Warning: openssl-1.0.2d_1 already installed\n\n\nand\n\nCFLAGS=\"-I/usr/local/opt/openssl/include\" sudo pip install cryptography==0.8\n\nI got this error message:\n\n\n  src/cryptography/hazmat/bindings/pycache/_Cryptography_cffi_f3e4673fx399b1113.c:217:10: fatal error: 'openssl/aes.h' file not found\n     #include \n               ^\n     1 error generated.\n     error: command 'cc' failed with exit status 1\n  \n  \n  \n  Command \"/usr/bin/python -u -c \"import setuptools, tokenize;file='/private/tmp/pip-build-MxT6op/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), file, 'exec'))\" install --record /tmp/pip-G6b8Y_-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/tmp/pip-build-MxT6op/cryptography/\n\n\nI also tried\n\nbrew install pkg-config libffi openssl\n\nenv LDFLAGS=\"-L$(brew --prefix openssl)/lib\" CFLAGS=\"-I$(brew --prefix openssl)/include\" pip install cryptography\n\nand got this\n\n\n  Found existing installation: setuptools 1.1.6\n      Uninstalling setuptools-1.1.6:\n  Exception:\n  Traceback (most recent call last):\n    File \"/Library/Python/2.7/site-packages/pip/basecommand.py\", line 215, in main\n      status = self.run(options, args)\n    File \"/Library/Python/2.7/site-packages/pip/commands/install.py\", line 317, in run\n      prefix=options.prefix_path,\n    File \"/Library/Python/2.7/site-packages/pip/req/req_set.py\", line 736, in install\n      requirement.uninstall(auto_confirm=True)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_install.py\", line 742, in uninstall\n      paths_to_remove.remove(auto_confirm)\n    File \"/Library/Python/2.7/site-packages/pip/req/req_uninstall.py\", line 115, in remove\n      renames(path, new_path)\n    File \"/Library/Python/2.7/site-packages/pip/utils/init.py\", line 267, in renames\n      shutil.move(old, new)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 299, in move\n      copytree(src, real_dst, symlinks=True)\n    File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 208, in copytree\n      raise Error, errors\n  Error: [('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/init.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.py'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib/markers.pyc'\"), ('/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib', \"[Errno 1] Operation not permitted: '/tmp/pip-aYpqDT-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/_markerlib'\")]\n\n\nPlease help me to get this fixed. Thanks a lot.\n    ", "Answer": "\r\nWhat worked for me was:\n\n```\nsudo brew reinstall python\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Convert python cryptography EC key to OpenSSH format\r\n                \r\nI am looking to convert EC key generated using cryptography module to their respective OpenSSH strings. like\n\n```\necdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAhANiNlmyHtBUgaPXG+CtCVK8mQxBUtDjX3/nqqPZAHhduAAAAIE/JNDqLTeq9WVa5XWyU2Y7NJXfV54wakHmsP5gRNeh2\n```\n\n\nThis is the code I use for EC key generation\n\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import ec\nkey=ec.generate_private_key(ec.SECP256R1(), default_backend())\n```\n\n\nI tried the following.\n\n```\nnumbers = key.private_numbers()\nopensshpublic = 'ecdsa-sha2-nistp256' + base64.b64encode('nistp256' + numbers.public_numbers.x, numbers.public_numbers.y)\n```\n\n\nbut that didn't seem to work.\n\nI suppose there should be a easy way to do this but I am missing something.\n    ", "Answer": "\r\nCryptography added support for doing this in June 2016, it is possible as follows\n\n```\nfrom cryptography.hazmat.primitives import serialization\nkey.public_bytes(serialization.Encoding.OpenSSH, serialization.PublicFormat.OpenSSH)\n```\n\n\nthis gives those neat OpenSSH public keys\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing pyOpenSSL, cryptography on heroku\r\n                \r\nI'm using the following ```\nrequirements.txt```\n for pip:\n\n```\nDjango==1.4.3\nPillow==2.4.0\nSouth==0.7.5\namqp==1.4.5\nanyjson==0.3.3\nargparse==1.2.1\nbilliard==3.3.0.18\nboto==2.4.1\ncelery==3.1.12\ncffi==0.8.6\ncryptography==0.5.4\ndj-database-url==0.2.0\ndjango-annoying==0.7.6\ndjango-appconf==0.6\ndjango-articles==2.4.1\ndjango-celery==3.1.10\ndjango-compressor==1.3\ndjango-debug-toolbar==1.2.1\ndjango-jsonfield==0.9.13\ndjango-pdb==0.4.0\ndjango-postmark==0.1.6\ndjango-s3-folder-storage==0.2\ndjango-storages==1.1.4\ndocopt==0.6.1\nfacebook-sdk==0.4.0\ngoogle-api-python-client==1.2\ngunicorn==0.15.0\nhttplib2==0.9\nipython==2.1.0\nitsdangerous==0.24\nkombu==3.0.20\nmailchimp==2.0.8\npath-and-address==0.2.0\npsycopg2==2.4.5\npyOpenSSL==0.14\npycparser==2.10\npyparsing==2.0.2\npython-dateutil==2.2\npytz==2013b\nrequests==2.3.0\nsix==1.8.0\nsqlparse==0.1.11\ntweepy==2.3.0\nwsgiref==0.1.2\n```\n\n\nThings were working until I added \n\n```\ncffi==0.8.6\ncryptography==0.5.4\ngoogle-api-python-client==1.2\nhttplib2==0.9\npyOpenSSL==0.14\npycparser==2.10\npyparsing==2.0.2\n```\n\n\nwhich I added in order to use google calendar API since ```\nSignedJwtAssertionCredentials```\n depends on ```\npyOpenSSL```\n.\n\nNow when I push to heroku I hit errors during the build seemingly related to ```\nsix```\n and ```\ncffi```\n or ```\ncyrptography```\n:\n\nThe full build log is here, but some relevant snippets:\n\n```\nFetching repository, done.\n\n-----> Python app detected\n-----> Noticed cffi. Bootstrapping libffi.\n-----> Installing dependencies with pip\n\nbuilding '_Cryptography_cffi_684bb40axf342507b' extension\n\n       creating /tmp/pip_build_u50597/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography\n\n       creating /tmp/pip_build_u50597/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography/hazmat\n\n       creating /tmp/pip_build_u50597/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography/hazmat/primitives\n\n       creating /tmp/pip_build_u50597/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography/hazmat/primitives/__pycache__\n\n       gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I/app/.heroku/python/include/python2.7 -c cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.c -o /tmp/pip_build_u50597/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.o\n\n       gcc -pthread -shared /tmp/pip_build_u50597/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.o -L/app/.heroku/python/lib -lpython2.7 -o /tmp/pip_build_u50597/cryptography/cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.so\n\n       Traceback (most recent call last):\n\n         File \"<string>\", line 17, in <module>\n\n         File \"/tmp/pip_build_u50597/cryptography/setup.py\", line 174, in <module>\n\n           \"test\": PyTest,\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/core.py\", line 151, in setup\n\n           dist.run_commands()\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n\n           self.run_command(cmd)\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/dist.py\", line 972, in run_command\n\n           cmd_obj.run()\n\n         File \"<string>\", line 15, in replacement_run\n\n         File \"build/bdist.linux-x86_64/egg/setuptools/command/egg_info.py\", line 186, in find_sources\n\n         File \"build/bdist.linux-x86_64/egg/setuptools/command/egg_info.py\", line 246, in run\n\n         File \"build/bdist.linux-x86_64/egg/setuptools/command/egg_info.py\", line 282, in add_defaults\n\n         File \"build/bdist.linux-x86_64/egg/setuptools/command/sdist.py\", line 167, in add_defaults\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/cmd.py\", line 312, in get_finalized_command\n\n           cmd_obj.ensure_finalized()\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n\n           self.finalize_options()\n\n         File \"build/bdist.linux-x86_64/egg/setuptools/command/build_py.py\", line 26, in finalize_options\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/command/build_py.py\", line 46, in finalize_options\n\n           ('force', 'force'))\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/cmd.py\", line 298, in set_undefined_options\n\n           src_cmd_obj.ensure_finalized()\n\n         File \"/app/.heroku/python/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n\n           self.finalize_options()\n\n         File \"/tmp/pip_build_u50597/cryptography/setup.py\", line 88, in finalize_options\n\n           self.distribution.ext_modules = get_ext_modules()\n\n         File \"/tmp/pip_build_u50597/cryptography/setup.py\", line 65, in get_ext_modules\n\n           from cryptography.hazmat.primitives import constant_time, padding\n\n         File \"cryptography/hazmat/primitives/padding.py\", line 25, in <module>\n\n           from cryptography.hazmat.primitives import interfaces\n\n         File \"cryptography/hazmat/primitives/interfaces.py\", line 21, in <module>\n\n           @six.add_metaclass(abc.ABCMeta)\n\n       AttributeError: 'module' object has no attribute 'add_metaclass'\n```\n\n\nSome googling seems to show this ```\nsix.add_metaclass```\n occured in earlier versions of six, but the version I am using is the most recent I believe, and moreover this also seems to work locally if I create a new virtualenv and do ```\npip install -r requirements.txt```\n (so long as I've installed ```\nlibffi```\n anyway with ```\nsudo apt-get install libffi-dev```\n.\n\nAnyone have any idea why this isn't working on heroku and how to fix?\n\nEDIT\nI have since discovered that this doesn't happen if I specify the python version to be exactly that of my local machine by using a ```\nruntime.txt```\n with ```\npython-2.7.6```\n (vs the heroku default ```\n2.7.7```\n). Still I find this somewhat odd now, is it just a bug?\n    ", "Answer": "\r\nThe problem is with ```\nsix```\n. I've seen this issue before be solved by uninstalling and installing ```\nsix```\n. Give that a try and repot back if it works. \n\n```\n pip uninstall six\n pip install six\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to create a CSR with a UPN SAN using python cryptography module\r\n                \r\nI am trying to generate a CSR with a UPN SAN using the python cryptography module\n```\nfrom cryptography import x509\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat._oid import ObjectIdentifier\n\n\nkey = rsa.generate_private_key(public_exponent=65537, key_size=3072)\n\nwith open(\"rsa.key\", \"wb\") as f:\n    f.write(key.private_bytes(\n        encoding=serialization.Encoding.PEM,\n        format=serialization.PrivateFormat.TraditionalOpenSSL,\n        encryption_algorithm=serialization.NoEncryption(),\n    ))\n\ncsr = x509.CertificateSigningRequestBuilder()\n\ncsr = csr.add_extension(\n    x509.SubjectAlternativeName([\n        x509.OtherName(ObjectIdentifier('1.3.6.1.4.1.311.20.2.3'), \"upn@email.com\".encode(\"utf-8\")),\n    ]),\n    critical=False\n)\n\ncsr = csr.sign(key, hashes.SHA256())\n```\n\nBut I get this error :\n```\n  csr = csr.sign(key, hashes.SHA256())\n  File \"/usr/local/lib/python3.8/dist-packages/cryptography/x509/base.py\", line 641, in sign\n    return rust_x509.create_x509_csr(self, private_key, algorithm)\nValueError: OtherName value must be valid DER: ParseError { kind: ShortData }\n```\n\nHow can convert a string to DER binary format ?\n    ", "Answer": "\r\nASN.1 strings have types, but assuming UTF8String is acceptable then the valid DER encoding for your example email would be: ```\n\\x0c\\rupn@email.com```\n. You can use an ASN.1 DER encoder to do this, but as long as you keep the string length under 128 then the first byte is the ASN.1 tag itself and the second byte is the length (length encoding becomes multi-byte if you exceed 127 bytes). So, assuming your values are < 128 you can take that example and modify the byte value of the length of the string to obtain the value you need (e.g. ```\nupn@email.com```\n is 13 bytes long so the DER string encodes ```\n\\r```\n, which has ordinal value 13).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python cryptography run-time bindings files in GCS\r\n                \r\nI am porting the GCS python client lib. and suffering some problems about dependency.\n\nBecause I want to use gcs on the NAS without glibc, I got the error at the code:\n\nfrom oauth2client.client import SignedJwtAssertionCredentials \n\nthe error shows the reason due to lack of gcc\n\nI trace the code and it seems to generate cryptography relative files (like _Cryptography_cffi_36a40ff0x2bad1bae.so) at run-time from the crypto.verify.\n\nSince the machine I used with gcc, is there any way to replace the cryptography library or I could pre-compile and generate the files at my build machine ?\n\nThanks!\n    ", "Answer": "\r\nCause the compile errors occurred and could not solve easily, I finally use the previous pyOpenssl to solve this problem. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "iTunes Connect: Is my app designed to use cryptography?\r\n                \r\nMy iPhone app only uses encryption to request AdMob ads over https.\n\nWhat should I answer to\n\n\n  Is your app designed to use cryptography or does it contain or\n  incorporate cryptography?\n\n\nIf yes, what do I answer to \n\n\n  Does your app meet any of the following: \n  (a) Qualifies for one or more\n  exemptions provided under category 5 part 2 \n  (b) Use of encryption is\n  limited to encryption within the operating system (iOS or macOS) \n  (c) Only makes call(s) over HTTPS (d) App is made available only in the\n  U.S. and/or Canada\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cygwin: (python) ERROR: Failed building wheel for cryptography\r\n                \r\nI'm using cygwin to develop a django application. And I'm stuck at a package install call digikey-api.\nIt requires a cryptography package to be installed and it fails with the following error messages:\n```\ngenerating cffi module 'build/temp.cygwin-3.2.0-x86_64-3.8/_openssl.c'\nrunning build_rust\n\n    =============================DEBUG ASSISTANCE=============================\n    If you are seeing a compilation error please try the following steps to\n    successfully install cryptography:\n    1) Upgrade to the latest pip and try again. This will fix errors for most\n       users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n    2) Read https://cryptography.io/en/latest/installation.html for specific\n       instructions for your platform.\n    3) Check our frequently asked questions for more information:\n       https://cryptography.io/en/latest/faq.html\n    4) Ensure you have a recent Rust toolchain installed:\n       https://cryptography.io/en/latest/installation.html#rust\n    5) If you are experiencing issues with Rust for *this release only* you may\n       set the environment variable `CRYPTOGRAPHY_DONT_BUILD_RUST=1`.\n    =============================DEBUG ASSISTANCE=============================\n\nerror: can't find Rust compiler\n\nIf you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the need for a Rust compiler.\n\nTo update pip, run:\n\n    pip install --upgrade pip\n\nand then retry package installation.\n\nIf you did intend to build this package from source, try installing a Rust compiler from your system package manager and ensure it is on the PATH during installation. Alternatively, rustup (available at https://rustup.rs) is the recommended way to download and update the Rust compiler toolchain.\n\nThis package requires Rust >=1.41.0.\n----------------------------------------\nERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography which use PEP 517 and cannot be installed directly\n(venv)\n```\n\nI've been trying various solution but no success so far (ie. pip install --upgrade pip did not solve the issue).\nFunny this is that it fails in this python virtual env. but it is succesfull outside this environment (same python version 3.8.10).\nthanks for any help getting around this.\nSebastien\n    ", "Answer": "\r\nThe message is very clear\n```\nerror: can't find Rust compiler\n```\n\nAs Cygwin has NO rust compiler, you can not build it\nhttps://cygwin.com/packages/package_list.html\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is there any solution to encrypt integer in Django using Django Cryptography\r\n                \r\nI am trying to encrypt Django Integer Choices field using Django Cryptography package, here is the documentation: https://django-cryptography.readthedocs.io/en/latest/examples.html. Here is my code.\n```\nfrom django_cryptography.fields import encrypt\n \nclass NumberOfCars(models.IntegerChoices):\n    One_Vehicle = 1\n    Two_Vehicle = 2\n    Three_To_Four = 4\n    Five_To_Eight = 7\n    More_than_Eight = 9\n NumberOfCars = encrypt(models.IntegerField(choices=NumberOfCars.choices))\n```\n\nI am using Mysql database,\nPython==3.10\nDjango==4.0.4\nWhile running migrations i got this error:\n```\n    PS C:\\Users\\lumkile\\Desktop\\Django\\thariauth> py manage.py makemigrations\nTraceback (most recent call last):\n  File \"C:\\Users\\lumkile\\Desktop\\Django\\thariauth\\manage.py\", line 22, in <module>\n    main()\n  File \"C:\\Users\\lumkile\\Desktop\\Django\\thariauth\\manage.py\", line 18, in main\n    execute_from_command_line(sys.argv)\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 446, in execute_from_command_line\n    utility.execute()\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\core\\management\\__init__.py\", line 440, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\core\\management\\base.py\", line 414, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\core\\management\\base.py\", line 455, in execute\n    self.check()\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\core\\management\\base.py\", line 487, in check\n    all_issues = checks.run_checks(\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\core\\checks\\registry.py\", line 88, in run_checks\n    new_errors = check(app_configs=app_configs, databases=databases)\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\core\\checks\\model_checks.py\", line 36, in check_all_models\n    errors.extend(model.check(**kwargs))\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\db\\models\\base.py\", \nline 1442, in check\n    *cls._check_fields(**kwargs),\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\db\\models\\base.py\", \nline 1554, in _check_fields\n    errors.extend(field.check(**kwargs))\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django_cryptography\\fields.py\", line 121, in check\n    errors = super().check(**kwargs)\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 1931, in check\n    *super().check(**kwargs),\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 252, in check\n    *self._check_validators(),\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 413, in _check_validators\n    for i, validator in enumerate(self.validators):\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\utils\\functional.py\", line 49, in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 1954, in validators\n    min_value, max_value = connection.ops.integer_field_range(internal_type)\n  File \"C:\\Users\\lumkile\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\django\\db\\backends\\base\\operations.py\", line 673, in integer_field_range\n    return self.integer_field_ranges[internal_type]\nKeyError: 'BinaryField'\n```\n\nI tried to solve this issue by using the solution i found here :https://github.com/georgemarshall/django-cryptography/issues/16 but i got this error:\nAttributeError: module 'django.db.models' has no attribute 'DecimalFieldChoices'. Any suggestion\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography Library fails to load_pem_public_key with my PEM Format\r\n                \r\nWe are currently working on a project where we have to take the public key of a user from the database and encrypt a string for said user. \n\nUnfortunately, we are getting an error with our cryptography library (cryptography==1.2.1).\n\nThe Public Key:\n\n```\n-----BEGIN PUBLIC KEY-----MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAy2SBwad+TZRyCPDUdxZkGqBipyY7UmTTdGOKL/dgOOsuITXFy/COCi2ylo/owI7u+/K5lkdoBunn1OEu+UFzxRy4bKQK2OkpP6dtAHfyexracpeiHVccRIkQB743DpfupDVtR5TweZsjkRM2SDcpwXZJbnSpa8pzxl6mHvZhV/D2kDkSPLQnI6iWchExt5e/psorpWvy22smaL1xvINztaaRSXFqMQILtSxv/2lJJGc6PRyQacQ4XxDk2DwKBKPyFYHYelYpjGFErUIRz7/EdY4vc3pzr2HMo0AFvvu51ezKIrFGDXt9I7xwEEOSY59mNtA9u9oPyd7UhXkK1JB7OSI458rfHZEXUsvmqqpHH8FKC4dBCZasEHqzMdter05h/v2hMbPV/QgqrArs1p/P6KMpnlYvhnTrIj9p30kOIq7WSfCyXBlTjAb8unYST6vtHXB21TOM6e6szea8fWgCnO3e/xD4M/xdVEqgGxDJWr7qOeHL+l1I93f0wBpO4qlmdMgFz+UqO2p+7dtN4JQO5PwCYHOLgE9bJJZKzaB61BeM4xznqiVfUxOBmtN0k5m1DnKL0lUagSyitwq0H7AY802O91n7ykFYO/gsFkfqNFtdgsGX56lqILU1dYKX3fVsd8r5rENndBE7J0HEUjYz9JHjS+m8EMJ+57kKztP0EgUCAwEAAQ==-----END PUBLIC KEY-----\n```\n\n\nNote: When I paste the code into sublime there are no whichspaces or new line characters! It is just one line. <-- Is this already the problem ?\n\nHaving this coming from the database in a django model it is a unicode/string.\n\nI have taken the code from https://cryptography.io/en/latest/hazmat/primitives/asymmetric/rsa/#key-loading\n\nThe line that fails is:\n\n```\nkey = load_pem_public_key(bytes(pem_public_key), backend=default_backend())\n```\n\n\nThe error is:\n\n```\nValueError: Could not unserialize key data.\n```\n\n\nWhich comes from:\n\n```\n            assert errors[0][1] in (\n                self._lib.ERR_LIB_EVP,\n                self._lib.ERR_LIB_PEM,\n                self._lib.ERR_LIB_ASN1,\n            )\n            raise ValueError(\"Could not unserialize key data.\")\n```\n\n\nWhich is called because of:\n\n```\n            if rsa_cdata != self._ffi.NULL:\n                rsa_cdata = self._ffi.gc(rsa_cdata, self._lib.RSA_free)\n                evp_pkey = self._rsa_cdata_to_evp_pkey(rsa_cdata)\n                return _RSAPublicKey(self, rsa_cdata, evp_pkey)\n            else:\n                self._handle_key_loading_error()\n```\n\n\nAs the assert ```\nif rsa_cdata != self._ffi.NULL:```\n fails the error is raised.\n\nWhat prevents the load_pem_public_key function from reading the public key correctly ? \n    ", "Answer": "\r\nOk, So after further googling I found the answer here:\nhttps://crypto.stackexchange.com/questions/19043/can-i-remove-new-lines-in-a-public-key\n\nWhich resulted in:\n\n```\npem_public_key = pem_public_key.replace(\"-----BEGIN PUBLIC KEY-----\", \"\")\npem_public_key = pem_public_key.replace(\"-----END PUBLIC KEY-----\", \"\")\npem_public_key = re.sub(\"(.{64})\", \"\\\\1\\n\", pem_public_key, 0, re.DOTALL)\npem_public_key = \"-----BEGIN PUBLIC KEY-----\\n\" + pem_public_key\npem_public_key = pem_public_key + \"\\n-----END PUBLIC KEY-----\"\n```\n\n\nEffectively, a new line after 64chars. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Which C crypto framework do you recommend for symmetric & asymmetric cryptography? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 11 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nWhich C crypto framework do you recommend for symmetric & asymmetric cryptography?\n    ", "Answer": "\r\nOpenSSL is great and fast.  If that doesn't work for you, you can also consider Crypto++ (if C++ is ok) or PolarSSL.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Need help verifying a signature with the Python Cryptography library\r\n                \r\nI'm trying to verify a signature using the Python Cryptography library as stated\nhere https://cryptography.io/en/latest/hazmat/primitives/asymmetric/rsa/\n\n\nThis is in the context of a client-server TCP chat app, and the client has calculated the signature, and sent it to the client to verify that it is indeed the correct server. The signature is passed to a function to verify.\n\n```\ndef VerifySignature(signature):\n    with open(\"server_publickey.pem\", \"rb\") as key_file:\n        public_key = serialization.load_pem_public_key(\n            key_file.read(),\n            #password=None,\n            backend=default_backend()\n        )\n        verifier = public_key.verifier(\n            signature,\n            padding.PSS(\n                mgf=padding.MGF1(hashes.SHA256()),\n                salt_length=padding.PSS.MAX_LENGTH\n            ),\n            hashes.SHA256()\n        )\n\n        message = b\"the message that the server verified\"\n        verifier.update(message)\n        if verifier.verify():\n            return 1\n        else:\n            return 0\n```\n\n\nI notice that 0 is being returned. According to the Cryptography specs, it looks like if the verifier.verify() fails it returns an exception, so I don't know how else to test this.\n    ", "Answer": "\r\n```\nverify```\n raises an exception or returns ```\nNone```\n. Accordingly, this code\n\n```\nif verifier.verify():\n    return 1\nelse:\n    return 0\n```\n\n\nwill always return 0 even though in reality the verification check has passed. You are correct that the proper way to use ```\nverify```\n is to wrap it in a try block and handle the ```\nInvalidSignature```\n exception in the event of failure.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Adobe AIR cryptography native extension sample\r\n                \r\nI am an Adobe AIR/AS3 developer and I need to use in my AIR application an encryption/decryption based on private/public keys.\n\nI have found 2 cryptography native extensions:\nhttps://github.com/vpmedia/botan-crypto-ane\nhttps://github.com/vpmedia/cryptopp-ane\n\nbut neither of them has any documentation or samples in AS3. I would appreciate it if anyone would have any tips or samples of how i could encrypt a message with a public key and decrypt it with a private key, using either of the 2 aforementioned libraries.\n\nI have generated my keys using an online \"rsa key generator\".\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How can i implement ntru cryptography algorithm in java?\r\n                \r\nAs it is shown in few survey that ntru cryptography is an advance and efficient algorithm for wireless sensor network , so i want to implement this algorithm in java. I also want to calculate it speed of encryption and decryption. \n\nPlease help me with the process.. :)\n    ", "Answer": "\r\nImplementing a crypto algorithm is hard. You should not attempt it unless you have significant experience and expertise in the field of cryptography. Even though you might come up with something that passes the published test cases, an inexperienced programmer may produce an implementation that is vulnerable attack through other channels, such as timing etc.\n\nThis essay from Bruce Schneier is an interesting read.\n\nIn short, find an existing implementation that is widely known, used and trusted. It will have had a lot of scrutinisation and testing and is much more likely to be secure than anything you could do yourself.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Need help in learning networking and cryptography apis in java [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI am a novice Java developer stepping into world of networking. I have read that http is not a secure way of passing data. I want to learn about cryptography, http and https with java. Can you please point me to some  good references and tutorials. \n\nThanks,\nMayank\n    ", "Answer": "\r\nUse your favorite search-engine and look up references for networking-related technologies\n\n\nTCP/IP and Sockets\nHTTP, HTTPS and SSL (and TLS)\nBasic Java networking API:s (java.net.*)\nCryptography techniques. Symmetric vs Asymmetric algorithms (MD5, DES, AES, RSA etc), one-way (hashing) and two-way encryption\nJava cryptography API (javax.crypto)\nPopular 3d party/open source networking libraries like Apache HttpComponents\nJava and SSL, certificates and signing\n\n\nHonestly, just wikipedia gets you pretty far as a starting-point.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What's the purpose of a password in symmetric cryptography?\r\n                \r\nI found the Python package to encrypt some data and see this in python Cryptography:\n\n\n  It is possible to use passwords with Fernet(symmetric key). To do this, you need to run the password through a key derivation function such as PBKDF2HMAC, bcrypt or scrypt.\n\n\nBut, it turns out that a password works in the same way as a key(use password/key to en/decrypt). So why bother to use password instead of key itself?\n\nI mean why not just use key itself:\n\n```\nfrom cryptography.fernet import Fernet\nkey = Fernet.generate_key()\ntoken = Fernet(key).encrypt(b\"my deep dark secret\")\nFernet(key).decrypt(token)\n```\n\n    ", "Answer": "\r\nA password is something that can be remembered by a person whereas a key is usually not remembered, because it is long (at least 128 bit or Hex-encoded in 32 characters) and is supposed to be really random (indistinguishable from random noise). If you want to encrypt something with a key, but this key cannot be transmitted by asymmetric cryptography and instead should be given over the phone or should never be written anywhere, then you can't simply generate a random key and use that. You need have a password/passphrase in place to derive the key from.\n\nExample 1: \n\nA personal password safe like KeePass needs a key for encryption/decryption. A user will not be able to simply remember that key, therefore we have a much shorter password, which can be remembered. Now, the security lies in the fact that a slow key derivation function is used to derive a key from the password, so an attacker still has trouble brute-forcing the key even though it depends on a much shorter password.\n\nExample 2: \n\nYou compress a document and use the encryption of the compression software. Now you can send the container via e-mail, but you can't send the password along with it. So, you call the person you've sent the e-mail to and tell them the password. A password is much easier to transmit than a long and random key in this way.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "iOS app using non-standard cryptography\r\n                \r\nI'm trying to submit an app to the App Store, but I got stuck with this question\n\n\n  Does your app implement one or more encryption algorithms that are\n  proprietary or yet to be accepted as standard by international\n  standard bodies (such as, the IEEE, IETF, ITU, and so on)?\n\n\nThe only cryptography the app is using is for the api requests that go over https.\n\nWhat is the correct answer (Yes/No) in my case?\n    ", "Answer": "\r\nSee https://itunespartner.apple.com/en/apps/faq/Managing%20Your%20Apps_Trade%20Compliance and note that \"just using https\" would be covered under \"An app uses or accesses only encryption algorithms provided in iOS or Mac OS for its security features\".\n\nSo you would answer No to the specific question you are asking about.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "PGP and the Cryptography Application Block\r\n                \r\nI just had a request to add PGP support to a web application and web service that I'm developing.  I currently am using the Enterprise Library, and would like to use the Cryptography Application Block (CAB) that I'm already using, but I can't find any information on supporting PGP with the Enterprise Library's CAB.  I would figure as much as both of these technologies are used, and the fact that the CAB is extensible, someone would have provided some support for this.  Is there something I'm overlooking, or can someone provide links on using the CAB with PGP.  \n\nI don't know all the details as of yet as to why they want to use PGP, but I'm assuming that blocks of information are going to be encrypted with a PGP public key and posted to the Web service, so I would need to use a private key programatically on the server side to decrypt to get to the information being posted.  It sounds like a horrible idea, but my part is not the planning, only the implementation. \n    ", "Answer": "\r\nThe crypto block API isn't set up for public key algorithms, unfortunately. It handles hashing and symmetric (single key) algorithms only.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python and C# Cryptography: What i'm doing wrong?\r\n                \r\nI need to encrypt text in python and decrypt in C #. In python, I have this code:\n\nI have this code in Python:\n\n```\ndef genKey():\n    rsa = RSA.gen_key(2048, 65537)\n    rsa.save_key('c:/temp/priv-key.pem', callback=passwordCallback)\n    rsa.save_pub_key('c:/temp/pub-key.pem')\n\ndef encrypt():\n    varkey = readkey('c:/temp/pub-key.pem')\n    bio = BIO.MemoryBuffer(varkey)\n    rsa = RSA.load_pub_key_bio(bio)\n\n    encrypted = rsa.public_encrypt('My Text Here.', RSA.pkcs1_oaep_padding)\n\n    f = open(\"c:/temp/cript.txt\", \"w\")\n    f.write(encrypted)\n    f.close()\n```\n\n\nThis code uses M2Crypto.\n\nLike I said, I want to decrypt the result generated up in C #. Below is my code:\n\n```\nstatic void Main(string[] args)\n{\n    string text = GetText();\n    System.Text.ASCIIEncoding  encoding=new System.Text.ASCIIEncoding();\n    Byte[] payload = encoding.GetBytes(text);\n\n    byte[] b = System.IO.File.ReadAllBytes(@\"C:\\temp\\priv-key.pem\");\n    System.Text.ASCIIEncoding enc = new System.Text.ASCIIEncoding();\n\n    OpenSSL.Core.BIO bio = new OpenSSL.Core.BIO(b);\n    OpenSSL.Crypto.CryptoKey key = OpenSSL.Crypto.CryptoKey.FromPrivateKey(bio, \"mypassword\");\n    RSA rsa = key.GetRSA();\n    byte[] result = rsa.PrivateDecrypt(payload, RSA.Padding.OAEP);\n}\n```\n\n\nThe problem is this line:\n\n```\nbyte[] result = rsa.PrivateDecrypt(payload, RSA.Padding.OAEP);\n```\n\n\nWhen it is executed, this error occurs:\n\n```\nerror:0407A079:rsa routines:RSA_padding_check_PKCS1_OAEP:oaep decoding error\nerror:04065072:rsa routines:RSA_EAY_PRIVATE_DECRYPT:padding check failed\n```\n\n\nThe gurus of Cryptography and C# can help me?\n    ", "Answer": "\r\nYou are writing the ```\nencryption```\n ciphertext as text. Instead you should open your file in binary mode in python. Then in C# you do the same thing, but the other way around. Here you should return bytes instead of a string as ciphertext.\n\nIf you want to use text mode instead of binary mode then you could use base 64 encoding/decoding.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "where can I download cryptography windows 7 64 bit installer\r\n                \r\nScrapy is really difficult library on the Windows. There are many dependencies. \nI am wasting lots of time to find those things. And now, I need cryptography. But, where is the installer ? I tried installing pip install or easy_install. but failed. Where can I download the installer for the Windows 7 64bit?\n\n```\nD:\\workspace\\python\\scrapy-install-151214>pip install cryptography\nCollecting cryptography\n  Could not find a version that satisfies the requirement cryptography (from ver\nsions: )\nNo matching distribution found for cryptography\n```\n\n\nI tried instaling thiis library as a whl file. but it failed like the followings.\n\n```\nD:\\workspace\\python\\scrapy-install-151214>pip install cryptography-0.7.2-cp27-no\nne-win_amd64.whl\ncryptography-0.7.2-cp27-none-win_amd64.whl is not a supported wheel on this plat\nform.\n```\n\n    ", "Answer": "\r\nI have tried installing from this source. it worked for me without any glitch. \n\nPythong version ```\nPython 2.7.10 [MSC v.1500 32 bit (Intel)] on win32```\n\nCryptography wheel file ```\ncryptography-1.1.2-cp27-none-win32.whl```\n\n\nchoose whose the wheel file by the following\n\n\nBased Platform ```\nwindows|linux|macintosh```\n version, since you are\nusing windows choose wheel file what contains ```\nwin```\n.\nChoose the bit version based on your python bit version. if it is 64\nchoose a file that contains ```\n64```\n else ```\n32```\n.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does Azure Key Vault support ECC(Elliptic Curve Cryptography)?\r\n                \r\nDoes Azure Key Vault support ECC(Elliptic Curve Cryptography)?\n    ", "Answer": "\r\nIt looks like Elliptic Curve is now supported in Azure.\n\nThere is a tutorial online in F# with someone using it https://tomislav.tech/2018-01-31-ethereum-keyvault-generating-keys/\n\nOr there is also some information in the documentation now.\n\nIt is not marked as complete here https://feedback.azure.com/forums/216840-security-and-compliance/suggestions/10877748-ecc-support-for-azure-key-vault but the latest comment says it is now supported.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Issues with installing cryptography in python 3.8.0 with custom openssl\r\n                \r\nI am involved in a project to compile python 3.8 and a certain set of libraries to be deployed in a mixture of RHEL6 & RHEL7 machines.  Further, due to the differences of RHEL6 & 7(primarily certain libraries found in /lib64), if I were to compile this in a RHEL7 box, my python install doesn't work in the RHEL6 box but the other way around works.  So I am now trying to compile this stuff in RHEL6 machine, package it and deploy it across the board.\n\nPlease note the box I am compiling Python 3.8 and the libraries are air gapped machines, so I just transfer the source from a different machine to the build machine.\n\nOne of the first problems I ran into was, Python3.8 complained about an old version of ssl libraries, I got around that problem using the steps outlined in the link below\n\nhttps://jameskiefer.com/posts/installing-python-3.7-on-debian-8\n\nThis is where I run into an issue.  I used the openssl that I compiled earlier to build Python 3.8 and used that to compile cryptography against, paying attention to the link below.\n\nhttps://cryptography.io/en/latest/installation/#static-wheels\n\nCryptography gets installed just fine, but it still keeps pointing to the native libssl rather than the new updated one that I compiled.  \n\nIn the section where the wheel is generated, I turned on debug mode and I noticed these commands.\n\n```\n  running build_ext\n  generating cffi module 'build/temp.linux-x86_64-3.8/_padding.c'\n  creating build/temp.linux-x86_64-3.8\n  generating cffi module 'build/temp.linux-x86_64-3.8/_constant_time.c'\n  generating cffi module 'build/temp.linux-x86_64-3.8/_openssl.c'\n  building '_openssl' extension\n  creating build/temp.linux-x86_64-3.8/build\n  creating build/temp.linux-x86_64-3.8/build/temp.linux-x86_64-3.8\n  gcc -pthread -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/apps/ops/python3/include/python3.8 -c build/temp.linux-x86_64-3.8/_openssl.c -o build/temp.linux-x86_64-3.8/build/temp.li\nnux-x86_64-3.8/_openssl.o -Wconversion -Wno-error=sign-conversion\n\n```\n\n\nIt looks like the _openssl.o that's being generated just uses the OS native libraries, although I see my switches showing up properly shortly after.\n\n```\n  gcc -pthread -shared -Wl,-rpath,/apps/ops/python3/openssl/lib -Wl,-rpath,/apps/ops/python3/openssl/lib -Wl,-rpath,/apps/ops/python3/openssl/lib build/temp.linux-x86_64-3.8/build/temp.linux\n-x86_64-3.8/_openssl.o -lssl -lcrypto -o build/lib.linux-x86_64-3.8/cryptography/hazmat/bindings/_openssl.abi3.so\n  building '_constant_time' extension\n  gcc -pthread -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/apps/ops/python3/include/python3.8 -c build/temp.linux-x86_64-3.8/_constant_time.c -o build/temp.linux-x86_64-3.8/build/t\nemp.linux-x86_64-3.8/_constant_time.o\n  gcc -pthread -shared -Wl,-rpath,/apps/ops/python3/openssl/lib -Wl,-rpath,/apps/ops/python3/openssl/lib -Wl,-rpath,/apps/ops/python3/openssl/lib build/temp.linux-x86_64-3.8/build/temp.linux\n-x86_64-3.8/_constant_time.o -o build/lib.linux-x86_64-3.8/cryptography/hazmat/bindings/_constant_time.abi3.so\n  building '_padding' extension\n  gcc -pthread -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -I/apps/ops/python3/include/python3.8 -c build/temp.linux-x86_64-3.8/_padding.c -o build/temp.linux-x86_64-3.8/build/temp.li\nnux-x86_64-3.8/_padding.o\n  gcc -pthread -shared -Wl,-rpath,/apps/ops/python3/openssl/lib -Wl,-rpath,/apps/ops/python3/openssl/lib -Wl,-rpath,/apps/ops/python3/openssl/lib build/temp.linux-x86_64-3.8/build/temp.linux\n-x86_64-3.8/_padding.o -o build/lib.linux-x86_64-3.8/cryptography/hazmat/bindings/_padding.abi3.so\n```\n\n\nPlease look at the output below.  I am at a total loss here to figure this out, or is this just not feasible and I have to look at a different solution.\n\n```\n(env) [user1@devhost wheelhouse]$ python -c \"from cryptography.hazmat.backends.openssl.backend import backend;print('Loaded: ' + backend.openssl_version_text());print('Linked Against: '\n + backend._ffi.string(backend._lib.OPENSSL_VERSION_TEXT).decode('ascii'))\"\n/home/user1/tmp/env/lib/python3.8/site-packages/cryptography/hazmat/bindings/openssl/binding.py:159: CryptographyDeprecationWarning: OpenSSL version 1.0.1 is no longer supported by the Open\nSSL project, please upgrade. The next version of cryptography will drop support for it.\n  warnings.warn(\nLoaded: OpenSSL 1.0.1e-fips 11 Feb 2013\nLinked Against: OpenSSL 1.0.1e 11 Feb 2013\n\n(env) [user1@devhost wheels]$ python -c 'import ssl; print (ssl.OPENSSL_VERSION)'\nOpenSSL 1.0.2t  10 Sep 2019\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Get MD5 of a file with Cryptography Python library\r\n                \r\nI need to use the cryptography library to get the MD5 from a file, here's whats I have:\n```\nfrom cryptography.hazmat.primitives import hashes\narchivos = input()\nwith open(archivos, \"rb\") as f:\n    bfile = f.read()\n    print(bfile)\n    readable_hash = hashes.Hash(hashes.MD5())\n    readable_hash.update(bfile)\n    readable_hash.finalize()\n    print(readable_hash)\n```\n\nWhen I print bfile i get this, and that's what I need to hash to MD5:\n```\nb'RGBX\\x01\\x00\\x00\\x00X\\x00b\\x00o\\x00x\\x00G\\x00a\\x00m\\x00e\\x00s\\x00\\x00\\x00'\n```\n\nand when I try to print readable_hash that supose it contains the MD5, I just get this:\n```\n<cryptography.hazmat.primitives.hashes.Hash object at 0x000001EE89A17F10>\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "is there any programing language independent cryptography algorithms? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                It's difficult to tell what is being asked here. This question is ambiguous, vague, incomplete, overly broad, or rhetorical and  cannot be reasonably answered in its current form. For help clarifying this question so that it can be reopened,  visit the help center.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 10 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI am developing a licensing block for a project, the QT desktop program creates a product ID and the user must enter this ID in an asp.net web site to produce an Activation Key, this activation key contains some information that needed to activating the product, and must be decrypted in QT desktop program.\nWhat I need is a cryptography library or just one algorithm to can encrypt information in ASP.net and Decrypt it in QT(c++) or vice verse.\n\nCan any one please guide me?\n    ", "Answer": "\r\nThose algorithms aren't oriented for any specific language. Just get a some crypto library in ASP, some crypto library in c++, and simply encrypt in ASP and decrypt in c++...\n\nAs long as libraries are following correctly algorithm's specification, it won't be any problem.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Using GMP for Cryptography: how to get random numbers?\r\n                \r\nThe documentation for GMP seems to list only the following algorithms for random number generation:\n\n\n```\ngmp_randinit_mt```\n, the Mersenne Twister;\n```\ngmp_randinit_lc_2exp```\n and ```\ngmp_randinit_lc_2exp_size```\n, linear congruential.\n\n\nThere is also ```\ngmp_randinit_default```\n, but it points to ```\ngmp_randinit_mt```\n.\n\nNeither the Mersenne Twister nor linear congruential generators should be used for Cryptography.\nWhat do people usually do, then, when they want to use the GMP to build some cryptographic code?\n\n(Using a cryptographic API for encrypting/decrypting/etc doesn't help, because I'd actually   implement a new algorithm, which crypto libraries do not have).\n    ", "Answer": "\r\nDisclaimer: I have only \"tinkered\" with RNGs, and that was over a year ago.\n\nIf you are on a linux box, the solution is relatively simple and non-deterministic. Just open and read a desired number of bits from ```\n/dev/urandom```\n.  If you need a large number of random bits for your program however, then you might want to use a smaller number of bits from ```\n/dev/urandom```\n as seeds for a PRNG. \n\nboost offers a number of PRNGs and a non-deterministic RNG, random_device. random_device uses the very same ```\n/dev/urandom```\n on linux and a similar(IIRC) function on windows, so if you need windows or x-platform.\n\nOf course, you just might want/need to write a function based on your favored RNG using GMP's types and functions.\n\n\n\nEdit:\n\n```\n#include<stdio.h>\n#include<gmp.h>\n#include<boost/random/random_device.hpp>\n\nint main( int argc, char *argv[]){\n\n    unsigned min_digits = 30;\n    unsigned max_digits = 50;\n    unsigned quantity = 1000;   // How many numbers do you want?\n    unsigned sequence = 10;     // How many numbers before reseeding?\n\n    mpz_t rmin;\n    mpz_init(rmin);\n    mpz_ui_pow_ui(rmin, 10, min_digits-1);\n\n    mpz_t rmax;\n    mpz_init(rmax);\n    mpz_ui_pow_ui(rmax, 10, max_digits);\n\n    gmp_randstate_t rstate;\n    gmp_randinit_mt(rstate);\n\n    mpz_t rnum;\n    mpz_init(rnum);\n\n    boost::random::random_device rdev;\n\n    for( unsigned i = 0; i < quantity; i++){\n\n        if(!(i % sequence)) \n            gmp_randseed_ui(rstate, rdev.operator ()());\n\n        do{\n            mpz_urandomm(rnum, rstate, rmax);\n        }while(mpz_cmp(rnum, rmin) < 0);\n\n        gmp_printf(\"%Zd\\n\", rnum);\n    }\n\n    return 0;\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography Fernet AES Encryption newlines, indents, carriage returns\r\n                \r\nI have to encrypt a string with a key and store the encrypted object as a string, it has to be strong so I decided to use a module providing aes encryption \"Cryptography\" https://pypi.org/project/cryptography/\n\nAs you can see, I made a series of functions to make easy use of Fernet encryption, however for some reason it cannot handle backslashes, newlines, indents and carriage returns, the resulting decryption being different than the original string, the test string here is ```\n\"t\\n\\t\"```\n\n\n```\nfrom cryptography.fernet import Fernet\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC\nimport base64\n\ndef encrypt_string(string_, password, f = None):\n    if f is None:\n        f = get_fernet_(password)\n    try:\n        return str(f.encrypt(string_.encode()))[2:- 1]\n    except:\n        return None\n\ndef decrypt_string(string_, password, f = None):\n    if f is None:\n        f = get_fernet_(password)\n    try:\n        return str(f.decrypt(string_.encode()))[2:- 1]\n    except:\n        return None\n\ndef get_fernet_(password):\n    if password and isinstance(password,str):\n        kdf = PBKDF2HMAC(algorithm = hashes.SHA256(),\n                         length = 32,\n                         salt = password.encode(),\n                         iterations = 100000,\n                         backend = default_backend())\n        key = base64.urlsafe_b64encode(kdf.derive(password.encode()))\n        f = Fernet(key)\n        return f\n\ndef test_encryption(s = \"text\", password = \"key\"):\n    my_f = get_fernet_(password)\n    s2 = encrypt_string(s, password)\n    s3 = decrypt_string(s2, password)\n    s4 = encrypt_string(s, password, my_f)\n    s5 = decrypt_string(s4, password, my_f)\n    if s == s3 and s == s5:\n        return True\n    return False\n\nprint (test_encryption(\"text\"))\nTrue\n\nprint (test_encryption(\"t\\n\\t\"))\nFalse\n```\n\n\nIf anyone could provide a solution for this particular code or a different encryption algorithm that can do what I need\n    ", "Answer": "\r\nThe problem is you are trying to convert a ```\nbytes```\n object to a ```\nstring```\n using the ```\nstr```\n literal, rather than the ```\nbytes.decode()```\n method:\n\n```\nfrom cryptography.fernet import Fernet\n\n# Im just using a random key for simplicity\nkey = Fernet.generate_key()\nf = Fernet(key)\n\nmystr = 'hi\\tthere'\n\nenc = f.encrypt(mystr.encode()) # str.encode() creates a bytes object\ndec = f.decrypt(enc)\n\nstr(dec)\n# \"b'hi\\\\tthere'\"\n# This is NOT the same, use decode\n\nmystr==str(dec[2:-1]) # returns False\nmystr==dec.decode() # returns True\n\ndec.decode()\n# 'hi\\tthere' \n\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How can i encode a sentence in C# [Cryptography]\r\n                \r\nI am currently working on an exercise where I am supposed to create two functions. One for encoding a sentence. And the second one for decoding another sentence. It's like cryptography.\n\nFunctions apart, I'm trying to program the code as a simple way.\n\nHere are the steps:\n\n\nReading what user is typing.\nCompare the string recieved with an alphabet.\nwhen the letter is similar, the cryptography's command's acting (letter moves forward 8 steps).\n\n\nExample:\n\n```\nString Alphabet = \"abcdefghijklmnopqrstuvwxyz\";\nConsole.WriteLine(\"Indiquez votre phrase à encoder:\");\nstring PhraseAEncoder = Console.ReadLine();\nConsole.WriteLine(PhraseAEncoder);\nint PositionLettreFinale = 0;\nfor (int i = 0; i < Alphabet.Length; i++)\n{\n    if (PhraseAEncoder[i] == Alphabet[i])\n    {\n        PositionLettreFinale = Alphabet[i + 8]; // Je récupère la position finale.\n        Console.WriteLine(PositionLettreFinale);\n    }\n    while (i != PositionLettreFinale)\n    {\n        i++;\n        Console.WriteLine(Alphabet[i]);\n    }\n}\n```\n\n\nIt is written in French. But I think you could get it.\n\nProblem: My for is infinite, I can't get a single result.\n    ", "Answer": "\r\nI see two main issues in your code:\n\n```\nPositionLettreFinale = Alphabet[i + 8];```\n\n\n\nHere you can get outside of ```\nAlphabet```\n array (For example when ```\ni```\n equals to 24, you will access element in 32nd position and it doesn't exist). IndexOutOfRangeException\nAlso in the same line, you are assigning a value of type ```\nchar```\n to the variable ```\nPositionLettreFinale```\n type of ```\nint```\n.\n\n\nWhen assigning a value of type ```\nchar```\n to a variable of type ```\nint```\n, it will be converted to ```\nint```\n based on ASCII Table.\n\nAnd now, an answer to your question. \n\n\n  Problem: My for is infinite, I can't get a single result.\n\n\n```\nfor```\n isn't infinite, ```\nwhile```\n is infinite.\n\n```\nwhile (i != PositionLettreFinale)```\n\n\nYou are comparing ```\ni```\n with a decimal value of ```\nchar```\n. They will never be equal because of  ```\ni```\n has maximal value  25 (```\nAlphabet.Length - 1```\n) and  ```\nPositionLettreFinale```\n  has minimal value 'a' (97).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Install of python module cryptography on AIX 5.3\r\n                \r\nThis is error I receive when trying to install cryptography-0.8.2:\n\n```\n# ksh ./install.ksh\n\"_configtest.c\", line 1.1: 1506-731 (S) The '__thread' keyword is not supported on the target platform.  The keyword is ignored.\nNote: will not use '__thread' in the C code\nThe above error message can be safely ignored\n\"/usr/include/alloca.h\", line 34.1: 1506-224 (I) Incorrect pragma ignored.\n\"c/_cffi_backend.c\", line 5665.15: 1506-068 (W) Operation between types \"void*\" and \"char(*)(char,char)\" is not allowed.\n\"c/_cffi_backend.c\", line 5666.15: 1506-068 (W) Operation between types \"void*\" and \"long(*)(int,long)\" is not allowed.\n\"c/_cffi_backend.c\", line 5667.15: 1506-068 (W) Operation between types \"void*\" and \"long long(*)(long long,long long)\" is not allowed.\n\"c/_cffi_backend.c\", line 5668.15: 1506-068 (W) Operation between types \"void*\" and \"double(*)(float,double)\" is not allowed.\n\"c/_cffi_backend.c\", line 5669.15: 1506-068 (W) Operation between types \"void*\" and \"float(*)(float,double)\" is not allowed.\n\"c/_cffi_backend.c\", line 5670.15: 1506-068 (W) Operation between types \"void*\" and \"void(*)(void)\" is not allowed.\n\"c/_cffi_backend.c\", line 5671.15: 1506-068 (W) Operation between types \"void*\" and \"int*(*)(int*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5672.15: 1506-068 (W) Operation between types \"void*\" and \"short(*)(struct _testfunc7_s)\" is not allowed.\n\"c/_cffi_backend.c\", line 5674.15: 1506-068 (W) Operation between types \"void*\" and \"int(*)(int,...)\" is not allowed.\n\"c/_cffi_backend.c\", line 5675.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc7_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5676.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc11_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5677.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc12_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5678.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc13_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5679.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc14_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5680.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc15_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5681.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc16_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5682.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc17_s(*)(int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5683.16: 1506-068 (W) Operation between types \"void*\" and \"int(*)(struct _testfunc17_s*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5684.16: 1506-068 (W) Operation between types \"void*\" and \"long double(*)(long double,int)\" is not allowed.\n\"c/_cffi_backend.c\", line 5685.16: 1506-068 (W) Operation between types \"void*\" and \"short(*)(struct _testfunc7_s*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5686.16: 1506-068 (W) Operation between types \"void*\" and \"int(*)(struct _testfunc21_s)\" is not allowed.\n\"c/_cffi_backend.c\", line 5687.16: 1506-068 (W) Operation between types \"void*\" and \"struct _testfunc22_s(*)(struct _testfunc22_s,struct _testfunc22_s)\" is not allowed.\n\"c/_cffi_backend.c\", line 5688.16: 1506-068 (W) Operation between types \"void*\" and \"int(*)(char*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5906.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5907.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5908.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5909.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5910.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5911.5: 1506-196 (W) Initialization between types \"void*\" and \"unsigned int(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5912.5: 1506-196 (W) Initialization between types \"void*\" and \"long long(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5913.5: 1506-196 (W) Initialization between types \"void*\" and \"unsigned long long(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5914.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5915.5: 1506-196 (W) Initialization between types \"void*\" and \"struct _object*(*)(char*,struct _ctypedescr*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5916.5: 1506-196 (W) Initialization between types \"void*\" and \"char*(*)(struct _object*,struct _ctypedescr*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5917.5: 1506-196 (W) Initialization between types \"void*\" and \"struct _object*(*)(long*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5918.5: 1506-196 (W) Initialization between types \"void*\" and \"void(*)(void)\" is not allowed.\n\"c/_cffi_backend.c\", line 5919.5: 1506-196 (W) Initialization between types \"void*\" and \"void(*)(void)\" is not allowed.\n\"c/_cffi_backend.c\", line 5920.5: 1506-196 (W) Initialization between types \"void*\" and \"struct _object*(*)(char)\" is not allowed.\n\"c/_cffi_backend.c\", line 5921.5: 1506-196 (W) Initialization between types \"void*\" and \"struct _object*(*)(char*,struct _ctypedescr*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5922.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(char*,struct _ctypedescr*,struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5923.5: 1506-196 (W) Initialization between types \"void*\" and \"struct _object*(*)(char*,struct _ctypedescr*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5925.5: 1506-196 (W) Initialization between types \"void*\" and \"unsigned short(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5926.5: 1506-196 (W) Initialization between types \"void*\" and \"struct _object*(*)(unsigned short)\" is not allowed.\n\"c/_cffi_backend.c\", line 5931.5: 1506-196 (W) Initialization between types \"void*\" and \"long double(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5932.5: 1506-196 (W) Initialization between types \"void*\" and \"_Bool(*)(struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5933.5: 1506-196 (W) Initialization between types \"void*\" and \"long(*)(struct _ctypedescr*,struct _object*,char**)\" is not allowed.\n\"c/_cffi_backend.c\", line 5934.5: 1506-196 (W) Initialization between types \"void*\" and \"int(*)(char*,struct _ctypedescr*,struct _object*)\" is not allowed.\n\"c/_cffi_backend.c\", line 5935.5: 1506-196 (W) Initialization between types \"void*\" and \"struct _object*(*)(char*,const struct _cffi_type_context_s*)\" is not allowed.\nunable to execute ./Modules/ld_so_aix: No such file or directory\nTraceback (most recent call last):\n  File \"setup.py\", line 342, in <module>\n    **keywords_with_side_effects(sys.argv)\n  File \"/opt/freeware/lib/python2.7/distutils/core.py\", line 112, in setup\n    _setup_distribution = dist = klass(attrs)\n  File \"build/bdist.aix-5.3/egg/setuptools/dist.py\", line 265, in __init__\n  File \"build/bdist.aix-5.3/egg/setuptools/dist.py\", line 310, in fetch_build_eggs\n  File \"build/bdist.aix-5.3/egg/pkg_resources/__init__.py\", line 824, in resolve\n  File \"build/bdist.aix-5.3/egg/pkg_resources/__init__.py\", line 1069, in best_match\n  File \"build/bdist.aix-5.3/egg/pkg_resources/__init__.py\", line 1081, in obtain\n  File \"build/bdist.aix-5.3/egg/setuptools/dist.py\", line 377, in fetch_build_egg\n  File \"build/bdist.aix-5.3/egg/setuptools/command/easy_install.py\", line 629, in easy_install\n  File \"build/bdist.aix-5.3/egg/setuptools/command/easy_install.py\", line 659, in install_item\n  File \"build/bdist.aix-5.3/egg/setuptools/command/easy_install.py\", line 842, in install_eggs\n  File \"build/bdist.aix-5.3/egg/setuptools/command/easy_install.py\", line 1070, in build_and_install\n  File \"build/bdist.aix-5.3/egg/setuptools/command/easy_install.py\", line 1058, in run_setup\ndistutils.errors.DistutilsError: Setup script exited with error: command './Modules/ld_so_aix' failed with exit status 1\n```\n\n\nThe install script is as follows:\n\n```\nfunction installmodule {\n   module=$1\n   gtar -xzf ${module}.tar.gz\n   cd $module\n   python setup.py install --user\n   cd ..\n}\n\nexport LIBPATH=/opt/freeware/lib\nexport LD_LIBIRARY_PATH=/opt/freeware/lib\nBASEDIR=$HOME/mystuff/\nexport PYTHONUSERBASE=$BASEDIR/python\n\ninstallmodule cryptography-0.8.2\n```\n\n\nThe error that is stopping the build is:\n```\nunable to execute ./Modules/ld_so_aix: No such file or directory```\n\nThat error has been corrected in other modules by changing code that points to ld_so_aix or creating a softlink in the right spot.\n\nI have not figured out how to apply those solutions to this module.\n    ", "Answer": "\r\nI got it installed with these changes:\n\nWARNING: This is a complete hack.  Someone needs to figure out why this was successful and put in a real fix.\n\n```\n/opt/freeware/lib/python2.7/config:\n# diff ld_so_aix.orig ld_so_aix\n89c89\n< impfile=\"./python.exp\"\n---\n> impfile=\"/opt/freeware/lib/python2.7/config/python.exp\"\n116a117\n>         impfile=\"/opt/freeware/lib/python2.7/config/python.exp\"\n```\n\n\nNote: the second setting of impfile is to override the command line setting of it.\n\n```\n/opt/freeware/lib/python2.7:\n# diff _sysconfigdata.py.original _sysconfigdata.py\n20c20\n<  'BLDSHARED': './Modules/ld_so_aix xlc_r -ma -I/opt/freeware/include -DAIX_GENUINE_CPLUSCPLUS -Wl,-brtl -bI:./Modules/python.exp -L/opt/freeware/lib',\n---\n>  'BLDSHARED': '/opt/freeware/lib/python2.7/config/ld_so_aix xlc_r -ma -I/opt/freeware/include -DAIX_GENUINE_CPLUSCPLUS -Wl,-brtl -bI:./Modules/python.exp -L/opt/freeware/lib',\n366c366\n<  'LDSHARED': './Modules/ld_so_aix xlc_r -ma -I/opt/freeware/include -DAIX_GENUINE_CPLUSCPLUS -Wl,-brtl -bI:./Modules/python.exp -L/opt/freeware/lib',\n---\n>  'LDSHARED': '/opt/freeware/lib/python2.7/config/ld_so_aix xlc_r -ma -I/opt/freeware/include -DAIX_GENUINE_CPLUSCPLUS -Wl,-brtl -bI:./Modules/python.exp -L/opt/freeware/lib',\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Poetry update error when installing cryptography lib on Big Sur\r\n                \r\nWhen running ```\npoetry update```\n in a ```\nDjango```\n project I get this issue.\n```\nPackage operations: 8 installs, 22 updates, 0 removals\n\n• Updating cryptography (3.4.6 -> 3.4.8): Failed\n\nEnvCommandError\n\n  Building wheels for collected packages: cryptography\nBuilding wheel for cryptography (pyproject.toml): started\nBuilding wheel for cryptography (pyproject.toml): finished with status 'error'\nERROR: Command errored out with exit status 1:\n command: /Users/paul/Library/Caches/pypoetry/virtualenvs/jiraglue-VXquq6c2- \npy3.9/bin/python /Users/paul/Library/Caches/pypoetry/virtualenvs/jiraglue- \nVXquq6c2-py\n```\n\nI have tried updating pip at the project level as well ```\n/Users/paul/Library/Caches/pypoetry/virtualenvs/jiraglue-VXquq6c2-py3.9/bin/python -m pip install --upgrade pip```\n\nBut this didn't help. The solutions I found online are for fixing this issue at the system level, by linking ```\nopenssl```\n headers. I tried this as well and installing cryptography was possible. However, my issue is within the virtual env and I am not sure how to resolve it.\nFull output later errors with this -\n```\n    build/temp.macosx-11-x86_64-3.9/_openssl.c:575:10: fatal error: \n    'openssl/opensslv.h' file not found\n     #include <openssl/opensslv.h>\n...\nERROR: Could not build wheels for cryptography, which is required to install pyproject.toml-based projects\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "what is a scalar implementation in elliptical curve cryptography?\r\n                \r\nI'm trying to learn the basics of elliptical curve cryptography\nand would like to know the difference between scalar and non\nscalar.\n\nThe test example that comes with the library creates key pairs\nperforms signing and verification both for scalar and non-scalar,\nwhat is the difference ?\n\nThe function in question is:\n\n```\n    void ed25519_add_scalar(unsigned char *public_key, unsigned char *private_key, const unsigned char *scalar)\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to handle credit card information with cryptography on android and Rest\r\n                \r\nI have a Backend with ASP.NET WebApi and a Android client. Basically, when the user makes a payment I need to send a Credit Card information to my WebApi and make the payment there to my Gateway by REST. But I'm concerned because, somehow or someway these information could be intercepted in some cases. For saving these information on SQL I already have a Cryptography code to do this. I was thinking, should I implement a code to crypt the data from the android to Api and decrypt for making the payment and then use my current cryptography to storage in database? Should I use Rijndael? Thanks!\n    ", "Answer": "\r\nWhen using HTTPS you should pin the certificate, that means verify that the site you are directly connecting to is the correct site.\n\nThis is done be verifying that the certificate presented by the HTTPS connection is the correct site, this avoids MITM attacks.\n\nThe the Android client verifies that the connection is directly to your gateway and that your gateway connects directly to the payment site.\n\nYou do not need to add anymore security/encryption.\n\nAs henry states: consult the PCI DSS documents. See PCI Compliance Guide.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Need help verifying a signature with the Python Cryptography library\r\n                \r\nI'm trying to verify a signature using the Python Cryptography library as stated\nhere https://cryptography.io/en/latest/hazmat/primitives/asymmetric/rsa/\n\n\nThis is in the context of a client-server TCP chat app, and the client has calculated the signature, and sent it to the client to verify that it is indeed the correct server. The signature is passed to a function to verify.\n\n```\ndef VerifySignature(signature):\n    with open(\"server_publickey.pem\", \"rb\") as key_file:\n        public_key = serialization.load_pem_public_key(\n            key_file.read(),\n            #password=None,\n            backend=default_backend()\n        )\n        verifier = public_key.verifier(\n            signature,\n            padding.PSS(\n                mgf=padding.MGF1(hashes.SHA256()),\n                salt_length=padding.PSS.MAX_LENGTH\n            ),\n            hashes.SHA256()\n        )\n\n        message = b\"the message that the server verified\"\n        verifier.update(message)\n        if verifier.verify():\n            return 1\n        else:\n            return 0\n```\n\n\nI notice that 0 is being returned. According to the Cryptography specs, it looks like if the verifier.verify() fails it returns an exception, so I don't know how else to test this.\n    ", "Answer": "\r\n```\nverify```\n raises an exception or returns ```\nNone```\n. Accordingly, this code\n\n```\nif verifier.verify():\n    return 1\nelse:\n    return 0\n```\n\n\nwill always return 0 even though in reality the verification check has passed. You are correct that the proper way to use ```\nverify```\n is to wrap it in a try block and handle the ```\nInvalidSignature```\n exception in the event of failure.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How does one access CSR challengePassword with pyca/cryptography?\r\n                \r\nI have created a CSR with the ```\nchallengePassword```\n attribute (oid ```\n1.2.840.113549.1.9.7```\n) via ```\nopenssl```\n cli:\n\n```\nopenssl req  -nodes -new -newkey rsa:4096 -out www.example.com.csr -keyout www.example.com.key\n```\n\n\nI verify that the ```\nchallengePassword```\n is present via\n\n```\nopenssl req -noout -text -in www.example.com.csr\n```\n\n\nWhen I read it in with ```\ncryptography.x509.load_pem_x509_csr()```\n, I can find no record of 'Attributes' or this specific oid, e.g.\n\n```\n   csr = x509.load_pem_x509_csr(csr_data, default_backend())\n   print(csr.subject) # Lists expected subject info; countryName, etc.\n   CHALLENGE_OID = \"1.2.840.113549.1.9.7\"\n   challenge_att = x509.oid.ObjectIdentifier(CHALLENGE_OID)\n   challenge = csr.subject.get_attributes_for_oid(challenge_att) # challenge is []\n```\n\n\nIs this Attribute visible anywhere in the resulting object? The pyca/cryptography docs are not helping me out.\n    ", "Answer": "\r\nA challenge password is an attribute encoded into the CSR. Unfortunately, arbitrary attributes aren't currently supported by pyca/cryptography. There is an open issue for this on GitHub right now but no one has implemented it yet.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Jasmin installation fails on osx while installing cryptography package\r\n                \r\nI was trying to install jasmine on mac osx and I got following error for ```\ncryptography```\n package.\n\npip install jasmin==0.5.4-beta\n\nI don't have any idea about this error and not much debugging skills to trace the error from pip log\nCan anyone please help me to sort out this issue?\nUPDATED I have tried following links solutions but it doesn't work for me\nhttps://gist.github.com/davidalber/6bc5c7c43c530642f79e\nError installing bcrypt with pip on OS X: can't find ffi.h (libffi is installed)\nHere are my random try:\n\nenv DYLD_LIBRARY_PATH=/usr/local/Cellar/openssl/1.0.1j_1/lib ARCHFLAGS=\"-Wno-error=unused-command-line-argument-hard-error-in-future\" LDFLAGS=\"-L/usr/local/Cellar/openssl/1.0.1j_1/lib\" CFLAGS=\"-I/usr/local/Cellar/openssl/1.0.1j_1/include\" pip install cryptography\nenv ARCHFLAGS=\"-arch x86_64\" LDFLAGS=\"-L//usr/local/Cellar/openssl/1.0.1j_1/lib\" CFLAGS=\"-I/usr/local/Cellar/openssl/1.0.1j_1/include\"\nenv DYLD_LIBRARY_PATH=/usr/local/Cellar/libffi/3.0.13/lib/libffi-3.0.13/lib/ ARCHFLAGS=\"-Wno-error=unused-command-line-argument-hard-error-in-future\" LDFLAGS=\"-L/usr/local/Cellar/libffi/3.0.13/lib/libffi-3.0.13/lib\" CFLAGS=\"-I/usr/local/Cellar/libffi/3.0.13/lib/libffi-3.0.13/include\" pip install cryptography\nenv ARCHFLAGS=\"-arch x86_64\" LDFLAGS=\"-L//usr/local/Cellar/openssl/1.0.1j_1/lib\" CFLAGS=\"-I/usr/local/Cellar/openssl/1.0.1j_1/include\"\n\nI am keep getting following error.\nUPDATED: Here are the pip log details\n```\nInstalling collected packages: cryptography\n  Running setup.py install for cryptography\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py\", line 337, in <module>\n        **keywords_with_side_effects(sys.argv)\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 152, in setup\n        dist.run_commands()\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n        self.run_command(cmd)\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 971, in run_command\n        cmd_obj.ensure_finalized()\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n        self.finalize_options()\n      File \"/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py\", line 115, in finalize_options\n        self.distribution.ext_modules = get_ext_modules()\n      File \"/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py\", line 74, in get_ext_modules\n        from cryptography.hazmat.bindings.commoncrypto.binding import (\n      File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/commoncrypto/binding.py\", line 12, in <module>\n        class Binding(object):\n      File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/commoncrypto/binding.py\", line 34, in Binding\n        \"-framework\", \"Security\", \"-framework\", \"CoreFoundation\"\n      File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/utils.py\", line 97, in build_ffi_for_binding\n        extra_link_args=extra_link_args,\n      File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/utils.py\", line 105, in build_ffi\n        ffi = FFI()\n      File \"/Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/cffi/api.py\", line 56, in __init__\n        import _cffi_backend as backend\n    ImportError: dlopen(/Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/_cffi_backend.so, 2): Symbol not found: _ffi_type_double\n      Referenced from: /Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/_cffi_backend.so\n      Expected in: flat namespace\n     in /Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/_cffi_backend.so\n    Complete output from command /Users/bhushanvaiude/** path to project **/bin/python -c \"import setuptools;__file__='/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/7w/8z_mn3g120n34bv0w780gnd00000gn/T/pip-yAn5r8-record/install-record.txt --single-version-externally-managed --install-headers /Users/bhushanvaiude/** path to project **/include/site/python2.7:\n    running install\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py\", line 337, in <module>\n\n    **keywords_with_side_effects(sys.argv)\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 152, in setup\n\n    dist.run_commands()\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n\n    self.run_command(cmd)\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py\", line 971, in run_command\n\n    cmd_obj.ensure_finalized()\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n\n    self.finalize_options()\n\n  File \"/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py\", line 115, in finalize_options\n\n    self.distribution.ext_modules = get_ext_modules()\n\n  File \"/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py\", line 74, in get_ext_modules\n\n    from cryptography.hazmat.bindings.commoncrypto.binding import (\n\n  File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/commoncrypto/binding.py\", line 12, in <module>\n\n    class Binding(object):\n\n  File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/commoncrypto/binding.py\", line 34, in Binding\n\n    \"-framework\", \"Security\", \"-framework\", \"CoreFoundation\"\n\n  File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/utils.py\", line 97, in build_ffi_for_binding\n\n    extra_link_args=extra_link_args,\n\n  File \"/Users/bhushanvaiude/** path to project **/build/cryptography/src/cryptography/hazmat/bindings/utils.py\", line 105, in build_ffi\n\n    ffi = FFI()\n\n  File \"/Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/cffi/api.py\", line 56, in __init__\n\n    import _cffi_backend as backend\n\nImportError: dlopen(/Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/_cffi_backend.so, 2): Symbol not found: _ffi_type_double\n\n  Referenced from: /Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/_cffi_backend.so\n\n  Expected in: flat namespace\n\n in /Users/bhushanvaiude/** path to project **/lib/python2.7/site-packages/_cffi_backend.so\n\n----------------------------------------\nCleaning up...\nCommand /Users/bhushanvaiude/** path to project **/bin/python -c \"import setuptools;__file__='/Users/bhushanvaiude/** path to project **/build/cryptography/setup.py';exec(compile(open(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/7w/8z_mn3g120n34bv0w780gnd00000gn/T/pip-yAn5r8-record/install-record.txt --single-version-externally-managed --install-headers /Users/bhushanvaiude/** path to project **/include/site/python2.7 failed with error code 1 in /Users/bhushanvaiude/** path to project **/build/cryptography\nStoring complete log in /Users/bhushanvaiude/.pip/pip.log\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to print public key from certificates using \"cryptography\" library in Python2?\r\n                \r\nI have to extract public key from .pem certificate using cryptography library in Python2 but am able to get only public key object .\n\nIn cryptography documentation , I found this code\n\n```\nfrom cryptography.hazmat.primitives.asymmetric import rsa\n\npem_cert=open(\"/home/lab14/aes/fd.pem\",\"rb\").read()\n\ncert = x509.load_pem_x509_certificate(pem_cert, default_backend())\n\npublic_key = cert.public_key()\n\nprint(public_key)\n```\n\n\nBut when run this, I get public key object but not actual key in hex format.\n\nHere is the output I got\n\n```\n<cryptography.hazmat.backends.openssl.rsa._RSAPublicKey object at 0x7f49e214d6d8>\n```\n\n\nAny assistance would be helpful and appreciated .\nThank you\n    ", "Answer": "\r\nYou've got a public key object, which needs to be encoded to retrieve a representation of the key in bytes. Then those bytes can be encoded using any hexadecimal encoder - if that's what is required.\n\nSo simply call ```\npublic_bytes(encoding, format)```\n to retrieve the bytes. The encoding can be ```\nSubjectPublicKeyInfo```\n, which contains information about the public key type (it's a generic key) or ```\nPKCS1```\n, which basically contains a minimal encoding of the RSA public key. Note that you may first have to establish the key type before you can use ```\nPKCS1```\n because that only describes RSA keys.\n\nYou can also choose between DER and PEM format. DER just returns a byte representation of the ASN.1 defined structure of an RSA public key. PEM base 64 encodes that structure and adds header and footer lines as to create a textual representation of the key.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Handle user login using asymmetric cryptography\r\n                \r\nIs it possible to implement a login protocol with asymetric cryptography instead of the hashed password method?\n\nFor example, while creating an account, the client generates a private/public key pair from a hash of the username and password. The public key is then sent to the server with the username, and the server stores the username and the public key. When the user wants to login, he enters his password, the client regenerates the private key, signs a nonce with it, and sends the signed message to the server. The server is then able to authenticate the user as he knows the public key associated with the username.\n\nIs there any flaws in this protocol?\n\nAnd what would be the advantages over storing the password hash?\n    ", "Answer": "\r\nThere might be a serious flaw with the authentication, yes, depending on the implementation. If Bob is the server and Alice is the client, with Mallory a malicious eavesdropper:\n\nIf Alice generates a random number, concatenates this with her username, encrypts with her private key and sends to server. Server decrypts and verifies with Alice's public key. Without the server saving the random number, this is susceptible to replay attacks - Mallory could just listen in, save the blocks that Alice sends to the server and just replay them later. Without saving them, the server would be none the wiser.\n\nTo protect the server against this, the server would have to generate the random number. It would also need to be a secure random number, otherwise Mallory could predict, or at least guess what the next number will be.\n\nIf Mallory could intercept messages, then he can purport to be Alice - he intercepts all communications and just relays them, even if the server generates the random number. \n\nAlice and Bob both need to be able to prove that it was the other who has cheated. They also need to be able to detect tampering from Mallory - the protocol needs some extra layers to ensure authenticity of the messages.\n\nThere is research going into this at the moment, but as far as I know, it is very difficult to authenticate a user without a trusted certificate authority also being used: public keys can be known by all, but any attacker can swap their own public key for that of another without detection, unless there is trust established through a certificate authority.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Using pycryptodome or cryptography in python 3.6. How to achieve this?\r\n                \r\nImagine the following message:\n\n\"This is a message to the signed\"\n\nI have the need to sign this sample message using \"pycryptodome\" or \"cryptography\" in Python 3.6 with the following standards:\n\n\nFormat: x.509;\nCharset: UTF-8;\nEncoding: Base64;\nPKCS1 v1.5;\nSize: 1024 bits;\nMessage format: SHA-1;\n\n\nI have the required \"privatekey.pem\" but I do not know how to do do it in pycryptodome or cryptography.\n\nUPDATED:\nI have found this sample code but still not know if it is the correct way to achieve what I need based on standards defined on the original message. The sample code (for pycryptodome):\n\n```\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Signature import PKCS1_v1_5\nfrom Crypto.Hash import SHA1\nimport base64\nfrom base64 import b64encode, b64decode\n\nkey = open('privatekey.pem', \"r\").read()\nrsakey = RSA.importKey(key)\nsigner = PKCS1_v1_5.new(rsakey)\ndigest = SHA1.new()\ndata = 'This the message to be signed'\ndigest.update(b64decode(data))\nsign = signer.sign(digest)\ndoc = base64.b64encode(sign)\nprint(doc)\n```\n\n\nI can see that I get a 172 characters signature hash but need professional advise to know if this meets the standards I described and if it is the correct way of doing it.\n    ", "Answer": "\r\nHere is a code snippet, adapted from the applicable documentation page:\n\n```\nfrom Crypto.Signature import pkcs1_15\nfrom Crypto.Hash import SHA1\nfrom Crypto.PublicKey import RSA\nfrom base64 import b64encode\n\nmessage = 'This the message to be signed'\nkey = RSA.import_key(open('private_key.der').read())\nh = SHA1.new(message)\nsignature = pkcs1_15.new(key).sign(h)\nprint(b64encode(signature))\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Simple Cryptography - Problematic For Loops\r\n                \r\nI'm trying to create a simple cryptography program that allows a user to enter in a 5 letter word as a key. The program then uses each character of that key to encrypt a letter of a user's message that they enter. It's a bit hard to explain, but an example will help make it a bit more clear.\n\nSo, say you want your key word to be \"lemon\". 'l' is the 12th letter in the alphabet, but we count from 0 so 'l' is the 11th letter in what we would call the alphabet array.```\n'l' = 11, 'e' would = 4, 'm' = 12, 'o' = 14, 'n' = 13```\n. So if you wanted to encrypt the message \"attack at dawn\", each character would have its own letter from the key it corresponds to. It then adds the number corresponding to the key letter to the message letter and then you've encrypted it. Example below.\n\n```\n                  plain text:       attack at dawn\n                  key:              lemonl em onle\n                  encrypted:        lxfopv ef rnhr\n```\n\n\nTaking a look at the code and comments will also help. My problem is that the for loops that are supposed to actually encrypt the message are not working properly. I can't see any problems with the code, but output isn't correct so it must be a logical error maybe?\n\n```\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string key;\n    int keySize;\n    char keyChar[5];\n    int keyInteger[5];\n    bool keyLoop = true;\n    //makes sure key is 5 characters longs.\n    while (keyLoop) {\n        cout << \"enter in the 5 letter key: \";\n        cin >> key;\n        keySize = key.size();\n        if (keySize < 5 || keySize > 5) {\n            cout << \"Invalid key.\" << endl;\n    }\n    else {\n        //obtains each individual character and places it into the array keyChar.\n        for (int i = 0; i < 5; i++) {\n            keyChar[i] = key[i];\n        }\n        keyLoop = false;\n    }\n}\n\nchar alphabet[52]{ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };\n//finds the place of the element in keyChar and stores it as an int in the array keyInteger. This is setting up the key for encryption.\nfor (int x = 0; x < 5; x++) {\n    for (int i = 0; i < 26; i++) {\n        if (keyChar[x] == alphabet[i]) {\n            keyInteger[x] = i;\n        }\n    }\n}\n//This just displays the values of keyInt. This code was included to make sure the program was storing the right values.\nfor (int i = 0; i < 5; i++) {\n    cout << keyInteger[i] << endl;\n}\n\nstring secretMessage;\n\ncin.ignore();\n//user input their secret message\ncout << \"Enter your secret message: \";\ngetline(cin, secretMessage);\n//gets size of message and creates variable to modify when we're ready to encrypt the message. \nint secretMessageSize = secretMessage.size();\ncout << secretMessageSize << endl;\nstring newMessage = secretMessage;\nint temp;\n\n// This first loop goes through each character of the message. \nfor (static int y = 0; y < secretMessageSize; y++) {\n    // This loop keeps track of which keyInteger will be used for the encryption formula. \n    for (int a = 0; a < 5; a++) {\n        // The if statement makes sure that the keyInteger isn't used until there is actually a character to be modified.\n        if (secretMessage[y] == ' ') {\n            //Just outputting the new message right now to make sure the program is running.\n            cout << \" \";\n            a--;\n        }\n        else {\n            //this loop goes runs until the character of secretMessage[y] is the same as the character at alphabet[i].\n            //then it assigns temp to the value of i. This will be used in the encryption formula.\n            for (int i = 0; i < 26; i++) {\n                if (secretMessage[y] == alphabet[i]) {\n                    temp = i;\n                    break;\n                }\n                //this is all for testing purposes. LETTER should have the same letter in a row.\n                cout << \"LETTER \" << secretMessage[y] << \"           \" << alphabet[i] << endl;\n                //number should have the what number character the loop is on of the secretMessage. The number across should be the where that character was found in the alphabet array.\n                cout << \"NUMBER \" << y << \"           \" << i << endl;\n                //Key should only have one integer next to it. This should be whichever instance the loop that has a in it is at.\n                cout << \"KEY \" << keyInteger[a] << endl;\n                //This should give the actual character that should be replacing the character in secretMessage at whatever iteration it is at.\n                //The encryption formula takes the integer that is used to address the character in the alphabet array. So if it were an 'a', then that integer would == 0;\n                //Then it adds the keyInteger at whatever iteration the loop is at. If the keyword were lemon, and it was in its first iteration, a would = 0, and keyInteger[0] would equal 11.\n                //The sum of these two values will give you the new character from the alphabet array. So alphabet[0+11] would = l. <-- this is a lower case L.\n                cout << \"CRYPT \" << alphabet[keyInteger[a] + i] << endl;\n\n            }\n        }\n        //this adds to y so that it keeps track of each character in the message, but we are also able to keep track of which keyInteger to use. \n        y++;\n    }\n}\nreturn 0;\n}\n```\n\n    ", "Answer": "\r\nBelow is the code written in C++ that does exactly what you are looking for. If anything is not working you can tell me in comments.\n\nI have use the find() function in order to minimize the length of code and for better readability. I have primarily modified the for() loop that is encrypting the message (as mentioned by you also).\n\nEDIT - Don't look for spaces only while encrypting. Anything other then alphabet should be printed as it is in the encrypted message. I have used return(-1) to do the same and checked it in the if condition in the encryption loop.\n\n```\nchar alphabet[26]{ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};\n\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint find(char character)\n{\n    for (int i = 0; i < 26; i++) \n    {\n        if (character == alphabet[i]) \n        {\n            return (i);\n        }\n    }\n    return (-1);\n}\n\nint main() \n{\n    string key;\n    int keySize;\n    char keyChar[5];\n    bool keyLoop = true;\n    int keyInteger[5];\n\n    while (keyLoop) \n    {\n        cout << \"enter in the 5 letter key: \";\n        cin >> key;\n        keySize = key.size();\n        if (keySize < 5 || keySize > 5) \n        {\n            cout << \"Invalid key.\" << endl;\n        }\n        else \n        {\n            for (int i = 0; i < 5; i++)    \n            {\n                keyChar[i] = key[i];\n            }\n            keyLoop = false;\n        }\n    }\n\n    for (int x = 0; x < 5; x++) \n    {\n        keyInteger[x] = find(keyChar[x]);\n    }\n\n    string secretMessage;\n    cin.ignore();\n    cout << \"Enter your secret message: \";\n    getline(cin, secretMessage);\n    int secretMessageSize = secretMessage.size();\n    string newMessage = secretMessage;\n    int temp;\n\n    int x = 0;\n    for (int i = 0; i < secretMessageSize; i++)\n    {\n        if (x == 5)\n            x = 0;\n\n        if (find(secretMessage[i]) == -1)\n            newMessage[i] = secretMessage[i];\n        else\n        {\n            temp = (find(secretMessage[i]) + keyInteger[x])%26;\n            newMessage[i] = alphabet[temp];\n            x++;\n        }\n    }\n\n    for (int i = 0; i < secretMessageSize; i++)\n    {\n        cout << newMessage[i];\n    }\n    cout << endl;\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python + how to remove the message \"cryptography is not installed, use of crypto disabled\"\r\n                \r\nFirst time programming in python and I guess you will notice it after reading my question:\n  + How can I remove the message \"cryptography is not installed, use of crypto disabled\" when running the application?\n\nI have created a basic console application using the pyinstaller tool and the code is written in python.\nWhen I run the executable, I am getting the message \"cryptography is not installed, use of crypto disabled\". The program still runs, but I would prefer to get rid off the message.\n\nCan someone help me?\n\nThanks in advance. \n    ", "Answer": "\r\ncryptography and crypto are 2 different modules.\ntry:\n```\npip install cryptography```\n\n```\npip install crypto```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Generating Elliptic Curve Private Key in Python with the cryptography library\r\n                \r\nI am attempting to generate a public/private elliptic curve key pair in python using hazmat in cryptography. Below is the current code that I have. When I run, it is generating the error 'NoneType' object has no attribute 'generate_elliptic_curve_private_key'\n\n```\necurve = asymmetric.ec.EllipticCurve\necurve.name = 'secp256r1'\necurve.key_size = 128\nec_backend = cryptography.hazmat.backends.interfaces.EllipticCurveBackend.generate_elliptic_curve_private_key(cryptography.hazmat.backends.interfaces.EllipticCurveBackend, ecurve)\nkey = asymmetric.ec.generate_private_key(curve=ecurve, backend=ec_backend)  \n```\n\n\nHere is the documentation https://cryptography.io/en/latest/hazmat/primitives/asymmetric/ec/#\n    ", "Answer": "\r\nI don't see where ```\ngenerate_elliptic_curve_private_key```\n method is available. \n\nHere is an example of generating a ```\nSECP256R1```\n and serializing the public key into PEM format:\n\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import ec\n\nprivate_key = ec.generate_private_key(ec.SECP256R1(), default_backend())\npublic_key = private_key.public_key()\n# serializing into PEM\nrsa_pem = public_key.public_bytes(encoding=serialization.Encoding.PEM, format=serialization.PublicFormat.SubjectPublicKeyInfo)\n```\n\n\nprinting the key\n\n```\nIn [14]: print(rsa_pem.decode())\n-----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEilwhueTwySfEbXd9y/inZVsYVG6z\n/UJyVbN+cYgtIFd0vLdaP27cME8RGE/enMEcX7/jkb13j2DPnXt2R6teZw==\n-----END PUBLIC KEY-----\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "public/private key cryptography ( MTA Mobility )\r\n                \r\nI have a question in MTA (Microsoft Technology Associate) Mobility and I want the answer to it please\n\nThe Question :\n\na client/server application is designed to use public/private key cryptography for secure communication between client and server , The certificate is installed on the server\n\nwhen the client send message to the server which key does it use to encrypt the message ?\n\nA)The client's private key\n\nB)The client's public key\n\nC)The server's private key\n\nD)The server's public key\n    ", "Answer": "\r\nD.  The Client uses the server's public key to encrypt the message it wants to send to the Server.  The Server can then use its private key to decrypt the message that it was sent, because it was encrypted using that server's public key.\n\nMore info about Public Cryptography here.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Elliptic Curve Cryptography on PHP and Android\r\n                \r\nI need help in understanding Elliptic Curve Cryptography on php and android .. I have read about Spongy castle and Bouncy Castle... what I understood so far is that Each side needs to generate a pair of keys (public and private) and a shared secret key which they will use for the encryption and decryption.. am I right? or is there another key as well... i am a bit confused.. also I am unable to find anything for php ...any help is appreciated...\n\nI also know that ECDSA is only used to generate signatures and that ECDH is used for encryption/decryption of messages which is what I need..\n    ", "Answer": "\r\n\n  what I understood so far is that Each side needs to generate a pair of\n  keys (public and private) and a shared secret key which they will use\n  for the encryption and decryption.. am I right?\n\n\nYes. Each side generates key pairs and sends their public keys to each other. Private keys must be kept securely and not disclosed. \n\nSecret key is generated from recipient private key and sender public key and vice versa. \n\nElliptic Curve Digital Signature Algorithm (ECDSA) is used to sign data with private key and verify it with corresponding public key.\n\nElliptic curve Diffie–Hellman (ECDH): \n\n\n  is an anonymous key agreement protocol that allows two parties, each\n  having an elliptic curve public–private key pair, to establish a\n  shared secret over an insecure channel.\n\n\nSo you need ECDH if you want to encrypt and decrypt data.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Security, cryptography: Stupid Challenge - Response protocol?\r\n                \r\nOk guys just a small game:\n\nI have some specifications for a project. At some point they ask for the following to encrypt a password over the net, saying that it is a challenge response protocol:\n\n\nCLIENT ----------------------------- SERVER\n\n(1)ask for challenge -------------->\n\n(2)    <---------------------------- send SHA1 taken from the time\n                                       (this is the challenge)\n(3) make SHA1 xor PASSWORD --------> if it's equal to SHA1 xor stored password\n\n(4)    <---------------------------- Grant access\n\n\nFor those who don't know it SHA stands for Secure Hashing Algorithm, a standard algorithm for cryptography.\n\nI hope it's clear. Question is: If I sniff packets 2 and 3 (the \"challenge\" and the \"challenge xor password\", I do have the actual password just with another xor between them both!?!? There is other way to implement this kind of protocol?? \n    ", "Answer": "\r\nYou would be able to reverse engineer the password.  You want to send the SHA of the password, not the password itself.  Rolling your own security protocols is almost never a good idea.  Can you not use SSL or something equivalent?\n\nhttp://en.wikipedia.org/wiki/Cryptographic_nonce\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "A cryptography web application works well locally but don't on the cloud\r\n                \r\nI made a cryptography web application and tried it locally and it works well. But when i tried it on WSO2 cloud it gives this exception report:\n\n```\nHTTP Status 500 - PWC6033: Error in Javac compilation for JSP\n\nmessage PWC6033: Error in Javac compilation for JSP\n\ndescription The server encountered an internal error that prevented it from fulfilling this request.\n\nexception\n\norg.apache.jasper.JasperException: PWC6033: Error in Javac compilation for JSP\n\nPWC6199: Generated servlet error:\nOnly a type can be imported. javax.crypto.BadPaddingException resolves to a package\n\nPWC6199: Generated servlet error:\nOnly a type can be imported. javax.crypto.Cipher resolves to a package\n\nPWC6199: Generated servlet error:\nOnly a type can be imported. javax.crypto.IllegalBlockSizeException resolves to a package\n\nPWC6199: Generated servlet error:\nOnly a type can be imported. javax.crypto.KeyGenerator resolves to a package\n\nPWC6199: Generated servlet error:\nOnly a type can be imported. javax.crypto.NoSuchPaddingException resolves to a package\n\nPWC6199: Generated servlet error:\nOnly a type can be imported. javax.crypto.SecretKey resolves to a package\n\nPWC6199: Generated servlet error:\nOnly a type can be imported. javax.crypto.spec.SecretKeySpec resolves to a package\n\nPWC6197: An error occurred at line: 21 in the jsp file: /Certificate_student.jsp\nPWC6199: Generated servlet error:\nCipher cannot be resolved to a type\n\nPWC6197: An error occurred at line: 138 in the jsp file: /Certificate_student.jsp\nPWC6199: Generated servlet error:\nSecretKeySpec cannot be resolved to a type\n```\n\n\nand other errors, please how to solve those exceptions ?\n\nThis is my header\n\n```\n<%@page import=\"org.apache.catalina.tribes.util.Arrays\"%>\n<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>\n<%@include file=\"connection.jsp\"%>\n<%@page import=\"java.io.UnsupportedEncodingException\" %>\n<%@page import=\"java.security.InvalidKeyException\" %>\n<%@page import=\"java.security.NoSuchAlgorithmException\" %>\n<%@page import=\"javax.crypto.BadPaddingException\" %>\n<%@page import=\"javax.crypto.Cipher\" %>\n<%@page import=\"javax.crypto.IllegalBlockSizeException\" %>\n<%@page import=\"javax.crypto.KeyGenerator\" %>\n<%@page import=\"javax.crypto.NoSuchPaddingException\" %>\n<%@page import=\"javax.crypto.SecretKey\" %>\n<%@page import=\"javax.crypto.spec.SecretKeySpec\"%>\n```\n\n    ", "Answer": "\r\nRuntime of WSO2 App Cloud is powered by WSO2 App Server. This issues was due to a class loading issues in the WSO2 App Server. We at WSO2 have fixed this issue and you should be able to try your code successfully now.\n\nBTW, next time when you want to tag WSO2 Cloud in a question, use the wso2cloud tag. It will help us to answer your questions quickly.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing Python cryptography package from source on Solaris 10\r\n                \r\nI am trying to install the Python cryptography package on a Solaris 10 system. I have built Python 2.7 and libffi from source in my home directory. I can build cffi by specifying the path to libffi:\n\n```\n$ python setup.py build_ext --include-dirs ~/libffi/lib/libffi-3.2.1/include --library-dirs ~/libffi/lib\n```\n\n\nHowever, attempts to build cryptography fail with this error:\n\n```\nImportError: ld.so.1: python: fatal: relocation error: file /export/home/ef/python/lib/python2.7/site-packages/cffi-1.9.1-py2.7-solaris-2.10-sun4v.32bit.egg/_cffi_backend.so: symbol __sync_synchronize: referenced symbol not found\n```\n\n\nI have set ```\nLD_LIBRARY_PATH```\n to ```\n/export/home/ef/libffi/lib```\n.\n\nI notice the following warning when I compile cffi - could it be related?\n\n```\nc/call_python.c:219: warning: implicit declaration of function `__sync_synchronize'\n```\n\n\nHow can I resolve this? All the similar issues I have found online were fixed by installing the relevant OS packages (e.g. ```\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev```\n). OpenCSW is not an option.\n    ", "Answer": "\r\n```\n__sync_synchronize```\n is a built-in function, but it is only supported by gcc and clang.  I guess you're using a different compiler or a very old version of gcc or clang.  Can you try to install from the cffi trunk?  We recently added support for some other compilers (not released yet, will be in version 1.10).\n\nhttps://bitbucket.org/cffi/cffi/downloads?tab=branches, download the \"default\" branch (e.g. by clicking ```\ngz```\n).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing Python cryptography package from source on Solaris 10\r\n                \r\nI am trying to install the Python cryptography package on a Solaris 10 system. I have built Python 2.7 and libffi from source in my home directory. I can build cffi by specifying the path to libffi:\n\n```\n$ python setup.py build_ext --include-dirs ~/libffi/lib/libffi-3.2.1/include --library-dirs ~/libffi/lib\n```\n\n\nHowever, attempts to build cryptography fail with this error:\n\n```\nImportError: ld.so.1: python: fatal: relocation error: file /export/home/ef/python/lib/python2.7/site-packages/cffi-1.9.1-py2.7-solaris-2.10-sun4v.32bit.egg/_cffi_backend.so: symbol __sync_synchronize: referenced symbol not found\n```\n\n\nI have set ```\nLD_LIBRARY_PATH```\n to ```\n/export/home/ef/libffi/lib```\n.\n\nI notice the following warning when I compile cffi - could it be related?\n\n```\nc/call_python.c:219: warning: implicit declaration of function `__sync_synchronize'\n```\n\n\nHow can I resolve this? All the similar issues I have found online were fixed by installing the relevant OS packages (e.g. ```\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev```\n). OpenCSW is not an option.\n    ", "Answer": "\r\n```\n__sync_synchronize```\n is a built-in function, but it is only supported by gcc and clang.  I guess you're using a different compiler or a very old version of gcc or clang.  Can you try to install from the cffi trunk?  We recently added support for some other compilers (not released yet, will be in version 1.10).\n\nhttps://bitbucket.org/cffi/cffi/downloads?tab=branches, download the \"default\" branch (e.g. by clicking ```\ngz```\n).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Asymmetric cryptography - Plaintext size error\r\n                \r\nI’m trying to encrypt small data using asymmetric cryptography with python. I'm currently using M2Crypto to generate 1024 bit private/public key pair.\n\nAfter using different python libraries, such has M2Crypto and Pycrypto (with several variations on it), I'm having plaintext size problems: ValueError: Plaintext is too long.\nThis happens because I'm trying to encrypt the data and after that encrypting that last encryption (encryption over encryption), e.g.:\n\nEncryption:\nEKpuuser(EKprown(Data)) -> EData\n\npuser: Public key user,\nprown: Private key (data) owner\n\nDecryption:\nDKpruser(DKpuown(EData)) -> Data\n\npruser: Private key user,\npuown: Public key (data) owner\n\nI have tried many solutions that I've found around the web, but the only one that helped me to pass this problem was using signatures before doing encryption:\n\n```\nciphertext = 'xpto'\nm_EOi = hashlib.sha1()\nm_EOi.update(ciphertext_EOi)\nsig_EOi = (m_EOi.hexdigest())\n```\n\n\nBut this solution isn't what I need, because after I used it and encrypt the signature (and encrypt the encryption), then do the decryption, can't decrypt the signature, so I can't get to the initial message.\n\nEdited:\n\nI already have done something like e.g.: \n\n```\nBLOCK_SIZE = 32 \nPADDING = '{' \nmessage = 'today' \nkey = 'aaaaaaaaaa123456' \npad = lambda s: s + (BLOCK_SIZE - len(s) % BLOCK_SIZE) * PADDING \nEncodeAES = lambda c, s: base64.b64encode(c.encrypt(pad(s))) cipher = AES.new(key) \nencoded = EncodeAES(cipher, message)\n```\n\n\n\n\n```\nkey = 123 \nh1 = SHA256.new() \nh1.update(key) \nkey1 = h1.digest()[0:16] \niv1 = Random.new().read(16) \ncipher1 = AES.new(key1, AES.MODE_CFB, iv1) \ncriptogram1 = iv1 + cipher1.encrypt(data1)\n```\n\n\nBut I allways have the plaintext size problem.\n    ", "Answer": "\r\nAsymmetric cryptography isn't made for what you are trying to do. Asymmetric cryptography is usually used in hybrid solutions to encrypt the keys of symmetric cryptographic systems which are used to encrypt the actual data.\nUsually something like this:\n```\ndata + a symmetric (random) key (K) -> symmetric cipher (e.g. AES) -> cipher text\n\nK + public asymmetric key of the recipient -> asymmetric cipher -> Ke\n```\n\nThen you transmit the cipher text and ```\nKe```\n to the recipient\n```\nK```\n is usually way smaller than the maximum data size of asymmetric ciphers while your ordinary plain text data is not.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What does Failed building wheel for cryptography for Pyopenssl in DigitalOcean means?\r\n                \r\nI was trying to install pyopenssl module in Digital Ocean Ubuntu 16.04 server. I am getting this error Failed building wheel for cryptography at the end followed by some errors.\n\n```\nCollecting pyopenssl\n  Using cached https://files.pythonhosted.org/packages/9e/de/f8342b68fa9e981d348039954657bdf681b2ab93de27443be51865ffa310/pyOpenSSL-19.1.0-py2.py3-none-any.whl\nCollecting cryptography>=2.8 (from pyopenssl)\n  Using cached https://files.pythonhosted.org/packages/be/60/da377e1bed002716fb2d5d1d1cab720f298cb33ecff7bf7adea72788e4e4/cryptography-2.8.tar.gz\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in /usr/local/lib/python3.6/dist-packages (from pyopenssl)\nRequirement already satisfied (use --upgrade to upgrade): cffi!=1.11.3,>=1.8 in /usr/local/lib/python3.6/dist-packages (from cryptography>=2.8->pyopenssl)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /usr/local/lib/python3.6/dist-packages (from cffi!=1.11.3,>=1.8->cryptography>=2.8->pyopenssl)\nBuilding wheels for collected packages: cryptography\n  Running setup.py bdist_wheel for cryptography: started\n  Running setup.py bdist_wheel for cryptography: finished with status 'error'\n  Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-vxubdrh0/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" bdist_wheel -d /tmp/tmp7omz3s7mpip-wheel- --python-tag cp36:\n  running bdist_wheel\n  running build\n  running build_py\n  creating build\n  creating build/lib.linux-x86_64-3.6\n  creating build/lib.linux-x86_64-3.6/cryptography\n  creating build/lib.linux-x86_64-3.6/cryptography/x509\n  copying src/cryptography/x509/base.py -> build/lib.linux-x86_64-3.6/cryptography/x509\n  copying src/cryptography/x509/ocsp.py -> build/lib.linux-x86_64-3.6/cryptography/x509   \n  running egg_info\n  writing src/cryptography.egg-info/PKG-INFO\n  writing dependency_links to src/cryptography.egg-info/dependency_links.txt\n  writing requirements to src/cryptography.egg-info/requires.txt\n  writing top-level names to src/cryptography.egg-info/top_level.txt\n  reading manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  reading manifest template 'MANIFEST.in'\n  no previously-included directories found matching 'docs/_build'\n  warning: no previously-included files found matching 'vectors'\n  warning: no previously-included files matching '*' found under directory 'vectors'\n  warning: no previously-included files found matching 'azure-pipelines.yml'\n  warning: no previously-included files found matching '.azure-pipelines'\n  warning: no previously-included files found matching '.travis.yml'\n  warning: no previously-included files found matching '.travis'\n  warning: no previously-included files matching '*' found under directory '.azure-pipelines'\n  warning: no previously-included files matching '*' found under directory '.travis'\n  warning: no previously-included files found matching 'release.py'\n  warning: no previously-included files found matching '.coveragerc'\n  warning: no previously-included files found matching 'codecov.yml'\n  warning: no previously-included files found matching 'dev-requirements.txt'\n  warning: no previously-included files found matching 'rtd-requirements.txt'\n  warning: no previously-included files found matching 'tox.ini'\n  writing manifest file 'src/cryptography.egg-info/SOURCES.txt'\n  running build_ext\n  generating cffi module 'build/temp.linux-x86_64-3.6/_padding.c'\n  creating build/temp.linux-x86_64-3.6\n  generating cffi module 'build/temp.linux-x86_64-3.6/_constant_time.c'\n  generating cffi module 'build/temp.linux-x86_64-3.6/_openssl.c'\n  building '_openssl' extension\n  creating build/temp.linux-x86_64-3.6/build\n  creating build/temp.linux-x86_64-3.6/build/temp.linux-x86_64-3.6\n  x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.6m -c build/temp.linux-x86_64-3.6/_openssl.c -o build/temp.linux-x86_64-3.6/build/temp.linux-x86_64-3.6/_openssl.o -Wconversion -Wno-error=sign-conversion\n  build/temp.linux-x86_64-3.6/_openssl.c:22:24: fatal error: pyconfig.h: No such file or directory\n  compilation terminated.\n  error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n  ----------------------------------------\n  Running setup.py clean for cryptography\nFailed to build cryptography\nInstalling collected packages: cryptography, pyopenssl\n  Found existing installation: cryptography 1.2.3\n    Not uninstalling cryptography at /usr/lib/python3/dist-packages, outside environment /usr\n  Running setup.py install for cryptography: started\n    Running setup.py install for cryptography: finished with status 'error'\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-vxubdrh0/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-cb9nh_qa-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib.linux-x86_64-3.6\n    creating build/lib.linux-x86_64-3.6/cryptography\n    copying src/cryptography/utils.py -> build/lib.linux-x86_64-3.6/cryptography\n    running egg_info\n    writing src/cryptography.egg-info/PKG-INFO\n    writing dependency_links to src/cryptography.egg-info/dependency_links.txt\n    writing requirements to src/cryptography.egg-info/requires.txt\n    writing top-level names to src/cryptography.egg-info/top_level.txt\n    reading manifest file 'src/cryptography.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    no previously-included directories found matching 'docs/_build'\n    warning: no previously-included files found matching 'vectors'\n    warning: no previously-included files matching '*' found under directory 'vectors'\n    warning: no previously-included files found matching 'azure-pipelines.yml'\n    warning: no previously-included files found matching '.azure-pipelines'\n    warning: no previously-included files found matching '.travis.yml'\n    warning: no previously-included files found matching '.travis'\n    warning: no previously-included files matching '*' found under directory '.azure-pipelines'\n    warning: no previously-included files matching '*' found under directory '.travis'\n    warning: no previously-included files found matching 'release.py'\n    warning: no previously-included files found matching '.coveragerc'\n    warning: no previously-included files found matching 'codecov.yml'\n    warning: no previously-included files found matching 'dev-requirements.txt'\n    warning: no previously-included files found matching 'rtd-requirements.txt'\n    warning: no previously-included files found matching 'tox.ini'\n    writing manifest file 'src/cryptography.egg-info/SOURCES.txt'\n    running build_ext\n    generating cffi module 'build/temp.linux-x86_64-3.6/_padding.c'\n    creating build/temp.linux-x86_64-3.6\n    generating cffi module 'build/temp.linux-x86_64-3.6/_constant_time.c'\n    generating cffi module 'build/temp.linux-x86_64-3.6/_openssl.c'\n    building '_openssl' extension\n    creating build/temp.linux-x86_64-3.6/build\n    creating build/temp.linux-x86_64-3.6/build/temp.linux-x86_64-3.6\n    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.6m -c build/temp.linux-x86_64-3.6/_openssl.c -o build/temp.linux-x86_64-3.6/build/temp.linux-x86_64-3.6/_openssl.o -Wconversion -Wno-error=sign-conversion\n    build/temp.linux-x86_64-3.6/_openssl.c:22:24: fatal error: pyconfig.h: No such file or directory\n    compilation terminated.\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n\n    ----------------------------------------\n```\n\n\nThis problem was also coming while doing ```\npip3 install cryptography```\n and but it went away when I added all dependencies with this command - \n\n```\nsudo apt-get install python-pip python-dev libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg8-dev zlib1g-dev\n```\n\n\nWhat I am missing here. \n    ", "Answer": "\r\nManged to figure out myself somehow.\n\n```\napt-get install python3.6-dev```\n did it for me.\n\nAlthough I did ```\nsudo apt-get install python3-dev```\n, the problem had persisted for some reason.\n\nThanks to Hatshepsut's comment in pyconfig.h missing during \"pip install cryptography\"\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cannot get expected result for Spring4D cryptography examples\r\n                \r\nThe Spring4D library has cryptography classes, however I cannot get them to work as expected. I'm probably using them incorrectly, however lack of any examples makes it difficult.\n\nFor example on the website https://quickhash.com/hash-sha256-online, I can hash the word \"test\" to generate the following hash:\n\n```\n9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\n```\n\n\nUsing the Spring4D library, the following code produces a different hash:\n\n```\nCreateSHA256.ComputeHash('test').ToString;\n```\n\n\nresults in:\n\n```\n9EFEA1AEAC9EDA04A892885A65FDAE0E6D9BE8C9FC96DA76D31B929262E12B1D\n```\n\n\nUpper/lower case aside, it is a different hash altogether. I know must be doing something wrong, but again there's no examples of use so I'm stuck on how to do this.\n    ", "Answer": "\r\nHashing algorithms operate on binary data, typically represented using byte arrays. \n\nUnfortunately, both of the resources you have used offer the ability to hash text. In order to hash text, you first need to convert from text to binary. To do so requires a choice of encoding. And neither method makes it clear what that choice is. \n\nWhen I use this Delphi code:\n\n```\nLowerCase(CreateSHA256.ComputeHash(TEncoding.UTF8.GetBytes('test')).ToString)\n```\n\n\nI get the same hash as appears in your question.\n\nI urge you never to attempt to encrypt/hash text and instead regard these operations as operating on binary. Always use an explicit encoding and then encrypt/hash the array of bytes that the encoding produced.\n\nI've picked the UTF-8 encoding here, because it is a full Unicode encoding, and tends to be efficient in terms of space. However, I don't think your online encoder uses UTF-8. In fact I've no idea what encoding it uses, it is unclear on the matter. This is of course the same old issue of text being different from binary.\n\nIn my opinion it is a design flaw of the Delphi library that you use that it allows you to hash text without an explicit choice of encoding. If this library must offer a function that hashes text, then it should require the caller to supply an extra ```\nTEncoding```\n parameter. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Call Java Cryptography Architecture (JCA) from PL/SQL\r\n                \r\nIs it possible to access (call) Java Cryptography Architecture (JCA) classes from PL/SQL? For example, when stored procedure are running.\n\nP.S. The big task is to validate digital signature (RSA) in PL/SQL.\n    ", "Answer": "\r\nFirst of all, have you looked at the DBMS_CRYPTO package in Oracle?  If that supports the algorithm(s) you need, I would suggest using it instead of calling Java.\n\nBut yes, if necessary, you should be able to call JCA from PL/SQL.  It looks to me like this is part of the core JDK and therefore should be included in the Oracle built-in Java environment already, but even if that were not the case you could load the classes into the database yourself.  The only major limitation is that you can't utilize JNI within the database, but I think that's not relevant in this case.\n\nIf your question is more generally how to call Java from PL/SQL, then start with the Oracle Java Developer manual.  The chapter on Java Stored Procedures is primarily what you need.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Asymmetric cryptography example in C#\r\n                \r\nI need to send confidential data to a server over a TCP connection. I have done a lot of researching and I understand the theoretical part. Based on what I have researched I want to do the following:\n\nNote there is a server and a client: (we assume that public keys of either the client or server can be obtain by anyone)\n\n\nclient creates his public and private key. He is able to encrypt with his private key and decrypt with his public key.\nserver creates his public and private keys. private key is used to decrypt messages and public key is used to encrypt messages. (note is the other way around as with the client)\nthe client get's the server's public key. client then will be able to encrypt messages with that key and the only one that will be able to decrypt that message would be the server's private key.\nsince the server needs to be certain that the message comes from that specific client then the client will encrypt his name (signature) with his private key. \nso the client message will contain:  data to be send, client's public key, client name encrypted with the client's private key.\nthe client will encrypt the message with the public key from the server. client will then send that message to the server.\nthe server will decrypt the message it just received with his private key. \nonce the message is decrypted it will contain the data (info), encrypted signature, public key from client.\nfinally, the server will decrypt the client signature with the public key that was contained on the message to verify that the message is from that client.\n\n\n\n\nOK so this is how asymmetric cryptography works. I have also researched about the classes that enable you to create this key pairs with the .NET framework.  The classes that I researched that enable you do create this public and private key pairs are:\n\n```\nSystem.Security.Cryptography.DES\nSystem.Security.Cryptography.DSACryptoServiceProvider \nSystem.Security.Cryptography.ECDsa \nSystem.Security.Cryptography.ECDsaCng \nSystem.Security.Cryptography.ECDiffieHellman \nSystem.Security.Cryptography.ECDiffieHellmanCng \nSystem.Security.Cryptography.RSA \nSystem.Security.Cryptography.RSACryptoServiceProvider \n```\n\n\nso now my problems comes on how do I use one of this classes to do it with C#? I understand how the theoretical part works but how do I do what I just described with code. I have researched for some examples but I am having a hard time understanding them. \n\nhere is one example that I found that I believe does what I described:\n\n```\nusing System;\nusing System.IO;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace Example\n{\n    class Program\n    {\n        static CngKey aliceKey;\n        static CngKey bobKey;\n        static byte[] alicePubKeyBlob;\n        static byte[] bobPubKeyBlob;\n\n        static void Main()\n        {\n            CreateKeys();\n            byte[] encrytpedData = AliceSendsData(\"secret message\");\n            BobReceivesData(encrytpedData);\n\n            Console.Read();\n\n        }\n\n        private static void CreateKeys()\n        {\n            aliceKey = CngKey.Create(CngAlgorithm.ECDiffieHellmanP256);\n            bobKey = CngKey.Create(CngAlgorithm.ECDiffieHellmanP256);\n            alicePubKeyBlob = aliceKey.Export(CngKeyBlobFormat.EccPublicBlob);\n            bobPubKeyBlob = bobKey.Export(CngKeyBlobFormat.EccPublicBlob);\n        }\n\n        private static byte[] AliceSendsData(string message)\n        {\n            Console.WriteLine(\"Alice sends message: {0}\", message);\n            byte[] rawData = Encoding.UTF8.GetBytes(message);\n            byte[] encryptedData = null;\n\n            using (var aliceAlgorithm = new ECDiffieHellmanCng(aliceKey))\n            using (CngKey bobPubKey = CngKey.Import(bobPubKeyBlob,\n                  CngKeyBlobFormat.EccPublicBlob))\n            {\n                byte[] symmKey = aliceAlgorithm.DeriveKeyMaterial(bobPubKey);\n                Console.WriteLine(\"Alice creates this symmetric key with \" +\n                      \"Bobs public key information: {0}\",\n                      Convert.ToBase64String(symmKey));\n\n                using (var aes = new AesCryptoServiceProvider())\n                {\n                    aes.Key = symmKey;\n                    aes.GenerateIV();\n                    using (ICryptoTransform encryptor = aes.CreateEncryptor())\n                    using (MemoryStream ms = new MemoryStream())\n                    {\n                        // create CryptoStream and encrypt data to send\n                        var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write);\n\n                        // write initialization vector not encrypted\n                        ms.Write(aes.IV, 0, aes.IV.Length);\n                        cs.Write(rawData, 0, rawData.Length);\n                        cs.Close();\n                        encryptedData = ms.ToArray();\n                    }\n                    aes.Clear();\n                }\n            }\n            Console.WriteLine(\"Alice: message is encrypted: {0}\",\n                  Convert.ToBase64String(encryptedData)); ;\n            Console.WriteLine();\n            return encryptedData;\n        }\n\n        private static void BobReceivesData(byte[] encryptedData)\n        {\n            Console.WriteLine(\"Bob receives encrypted data\");\n            byte[] rawData = null;\n\n            var aes = new AesCryptoServiceProvider();\n\n            int nBytes = aes.BlockSize >> 3;\n            byte[] iv = new byte[nBytes];\n            for (int i = 0; i < iv.Length; i++)\n                iv[i] = encryptedData[i];\n\n            using (var bobAlgorithm = new ECDiffieHellmanCng(bobKey))\n            using (CngKey alicePubKey = CngKey.Import(alicePubKeyBlob,\n                  CngKeyBlobFormat.EccPublicBlob))\n            {\n                byte[] symmKey = bobAlgorithm.DeriveKeyMaterial(alicePubKey);\n                Console.WriteLine(\"Bob creates this symmetric key with \" +\n                      \"Alices public key information: {0}\",\n                      Convert.ToBase64String(symmKey));\n\n                aes.Key = symmKey;\n                aes.IV = iv;\n\n                using (ICryptoTransform decryptor = aes.CreateDecryptor())\n                using (MemoryStream ms = new MemoryStream())\n                {\n                    var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Write);\n                    cs.Write(encryptedData, nBytes, encryptedData.Length - nBytes);\n                    cs.Close();\n\n                    rawData = ms.ToArray();\n\n                    Console.WriteLine(\"Bob decrypts message to: {0}\",\n                          Encoding.UTF8.GetString(rawData));\n                }\n                aes.Clear();\n            }\n        }\n    }\n}\n```\n\n\nIn this program I believe the client is Alice and the server is Bob.  I have to split this program into two parts. I am having a hard time understanding it and if I give it a try most likely I will make it work. Anyways how can I split this program into a server side code and client side code. I know how to send bytes between server and client. But I don't want to make it work without understanding what is going on. maybe you guys can show me an easier example. \n\n\n\nEDIT\n\nI managed to separate the code: here is the server code (the ip address of my computer happened to be 192.168.0.120) :\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Net.Sockets;\nusing System.Net;\nusing System.Security.Cryptography;\nusing System.IO;\n\n\nnamespace ServerListener\n{\n    class Program\n    {\n        static TcpListener server;\n\n\n        //static CngKey aliceKey;\n        static CngKey bobKey;\n        static byte[] alicePubKeyBlob;\n        static byte[] bobPubKeyBlob;\n\n        static void Main(string[] args)\n        {\n\n            CreateKeys();\n\n            IPAddress ipAddress = IPAddress.Parse(\"192.168.0.120\");\n            server = new TcpListener(ipAddress, 54540);\n            server.Start();\n            var client = server.AcceptTcpClient();\n            var stream = client.GetStream();\n\n            alicePubKeyBlob = new byte[bobPubKeyBlob.Length];\n            stream.Read(alicePubKeyBlob, 0, alicePubKeyBlob.Length);\n\n            stream.Write(bobPubKeyBlob, 0, bobPubKeyBlob.Length);\n\n            byte[] encrytpedData = new byte[32];\n\n            stream.Read(encrytpedData, 0, encrytpedData.Length);\n\n            BobReceivesData(encrytpedData);\n\n\n        }\n\n        private static void CreateKeys()\n        {\n            //aliceKey = CngKey.Create(CngAlgorithm.ECDiffieHellmanP256);\n            bobKey = CngKey.Create(CngAlgorithm.ECDiffieHellmanP256);\n            //alicePubKeyBlob = aliceKey.Export(CngKeyBlobFormat.EccPublicBlob);\n            bobPubKeyBlob = bobKey.Export(CngKeyBlobFormat.EccPublicBlob);\n        }\n\n\n        private static void BobReceivesData(byte[] encryptedData)\n        {\n            Console.WriteLine(\"Bob receives encrypted data\");\n            byte[] rawData = null;\n\n            var aes = new AesCryptoServiceProvider();\n\n            int nBytes = aes.BlockSize >> 3;\n            byte[] iv = new byte[nBytes];\n            for (int i = 0; i < iv.Length; i++)\n                iv[i] = encryptedData[i];\n\n            using (var bobAlgorithm = new ECDiffieHellmanCng(bobKey))\n            using (CngKey alicePubKey = CngKey.Import(alicePubKeyBlob,\n                  CngKeyBlobFormat.EccPublicBlob))\n            {\n                byte[] symmKey = bobAlgorithm.DeriveKeyMaterial(alicePubKey);\n                Console.WriteLine(\"Bob creates this symmetric key with \" +\n                      \"Alices public key information: {0}\",\n                      Convert.ToBase64String(symmKey));\n\n                aes.Key = symmKey;\n                aes.IV = iv;\n\n                using (ICryptoTransform decryptor = aes.CreateDecryptor())\n                using (MemoryStream ms = new MemoryStream())\n                {\n                    var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Write);\n                    cs.Write(encryptedData, nBytes, encryptedData.Length - nBytes);\n                    cs.Close();\n\n                    rawData = ms.ToArray();\n\n                    Console.WriteLine(\"Bob decrypts message to: {0}\",\n                          Encoding.UTF8.GetString(rawData));\n                }\n                aes.Clear();\n            }\n        }\n    }\n}\n```\n\n\nand here is the client code:\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Net.Sockets;\nusing System.Net;\nusing System.Security.Cryptography;\nusing System.IO;\n\nnamespace ClientAlice\n{\n    class Program\n    {\n        static CngKey aliceKey;\n        //static CngKey bobKey;\n        static byte[] alicePubKeyBlob;\n        static byte[] bobPubKeyBlob;\n\n        static void Main(string[] args)\n        {\n\n            CreateKeys();\n            bobPubKeyBlob = new byte[alicePubKeyBlob.Length];\n\n            TcpClient alice = new TcpClient(\"192.168.0.120\", 54540);\n\n            var stream = alice.GetStream();\n            stream.Write(alicePubKeyBlob, 0, alicePubKeyBlob.Length);\n\n            stream.Read(bobPubKeyBlob, 0, bobPubKeyBlob.Length);\n\n\n            byte[] encrytpedData = AliceSendsData(\":)\");\n\n            stream.Write(encrytpedData, 0, encrytpedData.Length);\n\n\n        }\n\n\n        private static void CreateKeys()\n        {\n            aliceKey = CngKey.Create(CngAlgorithm.ECDiffieHellmanP256);\n            //bobKey = CngKey.Create(CngAlgorithm.ECDiffieHellmanP256);\n            alicePubKeyBlob = aliceKey.Export(CngKeyBlobFormat.EccPublicBlob);\n            //bobPubKeyBlob = bobKey.Export(CngKeyBlobFormat.EccPublicBlob);\n        }\n\n        private static byte[] AliceSendsData(string message)\n        {\n            Console.WriteLine(\"Alice sends message: {0}\", message);\n            byte[] rawData = Encoding.UTF8.GetBytes(message);\n            byte[] encryptedData = null;\n\n            using (var aliceAlgorithm = new ECDiffieHellmanCng(aliceKey))\n            using (CngKey bobPubKey = CngKey.Import(bobPubKeyBlob,\n                  CngKeyBlobFormat.EccPublicBlob))\n            {\n                byte[] symmKey = aliceAlgorithm.DeriveKeyMaterial(bobPubKey);\n                Console.WriteLine(\"Alice creates this symmetric key with \" +\n                      \"Bobs public key information: {0}\",\n                      Convert.ToBase64String(symmKey));\n\n                using (var aes = new AesCryptoServiceProvider())\n                {\n                    aes.Key = symmKey;\n                    aes.GenerateIV();\n                    using (ICryptoTransform encryptor = aes.CreateEncryptor())\n                    using (MemoryStream ms = new MemoryStream())\n                    {\n                        // create CryptoStream and encrypt data to send\n                        var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write);\n\n                        // write initialization vector not encrypted\n                        ms.Write(aes.IV, 0, aes.IV.Length);\n                        cs.Write(rawData, 0, rawData.Length);\n                        cs.Close();\n                        encryptedData = ms.ToArray();\n                    }\n                    aes.Clear();\n                }\n            }\n            Console.WriteLine(\"Alice: message is encrypted: {0}\",\n                  Convert.ToBase64String(encryptedData)); ;\n            Console.WriteLine();\n            return encryptedData;\n        }\n    }\n}\n```\n\n\nI thinks it is pretty secure. Every time it sends a different byte array although sending the same info!\n    ", "Answer": "\r\nAs you note, you are a beginner at crypto. If this is a fun toy project to learn about crypto, great. If this is real production code you are going to implement it insecurely. You should be using off-the-shelf tools like SSL/HTTPS/whatever to solve this problem rather than doing it wrong yourself. \n\nI'll take this opportunity to point out areas where your sketch is fatally weak.\n\n\n  3) the client get's the server's public key.\n\n\nOK. How? This is the most important step. The security of the entire system relies upon this step, and you have completely glossed over how it works. How does the client obtain the public key of the server? What stops an evil person from calling up the client and saying \"hey client, I'm the server. Here's my public key!\" And now the client is encrypting messages that can only be decrypted by the evildoer. The evildoer has the real server's public key, so the evildoer re-encrypts the message with the real public key and sends it on. Your whole system is thereby compromised. The public key cryptosystem is only secure if there is a secure key exchange mechanism. (And a reasonable question then is: if you have a secure key exchange mechanism, why not simply use it to exchange the message in the first place?)\n\n\n  4) since the server needs to be certain that the message comes from that specific client then the client will encrypt his name (signature) with his private key. \n\n\nThe client should encrypt a hash of the entire message as the signature, not just a part of the message. That way the server has evidence that the whole message was from the client.\n\n\n  6) the client will encrypt the message with the public key from the server. client will then send that message to the server.\n\n\nThis is extremely inefficient. Better is for the server and client to agree upon a key to a symmetric cryptosystem. The key can be transmitted between the server and the client using the public key cryptosystem. The server and client now have a shared secret key that they can use for this communication session.\n\n\n  9) lastly, the server will decrypt the client signature with the public key that was contained on the message to verify that the message is from that client.\n\n\nHow on earth does that help anything? I want to send you a message. You want to know who it comes from. So I send you a photocopy of my drivers license, so you can compare the signature on the license with the signature on the message. How do you know I sent you my drivers license and not a photocopy of someone else's? This doesn't solve the client authentication problem at all. Again, you need to solve the key distribution problem. The system depends on there being a secure key distribution infrastructure, which you have not specified.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "BouncyCastle Cryptography provider library used with applet on Java 7u40\r\n                \r\nThe case: I am maintaining a Java applet which uses the BouncyCastle libraries bcpkix-jdk15on-149.jar, and bcprov-jdk15on-149.jar.\n\nProblem is when the applet is run on a JRE version 7_u40 enabled browser.\nThe behavior has changed from version 7_u25 in a way that it always prompts a modal window like \"Security prompt for an app using a self-signed certificate\" (which cannot be permanently hidden anymore), just to trust bcprov.\n\nhttps://www.java.com/en/download/help/appsecuritydialogs.xml\n\nAs far as I know, this is because BC libraries are signed with the BouncyCastle certificate, issued by the \"JCE Code Signing CA\".\nBecause of that, the lib can perform and act as a cryptography provider.\n\nBUT: the JRE can not build the certificate chain to trust the signature. It shows \"provider : UNKNOWN\"\n\nI know i can remove that signature and sign by myself (I own a Thawte code sign certificate):\n\n\nit works with bcpkix lib\nit does not work with bcprov because it won't be considered as a valid cryptography provider (it won't be trusted by the JRE).\n\n\nAm I right?\nWhat can I do?\nPS: I googled a lot to find the JCA root cert (to put it into the JRE truststore), without success... Is there a way to grab that root CA?\n    ", "Answer": "\r\nAfter a lot of search and some post in BC mailing list.... I found the solution, so I drop it here for others who may face that issue:\n\nThe solution is basically to sign the BC library a second time with my own certificate.\nThe JAR needs the JCA signature in order to be trusted as a cryptography provider, so do not remove it.\nThe JAR also needs (in addition) a code signature in order to be able to be run in the JVM (trusted by the JRE).\n\nOne last thing, some incompatibility happened on the signature technology:\n\n\nBC lib is signed using SHA1 digest algorythm\njarsigner (on my computer) is doing the signature with SHA256 digest algorythm by default, which leads to a verification failure.\nSo I had to ask jarsigner to do it the SHA1 way. (for some reason both signatures have to be consistent from that point of view)\n\n\nHere is the magic parameter of jarsigner command to add and make it happen:\n  -digestalg SHA1\n\nSample command:\n\n```\njarsigner -keystore ./mykeystore.jks -storepass myPass -digestalg SHA1 bcprov-jdk15on-149.jar myAlias\n```\n\n\n... and you're done!\n\nThe following post gave me the tip: What prevents Java from verifying signed jars with multiple signature algorithms\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Encrypt in Javascript, decrypt in PHP, using public-key cryptography\r\n                \r\nI'd like to encrypt in JavaScript, decrypt in PHP, using public-key cryptography. I've been trying to find libraries that can accomplish this, but am having issues.\n\nI am currently looking at openpgpjs, but I need support in all browsers, and even the test page has errrors on the only listed as supported browser (Google Chrome).\n\nNotes about the final goal:\n\nThe TCP connection is already protected by SSL. The main purpose of this layer of protection is defending against intentional or unintentional webserver logging, crash dumps, etc.\n\nOn the PHP side, a temporary private key will be generated (it will expire after a short time). The caller (in Javascript) is responsible for asking for a new public key when it expires. The reason for private key expiration is to prevent logged encrypted data decryption, in case the server which stores the private key is later compromised.\n\nServers compromised scenario: someone gets his hands on backups for all machines except the database server (and cannot access the database due to firewalling, even if he finds out the user and password). Since the private key which encrypted the logged data no longer exists, there is nothing the attacker can do.\n    ", "Answer": "\r\nI've used something similar for my login page; it encrypts login credentials using the given public key information (N, e) which can be decrypted in PHP.\n\nIt uses the following files that are part of ```\nJSBN```\n:\n\n\n```\njsbn.js```\n - to work with big integers\n```\nrsa.js```\n - for RSA encryption only (uses jsbn.js)\n```\nrng.js```\n - basic entropy collector\n```\nprng4.js```\n - ARC4 RNG backend\n\n\nTo encrypt data:\n\n```\n$pk = '-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----';\n$kh = openssl_pkey_get_private($pk);\n$details = openssl_pkey_get_details($kh);\n\nfunction to_hex($data)\n{\n    return strtoupper(bin2hex($data));\n}\n\n?>\n<script>\nvar rsa = new RSAKey();\nrsa.setPublic('<?php echo to_hex($details['rsa']['n']) ?>', '<?php echo to_hex($details['rsa']['e']) ?>');\n\n// encrypt using RSA\nvar data = rsa.encrypt('hello world');\n</script>\n```\n\n\nThis is how you would decode the sent data:\n\n```\n$kh = openssl_pkey_get_private($pk);\n$details = openssl_pkey_get_details($kh);\n// convert data from hexadecimal notation\n$data = pack('H*', $data);\nif (openssl_private_decrypt($data, $r, $kh)) {\n   echo $r;\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How do I identify the cryptography used in this Java framework? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                This question is unlikely to help any future visitors; it is only relevant to a small geographic area, a specific moment in time,  or an extraordinarily narrow situation that is not generally applicable to the worldwide audience of the internet. For help making  this question more broadly applicable, visit the help center.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 11 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nAs described in How do i retrieve data from a JVM renderized into a web page using C# code?, I am trying to write a C# Bot to simulate queries in this website.\n\nThe problem now, is with the \"Cryptography\" used on the return of the webrequest for the information.\n\nThe source code for their cryptography can be found here: http://pastebin.com/fdJZvXDG\n\nThe problem is that, since the code has no comments, is there any way I can:\n\n\nFigure out whats the ```\nai```\n parameter used for constructing the class\nFind the Key they are using for encrypt/decrypt the information returned on the request?\n\n\nAny help is appreciated here, I've read that this ```\nDES```\n is a sort of Encryption pattern in Java, but I've never seen it before. Is this class implementing this pattern of only the name of the class and the pattern are the same?\n    ", "Answer": "\r\nIt is an implementation of the DES cipher. Java has a class built in which allows you to encrypt and decrypt data with DES. This website shows how to use the class.\n\nIt's not a pattern, it's an open and standardized cipher.\n\nYou mentioned you want to figure out the key they are using and based on the information you have given, it simply isn't possible.\n\nThe ```\nai```\n parameter looks like it's used in the key expansion and to specify the initial key (a string) for the cipher. It seems to be a poorly implemented version and is likely incorrect; I wouldn't expect the Java classes to be able to handle this variation of the cipher.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does the smart card readers do any cryptography function?\r\n                \r\nAs far as we know, smart cards use a Mutual-Authentication method to clarify security between the card and the reader. \n\nI want to know, where the cryptography operations done?(except in the card) In the reader or in the computer?\n\nI mean, whether the reader do any cryptography operation? or it is only a translator for USB / COM protocol to the protocol that card use to transfer data?\n\nIn the other word, can I retrieve the [encrypted] data that transfer between the card and the reader, using a sniffer on my computer USB port that my reader conneted to? (Indeed I need to delete some bytes from head and tail of what I see in sniffing. but am I need to do any cryptography function also?)\n\nNote that I need the same data that transfer between card and card reader. and I don't want to have decrypted data.\n    ", "Answer": "\r\nThat depends. For memory based cards and such a lot of things can be done within the readers. If the card is however accessed through PCSC / ISO 7816-4 compatible APDU's then all the crypto is normally performed by the application (this is likely to be true for your situation).\n\nIf you want to catch that stuff without messing with the USB itself, I would propose to connect your application to a virtual smart card reader and then forward the APDU's again to a real reader. You can have a hint on how to do this here.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "cryptography.fernet.InvalidToken problem with cryptography\r\n                \r\nGetting this error when trying to run this:\n```\n  File \"Test Files.py\", line 502, in decryptdefault\ndecrypted = fernet.decrypt(d)\n  File \"/usr/lib/python3/dist-packages/cryptography/fernet.py\", line 74, in decrypt\ntimestamp, data = Fernet._get_unverified_token_data(token)\n  File \"/usr/lib/python3/dist-packages/cryptography/fernet.py\", line 92, in _get_unverified_token_data\n    raise InvalidToken\n\ncryptography.fernet.InvalidToken\n```\n\nFYI dk variable is defined with key (default key)\n```\ndk = 'niwaXsYbDiAxmLiqRiFbDa_8gHio15sNQ6ZO-sQ0nR4='\n# Decrypts the file with default key\ndef decryptdefault(inclufile):\n    Key = dk\n\n    fernet = Fernet(Key)\n    readfile = open(inclufile, 'rb')\n    d = readfile.read()\n    readfile.close()\n\n    # Decrypts and puts it into the text\n    if readfile != \"\":\n        decrypted = fernet.decrypt(d)\n        decrypted = str(decrypted).replace('b\\'', '', 1)\n        decrypted = decrypted[:-3]\n        return str(decrypted)\n```\n\nEdit: I added the key for those who asked\n    ", "Answer": "\r\nI have found out, through trial and error with the same project later down the line, that you need to turn your key into something like this ```\nkey = b'niwaXsYbDiAxmLiqRiFbDa_8gHio15sNQ6ZO-sQ0nR4='```\n\nThe main difference being the key is encoded in a utf-8 format and is now readable by Fernet and doesn't return that error. Here is a function that uses Tkinter, Fernet, and os to actually decrypt my file.\n```\n# Propriatary method of encrypting files\ndef decrypt(self, file):\n    with open(file, 'rb') as readfile:\n        contents = readfile.read()\n\n    self.title(os.path.basename(file) + ' - SecureNote')\n    # self.textbox is a variable inside of the class I am using for my window\n    self.textbox.delete(1.0, tk.END)\n\n    if contents != \"\":\n        # getword retur\n        Key = bytes(getword('Key:', 1), encoding=\"utf-8\")\n        fernet = Fernet(Key)\n\n        decrypted = fernet.decrypt(contents).decode('utf-8')\n        self.textbox.insert(1.0, str(decrypted))\n\n        del Key\n        del fernet\n    else:\n        pass\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "TypeError in cryptography module when loading a key in a multithreaded environment\r\n                \r\nI'm getting the following exception:\n\n```\n  File \".../hazmat/primitives/serialization.py\", line 20, in load_pem_private_key\n    return backend.load_pem_private_key(data, password)\n  File \".../hazmat/backends/multibackend.py\", line 276, in load_pem_private_key\n    return b.load_pem_private_key(data, password)\n  File \".../hazmat/backends/openssl/backend.py\", line 691, in load_pem_private_key\n    password,\n  File \".../hazmat/backends/openssl/backend.py\", line 831, in _load_key\n    self._ffi.NULL\nTypeError: initializer for ctype 'int(*)(char *, int, int, void *)' must be a pointer to same type, not cdata 'int(*)(char *, int, int, void *)'\n```\n\n\nThe exception isn't deterministic, but it is guaranteed to happen after a short while. I'm running from a wsgi module within apache (mod_apache). I'm running cryptography 0.8.2\n\nThe code that I'm running is:\n\n```\nimport cryptography.hazmat.backends\nimport cryptography.hazmat.primitives.serialization\n\nwith open(my_pem_file, 'rb') as f:\n    pem = f.read()\n\npkey = cryptography.hazmat.primitives.serialization.load_pem_private_key(\n    pem, password=None,\n    backend=cryptography.hazmat.backends.default_backend())\n```\n\n\nFrom logs on the calling module, I'm learning that it when it happens it is always the first time I'm calling ```\nload_pem_private_key```\n from a new thread.\n\nA \"real\" solution is obviously preferred, but I'm also looking for quick workaround such as limiting number of threads to 1 (maybe with multiple process).\n\nEDIT:\nThis may be a known issue. I opened a report in github: https://github.com/pyca/cryptography/issues/1868\nSo right now I'm mainly looking for workarounds.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does an app which encrypts messages with a cipher include cryptography? iOS App Store\r\n                \r\nI have created an app which uses a cipher, it has no backend and simply turns your message into an encrypted message on the screen to be copied to the clipboard. Whilst submitting for approval I have a question to answer which goes like this:\n\nIs your app designed to use cryptography or does it contain or incorporate cryptography? (Select Yes even if your app is only utilizing the encryption available in iOS or macOS.)?\n\nDoes this question apply to my app, or more to higher levels of cryptography through communications and such?\n    ", "Answer": "\r\nMy interpretation of what its asking is-It applies to your app if you did include a (3rd party) cryptography library you didnt write, and \"Is your app designed to use cryptography\" I interpret as cryptography you implemented (without using a library or code you wrote). So I would say yes to the question asked. Only you know of course if you're using a library or not. My interpreatation is the question asks just seems to want to know are you using any cryptograhy in your app-and if you are are you using a 3rd party library or something else. Also a cipher can be considered as a type of cryptosystem e.g. a Vigenère cipher. A cipher changes the original message to an encrypted version (obviously there is another part of the cipher algorithm to decrypt thre message.) So I would say your app includes cryptography as it encrypts the message (as you mention).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA Cryptography and saving to database (c#)\r\n                \r\nI don't have deep information about cryptography ,but as I gathered some information,as an asymmetric solution I want to use RSA and here is the code which I found,I want to store an encrypted password into database and decrypt it whenever I want to get the user information,I mean these two actions don't happen respectively and whenever I like I can select from database and decrypt the previously save data.I know that there is something wrong with the generated keys,but because of low knowledge on this subject I cannot handle it.\nI get the following Exception on decryption.\n\nThe parameter is incorrect.\n   at System.Security.Cryptography.CryptographicException.ThrowCryptographicException(Int32 hr)\n   at System.Security.Cryptography.RSACryptoServiceProvider.DecryptKey(SafeKeyHandle pKeyContext, Byte[] pbEncryptedKey, Int32 cbEncryptedKey, Boolean fOAEP, ObjectHandleOnStack ohRetDecryptedKey)\n   at System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[] rgb, Boolean fOAEP)\n\nEncryption Class:\n\n```\npublic static class AsymmetricEncryption\n{\n    private static bool _optimalAsymmetricEncryptionPadding = false;\n\n    public static void GenerateKeys(int keySize, out string publicKey, out string publicAndPrivateKey)\n    {\n        using (var provider = new RSACryptoServiceProvider(keySize))\n        {\n            publicKey = provider.ToXmlString(false);\n            publicAndPrivateKey = provider.ToXmlString(true);\n        }\n    }\n\n    public static string EncryptText(string text, int keySize, string publicKeyXml)\n    {\n        var encrypted = Encrypt(Encoding.UTF8.GetBytes(text), keySize, publicKeyXml);\n        return Convert.ToBase64String(encrypted);\n    }\n\n    public static byte[] Encrypt(byte[] data, int keySize, string publicKeyXml)\n    {\n        if (data == null || data.Length == 0) throw new ArgumentException(\"Data are empty\", \"data\");\n        int maxLength = GetMaxDataLength(keySize);\n        if (data.Length > maxLength) throw new ArgumentException(String.Format(\"Maximum data length is {0}\", maxLength), \"data\");\n        if (!IsKeySizeValid(keySize)) throw new ArgumentException(\"Key size is not valid\", \"keySize\");\n        if (String.IsNullOrEmpty(publicKeyXml)) throw new ArgumentException(\"Key is null or empty\", \"publicKeyXml\");\n\n        using (var provider = new RSACryptoServiceProvider(keySize))\n        {\n            provider.FromXmlString(publicKeyXml);\n            return provider.Encrypt(data, _optimalAsymmetricEncryptionPadding);\n        }\n    }\n\n    public static string DecryptText(string text, int keySize, string publicAndPrivateKeyXml)\n    {\n        var decrypted = Decrypt(Convert.FromBase64String(text), keySize, publicAndPrivateKeyXml);\n        return Encoding.UTF8.GetString(decrypted);\n    }\n\n    public static byte[] Decrypt(byte[] data, int keySize, string publicAndPrivateKeyXml)\n    {\n        if (data == null || data.Length == 0) throw new ArgumentException(\"Data are empty\", \"data\");\n        if (!IsKeySizeValid(keySize)) throw new ArgumentException(\"Key size is not valid\", \"keySize\");\n        if (String.IsNullOrEmpty(publicAndPrivateKeyXml)) throw new ArgumentException(\"Key is null or empty\", \"publicAndPrivateKeyXml\");\n\n        using (var provider = new RSACryptoServiceProvider(keySize))\n        {\n            provider.FromXmlString(publicAndPrivateKeyXml);\n            return provider.Decrypt(data, _optimalAsymmetricEncryptionPadding);\n        }\n    }\n\n    public static int GetMaxDataLength(int keySize)\n    {\n        if (_optimalAsymmetricEncryptionPadding)\n        {\n            return ((keySize - 384) / 8) + 7;\n        }\n        return ((keySize - 384) / 8) + 37;\n    }\n\n    public static bool IsKeySizeValid(int keySize)\n    {\n        return keySize >= 384 &&\n                keySize <= 16384 &&\n                keySize % 8 == 0;\n    }\n}\n```\n\n\n\n\nEncrypt usage:\n\n```\nconst int keySize = 1024;\nstring publicAndPrivateKey;\nstring publicKey;\n\nAsymmetricEncryption.GenerateKeys(keySize, out publicKey, out publicAndPrivateKey);\n\nstring text = \"text for encryption\";\nstring encrypted = AsymmetricEncryption.EncryptText(text, keySize, publicKey);\n```\n\n\n\n\nDecrypt usage:\n\n```\nconst int keySize = 1024;\nstring publicAndPrivateKey;\nstring publicKey;\n\nAsymmetricEncryption.GenerateKeys(keySize, out publicKey, out publicAndPrivateKey);\n\nstring text = \"text for encryption\";\nstring encrypted = AsymmetricEncryption.DecryptText(text, keySize, publicKey);\n```\n\n\nI read the encrypted text from a table.And I like to decrypt it.\nPlease help me solve this issue.\nThanks in advance\n\nSnippet link\n    ", "Answer": "\r\nLet me stop you right here, before you actually figure out the exception.\n\nIT IS A HORRIBLE IDEA TO STORE PASSWORDS REVERSIBLY, regardless what encryption you use. There are memory scrubbers and a million other problems with that scheme.\n\nPasswords are to be HASHED, NOT ENCRYPTED. The difference is that hashes are hard to reverse if implemented properly. Use BCrypt or SHA2 or SHA3 or some other good hashing algorithms, use proper salt.\n\nHere's an example, but consult someone knowledgeable before using in production, I may have bugs, the methods are coded for simplicity and may be too simple:\n\n```\npublic string GetHash(string secret, string salt = null)\n{\n  var hasher = SHA256Managed.Create();\n  salt = salt ?? Guid.NewGuid().ToString(\"N\"); // 128 bit salt \n  var hashResult = hasher.ComputeHash(Encoding.UTF8.GetBytes(salt+\"|\"+what));\n  return \"SHA256|\" + salt + \"|\" + Convert.ToBase64String(hashResult);\n}\n```\n\n\nNow you can store the string you get from this function in your DB and the next time a password comes in (over HTTPS, I hope) you can check it by getting the salt from the string stored in DB:\n\n```\npublic bool CheckSecretHash(string secret, string hashFromDB){\n  var hashParts = hashFromDB.Split('|'); // string[3]\n  var rehash = GetHash(secret, hashParts[1]);\n  return hashFromDB == rehash;\n}\n```\n\n\nBonus points: challenge-response. ALWAYS USE HTTPS.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Not able to install cryptography package in python\r\n                \r\nI tried to search a lot before asking it here, but unfortunately couldn't find anything helping.\n\nI want to install cryptography package in python3.4.3 64bit version running on (windows 64bit} machine.\n\nI am getting the following error:\n\n{\n\n```\ngenerating cffi module 'build\\\\temp.win-amd64-3.4\\\\Release\\\\_constant_time.c'\n\ngenerating cffi module 'build\\\\temp.win-amd64-3.4\\\\Release\\\\_openssl.c'\n\nbuilding '_openssl' extension\n\nerror: Microsoft Visual C++ 10.0 is required (Unable to find vcvarsall.bat).\n```\n\n\n}\n\nI do have visual studio 2015 installed and I could find vcvarsall.bat manually,\nalso my environment variable are pointing to correct folder as suggested in other threads.\n```\nVS90COMNTOOLS=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools```\n\n\nThese are the sites i already went through looking for help but in vain.\n\n1) Changing the value for VS90COMNTOOLS,\n\n2) I tried with different versions of visual studio greater than 10 i.e 2010,2012,2013.\n\n3) Python PIP has issues with path for MS Visual Studio 2010 Express for 64-bit install on Windows 7\n\n4) Error: Microsoft Visual C++ 10.0 is required (Unable to find vcvarsall.bat)\n\n5)https://cryptography.io/en/latest/installation/\n    ", "Answer": "\r\nWe ship a statically linked wheel for Windows (our install instructions mention this) so all you need to do is be running the latest pip (as of June 2016 this is 8.1.2). To upgrade your pip you can do ```\npython -m pip install -U pip```\n (```\npip install -U pip```\n will raise an error due to the way Windows does active file locking).\n\nOnce that is installed ```\npip install cryptography```\n will grab the wheel and not require a compiler at all.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA Cryptography returns \"ILLEGAL_USE\" in Java Card applet\r\n                \r\nI wrote the following applet to do RSA cryptography operations in my NXP JCOP card:\n\n```\npackage testPack;\n\nimport javacard.framework.*;\nimport javacard.security.CryptoException;\nimport javacard.security.KeyBuilder;\nimport javacard.security.KeyPair;\nimport javacard.security.RSAPrivateKey;\nimport javacard.security.RSAPublicKey;\nimport javacardx.crypto.Cipher;\n\npublic class Test extends Applet {\n\n    RSAPrivateKey myRSAPriKey;\n    RSAPublicKey myRSAPubKey;\n    Cipher myCipher;\n    KeyPair myKeyPair;\n    byte[] input;\n    byte[] result;\n\n    private static final byte INS_GEN_KEYPAIR = (byte) 0x10;\n    private static final byte INS_INIT_CIPHER_ENC = (byte) 0x20;\n    private static final byte INS_ENC = 0x21;\n    private static final byte INS_INIT_CIPHER_DEC = (byte) 0x30;\n    private static final byte INS_DEC = (byte) 0x31;\n\n    private static final byte P1_CHAIN_APDU = (byte) 0x00;\n    private static final byte P1_LAST_APDU = (byte) 0x01;\n\n    public static void install(byte[] bArray, short bOffset, byte bLength) {\n        new Test();\n    }\n\n    protected Test() {\n        myRSAPriKey = (RSAPrivateKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PRIVATE, KeyBuilder.LENGTH_RSA_2048, false);\n        myRSAPubKey = (RSAPublicKey) KeyBuilder.buildKey(KeyBuilder.TYPE_RSA_PUBLIC, KeyBuilder.LENGTH_RSA_2048, false);\n        myKeyPair = new KeyPair(myRSAPubKey, myRSAPriKey);\n        myCipher = Cipher.getInstance(Cipher.ALG_RSA_PKCS1, false);\n        input = JCSystem.makeTransientByteArray((short) 256, JCSystem.CLEAR_ON_RESET);\n        result = JCSystem.makeTransientByteArray((short) 256, JCSystem.CLEAR_ON_RESET);\n        register();\n    }\n\n    public void process(APDU apdu) {\n        if (selectingApplet()) {\n            return;\n        }\n\n        byte[] buff = apdu.getBuffer();\n        byte ins = buff[ISO7816.OFFSET_INS];\n        byte p1 = buff[ISO7816.OFFSET_P1];\n        short lc = (short) (buff[ISO7816.OFFSET_LC] & 0x00FF);\n        short dataOffset = ISO7816.OFFSET_CDATA;\n\n        switch (ins) {\n            case INS_GEN_KEYPAIR:\n                myKeyPair.genKeyPair();\n                break;\n\n            case INS_INIT_CIPHER_ENC:\n                myCipher.init(myRSAPubKey, Cipher.MODE_ENCRYPT);\n                break;\n            case INS_ENC:\n                apdu.setIncomingAndReceive();\n                if (p1 == P1_CHAIN_APDU) {\n                    Util.arrayCopyNonAtomic(buff, dataOffset, input, (short) 0x00, lc);\n                } else if (p1 == P1_LAST_APDU) {\n                    Util.arrayCopyNonAtomic(buff, dataOffset, input, (short) 128, lc);\n                    try {\n                        myCipher.doFinal(input, (short) 0x00, (short) 256, result, (short) 0x00);\n                    } catch (CryptoException e) {\n                        short reason = e.getReason();\n                        ISOException.throwIt((short) ((short) 0x6B00 | reason));\n                    }\n                    apdu.setOutgoing();\n                    apdu.setOutgoingLength((short) 256);\n                    apdu.sendBytesLong(result, (short) 0x00, (short) 256);\n                }\n                break;\n            case INS_INIT_CIPHER_DEC:\n                myCipher.init(myRSAPriKey, Cipher.MODE_DECRYPT);\n                break;\n            case INS_DEC:\n                apdu.setIncomingAndReceive();\n                if (p1 == P1_CHAIN_APDU) {\n                    Util.arrayCopyNonAtomic(buff, dataOffset, input, (short) 0x00, lc);\n                } else if (p1 == P1_LAST_APDU) {\n                    Util.arrayCopyNonAtomic(buff, dataOffset, input, (short) 128, lc);\n                    try {\n                        myCipher.doFinal(input, (short) 0x00, (short) 256, result, (short) 0x00);\n                    } catch (CryptoException e) {\n                        short reason = e.getReason();\n                        ISOException.throwIt((short) ((short) 0x6B00 | reason));\n                    }\n                    apdu.setOutgoing();\n                    apdu.setOutgoingLength((short) 256);\n                    apdu.sendBytesLong(result, (short) 0x00, (short) 256);\n                }\n                break;\n\n        }\n\n    }\n}\n```\n\n\nThe problem is that I receive ```\n0x0005```\n CryptoException reason code on ```\ndoFinal()```\n method:\n\n```\nSelect Applet begin...\nSelect Applet successful.\nSend: 00 10 00 00 00\nRecv: 90 00\n\nSend: 00 20 00 00 00\nRecv: 90 00\n\nSend: 00 21 00 00 80 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00\nRecv: 90 00\n\nSend: 00 21 01 00 80 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 00\nRecv: 6B 05\n```\n\n\nQuestions:\n\n\nAs you know, the reason code ```\n0x0005```\n indicates ILLEGAL_USE. But why?\nHow can I use ```\nupdate()```\n method on cipher object to remove the transient byte arrays from my applet?\n\n    ", "Answer": "\r\nAnswer 1: As stated in the ```\nCipher.ALG_RSA_PKCS1```\n documentation: \n\n\n  This algorithm is only suitable for messages of limited length. The\n  total number of input bytes processed during encryption may not be\n  more than k-11, where k is the RSA key's modulus size in bytes.\n\n\nThe message you are trying to encrypt does not follow this rule since you are encrypting 256 bytes of message. Since the modulus size is 256 bytes, the maximum message you can encrypt is 245 bytes (k-11). You have to consider the additional padding bytes that will be added to the message.\n\nAnswer 2: You can't remove both input and output buffers since you need one to store the partial result. \n\n\r\n\r\n```\ncase INS_INIT_CIPHER_ENC:\r\n                myCipher.init(myRSAPubKey, Cipher.MODE_ENCRYPT);\r\n                cipher_result_len = (short) 0x00;\r\n                break;\r\ncase INS_ENC:\r\n                apdu.setIncomingAndReceive();\r\n                if (p1 == P1_CHAIN_APDU) {\r\n                    cipher_result_len += myCipher.update(buff, dataOffset, lc, result, cipher_result_len); \r\n                } else if (p1 == P1_LAST_APDU) {\r\n                    \r\n                    try {\r\n                        cipher_result_len += myCipher.doFinal(buff, dataOffset, lc, result, cipher_result_len);\r\n                    } catch (CryptoException e) {\r\n                        short reason = e.getReason();\r\n                        ISOException.throwIt((short) ((short) 0x6B00 | reason));\r\n                    }\r\n                    apdu.setOutgoing();\r\n                    apdu.setOutgoingLength(cipher_result_len);\r\n                    apdu.sendBytesLong(result, (short) 0x00, cipher_result_len);\r\n                }\r\n                break;```\n\r\n\r\n\r\n\n\n```\ncipher_result_len```\n is a short data that must be stored in a transient buffer.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "encryption or Cryptography for store sensitive data\r\n                \r\nI have some searches to find out what is the best way to store sensitive data in the database?\nfor a project, I need to store cryptocurrency wallet's secret key in DB and do this job without consultation is too risky.\n\nI try sodium and maybe use multiple methods for encryption but I don't know what is the best and safest way\n\n```\n$secret = 'xxxxx';\n\n$key   = random_bytes(SODIUM_CRYPTO_SECRETBOX_KEYBYTES);\n$nonce = random_bytes(SODIUM_CRYPTO_SECRETBOX_NONCEBYTES);\n\n// Encrypt\n$ciphertext = sodium_crypto_secretbox($msg, $nonce, $key);\n// Decrypt\n$plaintext = sodium_crypto_secretbox_open($ciphertext, $nonce, $key);\n```\n\n\nif you have experience with cryptography and encryption data please guide me.\n\nadditional information\n\nI use PHP 7.3 and laravel for this project and I want to create a package for anyone of cryptocurrency wallet my this information is good for u can help me better\n    ", "Answer": "\r\nYou need to understand how encryptions work, actually, there are two types of cryptography\n\n\nSymmetric Cryptography\nAsymmetric Cryptography (Public Key)\n\n\nPlease check here: http://books.gigatux.nl/mirror/securitytools/ddu/ch09lev1sec1.html\n\nBase on your code, you are using Symmetric Cryptography which you used the shared key.\nSince you are using laravel, you can store Secret Key in ENV be sure to turn off debugging. Since you are using laravel, you can use the built-in encryption/decryption method found here: https://laravel.com/docs/5.7/encryption\n\nLaravel Built-in encryption uses OpenSSL to provide AES-256 and AES-128 encryption and All of Laravel's encrypted values are signed using a message authentication code (MAC) so that their underlying value can not be modified once encrypted.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA Cryptography and saving to database (c#)\r\n                \r\nI don't have deep information about cryptography ,but as I gathered some information,as an asymmetric solution I want to use RSA and here is the code which I found,I want to store an encrypted password into database and decrypt it whenever I want to get the user information,I mean these two actions don't happen respectively and whenever I like I can select from database and decrypt the previously save data.I know that there is something wrong with the generated keys,but because of low knowledge on this subject I cannot handle it.\nI get the following Exception on decryption.\n\nThe parameter is incorrect.\n   at System.Security.Cryptography.CryptographicException.ThrowCryptographicException(Int32 hr)\n   at System.Security.Cryptography.RSACryptoServiceProvider.DecryptKey(SafeKeyHandle pKeyContext, Byte[] pbEncryptedKey, Int32 cbEncryptedKey, Boolean fOAEP, ObjectHandleOnStack ohRetDecryptedKey)\n   at System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[] rgb, Boolean fOAEP)\n\nEncryption Class:\n\n```\npublic static class AsymmetricEncryption\n{\n    private static bool _optimalAsymmetricEncryptionPadding = false;\n\n    public static void GenerateKeys(int keySize, out string publicKey, out string publicAndPrivateKey)\n    {\n        using (var provider = new RSACryptoServiceProvider(keySize))\n        {\n            publicKey = provider.ToXmlString(false);\n            publicAndPrivateKey = provider.ToXmlString(true);\n        }\n    }\n\n    public static string EncryptText(string text, int keySize, string publicKeyXml)\n    {\n        var encrypted = Encrypt(Encoding.UTF8.GetBytes(text), keySize, publicKeyXml);\n        return Convert.ToBase64String(encrypted);\n    }\n\n    public static byte[] Encrypt(byte[] data, int keySize, string publicKeyXml)\n    {\n        if (data == null || data.Length == 0) throw new ArgumentException(\"Data are empty\", \"data\");\n        int maxLength = GetMaxDataLength(keySize);\n        if (data.Length > maxLength) throw new ArgumentException(String.Format(\"Maximum data length is {0}\", maxLength), \"data\");\n        if (!IsKeySizeValid(keySize)) throw new ArgumentException(\"Key size is not valid\", \"keySize\");\n        if (String.IsNullOrEmpty(publicKeyXml)) throw new ArgumentException(\"Key is null or empty\", \"publicKeyXml\");\n\n        using (var provider = new RSACryptoServiceProvider(keySize))\n        {\n            provider.FromXmlString(publicKeyXml);\n            return provider.Encrypt(data, _optimalAsymmetricEncryptionPadding);\n        }\n    }\n\n    public static string DecryptText(string text, int keySize, string publicAndPrivateKeyXml)\n    {\n        var decrypted = Decrypt(Convert.FromBase64String(text), keySize, publicAndPrivateKeyXml);\n        return Encoding.UTF8.GetString(decrypted);\n    }\n\n    public static byte[] Decrypt(byte[] data, int keySize, string publicAndPrivateKeyXml)\n    {\n        if (data == null || data.Length == 0) throw new ArgumentException(\"Data are empty\", \"data\");\n        if (!IsKeySizeValid(keySize)) throw new ArgumentException(\"Key size is not valid\", \"keySize\");\n        if (String.IsNullOrEmpty(publicAndPrivateKeyXml)) throw new ArgumentException(\"Key is null or empty\", \"publicAndPrivateKeyXml\");\n\n        using (var provider = new RSACryptoServiceProvider(keySize))\n        {\n            provider.FromXmlString(publicAndPrivateKeyXml);\n            return provider.Decrypt(data, _optimalAsymmetricEncryptionPadding);\n        }\n    }\n\n    public static int GetMaxDataLength(int keySize)\n    {\n        if (_optimalAsymmetricEncryptionPadding)\n        {\n            return ((keySize - 384) / 8) + 7;\n        }\n        return ((keySize - 384) / 8) + 37;\n    }\n\n    public static bool IsKeySizeValid(int keySize)\n    {\n        return keySize >= 384 &&\n                keySize <= 16384 &&\n                keySize % 8 == 0;\n    }\n}\n```\n\n\n\n\nEncrypt usage:\n\n```\nconst int keySize = 1024;\nstring publicAndPrivateKey;\nstring publicKey;\n\nAsymmetricEncryption.GenerateKeys(keySize, out publicKey, out publicAndPrivateKey);\n\nstring text = \"text for encryption\";\nstring encrypted = AsymmetricEncryption.EncryptText(text, keySize, publicKey);\n```\n\n\n\n\nDecrypt usage:\n\n```\nconst int keySize = 1024;\nstring publicAndPrivateKey;\nstring publicKey;\n\nAsymmetricEncryption.GenerateKeys(keySize, out publicKey, out publicAndPrivateKey);\n\nstring text = \"text for encryption\";\nstring encrypted = AsymmetricEncryption.DecryptText(text, keySize, publicKey);\n```\n\n\nI read the encrypted text from a table.And I like to decrypt it.\nPlease help me solve this issue.\nThanks in advance\n\nSnippet link\n    ", "Answer": "\r\nLet me stop you right here, before you actually figure out the exception.\n\nIT IS A HORRIBLE IDEA TO STORE PASSWORDS REVERSIBLY, regardless what encryption you use. There are memory scrubbers and a million other problems with that scheme.\n\nPasswords are to be HASHED, NOT ENCRYPTED. The difference is that hashes are hard to reverse if implemented properly. Use BCrypt or SHA2 or SHA3 or some other good hashing algorithms, use proper salt.\n\nHere's an example, but consult someone knowledgeable before using in production, I may have bugs, the methods are coded for simplicity and may be too simple:\n\n```\npublic string GetHash(string secret, string salt = null)\n{\n  var hasher = SHA256Managed.Create();\n  salt = salt ?? Guid.NewGuid().ToString(\"N\"); // 128 bit salt \n  var hashResult = hasher.ComputeHash(Encoding.UTF8.GetBytes(salt+\"|\"+what));\n  return \"SHA256|\" + salt + \"|\" + Convert.ToBase64String(hashResult);\n}\n```\n\n\nNow you can store the string you get from this function in your DB and the next time a password comes in (over HTTPS, I hope) you can check it by getting the salt from the string stored in DB:\n\n```\npublic bool CheckSecretHash(string secret, string hashFromDB){\n  var hashParts = hashFromDB.Split('|'); // string[3]\n  var rehash = GetHash(secret, hashParts[1]);\n  return hashFromDB == rehash;\n}\n```\n\n\nBonus points: challenge-response. ALWAYS USE HTTPS.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "SwiftyRSA && Python's cryptography for signature verification\r\n                \r\nI am trying to sign a piece of text using a private key using SwiftyRSA, which I do successfully. Then send the signature to the python server which holds the public key for verification. the But I keep receiving the ```\nInvalidSignature```\n exception.\nI have tried different hashing algorithms, bit sizes, but still the same ```\nInvalidSignature```\n exception. I am sure that the key and signature are related b/c they are generated at the same time!\nMy issue is not with the libraries themselves--which I think are functioning properly.  I think it has to do with a padding discrepancy between the two libraries. Cryptography is using PSS, while I cant find the padding/salt that SwiftyRSA uses.\nKey Verification Script\n```\n\n@app.route('/', methods=['POST'])\ndef verify():\n    record = json.loads(request.data)\n    signature = record['sig']\n    public_key = record['public_key']\n    hash_local_token = record['hash_local_token']\n    input_string = record['input_string']\n\n\n    verification_response = auth.verify_signature(signature=signature, pub_key=public_key, input_string=input_string)\n    print(verification_response)\n    return jsonify({\"Verification\": verification_response})\n\n\ndef verify_signature(signature, pub_key, input_string):\n    # Load the public key\n    # Url Safe Base64 Decoding\n\n    derdata = base64.b64decode(pub_key)\n    public_key = load_der_public_key(derdata, default_backend())\n    signature_decoded = base64.urlsafe_b64decode(signature)\n\n    # Perform the verification.\n    try:\n        public_key.verify(\n            signature_decoded,\n            str.encode(input_string),\n            padding.PSS(\n                mgf=padding.MGF1(hashes.SHA256()),\n                salt_length=padding.PSS.MAX_LENGTH,\n            ),\n            hashes.SHA256(),\n        )\n        return \"SUCCESS: Signature Verified!\"\n\n    except cryptography.exceptions.InvalidSignature as e:\n        return 'FAILED: Payload and/or signature files failed verification'\n```\n\nKey Generation Script\n```\n func moreTesting() {\n        \n        do {\n            let keyPair = try SwiftyRSA.generateRSAKeyPair(sizeInBits: 4096)\n            let privateKey = keyPair.privateKey\n            let publicKey = keyPair.publicKey\n        \n            \n            let inputString = \"test_string\"\n            let clear = try ClearMessage(string: inputString, using: .utf8)\n            let signature = try clear.signed(with: privateKey, digestType: .sha256)\n            let base64Signature = signature.base64String\n       \n            \n            let parameters: [String: String] = [\n                \"sig\": base64Signature,\n                \"input_string\": inputString,\n                \"public_key\": try publicKey.base64String()\n            ]\n            \n            AF.request(\"http://127.0.0.1:5000/\", method: .post, parameters: parameters, encoder: JSONParameterEncoder.default).responseJSON { response in\n                debugPrint(response)\n            }\n\n        }\n        \n        catch {\n            print(Error.self)\n        }\n        \n    }\n```\n\n    ", "Answer": "\r\nIt appears that SwiftyRSA's signing APIs use only PKCS1 and not PSS. See: https://github.com/TakeScoop/SwiftyRSA/blob/master/Source/Signature.swift#L20-L27\nSo to resolve this you'll want to switch your padding from PSS to PKCS1v15 on the Python side.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography packafe installation error on google cloud ML\r\n                \r\nenter image description here\n\nWhile running a job in google cloud ML, I have included few dependent packages in setup.py . While running the job, it gives the error that cryptography is not able to build_wheel. Cryptogrpahy could be a dependent package for one of the packages that i am trying to install. Please help !!!\n    ", "Answer": "\r\nYou can configure your setup.py script to run arbitrary commands as part of installing your code; see this SO Question. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to install python cryptography 38.0.4 without pip on Ubuntu\r\n                \r\nMy pip has corrupted after trying to install Apache Airflow. Every time I am trying to use it I am getting the following message\n```\nTraceback (most recent call last):\n  File \"/usr/bin/pip\", line 11, in <module>\n    load_entry_point('pip==20.0.2', 'console_scripts', 'pip')()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 490, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2854, in load_entry_point\n    return ep.load()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2445, in load\n    return self.resolve()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2451, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/usr/lib/python3/dist-packages/pip/_internal/cli/main.py\", line 10, in <module>\n    from pip._internal.cli.autocompletion import autocomplete\n  File \"/usr/lib/python3/dist-packages/pip/_internal/cli/autocompletion.py\", line 9, in <module>\n    from pip._internal.cli.main_parser import create_main_parser\n  File \"/usr/lib/python3/dist-packages/pip/_internal/cli/main_parser.py\", line 7, in <module>\n    from pip._internal.cli import cmdoptions\n  File \"/usr/lib/python3/dist-packages/pip/_internal/cli/cmdoptions.py\", line 24, in <module>\n    from pip._internal.exceptions import CommandError\n  File \"/usr/lib/python3/dist-packages/pip/_internal/exceptions.py\", line 10, in <module>\n    from pip._vendor.six import iteritems\n  File \"/usr/lib/python3/dist-packages/pip/_vendor/__init__.py\", line 65, in <module>\n    vendored(\"cachecontrol\")\n  File \"/usr/lib/python3/dist-packages/pip/_vendor/__init__.py\", line 36, in vendored\n    __import__(modulename, globals(), locals(), level=0)\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n  File \"<frozen zipimport>\", line 259, in load_module\n  File \"/usr/share/python-wheels/CacheControl-0.12.6-py2.py3-none-any.whl/cachecontrol/__init__.py\", line 9, in <module>\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n  File \"<frozen zipimport>\", line 259, in load_module\n  File \"/usr/share/python-wheels/CacheControl-0.12.6-py2.py3-none-any.whl/cachecontrol/wrapper.py\", line 1, in <module>\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n  File \"<frozen zipimport>\", line 259, in load_module\n  File \"/usr/share/python-wheels/CacheControl-0.12.6-py2.py3-none-any.whl/cachecontrol/adapter.py\", line 5, in <module>\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n  File \"<frozen zipimport>\", line 259, in load_module\n  File \"/usr/share/python-wheels/requests-2.22.0-py2.py3-none-any.whl/requests/__init__.py\", line 95, in <module>\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n  File \"<frozen zipimport>\", line 259, in load_module\n  File \"/usr/share/python-wheels/urllib3-1.25.8-py2.py3-none-any.whl/urllib3/contrib/pyopenssl.py\", line 46, in <module>\n  File \"/home/bill/.local/lib/python3.8/site-packages/OpenSSL/__init__.py\", line 8, in <module>\n    from OpenSSL import crypto, SSL\n  File \"/home/bill/.local/lib/python3.8/site-packages/OpenSSL/crypto.py\", line 3268, in <module>\n    _lib.OpenSSL_add_all_algorithms()\nAttributeError: module 'lib' has no attribute 'OpenSSL_add_all_algorithms'\n```\n\nBased on this answer, I need to downgrade cryptography. However I cannot do it using pip since I am getting the same error. I tried to download to my Ubuntu the ```\nwheel```\n file from here; specifically ```\ncryptography-38.0.4-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl```\n. However, when I extracted it, there was no ```\nsetup.py```\n file inside it. The only way I can imagine installing it without using pip is moving the extracted files to the place python libraries are stored. However I cannot find the place where the old cryptography library was installed.\nHow to install the specific version on my machine without using pip and considering there is no ```\nsetup.py```\n file?\n    ", "Answer": "\r\nI found out where old cryptography library was installed using:\n```\npython3 -c \"import cryptography; print(cryptography.__file__)\"\n```\n\nI deleted the folder and pasted the cryptography version 38.0.4 that I had downloaded from the link above.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does the NPM package crypto-js relate to cryptocurrency or cryptography?\r\n                \r\nI'm watching a football game @ https://watch.foxtel.com.au/ and I saw in the inspector the site loads the file:\nhttps://watch.foxtel.com.au/app/static/js/npm.crypto-js.7f96017841bd7fff1e02.chunk.js\nI think this relates to https://www.npmjs.com/package/crypto-js\nDoes that NPM package relate to cryptocurrency or cryptography?\nHelp appreciated.\n    ", "Answer": "\r\n```\ncrypto.js```\n is purely a cryptography library, without a focus on cryptocurrency specifically.\nLooking at the docs, indeed ```\ncrypto.js```\n does support ```\nECDSA```\n over ```\nsecp256k1```\n, and ```\nSHA256```\n, the primary cryptographic primitives used in most Bitcoin derived cryptocurrencies.\nI guess technically you could leverage its ```\nhashing```\n functions to mine, and its ```\nECDSA```\n signature functions to create BTC transactions, but it certainly wouldn't be a library I would use writing an attack like that, there are many other libraries much better suited.\nIf you used ```\ncrypto.js```\n for cryptocurrency related work, one would have to build out all of the cryptocurrency specific stuff from first principles, (e.g. conversion of elliptic curve points (after scalar multiplication) to valid public keys, and on to ```\nbase58```\n encoded Bitcoin addresses, etc).\nIt's much more likely it was used to leverage a cryptographic primitive for authentication or equivalent.\nUpdate:\nThis actually just looks like the crypto module from Node, thus definitely not cryptocurrency related.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "For a public key cryptography, from where this prime numbers are generated\r\n                \r\nFor a public key cryptography, from where this prime numbers are generated, is there any predefined list from where we pick numbers or what, in RSA, DSA, Diffie-Hellman key agreement etc.? I searched a lot on internet. Hope this will help me out in easy way.\n    ", "Answer": "\r\nThere is no predefined list. Candidates are generated randomly and tested for primeness.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Make a Android application use FIPS 140-2 valiated cryptography\r\n                \r\nI have client who wants our application to use FIPS 140-2 validated cryptography. The app uses Okhttp and does some HTTPS requests. AFAIK Android uses OpenSSL C library and uses java wrapper javax/net/ssl.\n\nQuestions:\n\n\nHow to make android Application FIPS 140 -2 Complaint?\nIs it not android at stack(OS) level should use FIPS Compliant OpenSSL, hence all app are default  FIPS 140 -2 Compliant?\nOr our app should use FIPS 140-2 validated cryptography and make java javax/net/ssl to use it? Feasible?\nIs there a  FIPS 140-2 JCE library which can be pluggable to OKhttp?\n\n\nThanks\n    ", "Answer": "\r\nModified OKHTTP and OKIO code to use the WolfSSL java wrappers and made it work.\n\nNow any https requests made will go to WolfSSL layer instead of stock android BoringSSL/OpenSSL.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is this Cryptography method secure for a Windows App?\r\n                \r\nI'm creating a library to do some REST API calls that is using OAuth2. I would like to cache the refresh token so the user doesn't have to re-authenticate at every log in, although I know almost nothing about cryptography. Microsoft Docs say that for small pieces of data like strings, asymmetric crypto is the way to go. Here is my class to store the encrypted token on a file somewhere on the computer (specified by the calling code). It works, I'm just not sure how secure it is.\n```\n\nstring _file;\nconst string _containerName = \"MyTokenCache\";\n\npublic EncryptedTokenCache(string fileLocation)\n{\n    _file = fileLocation;\n}\n\n\npublic void SaveToken(string token)\n{\n    var rsa = CreateRSAProvider(_containerName);\n    var encryptedData = rsa.Encrypt(Encoding.UTF8.GetBytes(token), RSAEncryptionPadding.Pkcs1);\n    WriteToFile(encryptedData);\n}\n\npublic string GetToken()\n{\n    var rsa = CreateRSAProvider(_containerName);\n    var encryptedData = ReadFromFile();\n    var decryptedData = rsa.Decrypt(encryptedData, RSAEncryptionPadding.Pkcs1);\n    return Encoding.UTF8.GetString(decryptedData);\n}\n\n\nprivate RSA CreateRSAProvider(string containerName)\n{\n    CspParameters parameters = new CspParameters\n    {\n        KeyContainerName = containerName\n    };\n    return new RSACryptoServiceProvider(parameters);\n}\n\nprivate void WriteToFile(byte[] data)\n{\n    using(var fs = new FileStream(_file, FileMode.OpenOrCreate, FileAccess.Write, FileShare.None))\n    {\n        fs.Write(data, 0, data.Length);\n    }\n}\n\nprivate byte[] ReadFromFile()\n{\n    byte[] data;\n    using (var fs = new FileStream(_file, FileMode.OpenOrCreate, FileAccess.Read, FileShare.None))\n    {\n        data = new byte[fs.Length];\n        fs.Read(data, 0, (int)fs.Length);\n    }\n    return data;\n}\n\n```\n\n    ", "Answer": "\r\nWell, it's just RSA / PKCS#1 v1.5 encryption. In principle you'd better use OAEP because it is:\n\nprovable secure and\nless vulnerable to padding oracle attacks.\n\nBut for storing tokens PKCS#1 v1.5 should be fine.\nFurthermore, you could use symmetric encryption using AES as well, as you currently create the key pair each time you create your class. That means that the private key is available at the same location as the public key, so the security that asymmetric crypto brings is not directly used. That said, I don't see any pressing need to use AES instead for this particular use case.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography with python\r\n                \r\nI am new in this field, Would you help me ? Each byte in my cipher text (encrypt3) is interpret as an integer between 0 to 255.For each byte Plaintext=Ciphertext -100 (mod 256). In the following code I have error:      newbyte=c.to_bytes(1,byteorder=sys.byteorder,signed=False)\nOverflowError: can't convert negative int to unsigned\nAny help would be appreciated.\n\n```\nimport sys\nf=open(\"encrypt3.dat\",\"rb\")\ns=f.read(100)\nd=bytearray(s)\nprint (len(d))\nstrnew=''\nnewbyte=b''\nfor c in d :\n    c=c-100 % 256\n    newbyte=c.to_bytes(1,byteorder=sys.byteorder,signed=True)\n    strnew=strnew + newbyte.decode('latin1')\n\nprint(strnew)\n```\n\n    ", "Answer": "\r\nThe modulus operator (```\n%```\n) is processed before the subtraction operator (```\n-```\n), so your statement ```\nc=c-100 % 256```\n is equivalent to to ```\nc=c-(100 % 256)```\n, or just ```\nc=c-100```\n (because ```\n100 % 256 == 100```\n). As a result, your code will crash whenever it encounters a character with an ASCII code less than 100 (='d').\n\nYou can fix this by changing ```\nc=c-100 % 256```\n to ```\nc=(c-100) % 256```\n.\n\nRead up on operator precedence in Python 3.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "IDE can't recognize cryptography module, how do i fix this?\r\n                \r\nI'm creating a password holder, as a beginner project. I keep running into this error, where everytimg i use the commant ```\nfrom cryptography.fernet import Fernet```\n Now this worked for the person in th video with no issues. I ensure you I have installed the cryptography module before trying this. Yet, I keep getting the no module found error. Would appreciate some help.\nI have tried simple things, such as copying the code from pypi/cryptography website. Yet nothing has happened.\nI have also tried installing it on the command line, as well as my IDE terminal, no difference there.\nI have checked if cryptography supports my python version (3.11.2) and it says on pypi that it does.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What are some widely used cryptography / hash libraries in C?\r\n                \r\nI've been working on cryptography implementations in C. \nI am required to use hash a message using any one of the popular hash functions like SHA,MD5, etc.\n\nIn Java, there is a security library which takes care of these things.\nBut how do I do the same in C?\n\nfor example:\nchar *str = \"this is a message\";\nchar *hash = SHA(str);\n\nSomething of this sort. It would be of great help if some one can point me to some library which has already implemented these functions which i can call for my program. \n\nThanks!\n    ", "Answer": "\r\nsphlib is an opensource library which provides optimized (but portable) implementations in C of many hash functions.\n\nOpenSSL is a more generic cryptographic library, which is widely deployed and provides implementations of hash functions, too (less hash functions than sphlib, but it also includes other cryptographic primitives).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "IDE can't recognize cryptography module, how do i fix this?\r\n                \r\nI'm creating a password holder, as a beginner project. I keep running into this error, where everytimg i use the commant ```\nfrom cryptography.fernet import Fernet```\n Now this worked for the person in th video with no issues. I ensure you I have installed the cryptography module before trying this. Yet, I keep getting the no module found error. Would appreciate some help.\nI have tried simple things, such as copying the code from pypi/cryptography website. Yet nothing has happened.\nI have also tried installing it on the command line, as well as my IDE terminal, no difference there.\nI have checked if cryptography supports my python version (3.11.2) and it says on pypi that it does.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What are some widely used cryptography / hash libraries in C?\r\n                \r\nI've been working on cryptography implementations in C. \nI am required to use hash a message using any one of the popular hash functions like SHA,MD5, etc.\n\nIn Java, there is a security library which takes care of these things.\nBut how do I do the same in C?\n\nfor example:\nchar *str = \"this is a message\";\nchar *hash = SHA(str);\n\nSomething of this sort. It would be of great help if some one can point me to some library which has already implemented these functions which i can call for my program. \n\nThanks!\n    ", "Answer": "\r\nsphlib is an opensource library which provides optimized (but portable) implementations in C of many hash functions.\n\nOpenSSL is a more generic cryptographic library, which is widely deployed and provides implementations of hash functions, too (less hash functions than sphlib, but it also includes other cryptographic primitives).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "SSL error!, your connection is encrypted with modern cryptography\r\n                \r\nHello i have an issue with my domain and ssl, when you enter to https://www.limitx.com.mx you can see a error with a ssl encryption, your connection is encrypted with modern cryptography, how i can solve this? i dont know how to fix this issue, i hope can help me. Bes regards guys!\n    ", "Answer": "\r\nYou have two resources on your home page that are served over HTTP (mixed content).\n\n\n  Mixed Content: The page at 'https://limitx.com.mx/' was loaded over\n  HTTPS, but requested an insecure stylesheet\n  'http://fonts.googleapis.com/css?family=Roboto:400,900,300,700'. This\n  request has been blocked; the content must be served over HTTPS.\n\n\nThis is coming from the main file that is generating the HTML:\n\n```\n<link href='fonts.googleapis.com/css?family=Roboto:500,300'; rel='stylesheet' type='text/css'>\n```\n\n\nYou'll need to change this to be\n\n```\n<link href='https://fonts.googleapis.com/css?family=Roboto:500,300'; rel='stylesheet' type='text/css'>\n```\n\n\n\n  Mixed Content: The page at 'https://limitx.com.mx/' was loaded over\n  HTTPS, but requested an insecure image\n  'http://limitx.panamerik.net/skin/frontend/ultimo/default/images/infortis/_shared/generic-nav/buscar.png'.\n  This content should also be served over HTTPS.\n\n\nThis is coming from https://limitx.com.mx/skin/frontend/ultimo/default/css/styles.css\n\n```\n.form-search .button {\n...\nbackground-image: url(http://limitx.panamerik.net/skin/frontend/ultimo/default/images/infortis/_shared/generic-nav/buscar.png);\n...\n}\n```\n\n\nYou cannot use an HTTPS version of this URL as the certificate for http://limitx.panamerik.net/skin/frontend/ultimo/default/images/infortis/_shared/generic-nav/buscar.png does not match the host.\n\nYou can copy this file (buscar.png) locally, perhaps under skin/frontend/ultimo/default/images/infortis/_shared/generic-nav/ and change the CSS to be \n\n```\n.form-search .button {\n...\nbackground-image: url(../images/infortis/_shared/generic-nav/buscar.png);\n...\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography in Java\r\n                \r\nI'm making an app that encrypts some files. I want to use gnu's cryptix library. It says it is no longer developed since 2005, but I guess it has everything I need... should I use something else?\n\nAnd I have a question about encrypting a single file. Right now I do it with a loop like this:\n\n```\nfor(int i=0; i+block_size < bdata.length; i += block_size)\n    cipher.encryptBlock(bdata, i, cdata, i);\n```\n\n\nSo my question is how to encrypt the last block that may not have the same size as the block_size. I was thinking maybe a should add some extra data to the last block, but than I don't know how to decrypt that...\n    ", "Answer": "\r\nI would strongly suggest using AES encryption and it too comes with the JAVA SDK. Have a look at: Using AES with Java Technology which will give you some great example. To read up more on AES see: Advanced Encryption Standard - Wikipedia.\n\nNever use your own encryption scheme or an older form of an encryption scheme. AES has been tried and tested by people with far greater knowledge in that field then us, so you know it will work. Where as with your own or an old encryption scheme we might miss a fatal loop hole that will leave our data open to attacks.\n\nSee this question here to see the difference in the encryption schemes: Comparison of DES, Triple DES, AES, blowfish encryption for data\n\nAddendum:\n\nAES in java will work flawlessly for 192 and 256bit keys but you will have to install the newer JCE Policy Files. See here and here. You should also place the files in your JDK or else it wont work when executed from your IDE.\n\nNote: Make sure you download the correct JCE policy files, depending on your Java version i.e 1.4, 1.5 1.6 or 7.\n\nHowever if you use 128bit keys no need to install the newer JCE files.\n\nHere is a template of some secure AES usage in java it use CBC/AES/PKCS5Padding and a random IV using ```\nRandomSecure```\n.\n\nNote you need both the key and IV for decrypting:\n\n```\nimport java.io.UnsupportedEncodingException;\nimport java.security.InvalidAlgorithmParameterException;\nimport java.security.InvalidKeyException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.SecureRandom;\nimport javax.crypto.*;\nimport javax.crypto.spec.IvParameterSpec;\nimport javax.crypto.spec.SecretKeySpec;\n\n/**\n * This program generates a AES key, retrieves its raw bytes, and then\n * reinstantiates a AES key from the key bytes. The reinstantiated key is used\n * to initialize a AES cipher for encryption and decryption.\n */\npublic class AES {\n\n    /**\n     * Encrypt a sample message using AES in CBC mode with a random IV genrated\n     * using SecyreRandom.\n     *\n     */\n    public static void main(String[] args) {\n        try {\n            String message = \"This string contains a secret message.\";\n            System.out.println(\"Plaintext: \" + message + \"\\n\");\n\n            // generate a key\n            KeyGenerator keygen = KeyGenerator.getInstance(\"AES\");\n            keygen.init(128);  // To use 256 bit keys, you need the \"unlimited strength\" encryption policy files from Sun.\n            byte[] key = keygen.generateKey().getEncoded();\n            SecretKeySpec skeySpec = new SecretKeySpec(key, \"AES\");\n\n            // build the initialization vector (randomly).\n            SecureRandom random = new SecureRandom();\n            byte iv[] = new byte[16];//generate random 16 byte IV AES is always 16bytes\n            random.nextBytes(iv);\n            IvParameterSpec ivspec = new IvParameterSpec(iv);\n\n            // initialize the cipher for encrypt mode\n            Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n            cipher.init(Cipher.ENCRYPT_MODE, skeySpec, ivspec);\n\n            System.out.println(\"Key: \" + new String(key, \"utf-8\") + \" This is important when decrypting\");\n            System.out.println(\"IV: \" + new String(iv, \"utf-8\") + \" This is important when decrypting\");\n            System.out.println();\n\n            // encrypt the message\n            byte[] encrypted = cipher.doFinal(message.getBytes());\n            System.out.println(\"Ciphertext: \" + asHex(encrypted) + \"\\n\");\n\n            // reinitialize the cipher for decryption\n            cipher.init(Cipher.DECRYPT_MODE, skeySpec, ivspec);\n\n            // decrypt the message\n            byte[] decrypted = cipher.doFinal(encrypted);\n            System.out.println(\"Plaintext: \" + new String(decrypted) + \"\\n\");\n        } catch (IllegalBlockSizeException | BadPaddingException | UnsupportedEncodingException | InvalidKeyException | InvalidAlgorithmParameterException | NoSuchPaddingException | NoSuchAlgorithmException ex) {\n            ex.printStackTrace();\n        }\n    }\n\n    /**\n     * Turns array of bytes into string\n     *\n     * @param buf   Array of bytes to convert to hex string\n     * @return  Generated hex string\n     */\n    public static String asHex(byte buf[]) {\n        StringBuilder strbuf = new StringBuilder(buf.length * 2);\n        int i;\n        for (i = 0; i < buf.length; i++) {\n            if (((int) buf[i] & 0xff) < 0x10) {\n                strbuf.append(\"0\");\n            }\n            strbuf.append(Long.toString((int) buf[i] & 0xff, 16));\n        }\n        return strbuf.toString();\n    }\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Math in Cryptography [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question needs details or clarity. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Add details and clarify the problem by editing this post.\r\n                \r\n                    \r\n                        Closed 3 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI haven't been able to find a solution to what may seem to be a simple problem.\nProblem: sha512(9-e) = sha512(___)\nSimply, is it possible to subtract the hash string of 'e' from the hash string of '9'? Not interested in the hash of \"9-e\" but an actual hash string resulting from the difference.\nAdditionally, is it possible to subtract letters from letters, and numbers from numbers?\nie: sha512(9-5) = sha512(4)\nie: sha512(c-a) = sha512(___)\nPlease correct me if I'm wrong. Am unable to find any documentation on the subject.\n-Thanks\nConcept: I want to achieve 99.99 in sha512. Having a encrypted hash key, I'm assuming the most used letter is e (Based on the English dictionary-ignoring other characters for now).\nWhat I'm tying to solve: sha512(___) + sha512(e) = sha512(99.99).\n    ", "Answer": "\r\nThe whole point of cryptographically secure hash functions is, that operations like the one you want to do are impossibly difficult to do. If what you want to do were possible, it would reduce the effective entropy of the hash and make finding a preimage collision attack much easier. It would be BAD if that were possible.\nThe thing closest to what you want to do, would fall into the realm of Homomorphic Encryption.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Best way to store password in database [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 11 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nI am working on a project that has to have authentication (username and password)\n\nIt also connects to a database, so I figured I would store the username and password there. However, it seems like not such a good idea to have passwords as just a text field in a table sitting on the database.\n\nI'm using C# and connecting to a 2008 express server. Can anyone suggest (with as many examples as possible) what the best way to store this type of data would be?\n\nP.S I am open to the idea that this info not be stored in the database if a good reason can be provided\n    ", "Answer": "\r\nYou are correct that storing the password in a plain-text field is a horrible idea. However, as far as location goes, for most of the cases you're going to encounter (and I honestly can't think of any counter-examples) storing the representation of a password in the database is the proper thing to do. By representation I mean that you want to hash the password using a salt (which should be different for every user) and a secure 1-way algorithm and store that, throwing away the original password. Then, when you want to verify a password, you hash the value (using the same hashing algorithm and salt) and compare it to the hashed value in the database.\n\nSo, while it is a good thing you are thinking about this and it is a good question, this is actually a duplicate of these questions (at least):\n\n\nHow to best store user information and user login and password\nBest practices for storing database passwords\nSalting Your Password: Best Practices?\nIs it ever ok to store password in plain text in a php variable or php constant?\n\n\nTo clarify a bit further on the salting bit, the danger with simply hashing a password and storing that is that if a trespasser gets a hold of your database, they can still use what are known as rainbow tables to be able to \"decrypt\" the password (at least those that show up in the rainbow table). To get around this, developers add a salt to passwords which, when properly done, makes rainbow attacks simply infeasible to do.  Do note that a common misconception is to simply add the same unique and long string to all passwords; while this is not horrible, it is best to add unique salts to every password. Read this for more.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What are different certificate types, formats in Cryptography\r\n                \r\nWe are adding server certificates verification in SSL handshake for one of our clients. Being very new to Cryptography and C world, thought I would first clear my concepts about these things and then start with implementation.\n\nSo, I googled a lot looking mostly for Certificates concepts, but couldn't clear up my concepts any better to my satisfaction. Actually it added more confusion. :)\n\nHere are some things which I don't understand almost at all:\n1. What is base64 format? Is it same as DER?\n2. PEM file always contains base64 content?\n3. What is the format used by Windows Certificate Store? Is it binary?\n\nCan someone please help me here.\nWould be very much thankful if these things get cleared for me.\n    ", "Answer": "\r\nThe structure of an X.509 certificate is defined using ASN.1. Here is an excerpt of the overall structure definition of an X.509 certificate:\n\n```\nCertificate  ::=  SEQUENCE  {\n    tbsCertificate       TBSCertificate,\n    signatureAlgorithm   AlgorithmIdentifier,\n    signatureValue       BIT STRING  }\n\nTBSCertificate  ::=  SEQUENCE  {\n    version         [0]  EXPLICIT Version DEFAULT v1,\n    serialNumber         CertificateSerialNumber,\n    signature            AlgorithmIdentifier,\n    issuer               Name,\n    validity             Validity,\n    subject              Name,\n    subjectPublicKeyInfo SubjectPublicKeyInfo,\n    issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n                         -- If present, version MUST be v2 or v3\n    subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n                         -- If present, version MUST be v2 or v3\n    extensions      [3]  EXPLICIT Extensions OPTIONAL\n                         -- If present, version MUST be v3\n    }\n```\n\n\nA ```\nCertificate```\n value (with the contained values filled in) is encoded using the DER format, which is a binary format.\nBase64 is a general way of encoding binary sequences into text, by reducing the set of bytes used to readable ASCII characters (so this representation is longer).\nA certificate in PEM format is the Base64-encoding of the DER-encoding of the certificate, with a line-return at the end of each 64-character chunk, placed between delimiters:\n```\n-----BEGIN CERTIFICATE-----\nMIIB2zCCAUSgAwIBAwIBADANBgkqhkiG9w0BAQQFADAYMRYwFAYDVQQDEw1OZXRn\n...\n-----END CERTIFICATE-----\n```\n\nYou could also have the private key in PEM format, in which case the delimiters would be ```\n-----BEGIN RSA PRIVATE KEY-----```\n (and matching ```\nEND```\n), for example.\nOn the wire, during a TLS connection, DER is used.\nIt doesn't really matter what the Windows Certificate store uses internally, it should be able to import/export DER or PEM/Base64 certificates.\n\nCertificate \"types\" is a wider topic than the DER/base64 format. Most certificates used for SSL/TLS are X.509 certificates. Then you get usage profiles. The most common one is the Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile, which essentially defines how Certification Authorities should issue certificates and how entities should verify remote certificates.\nYou might also be interested in these questions:\n\nWhat does it mean for a digital certificate to be “signed”?\nWhat is an SSL certificate intended to prove, and how does it do it?\n\nMore generally, getting a book on PKI should help.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Performing the math behind public key cryptography\r\n                \r\nI was pretty fascinated by this simple example of the idea behind public key cryptography, and sat down to write my own ```\nClient <- Server -> Client```\n example using Java. Just a simple back and forth that encodes messages using the resulting secret.\n\nThe problem I initially encountered was a technical one. In the demonstration, the author determines the result of the equation:\n\n```\n3 ^ (24 * 54) mod 17```\n\n\nWith a value:\n\n```\n= 1```\n\n\nBut my question is, how would one approach the calculation of such a large number in Java?\n\nOr is the example provided simply that: an example, and not the actual method of calculation?\n    ", "Answer": "\r\nThere must be a good mathematical reason for it (Daniel Fischer seems to have one). In any case, you can use a BigInteger:\n\n```\npublic static void main(String[] args) {\n    BigInteger bi = new BigInteger(\"3\")\n          .modPow(new BigInteger(String.valueOf(24 * 54)), new BigInteger(\"17\"));\n    System.out.println(bi);\n}\n```\n\n\nwhich outputs 1.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Key length limit with Java Cryptography Extension\r\n                \r\nI am aware that the keylenght in the Sun/Oracle JVM is limited for judical reasons. However as far as I understood the concept of the JCE (Java Cryptography Extension) is that a user can choose it's own security provider to compensate this limitation.\n\nFor this reason I am trying to operate the Bounce Castle as security provider in conjunction with the Orcale JDK 1.7.\n\nIn order to figure out the actual allowed keylegths I am using this code:\n\n```\nimport org.bouncycastle.jce.provider.BouncyCastleProvider;\n\nimport javax.crypto.Cipher;\nimport java.security.GeneralSecurityException;\nimport java.security.Provider;\nimport java.security.Security;\n\npublic class JCETest {\npublic static void main( String[] args ) throws GeneralSecurityException\n{\n\n    BouncyCastleProvider bouncyCastleProvider = new BouncyCastleProvider();\n    Security.addProvider(bouncyCastleProvider);\n\n    System.out.println( \"\\nSecurity-Provider:\" );\n    for( Provider prov : Security.getProviders() ) {\n        System.out.println( \"  \" + prov + \": \" + prov.getInfo() );\n    }\n    System.out.println( \"\\nMaxAllowedKeyLength (for '\" + Cipher.getInstance(\"AES\").getProvider() + \"' using current 'JCE Policy Files'):\\n\"\n            + \"  DES        = \" + Cipher.getMaxAllowedKeyLength( \"DES\"        ) + \"\\n\"\n            + \"  Triple DES = \" + Cipher.getMaxAllowedKeyLength( \"Triple DES\" ) + \"\\n\"\n            + \"  AES        = \" + Cipher.getMaxAllowedKeyLength( \"AES\"        ) + \"\\n\"\n            + \"  Blowfish   = \" + Cipher.getMaxAllowedKeyLength( \"Blowfish\"   ) + \"\\n\"\n            + \"  RSA        = \" + Cipher.getMaxAllowedKeyLength( \"RSA\"        ) + \"\\n\" );\n}\n}\n```\n\n\nThe output for the Orcale JDK 1.7 and it's build in providers is:\n\n```\nSecurity-Provider:\n  SUN version 1.7: SUN (DSA key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509 certificates; JKS keystore; PKIX CertPathValidator; PKIX CertPathBuilder; LDAP, Collection CertStores, JavaPolicy Policy; JavaLoginConfig Configuration)\n  SunRsaSign version 1.7: Sun RSA signature provider\n  SunEC version 1.7: Sun Elliptic Curve provider (EC, ECDSA, ECDH)\n  SunJSSE version 1.7: Sun JSSE provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)\n  SunJCE version 1.7: SunJCE Provider (implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE, Diffie-Hellman, HMAC)\n  SunJGSS version 1.7: Sun (Kerberos v5, SPNEGO)\n  SunSASL version 1.7: Sun SASL provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN, CRAM-MD5, NTLM; server mechanisms for: DIGEST-MD5, GSSAPI, CRAM-MD5, NTLM)\n  XMLDSig version 1.0: XMLDSig (DOM XMLSignatureFactory; DOM KeyInfoFactory)\n  SunPCSC version 1.7: Sun PC/SC provider\n  BC version 1.46: BouncyCastle Security Provider v1.46\n\nMaxAllowedKeyLength (for 'SunJCE version 1.7' using current 'JCE Policy Files'):\n  DES        = 64\n  Triple DES = 128\n  AES        = 128\n  Blowfish   = 128\n  RSA        = 2147483647\n```\n\n\nBut when I apply BC as provider by switching to\n\n```\nCipher.getInstance(\"AES\", bouncyCastleProvider).getProvider()```\n\n\nIt still shows me the limited key length (except for RSA) like this:\n\n```\nMaxAllowedKeyLength (for 'BC version 1.46' using current 'JCE Policy Files'):\n  DES        = 64\n  Triple DES = 128\n  AES        = 128\n  Blowfish   = 128\n  RSA        = 2147483647\n```\n\n\nBut when I change the JDK to openJDK, I get this output:\n\n```\nMaxAllowedKeyLength (for 'BC version 1.46' using current 'JCE Policy Files'):\n  DES        = 2147483647\n  Triple DES = 2147483647\n  AES        = 2147483647\n  Blowfish   = 2147483647\n  RSA        = 2147483647\n```\n\n\nThis astonishes me since I was under the impression that not the JDK but the security-provider limiting the key length. But my tests are showing that obviously the JDK is limiting the key length, no matter which provider I choose.\n\nMy question is: Did I got something wrong? Is there a way to unleash the keyleght with the Oracle JDK?  \n    ", "Answer": "\r\nThe key length limits are determined in the JCE, that is in the JRE, not in the provider. JCE checks the limits before it hands over to the provider.\n\nThe correct solution to this is to install the unlimited strength policy files. While this is probably the right solution for your development workstation, it quickly becomes a major hassle (if not a roadblock) to have non-technical users install the files on every computer. There is no way to distribute the files with your program; they must be installed in the JRE directory (which may even be read-only due to permissions).\n\nBouncy Castle does provide its own API though, which is separate from the JCE. This API does not enforce any key length limits. This is not an ideal solution either, as the API is totally different from the JCE and bound to BC, and BC is an extra 1MB library to distribute with your program.\n\nFinally, there is also a reflection workaround described here in more detail.\n\nOpenJDK does not have any key length limits, which is why they are all simply ```\nInteger.MAX_VALUE```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Cryptography lib not found by AWS lambda function while using DocuSign-esign\r\n                \r\nI'm trying to use DocuSign-esign python sdk on AWS but get the following error:\nErr: Algorithm 'RS256' could not be found. Do you have cryptography installed?\nEven though I have all the dependencies installed/uploaded onto a layer.\nSo far I've tried:\n\nUsing Pycryptodome instead of Cryptography\n\nUsing the Linux distribution of Cryptography\n\n\nThese were the two solutions I found online, and neither worked.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Very simple cryptography function in C\r\n                \r\nI'm trying to create a very simple cryptography function that takes a character array and returns another character array with its value increased by one.\n\nPrecise explanation:\nThe input is a line of text inserted by the user.\nI expect that the array ```\nline```\n for example \"abcdef\" becomes \"bcdefg\".\nWhat really happen is that I can't increase the value of each character, I don't know how to do it.\nI don't get any error from the compiler, just the result is wrong and I think that the problem is related to ```\nstrcat```\n, but I can't imagine how to solve it.\n\nSince I'm a C student, in the answer I would like something just to fix my program, if it is possible, not a whole new one.\n\n```\n#include <stdio.h>\n#include <string.h>\n\nchar line[20];\nchar duplicated[20];\nchar hashed[];\n\n/********************************************************\n * hashf -- Simple hash function that takes a character *\n *          array and returns that takes a character    *\n *          array and returns another character array   *\n *          with its value increased by one.            *\n *                                                      *\n * Parameters -- string duplicated from the text        *\n *               inserted by the user                   *\n *                                                      *\n * Returns -- the hashed array (supposed to...)         *\n ********************************************************/\nchar hashf(char duplicated[]) {\n    hashed[0] = '\\0';\n    for (int i = 0; duplicated[i] != '\\0' ; ++i) {\n        duplicated[i] += 1;\n        strcat(hashed, duplicated[i]);\n    }\n    return (hashed);\n}\n\nint main() {\n    printf(\"Put a text to hash: \");\n    fgets(line, sizeof(line), stdin);\n\n    strcpy(duplicated, line);        // strcpy(string1, string2) -- copy string 2 into string 1\n\n    /* This two line are used to remove the '\\n' character from the end of the array */\n    duplicated[strlen(duplicated)-1] = '\\0';  \n    line[strlen(line)-1] = '\\0';\n\n    printf(\"The text %s become %s\", line, hashf(duplicated));\n}\n```\n\n    ", "Answer": "\r\nMany mistakes.\n\nDon't ignore compiler warnings.\n\nFirst Warning \n\n\n  warning: array ‘hashed’ assumed to have one element\n   char hashed[];\n\n\nYou haven't allocated memory so its been assumed as ```\n1 byte```\n;\n\nChange it to ```\nchar hashed[40];```\n\n\n2nd Warning\n\n\n  warning: passing argument 2 of ‘strcat’ makes pointer from integer without a cast [-Wint-conversion]\n           strcat(hashed, duplicated[i]);\n                          ^~~~~~~~~~\n  Blockquote\n  \n  /usr/include/string.h:133:14: note: expected ‘const char * restrict’\n  but argument is of type ‘char’  extern char *strcat (char *__restrict\n  __dest, const char *__restrict __src)\n\n\nstrcat has prototype ```\nchar * strcat ( char * destination, const char * source );```\n \n\nNotice the second parameter ```\nconst char *```\n , which means you pass an address and it will concatenate string from that address till it finds ```\n\\0```\n but you are passing a ```\nchar```\n(will not work)\n\n3rd Warning\n\n\n  warning: format ‘%s’ expects argument of type ‘char *’, but argument 3 has type ‘int’ [-Wformat=]\n       printf(\"The text %s become %s\", line, hashf(duplicated));\n\n\nbeacuse you function return type is ```\nchar```\n  it should be ```\nchar *```\n\n\nSo to conclude Change your function as follows\n\n```\nchar* hashf(char duplicated[]) {\n    hashed[0] = '\\0';\n    for (int i = 0; duplicated[i] != '\\0' ; ++i) {\n        duplicated[i] += 1;\n        }\n       // strcat(hashed, duplicated); as others suggested no need for this\n    //}\n    return (duplicated);\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography. Write application to decrypt basic ciphers\r\n                \r\nEvening all,\n\nI have just began my final year at university and am studying cryptography. We have just been set the first assignment just 3 weeks in so I'm assuming it won't be a case of breaking the enigma code. \n\nAs part of the assignment there are 7 exercises with 2 further challenges consisting of various ciphers (Caesar, Vigenere, Transposition and general Substitution).\nI'd like to code some sort of application to be able to decrypt these ciphers. \n\nI don't want to cheat, im genuinely interested in the topic and feel by coding an application to decrypt the codes I'd get more out of the assignment, having to think logically about resolving each.\n\nI'd like to think i'm reasonably competent in Java, VB and or Javascript/HTML/CSS. So any of these platforms I'm happy to try with.\n\nIf anybody can advise any pointers I'd be grateful.\n\nMany thanks\nGary\n    ", "Answer": "\r\nI recommend Simon Singh's \"The Code Book\"; it features Caesar, Vigenere, transposition+substitution, all the way through Enigma, Lucifer (DES) and up to asymmetric and quantum crypto, along with the ways to break some of these ciphers. The Vigenere chapter explains the cryptanalysis in great detail.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Installing Python Cryptography error\r\n                \r\nWhen running the ```\npip install cryptography```\n I get the following result\n\n```\npip install cryptography\nDownloading/unpacking cryptography\nRunning setup.py egg_info for package cryptography\nTraceback (most recent call last):\n  File \"<string>\", line 16, in <module>\n  File \"/tmp/pip-build-root/cryptography/setup.py\", line 174, in <module>\n    \"test\": PyTest,\n  File \"/usr/lib64/python2.6/distutils/core.py\", line 152, in setup\n    dist.run_commands()\n  File \"/usr/lib64/python2.6/distutils/dist.py\", line 975, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib64/python2.6/distutils/dist.py\", line 995, in run_command\n    cmd_obj.run()\n  File \"<string>\", line 14, in replacement_run\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/egg_info.py\", line 254, in find_sources\n    mm.run()\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/egg_info.py\", line 308, in run\n    self.add_defaults()\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/egg_info.py\", line 332, in add_defaults\n    sdist.add_defaults(self)\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/sdist.py\", line 187, in add_defaults\n    build_py = self.get_finalized_command('build_py')\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 319, in get_finalized_command\n    cmd_obj.ensure_finalized()\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 117, in ensure_finalized\n    self.finalize_options()\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/build_py.py\", line 61, in finalize_options\n    _build_py.finalize_options(self)\n  File \"/usr/lib64/python2.6/distutils/command/build_py.py\", line 50, in finalize_options\n    ('force', 'force'))\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 305, in set_undefined_options\n    src_cmd_obj.ensure_finalized()\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 117, in ensure_finalized\n    self.finalize_options()\n  File \"/tmp/pip-build-root/cryptography/setup.py\", line 88, in finalize_options\n    self.distribution.ext_modules = get_ext_modules()\n  File \"/tmp/pip-build-root/cryptography/setup.py\", line 65, in get_ext_modules\n    from cryptography.hazmat.primitives import constant_time, padding\n  File \"cryptography/hazmat/primitives/constant_time.py\", line 49, in <module>\n    _ffi = cffi.FFI()\n  File \"/tmp/pip-build-root/cryptography/cffi-0.8.6-py2.6-linux-x86_64.egg/cffi/api.py\", line 56, in __init__\n    import _cffi_backend as backend\nImportError: /tmp/pip-build-root/cryptography/cffi-0.8.6-py2.6-linux-x86_64.egg/_cffi_backend.so: failed to map segment from shared object: Operation not permitted\nComplete output from command python setup.py egg_info:\nrunning egg_info\n\nwriting requirements to pip-egg-info/cryptography.egg-info/requires.txt\n\nwriting pip-egg-info/cryptography.egg-info/PKG-INFO\n\nwriting top-level names to pip-egg-info/cryptography.egg-info/top_level.txt\n\nwriting dependency_links to pip-egg-info/cryptography.egg-info/dependency_links.txt\n\nwarning: manifest_maker: standard file '-c' not found\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/tmp/pip-build-root/cryptography/setup.py\", line 174, in <module>\n\n    \"test\": PyTest,\n\n  File \"/usr/lib64/python2.6/distutils/core.py\", line 152, in setup\n\n    dist.run_commands()\n\n  File \"/usr/lib64/python2.6/distutils/dist.py\", line 975, in run_commands\n\n    self.run_command(cmd)\n\n  File \"/usr/lib64/python2.6/distutils/dist.py\", line 995, in run_command\n\n    cmd_obj.run()\n\n  File \"<string>\", line 14, in replacement_run\n\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/egg_info.py\", line 254, in find_sources\n\n    mm.run()\n\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/egg_info.py\", line 308, in run\n\n    self.add_defaults()\n\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/egg_info.py\", line 332, in add_defaults\n\n    sdist.add_defaults(self)\n\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/sdist.py\", line 187, in add_defaults\n\n    build_py = self.get_finalized_command('build_py')\n\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 319, in get_finalized_command\n\n    cmd_obj.ensure_finalized()\n\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 117, in ensure_finalized\n\n    self.finalize_options()\n\n  File \"/usr/lib/python2.6/site-packages/setuptools/command/build_py.py\", line 61, in finalize_options\n\n    _build_py.finalize_options(self)\n\n  File \"/usr/lib64/python2.6/distutils/command/build_py.py\", line 50, in finalize_options\n\n    ('force', 'force'))\n\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 305, in set_undefined_options\n\n    src_cmd_obj.ensure_finalized()\n\n  File \"/usr/lib64/python2.6/distutils/cmd.py\", line 117, in ensure_finalized\n\n    self.finalize_options()\n\n  File \"/tmp/pip-build-root/cryptography/setup.py\", line 88, in finalize_options\n\n    self.distribution.ext_modules = get_ext_modules()\n\n  File \"/tmp/pip-build-root/cryptography/setup.py\", line 65, in get_ext_modules\n\n    from cryptography.hazmat.primitives import constant_time, padding\n\n  File \"cryptography/hazmat/primitives/constant_time.py\", line 49, in <module>\n\n     _ffi = cffi.FFI()\n\n  File \"/tmp/pip-build-root/cryptography/cffi-0.8.6-py2.6-linux-x86_64.egg/cffi/api.py\", line 56, in  __init__\n\n    import _cffi_backend as backend\n\nImportError: /tmp/pip-build-root/cryptography/cffi-0.8.6-py2.6-linux-x86_64.egg/_cffi_backend.so: failed to map segment from shared object: Operation not permitted\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip-build-root/cryptography\nStoring complete log in /root/.pip/pip.log\n```\n\n\nI'm guessing theirs something wrong with some dependencies I'm missing?\n\nWhen I run the ```\nsudo yum install gcc libffi-devel python-devel openssl-devel```\n to install the dependencies that are required, I get the following result\n\n```\nsudo yum install gcc libffi-devel python-devel openssl-devel\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirror.econdc.com\n * epel: mirrors.coreix.net\n * extras: centos.hyve.com\n * updates: mirror.sov.uk.goscomb.net\nSetting up Install Process\nPackage gcc-4.4.7-4.el6.x86_64 already installed and latest version\nPackage libffi-devel-3.0.5-3.2.el6.x86_64 already installed and latest version\nPackage python-devel-2.6.6-52.el6.x86_64 already installed and latest version\nPackage openssl-devel-1.0.1e-16.el6_5.15.x86_64 already installed and latest version\nNothing to do\n```\n\n\nDoes anyone have any suggestions as to what I'm missing?\n    ", "Answer": "\r\nChroot and remounting ```\n/tmp```\n are unnecessary because you are using ```\npip```\n which provides this option (```\npip help install```\n):\n\n```\n-b, --build <dir>    Directory to unpack packages into and build in.\n```\n\n\nSimply set that to a directory that does NOT have ```\nnoexec```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Web cryptography implement HKDF for the output of ECDH\r\n                \r\nI want implement a elliptic curve diffie hellman using HKDF as key derivation function. I am using a python backend and (vanilla) javascript in frontend. I am using python cryptography library in backend and Web Crypto api in frontend as cryptographic library. I created ECDH key pair in both side and exchanged the pbulic keys. Now I am trying to create the AES shared key with the exchanged public key and private key along with HKDF algorithm. I am able to do it in the python backend (I followed this example for the python code):\n```\ndef encrypt(public_key, secret):\nglobal loaded_public_key\nloaded_public_key = public_key\nshared_key = server_private_key.exchange(ec.ECDH(), public_key)\nIV = bytes(\"ddfbccae-b4c4-11\", encoding=\"utf-8\")\nderived_key = HKDF(\n        algorithm=hashes.SHA256(),\n        length=32,\n        salt=None,\n        info=None,\n).derive(shared_key)\naes = Cipher(algorithms.AES(derived_key), modes.GCM(IV))\nencryptor = aes.encryptor()\npadder = padding.PKCS7(128).padder()\npadded_data = padder.update(secret.encode()) + padder.finalize()\nreturn encryptor.update(secret.encode()) + encryptor.finalize()\n```\n\nBut Iam not sure how to do it using web crypto api. Here is my attempt: (but doesn't work)\n```\nasync function deriveSecretKey(privateKey, publicKey) {\n  let sharedKey = await window.crypto.subtle.deriveKey(\n    {\n      name: \"ECDH\",\n      public: publicKey\n    },\n    privateKey,\n    {\n      name: \"AES-GCM\",\n      length: 256\n    },\n    false,\n    [\"encrypt\", \"decrypt\"]\n  );\n  return window.crypto.subtle.deriveKey(\n    {\n      name: \"HKDF\",\n      hash:  {name: \"SHA-256\"} ,\n      salt: new ArrayBuffer(0),\n      info: new ArrayBuffer(0)\n    },\n    sharedKey,\n    {\n      name: \"AES-GCM\",\n      length: 256\n    },\n    false,\n    [\"encrypt\", \"decrypt\"]\n  );\n}\n```\n\nHow can I create the shared AES key along with HKDF (same way as python) in the frontend using web crypto api?\n    ", "Answer": "\r\nThe referenced Python code uses P-384 (aka secp384r1) as elliptic curve. This is compatible with the WebCrypto API, which supports three curves P-256 (aka secp256r1), P-384 and P-521 (aka secp521r1), see ```\nEcKeyImportParams```\n.\nThe following WebCrypto code generates a shared secret using ECDH and derives an AES key from the shared secret using HKDF. In detail the following happens:\n\nTo allow comparison of the derived key with that of the referenced Python code, predefined EC keys are applied. The private key is imported as PKCS#8, the public key as X.509/SPKI. Note that due to a Firefox bug concerning the import of EC keys, the script below cannot be run in the Firefox browser.\nAfter the import the shared secret is created with ECDH using ```\nderiveBits()```\n (and not ```\nderiveKey()```\n).\nThe shared secret is imported with ```\nimportKey()```\n and then the AES key is derived using HKDF, again with ```\nderiveBits()```\n.\n\n\r\n\r\n```\n(async () => {\n    await deriveKey();\n})();\n\nasync function deriveKey() {\n\n    //\n    // Key import\n    //\n    var server_x509 =  `-----BEGIN PUBLIC KEY-----\n                        MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEd7fej9GYVI7Vt6x5B6XhruHvmE/rnzIj\n                        HmpxP8PKfnfWgrJbyG2cgQc3mf9uusqk1FKImA86rx2+avK8+7xIK9wxuF3x2KQq\n                        nxNp7bUBit3phyhp72Nt/QLXmZHcDKXL\n                        -----END PUBLIC KEY-----`;\n    var client_pkcs8 = `-----BEGIN PRIVATE KEY-----\n                        MIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDBjr4EGktNtx+3xErsC\n                        MzldruzzfAEEO8Oth1/3b8sNfrqRsAgMnB/oVy024I+15wOhZANiAASbTF7LLedW\n                        dik6nH8JX8WeU0R1ZRlqq0EAZ/t+UrFcSOaVJSOx5jMJ3nrqwuk2DnobDqFwXH6t\n                        ZMsZHh4NFZ+bCVeHJRqy4SCZvQFB/xcksF29p1v14XHYI/XKMGyLLx4=\n                        -----END PRIVATE KEY-----`;\n\n    var client_private_key = b64_to_ab(client_pkcs8.replace('-----BEGIN PRIVATE KEY-----', '').replace('-----END PRIVATE KEY-----', ''));\n    var server_public_key = b64_to_ab(server_x509.replace('-----BEGIN PUBLIC KEY-----', '').replace('-----END PUBLIC KEY-----', ''));\n    var privateKey = await window.crypto.subtle.importKey( \n        'pkcs8', \n        client_private_key,\n        { name: \"ECDH\", namedCurve: \"P-384\" },\n        true, \n        [\"deriveKey\", \"deriveBits\"] \n    );\n    var publicKey = await window.crypto.subtle.importKey(\n        \"spki\", \n        server_public_key,\n        { name: \"ECDH\", namedCurve: \"P-384\" },\n        true, \n        [] \n    );\n    \n    //\n    // Determine shared secret\n    //\n    var sharedSecret = await window.crypto.subtle.deriveBits(\n        { name: \"ECDH\", namedCurve: \"P-384\", public: publicKey },\n        privateKey, \n        384 \n    );\n    console.log(\"Shared secret:\\n\", ab_to_b64(sharedSecret).replace(/(.{48})/g,'$1\\n'));\n    \n    //\n    // Derive key from shared secret via HKDF\n    //\n    var sharedSecretKey = await window.crypto.subtle.importKey(\n        \"raw\", \n        sharedSecret, \n        { name: \"HKDF\" }, \n        false, \n        [\"deriveKey\", \"deriveBits\"]\n    );\n    var derived_key = await crypto.subtle.deriveBits(\n        { name: \"HKDF\", hash: \"SHA-256\", salt: new Uint8Array([]), info: new Uint8Array([]) }, \n        sharedSecretKey, \n        256\n    );\n    console.log(\"Derived key:\\n\", ab_to_b64(derived_key).replace(/(.{48})/g,'$1\\n'))\n}; \n\nfunction b64_to_ab(base64_string){\n    return Uint8Array.from(atob(base64_string), c => c.charCodeAt(0));\n}\n\nfunction ab_to_b64(arrayBuffer){\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(arrayBuffer)));\n}```\n\r\n\r\n\r\n\nwith the following output:\n```\nShared secret:\n xbU6oDHMTYj3O71liM5KEJof3/0P4HlHJ28k7qtdqU/36llCizIlOWXtj8v+IngF\nDerived key:\n Yh0FkhqrT9XDQqIiSrGv5YmBjCSj9jhR5fF6HusbN1Q=\n```\n\n\nTo compare the generated AES key with that of the referenced Python code, the following Python code is used, which is based on the referenced code but applies predefined keys that are the counterparts of the keys used in the WebCrypto code. Since the focus here is on key derivation, the AES part is not considered:\n```\nfrom cryptography.hazmat.primitives.asymmetric import ec\nfrom cryptography.hazmat.primitives.kdf.hkdf import HKDF\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.primitives import serialization\nimport base64\n\ndef deriveKey():\n\n  server_pkcs8 = b'''-----BEGIN PRIVATE KEY-----\nMIG2AgEAMBAGByqGSM49AgEGBSuBBAAiBIGeMIGbAgEBBDBReGpDVmoVTzxNbJx6\naL4L9z1EdB91eonAmAw7mKDocLfCJITXZPUAmM46c6AipTmhZANiAAR3t96P0ZhU\njtW3rHkHpeGu4e+YT+ufMiMeanE/w8p+d9aCslvIbZyBBzeZ/266yqTUUoiYDzqv\nHb5q8rz7vEgr3DG4XfHYpCqfE2nttQGK3emHKGnvY239AteZkdwMpcs=\n-----END PRIVATE KEY-----'''\n\n  client_x509 = b'''-----BEGIN PUBLIC KEY-----\nMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEm0xeyy3nVnYpOpx/CV/FnlNEdWUZaqtB\nAGf7flKxXEjmlSUjseYzCd566sLpNg56Gw6hcFx+rWTLGR4eDRWfmwlXhyUasuEg\nmb0BQf8XJLBdvadb9eFx2CP1yjBsiy8e\n-----END PUBLIC KEY-----'''\n\n  client_public_key = serialization.load_pem_public_key(client_x509)\n  server_private_key = serialization.load_pem_private_key(server_pkcs8, password=None)\n  shared_secret = server_private_key.exchange(ec.ECDH(), client_public_key)\n  print('Shared secret: ' + base64.b64encode(shared_secret).decode('utf8')) # Shared secret: xbU6oDHMTYj3O71liM5KEJof3/0P4HlHJ28k7qtdqU/36llCizIlOWXtj8v+IngF\n\n  derived_key = HKDF(\n    algorithm=hashes.SHA256(),\n    length=32,\n    salt=None,\n    info=None,\n  ).derive(shared_secret) \n  print('Derived key:   ' + base64.b64encode(derived_key).decode('utf8')) # Derived key:   Yh0FkhqrT9XDQqIiSrGv5YmBjCSj9jhR5fF6HusbN1Q=\n\nderiveKey()\n```\n\nwith the following output:\n```\nShared secret: xbU6oDHMTYj3O71liM5KEJof3/0P4HlHJ28k7qtdqU/36llCizIlOWXtj8v+IngF\nDerived key:   Yh0FkhqrT9XDQqIiSrGv5YmBjCSj9jhR5fF6HusbN1Q=\n```\n\nwhich corresponds to the values of the WebCrypto code.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error: /lib64/libc.so.6: version `GLIBC_2.28' not found (required by /var/task/cryptography/hazmat/bindings/_rust.abi3.so)\r\n                \r\nI need a 'for dummies' answer to this question that I know has been asked before.\nWe're using the Serverless framework for an AWS-hosted application. ```\nRuntime=python3.8```\n  Got a nice big yml file that includes 16 functions, 2 of which include layers for Cryptography and for PyNaCl, which we bring in from here - https://github.com/keithrozario/Klayers and have used successfully for quite a while.\nLast week, I needed to update a different function, which meant re-testing, which meant finding there's a newer version of the cryptography layer, so I updated it to have Cyptography v.39. Now I have a function that fails with the error, ```\n/lib64/libc.so.6: version `GLIBC_2.28' not found (required by /var/task/cryptography/hazmat/bindings/_rust.abi3.so)```\n This function hasn't been used since 07/2022, at which time it was just fine. Apparently it's also been that long since we redeployed from Serverless.\nAttempts to fix:\n\nI reverted to the previous Cryptography layer; no difference\nI found an SO answer with this link https://aws.amazon.com/premiumsupport/knowledge-center/lambda-python-package-compatible/, followed that guide to change my local install and also to make my own layer and attach it in the console; no difference\nAnother SO answer led me here - https://github.com/pyca/cryptography/issues/6390, which then goes to https://github.com/pyca/cryptography/issues/6391, which also didn't help\nToday, I found this link https://repost.aws/questions/QU85KE-2hPQ4KDQyByKV_WIw/creating-a-lambda-zip-package-that-runs-python-package-cryptography and the OP says they had to make all of their lambdas from x86_64 to arm64, even if those functions weren't using Cryptography.  That's seems insane, and besides.... how??\n\nThis question Lambda function failing with /lib64/libc.so.6: version `GLIBC_2.18' not found includes the advice to move from Cryptography v.39 all the way back to v.3.4.7 (from 03/2021), which seems like bad advice.  Surely the 14 updates between those 2 versions include some important changes.\nI'm at a loss. I feel like I'm just running in circles, and meanwhile can't make progress on the actual function I'm trying to update because this is such a block.\n    ", "Answer": "\r\nI'm using Serverless and https://www.npmjs.com/package/serverless-python-requirements to bundle a Python 3.9 function, and was hitting the same error. I added a couple of pip args to the serverless plugin to specify the target system, which got me past the issue:\n```\npipCmdExtraArgs: ['--platform manylinux2014_x86_64', '--only-binary=:all:']```\n\nHere is the full config I'm using for the plugin (from my serverless.ts):\n```\npythonRequirements: {\n      dockerizePip: false,\n      usePoetry: false,\n      layer: true,\n      useDownloadCache: false,\n      useStaticCache: false,\n      pipCmdExtraArgs: ['--platform manylinux2014_x86_64', '--only-binary=:all:'],\n      slim: true\n    }\n```\n\nwhich results in a pip install command that looks like this (just in case you are calling pip install manually in your pipeline):\n```\npython3.9 -m pip install --platform manylinux2014_x86_64 --only-binary=:all: -t /someOutputFolder -r requirements.txt```\n\nUpdate: Another option I've found is to use a docker container as the lambda container, and install the python dependencies in the dockerfile, as shown in these docs: https://docs.aws.amazon.com/lambda/latest/dg/images-create.html\nServerless makes it really easy to deploy the container image: https://www.serverless.com/blog/container-support-for-lambda\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is there already an XMSS/XMSS^MT Provider for Java JCA (Java Cryptography Architecture)?\r\n                \r\nI was wondering if there are already Providers in the Java Cryptography Architecture (JCA) for post-quantum signature schemes, especially XMSS^MT?\n    ", "Answer": "\r\nHere is an example taken almost verbatim from the Bouncycastle source code in ```\norg.bouncycastle.pqc.jcajce.provider.test.XMSSMTTest```\n. This code was run on Java 8.\n\n```\nimport org.bouncycastle.pqc.jcajce.interfaces.StateAwareSignature;\nimport org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider;\nimport org.bouncycastle.pqc.jcajce.spec.XMSSMTParameterSpec;\nimport org.bouncycastle.util.Strings;\n\nimport java.security.*;\n\npublic class Main {\n\n    private static void fail(boolean condition, String msg) {\n        if (condition) {\n            throw new RuntimeException(msg);\n        }\n    }\n\n    public static void main(String[] args) throws Exception {\n        Security.addProvider(new BouncyCastlePQCProvider());\n        byte[] msg = Strings.toByteArray(\"Cthulhu Fthagn --What a wonderful phrase!Cthulhu Fthagn --Say it and you're crazed!\");\n        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"XMSSMT\", \"BCPQC\");\n\n        kpg.initialize(new XMSSMTParameterSpec(20, 10, XMSSMTParameterSpec.SHA256), new SecureRandom());\n\n        KeyPair kp = kpg.generateKeyPair();\n\n        Signature sig = Signature.getInstance(\"SHA256withXMSSMT\", \"BCPQC\");\n\n        fail(!(sig instanceof StateAwareSignature), \"wrong signature instance\");\n\n        StateAwareSignature xmssSig = (StateAwareSignature) sig;\n\n        xmssSig.initSign(kp.getPrivate());\n\n        fail(!xmssSig.isSigningCapable(), \"signature object is not signing-capable\");\n\n        xmssSig.update(msg, 0, msg.length);\n\n        byte[] s = sig.sign();\n\n        PrivateKey nKey = xmssSig.getUpdatedPrivateKey();\n\n        fail(kp.getPrivate().equals(nKey), \"\");\n        fail(xmssSig.isSigningCapable(), \"signature object is signing-capable\");\n\n        xmssSig.update(msg, 0, msg.length);\n\n        try {\n            sig.sign();\n            fail(true, \"no exception after key extraction\");\n        } catch (SignatureException e) {\n            fail(!\"signing key no longer usable\".equals(e.getMessage()), \"wrong exception\");\n        }\n\n        try {\n            xmssSig.getUpdatedPrivateKey();\n            fail(true, \"no exception after key extraction\");\n        } catch (IllegalStateException e) {\n            fail(!\"signature object not in a signing state\".equals(e.getMessage()), \"wrong exception\");\n        }\n\n        xmssSig.initSign(nKey);\n\n        xmssSig.update(msg, 0, msg.length);\n\n        s = sig.sign();\n\n        xmssSig.initVerify(kp.getPublic());\n\n        xmssSig.update(msg, 0, msg.length);\n\n        fail(!xmssSig.verify(s), \"verification failure\");\n    }\n}\n```\n\n\nThere are other examples in that file as well. Source code is available here.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error: /lib64/libc.so.6: version `GLIBC_2.28' not found (required by /var/task/cryptography/hazmat/bindings/_rust.abi3.so)\r\n                \r\nI need a 'for dummies' answer to this question that I know has been asked before.\nWe're using the Serverless framework for an AWS-hosted application. ```\nRuntime=python3.8```\n  Got a nice big yml file that includes 16 functions, 2 of which include layers for Cryptography and for PyNaCl, which we bring in from here - https://github.com/keithrozario/Klayers and have used successfully for quite a while.\nLast week, I needed to update a different function, which meant re-testing, which meant finding there's a newer version of the cryptography layer, so I updated it to have Cyptography v.39. Now I have a function that fails with the error, ```\n/lib64/libc.so.6: version `GLIBC_2.28' not found (required by /var/task/cryptography/hazmat/bindings/_rust.abi3.so)```\n This function hasn't been used since 07/2022, at which time it was just fine. Apparently it's also been that long since we redeployed from Serverless.\nAttempts to fix:\n\nI reverted to the previous Cryptography layer; no difference\nI found an SO answer with this link https://aws.amazon.com/premiumsupport/knowledge-center/lambda-python-package-compatible/, followed that guide to change my local install and also to make my own layer and attach it in the console; no difference\nAnother SO answer led me here - https://github.com/pyca/cryptography/issues/6390, which then goes to https://github.com/pyca/cryptography/issues/6391, which also didn't help\nToday, I found this link https://repost.aws/questions/QU85KE-2hPQ4KDQyByKV_WIw/creating-a-lambda-zip-package-that-runs-python-package-cryptography and the OP says they had to make all of their lambdas from x86_64 to arm64, even if those functions weren't using Cryptography.  That's seems insane, and besides.... how??\n\nThis question Lambda function failing with /lib64/libc.so.6: version `GLIBC_2.18' not found includes the advice to move from Cryptography v.39 all the way back to v.3.4.7 (from 03/2021), which seems like bad advice.  Surely the 14 updates between those 2 versions include some important changes.\nI'm at a loss. I feel like I'm just running in circles, and meanwhile can't make progress on the actual function I'm trying to update because this is such a block.\n    ", "Answer": "\r\nI'm using Serverless and https://www.npmjs.com/package/serverless-python-requirements to bundle a Python 3.9 function, and was hitting the same error. I added a couple of pip args to the serverless plugin to specify the target system, which got me past the issue:\n```\npipCmdExtraArgs: ['--platform manylinux2014_x86_64', '--only-binary=:all:']```\n\nHere is the full config I'm using for the plugin (from my serverless.ts):\n```\npythonRequirements: {\n      dockerizePip: false,\n      usePoetry: false,\n      layer: true,\n      useDownloadCache: false,\n      useStaticCache: false,\n      pipCmdExtraArgs: ['--platform manylinux2014_x86_64', '--only-binary=:all:'],\n      slim: true\n    }\n```\n\nwhich results in a pip install command that looks like this (just in case you are calling pip install manually in your pipeline):\n```\npython3.9 -m pip install --platform manylinux2014_x86_64 --only-binary=:all: -t /someOutputFolder -r requirements.txt```\n\nUpdate: Another option I've found is to use a docker container as the lambda container, and install the python dependencies in the dockerfile, as shown in these docs: https://docs.aws.amazon.com/lambda/latest/dg/images-create.html\nServerless makes it really easy to deploy the container image: https://www.serverless.com/blog/container-support-for-lambda\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What does Visual Studio have to do with HKLM\\SOFTWARE\\Microsoft\\Cryptography?\r\n                \r\nVS 2010 becomes unresponsive randomly. A look into process monitor shows it waits in a loop on RegQueryValue operation on HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Defaults\\Provider Types\\Type 001\\Name key. Why does Visual Studio need to do this? Is there a way to get around this?\nHave tried resetting devenv and stopping Windows Cryptography Services.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "SSH vulnerability detected in file cryptography/hazmat/primitives/serialization/ssh.py\r\n                \r\nI have written a python application that uses cryptography as one its dependencies. This application is used by another team. Since they intend to run this application on their AWS server, They'll have to package the application along with the its dependencies into a single folder and upload that folder to Bitbucket. The AWS would access this from the Bitbucket. When they are uploading the package to Bitbucket, below is the error that they are seeing. Cryptography version 3.2.1 and 4.0.0 were installed on each different occasion, but still received this error\n```\n{pre-receive hook declined\nPush rejected due to security vulnerabilities detected by security hook.\n\n \n\n\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@                                                          @\n@      PUSH REJECTED DUE TO SECURITY VULNERABILITIES       @\n@                                                          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n\n \n\n\nSSH vulnerability detected in file cryptography/hazmat/primitives/serialization/ssh.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 52.\nEC vulnerability detected in file ecdsa/keys.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 791.\nEC vulnerability detected in file ecdsa/test_keys.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 114.\nEC vulnerability detected in file ecdsa/test_keys.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 163.\nEC vulnerability detected in file ecdsa/test_keys.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 259.\nEC vulnerability detected in file ecdsa/test_pyecdsa.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 217.\nEC vulnerability detected in file ecdsa/test_pyecdsa.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 230.\nEC vulnerability detected in file ecdsa/test_pyecdsa.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 244.\nRSA vulnerability detected in file rsa/key.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 582.\nRSA vulnerability detected in file rsa/pem.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 86.\nRSA vulnerability detected in file rsa/pem.py (9f88efdfc657723baf412b1e664fa7aa1153f863) on line 113.\n\n \n\nWARNING Security Validation Hook: large push detected, only scanned HEAD.\nWARNING Schedule a historical scan to scan full commit history.}\n```\n\nBelow are the dependencies in my application:\n```\nimport base64\nimport os\nimport json\nfrom datetime import datetime, timedelta\nfrom urllib.parse import urlparse,quote_plus\n\nimport jwt  # PyJWT\nimport urllib\nimport requests\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.x509 import load_pem_x509_certificate\nfrom jose import jwt as josejwt\nfrom jwt import ExpiredSignatureError\n```\n\nPlease let me know if additional information is needed. Would really appreciate some insight on this.\nP.S: The other team enabled \"protected code\" on their Bitbucket repository and must not uncheck it.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "InvalidTag error decrypting pushbullet notification with python-cryptography\r\n                \r\nI am trying to implement End-to-end encryption support for pushbullet ephemeral messages in python3.\n\nI'm using python-cryptography, but I get an ```\nInvalidTag```\n-Exception while decrypting. I have double checked the key, iv and tag, but I can't figure out where it goes wrong.\n\nThe key is derived like this:\n\n```\n    salt = user_ident.encode()\n    pw = password.encode()\n\n    kdf = PBKDF2HMAC(\n            algorithm=hashes.SHA256(), \n            length=32,\n            salt=salt,\n            iterations=30000,\n            backend=backend)\n\n    dkey = kdf.derive(pw)\n```\n\n\nIt is then stored in a keyring as Base64 encoded string, but I double checked if I get the right byte string when encrypting (also by doing it manually in the REPL).\n\nDecrypt:\n\n```\nciphertxt = a2b_base64(msg['ciphertext'])\nversion = ciphertxt[0:1]\ntag = ciphertxt[1:17]\niv = ciphertxt[17:29]\nenc_msg = ciphertxt[29:]\n\n# Construct an AES-GCM Cipher object\ndecryptor = Cipher(\n    algorithms.AES(self.dkey_),\n    modes.GCM(iv, tag),\n    backend=backend\n).decryptor()\n\ncleartxt = decryptor.update(enc_msg) + decryptor.finalize()\n```\n\n\nAll vars are byte strings, here the relevant docs of python-cryptography.\n\nTo clarify:\nI have tried my own methods to encrypt and successfully decrypt some text. But when I activate Pushbullet e2e encryption on my phone and my client and I receive a notification, I get the error above. \n\nThe encryption method assembles the encrypted message like this:\n\n```\nb'1' + encryptor.tag + iv + ciphertxt\n```\n\n\nAnd I can decipher it. Doesn't work with the tag from a received message.\n\nAny ideas? :/\n    ", "Answer": "\r\nI recently added some interactive javascript stuff on the docs page: https://docs.pushbullet.com/#example-encrypt-a-message\n\nI have found that the best way to debug an issue like this is to test each part in isolation and make sure you get the correct output for a given input.\n\nIn your case, I think you should create a key, IV and message that don't change, and make sure your library produces the same encrypted_message as the javascript code in that example does.  Here is how this might look:\n\n```\n// convert key from base64 to binary\nvar key = atob(\"1sW28zp7CWv5TtGjlQpDHHG4Cbr9v36fG5o4f74LsKg=\");\nvar initialization_vector = atob(\"O2QAL8AYQB+qbre8\"); // 96-bit\nvar message = \"meow!\";\n\nvar cipher = forge.cipher.createCipher('AES-GCM', key);\ncipher.start({\"iv\": initialization_vector});\ncipher.update(forge.util.createBuffer(forge.util.encodeUtf8(message)));\ncipher.finish();\n\nvar tag = cipher.mode.tag.getBytes();\nconsole.log(\"tag\", btoa(tag));\nvar encrypted_message = cipher.output.getBytes();\nconsole.log(\"encrypted_message\", btoa(encrypted_message));\n```\n\n\nThe output for that is:\n\n```\ntag OBA7UU/Rd9j0Zn+9korAyQ== \nencrypted_message 7YS1aTE= \n```\n\n\nOnce your python encryption matches this, you should make sure the decryption part works.\n\n```\nvar key = atob(\"1sW28zp7CWv5TtGjlQpDHHG4Cbr9v36fG5o4f74LsKg=\")\nvar tag = atob(\"OBA7UU/Rd9j0Zn+9korAyQ==\")\nvar initialization_vector = atob(\"O2QAL8AYQB+qbre8\"); // 96 bits\nvar encrypted_message = atob(\"7YS1aTE=\");\n\nvar decipher = forge.cipher.createDecipher('AES-GCM', key);\ndecipher.start({\n    'iv': initialization_vector,\n    'tag': tag\n});\ndecipher.update(forge.util.createBuffer(encrypted_message));\ndecipher.finish();\n\nvar message = decipher.output.toString('utf8');\nconsole.log(\"message:\", message);\n```\n\n\nWhich should print:\n\n```\nmessage: meow! \n```\n\n\nI don't have any experience with that particular python library, but if you use this debugging technique you should be able to narrow down where the problem lies.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is it possible to use django-cryptography with filter or get methods?\r\n                \r\nwe are trying to encrypt some fields in Django models, so that no one get data through database access (previously we used django.core.signing), but we need it in some queries where we need to query based on the value but we are getting this error\n\n*** django.core.exceptions.FieldError: Unsupported lookup'exact' for EncryptedCharField or join on the field not permitted.\n\nusing Django 2.1 and \ndjango-cryptography 0.3\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Simple way to implement public-key cryptography in C++?\r\n                \r\nI want to be able to sign a file. By that I mean that the recipient can check that the file is indeed from me and can view its content. Is there any simple way to do that in C++?\n\nI just had a look at the PGP article on Wikipedia but they lost me somewhere in the middle of \"hashing, data compression, symmetric-key cryptography, and, finally, public-key cryptography\". Ideally, I would like a library which has a function ```\nsignString(string, privateykey)```\n and the recipient would have function ```\nreadSignedString(string, publickey)```\n. Any suggestion?\n\nEdit:\n\nI'm not sure I'm using the right approach, so here is what I'm trying to do:\n\nI want to implement some simple piracy protection in my desktop application. So when the user buy a license, I send them a signed file containing their name and email. The user then install the file and the app reads it: it checks the signature validity and displays the name/email (in the About box). To make sure that crackers cannot generate these files, I need to make sure that the key to decrypt the file is not the same as the one to encrypt it. Is there any simple way to implement this?\n    ", "Answer": "\r\nOpenSSL is almost what you need. It doesn't have two such functions, but it's almost as easy.\nFirst of all, every digital signature requires a hash algorithm. The reason is that you don't encrypt the file, you only encrypt the file hash (it would take too long to verify otherwise).\n\nWith OpenSSL you can use something like this:\n\n```\n#include <openssl/evp.h>\n\nEVP_MD_CTX ctx;\nunsigned char signature[SIGNATURE_LEN];\nint signature_len;\n\nEVP_SignInit(&ctx, EVP_sha1());\nEVP_SignUpdate(&ctx, data, size);\nEVP_SignFinal(&ctx, signature, &signature_len, pkey);\n```\n\n\nAnd pretty much the same for validating the signature, only using ```\nEVP_ValidateInit```\n, ```\nEVP_ValidateUpdate```\n and ```\nEVP_ValidateFinal```\n. The last function returns 0/1 to say whether validation succeeded or not.\n\nYou still need to get the key into the application, there are quite a few functions to do that, depending on where you read it from (file/memory/certificate etc.)\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python: py2exe cryptography Multibackend cannot be initialized with no backends\r\n                \r\nI am using python 2.7.11 on windows 7 64bit with py2exe 0.6.9, I got the following error after running the ```\n.exe```\n file.\n\nValueError: Multibackend cannot be initialized with no backends.\nIf you are seeing this error when trying to use ```\ndefault_backend()```\n please try uninstalling and reinstalling cryptography.\n\n    ", "Answer": "\r\ni wrote bellow code then the problem has been solved.\n\n```\ndef patch_crypto_be_discovery():\n\n\"\"\"\nMonkey patches cryptography's backend detection.\nObjective: support pyinstaller freezing.\n\"\"\"\n\nfrom cryptography.hazmat import backends\n\ntry:\n    from cryptography.hazmat.backends.commoncrypto.backend import backend as be_cc\nexcept ImportError:\n    be_cc = None\n\ntry:\n    from cryptography.hazmat.backends.openssl.backend import backend as be_ossl\nexcept ImportError:\n    be_ossl = None\n\nbackends._available_backends_list = [\n    be for be in (be_cc, be_ossl) if be is not None\n]\n\npatch_crypto_be_discovery()\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Why didn't I receive cryptography.hazmat.bindings._padding when installing cryptography with StaSh?\r\n                \r\nI am using Pythonista for iOS and installed the cryptography package using the latest version of StaSh. It looked like there was an issue during installation but it still seemed to be successful:\n\n```\nExtracting archive file ...\nArchive extracted.\nRunning setup file ...\nTypeError('expected string or bytes-like object',)\nFailed to run setup.py\nFall back to directory guessing ...\nPackage installed: cryptography\n```\n\n\nHowever, when I try to import Fertnet from cryptography.fertnet I get a ModuleNotFoundError. Apparently I'm missing cryptography.hazmat.bindings._padding. Does anyone have any idea why I'm not getting that module?\n    ", "Answer": "\r\nThe cryptography module is partly written in C.\nThose parts have to be compiled into shared libraries. The libraries are named ```\n_constant_time```\n, ```\n_openssl```\n and ```\n_padding```\n and they should be located in ```\nhazmat/bindings```\n.\n\nAFAICT PyPI only carries compiled packages for linux, windows and macOS but not for IOS.\nSo my guess is that ```\nsetup.py```\n fails because it cannot compile those libraries.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to resolve Cryptography Changes in Android P?\r\n                \r\nFirst of all, I am new to this encryption operations and I don't know whether my question is proper to ask or not! any solution is appreciated ... \n\nIn my project I use this code to create SSLSocketFactory for services:\n\n```\n  public static SSLSocketFactory getGlobalSSlFactory() {\n   try {\n    CertificateFactory cf = CertificateFactory.getInstance(\"X.509\", \"BC\");\n    InputStream caInput = context.getResources().openRawResource(xxxxxxx);\n\n    Certificate ca = cf.generateCertificate(caInput);\n    caInput.close();\n\n    KeyStore keyStore = KeyStore.getInstance(\"BKS\");\n    keyStore.load(null, null);\n\n    keyStore.setCertificateEntry(\"ca\", ca);\n\n    String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();\n    TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);\n    tmf.init(keyStore);\n\n    KeyManagerFactory kmf = KeyManagerFactory.getInstance(\n            KeyManagerFactory.getDefaultAlgorithm());\n    kmf.init(keyStore, \"xxxxxxx\".toCharArray());\n\n    final SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n    sslContext.init(null, tmf.getTrustManagers(), null); \n       return sslContext.getSocketFactory();\n  } catch (Exception e) {\n     e.printStackTrace();\n     return null;\n  }\n}\n```\n\n\nThe error I get when testing on device with android ( Pie ) :\n\n\n\ngoogle says: https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\n\nImportant part :\n\n\"To resolve this, you should stop specifying a provider and use the default implementation.\"\n\nHow should I change my code ?\n\n** more explanations **\n\nI did what @sonhvp said but after testing that this error comes :\n\n\n\nAnd error come to this line :\n\n```\n Certificate ca = cf.generateCertificate(caInput);\n```\n\n\nThis is my android version :\n\n\n    ", "Answer": "\r\nAs the document said, \"From Android N, we don’t recommend specifying the provider\". So just remove all provider in your crypto.\nIn your method\n\n```\nCertificateFactory cf = CertificateFactory.getInstance(\"X.509\", \"BC\");\n```\n\n\nremove provider (\"BC\")\n\n```\nCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n```\n\n\nOther methods is fine. Because it doesn't specifying a provider\n\n```\nKeyStore.getInstance(\"BKS\"); //no provider\nTrustManagerFactory.getInstance(tmfAlgorithm); //no provider\nKeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm()); //no provider\nSSLContext.getInstance(\"TLS\"); //no provider\n```\n\n\nSomething is wrong with your cert file in raw folder. I created an cert file an run it with your code without any issue. Just change to ```\nCertificateFactory.getInstance(\"X.509\")```\n. Try with my cert file\n\n```\npublic class Test {\n\n    public Test(AppCompatActivity activity) {\n        context = activity;\n    }\n\n    private Context context;\n\n    public  SSLSocketFactory getGlobalSSlFactory() {\n        try {\n            CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n            InputStream caInput = context.getResources().openRawResource(R.raw.test);\n\n            Certificate ca = cf.generateCertificate(caInput);\n            caInput.close();\n\n            KeyStore keyStore = KeyStore.getInstance(\"BKS\");\n            keyStore.load(null, null);\n\n            keyStore.setCertificateEntry(\"ca\", ca);\n\n            String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();\n            TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);\n            tmf.init(keyStore);\n\n            KeyManagerFactory kmf = KeyManagerFactory.getInstance(\n                    KeyManagerFactory.getDefaultAlgorithm());\n            kmf.init(keyStore, \"xxxxxxx\".toCharArray());\n\n            final SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n            sslContext.init(null, tmf.getTrustManagers(), null);\n            return sslContext.getSocketFactory();\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n}\n```\n\n\nMy Activity\n\n```\nclass MainActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        val test = Test(this)\n        test.globalSSlFactory.createSocket()\n    }\n\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cannot install cryptography: Command errored out with exit status 1\r\n                \r\nI am trying to install cryptography, using Windows 10 OS, however it keeps erroring, unable to build the wheel for cffi.\n```\nCollecting cryptography\n  Using cached cryptography-35.0.0-cp36-abi3-win_amd64.whl (2.1 MB)\nCollecting cffi>=1.12\n  Using cached cffi-1.14.6.tar.gz (475 kB)\nRequirement already satisfied: pycparser in c:\\users\\alexf\\appdata\\local\\programs\\python\\python310\\lib\\site-package\ns (from cffi>=1.12->cryptography) (2.20)\nBuilding wheels for collected packages: cffi\n  Building wheel for cffi (setup.py) ... error\n  ERROR: Command errored out with exit status 1:\n   command: 'C:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\python.exe' -u -c 'import io, os, sys, setuptoo\nls, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\alexf\\\\AppData\\\\Local\\\\Temp\\\\pip-install-x7mxn55y\\\\cffi_7273550c7112440\n399311ad24099a7b4\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\alexf\\\\AppData\\\\Local\\\\Temp\\\\pip-install-x7mxn55y\\\\cffi_\n7273550c7112440399311ad24099a7b4\\\\setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.ex\nists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\n\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d 'C:\\Users\\alexf\\AppData\n\\Local\\Temp\\pip-wheel-q8b5b_9v'\n       cwd: C:\\Users\\alexf\\AppData\\Local\\Temp\\pip-install-x7mxn55y\\cffi_7273550c7112440399311ad24099a7b4\\\n  Complete output (37 lines):\n  _configtest.c\n  running bdist_wheel\n  running build\n  running build_py\n  creating build\n  creating build\\lib.win-amd64-3.10\n  creating build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\api.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\backend_ctypes.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\cffi_opcode.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\commontypes.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\cparser.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\error.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\ffiplatform.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\lock.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\model.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\pkgconfig.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\recompiler.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\setuptools_ext.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\vengine_cpy.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\vengine_gen.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\verifier.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\__init__.py -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\_cffi_include.h -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\parse_c_type.h -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\_embedding.h -> build\\lib.win-amd64-3.10\\cffi\n  copying cffi\\_cffi_errors.h -> build\\lib.win-amd64-3.10\\cffi\n  running build_ext\n  building '_cffi_backend' extension\n  creating build\\temp.win-amd64-3.10\n  creating build\\temp.win-amd64-3.10\\Release\n  creating build\\temp.win-amd64-3.10\\Release\\c\n  creating build\\temp.win-amd64-3.10\\Release\\c\\libffi_msvc\n  C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\bin\\HostX86\\x64\\cl.exe /c\n /nologo /Ox /W3 /GL /DNDEBUG /MD -Ic/libffi_msvc -IC:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\include\n-IC:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\Include -IC:\\Program Files (x86)\\Microsoft Visual Studio\\2\n019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\include /Tcc/_cffi_backend.c /Fobuild\\temp.win-amd64-3.10\\Release\\c/_cffi_b\nackend.obj\n  _cffi_backend.c\n  C:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\include\\pyconfig.h(59): fatal error C1083: Cannot open inc\nlude file: 'io.h': No such file or directory\n  error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.26.28801\\\\\nbin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\n  ----------------------------------------\n  ERROR: Failed building wheel for cffi\n  Running setup.py clean for cffi\nFailed to build cffi\nInstalling collected packages: cffi, cryptography\n    Running setup.py install for cffi ... error\n    ERROR: Command errored out with exit status 1:\n     command: 'C:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\python.exe' -u -c 'import io, os, sys, setupt\nools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\alexf\\\\AppData\\\\Local\\\\Temp\\\\pip-install-x7mxn55y\\\\cffi_7273550c71124\n40399311ad24099a7b4\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\alexf\\\\AppData\\\\Local\\\\Temp\\\\pip-install-x7mxn55y\\\\cff\ni_7273550c7112440399311ad24099a7b4\\\\setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.\nexists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\\nn'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\alexf\\App\nData\\Local\\Temp\\pip-record-ye_cwvjn\\install-record.txt' --single-version-externally-managed --compile --install-hea\nders 'C:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\Include\\cffi'\n         cwd: C:\\Users\\alexf\\AppData\\Local\\Temp\\pip-install-x7mxn55y\\cffi_7273550c7112440399311ad24099a7b4\\\n    Complete output (37 lines):\n    _configtest.c\n    running install\n    running build\n    running build_py\n    creating build\n    creating build\\lib.win-amd64-3.10\n    creating build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\api.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\backend_ctypes.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\cffi_opcode.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\commontypes.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\cparser.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\error.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\ffiplatform.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\lock.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\model.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\pkgconfig.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\recompiler.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\setuptools_ext.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\vengine_cpy.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\vengine_gen.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\verifier.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\__init__.py -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\_cffi_include.h -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\parse_c_type.h -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\_embedding.h -> build\\lib.win-amd64-3.10\\cffi\n    copying cffi\\_cffi_errors.h -> build\\lib.win-amd64-3.10\\cffi\n    running build_ext\n    building '_cffi_backend' extension\n    creating build\\temp.win-amd64-3.10\n    creating build\\temp.win-amd64-3.10\\Release\n    creating build\\temp.win-amd64-3.10\\Release\\c\n    creating build\\temp.win-amd64-3.10\\Release\\c\\libffi_msvc\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\bin\\HostX86\\x64\\cl.exe\n/c /nologo /Ox /W3 /GL /DNDEBUG /MD -Ic/libffi_msvc -IC:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\includ\ne -IC:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\Include -IC:\\Program Files (x86)\\Microsoft Visual Studio\n\\2019\\Community\\VC\\Tools\\MSVC\\14.26.28801\\include /Tcc/_cffi_backend.c /Fobuild\\temp.win-amd64-3.10\\Release\\c/_cffi\n_backend.obj\n    _cffi_backend.c\n    C:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\include\\pyconfig.h(59): fatal error C1083: Cannot open i\nnclude file: 'io.h': No such file or directory\n    error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.26.28801\n\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\n    ----------------------------------------\nERROR: Command errored out with exit status 1: 'C:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\python.exe'\n-u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\alexf\\\\AppData\\\\Local\\\\Temp\\\\pip-ins\ntall-x7mxn55y\\\\cffi_7273550c7112440399311ad24099a7b4\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\alexf\\\\AppData\\\\Local\n\\\\Temp\\\\pip-install-x7mxn55y\\\\cffi_7273550c7112440399311ad24099a7b4\\\\setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\n\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"')\n;code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' ins\ntall --record 'C:\\Users\\alexf\\AppData\\Local\\Temp\\pip-record-ye_cwvjn\\install-record.txt' --single-version-externall\ny-managed --compile --install-headers 'C:\\Users\\alexf\\AppData\\Local\\Programs\\Python\\Python310\\Include\\cffi' Check t\nhe logs for full command output.\n```\n\nI have OpenSSL version 1.1.1d, pip version 21.2.4, and am using Python 3.10, and the same error happens if I try to install cffi on it's own. I have no idea why this isn't working. If you need any more information I'll be happy to provide it.\n    ", "Answer": "\r\nGonna answer this myself, because it's me being dumb.\ncryptography, or possibly one of it's dependency libraries such as cffi, does not work with python 3.10 yet. Needed to go back to 3.9 for this to work.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Problem Updating to .Net 6 - Encrypting String\r\n                \r\nI'm using a string Encryption/Decryption class similar to the one provided here as a solution.\nThis worked well for me in .Net 5.\nNow I wanted to update my project to .Net 6.\nWhen using .Net 6, the decrypted string does get cut off a certain point depending on the length of the input string.\n▶️ To make it easy to debug/reproduce my issue, I created a public repro Repository here.\n\nThe encryption code is on purpose in a Standard 2.0 Project.\nReferencing this project are both a .Net 6 as well as a .Net 5 Console project.\n\nBoth are calling the encryption methods with the exact same input of ```\n\"12345678901234567890\"```\n with the path phrase of ```\n\"nzv86ri4H2qYHqc&m6rL\"```\n.\n.Net 5 output: ```\n\"12345678901234567890\"```\n\n.Net 6 output: ```\n\"1234567890123456\"```\n\nThe difference in length is ```\n4```\n.\nI also looked at the breaking changes for .Net 6, but could not find something which guided me to a solution.\nI'm glad for any suggestions regarding my issue, thanks!\nEncryption Class\n```\npublic static class StringCipher\n{\n    // This constant is used to determine the keysize of the encryption algorithm in bits.\n    // We divide this by 8 within the code below to get the equivalent number of bytes.\n    private const int Keysize = 128;\n\n    // This constant determines the number of iterations for the password bytes generation function.\n    private const int DerivationIterations = 1000;\n\n    public static string Encrypt(string plainText, string passPhrase)\n    {\n        // Salt and IV is randomly generated each time, but is preprended to encrypted cipher text\n        // so that the same Salt and IV values can be used when decrypting.  \n        var saltStringBytes = Generate128BitsOfRandomEntropy();\n        var ivStringBytes = Generate128BitsOfRandomEntropy();\n        var plainTextBytes = Encoding.UTF8.GetBytes(plainText);\n        using (var password = new Rfc2898DeriveBytes(passPhrase, saltStringBytes, DerivationIterations))\n        {\n            var keyBytes = password.GetBytes(Keysize / 8);\n            using (var symmetricKey = Aes.Create())\n            {\n                symmetricKey.BlockSize = 128;\n                symmetricKey.Mode = CipherMode.CBC;\n                symmetricKey.Padding = PaddingMode.PKCS7;\n                using (var encryptor = symmetricKey.CreateEncryptor(keyBytes, ivStringBytes))\n                {\n                    using (var memoryStream = new MemoryStream())\n                    {\n                        using (var cryptoStream = new CryptoStream(memoryStream, encryptor, CryptoStreamMode.Write))\n                        {\n                            cryptoStream.Write(plainTextBytes, 0, plainTextBytes.Length);\n                            cryptoStream.FlushFinalBlock();\n                            // Create the final bytes as a concatenation of the random salt bytes, the random iv bytes and the cipher bytes.\n                            var cipherTextBytes = saltStringBytes;\n                            cipherTextBytes = cipherTextBytes.Concat(ivStringBytes).ToArray();\n                            cipherTextBytes = cipherTextBytes.Concat(memoryStream.ToArray()).ToArray();\n                            memoryStream.Close();\n                            cryptoStream.Close();\n                            return Convert.ToBase64String(cipherTextBytes);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    public static string Decrypt(string cipherText, string passPhrase)\n    {\n        // Get the complete stream of bytes that represent:\n        // [32 bytes of Salt] + [16 bytes of IV] + [n bytes of CipherText]\n        var cipherTextBytesWithSaltAndIv = Convert.FromBase64String(cipherText);\n        // Get the saltbytes by extracting the first 16 bytes from the supplied cipherText bytes.\n        var saltStringBytes = cipherTextBytesWithSaltAndIv.Take(Keysize / 8).ToArray();\n        // Get the IV bytes by extracting the next 16 bytes from the supplied cipherText bytes.\n        var ivStringBytes = cipherTextBytesWithSaltAndIv.Skip(Keysize / 8).Take(Keysize / 8).ToArray();\n        // Get the actual cipher text bytes by removing the first 64 bytes from the cipherText string.\n        var cipherTextBytes = cipherTextBytesWithSaltAndIv.Skip((Keysize / 8) * 2).Take(cipherTextBytesWithSaltAndIv.Length - ((Keysize / 8) * 2)).ToArray();\n\n        using (var password = new Rfc2898DeriveBytes(passPhrase, saltStringBytes, DerivationIterations))\n        {\n            var keyBytes = password.GetBytes(Keysize / 8);\n            using (var symmetricKey = Aes.Create())\n            {\n                symmetricKey.BlockSize = 128;\n                symmetricKey.Mode = CipherMode.CBC;\n                symmetricKey.Padding = PaddingMode.PKCS7;\n                using (var decryptor = symmetricKey.CreateDecryptor(keyBytes, ivStringBytes))\n                {\n                    using (var memoryStream = new MemoryStream(cipherTextBytes))\n                    {\n                        using (var cryptoStream = new CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read))\n                        {\n                            var plainTextBytes = new byte[cipherTextBytes.Length];\n                            var decryptedByteCount = cryptoStream.Read(plainTextBytes, 0, plainTextBytes.Length);\n                            memoryStream.Close();\n                            cryptoStream.Close();\n                            return Encoding.UTF8.GetString(plainTextBytes, 0, decryptedByteCount);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private static byte[] Generate128BitsOfRandomEntropy()\n    {\n        var randomBytes = new byte[16]; // 16 Bytes will give us 128 bits.\n        using (var rngCsp = RandomNumberGenerator.Create())\n        {\n            // Fill the array with cryptographically secure random bytes.\n            rngCsp.GetBytes(randomBytes);\n        }\n        return randomBytes;\n    }\n}\n```\n\nCalling code\n```\nvar input = \"12345678901234567890\";\nvar inputLength = input.Length;\nvar inputBytes = Encoding.UTF8.GetBytes(input);\n\nvar encrypted = StringCipher.Encrypt(input, \"nzv86ri4H2qYHqc&m6rL\");\n\nvar output = StringCipher.Decrypt(encrypted, \"nzv86ri4H2qYHqc&m6rL\");\nvar outputLength = output.Length;\nvar outputBytes = Encoding.UTF8.GetBytes(output);\n\nvar lengthDiff = inputLength - outputLength;\n```\n\n    ", "Answer": "\r\nThe reason is this breaking change:\n\nDeflateStream, GZipStream, and CryptoStream diverged from typical\nStream.Read and Stream.ReadAsync behavior in two ways:\nThey didn't complete the read operation until either the buffer passed\nto the read operation was completely filled or the end of the stream\nwas reached.\n\nAnd the new behaviour is:\n\nStarting in .NET 6, when Stream.Read or Stream.ReadAsync is called on\none of the affected stream types with a buffer of length N, the\noperation completes when:\nAt least one byte has been read from the stream, or The underlying\nstream they wrap returns 0 from a call to its read, indicating no more\ndata is available.\n\nIn your case you are affected because of this code in ```\nDecrypt```\n method:\n```\nusing (var cryptoStream = new CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read))\n{\n    var plainTextBytes = new byte[cipherTextBytes.Length];\n    var decryptedByteCount = cryptoStream.Read(plainTextBytes, 0, plainTextBytes.Length);\n    memoryStream.Close();\n    cryptoStream.Close();\n    return Encoding.UTF8.GetString(plainTextBytes, 0, decryptedByteCount);\n}\n```\n\nYou do not check how much bytes ```\nRead```\n actually read and whether it read them all. You could get away with this in previous versions of .NET because as mentioned ```\nCryptoStream```\n behaviour was different from other streams, and because your buffer length is enough to hold all data. However, this is no longer the case and you need to check it as you would do for other streams. Or even better - just use ```\nCopyTo```\n:\n```\nusing (var plainTextStream = new MemoryStream())\n{\n    cryptoStream.CopyTo(plainTextStream);\n    var plainTextBytes = plainTextStream.ToArray();\n    return Encoding.UTF8.GetString(plainTextBytes, 0, plainTextBytes.Length);\n} \n```\n\nOr even better as another answer suggests, since you decrypt UTF8 text:\n```\nusing (var plainTextReader = new StreamReader(cryptoStream))\n{\n    return plainTextReader.ReadToEnd();\n}  \n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "ImportError: No module named 'cryptography'\r\n                \r\nI installed python 3.4 on windows 7 and when trying to use paramiko I get this error :\n\n```\nimport paramiko\n\nFile \"C:\\Python34\\lib\\site-packages\\paramiko-2.0.2-py3.4.egg\\paramiko\\__init__.py\", line 30, in module\n\nFile \"C:\\Python34\\lib\\site-packages\\paramiko-2.0.2-py3.4.egg\\paramiko\\transport.py\", line 32, in module\n\nImportError: No module named 'cryptography'\n```\n\n\nI installed pycrypto-2.6.1.win but the problem persist.\nAny help ?\n    ", "Answer": "\r\nIt turned out that it was a proxy problem.\nIt was blocking download.\nI did \n\n```\npip install cryptography\npip install paramiko\n```\n\n\nfrom a direct internet connection and it worked.\nThanks everyone !\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Microsft Azure installing Java Cryptography Extension (JCE)\r\n                \r\nI have a Java 8 Wep App on Azure.\n\nI am using the default JRE build in application settings for the webapp. I am running on Tomcat.\n\nI am having trouble installing Java Cryptography Extension to handle some encryption. I dont have access to Java Home to install it, I can only upload the WAR files to web app.\n\nDoes anyone know how to install JCE on Azure?\n\nThanks!\nFab\n    ", "Answer": "\r\nFor people who are still having trouble with this I share my solution by example:\n\n\nCopy JDK from D:\\Program Files (x86)\\Java\\jdk1.8.0_111 to D:\\home\\site\\jdk1.8.0_111\nDownload and extract jce policy files from: http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html\ncopy files local_policy.jar and US_export_policy.jar to D:\\home\\site\\jdk1.8\\jre\\lib\\security (replace existing files)\nSet application setting in Azure portal: JRE_HOME = D:/home/site/jdk1.8.0_111/jre\nNow the JDK has JCE enabled. The \"Java minor version\" selected in the Azure portal is no longer used or this App Service.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error in building wheel for cryptography while installing firebase-admin on raspberry pi 3\r\n                \r\nI was installing firebase-admin using pip on my raspberry pi 3b+ using the following command:\npip3 install firebase-admin\nHowever it always ends with an error saying \"Error building wheel for cryptography\"\nHere is the full error message:\n\n/tmp/pip-build-env-k7qo7p54/overlay/lib/python3.7/site-packages/setuptools/command/build_py.py:202: SetuptoolsDeprecationWarning:     Installing 'cryptography.hazmat.bindings._rust' as data is deprecated, please list it in ```\npackages```\n.\n!!\n\n```\n      ############################\n      # Package would be ignored #\n      ############################\n      Python recognizes 'cryptography.hazmat.bindings._rust' as an importable package,\n      but it is not listed in the `packages` configuration of setuptools.\n  \n      'cryptography.hazmat.bindings._rust' has been automatically added to the distribution only\n      because it may contain data files, but this behavior is likely to change\n      in future versions of setuptools (and therefore is considered deprecated).\n  \n      Please make sure that 'cryptography.hazmat.bindings._rust' is included as a package by using\n      the `packages` configuration field or the proper discovery methods\n      (for example by using `find_namespace_packages(...)`/`find_namespace:`\n      instead of `find_packages(...)`/`find:`).\n  \n      You can read more about \"package discovery\" and \"data files\" on setuptools\n      documentation page.\n  \n  \n  !!\n  \n    check.warn(importable)\n  \n      =============================DEBUG ASSISTANCE=============================\n      If you are seeing a compilation error please try the following steps to\n      successfully install cryptography:\n      1) Upgrade to the latest pip and try again. This will fix errors for most\n         users. See: https://pip.pypa.io/en/stable/installing/#upgrading-pip\n      2) Read https://cryptography.io/en/latest/installation/ for specific\n         instructions for your platform.\n      3) Check our frequently asked questions for more information:\n         https://cryptography.io/en/latest/faq/\n      4) Ensure you have a recent Rust toolchain installed:\n         https://cryptography.io/en/latest/installation/#rust\n  \n      Python: 3.7.3\n      platform: Linux-5.10.103-v7+-armv7l-with-debian-10.13\n      pip: n/a\n      setuptools: 67.0.0\n      setuptools_rust: 1.5.2\n      rustc: n/a\n      =============================DEBUG ASSISTANCE=============================\n  \n  error: can't find Rust compiler\n  \n  If you are using an outdated pip version, it is possible a prebuilt wheel is available for this package but pip is not able to install from it. Installing from the wheel would avoid the need for a Rust compiler.\n  \n  To update pip, run:\n  \n      pip install --upgrade pip\n  \n  and then retry package installation.\n  \n  If you did intend to build this package from source, try installing a Rust compiler from your system package manager and ensure it is on the PATH during installation. Alternatively, rustup (available at https://rustup.rs) is the recommended way to download and update the Rust compiler toolchain.\n  \n  This package requires Rust >=1.48.0.\n  [end of output]\n```\n\nnote: This error originates from a subprocess, and is likely not a problem with pip.\nERROR: Failed building wheel for cryptography\nFailed to build cryptography\nERROR: Could not build wheels for cryptography, which is required to install pyproject.toml-based projects\nI have tried different commands like:\n\npip3 install firebase-admin\n\nor\n\npython -m pip install firebase-admin\n\nI have upgraded pip and tried again, but still it didn't work\nI faced a similar problem long time ago and solved by installing openssl. Tried it this time, it didn't work\nAlso tried installing rust compiler and using it but it didn't work\nI am using Raspbian OS Buster on my Raspberry Pi 3\nI have tried fresh installs of the OS\nStill the same problem occurs\n    ", "Answer": "\r\nThis error message means that the Rust compiler (rustc) isn't installed on your system or isn't accessible via your system's PATH.\nThe Rust programming language is required to build certain Python packages, such as packages that use the PyO3 or rust-cpython extensions to interface with Rust.\nTo solve this issue, you'll need to install Rust. You can do this using the Rust version manager, rustup. Here's how to install it:\nOpen a terminal.\nDownload and install rustup by running the following command:\n\nOpen a terminal.\nDownload and install rustup by running the following command:\n\n```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\nIf everything went well, this should display the version of rustc that was installed. You should now be able to build packages that depend on Rust.\nIf you're still having issues after installing Rust, make sure the Rust path is correctly set in your PATH environment variable. You can add Rust to your PATH by adding the following line to your ~/.bashrc or ~/.bash_profile file (or the equivalent for your shell):\n```\nsource $HOME/.cargo/env\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Protecting a file using asymmetric cryptography\r\n                \r\nI know how asymmetric cryptography works. I know there are two keys (one private and one public).\n\nWhen someone wants to communicate they exchange their public keys encrypt messages with those public keys AND then the respective message could be decrypted ONLY by the user that has the private key.\n\nNow, I'm using Node.js and I need to do something like this...\n\nI need an application that EACH hour reads a database, extracts data and saves it to a file that I need to send to another server.\nMy problem is that I DON'T WANT that file will be visible to other, I do the transfer using SSH so there is no problem BUT\nI must encrypt that file because I'm not the admin of that server SO maybe someone could read it. Unfortunately the admin is the same for both servers.\nSo my idea is to encrypt the file with a public key, and then only he who has the private key(me) could decrypt it.\n\nI think it is pointless using something like:\n\n```\nvar key = 'blablabla'\n```\n\n\nIf I use a public key, there is no problem, all can read it..... it is public indeed. But with this public key, nobody can decrypt the message, so it is\nsomething like one-way encryption.\n\nNow, could someone tell me if I need a signer/verifier to do this job, OR maybe I have to generate two keys (public/private) with openssl and pass those keys to a cipher/dechiper?\n\nI'm looking at crypto modules, but there are no examples....\n    ", "Answer": "\r\nIn general, your idea is right - you encrypt using public key and decrypt using private key of yours. However, practically the procedure is more complex. Random symmetric key is generated and the data is encrypted using that key. Then the public key is used to encrypt the random key. Encrypted key is sent to recipient together with encrypted data. On the other side encrypted key is decrypted using a private key, then the data is decrypted. \n\nYou can use OpenPGP keys or X.509 certificates to do the job.\n\nIn case of OpenPGP the standard offers encryption and decryption as atomic procedures (on the user level). In case of X.509 certificates you need to use PKCS#7 / CMS.\n\nOpenSSL library offers operations with PKCS#7 / CMS, however when I look at nodeJS API for OpenSSL, that API is very limited and doesn't expose those functions. Maybe you can write your own nodeJS module which will interface with OpenSSL and provide missing functions.\n\nAnother alternative is to use OpenPGP keys and node-gpg module. That module uses gnupg to do the actual job, so gnupg must be installed. \n\nUnfortunately I don't see any other suitable libraries in the 3rd-party module list provided in nodeJS wiki. \n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Does calling email task involve using cryptography or encryption?\r\n                \r\nI am just calling windows phone compose email task, to let the user request support by email through my app. \nNow, I need to be sure to answer the following question for the windows store :\n\nDoes this app call, support, contain, or use cryptography or encryption? \n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to verify the HMAC in this Python cryptography code?\r\n                \r\nI am studying cryptography in Python and here is a Python 3 practice problem which is supposed to return \"yes\" as the input and output should match. Please tell me the right way of the second person (Hardy) to verify the message while using HMAC? I tried compare_digest() and base64decode but it doesn't work.\nQuestion-\nLaurel and Hardy are exchanging messages. However, Hardy is unsure about whether he is getting messages from Laurel. The following code is a simulation of HMAC even though the message and the key are the same, the HMAC is different. Modify the code so that Hardy knows with a guarantee that he has received the message from Laurel.\nCode-\n```\nimport hashlib\nimport base64\n\n# Laurel and Hardy share a secret key\nkey = \"apple\".encode()\n\n\n# Laurel sends Hardy a message---->\ndef laurel_to_hardy():\n    message = input()\n    msg = message.encode()\n    #Laurel sends...\n    #Laurel also sends hmac...\n    \n    sha256 = hashlib.sha256()\n    sha256.update(msg)\n    sha256.update(key)\n    hmac = sha256.digest()\n    \n    return msg, hmac\n\n#Verification by Hardy---------->\ndef hardy_verification(msg, hmac):\n    #Hardy receives the message...\n    #Hardy starts verification...\n    \n    # 000 PLEASE SUGGEST HERE#\n\n    sha256 = hashlib.sha256()\n    sha256.update(key)\n    sha256.update(msg)\n    hmac_hardy = sha256.digest()\n    \n\n    #Hardy receives\n    if hmac_hardy == hmac:\n        return \"yes\"\n    else:\n        return \"no\"\n# Print ------>\n    \nmsg_rec, hmac_rec = laurel_to_hardy()\nprint(hardy_verification(msg_rec, hmac_rec))\n\n```\n\nThank you!\n    ", "Answer": "\r\nnot an expert here but have a look at what this code outputs:\n```\nimport hashlib\n\nimport copy\n\na = 'ABC'\n\na = a.encode()\n\nh1 = hashlib.sha256(a)\n\nb = copy.copy(a)\n\nh2 = hashlib.sha256(b)\n\nprint(h1)\n\nprint(h2)\n\nprint(h1.digest())\n\nprint(h2.digest())\n\n\nprint(h1 == h2)\n\nprint(h1.digest() == h2.digest())\n\n\n\na = 'DDD'\n\nc ='ooo'\n\na = a.encode()\n\nc = c.encode()\n\nh1 = hashlib.sha256(a)\n\nh1.update(c)\n\nb = copy.copy(a)\n\nd = copy.copy(c)\n\n\nh2 = hashlib.sha256(b)\n\nh2.update(d)\n\nprint(h1)\n\nprint(h2)\n\nprint(h1.digest())\n\nprint(h2.digest())\n\n\nprint(h1 == h2)\n\nprint(h1.digest() == h2.digest())\n\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "python: py2exe cryptography Multibackend cannot be initialized with no backends\r\n                \r\nI am using python 2.7.11 on windows 7 64bit with py2exe 0.6.9, I got the following error after running the ```\n.exe```\n file.\n\nValueError: Multibackend cannot be initialized with no backends.\nIf you are seeing this error when trying to use ```\ndefault_backend()```\n please try uninstalling and reinstalling cryptography.\n\n    ", "Answer": "\r\ni wrote bellow code then the problem has been solved.\n\n```\ndef patch_crypto_be_discovery():\n\n\"\"\"\nMonkey patches cryptography's backend detection.\nObjective: support pyinstaller freezing.\n\"\"\"\n\nfrom cryptography.hazmat import backends\n\ntry:\n    from cryptography.hazmat.backends.commoncrypto.backend import backend as be_cc\nexcept ImportError:\n    be_cc = None\n\ntry:\n    from cryptography.hazmat.backends.openssl.backend import backend as be_ossl\nexcept ImportError:\n    be_ossl = None\n\nbackends._available_backends_list = [\n    be for be in (be_cc, be_ossl) if be is not None\n]\n\npatch_crypto_be_discovery()\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Are CNG classes in .NET Cryptography namespace FIPS certified?\r\n                \r\nFrom https://learn.microsoft.com/en-us/dotnet/standard/security/cryptographic-services:\n\n\n  Managed code wrappers for the Federal Information Processing Standard (FIPS) certified implementations of the AES, SHA-256, SHA-384, and SHA-512 implementations are available in the new AesCryptoServiceProvider, SHA256CryptoServiceProvider, SHA384CryptoServiceProvider, and SHA512CryptoServiceProvider classes.\n\n\nDoes this mean that CNG classes are not FIPS certified? I'm asking this because sometimes the docs lack information (for example Public Key Encryption section doesn't even mention CNG implementation)\n\nEDIT:\n\n\n  The Cryptography Next Generation (CNG) classes provide a managed\n  wrapper around the native CNG functions.\n\n\nSo CNG is a managed code wrapper, thus confirming my initial guess?\n    ", "Answer": "\r\nThe \"managed wrapper\" just means \"is a C# API that takes care of calling the CNG C API\".  The cryptography is provided by a FIPS Certified library (provided that the OS is configured to be in the mode under which the library got certified).  It's the same statement used for the CAPI versions ```\nManaged code wrappers for ...```\n.\n\nSo, they're exactly as certified as the *CryptoServiceProvider types, in that they're not directly certified, but they're also not doing the cryptographic operations themselves.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to port this Cryptography-related code from Go to Python\r\n                \r\nI am trying to port certain logic from Go to Python 3, and I'm stuck with cryptography-related code.\n\nOriginal code in Go is here: https://github.com/avast/apkverifier/blob/master/signingblock/frosting.go\n\nIn particular, I'm stuck in the ```\nverifySignature```\n function:\n\n```\nfunc (f *frostingInfo) verifySignature(signed, signature []byte, keyBase64 string) error {\n    dec := base64.NewDecoder(base64.StdEncoding, strings.NewReader(keyBase64))\n    pubKeyAsn, err := ioutil.ReadAll(dec)\n    if err != nil {\n        return fmt.Errorf(\"failed to parse key base64: %s\", err.Error())\n    }\n\n    keyDigest := sha256.Sum256(pubKeyAsn)\n    f.usedKeySha256 = hex.EncodeToString(keyDigest[:])\n\n    pkGen, err := x509.ParsePKIXPublicKey(pubKeyAsn)\n    if err != nil {\n        return fmt.Errorf(\"failed to unmarshal pk: %s\", err.Error())\n    }\n\n    pk, ok := pkGen.(*ecdsa.PublicKey)\n    if !ok {\n        return fmt.Errorf(\"invalid key type: %T\", pkGen)\n    }\n\n    digest := sha256.Sum256(signed)\n\n    ecdsaSig := new(ecdsaSignature)\n    if rest, err := asn1.Unmarshal(signature, ecdsaSig); err != nil {\n        return err\n    } else if len(rest) != 0 {\n        return errors.New(\"x509: trailing data after ECDSA signature\")\n    }\n\n    if ecdsaSig.R.Sign() <= 0 || ecdsaSig.S.Sign() <= 0 {\n        return errors.New(\"x509: ECDSA signature contained zero or negative values\")\n    }\n\n    if !ecdsa.Verify(pk, digest[:], ecdsaSig.R, ecdsaSig.S) {\n        return ErrFrostingInvalidSignature\n    }\n\n    return nil\n}\n```\n\n\nHow can I port to Python following calls?\n\n\n```\nx509.ParsePKIXPublicKey(pubKeyAsn)```\n\n```\npk, ok := pkGen.(*ecdsa.PublicKey)```\n\n```\nasn1.Unmarshal(signature, ecdsaSig)```\n\n```\necdsa.Verify(pk, digest[:], ecdsaSig.R, ecdsaSig.S)```\n\n\n\nWhat I have so far:\n\n```\nimport logging\n\nimport base64\nimport hashlib\nfrom .androguard_apk import APK\nfrom .byte_reader import ByteReader\nimport ecdsa\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Util import asn1\n\n\nlogger = logging.getLogger(__name__)\n.....\ndef verifySignature(signed, signature, keyBase64):\n    dec = base64.b64decode(keyBase64)\n    pubKeyAsn = dec\n    keyDigest = hashlib.sha256(pubKeyAsn).digest()\n    logger.info(hashlib.sha256(pubKeyAsn).hexdigest())\n    vk = ecdsa.VerifyingKey.from_der(pubKeyAsn)\n    logger.info(f\"Key:{vk.to_string()} \")\n    # vk = ecdsa.VerifyingKey.from_string(hashlib.sha256(pubKeyAsn).hexdigest())\n    # vk = ecdsa.VerifyingKey.from_string(keyBase64)\n    digest = hashlib.sha256(signed).digest()\n    vk.verify_digest(signature, digest)\n    #res = vk.verify(signature, signed)\n    logger.info(f\"Validation result: {res}\" )\n```\n\n\nvalue of keyBase64 is ```\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEZH2+1+E07dnErAD3L6BbTnaohU0bbXriNlJI7VxJU+LjdSwPyXR5pomARAMoyPkMksLz/gitUPtFuJoPL2ziEw==```\n\n\nI am keep getting this error and I don't know how to proceed: \n\n```\n  File \"apk_frosting_verifier#link-tree/apk_frosting_verifier/apk_frosting_verifier.py\", line 173, in verifySignature\n    vk.verify_digest(signature, digest)\n  File \"apk_frosting_verifier#link-tree/ecdsa/keys.py\", line 109, in verify_digest\n    r, s = sigdecode(signature, self.pubkey.order)\n  File \"apk_frosting_verifier#link-tree/ecdsa/util.py\", line 221, in sigdecode_string\n    assert len(signature) == 2*l, (len(signature), 2*l)\nAssertionError: (71, 64)\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "On hash functions application in cryptography vs feature\r\n                \r\nI have only started learning feature hashing so I need help in understanding if I can apply the hash function expressed mathematically as https://en.wikipedia.org/wiki/Tent_map.\n\nand one such application of Tent map is in cryptography -- Paper 1: Implementation of Hash Function Based \nOn Neural \nCryptography download link.  \n\nIn feature hashing,\n Let x be a data point of D dimension i.e., it has D number of elements. In feature hashing, a linear hash function is used to transform the D dimensional data point to a lower k dimensional data point in such a way that the distances in reduced dimension feature space is preserved.\n The hash bit k is obtained through the operation,\n```\nh_k(x) = sign(y(x)) = sign(f(w_k^Tx +b))```\n. The output ```\nh(x)```\n is 0 or 1 bit.\n\nIn essence, we are classifying whether the data point x belongs to 0 or 1 class by creating random hyperplanes.\n\nThere are various choices of hash functions in feature hashing for dimensionality reduction : ```\nf = tanh()```\n or simply random sampling to obtain the hyperplanes. Another choice is to use kernel functions when the data is not linearly separable. Such a hashing function /technique is implemented using Kernels and one popular choice is to use the Gaussian RBF as the kernel function.\n\n\n\n\nQuestion : In paper 1, the Authors have used the Asymmetric Tent Map https://en.wikipedia.org/wiki/Tent_map which is piecewise linear on the unit interval as the transfer function. To me the formulation of hashing in this paper using Tent Map appears similar to the hash equation (1). How can I apply the piecewise linear function i.e., apply this map to create hyperplanes in order to do feature hashing? \n\nOr am I mixing the two concepts?\n\n    ", "Answer": "\r\nFeature hashing needs a hash function, so that it will be able to do ... its hashing trick!\n\nIt will hash every image, thus you want a hash function that will take an image (i.e. a feature/vector of D dimensions) and produce a single integer value.\n\n\n\nNote: I think you are confused with the second single-bit output hash function ξ, w.r.t. to the fact that the result will be binary. ξ() is easy to grasp, once you get the flow of the initial approach, since this is just an optimization to decrease hash collisions.\n\n\n\nNow let's take a look at how Tent_map_2 behaves:\n\n\n\nwhich as you see, is a real-valued function.\n\nIt takes one number as input and gives one number as output. As a result a naive Tent Map cannot hash a vector (an image in our case). There are many ways to augment the Tent Map to handle a vector, with the simplest to be:\n\nImplement a Tent Map function, e.g. tentMap(), that will implement the logic of Tent Map. You could treat the returned values of Tent Map that are less than 0.5 as 0 and the rest (i.e. >= 0.5) as 1, but you could do more complex things if you like.\n\nNow for an image, you could do:\n\n```\ndef tentMapVector(image):\n    results = []\n    for i in image:\n        results.append(tentMap(i))\n    # now 'results' contains D integers\n    # it needs to be hashed to a single integer\n    # you could treat 'results' as a string and\n    # use one of the numerous hash function to hash that string\n    return hashString(results)\n```\n\n\nand you are ready to go! ```\ntentMapVector()```\n should replace ```\nhash()```\n in Wikipedia's implementation. You may want to read its example, really helpful.\n\n\n\nIt doesn't seem like Feature requires a dimensionality reduction, it should work without a reduction, but when you are data leave in a high dimensional space, which is usually the case with images, you should try reducing the dimensions (for example fro 256 to 128).\n\nYou could, for example, use the PCA() from scikit-learn, or any other library.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography-grade random numbers in Access 2010\r\n                \r\nI'm trying to come up with a marginally secure way of storing passwords in a networked application that uses an Access 2010 frontend. To this end, I am attempting to implement Bcrypt's algorithm in Visual Basic for Applications.\n\nI have found that to fetch a random number in Access, one must use Randomize() and Rnd(). However, it seems that the output of these methods are predictable and should not be used for cryptography. Should I just go with it because anything is better than storing passwords in plaintext? Or is there a better solution? Of course, ideally someone else has already written this, but I can't find it.\n    ", "Answer": "\r\nI've found this SHA-256 digest hashing algorithm implemented in VBA which doesn't appear to use (or need!) random numbers.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Generate base point ( G ) of elliptic curve for elliptic curve cryptography\r\n                \r\nHow do I generate a base point or generator for a elliptic curve in Java? \n\nI'm working on developing a Java package that can be used to implement some elliptic curve cryptography algorithms, and I want to use my own curves. However, I'm stuck at the point where I have to get a generator base point for the curve so that I can have the set of domain parameters.\n\nAny help is much appreciated.\n    ", "Answer": "\r\nGiven an elliptic curve of \"nearly prime\" order ```\nu```\n = ```\nk```\n ```\nr```\n, you should:\n\n\nGenerate a random point ```\nP```\n\nSet ```\nG```\n = ```\nk```\n ```\nP```\n\nIf ```\nG```\n = 0 goto 1\nVerify that ```\nr```\n ```\nG```\n is not 0 (if it is 0, the curve did not have order ```\nk```\n ```\nr```\n).\nOtherwise G is a point of order ```\nr```\n.\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Are there legal issues hosting an Open Source software project on github which uses strong cryptography?\r\n                \r\nLet's say i code a program under an Open Source license like the GPL which uses strong cryptography in a country which has no restrictions about doing so, and no restrictions in making the software publicly available, like hosting on a hosting provider like github for example.\n\n\n\nAs of this post github stores all or part of the data it is hosting in several datacenters located on the northern american continent. I have read software incorporating strong cryptography falls under a special USA law about ammunition and as i know even written stuff about implementation of strong cryptography is prohibited to export.\n\n\n\nSo when pushing my local git repo to an account on github.com, does legal issues arise ? If so, what are good alternatives ?\n    ", "Answer": "\r\nNo, the ammo law no longer applies. There is no restriction.\n\nSee, Bernstein v. United States. A a set of court cases brought by Daniel J. Bernstein challenging restrictions on the export of cryptography from the United States.\n\nAlso DJB created the delightful curve25519 and it's twisted Edwards variant Ed25519.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is possible to distinguish strings encrypted with different cryptography algorithms that are in the same set?\r\n                \r\nIs possible to distinguish strings encrypted with different cryptography algorithms? \n\nIf i have a set of N encrypted strings that comes from different cryptography algorithms (i.e. 100 from AES, 150 from tripleDES, etc... ) i want to know if is possible with a reasonable error that there is a sort of clustering of the strings (i.e. 111 in the AES-cluster, 139 in tripleDES-cluster) also with the simplification that the keys or the strings that are encrypted are the same and obviously without an a priori knowledge (even if there is a training could be interesting). \n\nThere are some works, papers, toy-example about that?\n\nThank you\n    ", "Answer": "\r\nYes, you can distinguish some ciphers based on their ciphertexts, but this doesn't work for all modes of operation.\n\nThe key observation is that AES and Triple DES have different block sizes of 128 bit and 64 bit. Which means that a 7 byte message will be 8 bytes long in 3DES and 16 bytes long in AES. But padding does also have a role in this. PKCS#5 padding will add a whole block of padding if the plaintext size is a multiple of the block size. This means that an 8 byte message will be 16 byte long for 3DES and 16 byte long for AES.\n\nFor example: if the lengths of the plaintext messages are distributed uniformly, then there is a 50% chance that you can distinguish between the two, because 3DES can have 24 byte ciphertexts, but AES cannot. Or said differently, you can find out if it is 3DES in 50% of the time, but you cannot say for sure if AES was used. This zero padding the probability is the same, but the matching lengths are slightly different.\n\nThis holds true for ECB, CBC and some others. In CTR mode on the other hand the length of the ciphertext cannot be used, because the ciphertext has always the same length as the plaintext. CTR mode is essentially a stream cipher.\n\nIf the block sizes are not different, then there is no way to distinguish them, because modern ciphers are designed in a way to be indistinguishable from noise.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography vs Hashing\r\n                \r\nMy question is simple: encryption hides information to the point where only the people intended to see the information can actually see it. You can encrypt information and then decrypt it. Why is hashing is considered encryption if it cannot be decrypted? \n\nI say hashing is considered encryption because you call MD5 a cryptographic hash function.\n    ", "Answer": "\r\nCorrect, Hashing is a one way function, but Hashing isn't considered Encryption. A good explanation of the difference Hashing vs Encryption and Fundamental difference between Hashing and Encryption algorithms.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python Diffie-Hellman exchange cryptography library. Shared key not the same\r\n                \r\nFollowing the tutorial listed on the cryptography library documentation I have successfully created a function that demonstrates a Diffie-Hellman exchange. I am now trying to create a proof of concept socket server and socket client.\n\nAn undocumented requirement of this application is the sending of the public key to the client. This requires the ```\nDHPublicKey```\n object to be serialised and serialised in order for it to be sent over the socket.\n\nBy doing this however the shared keys are not the same! I have tried to use different encoding formats (PEM for example) to see if this made a difference. Unfortunatly it has not. I get a different shared key on both sides. Here is an example of my code.\n\nClient\n\n```\nparameters             = dh.generate_parameters(generator=2, key_size=1024, backend=default_backend())\nclient_private_key     = parameters.generate_private_key()\nclient_public_key      = client_private_key.public_key().public_bytes(Encoding.DER, PublicFormat.SubjectPublicKeyInfo)\n\n# Recv Server Pub key\nlength            = s.recv(2) # Prepend the length of the message\nserver_public_key = s.recv(int.from_bytes(length, \"big\"))\nprint(\"Got server public key: \" + str(server_public_key))\nserver_public_key = load_der_public_key(server_public_key, default_backend())\n\n# Send Pub key\ns.send(len(client_public_key).to_bytes(2, \"big\") + client_public_key)\n\nprint(\"Generating shared key...\")\nshared_key = client_private_key.exchange(server_public_key)\nprint(\"Our shared key!: \" + str(shared_key))\n```\n\n\nServer\n\n```\nparameters = dh.generate_parameters(generator=2, key_size=1024, backend=default_backend())\nserver_private_key   = parameters.generate_private_key()\nserver_public_key    = server_private_key.public_key().public_bytes(Encoding.DER, PublicFormat.SubjectPublicKeyInfo)\n\nnewsocket.send(len(server_public_key).to_bytes(2, \"big\") + server_public_key)\nprint(\"Sent server public key: \" + str(server_public_key))\n\nlength            = newsocket.recv(2) # Prepend the length of the message\nclient_public_key = newsocket.recv(int.from_bytes(length, \"big\"))\nclient_public_key = load_der_public_key(client_public_key, default_backend())\n\n# Send the public key to the client\nshared_key = server_private_key.exchange(client_public_key)\n\nprint(\"Our shared key is: \" + str(shared_key))\n```\n\n\nAs stated, I'm using the Python 3 Library Cryptography and use the following imports\n\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import dh\nfrom cryptography.hazmat.primitives.serialization import PublicFormat, Encoding, load_der_public_key\n```\n\n\nAlso, putting the code into one file (Without network serialization) it works! the key is the same! Here is an example of the working code\n\n```\nprint(\"SERVER: Performing DH exchange. DH 2048-bit key size\")\nparameters = dh.generate_parameters(generator=2, key_size=2048, backend=default_backend()) # Generate a 256-byte key\n\nprint(\"SERVER: Generating server private and public keys\")\nserver_private_key     = parameters.generate_private_key()\nserver_peer_public_key = server_private_key.public_key()\n\nprint(\"CLIENT: Generating private and public keys\")\nclient_private_key     = parameters.generate_private_key()\nclient_peer_public_key = client_private_key.public_key()\n\nprint(\"SERVER: Sending public key to client\")\nprint(\"CLIENT: Sending public key to server\")\n\nserver_shared_key = server_private_key.exchange(client_peer_public_key)\nclient_shared_key = client_private_key.exchange(server_peer_public_key)\nprint(\"server key is: \" + str(server_shared_key))\nprint(\"client key is: \" + str(client_shared_key))\n```\n\n\nWhat am I doing wrong when serialising or deserialising the key?\n    ", "Answer": "\r\nYour problem isn’t to do with serializing and deserializing the key, it is because you are generating different DH parameters on the server and the client. They need to be the same for Diffie Hellman to work.\n\nYou could generate the parameters on the server and send them to the client, but a better option is to use a set of predefined parameters, for example group 14 defined in RFC 3526.\n\nTo do that, change the line\n\n```\nparameters = dh.generate_parameters(generator=2, key_size=1024, backend=default_backend())\n```\n\n\nin both client and server to:\n\n```\np = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF\ng = 2\n\nparams_numbers = dh.DHParameterNumbers(p,g)\nparameters = params_numbers.parameters(default_backend())\n```\n\n\nNow both client and server will be using the same set of parameters and the key agreement will work. It will also be much faster, parameter generation is a costly process.\n\nYour code in a single file works because you only generate one set of parameters that is used by both sides of the exchange.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Good cryptography/encryption books [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                As it currently stands, this question is not a good fit for our Q&A format. We expect answers to be supported by facts, references,  or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question  can be improved and possibly reopened, visit the help center for guidance.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 11 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\nMore of a side thing I want to learn since they never really went much over it in college, and yes im sure this has been asked plenty of times but Books/Algorithms get updated. So I wanted to most updated opinions/reviews of it.\nI am less concerned about the history of it, but more concerned about actual implementation. And maybe by the end of the book implementing my own pseudo encryption algorithm.\nI recall hearing something about Crpytool being a good learning program. I don't know if that is still true or not.\nI am guessing typical encryption algorithms can be pretty much implemented in most languages right? Like MD5 in php and c?\n    ", "Answer": "\r\nhttp://www.schneier.com/book-practical.html\n\nAnd please don't use your pseudo-encryption algorithm for anything more important than your own love letters. It's probably best not to use your own implementations of standard algorithms either.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Using ASP.NET Cryptography in ASP Classic application\r\n                \r\nIt looks like I might need to port an older web application to a cloud platform (Rackspace Cloud Sites). While this would put me on the latest version of IIS, it also means that I won't be able to install any custom COM components.\n\nI use one such component for basic cryptography right now, but the Rackspace environment doesn't have anything approximating that. Then I thought of the ```\nSystem.Security.Cryptography```\n namespace in ASP.NET.\n\nThe one solution I've pictured so far would require me to POST values from my ASP Classic script to an ASP.NET page that would return an encrypted string. I'm concerned about the performance implications of this approach. Should I be?\n\nAre there any other ways to integrate the two without relying on POSTS?\n    ", "Answer": "\r\nHow frequently do you need to call the crypto functions?\n\nYour best bet in such a restricted hosting environment is probably to have a .NET webservice setup and call that via XmlHttp from the ASP page.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "pip install cryptography fail with \"error: Microsoft Visual C++ 10.0 is required.\"\r\n                \r\nTo \"install pyOpenSSL\", I need \"pip install cryptography\" first. Got below error when install the cryptography.\n\nAfter I installed the VC++ 10.0 in my PC. Still got same error.\n\nCan someone give me a suggestion that how to fix this issue?\n\nPython version: 3.3\n\nError:\n\n\n  Microsoft Visual C++ 10.0 is required. Get it with \"Microsoft Windows SDK 7.1\": www.microsoft.com/download/details.aspx?id=8279\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Audit my PHP function to generate cryptography secure passwords [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is off-topic. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it's on-topic for Stack Overflow.\r\n                \r\n                    \r\n                        Closed 10 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI wrote a function in ```\nPHP```\n to generate a random password (only 0-9a-zA-Z) for my app. The resulting password must be cryptography secure, and as random as possible. I.E. the passwords are sensitive.\n\nThe big trick I do is shuffle ```\n$possible```\n characters everytime, so even if ```\nmt_rand()```\n is not truely random, it should not be predictable.\n\nAny recommended changes or security issues in my function? Is using ```\nopenssl_random_pseudo_bytes()```\n instead of ```\nmt_rand()```\n really going to make the algorithm stronger and more secure?\n\n```\n    public function generate_random($length = 15) {\n        $random = \"\";\n        $possible = \"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        $possible = str_shuffle($possible);\n\n        $maxlength = strlen($possible);\n\n        if ($length > $maxlength) {\n            $length = $maxlength;\n        }\n\n        $i = 0;\n\n        while ($i < $length) {\n            $random .= substr($possible, mt_rand(0, $maxlength-1), 1);\n            $i++;\n        }\n\n        return $random;\n    }\n```\n\n\nThanks.\n    ", "Answer": "\r\nTo generate something really random, you have to use the random source of the operating system. After reading from this source, you need to encode the bytes to an alphabet of your choice.\n\nAn easy conversion is base64 encoding, but this will include '+' and '/' characters. To only get characters from the alphabet and digits, you need a base62 encoding, or you can simply replace those characters with other characters.\n\n```\n/**\n * Generates a random string of a given length, using the random source of\n * the operating system. The string contains only characters of this\n * alphabet: +/0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\n * @param int $length Number of characters the string should have.\n * @return string A random base64 encoded string.\n */\nfunction generateRandomBase64String($length)\n{\n  if (!defined('MCRYPT_DEV_URANDOM')) die('The MCRYPT_DEV_URANDOM source is required (PHP 5.3).');\n\n  // Generate random bytes, using the operating system's random source.\n  // Since PHP 5.3 this also uses the random source on a Windows server.\n  // Unlike /dev/random, the /dev/urandom does not block the server, if\n  // there is not enough entropy available.\n  $binaryLength = (int)($length * 3 / 4 + 1);\n  $randomBinaryString = mcrypt_create_iv($binaryLength, MCRYPT_DEV_URANDOM);\n  $randomBase64String = base64_encode($randomBinaryString);\n  return substr($randomBase64String, 0, $length);\n}\n```\n\n\nThe code is part of this class, have a look at the function ```\ngenerateRandomBase62String()```\n for a complete example.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Airflow Broken DAG error - The version of cryptography does not match the loaded shared object\r\n                \r\nAirflow 1.10.12 Seeing this error in the UI:\nBroken DAG: [/home/airflow/dags/something.py] The version of cryptography does not match the loaded shared object. This can happen if you have multiple copies of cryptography installed in your Python path. Please try creating a new virtual environment to resolve this issue. Loaded python version: 2.9.2, shared object version: b'2.9'\nThe dags compile on the machine with no errors, but these messages appear for almost all the dags.\nI have also recreated the virtualenv multiple times, but the error persists.\nAnyone seen this before?\n    ", "Answer": "\r\nTurns out that a celery host had a scheduler running that was inserting the errors in the database. Stopped the extra scheduler and the messages went away\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Unable to use specific EC_KEY operations from 'cryptography' packages openssl backend\r\n                \r\nI am trying to use the EC arithmetic operations in OpenSSL by using the ```\ncryptography```\n python package's ```\ndefault_backend```\n.\nI need to perform point multiplication, addition, etc. on the public keys that ```\ncryptography```\n uses. I am not familiar with the OpenSSL API at all, so I found this old repository which tries to do exactly what I need to do: https://github.com/tuxxy/hazmat-math\nUnfortunately, the repo above is dead and the author inactive so I don't expect an answer from them, hence my question.\nUnfortunately, when I try to execute the following code\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import ec, utils\nfrom hazmat_math import operations as ops\n\nnist256 = ec.SECP256R1()\npriv = ec.generate_private_key(nist256, default_backend())\npub = priv.public_key()\n\npub2 = ops.EC_POINT_MUL(pub, priv)\n```\n\nI get the following error:\n```\nTraceback (most recent call last):\n  File \"/home/gidavid/Documents/eVoting/test_bench/test_arithmetic.py\", line 11, in <module>\n    pub2 = ops.EC_POINT_MUL(pub, priv)\n  File \"/home/gidavid/Documents/eVoting/test_bench/venv/lib/python3.8/site-packages/hazmat_math/operations.py\", line 190, in EC_POINT_MUL\n    return _point_to_public_key(backend, group, prod)\n  File \"/home/gidavid/Documents/eVoting/test_bench/venv/lib/python3.8/site-packages/hazmat_math/utils.py\", line 53, in _point_to_public_key\n    res = backend._lib.EC_KEY_set_group(ec_key, group)\nAttributeError: module 'lib' has no attribute 'EC_KEY_set_group'\n\n```\n\nI suspected this might be to do with OpenSSL version as the EC_KEY_set_group function was deprecated in v3.0.0 as per the documentation https://www.openssl.org/docs/man3.0/man3/EC_KEY_set_public_key.html\nHowever, opening a Python shell and getting the OpenSSL version number returns:\n```\n>>> import ssl\n>>> ssl.OPENSSL_VERSION\n'OpenSSL 1.1.1f  31 Mar 2020'\n```\n\nAttempting to discern if the cryptography library is somehow using a different version of OpenSSL than my Python installation:\n```\n>>> from cryptography.hazmat.backends import default_backend\n>>> d = default_backend()\n>>> d._binding.lib.CRYPTOGRAPHY_OPENSSL_300_OR_GREATER\n1\n```\n\nwhich implies it is in fact 3.0.0 or greater, and therefore the function is deprecated.\nThis leaves me with two options by my reckoning:\n\nTry and track down the OpenSSL installation used by the cryptography package and mess with it so that I can use deprecated functions\nTry and revert it to an earlier openssl version\nTake a completely different approach to getting constant time point multiplication on EC curves\n\nAny input is greatly appreciated\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to rewrite these PHP OpenSSL calls in .NET Cryptography?\r\n                \r\nWe need to encrypt data for a third-party service. The service provides this sample code in PHP. The output of the sample code is two values - ```\n$encryptedText```\n and ```\n$aesKeyEncrypted```\n.\n```\n$plainText = 'Test payload';\n$privateKeyPem = '-----BEGIN RSA PRIVATE KEY----- ... ';\n\n$aesKey = openssl_random_pseudo_bytes(16);\n$encryptedText = openssl_encrypt($plainText, \"AES-128-ECB\", $aesKey, OPENSSL_RAW_DATA);\n\n$privateKey = openssl_pkey_get_private($privateKeyPem);\nopenssl_private_encrypt($aesKey, $aesKeyEncrypted, $privateKey);\n```\n\nHowever, our code is in .NET 6. How to do the same using .NET 6 Cryptography classes?\nI've found that I can use ```\nRandomNumberGenerator.GetBytes(16)```\n instead of ```\nopenssl_random_pseudo_bytes(16)```\n but I have no idea how to implement the rest.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Why can't openssl verify signature created by Python cryptography library?\r\n                \r\nI have created a signature of a file using the Python cryptography library as per this [1] link. This is the snippet I'm using (I've omitted the part where I serialize the signature to a file.\n\n```\n>>> from cryptography.hazmat.primitives import hashes\n>>> from cryptography.hazmat.primitives.asymmetric import padding\n>>> message = b\"A message I want to sign\"\n>>> signature = private_key.sign(\n...     message,\n...     padding.PSS(\n...         mgf=padding.MGF1(hashes.SHA256()),\n...         salt_length=padding.PSS.MAX_LENGTH\n...     ),\n...     hashes.SHA256()\n... )\n```\n\n\nProblem is that when I try to verify the signature file using the ```\nopenssl```\n CLI, it fails:\n\n```\nopenssl dgst -sha256 \\\n> -signature sig.sha256 \\\n> -verify pubkey.pem \\\n> -sigopt rsa_padding_mode:pss \\\n> -sigopt rsa_pss_saltlen:-1 \\\n> -sigopt rsa_mgf1_md:sha256 \\\n> myfile\nVerification Failure\n```\n\n\nI'm not sure what else to check here. Assuming I'm doing everything else correctly, the only thing I'm not 100% confident about is whether my ```\nopenssl```\n flags are correct. Perhaps they aren't matching the settings of the signing process done in cryptography?\n\n[1] https://cryptography.io/en/latest/hazmat/primitives/asymmetric/rsa/#signing\n\nEDIT: Fix is to either remove ```\n-sigopt rsa_pss_saltlen```\n altogether or set it to ```\n-sigopt rsa_pss_saltlen:-2```\n, which sets the salt length to be based on the PSS block structure (as per https://www.openssl.org/docs/man1.0.2/man1/pkeyutl.html).\n    ", "Answer": "\r\nI created the following sign.py script based on the Python crypto library you referenced:\n\n```\n#!/usr/bin/env python\n\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\nimport sys\nimport os\n\nwith open(\"./private.pem\", \"rb\") as key_file:\n    private_key = serialization.load_pem_private_key( key_file.read(),\n        password=None, backend=default_backend())\n\nwith open(sys.argv[1], \"r\") as file_to_sign:\n    message = file_to_sign.read()\n    message = message.encode()\n\nsignature = private_key.sign( message, padding.PSS(\n                mgf=padding.MGF1(hashes.SHA256()),\n                salt_length=padding.PSS.MAX_LENGTH), hashes.SHA256())\nsigfile = \"%s.%s\" % (os.path.splitext(sys.argv[1])[0] , \"sig\")\nwith open(sigfile, \"wb\") as to_sig_file:\n    to_sig_file.write(signature)\n```\n\n\nI then created a text file, message.txt, with your message in there and generated the signature as such:\n\n```\n./sign.py message.txt\n```\n\n\nThe output of this script is the signature in the file ```\nmessage.sig```\n\nI was able to successfully verify it using the following openssl command:\n\n```\nopenssl dgst -sha256 -verify public.pem -signature message.sig -sigopt \\\nrsa_padding_mode:pss  message.txt\nVerified OK\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Error in python cryptography module: _RSAPrivateKey' object has no attribute 'sign\r\n                \r\nIn my Python code, I'm using cryptography module. I have a private key on disk. So, from documentation, I used this example to load that key. Then use that key to sign a message. But running the program throws AttributeError: '_RSAPrivateKey' object has no attribute 'sign'\n\nI looked in to source code of serialization module and check return type of load_pem_private_key(). The code requires some understanding of Abstract Base Classes.\n\nSeeking help here to debug this issue. \n\nHere's my code\n\n```\n  1 from cryptography.hazmat.backends import default_backend\n  2 from cryptography.hazmat.primitives import hashes\n  3 from cryptography.hazmat.primitives import serialization\n  4 from cryptography.hazmat.primitives.asymmetric import padding\n  5 from cryptography.hazmat.primitives.asymmetric import utils\n  6 \n  7 from base64 import b64encode\n  8 \n  9 def test_new_crypto():\n 10     privkey = '/path/to/privkey'\n 11     with open(privkey, \"rb\") as kf:\n 12         private_key = serialization.load_pem_private_key(\n 13                 kf.read(),\n 14                 password=None,\n 15                 backend=default_backend()\n 16                 )\n 17 \n 18     message = b\"A message I want to sign\"\n 19     signature = private_key.sign(  #### Error is here\n 20             message,\n 21             padding.PSS(\n 22                 mgf=padding.MGF1(hashes.SHA256()),\n 23                 salt_length=padding.PSS.MAX_LENGTH\n 24                 ),\n 25             hashes.SHA256()\n 26             )\n 27 \n 28     return b64encode(signature)\n 29 \n 30 if __name__ == \"__main__\":\n 31     print(test_new_crypto())\n```\n\n    ", "Answer": "\r\nYou mention you are running an outdated version.\n\nUpgrading from version 1.7.1 to 2.6.1 resolves the issue.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Implementation of Elliptic Curve Cryptography in C\r\n                \r\nI'm trying to decrypt a sent set of points (kB, Pm+k.Pb) of an elliptic curve over a prime field. However, I am getting the wrong result. My guess is that something is wrong in point subtraction. Can someone please help?\n\nI have followed all the procedures for implementing ECC as described in the book, \"Guide to Elliptic Curve Cryptography\" by Darrel Hankerson, Alfred Menezes, and Scott Vanstone. According to those, I have written the code and tested the functions the add() and sclr_mult() seem to be working fine. However, I cannot seem to be able to decrypt messages properly. My suspicion is that I have messed up somewhere in the point subtraction part. This program is meant as a proof of concept and not actual implementation so I've taken the values of the a,b, and p as small numbers. I am not really concerned with the optimization of the process currently, although as soon as I get it working, I'll be looking into that. I have taken point (0,0) as the origin point and have modified the add() as such. I would really appreciate the help to make this work as well as other suggestions.\nPlease feel free to ask for the entire code. I can mail it to you for further examination. Thank you.\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n//Information about the curve and finite field\n\nint a=4;//coefficient for elliptic curve\nint b=20;//coefficient for elliptic curve\nint p=29;//prime number to provide finite field\n\nint points[1000][2];//to store a set of points satisfying the curve\n\n//Information required for Encryption and Decryption\n\n//Private Information\nint PrivKey=11;//Private Key of Receiver\n\n//Public Information\nint PubKey[2]={0,0};//Public key of Receiver\nint random=11;//Random Number required for Encoding\nint Pbase[2]={0,0};//Base point for all operations\n\n//Encrypted Point\nint Enc[4]={0,0,0,0};\n\n//Functions Used\nint * sclr_mult(int k,int point[2]);\nint * add(int A[2],int B[2]);\nint inverse(int num);\nint * encode(int m,int Pb[2],int random,int Pbase[2]);//(Message,Public Key)\nint * genKey(int X,int P[2]);//(Private Key,Base Point)\nint decode(int Enc[4],int PrivKey);//(Encrypted Message, Private key of the Receiver) Outputs Message\nvoid generate();\n\nint main()\n{\n    int *temp;\n\n    generate();\n    Pbase[0]=points[5][0];//Deciding the base point here\n    Pbase[1]=points[5][1];\n\n    temp=genKey(PrivKey,Pbase);\n    PubKey[0]=*temp;\n    PubKey[1]=*(temp+1);\n    printf(\"\\nThe Public Key is (%d,%d)\\n\",PubKey[0],PubKey[1]);\n\n    int message[2];\n    message[0]=points[5][0];\n    message[1]=points[5][1];\n    printf(\"The message point is (%d,%d)\\n\",message[0],message[1]);\n\n    int P[2];\n    temp=sclr_mult(random,Pbase);\n    P[0]=*temp;\n    P[1]=*(temp+1);\n\n    int Q[2];\n    temp=sclr_mult(random,PubKey);\n    Q[0]=*temp;\n    Q[1]=*(temp+1);\n\n    int R[2];\n    temp=add(message,Q);\n    R[0]=*temp;\n    R[1]=*(temp+1);\n\n    printf(\"The encrypted point is [(%d,%d),(%d,%d)]\\n\",P[0],P[1],R[0],R[1]);\n\n    temp=sclr_mult(PrivKey,P);\n    int O[2];\n    O[0]=*temp;\n    O[1]=p-*(temp+1);\n\n    temp=add(R,O);\n    O[0]=*temp;\n    O[1]=*(temp+1);\n    printf(\"The message point is (%d,%d)\\n\",O[0],O[1]);\n    return 0;\n}\n\nint * sclr_mult(int k,int P[2])//using LSB first algorithm\n{\n    int *temp,i;\n    int *Q = calloc(2,sizeof(int));\n    Q[0]=0;\n    Q[1]=0;\n    for(i=31;i>=0;i--)\n    {\n        if((k>>i)&1)\n            break;\n    }\n    for(int j=0;j<=i;j++)\n    {\n        if((k>>j)&1)\n        {\n            temp=add(Q,P);\n            Q[0]=*temp;\n            Q[1]=*(temp+1);\n        }\n        temp=add(P,P);\n        P[0]=*temp;\n        P[1]=*(temp+1);\n    }\n    return Q;\n}\n\nint * add(int A[2],int B[2])\n{\n    int *C = calloc(2,sizeof(int));\n    int x=0;\n    if (A[0]==0 || A[1]==0)\n    {\n        return B;\n    }\n    if (B[0]==0 || B[1]==0)\n    {\n        return A;\n    }\n    if (A[1]==(p-B[1]))\n    {\n        return C;\n    }\n    if ((A[0]==B[0]) && (A[1]==B[1]))\n    {\n        x=((3*(A[0]*A[0]))+a)*inverse(2*A[1]);\n        C[0]=((x*x)-(2*A[0]))%p;\n        C[1]=((x*(A[0]-C[0]))-A[1])%p;\n        //C[0]=((A[0]*A[0])%p+(b*inverse(A[0]*A[0]))%p)%p;//For Binary Curves\n        //C[1]=((A[0]*A[0])%p+((A[0]+(A[1]*inverse(A[0]))*C[0]))%p+(C[0])%p)%p;//For Binary Curves\n    }\n    else\n    {\n        x=(B[1]-A[1])*inverse(B[0]-A[0]);\n        C[0]=((x*x)-(A[0]+B[0]))%p;\n        C[1]=((x*(A[0]-C[0]))-A[1])%p;\n        //C[0]=((((A[1]+B[1])*inverse(A[0]+B[0]))*((A[1]+B[1])*inverse(A[0]+B[0])))%p + ((A[1]+B[1])*inverse(A[0]+B[0]))%p + A[0]%p + B[0]%p + a%p)%p;//For Binary Curves\n        //C[1]=((((A[1]+B[1])*inverse(A[0]+B[0]))*(A[0]+C[0]))+C[0]+A[1])%p;//For Binary Curves\n    }\n    if (C[0]<0)\n        C[0]=p+C[0];\n    if (C[1]<0)\n        C[1]=p+C[1];\n    return C;\n}\nint inverse(int num)\n{\n    int i=1;\n    if (num<0)\n        num=p+num;\n    for (i=1;i<p;i++)\n    {\n        if(((num*i)%p)==1)\n            break;\n    }\n    //printf(\"inverse=%d,%d\",i,num);\n    return i;\n}\n\nvoid generate()\n{\n    int rhs,lhs,i=0;//to find set of points that satisfy the elliptic curve\n    for(int x=0;x<p;x++)\n    {\n        rhs=((x*x*x)+(a*x)+b)%p;\n        for(int y=0;y<p;y++)\n        {\n            lhs=(y*y)%p;\n            if (lhs==rhs)\n            {\n                points[i][0]=x;\n                points[i][1]=y;\n                i+=1;\n            }\n        }\n    }\n    printf(\"\\nNumber of points found on the curve is %d \\n\",i);\n    for(int k=0;k<i;k++)\n    {\n        printf(\"%d(%d,%d)\\n\",(k),points[k][0],points[k][1]);\n    }\n}\n\nint * genKey(int X,int P[2])\n{\n    int *temp;\n    int *Q = calloc(2,sizeof(int));\n    temp=sclr_mult(X,P);\n    Q[0]=*temp;\n    Q[1]=*(temp+1);\n    return Q;\n}\n```\n\n\nI am not getting errors. However, I am not getting the result that I am expecting.\n    ", "Answer": "\r\nThe ```\nsclr_mult```\n method generally changes the 2nd parameter. In the current example, ```\nPbase```\n has in\n\n```\ntemp = genKey(PrivKey, Pbase); // calls sclr_mult\n```\n\n\nthe value ```\n(2,23)```\n and then in\n\n```\ntemp = sclr_mult(random, Pbase);\n```\n\n\nthe value ```\n(8,19)```\n. Since ```\nPbase```\n is the reference point on the elliptic curve, this is the cause of the wrong result. The solution can either be to pass a copy of ```\nPbase```\n or to adapt ```\nsclr_mult```\n accordingly. With this change, the current example works:\n\n```\nThe public key is                               (16,27)\nThe message point is                            (2,23)\nThe shared secret (random * PubKey) is          (6,17)\nThe encrypted point is                          [(16,27),(16,27)]\nThe shared secret (PrivKey * P) is              (6,17)\nThe inverse of the shared secret is             (6,12)\nThe decrypted message point is                  (2,23)\n```\n\n\nThe following points are also problematic, but don't cause an error in the current example:\n\n\nThe add method returns for the case ```\nA = (0,0)```\n and ```\nB != (0,0)```\n the result ```\nB```\n, which means that ```\n(0,0)```\n represents the PAI (point at infinity, see here, pages 17 - 19). ```\n(0,0)```\n is not the best choice, because there are also curves (```\nb = 0```\n) \nthat have ```\n(0,0)```\n as a regular point. For the current curve (```\nb = 7```\n), however, ```\n(0,0)```\n is not a regular point, so it can be defined as PAI.\n\nNote: If a point other than ```\n(0,0)```\n is used as PAI (e.g. ```\n(p,p)```\n), Q must be initialized in ```\nsclr_mult```\n with the point representing the PAI!\nThe add method must consider the following three cases (here, p. 20):\n\n```\nPAI + PAI = PAI   \nA + PAI = A    \nPAI + B = B\n```\n\n\nIn addition, the two cases of a vertical secant (point addition) and tangent (point doubling) must be taken into account (here, p. 3):\n\n```\n(B[0] - A[0]) % p == 0    vertical secant     \nA[1] % p == 0             vertical tangent\n```\n\n\nThe ```\nadd```\n method could be modified as follows to consider these cases:\n\n```\nint * add(int A[2], int B[2])\n{\n    int *C = (int *)calloc(2, sizeof(int));\n    int x = 0;\n\n    if (isPAI(A) && isPAI(B))  // PAI + PAI = PAI\n    {\n        return getPAI(C);\n    }\n    else if (isPAI(A))         // PAI + B = B\n    {\n        return B;\n    }\n    else if (isPAI(B))         // A + PAI = A\n    {\n        return A;\n    }\n    else if ((A[0] == B[0]) && (A[1] == B[1]))\n    {\n        // Point doubling\n\n        if (A[1] % p == 0)              // Vertical tangent\n        {\n            return getPAI(C);\n        }\n\n        // as in current code\n        // ... \n    }\n    else\n    {\n        // Point addition\n\n        if ((B[0] - A[0]) % p == 0)    // Vertical secant\n        {\n            return getPAI(C);\n        }\n\n        // as in current code\n        // ... \n    }\n\n    // as in current code\n    // ... \n}\n```\n\n\nwith\n\n```\nbool isPAI(int *point) \n{\n    return point[0] == 0 && point[1] == 0;\n}\n\nint* getPAI(int *point) \n{\n    point[0] = 0;\n    point[1] = 0;\n    return point;\n}\n```\n\nExample: ```\na = 1, b = 7, p = 17```\n, (here)\n\nPoints:\n\n```\n(1,3), (1,14), (2,0), (5,1), (5,16), (6,5), (6,12), (7,0), (8,0), (12,8), (12,9)\n```\n\n\nResult of current ```\nadd```\n method:\n\n```\n(1,3) + (1,3) = (6,5)\n(6,5) + (1,3) = (2,0)\n(2,0) + (1,3) = (1,3)\n...\n```\n\n\nResult of modified ```\nadd```\n-method:\n\n```\n(1,3) + (1,3) = (6,5)\n(6,5) + (1,3) = (2,0)\n(2,0) + (1,3) = (6,12)\n(6,12)+ (1,3) = (1,14)\n(1,14)+ (1,3) = (0,0)   // PAI\n(0,0) + (1,3) = (1,3)\n...\n```\n\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography options\r\n                \r\nMy ASP.NET MVC 4 website (hosted as an Azure web role) stores some sensitive data in a SQL Server table.  When a user begins the workflow that generates the data, I get a random key from the Rijndael implementation and store it in the session state. I use that key for round trip encryption/decryption to and from the database throughout the life of the session.  Thus, only code running in that session (or, at least, code that has access to the key stored in the session state) can decrypt the data.\n\nNow I have a need to allow the database records to hang around for a while and to access them from a different session. Since this session doesn't have access to the key stored in the previous session's state, it seems to me that my best, easiest course of action is probably to encrypt all of the data using a key that is baked into my application code.\n\nI should add that I'm trying hard to NOT use any Azure hooks so that my website can be hosted on any ASP.NET host.\n\nI have two questions:\n\n\nIs my existing scheme (storing my key in session state) secure on Azure if my session state scheme is ```\n<sessionState mode=\"StateServer\" />```\n and I am, in fact, using multiple hosts? (Please be kind... I'm still figuring out this whole ASP.NET/Azure thing. At the moment I'm using InProc session state; I haven't even tried to get the multiple host thing working yet.)\nUsing a random per-session key seems to be a stronger encryption scheme than using a single baked-in key. But, on the other hand, the whole SSL world is predicated on having all communications protected by a single private key baked into an SSL certificate. Should I be concerned about using a key baked into my code? Is there a better scheme - something akin to what I was doing using per-session keys?\n\n    ", "Answer": "\r\n1.\n\nSecuring Session State. It doesn't tell you what it's doing unfortunately, but does tell you a lot of things not to do, which should make you appropriately paranoid.\n\n2.\n\nSecuring data at rest is a really difficult problem, you are going to have to store a key, you just have to keep it as secure and separate from your data as possible. If you need to segment your data, you can have key per x (per user, whatever) that are encrypted with a master key.  The ability to rotate keys is really helpful maintaining security, so you can swap out keys overtime without consequence. The keyczar framework, which I ported to c# has a simple design for key rotation.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Java Cryptography Extensions and Unlimited Strength\r\n                \r\nI am a total cryptography novice and was looking to have a simple (ha!) ```\nAESEncryption```\n utility class that I could use for reading/writing files and string with AES keys. Something like:\n\n```\nString toEcnrypt = \"This is a secret message!\";\nAESEcnryption aes = new AESEncryption(); // 256-bit by default\nString encrypted = aes.encrypt(toEncrypt);\n\n// Do some stuff\n\nString shouldBeSameAsFirstString = aes.decrypt(encrypted);\n```\n\n\nThe idea being that every time an ```\nAESEncryption```\n is instantiated, a ```\nKeySpec```\n is generated (and can be returned by the API for subsequent storage). Here's what I cooked up after examining the code of much, much brighter people than myself (so if you see your code here, thanks!):\n\n```\npublic class AESEncryption {\n\nprivate SecretKeySpec keySpec;\n\npublic AESEncryption()\n{\n    super();\n    setKeySpec(AES256Encryption.generateAES256KeySpec());\n}\n\n// Uses 256-bit encryption by default.\npublic static SecretKeySpec generateAES256KeySpec()\n{\n    // Stack variables\n    byte[] byteArray = new byte[16];\n    SecretKey oTmpKey = null;\n    KeyGenerator oKeyGen;\n    try\n    {\n        oKeyGen = KeyGenerator.getInstance(\"AES\");\n        oKeyGen.init(256);\n        oTmpKey = oKeyGen.generateKey();\n    }\n    catch(Throwable oThrown)\n    {\n        throw new RuntimeException(oThrown);\n    }\n\n    byteArray = oTmpKey.getEncoded();\n\n    return new SecretKeySpec(byteArray, \"AES\");\n}\n\npublic String encrypt(final String p_strPlaintext)\n{\n    String strEncrypted = null;\n\n    try\n    {\n        Cipher cipher = Cipher.getInstance(\"AES\");\n        cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n        strEncrypted = Base64.encodeBase64String(cipher\n            .doFinal(p_strPlaintext.getBytes()));\n    }\n    catch(Throwable oThrown)\n    {\n        System.out.println(oThrown.getMessage());\n        throw new RuntimeException(oThrown);\n    }\n\n    return strEncrypted;\n}\n\n}\n```\n\n\nFor the Base64 En/Decoding I'm using Commons Codec - why? Because like I said I'm a crypto novice and that's the only thing I could find that seemed to get the job done!\n\nWhen I use this code:\n\n```\n// This creates a unique key spec for this instance.\nAESEncryption aes = new AESEncryption();\n\nString toEncrypt = \"blah\";\n\n// Throws a Throwable and prints the following to the console:\n// \"Illegal key size or default parameters\"\nString encrypted = aes.encrypt(toEncrypt);\n```\n\n\nI saw this question on SO where the asker had the same problem and I see that I may be missing the JCE. Knowing next to nothing about JCE, here's what I've collected:\n\n\nThe JCE is required for the AES algorithm to execute on the Java platform\nThe JCE downloads as a ZIP but really just contains two JARs\n\n\nI put these 2 JARs (```\nUS_export_policy```\n and ```\nlocal_policy```\n) on my project's build path (Eclipse) and reran the code. Again the same problem. I know the linked article references installation instructions that recommended including these JARs in the JRE, but at runtime my app should only care about finding the JARs on the classpath - it shouldn't care about where it finds them on the classpath!\n\nIs there anything I can do from inside Elcipse to make sure the JCE is available to my runtime classpath? Or am I way off base and have a bug in my code that is causing these errors?\n    ", "Answer": "\r\nYou could simply use 128 bit AES keys. They are secure enough 99% of the time. Either that or use 256 bit keys and install the unlimited strength crypto files as indicated in the readme. If you could simply put them in the classpath everybody would simply copy the contents into their own libraries and skip the whole protection. They don't contain runnable code, just resources.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Trouble with AES Cryptography (specifically encrypting with CryptoSwift and decrypting with PyCryptodome\r\n                \r\nI am currently trying to use AES cryptography to encrypt and decrypt a string that always has a length of 9 characters. What I am trying to do is to encrypt the string in swift and then decrypt that encrypted string in python. I am using AES encryption with CryptoSwift and decrypting with PyCryptodome. \n\nThis is what my function in swift looks like:\n\n```\nimport CryptoSwift\nfunc crypto_testing() {\n        print(\"Cryptography!\")\n\n        let ivString = \"0000000000000000\"\n        let keyString = \"This is a key123\"\n\n        let key = [UInt8](keyString.utf8)\n        let iv = [UInt8](ivString.utf8)\n        let stringToEncrypt = \"123456789\"\n\n\n        let enc = try! aesEncrypt(stringToEncrypt: stringToEncrypt, key: key, iv: iv)\n        print(\"ENCRYPT:\",enc)\n    }\n\n\n    func aesEncrypt(stringToEncrypt: String, key: Array<UInt8>, iv: Array<UInt8>) throws -> String {\n        let data = stringToEncrypt.data(using: String.Encoding.utf8)\n        let encrypted = try AES(key: key, blockMode: CFB(iv: iv), padding: .noPadding).encrypt((data?.bytes)!)\n        return encrypted.toHexString() //result\n    }\n```\n\n\nThe result I get from running the crypto_testing function is: \n\n```\nCryptography!\nENCRYPT: 5d02105a49e55d2ff7\n```\n\n\nFurthermore, this is what my decryption function looks like in python:\n\n```\nimport binascii\nfrom Crypto.Cipher import AES\n\nKEY = b'This is a key123'\nIV = b'0000000000000000'\nMODE = AES.MODE_CFB\n\ndef decrypt(key, iv, encrypted_text):\n    aes = AES.new(key, MODE, iv)\n    encrypted_text_bytes = binascii.a2b_hex(encrypted_text)\n    decrypted_text = aes.decrypt(encrypted_text_bytes)\n    return decrypted_text\n\ndecrypted_text = decrypt(KEY, IV, encrypted_text)\nprint(decrypted_text)\n```\n\n\nAnd the result from plugging in the encrypted message into the decrypt function like so:\n\n```\n>>> decrypt(b'This is a key123', b'0000000000000000', '5d02105a49e55d2ff7')\n\nb'1%\\xdc\\xc8\\xa0\\r\\xbd\\xb8\\xf0' \n```\n\n\nIf anyone has any clue as to what is going wrong here that would be a great help.\n    ", "Answer": "\r\nTry this:\n\n```\n\nlet stringToEncrypt = \"123456789\"\n\nvar aes: AES\n\nvar encrypted: [UInt8]\n\ndo {\n\naes = try AES(key: key, blockMode: CBC(iv: iv), padding: . noPadding)\n\n encrypted = try aes.encrypt(stringToEncrypt.bytes)\n\n}\n\nlet base64Encypted = encrypted.toBase64()```\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Secure Chat Application with Photo Tracking using SM Cryptography Framework on the Cloud\r\n                \r\nI am working on a project called \"Secure Chat Application with Photo Tracking using SM Cryptography Framework on the Cloud.\" The objective of the project is to create a secure chat application that uses SM Cryptography Framework to encrypt and decrypt messages and images. The application will also have a photo tracking feature that enables users to track the photos they send and receive.\nI am wondering if anyone can offer advice on where to start with this project. Specifically, I am interested in knowing what software tools and libraries I should use, how to integrate SM Cryptography Framework into the project, and how to set up the cloud infrastructure for hosting the application.\nAny guidance or resources on how to approach this project would be greatly appreciated. Thank you in advance for your help!\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "'/usr/bin/arm-linux-gnueabihf-gcc' Error while installing cryptography python package\r\n                \r\nI am getting an error while trying to install cryptography in a python 3.7.3 venv with latest pip(23.0.1). I have Rust version 1.56.1 installed using rustup, and have all other linux packages relevant to it installed , such as :\n```\nlibffi-dev/oldstable,now 3.2.1-9 armhf [installed]```\n\n```\nlibssl-dev/oldstable 1.1.1n-0+deb10u3 armhf```\n\n```\nlibssl1.1/oldstable 1.1.1n-0+deb10u3 armhf [upgradable from: 1.1.1d-0+deb10u5+rpt1]```\n\n```\nopenssl/oldstable 1.1.1n-0+deb10u3 armhf [upgradable from: 1.1.1d-0+deb10u5+rpt1]```\n\nThese were are the installations that were recommended for in other stackoverflow or github questions, i am still getting this error after trying to build the wheel.\n```\n          Python: 3.7.3\n          platform: Linux-4.19.118-v7l+-armv7l-with-debian-10.8\n          pip: n/a\n          setuptools: 67.6.0\n          setuptools_rust: 1.5.2\n          =============================DEBUG ASSISTANCE=============================\n\n\n      error: command '/usr/bin/arm-linux-gnueabihf-gcc' failed with exit code 1\n      [end of output]\n  \n  note: This error originates from a subprocess, and is likely not a problem with pip.\n  ERROR: Failed building wheel for cryptography\nFailed to build cryptography\n\n```\n\nPlease find additional logs below.\n```\n Copying rust artifact from /tmp/pip-install-r5nwrym0/cryptography_0b2d5b190ad44705ad9de39270ef65f2/src/rust/target/release/libcryptography_rust.so to build/lib.linux-armv7l-cpython-37/cryptography/hazmat/bindings/_rust.abi3.so\n      building '_openssl' extension\n      creating build/temp.linux-armv7l-cpython-37/build\n      creating build/temp.linux-armv7l-cpython-37/build/temp.linux-armv7l-cpython-37\n      arm-linux-gnueabihf-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -flto -fuse-linker-plugin -ffat-lto-objects -fPIC -I/home/.venv/include -I/usr/include/python3.7m -c build/temp.linux-armv7l-cpython-37/_openssl.c -o build/temp.linux-armv7l-cpython-37/build/temp.linux-armv7l-cpython-37/_openssl.o -Wconversion -Wno-error=sign-conversion\n      build/temp.linux-armv7l-cpython-37/_openssl.c:605:6: error: #error \"pyca/cryptography MUST be linked with Openssl 1.1.0 or later\"\n           #error \"pyca/cryptography MUST be linked with Openssl 1.1.0 or later\"\n            ^~~~~\n      build/temp.linux-armv7l-cpython-37/_openssl.c: In function ‘Cryptography_CRYPTO_set_mem_functions’:\n      build/temp.linux-armv7l-cpython-37/_openssl.c:980:37: warning: passing argument 1 of ‘CRYPTO_set_mem_functions’ from incompatible pointer type [-Wincompatible-pointer-types]\n           return CRYPTO_set_mem_functions(m, r, f);\n                                           ^\n      In file included from /usr/include/openssl/bio.h:69,\n                       from /usr/include/openssl/asn1.h:65,\n                       from build/temp.linux-armv7l-cpython-37/_openssl.c:632:\n      /usr/include/openssl/crypto.h:499:38: note: expected ‘void * (*)(size_t)’ {aka ‘void * (*)(unsigned int)’} but argument is of type ‘void * (*)(size_t,  const char *, int)’ {aka ‘void * (*)(unsigned int,  const char *, int)’}\n       int CRYPTO_set_mem_functions(void *(*m) (size_t), void *(*r) (void *, size_t),\n                                    ~~~~~~~~^~~~~~~~~~~\n      build/temp.linux-armv7l-cpython-37/_openssl.c:980:40: warning: passing argument 2 of ‘CRYPTO_set_mem_functions’ from incompatible pointer type [-Wincompatible-pointer-types]\n           return CRYPTO_set_mem_functions(m, r, f);\n                                              ^\n      In file included from /usr/include/openssl/bio.h:69,\n                       from /usr/include/openssl/asn1.h:65,\n                       from build/temp.linux-armv7l-cpython-37/_openssl.c:632:\n      /usr/include/openssl/crypto.h:499:59: note: expected ‘void * (*)(void *, size_t)’ {aka ‘void * (*)(void *, unsigned int)’} but argument is of type ‘void * (*)(void *, size_t,  const char *, int)’ {aka ‘void * (*)(void *, unsigned int,  const char *, int)’}\n       int CRYPTO_set_mem_functions(void *(*m) (size_t), void *(*r) (void *, size_t),\n\n```\n\n    ", "Answer": "\r\nI was able to solve the issue by installing a pre built wheel from https://www.piwheels.org/project/cryptography/, Since building the wheel was causing the issue.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to find ASN.1 components of EC key python-cryptography\r\n                \r\nI am generating a EC key using python cryptography module in this way\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import ec\nkey=ec.generate_private_key(ec.SECP256R1(), default_backend())\n```\n\nThe asn.1 structure of EC key is as follows\n```\n   ECPrivateKey ::= SEQUENCE {\n version        INTEGER { ecPrivkeyVer1(1) } (ecPrivkeyVer1),\n privateKey     OCTET STRING,\n parameters [0] ECParameters {{ NamedCurve }} OPTIONAL,\n publicKey  [1] BIT STRING OPTIONAL\n }\n```\n\nfrom https://www.rfc-editor.org/rfc/rfc5915 setion 3.\nmy question is how to get the ASN.1 components from this key. I want to convert the key object to OpenSSH private key, something like\n```\n-----BEGIN EC PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,9549ED842979FDAF5299BD7B0E25B384\n\nZ+B7I6jfgC9C03Kcq9rbWKo88mA5+YqxSFpnfRG4wkm2eseWBny62ax9Y1izGPvb\nJ7gn2eBjEph9xobNewgPfW6/3ZDw9VGeaBAYRkSolNRadyN2Su6OaT9a2gKiVQi+\nmqFeJmxsLyvew9XPkZqQIjML1d1M3T3oSA32zYX21UY=\n-----END EC PRIVATE KEY-----\n```\n\nIt is easy with handling DSA or RSA because all the ASN.1 parameters are integers in that.\nThank You in advance\n    ", "Answer": "\r\nIt's relatively easy to extract the public point from the ASN.1 sequence using pyasn1, but if you want PEM-encrypted PKCS1 (aka \"traditional OpenSSL\") then pyca/cryptography can do that quite easily:\n\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import ec\n\nbackend = default_backend()\n\nkey = ec.generate_private_key(ec.SECP256R1(), backend)\nserialized_key = key.private_bytes(\n    serialization.Encoding.PEM, \n    serialization.PrivateFormat.TraditionalOpenSSL, \n    serialization.BestAvailableEncryption(b\"my_great_password\")\n)\n```\n\n\nYou can find more information about the private_bytes method in the docs. At this time ```\nBestAvailableEncryption```\n will encrypt using ```\nAES-256-CBC```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What are some recommended learning resources for OpenSSL and cryptography? [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                \r\n                    \r\n                            \r\n                                Closed. This question is off-topic. It is not currently accepting answers.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n        \r\n            \r\n        \r\n            \r\n                \r\n                        \r\n                            \r\n                        \r\n                    Want to improve this question? Update the question so it's on-topic for Stack Overflow.\r\n                \r\n                    \r\n                        Closed 11 years ago.\r\n                    \r\n                \r\n\r\n                \r\n            \r\n        \r\n            \r\n                    \r\n                        Improve this question\r\n                    \r\n            \r\n\r\n\r\n    \r\n\r\nI need go dig in and finally learn how to use OpenSSL via command line and in addition to that I would like to get a solid foundation on general cryptography. \n\nGoogle searches so far have not been too helpful. I tend to like to find a few GOOD books and then watch some lectures/talks about a subject so I can really dive into what I'm learning so I can actually grasp all the new vernacular. \n\nSo far I bought \"Network Security with OpenSSL\" and I'm reading it but I have to admin some of the stuff is going over my head.\n\nIf your an openssl guru, what helped you get to that level?!? :D\n\nThanks,\nJason\n    ", "Answer": "\r\n\n  in addition to that I would like to get a solid foundation on general cryptography. \n\n\nIt's getting a bit old but the Handbook of Applied Cryptography is one of the best, complete, deep but not impossible to understand, resource available in a book (with pdf available, but see license for using them).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Web Cryptography API: Howto discover supported algorithms?\r\n                \r\nThe Web Cryptography API supports the usage of the browsers native cryptograhic functionality through JavaScript, for example a reliable random number generator or the possibility to use different algorithms for encryption or signing.\nThe spec lists an overview of algorithms as a starting point for implementers, but has the following editorial note added:\n\nNote: All algorithms listed should be considered as \"features at risk\", barring implementors adopting them. Their inclusion in the Editor's Draft reflects requests for their inclusion by members of the community, and are included as an exercise to ensure the robustness of the API defined in this specification.\nAs such, the list of algorithms, and the recommendations, may be significantly altered in future revisions.\n\nAs far as I understood the idea behind the specification is to provide an interface for cryptography, not write down specific algorithms (which makes totaly sense!).\nHow do I determine if a client supports a specific algorithm? It is good practice to hide implementation details, but since an algorithm has to have an so called recognized algorithm name I don't understand why you wouldn't want to expose the registered algorithms.\nStill there is no interface specified and the object where you register the algorithm is described as follows:\n\nThis specification makes use of an internal object, [[supportedAlgorithms]].\nThis internal object is not exposed to applications.\n\nThe only possibility to discover available algorithms at the current state would be to catch the NotSupportedError of the subtle interface.\nFrom my point of view the discovery is simple program flow and errors should be handled as an exception, not to implement logic.\nAny hints or suggestions? Links to proper w3c-mailinglist discussions are also appreciated.\n    ", "Answer": "\r\nSupport for an algorithm discovery interface is not planed.\n\nThe problem is discussed in length on the w3c working groups mailinglist in 2012, which brings up some of the problems, see the Threads \"RE: Strawman proposal for the low-level API - about the interoperable set of algo and algo naming\" and \"RE: Algorithm Discovery (was Re: Strawman proposal for the low-level API - about the interoperable set of algo and algo naming)\".\n\nOne point of the discussion sums up the problems with a discovery mechanism:\n\n\n  (1)    Discovery as I read the various appends, deals with the\n  algorithms not the permutations of parameters that may be allowed or\n  supported, so thus discovery of the algorithm may be successful but\n  may still fail, and thus the extra effort for discovery is overhead\n  and extra code path\n\n\nThe problem was partly again discussed with \"Bug 25985 - WebCrypto should be inter-operable\" and during a phone conference in July 2014 the working group decided to \"Resolve the problem later\" by the usage of profiles.\nThis is also mentioned in the specification:\n\n\n  In particular, we are expecting a \"browser profile\" to be created of\n  interoperable algorithms for Web browsers.\n\n\nThe idea is to create profiles for example traditional web browsers, smart tvs, etc. If a specific profile is present, it would be mandatory to support certain algorithms. This will be decided in the future after a testing phase.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography - Java\r\n                \r\nI am a newbie to site. I have folowed this post How to Encrypt or Decrypt a File in Java?\n\nand have everything functional (also following: http://www-users.york.ac.uk/~mal503/lore/pkencryption.htm and the previous stackoverflow post).\n\nThis may be a stupid question but where is the encrypted file after compiling? I cannot find it. How can I output it to either my desktop or src folder in java eclipse? I am trying to eventually turn this into an application where you can input a file at command line for encryption and then whenever you like decryption (strictly educational, for a class). Thank you for your time and help. \n\nMy Code:\n\n```\n/**\n * Utility class for encrypting/decrypting files.\n * \n */\npublic class CryptoFunction {\n    public static final int AES_Key_Size = 256;\n\n    Cipher pkCipher, aesCipher;\n    byte[] aesKey;\n    SecretKeySpec aeskeySpec;\n\n    /**\n     * Constructor: creates ciphers\n     */\n    public CryptoFunction() throws GeneralSecurityException {\n        // create RSA public key cipher\n        pkCipher = Cipher.getInstance(\"RSA\");\n        // create AES shared key cipher\n        aesCipher = Cipher.getInstance(\"AES\");\n    }\n\n    /**\n     * Creates a new AES key\n     * A random AES key is generated to encrypt files.\n     * A key size (AES_Key_Size) of 256 bits is standard for AES\n     */\n    public void makeKey() throws NoSuchAlgorithmException {\n        KeyGenerator kgen = KeyGenerator.getInstance(\"AES\");\n        kgen.init(AES_Key_Size);\n        SecretKey key = kgen.generateKey();\n        aesKey = key.getEncoded();\n        aeskeySpec = new SecretKeySpec(aesKey, \"AES\");\n    }\n\n    /**\n     * Decrypts an AES key from a file using an RSA private key\n     */\n    @SuppressWarnings(\"resource\")\n    public void loadKey(File in, File privateKeyFile) throws GeneralSecurityException, IOException {\n        // read private key to be used to decrypt the AES key\n        byte[] encodedKey = new byte[(int)privateKeyFile.length()];\n        new FileInputStream(privateKeyFile).read(encodedKey);\n\n        // create private key\n        PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(encodedKey);\n        KeyFactory kf = KeyFactory.getInstance(\"RSA\");\n        PrivateKey pk = kf.generatePrivate(privateKeySpec);\n\n        // read AES key\n        pkCipher.init(Cipher.DECRYPT_MODE, pk);\n        aesKey = new byte[AES_Key_Size/8];\n        CipherInputStream is = new CipherInputStream(new FileInputStream(in), pkCipher);\n        is.read(aesKey);\n        aeskeySpec = new SecretKeySpec(aesKey, \"AES\");\n    }\n\n    /**\n     * Encrypts the AES key to a file using an RSA public key\n     */\n    @SuppressWarnings(\"resource\")\n    public void saveKey(File out, File publicKeyFile) throws IOException, GeneralSecurityException {\n        // read public key to be used to encrypt the AES key\n        byte[] encodedKey = new byte[(int)publicKeyFile.length()];\n        new FileInputStream(publicKeyFile).read(encodedKey);\n\n        // create public key\n        X509EncodedKeySpec publicKeySpec = new X509EncodedKeySpec(encodedKey);\n        KeyFactory kf = KeyFactory.getInstance(\"RSA\");\n        PublicKey pk = kf.generatePublic(publicKeySpec);\n\n        // write AES key\n        pkCipher.init(Cipher.ENCRYPT_MODE, pk);\n        CipherOutputStream os = new CipherOutputStream(new FileOutputStream(out), pkCipher);\n        os.write(aesKey);\n        os.close();\n    }\n\n    /**\n     * Encrypts and then copies the contents of a given file.\n     */\n    public void encrypt(File in, File out) throws IOException, InvalidKeyException {\n        aesCipher.init(Cipher.ENCRYPT_MODE, aeskeySpec);\n\n        FileInputStream is = new FileInputStream(in);\n        CipherOutputStream os = new CipherOutputStream(new FileOutputStream(out), aesCipher);\n\n        copy(is, os);\n\n        os.close();\n    }\n\n    /**\n     * Decrypts and then copies the contents of a given file.\n     */\n    public void decrypt(File in, File out) throws IOException, InvalidKeyException {\n        aesCipher.init(Cipher.DECRYPT_MODE, aeskeySpec);\n\n        CipherInputStream is = new CipherInputStream(new FileInputStream(in), aesCipher);\n        FileOutputStream os = new FileOutputStream(out);\n\n        copy(is, os);\n\n        is.close();\n        os.close();\n    }\n\n    /**\n     * Copies a stream.\n     */\n    private void copy(InputStream is, OutputStream os) throws IOException {\n        int i;\n        byte[] b = new byte[1024];\n        while((i=is.read(b))!=-1) {\n            os.write(b, 0, i);\n            System.out.println(\"I is copying!\");\n\n             // read what we wrote\n             for (int j = 0; j < b.length; j++) {\n                System.out.print(\"\" + (char) is.read() + '\\n');\n             }\n        }\n    }\n\n\n    public void encryption(){\n\n    }\n\n    public void decryption(){\n\n    }\n\n    public static void main(String[] args) throws GeneralSecurityException, IOException {\n        System.out.println(\"Begin Encyption!\"); // Display the string.\n\n        CryptoFunction secure = new CryptoFunction();\n\n        // Encrypt code\n        File encryptFile = new File(\"encrypt.data\");\n        File publicKeyData = new File(\"src/publickey.der\");\n        File originalFile = new File(\"src/stufftoencrypt.txt\");\n        File secureFile = new File(\"secure.data\");\n\n        // create AES key\n        secure.makeKey();\n\n        // save AES key using public key\n        secure.saveKey(encryptFile, publicKeyData);\n\n        // save original file securely\n        secure.encrypt(originalFile, secureFile);\n\n\n        // Decrypt code\n        File encryptFile = new File(\"encrypt.data\");\n        File privateKeyFile = new File(\"privatekey\");\n        File secureFile = new File(\"secure.data\");\n        File unencryptedFile = new File(\"unencryptedFile\");\n\n        // load AES key\n        secure.loadKey(encryptFile, privateKeyFile);\n\n        // decrypt file\n        secure.decrypt(secureFile, unencryptedFile);\n        System.out.println(\"End Encryption!\"); // Display the string.\n      }\n}\n```\n\n    ", "Answer": "\r\nAssuming the code works (I didn't test it), you may need to just refresh your eclipse project. If the secure.data file is created in there, eclipse won't automatically refresh to show it. If you want to create the files in a specific location, put an absolute path into new File(...) e.g. to create in C:\\temp, use:\n\n```\nFile secureFile = new File(\"c:\\\\temp\\\\secure.data\");\nFile unencryptedFile = new File(\"c:\\\\temp\\\\unencryptedFile\");\n```\n\n\nYou can check the absolute path of these files using:\n\n```\nSystem.out.println(unencryptedFile.getAbsolutePath());\nSystem.out.println(secureFile.getAbsolutePath());\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Can't install flask-ask: error from cryptography module\r\n                \r\nThe pip command to install ```\nflask-ask```\n is simply:\n\n```\npip install flask-ask\n```\n\n\nHowever, when I run this command, I get this error:\n\n\nNow, I have heard that you can simply downgrade your pip version to circumvent this error. However, when I do this, I get an error from the cryptography module:\n\n\nI have tried fully updating pip, changing Python from 32-bit to 64-bit and I'm still unable to install ```\nflask-ask```\n.\n\nCould someone help me to get this module installed?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "When I try to usee public_key.encrypt(), it's doesn't work (Python Cryptography module)\r\n                \r\nWhen I try to use ```\npublic_key.encrypt()```\n with the Cryptography module (Python 3.7.9), it doesn't work, here is the error:\n```\nTypeError: initializer for ctype 'unsigned char *' must be a bytes or list or tuple, not str\n```\n\nHere is my code:\nMain.py\n```\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\n\nwith open(\"private.key\", \"rb\") as f:\n    private_key = serialization.load_pem_private_key(f.read(), password=None)\n\npublic_key = private_key.public_key()\n\nmessage = \"Hello, World\"\nencrypted_message = public_key.encrypt(\n    message,\n    padding.OAEP(\n        mgf=padding.MGF1(algorithm=hashes.SHA256()),\n        algorithm=hashes.SHA256(),\n        label=None\n    )\n)\n```\n\nprivate.key\n```\n-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAqVHE+UW7Uf/jnwDV1FoucTW5iLoQVEBnSkcFT3zpggofFgzO\nmfq04Ca/cTJSpc0FFp6ry3ea+dAAY5HJmd6h3d+LPNyKM5eUv+W0qQBCo0ThXsNT\nHgHMDXSyStsR2P75JenYgpvXg5m5P4f/MURHVJhZvgxRGg6l2OKp4HY/qkwdOFoB\nuXUbd92nbvrfKjBXOaZCI9vvEBgtTh9EJOmwqcxZf43s1VnCNC3XUlg755pe1xhe\nlcqcwZaSAscjWfrcCcUk3IJAbDPyE1sU8llRquXy3uEse0qVrz2QUuSedumGZ8CV\nU+l+GzqoAoVGpZgZB0/cq/pODg90hSGpHCWMCwIDAQABAoIBAENuYTe04akCc7A7\nMO1lDOHhN4aQMziafYhDSIYjhQtY5JBvgUgpZCdwxwVZuTh2sfQUNO7PL1UV1VHS\nGavB0kz+XgFbA18QmxjhblVv2RoUsHyA5XUp2g3xz5+oJy94O9kxjBxX3Dh43CHF\nE4iXXKEAG51oYlQySTJa8rSF40z6ZSzYl+3wCk7vyuau5r0MuTq4uI7ENT30yRWV\npt++GS33GrY/34x62WbjqlkIgyypY1Kl56x6fURV3pD+gxlkjAImC0WmTppCbe7T\n8uExbQc+k5HBoxCQEh3hWUtS866z0CqgBY35ZVAPnhXVjiVsIwBLnEKsK3vUVbQW\n2HaP1KECgYEA1zTg6tEhx57tw8ykkxvtmk8KvciEy+wcQ6PjSKFJv7zoGibGuR3C\n5vJlQ9/sDRPM1gQmEgbGpzvlezemAjNn7EOvympQW5Tg6pF7l6ubpRqZy3srsGDh\nnpLC7xJPdRDfgczTzVkE3XznF2fmJOKjD755czLYZkLzmNuWROUsjFcCgYEAyWor\nZiyNoFz6JoDaYhD5HPdM0j2iCMsjlmNF3WiBNko5zz4m/jz13LEKM6us/rceFNlK\nURYde6yAm2AW2W6wYyxEYW7EHZFIMu08uy0KMoBBOCOW1c8hBgpHolge17Kg1+7s\nJtPdpptf8RDCAsbluyBwwIKpedxLgxGCKocBrW0CgYBx9X5k2fmZS398f5FmlRNs\n8w4tEVHA6nbNGqvwefgjoFUIBCCXRjs/MHyPRLQq+KEvc2L1iMEJLZ6HcSBnafFO\nG0mrVkDXPi8cB4368tSoyT1HkyG/dI4E+pJfJsMMqrKweVZvFwSMhOeabVphjeHr\nJGILrpEJFcsI1r7sHK9KYQKBgDkJjta1YTn7en9y1+UTh2gzhBa5i2xQEnjhDgTg\nNk8of+x3XlV67+kaXZg6UpgjRSqESi5iQ+Ek/ZqCgJX8aYj8HTU2R+VTog2B70PW\nQmAAv/dk5K8Ro/lw6c5IhBtzI2di6o8oSkmHEIlUxIxCxQXT7volRlcTEnNAfwsK\nBmiVAoGARFenKn8dqMkSM4O5ehTUTpuIbs6OSeqNLa7uHvt93k3p4Nu19TMuzNQe\nNXaPTHcLuSK2PhkQUPM54ji27of8MI0u2TXUlIDL18BT5iYEsBS+SSRofCZHNYWJ\n3fcISWzoQC5J1Gc2ybRA4Eg35dTsk/FOVNquAmxtma4lr1PigIg=\n-----END RSA PRIVATE KEY-----\n```\n\n    ", "Answer": "\r\nAs shown in the documentation ```\nencrypt```\n takes a message as ```\nbytes```\n and not ```\nstr```\n.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Failing to install python cryptography library using pip on msys2/mingw\r\n                \r\n```\n    Collecting cryptography\n  Downloading cryptography-37.0.2.tar.gz (585 kB)\n     -------------------------------------- 585.4/585.4 kB 7.4 MB/s eta 0:00:00\n  Installing build dependencies ... error\n  error: subprocess-exited-with-error\n\n  pip subprocess to install build dependencies did not run successfully.\n  exit code: 1\n\n  [41 lines of output]\n  Collecting setuptools!=60.9.0,>=40.6.0\n    Using cached setuptools-62.3.1-py3-none-any.whl (1.2 MB)\n  Collecting wheel\n    Using cached wheel-0.37.1-py2.py3-none-any.whl (35 kB)\n  Collecting cffi>=1.12\n    Using cached cffi-1.15.0.tar.gz (484 kB)\n    Preparing metadata (setup.py): started\n    Preparing metadata (setup.py): finished with status 'error'\n    error: subprocess-exited-with-error\n\n    python setup.py egg_info did not run successfully.\n    exit code: 1\n\n    [16 lines of output]\n    Traceback (most recent call last):\n      File \"<string>\", line 2, in <module>\n      File \"<pip-setuptools-caller>\", line 34, in <module>\n      File \"C:/Users/####/AppData/Local/Temp/pip-install-myhhpkap/cffi_c72832fd79d3476b80c36655663d2237/setup.py\", line 126, in <module>\n        if sys.platform == \"win32\" and uses_msvc():\n      File \"C:/Users/####/AppData/Local/Temp/pip-install-myhhpkap/cffi_c72832fd79d3476b80c36655663d2237/setup.py\", line 105, in uses_msvc\n        return config.try_compile('#ifndef _MSC_VER\\n#error \"not MSVC\"\\n#endif')\n      File \"C:/msys64/mingw64/lib/python3.9/site-packages/setuptools/_distutils/command/config.py\", line 225, in try_compile\n        self._compile(body, headers, include_dirs, lang)\n      File \"C:/msys64/mingw64/lib/python3.9/site-packages/setuptools/_distutils/command/config.py\", line 132, in _compile\n        self.compiler.compile([src], include_dirs=include_dirs)\n      File \"C:/msys64/mingw64/lib/python3.9/site-packages/setuptools/_distutils/_msvccompiler.py\", line 327, in compile\n        self.initialize()\n      File \"C:/msys64/mingw64/lib/python3.9/site-packages/setuptools/_distutils/_msvccompiler.py\", line 218, in initialize\n        raise DistutilsPlatformError(\"--plat-name must be one of {}\"\n    distutils.errors.DistutilsPlatformError: --plat-name must be one of ('win32', 'win-amd64', 'win-arm32', 'win-arm64')\n    [end of output]\n\n    note: This error originates from a subprocess, and is likely not a problem with pip.\n  error: metadata-generation-failed\n\n  Encountered error while generating package metadata.\n\n  See above for output.\n\n  note: This is an issue with the package mentioned above, not pip.\n  hint: See above for details.\n  [end of output]\n\n  note: This error originates from a subprocess, and is likely not a problem with pip.\nerror: subprocess-exited-with-error\n\npip subprocess to install build dependencies did not run successfully.\nexit code: 1\n\nSee above for output.\n\nnote: This error originates from a subprocess, and is likely not a problem with pip.\n```\n\nPip and setuptools are both completely up to date, I have rust installed, and linked to the ```\nx86_64-pc-windows-gnu```\n toolchain, and I have the C++ tools from VS. I have even tried completely reinstalling msys2 and it still gives me the same error every single time. I have gotten this installed this way before so I know it is possible, but it was on a different machine and I didn't run into this issue. I am really at a loss as to how to get this installed so any help would be greatly appreciated.\nEdit: So after a bit more hunting and searching. I realized that there is a msys2 package for the cryptography library that you need to use instead of trying to use pip. As far as I can tell there is some sort of compilation error that results from running it in the msys2 environment instead of a windows terminal that is causing it. Here is the package I used https://packages.msys2.org/package/mingw-w64-x86_64-python3-cryptography\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Why does a Fernet encryption token always start with the same sequence? (Python Cryptography package)\r\n                \r\nI've been playing around with the Cryptography package, and the Fernet (symmetric encryption) module.\n\nWhen encrypting some text like:\n\n```\nkey = Fernet.generate_key()\nf = Fernet(key)\ntoken = f.encrypt(b\"some random text\")\n```\n\n\nThe token always starts with the same sequence of bytes like this: ```\n\"gAAAABU80.....\"```\n.\n\nWhy is this?\n    ", "Answer": "\r\nAs you can gather from reading the source code, the encrypted payload has the following structure:\n\n```\nb\"\\x80\" + struct.pack(\">Q\", current_time) + iv + ciphertext\n```\n\n\nand what you get back from ```\nencrypt```\n is the base64 encoding of the payload.\n\nThe first byte is ```\n0x80```\n, hardcoded. The following 8 bytes are a 64bit timestamp, in big-endian order. Since it's a timestamp, the most significant bytes will change slowly over time. Big-endian is ordered MSB to LSB, so those \"sticky\" bytes are the first you will encounter when reading the string.\n\nBase64 (partial) string ```\ngAAAABU80```\n encodes 54bits, which is almost 7 bytes. So, that part encodes the ```\n0x80```\n magic and the 6 MSBs of the timestamp, those that will change slower over time. Wait a few hours before encrypting a new message and you will see the header change.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cryptography RSASSA PSS signature returns not valid when check with pycrypto APIs\r\n                \r\nI'm trying to build a wrapper program around Crypto modules of python for testing and generation of test vectors for a hardware implementation. On the hardware RSASSA_PSS with SHA256 data hash and MGF1 SHA1 identifier is used.\n\nI get a valid signature response from the signature generated by pycrypto while the signature seems to be invalid in case of cryptography module.\n\nThe below implementation is for pycrpto:\n\n```\nfrom Crypto.Hash import SHA256\nfrom Crypto.Signature import PKCS1_PSS\nimport binascii\n\nstring = \"ABCD\"\nmessage = bytes.fromhex(string)\ndigest = SHA256.new()\ndigest.update(message)\nprint(digest.hexdigest())\nprivate_key = False\n\nwith open (\"RSATest_private.pem\", \"rb\") as myfile:\n    private_key = RSA.importKey(myfile.read())\n\n# Load private key and sign message\nsigner = PKCS1_PSS.new(private_key)\nsig = signer.sign(digest)\nprint(binascii.hexlify(sig))\n```\n\n\nand the below implementation is for cryptogrpahy module:\n\n```\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.asymmetric import utils\nfrom cryptography.hazmat.primitives import hashes\nimport binascii\n\ndigestAlg_obj = hashes.SHA256()\ndigest_obj = hashes.Hash(self.digestAlg_obj, backend = default_backend())\ndigest_obj.update(bytes.fromhex('ABCD'))\ndigest_bytv = digest_obj.finalize()\nprint(binascii.hexlify(sha256_data))\n\nwith open(RSATest_private.pem, \"rb\") as key_file:\n    self.prvKey_obj = serialization.load_pem_private_key(key_file.read(),password=None,backend=default_backend())\nsignature_bytv = self.prvKey_obj.sign(digest_bytv,padding.PSS(mgf = padding.MGF1(hashes.SHA1()),salt_length=padding.PSS.MAX_LENGTH),utils.Prehashed(hashes.SHA256()))\nprint(binascii.hexlify(signature_bytv))\n```\n\n\nI understand that the signatures obtained are not the same due to the randomness involved in the generation for PSS algorithm. The algorithm setting in both the cases is the same.\n\nThe HASH value from SHA256 for the data match in both the modules, but the signature generated when checked on the hardware returns invalid in case of cryptography module.\n\n \n\nIs something wrong with the parameter usage in case of cryptography module?\n\nFrom the documentation of the pycrypto module, I see that SHA1 is used for mgf1 and the salt length also equals the maximum length of the hash algorithm.\n\nSo using the same values in cryptography module should provide me a valid signature.\n\nAlso verifying the signature generated by cryptography APIs return sign invalid when checked using the corresponding public key with the pycrypto APIs.\n\nI have tried to generate signature with mgf1 with hash Alg of sha256 as well just to check with the latest predominant embedded hardware implementations but with no progress here as well.\n\nUsed python3.6, pycrypto v2.6.1 and cryptography v2.2.2\n    ", "Answer": "\r\nThe issue seems is solved :)\n\nFor anyone facing a similar issue, the default hash alg in MGF1 function in pycrypto or OPENSSL for RSASSA-PSS is SHA256 and a salt_length equal to the digest length of the data.\n\nSo changing the MGF1 algorithm to hashes.SHA256() and salt_length to 32 solved the problem.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to generate a large prime via cryptography provider?\r\n                \r\nI want to generate a 2048-bit prime number via the buildin cryptography provider in Powershell. This is the code I have so far, but testing the result via Rabin-Miller Test is telling me, that the number is NOT prime. What is wrong here?\n```\n$rsa = [System.Security.Cryptography.RSA]::Create(2048)\n$format = [System.Security.Cryptography.CngKeyBlobFormat]::GenericPrivateBlob\n$bytes = $rsa.Key.Export($format)\n\n[bigint]$prime = 0\nforeach($b in $bytes) {$prime = ($prime -shl 8) + $b}\n$prime\n```\n\nThis link tells me, that the BLOB should contain both RSA primes, but for any reason I am not able to get that info as expected: https://learn.microsoft.com/en-us/windows/win32/seccrypto/rsa-schannel-key-blobs#private-key-blobs\n    ", "Answer": "\r\nFinally I solved it after digging a bit deeper into the generic BLOB-format. The learning point here is the fact, that a 4096 RSA key includes two 2048-bit primes. One is on the last 256 bytes in the BLOB and the other prime is in the 256 bytes in front of that.\nHere is the working code:\n```\n# generating two random 2048-bit PRIME numbers:\n\ncls\n$rsa = [System.Security.Cryptography.RSA]::Create(4096)\n$key = $rsa.Key.Export('PRIVATEBLOB')\n$len = $key.Length\n\n$Pb = [byte[]]::new(256+1)\n[array]::Copy($key, $len-512, $Pb, 1, 256)\n[array]::Reverse($Pb)\n$P = [bigint]$Pb\nwrite-host $P\n\n# optionally same for the second prime in the BLOB:\n$Qb = [byte[]]::new(256+1)\n[array]::Copy($key, $len-256, $Qb, 1, 256)\n[array]::Reverse($Qb)\n$Q = [bigint]$Qb\nwrite-host $Q\n\n# optionally here the Test-Function:\nfunction Is-PrimeRabinMiller ([BigInt] $Source, [int] $Iterate)  {\n    if ($source -eq 2 -or $source -eq 3) {return $true}\n    if (($source -band 1) -eq 0) {return $false}\n\n    [BigInt]$d = $source - 1;\n    $s = 0;\n    while (($d -band 1) -eq 0) {$d = $d -shr 1; $s++;}\n\n    if ($source.ToByteArray().Length -gt 255) {\n        $sourceLength = 255\n    }\n    else {\n        $sourceLength = $source.ToByteArray().Length\n    }\n\n    $rngProv = [System.Security.Cryptography.RNGCryptoServiceProvider]::Create()\n    [Byte[]] $bytes = $sourceLength \n\n    [BigInt]$a = 0\n    foreach ($i in 1..$iterate) {          \n        do {\n            $rngProv.GetBytes($bytes)\n            $a = [BigInt]$bytes            \n        } while (($a -lt 2) -or ($a -ge ($source - 2)))                              \n     \n        [BigInt]$x = ([BigInt]::ModPow($a,$d,$source))\n        if ($x -eq 1 -or ($x -eq $source-1)) {continue}\n\n        foreach ($j in 1..($s-1)) {            \n            $x = [BigInt]::ModPow($x, 2, $source)\n            if ($x -eq 1) {return $false}\n            if ($x -eq $source-1) {break}\n        }\n        return $false\n    }\n    return $true\n}\n\nif (Is-PrimeRabinMiller $P 42) {\"P is prime!\"}\nif (Is-PrimeRabinMiller $Q 42) {\"Q is prime!\"}\n```\n\nAlso I created a small function based on the above findings, that generates a random large prime numer:\n```\nfunction get-RandomPrime {\n    Param (\n        [parameter(Mandatory=$true)]\n        [ValidateRange(256, 8192)]\n        [ValidateScript({$_ % 8 -eq 0})]\n        [int]$bitLength\n    )\n    $rsa = [System.Security.Cryptography.RSA]::Create($bitLength*2)\n    $key = $rsa.Key.Export('PRIVATEBLOB')\n    $len = $key.Length\n\n    $byteLength = [int]$bitLength/8\n    $bytes = [byte[]]::new($byteLength+1)\n    [array]::Copy($key, $len-$byteLength, $bytes, 1, $byteLength)\n    [array]::Reverse($bytes)\n    [bigint]$bytes\n}\n$prime = get-RandomPrime -bitLength 2048\nwrite-host \"`nprime (DEC):\" $prime\nwrite-host \"`nprime (HEX):\" $prime.ToString('X2').SubString(1)\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography code confusion\r\n                \r\nI'm writing the code for the one time pad in python, and I've run into an issue.\n\nI randomly choose a key from the ascii table (meaning it doesn't have to be a letter)\nAnd after I xor it with the plaintext message (which is only alphabet letters)-- I get a ciphertext that is nonsense. \nThe xor is fine, I get that the answer should be that nonsensical ascii character, but my question is- can I get the code to return back an alphabet letter?\n\nI was trying to work this out and my pseudo code so far was:\n\n```\nfor i in msglen:\n  c[i]=msg[i] ^ key[i]\n  if c[i]<65:\n     c=(c+65)%26 #add 65 to bring up to alphabet, mod 26 in case it goes over\n     c+=65       #add another 65 to make up for the modular reduction.\n```\n\n\nBut obviously I got stuck in the decryption part. \n    ", "Answer": "\r\nThe second part of your code is unnecessary and ruining your calculations.\n\nOne time pad is simple because it requires the same code for encryption and decryption, and that code is one line -\n\n```\nresult = ''.join(chr(ord(s) ^ ord(k)) for s, k in zip(message, key))\n```\n\n\nWorking with byte arrays will make that even simpler as \n\n```\nresult = [s ^ k for s, k in zip(message, key)]\n```\n\n\nSince ```\nx ^ x = 0```\n and ```\nx ^ 0 = x```\n, we can resolve that ```\ns ^ k ^ k = s```\n, so running this line will both encrypt a plaintext with the key and decrypt an encrypted text with that key (note that, weather it encrypts or decrypts depends on your view - a computer would not recognize that ```\nhj67si#s$jv38sok?g6e73```\n is probably not a plaintext).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Porting cryptography APIs from Windows 8 to Win RT\r\n                \r\nI'm trying to port code written in C# for Windows 8 to WinRT. The code uses Cryptography APIs that are in the System.Security.Cryptography namespace such as AesManaged, CryptoStream, and Rfc2898DerivedBytes. \n\nAs far as I can tell, these do not seem to be available on Windows RT? I found the API documentation(here: http://msdn.microsoft.com/en-us/library/windows/apps/br211377.aspx) and it lists a System.Security.Cryptography namespace but it doesn't include these classes. Are there equivalents/are they available under a different namespace maybe? Any advice for how to port this code if it is at all possible if the APIs are not available?\n\nThanks,\nAhmad\n    ", "Answer": "\r\nWhile some uses of .NET 4.5 Cryptography APIs can be relatively straightforward to convert to a WinRT model, many will require modification. There are a number of reasonable examples available depending on the situation that you require already published on various internet sites. Things like ```\nCryptoStream```\n may need to be changed for example into using ```\nIBuffer```\ns.\n\nThe RFC2898 for example may need to be changed to use a ```\nKeyDerivationAlgorithmProvider```\n of type ```\nKeyDerivationAlgorithmNames.Pbkdf2Sha256```\n.\n\nIt seems like the first releases of the WinRT are about building a \"core\" that is comprehensive and that more convenient APIs for using some of this functionality will come later or be provided by third parties.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Decrypting cryptography fernet encoding to check if the input is the same\r\n                \r\nSo I have a pin encoded using the cryptography fernet library, I'm trying to take input from the user and check if it is the same as the pin in the file, but I need to decrypt it to read it and I can't figure out how.\nPS. I have the pin encoded in a .key file, is that okay?\nHere is the error I'm getting\n```\nraise TypeError(\"{} must be bytes\".format(name))\nTypeError: token must be bytes\n```\n\nAnd here's my code\n```\ndef get_pin():\n    pid_input = input(\"Enter your pin :  \")\n    with open(\"PID.key\", 'r') as pid_file:\n        for line in pid_file.readlines():\n            data = line.rstrip()\n            pid = data.split()\n            pid_decoded = pid_file.read(fer.decrypt(pid)).encode()\n    if pid_input == pid_decoded:\n        pass\n    else:\n        exit()\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Java and C++ Cryptography interoperability\r\n                \r\nI have a message coming from an external company which has been encrypted with our public key using Java.\n\nSpecifically the java code performing the encryption is -\n\n```\n  //get instance of cipher using BouncyCastle cryptography provider \n  Cipher cipher = Cipher.getInstance( \"RSA/ECB/PKCS1Padding\", \"BC\"); \n\n  //initialize the cipher with the public key pulled from the X509 certificate \n  cipher.init(Cipher.ENCRYPT_MODE, publicKey); \n```\n\n\nI need to be able to decrypt this message using our private key using C/C++ on Solaris.\nI have tried using the Crypto++ library and can successfully encode decode messages just using Crypto++, but am unable to work out how to decode the message encrypted from the java side.\n\nSpecifically I tried using a RSAES_PKCS1v15_Decryptor but this does not seem to work.\n\nDoes anyone have any suggestions as to how I can perform the decryption such as\n\n\nThe required Crypto++ code (ideal)\nAlternatives to RSA/ECB/PKCS1Padding to use from the Java side\nAlternative open source C libraries I could try\nAnything else...\n\n    ", "Answer": "\r\nI managed to get this working by changing the java code to use\n\n```\nCipher cipher = Cipher.getInstance( \"RSA/NONE/PKCS1Padding\", \"BC\");\n```\n\n\nThis then matches up with RSAES_PKCS1v15_Decryptor on the Crypto++  side.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is it possible to access SCrypt using the Java Cryptography Architecture?\r\n                \r\nI'm writing an application in Java using Bouncy Castle but I still would like to write my code as portable as possible, going through the Java Cryptography Architecture. Is it possible to access the SCrypt algorithm through the JCA?\n\nIn the list of algorithms for SecretKeyFactory it's not present, it only has:\n\n\nAES\nARCFOUR\nDES\nDESede\nPBEWithAnd\nPBEWithAnd\n\n\nPBEWithMD5AndDES (PKCS5, v 1.5),\nPBEWithHmacSHA256AndAES_128 (PKCS5, v 2.0)\n\nPBKDF2WithHmacSHA1\n\n\nAnd actually, the document doesn't mention Scrypt anywhere.\n    ", "Answer": "\r\nHave you seen the other thread here on StackOverflow? That points to a mail of the BS mailing list where this is discussed.\n\nMoney Quote:\n\n\n  Scrypt isn’t exposed by the BC JCE provider\n\n\nSo if it isn't listed now in the list of available ciphers, it seems that this point is still the case.\n\nI checked the available ciphers available on Java 8 with BC 1.54.0 and these are the available secret key factory algorithms (excluding aliases):\n\n```\nSecretKeyFactory.DES\nSecretKeyFactory.DESEDE\nSecretKeyFactory.DESede\nSecretKeyFactory.PBEWITHHMACGOST3411\nSecretKeyFactory.PBEWITHHMACRIPEMD160\nSecretKeyFactory.PBEWITHHMACSHA1\nSecretKeyFactory.PBEWITHHMACSHA256\nSecretKeyFactory.PBEWITHHMACTIGER\nSecretKeyFactory.PBEWITHMD2ANDDES\nSecretKeyFactory.PBEWITHMD2ANDRC2\nSecretKeyFactory.PBEWITHMD5AND128BITAES-CBC-OPENSSL\nSecretKeyFactory.PBEWITHMD5AND192BITAES-CBC-OPENSSL\nSecretKeyFactory.PBEWITHMD5AND256BITAES-CBC-OPENSSL\nSecretKeyFactory.PBEWITHMD5ANDDES\nSecretKeyFactory.PBEWITHMD5ANDRC2\nSecretKeyFactory.PBEWITHSHA1ANDDES\nSecretKeyFactory.PBEWITHSHA1ANDRC2\nSecretKeyFactory.PBEWITHSHA256AND128BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHA256AND192BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHA256AND256BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND128BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND128BITRC2-CBC\nSecretKeyFactory.PBEWITHSHAAND128BITRC4\nSecretKeyFactory.PBEWITHSHAAND192BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND2-KEYTRIPLEDES-CBC\nSecretKeyFactory.PBEWITHSHAAND256BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND3-KEYTRIPLEDES-CBC\nSecretKeyFactory.PBEWITHSHAAND40BITRC2-CBC\nSecretKeyFactory.PBEWITHSHAAND40BITRC4\nSecretKeyFactory.PBEWITHSHAANDIDEA-CBC\nSecretKeyFactory.PBEWITHSHAANDTWOFISH-CBC\nSecretKeyFactory.PBEWithHmacSHA1AndAES_128\nSecretKeyFactory.PBEWithHmacSHA1AndAES_256\nSecretKeyFactory.PBEWithHmacSHA224AndAES_128\nSecretKeyFactory.PBEWithHmacSHA224AndAES_256\nSecretKeyFactory.PBEWithHmacSHA256AndAES_128\nSecretKeyFactory.PBEWithHmacSHA256AndAES_256\nSecretKeyFactory.PBEWithHmacSHA384AndAES_128\nSecretKeyFactory.PBEWithHmacSHA384AndAES_256\nSecretKeyFactory.PBEWithHmacSHA512AndAES_128\nSecretKeyFactory.PBEWithHmacSHA512AndAES_256\nSecretKeyFactory.PBEWithMD5AndDES\nSecretKeyFactory.PBEWithMD5AndTripleDES\nSecretKeyFactory.PBEWithSHA1AndDESede\nSecretKeyFactory.PBEWithSHA1AndRC2_128\nSecretKeyFactory.PBEWithSHA1AndRC2_40\nSecretKeyFactory.PBEWithSHA1AndRC4_128\nSecretKeyFactory.PBEWithSHA1AndRC4_40\nSecretKeyFactory.PBKDF-OPENSSL SecretKeyFactory.PBKDF2\nSecretKeyFactory.PBKDF2WITHASCII\nSecretKeyFactory.PBKDF2WithHmacSHA1\nSecretKeyFactory.PBKDF2WithHmacSHA1And8BIT\nSecretKeyFactory.PBKDF2WithHmacSHA224\nSecretKeyFactory.PBKDF2WithHmacSHA256\nSecretKeyFactory.PBKDF2WithHmacSHA384\nSecretKeyFactory.PBKDF2WithHmacSHA512\n```\n\n\nI also grepped through the other service types, no mention of scrypt there, either.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA Cryptography shows wrong result for large prime numbers\r\n                \r\nI implemented a RSA Cryptography program, using python, and it works perfectly using prime numbers with aproximally 10 digits. But when I use numbers with 25 digits or more, for example, it does not work.\nIt worked with the following keys:\n```\np = 2324731\nq = 186647\ne = 433899328297\nn = 433904066957\n```\n\nIt not worked with:\n```\np = 3673864730662357928718503\nq = 2127738717256957618781057\ne = 7817024229395103552360986476332293342120062315901\nn = 7817024229395103552360993847944520620136941797671\n```\n\nhere's the code:\ninverse (d key):\n```\n@classmethod\ndef __linearOperation(cls, a, b, mdc, i):\n\n    t = -int(a / b)\n    r = a % b\n\n    mdc.append([1, a, t, b])\n\n    if r == 1:\n        return mdc\n\n    inverseLine = cls.__linearOperation(b, r, mdc, i + 1)\n\n    s = inverseLine[i][0]\n    t = inverseLine[i][2]\n    inverseLine[i - 1][0] *= t\n    inverseLine[i - 1][2] *= t\n    inverseLine[i - 1][2] += s\n\n    inverseLine.remove(inverseLine[i])\n    return inverseLine \n\ndef __inverse(self, e, φ):\n    \n    inverseLine = self.__linearOperation(e, φ, [], 1)\n    inverse = inverseLine[0][0]\n\n    if inverse < 0:\n        return inverse + φ\n    if inverse > φ:\n        return inverse % φ\n    else:\n        return inverse\n```\n\nModular Exponentiation:\n```\n@staticmethod\ndef __QuickMod(base, exp, n):\n\n    result = 1\n    while exp > 0:\n        if exp & 1:\n            result = (result * base) % n\n        \n        base = (base ** 2) % n\n        exp = exp >> 1\n\n    return result\n```\n\nencrypt/decrypt:\n```\ndef encryptChar(self, n: int, e: int, M: int) -> int:\n    C = self.__QuickMod(M, e, n)  # C = M^e mod n\n    return C\n\ndef decryptChar(self, p: int, q: int, e: int, C: int) -> int:\n    d = self.__inverse(e, (p - 1) * (q - 1))\n    M = self.__QuickMod(C, d, p * q)  # M = C^d mod n\n    return M\n```\n\nBy trying to encrypt the number ```\n109```\n (\"m\" char in ascII), the encryptChar function returns ```\n6825028446539883496812231478440519650519629664279```\n.\nBy trying to decrypt the number above the ```\ndecryptChar```\n function should returns the number ```\n109```\n back. But that's not what happens.\nIn my conception, by using python we do not have number size restriction.\nIs there something i'm not seeing? Thank you for your help.\n    ", "Answer": "\r\nThe problem is in my inverse algorithm. I'll try to re-implement it. But using pow() function with -1 as expoent works.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How do I sign an AMP update-cache request with Python's cryptography package?\r\n                \r\nHow do I sign a URL for AMP's update-cache API using Python's cryptography package?\n    ", "Answer": "\r\nThis is the core signature logic that will determine the path and query parameters for your update-cache request. Here, domain is the actual domain for your site, not the special AMP subdomain one.\n```\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives import serialization\n\ndef sign_amp_update_cache_url(private_key: bytes, domain: str, url: str) -> str:\n    private_key = serialization.load_pem_private_key(private_key, password=None)  # or whatever your key's password is\n    message = f\"/update-cache/c/s/{domain}{url}?amp_action=flush&amp_ts={int(time.time())}\"\n    binary_signature = private_key.sign(\n        message.encode(\"UTF-8\"),\n        padding.PKCS1v15(),\n        hashes.SHA256()\n    )\n    encoded_signature = base64.b64encode(binary_signature, altchars=b\"-_\").replace(b\"=\", b\"\").decode(\"UTF-8\")\n    signed_url = f\"{message}&amp_url_signature={encoded_signature}\"\n    return signed_url\n```\n\nTo finish preparing the request, you must compute the AMP cache subdomain for your domain, get the updateCacheApiDomainSuffix from caches.json, and concatenate the AMP cache subdomain, updateCacheApiDomainSuffix, and signed AMP update cache URL from the function above. Here are Google's docs on the process with examples of what the cache URL should look like.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Simple vernam cryptography\r\n                \r\nI want to learn vernam encryption.\n\nFirst of all, can you confirm me that the algorithm is the same for encoding and decoding?\n\nI have read an exercice which say to decode this message with Pi:\n\n```\n01237 55235 31127 12189 87479 1592\n```\n\n\nI have tried vernam python pacakge and i tried this:\n\n```\npy_vernam.vernam('01237552353112712189874791592','3.141592653589793238462643383')\n```\n\n\nor\n\n```\npy_vernam.vernam('01237552353112712189874791592','31415926535897932384626433832')\n```\n\n\nBut it does not give me a readable message...\n\nThanks\n    ", "Answer": "\r\n\"can you confirm me that the algorithm is the same for encoding and decoding?\"\n\n-> first of all, we are talking about encryption not encoding (at the first step) ... the notable difference, to tell those two apart, is that there is a key involved here...\n\ndepending on which variant of vernam you are handling, encryption and decryption may be the same or not ... for the binary variant it surely is the same operation, a simple XOR\n\nif you happen to have got your fingers on the \"let's do this by hand\" or schoolbok variant, it is not, basically because it handles values mod 10 and not mod 2, leading to encryption is + ... decryption is - ... \n\nthe notation in blocks of 5 is an indication for the mod 10 variant, since with the mod 2 variant you usually just handle binary data\n\n```\n01237552353112712189874791592 Ciphertext\n31415926535897932384626433832 Key\n========================================\n70822636828325880805258368760 Text (encoded)\n```\n\n\nso finally we have to read the encoding into characters... (second step)\n\nit is up to the user of the cipher to give these numbers a meaning so when searching for your example message you can find a french page showing a substitution table... so ... let's have a look ...\n\nSubstitution table:\n\n```\nClair       A   B   C   D   E   F   G   H   I   J   K   L   M   N   O   P   Q   R   S   T   U   V   W   X   Y   Z  \nChiffré     6   38  32  4   8   30  36  34  39  31  78  72  70  76  9   79  71  58  2   0   52  50  56  54  1   59\n```\n\n\nResult:\n\n```\n70  8   2   2   6   36  8       2   8   32  58  8   0       8   0       52  58  36  8   76  0  \nM   E   S   S   A   G   E       S   E   C   R   E   T       E   T       U   R   G   E   N   T\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is it possible to access SCrypt using the Java Cryptography Architecture?\r\n                \r\nI'm writing an application in Java using Bouncy Castle but I still would like to write my code as portable as possible, going through the Java Cryptography Architecture. Is it possible to access the SCrypt algorithm through the JCA?\n\nIn the list of algorithms for SecretKeyFactory it's not present, it only has:\n\n\nAES\nARCFOUR\nDES\nDESede\nPBEWithAnd\nPBEWithAnd\n\n\nPBEWithMD5AndDES (PKCS5, v 1.5),\nPBEWithHmacSHA256AndAES_128 (PKCS5, v 2.0)\n\nPBKDF2WithHmacSHA1\n\n\nAnd actually, the document doesn't mention Scrypt anywhere.\n    ", "Answer": "\r\nHave you seen the other thread here on StackOverflow? That points to a mail of the BS mailing list where this is discussed.\n\nMoney Quote:\n\n\n  Scrypt isn’t exposed by the BC JCE provider\n\n\nSo if it isn't listed now in the list of available ciphers, it seems that this point is still the case.\n\nI checked the available ciphers available on Java 8 with BC 1.54.0 and these are the available secret key factory algorithms (excluding aliases):\n\n```\nSecretKeyFactory.DES\nSecretKeyFactory.DESEDE\nSecretKeyFactory.DESede\nSecretKeyFactory.PBEWITHHMACGOST3411\nSecretKeyFactory.PBEWITHHMACRIPEMD160\nSecretKeyFactory.PBEWITHHMACSHA1\nSecretKeyFactory.PBEWITHHMACSHA256\nSecretKeyFactory.PBEWITHHMACTIGER\nSecretKeyFactory.PBEWITHMD2ANDDES\nSecretKeyFactory.PBEWITHMD2ANDRC2\nSecretKeyFactory.PBEWITHMD5AND128BITAES-CBC-OPENSSL\nSecretKeyFactory.PBEWITHMD5AND192BITAES-CBC-OPENSSL\nSecretKeyFactory.PBEWITHMD5AND256BITAES-CBC-OPENSSL\nSecretKeyFactory.PBEWITHMD5ANDDES\nSecretKeyFactory.PBEWITHMD5ANDRC2\nSecretKeyFactory.PBEWITHSHA1ANDDES\nSecretKeyFactory.PBEWITHSHA1ANDRC2\nSecretKeyFactory.PBEWITHSHA256AND128BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHA256AND192BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHA256AND256BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND128BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND128BITRC2-CBC\nSecretKeyFactory.PBEWITHSHAAND128BITRC4\nSecretKeyFactory.PBEWITHSHAAND192BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND2-KEYTRIPLEDES-CBC\nSecretKeyFactory.PBEWITHSHAAND256BITAES-CBC-BC\nSecretKeyFactory.PBEWITHSHAAND3-KEYTRIPLEDES-CBC\nSecretKeyFactory.PBEWITHSHAAND40BITRC2-CBC\nSecretKeyFactory.PBEWITHSHAAND40BITRC4\nSecretKeyFactory.PBEWITHSHAANDIDEA-CBC\nSecretKeyFactory.PBEWITHSHAANDTWOFISH-CBC\nSecretKeyFactory.PBEWithHmacSHA1AndAES_128\nSecretKeyFactory.PBEWithHmacSHA1AndAES_256\nSecretKeyFactory.PBEWithHmacSHA224AndAES_128\nSecretKeyFactory.PBEWithHmacSHA224AndAES_256\nSecretKeyFactory.PBEWithHmacSHA256AndAES_128\nSecretKeyFactory.PBEWithHmacSHA256AndAES_256\nSecretKeyFactory.PBEWithHmacSHA384AndAES_128\nSecretKeyFactory.PBEWithHmacSHA384AndAES_256\nSecretKeyFactory.PBEWithHmacSHA512AndAES_128\nSecretKeyFactory.PBEWithHmacSHA512AndAES_256\nSecretKeyFactory.PBEWithMD5AndDES\nSecretKeyFactory.PBEWithMD5AndTripleDES\nSecretKeyFactory.PBEWithSHA1AndDESede\nSecretKeyFactory.PBEWithSHA1AndRC2_128\nSecretKeyFactory.PBEWithSHA1AndRC2_40\nSecretKeyFactory.PBEWithSHA1AndRC4_128\nSecretKeyFactory.PBEWithSHA1AndRC4_40\nSecretKeyFactory.PBKDF-OPENSSL SecretKeyFactory.PBKDF2\nSecretKeyFactory.PBKDF2WITHASCII\nSecretKeyFactory.PBKDF2WithHmacSHA1\nSecretKeyFactory.PBKDF2WithHmacSHA1And8BIT\nSecretKeyFactory.PBKDF2WithHmacSHA224\nSecretKeyFactory.PBKDF2WithHmacSHA256\nSecretKeyFactory.PBKDF2WithHmacSHA384\nSecretKeyFactory.PBKDF2WithHmacSHA512\n```\n\n\nI also grepped through the other service types, no mention of scrypt there, either.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Configure IBMJCE Cryptography lib on Oracle Server\r\n                \r\nI'm a Linux newbie, and I want to configure my oracle server' JDK to use IBM JCE cryptography provider. if it was windows I used to copy the jar file into ext folder of the ```\nJAVA_HOME/JRE/lib```\n folder and then include the provider in to ```\njava.security```\n file. But on Linux my first problem is that I can not figure where the application server (Tomcat 7) is locating java and related configuration. there is a line printed on console of Tomcat which shows ```\n/usr/bin/java```\n but there is not ```\next```\n folder neither ```\njava.security```\n there. I also have used the ```\nfind```\n command to find all ```\njava.security```\n files located on server. I used to configure all of them but the exception on my web application still remains which says can not find IBMJCE provider. even I have set up ```\nJAVA_HOME```\n variable and configured the JDK path which was being addressed by that variable but it did not work either. \nHow I can solve this problem?\n    ", "Answer": "\r\n```\n/usr/bin/java```\n will be a symbolic link to the real path.  To see where it points use ```\nls -l```\n.  On my machine this gives\n\n```\n$ ls -l /usr/bin/java\nlrwxr-xr-x  1 root  wheel  74 15 Nov 13:22 /usr/bin/java -> /System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java\n```\n\n\nNote that there may be more than one symbolic link involved, in which case use ```\nls -l```\n on each link.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Odoo16 installation Error (OpenSSL/cryptography): module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'\r\n                \r\nI have installed odoo16 on Ubuntu 20.04 using Yenthe install-script at https://github.com/Yenthe666/InstallScript\nThe result of the launch command : ```\n./odoo-bin -c /etc/odoo-server.conf```\n\nis:\n```\n    2022-11-11 15:09:01,324 23800 INFO ? odoo: addons paths: ['/odoo/odoo-server/odoo/addons', '/odoo/.local/share/Odoo/addons/16.0', '/odoo/enterprise/addons', '/odoo/odoo-server/addons']\n    2022-11-11 15:09:01,324 23800 INFO ? odoo: database: default@default:default\n    2022-11-11 15:09:01,799 23800 INFO ? odoo.addons.base.models.ir_actions_report: A package may be missing to print Data Matrix barcodes: pylibdmtx or libdmtx.\n    2022-11-11 15:09:01,811 23800 INFO ? odoo.addons.base.models.ir_actions_report: Will use the Wkhtmltopdf binary at /bin/wkhtmltopdf\n    2022-11-11 15:09:02,311 23800 CRITICAL ? odoo.modules.module: Could not load module web\n    2022-11-11 15:09:02,311 23800 CRITICAL ? odoo.modules.module: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'\n    2022-11-11 15:09:02,311 23800 ERROR ? odoo.service.server: Failed to load server-wide module `web`.\n    The `web` module is provided by the addons found in the `openerp-web` project.\n    Maybe you forgot to add those addons in your addons_path configuration.\n    Traceback (most recent call last):\n      File \"/odoo/odoo-server/odoo/service/server.py\", line 1239, in load_server_wide_modules\n        odoo.modules.module.load_openerp_module(m)\n      File \"/odoo/odoo-server/odoo/modules/module.py\", line 432, in load_openerp_module\n        __import__('odoo.addons.' + module_name)\n      File \"/odoo/odoo-server/addons/web/__init__.py\", line 4, in <module>\n        from . import controllers\n      File \"/odoo/odoo-server/addons/web/controllers/__init__.py\", line 5, in <module>\n        from . import database\n      File \"/odoo/odoo-server/addons/web/controllers/database.py\", line 24, in <module>\n        from odoo.addons.base.models.ir_qweb import render as qweb_render\n      File \"/odoo/odoo-server/odoo/addons/base/__init__.py\", line 5, in <module>\n        from . import models\n      File \"/odoo/odoo-server/odoo/addons/base/models/__init__.py\", line 21, in <module>\n        from . import ir_mail_server\n      File \"/odoo/odoo-server/odoo/addons/base/models/ir_mail_server.py\", line 19, in <module>\n        from OpenSSL import crypto as SSLCrypto\n      File \"/usr/local/lib/python3.8/dist-packages/OpenSSL/__init__.py\", line 8, in <module>\n        from OpenSSL import crypto, SSL\n      File \"/usr/local/lib/python3.8/dist-packages/OpenSSL/crypto.py\", line 1553, in <module>\n        class X509StoreFlags(object):\n      File \"/usr/local/lib/python3.8/dist-packages/OpenSSL/crypto.py\", line 1573, in X509StoreFlags\n        CB_ISSUER_CHECK = _lib.X509_V_FLAG_CB_ISSUER_CHECK\n    AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'\n    2022-11-11 15:09:02,319 23800 CRITICAL ? odoo.modules.module: Couldn't load module base\n    2022-11-11 15:09:02,319 23800 CRITICAL ? odoo.modules.module: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'\n    2022-11-11 15:09:02,319 23800 ERROR ? odoo.service.server: Failed to load server-wide module `base`.\n```\n\nUsing these recommendations: https://github.com/odoo/odoo/issues/99809 and https://github.com/odoo/odoo/pull/99829, I have already tried to change the requirements file (pyopenssl==22.0.0 and cryptography==37.0.2):\n```\n    root@localhost:/odoo/odoo-server# sudo pip install -r /odoo/odoo-server/requirements.txt\n```\n\nOutput:\n```\n    Installing collected packages: cryptography, pyopenssl\n      Attempting uninstall: cryptography\n        Found existing installation: cryptography 38.0.3\n        Uninstalling cryptography-38.0.3:\n          Successfully uninstalled cryptography-38.0.3\n      Attempting uninstall: pyopenssl\n        Found existing installation: pyOpenSSL 22.1.0\n        Uninstalling pyOpenSSL-22.1.0:\n          Successfully uninstalled pyOpenSSL-22.1.0\n    Successfully installed cryptography-37.0.2 pyopenssl-20.0.1\n```\n\nThe recommandations for Odoo15 are different: https://github.com/ForgeFlow/odoo/blob/4a7a8f32862bd7fbf1afa5c26de6d97de46eea5b/requirements.txt\nBut after re-launching odoo, the error still remains.\nAny idea please ?\n    ", "Answer": "\r\nI have eventually managed to find the compatible versions using the ones in odoo15's requirements.txt file:\n\ncryptography==2.6.1\npyopenssl==19.0.0\n\nAnd then re-install my requirements file for odoo16 on my server:\n```\nsudo pip install -r /odoo/odoo-server/requirements.txt\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to use Python Cryptography to load a der certificate without backend (or what backend to use)\r\n                \r\nFor a project I am trying to load and be able to use a certificate (that's already downloaded on the system, name known, der extention confirmed). To accomplish this I am trying to use cryptography (tried it differently but cryptography is a demand made externally).\nWhat I have done so far is follow their own documentation. Namely this:\n```\n>>> from cryptography import x509\n>>> cert = x509.load_der_x509_certificate(pem_data)\n```\n\nI have replaced pem_data with the name of the certificate. If I do this, then I get the following error:\n\nTypeError: load_der_x509_certificate() takes exactly 2 arguments (1 given)\n\nWhat I have also done to try and avoid this error is:\n```\n>>> from cryptography import x509\n>>> cert = x509.load_der_x509_certificate(pem_data, backend=None)\n```\n\nHowever, then I get the following error:\n\nAttributeError: 'NoneType' object has no attribute 'load_der_x509_certificate'\n\nI suppose None not having a use isn't too surprising, but unfortunately I can not seem to find any indication of what backend I should use anywhere in their documentation. I tried googling it and I found something about Hazmat (cryptography.hazmat.backends.default_backend()) But this comes with warnings not to use it unless I'm sure and seems to be a method, not an actual backend.\nCould someone indicate 1: why is this method not working with one argument given when their documentation explicitly states providing a backend is optional and/or 2: What backend can I use to solve the issue?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography in NodeJs (SHA-1 ?)\r\n                \r\nI am  learning about ```\nNode js```\n, I don't know how to use a ```\nCryptography```\n libary (SHA-1 ?). How can I use ```\nSHA-1```\n in ```\nNode js```\n. Here is pseudo code:\n\n```\n// Use a Base64-encoder that don't introduce line-breaks, \n// or trim the output signature afterwards.\nstring signature = Base64.encode(SHA1.digest(stringToSign));\n```\n\n    ", "Answer": "\r\nNode.js provides crypto module for you.\n\n```\nconst crypto = require('crypto');\ncrypto.createHash('sha1').update(stringToSign).digest('base64');\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What Cryptography Provider Types can Sign a Clickonce Manifest\r\n                \r\nI have a self-sign certificate for signing an Excel add-in deployment manifest. The add-in will be used on our internal network only so there is no need to pay for a third party one. When I try to build the project (Excel 2013 VSTO add-in project type in Visual Studio 2015 .NET Framework 4.6.1), I get the error \n\n\n  MSB3482: An error occurred while signing: Invalid provider type\n  specified.\n\n\nCertutil.exe reveals that the cryptography provider is Microsoft Software Key Storage Provider. If I use a test certificate (which I can only develop with but not deploy), its provider is Microsoft Strong Cryptographic Provider. With that certificate, the project builds fine.\nI found a page that says you can't use Cryptography Next Generation certificates (like Microsoft Software Key Storage Provider) but I can't seem to find this from any official (e.g. Microsoft) source. Our IT guys won't change the provider type without some more compelling evidence. Is it true?\nAlso, can you definitely generate SHA2 certificates using Microsoft Strong Cryptographic Provider?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography code confusion\r\n                \r\nI'm writing the code for the one time pad in python, and I've run into an issue.\n\nI randomly choose a key from the ascii table (meaning it doesn't have to be a letter)\nAnd after I xor it with the plaintext message (which is only alphabet letters)-- I get a ciphertext that is nonsense. \nThe xor is fine, I get that the answer should be that nonsensical ascii character, but my question is- can I get the code to return back an alphabet letter?\n\nI was trying to work this out and my pseudo code so far was:\n\n```\nfor i in msglen:\n  c[i]=msg[i] ^ key[i]\n  if c[i]<65:\n     c=(c+65)%26 #add 65 to bring up to alphabet, mod 26 in case it goes over\n     c+=65       #add another 65 to make up for the modular reduction.\n```\n\n\nBut obviously I got stuck in the decryption part. \n    ", "Answer": "\r\nThe second part of your code is unnecessary and ruining your calculations.\n\nOne time pad is simple because it requires the same code for encryption and decryption, and that code is one line -\n\n```\nresult = ''.join(chr(ord(s) ^ ord(k)) for s, k in zip(message, key))\n```\n\n\nWorking with byte arrays will make that even simpler as \n\n```\nresult = [s ^ k for s, k in zip(message, key)]\n```\n\n\nSince ```\nx ^ x = 0```\n and ```\nx ^ 0 = x```\n, we can resolve that ```\ns ^ k ^ k = s```\n, so running this line will both encrypt a plaintext with the key and decrypt an encrypted text with that key (note that, weather it encrypts or decrypts depends on your view - a computer would not recognize that ```\nhj67si#s$jv38sok?g6e73```\n is probably not a plaintext).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Android File Cryptography\r\n                \r\nHow to make encryption and decryption on an application's files in sd-card? so that i may secure the files on the sdcard and no  other person will be able to access outside of that application with out  decryption on those files??\n\nIs there any person who can give me any good example source to implement the encryption on android application?\n    ", "Answer": "\r\nI have written this program that will encrypt a file using AES and decrypt the same file. This will surely help you.\n\n```\nFileInputStream fis = new FileInputStream(new File(\"D:/Shashank/Test123.txt\"));\n        File outfile = new File(\"D:/Shashank/encTest1234.txt\");\n        int read;\n        if(!outfile.exists())\n            outfile.createNewFile();\n        File decfile = new File(\"D:/Shashank/dec123.txt\");\n        if(!decfile.exists())\n            decfile.createNewFile();\n        FileOutputStream fos = new FileOutputStream(outfile);\n        FileInputStream encfis = new FileInputStream(outfile);\n        FileOutputStream decfos = new FileOutputStream(decfile);\n        Cipher encipher = Cipher.getInstance(\"AES\");\n        Cipher decipher = Cipher.getInstance(\"AES\");\n        KeyGenerator kgen = KeyGenerator.getInstance(\"AES\");\n        SecretKey skey = kgen.generateKey();\n        encipher.init(Cipher.ENCRYPT_MODE, skey);\n        CipherInputStream cis = new CipherInputStream(fis, encipher);\n        decipher.init(Cipher.DECRYPT_MODE, skey);\n        CipherOutputStream cos = new CipherOutputStream(decfos,decipher);\n        while((read = cis.read())!=-1)\n                {\n                    fos.write((char)read);\n                    fos.flush();\n                }   \n        fos.close();\n        while((read=encfis.read())!=-1)\n        {\n            cos.write(read);\n            cos.flush();\n        }\n    cos.close();\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "RSA Cryptography in c#\r\n                \r\nSuppose an RSA algorithm created private key on two machines. Is there any possibility that both keys are the same?\n    ", "Answer": "\r\nShort answer: No. There is a theoretical possibility, but even if you create a key every second you aren't likely to get the same one twice before the sun explodes.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Why do people use bouncycastle instead of Java's built in JCE provider? What is the difference?\r\n                \r\nWhy do people use bouncycastle instead of Java Cryptography Extension? What is the difference?\n    ", "Answer": "\r\nBouncyCastle has many more cipher suites and algorithms than the default JCE provided by Sun.\n\nIn addition to that, BouncyCastle has lots of utilities for reading arcane formats like PEM and ASN.1 that no sane person would want to rewrite themselves.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to generate 4 digit cryptography random number using Python\r\n                \r\nI am generating the 4 digit random number using Python but I need to include make it cryptographically. My code is below:\n\n```\nrange_start = 10 ** (4 - 1)\nrange_end = (10 ** 4) - 1\npassword = randint(range_start, range_end)\n```\n\n\nHere I am generating the 4 digit random number but it does not include any cryptography and I need to make it cryptographically random number.\n    ", "Answer": "\r\nIf you're generating a pin code, in Python 3.6, use ```\nn = secrets.choice(range(1000, 10000))```\n; then ```\nformat(n, '04')```\n and then filter out unwanted combinations.\n\nIf you're stuck with Python 2, the ```\nrandom.SystemRandom```\n will generate cryptographically more secure random numbers; use \n\n```\nfrom random import SystemRandom\nsr = SystemRandom()\nn = sr.choice(xrange(1000, 10000))\npin = format(n, '04')\nprint(pin)\n```\n\n\nWith ```\nchoice```\n you can also prefilter the pincodes:\n\n```\nall_pins = [format(i, '04') for i in range(1000, 10000)]\npossible = [i for i in all_pins if len(set(i)) > 1]\n```\n\n\nwould filter out those whose set of digits has just one member (i.e. consist of just repeated one digit), for example.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography Decryption Problems\r\n                \r\nMy script is a password manager which uses SQLITE3. I am having problems decrypting the data which I have recieved from my database.  \n\nThe error:\n\n\n  cryptography.exceptions.InvalidSignature: Signature did not match digest,\n  raise InvalidToken,\n  cryptography.fernet.InvalidToken\n\n\ncomes up when I try to decode the data. My code is down below and I need help understanding and fixing the problem with decoding. (just focus on the find_password() function, load_key() function, and decode_data() functions)\n\n```\n#The Dependicies and Packages required for this script\nimport sqlite3 \nfrom cryptography.fernet import Fernet\n\n\ndef generate_key():\n    \"\"\"\n    Generates a key and save it into a file\n    \"\"\"\n    key = Fernet.generate_key()\n    with open(\"secret.key\", \"wb\") as key_file:\n        key_file.write(key)\n\n\ndef load_key():\n    \"\"\"\n    Loads the key named `secret.key` from the current directory.\n    \"\"\"\n    return open(\"secret.key\", \"rb\").read()\n\n\n#These are the keys for encryption\nkey = load_key()\n\nf = Fernet(key)\n\n\ndef decode_data(datas):\n    new_name = f.decrypt(datas)\n    final_name = new_name.decode()\n    return final_name \n\n\ndef create_password():\n    \"\"\"\n    This function is used for gathering the user's data about the website, their username to that site, and their password. \n    This data in then encrypted using the key generated at lines 5 and 6.\n    Finally, the data is pushed to the sql database using bind parameters so that there is no risk of sql injection attacks\n    \"\"\"\n\n    #Each of these variables asks for a input which is then encoded into bytes so that it can be encrypted.\n    #The user input is then encrypted using the keys generated on lines 5,6\n    encrypted_website = f.encrypt(input(\"What is the website that you have made a password for?>\").encode())\n    encrypted_username = f.encrypt(input(\"What is the username for the website you are making a password for?>\").encode())\n    encrypted_password = f.encrypt(input(\"What is the password for the website you are making?>\").encode())\n\n    #This is the command which uses bind parameters to insert the encrypted data into the database. The type of data being inserted is a blob\n    c.execute(\"INSERT INTO passwords (website, username, password) VALUES (?, ?, ?)\",\n          (encrypted_website, encrypted_username, encrypted_password))\n\n\ndef find_password():\n    \"\"\"\n    This function is to get the password of the website that the user expected\n    \"\"\"\n    website_name = input(\"What is the website's name for which you need a password>\")\n    c.execute(\"SELECT * FROM passwords\")\n    data = c.fetchall()\n    for row in data:\n        print(row[0])\n        name = decode_data(row[0])\n        if name == website_name:\n            password = decode_data(row[2])\n            print(f'The password to {website_name} is {password}')\n\n\ndef main():\n    go_on = True\n    while go_on:\n        direction_question = input(\"This is your password manager. Press 1 to create a new pasword, Press 2 to search for a password, or Press 3 to exit the program>\")\n        if direction_question.lower() == \"1\":\n            create_password()\n        if direction_question.lower() == \"2\":\n            find_password()\n        if direction_question.lower() == \"3\":\n            go_on = False\n        else:\n            print(\"Invalid response\")\n    db.commit()\n    db.close()\n\n\nif __name__ == \"__main__\":\n    db = sqlite3.connect('password.db')\n    c = db.cursor()\n    # generate_key()\n    #This is the code to create the table\n        # c.execute(\"\"\"CREATE TABLE passwords (\n        #                 website blob,\n        #                 username blob,\n        #                 password blob\n        #                 )\"\"\")\n    main()\n\n```\n\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Is the example proposed by Microsoft for cryptography secure enough, or should I learn more?\r\n                \r\nThis is the article published by Microsoft for encrypting/decrypting data using RSA:\nhttps://learn.microsoft.com/en-us/dotnet/standard/security/walkthrough-creating-a-cryptographic-application\nAs a relatively new person into the cryptography world and having read a comment on stackoverflow saying that cryptography should use a hybrid model, I researched that and it seems that hybrid models use AES and RSA for encryption and I was wondering if the example provided by Microsoft fits into the hybrid model since it uses both and if is constructed well enough and not just for novice devs just venturing into the world of cryptography.\nI already have a working example where an app would encode and another would decode by loading the private key file, similar to the example.\nI found an article here:\nhttps://www.codeproject.com/Tips/834977/Using-RSA-and-AES-for-File-Encryption\nHe creates signatures and manifests and I'm wondering if this is what I'm looking for is Microsoft's example generally just enough, or weak?\nPS: I removed the key container code and persistence as I don't want to persist or store my keys on the local machine, instead they are exported as standalone files to be stored in a DB maybe, so I'm not looking for opinions on that part at the moment.\n    ", "Answer": "\r\n\nand not just for novice devs just venturing into the world of cryptography\n\nWell, at least it tries to define some kind of protocol, although very sparse. It also uses CBC mode (implicitly, never a good idea) and RSA with PKCS#1 v1.5 padding for encryption. Most people would opt for OAEP if RSA is used and use an authenticated cipher such as GCM.\n\nI already have a working example where an app would encode and another would decode by loading the private key file, similar to the example.\n\nBad idea, the example is for file encryption, not for transport mode security, for which you need a secure transport protocol. Both the RSA implementation and CBC implementation are malleable, and are both susceptible to padding oracle attacks as well.\n\nI don't want to persist or store my keys on the local machine\n\nYou need to establish trust, something that is missing from the example. And to establish trust you do need to persist your keys, especially if they have been randomly generated.\n\nIn the end, asking if something is secure depends on context: you need to know what your goals are and then check if the protocol provides enough protection to achieve these goals.\nThis is also my problem with these generic examples or wrapper classes; they make no sense to me, as the generic security that they seem to provide may not fit your use case; I'd rather design a protocol specific to the use case.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography best practices for password storage in Node\r\n                \r\nI'm looking for a straightforward, secure, solution for storing a user's password using Node.  I'm a cryptography novice, but have been trying to piece a solution together from researching online.  I'm looking for validation that what I came up with is a solid solution for a web app with basic (not a bank, hospital, etc) security needs.  Here it is:\n\n```\nvar crypto = require('crypto');\nvar SALT_LENGTH = 64;\nvar KEY_LENGTH = 64;\nvar ITERATIONS = 1000;\n\nfunction createHashedPassword(plainTextPassword, cb) {\n    crypto.randomBytes(SALT_LENGTH, function (err, salt) {\n        console.time('password-hash');\n        crypto.pbkdf2(plainTextPassword, salt, ITERATIONS, KEY_LENGTH, function (err, derivedKey) {\n            console.timeEnd('password-hash');\n            return cb(null, {derivedKey: derivedKey, salt: salt, iterations: ITERATIONS});\n        });\n    });\n};\n```\n\n\n...and here are the choices I made that brought me to this point:\n\nWhat hashing algorithm to use?\n\nBased on this widely referenced article, it looks like the leading contenders are PBKDF2, bcrypt, and scrypt.  I chose PBKDF2 because it has built in support in Node.\n\nWhat salt size to use?\n\nThis stack overflow answer seemed to be the most straightforward answer I could find.  I'm still not very clear on why 64 bytes is the right salt size though.  When I google around, I get other stack exchange answers like this, but I'm not sure it applies to the Node algorithm?  Totally confused here, an explanation aimed at a novice using this Node function would be awesome.\n\nWhat key length to use?\n\nOnce again, I largely based my choice off the same answer as above, but I'm just as foggy on the basics of 'why'.  The answer says that 'it's a waste to generate keys smaller than your input, so use at least 64 bytes'.  Huh?  Once again, a practical explanation would be helpful.\n\nHow many iterations to use?\n\nFor this question, I based my choice off this stack exchange answer.  I don't understand much of it, but I did get that the algorithm is supposed to take approximately 8ms.  So, as you can see I put timers on the function, and I adjusted my iterations to get it in that ballpark on my machine.\n\nThanks!\n    ", "Answer": "\r\nThe NPM package credential handles all of these\n\nYou can see the author's write up on it in the book Programming Javascript Applications\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography in Python\r\n                \r\nWhile ```\nencoding```\n try to use this line : \n\n```\n#Add the header to the file data\n    headerdata = struct.pack(\"4s\"+\\\n                             \"I\"+\\\n    str(Header.MAX_FORMAT_LENGTH)+\"s\",header.magicnum, header.size, header.fformat)\n    filebytes = headerdata + data\n```\n\n\nBut having an error:\n\n\n  str(Header.MAX_FORMAT_LENGTH)+\"s\",header.magicnum, header.size, header.fformat)\n  struct.error: argument for 's' must be a bytes object\n\n\nWhen I'm trying to change it , like: (adding ```\nb```\n)\n\n```\n  str(Header.MAX_FORMAT_LENGTH)+b's',header.magicnum, header.size,    header.fformat)\n```\n\n\nit says:\n\n\n  str(Header.MAX_FORMAT_LENGTH)+b's',header.magicnum, header.size, header.fformat)\n  TypeError: must be str, not bytes\n\n\nhow can I solve this proble, using python 3?Thanks for helping\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cryptography -- How to include X509 extensions for \"Subject Key Identifier\" and \"Authority Key Identifier\" in a self-signed cert?\r\n                \r\nI am using the \"cryptography\" module in Python to create self-signed certificates for testing.\nI followed the examples here \"https://cryptography.io/en/latest/x509/tutorial.html\" and \"https://gist.github.com/bloodearnest/9017111a313777b9cce5\", and have the following code so far --\n```\n    def generate_selfsigned_cert(hostname, san_list=None):\n        \"\"\"Generates self signed certificate for a hostname, and optional IP addresses.\"\"\"\n        from cryptography import x509\n        from cryptography.x509.oid import NameOID\n        from cryptography.hazmat.primitives import hashes\n        from cryptography.hazmat.backends import default_backend\n        from cryptography.hazmat.primitives import serialization\n        from cryptography.hazmat.primitives.asymmetric import rsa\n        from datetime import datetime\n        from datetime import timedelta\n        import ipaddress\n\n\n        # Generate pvt key\n        key = rsa.generate_private_key(\n                public_exponent=65537,\n                key_size=2048\n                )\n        # Write key to file\n        pvt_key = self.log_directory + '/server.key.pem'\n        with open(pvt_key, 'wb') as f:\n            f.write(key.private_bytes(\n            encoding=serialization.Encoding.PEM,\n            format=serialization.PrivateFormat.TraditionalOpenSSL,\n            encryption_algorithm=serialization.NoEncryption(),\n            ))\n\n        # Create cert\n        subject = issuer = x509.Name([\n            x509.NameAttribute(NameOID.COMMON_NAME, hostname),\n            x509.NameAttribute(NameOID.COUNTRY_NAME, 'X'),\n            x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, 'X'),\n            x509.NameAttribute(NameOID.LOCALITY_NAME, 'X'),\n            x509.NameAttribute(NameOID.ORGANIZATION_NAME, 'X'),\n            x509.NameAttribute(NameOID.ORGANIZATIONAL_UNIT_NAME, 'X'),\n            x509.NameAttribute(NameOID.EMAIL_ADDRESS, 'X')\n        ])\n\n        # best practice seem to be to include the hostname in the SAN, which *SHOULD* mean COMMON_NAME is ignored.\n        alt_names = [x509.DNSName(hostname)]\n\n        # allow addressing by IP, for when you don't have real DNS (common in most testing scenarios)\n        if san_list:\n            for addr in san_list:\n                # openssl wants DNSnames for ips...\n                alt_names.append(x509.DNSName(addr))\n                # ... whereas golang's crypto/tls is stricter, and needs IPAddresses\n                # note: older versions of cryptography do not understand ip_address objects\n                alt_names.append(x509.IPAddress(ipaddress.ip_address(addr)))\n\n        san = x509.SubjectAlternativeName(alt_names)\n\n        # path_len=0 means this cert can only sign itself, not other certs.\n        basic_contraints = x509.BasicConstraints(ca=True, path_length=0)\n        key_usage = x509.KeyUsage(digital_signature=True, key_encipherment=True, key_cert_sign=True,\n                                  key_agreement=False, content_commitment=False, data_encipherment=False,\n                                  crl_sign=False, encipher_only=False, decipher_only=False)\n        extended_key_usage = x509.ExtendedKeyUsage([x509.oid.ExtendedKeyUsageOID.SERVER_AUTH])\n        subject_key = x509.SubjectKeyIdentifier(digest=key.public_key())\n        authority_key = x509.AuthorityKeyIdentifier(key_identifier=key.public_key(), authority_cert_issuer=None, authority_cert_serial_number=None)**\n\n        cert = x509.CertificateBuilder()\\\n            .subject_name(subject)\\\n            .issuer_name(issuer)\\\n            .public_key(key.public_key())\\\n            .serial_number(x509.random_serial_number())\\\n            .not_valid_before(datetime.utcnow())\\\n            .not_valid_after(datetime.utcnow() + timedelta(days=10 * 365))\\\n            .add_extension(basic_contraints, False)\\\n            .add_extension(san, False)\\\n            .add_extension(key_usage, True)\\\n            .add_extension(extended_key_usage, False)\\\n            .sign(key, hashes.SHA256())\n        **  .add_extension(subject_key, False)\n            .add_extension(authority_key, False)**\n\n        # Write cert to file\n        server_cert = self.log_directory + '/server.cert.pem'\n        with open(server_cert, 'wb') as f:\n            f.write(cert.public_bytes(encoding=serialization.Encoding.PEM))\n```\n\nWhen I run this, I get an error --\n```\n> File\n> \"/teams/subhish/pyuniti/projects/sqa/scripts/BSL/TC_31v03_03_01_02_01_ASCG_configuration_and_bring_up.py\",\n> line 219, in generate_selfsigned_cert\n>     x509.CertificateBuilder()   File \"/venvs/subhish/lib/python3.8/site-packages/cryptography/x509/base.py\",\n> line 723, in sign\n>     return backend.create_x509_certificate(self, private_key, algorithm)   File\n> \"/venvs/subhish/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/backend.py\",\n> line 1035, in create_x509_certificate\n>     self._create_x509_extensions(   File \"/venvs/subhish/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/backend.py\",\n> line 1141, in _create_x509_extensions\n>     x509_extension = self._create_x509_extension(handlers, extension)   File\n> \"/venvs/subhish/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/backend.py\",\n> line 1182, in _create_x509_extension\n>     ext_struct = encode(self, extension.value)   File \"/venvs/subhish/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/encode_asn1.py\",\n> line 393, in _encode_subject_key_identifier\n>     return _encode_asn1_str_gc(backend, ski.digest)   File \"/venvs/subhish/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/encode_asn1.py\",\n> line 74, in _encode_asn1_str_gc\n>     s = _encode_asn1_str(backend, data)   File \"/venvs/subhish/lib/python3.8/site-packages/cryptography/hazmat/backends/openssl/encode_asn1.py\",\n> line 54, in _encode_asn1_str\n>     res = backend._lib.ASN1_OCTET_STRING_set(s, data, len(data)) TypeError: object of type '_RSAPublicKey' has no len()\n```\n\nThe documentation says this --\n```\ndigest    \nType:   bytes    \nThe binary value of the identifier. An alias of key_identifier.\n```\n\nBut I can't figure out how to generate the key_identifier with python/cryptography. It is my understanding this value needs to be generated from the public_key as per RFC5280 (4.2.1.2, 4.2.1.1) from the private_key.\nIn the end I want to generate a certificate with the following X509 extensions --\n```\nX509v3 extensions:\n            X509v3 Subject Key Identifier:\n                CA:38:62:01:AA:0D:AA:EC:18:55:E4:A6:93:36:32:F5:97:F2:5F:88\n            X509v3 Authority Key Identifier:\n                keyid:CA:38:62:01:AA:0D:AA:EC:18:55:E4:A6:93:36:32:F5:97:F2:5F:88\n            X509v3 Basic Constraints:\n                CA:TRUE, pathlen:0\n            X509v3 Key Usage: critical\n                Digital Signature, Key Encipherment, Certificate Sign\n            X509v3 Extended Key Usage:\n                TLS Web Server Authentication\n            X509v3 Subject Alternative Name:\n                DNS:abcd.xyz.net\n```\n\nAny help would be greatly appreciated. Thanks - Subhish\n    ", "Answer": "\r\nSubjectKeyIdentifier and AuthorityKeyIdentifier do not take the public key in their constructors. If you want to construct a typical identifier via the public key then you should use AuthorityKeyIdentifier.from_issuer_public_key and SubjectKeyIdentifier.from_public_key.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Chat client-server with file transfer and hybrid cryptography\r\n                \r\nI'm trying to realize a chat client-server (in local) that permits to exchange text and files. I utilize ```\njava.security```\n and ```\njava.crypto```\n to implement hybrid cryptography (and the tool Swing).\nI exchange text in a serialized way (using ```\nObjectInputStream```\n and ```\nObjectOutputStream```\n), inserting it (after I crypted it with an apposite function) in ```\nbyte[]```\n format in Message (that is an object that i created and that is effectively exchanged between sockets):\n\n```\n import java.io.Serializable;\n\n public class Message implements Serializable{ \n private static final long serialVersionUID = 1L;\n byte[] data;\n\n Message(byte[] data){ \n    this.data = data;\n  }\n\n byte[] getData(){\n    return data;\n  }\n }\n```\n\n\nChat works fine until I exchange only ```\nMessage```\n. Now I'm trying to implement file transfer (first I tried to implement file transfer from server to client, without cryptography), therefor I took a file \"selectedFile\" with FileChoser and I sent it to the client thanks ```\nObjectOutputStream```\n's method ```\nwriteObject(selectedFile)```\n. On the client side I recognized if the object that is arrived is ```\nFile```\n or ```\nMessage```\n with:\n\n```\nclass ListenFromServer extends Thread{\n\n   public void run(){\n   while(true){\n\n        try{\n\n      if((Message.class.isInstance(sInput.readObject()))==true){ //I verify if the recived object belongs to Message class\n        m=(Message) sInput.readObject();//sInput is an instance of ObjectInputStream class, connected to client socket's InputeStream\n        decryptMessage(m.getData()); //function that decrypts the content of m and inserts the result in a String that after I append in a text area\n         }\n          else\n          {\n              File recivedFile= (File) sInput.readObject();\n              File saveFile=new File(path+\"/\"+ recivedFile.getName());\n              save(recivedFile,saveFile);//function that insert the recived file in a specific folder \n             System.out.println(\"file ricevuto\");\n          }\n\n        } catch (ClassNotFoundException ex) {\n           System.out.println(\"INFO: Classe non trovata durante la lettura dell'oggetto Messaggio: \" + ex.getMessage() + \"\\n\");\n\n        } catch(IOException e){\n           System.out.println(\"Connection closed\");\n           break;\n        }\n        catch(NullPointerException ne){\n        ne.printStackTrace();\n        ne.getCause();\n           System.out.println(\"Errore\"+ ne.getMessage());\n        }\n```\n\n\nThe problem is that file is recived by the client only clicking twice server's \"sendFile\" button , moreover now this problem regards also the action of sending text to client, because client receives ```\nMessage```\n object only when I send it twice (I use two different methods to send a ```\nMessage```\n object and a ```\nFile```\n object).\n\nThis problem doesn't occur when I eliminate instruction:\n\n```\nif((Message.class.isInstance(sInput.readObject()))==true){\n  ...\n}\n```\n\n\nI ask you how to overcome this problem, or if there is a better way to distinguish File and Message objects in reception.\n    ", "Answer": "\r\nYou're actually reading two objects in sequence, not one.\n\n```\nsInput.readObject()\n```\n\n\nThis is an order to read an object. You give this twice in sequence, so that's two requests to reads different objects.\n\nTo fix this, just read the object once, test the type of the object, and cast it when appropriate:\n\n```\nObject inputObject = sInput.readObject();     // Read the object once\nif (inputObject instanceof Message) {         // If the object is a message\n  Message m = (Message) inputObject;          //   cast as a Message\n  ...                                         //   use the Message m\n} else if (inputObject instanceof File) {     // else if it's a file\n  File f = (File) inputObject;                //   cast as a File\n  ...                                         //   use the File f\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Identifying cryptography cipher [closed]\r\n                    \r\n            \r\n        \r\n            \r\n                    \r\n                        \r\n                    \r\n                \r\n                    \r\n                            \r\n                                This question is unlikely to help any future visitors; it is only relevant to a small geographic area, a specific moment in time,  or an extraordinarily narrow situation that is not generally applicable to the worldwide audience of the internet. For help making  this question more broadly applicable, visit the help center.\r\n                                \r\n                            \r\n                    \r\n                \r\n            \r\n                Closed 11 years ago.\r\n        \r\n\r\n\r\n    \r\n\r\n```\n009327A0   /$  53                PUSH EBX\n009327A1   |.  55                PUSH EBP\n009327A2   |.  56                PUSH ESI\n009327A3   |.  8BF0              MOV ESI,EAX\n009327A5   |.  8B56 04           MOV EDX,DWORD PTR DS:[ESI+4]\n009327A8   |.  8B4424 10         MOV EAX,DWORD PTR SS:[ESP+10]                                                       ;  yo3.009331A3\n009327AC   |.  57                PUSH EDI\n009327AD   |.  8B3E              MOV EDI,DWORD PTR DS:[ESI]\n009327AF   |.  8B4F 44           MOV ECX,DWORD PTR DS:[EDI+44]\n009327B2   |.  3308              XOR ECX,DWORD PTR DS:[EAX]\n009327B4   |.  8BC1              MOV EAX,ECX\n009327B6   |.  C1E8 10           SHR EAX,10\n009327B9   |.  25 FF000000       AND EAX,0FF\n009327BE   |.  8B8482 00040000   MOV EAX,DWORD PTR DS:[EDX+EAX*4+400]\n009327C5   |.  8BD9              MOV EBX,ECX\n009327C7   |.  C1EB 18           SHR EBX,18\n009327CA   |.  03049A            ADD EAX,DWORD PTR DS:[EDX+EBX*4]\n009327CD   |.  8BD9              MOV EBX,ECX\n009327CF   |.  C1EB 08           SHR EBX,8\n009327D2   |.  81E3 FF000000     AND EBX,0FF\n009327D8   |.  33849A 00080000   XOR EAX,DWORD PTR DS:[EDX+EBX*4+800]\n009327DF   |.  8BD9              MOV EBX,ECX\n009327E1   |.  81E3 FF000000     AND EBX,0FF\n009327E7   |.  03849A 000C0000   ADD EAX,DWORD PTR DS:[EDX+EBX*4+C00]\n009327EE   |.  8B5C24 18         MOV EBX,DWORD PTR SS:[ESP+18]\n009327F2   |.  3347 40           XOR EAX,DWORD PTR DS:[EDI+40]\n009327F5   |.  3303              XOR EAX,DWORD PTR DS:[EBX]\n009327F7   |.  8BD8              MOV EBX,EAX\n009327F9   |.  C1EB 10           SHR EBX,10\n009327FC   |.  81E3 FF000000     AND EBX,0FF\n00932802   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n00932809   |.  8BE8              MOV EBP,EAX\n0093280B   |.  C1ED 18           SHR EBP,18\n0093280E   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n00932811   |.  8BE8              MOV EBP,EAX\n00932813   |.  C1ED 08           SHR EBP,8\n00932816   |.  81E5 FF000000     AND EBP,0FF\n0093281C   |.  339CAA 00080000   XOR EBX,DWORD PTR DS:[EDX+EBP*4+800]\n00932823   |.  8BE8              MOV EBP,EAX\n00932825   |.  81E5 FF000000     AND EBP,0FF\n0093282B   |.  039CAA 000C0000   ADD EBX,DWORD PTR DS:[EDX+EBP*4+C00]\n00932832   |.  335F 3C           XOR EBX,DWORD PTR DS:[EDI+3C]\n00932835   |.  33CB              XOR ECX,EBX\n00932837   |.  8BD9              MOV EBX,ECX\n00932839   |.  C1EB 10           SHR EBX,10\n0093283C   |.  81E3 FF000000     AND EBX,0FF\n00932842   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n00932849   |.  8BE9              MOV EBP,ECX\n0093284B   |.  C1ED 18           SHR EBP,18\n0093284E   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n00932851   |.  8BE9              MOV EBP,ECX\n00932853   |.  C1ED 08           SHR EBP,8\n00932856   |.  81E5 FF000000     AND EBP,0FF\n0093285C   |.  339CAA 00080000   XOR EBX,DWORD PTR DS:[EDX+EBP*4+800]\n00932863   |.  8BE9              MOV EBP,ECX\n00932865   |.  81E5 FF000000     AND EBP,0FF\n0093286B   |.  039CAA 000C0000   ADD EBX,DWORD PTR DS:[EDX+EBP*4+C00]\n00932872   |.  335F 38           XOR EBX,DWORD PTR DS:[EDI+38]\n00932875   |.  33C3              XOR EAX,EBX\n00932877   |.  8BD8              MOV EBX,EAX\n00932879   |.  C1EB 10           SHR EBX,10\n0093287C   |.  81E3 FF000000     AND EBX,0FF\n00932882   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n00932889   |.  8BE8              MOV EBP,EAX\n0093288B   |.  C1ED 18           SHR EBP,18\n0093288E   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n00932891   |.  8BE8              MOV EBP,EAX\n00932893   |.  C1ED 08           SHR EBP,8\n00932896   |.  81E5 FF000000     AND EBP,0FF\n0093289C   |.  339CAA 00080000   XOR EBX,DWORD PTR DS:[EDX+EBP*4+800]\n009328A3   |.  8BE8              MOV EBP,EAX\n009328A5   |.  81E5 FF000000     AND EBP,0FF\n009328AB   |.  039CAA 000C0000   ADD EBX,DWORD PTR DS:[EDX+EBP*4+C00]\n009328B2   |.  335F 34           XOR EBX,DWORD PTR DS:[EDI+34]\n009328B5   |.  33CB              XOR ECX,EBX\n009328B7   |.  8BD9              MOV EBX,ECX\n009328B9   |.  C1EB 10           SHR EBX,10\n009328BC   |.  81E3 FF000000     AND EBX,0FF\n009328C2   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n009328C9   |.  8BE9              MOV EBP,ECX\n009328CB   |.  C1ED 18           SHR EBP,18\n009328CE   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n009328D1   |.  8BE9              MOV EBP,ECX\n009328D3   |.  C1ED 08           SHR EBP,8\n009328D6   |.  81E5 FF000000     AND EBP,0FF\n009328DC   |.  339CAA 00080000   XOR EBX,DWORD PTR DS:[EDX+EBP*4+800]\n009328E3   |.  8BE9              MOV EBP,ECX\n009328E5   |.  81E5 FF000000     AND EBP,0FF\n009328EB   |.  039CAA 000C0000   ADD EBX,DWORD PTR DS:[EDX+EBP*4+C00]\n009328F2   |.  8BF2              MOV ESI,EDX\n009328F4   |.  335F 30           XOR EBX,DWORD PTR DS:[EDI+30]\n009328F7   |.  33C3              XOR EAX,EBX\n009328F9   |.  8BD8              MOV EBX,EAX\n009328FB   |.  C1EB 10           SHR EBX,10\n009328FE   |.  81E3 FF000000     AND EBX,0FF\n00932904   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n0093290B   |.  8BE8              MOV EBP,EAX\n0093290D   |.  C1ED 18           SHR EBP,18\n00932910   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n00932913   |.  8BE8              MOV EBP,EAX\n00932915   |.  C1ED 08           SHR EBP,8\n00932918   |.  81E5 FF000000     AND EBP,0FF\n0093291E   |.  339CAA 00080000   XOR EBX,DWORD PTR DS:[EDX+EBP*4+800]\n00932925   |.  8BE8              MOV EBP,EAX\n00932927   |.  81E5 FF000000     AND EBP,0FF\n0093292D   |.  039CAA 000C0000   ADD EBX,DWORD PTR DS:[EDX+EBP*4+C00]\n00932934   |.  335F 2C           XOR EBX,DWORD PTR DS:[EDI+2C]\n00932937   |.  33CB              XOR ECX,EBX\n00932939   |.  8BD9              MOV EBX,ECX\n0093293B   |.  C1EB 10           SHR EBX,10\n0093293E   |.  81E3 FF000000     AND EBX,0FF\n00932944   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n0093294B   |.  8BE9              MOV EBP,ECX\n0093294D   |.  C1ED 18           SHR EBP,18\n00932950   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n00932953   |.  8BE9              MOV EBP,ECX\n00932955   |.  C1ED 08           SHR EBP,8\n00932958   |.  81E5 FF000000     AND EBP,0FF\n0093295E   |.  339CAA 00080000   XOR EBX,DWORD PTR DS:[EDX+EBP*4+800]\n00932965   |.  8BE9              MOV EBP,ECX\n00932967   |.  81E5 FF000000     AND EBP,0FF\n0093296D   |.  039CAA 000C0000   ADD EBX,DWORD PTR DS:[EDX+EBP*4+C00]\n00932974   |.  335F 28           XOR EBX,DWORD PTR DS:[EDI+28]\n00932977   |.  33C3              XOR EAX,EBX\n00932979   |.  8BD8              MOV EBX,EAX\n0093297B   |.  C1EB 10           SHR EBX,10\n0093297E   |.  81E3 FF000000     AND EBX,0FF\n00932984   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n0093298B   |.  8BE8              MOV EBP,EAX\n0093298D   |.  C1ED 18           SHR EBP,18\n00932990   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n00932993   |.  8BE8              MOV EBP,EAX\n00932995   |.  C1ED 08           SHR EBP,8\n00932998   |.  81E5 FF000000     AND EBP,0FF\n0093299E   |.  339CAA 00080000   XOR EBX,DWORD PTR DS:[EDX+EBP*4+800]\n009329A5   |.  8BE8              MOV EBP,EAX\n009329A7   |.  81E5 FF000000     AND EBP,0FF\n009329AD   |.  039CAA 000C0000   ADD EBX,DWORD PTR DS:[EDX+EBP*4+C00]\n009329B4   |.  335F 24           XOR EBX,DWORD PTR DS:[EDI+24]\n009329B7   |.  33CB              XOR ECX,EBX\n009329B9   |.  8BD9              MOV EBX,ECX\n009329BB   |.  C1EB 10           SHR EBX,10\n009329BE   |.  81E3 FF000000     AND EBX,0FF\n009329C4   |.  8B9C9A 00040000   MOV EBX,DWORD PTR DS:[EDX+EBX*4+400]\n009329CB   |.  8BE9              MOV EBP,ECX\n009329CD   |.  C1ED 18           SHR EBP,18\n009329D0   |.  031CAA            ADD EBX,DWORD PTR DS:[EDX+EBP*4]\n009329D3   |.  8BD1              MOV EDX,ECX\n009329D5   |.  C1EA 08           SHR EDX,8\n009329D8   |.  81E2 FF000000     AND EDX,0FF\n009329DE   |.  339C96 00080000   XOR EBX,DWORD PTR DS:[ESI+EDX*4+800]\n009329E5   |.  8BD1              MOV EDX,ECX\n009329E7   |.  81E2 FF000000     AND EDX,0FF\n009329ED   |.  039C96 000C0000   ADD EBX,DWORD PTR DS:[ESI+EDX*4+C00]\n009329F4   |.  335F 20           XOR EBX,DWORD PTR DS:[EDI+20]\n009329F7   |.  33C3              XOR EAX,EBX\n009329F9   |.  8BD0              MOV EDX,EAX\n009329FB   |.  C1EA 10           SHR EDX,10\n009329FE   |.  81E2 FF000000     AND EDX,0FF\n00932A04   |.  8B9496 00040000   MOV EDX,DWORD PTR DS:[ESI+EDX*4+400]\n00932A0B   |.  8BD8              MOV EBX,EAX\n00932A0D   |.  C1EB 18           SHR EBX,18\n00932A10   |.  03149E            ADD EDX,DWORD PTR DS:[ESI+EBX*4]\n00932A13   |.  8BD8              MOV EBX,EAX\n00932A15   |.  C1EB 08           SHR EBX,8\n00932A18   |.  81E3 FF000000     AND EBX,0FF\n00932A1E   |.  33949E 00080000   XOR EDX,DWORD PTR DS:[ESI+EBX*4+800]\n00932A25   |.  8BD8              MOV EBX,EAX\n00932A27   |.  81E3 FF000000     AND EBX,0FF\n00932A2D   |.  03949E 000C0000   ADD EDX,DWORD PTR DS:[ESI+EBX*4+C00]\n00932A34   |.  3357 1C           XOR EDX,DWORD PTR DS:[EDI+1C]\n00932A37   |.  33CA              XOR ECX,EDX\n00932A39   |.  8BD1              MOV EDX,ECX\n00932A3B   |.  C1EA 10           SHR EDX,10\n00932A3E   |.  81E2 FF000000     AND EDX,0FF\n00932A44   |.  8B9496 00040000   MOV EDX,DWORD PTR DS:[ESI+EDX*4+400]\n00932A4B   |.  8BD9              MOV EBX,ECX\n00932A4D   |.  C1EB 18           SHR EBX,18\n00932A50   |.  03149E            ADD EDX,DWORD PTR DS:[ESI+EBX*4]\n00932A53   |.  8BD9              MOV EBX,ECX\n00932A55   |.  C1EB 08           SHR EBX,8\n00932A58   |.  81E3 FF000000     AND EBX,0FF\n00932A5E   |.  33949E 00080000   XOR EDX,DWORD PTR DS:[ESI+EBX*4+800]\n00932A65   |.  8BD9              MOV EBX,ECX\n00932A67   |.  81E3 FF000000     AND EBX,0FF\n00932A6D   |.  03949E 000C0000   ADD EDX,DWORD PTR DS:[ESI+EBX*4+C00]\n00932A74   |.  3357 18           XOR EDX,DWORD PTR DS:[EDI+18]\n00932A77   |.  33C2              XOR EAX,EDX\n00932A79   |.  8BD0              MOV EDX,EAX\n00932A7B   |.  C1EA 10           SHR EDX,10\n00932A7E   |.  81E2 FF000000     AND EDX,0FF\n00932A84   |.  8B9496 00040000   MOV EDX,DWORD PTR DS:[ESI+EDX*4+400]\n00932A8B   |.  8BD8              MOV EBX,EAX\n00932A8D   |.  C1EB 18           SHR EBX,18\n00932A90   |.  03149E            ADD EDX,DWORD PTR DS:[ESI+EBX*4]\n00932A93   |.  8BD8              MOV EBX,EAX\n00932A95   |.  C1EB 08           SHR EBX,8\n00932A98   |.  81E3 FF000000     AND EBX,0FF\n00932A9E   |.  33949E 00080000   XOR EDX,DWORD PTR DS:[ESI+EBX*4+800]\n00932AA5   |.  8BD8              MOV EBX,EAX\n00932AA7   |.  81E3 FF000000     AND EBX,0FF\n00932AAD   |.  03949E 000C0000   ADD EDX,DWORD PTR DS:[ESI+EBX*4+C00]\n00932AB4   |.  3357 14           XOR EDX,DWORD PTR DS:[EDI+14]\n00932AB7   |.  33CA              XOR ECX,EDX\n00932AB9   |.  8BD1              MOV EDX,ECX\n00932ABB   |.  C1EA 10           SHR EDX,10\n00932ABE   |.  81E2 FF000000     AND EDX,0FF\n00932AC4   |.  8B9496 00040000   MOV EDX,DWORD PTR DS:[ESI+EDX*4+400]\n00932ACB   |.  8BD9              MOV EBX,ECX\n00932ACD   |.  C1EB 18           SHR EBX,18\n00932AD0   |.  03149E            ADD EDX,DWORD PTR DS:[ESI+EBX*4]\n00932AD3   |.  8BD9              MOV EBX,ECX\n00932AD5   |.  C1EB 08           SHR EBX,8\n00932AD8   |.  81E3 FF000000     AND EBX,0FF\n00932ADE   |.  33949E 00080000   XOR EDX,DWORD PTR DS:[ESI+EBX*4+800]\n00932AE5   |.  8BD9              MOV EBX,ECX\n00932AE7   |.  81E3 FF000000     AND EBX,0FF\n00932AED   |.  03949E 000C0000   ADD EDX,DWORD PTR DS:[ESI+EBX*4+C00]\n00932AF4   |.  3357 10           XOR EDX,DWORD PTR DS:[EDI+10]\n00932AF7   |.  33C2              XOR EAX,EDX\n00932AF9   |.  8BD0              MOV EDX,EAX\n00932AFB   |.  C1EA 10           SHR EDX,10\n00932AFE   |.  81E2 FF000000     AND EDX,0FF\n00932B04   |.  8B9496 00040000   MOV EDX,DWORD PTR DS:[ESI+EDX*4+400]\n00932B0B   |.  8BD8              MOV EBX,EAX\n00932B0D   |.  C1EB 18           SHR EBX,18\n00932B10   |.  03149E            ADD EDX,DWORD PTR DS:[ESI+EBX*4]\n00932B13   |.  8BD8              MOV EBX,EAX\n00932B15   |.  C1EB 08           SHR EBX,8\n00932B18   |.  81E3 FF000000     AND EBX,0FF\n00932B1E   |.  33949E 00080000   XOR EDX,DWORD PTR DS:[ESI+EBX*4+800]\n00932B25   |.  8BD8              MOV EBX,EAX\n00932B27   |.  81E3 FF000000     AND EBX,0FF\n00932B2D   |.  03949E 000C0000   ADD EDX,DWORD PTR DS:[ESI+EBX*4+C00]\n00932B34   |.  3357 0C           XOR EDX,DWORD PTR DS:[EDI+C]\n00932B37   |.  33CA              XOR ECX,EDX\n00932B39   |.  8BD1              MOV EDX,ECX\n00932B3B   |.  C1EA 10           SHR EDX,10\n00932B3E   |.  81E2 FF000000     AND EDX,0FF\n00932B44   |.  8B9496 00040000   MOV EDX,DWORD PTR DS:[ESI+EDX*4+400]\n00932B4B   |.  8BD9              MOV EBX,ECX\n00932B4D   |.  C1EB 18           SHR EBX,18\n00932B50   |.  03149E            ADD EDX,DWORD PTR DS:[ESI+EBX*4]\n00932B53   |.  8BD9              MOV EBX,ECX\n00932B55   |.  C1EB 08           SHR EBX,8\n00932B58   |.  81E3 FF000000     AND EBX,0FF\n00932B5E   |.  33949E 00080000   XOR EDX,DWORD PTR DS:[ESI+EBX*4+800]\n00932B65   |.  8BD9              MOV EBX,ECX\n00932B67   |.  81E3 FF000000     AND EBX,0FF\n00932B6D   |.  03949E 000C0000   ADD EDX,DWORD PTR DS:[ESI+EBX*4+C00]\n00932B74   |.  3357 08           XOR EDX,DWORD PTR DS:[EDI+8]\n00932B77   |.  33C2              XOR EAX,EDX\n00932B79   |.  8BD0              MOV EDX,EAX\n00932B7B   |.  C1EA 10           SHR EDX,10\n00932B7E   |.  81E2 FF000000     AND EDX,0FF\n00932B84   |.  8B9496 00040000   MOV EDX,DWORD PTR DS:[ESI+EDX*4+400]\n00932B8B   |.  8BD8              MOV EBX,EAX\n00932B8D   |.  C1EB 18           SHR EBX,18\n00932B90   |.  03149E            ADD EDX,DWORD PTR DS:[ESI+EBX*4]\n00932B93   |.  8BD8              MOV EBX,EAX\n00932B95   |.  C1EB 08           SHR EBX,8\n00932B98   |.  81E3 FF000000     AND EBX,0FF\n00932B9E   |.  33949E 00080000   XOR EDX,DWORD PTR DS:[ESI+EBX*4+800]\n00932BA5   |.  8BD8              MOV EBX,EAX\n00932BA7   |.  81E3 FF000000     AND EBX,0FF\n00932BAD   |.  03949E 000C0000   ADD EDX,DWORD PTR DS:[ESI+EBX*4+C00]\n00932BB4   |.  3357 04           XOR EDX,DWORD PTR DS:[EDI+4]\n00932BB7   |.  33CA              XOR ECX,EDX\n00932BB9   |.  8B17              MOV EDX,DWORD PTR DS:[EDI]\n00932BBB   |.  33D0              XOR EDX,EAX\n00932BBD   |.  8B4424 14         MOV EAX,DWORD PTR SS:[ESP+14]\n00932BC1   |.  5F                POP EDI                                                                             ;  14D70138\n00932BC2   |.  5E                POP ESI                                                                             ;  14D70138\n00932BC3   |.  8910              MOV DWORD PTR DS:[EAX],EDX\n00932BC5   |.  8B5424 10         MOV EDX,DWORD PTR SS:[ESP+10]                                                       ;  yo3.009331A3\n00932BC9   |.  5D                POP EBP                                                                             ;  14D70138\n00932BCA   |.  890A              MOV DWORD PTR DS:[EDX],ECX\n00932BCC   |.  5B                POP EBX                                                                             ;  14D70138\n00932BCD   \\.  C2 0800           RETN 8\n```\n\n\nso I found that using ollydbg , well first I thought this cipher could be ```\nXTEA```\n but ```\nXTEA```\n does not do ```\nAND```\n on the plain text , so I thought I may post this cipher here maybe someone Identify it and tell me wither it's an existing cipher or this is a custom cipher and I need to write it based on this asm code. thanks.\n    ", "Answer": "\r\nThis is just the encryption (or decryption) round, it would help to see the initialization function. But it smells like Blowfish. From Wikipedia: \n\n\n  Blowfish has a 64-bit block size [...] The algorithm keeps two subkey\n  arrays: the 18-entry P-array and four 256-entry S-boxes. The S-boxes\n  accept 8-bit input and produce 32-bit output. One entry of the P-array\n  is used every round, and after the final round, each half of the data\n  block is XORed with one of the two remaining unused P-entries.\n\n\nAnd here's how the code looks after running it through the Hex-Rays decompiler and creating some structures:\n\n```\nunsigned int *__userpurge sub_9327A0<eax>(ctx *context<eax>, unsigned int *a2, unsigned int *a3)\n{\n  xor_tbl1_t *sboxes; // edx@1\n  unsigned int *parray; // edi@1\n  unsigned int v6; // ecx@1\n  unsigned int v7; // eax@1\n  unsigned int v8; // ecx@1\n  int v9; // eax@1\n  int v10; // ecx@1\n  int v11; // eax@1\n  int v12; // ecx@1\n  int v13; // eax@1\n  int v14; // ecx@1\n  int v15; // eax@1\n  int v16; // ecx@1\n  int v17; // eax@1\n  int v18; // ecx@1\n  int v19; // eax@1\n  int v20; // ecx@1\n  int v21; // eax@1\n  int v22; // ecx@1\n  int v23; // edx@1\n  unsigned int *result; // eax@1\n\n  sboxes = context->p_sboxes;\n  parray = context->p_parray;\n  v6 = *a2 ^ context->p_parray[17];\n  v7 = *a3 ^ context->p_parray[16] ^ (sboxes->S3[(unsigned __int8)v6]\n                                    + (sboxes->S2[(unsigned __int16)v6 >> 8] ^ (sboxes->S0[v6 >> 24]\n                                                                              + sboxes->S1[((*a2 ^ context->p_parray[17]) >> 16) & 0xFF])));\n  v8 = context->p_parray[15] ^ (sboxes->S3[(unsigned __int8)v7]\n                              + (sboxes->S2[(unsigned __int16)v7 >> 8] ^ (sboxes->S0[v7 >> 24]\n                                                                        + sboxes->S1[(v7 >> 16) & 0xFF]))) ^ v6;\n  v9 = context->p_parray[14] ^ (sboxes->S3[(unsigned __int8)v8]\n                              + (sboxes->S2[(unsigned __int16)v8 >> 8] ^ (sboxes->S0[v8 >> 24]\n                                                                        + sboxes->S1[(v8 >> 16) & 0xFF]))) ^ v7;\n  v10 = context->p_parray[13] ^ (sboxes->S3[(unsigned __int8)v9]\n                               + (sboxes->S2[(unsigned __int16)v9 >> 8] ^ (sboxes->S0[(unsigned int)v9 >> 24]\n                                                                         + sboxes->S1[((unsigned int)v9 >> 16) & 0xFF]))) ^ v8;\n  v11 = parray[12] ^ (sboxes->S3[(unsigned __int8)v10]\n                    + (sboxes->S2[(unsigned __int16)v10 >> 8] ^ (sboxes->S0[(unsigned int)v10 >> 24]\n                                                               + sboxes->S1[((unsigned int)v10 >> 16) & 0xFF]))) ^ v9;\n  v12 = parray[11] ^ (sboxes->S3[(unsigned __int8)v11]\n                    + (sboxes->S2[(unsigned __int16)v11 >> 8] ^ (sboxes->S0[(unsigned int)v11 >> 24]\n                                                               + sboxes->S1[((unsigned int)v11 >> 16) & 0xFF]))) ^ v10;\n  v13 = parray[10] ^ (sboxes->S3[(unsigned __int8)v12]\n                    + (sboxes->S2[(unsigned __int16)v12 >> 8] ^ (sboxes->S0[(unsigned int)v12 >> 24]\n                                                               + sboxes->S1[((unsigned int)v12 >> 16) & 0xFF]))) ^ v11;\n  v14 = parray[9] ^ (sboxes->S3[(unsigned __int8)v13]\n                   + (sboxes->S2[(unsigned __int16)v13 >> 8] ^ (sboxes->S0[(unsigned int)v13 >> 24]\n                                                              + sboxes->S1[((unsigned int)v13 >> 16) & 0xFF]))) ^ v12;\n  v15 = parray[8] ^ (sboxes->S3[(unsigned __int8)v14]\n                   + (sboxes->S2[(unsigned __int16)v14 >> 8] ^ (sboxes->S0[(unsigned int)v14 >> 24]\n                                                              + sboxes->S1[((unsigned int)v14 >> 16) & 0xFF]))) ^ v13;\n  v16 = parray[7] ^ (sboxes->S3[(unsigned __int8)v15]\n                   + (sboxes->S2[(unsigned __int16)v15 >> 8] ^ (sboxes->S0[(unsigned int)v15 >> 24]\n                                                              + sboxes->S1[((unsigned int)v15 >> 16) & 0xFF]))) ^ v14;\n  v17 = parray[6] ^ (sboxes->S3[(unsigned __int8)v16]\n                   + (sboxes->S2[(unsigned __int16)v16 >> 8] ^ (sboxes->S0[(unsigned int)v16 >> 24]\n                                                              + sboxes->S1[((unsigned int)v16 >> 16) & 0xFF]))) ^ v15;\n  v18 = parray[5] ^ (sboxes->S3[(unsigned __int8)v17]\n                   + (sboxes->S2[(unsigned __int16)v17 >> 8] ^ (sboxes->S0[(unsigned int)v17 >> 24]\n                                                              + sboxes->S1[((unsigned int)v17 >> 16) & 0xFF]))) ^ v16;\n  v19 = parray[4] ^ (sboxes->S3[(unsigned __int8)v18]\n                   + (sboxes->S2[(unsigned __int16)v18 >> 8] ^ (sboxes->S0[(unsigned int)v18 >> 24]\n                                                              + sboxes->S1[((unsigned int)v18 >> 16) & 0xFF]))) ^ v17;\n  v20 = parray[3] ^ (sboxes->S3[(unsigned __int8)v19]\n                   + (sboxes->S2[(unsigned __int16)v19 >> 8] ^ (sboxes->S0[(unsigned int)v19 >> 24]\n                                                              + sboxes->S1[((unsigned int)v19 >> 16) & 0xFF]))) ^ v18;\n  v21 = parray[2] ^ (sboxes->S3[(unsigned __int8)v20]\n                   + (sboxes->S2[(unsigned __int16)v20 >> 8] ^ (sboxes->S0[(unsigned int)v20 >> 24]\n                                                              + sboxes->S1[((unsigned int)v20 >> 16) & 0xFF]))) ^ v19;\n  v22 = parray[1] ^ (sboxes->S3[(unsigned __int8)v21]\n                   + (sboxes->S2[(unsigned __int16)v21 >> 8] ^ (sboxes->S0[(unsigned int)v21 >> 24]\n                                                              + sboxes->S1[((unsigned int)v21 >> 16) & 0xFF]))) ^ v20;\n  v23 = v21 ^ *parray;\n  result = a2;\n  *a2 = v23;\n  *a3 = v22;\n  return result;\n}\n```\n\n\nLooks very similar to me.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography best practices for password storage in Node\r\n                \r\nI'm looking for a straightforward, secure, solution for storing a user's password using Node.  I'm a cryptography novice, but have been trying to piece a solution together from researching online.  I'm looking for validation that what I came up with is a solid solution for a web app with basic (not a bank, hospital, etc) security needs.  Here it is:\n\n```\nvar crypto = require('crypto');\nvar SALT_LENGTH = 64;\nvar KEY_LENGTH = 64;\nvar ITERATIONS = 1000;\n\nfunction createHashedPassword(plainTextPassword, cb) {\n    crypto.randomBytes(SALT_LENGTH, function (err, salt) {\n        console.time('password-hash');\n        crypto.pbkdf2(plainTextPassword, salt, ITERATIONS, KEY_LENGTH, function (err, derivedKey) {\n            console.timeEnd('password-hash');\n            return cb(null, {derivedKey: derivedKey, salt: salt, iterations: ITERATIONS});\n        });\n    });\n};\n```\n\n\n...and here are the choices I made that brought me to this point:\n\nWhat hashing algorithm to use?\n\nBased on this widely referenced article, it looks like the leading contenders are PBKDF2, bcrypt, and scrypt.  I chose PBKDF2 because it has built in support in Node.\n\nWhat salt size to use?\n\nThis stack overflow answer seemed to be the most straightforward answer I could find.  I'm still not very clear on why 64 bytes is the right salt size though.  When I google around, I get other stack exchange answers like this, but I'm not sure it applies to the Node algorithm?  Totally confused here, an explanation aimed at a novice using this Node function would be awesome.\n\nWhat key length to use?\n\nOnce again, I largely based my choice off the same answer as above, but I'm just as foggy on the basics of 'why'.  The answer says that 'it's a waste to generate keys smaller than your input, so use at least 64 bytes'.  Huh?  Once again, a practical explanation would be helpful.\n\nHow many iterations to use?\n\nFor this question, I based my choice off this stack exchange answer.  I don't understand much of it, but I did get that the algorithm is supposed to take approximately 8ms.  So, as you can see I put timers on the function, and I adjusted my iterations to get it in that ballpark on my machine.\n\nThanks!\n    ", "Answer": "\r\nThe NPM package credential handles all of these\n\nYou can see the author's write up on it in the book Programming Javascript Applications\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "no cryptography random generator seed allowed in C#?\r\n                \r\nIt seems that there is no way to manually seed the RNGCryptoServiceProvider in C#.  Is there really nothing simple I can do below to get repeatable randomBytes here for debugging?\n\n```\n  RNGCryptoServiceProvider rngCsp = new RNGCryptoServiceProvider();\n  byte[] randomBytes = new byte[20];\n  rngCsp.GetBytes(randomBytes);\n  MessageBox.Show(Convert.ToBase64String(randomBytes));\n```\n\n\nI know that I could manually enter the 20 bytes, but this is a pain since I really need many more than 20.  Also, I know that I could use the non-cryptography random number generator, but, in the end, I will need the best random generation.\n\nBy the way, I would guess some CPUs have true random generation built in where seeding is not physically possible, but I don't think my CPU has this capability.  I wonder if anybody knows exactly what I could do with my CPU to reset the RNGCryptoServiceProvider environment and trick RNGCryptoServiceProvider into using a prior seed...I imagine I could set my clock back and reset some \"user log bits\" somewhere...I know this wouldn't be practical, but wonder if anybody has ever been successful at this (even though Microsoft's goal is probably to prevent this).\n    ", "Answer": "\r\nThere is not a means to seed the ```\nRNGCryptoServiceProvider```\n.  One solution to generating deterministic values for debugging is to derive your own class that implements from ```\nSystem.Security.Cryptography.RandomNumberGenerator```\n (the base class for ```\nRNGCryptoServiceProvider```\n):\n\n```\nclass DeterministicRandomGenerator : System.Security.Cryptography.RandomNumberGenerator\n{\n    Random r = new Random(0);\n    public override void GetBytes(byte[] data)\n    {\n        r.NextBytes(data);\n    }\n    public override void GetNonZeroBytes(byte[] data)\n    {\n        // simple implementation\n        for (int i = 0; i < data.Length; i++)\n            data[i] = (byte)r.Next(1, 256);\n    }\n}\n```\n\n\nNote the implementation uses the standard ```\nRandom```\n implementation with a seed of 0, ensuring deterministic results.  Now you can use this class in place of ```\nRNGCryptoServiceProvider```\n for debugging purposes:\n\n```\n    RandomNumberGenerator rngCsp = \n#if DEBUG\n    new DeterministicRandomGenerator(); // get deterministic values if debugging\n#else\n    new RNGCryptoServiceProvider(); // otherwise, use CryptoRNG\n#endif\n    byte[] randomBytes = new byte[20];\n    rngCsp.GetBytes(randomBytes);\n    MessageBox.Show(Convert.ToBase64String(randomBytes));\n```\n\n\nEdited to add\n\n\n  I wonder if anybody knows exactly what I could do with my CPU to reset the RNGCryptoServiceProvider environment and trick RNGCryptoServiceProvider into using a prior seed\n\n\nInternally, ```\nRNGCryptoServiceProvider```\n calls the Win32 ```\nCryptGenRandom```\n function to fill the buffer with cryptographically-random values (Source and additional information).  It is not based on a single seed.  (Although the Win32 API allows the caller to provide a seed with supplemental random data, the .NET API does not expose this functionality.  The purpose of a seed in this context is to provide additional entropy the application has access to, rather than to force a deterministic sequence.)  The ```\nCryptGenRandom```\n documentation states that:\n\n\n  To form the seed for the random number generator, a calling application supplies bits it might have—for instance, mouse or keyboard timing input—that are then combined with both the stored seed and various system data and user data such as the process ID and thread ID, the system clock, the system time, the system counter, memory status, free disk clusters, the hashed user environment block. This result is used to seed the pseudorandom number generator (PRNG). In Windows Vista with Service Pack 1 (SP1) and later, an implementation of the AES counter-mode based PRNG specified in NIST Special Publication 800-90 is used. In Windows Vista, Windows Storage Server 2003, and Windows XP, the PRNG specified in Federal Information Processing Standard (FIPS) 186-2 is used.\n\n\nThe result is that \"resetting\" the ```\nRNGCryptoServiceProvider```\n to coerce it into repeating a former sequence is, by design, not a practical approach.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Python cryptography: create a certificate signed by an existing CA, and export\r\n                \r\nI am creating a CA like so:\n\n```\nopenssl genrsa -out ca.key 4096\nopenssl req -new -x509 -days 3650 -key ca.key -out ca.cert\n```\n\n\nThis gives me two PEM files.\n\nI then call this function where ```\ncert_authority```\n and ```\nprivate_key```\n are the strings of the data generated above.\n\n```\ndef create_cert(cert_authority, private_key):\n    one_day = datetime.timedelta(1, 0, 0)\n    # Use our private key to generate a public key\n    private_key = serialization.load_pem_private_key(\n        private_key.encode(\"ascii\"), password=None, backend=default_backend()\n    )\n    public_key = private_key.public_key()\n\n    ca = x509.load_pem_x509_certificate(\n        cert_authority.encode(\"ascii\"), default_backend()\n    )\n\n    builder = x509.CertificateBuilder()\n    builder = builder.subject_name(\n        x509.Name([x509.NameAttribute(NameOID.COMMON_NAME, u\"cryptography.io\")])\n    )\n    builder = builder.issuer_name(ca.issuer)\n    builder = builder.not_valid_before(datetime.datetime.today() - one_day)\n    builder = builder.not_valid_after(datetime.datetime.today() + (one_day * 30))\n    builder = builder.serial_number(x509.random_serial_number())\n    builder = builder.public_key(public_key)\n\n    cert = builder.sign(\n        private_key=private_key, algorithm=hashes.SHA256(), backend=default_backend()\n    )\n\n    print(cert.public_bytes(serialization.Encoding.PEM))\n```\n\n\nThis then generates what appears to be a cert, however on copying and pasting the data to a file (and wrapping by 64 lines and using Unix newlines as per http://srdevspot.blogspot.com/2011/08/openssl-error0906d064pem.html) I get this error when trying to validate:\n\n```\n$ openssl verify -CAfile ca.crt -untrusted phone.crt\nunable to load certificates\n```\n\n\nHoping I am missing something simple as I'm new to all this!\n\nFinally I'll note that I'm open to using another crypto library if cryptography isn't the best.\n\nEDIT:\n\nNow using this per Paul's very helpful response:\n\n```\ndef create_cert(cert_authority, private_key):\n    one_day = datetime.timedelta(1, 0, 0)\n    # Use our private key to generate a public key\n    root_key = serialization.load_pem_private_key(\n        private_key.encode(\"ascii\"), password=None, backend=default_backend()\n    )\n\n    root_cert = x509.load_pem_x509_certificate(\n        cert_authority.encode(\"ascii\"), default_backend()\n    )\n\n    # Now we want to generate a cert from that root\n    cert_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n    new_subject = x509.Name(\n        [\n            x509.NameAttribute(NameOID.COUNTRY_NAME, u\"US\"),\n            x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, u\"Texas\"),\n            x509.NameAttribute(NameOID.LOCALITY_NAME, u\"Austin\"),\n            x509.NameAttribute(NameOID.ORGANIZATION_NAME, u\"New Org Name!\"),\n        ]\n    )\n    cert = (\n        x509.CertificateBuilder()\n        .subject_name(new_subject)\n        .issuer_name(root_cert.issuer)\n        .public_key(cert_key.public_key())\n        .serial_number(x509.random_serial_number())\n        .not_valid_before(datetime.datetime.utcnow())\n        .not_valid_after(datetime.datetime.utcnow() + datetime.timedelta(days=30))\n        .add_extension(\n            x509.SubjectAlternativeName([x509.DNSName(u\"somedomain.com\")]),\n            critical=False,\n        )\n        .sign(root_key, hashes.SHA256(), default_backend())\n    )\n\n    # Dump to scratch\n    with open(\"scratch/phone_cert.pem\", \"wb\") as f:\n        f.write(cert.public_bytes(encoding=serialization.Encoding.PEM))\n\n    # Return PEM\n    cert_pem = cert.public_bytes(encoding=serialization.Encoding.PEM)\n\n    cert_key_pem = cert_key.private_bytes(\n        encoding=serialization.Encoding.PEM,\n        format=serialization.PrivateFormat.TraditionalOpenSSL,\n        encryption_algorithm=serialization.NoEncryption(),\n    )\n\n    return cert_pem, cert_key_pem\n```\n\n\nWould that be the correct way to both save a file and return the created cert and private key as PEM strings?\n\nI am also finding that when I attempt to verify the created cert against the saved PEM with ```\nopenssl verify -verbose -CAfile ca.crt -untrusted phone_cert.pem```\n the command never returns -- probably a separate issue but would appreciate any ideas.\n    ", "Answer": "\r\nThere are two issues that I see here. First, you're creating another self-signed certificate so the certificate you've generated is not signed by the CA, it is itself a CA. To correct this you sign with the private key of your CA (e.g. ```\nprivate_key```\n in your example), but you need to create a new private key associated with the new certificate and embed the public key of that in the cert.\n\n```\ncertificate_private_key = <generate an ec or rsa key here>\ncertificate_public_key = certificate_private_key.public_key()\n```\n\n\nThen do\n\n```\nbuilder = builder.public_key(certificate_public_key)\n```\n\n\nYou also have an issue with your output because you're trying to copy and paste things out of a print statement. The output of ```\ncert.public_bytes(serialization.Encoding.PEM)```\n will be a valid X509 certificate with delimiters and proper PEM line lengths, so write it directly to a file:\n\n```\nwith open(\"cert.crt\", \"wb\") as f:\n    f.write(cert.public_bytes(serialization.Encoding.PEM))\n```\n\n\nThe result can be parsed with ```\nopenssl x509 -noout -text -in cert.crt```\n\n\nHere is a complete example utilizing ```\ncryptography```\n to create a self-signed root CA and sign a certificate using that CA.\n\n```\nimport datetime\n\nfrom cryptography import x509\nfrom cryptography.x509.oid import NameOID\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\n\n\nroot_key = rsa.generate_private_key(\n    public_exponent=65537,\n    key_size=2048,\n    backend=default_backend()\n)\nsubject = issuer = x509.Name([\n    x509.NameAttribute(NameOID.COUNTRY_NAME, u\"US\"),\n    x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, u\"Texas\"),\n    x509.NameAttribute(NameOID.LOCALITY_NAME, u\"Austin\"),\n    x509.NameAttribute(NameOID.ORGANIZATION_NAME, u\"My Company\"),\n    x509.NameAttribute(NameOID.COMMON_NAME, u\"My CA\"),\n])\nroot_cert = x509.CertificateBuilder().subject_name(\n    subject\n).issuer_name(\n    issuer\n).public_key(\n    root_key.public_key()\n).serial_number(\n    x509.random_serial_number()\n).not_valid_before(\n    datetime.datetime.utcnow()\n).not_valid_after(\n    datetime.datetime.utcnow() + datetime.timedelta(days=3650)\n).sign(root_key, hashes.SHA256(), default_backend())\n\n# Now we want to generate a cert from that root\ncert_key = rsa.generate_private_key(\n    public_exponent=65537,\n    key_size=2048,\n    backend=default_backend()\n)\nnew_subject = x509.Name([\n    x509.NameAttribute(NameOID.COUNTRY_NAME, u\"US\"),\n    x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, u\"Texas\"),\n    x509.NameAttribute(NameOID.LOCALITY_NAME, u\"Austin\"),\n    x509.NameAttribute(NameOID.ORGANIZATION_NAME, u\"New Org Name!\"),\n])\ncert = x509.CertificateBuilder().subject_name(\n    new_subject\n).issuer_name(\n    root_cert.issuer\n).public_key(\n    cert_key.public_key()\n).serial_number(\n    x509.random_serial_number()\n).not_valid_before(\n    datetime.datetime.utcnow()\n).not_valid_after(\ndatetime.datetime.utcnow() + datetime.timedelta(days=30)\n).add_extension(\n    x509.SubjectAlternativeName([x509.DNSName(u\"somedomain.com\")]),\n    critical=False,\n).sign(root_key, hashes.SHA256(), default_backend())\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography cesar algorithm\r\n                \r\nHi i'm developing a cesar algorithm app it doesn't contain errors but i have a problem with special character i have squares instead of the appropriate character also i don't know how to deal with the spaces in my code \n\n```\n package cesar;\n\nimport java.util.Scanner;\n\npublic class Cesar {\n\nprivate static short codeMajuscule=65;\nprivate static short codeMinuscule=97;\nprivate static short tailleAlph = 26;\n\npublic static void main(String[] args) {\nScanner sc=new Scanner(System.in);\n    System.out.println(\"Entrer la chaine a crypter\");\n    String phrase = sc.next();\n      System.out.println(\"entrer votre cle\");\n   int c= sc.nextInt();\n    System.out.println( \"la phrase après transformation \" + chiffrement(          phrase , c ) );     \n}\n\nprivate static String chiffrement( String ch , int n ){      \n\n    String chDecripte=\"\";\n            ch=ch.replaceAll(\"[éèêë]\", \"e\");\n            ch=ch.replaceAll(\"[Ç]\", \"C\");\n            ch=ch.replaceAll(\"[ÈÉÊË]\", \"E\");\n            ch=ch.replaceAll(\"[ÌÍÎÏ]\", \"I\");\n            ch=ch.replaceAll(\"Ñ\", \"N\");\n            ch=ch.replaceAll(\"ÒÓÔŒ\", \"O\");\n            ch=ch.replaceAll(\"ÙÚÛÜ\", \"U\");\n            ch=ch.replaceAll(\"ÝŸ\", \"Y\");\n            ch=ch.replaceAll(\"àáâæ\", \"a\");          \n            ch=ch.replaceAll(\"[ÀÁÂÆ]\", \"A\");\n            ch=ch.replaceAll(\"[èéêë]\", \"e\");                      \n            ch=ch.replaceAll(\"[ìíîï]\", \"i\");\n            ch=ch.replaceAll(\"[ñ]\", \"n\");\n            ch=ch.replaceAll(\"[òóôœ]\", \"o\");\n            ch=ch.replaceAll(\"[ùúûü]\", \"u\");\n            ch=ch.replaceAll(\"[ýÿ]\", \"y\");\n\n    for( int i = 0 ; i < ch.length() ; i++ ){\n        if( ch.codePointAt(i) >= codeMajuscule && \n                ch.codePointAt(i) <= ( codeMajuscule + tailleAlph ) ){\n\n            chDecripte += (char) ( ( ch.codePointAt( i ) - codeMajuscule + n ) %  tailleAlph +  codeMajuscule ) ;\n\n        }else if( ch.codePointAt(i) >= codeMinuscule && \n                ch.codePointAt(i) <= ( codeMinuscule + tailleAlph ) ){\n\n            chDecripte += (char) ( ( ch.codePointAt( i ) - codeMinuscule + n ) %  tailleAlph +  codeMinuscule ) ;    \n        }else{\n            chDecripte += ch.charAt( i );\n        }\n    }\n    return chDecripte;  \n}   \n}\n```\n\n\nand thanks\n    ", "Answer": "\r\nUsually (not always) Cesar ciphers do not account for space characters, they ignore any white space and special characters such as periods, colons, commas etc. If you choose to allow for them you'll need to create a \"key\" or \"map\" so you know how to undo the operation. \n\nTypically all characters can be manipulated using their numerical representation (integer format). If you treat them as numbers this becomes a much simpler problem. Since you are using special characters I assume you are using a UTF-8 format? You might consider operating on the numerical values and use this UTF-8 chart as a \"map\":\n\nhttp://www.utf8-chartable.de/\n\nIf you ever are working with ASCII only subset use this chart as a \"map\":\n\nhttp://www.asciitable.com/\n\nThings to consider when doing a Cesar cipher are you normally want to remain within the bounds of the normal alphabet or some specified subset of characters. So when you reach the letter 'z' (122 integer value) if you are shifting right you need to drop back down to 'a' (97 integer value) then continue to shift from there.\n\nFor example we know there are 26 numbers in the lowercase alphabet and they range in ASCII from 97 - 122. So you might do a check like (pseudo-code):\n\n```\nchar char_to_shift; /* the character to be shifted */\n\nif (char_to_shift + shift_amount > 'z') {\n    tmp = shift_amount - ('z' - char_to_shift);\n    shift_amount = tmp;\n    char_to_shift='a';\n    char_to_shift+=shift_amount;\n} else {\n    char_to_shift+=shift_amount;\n}\n```\n\n\nSo in the above pseudo code let's assume we were shifting a character 5 to the right (ROT-5) and that character was 'x' (120 integer value). We would have shifted to 125 which is the '{' character. Instead we do 'z' (122) - 'x' (120) leaving us with a 2. Then we subtract that from the shift_amount (5) so we're left with 3. Then we reset the char_to_shift to 'a' and shift the remaining amount 3 to end up with a 'c'.\n\nAlso keep in mind there are gaps between the Upper case alphabet and the lower case alphabet that need to be accounted for if you decide to allow shifting a lowercase letter to an upper case letter.\n\nTo generate your own \"map of values\" just try printing out the decimal value of each character in your subset of allowed characters if the above tables do not fit what you are looking for.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "'cryptography' package is required for sha256_password or caching_sha2_password auth methods\r\n                \r\nRequest Method: POST\nRequest URL:    http://192.168.0.110/admin/login/?next=/admin/\nDjango Version: 4.0.1\nException Type: RuntimeError\nException Value:\n'cryptography' package is required for sha256_password or caching_sha2_password auth methods\nException Location: /home/chickoos/explab/ExpLab/venv/lib/python3.8/site-packages/pymysql/_auth.py, line 143, in sha2_rsa_encrypt\nPython Executable:  /home/chickoos/explab/ExpLab/venv/bin/python\nPython Version: 3.8.10\nPython Path:\n['/home/chickoos/explab/ExpLab',\n'/usr/lib/python38.zip',\n'/usr/lib/python3.8',\n'/usr/lib/python3.8/lib-dynload',\n'/home/chickoos/explab/ExpLab/venv/lib/python3.8/site-packages']\nServer time:\n    ", "Answer": "\r\nTo use “sha256_password” or “caching_sha2_password” for authenticate, you need to install additional dependency:\n```\n$ python3 -m pip install PyMySQL[rsa]\n```\n\nAccording to official documentation: https://pymysql.readthedocs.io/en/latest/user/installation.html\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "What Cryptography Provider Types can Sign a Clickonce Manifest\r\n                \r\nI have a self-sign certificate for signing an Excel add-in deployment manifest. The add-in will be used on our internal network only so there is no need to pay for a third party one. When I try to build the project (Excel 2013 VSTO add-in project type in Visual Studio 2015 .NET Framework 4.6.1), I get the error \n\n\n  MSB3482: An error occurred while signing: Invalid provider type\n  specified.\n\n\nCertutil.exe reveals that the cryptography provider is Microsoft Software Key Storage Provider. If I use a test certificate (which I can only develop with but not deploy), its provider is Microsoft Strong Cryptographic Provider. With that certificate, the project builds fine.\nI found a page that says you can't use Cryptography Next Generation certificates (like Microsoft Software Key Storage Provider) but I can't seem to find this from any official (e.g. Microsoft) source. Our IT guys won't change the provider type without some more compelling evidence. Is it true?\nAlso, can you definitely generate SHA2 certificates using Microsoft Strong Cryptographic Provider?\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "DES cipher with pyca/cryptography (PBEWithMD5AndDES)\r\n                \r\nTo support some legacy application I need to implement ```\nPBEWithMD5AndDES```\n (RFC2898 Section 6.1) in python. I know this is insecure, deprecated and should not be used anymore. But this is sadly the requirement I have.\nI already have a working version that uses ```\nPyCrypto```\n/```\nPyCryptodome```\n but I would need to introduce ```\nPyCryptodome```\n as additional dependency to the project which is something I want to avoid. As we are already using ```\npyca/cryptography```\n in other parts of our code I'd prefer this library over ```\nPyCrypto(dome)```\n. However due to the nature of ```\nPBEWithMD5AndDES```\n I need DES encryption support but ```\npyca/cryptography```\n only supports Triple DES (3DES) as far as I understood.\nIs there a way to (single) DES encrypt something using ```\npyca/cryptography```\n? Basically I need to replace the following usage of ```\nCrypto.Cipher.DES```\n from with something from ```\npyca/cryptography```\n:\n```\nkey, init_vector = _pbkdf1_md5(a_password, a_salt, a_iterations)\ncipher = DES.new(key, DES.MODE_CBC, init_vector)\nencrypted_message = cipher.encrypt(encoded_message)\n```\n\n\n\n**UPDATE**:\n\n\nThanks to @SquareRootOfTwentyThree I ended up with this:\n```\n(key, init_vector) = _pbkdf1_md5(a_password, a_salt, a_iterations)\ncipher = Cipher(algorithms.TripleDES(key), modes.CBC(init_vector), default_backend())\nencryptor = self.cipher.encryptor()\nencrypted = encryptor.update(encoded_message)\nencryptor.finalize()\n\ndef _pbkdf1_md5(a_password, a_salt, a_iterations):\n    digest = Hash(MD5(), default_backend())\n    digest.update(a_password)\n    digest.update(a_salt)\n\n    key = None\n    for i in range(a_iterations):\n        key = digest.finalize()\n        digest = Hash(MD5(), default_backend())\n        digest.update(key)\n\n    digest.finalize()\n\n    return key[:8], key[8:16]\n```\n\n    ", "Answer": "\r\n\n  Is there a way to (single) DES encrypt something using pyca/cryptography?\n\n\nYes, just pass an 8 byte key to ```\ncryptography.hazmat.primitives.ciphers.algorithms.TripleDES```\n. This will use the same key for each DES transform within triple-DES.\n\nTriple-DES is also known as DES-EDE for Encrypt, Decrypt and then Encrypt. If you use the same key for each then one of the encrypt / decrypt pairs will result in the identity function, leaving just a single DES encrypt.\n\n\n\nNote that not all triple DES implementations will accept a single key (since single DES is usually present), but this one does:\n\n\n  The secret key. This must be kept secret. Either ```\n64```\n, ```\n128```\n, or ```\n192```\n bits long. DES only uses ```\n56```\n, ```\n112```\n, or ```\n168```\n bits of the key as there is a parity byte in each component of the key. Some writing refers to there being up to three separate keys that are each ```\n56```\n bits long, they can simply be concatenated to produce the full key.\n\n\nalthough I must admit that you'd have to understand how triple-DES works to make any sense of that text.\n\nNote as well that the implementation of DES-EDE for single DES is currently not optimized, it will perform all three operations even if two of them cancel each other out.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography: hash of string correlates to hash of substrings of string\r\n                \r\nI'm processing human-written text documents and I do a dictionary based string matching to find specific strings in the document.\n\nFor security reasons, I can not input the document in unencrypted text format, but rather in a strong encrypted format. I can not allow developers working on the unit access the unencrypted input string, but they can access the matched strings.\n\nTo make it clearer: \n\n```\nDictionary = {\"Apple\", \"Apple pie\", \"World War II\"}\n\nDocument1 = \"apple is my favorite fruit.\" -> Should match \"apple\" \n\nDocument2 = \"apple pie was invented during world war II\" -> Should match \"apple pie\" and \"world war II\"\n```\n\n\nSo the string matching is case-insensitive and only matches longest occurrence (I'm using Aho-Corasick).\n\nThe options I see are: \n\n\nFind an encryption function F where F(\"ABCD\") = F(\"A\")+F(\"B\")+F(\"C\")+F(\"D\") = F(\"AB\")+F(\"CD\"). \nChunk the document by whitespace, hash both the chunks and the dictionary and then look for similarities. (complicated)\nMake a separate unit responsible for encryption and string matching with obfuscated code. (most obvious way)\n\n\nAs I'm not good at cryptography, I might be missing something here. Can anyone see a better way of achieving this?\n    ", "Answer": "\r\nFirstly, any encryption function that satisfies your condition:\n\n```\nF(\"ABCD\") = F(\"A\")+F(\"B\")+F(\"C\")+F(\"D\")\n```\n\n\nis inherently not strong encryption (assuming ```\n+```\n here means concatenation).  The problem is that this condition implies that ```\nF(\"A\")```\n is invariant, which means that it the encryption is equivalent to a simple substitution cipher, vulnerable to frequency analysis.\n\nA bigger problem however is that any solution is going to be vulnerable to a dictionary attack.  If you can determine that a word in the unknown document is a particular word in your limited dictionary, then you can also search for it in a complete dictionary - in this way, you can quickly discover the entire plaintext.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "CFFI fails in Python (Linux) virtual environment -- attempting to install cryptography package in venv\r\n                \r\nInstalling cffi in the virtual environment encounters errors, but seems to install. Are these errors actually critical, ones that could lead it to fail when installing cryptography (see further below)?\n\n```\npip install cffi==1.11.5```\n\n\n\n  Downloading/unpacking cffi==1.11.5\n  \n  Downloading cffi-1.11.5.tar.gz (438kB): 438kB downloaded\n    Running setup.py (path:/[venv-install-directory]/build/cffi/setup.py) egg_info for package cffi\n  Downloading/unpacking pycparser (from cffi==1.11.5)\n    Downloading pycparser-2.18.tar.gz (245kB): 245kB downloaded\n    Running setup.py (path:/[venv-install-directory]/build/pycparser/setup.py) egg_info for package pycparser\n      warning: no previously-included files matching 'yacctab.' found under directory 'tests'\n      warning: no previously-included files matching 'lextab.' found under directory 'tests'\n      warning: no previously-included files matching 'yacctab.' found under directory 'examples'\n      warning: no previously-included files matching 'lextab.' found under directory 'examples'\n  Installing collected packages: cffi, pycparser\n    Running setup.py install for cffi\n      building '_cffi_backend' extension\n      gcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -DUSE__THREAD -DHAVE_SYNC_SYNCHRONIZE -I/usr/local/lib/libffi-3.2.1/include -I/[venv-install-directory]/include -I/usr/local/include/python3.4m -c c/_cffi_backend.c -o build/temp.linux-i686-3.4/c/_cffi_backend.o\n      gcc -pthread -shared build/temp.linux-i686-3.4/c/_cffi_backend.o -L/usr/local/lib -lffi -o build/lib.linux-i686-3.4/_cffi_backend.cpython-34m.so\n    Could not find .egg-info directory in install record for cffi==1.11.5\n    Running setup.py install for pycparser\n      warning: no previously-included files matching 'yacctab.' found under directory 'tests'\n      warning: no previously-included files matching 'lextab.' found under directory 'tests'\n      warning: no previously-included files matching 'yacctab.' found under directory 'examples'\n      warning: no previously-included files matching 'lextab.' found under directory 'examples'\n      Build the lexing/parsing tables\n    Could not find .egg-info directory in install record for pycparser (from cffi==1.11.5)\n  Successfully installed cffi pycparser\n  Cleaning up...\n\n\nThis problem is perplexing because it works on my local system, but when creating a virtual environment, the following error occurs during the attempted install of cryptography:\n\n\n```\n  File \"[path-to-venv]/build/cryptography/src/_cffi_src/utils.py\", line 57, in build_ffi\n   ffi = FFI()\n\n   File \"[path-to-venv]/lib/python3.4/site-packages/cffi/api.py\", line 46, in __init__\n    import _cffi_backend as backend\n\nImportError: [path-to-venv]/lib/python3.4/site-packages/_cffi_backend.cpython-34m.so: undefined symbol: __syscall_error\n```\n\n\n\nA virtual environment literally creates a copy of the local environment, doesn't it?\n\nSo how is \"_cffi_backend\" not working in the virtual environment, when there's no problem on the system install itself? I don't see how this could happen in the first place.\n\nHas anyone successfully dealt with a problem like this one? If you have ideas or a solution, please be specific since I've already spent quite a few hours trying solutions that haven't worked so far.\n\nAmong other things, I've already tried compiling and installing libffi from source before creating the virtual environment: https://sourceware.org/libffi/\n\nAre there other alternatives for creating virtual environments that don't require re-installing every package -- i.e. where can just use your existing installed setup and copy it directly into the virtual environment (or a similar way that avoids falling into dependency hell)?\n\nThis seems like a simple issue to solve once you have a grasp of the actual problem. If I can't figure this out, I can't deploy my project since it crucially depends on cryptography. So thanks in advance for any ideas you might have that could help fix this issue.\n    ", "Answer": "\r\nThe answer in this case was to upgrade pip -- inside the virtual environment.\n\nComplete instructions:\n\n\ncreate the virtual environment.\n\npython3.4 -m venv [venv_name_here]\nenter the virtual environment.\n\ncd [venv_name_here]\nactivate the virtual environment.\n\nsource bin/activate\n\n\n4.  upgrade pip.  \n\npip install --upgrade pip\n\n\ninstall setuptools.\n\npip install setuptools==39.1.0\ninstall pyparser.\n\npip install pyparser==1.0\npip install pyparsing==2.1.0\ninstall cffi.\n\npip install cffi==1.11.5\ninstall cryptography.\n\npip install cryptography==2.2.2\n\n\nCompletes installation perfectly, with no errors.\n\nNote that you may need to change version numbers, depending on the output of the \"pip freeze\" command (i.e. look at your 'requirements.txt' file):\n\n\n  pip freeze -l > requirements.txt\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography package import fails\r\n                \r\nAttempting to run Python 3 code containing the ```\npython-binance```\n and ```\nOpenSSL```\n modueles failed on an import within the ```\ncryptography```\n package. Here is a partial stack trace of the error: \n\n```\n  File \"/usr/lib/python3/dist-packages/cryptography/x509/base.py\", line 15, in <module>\n    from cryptography.x509.extensions import Extension, ExtensionType\n  File \"/usr/lib/python3/dist-packages/cryptography/x509/extensions.py\", line 19, in <module>\n    from cryptography.hazmat.primitives import constant_time, serialization\n  File \"/usr/lib/python3/dist-packages/cryptography/hazmat/primitives/constant_time.py\", line 9, in <module>\n    from cryptography.hazmat.bindings._constant_time import lib\nModuleNotFoundError: No module named 'cryptography.hazmat.bindings._constant_time'\n```\n\n    ", "Answer": "\r\nThe solution for me was to upgrade the cryptography package:\n\n```\npip3 install --upgrade cryptography```\n\n\nI also verified the installation of required system packages:\n\n```\nsudo apt install build-essential libssl-dev libffi-dev python3-dev```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "How to migrate old python code from m2crypto to cryptography (RSA signing of a digest)\r\n                \r\nHi I'm having old legacy code (python2) , that creates a signature file for a digest. (in my case this digest is always a 40 character string with only 0-9a-f characters).\n\nIt uses m2crypto\n\nI'm also having a function, that verifies whether the digest and a signature file do match.\n\nNow I have to reimplement the signing code using cryptography instead of m2crypto (and switch to python3 lateron)\nHowever the resulting signature must be verifiable with the old m2crypto code. (The code doing the verification runs on machines.\n that I cannot update now, the signing however has to be migrated to cryptography (and python3)\n\nAttached I have a full self explaining example.\nI guess the issue lies somewhere in the padding, which is not identical with the m2crypto and cryptography solution.  but I don't know how to proceed.\n\nThe old signing code is:\n\n```\ndef old_sign(digest):\n    import M2Crypto\n    rsa = M2Crypto.RSA.load_key(\"k.key\")\n    return rsa.sign(digest, \"sha1\")\n```\n\n\nThe code to verify the signature is:\n\n```\ndef old_check_signature(digest, signature):\n    import M2Crypto\n    rsa = M2Crypto.RSA.load_pub_key(\"k.pub\")\n    try:\n        rsa.verify(digest, signature, algo=\"sha1\")\n        return True\n    except M2Crypto.RSA.RSAError as exc:\n        args = exc.args\n        if len(args) < 1:\n            raise\n        return False\n```\n\n\nI don't know what kind of padding has been used by m2crypto and I don't know all possible variations of padding.\n\nI tried two different paddings with cryptography\n\nFirst attempt:\n\n```\ndef new_sign1(digest):\n    from cryptography.hazmat.backends import default_backend\n    from cryptography.hazmat.primitives import hashes, serialization\n    from cryptography.hazmat.primitives.asymmetric import padding\n    from cryptography.hazmat.primitives.asymmetric import rsa\n\n    key_data = open(\"k.key\").read()\n    key =  serialization.load_pem_private_key(\n        key_data, password=None, backend=default_backend())\n    return key.sign(\n        digest,\n        padding.PSS(\n            mgf=padding.MGF1(hashes.SHA1()),\n            salt_length=padding.PSS.MAX_LENGTH,\n            ),\n        hashes.SHA1())\n```\n\n\nsecond attempt\n\n```\ndef new_sign2(digest):\n    from cryptography.hazmat.backends import default_backend\n    from cryptography.hazmat.primitives import hashes, serialization\n    from cryptography.hazmat.primitives.asymmetric import padding\n    from cryptography.hazmat.primitives.asymmetric import rsa\n\n    key_data = open(\"k.key\").read()\n    key =  serialization.load_pem_private_key(\n        key_data, password=None, backend=default_backend())\n\n    return key.sign(digest, padding.PKCS1v15(), hashes.SHA1())\n\n\n```\n\n\nAfter Paul's feedback I also tried\n\n```\ndef new_sign3(digest):\n    from cryptography.hazmat.backends import default_backend\n    from cryptography.hazmat.primitives import hashes, serialization\n    from cryptography.hazmat.primitives.asymmetric import padding\n    from cryptography.hazmat.primitives.asymmetric import rsa\n    from cryptography.hazmat.primitives.asymmetric import utils\n\n    key_data = open(\"k.key\", \"rb\").read()\n    key =  serialization.load_pem_private_key(\n        key_data, password=None, backend=default_backend())\n\n    return key.sign(\n        digest,\n        padding.PKCS1v15(),\n         utils.Prehashed(hashes.SHA1()),\n        )\n```\n\n\nwhich fails with \n```\nValueError: The provided data must be the same length as the hash algorithm's digest size.```\n\n\nFollowing code can reproduce the error if all above functions are declared:\n\n```\ndig = \"f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0\"\nsigs = [old_sign(dig), new_sign1(dig), new_sign2(dig)]\nprint([old_check_signature(dig, sig) for sig in sigs])\n```\n\n\nThe output is [True, False, False], which means, that only the signature created with m2crypto is correct and the signatures created with cryptography cannot be verified with m2crypto.\n\nIf you want to test the code and don't have a key file and a public key file  you can use following snippet to create one:\n\n```\nKEY = \"\"\"\n-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAusZYCLS8RPUJ3fhod3cr2foK++t3R30Eiqstq+B5vIIrcJN1\n2HnKfU1o3m9cwEJOezHxuI7Ks8/YVt/bGy6HyY4i3bk5AS9BK4gEptmUlldsvV+l\nhOLel884dwhUk2ZrEpCq7YvSpMBb7ORKcUwcTu9tyuSHTlVpabYADTStebDWwp0+\nheeRWN/zG5CN0zO4BScRNTpnw/TAqBTytuWgo/YFhBX6a4U3fKKASqynn5ZJYAg3\nCDqdAe4BM2OZUv73UHWQsltC3xyKqsN6+gH7O7WoetxdMZsvYtEp4hvhUjgCrDSU\ngSvtZD8BMxcPPO59w670DdVa3EPLWZzhGel18wIDAQABAoIBAB+DrAL8C/BOsDWF\n3oqZzwpeiE/tcRjc3VFQhMpFfAT0qcO6/d1i32m5EALII4xFI9zhlnmfjlA8t7Ig\n32V8umil1Pg4cofio0pnDvHgMJQVeEGTy+faJ9jRnCNpgmvEkjh1tIGUYBxwYJJe\nCrmHMBeZipr7aGEtRDYUAXo48zRe+mO41ICkPeVRRSK0b5F9P7SOm+QnkN8rHmtm\nMsCJ0jPJ1fG5Xi5BVVdjhQ6+S42tbm/A68Yx/uWSC3pt+ScIklgYF2owawVWDbWJ\nEekl0sNUTm1j1OlnyAEbb8R/VkYsLYfEwpgULTzkokBRq4NZxjCKY7VJRZ05neev\n4JbdcOECgYEA46e+L/uvHUUzyhWgrNgHAdT7Eff4Imu7WdG+KQ7d7kNazMJFyMrk\n1Ln66i/oPyiMwMXcACmEoA5Jl/wBk3sjKjLno9dvMM3amfwkBZav4FirQS+9Xk/l\nEQAoc/WxsxlVywM00c20CgGqNu0hRBlM5C8zCoIFlt6G2Mwv58yd8hkCgYEA0geU\n7FXh/xVnq4wU9bnTF0laPd4HlVYYNpRMjTdRwwIycrCynAlfEF+keUyOXhgYw5vm\nloyICCqsNi5pw8tRPFyzBiESkLUL+ZTcfxswfgmhlTs71Zk72b8LCM3sRPeuUg2a\n6GrNvycWRLfc+toq5NvSKnfVQS2tgMKJ0CtPIesCgYB+Za0H8SKaCsklY3qxXMQP\nNVQs9tOTMON1jCmbnECGQGlSlG6wfE4u+g+hJPY60uXLRk/O2z5iq2wa8XVikBTH\nIjpQUpXOsAy2QDMz0yVVV4XGDJ6ElbFmDgNn1rtR6DglHmOeNSrH/4KlOmWk7LMv\nYjFhnS1DRcvy5POYLJhpSQKBgEILIEkwuF/92xuWcQDT7gzkg/vwVXIgIH0JJQlC\n2/L2PebSqVdnmv0LFi0OZbYw3Zik7V1p01y+Dmj7L0biKClS/PhwbeYTCDDzHmLZ\nqeX4IVdLyQThqnBOIqoiFqmZOLeUj6GF9Cynndj99/7pm5NbjDrOc8CLHIPgqHVN\nKRUBAoGBAKEr1mg+Hjf+M/5ru1tQT6xTvlKW1rS4ioGB35XQf+n/OAO98SPQkwPQ\nXfX5nKHif/TmDZygGeHYm96qCceOmzCL7LqaYOb1qTZLEk6L18eEtHwG+hXyMKuA\nt2XLK89blAoPT+9x10KKp27IWe/W+QCD6LnrdjoN9BQ7fCnV5v3Q\n-----END RSA PRIVATE KEY-----\n\"\"\"\n\nopen(\"k.key\", \"w\").write(KEY)\n\n\nPUB_KEY = \"\"\"\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAusZYCLS8RPUJ3fhod3cr\n2foK++t3R30Eiqstq+B5vIIrcJN12HnKfU1o3m9cwEJOezHxuI7Ks8/YVt/bGy6H\nyY4i3bk5AS9BK4gEptmUlldsvV+lhOLel884dwhUk2ZrEpCq7YvSpMBb7ORKcUwc\nTu9tyuSHTlVpabYADTStebDWwp0+heeRWN/zG5CN0zO4BScRNTpnw/TAqBTytuWg\no/YFhBX6a4U3fKKASqynn5ZJYAg3CDqdAe4BM2OZUv73UHWQsltC3xyKqsN6+gH7\nO7WoetxdMZsvYtEp4hvhUjgCrDSUgSvtZD8BMxcPPO59w670DdVa3EPLWZzhGel1\n8wIDAQAB\n-----END PUBLIC KEY-----\n\"\"\"\nopen(\"k.pub\", \"w\").write(PUB_KEY)\n\n\n```\n\n\nThanks in advance for any suggestions.\n\nI don't use SO that often, \nI have also a full blown python file (102 lines), that is completely self contained. How to share such files on SO in a question\n\nAddendum 2019-06-13 23:15:00 UTC\n\nIt seems. that M2Crypto.RSA.sign()\n\ncalls finally following C code. (from the m2crypto git repository in the file ```\nSWIG/_m2crypto_wrap.c```\n.\n\nI'm not really good with libssl, but perhaps somebody else understands this\nand can tell me how to 'reproduce the calculation' (perhaps with openssl commandline or with ctypes) without using M2Crypto.\n\n```\nPyObject *rsa_sign(RSA *rsa, PyObject *py_digest_string, int method_type) {\n    int digest_len = 0;\n    int buf_len = 0;\n    int ret = 0;\n    unsigned int real_buf_len = 0;\n    char *digest_string = NULL;\n    unsigned char * sign_buf = NULL;\n    PyObject *signature;\n\n    ret = m2_PyString_AsStringAndSizeInt(py_digest_string, &digest_string,\n                                         &digest_len);\n    if (ret == -1) {\n        /* PyString_AsStringAndSize raises the correct exceptions. */\n        return NULL;\n    }\n\n    buf_len = RSA_size(rsa);\n    sign_buf = (unsigned char *)PyMem_Malloc(buf_len);\n    ret = RSA_sign(method_type, (const unsigned char *)digest_string, digest_len,\n                   sign_buf, &real_buf_len, rsa);\n\n    if (!ret) {\n        m2_PyErr_Msg(_rsa_err);\n        PyMem_Free(sign_buf);\n        return NULL;\n    }\n\n    signature =  PyBytes_FromStringAndSize((const char*) sign_buf, buf_len);\n\n    PyMem_Free(sign_buf);\n    return signature;\n}\n\n```\n\n\nA workaround using subprocess.Popen or ctypes (directly attacking libssl) is (in my context) acceptable.\n    ", "Answer": "\r\nM2Crypto is probably using PKCS1 padding when calling ```\nsign```\n so the PKCS1v15 example is close to what you want. Assuming it defaults to PKCS1 (and not no padding, which is wildly insecure and ```\ncryptography```\n does not support) then the digest is likely the problem.\n\nIs ```\ndigest```\n already the hash you want signed or is it the data to be hashed? Cryptography, by default, hashes the provided data for you. If the data has already been hashed then you need to use Prehashed to avoid that step.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Writing shims for Cryptography\r\n                \r\nI need to fake ```\nSHA1Cng.ComputeHash()```\n (and many other functions from various classes from ```\nSystem.Security.Cryptography```\n).\nI created the test project, referenced the main project in it, generated fakes for it, I also generated fakes for ```\nSystem```\n which gave me ```\nmscorlib.fakes```\n (where Cryptograhy is). I added the following lines:\n```\n<Fakes xmlns=\"http://schemas.microsoft.com/fakes/2011/\" Diagnostic=\"true\">\n  <Assembly Name=\"mscorlib\" Version=\"4.0.0.0\"/>\n  <StubGeneration>\n    <Remove FullName=\"System.Runtime.CompilerServices.ITuple\"/>\n  </StubGeneration>\n  <ShimGeneration>\n    <Add FullName=\"System.Security.Cryptography\"/>\n  </ShimGeneration>\n</Fakes>\n```\n\nI get plenty of errors for some reason:\n\n'CryptoStream' does not contain a constructor that takes 4 arguments (..\\Debug\\Fakes\\m\\f.csproj)\n'Rfc2898DeriveBytes' does not contain a constructor that takes 4 arguments (..\\Debug\\Fakes\\m\\f.csproj)\n...\n\n    ", "Answer": "\r\nI was able to reverse out the Fakes file and only include what we needed. Something like the following:\n\n```\n<Fakes xmlns=\"http://schemas.microsoft.com/fakes/2011/\">\n  <Assembly Name=\"mscorlib\" Version=\"4.0.0.0\"/>\n  <StubGeneration>\n    <Clear/>\n  </StubGeneration>\n  <ShimGeneration>\n    <Clear/>\n    <Add FullName=\"System.IO.FileSystemInfo\"/>\n    <Add FullName=\"System.IO.Path\"/>\n    <Add FullName=\"System.DateTime!\" />\n  </ShimGeneration>\n</Fakes>\n```\n\n\nA bit of trial and error unfortunately. We'll be abandoning MS Fakes as soon as possible. Seems Microsoft has already abandoned it.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography: hash of string correlates to hash of substrings of string\r\n                \r\nI'm processing human-written text documents and I do a dictionary based string matching to find specific strings in the document.\n\nFor security reasons, I can not input the document in unencrypted text format, but rather in a strong encrypted format. I can not allow developers working on the unit access the unencrypted input string, but they can access the matched strings.\n\nTo make it clearer: \n\n```\nDictionary = {\"Apple\", \"Apple pie\", \"World War II\"}\n\nDocument1 = \"apple is my favorite fruit.\" -> Should match \"apple\" \n\nDocument2 = \"apple pie was invented during world war II\" -> Should match \"apple pie\" and \"world war II\"\n```\n\n\nSo the string matching is case-insensitive and only matches longest occurrence (I'm using Aho-Corasick).\n\nThe options I see are: \n\n\nFind an encryption function F where F(\"ABCD\") = F(\"A\")+F(\"B\")+F(\"C\")+F(\"D\") = F(\"AB\")+F(\"CD\"). \nChunk the document by whitespace, hash both the chunks and the dictionary and then look for similarities. (complicated)\nMake a separate unit responsible for encryption and string matching with obfuscated code. (most obvious way)\n\n\nAs I'm not good at cryptography, I might be missing something here. Can anyone see a better way of achieving this?\n    ", "Answer": "\r\nFirstly, any encryption function that satisfies your condition:\n\n```\nF(\"ABCD\") = F(\"A\")+F(\"B\")+F(\"C\")+F(\"D\")\n```\n\n\nis inherently not strong encryption (assuming ```\n+```\n here means concatenation).  The problem is that this condition implies that ```\nF(\"A\")```\n is invariant, which means that it the encryption is equivalent to a simple substitution cipher, vulnerable to frequency analysis.\n\nA bigger problem however is that any solution is going to be vulnerable to a dictionary attack.  If you can determine that a word in the unknown document is a particular word in your limited dictionary, then you can also search for it in a complete dictionary - in this way, you can quickly discover the entire plaintext.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography tools for python 3\r\n                \r\nI'm writing a program in python 3 which needs encryption functions (at least aes and rsa). I've found PyCrypto which seems to work only on 2.x versions.\n\nIs there any good tool available for python 3 or should I rather start translating my program to be compatible with python 2 (or any other solution) ?\n\nThank you\n\n\n\nUpdate as mentioned below, PyCrypto is now available on py3k\n    ", "Answer": "\r\nPyCrypto 2.4.1 and later now work on Python 3.x (see changelog diff).\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "CFFI fails in Python (Linux) virtual environment -- attempting to install cryptography package in venv\r\n                \r\nInstalling cffi in the virtual environment encounters errors, but seems to install. Are these errors actually critical, ones that could lead it to fail when installing cryptography (see further below)?\n\n```\npip install cffi==1.11.5```\n\n\n\n  Downloading/unpacking cffi==1.11.5\n  \n  Downloading cffi-1.11.5.tar.gz (438kB): 438kB downloaded\n    Running setup.py (path:/[venv-install-directory]/build/cffi/setup.py) egg_info for package cffi\n  Downloading/unpacking pycparser (from cffi==1.11.5)\n    Downloading pycparser-2.18.tar.gz (245kB): 245kB downloaded\n    Running setup.py (path:/[venv-install-directory]/build/pycparser/setup.py) egg_info for package pycparser\n      warning: no previously-included files matching 'yacctab.' found under directory 'tests'\n      warning: no previously-included files matching 'lextab.' found under directory 'tests'\n      warning: no previously-included files matching 'yacctab.' found under directory 'examples'\n      warning: no previously-included files matching 'lextab.' found under directory 'examples'\n  Installing collected packages: cffi, pycparser\n    Running setup.py install for cffi\n      building '_cffi_backend' extension\n      gcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -DUSE__THREAD -DHAVE_SYNC_SYNCHRONIZE -I/usr/local/lib/libffi-3.2.1/include -I/[venv-install-directory]/include -I/usr/local/include/python3.4m -c c/_cffi_backend.c -o build/temp.linux-i686-3.4/c/_cffi_backend.o\n      gcc -pthread -shared build/temp.linux-i686-3.4/c/_cffi_backend.o -L/usr/local/lib -lffi -o build/lib.linux-i686-3.4/_cffi_backend.cpython-34m.so\n    Could not find .egg-info directory in install record for cffi==1.11.5\n    Running setup.py install for pycparser\n      warning: no previously-included files matching 'yacctab.' found under directory 'tests'\n      warning: no previously-included files matching 'lextab.' found under directory 'tests'\n      warning: no previously-included files matching 'yacctab.' found under directory 'examples'\n      warning: no previously-included files matching 'lextab.' found under directory 'examples'\n      Build the lexing/parsing tables\n    Could not find .egg-info directory in install record for pycparser (from cffi==1.11.5)\n  Successfully installed cffi pycparser\n  Cleaning up...\n\n\nThis problem is perplexing because it works on my local system, but when creating a virtual environment, the following error occurs during the attempted install of cryptography:\n\n\n```\n  File \"[path-to-venv]/build/cryptography/src/_cffi_src/utils.py\", line 57, in build_ffi\n   ffi = FFI()\n\n   File \"[path-to-venv]/lib/python3.4/site-packages/cffi/api.py\", line 46, in __init__\n    import _cffi_backend as backend\n\nImportError: [path-to-venv]/lib/python3.4/site-packages/_cffi_backend.cpython-34m.so: undefined symbol: __syscall_error\n```\n\n\n\nA virtual environment literally creates a copy of the local environment, doesn't it?\n\nSo how is \"_cffi_backend\" not working in the virtual environment, when there's no problem on the system install itself? I don't see how this could happen in the first place.\n\nHas anyone successfully dealt with a problem like this one? If you have ideas or a solution, please be specific since I've already spent quite a few hours trying solutions that haven't worked so far.\n\nAmong other things, I've already tried compiling and installing libffi from source before creating the virtual environment: https://sourceware.org/libffi/\n\nAre there other alternatives for creating virtual environments that don't require re-installing every package -- i.e. where can just use your existing installed setup and copy it directly into the virtual environment (or a similar way that avoids falling into dependency hell)?\n\nThis seems like a simple issue to solve once you have a grasp of the actual problem. If I can't figure this out, I can't deploy my project since it crucially depends on cryptography. So thanks in advance for any ideas you might have that could help fix this issue.\n    ", "Answer": "\r\nThe answer in this case was to upgrade pip -- inside the virtual environment.\n\nComplete instructions:\n\n\ncreate the virtual environment.\n\npython3.4 -m venv [venv_name_here]\nenter the virtual environment.\n\ncd [venv_name_here]\nactivate the virtual environment.\n\nsource bin/activate\n\n\n4.  upgrade pip.  \n\npip install --upgrade pip\n\n\ninstall setuptools.\n\npip install setuptools==39.1.0\ninstall pyparser.\n\npip install pyparser==1.0\npip install pyparsing==2.1.0\ninstall cffi.\n\npip install cffi==1.11.5\ninstall cryptography.\n\npip install cryptography==2.2.2\n\n\nCompletes installation perfectly, with no errors.\n\nNote that you may need to change version numbers, depending on the output of the \"pip freeze\" command (i.e. look at your 'requirements.txt' file):\n\n\n  pip freeze -l > requirements.txt\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Meaning of InvalidToken - No exception message supplied using python cryptography\r\n                \r\nI'm working on a project using this package from github with version 1.2.3\n\nhttps://github.com/pyca/cryptography\n\ni keep getting an error like this\n\n```\nInvalidToken at /admin/documentsearch/add/\nNo exception message supplied\n```\n\n\nnot sure what this means though unfortunataley and i'm not sure how to proceed. Has anybody encountered this before? This particular issue doesn't seem to be in the github repo's issue list as well. Hoping somebody could assist me with this particular issue\n\nthanks\n    ", "Answer": "\r\nRealized what it was eventually. The django SECRET_KEY of the database i was copying from is different from the SECRET_KEY in my local settings. I used the SECRET_KEY in the settings of the setup i was copying from to match the one used in its DB and its working now\n\nthanks\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Decoding with Python's cryptography package\r\n                \r\nMy server is in Python and client is Swift. I'm using ```\ncryptography```\n package for Python and ```\nSwCrypt```\n for Swift.\n\n\nI create a public and private key pair\nServer send public key to iOS\niOS creates a random AES key and encrypt it with the public key\n\n```\nlet publicKeyDER = try SwKeyConvert.PublicKey.pemToPKCS1DER(publicPemReceivedFromServer)\nlet msg = \"this_is_thirty_two_character_lon\".data(using: .ascii)!\nlet random_aes_cypher = try CC.crypt(.encrypt, blockMode: .cbc, algorithm: .aes, padding: .pkcs7Padding, data: msg, key: CC.generateRandom(32), iv: CC.generateRandom(16))\n```\n\niOS sends the encrypted AES key back to server\n\n```\nlet x = try CC.RSA.encrypt(random_aes_cypher, derKey: publicKeyDER, tag: Data(), padding: .oaep, digest: .sha1)\n//Post x to server\n```\n\nServer decrypts the encrypted AES key with the private key\nprivate_key.decrypt(encrypted_aes_key, oaep_padding)\n\n\nOn the last step, the decrypted message contains very weird character..Any idea why? It looks something like this on PyCharm: \\�<�>Dǆ䥋��wp+6'���W=��$�O�rܨosf�.C��qKT=_�{�B��pE#�-mn��t����Y^0���L�9f@�=O*��\\���B��z�;��\"�0��k&��z,��J�\\�L\n\nWhen I call ```\nlen()```\n on the decrypted message, I see that I get the correct number of characters back (32 in this case), but the letters are just weird like shown above.\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Implementing cryptography in Arangodb\r\n                \r\nAre there best practices in implementing encryption in Arangodb?\n\nI am aware of that there is a crypto module here\n\nhttps://docs.arangodb.com/3.1/Manual/Appendix/JavaScriptModules/Crypto.html\n\nbut I am unsure about implementation details.\n\nI have to build a database with sensible data. The goal would be to store this data already encrypted in the cloud, so even the cloudprovider would not be able to read its contents.\n\nBut I am not sure, if this is posssible at all, like how would I query data, when it is encrypted?\n\nOn the other hand, I would not need to encrypt all data, it would be great already, if I could separate, which data belongs to which person/customer/user in the database.\n\nAlls ideas, suggestions and hints on this are welcome, thanks for your support :)\n    ", "Answer": "\r\nBelated answer here, but basically any data at rest (or being stored in your database) should be encrypted. (data in motion should be encrypted as well, but that's another topic.) Encryption can be decrypted. In contrast, hashing is an irreversible process. Passwords should be stored salted and hashed, then when the user sends their password in you hash it with the same salt and compare. You can also pepper it if needed. But other sensitive data that you need to access again could not be hashed only encrypted.\n\nIt's a biiiiig topic, a little too big for a question here on SO I think, but below is a video that may be helpful. But I encourage you to do more research into SSL, Encryption, Shared Secrets, Public/Private Key Encryption, Hashing/Salting/Peppering.\n\nhttps://www.youtube.com/watch?v=8ZtInClXe1Q\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Eclipse is crashing after enabling java security (Java Cryptography Extension - JCE)\r\n                \r\nEclipse is crashing after enabling java security. I have added local_policy.jar and US_export_policy.jar into jre/lib/security folder.\n\nI got files from below link :\n\nJava Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files 7 :http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html\n\n```\nDebug options:\nfile:/Users/jkuria/soft/eclipse_downloads/eclipse 2/Eclipse.app/Contents/MacOS/.options not found\norg.osgi.framework.BundleException: Error initializing container.\nat org.eclipse.osgi.container.SystemModule.init(SystemModule.java:93)\nat org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle.init(EquinoxBundle.java:209)\nat org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle.init(EquinoxBundle.java:201)\nat org.eclipse.osgi.launch.Equinox.init(Equinox.java:168)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:296)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:231)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:497)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1465)\nCaused by: java.lang.ExceptionInInitializerError\nat org.eclipse.osgi.internal.framework.EquinoxBundle$SystemBundle$EquinoxSystemModule.initWorker(EquinoxBundle.java:137)\nat org.eclipse.osgi.container.SystemModule.init(SystemModule.java:83)\n... 12 more\nCaused by: java.security.ProviderException: setSeed() failed\nat sun.security.provider.NativePRNG$RandomIO.implSetSeed(NativePRNG.java:458)\nat sun.security.provider.NativePRNG$RandomIO.access$300(NativePRNG.java:329)\nat sun.security.provider.NativePRNG.engineSetSeed(NativePRNG.java:212)\nat java.security.SecureRandom.getDefaultPRNG(SecureRandom.java:209)\nat java.security.SecureRandom.<init>(SecureRandom.java:190)\nat org.eclipse.osgi.internal.framework.UniversalUniqueIdentifier.computeNodeAddress(UniversalUniqueIdentifier.java:127)\nat org.eclipse.osgi.internal.framework.UniversalUniqueIdentifier.<clinit>(UniversalUniqueIdentifier.java:35)\n... 14 more\nCaused by: java.io.IOException: Operation not permitted\nat java.io.FileOutputStream.writeBytes(Native Method)\nat java.io.FileOutputStream.write(FileOutputStream.java:313)\nat sun.security.provider.NativePRNG$RandomIO.implSetSeed(NativePRNG.java:456)\n```\n\n    ", "Answer": "\r\nYou should add the following to the vmargs section of your eclipse.ini\n\n```\n-Djava.security.egd=/dev/random\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "VB.NET Cryptography(PDF)\r\n                \r\ni'm making a system that requires me to encrypt and decrypt PDF files\n\nhow do i encrypt PDF files and still make it readable(but in a messy way because it was encrypted)\ni mean the file can still be opened, not like in other programs that make a custom extension like \"sample.encrypt\" where encrypt is the extension\n\nthe save file should also be \".pdf\" and decrypt it back to the original state\n\nPS: i'm still a student, and i still lack knowledge about this topic but i am open and willing to learn to finish this project\n    ", "Answer": "\r\nPDF encryption can have an owner password and a user password. If you set an empty user password, anyone can open it but not be able to make changes to it. If you set a user password, only those who know the password can open it but still be unable to make any changes to it. With the owner password, the file can be opened and changes made to it. By specifying document user permissions, you can restrict features such as high-quality printing, commenting, etc., to for those who know only the user password.\n\n\n\nhttp://www.gnostice.com/nl_article.asp?id=91&t=Encrypting_and_Decrypting_PDF_Documents_Using_PDFOne_NET\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography in metro app\r\n                \r\nI would like to use Pbkdf2 in my app. I do not need anything complex. \n\nI have piece of code:\n\n```\n  string passwordSalt = \"salt\";\n  string password = \"pass\";\n\n  Byte[] passwordSaltBuffer = System.Text.Encoding.UTF8.GetBytes(passwordSalt);\n  Byte[] passwordBuffer = System.Text.Encoding.UTF8.GetBytes(password);\n\n  var deriveKey = new Rfc2898DeriveBytes(passwordBuffer,\n                                         passwordSaltBuffer, 10000);\n```\n\n\nObviously I can't use it in metro app.\n\nHow it's going to look like equivalent code in metro style app?\n    ", "Answer": "\r\nSample for ```\nPBKDF2_MD5```\n -\n\n```\nKeyDerivationParameters params = KeyDerivationParameters.BuildForPbkdf2(\n                                  passwordBuffer,   // Salt\n                                  10000);           // PBKDF2 Iteration Count\n\nKeyDerivationAlgorithmProvider.OpenAlgorithm(\"PBKDF2_MD5\")\n                                 .CreateKey(passwordBuffer);\n\nIBuffer derived = CryptographicEngine.DeriveKeyMaterial(key, params, 64);\n```\n\n\nFor more details how for Cryptography sample in WinRT refer sample from MSDN - CryptoWinRT sample.\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography error with C\r\n                \r\nI am trying to create a program that can modify a text according to the user key. It seems to work well, until I input something and it adds extra things.\n\nFor example, if I add the word hello and a key of 3, it says khoor plus some extra weird characters. Can you tell me please what is the problem? Thank you very much.\n\n```\n#include <stdio.h>\n#include <ctype.h>\n#define MAXSIZE 100\n\nvoid encrypt(senTence[], int key);\n\nint main(void)\n{\n    int userKey;\n    char sentence[MAXSIZE];\n\n    printf(\"Input the text that you want to encrypt:\\n> \");\n    fgets(sentence, 99, stdin);\n\n   // printf(\"\\nThe string that you wrote is:\\n%s\\n\\n\", sentence);\n\n    printf(\"Input the key:\\n\");\n    scanf(\"%d\", &userKey);\n\n    //printf(\"\\nThe key that you selected is: %d\\n\\n\", userKey);\n\n    encrypt(sentence, userKey);\n\n    return 0;\n}\n\nvoid encrypt(const char senTence[], int key)\n{\n    int i = 0;\n    char q[MAXSIZE];\n\n    for(i = 0; senTence[i] != '\\0'; ++i)\n    {\n        if( ( isupper(senTence[i]) ) || ( islower(senTence[i]) ) )\n        {\n            q[i] = senTence[i] + (char)key;\n        }\n        else\n        {\n            q[i] = (senTence[i]);\n        }\n    }\n\n    printf(\"%s\", q);\n\n}\n```\n\n    ", "Answer": "\r\nYou didn't terminate the result string ```\nq```\n in ```\nencrypt()```\n.\nAdd the following line before ```\nprintf()```\n.\n\n```\nq[i] = '\\0';\n```\n\n\nAnother way is initialize ```\nq```\n to all-zero:\n\n```\nchar q[MAXSIZE] = {0};\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Import JWK signature from file and verify information Web Cryptography API\r\n                \r\nFail to verify signature using Web Cryptography API and RSASSA-PKCS1-v1_5 algorithm keys.\n\n\nSave the signature generated with the sign function in postgreSQL as a string:\n\n\n```\n\n        window.crypto.subtle\n          .sign(\"RSASSA-PKCS1-v1_5\", key, this.str2ab(hash))\n          .then(sigNature => {\n            const sig = this.ab2hex(sigNature); //save sig -> postgreSQL\n          });\n```\n\n\n\nI try to verify using signature that I get fron postgreSQL:\n\n\n```\nwindow.crypto.subtle\n          .verify(\n            \"RSASSA-PKCS1-v1_5\",\n            key,\n            this.str2ab(_signature), //from pSQL\n            this.str2ab(_hash) //from pSQL\n          )\n          .then(isVerified => {\n            console.log(isVerified);\n          });\n```\n\n\nUtils:\n* String -> ArrayBuffer function:\n\n```\nprivate str2ab(str) {\n    var buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n    var bufView = new Uint16Array(buf);\n    for (var i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n  }\n```\n\n\n\nArrayBuffer -> HEX function: \n\n\n```\nprivate ab2hex(buffer) {\n    // buffer is an ArrayBuffer\n    return Array.prototype.map\n      .call(new Uint8Array(buffer), x => (\"00\" + x.toString(16)).slice(-2))\n      .join(\"\");\n  }\n```\n\n\nThe problem is that I always get \"false\" as response from verify function even if I used correct key pair to sign and verify\n    ", "Answer": "", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Cryptography in Silverlight\r\n                \r\nI have a Silverlight 4 application that I want to secure. Does Silverlight 4 fully support AES, EH, and RSA?\n\nThank you\n    ", "Answer": "\r\nThere is no RSA provider in Silverlight.\n\nHowever, AES is present.\n\nCheck System.Security.Cryptography Namespace\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
{"Question": "Generating Unique number through Cryptography\r\n                \r\nI am using ```\nVisual Studio 2013```\n, ```\niis-8.5```\n, ```\n.net 4.5.1```\n\nIn my project, i want to create ```\n8 digit unique number```\n which should be separated by a ```\n'hypen'```\n in the middle and with prefix ```\n\"MNOP-\"```\n. The generated ```\n8 digit```\n should inherit the ```\nCryptography class```\n.\nMy code\n\n```\nvar bytes = new byte[4];\nvar rng = RandomNumberGenerator.Create();\nrng.GetBytes(bytes);\nint random = BitConverter.ToInt32(bytes, 0) % 100000000;\nvar data = \"ABCD-\" + random.ToString(\"####-####\");\n```\n\n\nI created 10000 value by ```\n'for loop'```\n, but some ```\n'random variable'```\n return negative value\nThanks in advance.\n    ", "Answer": "\r\nThere are three things you can do:\n\n\ngenerate a random value (decimal digit by decimal digit) and check if you created it before, then store it into a list of pre-generated numbers;\ncreate a 400 to 800 MB table and shuffle it, then store it on disk and use an offset into the table;\ncreate a key and use it for a cipher (a PRP) that uses the exact same output as the input, and use a counter, basically implementing Format Preserving Encryption.\n\n\nYou should not just use a random number generator as the chance of collisions quickly increases with the amount of numbers generated. This is because of the Birthday problem.\n\nThis also means that solution 1) is not fit if you want to generate a lot of numbers, as it may stall. Imagine that you've got only one available number left, you'd have a 400 MB table and it is trying for that one 4 byte entry that's left. The other options require you to store a table and an offset or a key and an counter respectively.\n\n\n\nYour current generation method is unbalanced as it generates lower numbers more easily than positive numbers. Furthermore, you should reset the most significant bit because ```\nToInt32```\n returns the signed, two complement value, and ```\n%```\n is the remainder operator, not the modulus operator.\n\n\n\nOK, for this time only, some C# code, to celebrate my bronze badge for the platform:\n\n```\nnamespace StackOverflow\n{\n    class RandomIDGenerator\n    {\n        private const string FORMAT = \"ABCD-####-####\";\n        private const string TEST_FORMAT = \"ABCD-###\";\n\n\n        private RandomNumberGenerator rng = RandomNumberGenerator.Create();\n        private byte[] b = new byte[1];\n        private SortedSet<string> previousIDs = new SortedSet<string>();\n\n        private char GenerateRandomDigit()\n        {\n            int x;\n            do\n            {\n                rng.GetBytes(b);\n                x = b[0] & 0xFF;\n            } while (x >= 250);\n            int y = x % 10;\n            return (char) ('0' + y);\n        }\n\n        private String GenerateRandomID()\n        {\n            StringBuilder sb = new StringBuilder(TEST_FORMAT);\n            for (int i = 0; i < sb.Length; i++)\n            {\n                if (sb[i] == '#')\n                {\n                    sb[i] = GenerateRandomDigit();\n                }\n            }\n            return sb.ToString();\n        }\n\n        public String GenerateUniqueRandomID()\n        {\n            string id;\n            do\n            {\n                id = GenerateRandomID();\n            }\n            while (previousIDs.Contains(id));\n            previousIDs.Add(id);\n            return id;\n        }\n\n        public static void Main(String[] args)\n        {\n            RandomIDGenerator gen = new RandomIDGenerator();\n            for (int i = 0; i < 500; i++)\n            {\n                Console.WriteLine(gen.GenerateUniqueRandomID());\n            }\n\n            Console.WriteLine(\"Put breakpoint here...\");\n\n            foreach (string id in gen.previousIDs)\n            {\n                Console.WriteLine(id);\n            }\n\n            Console.WriteLine(gen.previousIDs.Count);\n            Console.WriteLine(\"Put breakpoint here...\");\n        }\n    }\n}\n```\n\n    ", "Knowledge_point": "Cryptography", "Tag": "算法分析"}
