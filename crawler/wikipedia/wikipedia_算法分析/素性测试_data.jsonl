{"Answer": "素性测试或素数判定，是檢驗一個給定的整數是否為質數的测试。\n", "Konwledge_Point": "素性测试", "Question": "什么是素性测试", "Tag": "算法设计"}
{"Answer": "主条目：素数質數是除了自身和1以外，没有其它素数因子的自然数。自从欧几里得证明了有无穷个素数以后，人们就企图寻找一个可以构造所有素数的公式，寻找判定一个自然数是不是素数的方法。因为素数的地位非常重要。\n", "Konwledge_Point": "素性测试", "Question": "什么是素性测试的素数", "Tag": "算法设计"}
{"Answer": "鉴别一个自然数是素数还是合数，这个问题在中世纪就引起人们注意，当时人们试图寻找質数公式，到了高斯时代，基本上确认了简单的質数公式是不存在的，因此，高斯认为对素性判定是一个相当困难的问题。从此以后，这个问题吸引了大批数学家。\n質性判斷演算法可分為兩大類，確定性演算法及隨機演算法。前者可給出確定的結果但通常較慢，後者則反之。詳見以下列表。\n", "Konwledge_Point": "素性测试", "Question": "什么是素性测试的素数判定的历史", "Tag": "算法设计"}
{"Answer": "試除法（埃拉托斯特尼篩法）\n嘗試從 \n  \n    \n      \n        2\n      \n    \n    {\\displaystyle 2}\n  \n 到 \n  \n    \n      \n        \n          \n            N\n          \n        \n      \n    \n    {\\displaystyle {\\sqrt {N}}}\n  \n 的整數是否整除 \n  \n    \n      \n        N\n      \n    \n    {\\displaystyle N}\n  \n。// 以 C 語言實現埃拉托斯特尼篩法\n// 用以判斷質數的 is_prime 副函式\nint is_prime(int x)\n{\n    if(x < 2) return 0;            // 1 不是質數，且不考慮負整數與 0，故輸入 x<=1 時回傳 0\n    for(int i = 2; i * i <= x; ++i)\n        if(x % i == 0) return 0;    // 一旦出現整除，回傳 0\n    return 1;                       // 迴圈跑完後都沒有整除，回傳 1\n}\n威尔逊定理\n当且仅当\n  \n    \n      \n        p\n      \n    \n    {\\displaystyle p}\n  \n为質數时：\n  \n    \n      \n        (\n        p\n        −\n        1\n        )\n        !\n         \n        ≡\n         \n        −\n        1\n         \n        (\n        \n          \n            mod\n          \n        \n         \n        p\n        )\n      \n    \n    {\\displaystyle (p-1)!\\ \\equiv \\ -1\\ ({\\mbox{mod}}\\ p)}\n  \n卢卡斯-莱默检验法\nAKS質數測試\nPRIMES is in P這篇論文提到的方法，是第一個多項式時間的質數測試演算法。", "Konwledge_Point": "素性测试", "Question": "什么是素性测试的確定型演算法", "Tag": "算法设计"}
{"Answer": "费马素性检验\n利用費馬小定理來測試。\n米勒-拉賓檢驗\n歐拉-雅科比測試\n對於n，挑選随机的\n  \n    \n      \n        a\n        <\n        n\n      \n    \n    {\\displaystyle a<n}\n  \n，測試\n  \n    \n      \n        (\n        \n          \n            a\n            n\n          \n        \n        )\n        =\n        \n          a\n          \n            (\n            n\n            −\n            1\n            )\n            \n              /\n            \n            2\n          \n        \n        \n        mod\n        \n        \n        n\n      \n    \n    {\\displaystyle ({a \\over n})=a^{(n-1)/2}\\mod n}\n  \n，这里\n  \n    \n      \n        (\n        \n          \n            a\n            n\n          \n        \n        )\n      \n    \n    {\\displaystyle ({a \\over n})}\n  \n为雅可比符号。如果N為質數，等式一定成立；如果N為合數，等式有一半的機率不成立。", "Konwledge_Point": "素性测试", "Question": "什么是素性测试的隨機演算法", "Tag": "算法设计"}
{"Answer": "素数公式\n费马小定理\n埃拉托斯特尼筛法\n卢卡斯-莱默检验法\n米勒-拉宾检验\n试除法\n费马素性检验\n孪生素数\n三胞胎素数\n四胞胎素数\n素数判定法则\n表兄弟素数\n六素数\nX²+1素数", "Konwledge_Point": "素性测试", "Question": "什么是素性测试的参见", "Tag": "算法设计"}
{"Answer": "", "Konwledge_Point": "素性测试", "Question": "什么是素性测试的外部链接", "Tag": "算法设计"}
